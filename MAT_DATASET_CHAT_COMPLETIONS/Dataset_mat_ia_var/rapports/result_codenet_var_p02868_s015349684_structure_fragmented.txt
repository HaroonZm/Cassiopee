================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
import string
import itertools
import fractions
import heapq
import collections
import re
import array
import bisect
import sys
import copy
import functools
import time
import random

def set_recursion_limit():
    sys.setrecursionlimit(10**7)

def get_inf():
    return 10**20

def get_eps():
    return 1.0 / 10**10

def get_mod():
    return 10**9 + 7

def get_mod2():
    return 998244353

def get_dd():
    return [(-1,0),(0,1),(1,0),(0,-1)]

def get_ddn():
    return [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]

def LI():
    return list(map(int, sys.stdin.readline().split()))

def read_int_list():
    return list(map(int, sys.stdin.readline().split()))

def LLI():
    return [list(map(int, l.split())) for l in sys.stdin.readlines()]

def read_lines_of_int_lists():
    return [list(map(int, l.split())) for l in sys.stdin.readlines()]

def LI_():
    return [int(x)-1 for x in sys.stdin.readline().split()]

def read_int_list_minus_1():
    return [int(x)-1 for x in sys.stdin.readline().split()]

def LF():
    return [float(x) for x in sys.stdin.readline().split()]

def read_float_list():
    return [float(x) for x in sys.stdin.readline().split()]

def LS():
    return sys.stdin.readline().split()

def read_str_list():
    return sys.stdin.readline().split()

def I():
    return int(sys.stdin.readline())

def read_int():
    return int(sys.stdin.readline())

def F():
    return float(sys.stdin.readline())

def read_float():
    return float(sys.stdin.readline())

def S():
    return input()

def read_input():
    return input()

def pf(s):
    return print(s, flush=True)

def pe(s):
    return print(str(s), file=sys.stderr)

def JA(a, sep):
    return sep.join(map(str, a))

def JAA(a, s, t):
    return s.join(t.join(map(str, b)) for b in a)

def parse_first_input():
    return LI()

def parse_lrc(m):
    lrc = [LI() for _ in range(m)]
    return lrc

def lrc_sort_key(x):
    return (x[0], x[2], -x[1])

def append_inf_lrc(lrc, inf):
    lrc.append([inf, inf, inf])
    return lrc

def initialize_index():
    return 0

def initialize_q(inf):
    return [(1, 0), (inf, inf)]

def update_index1(lrc, i, l):
    while lrc[i][0] < l:
        i += 1
    return i

def update_index2(lrc, i, l, q):
    while lrc[i][0] == l:
        i, q = process_lrc_entry(lrc, i, q, l)
    return i, q

def process_lrc_entry(lrc, i, q, l):
    _, r, c = lrc[i]
    i += 1
    qi = q_find_index(q, l)
    _, cc = q[qi]
    t = compute_new_tuple(r, cc, c)
    q = update_q(q, t, r)
    return i, q

def q_find_index(q, l):
    return bisect.bisect_left(q, (l, -1))

def compute_new_tuple(r, cc, c):
    return (r, cc + c)

def update_q(q, t, r):
    ti = bisect.bisect_left(q, t)
    if q_must_update(q, ti, t, r):
        q, ti = update_q_insert(q, ti, t, r)
        q = remove_less_optimal(q, ti, t)
    return q

def q_must_update(q, ti, t, r):
    return q[ti][1] > t[1] and q[ti-1][0] < r

def update_q_insert(q, ti, t, r):
    if q[ti][0] == r:
        q[ti] = t
    else:
        q.insert(ti, t)
    return q, ti

def remove_less_optimal(q, ti, t):
    while q[ti-1][1] > t[1]:
        del q[ti-1]
        ti -= 1
    return q

def calc_result(q, n):
    t = q[-2]
    if t[0] < n:
        return -1
    return t[1]

def wrapped_main():
    set_recursion_limit()
    inf = get_inf()
    n, m = parse_first_input()
    lrc = parse_lrc(m)
    lrc = sorted(lrc, key=lrc_sort_key)
    lrc = append_inf_lrc(lrc, inf)
    i = initialize_index()
    q = initialize_q(inf)
    for l in range(1, n):
        i = update_index1(lrc, i, l)
        i, q = update_index2(lrc, i, l, q)
    result = calc_result(q, n)
    return result

print(wrapped_main())
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008858839981257915
    2. '\n' → logprob: -5.883858680725098
    3. '<|end|>' → logprob: -6.008858680725098
    4. '```' → logprob: -6.883858680725098
    5. '\' → logprob: -6.883858680725098
    6. 'import' → logprob: -7.133858680725098
    7. '<|end|>' → logprob: -9.133858680725098
    8. 'def' → logprob: -9.633858680725098
    9. '.pi' → logprob: -9.883858680725098
    10. 'newline' → logprob: -9.883858680725098

Token 4: ' string' (ID: 1621)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3945826292037964
    2. ' os' → logprob: -1.1445826292037964
    3. ' numpy' → logprob: -5.644582748413086
    4. ' random' → logprob: -6.519582748413086
    5. 'sys' → logprob: -6.644582748413086
    6. 'os' → logprob: -7.394582748413086
    7. ' re' → logprob: -8.144582748413086
    8. ' ' → logprob: -8.769582748413086
    9. ' statistics' → logprob: -9.019582748413086
    10. ' cm' → logprob: -9.644582748413086

Token 5: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2596835792064667
    2. 'import' → logprob: -2.384683609008789
    3. '<|end|>' → logprob: -3.009683609008789
    4. '\' → logprob: -3.509683609008789
    5. '
' → logprob: -3.884683609008789
    6. '```' → logprob: -4.134683609008789
    7. '.' → logprob: -5.384683609008789
    8. ',' → logprob: -5.384683609008789
    9. '#' → logprob: -5.509683609008789
    10. '

' → logprob: -5.884683609008789

Token 6: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5187146663665771
    2. '\n' → logprob: -1.6437146663665771
    3. '
' → logprob: -2.143714666366577
    4. '

' → logprob: -3.768714666366577
    5. 'def' → logprob: -4.018714904785156
    6. ',' → logprob: -4.143714904785156
    7. '\' → logprob: -4.393714904785156
    8. '```' → logprob: -4.768714904785156
    9. 'from' → logprob: -6.018714904785156
    10. '#' → logprob: -6.018714904785156

Token 7: ' itertools' (ID: 103178)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.8708312511444092
    2. 're' → logprob: -0.9958312511444092
    3. ' random' → logprob: -2.370831251144409
    4. 'os' → logprob: -3.370831251144409
    5. 'sys' → logprob: -3.495831251144409
    6. ' re' → logprob: -3.745831251144409
    7. ' sys' → logprob: -3.995831251144409
    8. ' os' → logprob: -4.620831489562988
    9. 'collections' → logprob: -6.495831489562988
    10. ' collections' → logprob: -8.120831489562988

Token 8: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.039240021258592606
    2. '\' → logprob: -4.414239883422852
    3. '\n' → logprob: -4.539239883422852
    4. '#' → logprob: -5.539239883422852
    5. 'import' → logprob: -5.789239883422852
    6. ',' → logprob: -5.914239883422852
    7. '```' → logprob: -6.164239883422852
    8. '(' → logprob: -7.539239883422852
    9. 'def' → logprob: -7.539239883422852
    10. '<|end|>' → logprob: -7.789239883422852

Token 9: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21413438022136688
    2. 'def' → logprob: -2.339134454727173
    3. '\' → logprob: -3.714134454727173
    4. '#' → logprob: -3.714134454727173
    5. 'import' → logprob: -4.339134216308594
    6. '\n' → logprob: -4.339134216308594
    7. '```' → logprob: -5.464134216308594
    8. '

' → logprob: -5.964134216308594
    9. ',' → logprob: -5.964134216308594
    10. 'from' → logprob: -6.464134216308594

Token 10: ' fractions' (ID: 110523)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.5834471583366394
    2. 're' → logprob: -1.8334472179412842
    3. 'fun' → logprob: -2.208447217941284
    4. ' collections' → logprob: -2.458447217941284
    5. 'random' → logprob: -2.958447217941284
    6. ' functools' → logprob: -4.458446979522705
    7. ' re' → logprob: -4.833446979522705
    8. ' random' → logprob: -5.458446979522705
    9. 'operator' → logprob: -5.583446979522705
    10. 'os' → logprob: -5.833446979522705

Token 11: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2470281422138214
    2. '
' → logprob: -2.747028112411499
    3. 'import' → logprob: -2.872028112411499
    4. '

' → logprob: -3.747028112411499
    5. '\n' → logprob: -3.747028112411499
    6. '\' → logprob: -4.497028350830078
    7. '#' → logprob: -4.997028350830078
    8. ',' → logprob: -5.122028350830078
    9. 'def' → logprob: -5.247028350830078
    10. '<|end|>' → logprob: -5.497028350830078

Token 12: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1217166185379028
    2. 'import' → logprob: -1.2467166185379028
    3. 'def' → logprob: -1.9967166185379028
    4. '#' → logprob: -2.4967164993286133
    5. 'from' → logprob: -3.2467164993286133
    6. '\' → logprob: -3.6217164993286133
    7. '\n' → logprob: -3.6217164993286133
    8. ',' → logprob: -3.7467164993286133
    9. '```' → logprob: -4.246716499328613
    10. '
' → logprob: -4.371716499328613

Token 13: ' heap' (ID: 37237)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -1.6035575866699219
    2. 'operator' → logprob: -1.7285575866699219
    3. 'random' → logprob: -1.7285575866699219
    4. 'decimal' → logprob: -1.8535575866699219
    5. 'fun' → logprob: -2.103557586669922
    6. ' functools' → logprob: -2.853557586669922
    7. ' decimal' → logprob: -3.603557586669922
    8. ' collections' → logprob: -4.103557586669922
    9. 'os' → logprob: -4.228557586669922
    10. 'cmath' → logprob: -4.353557586669922

Token 14: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.919942486798391e-05
    2. 'queue' → logprob: -9.750059127807617
    3. ' queue' → logprob: -14.750059127807617
    4. 't' → logprob: -15.875059127807617
    5. '```' → logprob: -16.750059127807617
    6. 'u' → logprob: -16.875059127807617
    7. 'que' → logprob: -17.000059127807617
    8. '_queue' → logprob: -17.125059127807617
    9. 'Queue' → logprob: -17.500059127807617
    10. 'dict' → logprob: -18.000059127807617

Token 15: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.4133769273757935
    2. '\n' → logprob: -1.6633769273757935
    3. '.' → logprob: -1.7883769273757935
    4. '
' → logprob: -2.163376808166504
    5. '#' → logprob: -2.288376808166504
    6. '\' → logprob: -2.913376808166504
    7. 'def' → logprob: -3.163376808166504
    8. '<|end|>' → logprob: -3.663376808166504
    9. ',' → logprob: -3.788376808166504
    10. 'from' → logprob: -4.538376808166504

Token 16: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1135810613632202
    2. 'import' → logprob: -1.2385810613632202
    3. '
' → logprob: -1.6135810613632202
    4. '<|end|>' → logprob: -3.1135811805725098
    5. '\n' → logprob: -3.2385811805725098
    6. '

' → logprob: -3.7385811805725098
    7. '\' → logprob: -3.9885811805725098
    8. ',' → logprob: -4.36358118057251
    9. 'def' → logprob: -4.61358118057251
    10. '#' → logprob: -4.86358118057251

Token 17: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.5405658483505249
    2. ' collections' → logprob: -1.040565848350525
    3. ' operator' → logprob: -3.5405659675598145
    4. 'operator' → logprob: -3.9155659675598145
    5. 'random' → logprob: -5.4155659675598145
    6. ' random' → logprob: -6.2905659675598145
    7. 'copy' → logprob: -6.2905659675598145
    8. 'bis' → logprob: -6.5405659675598145
    9. ' bis' → logprob: -6.6655659675598145
    10. ' functools' → logprob: -6.9155659675598145

Token 18: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.41060367226600647
    2. '.' → logprob: -2.0356037616729736
    3. '<|end|>' → logprob: -2.4106037616729736
    4. '
' → logprob: -3.0356037616729736
    5. '\n' → logprob: -3.4106037616729736
    6. '\' → logprob: -4.0356035232543945
    7. '

' → logprob: -5.2856035232543945
    8. 'from' → logprob: -6.1606035232543945
    9. '```' → logprob: -6.4106035232543945
    10. '#' → logprob: -6.7856035232543945

Token 19: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.20978476107120514
    2. '
' → logprob: -2.709784746170044
    3. '<|end|>' → logprob: -2.834784746170044
    4. '\n' → logprob: -3.834784746170044
    5. 'def' → logprob: -4.459784984588623
    6. '

' → logprob: -4.959784984588623
    7. '#' → logprob: -5.209784984588623
    8. 'from' → logprob: -5.334784984588623
    9. '\' → logprob: -5.709784984588623
    10. '```' → logprob: -6.209784984588623

Token 20: ' re' (ID: 322)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8175273537635803
    2. ' functools' → logprob: -0.9425273537635803
    3. ' bis' → logprob: -3.0675272941589355
    4. 'operator' → logprob: -3.4425272941589355
    5. ' re' → logprob: -3.8175272941589355
    6. 'random' → logprob: -4.3175272941589355
    7. ' random' → logprob: -4.6925272941589355
    8. ' copy' → logprob: -4.8175272941589355
    9. ' sys' → logprob: -5.0675272941589355
    10. 'fun' → logprob: -5.1925272941589355

Token 21: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.636201798915863
    2. 'import' → logprob: -1.1362018585205078
    3. '```' → logprob: -3.386201858520508
    4. '<|end|>' → logprob: -3.511201858520508
    5. '.' → logprob: -3.886201858520508
    6. '
' → logprob: -4.261201858520508
    7. '#' → logprob: -4.261201858520508
    8. '\' → logprob: -4.636201858520508
    9. '[' → logprob: -4.886201858520508
    10. 'def' → logprob: -5.261201858520508

Token 22: 'import' (ID: 561)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2414913177490234
    2. '\n' → logprob: -1.2414913177490234
    3. 'import' → logprob: -1.4914913177490234
    4. '
' → logprob: -2.9914913177490234
    5. 'def' → logprob: -3.2414913177490234
    6. 'class' → logprob: -3.7414913177490234
    7. '\' → logprob: -3.9914913177490234
    8. '' → logprob: -4.366491317749023
    9. '<|end|>' → logprob: -4.991491317749023
    10. ' ' → logprob: -4.991491317749023

Token 23: ' array' (ID: 2644)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.8552722334861755
    2. ' functools' → logprob: -1.1052722930908203
    3. 'sys' → logprob: -2.7302722930908203
    4. 'random' → logprob: -3.1052722930908203
    5. ' os' → logprob: -3.3552722930908203
    6. ' random' → logprob: -3.4802722930908203
    7. 'os' → logprob: -3.8552722930908203
    8. ' operator' → logprob: -4.23027229309082
    9. 'fun' → logprob: -4.23027229309082
    10. 'operator' → logprob: -4.85527229309082

Token 24: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4160584211349487
    2. '.' → logprob: -1.5410584211349487
    3. '<|end|>' → logprob: -1.5410584211349487
    4. '\n' → logprob: -2.1660585403442383
    5. 'import' → logprob: -2.2910585403442383
    6. '

' → logprob: -3.7910585403442383
    7. '\' → logprob: -3.9160585403442383
    8. '' → logprob: -4.166058540344238
    9. '```' → logprob: -4.291058540344238
    10. '#' → logprob: -4.541058540344238

Token 25: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.39772990345954895
    2. '<|end|>' → logprob: -2.2727298736572266
    3. '\n' → logprob: -2.3977298736572266
    4. '
' → logprob: -2.6477298736572266
    5. '

' → logprob: -4.147729873657227
    6. '#' → logprob: -4.147729873657227
    7. 'from' → logprob: -4.647729873657227
    8. '```' → logprob: -5.147729873657227
    9. 'def' → logprob: -5.397729873657227
    10. '\' → logprob: -6.022729873657227

Token 26: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.45162495970726013
    2. ' bis' → logprob: -1.0766249895095825
    3. 'os' → logprob: -4.951624870300293
    4. ' functools' → logprob: -5.326624870300293
    5. 'sys' → logprob: -5.451624870300293
    6. 'random' → logprob: -6.201624870300293
    7. ' sys' → logprob: -6.701624870300293
    8. ' os' → logprob: -7.076624870300293
    9. 'fun' → logprob: -7.576624870300293
    10. 'operator' → logprob: -7.951624870300293

Token 27: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.0280383548888494e-06
    2. 't' → logprob: -14.500000953674316
    3. 'ec' → logprob: -15.375000953674316
    4. 'ected' → logprob: -16.500001907348633
    5. 'e' → logprob: -17.000001907348633
    6. 'ectl' → logprob: -17.625001907348633
    7. 'ects' → logprob: -17.875001907348633
    8. 'ex' → logprob: -18.000001907348633
    9. '```' → logprob: -18.000001907348633
    10. 'ection' → logprob: -18.000001907348633

Token 28: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0549778938293457
    2. '
' → logprob: -1.5549778938293457
    3. 'import' → logprob: -1.5549778938293457
    4. '\n' → logprob: -2.6799778938293457
    5. '<|end|>' → logprob: -2.8049778938293457
    6. '

' → logprob: -3.4299778938293457
    7. '' → logprob: -4.179977893829346
    8. '#' → logprob: -4.304977893829346
    9. '\' → logprob: -4.679977893829346
    10. '```' → logprob: -4.804977893829346

Token 29: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15206822752952576
    2. '
' → logprob: -3.1520681381225586
    3. '\n' → logprob: -3.1520681381225586
    4. '\' → logprob: -4.902068138122559
    5. '<|end|>' → logprob: -4.902068138122559
    6. '#' → logprob: -4.902068138122559
    7. 'import' → logprob: -5.152068138122559
    8. '

' → logprob: -5.152068138122559
    9. '' → logprob: -5.652068138122559
    10. '[' → logprob: -5.652068138122559

Token 30: ' sys' (ID: 12228)
  Prédit: ' random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' random' → logprob: -1.1255038976669312
    2. ' copy' → logprob: -1.3755038976669312
    3. ' functools' → logprob: -1.7505038976669312
    4. ' sys' → logprob: -2.5005040168762207
    5. 'random' → logprob: -2.8755040168762207
    6. ' math' → logprob: -2.8755040168762207
    7. 'copy' → logprob: -4.125504016876221
    8. 'cmath' → logprob: -4.250504016876221
    9. ' operator' → logprob: -5.375504016876221
    10. ' datetime' → logprob: -6.000504016876221

Token 31: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28958943486213684
    2. '\n' → logprob: -1.9145894050598145
    3. '
' → logprob: -2.9145894050598145
    4. '

' → logprob: -4.0395894050598145
    5. '<|end|>' → logprob: -4.6645894050598145
    6. '\' → logprob: -5.0395894050598145
    7. '```' → logprob: -5.9145894050598145
    8. '' → logprob: -5.9145894050598145
    9. '#' → logprob: -6.0395894050598145
    10. '[' → logprob: -6.6645894050598145

Token 32: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5697930455207825
    2. '.' → logprob: -1.3197929859161377
    3. '\n' → logprob: -2.3197929859161377
    4. '

' → logprob: -3.6947929859161377
    5. '<|end|>' → logprob: -4.444793224334717
    6. '\' → logprob: -5.319793224334717
    7. '```' → logprob: -5.319793224334717
    8. '' → logprob: -5.569793224334717
    9. 'def' → logprob: -5.694793224334717
    10. '#' → logprob: -5.694793224334717

Token 33: ' copy' (ID: 5150)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.44209709763526917
    2. ' os' → logprob: -1.0670970678329468
    3. 'io' → logprob: -5.567097187042236
    4. 'random' → logprob: -5.692097187042236
    5. ' functools' → logprob: -6.317097187042236
    6. ' io' → logprob: -6.442097187042236
    7. ' random' → logprob: -6.942097187042236
    8. 'operator' → logprob: -7.067097187042236
    9. ' threading' → logprob: -8.192096710205078
    10. ' operator' → logprob: -8.567096710205078

Token 34: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: 'import' (ID: 561)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9905705451965332
    2. 'def' → logprob: -1.9905705451965332
    3. '
' → logprob: -1.9905705451965332
    4. '

' → logprob: -2.490570545196533
    5. '\n' → logprob: -2.615570545196533
    6. '<|end|>' → logprob: -2.865570545196533
    7. 'import' → logprob: -3.740570545196533
    8. 'd' → logprob: -3.865570545196533
    9. '\' → logprob: -3.865570545196533
    10. '```' → logprob: -4.365570545196533

Token 36: ' functools' (ID: 142636)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.8408216834068298
    2. 'os' → logprob: -1.3408217430114746
    3. 'operator' → logprob: -1.9658217430114746
    4. 'thread' → logprob: -3.3408217430114746
    5. 'math' → logprob: -3.3408217430114746
    6. 'json' → logprob: -4.090821743011475
    7. 'datetime' → logprob: -4.215821743011475
    8. 'fun' → logprob: -4.215821743011475
    9. ' functools' → logprob: -4.340821743011475
    10. 'decimal' → logprob: -4.715821743011475

Token 37: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.964801549911499
    2. '<|end|>' → logprob: -1.839801549911499
    3. '\n' → logprob: -1.964801549911499
    4. '#' → logprob: -2.214801549911499
    5. '.' → logprob: -2.964801549911499
    6. 'import' → logprob: -3.089801549911499
    7. '\' → logprob: -3.339801549911499
    8. '

' → logprob: -3.464801549911499
    9. 'def' → logprob: -4.464801788330078
    10. '' → logprob: -4.964801788330078

Token 38: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1914972066879272
    2. '#' → logprob: -1.8164972066879272
    3. 'import' → logprob: -1.9414972066879272
    4. '<|end|>' → logprob: -2.316497325897217
    5. '\n' → logprob: -2.566497325897217
    6. '
' → logprob: -2.691497325897217
    7. 'from' → logprob: -3.441497325897217
    8. '\' → logprob: -3.691497325897217
    9. '@' → logprob: -3.816497325897217
    10. '.' → logprob: -4.191497325897217

Token 39: ' time' (ID: 1058)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.049796681851148605
    2. ' operator' → logprob: -3.0497965812683105
    3. 'random' → logprob: -7.5497965812683105
    4. 'os' → logprob: -7.6747965812683105
    5. 'math' → logprob: -9.549797058105469
    6. 'decimal' → logprob: -10.049797058105469
    7. ' random' → logprob: -10.299797058105469
    8. 'json' → logprob: -11.424797058105469
    9. 'datetime' → logprob: -11.424797058105469
    10. 'thread' → logprob: -11.549797058105469

Token 40: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6845177412033081
    2. '\' → logprob: -1.559517741203308
    3. '
' → logprob: -2.1845178604125977
    4. '#' → logprob: -2.4345178604125977
    5. '<|end|>' → logprob: -3.5595178604125977
    6. 'import' → logprob: -4.434517860412598
    7. '.' → logprob: -4.559517860412598
    8. 'def' → logprob: -4.684517860412598
    9. '

' → logprob: -5.434517860412598
    10. 'n' → logprob: -5.434517860412598

Token 41: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.129513144493103
    2. '#' → logprob: -1.629513144493103
    3. '\n' → logprob: -1.754513144493103
    4. '<|end|>' → logprob: -2.0045132637023926
    5. 'def' → logprob: -3.1295132637023926
    6. '\' → logprob: -3.5045132637023926
    7. '

' → logprob: -3.7545132637023926
    8. 'import' → logprob: -4.379513263702393
    9. '.' → logprob: -4.379513263702393
    10. '```' → logprob: -4.879513263702393

Token 42: ' random' (ID: 7526)
  Prédit: ' random'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' random' → logprob: -0.7893370389938354
    2. ' os' → logprob: -1.2893370389938354
    3. ' threading' → logprob: -2.539337158203125
    4. 'random' → logprob: -2.789337158203125
    5. ' operator' → logprob: -2.914337158203125
    6. 'os' → logprob: -3.289337158203125
    7. ' datetime' → logprob: -3.789337158203125
    8. 'operator' → logprob: -4.789337158203125
    9. 'datetime' → logprob: -5.789337158203125
    10. ' json' → logprob: -6.789337158203125

Token 43: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5806782841682434
    2. '\n' → logprob: -1.9556782245635986
    3. '

' → logprob: -2.3306782245635986
    4. '<|end|>' → logprob: -2.7056782245635986
    5. '#' → logprob: -3.0806782245635986
    6. '' → logprob: -3.5806782245635986
    7. '.' → logprob: -3.7056782245635986
    8. '\' → logprob: -4.455678462982178
    9. 'def' → logprob: -5.205678462982178
    10. 'n' → logprob: -5.580678462982178

Token 44: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.22694139182567596
    2. '#' → logprob: -1.9769413471221924
    3. 'def' → logprob: -3.4769413471221924
    4. '\' → logprob: -3.7269413471221924
    5. '\n' → logprob: -5.6019415855407715
    6. 'a' → logprob: -6.4769415855407715
    7. 'n' → logprob: -7.1019415855407715
    8. '
' → logprob: -7.3519415855407715
    9. '.' → logprob: -7.3519415855407715
    10. '' → logprob: -7.7269415855407715

Token 45: ' set' (ID: 920)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.024363450706005096
    2. '_' → logprob: -4.3993635177612305
    3. ' ' → logprob: -5.0243635177612305
    4. ' space' → logprob: -6.5243635177612305
    5. ' process' → logprob: -7.3993635177612305
    6. ' _' → logprob: -7.7743635177612305
    7. ' calculate' → logprob: -8.02436351776123
    8. ' main' → logprob: -8.52436351776123
    9. ' a' → logprob: -8.77436351776123
    10. '_space' → logprob: -8.89936351776123

Token 46: '_rec' (ID: 35314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.020880168303847313
    2. '_up' → logprob: -4.770880222320557
    3. '_name' → logprob: -5.895880222320557
    4. '_target' → logprob: -6.270880222320557
    5. '_attr' → logprob: -6.895880222320557
    6. '_a' → logprob: -7.020880222320557
    7. '_item' → logprob: -7.270880222320557
    8. '_at' → logprob: -7.645880222320557
    9. '_default' → logprob: -7.645880222320557
    10. '_param' → logprob: -8.270879745483398

Token 47: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.4102875292301178
    2. '_' → logprob: -1.1602874994277954
    3. 'ursive' → logprob: -3.785287618637085
    4. '_limit' → logprob: -8.410287857055664
    5. 'urs' → logprob: -9.535287857055664
    6. 'u' → logprob: -10.535287857055664
    7. '__' → logprob: -10.910287857055664
    8. '_depth' → logprob: -11.285287857055664
    9. 'ursor' → logprob: -11.410287857055664
    10. 'ur' → logprob: -11.535287857055664

Token 48: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.0006205809186212718
    2. '_depth' → logprob: -7.500620365142822
    3. '_limits' → logprob: -10.50062084197998
    4. '_' → logprob: -11.00062084197998
    5. '_lim' → logprob: -11.12562084197998
    6. 'limit' → logprob: -12.37562084197998
    7. '_stack' → logprob: -13.12562084197998
    8. ' _' → logprob: -14.00062084197998
    9. '_li' → logprob: -15.00062084197998
    10. '_target' → logprob: -15.00062084197998

Token 49: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.037835580878891e-05
    2. '_' → logprob: -10.62505054473877
    3. ' (' → logprob: -10.87505054473877
    4. '()' → logprob: -13.75005054473877
    5. '("("' → logprob: -13.87505054473877
    6. '(_' → logprob: -14.37505054473877
    7. '```' → logprob: -14.37505054473877
    8. '(
' → logprob: -14.50005054473877
    9. ')' → logprob: -14.87505054473877
    10. '_(' → logprob: -14.87505054473877

Token 50: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009599185548722744
    2. ':' → logprob: -5.509599208831787
    3. '   ' → logprob: -5.634599208831787
    4. '():' → logprob: -6.509599208831787
    5. '(
' → logprob: -9.384598731994629
    6. '):' → logprob: -10.384598731994629
    7. ' (' → logprob: -10.384598731994629
    8. '  ' → logprob: -10.384598731994629
    9. '(max' → logprob: -10.384598731994629
    10. '(":' → logprob: -10.384598731994629

Token 51: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46008941531181335
    2. ' sys' → logprob: -1.3350894451141357
    3. 'import' → logprob: -3.0850894451141357
    4. 'sys' (adapté à ' sys') → logprob: -3.2100894451141357
    5. ' import' → logprob: -4.960089206695557
    6. ' ' → logprob: -4.960089206695557
    7. '    ' → logprob: -5.585089206695557
    8. '  ' → logprob: -7.335089206695557
    9. '	sys' → logprob: -8.960089683532715
    10. ' return' → logprob: -8.960089683532715

Token 52: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0418006107211113
    2. '.set' → logprob: -3.4168004989624023
    3. '.setdefault' → logprob: -4.916800498962402
    4. '.stdout' → logprob: -8.041800498962402
    5. ' .' → logprob: -8.416800498962402
    6. '.stdin' → logprob: -9.041800498962402
    7. '.exit' → logprob: -10.041800498962402
    8. '.argv' → logprob: -10.291800498962402
    9. '.stderr' → logprob: -10.541800498962402
    10. '.append' → logprob: -12.416800498962402

Token 53: 'rec' (ID: 9285)
  Prédit: '_rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: -0.7409552335739136
    2. '_' → logprob: -0.8659552335739136
    3. '_limit' → logprob: -2.615955352783203
    4. 'rec' → logprob: -4.740955352783203
    5. '_depth' → logprob: -5.240955352783203
    6. '_max' → logprob: -5.490955352783203
    7. '_stack' → logprob: -5.615955352783203
    8. '_recursive' → logprob: -5.990955352783203
    9. ' _' → logprob: -7.240955352783203
    10. '_ref' → logprob: -7.615955352783203

Token 54: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -8.2994620242971e-06
    2. '_limit' → logprob: -12.125008583068848
    3. 'ursive' → logprob: -14.125008583068848
    4. 'ur' → logprob: -14.125008583068848
    5. 'urs' → logprob: -14.375008583068848
    6. '_set' → logprob: -15.625008583068848
    7. 'limit' → logprob: -15.625008583068848
    8. 'usion' → logprob: -15.875008583068848
    9. '_' → logprob: -16.00000762939453
    10. 'ersion' → logprob: -17.00000762939453

Token 55: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -3.2855416066013277e-05
    2. 'lim' → logprob: -10.750032424926758
    3. 'depth' → logprob: -12.000032424926758
    4. '_limit' → logprob: -12.875032424926758
    5. 'imit' → logprob: -14.500032424926758
    6. 'al' → logprob: -14.875032424926758
    7. 'ursion' → logprob: -15.000032424926758
    8. 'l' → logprob: -15.000032424926758
    9. '_' → logprob: -16.250032424926758
    10. '(limit' → logprob: -16.375032424926758

Token 56: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.153795766294934e-06
    2. '((' → logprob: -13.000005722045898
    3. '(
' → logprob: -13.625005722045898
    4. ' (' → logprob: -14.125005722045898
    5. '(

' → logprob: -14.625005722045898
    6. '40' → logprob: -15.000005722045898
    7. '("("' → logprob: -15.125005722045898
    8. '()' → logprob: -15.625005722045898
    9. '```' → logprob: -16.1250057220459
    10. '(.' → logprob: -16.2500057220459

Token 57: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.04865379258990288
    2. '100' → logprob: -3.0486538410186768
    3. '500' → logprob: -10.548653602600098
    4. ' ' → logprob: -11.048653602600098
    5. '300' → logprob: -11.923653602600098
    6. '400' → logprob: -12.423653602600098
    7. '200' → logprob: -12.548653602600098
    8. '250' → logprob: -12.673653602600098
    9. '999' → logprob: -12.923653602600098
    10. '900' → logprob: -13.673653602600098

Token 58: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.10648773610591888
    2. '7' → logprob: -2.60648775100708
    3. '6' → logprob: -3.85648775100708
    4. '000' → logprob: -5.35648775100708
    5. '00' → logprob: -6.98148775100708
    6. '8' → logprob: -8.106487274169922
    7. '07' → logprob: -9.856487274169922
    8. '0' → logprob: -10.856487274169922
    9. '007' → logprob: -10.981487274169922
    10. '06' → logprob: -11.106487274169922

Token 59: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.012939028441905975
    2. '9' → logprob: -4.387938976287842
    3. '6' → logprob: -8.387939453125
    4. '8' → logprob: -8.512939453125
    5. '**' → logprob: -14.262939453125
    6. '```' → logprob: -15.762939453125
    7. '}' → logprob: -18.387939453125
    8. ')' → logprob: -18.512939453125
    9. '

' → logprob: -18.887939453125
    10. '​' → logprob: -19.387939453125

Token 60: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ' )' → logprob: -13.000003814697266
    3. ')
' → logprob: -13.375003814697266
    4. '))' → logprob: -17.500003814697266
    5. ' ' → logprob: -17.625003814697266
    6. ')

' → logprob: -18.500003814697266
    7. ')
' → logprob: -18.625003814697266
    8. '   ' → logprob: -19.500003814697266
    9. ')#' → logprob: -19.500003814697266
    10. '
' → logprob: -19.875003814697266

Token 61: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0028502829372882843
    2. '

' → logprob: -7.00285005569458
    3. '' → logprob: -7.25285005569458
    4. 'def' → logprob: -8.002850532531738
    5. '    
' → logprob: -8.252850532531738
    6. '
' → logprob: -9.002850532531738
    7. '\' → logprob: -9.377850532531738
    8. ' 
' → logprob: -9.377850532531738
    9. '\n' → logprob: -9.502850532531738
    10. '#' → logprob: -9.627850532531738

Token 62: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7363629341125488
    2. ' ' → logprob: -0.8613629341125488
    3. ' _' → logprob: -3.611362934112549
    4. '_' → logprob: -3.611362934112549
    5. ' solve' → logprob: -3.611362934112549
    6. ' factorial' → logprob: -5.486362934112549
    7. ' space' → logprob: -5.861362934112549
    8. ' max' → logprob: -6.361362934112549
    9. ' calculate' → logprob: -7.111362934112549
    10. ' dfs' → logprob: -7.111362934112549

Token 63: '_inf' (ID: 107309)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.424973726272583
    2. '_' → logprob: -2.174973726272583
    3. '_max' → logprob: -2.174973726272583
    4. '_user' → logprob: -3.174973726272583
    5. '_random' → logprob: -3.799973726272583
    6. '_factor' → logprob: -4.549973487854004
    7. '_data' → logprob: -4.674973487854004
    8. '_array' → logprob: -5.549973487854004
    9. '_time' → logprob: -5.924973487854004
    10. '_system' → logprob: -6.299973487854004

Token 64: '():
' (ID: 8595)
  Prédit: 'inity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inity' → logprob: -0.016554856672883034
    2. 'ity' → logprob: -5.391554832458496
    3. 'inty' → logprob: -5.391554832458496
    4. '():' → logprob: -5.641554832458496
    5. '```' → logprob: -6.391554832458496
    6. '()' → logprob: -6.516554832458496
    7. 'i' → logprob: -8.391554832458496
    8. 'ty' → logprob: -9.016554832458496
    9. 'finity' → logprob: -9.641554832458496
    10. '():
' → logprob: -10.266554832458496

Token 65: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8492629528045654
    2. '():' → logprob: -1.2242629528045654
    3. ' return' → logprob: -2.3492629528045654
    4. 'return' → logprob: -2.4742629528045654
    5. '():
' → logprob: -3.0992629528045654
    6. '   ' → logprob: -4.2242631912231445
    7. ' ()' → logprob: -4.2242631912231445
    8. '()
' → logprob: -4.8492631912231445
    9. ' ():' → logprob: -5.3492631912231445
    10. 'float' → logprob: -6.0992631912231445

Token 66: ' return' (ID: 622)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.05690307542681694
    2. 'float' → logprob: -2.931903123855591
    3. '   ' → logprob: -6.681902885437012
    4. ' return' → logprob: -8.056902885437012
    5. ' math' → logprob: -8.556902885437012
    6. '    ' → logprob: -9.431902885437012
    7. 'return' (adapté à ' return') → logprob: -10.056902885437012
    8. '10' → logprob: -10.181902885437012
    9. ' ' → logprob: -10.306902885437012
    10. 'math' → logprob: -10.556902885437012

Token 67: ' ' (ID: 220)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.0025905270595103502
    2. 'float' → logprob: -6.252590656280518
    3. ' math' → logprob: -7.377590656280518
    4. ' ' → logprob: -10.62759017944336
    5. ' inf' → logprob: -12.50259017944336
    6. '	float' → logprob: -12.62759017944336
    7. '(float' → logprob: -13.50259017944336
    8. '=float' → logprob: -13.75259017944336
    9. 'math' → logprob: -13.87759017944336
    10. ',float' → logprob: -14.12759017944336

Token 68: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00998662132769823
    2. ' float' → logprob: -4.759986400604248
    3. 'math' → logprob: -6.634986400604248
    4. '10' → logprob: -10.384986877441406
    5. ' math' → logprob: -10.884986877441406
    6. '   ' → logprob: -12.634986877441406
    7. '1' → logprob: -13.384986877441406
    8. ' ' → logprob: -13.509986877441406
    9. '	float' → logprob: -14.009986877441406
    10. '(float' → logprob: -15.259986877441406

Token 69: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6832000613212585
    2. '18' → logprob: -1.0582001209259033
    3. '0' → logprob: -2.3082001209259033
    4. '9' → logprob: -3.6832001209259033
    5. '10' → logprob: -5.308199882507324
    6. '00' → logprob: -5.308199882507324
    7. '17' → logprob: -5.808199882507324
    8. '20' → logprob: -6.433199882507324
    9. '12' → logprob: -6.433199882507324
    10. '8' → logprob: -6.558199882507324

Token 70: '20' (ID: 455)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.17714671790599823
    2. '9' → logprob: -2.0521466732025146
    3. '15' → logprob: -4.302146911621094
    4. '20' → logprob: -4.427146911621094
    5. '10' → logprob: -4.927146911621094
    6. '16' → logprob: -7.677146911621094
    7. '12' → logprob: -8.177146911621094
    8. '19' → logprob: -8.302146911621094
    9. '17' → logprob: -9.677146911621094
    10. '14' → logprob: -10.052146911621094

Token 71: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04174550995230675
    2. '#' → logprob: -4.166745662689209
    3. '<|end|>' → logprob: -4.916745662689209
    4. '
' → logprob: -5.166745662689209
    5. '<|end|>' → logprob: -5.416745662689209
    6. '\' → logprob: -6.291745662689209
    7. '\n' → logprob: -6.666745662689209
    8. '```' → logprob: -6.666745662689209
    9. '

' → logprob: -6.791745662689209
    10. 'newline' → logprob: -7.541745662689209

Token 73: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.557266116142273
    2. ' gcd' → logprob: -1.432266116142273
    3. ' is' → logprob: -2.4322662353515625
    4. ' main' → logprob: -2.9322662353515625
    5. ' factorial' → logprob: -3.8072662353515625
    6. ' max' → logprob: -5.0572662353515625
    7. ' safe' → logprob: -5.4322662353515625
    8. ' sqrt' → logprob: -6.3072662353515625
    9. ' set' → logprob: -6.5572662353515625
    10. 'get' → logprob: -6.6822662353515625

Token 74: '_eps' (ID: 186178)
  Prédit: '_inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inf' → logprob: -0.6675207018852234
    2. '_max' → logprob: -2.417520761489868
    3. '_in' → logprob: -2.792520761489868
    4. '_int' → logprob: -3.167520761489868
    5. '_pi' → logprob: -3.417520761489868
    6. '_min' → logprob: -3.667520761489868
    7. '_random' → logprob: -3.917520761489868
    8. '_' → logprob: -4.167520523071289
    9. '_s' → logprob: -4.417520523071289
    10. '_float' → logprob: -4.792520523071289

Token 75: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0018008425831794739
    2. '()' → logprob: -6.376801013946533
    3. ' ():' → logprob: -9.626800537109375
    4. '():
' → logprob: -10.501800537109375
    5. ' ()' → logprob: -13.251800537109375
    6. '()>' → logprob: -14.126800537109375
    7. '()*' → logprob: -14.126800537109375
    8. '(' → logprob: -14.751800537109375
    9. '_' → logprob: -15.001800537109375
    10. '):' → logprob: -15.251800537109375

Token 76: '   ' (ID: 271)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0614464245736599
    2. '0' → logprob: -3.06144642829895
    3. '   ' → logprob: -4.436446189880371
    4. '(' → logprob: -8.061446189880371
    5. ' ' → logprob: -8.061446189880371
    6. '10' → logprob: -8.311446189880371
    7. '    
' → logprob: -10.561446189880371
    8. ' (' → logprob: -12.436446189880371
    9. '=' → logprob: -12.436446189880371
    10. '6' → logprob: -12.686446189880371

Token 77: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005469570169225335
    2. ' ' → logprob: -7.750546932220459
    3. '   ' → logprob: -9.250547409057617
    4. '0' → logprob: -11.500547409057617
    5. '10' → logprob: -11.750547409057617
    6. '2' → logprob: -14.625547409057617
    7. '4' → logprob: -14.625547409057617
    8. '(' → logprob: -15.250547409057617
    9. '5' → logprob: -15.500547409057617
    10. '6' → logprob: -15.750547409057617

Token 78: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048727139830589294
    2. ' ' → logprob: -3.048727035522461
    3. '(' → logprob: -9.673727035522461
    4. '   ' → logprob: -9.923727035522461
    5. '0' → logprob: -10.798727035522461
    6. '10' → logprob: -12.423727035522461
    7. ' (' → logprob: -13.423727035522461
    8. ' ' → logprob: -14.673727035522461
    9. '  ' → logprob: -14.798727035522461
    10. '    ' → logprob: -15.173727035522461

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.47495681833243e-05
    2. '10' → logprob: -10.750024795532227
    3. ' ' → logprob: -12.750024795532227
    4. '(' → logprob: -15.000024795532227
    5. '0' → logprob: -16.375024795532227
    6. 'float' → logprob: -16.875024795532227
    7. '-' → logprob: -18.500024795532227
    8. '```' → logprob: -19.625024795532227
    9. '`' → logprob: -20.000024795532227
    10. '9' → logprob: -20.125024795532227

Token 80: '.' (ID: 13)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.018578778952360153
    2. '0' → logprob: -4.143579006195068
    3. '.' → logprob: -6.143579006195068
    4. '-' → logprob: -7.893579006195068
    5. '.e' → logprob: -12.26857852935791
    6. '```' → logprob: -12.89357852935791
    7. '*' → logprob: -13.01857852935791
    8. '10' → logprob: -13.14357852935791
    9. 'E' → logprob: -13.14357852935791
    10. '6' → logprob: -13.39357852935791

Token 81: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.069664333248511e-05
    2. '0' → logprob: -11.625020980834961
    3. 'e' → logprob: -13.000020980834961
    4. '7' → logprob: -13.250020980834961
    5. '6' → logprob: -13.750020980834961
    6. '9' → logprob: -13.875020980834961
    7. '8' → logprob: -14.125020980834961
    8. '1' → logprob: -14.250020980834961
    9. '3' → logprob: -14.375020980834961
    10. '10' → logprob: -14.375020980834961

Token 82: ' /' (ID: 820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -4.251091377227567e-05
    2. '-' → logprob: -10.250042915344238
    3. '0' → logprob: -12.500042915344238
    4. 'E' → logprob: -13.250042915344238
    5. '.' → logprob: -13.500042915344238
    6. ' ' → logprob: -16.375041961669922
    7. '.e' → logprob: -17.250041961669922
    8. '6' → logprob: -17.375041961669922
    9. '+' → logprob: -17.500041961669922
    10. 'е' → logprob: -17.625041961669922

Token 83: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06603709608316422
    2. '10' → logprob: -2.816037178039551
    3. ' (' → logprob: -5.941037178039551
    4. '100' → logprob: -6.816037178039551
    5. '1' → logprob: -8.31603717803955
    6. ' ' → logprob: -9.44103717803955
    7. 'math' → logprob: -13.06603717803955
    8. '2' → logprob: -13.19103717803955
    9. 'float' → logprob: -13.31603717803955
    10. '(float' → logprob: -13.81603717803955

Token 84: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008852577768266201
    2. '10' → logprob: -4.883852481842041
    3. ' (' → logprob: -6.883852481842041
    4. '100' → logprob: -8.5088529586792
    5. '1' → logprob: -11.5088529586792
    6. ' ' → logprob: -12.2588529586792
    7. 'float' → logprob: -13.1338529586792
    8. '(float' → logprob: -13.5088529586792
    9. '2' → logprob: -15.3838529586792
    10. '(int' → logprob: -15.8838529586792

Token 85: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.6585526466369629
    2. '7' → logprob: -0.7835526466369629
    3. '6' → logprob: -4.658552646636963
    4. '**' → logprob: -4.908552646636963
    5. '8' → logprob: -5.033552646636963
    6. '10' → logprob: -6.533552646636963
    7. '12' → logprob: -7.908552646636963
    8. '15' → logprob: -8.658552169799805
    9. '18' → logprob: -9.283552169799805
    10. '20' → logprob: -10.033552169799805

Token 86: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.18239249289035797
    2. '7' → logprob: -1.8073924779891968
    3. '8' → logprob: -6.807392597198486
    4. '10' → logprob: -6.932392597198486
    5. '12' → logprob: -7.932392597198486
    6. '6' → logprob: -8.682392120361328
    7. '15' → logprob: -10.557392120361328
    8. '14' → logprob: -13.182392120361328
    9. '-' → logprob: -13.307392120361328
    10. '20' → logprob: -13.682392120361328

Token 87: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17710548639297485
    2. '\n' → logprob: -2.92710542678833
    3. 'def' → logprob: -2.92710542678833
    4. '<|end|>' → logprob: -3.55210542678833
    5. '

' → logprob: -4.92710542678833
    6. ')' → logprob: -5.42710542678833
    7. '\' → logprob: -5.80210542678833
    8. '' → logprob: -6.05210542678833
    9. 'n' → logprob: -6.17710542678833
    10. '#' → logprob: -6.67710542678833

Token 88: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2583194673061371
    2. 'd' → logprob: -1.5083194971084595
    3. '
' → logprob: -5.13331937789917
    4. '\' → logprob: -8.258319854736328
    5. '#' → logprob: -9.383319854736328
    6. 'de' → logprob: -9.508319854736328
    7. '

' → logprob: -10.758319854736328
    8. '' → logprob: -12.008319854736328
    9. '```' → logprob: -12.008319854736328
    10. '\n' → logprob: -12.133319854736328

Token 89: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0712706446647644
    2. ' is' → logprob: -3.821270704269409
    3. ' solve' → logprob: -4.32127046585083
    4. ' gcd' → logprob: -4.57127046585083
    5. ' factorial' → logprob: -5.07127046585083
    6. 'main' → logprob: -5.44627046585083
    7. ' max' → logprob: -5.57127046585083
    8. ' fast' → logprob: -6.82127046585083
    9. ' get' → logprob: -6.94627046585083
    10. ' pow' → logprob: -7.19627046585083

Token 90: '_mod' (ID: 15325)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.3716461658477783
    2. '_pi' → logprob: -2.9966461658477783
    3. '_' → logprob: -3.1216461658477783
    4. '_min' → logprob: -3.3716461658477783
    5. '_mod' → logprob: -4.371645927429199
    6. '_s' → logprob: -4.371645927429199
    7. '_random' → logprob: -4.621645927429199
    8. '_abs' → logprob: -4.621645927429199
    9. '_inf' → logprob: -4.746645927429199
    10. '_int' → logprob: -4.871645927429199

Token 91: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0026493824552744627
    2. '()' → logprob: -6.127649307250977
    3. '(' → logprob: -8.127649307250977
    4. ' ():' → logprob: -9.252649307250977
    5. '():
' → logprob: -9.752649307250977
    6. '_' → logprob: -11.752649307250977
    7. '):' → logprob: -13.627649307250977
    8. ' ()' → logprob: -13.752649307250977
    9. '()(' → logprob: -13.877649307250977
    10. ':' → logprob: -14.502649307250977

Token 92: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3485698103904724
    2. '()' → logprob: -2.098569869995117
    3. ' ' → logprob: -2.598569869995117
    4. '(' → logprob: -3.598569869995117
    5. ':' → logprob: -3.973569869995117
    6. ' ():' → logprob: -4.223569869995117
    7. ' :' → logprob: -4.473569869995117
    8. '   ' → logprob: -4.723569869995117
    9. '():
' → logprob: -5.598569869995117
    10. ' ()' → logprob: -5.598569869995117

Token 93: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37365564703941345
    2. '10' → logprob: -1.4986556768417358
    3. '100' → logprob: -2.7486555576324463
    4. ' return' → logprob: -4.248655796051025
    5. 'return' (adapté à ' return') → logprob: -5.373655796051025
    6. '1' → logprob: -5.623655796051025
    7. '   ' → logprob: -8.123655319213867
    8. '106' → logprob: -8.373655319213867
    9. '104' → logprob: -8.373655319213867
    10. '109' → logprob: -8.498655319213867

Token 94: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03221563622355461
    2. '10' → logprob: -3.6572155952453613
    3. '100' → logprob: -5.157215595245361
    4. '1' → logprob: -9.15721607208252
    5. ' (' → logprob: -11.03221607208252
    6. '(' → logprob: -11.65721607208252
    7. '998' → logprob: -12.28221607208252
    8. ' ' → logprob: -13.53221607208252
    9. '9' → logprob: -13.65721607208252
    10. '999' → logprob: -14.03221607208252

Token 95: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16082526743412018
    2. '100' → logprob: -1.910825252532959
    3. ' ' → logprob: -8.285825729370117
    4. '(' → logprob: -8.660825729370117
    5. '998' → logprob: -9.160825729370117
    6. '1' → logprob: -9.660825729370117
    7. 'int' → logprob: -12.535825729370117
    8. ' (' → logprob: -13.785825729370117
    9. '(int' → logprob: -14.285825729370117
    10. '   ' → logprob: -15.035825729370117

Token 96: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.011069757863879204
    2. '**' → logprob: -4.5110697746276855
    3. '09' → logprob: -11.511069297790527
    4. ' ' → logprob: -11.761069297790527
    5. '+' → logprob: -13.011069297790527
    6. '*' → logprob: -14.761069297790527
    7. '7' → logprob: -14.886069297790527
    8. '8' → logprob: -15.511069297790527
    9. '19' → logprob: -15.636069297790527
    10. '99' → logprob: -15.636069297790527

Token 97: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.875
    3. ' ' → logprob: -18.25
    4. '
' → logprob: -21.125
    5. '```' → logprob: -21.125
    6. '10' → logprob: -21.375
    7. '+' → logprob: -21.5
    8. '   ' → logprob: -21.625
    9. '９' → logprob: -21.75
    10. '}' → logprob: -22.0

Token 98: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004080315411556512
    2. ' +' → logprob: -8.000408172607422
    3. '7' → logprob: -9.750408172607422
    4. '+
' → logprob: -11.250408172607422
    5. '+

' → logprob: -14.875408172607422
    6. '＋' → logprob: -15.125408172607422
    7. '```' → logprob: -16.000408172607422
    8. ' plus' → logprob: -16.125408172607422
    9. ' +
' → logprob: -16.250408172607422
    10. ' ' → logprob: -16.500408172607422

Token 99: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '+' → logprob: -16.750001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '  ' → logprob: -19.375001907348633
    6. '```' → logprob: -19.375001907348633
    7. '9' → logprob: -20.125001907348633
    8. '07' → logprob: -20.375001907348633
    9. '' → logprob: -20.875001907348633
    10. '1' → logprob: -21.000001907348633

Token 100: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -19.75
    3. '   ' → logprob: -20.0
    4. '```' → logprob: -20.375
    5. '７' → logprob: -20.5
    6. '+' → logprob: -20.625
    7. '

' → logprob: -21.375
    8. '07' → logprob: -21.5
    9. '۷' → logprob: -22.25
    10. '  ' → logprob: -22.375

Token 101: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.026626069098711014
    2. '\n' → logprob: -4.526626110076904
    3. '<|end|>' → logprob: -4.776626110076904
    4. '' → logprob: -6.276626110076904
    5. '

' → logprob: -6.526626110076904
    6. '```' → logprob: -7.151626110076904
    7. 'def' → logprob: -7.276626110076904
    8. 'newline' → logprob: -7.776626110076904
    9. ' 
' → logprob: -7.901626110076904
    10. '#' → logprob: -8.276625633239746

Token 102: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9571366310119629
    2. 'def' → logprob: -0.9571366310119629
    3. '
' → logprob: -1.582136631011963
    4. '#' → logprob: -4.457136631011963
    5. '

' → logprob: -4.957136631011963
    6. '\' → logprob: -5.707136631011963
    7. '' → logprob: -6.707136631011963
    8. '\n' → logprob: -6.832136631011963
    9. '```' → logprob: -6.832136631011963
    10. '@' → logprob: -8.457136154174805

Token 103: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1629311889410019
    2. ' solve' → logprob: -3.037931203842163
    3. ' gcd' → logprob: -3.287931203842163
    4. ' factorial' → logprob: -4.162930965423584
    5. '_' → logprob: -4.412930965423584
    6. ' max' → logprob: -4.912930965423584
    7. ' _' → logprob: -5.162930965423584
    8. ' is' → logprob: -6.037930965423584
    9. ' add' → logprob: -6.037930965423584
    10. ' compute' → logprob: -6.162930965423584

Token 104: '_mod' (ID: 15325)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.3589271605014801
    2. '_' → logprob: -2.7339272499084473
    3. '_input' → logprob: -2.8589272499084473
    4. '_min' → logprob: -3.6089272499084473
    5. '_prime' → logprob: -3.8589272499084473
    6. '_factor' → logprob: -3.9839272499084473
    7. '_version' → logprob: -4.108927249908447
    8. '_g' → logprob: -4.358927249908447
    9. '_mod' → logprob: -4.483927249908447
    10. '_array' → logprob: -4.483927249908447

Token 105: '2' (ID: 17)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004699853248894215
    2. '():' → logprob: -5.50469970703125
    3. '(' → logprob: -7.50469970703125
    4. ' ()' → logprob: -10.62969970703125
    5. '()>' → logprob: -11.25469970703125
    6. '();' → logprob: -12.62969970703125
    7. '()">' → logprob: -12.62969970703125
    8. '()==' → logprob: -12.87969970703125
    9. '():
' → logprob: -12.87969970703125
    10. '_' → logprob: -13.00469970703125

Token 106: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00015669701679144055
    2. '():
' → logprob: -9.37515640258789
    3. ' ():' → logprob: -9.62515640258789
    4. '()' → logprob: -12.12515640258789
    5. '():
' → logprob: -15.00015640258789
    6. '(' → logprob: -17.00015640258789
    7. '():

' → logprob: -17.75015640258789
    8. '()>' → logprob: -18.25015640258789
    9. ' ()' → logprob: -18.37515640258789
    10. ':' → logprob: -18.62515640258789

Token 107: '   ' (ID: 271)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.6343010663986206
    2. '():' → logprob: -0.7593010663986206
    3. '()' → logprob: -7.13430118560791
    4. '   ' → logprob: -7.75930118560791
    5. ' ():' → logprob: -8.00930118560791
    6. ':' → logprob: -9.88430118560791
    7. '():
' → logprob: -10.25930118560791
    8. ' return' → logprob: -11.38430118560791
    9. ' ()' → logprob: -11.88430118560791
    10. '):
' → logprob: -11.88430118560791

Token 108: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20285415649414062
    2. 'return' (adapté à ' return') → logprob: -1.7028541564941406
    3. ' ' → logprob: -7.452854156494141
    4. '   ' → logprob: -7.827854156494141
    5. '()
' → logprob: -9.07785415649414
    6. '()' → logprob: -9.07785415649414
    7. '():
' → logprob: -9.57785415649414
    8. ' 
' → logprob: -10.07785415649414
    9. ' ()' → logprob: -10.20285415649414
    10. '	return' → logprob: -10.70285415649414

Token 109: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05425388365983963
    2. '10' → logprob: -3.5542538166046143
    3. ' (' → logprob: -4.554254055023193
    4. '100' → logprob: -5.429254055023193
    5. '(' → logprob: -5.804254055023193
    6. '998' → logprob: -5.804254055023193
    7. '2' → logprob: -6.054254055023193
    8. '1' → logprob: -7.554254055023193
    9. '214' → logprob: -8.429253578186035
    10. '0' → logprob: -9.929253578186035

Token 110: '998' (ID: 34589)
  Prédit: '998'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '998' → logprob: -0.7724881768226624
    2. '10' → logprob: -1.0224881172180176
    3. '(' → logprob: -1.7724881172180176
    4. '100' → logprob: -5.397488117218018
    5. '2' → logprob: -6.397488117218018
    6. ' ' → logprob: -6.647488117218018
    7. ' (' → logprob: -7.897488117218018
    8. '1' → logprob: -8.272488594055176
    9. '214' → logprob: -9.647488594055176
    10. '987' → logprob: -9.647488594055176

Token 111: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -7.465036105713807e-06
    2. '243' → logprob: -12.500007629394531
    3. '245' → logprob: -13.500007629394531
    4. '247' → logprob: -14.000007629394531
    5. '242' → logprob: -14.750007629394531
    6. '544' → logprob: -15.500007629394531
    7. '445' → logprob: -16.12500762939453
    8. '444' → logprob: -16.12500762939453
    9. '344' → logprob: -16.25000762939453
    10. '234' → logprob: -16.37500762939453

Token 112: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.00015860427811276168
    2. '853' → logprob: -8.750158309936523
    3. '3' → logprob: -16.625158309936523
    4. '357' → logprob: -17.000158309936523
    5. '857' → logprob: -18.625158309936523
    6. '35' → logprob: -18.875158309936523
    7. '```' → logprob: -20.125158309936523
    8. '351' → logprob: -20.250158309936523
    9. '352' → logprob: -20.250158309936523
    10. '253' → logprob: -20.500158309936523

Token 113: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.042339175939559937
    2. '
' → logprob: -4.042339324951172
    3. 'd' → logprob: -4.417339324951172
    4. '#' → logprob: -5.292339324951172
    5. '\' → logprob: -5.542339324951172
    6. '\n' → logprob: -6.792339324951172
    7. '

' → logprob: -7.417339324951172
    8. ':' → logprob: -8.167339324951172
    9. 'de' → logprob: -8.542339324951172
    10. '' → logprob: -8.917339324951172

Token 115: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04719001427292824
    2. ' gcd' → logprob: -3.547189950942993
    3. 'main' → logprob: -4.672190189361572
    4. ' get' → logprob: -5.797190189361572
    5. ' pow' → logprob: -6.797190189361572
    6. ' l' → logprob: -7.422190189361572
    7. 'g' → logprob: -7.672190189361572
    8. ' is' → logprob: -8.047189712524414
    9. ' factorial' → logprob: -8.047189712524414
    10. ' input' → logprob: -8.172189712524414

Token 116: '_dd' (ID: 102571)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.7800909280776978
    2. '_prime' → logprob: -1.1550909280776978
    3. '_g' → logprob: -3.405090808868408
    4. '_pr' → logprob: -3.530090808868408
    5. '_factor' → logprob: -3.655090808868408
    6. '_input' → logprob: -3.780090808868408
    7. '_min' → logprob: -3.905090808868408
    8. '_' → logprob: -4.030090808868408
    9. '_mod' → logprob: -4.155090808868408
    10. '_random' → logprob: -4.780090808868408

Token 117: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02903188019990921
    2. '())' → logprob: -5.404031753540039
    3. 'p' → logprob: -5.904031753540039
    4. 'os' → logprob: -6.279031753540039
    5. 'ist' → logprob: -6.654031753540039
    6. '_' → logprob: -6.654031753540039
    7. 'igits' → logprob: -6.654031753540039
    8. 'def' → logprob: -7.154031753540039
    9. 'iv' → logprob: -7.529031753540039
    10. '_value' → logprob: -7.654031753540039

Token 118: '   ' (ID: 271)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.18625985085964203
    2. '():' → logprob: -1.9362598657608032
    3. '   ' → logprob: -4.311259746551514
    4. '()' → logprob: -4.936259746551514
    5. ' ():' → logprob: -6.061259746551514
    6. ' ()' → logprob: -7.311259746551514
    7. '0' → logprob: -7.811259746551514
    8. ' ' → logprob: -8.061260223388672
    9. '[]' → logprob: -8.686260223388672
    10. '10' → logprob: -9.311260223388672

Token 119: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3887346982955933
    2. '2' → logprob: -1.6387346982955933
    3. '{}' → logprob: -2.138734817504883
    4. '1' → logprob: -2.388734817504883
    5. '10' → logprob: -2.388734817504883
    6. '{' → logprob: -3.138734817504883
    7. 'collections' → logprob: -3.388734817504883
    8. 'math' → logprob: -3.763734817504883
    9. '3' → logprob: -3.888734817504883
    10. 'from' → logprob: -4.638734817504883

Token 120: ' [' (ID: 723)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.0405569076538086
    2. ' {}' → logprob: -1.5405569076538086
    3. ' ' → logprob: -1.7905569076538086
    4. ' collections' → logprob: -2.1655569076538086
    5. 'collections' → logprob: -2.2905569076538086
    6. '{' → logprob: -4.790556907653809
    7. ' float' → logprob: -4.790556907653809
    8. 'dict' → logprob: -5.415556907653809
    9. ' dict' → logprob: -5.540556907653809
    10. '2' → logprob: -5.790556907653809

Token 121: '(-' (ID: 8087)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0979757159948349
    2. '[' → logprob: -3.097975730895996
    3. ']' → logprob: -4.222975730895996
    4. '-' → logprob: -4.597975730895996
    5. '1' → logprob: -4.597975730895996
    6. '[]' → logprob: -5.222975730895996
    7. '(' → logprob: -5.847975730895996
    8. 'False' → logprob: -7.097975730895996
    9. '()]' → logprob: -7.097975730895996
    10. 'deque' → logprob: -7.222975730895996

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001490716531407088
    2. '2' → logprob: -9.50014877319336
    3. ' ' → logprob: -10.37514877319336
    4. '3' → logprob: -11.62514877319336
    5. '(' → logprob: -11.75014877319336
    6. '0' → logprob: -12.62514877319336
    7. '10' → logprob: -12.62514877319336
    8. 'd' → logprob: -13.12514877319336
    9. '-' → logprob: -13.25014877319336
    10. '4' → logprob: -13.25014877319336

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006100970320403576
    2. ' ,' → logprob: -5.131101131439209
    3. ',-' → logprob: -8.75610065460205
    4. '0' → logprob: -12.13110065460205
    5. '1' → logprob: -12.63110065460205
    6. '),' → logprob: -13.25610065460205
    7. ',
' → logprob: -14.25610065460205
    8. ')' → logprob: -14.25610065460205
    9. ' ,-' → logprob: -14.38110065460205
    10. '),(' → logprob: -14.88110065460205

Token 124: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1462441235780716
    2. ' ' → logprob: -2.0212440490722656
    3. '-' → logprob: -6.021244049072266
    4. ' -' → logprob: -6.896244049072266
    5. '1' → logprob: -9.271244049072266
    6. ')' → logprob: -11.021244049072266
    7. ',' → logprob: -12.021244049072266
    8. ' )' → logprob: -13.396244049072266
    9. '  ' → logprob: -14.083744049072266
    10. ' ,' → logprob: -14.146244049072266

Token 125: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.05754600092768669
    2. '),(' → logprob: -2.9325459003448486
    3. ')' → logprob: -6.432546138763428
    4. ' ),' → logprob: -7.307546138763428
    5. '),
' → logprob: -8.05754566192627
    6. ',' → logprob: -10.05754566192627
    7. '),

' → logprob: -11.55754566192627
    8. ')]' → logprob: -13.18254566192627
    9. ' ' → logprob: -13.30754566192627
    10. ',),' → logprob: -13.43254566192627

Token 126: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005313089117407799
    2. '0' → logprob: -5.505312919616699
    3. ' ' → logprob: -6.755312919616699
    4. '-' → logprob: -9.6303129196167
    5. ' -' → logprob: -14.0053129196167
    6. '(' → logprob: -14.5053129196167
    7. '+' → logprob: -14.8178129196167
    8. '
' → logprob: -15.1928129196167
    9. '   ' → logprob: -15.1928129196167
    10. '  ' → logprob: -15.2553129196167

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03812790662050247
    2. ',-' → logprob: -3.288127899169922
    3. ' ,' → logprob: -10.413127899169922
    4. '1' → logprob: -10.413127899169922
    5. ',
' → logprob: -11.663127899169922
    6. ',+' → logprob: -12.038127899169922
    7. ',

' → logprob: -12.538127899169922
    8. ' ,-' → logprob: -13.038127899169922
    9. '

' → logprob: -13.663127899169922
    10. ',-

' → logprob: -13.788127899169922

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5233176350593567
    2. '-' → logprob: -0.8983176350593567
    3. ' ' → logprob: -8.773317337036133
    4. ' -' → logprob: -10.273317337036133
    5. '
' → logprob: -12.773317337036133
    6. '```' → logprob: -14.273317337036133
    7. '

' → logprob: -15.148317337036133
    8. ')' → logprob: -15.523317337036133
    9. '  ' → logprob: -15.773317337036133
    10. '+' → logprob: -15.898317337036133

Token 129: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6937928795814514
    2. '),(' → logprob: -0.6937928795814514
    3. ' ),' → logprob: -7.443792819976807
    4. ',' → logprob: -10.693793296813965
    5. ')' → logprob: -10.693793296813965
    6. '),
' → logprob: -12.443793296813965
    7. ',),' → logprob: -12.443793296813965
    8. ',(' → logprob: -13.193793296813965
    9. '(' → logprob: -13.818793296813965
    10. ' ' → logprob: -13.818793296813965

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005954752676188946
    2. '(' → logprob: -5.380954742431641
    3. '0' → logprob: -6.630954742431641
    4. ' ' → logprob: -11.25595474243164
    5. ' (' → logprob: -13.50595474243164
    6. '```' → logprob: -15.38095474243164
    7. '   ' → logprob: -16.63095474243164
    8. ')' → logprob: -16.75595474243164
    9. '
' → logprob: -17.00595474243164
    10. '+' → logprob: -17.13095474243164

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.947715832618997e-05
    2. ' ,' → logprob: -9.625089645385742
    3. '0' → logprob: -10.750089645385742
    4. ',-' → logprob: -13.375089645385742
    5. ' ' → logprob: -15.750089645385742
    6. ',
' → logprob: -16.375089645385742
    7. ',)' → logprob: -17.000089645385742
    8. ')' → logprob: -17.125089645385742
    9. '```' → logprob: -17.875089645385742
    10. ',

' → logprob: -18.125089645385742

Token 132: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. ')' → logprob: -16.625001907348633
    4. '1' → logprob: -16.875001907348633
    5. '۰' → logprob: -17.125001907348633
    6. '```' → logprob: -17.812501907348633
    7. '<|end|>' → logprob: -18.375001907348633
    8. '０' → logprob: -19.437501907348633
    9. 'o' → logprob: -19.500001907348633
    10. '-' → logprob: -20.312501907348633

Token 133: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.011627850122749805
    2. '),' → logprob: -4.511627674102783
    3. ',(' → logprob: -7.761627674102783
    4. ',' → logprob: -9.011628150939941
    5. ' ),' → logprob: -10.511628150939941
    6. ')' → logprob: -13.011628150939941
    7. '(' → logprob: -13.636628150939941
    8. '],[' → logprob: -14.886628150939941
    9. ',),' → logprob: -15.011628150939941
    10. ' ,' → logprob: -15.386628150939941

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00032831361750140786
    2. '(' → logprob: -8.500328063964844
    3. ' ' → logprob: -9.000328063964844
    4. ',' → logprob: -13.750328063964844
    5. ' (' → logprob: -15.625328063964844
    6. '-' → logprob: -16.750328063964844
    7. '۰' → logprob: -17.500328063964844
    8. '   ' → logprob: -17.625328063964844
    9. ')' → logprob: -17.750328063964844
    10. '
' → logprob: -19.000328063964844

Token 135: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.00038717821007594466
    2. ',' → logprob: -8.000387191772461
    3. '-' → logprob: -10.125387191772461
    4. ' ,-' → logprob: -11.875387191772461
    5. ',-
' → logprob: -13.000387191772461
    6. ',
' → logprob: -14.125387191772461
    7. ',-

' → logprob: -14.125387191772461
    8. '",-' → logprob: -15.000387191772461
    9. ',\
' → logprob: -15.750387191772461
    10. ' -' → logprob: -15.750387191772461

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.250000953674316
    3. ')]' → logprob: -15.625000953674316
    4. '-' → logprob: -16.000001907348633
    5. ')' → logprob: -16.625001907348633
    6. '
' → logprob: -17.000001907348633
    7. '１' → logprob: -17.812501907348633
    8. '

' → logprob: -18.187501907348633
    9. '```' → logprob: -18.375001907348633
    10. ']' → logprob: -18.437501907348633

Token 137: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00024132427643053234
    2. ')' → logprob: -8.62524127960205
    3. '),' → logprob: -10.00024127960205
    4. ' )' → logprob: -12.25024127960205
    5. ']' → logprob: -12.37524127960205
    6. '),(' → logprob: -12.87524127960205
    7. ')])' → logprob: -13.00024127960205
    8. '')]' → logprob: -14.25024127960205
    9. ')]
' → logprob: -14.37524127960205
    10. '))' → logprob: -15.00024127960205

Token 138: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005928283790126443
    2. '
' → logprob: -7.7505927085876465
    3. '<|end|>' → logprob: -9.625593185424805
    4. '#' → logprob: -10.375593185424805
    5. '_' → logprob: -12.250593185424805
    6. ',' → logprob: -12.250593185424805
    7. '\' → logprob: -12.375593185424805
    8. 'd' → logprob: -12.500593185424805
    9. '

' → logprob: -12.625593185424805
    10. 'newline' → logprob: -12.625593185424805

Token 139: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.653033435344696
    2. 'get' → logprob: -0.778033435344696
    3. ' main' → logprob: -4.528033256530762
    4. 'main' → logprob: -5.903033256530762
    5. ' is' → logprob: -7.278033256530762
    6. ' dd' → logprob: -7.840533256530762
    7. '_get' → logprob: -8.028033256530762
    8. 'is' → logprob: -8.028033256530762
    9. ' reverse' → logprob: -8.215533256530762
    10. ' ' → logprob: -8.278033256530762

Token 140: '_dd' (ID: 102571)
  Prédit: '_pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -1.8104321956634521
    2. '_di' → logprob: -2.435432195663452
    3. '_' → logprob: -2.685432195663452
    4. '_prime' → logprob: -2.685432195663452
    5. '_dd' → logprob: -2.685432195663452
    6. '_d' → logprob: -3.060432195663452
    7. '_al' → logprob: -3.310432195663452
    8. '_alpha' → logprob: -3.435432195663452
    9. '_f' → logprob: -3.560432195663452
    10. '_dir' → logprob: -3.685432195663452

Token 141: 'n' (ID: 77)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7531222105026245
    2. '8' → logprob: -0.8781222105026245
    3. '4' → logprob: -3.253122329711914
    4. '():' → logprob: -3.378122329711914
    5. '():
' → logprob: -4.003122329711914
    6. '2' → logprob: -4.628122329711914
    7. '(' → logprob: -5.253122329711914
    8. 's' → logprob: -6.628122329711914
    9. '()[' → logprob: -7.253122329711914
    10. '()>' → logprob: -7.503122329711914

Token 142: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.011541583575308323
    2. '()' → logprob: -4.636541366577148
    3. '():
' → logprob: -6.636541366577148
    4. 's' → logprob: -9.636541366577148
    5. 'um' → logprob: -9.761541366577148
    6. 'e' → logprob: -9.886541366577148
    7. '(' → logprob: -10.011541366577148
    8. '():

' → logprob: -10.511541366577148
    9. 'u' → logprob: -11.011541366577148
    10. '(n' → logprob: -11.011541366577148

Token 143: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.11818072199821472
    2. '():
' → logprob: -2.243180751800537
    3. '()' → logprob: -5.368180751800537
    4. '(' → logprob: -8.118180274963379
    5. ' ():' → logprob: -8.368180274963379
    6. '():
' → logprob: -10.243180274963379
    7. '   ' → logprob: -10.493180274963379
    8. '(n' → logprob: -10.868180274963379
    9. ' ()' → logprob: -11.118180274963379
    10. ':' → logprob: -11.243180274963379

Token 144: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6016610264778137
    2. ' return' → logprob: -1.476660966873169
    3. '   ' → logprob: -2.351660966873169
    4. '7' → logprob: -3.726660966873169
    5. '()' → logprob: -3.726660966873169
    6. ' ' → logprob: -3.851660966873169
    7. 'def' → logprob: -4.476661205291748
    8. '9' → logprob: -4.726661205291748
    9. '
' → logprob: -5.101661205291748
    10. '[
' → logprob: -5.226661205291748

Token 145: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09823790937662125
    2. ' [' → logprob: -2.723237991333008
    3. '[(' → logprob: -3.723237991333008
    4. '[
' → logprob: -6.098237991333008
    5. '[get' → logprob: -7.473237991333008
    6. ' [(' → logprob: -7.598237991333008
    7. '[((' → logprob: -8.348237991333008
    8. ' ' → logprob: -9.723237991333008
    9. ' [
' → logprob: -10.223237991333008
    10. '8' → logprob: -10.598237991333008

Token 146: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -6.515961285913363e-05
    2. '(' → logprob: -10.375064849853516
    3. ' (-' → logprob: -10.375064849853516
    4. '(i' → logprob: -13.625064849853516
    5. '(x' → logprob: -15.000064849853516
    6. '-' → logprob: -15.000064849853516
    7. '
' → logprob: -15.375064849853516
    8. '   ' → logprob: -15.875064849853516
    9. ' (' → logprob: -16.000064849853516
    10. '(n' → logprob: -16.125064849853516

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.750001907348633
    3. '-' → logprob: -15.750001907348633
    4. '2' → logprob: -16.125001907348633
    5. '
' → logprob: -16.687501907348633
    6. '১' → logprob: -17.687501907348633
    7. ')' → logprob: -17.687501907348633
    8. '   ' → logprob: -17.875001907348633
    9. ' -' → logprob: -18.000001907348633
    10. '>' → logprob: -18.125001907348633

Token 148: ',' (ID: 11)
  Prédit: ',-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.07894773036241531
    2. ',' → logprob: -2.5789477825164795
    3. ' ,-' → logprob: -10.453948020935059
    4. ' ,' → logprob: -11.703948020935059
    5. '-' → logprob: -11.703948020935059
    6. ',-
' → logprob: -12.828948020935059
    7. '0' → logprob: -13.078948020935059
    8. '",-' → logprob: -13.328948020935059
    9. ',-

' → logprob: -13.453948020935059
    10. ',
' → logprob: -13.703948020935059

Token 149: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5762355923652649
    2. '0' → logprob: -0.8262355923652649
    3. ' ' → logprob: -8.4512357711792
    4. ' -' → logprob: -9.4512357711792
    5. '1' → logprob: -12.9512357711792
    6. '(-' → logprob: -14.5762357711792
    7. ')' → logprob: -15.0762357711792
    8. '(' → logprob: -15.7637357711792
    9. ',-' → logprob: -16.513734817504883
    10. '   ' → logprob: -16.638734817504883

Token 150: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3869331479072571
    2. '),(' → logprob: -1.1369330883026123
    3. ',' → logprob: -10.511933326721191
    4. ' ),' → logprob: -11.261933326721191
    5. ')' → logprob: -11.386933326721191
    6. '),
' → logprob: -12.261933326721191
    7. ',),' → logprob: -12.886933326721191
    8. ',(' → logprob: -13.636933326721191
    9. '),

' → logprob: -14.011933326721191
    10. '(' → logprob: -14.511933326721191

Token 151: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0036678907927125692
    2. '(' → logprob: -5.753667831420898
    3. ' (-' → logprob: -7.628667831420898
    4. ' (' → logprob: -12.503667831420898
    5. '(-(' → logprob: -16.3786678314209
    6. '((-' → logprob: -17.8786678314209
    7. ' ' → logprob: -18.1286678314209
    8. '
' → logprob: -18.3786678314209
    9. '-' → logprob: -18.3786678314209
    10. '0' → logprob: -18.3786678314209

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '-' → logprob: -14.125000953674316
    3. ' ' → logprob: -15.125000953674316
    4. ' -' → logprob: -16.125001907348633
    5. '0' → logprob: -16.500001907348633
    6. ',' → logprob: -16.812501907348633
    7. '
' → logprob: -17.812501907348633
    8. '১' → logprob: -17.937501907348633
    9. '

' → logprob: -18.125001907348633
    10. '<|end|>' → logprob: -18.437501907348633

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004763568751513958
    2. ',-' → logprob: -5.379763603210449
    3. '1' → logprob: -9.12976360321045
    4. ' ,' → logprob: -11.00476360321045
    5. '-' → logprob: -11.12976360321045
    6. ' -' → logprob: -14.25476360321045
    7. '<|end|>' → logprob: -14.25476360321045
    8. ',+' → logprob: -14.37976360321045
    9. ',
' → logprob: -14.37976360321045
    10. ' ' → logprob: -15.25476360321045

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20143917202949524
    2. '-' → logprob: -1.7014391422271729
    3. ' ' → logprob: -10.951438903808594
    4. ' -' → logprob: -11.701438903808594
    5. '<|end|>' → logprob: -16.701438903808594
    6. ')' → logprob: -18.201438903808594
    7. '–' → logprob: -18.326438903808594
    8. '+' → logprob: -18.451438903808594
    9. '
' → logprob: -18.951438903808594
    10. '[' → logprob: -19.576438903808594

Token 155: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1797836720943451
    2. '),(' → logprob: -1.8047837018966675
    3. ')' → logprob: -10.804783821105957
    4. ',' → logprob: -11.804783821105957
    5. '),
' → logprob: -12.429783821105957
    6. ' ),' → logprob: -12.929783821105957
    7. '),

' → logprob: -13.179783821105957
    8. ',),' → logprob: -14.054783821105957
    9. ',(' → logprob: -15.054783821105957
    10. '],' → logprob: -15.304783821105957

Token 156: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.314410537481308
    2. '0' → logprob: -1.3144105672836304
    3. ' ' → logprob: -7.18941068649292
    4. ' -' → logprob: -7.93941068649292
    5. '(-' → logprob: -10.564410209655762
    6. '1' → logprob: -12.314410209655762
    7. '(' → logprob: -12.689410209655762
    8. '   ' → logprob: -14.439410209655762
    9. ')' → logprob: -14.689410209655762
    10. '
' → logprob: -14.939410209655762

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007934243185445666
    2. '1' → logprob: -7.37579345703125
    3. ',-' → logprob: -9.00079345703125
    4. ' ,' → logprob: -10.12579345703125
    5. ',
' → logprob: -13.25079345703125
    6. ' ' → logprob: -14.12579345703125
    7. '
' → logprob: -15.00079345703125
    8. '0' → logprob: -15.00079345703125
    9. ',+' → logprob: -16.00079345703125
    10. '```' → logprob: -16.68829345703125

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.149051427608356e-05
    2. ' ' → logprob: -9.625081062316895
    3. '-' → logprob: -11.125081062316895
    4. ' -' → logprob: -15.000081062316895
    5. '  ' → logprob: -16.87508201599121
    6. '
' → logprob: -17.12508201599121
    7. '   ' → logprob: -17.25008201599121
    8. '+' → logprob: -17.25008201599121
    9. '0' → logprob: -17.50008201599121
    10. '```' → logprob: -17.75008201599121

Token 159: '),(' (ID: 54876)
  Prédit: ',('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',(' → logprob: -0.3026271164417267
    2. '),(' → logprob: -1.5526270866394043
    3. ',' → logprob: -3.5526270866394043
    4. '),' → logprob: -4.177627086639404
    5. '(' → logprob: -5.302627086639404
    6. '(-' → logprob: -8.427627563476562
    7. ')' → logprob: -8.927627563476562
    8. '',(' → logprob: -10.302627563476562
    9. '],' → logprob: -10.927627563476562
    10. '},' → logprob: -11.177627563476562

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010336418636143208
    2. '(' → logprob: -6.876033782958984
    3. ' ' → logprob: -14.876033782958984
    4. '0' → logprob: -15.376033782958984
    5. ' (' → logprob: -15.876033782958984
    6. '```' → logprob: -16.501033782958984
    7. '(-' → logprob: -17.876033782958984
    8. '-' → logprob: -18.001033782958984
    9. '{' → logprob: -18.126033782958984
    10. '۱' → logprob: -18.376033782958984

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006018842686899006
    2. '1' → logprob: -7.625601768493652
    3. '0' → logprob: -9.125601768493652
    4. ' ,' → logprob: -12.375601768493652
    5. ',
' → logprob: -14.500601768493652
    6. ',-' → logprob: -16.50060272216797
    7. '```' → logprob: -16.93810272216797
    8. '-' → logprob: -17.68810272216797
    9. ' ' → logprob: -17.87560272216797
    10. '<|end|>' → logprob: -18.68810272216797

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016945181414484978
    2. '0' → logprob: -8.75016975402832
    3. ' ' → logprob: -11.50016975402832
    4. '<|end|>' → logprob: -14.37516975402832
    5. '-' → logprob: -16.25016975402832
    6. '```' → logprob: -16.87516975402832
    7. '
' → logprob: -17.50016975402832
    8. '+' → logprob: -18.25016975402832
    9. '<|end|>' → logprob: -18.25016975402832
    10. '   ' → logprob: -18.37516975402832

Token 163: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.004715395625680685
    2. ',(' → logprob: -5.379715442657471
    3. '(' → logprob: -9.504714965820312
    4. '),' → logprob: -11.504714965820312
    5. ',' → logprob: -11.879714965820312
    6. '',(' → logprob: -13.379714965820312
    7. ')' → logprob: -14.004714965820312
    8. '",(' → logprob: -14.129714965820312
    9. '],[' → logprob: -15.254714965820312
    10. ')(' → logprob: -16.129714965820312

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12754058837890625
    2. '(' → logprob: -2.1275405883789062
    3. '0' → logprob: -7.502540588378906
    4. ' (' → logprob: -9.752540588378906
    5. ' ' → logprob: -13.002540588378906
    6. '```' → logprob: -16.877540588378906
    7. ',' → logprob: -17.252540588378906
    8. '
' → logprob: -17.252540588378906
    9. ')' → logprob: -17.752540588378906
    10. '[' → logprob: -17.877540588378906

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018153101205825806
    2. '0' → logprob: -4.018153190612793
    3. ' ,' → logprob: -13.768153190612793
    4. ')' → logprob: -14.018153190612793
    5. '1' → logprob: -14.268153190612793
    6. '<|end|>' → logprob: -15.143153190612793
    7. ',
' → logprob: -15.518153190612793
    8. '```' → logprob: -16.080652236938477
    9. '-' → logprob: -16.580652236938477
    10. ',-' → logprob: -16.768152236938477

Token 166: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '1' → logprob: -15.250001907348633
    4. '<|end|>' → logprob: -17.000001907348633
    5. '۰' → logprob: -18.375001907348633
    6. '-' → logprob: -18.875001907348633
    7. ')' → logprob: -19.000001907348633
    8. '```' → logprob: -19.375001907348633
    9. '   ' → logprob: -20.750001907348633
    10. '
' → logprob: -21.125001907348633

Token 167: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0002072357019642368
    2. ',(' → logprob: -8.62520694732666
    3. '),' → logprob: -10.87520694732666
    4. '(' → logprob: -12.25020694732666
    5. ')' → logprob: -13.12520694732666
    6. ',' → logprob: -14.25020694732666
    7. '',(' → logprob: -14.50020694732666
    8. '",(' → logprob: -14.75020694732666
    9. '],[' → logprob: -15.87520694732666
    10. '#' → logprob: -17.125207901000977

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4034345187828876e-05
    2. ' ' → logprob: -10.87502384185791
    3. '0' → logprob: -12.25002384185791
    4. '(' → logprob: -15.50002384185791
    5. '```' → logprob: -17.375024795532227
    6. '-' → logprob: -18.000024795532227
    7. ',' → logprob: -18.250024795532227
    8. ')' → logprob: -18.875024795532227
    9. ' (' → logprob: -19.375024795532227
    10. '
' → logprob: -19.500024795532227

Token 169: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31327205896377563
    2. ',-' → logprob: -1.3132719993591309
    3. '1' → logprob: -11.938272476196289
    4. '-' → logprob: -13.438272476196289
    5. ',
' → logprob: -14.563272476196289
    6. ',-
' → logprob: -14.688272476196289
    7. ',(' → logprob: -14.938272476196289
    8. '",-' → logprob: -14.938272476196289
    9. ' ,-' → logprob: -15.813272476196289
    10. ',-

' → logprob: -15.813272476196289

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '-' → logprob: -18.5
    4. '１' → logprob: -19.125
    5. '```' → logprob: -19.5625
    6. ')' → logprob: -19.75
    7. '۱' → logprob: -19.75
    8. ',' → logprob: -19.8125
    9. '১' → logprob: -20.0625
    10. '१' → logprob: -20.375

Token 171: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.00030042731668800116
    2. ',(' → logprob: -8.125300407409668
    3. '),' → logprob: -13.250300407409668
    4. ',' → logprob: -13.625300407409668
    5. '(' → logprob: -13.750300407409668
    6. '",(' → logprob: -17.000301361083984
    7. ' ),' → logprob: -17.125301361083984
    8. '',(' → logprob: -17.125301361083984
    9. ')' → logprob: -17.500301361083984
    10. '],[' → logprob: -18.125301361083984

Token 172: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002654966665431857
    2. '0' → logprob: -6.002655029296875
    3. ' (' → logprob: -8.627655029296875
    4. ' ' → logprob: -15.877655029296875
    5. '(-' → logprob: -16.627655029296875
    6. ',' → logprob: -18.002655029296875
    7. '
' → logprob: -18.252655029296875
    8. ')' → logprob: -18.627655029296875
    9. '```' → logprob: -18.752655029296875
    10. '<|end|>' → logprob: -19.377655029296875

Token 173: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.002745435107499361
    2. '-' → logprob: -6.377745628356934
    3. ',' → logprob: -6.877745628356934
    4. '1' → logprob: -11.877745628356934
    5. ',-
' → logprob: -12.502745628356934
    6. ',-

' → logprob: -14.377745628356934
    7. ' ,-' → logprob: -15.127745628356934
    8. ',
' → logprob: -15.127745628356934
    9. '-,' → logprob: -16.252744674682617
    10. '```' → logprob: -16.502744674682617

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00247981958091259
    2. '-' → logprob: -6.0024800300598145
    3. ' -' → logprob: -12.752479553222656
    4. ' ' → logprob: -14.502479553222656
    5. '```' → logprob: -16.002479553222656
    6. '[-' → logprob: -16.377479553222656
    7. '(-' → logprob: -16.502479553222656
    8. '[' → logprob: -17.002479553222656
    9. '{-' → logprob: -17.189979553222656
    10. '--' → logprob: -17.502479553222656

Token 175: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0031273290514945984
    2. '),(' → logprob: -6.128127098083496
    3. ',' → logprob: -7.003127098083496
    4. ')' → logprob: -10.878127098083496
    5. ' ),' → logprob: -12.503127098083496
    6. '},' → logprob: -12.753127098083496
    7. ',),' → logprob: -12.753127098083496
    8. '],' → logprob: -13.003127098083496
    9. '),"' → logprob: -15.128127098083496
    10. '),
' → logprob: -15.253127098083496

Token 176: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -2.935296834039036e-06
    2. ' (-' → logprob: -13.50000286102295
    3. '(' → logprob: -13.75000286102295
    4. '-' → logprob: -15.62500286102295
    5. '   ' → logprob: -15.75000286102295
    6. ' ' → logprob: -18.250003814697266
    7. ')' → logprob: -18.875003814697266
    8. '	' → logprob: -20.000003814697266
    9. '  ' → logprob: -20.125003814697266
    10. '       ' → logprob: -20.375003814697266

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -15.000000953674316
    3. ',' → logprob: -15.687500953674316
    4. '
' → logprob: -15.937500953674316
    5. '-' → logprob: -16.6875
    6. '2' → logprob: -16.75
    7. '```' → logprob: -17.125
    8. ')' → logprob: -17.5
    9. '0' → logprob: -17.875
    10. '4' → logprob: -18.0625

Token 178: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038487233221530914
    2. ',-' → logprob: -3.288487195968628
    3. '1' → logprob: -7.788487434387207
    4. '0' → logprob: -10.913487434387207
    5. '-' → logprob: -11.913487434387207
    6. ',
' → logprob: -13.163487434387207
    7. ' ,' → logprob: -13.413487434387207
    8. '```' → logprob: -14.288487434387207
    9. ',-
' → logprob: -14.663487434387207
    10. ')' → logprob: -14.663487434387207

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.500001907348633
    3. ')' → logprob: -15.000001907348633
    4. '<|end|>' → logprob: -16.125001907348633
    5. '
' → logprob: -17.500001907348633
    6. '-' → logprob: -17.500001907348633
    7. '```' → logprob: -18.312501907348633
    8. '   ' → logprob: -19.187501907348633
    9. '۱' → logprob: -19.437501907348633
    10. '১' → logprob: -19.562501907348633

Token 180: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00041816019802354276
    2. ']' → logprob: -8.000417709350586
    3. ')' → logprob: -9.500417709350586
    4. '])' → logprob: -12.750417709350586
    5. '])]' → logprob: -12.750417709350586
    6. ')])' → logprob: -13.875417709350586
    7. '')]' → logprob: -14.875417709350586
    8. ')]
' → logprob: -15.125417709350586
    9. ' )' → logprob: -15.625417709350586
    10. ']]' → logprob: -16.375417709350586

Token 181: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010887466371059418
    2. '
' → logprob: -4.635887622833252
    3. 'd' → logprob: -7.760887622833252
    4. '

' → logprob: -7.885887622833252
    5. 'class' → logprob: -8.510887145996094
    6. '#' → logprob: -10.135887145996094
    7. '<|end|>' → logprob: -10.135887145996094
    8. 'de' → logprob: -11.635887145996094
    9. '\' → logprob: -11.760887145996094
    10. '```' → logprob: -12.260887145996094

Token 182: ' LI' (ID: 14875)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.15516239404678345
    2. ' is' → logprob: -2.7801623344421387
    3. 'main' → logprob: -3.5301623344421387
    4. ' gcd' → logprob: -4.405162334442139
    5. ' get' → logprob: -4.530162334442139
    6. ' solve' → logprob: -5.155162334442139
    7. ' factorial' → logprob: -5.530162334442139
    8. ' input' → logprob: -5.530162334442139
    9. ' l' → logprob: -5.905162334442139
    10. 'is' → logprob: -6.280162334442139

Token 183: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.024629024788737297
    2. '()' → logprob: -4.52462911605835
    3. '():
' → logprob: -5.14962911605835
    4. 'ST' → logprob: -5.14962911605835
    5. 'st' → logprob: -6.39962911605835
    6. 'N' → logprob: -9.774628639221191
    7. 'n' → logprob: -10.649628639221191
    8. 'ne' → logprob: -10.774628639221191
    9. ' ()' → logprob: -10.899628639221191
    10. ' ():' → logprob: -11.149628639221191

Token 184: '   ' (ID: 271)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6560037732124329
    2. 'return' → logprob: -1.531003713607788
    3. ' return' → logprob: -1.781003713607788
    4. 'list' → logprob: -2.781003713607788
    5. '[]' → logprob: -4.031003952026367
    6. ' map' → logprob: -5.031003952026367
    7. 'map' → logprob: -5.781003952026367
    8. ' []' → logprob: -6.531003952026367
    9. '=list' → logprob: -6.531003952026367
    10. '[' → logprob: -6.656003952026367

Token 185: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.17471374571323395
    2. 'map' → logprob: -2.4247138500213623
    3. ' list' → logprob: -2.6747138500213623
    4. ' map' → logprob: -5.924713611602783
    5. 'return' (adapté à ' return') → logprob: -8.674714088439941
    6. '[' → logprob: -11.549714088439941
    7. 'm' → logprob: -11.799714088439941
    8. ' ' → logprob: -12.674714088439941
    9. '[]' → logprob: -13.424714088439941
    10. ' return' → logprob: -13.424714088439941

Token 186: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -8.923874702304602e-05
    2. ' list' → logprob: -9.500089645385742
    3. 'map' → logprob: -11.875089645385742
    4. '[list' → logprob: -11.875089645385742
    5. '[' → logprob: -15.500089645385742
    6. '	list' → logprob: -17.375089645385742
    7. '=list' → logprob: -17.625089645385742
    8. '(list' → logprob: -17.625089645385742
    9. 'lis' → logprob: -18.375089645385742
    10. 'lst' → logprob: -18.875089645385742

Token 187: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -9.610702363715973e-06
    2. '(' → logprob: -11.625009536743164
    3. 'map' → logprob: -14.750009536743164
    4. '	map' → logprob: -16.500009536743164
    5. '()' → logprob: -16.750009536743164
    6. ' map' → logprob: -17.625009536743164
    7. '(
' → logprob: -18.250009536743164
    8. '(m' → logprob: -18.375009536743164
    9. ',map' → logprob: -18.625009536743164
    10. '.map' → logprob: -18.875009536743164

Token 188: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.364928700961173e-05
    2. 'int' → logprob: -9.500093460083008
    3. '(' → logprob: -11.000093460083008
    4. ',int' → logprob: -14.000093460083008
    5. ' int' → logprob: -15.000093460083008
    6. '(str' → logprob: -15.250093460083008
    7. '[int' → logprob: -15.625093460083008
    8. '<int' → logprob: -16.000093460083008
    9. '=int' → logprob: -16.250093460083008
    10. '(
' → logprob: -16.500093460083008

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038047801703214645
    2. ',input' → logprob: -3.2880477905273438
    3. ' ,' → logprob: -12.663047790527344
    4. 'sys' → logprob: -13.663047790527344
    5. 'input' → logprob: -14.538047790527344
    6. ',
' → logprob: -15.413047790527344
    7. '(sys' → logprob: -15.538047790527344
    8. '   ' → logprob: -16.038047790527344
    9. ',System' → logprob: -16.038047790527344
    10. ',line' → logprob: -16.038047790527344

Token 190: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08713832497596741
    2. 'sys' → logprob: -3.0871384143829346
    3. ' input' → logprob: -3.3371384143829346
    4. ' sys' → logprob: -6.0871381759643555
    5. 'stdin' → logprob: -12.087138175964355
    6. ' ' → logprob: -14.962138175964355
    7. '=sys' → logprob: -15.837138175964355
    8. '	input' → logprob: -15.837138175964355
    9. '   ' → logprob: -15.962138175964355
    10. '	sys' → logprob: -16.212139129638672

Token 191: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.5094070477061905e-05
    2. '.' → logprob: -11.375015258789062
    3. '.std' → logprob: -13.250015258789062
    4. '.argv' → logprob: -14.000015258789062
    5. '.stdout' → logprob: -14.625015258789062
    6. '.readline' → logprob: -15.250015258789062
    7. '.st' → logprob: -15.625015258789062
    8. 'stdin' → logprob: -17.125015258789062
    9. ' .' → logprob: -19.000015258789062
    10. '.stderr' → logprob: -19.000015258789062

Token 192: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.3915141355246305e-05
    2. '.' → logprob: -10.75002384185791
    3. '.read' → logprob: -13.62502384185791
    4. '.stdin' → logprob: -14.00002384185791
    5. ' .' → logprob: -15.75002384185791
    6. '.buffer' → logprob: -16.000024795532227
    7. '.readlines' → logprob: -16.750024795532227
    8. ')' → logprob: -18.625024795532227
    9. ').' → logprob: -18.875024795532227
    10. ' readline' → logprob: -19.625024795532227

Token 193: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0280383548888494e-06
    2. '()' → logprob: -14.000000953674316
    3. ' ().' → logprob: -16.125001907348633
    4. '()))' → logprob: -20.250001907348633
    5. '(' → logprob: -20.750001907348633
    6. '.' → logprob: -21.875001907348633
    7. '().__' → logprob: -22.250001907348633
    8. '.readline' → logprob: -22.875001907348633
    9. '())' → logprob: -23.125001907348633
    10. '())))' → logprob: -23.125001907348633

Token 194: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0232709851115942
    2. 'rstrip' → logprob: -3.773271083831787
    3. 'split' → logprob: -11.023270606994629
    4. ' strip' → logprob: -11.898270606994629
    5. 'read' → logprob: -13.023270606994629
    6. 'rst' → logprob: -16.398271560668945
    7. '(strip' → logprob: -17.273271560668945
    8. 'rs' → logprob: -17.898271560668945
    9. ')' → logprob: -18.148271560668945
    10. '-strip' → logprob: -18.773271560668945

Token 195: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.09218110144138336
    2. '))' → logprob: -2.5921812057495117
    3. '()' → logprob: -4.342181205749512
    4. '())' → logprob: -8.967181205749512
    5. '()))
' → logprob: -10.092181205749512
    6. '(' → logprob: -11.342181205749512
    7. ')' → logprob: -11.842181205749512
    8. ' ))' → logprob: -13.217181205749512
    9. '()));' → logprob: -13.217181205749512
    10. '()
' → logprob: -13.842181205749512

Token 196: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.088346359931165e-07
    2. '
' → logprob: -15.250000953674316
    3. ' def' → logprob: -15.375000953674316
    4. 'de' → logprob: -16.0
    5. 'd' → logprob: -16.375
    6. ':def' → logprob: -16.625
    7. 'ndef' → logprob: -17.625
    8. '()' → logprob: -17.75
    9. '_def' → logprob: -18.0
    10. '[]' → logprob: -18.0

Token 197: ' read' (ID: 1729)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.1253889948129654
    2. 'LS' → logprob: -2.6253890991210938
    3. ' I' → logprob: -4.125389099121094
    4. 'S' → logprob: -4.250389099121094
    5. 'II' → logprob: -5.500389099121094
    6. ' LS' → logprob: -5.500389099121094
    7. ' S' → logprob: -6.000389099121094
    8. 'SI' → logprob: -6.375389099121094
    9. 'input' → logprob: -6.875389099121094
    10. ' input' → logprob: -8.000389099121094

Token 198: '_int' (ID: 12285)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.02354826219379902
    2. '_line' → logprob: -3.7735483646392822
    3. 'ln' → logprob: -9.398548126220703
    4. 'Line' → logprob: -9.398548126220703
    5. 'ine' → logprob: -10.148548126220703
    6. 'lin' → logprob: -10.273548126220703
    7. 'li' → logprob: -10.273548126220703
    8. 'l' → logprob: -11.648548126220703
    9. '_LINE' → logprob: -12.273548126220703
    10. '()' → logprob: -12.398548126220703

Token 199: '_list' (ID: 4162)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03170451149344444
    2. '():' → logprob: -3.5317044258117676
    3. '():
' → logprob: -6.906704425811768
    4. 'line' → logprob: -8.281704902648926
    5. 'ine' → logprob: -9.281704902648926
    6. '())' → logprob: -9.406704902648926
    7. '()
' → logprob: -9.781704902648926
    8. '()]' → logprob: -9.781704902648926
    9. ' ()' → logprob: -9.906704902648926
    10. '()>' → logprob: -10.156704902648926

Token 200: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.794061770662665e-05
    2. '():
' → logprob: -9.75009822845459
    3. '()' → logprob: -10.25009822845459
    4. ' ():' → logprob: -12.50009822845459
    5. '():

' → logprob: -15.50009822845459
    6. '()>' → logprob: -16.125097274780273
    7. '()">' → logprob: -16.625097274780273
    8. '():
' → logprob: -17.000097274780273
    9. '(' → logprob: -17.500097274780273
    10. '();' → logprob: -17.750097274780273

Token 201: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002867225557565689
    2. '():
' → logprob: -8.375287055969238
    3. '()' → logprob: -9.875287055969238
    4. ' ():' → logprob: -12.500287055969238
    5. ':' → logprob: -14.500287055969238
    6. '(' → logprob: -15.750287055969238
    7. '   ' → logprob: -16.000286102294922
    8. '():
' → logprob: -16.500286102294922
    9. '():

' → logprob: -17.250286102294922
    10. ' ()' → logprob: -17.375286102294922

Token 202: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2839266061782837
    2. 'return' (adapté à ' return') → logprob: -1.4089266061782837
    3. '   ' → logprob: -5.908926486968994
    4. ' ' → logprob: -10.908926963806152
    5. 'def' → logprob: -11.783926963806152
    6. '
' → logprob: -12.033926963806152
    7. '    ' → logprob: -12.408926963806152
    8. '    
' → logprob: -12.408926963806152
    9. ' 
' → logprob: -12.658926963806152
    10. '	return' → logprob: -12.908926963806152

Token 203: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.13137021660804749
    2. ' list' → logprob: -2.1313703060150146
    3. 'LI' → logprob: -5.7563700675964355
    4. '[' → logprob: -7.3813700675964355
    5. '[list' → logprob: -8.131370544433594
    6. ' LI' → logprob: -8.756370544433594
    7. 'map' → logprob: -9.756370544433594
    8. ' [' → logprob: -9.881370544433594
    9. '[int' → logprob: -10.381370544433594
    10. 'li' → logprob: -11.006370544433594

Token 204: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -6.0033853515051305e-05
    2. '(' → logprob: -9.875060081481934
    3. '(L' → logprob: -12.500060081481934
    4. 'map' → logprob: -12.625060081481934
    5. '(int' → logprob: -14.125060081481934
    6. '()' → logprob: -14.750060081481934
    7. '(m' → logprob: -16.375059127807617
    8. '(sys' → logprob: -17.000059127807617
    9. ' (' → logprob: -17.125059127807617
    10. '(
' → logprob: -17.250059127807617

Token 205: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00029065259150229394
    2. 'int' → logprob: -8.250290870666504
    3. '(str' → logprob: -11.000290870666504
    4. '(' → logprob: -11.750290870666504
    5. '<int' → logprob: -14.125290870666504
    6. '[int' → logprob: -14.125290870666504
    7. 'str' → logprob: -14.250290870666504
    8. ',int' → logprob: -14.250290870666504
    9. ' int' → logprob: -14.250290870666504
    10. '=int' → logprob: -14.500290870666504

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007566197891719639
    2. '(sys' → logprob: -7.500756740570068
    3. ',input' → logprob: -9.00075626373291
    4. 'sys' → logprob: -10.00075626373291
    5. '(),' → logprob: -11.12575626373291
    6. ' sys' → logprob: -12.12575626373291
    7. '=sys' → logprob: -12.37575626373291
    8. ' ,' → logprob: -12.50075626373291
    9. '(' → logprob: -12.75075626373291
    10. 'input' → logprob: -13.87575626373291

Token 207: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.17066363990306854
    2. 'sys' → logprob: -2.045663595199585
    3. ' input' → logprob: -3.795663595199585
    4. ' sys' → logprob: -5.295663833618164
    5. ' ' → logprob: -10.170663833618164
    6. '   ' → logprob: -11.295663833618164
    7. '(sys' → logprob: -11.420663833618164
    8. 'stdin' → logprob: -11.670663833618164
    9. '=sys' → logprob: -12.233163833618164
    10. '(input' → logprob: -12.358163833618164

Token 208: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.9266199160483666e-05
    2. 'stdin' → logprob: -10.875019073486328
    3. '(stdin' → logprob: -15.625019073486328
    4. '.' → logprob: -16.625019073486328
    5. '.readline' → logprob: -16.875019073486328
    6. '.stdout' → logprob: -17.125019073486328
    7. '.argv' → logprob: -17.500019073486328
    8. '.std' → logprob: -17.875019073486328
    9. '```' → logprob: -18.250019073486328
    10. '.__' → logprob: -18.500019073486328

Token 209: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.001298927003517747
    2. '.stdin' → logprob: -6.876298904418945
    3. '().' → logprob: -8.751298904418945
    4. '.' → logprob: -9.501298904418945
    5. '.read' → logprob: -11.001298904418945
    6. '=sys' → logprob: -12.501298904418945
    7. 'stdin' → logprob: -12.626298904418945
    8. 'sys' → logprob: -12.626298904418945
    9. '(stdin' → logprob: -13.376298904418945
    10. '.readlines' → logprob: -13.626298904418945

Token 210: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.7697225252486533e-06
    2. '()' → logprob: -12.750003814697266
    3. '()))' → logprob: -14.625003814697266
    4. ' ().' → logprob: -15.500003814697266
    5. '()[' → logprob: -16.125003814697266
    6. '))' → logprob: -17.500003814697266
    7. '(' → logprob: -17.625003814697266
    8. '.readline' → logprob: -17.875003814697266
    9. '().__' → logprob: -18.125003814697266
    10. '.' → logprob: -18.250003814697266

Token 211: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.06154239550232887
    2. 'read' → logprob: -3.311542510986328
    3. 'strip' → logprob: -3.811542510986328
    4. 'rstrip' → logprob: -6.811542510986328
    5. 'decode' → logprob: -11.436542510986328
    6. ' split' → logprob: -14.436542510986328
    7. ')' → logprob: -15.311542510986328
    8. ' strip' → logprob: -15.811542510986328
    9. '.readline' → logprob: -17.061542510986328
    10. 'spl' → logprob: -17.311542510986328

Token 212: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4810047447681427
    2. '))' → logprob: -0.9810047149658203
    3. '()' → logprob: -4.98100471496582
    4. '())' → logprob: -10.98100471496582
    5. '()))
' → logprob: -11.73100471496582
    6. '()));' → logprob: -12.35600471496582
    7. ')' → logprob: -13.10600471496582
    8. '(' → logprob: -13.35600471496582
    9. '()))

' → logprob: -13.85600471496582
    10. ' ))' → logprob: -14.60600471496582

Token 213: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.054500666621607e-06
    2. ' def' → logprob: -13.50000286102295
    3. '
' → logprob: -14.37500286102295
    4. 'd' → logprob: -14.75000286102295
    5. '\' → logprob: -15.37500286102295
    6. '```' → logprob: -15.75000286102295
    7. '#' → logprob: -16.500003814697266
    8. '	def' → logprob: -16.500003814697266
    9. 'de' → logprob: -16.875003814697266
    10. 'ndef' → logprob: -17.125003814697266

Token 214: ' L' (ID: 451)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.15575140714645386
    2. 'read' → logprob: -2.4057514667510986
    3. ' input' → logprob: -3.1557514667510986
    4. 'input' → logprob: -5.1557512283325195
    5. 'I' → logprob: -5.7807512283325195
    6. 'int' → logprob: -7.6557512283325195
    7. ' I' → logprob: -7.6557512283325195
    8. ' readline' → logprob: -7.6557512283325195
    9. ' int' → logprob: -8.15575122833252
    10. ' main' → logprob: -8.53075122833252

Token 215: 'LI' (ID: 14313)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0007953316089697182
    2. '()' → logprob: -8.750795364379883
    3. 'IN' → logprob: -9.000795364379883
    4. 'IST' → logprob: -9.000795364379883
    5. '()
' → logprob: -9.250795364379883
    6. 'S' → logprob: -9.875795364379883
    7. 'INE' → logprob: -10.500795364379883
    8. '():' → logprob: -10.625795364379883
    9. '():
' → logprob: -10.875795364379883
    10. 'INES' → logprob: -10.875795364379883

Token 216: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005564896273426712
    2. '():
' → logprob: -7.500556468963623
    3. '()' → logprob: -13.000556945800781
    4. ' ():' → logprob: -13.625556945800781
    5. '():
' → logprob: -16.87555694580078
    6. '():

' → logprob: -17.12555694580078
    7. '):' → logprob: -18.75055694580078
    8. '()>' → logprob: -19.62555694580078
    9. '(' → logprob: -19.75055694580078
    10. 'def' → logprob: -20.00055694580078

Token 217: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.008621785789728165
    2. '():
' → logprob: -4.883621692657471
    3. '()' → logprob: -7.258621692657471
    4. ' ():' → logprob: -9.258622169494629
    5. '):' → logprob: -10.008622169494629
    6. ':' → logprob: -10.258622169494629
    7. 'list' → logprob: -10.383622169494629
    8. 'return' → logprob: -10.883622169494629
    9. 'def' → logprob: -10.883622169494629
    10. '[]' → logprob: -11.133622169494629

Token 218: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.038938168436288834
    2. 'lambda' → logprob: -3.788938283920288
    3. '[list' → logprob: -5.538938045501709
    4. ' list' → logprob: -5.913938045501709
    5. 'def' → logprob: -6.163938045501709
    6. 'return' (adapté à ' return') → logprob: -6.163938045501709
    7. '[' → logprob: -6.413938045501709
    8. '[]' → logprob: -6.788938045501709
    9. '[int' → logprob: -6.913938045501709
    10. ' lambda' → logprob: -8.413938522338867

Token 219: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.32250410318374634
    2. 'list' → logprob: -1.3225040435791016
    3. '[int' → logprob: -4.822504043579102
    4. ' list' → logprob: -7.072504043579102
    5. '[List' → logprob: -8.947504043579102
    6. ' [' → logprob: -9.947504043579102
    7. '[' → logprob: -10.072504043579102
    8. '[line' → logprob: -10.697504043579102
    9. '(list' → logprob: -10.822504043579102
    10. '[l' → logprob: -10.822504043579102

Token 220: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0013558330247178674
    2. 'LI' → logprob: -6.6263556480407715
    3. 'int' → logprob: -11.00135612487793
    4. ' list' → logprob: -11.87635612487793
    5. 'li' → logprob: -12.50135612487793
    6. '[list' → logprob: -14.12635612487793
    7. 'read' → logprob: -14.25135612487793
    8. 'tuple' → logprob: -15.00135612487793
    9. '[]' → logprob: -15.50135612487793
    10. '(list' → logprob: -15.87635612487793

Token 221: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.961759259458631e-06
    2. 'map' → logprob: -12.875004768371582
    3. '(' → logprob: -13.375004768371582
    4. '	map' → logprob: -14.750004768371582
    5. ' map' → logprob: -15.000004768371582
    6. '(int' → logprob: -16.7500057220459
    7. '.map' → logprob: -17.5000057220459
    8. ',map' → logprob: -18.2500057220459
    9. '_map' → logprob: -18.8750057220459
    10. '(
' → logprob: -18.8750057220459

Token 222: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00010580805974313989
    2. 'int' → logprob: -9.750105857849121
    3. '<int' → logprob: -10.875105857849121
    4. ',int' → logprob: -11.625105857849121
    5. '=int' → logprob: -11.875105857849121
    6. '(' → logprob: -12.500105857849121
    7. ']int' → logprob: -12.625105857849121
    8. '[int' → logprob: -13.500105857849121
    9. ':int' → logprob: -14.000105857849121
    10. ' int' → logprob: -14.125105857849121

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07789725065231323
    2. '(sys' → logprob: -2.702897310256958
    3. '(' → logprob: -4.952897071838379
    4. 'sys' → logprob: -8.327897071838379
    5. ' ,' → logprob: -8.577897071838379
    6. ' sys' → logprob: -9.077897071838379
    7. '=sys' → logprob: -9.077897071838379
    8. '(),' → logprob: -9.577897071838379
    9. '(s' → logprob: -10.952897071838379
    10. '	sys' → logprob: -11.077897071838379

Token 224: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.06201675161719322
    2. ' sys' → logprob: -2.812016725540161
    3. '(sys' → logprob: -11.062016487121582
    4. 'input' → logprob: -11.312016487121582
    5. ')' → logprob: -11.437016487121582
    6. '=sys' → logprob: -12.937016487121582
    7. '	sys' → logprob: -13.062016487121582
    8. 's' → logprob: -13.437016487121582
    9. ' ' → logprob: -13.937016487121582
    10. '   ' → logprob: -13.937016487121582

Token 225: '.split' (ID: 10347)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.0008947860915213823
    2. 'in' → logprob: -7.125895023345947
    3. 'strip' → logprob: -10.375894546508789
    4. 'ist' → logprob: -11.000894546508789
    5. '.strip' → logprob: -11.625894546508789
    6. 'e' → logprob: -11.875894546508789
    7. '   ' → logprob: -12.125894546508789
    8. 'sys' → logprob: -12.375894546508789
    9. 'i' → logprob: -12.500894546508789
    10. '.readline' → logprob: -13.375894546508789

Token 226: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0009924377081915736
    2. '()' → logprob: -7.125992298126221
    3. '())' → logprob: -8.750992774963379
    4. '))' → logprob: -11.375992774963379
    5. '()))
' → logprob: -11.875992774963379
    6. '())))' → logprob: -12.000992774963379
    7. '(','' → logprob: -12.875992774963379
    8. '()));' → logprob: -14.375992774963379
    9. '('' → logprob: -15.000992774963379
    10. '()
' → logprob: -15.250992774963379

Token 227: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7412697672843933
    2. 'for' → logprob: -0.7412697672843933
    3. ' for' → logprob: -3.491269826889038
    4. '(sys' → logprob: -4.116269588470459
    5. '(' → logprob: -8.866270065307617
    6. '   ' → logprob: -10.366270065307617
    7. 'sys' → logprob: -10.991270065307617
    8. 'in' → logprob: -12.491270065307617
    9. ' sys' → logprob: -12.491270065307617
    10. '(for' → logprob: -12.616270065307617

Token 228: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.31335878372192383
    2. ' sys' → logprob: -1.3133587837219238
    3. '_' → logprob: -10.063358306884766
    4. '	sys' → logprob: -10.813358306884766
    5. '(sys' → logprob: -11.063358306884766
    6. '=sys' → logprob: -11.938358306884766
    7. 'open' → logprob: -12.688358306884766
    8. 'range' → logprob: -12.688358306884766
    9. ' open' → logprob: -13.063358306884766
    10. '_sys' → logprob: -14.063358306884766

Token 229: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03371267020702362
    2. 'in' → logprob: -3.40871262550354
    3. 'import' → logprob: -10.158712387084961
    4. 'sys' → logprob: -10.783712387084961
    5. ' sys' → logprob: -13.408712387084961
    6. '	in' → logprob: -13.533712387084961
    7. '=sys' → logprob: -13.783712387084961
    8. ' ' → logprob: -13.783712387084961
    9. 's' → logprob: -14.158712387084961
    10. ' ' → logprob: -15.033712387084961

Token 230: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.002478508511558175
    2. ' sys' → logprob: -6.00247859954834
    3. '	sys' → logprob: -13.12747859954834
    4. '(sys' → logprob: -14.50247859954834
    5. '=sys' → logprob: -15.62747859954834
    6. '   ' → logprob: -16.627477645874023
    7. ' ' → logprob: -16.877477645874023
    8. 'iter' → logprob: -17.502477645874023
    9. '```' → logprob: -17.752477645874023
    10. 'open' → logprob: -18.002477645874023

Token 231: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.2617008400848135e-05
    2. 'stdin' → logprob: -10.375032424926758
    3. '.stdout' → logprob: -14.000032424926758
    4. '(stdin' → logprob: -15.625032424926758
    5. '```' → logprob: -16.000032424926758
    6. '.' → logprob: -16.375032424926758
    7. 'in' → logprob: -16.375032424926758
    8. '.__' → logprob: -17.375032424926758
    9. '.std' → logprob: -17.375032424926758
    10. '.argv' → logprob: -17.500032424926758

Token 232: '.readlines' (ID: 92237)
  Prédit: '.readlines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.1432976871728897
    2. '.readline' → logprob: -2.0182976722717285
    3. 'read' → logprob: -8.018298149108887
    4. '()' → logprob: -9.393298149108887
    5. 'buffer' → logprob: -10.018298149108887
    6. '.' → logprob: -10.018298149108887
    7. '().' → logprob: -10.643298149108887
    8. ']' → logprob: -10.768298149108887
    9. 'lines' → logprob: -11.518298149108887
    10. ')' → logprob: -11.518298149108887

Token 233: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00033713103039190173
    2. '()' → logprob: -8.000337600708008
    3. '())' → logprob: -14.375337600708008
    4. '()}' → logprob: -15.250337600708008
    5. ' ()' → logprob: -15.375337600708008
    6. '()]
' → logprob: -15.625337600708008
    7. '()][' → logprob: -15.625337600708008
    8. ']' → logprob: -15.750337600708008
    9. ')]' → logprob: -17.500337600708008
    10. '（）' → logprob: -17.625337600708008

Token 234: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.006752429064363241
    2. ']' → logprob: -5.0067524909973145
    3. ')]' → logprob: -10.881752014160156
    4. ']()' → logprob: -11.131752014160156
    5. '()' → logprob: -12.631752014160156
    6. '()]
' → logprob: -16.006752014160156
    7. ' ]' → logprob: -16.006752014160156
    8. '(' → logprob: -16.756752014160156
    9. '`]' → logprob: -17.756752014160156
    10. ']]' → logprob: -17.881752014160156

Token 235: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.5822400857578032e-05
    2. 'D' → logprob: -11.250025749206543
    3. 'd' → logprob: -11.875025749206543
    4. '#' → logprob: -13.250025749206543
    5. '\' → logprob: -13.625025749206543
    6. ' def' → logprob: -14.625025749206543
    7. 'ndef' → logprob: -14.750025749206543
    8. 'class' → logprob: -15.125025749206543
    9. '```' → logprob: -15.125025749206543
    10. 'N' → logprob: -15.750025749206543

Token 236: ' read' (ID: 1729)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6818262934684753
    2. 'I' → logprob: -1.9318263530731201
    3. 'read' → logprob: -2.55682635307312
    4. 'input' → logprob: -2.55682635307312
    5. ' S' → logprob: -2.68182635307312
    6. ' read' → logprob: -3.68182635307312
    7. ' input' → logprob: -3.80682635307312
    8. 'LS' → logprob: -4.181826114654541
    9. ' main' → logprob: -4.431826114654541
    10. 'int' → logprob: -4.931826114654541

Token 237: '_lines' (ID: 42980)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.03962622210383415
    2. 'line' → logprob: -4.289626121520996
    3. '_int' → logprob: -4.664626121520996
    4. '()' → logprob: -4.789626121520996
    5. '_string' → logprob: -5.664626121520996
    6. 'int' → logprob: -6.539626121520996
    7. '_' → logprob: -7.164626121520996
    8. '_input' → logprob: -7.414626121520996
    9. '_str' → logprob: -7.664626121520996
    10. '_list' → logprob: -8.664626121520996

Token 238: '_of' (ID: 8023)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0030071772634983063
    2. '()' → logprob: -5.878007411956787
    3. '():
' → logprob: -8.878006935119629
    4. ' ():' → logprob: -10.253006935119629
    5. ' ()' → logprob: -11.753006935119629
    6. '()>' → logprob: -12.753006935119629
    7. '_lines' → logprob: -12.878006935119629
    8. '_' → logprob: -12.878006935119629
    9. '_list' → logprob: -13.503006935119629
    10. '_line' → logprob: -14.003006935119629

Token 239: '_int' (ID: 12285)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.09395360946655273
    2. '_int' → logprob: -2.9689536094665527
    3. 'string' → logprob: -4.343953609466553
    4. 'code' → logprob: -5.343953609466553
    5. 'strings' → logprob: -5.343953609466553
    6. '_code' → logprob: -5.468953609466553
    7. 'str' → logprob: -5.468953609466553
    8. 'ints' → logprob: -5.968953609466553
    9. '_strings' → logprob: -6.968953609466553
    10. 'list' → logprob: -7.218953609466553

Token 240: '_lists' (ID: 93609)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.3758247494697571
    2. 's' → logprob: -1.2508246898651123
    3. '_lists' → logprob: -4.250824928283691
    4. '()' → logprob: -4.500824928283691
    5. 'ist' → logprob: -6.875824928283691
    6. 'list' → logprob: -7.875824928283691
    7. 'lists' → logprob: -9.750824928283691
    8. 't' → logprob: -10.125824928283691
    9. 'List' → logprob: -10.625824928283691
    10. 'st' → logprob: -10.625824928283691

Token 241: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0012083302717655897
    2. '():
' → logprob: -6.751208305358887
    3. ' ():' → logprob: -10.501208305358887
    4. '()' → logprob: -11.501208305358887
    5. '():

' → logprob: -15.501208305358887
    6. '():
' → logprob: -15.751208305358887
    7. '(name' → logprob: -17.126209259033203
    8. ' ()' → logprob: -17.126209259033203
    9. ':' → logprob: -18.126209259033203
    10. '(n' → logprob: -18.376209259033203

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08447932451963425
    2. '():' → logprob: -2.584479331970215
    3. ':' → logprob: -5.584479331970215
    4. 'return' → logprob: -7.459479331970215
    5. '():
' → logprob: -7.459479331970215
    6. ' return' → logprob: -9.084479331970215
    7. '	return' → logprob: -9.334479331970215
    8. '()' → logprob: -9.334479331970215
    9. '[]' → logprob: -9.709479331970215
    10. ':
' → logprob: -9.959479331970215

Token 243: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31452813744544983
    2. '   ' → logprob: -1.3145281076431274
    3. ' return' → logprob: -6.689527988433838
    4. '	return' → logprob: -11.564528465270996
    5. 'def' → logprob: -12.189528465270996
    6. 'n' → logprob: -13.189528465270996
    7. ' ' → logprob: -13.814528465270996
    8. '[]' → logprob: -14.439528465270996
    9. ':return' → logprob: -14.439528465270996
    10. '   ' → logprob: -14.564528465270996

Token 244: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.003105107694864273
    2. '[' → logprob: -6.003105163574219
    3. ' [' → logprob: -7.753105163574219
    4. '[List' → logprob: -8.753105163574219
    5. '[int' → logprob: -10.878105163574219
    6. '[line' → logprob: -11.378105163574219
    7. '[len' → logprob: -12.378105163574219
    8. 'list' → logprob: -12.503105163574219
    9. '[]' → logprob: -13.753105163574219
    10. '[L' → logprob: -14.253105163574219

Token 245: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -9.372294698550832e-06
    2. 'LI' → logprob: -11.875009536743164
    3. ' list' → logprob: -13.625009536743164
    4. '(list' → logprob: -15.000009536743164
    5. '[list' → logprob: -15.125009536743164
    6. ']' → logprob: -16.000009536743164
    7. 'li' → logprob: -16.125009536743164
    8. '[' → logprob: -16.875009536743164
    9. '	list' → logprob: -17.375009536743164
    10. 'List' → logprob: -17.375009536743164

Token 246: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.7835754988482222e-05
    2. '(' → logprob: -11.000018119812012
    3. 'map' → logprob: -14.000018119812012
    4. '(
' → logprob: -16.125017166137695
    5. ' (' → logprob: -16.500017166137695
    6. '(int' → logprob: -17.875017166137695
    7. '	map' → logprob: -18.000017166137695
    8. '()' → logprob: -18.625017166137695
    9. '.map' → logprob: -18.875017166137695
    10. '<|end|>' → logprob: -18.875017166137695

Token 247: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015539054293185472
    2. 'int' → logprob: -6.501554012298584
    3. '[int' → logprob: -11.501553535461426
    4. '(lambda' → logprob: -11.501553535461426
    5. '=int' → logprob: -11.626553535461426
    6. '<int' → logprob: -11.751553535461426
    7. ',int' → logprob: -12.376553535461426
    8. ']int' → logprob: -12.626553535461426
    9. ' int' → logprob: -13.001553535461426
    10. '(' → logprob: -13.251553535461426

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014666540082544088
    2. ',l' → logprob: -6.626466751098633
    3. ' ,' → logprob: -9.751466751098633
    4. ',line' → logprob: -10.251466751098633
    5. '(l' → logprob: -10.876466751098633
    6. '(' → logprob: -11.751466751098633
    7. ',(' → logprob: -11.751466751098633
    8. ',int' → logprob: -13.001466751098633
    9. ',s' → logprob: -13.126466751098633
    10. ',x' → logprob: -14.126466751098633

Token 249: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.20686760544776917
    2. 'line' → logprob: -1.7068675756454468
    3. ' l' → logprob: -5.581867694854736
    4. 're' → logprob: -7.081867694854736
    5. ' line' → logprob: -7.331867694854736
    6. 'sys' → logprob: -9.581867218017578
    7. 's' → logprob: -10.081867218017578
    8. 'x' → logprob: -10.331867218017578
    9. 'list' → logprob: -12.081867218017578
    10. ' sys' → logprob: -12.831867218017578

Token 250: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.6452302932739258
    2. '().' → logprob: -0.7702302932739258
    3. '.' → logprob: -5.145230293273926
    4. '(sys' → logprob: -6.020230293273926
    5. '.strip' → logprob: -6.395230293273926
    6. '=sys' → logprob: -7.395230293273926
    7. ' .' → logprob: -7.770230293273926
    8. '.l' → logprob: -8.270230293273926
    9. '.rstrip' → logprob: -8.270230293273926
    10. '()' → logprob: -8.270230293273926

Token 251: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.001168556627817452
    2. '))' → logprob: -6.876168727874756
    3. '()' → logprob: -9.001168251037598
    4. '()))
' → logprob: -12.001168251037598
    5. '()[' → logprob: -13.251168251037598
    6. '())).' → logprob: -13.751168251037598
    7. '().' → logprob: -14.001168251037598
    8. '()
' → logprob: -14.001168251037598
    9. '())' → logprob: -14.126168251037598
    10. '(' → logprob: -15.126168251037598

Token 252: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3374706506729126
    2. '()' → logprob: -1.8374706506729126
    3. ' for' → logprob: -2.087470531463623
    4. '(sys' → logprob: -5.837470531463623
    5. '   ' → logprob: -8.837471008300781
    6. '(' → logprob: -9.962471008300781
    7. ')' → logprob: -10.587471008300781
    8. '()]' → logprob: -10.712471008300781
    9. '())' → logprob: -11.337471008300781
    10. 'sys' → logprob: -11.962471008300781

Token 253: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.014604497700929642
    2. ' sys' → logprob: -4.264604568481445
    3. 'l' → logprob: -7.764604568481445
    4. ' l' → logprob: -12.264604568481445
    5. '(sys' → logprob: -12.514604568481445
    6. '	sys' → logprob: -12.764604568481445
    7. '=sys' → logprob: -12.889604568481445
    8. '_' → logprob: -13.889604568481445
    9. 'open' → logprob: -14.514604568481445
    10. 'line' → logprob: -14.764604568481445

Token 254: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28123196959495544
    2. 'in' → logprob: -1.4062319993972778
    3. 'n' → logprob: -10.531231880187988
    4. 'l' → logprob: -11.031231880187988
    5. 's' → logprob: -11.156231880187988
    6. 'import' → logprob: -11.906231880187988
    7. 'sys' → logprob: -12.531231880187988
    8. 'i' → logprob: -12.781231880187988
    9. ' ' → logprob: -13.406231880187988
    10. 'In' → logprob: -13.656231880187988

Token 255: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0019320894498378038
    2. ' sys' → logprob: -6.251932144165039
    3. '(sys' → logprob: -13.501932144165039
    4. 'open' → logprob: -13.876932144165039
    5. '	sys' → logprob: -14.376932144165039
    6. '=sys' → logprob: -14.751932144165039
    7. '   ' → logprob: -17.37693214416504
    8. 'iter' → logprob: -17.50193214416504
    9. '```' → logprob: -17.75193214416504
    10. ' ' → logprob: -18.00193214416504

Token 256: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.8351892473874614e-05
    2. 'stdin' → logprob: -10.750048637390137
    3. '._' → logprob: -11.250048637390137
    4. 'in' → logprob: -11.875048637390137
    5. '.in' → logprob: -13.375048637390137
    6. '_.' → logprob: -13.375048637390137
    7. '.stdout' → logprob: -13.875048637390137
    8. '.' → logprob: -13.875048637390137
    9. '.std' → logprob: -15.125048637390137
    10. ' .' → logprob: -15.375048637390137

Token 257: '.readlines' (ID: 92237)
  Prédit: '.readlines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.002492183819413185
    2. '.readline' → logprob: -6.0024919509887695
    3. '.' → logprob: -11.25249195098877
    4. 'read' → logprob: -13.12749195098877
    5. 'lines' → logprob: -13.50249195098877
    6. '.read' → logprob: -16.002492904663086
    7. 'reads' → logprob: -17.002492904663086
    8. '.stdin' → logprob: -17.377492904663086
    9. '.lines' → logprob: -17.627492904663086
    10. 'reader' → logprob: -18.502492904663086

Token 258: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -4.596781946020201e-05
    2. '()' → logprob: -10.000045776367188
    3. ']' → logprob: -15.375045776367188
    4. '()}' → logprob: -16.250045776367188
    5. '())' → logprob: -16.375045776367188
    6. '()]
' → logprob: -17.000045776367188
    7. '()],' → logprob: -17.625045776367188
    8. ']()' → logprob: -18.000045776367188
    9. '()[' → logprob: -18.250045776367188
    10. '()][' → logprob: -18.375045776367188

Token 259: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0005567280459217727
    2. ']' → logprob: -7.500556945800781
    3. ')]' → logprob: -12.875556945800781
    4. ']()' → logprob: -14.250556945800781
    5. '()' → logprob: -14.750556945800781
    6. '())' → logprob: -17.12555694580078
    7. '()]
' → logprob: -17.12555694580078
    8. ' ]' → logprob: -19.25055694580078
    9. '(' → logprob: -19.25055694580078
    10. '()][' → logprob: -19.37555694580078

Token 260: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.741137283621356e-05
    2. '\' → logprob: -10.250057220458984
    3. '<|end|>' → logprob: -11.375057220458984
    4. '#' → logprob: -12.000057220458984
    5. 'ndef' → logprob: -13.875057220458984
    6. '<|end|>' → logprob: -14.500057220458984
    7. '\n' → logprob: -14.750057220458984
    8. 'de' → logprob: -14.875057220458984
    9. ' def' → logprob: -15.000057220458984
    10. '```' → logprob: -15.125057220458984

Token 261: ' LI' (ID: 14875)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5061444044113159
    2. ' read' → logprob: -1.631144404411316
    3. ' input' → logprob: -2.7561445236206055
    4. 'main' → logprob: -2.7561445236206055
    5. 'read' → logprob: -3.1311445236206055
    6. 'input' → logprob: -4.1311445236206055
    7. ' readline' → logprob: -6.0061445236206055
    8. ' print' → logprob: -6.0061445236206055
    9. 'print' → logprob: -6.7561445236206055
    10. 'S' → logprob: -7.7561445236206055

Token 262: '_' (ID: 62)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7864382266998291
    2. '()' → logprob: -1.661438226699829
    3. 'ne' → logprob: -1.911438226699829
    4. 'n' → logprob: -2.911438226699829
    5. 'ST' → logprob: -3.161438226699829
    6. '():' → logprob: -3.286438226699829
    7. 'st' → logprob: -3.411438226699829
    8. 'S' → logprob: -4.16143798828125
    9. 'NE' → logprob: -5.16143798828125
    10. '_' → logprob: -5.41143798828125

Token 263: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5750190019607544
    2. 'n' → logprob: -1.9500190019607544
    3. '1' → logprob: -2.575018882751465
    4. 'p' → logprob: -2.825018882751465
    5. 'nt' → logprob: -2.950018882751465
    6. 'strip' → logprob: -3.075018882751465
    7. '0' → logprob: -3.200018882751465
    8. 'input' → logprob: -3.200018882751465
    9. 's' → logprob: -3.450018882751465
    10. 'str' → logprob: -3.950018882751465

Token 264: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03727883845567703
    2. '():
' → logprob: -3.412278890609741
    3. '()' → logprob: -5.787278652191162
    4. '()[' → logprob: -7.787278652191162
    5. ' ():' → logprob: -9.53727912902832
    6. '():
' → logprob: -11.16227912902832
    7. 'def' → logprob: -11.78727912902832
    8. ':' → logprob: -11.78727912902832
    9. ' ()' → logprob: -11.91227912902832
    10. '[]' → logprob: -12.28727912902832

Token 265: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024262698367238045
    2. ' return' → logprob: -3.8992626667022705
    3. 'list' → logprob: -6.52426290512085
    4. 'eturn' → logprob: -6.64926290512085
    5. 'def' → logprob: -7.52426290512085
    6. '[]' → logprob: -9.149262428283691
    7. '()' → logprob: -9.649262428283691
    8. '[' → logprob: -9.899262428283691
    9. ':return' → logprob: -9.899262428283691
    10. 'map' → logprob: -10.399262428283691

Token 266: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.005534692667424679
    2. '[list' → logprob: -5.255534648895264
    3. ' list' → logprob: -8.755535125732422
    4. '[int' → logprob: -9.005535125732422
    5. ' [' → logprob: -11.380535125732422
    6. 'map' → logprob: -12.505535125732422
    7. '[i' → logprob: -12.880535125732422
    8. '[len' → logprob: -14.130535125732422
    9. '(list' → logprob: -14.505535125732422
    10. '[x' → logprob: -15.130535125732422

Token 267: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01157575286924839
    2. 'x' → logprob: -4.511575698852539
    3. 'i' → logprob: -7.636575698852539
    4. 'a' → logprob: -10.261575698852539
    5. '(int' → logprob: -12.386575698852539
    6. '[int' → logprob: -13.386575698852539
    7. ' int' → logprob: -13.636575698852539
    8. 'ii' → logprob: -14.261575698852539
    9. '0' → logprob: -14.511575698852539
    10. 'I' → logprob: -15.136575698852539

Token 268: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0066098603419959545
    2. '(sys' → logprob: -5.631609916687012
    3. '(s' → logprob: -6.131609916687012
    4. '(i' → logprob: -7.131609916687012
    5. '(' → logprob: -11.131609916687012
    6. '(a' → logprob: -11.631609916687012
    7. '(_)' → logprob: -12.631609916687012
    8. '(n' → logprob: -13.756609916687012
    9. 's' → logprob: -13.756609916687012
    10. '(input' → logprob: -14.006609916687012

Token 269: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032253677491098642
    2. ')-' → logprob: -6.253225326538086
    3. '())' → logprob: -6.753225326538086
    4. ')+' → logprob: -9.753225326538086
    5. '.strip' → logprob: -10.503225326538086
    6. ' )' → logprob: -11.128225326538086
    7. 'sys' → logprob: -11.503225326538086
    8. '()' → logprob: -11.628225326538086
    9. '-' → logprob: -13.378225326538086
    10. '.rstrip' → logprob: -14.003225326538086

Token 270: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.625024795532227
    3. 'for' → logprob: -16.000024795532227
    4. ' for' → logprob: -16.125024795532227
    5. '   ' → logprob: -17.125024795532227
    6. 'x' → logprob: -18.875024795532227
    7. 'int' → logprob: -18.875024795532227
    8. '  ' → logprob: -19.125024795532227
    9. ')' → logprob: -19.375024795532227
    10. ' sys' → logprob: -19.625024795532227

Token 271: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23488904535770416
    2. ' for' → logprob: -1.984889030456543
    3. '()' → logprob: -2.734889030456543
    4. '(x' → logprob: -4.984889030456543
    5. 'x' → logprob: -9.734889030456543
    6. ')' → logprob: -9.984889030456543
    7. 'in' → logprob: -10.359889030456543
    8. '(' → logprob: -10.859889030456543
    9. '	for' → logprob: -11.234889030456543
    10. ' ' → logprob: -11.734889030456543

Token 272: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.020542588084936142
    2. 'x' → logprob: -3.895542621612549
    3. '	x' → logprob: -14.77054214477539
    4. ' ' → logprob: -15.64554214477539
    5. ' ' → logprob: -16.52054214477539
    6. ' sys' → logprob: -17.02054214477539
    7. '(x' → logprob: -17.52054214477539
    8. '  ' → logprob: -17.89554214477539
    9. '
' → logprob: -18.14554214477539
    10. '_' → logprob: -18.64554214477539

Token 273: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17977668344974518
    2. 'in' → logprob: -1.804776668548584
    3. 'x' → logprob: -11.054777145385742
    4. 'n' → logprob: -12.429777145385742
    5. 'import' → logprob: -12.804777145385742
    6. 's' → logprob: -12.929777145385742
    7. '	in' → logprob: -13.554777145385742
    8. 'inx' → logprob: -13.929777145385742
    9. 'In' → logprob: -14.304777145385742
    10. 'inp' → logprob: -14.429777145385742

Token 274: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.08061593770980835
    2. ' sys' → logprob: -2.580615997314453
    3. 'LI' → logprob: -6.580615997314453
    4. ' LI' → logprob: -8.455615997314453
    5. 'read' → logprob: -9.955615997314453
    6. '(sys' → logprob: -10.205615997314453
    7. 'input' → logprob: -10.955615997314453
    8. ' read' → logprob: -12.205615997314453
    9. '=sys' → logprob: -12.830615997314453
    10. ' input' → logprob: -12.830615997314453

Token 275: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0005146674811840057
    2. 'stdin' → logprob: -7.625514507293701
    3. '.readline' → logprob: -11.00051498413086
    4. '.stdout' → logprob: -12.12551498413086
    5. '.argv' → logprob: -13.00051498413086
    6. '(stdin' → logprob: -13.87551498413086
    7. 'in' → logprob: -15.00051498413086
    8. '.' → logprob: -15.37551498413086
    9. '.std' → logprob: -15.62551498413086
    10. '```' → logprob: -16.00051498413086

Token 276: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.4498052223643754e-05
    2. '.readlines' → logprob: -11.750014305114746
    3. '.stdin' → logprob: -12.250014305114746
    4. '.' → logprob: -13.375014305114746
    5. ' readline' → logprob: -17.125015258789062
    6. '.read' → logprob: -17.500015258789062
    7. 'stdin' → logprob: -18.375015258789062
    8. '().' → logprob: -18.875015258789062
    9. '._' → logprob: -19.375015258789062
    10. '.stdout' → logprob: -20.000015258789062

Token 277: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.061054359131958e-06
    2. '()' → logprob: -11.750007629394531
    3. ' ().' → logprob: -17.00000762939453
    4. '()]' → logprob: -18.12500762939453
    5. '())' → logprob: -18.37500762939453
    6. '(' → logprob: -19.12500762939453
    7. '().__' → logprob: -19.87500762939453
    8. '()].' → logprob: -20.00000762939453
    9. '()[' → logprob: -20.37500762939453
    10. '()).' → logprob: -21.25000762939453

Token 278: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.1015029326081276
    2. 'strip' → logprob: -2.3515028953552246
    3. 'rstrip' → logprob: -6.726502895355225
    4. 'read' → logprob: -9.851503372192383
    5. ' split' → logprob: -10.226503372192383
    6. ' strip' → logprob: -12.476503372192383
    7. 'decode' → logprob: -12.601503372192383
    8. ' ' → logprob: -15.601503372192383
    9. 'spl' → logprob: -15.726503372192383
    10. '(split' → logprob: -15.726503372192383

Token 279: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00016063073417171836
    2. '()' → logprob: -8.750160217285156
    3. '())' → logprob: -13.500160217285156
    4. ']' → logprob: -14.875160217285156
    5. '()]
' → logprob: -16.500160217285156
    6. '(' → logprob: -16.500160217285156
    7. '()}' → logprob: -17.250160217285156
    8. ')]' → logprob: -17.375160217285156
    9. ' ()' → logprob: -17.500160217285156
    10. '()][' → logprob: -17.875160217285156

Token 280: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10063600540161133
    2. '()]' → logprob: -2.3506360054016113
    3. ']()' → logprob: -8.100635528564453
    4. ')]' → logprob: -9.100635528564453
    5. '()' → logprob: -11.725635528564453
    6. ')' → logprob: -12.725635528564453
    7. ' ]' → logprob: -13.225635528564453
    8. '])' → logprob: -13.725635528564453
    9. '`]' → logprob: -16.475635528564453
    10. ']
' → logprob: -16.600635528564453

Token 281: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005675753112882376
    2. ':' → logprob: -5.755675792694092
    3. 'd' → logprob: -6.630675792694092
    4. '\' → logprob: -8.005675315856934
    5. ')' → logprob: -8.130675315856934
    6. ':def' → logprob: -8.880675315856934
    7. '(' → logprob: -9.255675315856934
    8. '#' → logprob: -9.505675315856934
    9. 'D' → logprob: -9.755675315856934
    10. 'de' → logprob: -10.005675315856934

Token 282: ' read' (ID: 1729)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.42433708906173706
    2. 'read' → logprob: -1.4243371486663818
    3. 'II' → logprob: -3.299337148666382
    4. 'LS' → logprob: -3.674337148666382
    5. ' read' → logprob: -3.924337148666382
    6. 'SI' → logprob: -5.299336910247803
    7. ' I' → logprob: -5.674336910247803
    8. 'input' → logprob: -5.674336910247803
    9. 'S' → logprob: -5.924336910247803
    10. 'int' → logprob: -6.549336910247803

Token 283: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08098296821117401
    2. '()' → logprob: -3.4559829235076904
    3. '_line' → logprob: -3.8309829235076904
    4. '(' → logprob: -4.3309831619262695
    5. '_lines' → logprob: -5.8309831619262695
    6. 'int' → logprob: -5.9559831619262695
    7. '_int' → logprob: -6.2059831619262695
    8. 'line' → logprob: -6.8309831619262695
    9. 's' → logprob: -7.3309831619262695
    10. '_string' → logprob: -7.7059831619262695

Token 284: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.07467836886644363
    2. '()' → logprob: -2.949678421020508
    3. 's' → logprob: -4.699678421020508
    4. '<|end|>' → logprob: -4.949678421020508
    5. '_lists' → logprob: -6.449678421020508
    6. '_' → logprob: -6.949678421020508
    7. '<|end|>' → logprob: -7.949678421020508
    8. 'list' → logprob: -8.574678421020508
    9. 'List' → logprob: -9.199678421020508
    10. '_line' → logprob: -10.699678421020508

Token 285: '_minus' (ID: 101055)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0011341434437781572
    2. '()' → logprob: -7.126133918762207
    3. '():
' → logprob: -8.126133918762207
    4. ' ():' → logprob: -12.001133918762207
    5. '()>' → logprob: -12.001133918762207
    6. 's' → logprob: -12.251133918762207
    7. '():

' → logprob: -12.501133918762207
    8. ' ()' → logprob: -12.626133918762207
    9. '_list' → logprob: -13.126133918762207
    10. '()[' → logprob: -13.626133918762207

Token 286: '_' (ID: 62)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6616743803024292
    2. '_' → logprob: -0.7866743803024292
    3. '()' → logprob: -4.411674499511719
    4. '_one' → logprob: -4.661674499511719
    5. 'one' → logprob: -5.161674499511719
    6. 'One' → logprob: -6.786674499511719
    7. '=' → logprob: -9.786674499511719
    8. ' one' → logprob: -10.911674499511719
    9. '_list' → logprob: -11.036674499511719
    10. ' ' → logprob: -11.161674499511719

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002070206217467785
    2. 'one' → logprob: -6.627070426940918
    3. '_' → logprob: -7.627070426940918
    4. '_one' → logprob: -8.377070426940918
    5. '()' → logprob: -10.752070426940918
    6. 'One' → logprob: -12.877070426940918
    7. ' one' → logprob: -14.502070426940918
    8. '(' → logprob: -15.127070426940918
    9. '```' → logprob: -15.127070426940918
    10. 'a' → logprob: -15.502070426940918

Token 288: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0004427051462698728
    2. '()' → logprob: -8.250442504882812
    3. '():
' → logprob: -8.625442504882812
    4. ' ():' → logprob: -13.625442504882812
    5. '():
' → logprob: -15.250442504882812
    6. '():

' → logprob: -15.250442504882812
    7. 'def' → logprob: -16.625442504882812
    8. '()>' → logprob: -17.375442504882812
    9. '();' → logprob: -17.500442504882812
    10. ' ()' → logprob: -17.875442504882812

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5806668996810913
    2. 'return' → logprob: -0.8306668996810913
    3. ' return' → logprob: -5.455667018890381
    4. '	return' → logprob: -8.330666542053223
    5. ' ' → logprob: -9.205666542053223
    6. '()' → logprob: -9.705666542053223
    7. ':return' → logprob: -11.205666542053223
    8. '()
' → logprob: -12.080666542053223
    9. ')' → logprob: -12.080666542053223
    10. '
' → logprob: -12.205666542053223

Token 290: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -7.76759916334413e-05
    2. ' return' → logprob: -9.500077247619629
    3. '   ' → logprob: -13.250077247619629
    4. '	return' → logprob: -15.125077247619629
    5. '
' → logprob: -15.375077247619629
    6. ':return' → logprob: -15.375077247619629
    7. 'eturn' → logprob: -16.750078201293945
    8. ' ' → logprob: -17.125078201293945
    9. '{return' → logprob: -17.125078201293945
    10. 'def' → logprob: -17.125078201293945

Token 291: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.16178467869758606
    2. ' [' → logprob: -2.4117846488952637
    3. '[' → logprob: -3.4117846488952637
    4. '[list' → logprob: -3.6617846488952637
    5. 'list' → logprob: -7.036784648895264
    6. '[List' → logprob: -9.661785125732422
    7. ' list' → logprob: -10.036785125732422
    8. '[Int' → logprob: -10.536785125732422
    9. '[i' → logprob: -11.786785125732422
    10. '[len' → logprob: -12.036785125732422

Token 292: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: 0.0
    2. '[int' → logprob: -18.375
    3. '(int' → logprob: -18.5
    4. 'x' → logprob: -19.375
    5. ' int' → logprob: -19.5
    6. '
' → logprob: -19.75
    7. '   ' → logprob: -20.625
    8. '<int' → logprob: -21.5
    9. '```' → logprob: -21.5
    10. ']int' → logprob: -22.0

Token 293: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.500001907348633
    3. 'x' → logprob: -14.750001907348633
    4. '(sys' → logprob: -15.250001907348633
    5. ' (' → logprob: -16.000001907348633
    6. '(
' → logprob: -17.500001907348633
    7. 'sys' → logprob: -17.625001907348633
    8. '```' → logprob: -17.750001907348633
    9. 's' → logprob: -18.500001907348633
    10. '(s' → logprob: -18.625001907348633

Token 294: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.08510084450244904
    2. '(x' → logprob: -2.5851008892059326
    3. '(sys' → logprob: -5.5851006507873535
    4. ')' → logprob: -6.8351006507873535
    5. '()-' → logprob: -6.8351006507873535
    6. '-' → logprob: -9.585101127624512
    7. 'sys' → logprob: -9.960101127624512
    8. '=sys' → logprob: -9.960101127624512
    9. '(s' → logprob: -10.335101127624512
    10. '()' → logprob: -10.710101127624512

Token 295: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '<|end|>' → logprob: -16.75
    4. '   ' → logprob: -19.875
    5. 'for' → logprob: -20.875
    6. '<|end|>' → logprob: -21.375
    7. '１' → logprob: -21.625
    8. '```' → logprob: -21.75
    9. '-' → logprob: -22.0
    10. '
' → logprob: -22.25

Token 296: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20141762495040894
    2. 'for' → logprob: -1.7014176845550537
    3. '	for' → logprob: -12.451417922973633
    4. '   ' → logprob: -15.951417922973633
    5. ')' → logprob: -16.576417922973633
    6. '()' → logprob: -16.951417922973633
    7. ' ' → logprob: -16.951417922973633
    8. ' in' → logprob: -17.076417922973633
    9. 'in' → logprob: -18.076417922973633
    10. '    ' → logprob: -18.951417922973633

Token 297: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018152866512537003
    2. ' x' → logprob: -4.018152713775635
    3. 'sys' → logprob: -13.018153190612793
    4. ' sys' → logprob: -14.143153190612793
    5. ' ' → logprob: -18.893152236938477
    6. 'in' → logprob: -18.893152236938477
    7. ' in' → logprob: -19.393152236938477
    8. '(x' → logprob: -19.518152236938477
    9. '	x' → logprob: -20.393152236938477
    10. '_' → logprob: -20.518152236938477

Token 298: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3873097002506256
    2. 'in' → logprob: -1.1373096704483032
    3. 'n' → logprob: -8.512310028076172
    4. 'x' → logprob: -8.637310028076172
    5. 's' → logprob: -10.262310028076172
    6. 'sys' → logprob: -11.512310028076172
    7. 'i' → logprob: -11.762310028076172
    8. ' x' → logprob: -13.887310028076172
    9. 'ins' → logprob: -14.012310028076172
    10. ' ' → logprob: -14.137310028076172

Token 299: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011048642918467522
    2. ' sys' → logprob: -4.511048793792725
    3. '(sys' → logprob: -14.761048316955566
    4. '=sys' → logprob: -16.011049270629883
    5. 'system' → logprob: -16.386049270629883
    6. '	sys' → logprob: -16.386049270629883
    7. 's' → logprob: -18.011049270629883
    8. '.sys' → logprob: -18.761049270629883
    9. 'x' → logprob: -18.761049270629883
    10. 'string' → logprob: -19.261049270629883

Token 300: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0019305398454889655
    2. 'stdin' → logprob: -6.2519307136535645
    3. '.stdout' → logprob: -13.626930236816406
    4. 'in' → logprob: -15.126930236816406
    5. '.argv' → logprob: -15.751930236816406
    6. '(stdin' → logprob: -16.126930236816406
    7. '.readline' → logprob: -16.376930236816406
    8. ' stdin' → logprob: -16.501930236816406
    9. '.std' → logprob: -17.876930236816406
    10. '.stderr' → logprob: -19.001930236816406

Token 301: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004316418431699276
    2. '.stdin' → logprob: -5.629316329956055
    3. 'stdin' → logprob: -7.254316329956055
    4. '.' → logprob: -12.504316329956055
    5. '.stdout' → logprob: -13.254316329956055
    6. '(stdin' → logprob: -13.254316329956055
    7. ' readline' → logprob: -14.379316329956055
    8. '.readlines' → logprob: -14.379316329956055
    9. 'stdout' → logprob: -15.629316329956055
    10. '```' → logprob: -15.629316329956055

Token 302: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.688212614681106e-05
    2. '()' → logprob: -11.000017166137695
    3. '()[' → logprob: -17.750017166137695
    4. '(' → logprob: -17.875017166137695
    5. '()).' → logprob: -17.875017166137695
    6. ' ().' → logprob: -18.000017166137695
    7. '()
' → logprob: -18.625017166137695
    8. '.split' → logprob: -18.625017166137695
    9. '()].' → logprob: -18.750017166137695
    10. '().__' → logprob: -19.250017166137695

Token 303: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.5776860184123507e-06
    2. 'strip' → logprob: -13.00000286102295
    3. ' split' → logprob: -15.25000286102295
    4. 'read' → logprob: -16.750001907348633
    5. 'rstrip' → logprob: -17.750001907348633
    6. 'spl' → logprob: -18.250001907348633
    7. 'decode' → logprob: -19.250001907348633
    8. '(split' → logprob: -19.750001907348633
    9. '.split' → logprob: -20.625001907348633
    10. '```' → logprob: -20.875001907348633

Token 304: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00012415809032972902
    2. '()' → logprob: -9.000123977661133
    3. '())' → logprob: -14.250123977661133
    4. '()]
' → logprob: -16.750123977661133
    5. '()}' → logprob: -16.750123977661133
    6. '()][' → logprob: -17.875123977661133
    7. ']' → logprob: -18.000123977661133
    8. '()],' → logprob: -18.500123977661133
    9. ' ()' → logprob: -18.750123977661133
    10. '()].' → logprob: -19.250123977661133

Token 305: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0007501865038648248
    2. ']' → logprob: -7.2507500648498535
    3. ')]' → logprob: -10.375750541687012
    4. ']()' → logprob: -12.125750541687012
    5. '()' → logprob: -12.750750541687012
    6. '()]
' → logprob: -14.625750541687012
    7. '())' → logprob: -15.500750541687012
    8. '`]' → logprob: -17.375749588012695
    9. '()][' → logprob: -18.500749588012695
    10. ')' → logprob: -18.625749588012695

Token 306: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.68153518543113e-05
    2. 'd' → logprob: -10.625057220458984
    3. '#' → logprob: -10.750057220458984
    4. 'class' → logprob: -12.625057220458984
    5. '\' → logprob: -12.750057220458984
    6. 'de' → logprob: -13.250057220458984
    7. 'ndef' → logprob: -14.250057220458984
    8. 'D' → logprob: -14.500057220458984
    9. ':def' → logprob: -15.500057220458984
    10. '```' → logprob: -15.625057220458984

Token 307: ' LF' (ID: 107653)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.9117637276649475
    2. 'read' → logprob: -1.5367636680603027
    3. 'S' → logprob: -2.1617636680603027
    4. 'I' → logprob: -2.5367636680603027
    5. ' input' → logprob: -3.2867636680603027
    6. 'input' → logprob: -3.4117636680603027
    7. ' S' → logprob: -3.6617636680603027
    8. 'SI' → logprob: -4.161763668060303
    9. 'int' → logprob: -4.286763668060303
    10. 'LS' → logprob: -4.536763668060303

Token 308: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.014714336954057217
    2. '():
' → logprob: -4.264714241027832
    3. '()' → logprob: -7.514714241027832
    4. '():

' → logprob: -13.139714241027832
    5. ' ():' → logprob: -13.639714241027832
    6. '():
' → logprob: -13.889714241027832
    7. '()>' → logprob: -14.389714241027832
    8. '()):
' → logprob: -15.139714241027832
    9. 'def' → logprob: -15.264714241027832
    10. ' ()' → logprob: -16.26471519470215

Token 309: '   ' (ID: 271)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.6932930946350098
    2. '():' → logprob: -0.6932930946350098
    3. '()' → logprob: -9.193292617797852
    4. '():
' → logprob: -10.318292617797852
    5. 'def' → logprob: -12.193292617797852
    6. ' ():' → logprob: -12.693292617797852
    7. '():

' → logprob: -13.818292617797852
    8. '):
' → logprob: -14.318292617797852
    9. '):' → logprob: -14.568292617797852
    10. '()):
' → logprob: -15.318292617797852

Token 310: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01041909959167242
    2. 'list' → logprob: -4.760418891906738
    3. ' return' → logprob: -6.385418891906738
    4. ' list' → logprob: -9.885418891906738
    5. 'def' → logprob: -10.010418891906738
    6. '   ' → logprob: -11.510418891906738
    7. 'map' → logprob: -11.885418891906738
    8. 'float' → logprob: -13.385418891906738
    9. 'lambda' → logprob: -13.885418891906738
    10. '()' → logprob: -14.010418891906738

Token 311: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.5048530030981055e-06
    2. ' list' → logprob: -13.500001907348633
    3. 'map' → logprob: -16.500001907348633
    4. 'float' → logprob: -18.625001907348633
    5. '[' → logprob: -18.875001907348633
    6. '[list' → logprob: -19.250001907348633
    7. '   ' → logprob: -20.750001907348633
    8. '	list' → logprob: -21.875001907348633
    9. 'List' → logprob: -23.000001907348633
    10. '=list' → logprob: -24.000001907348633

Token 312: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -3.054500666621607e-06
    2. ' float' → logprob: -12.75000286102295
    3. 'int' → logprob: -17.625003814697266
    4. 'flo' → logprob: -17.875003814697266
    5. '	float' → logprob: -19.375003814697266
    6. 'loat' → logprob: -19.500003814697266
    7. '(float' → logprob: -20.125003814697266
    8. '
' → logprob: -20.375003814697266
    9. 'fl' → logprob: -20.375003814697266
    10. '```' → logprob: -20.750003814697266

Token 313: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.664371848164592e-05
    2. '(' → logprob: -11.625016212463379
    3. ']' → logprob: -12.500016212463379
    4. ' (' → logprob: -12.750016212463379
    5. '](' → logprob: -14.750016212463379
    6. '(s' → logprob: -15.500016212463379
    7. '(i' → logprob: -16.250017166137695
    8. '(
' → logprob: -16.500017166137695
    9. '
' → logprob: -17.125017166137695
    10. 'x' → logprob: -17.125017166137695

Token 314: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3959026634693146
    2. '()' → logprob: -1.2709026336669922
    3. '(x' → logprob: -3.645902633666992
    4. 'for' → logprob: -4.395902633666992
    5. ' for' → logprob: -5.770902633666992
    6. '(' → logprob: -5.770902633666992
    7. ' ()' → logprob: -7.395902633666992
    8. '(s' → logprob: -7.770902633666992
    9. 's' → logprob: -8.395902633666992
    10. ' (' → logprob: -9.645902633666992

Token 315: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.37399277091026306
    2. ' for' → logprob: -1.2489928007125854
    3. '()' → logprob: -3.998992681503296
    4. ')' → logprob: -5.123992919921875
    5. ' in' → logprob: -8.623992919921875
    6. 'in' → logprob: -8.623992919921875
    7. 'sys' → logprob: -8.748992919921875
    8. '(sys' → logprob: -8.998992919921875
    9. ' sys' → logprob: -9.623992919921875
    10. 's' → logprob: -9.748992919921875

Token 316: ' x' (ID: 1215)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.020787106826901436
    2. 'sys' → logprob: -3.895787000656128
    3. '=sys' → logprob: -8.645787239074707
    4. '(sys' → logprob: -10.520787239074707
    5. ' x' → logprob: -10.895787239074707
    6. '	sys' → logprob: -11.020787239074707
    7. ' ' → logprob: -13.395787239074707
    8. 'x' → logprob: -13.770787239074707
    9. ' system' → logprob: -13.895787239074707
    10. ' in' → logprob: -14.145787239074707

Token 317: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021924946922808886
    2. 'in' → logprob: -6.127192497253418
    3. '(' → logprob: -13.127192497253418
    4. 's' → logprob: -14.002192497253418
    5. '(x' → logprob: -14.127192497253418
    6. '(sys' → logprob: -14.127192497253418
    7. 'import' → logprob: -14.127192497253418
    8. '_' → logprob: -14.502192497253418
    9. '=sys' → logprob: -14.502192497253418
    10. 'x' → logprob: -15.127192497253418

Token 318: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.029757438227534294
    2. ' sys' → logprob: -3.529757499694824
    3. '(sys' → logprob: -12.279757499694824
    4. '	sys' → logprob: -13.154757499694824
    5. '=sys' → logprob: -15.029757499694824
    6. '
' → logprob: -16.904756546020508
    7. '.sys' → logprob: -17.529756546020508
    8. ' ' → logprob: -18.154756546020508
    9. '_sys' → logprob: -18.404756546020508
    10. '/sys' → logprob: -18.779756546020508

Token 319: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.4881879400927573e-05
    2. '().' → logprob: -11.000035285949707
    3. 'stdin' → logprob: -11.500035285949707
    4. '(stdin' → logprob: -12.500035285949707
    5. '.stdout' → logprob: -13.375035285949707
    6. '.readline' → logprob: -14.250035285949707
    7. 'in' → logprob: -14.250035285949707
    8. '.argv' → logprob: -14.250035285949707
    9. '.' → logprob: -14.625035285949707
    10. '.stderr' → logprob: -16.37503433227539

Token 320: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00022129806166049093
    2. '.stdin' → logprob: -8.500221252441406
    3. '.' → logprob: -11.125221252441406
    4. '().' → logprob: -13.250221252441406
    5. 'stdin' → logprob: -14.250221252441406
    6. '.readlines' → logprob: -15.250221252441406
    7. ' .' → logprob: -15.875221252441406
    8. '.stdout' → logprob: -16.250221252441406
    9. '```' → logprob: -16.375221252441406
    10. '(stdin' → logprob: -16.875221252441406

Token 321: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.246537173457909e-06
    2. '()' → logprob: -12.375003814697266
    3. ' ().' → logprob: -18.250003814697266
    4. '()]' → logprob: -18.875003814697266
    5. '()[' → logprob: -19.500003814697266
    6. '()].' → logprob: -20.125003814697266
    7. '(' → logprob: -20.625003814697266
    8. '())' → logprob: -20.750003814697266
    9. '.split' → logprob: -21.250003814697266
    10. '()).' → logprob: -22.000003814697266

Token 322: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00036049127811565995
    2. 'strip' → logprob: -8.000360488891602
    3. ' split' → logprob: -11.000360488891602
    4. 'rstrip' → logprob: -11.875360488891602
    5. 'read' → logprob: -13.750360488891602
    6. 'decode' → logprob: -15.750360488891602
    7. '.split' → logprob: -16.0003604888916
    8. '(split' → logprob: -17.2503604888916
    9. ' strip' → logprob: -17.5003604888916
    10. 'spl' → logprob: -17.7503604888916

Token 323: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -2.8325677703833207e-05
    2. '()' → logprob: -10.500028610229492
    3. '())' → logprob: -14.750028610229492
    4. ']' → logprob: -15.875028610229492
    5. '()]
' → logprob: -16.000028610229492
    6. '(' → logprob: -17.375028610229492
    7. ']()' → logprob: -18.250028610229492
    8. ' ()' → logprob: -18.375028610229492
    9. '()].' → logprob: -18.375028610229492
    10. '()}' → logprob: -18.500028610229492

Token 324: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.016802923753857613
    2. ']' → logprob: -4.391802787780762
    3. '()' → logprob: -5.766802787780762
    4. ')]' → logprob: -7.641802787780762
    5. ']()' → logprob: -8.016802787780762
    6. '())' → logprob: -8.516802787780762
    7. ')' → logprob: -8.891802787780762
    8. '])' → logprob: -12.141802787780762
    9. ' ]' → logprob: -15.391802787780762
    10. 'def' → logprob: -15.516802787780762

Token 325: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001487140398239717
    2. '#' → logprob: -9.50014877319336
    3. '\' → logprob: -10.12514877319336
    4. '\n' → logprob: -11.50014877319336
    5. 'd' → logprob: -12.25014877319336
    6. ' def' → logprob: -12.87514877319336
    7. '```' → logprob: -13.12514877319336
    8. '<|end|>' → logprob: -13.12514877319336
    9. 'D' → logprob: -13.37514877319336
    10. ':def' → logprob: -13.75014877319336

Token 326: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0366598516702652
    2. 'input' → logprob: -4.5366597175598145
    3. 'S' → logprob: -4.6616597175598145
    4. ' read' → logprob: -5.5366597175598145
    5. 'float' → logprob: -5.6616597175598145
    6. 'LS' → logprob: -6.2866597175598145
    7. 's' → logprob: -6.4116597175598145
    8. 'print' → logprob: -6.7866597175598145
    9. 'I' → logprob: -7.0366597175598145
    10. 'F' → logprob: -7.2866597175598145

Token 327: '_float' (ID: 44505)
  Prédit: '_float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_float' → logprob: -0.22542203962802887
    2. '_line' → logprob: -1.8504220247268677
    3. '_int' → logprob: -3.4754221439361572
    4. '_' → logprob: -5.725421905517578
    5. '_string' → logprob: -5.850421905517578
    6. 'line' → logprob: -6.225421905517578
    7. '_list' → logprob: -6.350421905517578
    8. '_str' → logprob: -6.725421905517578
    9. '_lines' → logprob: -7.100421905517578
    10. '_f' → logprob: -7.475421905517578

Token 328: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0049620321951806545
    2. '()' → logprob: -5.504961967468262
    3. '_' → logprob: -7.754961967468262
    4. 's' → logprob: -8.629961967468262
    5. 'list' → logprob: -9.254961967468262
    6. '_line' → logprob: -9.504961967468262
    7. '_lists' → logprob: -10.504961967468262
    8. '_array' → logprob: -10.754961967468262
    9. '_lst' → logprob: -11.629961967468262
    10. '_lista' → logprob: -11.754961967468262

Token 329: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003576304006855935
    2. '():
' → logprob: -8.000357627868652
    3. '()' → logprob: -10.750357627868652
    4. ' ():' → logprob: -14.500357627868652
    5. '():
' → logprob: -15.625357627868652
    6. '():

' → logprob: -16.50035858154297
    7. '()>' → logprob: -18.37535858154297
    8. '().' → logprob: -18.62535858154297
    9. '(' → logprob: -18.87535858154297
    10. '();' → logprob: -19.37535858154297

Token 330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0497267059981823
    2. 'return' → logprob: -3.049726724624634
    3. ' return' → logprob: -6.924726486206055
    4. '	return' → logprob: -9.674726486206055
    5. ' ' → logprob: -9.799726486206055
    6. '[]' → logprob: -11.174726486206055
    7. '()' → logprob: -11.674726486206055
    8. 'def' → logprob: -11.924726486206055
    9. '  ' → logprob: -13.174726486206055
    10. ':return' → logprob: -13.424726486206055

Token 331: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007454255828633904
    2. ' return' → logprob: -7.2507452964782715
    3. '   ' → logprob: -10.25074577331543
    4. ' ' → logprob: -16.50074577331543
    5. '	return' → logprob: -16.75074577331543
    6. 'def' → logprob: -17.87574577331543
    7. '
' → logprob: -18.87574577331543
    8. 'ret' → logprob: -19.25074577331543
    9. 'eturn' → logprob: -19.37574577331543
    10. '  ' → logprob: -19.50074577331543

Token 332: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012716623023152351
    2. ' [' → logprob: -7.001271724700928
    3. 'list' → logprob: -8.00127124786377
    4. ' list' → logprob: -10.87627124786377
    5. 'float' → logprob: -12.75127124786377
    6. '[list' → logprob: -13.62627124786377
    7. '[f' → logprob: -14.00127124786377
    8. '[List' → logprob: -15.12627124786377
    9. '[L' → logprob: -15.37627124786377
    10. '[line' → logprob: -15.75127124786377

Token 333: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.6240566083070007e-06
    2. ' float' → logprob: -13.625001907348633
    3. 'flo' → logprob: -15.375001907348633
    4. '(float' → logprob: -17.125001907348633
    5. 'f' → logprob: -18.250001907348633
    6. 'fl' → logprob: -19.000001907348633
    7. '	float' → logprob: -19.125001907348633
    8. '   ' → logprob: -20.000001907348633
    9. '<float' → logprob: -20.375001907348633
    10. 'x' → logprob: -20.375001907348633

Token 334: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.500004768371582
    3. ' (' → logprob: -14.250004768371582
    4. '(float' → logprob: -18.875003814697266
    5. '(s' → logprob: -19.375003814697266
    6. 'x' → logprob: -19.875003814697266
    7. '(
' → logprob: -20.125003814697266
    8. ']' → logprob: -20.125003814697266
    9. '(sys' → logprob: -20.250003814697266
    10. ' ' → logprob: -20.625003814697266

Token 335: ')' (ID: 8)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6642314791679382
    2. ')' → logprob: -1.039231538772583
    3. 'for' → logprob: -2.039231538772583
    4. ' for' → logprob: -6.664231300354004
    5. ' ' → logprob: -10.039231300354004
    6. '(' → logprob: -10.664231300354004
    7. 'in' → logprob: -10.914231300354004
    8. 's' → logprob: -11.039231300354004
    9. '   ' → logprob: -11.164231300354004
    10. ']' → logprob: -11.414231300354004

Token 336: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05436837673187256
    2. '(x' → logprob: -3.179368495941162
    3. ' for' → logprob: -4.554368495941162
    4. ')' → logprob: -7.554368495941162
    5. '(' → logprob: -8.804368019104004
    6. '()' → logprob: -9.429368019104004
    7. ']' → logprob: -11.679368019104004
    8. '	for' → logprob: -11.679368019104004
    9. '[' → logprob: -12.554368019104004
    10. 'x' → logprob: -13.054368019104004

Token 337: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.029881808906793594
    2. 'x' → logprob: -3.529881715774536
    3. '(x' → logprob: -9.404881477355957
    4. ' ' → logprob: -11.154881477355957
    5. ' sys' → logprob: -11.154881477355957
    6. '_' → logprob: -11.654881477355957
    7. ' in' → logprob: -12.154881477355957
    8. 'sys' → logprob: -13.029881477355957
    9. '_x' → logprob: -14.279881477355957
    10. '<|end|>' → logprob: -14.404881477355957

Token 338: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016211025416851044
    2. 'in' → logprob: -4.141211032867432
    3. '(x' → logprob: -9.016210556030273
    4. '_' → logprob: -11.266210556030273
    5. 'import' → logprob: -11.891210556030273
    6. '=' → logprob: -12.141210556030273
    7. ' ' → logprob: -12.266210556030273
    8. 'x' → logprob: -12.516210556030273
    9. '=sys' → logprob: -12.766210556030273
    10. '(' → logprob: -12.891210556030273

Token 339: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.06196891888976097
    2. ' sys' → logprob: -2.8119688034057617
    3. '=sys' → logprob: -14.311968803405762
    4. '(sys' → logprob: -14.561968803405762
    5. '	sys' → logprob: -15.686968803405762
    6. 's' → logprob: -17.186969757080078
    7. '.sys' → logprob: -17.436969757080078
    8. '_sys' → logprob: -18.686969757080078
    9. 'system' → logprob: -18.811969757080078
    10. '/sys' → logprob: -18.936969757080078

Token 340: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.011373155459296e-05
    2. 'stdin' → logprob: -11.125030517578125
    3. '.stdout' → logprob: -11.375030517578125
    4. '.' → logprob: -14.125030517578125
    5. '.readline' → logprob: -14.375030517578125
    6. '.std' → logprob: -14.375030517578125
    7. '(stdin' → logprob: -14.375030517578125
    8. ' .' → logprob: -15.000030517578125
    9. '._' → logprob: -15.250030517578125
    10. '.stderr' → logprob: -15.375030517578125

Token 341: '.readline' (ID: 74673)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.317693829536438
    2. '.readline' → logprob: -1.317693829536438
    3. 'stdin' → logprob: -5.942693710327148
    4. '().' → logprob: -7.192693710327148
    5. '.stdout' → logprob: -7.317693710327148
    6. '(stdin' → logprob: -8.442693710327148
    7. '.' → logprob: -9.692693710327148
    8. '.std' → logprob: -10.692693710327148
    9. '```' → logprob: -10.692693710327148
    10. '=sys' → logprob: -11.192693710327148

Token 342: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007107630372047424
    2. '()' → logprob: -7.250710964202881
    3. '()[' → logprob: -15.000710487365723
    4. '()]' → logprob: -15.375710487365723
    5. '()
' → logprob: -16.25071144104004
    6. '(' → logprob: -16.87571144104004
    7. '().__' → logprob: -17.25071144104004
    8. '()].' → logprob: -17.62571144104004
    9. '())' → logprob: -18.50071144104004
    10. ' ().' → logprob: -19.00071144104004

Token 343: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. ' split' → logprob: -14.250000953674316
    3. '.split' → logprob: -16.25
    4. 'strip' → logprob: -16.375
    5. '(split' → logprob: -18.125
    6. 'read' → logprob: -18.375
    7. 'spl' → logprob: -18.375
    8. 'sys' → logprob: -18.5
    9. '_split' → logprob: -20.5
    10. 'decode' → logprob: -20.75

Token 344: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0001238004770129919
    2. '()' → logprob: -9.000123977661133
    3. ']' → logprob: -16.000123977661133
    4. '()]
' → logprob: -16.125123977661133
    5. '()}' → logprob: -17.125123977661133
    6. '())' → logprob: -17.750123977661133
    7. ']()' → logprob: -17.875123977661133
    8. '()][' → logprob: -19.250123977661133
    9. '()],' → logprob: -19.375123977661133
    10. '()`' → logprob: -19.375123977661133

Token 345: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0021287298295646906
    2. ']' → logprob: -6.252128601074219
    3. ']()' → logprob: -8.877128601074219
    4. '()' → logprob: -9.752128601074219
    5. ')]' → logprob: -13.127128601074219
    6. '()]
' → logprob: -15.877128601074219
    7. ')' → logprob: -16.00212860107422
    8. '())' → logprob: -16.37712860107422
    9. 'def' → logprob: -17.12712860107422
    10. ' ]' → logprob: -17.37712860107422

Token 346: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.15310683415737e-05
    2. '\' → logprob: -11.500021934509277
    3. 'd' → logprob: -12.250021934509277
    4. '#' → logprob: -12.250021934509277
    5. 'de' → logprob: -14.750021934509277
    6. '\n' → logprob: -15.125021934509277
    7. ' def' → logprob: -15.500021934509277
    8. '
' → logprob: -15.625021934509277
    9. '```' → logprob: -15.875021934509277
    10. '[]' → logprob: -16.50002098083496

Token 347: ' LS' (ID: 60790)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.06902419030666351
    2. ' read' → logprob: -3.444024085998535
    3. 'S' → logprob: -4.444024085998535
    4. 'input' → logprob: -4.694024085998535
    5. 'print' → logprob: -5.319024085998535
    6. 'I' → logprob: -6.319024085998535
    7. 's' → logprob: -6.694024085998535
    8. 'LS' → logprob: -7.069024085998535
    9. 'main' → logprob: -7.194024085998535
    10. 'SI' → logprob: -7.444024085998535

Token 348: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06294714659452438
    2. '():
' → logprob: -2.8129470348358154
    3. '()' → logprob: -6.9379472732543945
    4. '():
' → logprob: -12.312947273254395
    5. ' ():' → logprob: -12.562947273254395
    6. '():

' → logprob: -14.437947273254395
    7. ' ()' → logprob: -16.312946319580078
    8. '()>' → logprob: -16.437946319580078
    9. '()):
' → logprob: -17.062946319580078
    10. 'def' → logprob: -17.562946319580078

Token 349: '   ' (ID: 271)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.5048990845680237
    2. '()' → logprob: -1.504899024963379
    3. '():' → logprob: -1.754899024963379
    4. '()
' → logprob: -7.004899024963379
    5. 'return' → logprob: -8.504899024963379
    6. '():
' → logprob: -9.754899024963379
    7. '()[' → logprob: -9.754899024963379
    8. '()>' → logprob: -10.004899024963379
    9. ' ()' → logprob: -10.004899024963379
    10. 'def' → logprob: -10.129899024963379

Token 350: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6313193440437317
    2. 'sys' → logprob: -0.8813193440437317
    3. ' return' → logprob: -3.631319284439087
    4. ' sys' → logprob: -4.131319522857666
    5. '   ' → logprob: -4.506319522857666
    6. 'def' → logprob: -8.756319046020508
    7. 'list' → logprob: -10.131319046020508
    8. '=sys' → logprob: -10.756319046020508
    9. '(sys' → logprob: -10.881319046020508
    10. 'lambda' → logprob: -11.006319046020508

Token 351: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00043233807082287967
    2. ' sys' → logprob: -8.250432014465332
    3. 'list' → logprob: -9.000432014465332
    4. '[' → logprob: -10.000432014465332
    5. '(sys' → logprob: -13.875432014465332
    6. 'string' → logprob: -15.000432014465332
    7. '[s' → logprob: -15.375432014465332
    8. ' [' → logprob: -15.500432014465332
    9. '[list' → logprob: -15.625432014465332
    10. '[string' → logprob: -15.750432014465332

Token 352: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.666993507067673e-05
    2. '.stdout' → logprob: -10.250036239624023
    3. '.argv' → logprob: -14.250036239624023
    4. 'stdin' → logprob: -15.000036239624023
    5. '.std' → logprob: -15.250036239624023
    6. '.readline' → logprob: -17.250036239624023
    7. '.' → logprob: -17.625036239624023
    8. '.stderr' → logprob: -18.500036239624023
    9. '(stdin' → logprob: -19.625036239624023
    10. ' .' → logprob: -19.750036239624023

Token 353: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -7.896309739408025e-07
    2. '.' → logprob: -14.625000953674316
    3. '.stdin' → logprob: -15.625000953674316
    4. '().' → logprob: -16.5
    5. '.readlines' → logprob: -17.125
    6. '```' → logprob: -18.5
    7. '.read' → logprob: -18.625
    8. '.stdout' → logprob: -18.75
    9. ' readline' → logprob: -19.25
    10. 'stdin' → logprob: -19.25

Token 354: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001093841710826382
    2. '()' → logprob: -9.125109672546387
    3. '(' → logprob: -15.625109672546387
    4. ' ().' → logprob: -15.875109672546387
    5. '.strip' → logprob: -17.75010871887207
    6. '.rstrip' → logprob: -18.50010871887207
    7. '.' → logprob: -19.25010871887207
    8. '()

' → logprob: -19.50010871887207
    9. '[:-' → logprob: -19.50010871887207
    10. '().__' → logprob: -19.50010871887207

Token 355: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.01815076172351837
    2. 'rstrip' → logprob: -4.018150806427002
    3. 'split' → logprob: -14.393150329589844
    4. ' strip' → logprob: -15.518150329589844
    5. 'str' → logprob: -16.893150329589844
    6. 'decode' → logprob: -18.768150329589844
    7. '_strip' → logprob: -20.143150329589844
    8. 'read' → logprob: -20.393150329589844
    9. '.rstrip' → logprob: -21.643150329589844
    10. 'rst' → logprob: -22.268150329589844

Token 356: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -6.420598219847307e-05
    2. '()]' → logprob: -10.3750638961792
    3. '(' → logprob: -11.5000638961792
    4. '()[' → logprob: -12.0000638961792
    5. '().' → logprob: -12.2500638961792
    6. '()
' → logprob: -12.6250638961792
    7. ' ()' → logprob: -13.0000638961792
    8. '()`' → logprob: -13.6250638961792
    9. '())' → logprob: -13.8750638961792
    10. '()\' → logprob: -13.8750638961792

Token 357: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2664456789934775e-06
    2. '<|end|>' → logprob: -14.125000953674316
    3. ' def' → logprob: -15.125000953674316
    4. '<|end|>' → logprob: -17.000001907348633
    5. '```' → logprob: -17.125001907348633
    6. '
' → logprob: -17.500001907348633
    7. '\' → logprob: -17.625001907348633
    8. '[]' → logprob: -17.875001907348633
    9. '#' → logprob: -18.625001907348633
    10. '	def' → logprob: -18.875001907348633

Token 358: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.13022589683532715
    2. 'input' → logprob: -2.755225896835327
    3. 'sys' → logprob: -3.630225896835327
    4. 's' → logprob: -4.880226135253906
    5. 'strip' → logprob: -5.005226135253906
    6. 'S' → logprob: -5.130226135253906
    7. 'str' → logprob: -5.505226135253906
    8. ' read' → logprob: -6.130226135253906
    9. ' input' → logprob: -6.880226135253906
    10. 'list' → logprob: -7.255226135253906

Token 359: '_str' (ID: 6182)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.5141764879226685
    2. '_line' → logprob: -1.1391764879226685
    3. '_str' → logprob: -3.514176368713379
    4. 'string' → logprob: -3.639176368713379
    5. '_' → logprob: -5.014176368713379
    6. 'line' → logprob: -5.389176368713379
    7. '_strings' → logprob: -5.764176368713379
    8. '()' → logprob: -5.889176368713379
    9. '_lines' → logprob: -6.389176368713379
    10. 's' → logprob: -6.389176368713379

Token 360: '_list' (ID: 4162)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.16598589718341827
    2. '_list' → logprob: -2.7909858226776123
    3. '()' → logprob: -3.1659858226776123
    4. 'list' → logprob: -3.9159858226776123
    5. 'ings' → logprob: -4.040986061096191
    6. 'line' → logprob: -4.790986061096191
    7. 's' → logprob: -6.415986061096191
    8. '_line' → logprob: -7.665986061096191
    9. 'lines' → logprob: -8.040986061096191
    10. '_lines' → logprob: -8.165986061096191

Token 361: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004522450268268585
    2. '():
' → logprob: -5.504522323608398
    3. '()' → logprob: -7.754522323608398
    4. ' ():' → logprob: -11.504522323608398
    5. '():
' → logprob: -13.004522323608398
    6. '():

' → logprob: -14.129522323608398
    7. '()>' → logprob: -14.379522323608398
    8. 'def' → logprob: -14.379522323608398
    9. '(' → logprob: -15.629522323608398
    10. ':' → logprob: -15.879522323608398

Token 362: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1748233586549759
    2. '   ' → logprob: -1.9248234033584595
    3. 'return' → logprob: -4.42482328414917
    4. ')' → logprob: -6.54982328414917
    5. '=' → logprob: -8.424823760986328
    6. ' return' → logprob: -8.924823760986328
    7. '():
' → logprob: -9.174823760986328
    8. ' ' → logprob: -9.424823760986328
    9. '():' → logprob: -9.424823760986328
    10. ' ()' → logprob: -9.424823760986328

Token 363: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0008521550917066634
    2. ' return' → logprob: -7.250852108001709
    3. '   ' → logprob: -9.000852584838867
    4. '
' → logprob: -11.750852584838867
    5. 'def' → logprob: -12.125852584838867
    6. '()' → logprob: -12.750852584838867
    7. ')' → logprob: -14.375852584838867
    8. '	return' → logprob: -14.625852584838867
    9. '()
' → logprob: -14.750852584838867
    10. 'sys' → logprob: -14.750852584838867

Token 364: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.018150296062231064
    2. ' sys' → logprob: -4.018150329589844
    3. '(sys' → logprob: -15.643150329589844
    4. '	sys' → logprob: -16.768150329589844
    5. '   ' → logprob: -18.018150329589844
    6. '=sys' → logprob: -18.393150329589844
    7. 'list' → logprob: -18.518150329589844
    8. '_sys' → logprob: -19.768150329589844
    9. 'system' → logprob: -19.893150329589844
    10. 'Sys' → logprob: -19.893150329589844

Token 365: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.6047699318733066e-05
    2. '.stdout' → logprob: -11.750016212463379
    3. 'stdin' → logprob: -11.750016212463379
    4. '.std' → logprob: -15.625016212463379
    5. '.argv' → logprob: -16.750015258789062
    6. '(stdin' → logprob: -17.375015258789062
    7. '.stderr' → logprob: -17.875015258789062
    8. '.readline' → logprob: -17.875015258789062
    9. ' .' → logprob: -19.125015258789062
    10. '```' → logprob: -19.125015258789062

Token 366: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -9.088346359931165e-07
    2. '().' → logprob: -14.500000953674316
    3. ' readline' → logprob: -16.375
    4. '.stdin' → logprob: -16.5
    5. '.readlines' → logprob: -16.625
    6. '.' → logprob: -16.875
    7. 'stdin' → logprob: -17.125
    8. '```' → logprob: -17.625
    9. 'line' → logprob: -17.75
    10. '.read' → logprob: -18.5

Token 367: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.008615161292254925
    2. '()' → logprob: -4.758615016937256
    3. ' ().' → logprob: -15.258615493774414
    4. '()
' → logprob: -16.383615493774414
    5. '(' → logprob: -16.383615493774414
    6. '().'' → logprob: -16.508615493774414
    7. '().__' → logprob: -17.008615493774414
    8. '())' → logprob: -17.633615493774414
    9. '()[' → logprob: -17.633615493774414
    10. '()).' → logprob: -17.633615493774414

Token 368: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.32415783405303955
    2. 'split' → logprob: -1.3241578340530396
    3. 'rstrip' → logprob: -4.57415771484375
    4. 'read' → logprob: -7.57415771484375
    5. 'decode' → logprob: -11.82415771484375
    6. 'str' → logprob: -14.44915771484375
    7. ' strip' → logprob: -15.32415771484375
    8. 'spl' → logprob: -16.44915771484375
    9. 'text' → logprob: -16.57415771484375
    10. '.readline' → logprob: -16.69915771484375

Token 369: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.1689596148207784e-05
    2. '()]' → logprob: -10.875051498413086
    3. '(' → logprob: -11.000051498413086
    4. '()
' → logprob: -11.750051498413086
    5. '()[' → logprob: -12.625051498413086
    6. '()`' → logprob: -13.875051498413086
    7. '()

' → logprob: -14.250051498413086
    8. '()\' → logprob: -14.500051498413086
    9. '())' → logprob: -14.625051498413086
    10. '()>' → logprob: -15.375051498413086

Token 370: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.1008713702030946e-06
    2. 'D' → logprob: -13.500001907348633
    3. '\' → logprob: -15.375001907348633
    4. 'd' → logprob: -15.625001907348633
    5. '
' → logprob: -15.750001907348633
    6. ' def' → logprob: -17.125001907348633
    7. 'class' → logprob: -17.250001907348633
    8. 'from' → logprob: -17.875001907348633
    9. 'input' → logprob: -17.875001907348633
    10. 'ndef' → logprob: -17.875001907348633

Token 371: ' I' (ID: 357)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.03166558966040611
    2. 'S' → logprob: -4.531665802001953
    3. 'input' → logprob: -4.656665802001953
    4. 'I' → logprob: -5.781665802001953
    5. 's' → logprob: -6.031665802001953
    6. 'RS' → logprob: -6.406665802001953
    7. 'SS' → logprob: -7.031665802001953
    8. 'print' → logprob: -7.031665802001953
    9. 'SR' → logprob: -7.781665802001953
    10. ' read' → logprob: -8.281665802001953

Token 372: '():
' (ID: 8595)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.43134477734565735
    2. 'nt' → logprob: -1.306344747543335
    3. '()' → logprob: -2.806344747543335
    4. '():' → logprob: -4.556344985961914
    5. 'N' → logprob: -4.931344985961914
    6. '():
' → logprob: -7.431344985961914
    7. 'NT' → logprob: -8.681344985961914
    8. 'nit' → logprob: -8.806344985961914
    9. 'np' → logprob: -8.931344985961914
    10. 'ndef' → logprob: -9.681344985961914

Token 373: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10975231975317001
    2. 'int' → logprob: -2.4847524166107178
    3. ' return' → logprob: -3.9847524166107178
    4. '()' → logprob: -6.359752178192139
    5. '(int' → logprob: -9.234752655029297
    6. '=int' → logprob: -10.359752655029297
    7. 'eturn' → logprob: -10.359752655029297
    8. ' int' → logprob: -10.609752655029297
    9. '   ' → logprob: -10.984752655029297
    10. ' ' → logprob: -11.234752655029297

Token 374: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3904963731765747
    2. 'int' → logprob: -1.1404963731765747
    3. ' return' → logprob: -5.640496253967285
    4. ' int' → logprob: -9.640496253967285
    5. 'eturn' → logprob: -13.265496253967285
    6. '=int' → logprob: -15.015496253967285
    7. '   ' → logprob: -15.765496253967285
    8. ' ' → logprob: -15.765496253967285
    9. 'nt' → logprob: -16.3904972076416
    10. 'ret' → logprob: -16.6404972076416

Token 375: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0024756586644798517
    2. ' int' → logprob: -6.002475738525391
    3. '	int' → logprob: -17.87747573852539
    4. '(int' → logprob: -18.00247573852539
    5. '   ' → logprob: -19.12747573852539
    6. ' ' → logprob: -19.37747573852539
    7. '[int' → logprob: -19.75247573852539
    8. '<int' → logprob: -20.50247573852539
    9. 'ints' → logprob: -20.75247573852539
    10. 'in' → logprob: -20.75247573852539

Token 376: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0024889763444662094
    2. '(' → logprob: -6.00248908996582
    3. 'sys' → logprob: -11.25248908996582
    4. ' sys' → logprob: -16.37748908996582
    5. '(
' → logprob: -16.87748908996582
    6. '(Sys' → logprob: -16.87748908996582
    7. '()' → logprob: -17.37748908996582
    8. '(s' → logprob: -17.62748908996582
    9. '(input' → logprob: -17.62748908996582
    10. '(system' → logprob: -18.12748908996582

Token 377: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.9862216504407115e-05
    2. '.' → logprob: -12.125020027160645
    3. '.readline' → logprob: -12.250020027160645
    4. '.stdout' → logprob: -12.250020027160645
    5. '.argv' → logprob: -12.875020027160645
    6. 'stdin' → logprob: -13.375020027160645
    7. '.std' → logprob: -14.875020027160645
    8. '.st' → logprob: -16.125019073486328
    9. '(stdin' → logprob: -16.375019073486328
    10. ' .' → logprob: -16.625019073486328

Token 378: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0002100965939462185
    2. 'stdin' → logprob: -9.00020980834961
    3. '.stdin' → logprob: -9.37520980834961
    4. '.' → logprob: -13.87520980834961
    5. 'read' → logprob: -14.37520980834961
    6. '(stdin' → logprob: -16.25020980834961
    7. ' readline' → logprob: -16.87520980834961
    8. '.read' → logprob: -17.00020980834961
    9. '```' → logprob: -17.50020980834961
    10. 'input' → logprob: -17.50020980834961

Token 379: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02329718880355358
    2. '().' → logprob: -4.023297309875488
    3. '()' → logprob: -5.273297309875488
    4. ' ())' → logprob: -12.773297309875488
    5. '()]' → logprob: -13.523297309875488
    6. ')' → logprob: -13.773297309875488
    7. '();)' → logprob: -13.773297309875488
    8. '())
' → logprob: -15.648297309875488
    9. '().__' → logprob: -15.898297309875488
    10. '()))' → logprob: -16.023296356201172

Token 380: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001399879576638341
    2. '()' → logprob: -6.626399993896484
    3. '(' → logprob: -10.251399993896484
    4. '#' → logprob: -11.251399993896484
    5. '\' → logprob: -11.501399993896484
    6. '
' → logprob: -12.876399993896484
    7. ' def' → logprob: -13.376399993896484
    8. '<|end|>' → logprob: -13.376399993896484
    9. '```' → logprob: -13.501399993896484
    10. '()\' → logprob: -13.751399993896484

Token 381: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.03386617824435234
    2. 'S' → logprob: -4.0338664054870605
    3. ' read' → logprob: -4.2838664054870605
    4. 'input' → logprob: -7.4088664054870605
    5. 's' → logprob: -7.9088664054870605
    6. 'SI' → logprob: -8.158865928649902
    7. 'int' → logprob: -8.533865928649902
    8. 'print' → logprob: -9.033865928649902
    9. ' S' → logprob: -9.158865928649902
    10. ' input' → logprob: -11.283865928649902

Token 382: '_int' (ID: 12285)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.17866089940071106
    2. '_int' → logprob: -2.1786608695983887
    3. '()' → logprob: -3.0536608695983887
    4. '_line' → logprob: -6.428660869598389
    5. 'nt' → logprob: -7.678660869598389
    6. '_' → logprob: -8.053661346435547
    7. 'line' → logprob: -8.303661346435547
    8. '_integer' → logprob: -8.553661346435547
    9. 'Int' → logprob: -9.178661346435547
    10. '_str' → logprob: -9.928661346435547

Token 383: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009920800803229213
    2. '()>' → logprob: -7.625992298126221
    3. ' ()' → logprob: -8.875991821289062
    4. '()]' → logprob: -9.500991821289062
    5. '()">' → logprob: -9.625991821289062
    6. ']()' → logprob: -10.000991821289062
    7. '()<' → logprob: -10.125991821289062
    8. '()?>' → logprob: -10.875991821289062
    9. '`()' → logprob: -11.125991821289062
    10. '()
' → logprob: -11.500991821289062

Token 384: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005379841662943363
    2. 'return' → logprob: -5.380379676818848
    3. ')' → logprob: -8.005379676818848
    4. '()
' → logprob: -8.880379676818848
    5. '   ' → logprob: -9.505379676818848
    6. ' ()' → logprob: -9.505379676818848
    7. '(' → logprob: -9.880379676818848
    8. ' return' → logprob: -10.505379676818848
    9. '())' → logprob: -11.130379676818848
    10. '<|end|>' → logprob: -11.380379676818848

Token 385: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00043376852408982813
    2. ' return' → logprob: -7.750433921813965
    3. 'int' → logprob: -12.750433921813965
    4. '   ' → logprob: -15.750433921813965
    5. '	return' → logprob: -19.25043296813965
    6. ' ' → logprob: -20.12543296813965
    7. '  ' → logprob: -20.62543296813965
    8. 'eturn' → logprob: -21.00043296813965
    9. 'Return' → logprob: -21.25043296813965
    10. 'def' → logprob: -21.25043296813965

Token 386: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004306692280806601
    2. ' int' → logprob: -7.750430583953857
    3. '	int' → logprob: -20.250431060791016
    4. '(int' → logprob: -20.625431060791016
    5. '<int' → logprob: -21.000431060791016
    6. '[int' → logprob: -21.375431060791016
    7. '=int' → logprob: -21.625431060791016
    8. '   ' → logprob: -22.000431060791016
    9. ' ' → logprob: -22.375431060791016
    10. ':int' → logprob: -22.875431060791016

Token 387: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.014205467887222767
    2. '(' → logprob: -4.264205455780029
    3. 'sys' → logprob: -10.389205932617188
    4. '(system' → logprob: -11.889205932617188
    5. '(
' → logprob: -13.139205932617188
    6. ' (' → logprob: -14.139205932617188
    7. '(System' → logprob: -14.764205932617188
    8. '(Sys' → logprob: -15.014205932617188
    9. ' sys' → logprob: -15.139205932617188
    10. '(s' → logprob: -15.264205932617188

Token 388: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.180258191714529e-06
    2. 'stdin' → logprob: -12.625008583068848
    3. '.readline' → logprob: -13.000008583068848
    4. '.' → logprob: -13.375008583068848
    5. '.stdout' → logprob: -14.375008583068848
    6. '.std' → logprob: -15.250008583068848
    7. '(stdin' → logprob: -16.25000762939453
    8. ' .' → logprob: -17.12500762939453
    9. '.argv' → logprob: -17.50000762939453
    10. '=sys' → logprob: -18.25000762939453

Token 389: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.001261067809537053
    2. '.stdin' → logprob: -6.751261234283447
    3. 'stdin' → logprob: -9.376260757446289
    4. '.' → logprob: -12.501260757446289
    5. '().' → logprob: -14.001260757446289
    6. '(stdin' → logprob: -14.376260757446289
    7. 'line' → logprob: -14.501260757446289
    8. 'read' → logprob: -15.751260757446289
    9. 'input' → logprob: -16.62626075744629
    10. '.stdout' → logprob: -16.62626075744629

Token 390: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00033188972156494856
    2. '()' → logprob: -8.50033187866211
    3. '().' → logprob: -9.00033187866211
    4. ')' → logprob: -13.00033187866211
    5. ' ())' → logprob: -13.50033187866211
    6. '())
' → logprob: -14.62533187866211
    7. '();)' → logprob: -14.75033187866211
    8. '()[' → logprob: -15.50033187866211
    9. '()]' → logprob: -15.62533187866211
    10. '(' → logprob: -15.87533187866211

Token 391: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.7432603272027336e-06
    2. '\' → logprob: -13.750001907348633
    3. 'class' → logprob: -15.625001907348633
    4. '#' → logprob: -16.375001907348633
    5. 'd' → logprob: -16.375001907348633
    6. '\n' → logprob: -16.375001907348633
    7. '```' → logprob: -16.375001907348633
    8. '
' → logprob: -17.000001907348633
    9. ' def' → logprob: -17.875001907348633
    10. 'ndef' → logprob: -18.250001907348633

Token 392: ' F' (ID: 454)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.9757965207099915
    2. 'print' → logprob: -1.1007964611053467
    3. 'S' → logprob: -1.3507964611053467
    4. 'main' → logprob: -3.9757964611053467
    5. 'input' → logprob: -5.225796699523926
    6. 's' → logprob: -5.600796699523926
    7. 'SS' → logprob: -7.100796699523926
    8. 'SI' → logprob: -7.350796699523926
    9. 'write' → logprob: -7.850796699523926
    10. 'float' → logprob: -8.100796699523926

Token 393: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005392295774072409
    2. '():' → logprob: -6.130392074584961
    3. 'loat' → logprob: -6.255392074584961
    4. '():
' → logprob: -7.255392074584961
    5. '())' → logprob: -8.255392074584961
    6. '()
' → logprob: -9.255392074584961
    7. '()]' → logprob: -9.380392074584961
    8. '()}' → logprob: -10.630392074584961
    9. '()>' → logprob: -10.630392074584961
    10. 'LOAT' → logprob: -11.255392074584961

Token 394: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6021507978439331
    2. 'float' → logprob: -1.477150797843933
    3. 'return' → logprob: -1.727150797843933
    4. ')' → logprob: -3.1021509170532227
    5. '   ' → logprob: -7.602150917053223
    6. '=float' → logprob: -8.602150917053223
    7. 'def' → logprob: -8.852150917053223
    8. ' ()' → logprob: -9.352150917053223
    9. '()
' → logprob: -9.602150917053223
    10. '():' → logprob: -9.852150917053223

Token 395: ' return' (ID: 622)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -9.014684110297821e-06
    2. 'return' (adapté à ' return') → logprob: -11.750008583068848
    3. ' float' → logprob: -14.000008583068848
    4. '   ' → logprob: -15.500008583068848
    5. '=float' → logprob: -17.750009536743164
    6. '
' → logprob: -19.500009536743164
    7. 'flo' → logprob: -19.500009536743164
    8. '  ' → logprob: -19.875009536743164
    9. '	float' → logprob: -20.750009536743164
    10. '(float' → logprob: -20.875009536743164

Token 396: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -2.9040898880339228e-05
    2. 'loat' → logprob: -10.500028610229492
    3. ' float' → logprob: -13.500028610229492
    4. '	float' → logprob: -19.125028610229492
    5. '=float' → logprob: -20.125028610229492
    6. 'fl' → logprob: -20.750028610229492
    7. '(float' → logprob: -20.750028610229492
    8. 'flt' → logprob: -21.750028610229492
    9. 'f' → logprob: -22.375028610229492
    10. 'flo' → logprob: -22.750028610229492

Token 397: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0003428528143558651
    2. '(' → logprob: -8.000343322753906
    3. '=sys' → logprob: -13.125343322753906
    4. 'sys' → logprob: -13.750343322753906
    5. '(system' → logprob: -13.875343322753906
    6. '()' → logprob: -14.125343322753906
    7. '(Sys' → logprob: -14.125343322753906
    8. '(s' → logprob: -14.250343322753906
    9. ' (' → logprob: -14.500343322753906
    10. '(System' → logprob: -14.625343322753906

Token 398: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.6166903151315637e-05
    2. '.readline' → logprob: -11.625016212463379
    3. 'stdin' → logprob: -12.125016212463379
    4. '.stdout' → logprob: -14.000016212463379
    5. '(stdin' → logprob: -14.875016212463379
    6. '.' → logprob: -14.875016212463379
    7. ' .' → logprob: -16.375015258789062
    8. '.std' → logprob: -16.625015258789062
    9. '.argv' → logprob: -17.375015258789062
    10. '.stderr' → logprob: -18.000015258789062

Token 399: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.035250868648290634
    2. 'stdin' → logprob: -4.035250663757324
    3. '.stdin' → logprob: -4.160250663757324
    4. 'line' → logprob: -6.785250663757324
    5. '(stdin' → logprob: -8.535250663757324
    6. 'read' → logprob: -11.285250663757324
    7. 'lin' → logprob: -12.910250663757324
    8. ' readline' → logprob: -13.410250663757324
    9. 'stdlib' → logprob: -13.535250663757324
    10. 'stdio' → logprob: -13.785250663757324

Token 400: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0003619217313826084
    2. '()' → logprob: -8.375362396240234
    3. '().' → logprob: -9.125362396240234
    4. ' ())' → logprob: -11.125362396240234
    5. ')' → logprob: -12.000362396240234
    6. '())
' → logprob: -14.000362396240234
    7. '();)' → logprob: -14.875362396240234
    8. '()]' → logprob: -16.125362396240234
    9. '())

' → logprob: -16.625362396240234
    10. '()[' → logprob: -16.750362396240234

Token 401: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.0100624169572257e-05
    2. ' def' → logprob: -11.750020027160645
    3. ')' → logprob: -12.125020027160645
    4. '<|end|>' → logprob: -12.625020027160645
    5. '()' → logprob: -12.875020027160645
    6. '```' → logprob: -15.000020027160645
    7. '<|end|>' → logprob: -15.875020027160645
    8. 'read' → logprob: -16.25002098083496
    9. '(' → logprob: -16.25002098083496
    10. '_def' → logprob: -16.62502098083496

Token 402: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.1626884788274765
    2. 'float' → logprob: -1.9126884937286377
    3. ' read' → logprob: -6.537688255310059
    4. ' float' → logprob: -6.912688255310059
    5. 'def' → logprob: -11.037688255310059
    6. 'input' → logprob: -14.787688255310059
    7. 'loat' → logprob: -14.912688255310059
    8. 'int' → logprob: -14.912688255310059
    9. ' def' → logprob: -15.162688255310059
    10. '   ' → logprob: -15.537688255310059

Token 403: '_float' (ID: 44505)
  Prédit: '_float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_float' → logprob: -0.0013866664376109838
    2. '_' → logprob: -6.626386642456055
    3. 'float' → logprob: -10.751386642456055
    4. '_f' → logprob: -11.876386642456055
    5. '_line' → logprob: -11.876386642456055
    6. '_double' → logprob: -12.001386642456055
    7. '_str' → logprob: -12.501386642456055
    8. '_string' → logprob: -12.626386642456055
    9. '_int' → logprob: -12.876386642456055
    10. 'loat' → logprob: -13.001386642456055

Token 404: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5690089639974758e-05
    2. ' ()' → logprob: -11.625015258789062
    3. '()]' → logprob: -13.875015258789062
    4. '()
' → logprob: -14.125015258789062
    5. '()`' → logprob: -14.250015258789062
    6. '()</' → logprob: -14.375015258789062
    7. '();' → logprob: -14.750015258789062
    8. '())' → logprob: -14.750015258789062
    9. '().' → logprob: -14.750015258789062
    10. '()<' → logprob: -14.875015258789062

Token 405: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04668033868074417
    2. '()' → logprob: -3.546680450439453
    3. ' return' → logprob: -4.296680450439453
    4. '   ' → logprob: -5.796680450439453
    5. ')' → logprob: -9.296680450439453
    6. 'float' → logprob: -10.921680450439453
    7. '()
' → logprob: -11.546680450439453
    8. '	return' → logprob: -11.796680450439453
    9. ' ()' → logprob: -12.796680450439453
    10. ' ' → logprob: -13.546680450439453

Token 406: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0084401099011302
    2. 'float' → logprob: -5.258440017700195
    3. ' return' → logprob: -5.758440017700195
    4. '   ' → logprob: -10.508440017700195
    5. ' float' → logprob: -11.508440017700195
    6. 'int' → logprob: -12.258440017700195
    7. ' ' → logprob: -13.508440017700195
    8. 'eturn' → logprob: -13.883440017700195
    9. '  ' → logprob: -15.258440017700195
    10. ')' → logprob: -16.008440017700195

Token 407: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -4.5491004129871726e-05
    2. ' float' → logprob: -10.000045776367188
    3. 'flo' → logprob: -19.625045776367188
    4. '   ' → logprob: -19.875045776367188
    5. 'f' → logprob: -19.875045776367188
    6. '	float' → logprob: -20.000045776367188
    7. '(float' → logprob: -20.250045776367188
    8. 'fl' → logprob: -20.750045776367188
    9. ' ' → logprob: -21.125045776367188
    10. '  ' → logprob: -21.375045776367188

Token 408: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.500001907348633
    3. 'sys' → logprob: -14.500001907348633
    4. '(
' → logprob: -18.125001907348633
    5. '(system' → logprob: -18.375001907348633
    6. '=sys' → logprob: -18.375001907348633
    7. ' (' → logprob: -19.500001907348633
    8. '(Sys' → logprob: -19.875001907348633
    9. '	sys' → logprob: -20.750001907348633
    10. ' sys' → logprob: -20.750001907348633

Token 409: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00268089072778821
    2. '.readline' → logprob: -6.252680778503418
    3. '().' → logprob: -8.127680778503418
    4. '.sys' → logprob: -8.627680778503418
    5. '.stdout' → logprob: -8.752680778503418
    6. '.std' → logprob: -9.752680778503418
    7. '.' → logprob: -11.377680778503418
    8. '=sys' → logprob: -11.377680778503418
    9. '(sys' → logprob: -11.502680778503418
    10. ' .' → logprob: -11.877680778503418

Token 410: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.016806092113256454
    2. '.stdin' → logprob: -4.141806125640869
    3. 'stdin' → logprob: -7.266806125640869
    4. '().' → logprob: -10.016805648803711
    5. '.stdout' → logprob: -11.266805648803711
    6. '(stdin' → logprob: -11.641805648803711
    7. '.' → logprob: -13.141805648803711
    8. 'sys' → logprob: -13.516805648803711
    9. ' .' → logprob: -14.266805648803711
    10. 'line' → logprob: -14.266805648803711

Token 411: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01894753985106945
    2. '()' → logprob: -4.018947601318359
    3. ')' → logprob: -7.143947601318359
    4. '()]' → logprob: -12.76894760131836
    5. ' ())' → logprob: -12.89394760131836
    6. '();)' → logprob: -14.14394760131836
    7. '()[' → logprob: -14.51894760131836
    8. '())
' → logprob: -15.14394760131836
    9. '().' → logprob: -15.64394760131836
    10. '(' → logprob: -15.89394760131836

Token 412: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.975612187583465e-05
    2. 'class' → logprob: -10.500029563903809
    3. '#' → logprob: -14.125029563903809
    4. '\' → logprob: -14.125029563903809
    5. '@' → logprob: -14.375029563903809
    6. ' def' → logprob: -17.000030517578125
    7. '```' → logprob: -17.000030517578125
    8. 'import' → logprob: -17.500030517578125
    9. 'from' → logprob: -17.625030517578125
    10. 'd' → logprob: -17.875030517578125

Token 413: ' S' (ID: 336)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.291541188955307
    2. 'main' → logprob: -2.41654109954834
    3. 'read' → logprob: -2.91654109954834
    4. 's' → logprob: -3.66654109954834
    5. 'input' → logprob: -3.91654109954834
    6. 'S' → logprob: -3.91654109954834
    7. 'write' → logprob: -4.04154109954834
    8. 'YES' → logprob: -4.54154109954834
    9. 'yes' → logprob: -5.91654109954834
    10. 'get' → logprob: -6.16654109954834

Token 414: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0006055758567526937
    2. '():
' → logprob: -7.500605583190918
    3. '()' → logprob: -10.000605583190918
    4. ' ():' → logprob: -11.875605583190918
    5. '():
' → logprob: -15.500605583190918
    6. '():

' → logprob: -16.2506046295166
    7. '().' → logprob: -18.6256046295166
    8. ' ()' → logprob: -18.7506046295166
    9. '()>' → logprob: -19.5006046295166
    10. '()
' → logprob: -20.1256046295166

Token 415: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.040900662541389465
    2. 'sys' → logprob: -3.540900707244873
    3. '   ' → logprob: -4.540900707244873
    4. ' return' → logprob: -7.915900707244873
    5. '()' → logprob: -10.290900230407715
    6. '(sys' → logprob: -11.165900230407715
    7. ' sys' → logprob: -11.665900230407715
    8. '=sys' → logprob: -13.790900230407715
    9. '	return' → logprob: -14.790900230407715
    10. ')' → logprob: -15.290900230407715

Token 416: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01821596920490265
    2. 'sys' → logprob: -4.018216133117676
    3. '   ' → logprob: -10.268216133117676
    4. ' return' → logprob: -10.393216133117676
    5. ' sys' → logprob: -14.268216133117676
    6. '(sys' → logprob: -17.39321517944336
    7. '=sys' → logprob: -17.51821517944336
    8. '```' → logprob: -17.76821517944336
    9. '	return' → logprob: -18.26821517944336
    10. 'eturn' → logprob: -18.89321517944336

Token 417: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -3.128163257315464e-07
    2. ' sys' → logprob: -15.5
    3. '(sys' → logprob: -22.375
    4. 'input' → logprob: -22.5
    5. '	sys' → logprob: -22.5
    6. '=sys' → logprob: -22.875
    7. 'str' → logprob: -23.5
    8. 'system' → logprob: -24.5
    9. '.sys' → logprob: -24.75
    10. '_sys' → logprob: -24.875

Token 418: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001533428207039833
    2. '().' → logprob: -6.501533508300781
    3. ' ()' → logprob: -11.751533508300781
    4. '(' → logprob: -12.251533508300781
    5. '()]' → logprob: -12.626533508300781
    6. '())' → logprob: -12.876533508300781
    7. '()`' → logprob: -13.001533508300781
    8. '()+' → logprob: -13.751533508300781
    9. '()?>' → logprob: -14.126533508300781
    10. '`()' → logprob: -14.126533508300781

Token 419: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00013786651834379882
    2. '()' → logprob: -9.250138282775879
    3. '<|end|>' → logprob: -11.250138282775879
    4. ' def' → logprob: -11.625138282775879
    5. '#' → logprob: -12.375138282775879
    6. '\' → logprob: -12.500138282775879
    7. '```' → logprob: -12.625138282775879
    8. ':' → logprob: -12.750138282775879
    9. ':def' → logprob: -13.375138282775879
    10. '(' → logprob: -13.500138282775879

Token 420: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -1.830554485321045
    2. ' sys' → logprob: -1.830554485321045
    3. ' input' → logprob: -2.080554485321045
    4. 'input' → logprob: -2.205554485321045
    5. 'read' → logprob: -2.330554485321045
    6. 's' → logprob: -2.330554485321045
    7. ' s' → logprob: -2.580554485321045
    8. 'def' → logprob: -2.955554485321045
    9. 'sys' → logprob: -3.705554485321045
    10. ' write' → logprob: -4.330554485321045

Token 421: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6707553267478943
    2. '()' → logprob: -1.170755386352539
    3. 'line' → logprob: -2.670755386352539
    4. '_str' → logprob: -3.170755386352539
    5. 's' → logprob: -3.670755386352539
    6. '_input' → logprob: -4.420755386352539
    7. '_line' → logprob: -4.545755386352539
    8. 'input' → logprob: -5.045755386352539
    9. 'str' → logprob: -5.670755386352539
    10. '_string' → logprob: -5.795755386352539

Token 422: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.13051897287368774
    2. '()' → logprob: -2.130518913269043
    3. '():
' → logprob: -6.130518913269043
    4. '_line' → logprob: -7.130518913269043
    5. 'line' → logprob: -8.505518913269043
    6. '().' → logprob: -9.380518913269043
    7. '_lines' → logprob: -10.005518913269043
    8. '_string' → logprob: -10.005518913269043
    9. '()>' → logprob: -10.255518913269043
    10. ' ()' → logprob: -10.505518913269043

Token 423: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016161290928721428
    2. '   ' → logprob: -4.2661614418029785
    3. 'sys' → logprob: -6.8911614418029785
    4. 'return' → logprob: -7.6411614418029785
    5. ' ()' → logprob: -8.76616096496582
    6. ')' → logprob: -9.01616096496582
    7. '=sys' → logprob: -10.39116096496582
    8. ' ' → logprob: -10.39116096496582
    9. ' sys' → logprob: -10.64116096496582
    10. '#' → logprob: -11.39116096496582

Token 424: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.017156515270471573
    2. ' return' → logprob: -4.392156600952148
    3. '   ' → logprob: -5.392156600952148
    4. 'sys' → logprob: -9.517156600952148
    5. ' sys' → logprob: -12.392156600952148
    6. 'import' → logprob: -12.767156600952148
    7. ' ' → logprob: -13.642156600952148
    8. '	return' → logprob: -14.017156600952148
    9. 'pass' → logprob: -14.767156600952148
    10. 's' → logprob: -15.142156600952148

Token 425: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4768964648246765
    2. 'input' → logprob: -0.9768964648246765
    3. '[input' → logprob: -6.226896286010742
    4. '[' → logprob: -7.601896286010742
    5. 'list' → logprob: -8.851896286010742
    6. ' sys' → logprob: -8.976896286010742
    7. ' input' → logprob: -10.351896286010742
    8. '[s' → logprob: -11.476896286010742
    9. '(sys' → logprob: -11.851896286010742
    10. '[S' → logprob: -11.851896286010742

Token 426: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.664371848164592e-05
    2. '().' → logprob: -11.250016212463379
    3. '()
' → logprob: -13.500016212463379
    4. '()]' → logprob: -14.375016212463379
    5. ' ()' → logprob: -14.750016212463379
    6. '(' → logprob: -14.750016212463379
    7. '())' → logprob: -15.125016212463379
    8. '()

' → logprob: -16.000017166137695
    9. '()+' → logprob: -16.250017166137695
    10. '()</' → logprob: -16.500017166137695

Token 427: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000968156848102808
    2. '#' → logprob: -7.375967979431152
    3. '<|end|>' → logprob: -8.750967979431152
    4. 'class' → logprob: -9.250967979431152
    5. '
' → logprob: -10.375967979431152
    6. '\' → logprob: -10.875967979431152
    7. '```' → logprob: -11.125967979431152
    8. '<|end|>' → logprob: -12.125967979431152
    9. 'from' → logprob: -12.875967979431152
    10. 'de' → logprob: -12.875967979431152

Token 428: ' pf' (ID: 27291)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.102460578083992
    2. 'main' → logprob: -2.7274606227874756
    3. ' input' → logprob: -4.4774603843688965
    4. ' read' → logprob: -5.1024603843688965
    5. ' print' → logprob: -5.3524603843688965
    6. 'input' → logprob: -6.1024603843688965
    7. 'print' → logprob: -6.7274603843688965
    8. 'read' → logprob: -6.8524603843688965
    9. ' split' → logprob: -7.3524603843688965
    10. ' get' → logprob: -7.4774603843688965

Token 429: '(s' (ID: 1858)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20916815102100372
    2. '(' → logprob: -2.0841681957244873
    3. 'r' → logprob: -3.9591681957244873
    4. '("")' → logprob: -4.334167957305908
    5. '():' → logprob: -4.709167957305908
    6. '('' → logprob: -5.584167957305908
    7. '("' → logprob: -5.584167957305908
    8. 'ormat' → logprob: -5.959167957305908
    9. '(fmt' → logprob: -6.459167957305908
    10. '(format' → logprob: -6.709167957305908

Token 430: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11776048690080643
    2. '):
' → logprob: -2.367760419845581
    3. 'ormat' → logprob: -4.61776065826416
    4. 'orm' → logprob: -5.74276065826416
    5. 'r' → logprob: -5.86776065826416
    6. ',' → logprob: -7.86776065826416
    7. ':' → logprob: -8.49276065826416
    8. 'string' → logprob: -8.49276065826416
    9. '(s' → logprob: -8.86776065826416
    10. 'or' → logprob: -9.74276065826416

Token 431: '   ' (ID: 271)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.6423410177230835
    2. 'print' → logprob: -1.3923410177230835
    3. '(' → logprob: -2.267341136932373
    4. '   ' → logprob: -2.267341136932373
    5. '(print' → logprob: -4.267341136932373
    6. ' print' → logprob: -5.642341136932373
    7. ':' → logprob: -8.392340660095215
    8. '):' → logprob: -9.392340660095215
    9. '("' → logprob: -9.642340660095215
    10. '.print' → logprob: -9.892340660095215

Token 432: ' return' (ID: 622)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.5
    3. '   ' → logprob: -17.25
    4. '	print' → logprob: -20.0
    5. 'import' → logprob: -22.375
    6. '#print' → logprob: -22.375
    7. '(print' → logprob: -22.375
    8. 'pr' → logprob: -22.5
    9. '.print' → logprob: -22.75
    10. 'sys' → logprob: -22.75

Token 433: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.6060808522743173e-05
    2. 's' → logprob: -11.250025749206543
    3. ' print' → logprob: -12.000025749206543
    4. 'sys' → logprob: -12.000025749206543
    5. 'str' → logprob: -14.375025749206543
    6. '(s' → logprob: -17.37502670288086
    7. '(print' → logprob: -17.62502670288086
    8. ' sys' → logprob: -19.37502670288086
    9. '   ' → logprob: -20.37502670288086
    10. ' s' → logprob: -20.87502670288086

Token 434: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.006756459828466177
    2. '(' → logprob: -5.00675630569458
    3. '(f' → logprob: -10.756756782531738
    4. 's' → logprob: -11.381756782531738
    5. '((' → logprob: -12.006756782531738
    6. ' (' → logprob: -14.256756782531738
    7. '()' → logprob: -14.506756782531738
    8. '(str' → logprob: -14.506756782531738
    9. '('' → logprob: -15.006756782531738
    10. '(
' → logprob: -15.881756782531738

Token 435: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.5
    3. ')`' → logprob: -17.125
    4. '))' → logprob: -17.375
    5. ',)' → logprob: -17.875
    6. '())' → logprob: -18.0
    7. ',' → logprob: -18.0
    8. '),' → logprob: -18.625
    9. ')
' → logprob: -18.875
    10. ')#' → logprob: -19.25

Token 436: ' flush' (ID: 37790)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0006782424170523882
    2. ' end' → logprob: -7.500678062438965
    3. 'flush' → logprob: -9.000678062438965
    4. ')' → logprob: -13.375678062438965
    5. ''end' → logprob: -15.750678062438965
    6. ' flush' → logprob: -16.87567901611328
    7. ',end' → logprob: -17.00067901611328
    8. '=end' → logprob: -17.25067901611328
    9. '(end' → logprob: -17.62567901611328
    10. '	end' → logprob: -18.37567901611328

Token 437: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -5.836499985889532e-05
    2. '=' → logprob: -9.7500581741333
    3. '=False' → logprob: -17.000059127807617
    4. 'True' → logprob: -19.500059127807617
    5. '(True' → logprob: -20.125059127807617
    6. '=
' → logprob: -20.625059127807617
    7. '=T' → logprob: -22.250059127807617
    8. '=sys' → logprob: -22.625059127807617
    9. ' =' → logprob: -24.250059127807617
    10. '=

' → logprob: -24.500059127807617

Token 438: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -17.0
    3. ')`' → logprob: -18.0
    4. '))' → logprob: -18.75
    5. ')
' → logprob: -19.0
    6. '())' → logprob: -20.0
    7. ',)' → logprob: -20.25
    8. '),' → logprob: -20.25
    9. ');' → logprob: -20.5
    10. ')

' → logprob: -20.875

Token 439: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00017398154886905104
    2. '#' → logprob: -8.875173568725586
    3. '<|end|>' → logprob: -10.875173568725586
    4. 'class' → logprob: -13.125173568725586
    5. 'from' → logprob: -13.250173568725586
    6. ' def' → logprob: -13.250173568725586
    7. 'de' → logprob: -13.375173568725586
    8. '\' → logprob: -13.375173568725586
    9. '
' → logprob: -13.625173568725586
    10. '```' → logprob: -13.750173568725586

Token 440: ' pe' (ID: 1045)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6283369064331055
    2. 'main' → logprob: -1.8783369064331055
    3. ' main' → logprob: -2.1283369064331055
    4. ' p' → logprob: -3.2533369064331055
    5. 'pr' → logprob: -3.3783369064331055
    6. ' pr' → logprob: -4.0033369064331055
    7. 'ps' → logprob: -4.3783369064331055
    8. ' yes' → logprob: -4.3783369064331055
    9. 'print' → logprob: -4.7533369064331055
    10. 'yes' → logprob: -4.8783369064331055

Token 441: '(s' (ID: 1858)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01311834529042244
    2. 'rf' → logprob: -5.513118267059326
    3. '(s' → logprob: -5.638118267059326
    4. 'rror' → logprob: -6.638118267059326
    5. 'rr' → logprob: -6.638118267059326
    6. 'p' → logprob: -6.638118267059326
    7. 'f' → logprob: -7.763118267059326
    8. '(r' → logprob: -8.388118743896484
    9. 'print' → logprob: -9.013118743896484
    10. 'lf' → logprob: -9.138118743896484

Token 442: '):
' (ID: 1883)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9680561423301697
    2. ')' → logprob: -1.8430562019348145
    3. 'rror' → logprob: -1.8430562019348145
    4. '(s' → logprob: -1.9680562019348145
    5. '=' → logprob: -2.4680562019348145
    6. '):' → logprob: -3.2180562019348145
    7. '):
' → logprob: -4.2180562019348145
    8. '(r' → logprob: -5.3430562019348145
    9. 'print' → logprob: -5.7180562019348145
    10. 'rr' → logprob: -5.7180562019348145

Token 443: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.111839771270752
    2. 'r' → logprob: -1.486839771270752
    3. '(s' → logprob: -1.486839771270752
    4. '   ' → logprob: -2.486839771270752
    5. 'rror' → logprob: -2.861839771270752
    6. 'print' → logprob: -3.361839771270752
    7. ' return' → logprob: -4.361839771270752
    8. '()' → logprob: -5.111839771270752
    9. ' ' → logprob: -5.236839771270752
    10. '(r' → logprob: -5.486839771270752

Token 444: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.494079053401947
    2. ' return' → logprob: -0.994079053401947
    3. 'print' → logprob: -4.119079113006592
    4. 'import' → logprob: -6.619079113006592
    5. '   ' → logprob: -6.869079113006592
    6. ' print' → logprob: -7.119079113006592
    7. ' sys' → logprob: -9.119078636169434
    8. 'sys' → logprob: -9.119078636169434
    9. 'pass' → logprob: -9.369078636169434
    10. 'raise' → logprob: -10.494078636169434

Token 445: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015029559144750237
    2. ' print' → logprob: -6.501502990722656
    3. 'sys' → logprob: -14.501502990722656
    4. ' sys' → logprob: -16.501502990722656
    5. 'pr' → logprob: -18.751502990722656
    6. '(print' → logprob: -18.751502990722656
    7. '	print' → logprob: -19.876502990722656
    8. 's' → logprob: -20.126502990722656
    9. 'file' → logprob: -21.251502990722656
    10. 'e' → logprob: -21.751502990722656

Token 446: '(str' (ID: 7946)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.005970984697341919
    2. '(' → logprob: -5.1309709548950195
    3. '(f' → logprob: -10.38097095489502
    4. '(...' → logprob: -12.38097095489502
    5. '()' → logprob: -13.13097095489502
    6. '(str' → logprob: -14.13097095489502
    7. '(
' → logprob: -14.13097095489502
    8. '(stderr' → logprob: -14.25597095489502
    9. '(*' → logprob: -14.50597095489502
    10. 's' → logprob: -14.88097095489502

Token 447: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.375004768371582
    3. '(e' → logprob: -14.875004768371582
    4. 's' → logprob: -15.375004768371582
    5. ' (' → logprob: -17.2500057220459
    6. '(
' → logprob: -17.6250057220459
    7. '(stderr' → logprob: -18.0000057220459
    8. '(sys' → logprob: -18.3750057220459
    9. '(str' → logprob: -18.5000057220459
    10. ')' → logprob: -18.6250057220459

Token 448: '),' (ID: 936)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.636150598526001
    2. ',' → logprob: -0.886150598526001
    3. '(),' → logprob: -2.886150598526001
    4. '(' → logprob: -7.261150360107422
    5. '(sys' → logprob: -7.386150360107422
    6. ' ,' → logprob: -7.761150360107422
    7. '(e' → logprob: -8.136150360107422
    8. ')' → logprob: -8.386150360107422
    9. '(file' → logprob: -9.386150360107422
    10. ',file' → logprob: -9.386150360107422

Token 449: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.04100891947746277
    2. ' file' → logprob: -3.541008949279785
    3. 'flush' → logprob: -4.541008949279785
    4. ' flush' → logprob: -7.541008949279785
    5. 'end' → logprob: -13.916008949279785
    6. 'fl' → logprob: -14.916008949279785
    7. ' ' → logprob: -15.291008949279785
    8. '	file' → logprob: -17.04100799560547
    9. 'f' → logprob: -17.54100799560547
    10. ',file' → logprob: -17.79100799560547

Token 450: '=sys' (ID: 149200)
  Prédit: '=sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sys' → logprob: -3.2855416066013277e-05
    2. ' =' → logprob: -10.375032424926758
    3. '=' → logprob: -14.250032424926758
    4. 'sys' → logprob: -14.625032424926758
    5. '=subprocess' → logprob: -14.875032424926758
    6. '(sys' → logprob: -15.875032424926758
    7. '	sys' → logprob: -16.250032424926758
    8. ' sys' → logprob: -17.750032424926758
    9. '=os' → logprob: -19.375032424926758
    10. '=s' → logprob: -20.375032424926758

Token 451: '.stderr' (ID: 87058)
  Prédit: '.stderr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stderr' → logprob: -7.255023956531659e-05
    2. '.stdout' → logprob: -9.625072479248047
    3. 'stderr' → logprob: -12.750072479248047
    4. '.' → logprob: -13.250072479248047
    5. '.stdin' → logprob: -14.250072479248047
    6. '(stderr' → logprob: -14.750072479248047
    7. '=sys' → logprob: -15.250072479248047
    8. '.__' → logprob: -15.500072479248047
    9. '.st' → logprob: -16.625072479248047
    10. '._' → logprob: -16.750072479248047

Token 452: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ',' → logprob: -13.00000286102295
    3. ' )' → logprob: -15.00000286102295
    4. '))' → logprob: -15.62500286102295
    5. '())' → logprob: -16.750003814697266
    6. ')`' → logprob: -17.250003814697266
    7. ',)' → logprob: -17.375003814697266
    8. '),' → logprob: -17.500003814697266
    9. '')' → logprob: -17.750003814697266
    10. ')
' → logprob: -17.750003814697266

Token 453: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002810007717926055
    2. 'class' → logprob: -8.37528133392334
    3. '#' → logprob: -10.25028133392334
    4. '<|end|>' → logprob: -12.00028133392334
    5. '\' → logprob: -12.87528133392334
    6. '@' → logprob: -13.25028133392334
    7. '
' → logprob: -14.00028133392334
    8. '  
' → logprob: -14.12528133392334
    9. 'from' → logprob: -14.62528133392334
    10. '<|end|>' → logprob: -14.87528133392334

Token 454: ' JA' (ID: 84944)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6842478513717651
    2. 'main' → logprob: -1.8092478513717651
    3. ' debug' → logprob: -2.1842479705810547
    4. 'debug' → logprob: -2.6842479705810547
    5. ' memo' → logprob: -3.9342479705810547
    6. 'dbg' → logprob: -4.309247970581055
    7. ' dbg' → logprob: -4.934247970581055
    8. 'is' → logprob: -4.934247970581055
    9. 'max' → logprob: -5.059247970581055
    10. ' is' → logprob: -5.059247970581055

Token 455: '(a' (ID: 6271)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.130719780921936
    2. '()' → logprob: -1.755719780921936
    3. 'SON' → logprob: -2.1307196617126465
    4. 'N' → logprob: -2.1307196617126465
    5. 'W' → logprob: -3.0057196617126465
    6. '(' → logprob: -3.6307196617126465
    7. 'S' → logprob: -3.6307196617126465
    8. 'C' → logprob: -3.7557196617126465
    9. 'V' → logprob: -3.8807196617126465
    10. 'MP' → logprob: -3.8807196617126465

Token 456: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5390953421592712
    2. '):
' → logprob: -1.539095401763916
    3. ',' → logprob: -2.289095401763916
    4. 'rr' → logprob: -3.664095401763916
    5. 'rray' → logprob: -3.789095401763916
    6. 'nd' → logprob: -4.789095401763916
    7. 'r' → logprob: -5.164095401763916
    8. ',b' → logprob: -5.289095401763916
    9. ')' → logprob: -5.539095401763916
    10. '()):
' → logprob: -6.039095401763916

Token 457: ' sep' (ID: 31529)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.23011071979999542
    2. 'sep' → logprob: -1.980110764503479
    3. ' b' → logprob: -3.4801106452941895
    4. ' sep' → logprob: -3.8551106452941895
    5. 'n' → logprob: -4.7301106452941895
    6. 'l' → logprob: -6.4801106452941895
    7. 'lst' → logprob: -6.7301106452941895
    8. ' n' → logprob: -6.9801106452941895
    9. ')' → logprob: -7.6051106452941895
    10. ''' → logprob: -7.6051106452941895

Token 458: '):
' (ID: 1883)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '='' → logprob: -0.6230337619781494
    2. '=',' → logprob: -1.2480337619781494
    3. '=' → logprob: -1.8730337619781494
    4. '='.' → logprob: -4.49803352355957
    5. '=",' → logprob: -4.99803352355957
    6. '=None' → logprob: -5.49803352355957
    7. '="' → logprob: -7.99803352355957
    8. '=".' → logprob: -8.74803352355957
    9. '='\' → logprob: -9.37303352355957
    10. '='_' → logprob: -9.74803352355957

Token 459: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.875754177570343
    2. ':' → logprob: -1.1257541179656982
    3. '():' → logprob: -1.7507541179656982
    4. '):' → logprob: -3.5007541179656982
    5. '(a' → logprob: -3.6257541179656982
    6. '=' → logprob: -4.125754356384277
    7. 'return' → logprob: -5.375754356384277
    8. '(
' → logprob: -6.125754356384277
    9. 'print' → logprob: -7.125754356384277
    10. '(s' → logprob: -7.125754356384277

Token 460: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.032936688512563705
    2. ' return' → logprob: -3.5329365730285645
    3. 'print' → logprob: -5.7829365730285645
    4. '   ' → logprob: -9.407937049865723
    5. '	return' → logprob: -12.282937049865723
    6. 'eturn' → logprob: -12.407937049865723
    7. ')' → logprob: -12.407937049865723
    8. ' print' → logprob: -12.532937049865723
    9. ':return' → logprob: -13.782937049865723
    10. ')return' → logprob: -14.282937049865723

Token 461: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -8.995397365652025e-05
    2. 'str' → logprob: -10.000089645385742
    3. ' sep' → logprob: -10.375089645385742
    4. 'separator' → logprob: -11.875089645385742
    5. 'se' → logprob: -12.750089645385742
    6. 'a' → logprob: -13.500089645385742
    7. 'return' → logprob: -14.000089645385742
    8. '(se' → logprob: -14.500089645385742
    9. 'print' → logprob: -15.875089645385742
    10. 'f' → logprob: -15.875089645385742

Token 462: '.join' (ID: 11004)
  Prédit: '.join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.10029228776693344
    2. '.' → logprob: -2.350292205810547
    3. 'join' → logprob: -9.600292205810547
    4. '.j' → logprob: -11.600292205810547
    5. ' .' → logprob: -11.975292205810547
    6. '<|end|>' → logprob: -14.225292205810547
    7. '.Join' → logprob: -15.100292205810547
    8. '.expand' → logprob: -15.850292205810547
    9. 'j' → logprob: -15.850292205810547
    10. ').' → logprob: -15.975292205810547

Token 463: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.08517452329397202
    2. 'map' → logprob: -3.335174560546875
    3. '(str' → logprob: -3.335174560546875
    4. 'a' → logprob: -5.335174560546875
    5. '(a' → logprob: -5.335174560546875
    6. '(list' → logprob: -7.585174560546875
    7. 'list' → logprob: -9.335174560546875
    8. 'str' → logprob: -9.460174560546875
    9. '([' → logprob: -9.460174560546875
    10. '[str' → logprob: -10.960174560546875

Token 464: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0005530327325686812
    2. 'str' → logprob: -7.500553131103516
    3. '[str' → logprob: -16.625553131103516
    4. '=str' → logprob: -17.250553131103516
    5. ' str' → logprob: -17.625553131103516
    6. '```' → logprob: -18.625553131103516
    7. '(' → logprob: -18.875553131103516
    8. '   ' → logprob: -19.250553131103516
    9. '(lambda' → logprob: -19.250553131103516
    10. '
' → logprob: -19.375553131103516

Token 465: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.03675740584731102
    2. ',a' → logprob: -3.536757469177246
    3. ',' → logprob: -5.036757469177246
    4. 'a' → logprob: -7.661757469177246
    5. '(' → logprob: -11.911757469177246
    6. ' ,' → logprob: -12.536757469177246
    7. ',(' → logprob: -12.661757469177246
    8. ' (' → logprob: -13.911757469177246
    9. ',
' → logprob: -14.161757469177246
    10. ')a' → logprob: -14.411757469177246

Token 466: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.318681188422488e-05
    2. ' a' → logprob: -11.25001335144043
    3. '(a' → logprob: -16.62501335144043
    4. '	a' → logprob: -18.12501335144043
    5. ')a' → logprob: -18.12501335144043
    6. '[a' → logprob: -18.37501335144043
    7. '
' → logprob: -20.00001335144043
    8. ',a' → logprob: -20.87501335144043
    9. '   ' → logprob: -21.87501335144043
    10. 'а' → logprob: -21.87501335144043

Token 467: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -1.2113979209971149e-05
    2. ')' → logprob: -12.000012397766113
    3. ' ))' → logprob: -12.875012397766113
    4. '))
' → logprob: -13.375012397766113
    5. '()))' → logprob: -13.875012397766113
    6. ')))' → logprob: -14.125012397766113
    7. '));' → logprob: -17.000011444091797
    8. ' ' → logprob: -17.625011444091797
    9. '),' → logprob: -17.625011444091797
    10. '[' → logprob: -17.875011444091797

Token 468: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2707759737968445
    2. '(' → logprob: -1.8957760334014893
    3. '<|end|>' → logprob: -3.2707760334014893
    4. ')' → logprob: -4.02077579498291
    5. '(
' → logprob: -4.52077579498291
    6. '\n' → logprob: -4.77077579498291
    7. '#' → logprob: -5.52077579498291
    8. '\' → logprob: -6.39577579498291
    9. '()' → logprob: -6.77077579498291
    10. '
' → logprob: -7.14577579498291

Token 469: ' J' (ID: 643)
  Prédit: 'JA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'JA' → logprob: -1.4085712432861328
    2. 'main' → logprob: -1.5335712432861328
    3. 'join' → logprob: -1.9085712432861328
    4. 'JI' → logprob: -2.658571243286133
    5. ' join' → logprob: -2.908571243286133
    6. ' main' → logprob: -3.033571243286133
    7. 'J' → logprob: -3.783571243286133
    8. ' JA' → logprob: -3.783571243286133
    9. 'max' → logprob: -4.283571243286133
    10. 'print' → logprob: -4.908571243286133

Token 470: 'AA' (ID: 8857)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.009290971793234348
    2. 'O' → logprob: -5.509291172027588
    3. 'OIN' → logprob: -6.009291172027588
    4. '(A' → logprob: -6.759291172027588
    5. '(' → logprob: -7.509291172027588
    6. 'AO' → logprob: -7.759291172027588
    7. 'oin' → logprob: -9.13429069519043
    8. 'S' → logprob: -9.13429069519043
    9. 'OI' → logprob: -9.25929069519043
    10. '('' → logprob: -9.63429069519043

Token 471: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00032116140937432647
    2. '(' → logprob: -8.375321388244629
    3. '(A' → logprob: -9.500321388244629
    4. '(arr' → logprob: -12.000321388244629
    5. '(array' → logprob: -13.250321388244629
    6. ' (' → logprob: -13.625321388244629
    7. 'a' → logprob: -13.625321388244629
    8. '((' → logprob: -14.000321388244629
    9. '(
' → logprob: -14.375321388244629
    10. 'A' → logprob: -14.500321388244629

Token 472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003812217037193477
    2. ',a' → logprob: -8.125381469726562
    3. 'a' → logprob: -10.250381469726562
    4. '(a' → logprob: -10.875381469726562
    5. ',
' → logprob: -11.625381469726562
    6. ')' → logprob: -12.000381469726562
    7. ' ,' → logprob: -12.125381469726562
    8. '[' → logprob: -13.125381469726562
    9. ',s' → logprob: -13.500381469726562
    10. '(' → logprob: -13.625381469726562

Token 473: ' s' (ID: 265)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.01819349080324173
    2. ' sep' → logprob: -4.01819372177124
    3. '"' → logprob: -10.518193244934082
    4. ''' → logprob: -11.268193244934082
    5. 'se' → logprob: -13.268193244934082
    6. ')' → logprob: -14.018193244934082
    7. '_sep' → logprob: -14.643193244934082
    8. ' ' → logprob: -15.768193244934082
    9. '.sep' → logprob: -15.768193244934082
    10. 'separator' → logprob: -16.3931941986084

Token 474: ',' (ID: 11)
  Prédit: 'ep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ep' → logprob: -0.00010115911572938785
    2. 'e' → logprob: -9.250101089477539
    3. 'eq' → logprob: -12.250101089477539
    4. ')' → logprob: -16.87510108947754
    5. '):
' → logprob: -17.25010108947754
    6. '=' → logprob: -17.25010108947754
    7. 'ec' → logprob: -17.37510108947754
    8. '
' → logprob: -18.25010108947754
    9. 'sep' → logprob: -18.25010108947754
    10. 'ev' → logprob: -18.37510108947754

Token 475: ' t' (ID: 260)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.015820961445569992
    2. ' sep' → logprob: -4.2658209800720215
    3. 'e' → logprob: -6.6408209800720215
    4. 'se' → logprob: -8.890820503234863
    5. 'ep' → logprob: -9.015820503234863
    6. ' e' → logprob: -9.515820503234863
    7. '_sep' → logprob: -12.515820503234863
    8. 'j' → logprob: -13.390820503234863
    9. ')' → logprob: -13.390820503234863
    10. '
' → logprob: -13.515820503234863

Token 476: '):
' (ID: 1883)
  Prédit: 'ep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ep' → logprob: -0.004173018038272858
    2. 'e' → logprob: -5.8791728019714355
    3. '=' → logprob: -7.5041728019714355
    4. ')' → logprob: -7.7541728019714355
    5. '):
' → logprob: -8.379173278808594
    6. '):' → logprob: -9.379173278808594
    7. ')=' → logprob: -11.004173278808594
    8. 'sep' → logprob: -11.379173278808594
    9. 'p' → logprob: -11.754173278808594
    10. ',' → logprob: -11.754173278808594

Token 477: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11491203308105469
    2. ' return' → logprob: -2.2399120330810547
    3. '=' → logprob: -7.364912033081055
    4. '):
' → logprob: -7.614912033081055
    5. 'eturn' → logprob: -8.489912033081055
    6. '):' → logprob: -8.489912033081055
    7. '   ' → logprob: -8.989912033081055
    8. ' =' → logprob: -9.364912033081055
    9. 'def' → logprob: -9.364912033081055
    10. ')' → logprob: -9.614912033081055

Token 478: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0033816182985901833
    2. ' return' → logprob: -5.753381729125977
    3. 'sep' → logprob: -8.628381729125977
    4. 's' → logprob: -11.378381729125977
    5. 'def' → logprob: -11.378381729125977
    6. '
' → logprob: -14.878381729125977
    7. 'eturn' → logprob: -14.878381729125977
    8. 't' → logprob: -15.003381729125977
    9. ')' → logprob: -15.003381729125977
    10. ' sep' → logprob: -15.753381729125977

Token 479: ' s' (ID: 265)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.16478130221366882
    2. 's' → logprob: -1.9147813320159912
    3. ' s' → logprob: -6.414781093597412
    4. ' sep' → logprob: -6.539781093597412
    5. '(s' → logprob: -7.164781093597412
    6. 'se' → logprob: -9.03978157043457
    7. '(se' → logprob: -9.28978157043457
    8. '[s' → logprob: -9.41478157043457
    9. 'J' → logprob: -9.53978157043457
    10. ''\' → logprob: -9.78978157043457

Token 480: '.join' (ID: 11004)
  Prédit: '.join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.0019324433524161577
    2. 'join' → logprob: -7.001932621002197
    3. '.' → logprob: -7.751932621002197
    4. 'sep' → logprob: -7.751932621002197
    5. '.sep' → logprob: -9.251932144165039
    6. '(join' → logprob: -10.501932144165039
    7. 't' → logprob: -11.751932144165039
    8. ' .' → logprob: -12.126932144165039
    9. 'a' → logprob: -12.501932144165039
    10. ').' → logprob: -12.626932144165039

Token 481: '(t' (ID: 2025)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.014514746144413948
    2. '(t' → logprob: -4.514514923095703
    3. 'map' → logprob: -5.889514923095703
    4. '([' → logprob: -8.139514923095703
    5. '[t' → logprob: -8.264514923095703
    6. 't' → logprob: -9.514514923095703
    7. '(a' → logprob: -10.639514923095703
    8. '(str' → logprob: -10.639514923095703
    9. '(tuple' → logprob: -11.514514923095703
    10. '[' → logprob: -12.764514923095703

Token 482: '.join' (ID: 11004)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11250182241201401
    2. '[' → logprob: -3.112501859664917
    3. '(map' → logprob: -3.862501859664917
    4. ').' → logprob: -4.362501621246338
    5. 'for' → logprob: -4.737501621246338
    6. '(a' → logprob: -5.737501621246338
    7. 'map' → logprob: -5.737501621246338
    8. '(' → logprob: -5.987501621246338
    9. 'a' → logprob: -6.112501621246338
    10. '(se' → logprob: -6.487501621246338

Token 483: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.16090992093086243
    2. '(str' → logprob: -2.03590989112854
    3. 'map' → logprob: -4.035910129547119
    4. 'str' → logprob: -8.785909652709961
    5. '(tuple' → logprob: -9.035909652709961
    6. '(
' → logprob: -10.785909652709961
    7. '(list' → logprob: -11.160909652709961
    8. '(a' → logprob: -11.285909652709961
    9. 'a' → logprob: -11.535909652709961
    10. ' map' → logprob: -11.660909652709961

Token 484: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.02994428761303425
    2. 'str' → logprob: -3.5299441814422607
    3. '(' → logprob: -9.77994441986084
    4. '(lambda' → logprob: -10.40494441986084
    5. '[str' → logprob: -10.52994441986084
    6. '<|end|>' → logprob: -10.65494441986084
    7. '(s' → logprob: -10.77994441986084
    8. '(
' → logprob: -12.27994441986084
    9. ')' → logprob: -12.27994441986084
    10. 's' → logprob: -12.40494441986084

Token 485: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36614125967025757
    2. ',a' → logprob: -1.2411413192749023
    3. '(a' → logprob: -4.491141319274902
    4. 'a' → logprob: -5.116141319274902
    5. '(' → logprob: -9.491141319274902
    6. '<|end|>' → logprob: -9.741141319274902
    7. ',(' → logprob: -9.866141319274902
    8. ' ,' → logprob: -10.116141319274902
    9. ' a' → logprob: -10.366141319274902
    10. ')a' → logprob: -10.616141319274902

Token 486: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006200026720762253
    2. 'x' → logprob: -5.381199836730957
    3. 'row' → logprob: -7.006199836730957
    4. ' a' → logprob: -7.756199836730957
    5. ')' → logprob: -9.631199836730957
    6. ',' → logprob: -9.881199836730957
    7. '(a' → logprob: -10.256199836730957
    8. '   ' → logprob: -11.006199836730957
    9. '(x' → logprob: -11.006199836730957
    10. ',a' → logprob: -11.631199836730957

Token 487: '))' (ID: 915)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.01598440296947956
    2. 'a' → logprob: -4.265984535217285
    3. ')' → logprob: -6.515984535217285
    4. '))' → logprob: -8.765984535217285
    5. '(x' → logprob: -9.390984535217285
    6. '(b' → logprob: -10.265984535217285
    7. ' a' → logprob: -10.890984535217285
    8. ' (' → logprob: -11.390984535217285
    9. 's' → logprob: -12.265984535217285
    10. 'b' → logprob: -12.265984535217285

Token 488: ' for' (ID: 395)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.1186566047836095e-05
    2. ')' → logprob: -11.125031471252441
    3. 'a' → logprob: -11.500031471252441
    4. 'for' → logprob: -12.625031471252441
    5. ' (' → logprob: -14.000031471252441
    6. ' for' → logprob: -14.750031471252441
    7. '(' → logprob: -14.875031471252441
    8. '((' → logprob: -15.500031471252441
    9. '(b' → logprob: -15.500031471252441
    10. ')a' → logprob: -15.625031471252441

Token 489: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4751432538032532
    2. ' b' → logprob: -0.9751432538032532
    3. 'a' → logprob: -6.9751434326171875
    4. ' a' → logprob: -8.975143432617188
    5. '	b' → logprob: -13.225143432617188
    6. '(b' → logprob: -13.600143432617188
    7. ')b' → logprob: -14.475143432617188
    8. '_b' → logprob: -14.975143432617188
    9. ',b' → logprob: -16.475143432617188
    10. ' ' → logprob: -16.475143432617188

Token 490: ' in' (ID: 306)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.01579056866466999
    2. 'a' → logprob: -5.0157904624938965
    3. ' a' → logprob: -5.5157904624938965
    4. ' in' → logprob: -5.5157904624938965
    5. '(' → logprob: -7.6407904624938965
    6. ' (' → logprob: -7.7657904624938965
    7. ')' → logprob: -9.890790939331055
    8. ')a' → logprob: -10.890790939331055
    9. 'in' → logprob: -12.015790939331055
    10. ',a' → logprob: -12.390790939331055

Token 491: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001929228543303907
    2. ' a' → logprob: -6.25192928314209
    3. '(a' → logprob: -15.00192928314209
    4. ' ' → logprob: -16.626928329467773
    5. '[a' → logprob: -16.751928329467773
    6. ')a' → logprob: -17.001928329467773
    7. '	a' → logprob: -17.251928329467773
    8. '_a' → logprob: -19.376928329467773
    9. 'A' → logprob: -19.751928329467773
    10. 'а' → logprob: -19.751928329467773

Token 492: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10052809119224548
    2. '(a' → logprob: -2.4755280017852783
    3. '(' → logprob: -4.975528240203857
    4. ')a' → logprob: -6.225528240203857
    5. '(s' → logprob: -6.600528240203857
    6. 'a' → logprob: -7.225528240203857
    7. '))' → logprob: -8.6005277633667
    8. '[' → logprob: -10.2255277633667
    9. ')s' → logprob: -10.3505277633667
    10. '((' → logprob: -10.7255277633667

Token 493: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32706376910209656
    2. '
' → logprob: -1.827063798904419
    3. '<|end|>' → logprob: -3.077063798904419
    4. '#' → logprob: -3.702063798904419
    5. '\n' → logprob: -3.952063798904419
    6. '(
' → logprob: -4.20206356048584
    7. '(' → logprob: -5.45206356048584
    8. '\' → logprob: -5.82706356048584
    9. ')' → logprob: -6.57706356048584
    10. '[' → logprob: -7.07706356048584

Token 494: ' parse' (ID: 8420)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5050700306892395
    2. 'J' → logprob: -2.0050699710845947
    3. 'JI' → logprob: -2.6300699710845947
    4. ' main' → logprob: -3.3800699710845947
    5. 'JA' → logprob: -4.380070209503174
    6. 'pow' → logprob: -4.505070209503174
    7. 'join' → logprob: -5.005070209503174
    8. 'binary' → logprob: -5.255070209503174
    9. 'solve' → logprob: -5.255070209503174
    10. 'print' → logprob: -5.380070209503174

Token 495: '_first' (ID: 29347)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10224353522062302
    2. '_args' → logprob: -3.477243423461914
    3. '_input' → logprob: -3.852243423461914
    4. '_token' → logprob: -4.227243423461914
    5. '(' → logprob: -4.227243423461914
    6. '_line' → logprob: -5.102243423461914
    7. '_list' → logprob: -6.477243423461914
    8. ':' → logprob: -7.102243423461914
    9. '_a' → logprob: -7.227243423461914
    10. '_params' → logprob: -7.602243423461914

Token 496: '_input' (ID: 12507)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.026400737464427948
    2. '_' → logprob: -3.7764008045196533
    3. '_input' → logprob: -6.901400566101074
    4. '_token' → logprob: -7.401400566101074
    5. '_int' → logprob: -7.526400566101074
    6. 'line' → logprob: -8.276400566101074
    7. '_word' → logprob: -8.776400566101074
    8. '(' → logprob: -9.276400566101074
    9. '_key' → logprob: -9.526400566101074
    10. '(_' → logprob: -10.026400566101074

Token 497: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.44503214955329895
    2. '()' → logprob: -1.3200321197509766
    3. '_line' → logprob: -2.4450321197509766
    4. '():
' → logprob: -5.945032119750977
    5. '_' → logprob: -6.695032119750977
    6. 'line' → logprob: -6.820032119750977
    7. 't' → logprob: -9.195032119750977
    8. 's' → logprob: -9.945032119750977
    9. '_input' → logprob: -10.195032119750977
    10. ' ()' → logprob: -10.820032119750977

Token 498: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.020152678713202477
    2. '()' → logprob: -4.020152568817139
    3. '():
' → logprob: -6.270152568817139
    4. ' ():' → logprob: -9.645153045654297
    5. '()
' → logprob: -11.270153045654297
    6. '()[' → logprob: -12.020153045654297
    7. ' ()' → logprob: -12.020153045654297
    8. '()*' → logprob: -12.395153045654297
    9. '   ' → logprob: -12.895153045654297
    10. '):' → logprob: -13.020153045654297

Token 499: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6295995116233826
    2. 'return' (adapté à ' return') → logprob: -0.8795995116233826
    3. 's' → logprob: -3.5045995712280273
    4. 'line' → logprob: -4.379599571228027
    5. 'l' → logprob: -5.379599571228027
    6. ' return' → logprob: -6.254599571228027
    7. 'a' → logprob: -7.379599571228027
    8. 'lines' → logprob: -7.629599571228027
    9. 'n' → logprob: -7.754599571228027
    10. ' s' → logprob: -8.254599571228027

Token 500: ' LI' (ID: 14875)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4190361499786377
    2. 'LI' → logprob: -1.7940361499786377
    3. 'sys' → logprob: -2.2940361499786377
    4. 'list' → logprob: -3.4190361499786377
    5. 'input' → logprob: -4.169035911560059
    6. 'I' → logprob: -4.294035911560059
    7. 'map' → logprob: -5.169035911560059
    8. 'read' → logprob: -5.294035911560059
    9. 'S' → logprob: -7.169035911560059
    10. 'tuple' → logprob: -7.794035911560059

Token 501: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00013798571308143437
    2. '(' → logprob: -9.375138282775879
    3. '()
' → logprob: -10.125138282775879
    4. '()[' → logprob: -12.625138282775879
    5. '().' → logprob: -13.125138282775879
    6. '()

' → logprob: -13.375138282775879
    7. '()(' → logprob: -13.625138282775879
    8. '(),' → logprob: -14.000138282775879
    9. '()]' → logprob: -14.000138282775879
    10. '():' → logprob: -14.750138282775879

Token 502: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5040313601493835
    2. '()' → logprob: -1.6290314197540283
    3. '(' → logprob: -2.6290314197540283
    4. '#' → logprob: -3.2540314197540283
    5. '<|end|>' → logprob: -3.5040314197540283
    6. '(
' → logprob: -3.8790314197540283
    7. '():' → logprob: -4.379031181335449
    8. ':' → logprob: -4.629031181335449
    9. '
' → logprob: -4.879031181335449
    10. '<|end|>' → logprob: -6.254031181335449

Token 503: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.2494083046913147
    2. ' parse' → logprob: -1.87440824508667
    3. ' main' → logprob: -3.49940824508667
    4. 'def' → logprob: -3.99940824508667
    5. 'main' → logprob: -4.24940824508667
    6. ' def' → logprob: -5.87440824508667
    7. ' read' → logprob: -7.74940824508667
    8. 'read' → logprob: -7.74940824508667
    9. 'set' → logprob: -8.374408721923828
    10. 'get' → logprob: -8.749408721923828

Token 504: '_l' (ID: 1478)
  Prédit: '_first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.4782458543777466
    2. '_second' → logprob: -1.1032458543777466
    3. '_' → logprob: -3.478245735168457
    4. '()' → logprob: -4.728245735168457
    5. '_input' → logprob: -5.103245735168457
    6. '_next' → logprob: -7.353245735168457
    7. 'first' → logprob: -7.353245735168457
    8. 'def' → logprob: -8.603245735168457
    9. '_two' → logprob: -9.103245735168457
    10. 'second' → logprob: -9.353245735168457

Token 505: 'rc' (ID: 2366)
  Prédit: 'ines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ines' → logprob: -0.14142049849033356
    2. 'ist' → logprob: -2.266420602798462
    3. 'ine' → logprob: -3.766420602798462
    4. 'i' → logprob: -6.266420364379883
    5. 'I' → logprob: -6.766420364379883
    6. 'ast' → logprob: -7.016420364379883
    7. 'ists' → logprob: -8.641420364379883
    8. 'INES' → logprob: -8.766420364379883
    9. 'strip' → logprob: -8.766420364379883
    10. '()' → logprob: -9.516420364379883

Token 506: '(m' (ID: 2145)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0008420264348387718
    2. '()' → logprob: -7.500842094421387
    3. '():
' → logprob: -8.500842094421387
    4. 'ist' → logprob: -10.375842094421387
    5. 'ine' → logprob: -11.625842094421387
    6. '_' → logprob: -11.750842094421387
    7. 'e' → logprob: -12.250842094421387
    8. 'ut' → logprob: -12.500842094421387
    9. 'def' → logprob: -12.875842094421387
    10. 's' → logprob: -12.875842094421387

Token 507: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009204510599374771
    2. '):
' → logprob: -4.759204387664795
    3. ')' → logprob: -8.259204864501953
    4. ',' → logprob: -8.759204864501953
    5. '):
' → logprob: -10.259204864501953
    6. 'e' → logprob: -10.384204864501953
    7. ':' → logprob: -10.509204864501953
    8. ' ):' → logprob: -11.634204864501953
    9. 'atrix' → logprob: -11.759204864501953
    10. 'a' → logprob: -12.134204864501953

Token 508: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01112952921539545
    2. 'r' → logprob: -4.886129379272461
    3. 'def' → logprob: -6.886129379272461
    4. 'return' → logprob: -7.136129379272461
    5. '	return' → logprob: -7.761129379272461
    6. 'l' → logprob: -8.511129379272461
    7. '    
' → logprob: -9.261129379272461
    8. '```' → logprob: -9.261129379272461
    9. '	r' → logprob: -9.511129379272461
    10. 'ret' → logprob: -9.511129379272461

Token 509: ' l' (ID: 305)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0684414654970169
    2. '   ' → logprob: -3.068441390991211
    3. 'l' (adapté à ' l') → logprob: -4.193441390991211
    4. 'res' → logprob: -6.068441390991211
    5. 'r' → logprob: -6.818441390991211
    6. ' return' → logprob: -7.443441390991211
    7. 'lines' → logprob: -8.568441390991211
    8. 'ret' → logprob: -9.318441390991211
    9. 'arr' → logprob: -9.693441390991211
    10. 'L' → logprob: -9.943441390991211

Token 510: 'rc' (ID: 2366)
  Prédit: ',r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -1.4317935705184937
    2. 'r' → logprob: -1.5567935705184937
    3. ' =' → logprob: -1.6817935705184937
    4. ',' → logprob: -1.8067935705184937
    5. 'ine' → logprob: -2.306793689727783
    6. '=' → logprob: -2.931793689727783
    7. 'ist' → logprob: -3.931793689727783
    8. 'ines' → logprob: -4.306793689727783
    9. '=[]' → logprob: -5.556793689727783
    10. 'rc' → logprob: -5.681793689727783

Token 511: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5505000352859497
    2. ' =' → logprob: -0.9255000352859497
    3. 'ist' → logprob: -3.92549991607666
    4. 'ine' → logprob: -5.67549991607666
    5. 'ines' → logprob: -6.80049991607666
    6. 's' → logprob: -6.80049991607666
    7. '=[]' → logprob: -7.17549991607666
    8. '=[]
' → logprob: -7.42549991607666
    9. 'st' → logprob: -9.42549991607666
    10. '   ' → logprob: -10.42549991607666

Token 512: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3833208680152893
    2. '[]
' → logprob: -1.8833208084106445
    3. '[]' → logprob: -2.1333208084106445
    4. '[m' → logprob: -3.1333208084106445
    5. '[list' → logprob: -6.0083208084106445
    6. '[L' → logprob: -7.5083208084106445
    7. '[l' → logprob: -7.6333208084106445
    8. '[line' → logprob: -8.258320808410645
    9. '[get' → logprob: -9.633320808410645
    10. '[List' → logprob: -9.758320808410645

Token 513: 'LI' (ID: 14313)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4675222635269165
    2. 'LI' → logprob: -1.4675222635269165
    3. 'tuple' → logprob: -2.092522144317627
    4. 'read' → logprob: -4.217522144317627
    5. 'parse' → logprob: -6.467522144317627
    6. '[' → logprob: -6.717522144317627
    7. '[]' → logprob: -7.592522144317627
    8. ']' → logprob: -8.217522621154785
    9. 'sys' → logprob: -8.217522621154785
    10. 'None' → logprob: -8.467522621154785

Token 514: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.128163257315464e-07
    2. ' ()' → logprob: -17.0
    3. '()]' → logprob: -17.125
    4. '()
' → logprob: -17.125
    5. 'for' → logprob: -17.625
    6. '()[' → logprob: -19.625
    7. ' for' → logprob: -19.75
    8. ')' → logprob: -20.5
    9. '(' → logprob: -20.625
    10. '（）' → logprob: -21.0

Token 515: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1700209081172943
    2. ' for' → logprob: -2.170020818710327
    3. 'for' → logprob: -3.170020818710327
    4. '   ' → logprob: -8.920021057128906
    5. '	for' → logprob: -10.545021057128906
    6. '()]' → logprob: -11.795021057128906
    7. ' ()' → logprob: -13.045021057128906
    8. ')' → logprob: -13.545021057128906
    9. ']' → logprob: -13.920021057128906
    10. '()
' → logprob: -14.045021057128906

Token 516: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.874882430769503e-05
    2. ' _' → logprob: -10.250079154968262
    3. '_i' → logprob: -10.625079154968262
    4. '_range' → logprob: -11.625079154968262
    5. 'i' → logprob: -12.000079154968262
    6. '_in' → logprob: -13.625079154968262
    7. ' in' → logprob: -13.875079154968262
    8. '_
' → logprob: -14.500079154968262
    9. ' range' → logprob: -15.250079154968262
    10. ' i' → logprob: -15.625079154968262

Token 517: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020701291039586067
    2. 'in' → logprob: -3.8957014083862305
    3. 'range' → logprob: -8.89570140838623
    4. ' ' → logprob: -11.64570140838623
    5. 'i' → logprob: -11.77070140838623
    6. 'm' → logprob: -13.02070140838623
    7. ' range' → logprob: -14.02070140838623
    8. '  ' → logprob: -14.02070140838623
    9. ' _' → logprob: -14.27070140838623
    10. 'n' → logprob: -14.64570140838623

Token 518: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10028257966041565
    2. ' range' → logprob: -2.350282669067383
    3. ' in' → logprob: -9.850282669067383
    4. 'in' → logprob: -11.350282669067383
    5. '	range' → logprob: -12.600282669067383
    6. '(range' → logprob: -12.850282669067383
    7. '_' → logprob: -13.100282669067383
    8. 'm' → logprob: -13.850282669067383
    9. '_range' → logprob: -14.600282669067383
    10. 'r' → logprob: -14.725282669067383

Token 519: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00020616286201402545
    2. 'm' → logprob: -8.500205993652344
    3. '(' → logprob: -13.000205993652344
    4. '(
' → logprob: -15.125205993652344
    5. '	m' → logprob: -16.875205993652344
    6. ' m' → logprob: -17.125205993652344
    7. ' (' → logprob: -17.250205993652344
    8. '   ' → logprob: -18.750205993652344
    9. '((' → logprob: -20.125205993652344
    10. '
' → logprob: -20.500205993652344

Token 520: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.394135612528771e-05
    2. ')' → logprob: -10.625043869018555
    3. ']' → logprob: -11.000043869018555
    4. ')]
' → logprob: -13.000043869018555
    5. ' )' → logprob: -15.500043869018555
    6. '()]' → logprob: -15.750043869018555
    7. '   ' → logprob: -16.500043869018555
    8. ')],' → logprob: -16.875043869018555
    9. '))' → logprob: -17.000043869018555
    10. ')
' → logprob: -17.500043869018555

Token 521: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005491026677191257
    2. '<|end|>' → logprob: -8.00054931640625
    3. 'return' → logprob: -9.25054931640625
    4. '	return' → logprob: -9.62554931640625
    5. ' return' → logprob: -10.62554931640625
    6. ')' → logprob: -11.37554931640625
    7. '
' → logprob: -11.87554931640625
    8. '    
' → logprob: -13.00054931640625
    9. ':return' → logprob: -13.87554931640625
    10. '<|end|>' → logprob: -13.87554931640625

Token 522: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.22784675657749176
    2. '   ' → logprob: -1.9778467416763306
    3. ' return' → logprob: -2.72784686088562
    4. '	return' → logprob: -10.8528470993042
    5. ' ' → logprob: -12.1028470993042
    6. '  ' → logprob: -14.1028470993042
    7. '
' → logprob: -14.6028470993042
    8. ':return' → logprob: -15.2278470993042
    9. 'def' → logprob: -15.7278470993042
    10. '_return' → logprob: -15.8528470993042

Token 523: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.004078401252627373
    2. ' l' → logprob: -5.504078388214111
    3. '	l' → logprob: -18.129077911376953
    4. '[l' → logprob: -18.379077911376953
    5. '(l' → logprob: -19.879077911376953
    6. 'list' → logprob: -20.379077911376953
    7. '[' → logprob: -21.629077911376953
    8. '   ' → logprob: -21.629077911376953
    9. 'ltr' → logprob: -22.004077911376953
    10. 'li' → logprob: -22.004077911376953

Token 524: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.007195069920271635
    2. 'l' → logprob: -5.257194995880127
    3. 'c' → logprob: -6.382194995880127
    4. 'r' → logprob: -9.007195472717285
    5. '(rc' → logprob: -9.882195472717285
    6. 'crc' → logprob: -10.257195472717285
    7. '_rc' → logprob: -10.382195472717285
    8. '[' → logprob: -12.007195472717285
    9. 'RC' → logprob: -12.632195472717285
    10. 'irc' → logprob: -12.882195472717285

Token 525: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 526: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19847874343395233
    2. '<|end|>' → logprob: -1.8234786987304688
    3. '
' → logprob: -4.073478698730469
    4. '#' → logprob: -6.948478698730469
    5. '```' → logprob: -8.573478698730469
    6. '<|end|>' → logprob: -8.698478698730469
    7. '[' → logprob: -9.948478698730469
    8. '

' → logprob: -10.323478698730469
    9. '  
' → logprob: -11.323478698730469
    10. ')' → logprob: -11.323478698730469

Token 527: ' l' (ID: 305)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.07043007016181946
    2. 'parse' → logprob: -2.945430040359497
    3. ' main' → logprob: -5.320430278778076
    4. 'pow' → logprob: -6.320430278778076
    5. 'solve' → logprob: -6.320430278778076
    6. 'dfs' → logprob: -6.570430278778076
    7. 'g' → logprob: -7.195430278778076
    8. 'def' → logprob: -7.320430278778076
    9. 'binary' → logprob: -7.445430278778076
    10. 'read' → logprob: -7.695430278778076

Token 528: 'rc' (ID: 2366)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.40742817521095276
    2. 'ist' → logprob: -2.03242826461792
    3. 'ambda' → logprob: -2.65742826461792
    4. 'ru' → logprob: -3.65742826461792
    5. 'strip' → logprob: -4.15742826461792
    6. 'og' → logprob: -4.78242826461792
    7. 'def' → logprob: -4.78242826461792
    8. 'eft' → logprob: -4.78242826461792
    9. 'range' → logprob: -4.78242826461792
    10. 'oad' → logprob: -4.90742826461792

Token 529: '_sort' (ID: 43815)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.04240773618221283
    2. '(' → logprob: -3.542407751083374
    3. 'parse' → logprob: -6.292407512664795
    4. '_parse' → logprob: -6.292407512664795
    5. 'def' → logprob: -6.542407512664795
    6. '=' → logprob: -6.667407512664795
    7. '_' → logprob: -7.417407512664795
    8. ' =' → logprob: -7.667407512664795
    9. '(M' → logprob: -7.667407512664795
    10. '(n' → logprob: -7.667407512664795

Token 530: '_key' (ID: 6724)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.06303802877664566
    2. '(m' → logprob: -2.8130381107330322
    3. '(' → logprob: -6.938037872314453
    4. '(a' → logprob: -10.438037872314453
    5. '():' → logprob: -11.063037872314453
    6. '(lst' → logprob: -11.563037872314453
    7. ' (' → logprob: -11.938037872314453
    8. '(d' → logprob: -12.063037872314453
    9. '(s' → logprob: -12.313037872314453
    10. '(arr' → logprob: -12.563037872314453

Token 531: '(x' (ID: 4061)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.1082463264465332
    2. '(line' → logprob: -3.233246326446533
    3. '(row' → logprob: -3.483246326446533
    4. '(' → logprob: -3.858246326446533
    5. '(key' → logprob: -5.483246326446533
    6. '(a' → logprob: -6.108246326446533
    7. '(s' → logprob: -6.608246326446533
    8. '(x' → logprob: -7.608246326446533
    9. '(m' → logprob: -7.733246326446533
    10. '(k' → logprob: -7.858246326446533

Token 532: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005981885362416506
    2. '):
' → logprob: -5.130981922149658
    3. ')' → logprob: -10.1309814453125
    4. ' ):' → logprob: -11.8809814453125
    5. '):
' → logprob: -13.5059814453125
    6. ',' → logprob: -13.6309814453125
    7. ':' → logprob: -13.8809814453125
    8. '[]):' → logprob: -14.2559814453125
    9. '):

' → logprob: -14.5059814453125
    10. '):(' → logprob: -15.0059814453125

Token 533: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8665618896484375
    2. 'x' → logprob: -1.1165618896484375
    3. '(x' → logprob: -2.2415618896484375
    4. '   ' → logprob: -2.6165618896484375
    5. ':' → logprob: -4.2415618896484375
    6. ':
' → logprob: -4.2415618896484375
    7. '):
' → logprob: -4.3665618896484375
    8. '):' → logprob: -4.6165618896484375
    9. 'lambda' → logprob: -4.9915618896484375
    10. 'a' → logprob: -5.8665618896484375

Token 534: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00013440960901789367
    2. 'lambda' → logprob: -9.750134468078613
    3. 'x' → logprob: -10.125134468078613
    4. 'def' → logprob: -10.375134468078613
    5. ' return' → logprob: -12.375134468078613
    6. '   ' → logprob: -14.500134468078613
    7. 'ret' → logprob: -17.250133514404297
    8. ':return' → logprob: -17.375133514404297
    9. '(lambda' → logprob: -18.000133514404297
    10. '=lambda' → logprob: -18.250133514404297

Token 535: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5251164436340332
    2. 'x' → logprob: -0.9001164436340332
    3. ' (' → logprob: -6.525116443634033
    4. ' x' → logprob: -8.275115966796875
    5. '(' → logprob: -8.400115966796875
    6. '(int' → logprob: -11.275115966796875
    7. '(-' → logprob: -11.275115966796875
    8. 'tuple' → logprob: -12.025115966796875
    9. '[x' → logprob: -13.150115966796875
    10. '(lambda' → logprob: -13.275115966796875

Token 536: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.107425062713446e-06
    2. '(x' → logprob: -12.000006675720215
    3. ' x' → logprob: -14.125006675720215
    4. '-' → logprob: -16.50000762939453
    5. ')x' → logprob: -17.50000762939453
    6. 'int' → logprob: -18.50000762939453
    7. '(' → logprob: -18.62500762939453
    8. ')' → logprob: -18.62500762939453
    9. '-x' → logprob: -18.75000762939453
    10. 'len' → logprob: -18.75000762939453

Token 537: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. ')' → logprob: -14.750001907348633
    3. '[
' → logprob: -14.750001907348633
    4. '0' → logprob: -14.875001907348633
    5. ',' → logprob: -15.500001907348633
    6. ')[' → logprob: -15.750001907348633
    7. '1' → logprob: -16.000001907348633
    8. ' [' → logprob: -16.250001907348633
    9. '
' → logprob: -16.500001907348633
    10. '[L' → logprob: -16.875001907348633

Token 538: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04890879616141319
    2. '1' → logprob: -3.0489087104797363
    3. '2' → logprob: -8.423909187316895
    4. ' ' → logprob: -9.298909187316895
    5. '[' → logprob: -12.798909187316895
    6. '   ' → logprob: -13.361409187316895
    7. '-' → logprob: -14.111409187316895
    8. '
' → logprob: -14.111409187316895
    9. '3' → logprob: -14.548909187316895
    10. ':' → logprob: -14.611409187316895

Token 539: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05516074225306511
    2. ',x' → logprob: -2.9301607608795166
    3. ' ,' → logprob: -8.680160522460938
    4. ',
' → logprob: -9.180160522460938
    5. ')' → logprob: -13.680160522460938
    6. '[' → logprob: -13.805160522460938
    7. 'x' → logprob: -14.680160522460938
    8. '),' → logprob: -14.805160522460938
    9. '],' → logprob: -14.930160522460938
    10. ',)' → logprob: -15.055160522460938

Token 540: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10020710527896881
    2. ' x' → logprob: -2.3502070903778076
    3. ')x' → logprob: -15.975207328796387
    4. ' ' → logprob: -16.10020637512207
    5. ')' → logprob: -16.22520637512207
    6. '	x' → logprob: -17.10020637512207
    7. ' ' → logprob: -17.47520637512207
    8. '   ' → logprob: -17.60020637512207
    9. '  ' → logprob: -17.60020637512207
    10. '    ' → logprob: -17.72520637512207

Token 541: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00029744720086455345
    2. ',' → logprob: -8.500297546386719
    3. '1' → logprob: -9.500297546386719
    4. '[
' → logprob: -11.125297546386719
    5. ')' → logprob: -12.875297546386719
    6. ',
' → logprob: -14.625297546386719
    7. ' [' → logprob: -14.625297546386719
    8. ')[' → logprob: -16.12529754638672
    9. '
' → logprob: -16.25029754638672
    10. '2' → logprob: -16.25029754638672

Token 542: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.396757089532912e-05
    2. '2' → logprob: -9.8750638961792
    3. ' ' → logprob: -11.6250638961792
    4. '[' → logprob: -14.0625638961792
    5. 'x' → logprob: -14.5000638961792
    6. ')' → logprob: -14.9375638961792
    7. '0' → logprob: -15.0625638961792
    8. '   ' → logprob: -15.3125638961792
    9. '
' → logprob: -15.3750638961792
    10. ',' → logprob: -16.000064849853516

Token 543: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.217951886355877e-05
    2. ' )' → logprob: -10.750061988830566
    3. ',' → logprob: -11.000061988830566
    4. '])' → logprob: -11.000061988830566
    5. ')
' → logprob: -13.500061988830566
    6. '<|end|>' → logprob: -13.625061988830566
    7. ',)' → logprob: -14.375061988830566
    8. '))' → logprob: -14.375061988830566
    9. ')#' → logprob: -14.500061988830566
    10. '})' → logprob: -14.500061988830566

Token 544: ' -' (ID: 533)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.016048094257712364
    2. ' x' → logprob: -4.141047954559326
    3. ')' → logprob: -11.766048431396484
    4. ')x' → logprob: -12.141048431396484
    5. '(x' → logprob: -15.266048431396484
    6. '	x' → logprob: -16.141048431396484
    7. '<|end|>' → logprob: -16.641048431396484
    8. ' ' → logprob: -16.891048431396484
    9. '0' → logprob: -17.141048431396484
    10. '   ' → logprob: -17.141048431396484

Token 545: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.935296834039036e-06
    2. ' x' → logprob: -12.87500286102295
    3. 'int' → logprob: -15.50000286102295
    4. '(x' → logprob: -16.875003814697266
    5. '1' → logprob: -18.125003814697266
    6. '(' → logprob: -18.375003814697266
    7. '<|end|>' → logprob: -19.000003814697266
    8. ')x' → logprob: -19.750003814697266
    9. '
' → logprob: -20.000003814697266
    10. '	x' → logprob: -20.625003814697266

Token 546: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017238459549844265
    2. '1' → logprob: -6.376723766326904
    3. '[
' → logprob: -11.001724243164062
    4. '(' → logprob: -13.376724243164062
    5. 'x' → logprob: -14.126724243164062
    6. '][' → logprob: -14.501724243164062
    7. ' [' → logprob: -14.751724243164062
    8. '#' → logprob: -14.751724243164062
    9. '<|end|>' → logprob: -15.251724243164062
    10. '0' → logprob: -15.626724243164062

Token 547: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '0' → logprob: -14.750000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '[' → logprob: -16.375001907348633
    5. '3' → logprob: -16.812501907348633
    6. '11' → logprob: -17.375001907348633
    7. '   ' → logprob: -17.812501907348633
    8. '
' → logprob: -18.062501907348633
    9. '2' → logprob: -18.250001907348633
    10. '(' → logprob: -18.562501907348633

Token 548: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3133072853088379
    2. ')' → logprob: -1.313307285308838
    3. ']' → logprob: -11.18830680847168
    4. ')])' → logprob: -11.81330680847168
    5. '})' → logprob: -12.06330680847168
    6. ')]' → logprob: -12.31330680847168
    7. '[' → logprob: -12.68830680847168
    8. ' ])' → logprob: -12.81330680847168
    9. ' )' → logprob: -12.93830680847168
    10. '))' → logprob: -13.18830680847168

Token 549: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6610034108161926
    2. 'def' → logprob: -0.7860034108161926
    3. '<|end|>' → logprob: -3.786003351211548
    4. ':' → logprob: -7.036003589630127
    5. '(' → logprob: -7.161003589630127
    6. '#' → logprob: -7.286003589630127
    7. '```' → logprob: -7.536003589630127
    8. '()' → logprob: -7.911003589630127
    9. '
' → logprob: -8.161003112792969
    10. '\n' → logprob: -8.161003112792969

Token 550: ' append' (ID: 17147)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9927871823310852
    2. ' l' → logprob: -1.6177871227264404
    3. 'main' → logprob: -1.8677871227264404
    4. 'parse' → logprob: -2.9927871227264404
    5. 'get' → logprob: -3.4927871227264404
    6. ' main' → logprob: -3.6177871227264404
    7. 'def' → logprob: -4.1177873611450195
    8. 'read' → logprob: -4.8677873611450195
    9. ' parse' → logprob: -4.9927873611450195
    10. 'max' → logprob: -4.9927873611450195

Token 551: '_inf' (ID: 107309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1497877836227417
    2. '_' → logprob: -2.1497879028320312
    3. 'def' → logprob: -5.274787902832031
    4. '(a' → logprob: -5.649787902832031
    5. '```' → logprob: -6.149787902832031
    6. '<|end|>' → logprob: -6.274787902832031
    7. ')' → logprob: -6.524787902832031
    8. 'a' → logprob: -6.899787902832031
    9. ' (' → logprob: -6.899787902832031
    10. 's' → logprob: -7.399787902832031

Token 552: '_l' (ID: 1478)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(arr' → logprob: -1.0396207571029663
    2. '(' → logprob: -1.5396207571029663
    3. '()' → logprob: -2.414620876312256
    4. 'ix' → logprob: -2.539620876312256
    5. '(array' → logprob: -2.789620876312256
    6. '(lst' → logprob: -2.789620876312256
    7. 'inite' → logprob: -4.289620876312256
    8. '(l' → logprob: -4.289620876312256
    9. 'inity' → logprob: -4.414620876312256
    10. '(a' → logprob: -4.664620876312256

Token 553: 'rc' (ID: 2366)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.014437667094171047
    2. '(' → logprob: -5.139437675476074
    3. '()' → logprob: -6.139437675476074
    4. 'ine' → logprob: -6.264437675476074
    5. 'o' → logprob: -7.139437675476074
    6. '(list' → logprob: -7.514437675476074
    7. 'st' → logprob: -8.014437675476074
    8. '```' → logprob: -8.014437675476074
    9. '(lst' → logprob: -8.014437675476074
    10. '(arr' → logprob: -8.514437675476074

Token 554: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.002753045642748475
    2. '(_' → logprob: -7.377753257751465
    3. '(a' → logprob: -7.877753257751465
    4. '(' → logprob: -7.877753257751465
    5. '(lst' → logprob: -8.002753257751465
    6. '_(' → logprob: -8.127753257751465
    7. '(arr' → logprob: -8.377753257751465
    8. '(L' → logprob: -8.752753257751465
    9. '(s' → logprob: -9.502753257751465
    10. '(list' → logprob: -10.127753257751465

Token 555: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.00011796683247666806
    2. '_rc' → logprob: -9.500118255615234
    3. 'r' → logprob: -10.375118255615234
    4. '(rc' → logprob: -12.625118255615234
    5. 'ist' → logprob: -13.125118255615234
    6. 'cr' → logprob: -13.500118255615234
    7. 'RC' → logprob: -13.750118255615234
    8. ')' → logprob: -14.125118255615234
    9. 'rl' → logprob: -14.750118255615234
    10. '_r' → logprob: -15.125118255615234

Token 556: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3304547071456909
    2. '):
' → logprob: -1.580454707145691
    3. '(l' → logprob: -2.8304548263549805
    4. ',' → logprob: -4.3304548263549805
    5. ')' → logprob: -6.3304548263549805
    6. ',l' → logprob: -6.7054548263549805
    7. '(lst' → logprob: -9.33045482635498
    8. '(' → logprob: -9.58045482635498
    9. '):

' → logprob: -9.95545482635498
    10. '):
' → logprob: -10.20545482635498

Token 557: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.9483706951141357
    2. 'n' → logprob: -1.0733706951141357
    3. 'm' → logprob: -2.9483706951141357
    4. 'l' → logprob: -3.1983706951141357
    5. 'x' → logprob: -3.3233706951141357
    6. 'max' → logprob: -3.6983706951141357
    7. 'INF' → logprob: -3.8233706951141357
    8. 'k' → logprob: -4.198370933532715
    9. 'val' → logprob: -4.698370933532715
    10. 'v' → logprob: -4.948370933532715

Token 558: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.563642680644989
    2. '=' → logprob: -0.938642680644989
    3. '=float' → logprob: -3.438642740249634
    4. '=[]' → logprob: -5.938642501831055
    5. '=None' → logprob: -6.313642501831055
    6. '):
' → logprob: -6.688642501831055
    7. ' =' → logprob: -7.188642501831055
    8. 'o' → logprob: -8.688642501831055
    9. ')' → logprob: -8.813642501831055
    10. '=sys' → logprob: -8.938642501831055

Token 559: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24802035093307495
    2. ':' → logprob: -1.8730204105377197
    3. ':
' → logprob: -3.2480204105377197
    4. '):
' → logprob: -3.8730204105377197
    5. '):' → logprob: -5.373020172119141
    6. ' :' → logprob: -7.498020172119141
    7. ' :
' → logprob: -7.623020172119141
    8. '():
' → logprob: -8.24802017211914
    9. ',' → logprob: -9.24802017211914
    10. '():' → logprob: -9.24802017211914

Token 560: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.09195996075868607
    2. '   ' → logprob: -2.5919599533081055
    3. ' l' → logprob: -4.5919599533081055
    4. 'for' → logprob: -6.2169599533081055
    5. ' for' → logprob: -7.2169599533081055
    6. 'return' → logprob: -9.591959953308105
    7. ' return' → logprob: -10.841959953308105
    8. '
' → logprob: -11.341959953308105
    9. '	l' → logprob: -11.716959953308105
    10. 'def' → logprob: -12.841959953308105

Token 561: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -3.292907877039397e-06
    2. '   ' → logprob: -13.87500286102295
    3. 'r' → logprob: -14.25000286102295
    4. '(rc' → logprob: -14.62500286102295
    5. '	rc' → logprob: -14.75000286102295
    6. '_rc' → logprob: -16.000003814697266
    7. '```' → logprob: -16.125003814697266
    8. 'src' → logprob: -16.625003814697266
    9. 'rcode' → logprob: -16.750003814697266
    10. ' =' → logprob: -16.750003814697266

Token 562: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009183663059957325
    2. '.' → logprob: -7.000918388366699
    3. '.app' → logprob: -12.5009183883667
    4. '.extend' → logprob: -13.3759183883667
    5. 'append' → logprob: -14.2509183883667
    6. ' .' → logprob: -14.7509183883667
    7. '.ap' → logprob: -15.1259183883667
    8. '.
' → logprob: -16.750917434692383
    9. '.setdefault' → logprob: -17.000917434692383
    10. '.sort' → logprob: -17.375917434692383

Token 563: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.013496066443622112
    2. '(in' → logprob: -4.513495922088623
    3. '((' → logprob: -6.388495922088623
    4. '(' → logprob: -8.138496398925781
    5. '[' → logprob: -8.138496398925781
    6. '([-' → logprob: -9.513496398925781
    7. '(([' → logprob: -10.013496398925781
    8. '[in' → logprob: -10.263496398925781
    9. '(l' → logprob: -11.888496398925781
    10. '[(' → logprob: -12.263496398925781

Token 564: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0012052309466525912
    2. '0' → logprob: -7.1262054443359375
    3. '-inf' → logprob: -8.376205444335938
    4. '-' → logprob: -9.751205444335938
    5. '999' → logprob: -10.501205444335938
    6. '1' → logprob: -11.126205444335938
    7. '100' → logprob: -11.126205444335938
    8. '10' → logprob: -11.376205444335938
    9. 'math' → logprob: -11.376205444335938
    10. ' inf' → logprob: -11.876205444335938

Token 565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00418702932074666
    2. ',float' → logprob: -5.629187107086182
    3. ',in' → logprob: -8.754186630249023
    4. ' ,' → logprob: -9.129186630249023
    5. '])' → logprob: -9.379186630249023
    6. 'inf' → logprob: -9.879186630249023
    7. ',int' → logprob: -10.254186630249023
    8. ',-' → logprob: -10.379186630249023
    9. ']' → logprob: -10.504186630249023
    10. ',None' → logprob: -10.504186630249023

Token 566: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.22020818293094635
    2. '-inf' → logprob: -1.8452081680297852
    3. '-' → logprob: -3.970208168029785
    4. '0' → logprob: -3.970208168029785
    5. 'math' → logprob: -7.345208168029785
    6. 'float' → logprob: -7.595208168029785
    7. '10' → logprob: -8.595208168029785
    8. 'sys' → logprob: -8.845208168029785
    9. '1' → logprob: -8.970208168029785
    10. '-in' → logprob: -9.720208168029785

Token 567: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003191386058460921
    2. ' ,' → logprob: -8.500319480895996
    3. ',in' → logprob: -9.375319480895996
    4. ',
' → logprob: -11.125319480895996
    5. ',f' → logprob: -12.875319480895996
    6. 'inf' → logprob: -12.875319480895996
    7. ',int' → logprob: -13.000319480895996
    8. ',float' → logprob: -13.625319480895996
    9. ',None' → logprob: -13.875319480895996
    10. ',n' → logprob: -14.250319480895996

Token 568: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.1156991645693779
    2. '-inf' → logprob: -2.240699052810669
    3. '-' → logprob: -5.990699291229248
    4. ' inf' → logprob: -8.86569881439209
    5. '0' → logprob: -8.99069881439209
    6. '-in' → logprob: -9.99069881439209
    7. ' -' → logprob: -10.49069881439209
    8. '.inf' → logprob: -11.24069881439209
    9. '_inf' → logprob: -12.11569881439209
    10. '1' → logprob: -13.24069881439209

Token 569: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -5.061676347395405e-05
    2. '])
' → logprob: -10.00005054473877
    3. ' ])' → logprob: -12.87505054473877
    4. ')' → logprob: -14.37505054473877
    5. ']' → logprob: -14.37505054473877
    6. ')])' → logprob: -15.12505054473877
    7. ',' → logprob: -15.25005054473877
    8. ']);' → logprob: -15.37505054473877
    9. '])

' → logprob: -15.50005054473877
    10. '])
' → logprob: -15.75005054473877

Token 570: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 571: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 572: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0001366744691040367
    2. 'None' → logprob: -9.000136375427246
    3. ' l' → logprob: -11.250136375427246
    4. ' None' → logprob: -15.125136375427246
    5. '	l' → logprob: -18.375137329101562
    6. '<|end|>' → logprob: -19.125137329101562
    7. 'len' → logprob: -20.000137329101562
    8. '(None' → logprob: -20.000137329101562
    9. 'none' → logprob: -20.000137329101562
    10. 'lary' → logprob: -21.000137329101562

Token 573: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.0006052182870917022
    2. 'c' → logprob: -8.250605583190918
    3. 'r' → logprob: -8.750605583190918
    4. 'l' → logprob: -9.375605583190918
    5. 'crc' → logprob: -9.750605583190918
    6. 'cr' → logprob: -10.125605583190918
    7. 'lc' → logprob: -13.625605583190918
    8. '(rc' → logprob: -15.375605583190918
    9. 'rcode' → logprob: -15.625605583190918
    10. 'rl' → logprob: -15.750605583190918

Token 574: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 575: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00019662656995933503
    2. '<|end|>' → logprob: -9.00019645690918
    3. '#' → logprob: -10.12519645690918
    4. '```' → logprob: -10.75019645690918
    5. 'class' → logprob: -12.12519645690918
    6. ' def' → logprob: -13.37519645690918
    7. '<|end|>' → logprob: -13.50019645690918
    8. '
' → logprob: -14.37519645690918
    9. '[' → logprob: -14.50019645690918
    10. 'import' → logprob: -14.87519645690918

Token 576: ' initialize' (ID: 18400)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.775980532169342
    2. 'main' → logprob: -1.1509804725646973
    3. 'get' → logprob: -3.4009804725646973
    4. 'bis' → logprob: -3.5259804725646973
    5. 'l' → logprob: -3.6509804725646973
    6. 'pop' → logprob: -3.6509804725646973
    7. 'binary' → logprob: -4.400980472564697
    8. 'def' → logprob: -4.650980472564697
    9. 'is' → logprob: -4.775980472564697
    10. 'parse' → logprob: -5.275980472564697

Token 577: '_index' (ID: 7748)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.9799403548240662
    2. '():' → logprob: -1.729940414428711
    3. '_' → logprob: -2.354940414428711
    4. '_counter' → logprob: -3.229940414428711
    5. '()' → logprob: -3.354940414428711
    6. '_dist' → logprob: -3.479940414428711
    7. '_l' → logprob: -3.604940414428711
    8. '_map' → logprob: -3.729940414428711
    9. '_set' → logprob: -3.854940414428711
    10. '_data' → logprob: -3.979940414428711

Token 578: '():
' (ID: 8595)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.2407950162887573
    2. 'es' → logprob: -1.6157950162887573
    3. '_map' → logprob: -1.6157950162887573
    4. '_array' → logprob: -1.7407950162887573
    5. '(n' → logprob: -2.740795135498047
    6. '():' → logprob: -3.490795135498047
    7. '()' → logprob: -4.490795135498047
    8. '_counter' → logprob: -4.865795135498047
    9. '():
' → logprob: -4.990795135498047
    10. '_stack' → logprob: -5.490795135498047

Token 579: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023613469675183296
    2. 'def' → logprob: -4.523613452911377
    3. '():
' → logprob: -5.398613452911377
    4. '()' → logprob: -5.773613452911377
    5. 'return' → logprob: -6.398613452911377
    6. '
' → logprob: -6.648613452911377
    7. '():' → logprob: -6.773613452911377
    8. '()
' → logprob: -7.648613452911377
    9. '    
' → logprob: -9.648613929748535
    10. '[]' → logprob: -10.148613929748535

Token 580: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0012040425790473819
    2. ' return' → logprob: -7.251204013824463
    3. '   ' → logprob: -7.876204013824463
    4. 'n' → logprob: -10.376204490661621
    5. 'idx' → logprob: -10.626204490661621
    6. 'import' → logprob: -11.001204490661621
    7. 'index' → logprob: -11.376204490661621
    8. 'd' → logprob: -12.001204490661621
    9. 'ret' → logprob: -12.126204490661621
    10. 'i' → logprob: -12.501204490661621

Token 581: ' ' (ID: 220)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.8231014013290405
    2. '[]' → logprob: -1.1981014013290405
    3. '0' → logprob: -1.5731014013290405
    4. 'collections' → logprob: -3.44810152053833
    5. '[' → logprob: -4.69810152053833
    6. 'dict' → logprob: -5.57310152053833
    7. 'default' → logprob: -5.82310152053833
    8. ' ' → logprob: -6.57310152053833
    9. ' []' → logprob: -7.44810152053833
    10. 'list' → logprob: -7.57310152053833

Token 582: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4607102572917938
    2. '[]' → logprob: -1.8357102870941162
    3. '[' → logprob: -2.335710287094116
    4. '{}' → logprob: -2.585710287094116
    5. 'collections' → logprob: -4.210710048675537
    6. 'default' → logprob: -4.585710048675537
    7. 'list' → logprob: -4.960710048675537
    8. 'dict' → logprob: -6.085710048675537
    9. '[-' → logprob: -7.085710048675537
    10. '{' → logprob: -7.585710048675537

Token 583: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 584: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009875539690256119
    2. 'class' → logprob: -7.500987529754639
    3. '
' → logprob: -9.125988006591797
    4. '<|end|>' → logprob: -9.250988006591797
    5. '#' → logprob: -9.500988006591797
    6. '<|end|>' → logprob: -9.750988006591797
    7. 'import' → logprob: -10.875988006591797
    8. 'x' → logprob: -11.250988006591797
    9. 'de' → logprob: -12.125988006591797
    10. 'n' → logprob: -12.500988006591797

Token 585: ' initialize' (ID: 18400)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10740853101015091
    2. 'main' → logprob: -2.8574085235595703
    3. ' initialize' → logprob: -3.6074085235595703
    4. 'initialize' → logprob: -4.85740852355957
    5. 'def' → logprob: -5.73240852355957
    6. ' def' → logprob: -6.35740852355957
    7. ' get' → logprob: -6.85740852355957
    8. ' parse' → logprob: -7.35740852355957
    9. 'parse' → logprob: -8.23240852355957
    10. ' solve' → logprob: -8.23240852355957

Token 586: '_q' (ID: 19384)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.5972162485122681
    2. '_counter' → logprob: -1.722216248512268
    3. '_' → logprob: -2.5972161293029785
    4. '()' → logprob: -3.0972161293029785
    5. '_count' → logprob: -3.4722161293029785
    6. '_stack' → logprob: -3.8472161293029785
    7. '():' → logprob: -3.9722161293029785
    8. '_value' → logprob: -3.9722161293029785
    9. '():
' → logprob: -4.7222161293029785
    10. '_array' → logprob: -4.9722161293029785

Token 587: '(in' (ID: 9573)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.027077507227659225
    2. '():
' → logprob: -3.9020774364471436
    3. '()' → logprob: -5.527077674865723
    4. 'ue' → logprob: -6.027077674865723
    5. 'u' → logprob: -9.277077674865723
    6. '():
' → logprob: -11.902077674865723
    7. '=' → logprob: -12.777077674865723
    8. '[]' → logprob: -13.027077674865723
    9. '()):
' → logprob: -13.277077674865723
    10. '();' → logprob: -13.527077674865723

Token 588: 'f' (ID: 69)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.012251566164195538
    2. 'q' → logprob: -6.012251377105713
    3. 'put' → logprob: -6.012251377105713
    4. 't' → logprob: -6.387251377105713
    5. '[]' → logprob: -7.012251377105713
    6. 'e' → logprob: -7.262251377105713
    7. 'itialize' → logprob: -7.262251377105713
    8. 'eed' → logprob: -7.512251377105713
    9. 'def' → logprob: -7.762251377105713
    10. '()' → logprob: -8.137251853942871

Token 589: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7695221304893494
    2. '):' → logprob: -0.7695221304893494
    3. '=' → logprob: -2.644522190093994
    4. '=float' → logprob: -6.769522190093994
    5. ')' → logprob: -7.519522190093994
    6. ',' → logprob: -8.269521713256836
    7. '=None' → logprob: -9.144521713256836
    8. '=int' → logprob: -9.269521713256836
    9. '=sys' → logprob: -9.269521713256836
    10. '):

' → logprob: -9.394521713256836

Token 590: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013652118854224682
    2. 'return' → logprob: -4.388652324676514
    3. ' return' → logprob: -6.888652324676514
    4. '	return' → logprob: -9.638651847839355
    5. 'import' → logprob: -10.513651847839355
    6. 'deque' → logprob: -12.013651847839355
    7. '[]' → logprob: -12.388651847839355
    8. 'def' → logprob: -12.513651847839355
    9. '  ' → logprob: -12.763651847839355
    10. ' ' → logprob: -12.763651847839355

Token 591: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02681967243552208
    2. 'deque' → logprob: -4.151819705963135
    3. '   ' → logprob: -5.401819705963135
    4. 'heap' → logprob: -6.026819705963135
    5. '[]' → logprob: -6.276819705963135
    6. ' return' → logprob: -7.401819705963135
    7. 'q' → logprob: -7.526819705963135
    8. 'import' → logprob: -7.651819705963135
    9. 'collections' → logprob: -8.901819229125977
    10. '=[]' → logprob: -10.026819229125977

Token 592: ' [(' (ID: 43900)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.20743748545646667
    2. 'collections' → logprob: -1.707437515258789
    3. '[' → logprob: -5.457437515258789
    4. '[(' → logprob: -6.957437515258789
    5. 'heap' → logprob: -7.332437515258789
    6. 'deque' → logprob: -9.957437515258789
    7. '[]
' → logprob: -10.832437515258789
    8. '[]}' → logprob: -10.957437515258789
    9. '[],' → logprob: -11.457437515258789
    10. ' []' → logprob: -11.707437515258789

Token 593: '1' (ID: 16)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.027837656438350677
    2. '-inf' → logprob: -3.7778377532958984
    3. '0' → logprob: -6.027837753295898
    4. '-' → logprob: -6.277837753295898
    5. ')' → logprob: -9.027837753295898
    6. '-in' → logprob: -10.277837753295898
    7. '1' → logprob: -10.652837753295898
    8. 'float' → logprob: -11.027837753295898
    9. ' inf' → logprob: -11.027837753295898
    10. ' -' → logprob: -11.152837753295898

Token 594: ',' (ID: 11)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.4464085102081299
    2. ',' → logprob: -1.6964085102081299
    3. '0' → logprob: -1.9464085102081299
    4. 'inf' → logprob: -4.196408271789551
    5. ' <<' → logprob: -5.196408271789551
    6. '000' → logprob: -5.696408271789551
    7. '
' → logprob: -6.571408271789551
    8. ',
' → logprob: -6.946408271789551
    9. '*' → logprob: -7.071408271789551
    10. ')' → logprob: -7.321408271789551

Token 595: ' ' (ID: 220)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.15335991978645325
    2. '0' → logprob: -2.903359889984131
    3. 'initialize' → logprob: -3.278359889984131
    4. '-' → logprob: -3.778359889984131
    5. '-inf' → logprob: -3.778359889984131
    6. ')' → logprob: -7.028359889984131
    7. ' inf' → logprob: -7.403359889984131
    8. ' -' → logprob: -7.528359889984131
    9. 'init' → logprob: -7.778359889984131
    10. '-in' → logprob: -8.153360366821289

Token 596: '0' (ID: 15)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.21782217919826508
    2. '0' → logprob: -2.2178220748901367
    3. '-' → logprob: -3.3428220748901367
    4. '-inf' → logprob: -3.4678220748901367
    5. 'initialize' → logprob: -4.092822074890137
    6. ')' → logprob: -6.967822074890137
    7. 'init' → logprob: -7.592822074890137
    8. '-in' → logprob: -7.842822074890137
    9. '1' → logprob: -8.092822074890137
    10. ' inf' → logprob: -8.717822074890137

Token 597: '),' (ID: 936)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.057542622089385986
    2. ',' → logprob: -2.932542562484741
    3. ')' → logprob: -6.55754280090332
    4. '0' → logprob: -7.55754280090332
    5. 'inf' → logprob: -8.30754280090332
    6. '000' → logprob: -9.55754280090332
    7. '),' → logprob: -9.55754280090332
    8. ']' → logprob: -9.93254280090332
    9. ')]
' → logprob: -10.93254280090332
    10. ')],' → logprob: -11.05754280090332

Token 598: ' (' (ID: 350)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3647322952747345
    2. '(' → logprob: -1.989732265472412
    3. 'initialize' → logprob: -2.864732265472412
    4. 'inf' → logprob: -3.239732265472412
    5. '0' → logprob: -3.364732265472412
    6. '[]' → logprob: -4.614732265472412
    7. '(-' → logprob: -5.364732265472412
    8. '1' → logprob: -5.364732265472412
    9. '()]' → logprob: -5.864732265472412
    10. '[' → logprob: -6.114732265472412

Token 599: 'inf' (ID: 22226)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6394567489624023
    2. '0' → logprob: -1.6394567489624023
    3. 'inf' → logprob: -1.6394567489624023
    4. '1' → logprob: -3.1394567489624023
    5. '2' → logprob: -3.7644567489624023
    6. '-inf' → logprob: -4.639456748962402
    7. 'initialize' → logprob: -6.889456748962402
    8. ' -' → logprob: -7.014456748962402
    9. 'init' → logprob: -7.139456748962402
    10. '3' → logprob: -7.389456748962402

Token 600: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006872945814393461
    2. '+' → logprob: -7.875687122344971
    3. ')]' → logprob: -9.000687599182129
    4. ' ,' → logprob: -10.375687599182129
    5. 'inf' → logprob: -10.750687599182129
    6. ' +' → logprob: -10.875687599182129
    7. '0' → logprob: -10.875687599182129
    8. '1' → logprob: -11.000687599182129
    9. '-' → logprob: -11.000687599182129
    10. ')' → logprob: -11.250687599182129

Token 601: ' inf' (ID: 5603)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6724920272827148
    2. ' ' → logprob: -1.4224920272827148
    3. 'inf' → logprob: -2.422492027282715
    4. '1' → logprob: -2.672492027282715
    5. ')' → logprob: -2.797492027282715
    6. '-' → logprob: -4.797492027282715
    7. ' inf' → logprob: -5.422492027282715
    8. ' -' → logprob: -5.672492027282715
    9. 'float' → logprob: -6.172492027282715
    10. 'math' → logprob: -6.547492027282715

Token 602: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.001563185011036694
    2. ',' → logprob: -7.25156307220459
    3. '),' → logprob: -7.37656307220459
    4. ')' → logprob: -9.25156307220459
    5. ')]
' → logprob: -10.62656307220459
    6. '),(' → logprob: -11.00156307220459
    7. '+' → logprob: -11.00156307220459
    8. ')],' → logprob: -11.62656307220459
    9. ' )' → logprob: -11.75156307220459
    10. ']' → logprob: -11.87656307220459

Token 603: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31210559606552124
    2. '<|end|>' → logprob: -1.562105655670166
    3. ']' → logprob: -3.312105655670166
    4. ')' → logprob: -3.937105655670166
    5. '[' → logprob: -7.187105655670166
    6. '<|end|>' → logprob: -7.812105655670166
    7. ',' → logprob: -8.062105178833008
    8. '[]' → logprob: -8.312105178833008
    9. '

' → logprob: -8.812105178833008
    10. '
' → logprob: -8.937105178833008

Token 604: ' update' (ID: 4027)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -1.0959370136260986
    2. ' main' → logprob: -1.2209370136260986
    3. 'main' → logprob: -1.3459370136260986
    4. ' initialize' → logprob: -2.9709370136260986
    5. 'q' → logprob: -3.9709370136260986
    6. ' pop' → logprob: -5.3459367752075195
    7. 'pop' → logprob: -5.5959367752075195
    8. 'get' → logprob: -5.7209367752075195
    9. 'def' → logprob: -5.9709367752075195
    10. ' q' → logprob: -6.3459367752075195

Token 605: '_index' (ID: 7748)
  Prédit: '_q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.12478823214769363
    2. '_' → logprob: -2.499788284301758
    3. '(' → logprob: -4.124788284301758
    4. '(q' → logprob: -4.624788284301758
    5. 'q' → logprob: -5.624788284301758
    6. '_(' → logprob: -6.374788284301758
    7. '_index' → logprob: -6.374788284301758
    8. '_queue' → logprob: -7.999788284301758
    9. '(index' → logprob: -8.749788284301758
    10. '(_' → logprob: -8.999788284301758

Token 606: '1' (ID: 16)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.3134368658065796
    2. '():' → logprob: -2.438436985015869
    3. '(i' → logprob: -2.563436985015869
    4. '()' → logprob: -2.938436985015869
    5. '(' → logprob: -3.188436985015869
    6. '(idx' → logprob: -5.063436985015869
    7. '(in' → logprob: -6.938436985015869
    8. ' (' → logprob: -7.438436985015869
    9. '(x' → logprob: -7.688436985015869
    10. '(
' → logprob: -7.813436985015869

Token 607: '(l' (ID: 4179)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.11114535480737686
    2. '(i' → logprob: -2.986145257949829
    3. '(' → logprob: -3.611145257949829
    4. '(idx' → logprob: -4.361145496368408
    5. '():' → logprob: -4.611145496368408
    6. '()' → logprob: -6.111145496368408
    7. '(in' → logprob: -6.986145496368408
    8. '(x' → logprob: -7.736145496368408
    9. '(n' → logprob: -7.861145496368408
    10. '(
' → logprob: -8.23614501953125

Token 608: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.028310095891356468
    2. ',' → logprob: -4.403310298919678
    3. 'index' → logprob: -5.028310298919678
    4. 'r' → logprob: -6.153310298919678
    5. 'ist' → logprob: -6.278310298919678
    6. ')' → logprob: -7.028310298919678
    7. ',index' → logprob: -7.653310298919678
    8. 'e' → logprob: -8.15330982208252
    9. 'idx' → logprob: -8.27830982208252
    10. 'en' → logprob: -8.52830982208252

Token 609: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020159341394901276
    2. '):' → logprob: -4.3951592445373535
    3. ',index' → logprob: -5.2701592445373535
    4. ')' → logprob: -6.5201592445373535
    5. '):
' → logprob: -8.270159721374512
    6. '[index' → logprob: -8.770159721374512
    7. '   ' → logprob: -8.770159721374512
    8. ',i' → logprob: -9.395159721374512
    9. ',x' → logprob: -9.520159721374512
    10. '[' → logprob: -10.020159721374512

Token 610: ' i' (ID: 575)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.8535381555557251
    2. 'index' → logprob: -1.353538155555725
    3. 'i' → logprob: -1.478538155555725
    4. 'x' → logprob: -3.2285380363464355
    5. 'q' → logprob: -4.6035380363464355
    6. ' idx' → logprob: -4.8535380363464355
    7. 'inf' → logprob: -5.1035380363464355
    8. ' index' → logprob: -5.7285380363464355
    9. 'k' → logprob: -5.8535380363464355
    10. 'key' → logprob: -6.1035380363464355

Token 611: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17543920874595642
    2. '):
' → logprob: -2.1754391193389893
    3. ',' → logprob: -3.1754391193389893
    4. ')' → logprob: -5.550439357757568
    5. ',i' → logprob: -6.800439357757568
    6. '   ' → logprob: -8.67543888092041
    7. '+' → logprob: -9.80043888092041
    8. '[i' → logprob: -10.05043888092041
    9. ' ):' → logprob: -10.05043888092041
    10. ' ,' → logprob: -10.42543888092041

Token 612: ' l' (ID: 305)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8616697788238525
    2. 'inf' → logprob: -1.6116697788238525
    3. 'm' → logprob: -2.8616697788238525
    4. 'v' → logprob: -3.3616697788238525
    5. 'val' → logprob: -3.6116697788238525
    6. ' x' → logprob: -3.8616697788238525
    7. 'n' → logprob: -3.8616697788238525
    8. 'q' → logprob: -3.8616697788238525
    9. 'mid' → logprob: -3.9866697788238525
    10. 'd' → logprob: -3.9866697788238525

Token 613: '):
' (ID: 1883)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.02131670154631138
    2. '[i' → logprob: -5.3963165283203125
    3. ')' → logprob: -5.5213165283203125
    4. '[' → logprob: -5.5213165283203125
    5. 'i' → logprob: -6.5213165283203125
    6. 'r' → logprob: -6.7713165283203125
    7. 'en' → logprob: -7.1463165283203125
    8. ']' → logprob: -7.1463165283203125
    9. '   ' → logprob: -7.2713165283203125
    10. ',' → logprob: -7.5213165283203125

Token 614: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37640613317489624
    2. '=' → logprob: -2.126406192779541
    3. '=i' → logprob: -3.251406192779541
    4. ' =' → logprob: -3.376406192779541
    5. ':' → logprob: -3.501406192779541
    6. ',' → logprob: -4.001406192779541
    7. ' i' → logprob: -4.251406192779541
    8. '[i' → logprob: -4.376406192779541
    9. ',i' → logprob: -4.626406192779541
    10. '(i' → logprob: -4.876406192779541

Token 615: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3406633138656616
    2. 'while' (adapté à ' while') → logprob: -1.4656633138656616
    3. '   ' → logprob: -3.465663433074951
    4. 'i' → logprob: -4.090663433074951
    5. 'return' → logprob: -5.465663433074951
    6. ' while' → logprob: -6.215663433074951
    7. 'def' → logprob: -6.590663433074951
    8. ' if' → logprob: -6.715663433074951
    9. 'mid' → logprob: -7.965663433074951
    10. 'x' → logprob: -8.965662956237793

Token 616: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006908706855028868
    2. ' i' → logprob: -7.625690937042236
    3. 'l' → logprob: -9.000690460205078
    4. '(i' → logprob: -9.625690460205078
    5. '   ' → logprob: -12.000690460205078
    6. '	i' → logprob: -12.750690460205078
    7. 'not' → logprob: -13.250690460205078
    8. '
' → logprob: -14.875690460205078
    9. 'True' → logprob: -15.250690460205078
    10. '  ' → logprob: -15.250690460205078

Token 617: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.4517157971858978
    2. '[i' → logprob: -1.2017158269882202
    3. 'i' → logprob: -4.07671594619751
    4. '   ' → logprob: -4.07671594619751
    5. 'c' → logprob: -4.32671594619751
    6. '[' → logprob: -5.82671594619751
    7. ' and' → logprob: -5.95171594619751
    8. ' i' → logprob: -6.20171594619751
    9. ' <' → logprob: -6.57671594619751
    10. '[index' → logprob: -7.20171594619751

Token 618: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003023345780093223
    2. '[' → logprob: -8.5003023147583
    3. 'i' → logprob: -10.3753023147583
    4. '[l' → logprob: -10.6253023147583
    5. '][' → logprob: -12.1253023147583
    6. '[
' → logprob: -12.3753023147583
    7. 'and' → logprob: -12.5003023147583
    8. ' i' → logprob: -12.5003023147583
    9. '
' → logprob: -12.6253023147583
    10. ' and' → logprob: -12.6253023147583

Token 619: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.31354254484176636
    2. '[' → logprob: -1.3135426044464111
    3. 'and' → logprob: -9.438542366027832
    4. '   ' → logprob: -10.313542366027832
    5. '0' → logprob: -10.563542366027832
    6. ' ][' → logprob: -10.688542366027832
    7. ']' → logprob: -10.938542366027832
    8. '[i' → logprob: -10.938542366027832
    9. ')[' → logprob: -11.563542366027832
    10. '
' → logprob: -11.688542366027832

Token 620: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.054958902299404144
    2. '1' → logprob: -2.9299588203430176
    3. '2' → logprob: -9.804959297180176
    4. ' ' → logprob: -11.679959297180176
    5. '
' → logprob: -12.492459297180176
    6. '[' → logprob: -13.054959297180176
    7. '   ' → logprob: -13.367459297180176
    8. '    
' → logprob: -14.367459297180176
    9. '```' → logprob: -14.429959297180176
    10. '(' → logprob: -14.679959297180176

Token 621: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24006660282611847
    2. ']<=' → logprob: -2.2400665283203125
    3. ']<' → logprob: -3.1150665283203125
    4. '<=' → logprob: -3.4900665283203125
    5. '<' → logprob: -3.6150665283203125
    6. ' <' → logprob: -7.1150665283203125
    7. ' <=' → logprob: -7.1150665283203125
    8. '[' → logprob: -7.2400665283203125
    9. ']>=' → logprob: -7.3650665283203125
    10. ']==' → logprob: -7.6150665283203125

Token 622: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.11235309392213821
    2. '<=' → logprob: -2.3623530864715576
    3. ' <' → logprob: -4.612353324890137
    4. ' <=' → logprob: -6.737353324890137
    5. '>' → logprob: -7.987353324890137
    6. '>=' → logprob: -8.362353324890137
    7. '+' → logprob: -8.862353324890137
    8. '==' → logprob: -9.112353324890137
    9. '<len' → logprob: -10.862353324890137
    10. '[' → logprob: -11.237353324890137

Token 623: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0015636618481948972
    2. ' l' → logprob: -6.501563549041748
    3. '=' → logprob: -10.751564025878906
    4. 'inf' → logprob: -11.376564025878906
    5. '1' → logprob: -11.751564025878906
    6. 'i' → logprob: -12.001564025878906
    7. '=l' → logprob: -12.001564025878906
    8. '	l' → logprob: -12.501564025878906
    9. '0' → logprob: -14.001564025878906
    10. '
' → logprob: -14.251564025878906

Token 624: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3583136796951294
    2. '[' → logprob: -1.6083136796951294
    3. ':
' → logprob: -3.35831356048584
    4. ':' → logprob: -3.48331356048584
    5. 'and' → logprob: -4.10831356048584
    6. '+' → logprob: -4.98331356048584
    7. ' +' → logprob: -5.73331356048584
    8. '   ' → logprob: -6.73331356048584
    9. ']:' → logprob: -6.73331356048584
    10. ']' → logprob: -6.85831356048584

Token 625: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15163388848304749
    2. ' and' → logprob: -2.4016339778900146
    3. 'i' → logprob: -3.7766339778900146
    4. '   ' → logprob: -4.9016337394714355
    5. 'and' → logprob: -4.9016337394714355
    6. ' i' → logprob: -4.9016337394714355
    7. '	i' → logprob: -6.2766337394714355
    8. ':' → logprob: -6.9016337394714355
    9. ':
' → logprob: -7.2766337394714355
    10. '	' → logprob: -7.6516337394714355

Token 626: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0269179604947567
    2. '       ' → logprob: -3.7769179344177246
    3. '   ' → logprob: -5.901917934417725
    4. ' i' → logprob: -7.151917934417725
    5. '	i' → logprob: -8.901918411254883
    6. '           ' → logprob: -12.651918411254883
    7. '	' → logprob: -12.901918411254883
    8. '1' → logprob: -13.151918411254883
    9. ' ' → logprob: -14.026918411254883
    10. '_i' → logprob: -14.151918411254883

Token 627: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0008606038754805923
    2. ' +=' → logprob: -7.125860691070557
    3. '=' → logprob: -10.000860214233398
    4. '+' → logprob: -11.500860214233398
    5. ']+=' → logprob: -14.625860214233398
    6. '   ' → logprob: -17.5008602142334
    7. ',' → logprob: -18.0008602142334
    8. ' +' → logprob: -18.1258602142334
    9. '+='' → logprob: -18.1258602142334
    10. '.' → logprob: -18.3758602142334

Token 628: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -19.750123977661133
    4. '１' → logprob: -21.000123977661133
    5. '  ' → logprob: -21.125123977661133
    6. '2' → logprob: -21.125123977661133
    7. '+' → logprob: -21.625123977661133
    8. '```' → logprob: -21.625123977661133
    9. ' ' → logprob: -21.937623977661133
    10. '۱' → logprob: -22.437623977661133

Token 629: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -18.25001335144043
    4. '```' → logprob: -19.06251335144043
    5. '  ' → logprob: -19.56251335144043
    6. '１' → logprob: -20.06251335144043
    7. '
' → logprob: -20.31251335144043
    8. '2' → logprob: -20.50001335144043
    9. '+' → logprob: -20.50001335144043
    10. '۱' → logprob: -20.93751335144043

Token 630: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 631: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 632: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 633: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001584850688232109
    2. ' i' → logprob: -8.750158309936523
    3. '	i' → logprob: -19.750158309936523
    4. '   ' → logprob: -20.125158309936523
    5. ' ' → logprob: -21.500158309936523
    6. '(i' → logprob: -21.875158309936523
    7. 'int' → logprob: -22.250158309936523
    8. ' ' → logprob: -23.125158309936523
    9. '_i' → logprob: -23.625158309936523
    10. 'I' → logprob: -23.625158309936523

Token 634: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5790061950683594
    2. '<|end|>' → logprob: -0.8290061950683594
    3. '<|end|>' → logprob: -6.829006195068359
    4. ')' → logprob: -6.829006195068359
    5. '#' → logprob: -8.20400619506836
    6. '```' → logprob: -9.07900619506836
    7. '
' → logprob: -9.45400619506836
    8. ',' → logprob: -9.57900619506836
    9. ' def' → logprob: -9.82900619506836
    10. '_' → logprob: -9.95400619506836

Token 635: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009821140207350254
    2. 'd' → logprob: -5.759820938110352
    3. '#' → logprob: -5.884820938110352
    4. '<|end|>' → logprob: -6.009820938110352
    5. ')' → logprob: -8.384820938110352
    6. '[' → logprob: -8.759820938110352
    7. '
' → logprob: -8.884820938110352
    8. 'i' → logprob: -9.134820938110352
    9. '.' → logprob: -9.134820938110352
    10. '_' → logprob: -9.134820938110352

Token 636: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.06878484040498734
    2. 'main' → logprob: -3.8187849521636963
    3. 'initialize' → logprob: -3.9437849521636963
    4. 'def' → logprob: -4.193784713745117
    5. ' update' → logprob: -5.943784713745117
    6. 'get' → logprob: -6.318784713745117
    7. 'l' → logprob: -6.818784713745117
    8. 'binary' → logprob: -7.318784713745117
    9. 'parse' → logprob: -7.443784713745117
    10. 'append' → logprob: -7.693784713745117

Token 637: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.011752613820135593
    2. '_i' → logprob: -5.011752605438232
    3. '_q' → logprob: -5.761752605438232
    4. 'index' → logprob: -6.511752605438232
    5. '_idx' → logprob: -8.76175308227539
    6. 'q' → logprob: -10.01175308227539
    7. '_indices' → logprob: -10.26175308227539
    8. '_l' → logprob: -10.51175308227539
    9. 'i' → logprob: -10.88675308227539
    10. '_pos' → logprob: -11.26175308227539

Token 638: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5305913090705872
    2. '1' → logprob: -0.9055913090705872
    3. '(l' → logprob: -5.0305914878845215
    4. '(' → logprob: -8.530591011047363
    5. 'def' → logprob: -8.905591011047363
    6. '0' → logprob: -9.155591011047363
    7. '```' → logprob: -9.280591011047363
    8. '12' → logprob: -9.530591011047363
    9. '3' → logprob: -9.655591011047363
    10. '_' → logprob: -10.155591011047363

Token 639: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -2.117345684382599e-05
    2. '(' → logprob: -11.500020980834961
    3. '(L' → logprob: -12.375020980834961
    4. 'def' → logprob: -13.375020980834961
    5. '(i' → logprob: -14.125020980834961
    6. '(s' → logprob: -14.375020980834961
    7. '(line' → logprob: -14.625020980834961
    8. '(lambda' → logprob: -14.750020980834961
    9. ' (' → logprob: -14.875020980834961
    10. '(
' → logprob: -15.125020980834961

Token 640: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.0009059838484972715
    2. '(rc' → logprob: -7.125905990600586
    3. '_rc' → logprob: -9.375905990600586
    4. 'r' → logprob: -11.875905990600586
    5. '   ' → logprob: -12.750905990600586
    6. '(r' → logprob: -13.500905990600586
    7. '(l' → logprob: -13.750905990600586
    8. ',' → logprob: -13.875905990600586
    9. '(' → logprob: -14.250905990600586
    10. '	rc' → logprob: -14.625905990600586

Token 641: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003076950670219958
    2. ',i' → logprob: -8.7503080368042
    3. ',l' → logprob: -9.5003080368042
    4. ' ,' → logprob: -9.8753080368042
    5. '(i' → logprob: -11.1253080368042
    6. '(l' → logprob: -11.8753080368042
    7. '   ' → logprob: -14.6253080368042
    8. ',
' → logprob: -15.8753080368042
    9. '[i' → logprob: -16.000307083129883
    10. ' (' → logprob: -16.375307083129883

Token 642: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22656023502349854
    2. ' i' → logprob: -1.6015602350234985
    3. '   ' → logprob: -7.726560115814209
    4. 'j' → logprob: -8.476560592651367
    5. 'l' → logprob: -8.976560592651367
    6. ' l' → logprob: -9.601560592651367
    7. ' j' → logprob: -9.851560592651367
    8. ' ' → logprob: -9.851560592651367
    9. 'def' → logprob: -10.351560592651367
    10. 'lambda' → logprob: -10.351560592651367

Token 643: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004183986166026443
    2. ',l' → logprob: -8.125418663024902
    3. ' ,' → logprob: -9.125418663024902
    4. '   ' → logprob: -11.625418663024902
    5. '(l' → logprob: -12.750418663024902
    6. ',i' → logprob: -14.375418663024902
    7. ' l' → logprob: -15.250418663024902
    8. ',
' → logprob: -15.250418663024902
    9. 'def' → logprob: -16.375417709350586
    10. '):
' → logprob: -17.000417709350586

Token 644: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.36932313442230225
    2. 'r' → logprob: -1.3693231344223022
    3. ' l' → logprob: -3.244323253631592
    4. ' r' → logprob: -4.744323253631592
    5. 'i' → logprob: -5.619323253631592
    6. 'x' → logprob: -6.744323253631592
    7. 's' → logprob: -7.869323253631592
    8. 'v' → logprob: -8.244322776794434
    9. 't' → logprob: -8.744322776794434
    10. ' i' → logprob: -8.869322776794434

Token 645: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6953439116477966
    2. '):' → logprob: -1.1953439712524414
    3. ',' → logprob: -1.8203439712524414
    4. '   ' → logprob: -3.3203439712524414
    5. '):
' → logprob: -8.445343971252441
    6. ')' → logprob: -9.695343971252441
    7. ',l' → logprob: -10.695343971252441
    8. 'def' → logprob: -10.820343971252441
    9. '  ' → logprob: -11.195343971252441
    10. ' ' → logprob: -11.945343971252441

Token 646: ' q' (ID: 2335)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.34191250801086426
    2. ' r' → logprob: -1.5919125080108643
    3. 'inf' → logprob: -3.4669125080108643
    4. ' inf' → logprob: -3.9669125080108643
    5. 'j' → logprob: -5.216912269592285
    6. 'n' → logprob: -5.591912269592285
    7. 'm' → logprob: -5.841912269592285
    8. 'x' → logprob: -5.966912269592285
    9. ' n' → logprob: -6.091912269592285
    10. ' j' → logprob: -6.091912269592285

Token 647: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.41438028216362
    2. '):
' → logprob: -1.1643803119659424
    3. ',' → logprob: -3.6643803119659424
    4. '):
' → logprob: -6.914380073547363
    5. ')' → logprob: -8.664380073547363
    6. 'q' → logprob: -9.664380073547363
    7. '):

' → logprob: -9.789380073547363
    8. ' ):' → logprob: -9.789380073547363
    9. '   ' → logprob: -10.664380073547363
    10. '1' → logprob: -10.664380073547363

Token 648: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2571752071380615
    2. 'while' → logprob: -2.0071752071380615
    3. ' while' → logprob: -2.3821752071380615
    4. 'def' → logprob: -11.38217544555664
    5. '	while' → logprob: -11.50717544555664
    6. 'for' → logprob: -11.75717544555664
    7. 'if' → logprob: -12.38217544555664
    8. ' for' → logprob: -12.38217544555664
    9. '```' → logprob: -12.38217544555664
    10. '
' → logprob: -12.63217544555664

Token 649: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.006826432887464762
    2. 'if' → logprob: -5.256826400756836
    3. 'v' → logprob: -7.256826400756836
    4. ' while' → logprob: -8.131826400756836
    5. '   ' → logprob: -8.381826400756836
    6. 'for' → logprob: -8.756826400756836
    7. 'q' → logprob: -10.256826400756836
    8. 'x' → logprob: -10.506826400756836
    9. 'val' → logprob: -11.131826400756836
    10. 'tmp' → logprob: -11.506826400756836

Token 650: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8495545983314514
    2. 'i' → logprob: -1.3495545387268066
    3. ' l' → logprob: -1.8495545387268066
    4. ' i' → logprob: -2.3495545387268066
    5. 'q' → logprob: -3.0995545387268066
    6. ' q' → logprob: -4.224554538726807
    7. ' not' → logprob: -8.724555015563965
    8. '   ' → logprob: -9.099555015563965
    9. 'len' → logprob: -9.224555015563965
    10. 'not' → logprob: -9.599555015563965

Token 651: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.0002096197713399306
    2. '[i' → logprob: -9.37520980834961
    3. 'q' → logprob: -9.87520980834961
    4. 'cr' → logprob: -10.12520980834961
    5. '[' → logprob: -11.87520980834961
    6. 'c' → logprob: -12.37520980834961
    7. 'r' → logprob: -12.50020980834961
    8. '   ' → logprob: -13.00020980834961
    9. '[q' → logprob: -13.12520980834961
    10. '_rc' → logprob: -13.25020980834961

Token 652: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9146995327901095e-05
    2. '[q' → logprob: -11.125019073486328
    3. '[' → logprob: -12.625019073486328
    4. 'i' → logprob: -15.625019073486328
    5. '[j' → logprob: -15.750019073486328
    6. '```' → logprob: -15.750019073486328
    7. '   ' → logprob: -16.250019073486328
    8. 'and' → logprob: -16.375019073486328
    9. '[++' → logprob: -16.750019073486328
    10. '[I' → logprob: -16.875019073486328

Token 653: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006525091012008488
    2. '[' → logprob: -7.625652313232422
    3. '[i' → logprob: -9.500652313232422
    4. ']' → logprob: -10.500652313232422
    5. 'and' → logprob: -10.875652313232422
    6. ' ][' → logprob: -10.875652313232422
    7. '   ' → logprob: -11.250652313232422
    8. ']][' → logprob: -13.500652313232422
    9. ''][' → logprob: -14.125652313232422
    10. 'if' → logprob: -14.250652313232422

Token 654: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00527241500094533
    2. '1' → logprob: -5.255272388458252
    3. '2' → logprob: -10.63027286529541
    4. '
' → logprob: -12.56777286529541
    5. ' ' → logprob: -12.56777286529541
    6. '[' → logprob: -13.50527286529541
    7. '   ' → logprob: -14.06777286529541
    8. 'q' → logprob: -14.44277286529541
    9. '3' → logprob: -14.63027286529541
    10. '-' → logprob: -14.69277286529541

Token 655: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1177075058221817
    2. '<=' → logprob: -2.3677074909210205
    3. ' <' → logprob: -4.2427077293396
    4. ' <=' → logprob: -5.9927077293396
    5. '>' → logprob: -8.117707252502441
    6. '[' → logprob: -9.992707252502441
    7. '>=' → logprob: -10.742707252502441
    8. '==' → logprob: -10.867707252502441
    9. '+' → logprob: -10.992707252502441
    10. ']' → logprob: -11.117707252502441

Token 656: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.059411078691482544
    2. '<=' → logprob: -2.93441104888916
    3. ' <' → logprob: -5.55941104888916
    4. ' <=' → logprob: -7.55941104888916
    5. '>' → logprob: -9.43441104888916
    6. '>=' → logprob: -10.68441104888916
    7. '==' → logprob: -10.68441104888916
    8. '+' → logprob: -12.43441104888916
    9. '<
' → logprob: -12.55941104888916
    10. '[' → logprob: -12.55941104888916

Token 657: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.001730391290038824
    2. 'q' → logprob: -7.126730442047119
    3. 'inf' → logprob: -7.501730442047119
    4. ' l' → logprob: -8.001729965209961
    5. ' inf' → logprob: -11.626729965209961
    6. '   ' → logprob: -12.376729965209961
    7. '	l' → logprob: -12.376729965209961
    8. '0' → logprob: -12.501729965209961
    9. ' q' → logprob: -12.626729965209961
    10. '1' → logprob: -13.376729965209961

Token 658: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2823411226272583
    2. 'and' → logprob: -1.4073411226272583
    3. '   ' → logprob: -7.532341003417969
    4. ':
' → logprob: -8.282341003417969
    5. '       ' → logprob: -8.657341003417969
    6. ':' → logprob: -8.907341003417969
    7. '	and' → logprob: -10.032341003417969
    8. ' or' → logprob: -11.282341003417969
    9. ',' → logprob: -11.407341003417969
    10. '      ' → logprob: -11.907341003417969

Token 659: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.17115257680416107
    2. 'and' → logprob: -1.9211525917053223
    3. '       ' → logprob: -4.546152591705322
    4. '   ' → logprob: -8.796152114868164
    5. ' or' → logprob: -9.671152114868164
    6. ':
' → logprob: -11.046152114868164
    7. ':' → logprob: -11.296152114868164
    8. '	and' → logprob: -12.296152114868164
    9. '      ' → logprob: -12.546152114868164
    10. 'or' → logprob: -12.796152114868164

Token 660: ' i' (ID: 575)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.48304903507232666
    2. 'i' (adapté à ' i') → logprob: -1.7330490350723267
    3. '   ' → logprob: -2.233048915863037
    4. 'if' → logprob: -2.358048915863037
    5. ' q' → logprob: -6.233048915863037
    6. ' if' → logprob: -6.733048915863037
    7. ' i' → logprob: -6.983048915863037
    8. 'pe' → logprob: -8.983049392700195
    9. 'pq' → logprob: -9.733049392700195
    10. 'and' → logprob: -9.858049392700195

Token 661: ',' (ID: 11)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02056337706744671
    2. ' +=' → logprob: -3.8955633640289307
    3. 'and' → logprob: -11.770563125610352
    4. '=' → logprob: -11.895563125610352
    5. ',' → logprob: -13.020563125610352
    6. ']+=' → logprob: -13.145563125610352
    7. '   ' → logprob: -13.645563125610352
    8. '+' → logprob: -14.145563125610352
    9. '       ' → logprob: -15.520563125610352
    10. '-=' → logprob: -15.770563125610352

Token 662: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.5076961517333984
    2. ' i' → logprob: -1.6326961517333984
    3. 'q' → logprob: -2.1326961517333984
    4. 'i' → logprob: -2.6326961517333984
    5. ' =' → logprob: -5.632696151733398
    6. ',' → logprob: -6.757696151733398
    7. ' ' → logprob: -7.007696151733398
    8. '0' → logprob: -7.382696151733398
    9. ' _' → logprob: -7.507696151733398
    10. '=' → logprob: -7.632696151733398

Token 663: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2989237308502197
    2. '+=' → logprob: -1.6739237308502197
    3. ' =' → logprob: -2.7989237308502197
    4. ' +=' → logprob: -4.798923492431641
    5. ',' → logprob: -6.548923492431641
    6. '+' → logprob: -8.42392349243164
    7. '=i' → logprob: -9.67392349243164
    8. '+,' → logprob: -11.04892349243164
    9. '[' → logprob: -11.92392349243164
    10. ' ,' → logprob: -12.29892349243164

Token 664: ' process' (ID: 2273)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011827271664515138
    2. ' i' → logprob: -6.876182556152344
    3. '   ' → logprob: -9.001182556152344
    4. '(i' → logprob: -10.751182556152344
    5. '       ' → logprob: -12.501182556152344
    6. '	i' → logprob: -14.501182556152344
    7. ' ' → logprob: -14.876182556152344
    8. '  ' → logprob: -15.126182556152344
    9. ' (' → logprob: -15.501182556152344
    10. '    ' → logprob: -16.751182556152344

Token 665: '_l' (ID: 1478)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010937226936221123
    2. '(i' → logprob: -4.635937213897705
    3. ' i' → logprob: -6.760937213897705
    4. '
' → logprob: -11.635937690734863
    5. '<|end|>' → logprob: -12.760937690734863
    6. '(
' → logprob: -13.010937690734863
    7. '(' → logprob: -13.135937690734863
    8. ',i' → logprob: -13.385937690734863
    9. '[i' → logprob: -13.885937690734863
    10. '   ' → logprob: -14.260937690734863

Token 666: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.0007883060025051236
    2. '(rc' → logprob: -7.87578821182251
    3. '(i' → logprob: -8.625788688659668
    4. '[i' → logprob: -9.125788688659668
    5. 'r' → logprob: -10.375788688659668
    6. 'i' → logprob: -11.000788688659668
    7. '_rc' → logprob: -11.500788688659668
    8. 'rec' → logprob: -11.875788688659668
    9. 'ric' → logprob: -12.000788688659668
    10. 'ru' → logprob: -12.250788688659668

Token 667: '_entry' (ID: 20857)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01166683342307806
    2. '(i' → logprob: -4.636666774749756
    3. '[l' → logprob: -6.386666774749756
    4. '(l' → logprob: -9.636667251586914
    5. '[' → logprob: -9.761667251586914
    6. 'i' → logprob: -10.386667251586914
    7. '<|end|>' → logprob: -10.636667251586914
    8. '[
' → logprob: -11.761667251586914
    9. '[(' → logprob: -11.886667251586914
    10. ',i' → logprob: -12.136667251586914

Token 668: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.012581470422446728
    2. '(i' → logprob: -4.3875813484191895
    3. '(' → logprob: -9.762581825256348
    4. 's' → logprob: -12.387581825256348
    5. '(
' → logprob: -12.637581825256348
    6. 'l' → logprob: -13.762581825256348
    7. '```' → logprob: -13.887581825256348
    8. '<|end|>' → logprob: -14.262581825256348
    9. ',l' → logprob: -14.512581825256348
    10. '(s' → logprob: -14.637581825256348

Token 669: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.004305257461965084
    2. '[i' → logprob: -5.504305362701416
    3. 'i' → logprob: -9.879304885864258
    4. ',' → logprob: -10.004304885864258
    5. '   ' → logprob: -10.379304885864258
    6. '(i' → logprob: -10.629304885864258
    7. 'r' → logprob: -10.629304885864258
    8. '[' → logprob: -11.879304885864258
    9. ',i' → logprob: -12.379304885864258
    10. '(rc' → logprob: -12.629304885864258

Token 670: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030879253521561623
    2. ',i' → logprob: -3.655879259109497
    3. '[i' → logprob: -5.405879020690918
    4. ',
' → logprob: -10.655879020690918
    5. ' ,' → logprob: -10.905879020690918
    6. '   ' → logprob: -11.405879020690918
    7. '
' → logprob: -12.030879020690918
    8. 's' → logprob: -13.030879020690918
    9. ',l' → logprob: -13.030879020690918
    10. '<|end|>' → logprob: -13.280879020690918

Token 671: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005959733389317989
    2. ' i' → logprob: -5.130959510803223
    3. 'l' → logprob: -11.255959510803223
    4. '   ' → logprob: -11.380959510803223
    5. '
' → logprob: -13.380959510803223
    6. ' ' → logprob: -13.505959510803223
    7. '  ' → logprob: -13.880959510803223
    8. '[i' → logprob: -14.630959510803223
    9. ' l' → logprob: -14.630959510803223
    10. '	i' → logprob: -14.755959510803223

Token 672: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007401584181934595
    2. ',q' → logprob: -5.007401466369629
    3. '+' → logprob: -7.507401466369629
    4. '   ' → logprob: -10.132401466369629
    5. ' ,' → logprob: -10.257401466369629
    6. ')' → logprob: -10.257401466369629
    7. ' +' → logprob: -11.257401466369629
    8. ',
' → logprob: -12.882401466369629
    9. '+,' → logprob: -12.882401466369629
    10. '       ' → logprob: -14.007401466369629

Token 673: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.012525303289294243
    2. ' q' → logprob: -4.3875250816345215
    3. 'l' → logprob: -12.13752555847168
    4. '
' → logprob: -12.76252555847168
    5. '   ' → logprob: -12.88752555847168
    6. ' ' → logprob: -13.88752555847168
    7. 'i' → logprob: -14.01252555847168
    8. '	q' → logprob: -14.01252555847168
    9. '  ' → logprob: -14.26252555847168
    10. '    ' → logprob: -14.76252555847168

Token 674: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07124900817871094
    2. ',' → logprob: -3.071249008178711
    3. '<|end|>' → logprob: -3.946249008178711
    4. '   ' → logprob: -7.321249008178711
    5. '[' → logprob: -7.821249008178711
    6. '<|end|>' → logprob: -7.946249008178711
    7. '),' → logprob: -8.196249008178711
    8. ',i' → logprob: -8.321249008178711
    9. '[i' → logprob: -8.571249008178711
    10. '
' → logprob: -8.821249008178711

Token 675: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01386211346834898
    2. ' l' → logprob: -4.388862133026123
    3. ')' → logprob: -6.888862133026123
    4. '1' → logprob: -9.263861656188965
    5. 'inf' → logprob: -9.763861656188965
    6. 'i' → logprob: -9.888861656188965
    7. '
' → logprob: -10.388861656188965
    8. '0' → logprob: -11.263861656188965
    9. ')
' → logprob: -11.388861656188965
    10. 'x' → logprob: -11.513861656188965

Token 676: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05805050954222679
    2. ')' → logprob: -3.4330503940582275
    3. ',' → logprob: -3.8080503940582275
    4. '   ' → logprob: -6.808050632476807
    5. '       ' → logprob: -8.183050155639648
    6. '+' → logprob: -8.558050155639648
    7. '
' → logprob: -9.058050155639648
    8. ' )
' → logprob: -9.308050155639648
    9. ',
' → logprob: -10.558050155639648
    10. ' +' → logprob: -10.808050155639648

Token 677: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10009892284870148
    2. '<|end|>' → logprob: -2.9750988483428955
    3. ',' → logprob: -3.8500988483428955
    4. '       ' → logprob: -4.600099086761475
    5. '	return' → logprob: -4.725099086761475
    6. '	' → logprob: -6.850099086761475
    7. '<|end|>' → logprob: -7.475099086761475
    8. ' ' → logprob: -7.475099086761475
    9. '    ' → logprob: -7.850099086761475
    10. ' return' → logprob: -8.475098609924316

Token 678: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 679: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014174441806972027
    2. ' i' → logprob: -4.264174461364746
    3. 'q' → logprob: -11.639174461364746
    4. '(i' → logprob: -13.514174461364746
    5. ' q' → logprob: -14.889174461364746
    6. ' (' → logprob: -15.514174461364746
    7. ' ' → logprob: -15.889174461364746
    8. '	i' → logprob: -16.63917350769043
    9. '(' → logprob: -17.13917350769043
    10. ' ' → logprob: -18.01417350769043

Token 680: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 681: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.011047814972698689
    2. ' q' → logprob: -4.511047840118408
    3. '	q' → logprob: -18.76104736328125
    4. ' ' → logprob: -22.13604736328125
    5. '(q' → logprob: -22.13604736328125
    6. 'qml' → logprob: -23.13604736328125
    7. '
' → logprob: -23.38604736328125
    8. '[q' → logprob: -23.38604736328125
    9. 'Q' → logprob: -23.63604736328125
    10. ',q' → logprob: -23.76104736328125

Token 682: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10930689424276352
    2. '<|end|>' → logprob: -2.609306812286377
    3. '
' → logprob: -3.609306812286377
    4. ':' → logprob: -6.609306812286377
    5. '<|end|>' → logprob: -8.484307289123535
    6. ':
' → logprob: -8.984307289123535
    7. '```' → logprob: -9.109307289123535
    8. '#' → logprob: -9.234307289123535
    9. '\' → logprob: -9.359307289123535
    10. ')' → logprob: -9.484307289123535

Token 683: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11555027961730957
    2. ':' → logprob: -2.4905502796173096
    3. 'd' → logprob: -4.8655500411987305
    4. '(' → logprob: -5.7405500411987305
    5. '(
' → logprob: -5.7405500411987305
    6. '
' → logprob: -5.8655500411987305
    7. ',' → logprob: -6.2405500411987305
    8. ')' → logprob: -6.7405500411987305
    9. 'w' → logprob: -6.8655500411987305
    10. ':
' → logprob: -6.8655500411987305

Token 684: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.006744616664946079
    2. ' process' → logprob: -5.006744384765625
    3. 'update' → logprob: -11.381744384765625
    4. 'def' → logprob: -11.631744384765625
    5. 'p' → logprob: -13.381744384765625
    6. '_process' → logprob: -13.381744384765625
    7. 'proces' → logprob: -14.131744384765625
    8. '	process' → logprob: -14.256744384765625
    9. '(process' → logprob: -14.881744384765625
    10. 'pro' → logprob: -14.881744384765625

Token 685: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -6.704273118884885e-07
    2. 'l' → logprob: -14.625000953674316
    3. '_' → logprob: -16.75
    4. '```' → logprob: -17.0
    5. '<|end|>' → logprob: -17.5
    6. '_token' → logprob: -17.75
    7. '<|end|>' → logprob: -18.5
    8. '_tokens' → logprob: -18.875
    9. '_a' → logprob: -19.5
    10. ')' → logprob: -19.625

Token 686: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.00026729601086117327
    2. '_rc' → logprob: -8.250267028808594
    3. 'r' → logprob: -12.250267028808594
    4. '_r' → logprob: -15.125267028808594
    5. '(rc' → logprob: -15.375267028808594
    6. 'rcode' → logprob: -15.750267028808594
    7. 'RC' → logprob: -16.000267028808594
    8. 'crc' → logprob: -16.375267028808594
    9. 'cr' → logprob: -16.875267028808594
    10. '	rc' → logprob: -16.875267028808594

Token 687: '_entry' (ID: 20857)
  Prédit: '_entry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_entry' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -15.125000953674316
    3. '_entries' → logprob: -15.500000953674316
    4. '(entry' → logprob: -15.500000953674316
    5. '_ENTRY' → logprob: -15.750000953674316
    6. '(_' → logprob: -16.000001907348633
    7. '(' → logprob: -17.000001907348633
    8. 'entry' → logprob: -17.250001907348633
    9. 'Entry' → logprob: -17.375001907348633
    10. '_enter' → logprob: -17.625001907348633

Token 688: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.016073787584900856
    2. '(' → logprob: -4.141073703765869
    3. '(x' → logprob: -11.766074180603027
    4. '(n' → logprob: -12.641074180603027
    5. '(ll' → logprob: -12.641074180603027
    6. '(li' → logprob: -12.641074180603027
    7. '(`' → logprob: -12.766074180603027
    8. '(q' → logprob: -12.891074180603027
    9. '<|end|>' → logprob: -13.016074180603027
    10. '(line' → logprob: -13.141074180603027

Token 689: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.00791996717453003
    2. ',' → logprob: -4.882919788360596
    3. '_rc' → logprob: -8.882920265197754
    4. '[' → logprob: -9.757920265197754
    5. '(rc' → logprob: -9.757920265197754
    6. 'r' → logprob: -11.257920265197754
    7. '   ' → logprob: -11.382920265197754
    8. ')' → logprob: -11.507920265197754
    9. ',r' → logprob: -11.507920265197754
    10. '	rc' → logprob: -12.882920265197754

Token 690: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000260382192209363
    2. ',i' → logprob: -8.375260353088379
    3. ',l' → logprob: -11.000260353088379
    4. ' ,' → logprob: -11.500260353088379
    5. ',x' → logprob: -14.250260353088379
    6. ',n' → logprob: -15.000260353088379
    7. ',index' → logprob: -15.000260353088379
    8. ',I' → logprob: -15.375260353088379
    9. '   ' → logprob: -15.500260353088379
    10. ',
' → logprob: -15.500260353088379

Token 691: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0036031559575349092
    2. ' i' → logprob: -5.628602981567383
    3. '   ' → logprob: -13.878602981567383
    4. 'index' → logprob: -14.003602981567383
    5. ' ' → logprob: -15.128602981567383
    6. '	i' → logprob: -15.128602981567383
    7. 'idx' → logprob: -15.378602981567383
    8. '  ' → logprob: -15.503602981567383
    9. 'def' → logprob: -16.003602981567383
    10. '    ' → logprob: -16.753602981567383

Token 692: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0339031834737398e-05
    2. ',q' → logprob: -11.125020027160645
    3. ' ,' → logprob: -12.125020027160645
    4. ',i' → logprob: -16.75002098083496
    5. '   ' → logprob: -17.00002098083496
    6. ',l' → logprob: -17.37502098083496
    7. ',
' → logprob: -18.87502098083496
    8. '[q' → logprob: -19.50002098083496
    9. 'q' → logprob: -20.12502098083496
    10. ',Q' → logprob: -20.25002098083496

Token 693: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.836499985889532e-05
    2. ' q' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.750059127807617
    4. '	q' → logprob: -18.250059127807617
    5. 'def' → logprob: -18.875059127807617
    6. ' ' → logprob: -20.875059127807617
    7. '  ' → logprob: -20.875059127807617
    8. ')' → logprob: -21.250059127807617
    9. '[q' → logprob: -21.250059127807617
    10. '```' → logprob: -21.250059127807617

Token 694: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8789383830153383e-05
    2. ' ,' → logprob: -11.750019073486328
    3. ',q' → logprob: -11.750019073486328
    4. ',
' → logprob: -14.250019073486328
    5. '):' → logprob: -14.875019073486328
    6. ',l' → logprob: -15.250019073486328
    7. ',s' → logprob: -15.875019073486328
    8. ',i' → logprob: -15.875019073486328
    9. ',n' → logprob: -16.000019073486328
    10. ',int' → logprob: -16.125019073486328

Token 695: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.003227148437872529
    2. ' l' → logprob: -5.753227233886719
    3. 'q' → logprob: -10.003227233886719
    4. ')' → logprob: -13.253227233886719
    5. '   ' → logprob: -14.503227233886719
    6. 'x' → logprob: -15.128227233886719
    7. '	l' → logprob: -15.503227233886719
    8. ' q' → logprob: -15.628227233886719
    9. 'i' → logprob: -15.753227233886719
    10. '):
' → logprob: -15.878227233886719

Token 696: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022976152831688523
    2. '):' → logprob: -8.750229835510254
    3. '   ' → logprob: -10.125229835510254
    4. ',q' → logprob: -10.875229835510254
    5. ' ,' → logprob: -11.750229835510254
    6. ':' → logprob: -13.750229835510254
    7. '):
' → logprob: -14.000229835510254
    8. ',i' → logprob: -14.875229835510254
    9. ',l' → logprob: -15.375229835510254
    10. ',
' → logprob: -15.500229835510254

Token 697: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4643580913543701
    2. '	q' → logprob: -1.5893580913543701
    3. ',' → logprob: -2.21435809135437
    4. '<|end|>' → logprob: -4.214358329772949
    5. '	i' → logprob: -4.589358329772949
    6. '\t' → logprob: -5.089358329772949
    7. ',q' → logprob: -5.964358329772949
    8. '(q' → logprob: -6.089358329772949
    9. ' q' → logprob: -6.339358329772949
    10. '	token' → logprob: -6.589358329772949

Token 698: ' _,' (ID: 18042)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4237060844898224
    2. '   ' → logprob: -1.6737060546875
    3. 'if' → logprob: -2.6737060546875
    4. 'i' → logprob: -3.7987060546875
    5. ' q' → logprob: -3.7987060546875
    6. 'v' → logprob: -4.1737060546875
    7. 'return' → logprob: -4.9237060546875
    8. 'x' → logprob: -5.2987060546875
    9. ' if' → logprob: -5.9237060546875
    10. 'val' → logprob: -6.2987060546875

Token 699: ' r' (ID: 428)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8266298770904541
    2. 'x' → logprob: -1.201629877090454
    3. 'q' → logprob: -2.576629877090454
    4. 'y' → logprob: -2.951629877090454
    5. 'a' → logprob: -3.451629877090454
    6. 'i' → logprob: -3.701629877090454
    7. 'p' → logprob: -4.326629638671875
    8. '_,' → logprob: -4.451629638671875
    9. 't' → logprob: -4.701629638671875
    10. 'r' → logprob: -4.701629638671875

Token 700: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0625976175069809
    2. ',' → logprob: -2.8125975131988525
    3. ' =' → logprob: -7.437597751617432
    4. '   ' → logprob: -11.187597274780273
    5. ')' → logprob: -11.937597274780273
    6. ' ,' → logprob: -11.937597274780273
    7. ')=' → logprob: -12.812597274780273
    8. '<|end|>' → logprob: -12.812597274780273
    9. '=
' → logprob: -13.562597274780273
    10. ',q' → logprob: -13.812597274780273

Token 701: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9077433943748474
    2. 'v' → logprob: -1.9077434539794922
    3. '_' → logprob: -2.282743453979492
    4. 'h' → logprob: -2.532743453979492
    5. 't' → logprob: -2.907743453979492
    6. 's' → logprob: -3.157743453979492
    7. 'w' → logprob: -3.157743453979492
    8. 'b' → logprob: -3.907743453979492
    9. 'x' → logprob: -3.907743453979492
    10. 'd' → logprob: -4.032743453979492

Token 702: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019287518225610256
    2. ' =' → logprob: -6.251928806304932
    3. '=
' → logprob: -15.876928329467773
    4. '=}' → logprob: -18.626928329467773
    5. ' ' → logprob: -18.751928329467773
    6. '=l' → logprob: -18.876928329467773
    7. ')=' → logprob: -19.376928329467773
    8. '＝' → logprob: -19.751928329467773
    9. '   ' → logprob: -19.876928329467773
    10. '_=' → logprob: -20.001928329467773

Token 703: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0015048631466925144
    2. ' l' → logprob: -6.501504898071289
    3. '   ' → logprob: -13.126504898071289
    4. '	l' → logprob: -15.001504898071289
    5. '(l' → logprob: -16.87650489807129
    6. ' ' → logprob: -17.62650489807129
    7. '    ' → logprob: -17.75150489807129
    8. '  ' → logprob: -17.75150489807129
    9. '*l' → logprob: -17.87650489807129
    10. '[l' → logprob: -18.00150489807129

Token 704: 'rc' (ID: 2366)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8345258235931396
    2. 'rc' → logprob: -1.2095258235931396
    3. ' =' → logprob: -1.3345258235931396
    4. '   ' → logprob: -6.834526062011719
    5. 'r' → logprob: -6.959526062011719
    6. ',' → logprob: -7.334526062011719
    7. '[' → logprob: -7.584526062011719
    8. '[i' → logprob: -8.084526062011719
    9. '=[' → logprob: -8.709526062011719
    10. 'c' → logprob: -9.209526062011719

Token 705: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0016113892197608948
    2. ',i' → logprob: -6.751611232757568
    3. ',' → logprob: -7.876611232757568
    4. '[' → logprob: -10.876611709594727
    5. '   ' → logprob: -10.876611709594727
    6. 'i' → logprob: -11.126611709594727
    7. '
' → logprob: -13.626611709594727
    8. ' ' → logprob: -13.876611709594727
    9. ' i' → logprob: -13.876611709594727
    10. ' [' → logprob: -14.126611709594727

Token 706: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10101084411144257
    2. ']' → logprob: -2.476010799407959
    3. '),' → logprob: -5.476010799407959
    4. '   ' → logprob: -5.726010799407959
    5. ')
' → logprob: -6.726010799407959
    6. '],' → logprob: -6.851010799407959
    7. ',' → logprob: -7.101010799407959
    8. '[i' → logprob: -8.101011276245117
    9. ' =' → logprob: -8.351011276245117
    10. ')=' → logprob: -8.726011276245117

Token 707: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2691725492477417
    2. '
' → logprob: -1.8941725492477417
    3. '<|end|>' → logprob: -3.0191726684570312
    4. ',' → logprob: -4.769172668457031
    5. ')' → logprob: -4.769172668457031
    6. ' if' → logprob: -5.269172668457031
    7. '	q' → logprob: -6.269172668457031
    8. '<|end|>' → logprob: -6.894172668457031
    9. 'i' → logprob: -7.144172668457031
    10. '[i' → logprob: -7.144172668457031

Token 708: ' i' (ID: 575)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5590774416923523
    2. ' if' → logprob: -1.309077501296997
    3. 'i' (adapté à ' i') → logprob: -2.309077501296997
    4. '   ' → logprob: -3.184077501296997
    5. 'q' → logprob: -4.559077262878418
    6. ' i' → logprob: -5.559077262878418
    7. '	if' → logprob: -6.434077262878418
    8. 'heap' → logprob: -7.434077262878418
    9. ' q' → logprob: -8.184077262878418
    10. '	i' → logprob: -8.684077262878418

Token 709: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.14240048825740814
    2. ',' → logprob: -2.5174005031585693
    3. ' +=' → logprob: -3.0174005031585693
    4. '+' → logprob: -6.39240026473999
    5. '=' → logprob: -6.76740026473999
    6. ',q' → logprob: -9.517400741577148
    7. ',
' → logprob: -9.642400741577148
    8. '
' → logprob: -9.892400741577148
    9. '+,' → logprob: -10.517400741577148
    10. '+
' → logprob: -11.017400741577148

Token 710: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -18.750011444091797
    4. '```' → logprob: -18.750011444091797
    5. '
' → logprob: -19.625011444091797
    6. '<|end|>' → logprob: -20.750011444091797
    7. '１' → logprob: -21.625011444091797
    8. '+' → logprob: -21.687511444091797
    9. '۱' → logprob: -21.875011444091797
    10. '  ' → logprob: -22.312511444091797

Token 711: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '
' → logprob: -21.125001907348633
    4. '```' → logprob: -21.625001907348633
    5. '<|end|>' → logprob: -22.125001907348633
    6. '0' → logprob: -22.125001907348633
    7. '-' → logprob: -22.500001907348633
    8. '１' → logprob: -22.500001907348633
    9. '   ' → logprob: -22.625001907348633
    10. '۱' → logprob: -23.187501907348633

Token 712: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36471137404441833
    2. '
' → logprob: -1.2397114038467407
    3. ',' → logprob: -4.989711284637451
    4. '<|end|>' → logprob: -5.114711284637451
    5. '    
' → logprob: -6.989711284637451
    6. ';' → logprob: -7.239711284637451
    7. ' if' → logprob: -7.864711284637451
    8. 'q' → logprob: -8.73971176147461
    9. 'return' → logprob: -8.98971176147461
    10. ' 
' → logprob: -9.11471176147461

Token 713: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014168102643452585
    2. 'q' → logprob: -10.250142097473145
    3. ' if' → logprob: -10.375142097473145
    4. 'return' → logprob: -10.750142097473145
    5. 'if' → logprob: -11.000142097473145
    6. ',' → logprob: -11.125142097473145
    7. '    
' → logprob: -12.125142097473145
    8. ' q' → logprob: -12.250142097473145
    9. '
' → logprob: -12.750142097473145
    10. ';' → logprob: -12.750142097473145

Token 714: ' qi' (ID: 64017)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7203406691551208
    2. 'q' → logprob: -1.3453407287597656
    3. 'heap' → logprob: -1.7203407287597656
    4. 'return' → logprob: -2.9703407287597656
    5. '   ' → logprob: -3.9703407287597656
    6. 'idx' → logprob: -6.595340728759766
    7. 'new' → logprob: -7.220340728759766
    8. 'hq' → logprob: -8.470340728759766
    9. 'import' → logprob: -8.720340728759766
    10. 'j' → logprob: -8.720340728759766

Token 715: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49580463767051697
    2. ' =' → logprob: -1.4958046674728394
    3. ',' → logprob: -2.49580454826355
    4. 'd' → logprob: -3.49580454826355
    5. 'nd' → logprob: -3.49580454826355
    6. 'dx' → logprob: -3.99580454826355
    7. 'n' → logprob: -5.995804786682129
    8. 'q' → logprob: -7.370804786682129
    9. '[' → logprob: -7.370804786682129
    10. '   ' → logprob: -8.245804786682129

Token 716: ' q' (ID: 2335)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.7241097092628479
    2. 'q' → logprob: -0.9741097092628479
    3. '0' → logprob: -2.599109649658203
    4. 'len' → logprob: -3.724109649658203
    5. 'heap' → logprob: -3.974109649658203
    6. ' bis' → logprob: -5.099109649658203
    7. '[q' → logprob: -6.099109649658203
    8. 'c' → logprob: -6.224109649658203
    9. '-' → logprob: -6.224109649658203
    10. '(q' → logprob: -6.599109649658203

Token 717: '_find' (ID: 52203)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10980359464883804
    2. '.pop' → logprob: -2.6098036766052246
    3. '[-' → logprob: -4.109803676605225
    4. '=' → logprob: -6.109803676605225
    5. ' =' → logprob: -6.234803676605225
    6. '.' → logprob: -6.484803676605225
    7. '.index' → logprob: -6.859803676605225
    8. '.append' → logprob: -7.109803676605225
    9. ',' → logprob: -7.234803676605225
    10. '[:]' → logprob: -7.234803676605225

Token 718: '_index' (ID: 7748)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.013935004360973835
    2. 'q' → logprob: -5.263935089111328
    3. 'x' → logprob: -5.763935089111328
    4. '[q' → logprob: -6.763935089111328
    5. 'ex' → logprob: -6.888935089111328
    6. '(c' → logprob: -7.263935089111328
    7. '(r' → logprob: -7.888935089111328
    8. 'index' → logprob: -7.888935089111328
    9. 'c' → logprob: -8.388935089111328
    10. 'nd' → logprob: -8.513935089111328

Token 719: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0038214565720409155
    2. '(' → logprob: -6.87882137298584
    3. '[q' → logprob: -6.87882137298584
    4. ' =' → logprob: -7.75382137298584
    5. '=q' → logprob: -7.87882137298584
    6. '=' → logprob: -8.50382137298584
    7. '?q' → logprob: -8.87882137298584
    8. 'q' → logprob: -9.25382137298584
    9. ',q' → logprob: -9.50382137298584
    10. '<|end|>' → logprob: -9.50382137298584

Token 720: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12374818325042725
    2. '(c' → logprob: -2.748748302459717
    3. ',c' → logprob: -3.123748302459717
    4. '(' → logprob: -6.248748302459717
    5. ',(' → logprob: -6.248748302459717
    6. ')' → logprob: -6.498748302459717
    7. ')(' → logprob: -6.748748302459717
    8. ' ,' → logprob: -7.248748302459717
    9. '(r' → logprob: -8.373747825622559
    10. ',
' → logprob: -8.748747825622559

Token 721: ' l' (ID: 305)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.19994574785232544
    2. 'r' → logprob: -2.3249456882476807
    3. 'q' → logprob: -3.4499456882476807
    4. 'qi' → logprob: -4.19994592666626
    5. '(' → logprob: -4.57494592666626
    6. ' c' → logprob: -5.19994592666626
    7. '(q' → logprob: -5.44994592666626
    8. '(c' → logprob: -5.57494592666626
    9. '(r' → logprob: -5.69994592666626
    10. ' r' → logprob: -6.44994592666626

Token 722: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024955106899142265
    2. '+' → logprob: -4.8999552726745605
    3. ')' → logprob: -5.1499552726745605
    4. ',c' → logprob: -5.1499552726745605
    5. ',r' → logprob: -6.6499552726745605
    6. 'c' → logprob: -7.0249552726745605
    7. ' +' → logprob: -7.1499552726745605
    8. '-' → logprob: -7.1499552726745605
    9. '+c' → logprob: -7.3999552726745605
    10. 'r' → logprob: -7.6499552726745605

Token 723: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03720349445939064
    2. ')' → logprob: -3.662203550338745
    3. '<|end|>' → logprob: -6.037203311920166
    4. 'q' → logprob: -6.287203311920166
    5. '+' → logprob: -6.287203311920166
    6. '    
' → logprob: -6.787203311920166
    7. ',' → logprob: -7.287203311920166
    8. '	q' → logprob: -8.412203788757324
    9. '
' → logprob: -8.662203788757324
    10. '[q' → logprob: -8.662203788757324

Token 724: ' _,' (ID: 18042)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5339571833610535
    2. '   ' → logprob: -1.4089572429656982
    3. 'if' → logprob: -1.9089572429656982
    4. 'qi' → logprob: -4.533957004547119
    5. ' if' → logprob: -5.658957004547119
    6. ' q' → logprob: -6.658957004547119
    7. 'heap' → logprob: -7.408957004547119
    8. 'while' → logprob: -7.408957004547119
    9. '[q' → logprob: -7.783957004547119
    10. 'return' → logprob: -7.908957004547119

Token 725: ' cc' (ID: 22988)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6251782178878784
    2. 'qc' → logprob: -1.6251782178878784
    3. 'v' → logprob: -2.750178337097168
    4. 'qr' → logprob: -3.500178337097168
    5. 'val' → logprob: -3.625178337097168
    6. 'vq' → logprob: -3.750178337097168
    7. 'qi' → logprob: -4.125178337097168
    8. 'cost' → logprob: -4.375178337097168
    9. 'cq' → logprob: -4.375178337097168
    10. 'qq' → logprob: -4.875178337097168

Token 726: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012589824385941029
    2. ' =' → logprob: -4.387589931488037
    3. 'q' → logprob: -10.137589454650879
    4. ',' → logprob: -11.012589454650879
    5. '=q' → logprob: -11.512589454650879
    6. 'c' → logprob: -11.762589454650879
    7. '   ' → logprob: -14.262589454650879
    8. ' ' → logprob: -14.387589454650879
    9. ')=' → logprob: -14.512589454650879
    10. '_' → logprob: -14.637589454650879

Token 727: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.02976866066455841
    2. ' q' → logprob: -3.529768705368042
    3. '
' → logprob: -12.529768943786621
    4. 'qi' → logprob: -12.529768943786621
    5. 'heap' → logprob: -13.029768943786621
    6. 'qh' → logprob: -13.279768943786621
    7. ' ' → logprob: -13.404768943786621
    8. '   ' → logprob: -14.029768943786621
    9. '	q' → logprob: -14.467268943786621
    10. '(q' → logprob: -14.967268943786621

Token 728: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008071291376836598
    2. '[q' → logprob: -7.625807285308838
    3. 'qi' → logprob: -8.25080680847168
    4. '[i' → logprob: -10.37580680847168
    5. '
' → logprob: -11.50080680847168
    6. '[
' → logprob: -12.37580680847168
    7. 'q' → logprob: -12.75080680847168
    8. '   ' → logprob: -13.00080680847168
    9. '=' → logprob: -13.00080680847168
    10. ' qi' → logprob: -13.12580680847168

Token 729: 'qi' (ID: 35588)
  Prédit: 'qi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qi' → logprob: -0.00010247035970678553
    2. ' qi' → logprob: -9.875102043151855
    3. '
' → logprob: -10.875102043151855
    4. '[' → logprob: -11.500102043151855
    5. 'i' → logprob: -12.125102043151855
    6. 'q' → logprob: -12.500102043151855
    7. '   ' → logprob: -13.250102043151855
    8. 'iq' → logprob: -13.500102043151855
    9. '
' → logprob: -14.125102043151855
    10. 'ki' → logprob: -14.125102043151855

Token 730: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3138161599636078
    2. ']
' → logprob: -1.3138161897659302
    3. ']
' → logprob: -8.93881607055664
    4. ' ]' → logprob: -9.18881607055664
    5. ']

' → logprob: -9.18881607055664
    6. ']=' → logprob: -9.43881607055664
    7. ' ]
' → logprob: -9.93881607055664
    8. '][' → logprob: -10.68881607055664
    9. '[' → logprob: -11.43881607055664
    10. '
' → logprob: -11.56381607055664

Token 731: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17567923665046692
    2. 'if' → logprob: -1.9256792068481445
    3. 'q' → logprob: -4.3006792068481445
    4. ' if' → logprob: -6.5506792068481445
    5. ')' → logprob: -9.050679206848145
    6. ' q' → logprob: -10.300679206848145
    7. ',' → logprob: -10.550679206848145
    8. '
' → logprob: -10.550679206848145
    9. '    
' → logprob: -10.675679206848145
    10. 'c' → logprob: -11.300679206848145

Token 732: ' t' (ID: 260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5887847542762756
    2. 'if' → logprob: -0.8387847542762756
    3. 'q' → logprob: -4.713784694671631
    4. ' if' → logprob: -5.713784694671631
    5. 'cc' → logprob: -8.338785171508789
    6. 'c' → logprob: -9.838785171508789
    7. 'v' → logprob: -10.338785171508789
    8. ' q' → logprob: -10.713785171508789
    9. 'new' → logprob: -10.838785171508789
    10. 'qc' → logprob: -10.963785171508789

Token 733: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44859734177589417
    2. '=' → logprob: -1.9485973119735718
    3. ',' → logprob: -2.5735974311828613
    4. 'emp' → logprob: -3.3235974311828613
    5. 'o' → logprob: -4.323597431182861
    6. 'q' → logprob: -4.323597431182861
    7. 'c' → logprob: -4.323597431182861
    8. 'mp' → logprob: -4.448597431182861
    9. 'ime' → logprob: -5.073597431182861
    10. 'ry' → logprob: -5.198597431182861

Token 734: ' compute' (ID: 23864)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.9479135274887085
    2. 'max' → logprob: -1.0729135274887085
    3. 'min' → logprob: -2.072913646697998
    4. 'c' → logprob: -2.572913646697998
    5. '(max' → logprob: -4.197913646697998
    6. '(c' → logprob: -4.322913646697998
    7. '(cc' → logprob: -4.322913646697998
    8. '(q' → logprob: -4.822913646697998
    9. '(min' → logprob: -5.322913646697998
    10. '(' → logprob: -5.447913646697998

Token 735: '_new' (ID: 13000)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.374843716621399
    2. '_cc' → logprob: -1.999843716621399
    3. '(cc' → logprob: -2.3748435974121094
    4. 't' → logprob: -2.6248435974121094
    5. 'c' → logprob: -2.7498435974121094
    6. 'cost' → logprob: -2.9998435974121094
    7. '_c' → logprob: -3.1248435974121094
    8. 'cc' → logprob: -3.2498435974121094
    9. 'max' → logprob: -3.2498435974121094
    10. 'min' → logprob: -3.3748435974121094

Token 736: '_tuple' (ID: 53371)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.20223557949066162
    2. '_c' → logprob: -2.452235698699951
    3. '_cc' → logprob: -3.577235698699951
    4. 'cost' → logprob: -3.827235698699951
    5. 'c' → logprob: -4.077235698699951
    6. '_value' → logprob: -4.202235698699951
    7. 'cc' → logprob: -6.077235698699951
    8. '(q' → logprob: -6.077235698699951
    9. '_q' → logprob: -6.202235698699951
    10. '(' → logprob: -6.327235698699951

Token 737: '(r' (ID: 4729)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.581851601600647
    2. '(' → logprob: -1.706851601600647
    3. ' =' → logprob: -2.5818514823913574
    4. '(cc' → logprob: -2.5818514823913574
    5. '(l' → logprob: -3.0818514823913574
    6. '=' → logprob: -3.3318514823913574
    7. '=(' → logprob: -4.956851482391357
    8. '(_,' → logprob: -5.331851482391357
    9. '((' → logprob: -5.581851482391357
    10. '(c' → logprob: -5.581851482391357

Token 738: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002655085874721408
    2. ' ,' → logprob: -6.877655029296875
    3. ',c' → logprob: -7.252655029296875
    4. ')' → logprob: -7.252655029296875
    5. 'c' → logprob: -10.252655029296875
    6. '+' → logprob: -10.377655029296875
    7. '-' → logprob: -10.502655029296875
    8. ',
' → logprob: -10.627655029296875
    9. '   ' → logprob: -10.877655029296875
    10. '=' → logprob: -11.377655029296875

Token 739: ' cc' (ID: 22988)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5532805919647217
    2. 'cc' → logprob: -0.9282805919647217
    3. 'qi' → logprob: -4.178280830383301
    4. ' c' → logprob: -5.678280830383301
    5. 'q' → logprob: -5.928280830383301
    6. ' cc' → logprob: -6.428280830383301
    7. 'r' → logprob: -6.553280830383301
    8. 'i' → logprob: -6.553280830383301
    9. 'qc' → logprob: -7.178280830383301
    10. ')' → logprob: -7.803280830383301

Token 740: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33980876207351685
    2. ',' → logprob: -1.464808702468872
    3. ')
' → logprob: -2.964808702468872
    4. '+' → logprob: -6.339808940887451
    5. ',c' → logprob: -6.714808940887451
    6. '   ' → logprob: -7.464808940887451
    7. ' ,' → logprob: -7.839808940887451
    8. 'c' → logprob: -8.339808464050293
    9. ' )' → logprob: -8.589808464050293
    10. '-' → logprob: -8.714808464050293

Token 741: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0036458070389926434
    2. ' c' → logprob: -6.003645896911621
    3. ')' → logprob: -7.503645896911621
    4. 'q' → logprob: -7.878645896911621
    5. 'l' → logprob: -10.003645896911621
    6. 'i' → logprob: -10.628645896911621
    7. 'r' → logprob: -10.753645896911621
    8. 'qi' → logprob: -10.753645896911621
    9. '
' → logprob: -11.003645896911621
    10. '_)' → logprob: -11.378645896911621

Token 742: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28166505694389343
    2. ')
' → logprob: -1.4066650867462158
    3. ')
' → logprob: -8.156664848327637
    4. '   ' → logprob: -8.531664848327637
    5. ' )' → logprob: -11.906664848327637
    6. ' )
' → logprob: -11.906664848327637
    7. ',' → logprob: -12.281664848327637
    8. '=' → logprob: -12.656664848327637
    9. ')

' → logprob: -12.781664848327637
    10. ' ' → logprob: -13.656664848327637

Token 743: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 744: ' q' (ID: 2335)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015409603714942932
    2. 'q' (adapté à ' q') → logprob: -4.640409469604492
    3. 'if' → logprob: -6.015409469604492
    4. 'heap' → logprob: -6.515409469604492
    5. ' if' → logprob: -7.015409469604492
    6. ' q' → logprob: -7.640409469604492
    7. 'def' → logprob: -9.890409469604492
    8. 'import' → logprob: -10.015409469604492
    9. 'return' → logprob: -10.515409469604492
    10. 't' → logprob: -10.515409469604492

Token 745: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14315038919448853
    2. ' =' → logprob: -2.8931503295898438
    3. '_insert' → logprob: -3.6431503295898438
    4. '[' → logprob: -4.393150329589844
    5. ',' → logprob: -4.393150329589844
    6. '[q' → logprob: -4.768150329589844
    7. '_append' → logprob: -5.393150329589844
    8. '_remove' → logprob: -5.518150329589844
    9. '_replace' → logprob: -5.518150329589844
    10. ',q' → logprob: -6.393150329589844

Token 746: ' update' (ID: 4027)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0665791854262352
    2. 'update' → logprob: -3.1915791034698486
    3. 'heap' → logprob: -4.316579341888428
    4. 'insert' → logprob: -5.691579341888428
    5. ' q' → logprob: -5.816579341888428
    6. 'replace' → logprob: -7.066579341888428
    7. ' update' → logprob: -8.06657886505127
    8. 'push' → logprob: -8.19157886505127
    9. '[q' → logprob: -8.31657886505127
    10. 'append' → logprob: -8.56657886505127

Token 747: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.14582118391990662
    2. '_list' → logprob: -2.6458210945129395
    3. '_queue' → logprob: -3.7708210945129395
    4. '(q' → logprob: -4.0208210945129395
    5. 'q' → logprob: -4.5208210945129395
    6. '_tuple' → logprob: -5.0208210945129395
    7. '_' → logprob: -6.5208210945129395
    8. 'list' → logprob: -6.6458210945129395
    9. '_data' → logprob: -7.6458210945129395
    10. '_(' → logprob: -8.145821571350098

Token 748: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.05913246050477028
    2. '_list' → logprob: -3.1841325759887695
    3. '_with' → logprob: -5.6841325759887695
    4. '_insert' → logprob: -6.0591325759887695
    5. '(' → logprob: -6.1841325759887695
    6. '_merge' → logprob: -6.8091325759887695
    7. '_replace' → logprob: -7.0591325759887695
    8. '_append' → logprob: -7.0591325759887695
    9. 'list' → logprob: -7.1841325759887695
    10. '(t' → logprob: -7.1841325759887695

Token 749: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002537104592192918
    2. ',t' → logprob: -8.875253677368164
    3. ' ,' → logprob: -9.125253677368164
    4. ',q' → logprob: -12.500253677368164
    5. ',
' → logprob: -14.125253677368164
    6. ',i' → logprob: -15.500253677368164
    7. 't' → logprob: -16.250253677368164
    8. ' t' → logprob: -16.500253677368164
    9. '‌,' → logprob: -17.875253677368164
    10. ')' → logprob: -17.875253677368164

Token 750: ' t' (ID: 260)
  Prédit: 'qi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qi' → logprob: -0.20895759761333466
    2. 't' → logprob: -1.958957552909851
    3. 'i' → logprob: -3.4589576721191406
    4. 'ti' → logprob: -4.458957672119141
    5. ' qi' → logprob: -5.833957672119141
    6. ' t' → logprob: -7.458957672119141
    7. 'q' → logprob: -8.20895767211914
    8. ' i' → logprob: -8.70895767211914
    9. '(' → logprob: -9.33395767211914
    10. '(i' → logprob: -9.45895767211914

Token 751: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03430042788386345
    2. ')' → logprob: -3.4093003273010254
    3. ')
' → logprob: -7.659300327301025
    4. ',i' → logprob: -9.159300804138184
    5. ' ,' → logprob: -9.784300804138184
    6. ',q' → logprob: -11.784300804138184
    7. ' )' → logprob: -12.659300804138184
    8. ')

' → logprob: -13.409300804138184
    9. '   ' → logprob: -13.409300804138184
    10. ')
' → logprob: -13.784300804138184

Token 752: ' r' (ID: 428)
  Prédit: 'qi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qi' → logprob: -0.003455856814980507
    2. 'i' → logprob: -6.503455638885498
    3. ' qi' → logprob: -7.503455638885498
    4. 'q' → logprob: -7.503455638885498
    5. 'r' → logprob: -8.253456115722656
    6. 'l' → logprob: -8.503456115722656
    7. 'c' → logprob: -9.003456115722656
    8. 'cc' → logprob: -9.253456115722656
    9. 'qc' → logprob: -9.628456115722656
    10. ')' → logprob: -11.003456115722656

Token 753: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05124231427907944
    2. ')
' → logprob: -3.0512423515319824
    3. ',' → logprob: -6.301242351531982
    4. ' )' → logprob: -7.551242351531982
    5. '   ' → logprob: -8.926241874694824
    6. ' )
' → logprob: -9.426241874694824
    7. ')
' → logprob: -10.676241874694824
    8. ')

' → logprob: -10.676241874694824
    9. '+' → logprob: -12.176241874694824
    10. '-' → logprob: -12.551241874694824

Token 754: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.721228368813172e-05
    2. 'return' → logprob: -10.000086784362793
    3. '	return' → logprob: -10.625086784362793
    4. ' return' → logprob: -11.250086784362793
    5. '   ' → logprob: -13.125086784362793
    6. '<|end|>' → logprob: -13.875086784362793
    7. '       ' → logprob: -15.250086784362793
    8. 'q' → logprob: -15.375086784362793
    9. '```' → logprob: -15.500086784362793
    10. '  ' → logprob: -15.500086784362793

Token 755: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7791292667388916
    2. 'return' (adapté à ' return') → logprob: -0.9041292667388916
    3. ' return' → logprob: -2.0291292667388916
    4. '	return' → logprob: -5.4041290283203125
    5. ' ' → logprob: -9.029129028320312
    6. '    ' → logprob: -10.154129028320312
    7. '{return' → logprob: -10.404129028320312
    8. ':return' → logprob: -10.654129028320312
    9. '   ' → logprob: -11.154129028320312
    10. ' ' → logprob: -11.154129028320312

Token 756: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005295606097206473
    2. ' i' → logprob: -7.750529766082764
    3. 'q' → logprob: -9.250529289245605
    4. '(i' → logprob: -12.875529289245605
    5. ' q' → logprob: -16.500530242919922
    6. ' (' → logprob: -16.750530242919922
    7. '(q' → logprob: -17.125530242919922
    8. '(' → logprob: -17.625530242919922
    9. '   ' → logprob: -17.750530242919922
    10. '	i' → logprob: -17.750530242919922

Token 757: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003210865193977952
    2. ',q' → logprob: -5.75321102142334
    3. '<|end|>' → logprob: -11.12821102142334
    4. ' q' → logprob: -12.12821102142334
    5. ' ,' → logprob: -12.12821102142334
    6. 'q' → logprob: -12.62821102142334
    7. ',
' → logprob: -13.50321102142334
    8. '	q' → logprob: -14.25321102142334
    9. '<|end|>' → logprob: -14.75321102142334
    10. ',Q' → logprob: -15.12821102142334

Token 758: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0007099286303855479
    2. ' q' → logprob: -7.2507100105285645
    3. '	q' → logprob: -19.500709533691406
    4. 'copy' → logprob: -19.875709533691406
    5. '[q' → logprob: -20.750709533691406
    6. '
' → logprob: -20.875709533691406
    7. '   ' → logprob: -21.375709533691406
    8. ' ' → logprob: -22.000709533691406
    9. '*q' → logprob: -22.625709533691406
    10. 'ql' → logprob: -22.875709533691406

Token 759: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002266113180667162
    2. '<|end|>' → logprob: -6.627265930175781
    3. ')' → logprob: -7.252265930175781
    4. '[' → logprob: -9.377265930175781
    5. '_' → logprob: -10.252265930175781
    6. ',' → logprob: -11.002265930175781
    7. '#' → logprob: -11.377265930175781
    8. ' def' → logprob: -11.377265930175781
    9. '(' → logprob: -11.627265930175781
    10. ']' → logprob: -11.877265930175781

Token 760: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2471589798224159e-05
    2. ')' → logprob: -11.625012397766113
    3. ':' → logprob: -14.250012397766113
    4. '[' → logprob: -14.875012397766113
    5. ' def' → logprob: -14.875012397766113
    6. ':def' → logprob: -14.875012397766113
    7. '(' → logprob: -15.000012397766113
    8. ']' → logprob: -15.125012397766113
    9. '(
' → logprob: -15.375012397766113
    10. 'q' → logprob: -15.500012397766113

Token 761: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.002177146729081869
    2. ' q' → logprob: -6.6271772384643555
    3. 'def' → logprob: -7.1271772384643555
    4. ' def' → logprob: -11.002177238464355
    5. 'update' → logprob: -11.627177238464355
    6. 'qi' → logprob: -12.252177238464355
    7. 'process' → logprob: -12.252177238464355
    8. '_q' → logprob: -13.002177238464355
    9. '
' → logprob: -13.127177238464355
    10. 'compute' → logprob: -13.252177238464355

Token 762: '_find' (ID: 52203)
  Prédit: '_find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_find' → logprob: -0.07046739757061005
    2. '_' → logprob: -2.695467472076416
    3. '_append' → logprob: -8.820466995239258
    4. '<|end|>' → logprob: -9.320466995239258
    5. ' =' → logprob: -10.320466995239258
    6. 'def' → logprob: -10.445466995239258
    7. '[' → logprob: -10.695466995239258
    8. '=' → logprob: -10.695466995239258
    9. '.' → logprob: -10.695466995239258
    10. '_FIND' → logprob: -10.820466995239258

Token 763: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00014942926645744592
    2. '_find' → logprob: -8.875149726867676
    3. '_' → logprob: -12.000149726867676
    4. '_q' → logprob: -13.750149726867676
    5. '_token' → logprob: -14.375149726867676
    6. '_indices' → logprob: -14.625149726867676
    7. 'index' → logprob: -14.875149726867676
    8. '_idx' → logprob: -15.500149726867676
    9. '_indexes' → logprob: -16.37514877319336
    10. '_get' → logprob: -16.87514877319336

Token 764: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0031869823578745127
    2. '(' → logprob: -5.75318717956543
    3. '(query' → logprob: -12.62818717956543
    4. '(n' → logprob: -13.62818717956543
    5. '(s' → logprob: -14.37818717956543
    6. '(queue' → logprob: -14.37818717956543
    7. '(token' → logprob: -14.50318717956543
    8. '(p' → logprob: -14.50318717956543
    9. '(Q' → logprob: -14.50318717956543
    10. '(
' → logprob: -15.37818717956543

Token 765: ',' (ID: 11)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0020404639653861523
    2. '(' → logprob: -7.002040386199951
    3. '(t' → logprob: -8.12704086303711
    4. '):' → logprob: -8.25204086303711
    5. '(s' → logprob: -9.12704086303711
    6. '(a' → logprob: -9.12704086303711
    7. '(b' → logprob: -9.62704086303711
    8. ',' → logprob: -9.87704086303711
    9. '(x' → logprob: -10.12704086303711
    10. '(token' → logprob: -10.12704086303711

Token 766: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.013234227895736694
    2. ' l' → logprob: -4.6382341384887695
    3. 'x' → logprob: -6.2632341384887695
    4. 'v' → logprob: -7.7632341384887695
    5. 'L' → logprob: -7.8882341384887695
    6. 'r' → logprob: -8.51323413848877
    7. 'val' → logprob: -8.76323413848877
    8. 't' → logprob: -9.13823413848877
    9. 'q' → logprob: -9.63823413848877
    10. 'target' → logprob: -9.63823413848877

Token 767: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030893582850694656
    2. '):
' → logprob: -3.780893564224243
    3. ',' → logprob: -4.905893802642822
    4. '(q' → logprob: -9.530893325805664
    5. '):
' → logprob: -10.155893325805664
    6. ':' → logprob: -10.780893325805664
    7. ',q' → logprob: -10.780893325805664
    8. ')' → logprob: -11.780893325805664
    9. '(' → logprob: -11.905893325805664
    10. '):

' → logprob: -12.030893325805664

Token 768: '   ' (ID: 271)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.40001899003982544
    2. '0' → logprob: -1.2750189304351807
    3. 'import' → logprob: -3.1500189304351807
    4. '   ' → logprob: -5.15001916885376
    5. '
' → logprob: -7.40001916885376
    6. ' bis' → logprob: -7.65001916885376
    7. '1' → logprob: -8.650018692016602
    8. 'return' → logprob: -8.900018692016602
    9. 'b' → logprob: -9.650018692016602
    10. '```' → logprob: -10.400018692016602

Token 769: ' return' (ID: 622)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.13122251629829407
    2. '0' → logprob: -2.6312224864959717
    3. 'import' → logprob: -3.0062224864959717
    4. 'idx' → logprob: -7.256222724914551
    5. 'i' → logprob: -9.13122272491455
    6. 'next' → logprob: -9.25622272491455
    7. ' bis' → logprob: -9.25622272491455
    8. 'for' → logprob: -9.25622272491455
    9. '   ' → logprob: -9.63122272491455
    10. 'from' → logprob: -9.88122272491455

Token 770: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.00047047226689755917
    2. '0' → logprob: -8.000470161437988
    3. 'next' → logprob: -9.375470161437988
    4. ' bis' → logprob: -10.250470161437988
    5. 'heap' → logprob: -11.625470161437988
    6. 'max' → logprob: -12.500470161437988
    7. ' ' → logprob: -14.500470161437988
    8. 'min' → logprob: -15.125470161437988
    9. 'len' → logprob: -15.375470161437988
    10. 'binary' → logprob: -15.375470161437988

Token 771: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.2200749754119897e-06
    2. 'ec' → logprob: -13.375001907348633
    3. 'e' → logprob: -15.625001907348633
    4. '```' → logprob: -15.875001907348633
    5. 'ects' → logprob: -16.000001907348633
    6. 'q' → logprob: -17.125001907348633
    7. 'ict' → logprob: -17.125001907348633
    8. 'ex' → logprob: -17.375001907348633
    9. 'sect' → logprob: -17.500001907348633
    10. 'lect' → logprob: -18.125001907348633

Token 772: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -3.309382373117842e-05
    2. '_left' → logprob: -11.000033378601074
    3. '.' → logprob: -11.875033378601074
    4. '_right' → logprob: -12.500033378601074
    5. '.q' → logprob: -13.125033378601074
    6. 'bis' → logprob: -13.125033378601074
    7. '```' → logprob: -15.000033378601074
    8. 'import' → logprob: -15.250033378601074
    9. 'b' → logprob: -15.500033378601074
    10. '.ins' → logprob: -15.875033378601074

Token 773: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -5.512236498361744e-07
    2. 'ist' → logprob: -14.875000953674316
    3. 'sect' → logprob: -17.125
    4. 'l' → logprob: -17.875
    5. 'ис' → logprob: -18.0
    6. 's' → logprob: -18.0
    7. 'ect' → logprob: -18.125
    8. 'isc' → logprob: -18.75
    9. '...' → logprob: -18.875
    10. 'q' → logprob: -18.875

Token 774: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.06198258697986603
    2. 'ct' → logprob: -2.8119826316833496
    3. 'sect' → logprob: -12.311982154846191
    4. 'q' → logprob: -12.561982154846191
    5. '```' → logprob: -13.436982154846191
    6. 't' → logprob: -13.936982154846191
    7. 'c' → logprob: -14.436982154846191
    8. '
' → logprob: -14.436982154846191
    9. 'e' → logprob: -14.561982154846191
    10. '<' → logprob: -14.686982154846191

Token 775: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.023111071437597275
    2. '_right' → logprob: -4.648110866546631
    3. '(q' → logprob: -4.773110866546631
    4. 'left' → logprob: -5.398110866546631
    5. 'q' → logprob: -8.523111343383789
    6. 'right' → logprob: -9.648111343383789
    7. '[q' → logprob: -11.273111343383789
    8. 'Left' → logprob: -11.648111343383789
    9. '```' → logprob: -14.023111343383789
    10. 'Right' → logprob: -14.398111343383789

Token 776: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -1.1472419600977446e-06
    2. 'q' → logprob: -13.875000953674316
    3. '([' → logprob: -15.875000953674316
    4. '[q' → logprob: -18.125001907348633
    5. '(' → logprob: -18.625001907348633
    6. '
' → logprob: -19.750001907348633
    7. '   ' → logprob: -20.250001907348633
    8. '(
' → logprob: -20.875001907348633
    9. '((' → logprob: -21.125001907348633
    10. ' (' → logprob: -21.625001907348633

Token 777: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01270917896181345
    2. ',q' → logprob: -4.387709140777588
    3. ',(' → logprob: -9.262709617614746
    4. '(q' → logprob: -9.762709617614746
    5. ' ,' → logprob: -10.137709617614746
    6. 'q' → logprob: -13.012709617614746
    7. ',[' → logprob: -13.137709617614746
    8. '   ' → logprob: -13.762709617614746
    9. '[q' → logprob: -14.762709617614746
    10. ',
' → logprob: -15.137709617614746

Token 778: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.3879086375236511
    2. '(' → logprob: -1.137908697128296
    3. ' (' → logprob: -6.887908458709717
    4. '(ls' → logprob: -11.887908935546875
    5. '((' → logprob: -12.762908935546875
    6. '[(' → logprob: -13.762908935546875
    7. '(lambda' → logprob: -14.012908935546875
    8. '(q' → logprob: -14.137908935546875
    9. '(ll' → logprob: -14.137908935546875
    10. '(-' → logprob: -14.637908935546875

Token 779: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.0126840758603066e-05
    2. '(l' → logprob: -10.250040054321289
    3. ' l' → logprob: -12.375040054321289
    4. '	l' → logprob: -15.375040054321289
    5. '   ' → logprob: -16.62504005432129
    6. '(' → logprob: -16.87504005432129
    7. '
' → logprob: -17.75004005432129
    8. ' (' → logprob: -17.75004005432129
    9. '[l' → logprob: -17.75004005432129
    10. ',l' → logprob: -18.12504005432129

Token 780: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015784210991114378
    2. '))' → logprob: -6.626578330993652
    3. ',)' → logprob: -9.001578330993652
    4. ',))
' → logprob: -9.751578330993652
    5. ',None' → logprob: -10.126578330993652
    6. ',),' → logprob: -11.626578330993652
    7. ',
' → logprob: -12.751578330993652
    8. '0' → logprob: -13.001578330993652
    9. ',(' → logprob: -13.376578330993652
    10. ',-' → logprob: -13.376578330993652

Token 781: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11044396460056305
    2. '-' → logprob: -2.3604440689086914
    3. ')' → logprob: -4.610444068908691
    4. ' -' → logprob: -9.860444068908691
    5. 'float' → logprob: -9.985444068908691
    6. '))' → logprob: -10.485444068908691
    7. ' ' → logprob: -10.985444068908691
    8. 'inf' → logprob: -10.985444068908691
    9. ')-' → logprob: -11.110444068908691
    10. '"' → logprob: -11.985444068908691

Token 782: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16419628262519836
    2. '10' → logprob: -2.039196252822876
    3. 'float' → logprob: -4.414196491241455
    4. 'math' → logprob: -5.414196491241455
    5. '100' → logprob: -6.414196491241455
    6. 'sys' → logprob: -6.664196491241455
    7. '(' → logprob: -6.914196491241455
    8. 'int' → logprob: -7.664196491241455
    9. '999' → logprob: -8.414196014404297
    10. 'inf' → logprob: -10.539196014404297

Token 783: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0014222568133845925
    2. ')' → logprob: -6.87642240524292
    3. '0' → logprob: -8.876421928405762
    4. '),' → logprob: -9.126421928405762
    5. '1' → logprob: -9.876421928405762
    6. '))-' → logprob: -10.876421928405762
    7. '9' → logprob: -11.001421928405762
    8. '7' → logprob: -11.126421928405762
    9. '00' → logprob: -11.501421928405762
    10. ' ))' → logprob: -12.001421928405762

Token 784: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4632215201854706
    2. ')' → logprob: -1.338221549987793
    3. '<|end|>' → logprob: -2.463221549987793
    4. '[' → logprob: -4.213221549987793
    5. '(' → logprob: -5.463221549987793
    6. ',' → logprob: -6.088221549987793
    7. ' def' → logprob: -7.088221549987793
    8. ']' → logprob: -7.963221549987793
    9. '#' → logprob: -9.088221549987793
    10. '```' → logprob: -9.213221549987793

Token 785: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -9.209963900502771e-05
    2. 'def' → logprob: -9.375092506408691
    3. 'q' → logprob: -12.500092506408691
    4. ' compute' → logprob: -13.000092506408691
    5. 'update' → logprob: -13.750092506408691
    6. 'get' → logprob: -17.500091552734375
    7. '

' → logprob: -17.750091552734375
    8. '
' → logprob: -17.875091552734375
    9. 'calculate' → logprob: -17.875091552734375
    10. 'comput' → logprob: -18.000091552734375

Token 786: '_new' (ID: 13000)
  Prédit: '_new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_new' → logprob: -0.00010390079842181876
    2. 'new' → logprob: -9.250103950500488
    3. 'New' → logprob: -12.375103950500488
    4. 'def' → logprob: -13.125103950500488
    5. 't' → logprob: -14.125103950500488
    6. 'tuple' → logprob: -15.000103950500488
    7. '_NEW' → logprob: -16.250102996826172
    8. '(t' → logprob: -16.250102996826172
    9. '_' → logprob: -17.125102996826172
    10. '(' → logprob: -17.375102996826172

Token 787: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -0.000492268183734268
    2. 'tuple' → logprob: -7.625492095947266
    3. 't' → logprob: -13.375492095947266
    4. '_t' → logprob: -13.500492095947266
    5. '(tuple' → logprob: -14.250492095947266
    6. 'Tuple' → logprob: -15.250492095947266
    7. '_' → logprob: -15.625492095947266
    8. ' tuple' → logprob: -16.375492095947266
    9. 'tu' → logprob: -16.500492095947266
    10. 'def' → logprob: -17.375492095947266

Token 788: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.00044318195432424545
    2. '(' → logprob: -7.750442981719971
    3. 'def' → logprob: -12.000443458557129
    4. '(a' → logprob: -13.375443458557129
    5. '(t' → logprob: -14.125443458557129
    6. '((' → logprob: -14.125443458557129
    7. '(lambda' → logprob: -14.250443458557129
    8. '(rank' → logprob: -15.000443458557129
    9. '(rr' → logprob: -15.125443458557129
    10. 'r' → logprob: -15.500443458557129

Token 789: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.15441757265944e-05
    2. ' ,' → logprob: -10.375031471252441
    3. ',
' → logprob: -15.750031471252441
    4. '   ' → logprob: -17.500032424926758
    5. '‌,' → logprob: -17.750032424926758
    6. '_,' → logprob: -18.250032424926758
    7. ',(' → logprob: -19.000032424926758
    8. ',c' → logprob: -19.500032424926758
    9. ',

' → logprob: -19.750032424926758
    10. '),' → logprob: -20.125032424926758

Token 790: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0001872094871941954
    2. ' cc' → logprob: -8.625186920166016
    3. 'c' → logprob: -11.875186920166016
    4. '	cc' → logprob: -15.375186920166016
    5. '   ' → logprob: -16.500186920166016
    6. '(cc' → logprob: -16.750186920166016
    7. '_cc' → logprob: -16.875186920166016
    8. '<|end|>' → logprob: -17.125186920166016
    9. 'ccc' → logprob: -17.250186920166016
    10. ' ' → logprob: -17.875186920166016

Token 791: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.11996734328568e-05
    2. ' ,' → logprob: -10.375041007995605
    3. ',c' → logprob: -11.875041007995605
    4. 'c' → logprob: -13.125041007995605
    5. ',
' → logprob: -14.125041007995605
    6. '   ' → logprob: -16.875041961669922
    7. 's' → logprob: -17.500041961669922
    8. '_,' → logprob: -17.500041961669922
    9. ',q' → logprob: -17.625041961669922
    10. 't' → logprob: -17.750041961669922

Token 792: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002646735229063779
    2. ' c' → logprob: -8.250265121459961
    3. 'cc' → logprob: -13.000265121459961
    4. '   ' → logprob: -14.875265121459961
    5. ')c' → logprob: -15.875265121459961
    6. '	c' → logprob: -16.00026512145996
    7. ' ' → logprob: -16.12526512145996
    8. 'ct' → logprob: -16.50026512145996
    9. '
' → logprob: -16.81276512145996
    10. '  ' → logprob: -17.25026512145996

Token 793: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20145544409751892
    2. '):' → logprob: -1.7014554738998413
    3. '=' → logprob: -11.076455116271973
    4. '):
' → logprob: -11.326455116271973
    5. ',' → logprob: -12.451455116271973
    6. ')' → logprob: -12.701455116271973
    7. ':' → logprob: -12.826455116271973
    8. '):

' → logprob: -13.326455116271973
    9. ':
' → logprob: -13.576455116271973
    10. '   ' → logprob: -14.451455116271973

Token 794: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4024851322174072
    2. ':' → logprob: -1.2774851322174072
    3. '(r' → logprob: -3.9024851322174072
    4. '=' → logprob: -4.777484893798828
    5. 'return' → logprob: -5.277484893798828
    6. '   ' → logprob: -5.402484893798828
    7. ' (' → logprob: -5.402484893798828
    8. ':
' → logprob: -6.277484893798828
    9. ':return' → logprob: -6.277484893798828
    10. ' =' → logprob: -6.402484893798828

Token 795: ' return' (ID: 622)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.003061491996049881
    2. '(' → logprob: -6.378061294555664
    3. 'return' (adapté à ' return') → logprob: -7.128061294555664
    4. '   ' → logprob: -8.003061294555664
    5. 'r' → logprob: -8.878061294555664
    6. '(rr' → logprob: -11.128061294555664
    7. ' (' → logprob: -11.253061294555664
    8. '((' → logprob: -11.503061294555664
    9. '(
' → logprob: -11.503061294555664
    10. '(t' → logprob: -11.878061294555664

Token 796: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.005245141219347715
    2. '(' → logprob: -6.130245208740234
    3. 'r' → logprob: -6.130245208740234
    4. ' (' → logprob: -7.380245208740234
    5. '(c' → logprob: -9.255245208740234
    6. '   ' → logprob: -9.630245208740234
    7. '(min' → logprob: -10.880245208740234
    8. '(rr' → logprob: -11.505245208740234
    9. '(max' → logprob: -11.630245208740234
    10. '((' → logprob: -11.630245208740234

Token 797: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00015693542081862688
    2. 'c' → logprob: -8.875157356262207
    3. ' r' → logprob: -11.875157356262207
    4. 'rr' → logprob: -13.125157356262207
    5. ')' → logprob: -13.250157356262207
    6. 'cc' → logprob: -13.500157356262207
    7. 'q' → logprob: -13.875157356262207
    8. '   ' → logprob: -14.125157356262207
    9. '1' → logprob: -14.750157356262207
    10. 'min' → logprob: -14.875157356262207

Token 798: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033069768687710166
    2. ' ,' → logprob: -8.875330924987793
    3. ',
' → logprob: -9.000330924987793
    4. ',c' → logprob: -10.500330924987793
    5. '   ' → logprob: -10.750330924987793
    6. 'cc' → logprob: -12.250330924987793
    7. ',(' → logprob: -13.375330924987793
    8. ',r' → logprob: -13.375330924987793
    9. 'c' → logprob: -13.500330924987793
    10. ' ' → logprob: -13.875330924987793

Token 799: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.11184177547693253
    2. '(cc' → logprob: -2.6118416786193848
    3. ' cc' → logprob: -4.111841678619385
    4. 'min' → logprob: -5.236841678619385
    5. '(' → logprob: -5.986841678619385
    6. 'c' → logprob: -5.986841678619385
    7. ' (' → logprob: -6.361841678619385
    8. '(c' → logprob: -6.736841678619385
    9. ' min' → logprob: -6.986841678619385
    10. 'max' → logprob: -7.111841678619385

Token 800: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06698707491159439
    2. ' +' → logprob: -3.3169870376586914
    3. '+c' → logprob: -3.5669870376586914
    4. '-' → logprob: -8.566987037658691
    5. '*' → logprob: -10.191987037658691
    6. ' -' → logprob: -10.816987037658691
    7. '+C' → logprob: -11.816987037658691
    8. '+
' → logprob: -12.191987037658691
    9. ')' → logprob: -12.316987037658691
    10. '*c' → logprob: -12.316987037658691

Token 801: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.021083055064082146
    2. ' c' → logprob: -3.896083116531372
    3. '1' → logprob: -8.021082878112793
    4. ' ' → logprob: -10.146082878112793
    5. ',' → logprob: -10.521082878112793
    6. ')' → logprob: -10.521082878112793
    7. ' +' → logprob: -10.646082878112793
    8. '+' → logprob: -11.146082878112793
    9. '10' → logprob: -11.396082878112793
    10. '   ' → logprob: -11.771082878112793

Token 802: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.465036105713807e-06
    2. ' )' → logprob: -11.875007629394531
    3. '),' → logprob: -16.12500762939453
    4. '+' → logprob: -16.75000762939453
    5. ')
' → logprob: -16.87500762939453
    6. ',' → logprob: -17.37500762939453
    7. ');' → logprob: -18.00000762939453
    8. '))' → logprob: -18.12500762939453
    9. '*' → logprob: -18.25000762939453
    10. '<|end|>' → logprob: -18.25000762939453

Token 803: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5853438377380371
    2. '<|end|>' → logprob: -0.8353438377380371
    3. ')' → logprob: -4.835343837738037
    4. '<|end|>' → logprob: -6.960343837738037
    5. ' def' → logprob: -8.585344314575195
    6. '```' → logprob: -8.585344314575195
    7. '#' → logprob: -10.835344314575195
    8. '[' → logprob: -10.960344314575195
    9. ']' → logprob: -11.710344314575195
    10. ',' → logprob: -11.835344314575195

Token 804: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.4438606798648834
    2. 'def' → logprob: -1.068860650062561
    3. ' update' → logprob: -4.5688605308532715
    4. 'q' → logprob: -6.0688605308532715
    5. ' def' → logprob: -6.1938605308532715
    6. ' q' → logprob: -9.81886100769043
    7. 'remove' → logprob: -10.06886100769043
    8. 'heap' → logprob: -10.81886100769043
    9. 'insert' → logprob: -11.44386100769043
    10. 'is' → logprob: -11.63136100769043

Token 805: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -1.9027791495318525e-05
    2. 'q' → logprob: -10.875019073486328
    3. '(q' → logprob: -19.125019073486328
    4. '\' → logprob: -19.375019073486328
    5. '_' → logprob: -19.375019073486328
    6. '```' → logprob: -20.250019073486328
    7. ' q' → logprob: -20.375019073486328
    8. ' _' → logprob: -20.875019073486328
    9. 'def' → logprob: -21.000019073486328
    10. '[q' → logprob: -21.875019073486328

Token 806: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.004309884272515774
    2. '(' → logprob: -5.62930965423584
    3. 'def' → logprob: -7.37930965423584
    4. '(
' → logprob: -10.00430965423584
    5. '```' → logprob: -10.87930965423584
    6. '(queue' → logprob: -12.87930965423584
    7. ' (' → logprob: -13.00430965423584
    8. '(def' → logprob: -13.00430965423584
    9. '(query' → logprob: -13.37930965423584
    10. '<|end|>' → logprob: -13.50430965423584

Token 807: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.416665640543215e-05
    2. ',q' → logprob: -10.50003433227539
    3. ' ,' → logprob: -12.75003433227539
    4. 'q' → logprob: -13.50003433227539
    5. ',t' → logprob: -13.75003433227539
    6. ',
' → logprob: -14.87503433227539
    7. '   ' → logprob: -15.00003433227539
    8. ',(' → logprob: -15.37503433227539
    9. '(q' → logprob: -16.00003433227539
    10. 'def' → logprob: -16.25003433227539

Token 808: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.22678698599338531
    2. ' t' → logprob: -1.6017869710922241
    3. 'q' → logprob: -7.601787090301514
    4. '(t' → logprob: -8.101786613464355
    5. ' q' → logprob: -8.476786613464355
    6. ' (' → logprob: -8.851786613464355
    7. '(q' → logprob: -8.976786613464355
    8. ')' → logprob: -10.851786613464355
    9. ' lambda' → logprob: -10.976786613464355
    10. '(lambda' → logprob: -11.101786613464355

Token 809: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013305948814377189
    2. ',q' → logprob: -7.751330375671387
    3. 'def' → logprob: -8.626330375671387
    4. '):' → logprob: -8.751330375671387
    5. ':' → logprob: -8.751330375671387
    6. '   ' → logprob: -9.001330375671387
    7. ',
' → logprob: -9.501330375671387
    8. '(q' → logprob: -9.626330375671387
    9. 'q' → logprob: -10.126330375671387
    10. '):
' → logprob: -10.626330375671387

Token 810: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002970334142446518
    2. ' r' → logprob: -6.877970218658447
    3. 'limit' → logprob: -7.252970218658447
    4. 't' → logprob: -7.752970218658447
    5. 'end' → logprob: -8.377970695495605
    6. 'l' → logprob: -8.752970695495605
    7. 'x' → logprob: -9.002970695495605
    8. 'e' → logprob: -9.877970695495605
    9. 'lim' → logprob: -10.252970695495605
    10. 'key' → logprob: -10.752970695495605

Token 811: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.029780574142932892
    2. '):' → logprob: -3.529780626296997
    3. '   ' → logprob: -11.029780387878418
    4. '):
' → logprob: -11.529780387878418
    5. ':
' → logprob: -13.154780387878418
    6. ':' → logprob: -13.654780387878418
    7. ')' → logprob: -15.154780387878418
    8. '):

' → logprob: -15.529780387878418
    9. ' ):
' → logprob: -15.654780387878418
    10. 'def' → logprob: -16.154781341552734

Token 812: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.21608704328536987
    2. '   ' → logprob: -2.5910871028900146
    3. ' while' → logprob: -2.7160871028900146
    4. 'if' → logprob: -3.9660871028900146
    5. 'idx' → logprob: -4.2160868644714355
    6. 'q' → logprob: -4.5910868644714355
    7. 'i' → logprob: -5.4660868644714355
    8. 'qi' → logprob: -5.5910868644714355
    9. ' if' → logprob: -8.341087341308594
    10. 'j' → logprob: -8.591087341308594

Token 813: ' ti' (ID: 2919)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01711655966937542
    2. 'if' → logprob: -5.017116546630859
    3. 'idx' → logprob: -5.142116546630859
    4. 'qi' → logprob: -6.517116546630859
    5. 'pos' → logprob: -7.017116546630859
    6. 'i' → logprob: -7.267116546630859
    7. 'q' → logprob: -7.392116546630859
    8. 'index' → logprob: -8.01711654663086
    9. 'j' → logprob: -8.51711654663086
    10. 'bis' → logprob: -9.14211654663086

Token 814: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6810009479522705
    2. 'me' → logprob: -1.4310009479522705
    3. '=' → logprob: -2.0560009479522705
    4. 'm' → logprob: -2.4310009479522705
    5. ',' → logprob: -3.8060009479522705
    6. 'e' → logprob: -5.181000709533691
    7. 'ime' → logprob: -5.806000709533691
    8. '=(' → logprob: -6.181000709533691
    9. '_index' → logprob: -7.056000709533691
    10. 'mes' → logprob: -7.056000709533691

Token 815: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.000476190383778885
    2. 'q' → logprob: -8.000475883483887
    3. 'len' → logprob: -9.125475883483887
    4. ' bis' → logprob: -10.875475883483887
    5. 'heap' → logprob: -11.750475883483887
    6. '0' → logprob: -13.000475883483887
    7. 'b' → logprob: -13.125475883483887
    8. 'bi' → logprob: -15.750475883483887
    9. ' q' → logprob: -16.625476837158203
    10. '[q' → logprob: -16.875476837158203

Token 816: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -7.896309739408025e-07
    2. 'e' → logprob: -15.500000953674316
    3. 'ct' → logprob: -15.875000953674316
    4. 'sect' → logprob: -16.375
    5. '```' → logprob: -16.625
    6. 'ected' → logprob: -16.875
    7. 'ec' → logprob: -17.625
    8. 'ects' → logprob: -17.75
    9. 't' → logprob: -17.875
    10. '   ' → logprob: -18.625

Token 817: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -3.583550642360933e-05
    2. '.' → logprob: -10.375036239624023
    3. '.ins' → logprob: -12.375036239624023
    4. '_left' → logprob: -15.375036239624023
    5. '_right' → logprob: -17.875036239624023
    6. 'ins' → logprob: -18.625036239624023
    7. 'bis' → logprob: -18.750036239624023
    8. '._' → logprob: -18.750036239624023
    9. '
' → logprob: -20.000036239624023
    10. '.B' → logprob: -20.125036239624023

Token 818: 'is' (ID: 276)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.2576183080673218
    2. 'ect' → logprob: -2.1326184272766113
    3. 'sect' → logprob: -2.5076184272766113
    4. 's' → logprob: -4.007618427276611
    5. 'is' → logprob: -5.257618427276611
    6. 'n' → logprob: -6.382618427276611
    7. '```' → logprob: -7.632618427276611
    8. 'ns' → logprob: -8.632617950439453
    9. '_left' → logprob: -8.757617950439453
    10. 'q' → logprob: -9.007617950439453

Token 819: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -1.1637164789135568e-05
    2. 'ect' → logprob: -11.500011444091797
    3. 't' → logprob: -14.500011444091797
    4. '(ct' → logprob: -15.000011444091797
    5. 'n' → logprob: -15.250011444091797
    6. 'q' → logprob: -15.500011444091797
    7. '`' → logprob: -17.000011444091797
    8. '```' → logprob: -17.625011444091797
    9. '#' → logprob: -17.750011444091797
    10. '
' → logprob: -17.750011444091797

Token 820: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.018568241968750954
    2. '_right' → logprob: -4.01856803894043
    3. 'left' → logprob: -8.14356803894043
    4. '(q' → logprob: -9.26856803894043
    5. 'q' → logprob: -10.89356803894043
    6. 'Left' → logprob: -12.26856803894043
    7. 'right' → logprob: -12.26856803894043
    8. 'ins' → logprob: -13.39356803894043
    9. '.b' → logprob: -13.51856803894043
    10. 'b' → logprob: -14.14356803894043

Token 821: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -1.0280383548888494e-06
    2. 'q' → logprob: -13.875000953674316
    3. '[q' → logprob: -17.625001907348633
    4. '(' → logprob: -19.750001907348633
    5. '	q' → logprob: -20.125001907348633
    6. ',q' → logprob: -21.000001907348633
    7. ' q' → logprob: -21.125001907348633
    8. '(
' → logprob: -21.250001907348633
    9. '=q' → logprob: -21.625001907348633
    10. '/q' → logprob: -21.625001907348633

Token 822: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004910192918032408
    2. ',q' → logprob: -5.629909992218018
    3. ',t' → logprob: -7.504909992218018
    4. '(q' → logprob: -7.629909992218018
    5. '(t' → logprob: -8.504910469055176
    6. ' ,' → logprob: -10.254910469055176
    7. '   ' → logprob: -10.879910469055176
    8. 'q' → logprob: -12.129910469055176
    9. '(' → logprob: -12.254910469055176
    10. ',
' → logprob: -13.129910469055176

Token 823: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0009985134238377213
    2. '(t' → logprob: -7.375998497009277
    3. ' t' → logprob: -8.375998497009277
    4. 'q' → logprob: -9.000998497009277
    5. '   ' → logprob: -12.000998497009277
    6. '(q' → logprob: -12.125998497009277
    7. '[t' → logprob: -13.250998497009277
    8. ')t' → logprob: -13.375998497009277
    9. ')' → logprob: -13.625998497009277
    10. ',t' → logprob: -14.250998497009277

Token 824: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3870012164115906
    2. ')' → logprob: -1.1370012760162354
    3. ')
' → logprob: -9.262001037597656
    4. ')

' → logprob: -10.637001037597656
    5. ',' → logprob: -12.137001037597656
    6. ' )
' → logprob: -12.887001037597656
    7. ')t' → logprob: -14.387001037597656
    8. ' )' → logprob: -14.512001037597656
    9. ')#' → logprob: -14.762001037597656
    10. ',r' → logprob: -15.012001037597656

Token 825: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9925925731658936
    2. ' if' → logprob: -0.9925925731658936
    3. 'if' → logprob: -1.6175925731658936
    4. '
' → logprob: -2.8675925731658936
    5. '    
' → logprob: -6.992592811584473
    6. '	if' → logprob: -7.492592811584473
    7. ',' → logprob: -7.742592811584473
    8. ' while' → logprob: -7.992592811584473
    9. '```' → logprob: -8.117592811584473
    10. ')' → logprob: -8.367592811584473

Token 826: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0004907185211777687
    2. 'q' → logprob: -8.37549114227295
    3. '   ' → logprob: -8.75049114227295
    4. 'while' → logprob: -9.75049114227295
    5. ' if' → logprob: -10.25049114227295
    6. '    
' → logprob: -13.12549114227295
    7. '```' → logprob: -13.25049114227295
    8. '
' → logprob: -13.62549114227295
    9. '#' → logprob: -14.37549114227295
    10. 'n' → logprob: -14.87549114227295

Token 827: ' q' (ID: 2335)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.0009287334396503866
    2. ' ti' → logprob: -7.00092887878418
    3. 't' → logprob: -11.50092887878418
    4. '	ti' → logprob: -12.50092887878418
    5. 'not' → logprob: -14.12592887878418
    6. 'q' → logprob: -14.62592887878418
    7. '   ' → logprob: -14.62592887878418
    8. 'qi' → logprob: -14.87592887878418
    9. 'tii' → logprob: -15.00092887878418
    10. '
' → logprob: -15.25092887878418

Token 828: '_m' (ID: 1285)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11292634159326553
    2. 'ti' → logprob: -2.8629262447357178
    3. 'and' → logprob: -3.2379262447357178
    4. ' and' → logprob: -5.362926483154297
    5. '   ' → logprob: -6.362926483154297
    6. '==' → logprob: -6.737926483154297
    7. '>' → logprob: -6.987926483154297
    8. ' ti' → logprob: -7.112926483154297
    9. ':' → logprob: -8.237926483154297
    10. '```' → logprob: -8.362926483154297

Token 829: 'ust' (ID: 570)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.11610066890716553
    2. '[' → logprob: -3.241100788116455
    3. 'len' → logprob: -3.991100788116455
    4. 'i' → logprob: -3.991100788116455
    5. 'and' → logprob: -5.241100788116455
    6. 'aint' → logprob: -5.991100788116455
    7. ' ti' → logprob: -6.241100788116455
    8. '[i' → logprob: -6.241100788116455
    9. '	ti' → logprob: -6.366100788116455
    10. 'od' → logprob: -6.491100788116455

Token 830: '_update' (ID: 19528)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.688988447189331
    2. '_keep' → logprob: -1.813988447189331
    3. 'ti' → logprob: -2.188988447189331
    4. '_append' → logprob: -2.938988447189331
    5. 'append' → logprob: -3.188988447189331
    6. '_remove' → logprob: -3.438988447189331
    7. '_insert' → logprob: -4.56398868560791
    8. 'and' → logprob: -4.81398868560791
    9. 'insert' → logprob: -4.93898868560791
    10. '_' → logprob: -4.93898868560791

Token 831: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.05590108782052994
    2. '(t' → logprob: -2.930901050567627
    3. 'ti' → logprob: -7.305901050567627
    4. ' =' → logprob: -9.555901527404785
    5. '=' → logprob: -10.055901527404785
    6. ':' → logprob: -10.180901527404785
    7. '[q' → logprob: -10.305901527404785
    8. 'q' → logprob: -10.305901527404785
    9. '_t' → logprob: -10.430901527404785
    10. 't' → logprob: -11.055901527404785

Token 832: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6393839120864868
    2. '[' → logprob: -1.2643839120864868
    3. 'ti' → logprob: -1.7643839120864868
    4. ' ti' → logprob: -4.389383792877197
    5. ' ,' → logprob: -6.389383792877197
    6. ',
' → logprob: -6.764383792877197
    7. '
' → logprob: -7.139383792877197
    8. ' and' → logprob: -7.764383792877197
    9. 'and' → logprob: -7.889383792877197
    10. '   ' → logprob: -8.514384269714355

Token 833: ' ti' (ID: 2919)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.006349049974232912
    2. 't' → logprob: -5.506349086761475
    3. 'q' → logprob: -6.256349086761475
    4. ' ti' → logprob: -8.256348609924316
    5. 'qi' → logprob: -10.381348609924316
    6. ')' → logprob: -11.131348609924316
    7. ' t' → logprob: -11.131348609924316
    8. ' q' → logprob: -11.381348609924316
    9. '	ti' → logprob: -11.756348609924316
    10. '   ' → logprob: -12.006348609924316

Token 834: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003848174586892128
    2. ',t' → logprob: -6.128848075866699
    3. '):' → logprob: -7.003848075866699
    4. ' ,' → logprob: -8.3788480758667
    5. '-' → logprob: -8.6288480758667
    6. '   ' → logprob: -9.5038480758667
    7. ')' → logprob: -9.6288480758667
    8. '):
' → logprob: -9.6288480758667
    9. ',q' → logprob: -9.7538480758667
    10. ' -' → logprob: -10.3788480758667

Token 835: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.012174775823950768
    2. ' t' → logprob: -5.012174606323242
    3. 'r' → logprob: -5.262174606323242
    4. 'q' → logprob: -8.637174606323242
    5. ' r' → logprob: -10.012174606323242
    6. '   ' → logprob: -11.387174606323242
    7. 'ti' → logprob: -11.387174606323242
    8. ' q' → logprob: -12.387174606323242
    9. ')' → logprob: -12.637174606323242
    10. ' ' → logprob: -13.512174606323242

Token 836: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06665869802236557
    2. '):
' → logprob: -2.8166587352752686
    3. ',' → logprob: -5.4416584968566895
    4. ')' → logprob: -8.816658973693848
    5. ',t' → logprob: -8.816658973693848
    6. '):
' → logprob: -11.191658973693848
    7. ',r' → logprob: -11.816658973693848
    8. ' ):' → logprob: -11.941658973693848
    9. 't' → logprob: -12.441658973693848
    10. '):

' → logprob: -12.441658973693848

Token 837: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0006008113850839436
    2. ' r' → logprob: -7.625600814819336
    3. 'q' → logprob: -9.375600814819336
    4. 't' → logprob: -10.750600814819336
    5. ')' → logprob: -12.750600814819336
    6. 'ti' → logprob: -13.875600814819336
    7. '   ' → logprob: -14.375600814819336
    8. ' q' → logprob: -15.125600814819336
    9. ' ' → logprob: -15.500600814819336
    10. 'len' → logprob: -15.500600814819336

Token 838: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4740978479385376
    2. '):' → logprob: -0.9740978479385376
    3. '):
' → logprob: -11.099098205566406
    4. ')' → logprob: -12.849098205566406
    5. '   ' → logprob: -13.349098205566406
    6. '):

' → logprob: -14.224098205566406
    7. ':' → logprob: -15.224098205566406
    8. '=' → logprob: -15.724098205566406
    9. ' ' → logprob: -15.974098205566406
    10. ')==' → logprob: -16.349098205566406

Token 839: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8771434426307678
    2. ':' → logprob: -1.127143383026123
    3. ':
' → logprob: -1.377143383026123
    4. '   ' → logprob: -5.502143383026123
    5. '):
' → logprob: -7.002143383026123
    6. ':q' → logprob: -7.502143383026123
    7. 'q' → logprob: -8.002143859863281
    8. '[q' → logprob: -8.252143859863281
    9. ' q' → logprob: -8.502143859863281
    10. '```' → logprob: -8.627143859863281

Token 840: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.08060681074857712
    2. ' q' → logprob: -2.705606698989868
    3. 'if' → logprob: -4.955606937408447
    4. ' if' → logprob: -6.455606937408447
    5. '   ' → logprob: -6.455606937408447
    6. '
' → logprob: -8.955606460571289
    7. 'while' → logprob: -9.705606460571289
    8. 'update' → logprob: -9.830606460571289
    9. ' while' → logprob: -10.080606460571289
    10. 'del' → logprob: -10.580606460571289

Token 841: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4385974705219269
    2. '.insert' → logprob: -1.1885974407196045
    3. '.pop' → logprob: -3.1885974407196045
    4. '.__' → logprob: -4.813597679138184
    5. 'insert' → logprob: -7.563597679138184
    6. '_insert' → logprob: -7.813597679138184
    7. '__' → logprob: -9.563597679138184
    8. '=' → logprob: -10.938597679138184
    9. 'pop' → logprob: -11.313597679138184
    10. '   ' → logprob: -11.813597679138184

Token 842: ' ti' (ID: 2919)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.04401598870754242
    2. 'ti' → logprob: -3.794015884399414
    3. ' q' → logprob: -3.919015884399414
    4. ' ti' → logprob: -7.919015884399414
    5. 'insert' → logprob: -9.044015884399414
    6. 'qi' → logprob: -9.044015884399414
    7. '   ' → logprob: -10.419015884399414
    8. 't' → logprob: -10.794015884399414
    9. '_q' → logprob: -12.294015884399414
    10. 'qt' → logprob: -12.419015884399414

Token 843: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2255888283252716
    2. ' =' → logprob: -1.6005887985229492
    3. '.insert' → logprob: -9.47558879852295
    4. ',' → logprob: -10.35058879852295
    5. '.pop' → logprob: -10.35058879852295
    6. '[' → logprob: -10.97558879852295
    7. '   ' → logprob: -11.85058879852295
    8. 'insert' → logprob: -12.72558879852295
    9. '[:' → logprob: -13.10058879852295
    10. ' ' → logprob: -13.47558879852295

Token 844: ' update' (ID: 4027)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.23130349814891815
    2. 'update' → logprob: -1.8563034534454346
    3. ' q' → logprob: -3.4813034534454346
    4. ' update' → logprob: -4.606303691864014
    5. 'insert' → logprob: -5.231303691864014
    6. 'list' → logprob: -6.356303691864014
    7. 'remove' → logprob: -7.856303691864014
    8. 'copy' → logprob: -7.981303691864014
    9. ' insert' → logprob: -7.981303691864014
    10. 'replace' → logprob: -8.731303215026855

Token 845: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.01847720332443714
    2. '_list' → logprob: -4.268477439880371
    3. 'q' → logprob: -6.018477439880371
    4. '_value' → logprob: -7.518477439880371
    5. 'list' → logprob: -7.893477439880371
    6. '_entry' → logprob: -9.143477439880371
    7. '[q' → logprob: -9.143477439880371
    8. '_array' → logprob: -9.268477439880371
    9. '_slice' → logprob: -9.393477439880371
    10. '_insert' → logprob: -9.643477439880371

Token 846: '_insert' (ID: 45075)
  Prédit: '_remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.566946268081665
    2. '_value' → logprob: -2.191946268081665
    3. '_insert' → logprob: -2.191946268081665
    4. '_list' → logprob: -2.941946268081665
    5. '_entry' → logprob: -3.691946268081665
    6. '_replace' → logprob: -4.066946029663086
    7. '_before' → logprob: -4.316946029663086
    8. '_pop' → logprob: -4.691946029663086
    9. '_at' → logprob: -4.816946029663086
    10. '_item' → logprob: -4.941946029663086

Token 847: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0025261954870074987
    2. '_(' → logprob: -7.12752628326416
    3. '_at' → logprob: -7.62752628326416
    4. '_list' → logprob: -7.75252628326416
    5. 'ed' → logprob: -9.00252628326416
    6. '_before' → logprob: -9.25252628326416
    7. '_item' → logprob: -9.37752628326416
    8. '_position' → logprob: -9.50252628326416
    9. '_element' → logprob: -9.75252628326416
    10. '_insert' → logprob: -9.87752628326416

Token 848: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015866279136389494
    2. ',t' → logprob: -7.001586437225342
    3. ' ,' → logprob: -7.376586437225342
    4. '(t' → logprob: -10.2515869140625
    5. '[:' → logprob: -12.5015869140625
    6. '   ' → logprob: -12.5015869140625
    7. '[t' → logprob: -13.7515869140625
    8. ',
' → logprob: -14.2515869140625
    9. 't' → logprob: -14.3765869140625
    10. '(' → logprob: -14.5015869140625

Token 849: ' ti' (ID: 2919)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.6481914520263672
    2. 't' → logprob: -0.7731914520263672
    3. ' t' → logprob: -4.523191452026367
    4. ' ti' → logprob: -5.398191452026367
    5. '	ti' → logprob: -10.523191452026367
    6. 'q' → logprob: -10.898191452026367
    7. '(t' → logprob: -11.773191452026367
    8. '   ' → logprob: -11.898191452026367
    9. '	t' → logprob: -12.148191452026367
    10. 'qi' → logprob: -12.273191452026367

Token 850: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002766955876722932
    2. ',t' → logprob: -6.252767086029053
    3. ' ,' → logprob: -7.127767086029053
    4. '   ' → logprob: -10.377766609191895
    5. ')' → logprob: -14.377766609191895
    6. ' ' → logprob: -14.627766609191895
    7. '+' → logprob: -14.752766609191895
    8. '       ' → logprob: -14.752766609191895
    9. '  ' → logprob: -15.002766609191895
    10. '(t' → logprob: -15.127766609191895

Token 851: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.009765418246388435
    2. ' t' → logprob: -4.634765625
    3. '   ' → logprob: -12.384765625
    4. '	t' → logprob: -14.009765625
    5. 'q' → logprob: -14.134765625
    6. ',' → logprob: -14.134765625
    7. ' ' → logprob: -14.259765625
    8. ')' → logprob: -14.634765625
    9. '
' → logprob: -14.884765625
    10. 'r' → logprob: -15.134765625

Token 852: ',' (ID: 11)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.061707254499197006
    2. ')' → logprob: -3.3117072582244873
    3. ',' → logprob: -3.8117072582244873
    4. '   ' → logprob: -7.061707019805908
    5. ')

' → logprob: -8.936707496643066
    6. ')
' → logprob: -9.061707496643066
    7. ' )
' → logprob: -9.811707496643066
    8. ',)
' → logprob: -10.811707496643066
    9. ',t' → logprob: -10.936707496643066
    10. ',r' → logprob: -11.186707496643066

Token 853: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00023298001906368881
    2. ' r' → logprob: -8.375232696533203
    3. 'q' → logprob: -13.625232696533203
    4. ')' → logprob: -14.750232696533203
    5. '   ' → logprob: -16.375232696533203
    6. '	r' → logprob: -16.500232696533203
    7. 'c' → logprob: -16.687732696533203
    8. '
' → logprob: -16.687732696533203
    9. '1' → logprob: -16.875232696533203
    10. ')
' → logprob: -16.937732696533203

Token 854: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.19283774495124817
    2. '   ' → logprob: -1.9428377151489258
    3. ')' → logprob: -3.442837715148926
    4. ')

' → logprob: -10.317837715148926
    5. ')
' → logprob: -10.442837715148926
    6. 'return' → logprob: -11.067837715148926
    7. ')return' → logprob: -11.317837715148926
    8. ',' → logprob: -11.442837715148926
    9. 'def' → logprob: -12.442837715148926
    10. ' ' → logprob: -12.692837715148926

Token 855: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001530216890387237
    2. '	return' → logprob: -7.001530170440674
    3. '       ' → logprob: -8.501530647277832
    4. '<|end|>' → logprob: -8.501530647277832
    5. 'return' → logprob: -9.501530647277832
    6. ' return' → logprob: -10.876530647277832
    7. '  ' → logprob: -11.626530647277832
    8. '    
' → logprob: -11.626530647277832
    9. ' ' → logprob: -11.626530647277832
    10. ':return' → logprob: -11.876530647277832

Token 856: ' q' (ID: 2335)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08927029371261597
    2. 'q' (adapté à ' q') → logprob: -3.0892703533172607
    3. '   ' → logprob: -3.8392703533172607
    4. 'while' → logprob: -4.464270114898682
    5. ' return' → logprob: -5.839270114898682
    6. '
' → logprob: -6.089270114898682
    7. 'ti' → logprob: -7.339270114898682
    8. 'for' → logprob: -8.21427059173584
    9. 'if' → logprob: -8.58927059173584
    10. ' while' → logprob: -8.71427059173584

Token 857: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17120802402496338
    2. ',' → logprob: -2.296207904815674
    3. '.pop' → logprob: -3.671207904815674
    4. ' =' → logprob: -4.046207904815674
    5. '[' → logprob: -4.671207904815674
    6. 'return' → logprob: -6.421207904815674
    7. 'def' → logprob: -7.421207904815674
    8. '.' → logprob: -7.796207904815674
    9. '.reverse' → logprob: -8.171208381652832
    10. ',q' → logprob: -8.421208381652832

Token 858: ' remove' (ID: 6234)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4890231490135193
    2. 'trim' → logprob: -1.739023208618164
    3. 'pr' → logprob: -1.989023208618164
    4. ' q' → logprob: -3.989023208618164
    5. 'clean' → logprob: -4.489023208618164
    6. ' trim' → logprob: -4.489023208618164
    7. 'remove' → logprob: -4.489023208618164
    8. ' prune' → logprob: -4.739023208618164
    9. 'cleanup' → logprob: -5.364023208618164
    10. 'truncate' → logprob: -5.989023208618164

Token 859: '_less' (ID: 154196)
  Prédit: '_q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.09894389659166336
    2. '(q' → logprob: -3.7239439487457275
    3. '_suffix' → logprob: -3.9739439487457275
    4. '_after' → logprob: -3.9739439487457275
    5. '_tail' → logprob: -4.848943710327148
    6. 'q' → logprob: -5.473943710327148
    7. '_ex' → logprob: -5.598943710327148
    8. '_extra' → logprob: -5.973943710327148
    9. '_duplicates' → logprob: -6.348943710327148
    10. ' q' → logprob: -6.348943710327148

Token 860: '_opt' (ID: 41733)
  Prédit: '_equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_equal' → logprob: -1.5003286600112915
    2. '_q' → logprob: -1.6253286600112915
    3. '(q' → logprob: -1.8753286600112915
    4. '_items' → logprob: -2.000328540802002
    5. '_than' → logprob: -2.625328540802002
    6. '_idx' → logprob: -2.750328540802002
    7. '_values' → logprob: -3.625328540802002
    8. '_prefix' → logprob: -3.625328540802002
    9. '_indices' → logprob: -4.750328540802002
    10. '_eq' → logprob: -4.750328540802002

Token 861: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -0.06731991469860077
    2. 't' → logprob: -3.067319869995117
    3. '(q' → logprob: -4.817319869995117
    4. 'imized' → logprob: -5.067319869995117
    5. 'tim' → logprob: -6.442319869995117
    6. 'q' → logprob: -7.067319869995117
    7. 'im' → logprob: -7.192319869995117
    8. 'ti' → logprob: -7.692319869995117
    9. 'imum' → logprob: -9.567319869995117
    10. '(t' → logprob: -9.692319869995117

Token 862: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.30986618995666504
    2. '_entries' → logprob: -1.559866189956665
    3. '_elements' → logprob: -3.934866189956665
    4. '_segments' → logprob: -5.184865951538086
    5. '_inter' → logprob: -5.309865951538086
    6. '_right' → logprob: -5.434865951538086
    7. '_suffix' → logprob: -5.684865951538086
    8. '_candidates' → logprob: -6.059865951538086
    9. '_states' → logprob: -6.309865951538086
    10. 's' → logprob: -6.434865951538086

Token 863: ',' (ID: 11)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.525235116481781
    2. ',' → logprob: -0.900235116481781
    3. '(t' → logprob: -6.775235176086426
    4. ',q' → logprob: -7.525235176086426
    5. '(' → logprob: -8.150235176086426
    6. ' ,' → logprob: -10.150235176086426
    7. ',t' → logprob: -10.650235176086426
    8. '   ' → logprob: -11.025235176086426
    9. ')' → logprob: -11.400235176086426
    10. '       ' → logprob: -11.525235176086426

Token 864: ' ti' (ID: 2919)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.00476700346916914
    2. 'q' → logprob: -5.879766941070557
    3. ' ti' → logprob: -6.504766941070557
    4. 'qi' → logprob: -8.504767417907715
    5. ' q' → logprob: -9.004767417907715
    6. 't' → logprob: -10.004767417907715
    7. '   ' → logprob: -10.504767417907715
    8. '	ti' → logprob: -10.629767417907715
    9. ')' → logprob: -11.129767417907715
    10. ' qi' → logprob: -12.629767417907715

Token 865: ',' (ID: 11)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1962157040834427
    2. ',' → logprob: -2.0712156295776367
    3. ')' → logprob: -3.0712156295776367
    4. '   ' → logprob: -5.321215629577637
    5. ',t' → logprob: -7.696215629577637
    6. ',q' → logprob: -9.196215629577637
    7. ')
' → logprob: -9.946215629577637
    8. ',i' → logprob: -10.071215629577637
    9. ')

' → logprob: -10.321215629577637
    10. '+' → logprob: -10.821215629577637

Token 866: ' t' (ID: 260)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.09992300719022751
    2. 'ti' → logprob: -2.8499228954315186
    3. 't' → logprob: -3.5999228954315186
    4. 'q' → logprob: -5.099923133850098
    5. ' r' → logprob: -6.224923133850098
    6. '-' → logprob: -7.224923133850098
    7. ')' → logprob: -7.849923133850098
    8. ' t' → logprob: -8.849923133850098
    9. ' ti' → logprob: -8.849923133850098
    10. ' q' → logprob: -9.599923133850098

Token 867: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.034255500882864
    2. ')' → logprob: -3.9092555046081543
    3. ',' → logprob: -4.784255504608154
    4. '   ' → logprob: -5.284255504608154
    5. ' )
' → logprob: -9.534255027770996
    6. ')
' → logprob: -10.409255027770996
    7. ')

' → logprob: -10.659255027770996
    8. ' ' → logprob: -10.784255027770996
    9. ',r' → logprob: -10.909255027770996
    10. '  ' → logprob: -12.159255027770996

Token 868: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001689462224021554
    2. '	return' → logprob: -7.001689434051514
    3. 'return' → logprob: -7.251689434051514
    4. ' return' → logprob: -9.876689910888672
    5. '    
' → logprob: -12.001689910888672
    6. ':return' → logprob: -12.501689910888672
    7. '
' → logprob: -12.751689910888672
    8. '       ' → logprob: -13.501689910888672
    9. '```' → logprob: -14.376689910888672
    10. '<|end|>' → logprob: -14.501689910888672

Token 869: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10159362852573395
    2. 'return' (adapté à ' return') → logprob: -2.3515937328338623
    3. ' return' → logprob: -6.601593494415283
    4. '	return' → logprob: -10.851593971252441
    5. ':return' → logprob: -12.351593971252441
    6. ' ' → logprob: -13.101593971252441
    7. 'else' → logprob: -14.351593971252441
    8. '  ' → logprob: -14.976593971252441
    9. '       ' → logprob: -15.226593971252441
    10. '    
' → logprob: -15.601593971252441

Token 870: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5759425163269043
    2. ' q' → logprob: -0.8259425163269043
    3. '	q' → logprob: -13.325942993164062
    4. '[q' → logprob: -14.575942993164062
    5. ' ' → logprob: -15.075942993164062
    6. ' ' → logprob: -15.200942993164062
    7. '[' → logprob: -16.075942993164062
    8. '(q' → logprob: -16.075942993164062
    9. 'copy' → logprob: -17.075942993164062
    10. ',q' → logprob: -17.075942993164062

Token 871: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00023405285901390016
    2. '
' → logprob: -8.37523365020752
    3. ' def' → logprob: -13.62523365020752
    4. '

' → logprob: -14.12523365020752
    5. ':def' → logprob: -14.50023365020752
    6. '_def' → logprob: -15.37523365020752
    7. '```' → logprob: -15.50023365020752
    8. 'ndef' → logprob: -15.62523365020752
    9. '    
' → logprob: -16.625234603881836
    10. '<|end|>' → logprob: -16.875234603881836

Token 872: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00031890018726699054
    2. ' def' → logprob: -8.12531852722168
    3. '_def' → logprob: -11.62531852722168
    4. '   ' → logprob: -12.50031852722168
    5. '
' → logprob: -12.75031852722168
    6. ':' → logprob: -13.25031852722168
    7. 'ti' → logprob: -14.12531852722168
    8. ':def' → logprob: -14.12531852722168
    9. '_t' → logprob: -14.62531852722168
    10. '```' → logprob: -14.62531852722168

Token 873: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00010795372509164736
    2. 'def' → logprob: -9.250107765197754
    3. ' q' → logprob: -11.375107765197754
    4. '_q' → logprob: -15.375107765197754
    5. '	q' → logprob: -17.87510871887207
    6. '
' → logprob: -18.00010871887207
    7. ' def' → logprob: -18.50010871887207
    8. '$q' → logprob: -18.75010871887207
    9. 'qu' → logprob: -19.00010871887207
    10. '(q' → logprob: -19.50010871887207

Token 874: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -7.465036105713807e-06
    2. '_' → logprob: -11.875007629394531
    3. 'def' → logprob: -15.250007629394531
    4. '_should' → logprob: -17.12500762939453
    5. 'must' → logprob: -17.37500762939453
    6. '_def' → logprob: -18.25000762939453
    7. '_has' → logprob: -18.75000762939453
    8. '_max' → logprob: -19.12500762939453
    9. '_is' → logprob: -19.50000762939453
    10. ' _' → logprob: -19.50000762939453

Token 875: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: 0.0
    2. 'u' → logprob: -22.375
    3. 'must' → logprob: -23.5
    4. 'уст' → logprob: -23.75
    5. '_' → logprob: -23.875
    6. ' ust' → logprob: -24.0
    7. 'UST' → logprob: -24.875
    8. 'ustr' → logprob: -25.625
    9. 'ush' → logprob: -25.875
    10. '```' → logprob: -26.125

Token 876: '_update' (ID: 19528)
  Prédit: '_update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -0.0008136780234053731
    2. '_m' → logprob: -7.1258134841918945
    3. 'update' → logprob: -11.750813484191895
    4. '_should' → logprob: -14.750813484191895
    5. '_' → logprob: -15.000813484191895
    6. 'must' → logprob: -15.875813484191895
    7. '_need' → logprob: -15.875813484191895
    8. 'm' → logprob: -16.50081443786621
    9. '_up' → logprob: -16.62581443786621
    10. '_get' → logprob: -16.62581443786621

Token 877: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.375
    3. '(
' → logprob: -20.0
    4. ' (' → logprob: -21.125
    5. '[q' → logprob: -21.625
    6. 'q' → logprob: -22.75
    7. '(queue' → logprob: -23.375
    8. '(qu' → logprob: -23.375
    9. '(query' → logprob: -23.75
    10. 'def' → logprob: -23.75

Token 878: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0564331205387134e-05
    2. ',q' → logprob: -11.87501049041748
    3. '(q' → logprob: -13.25001049041748
    4. ' ,' → logprob: -13.37501049041748
    5. ',
' → logprob: -15.62501049041748
    6. '[q' → logprob: -16.875011444091797
    7. '   ' → logprob: -17.250011444091797
    8. ',t' → logprob: -17.750011444091797
    9. 'q' → logprob: -18.375011444091797
    10. '(' → logprob: -19.875011444091797

Token 879: ' ti' (ID: 2919)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -2.2007883671903983e-05
    2. ' ti' → logprob: -10.750021934509277
    3. 'i' → logprob: -14.625021934509277
    4. 'idx' → logprob: -17.125022888183594
    5. '	ti' → logprob: -17.875022888183594
    6. 't' → logprob: -19.125022888183594
    7. '   ' → logprob: -19.875022888183594
    8. 'index' → logprob: -20.000022888183594
    9. '
' → logprob: -20.375022888183594
    10. '```' → logprob: -20.625022888183594

Token 880: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040242893737740815
    2. ',q' → logprob: -7.875402450561523
    3. '(q' → logprob: -11.000402450561523
    4. ' ,' → logprob: -12.375402450561523
    5. 'q' → logprob: -14.250402450561523
    6. '[q' → logprob: -15.125402450561523
    7. ',t' → logprob: -15.875402450561523
    8. '   ' → logprob: -16.250402450561523
    9. ',
' → logprob: -16.250402450561523
    10. ' ' → logprob: -17.250402450561523

Token 881: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -4.584861744660884e-05
    2. ' t' → logprob: -10.000045776367188
    3. 'q' → logprob: -15.500045776367188
    4. '	t' → logprob: -16.000045776367188
    5. '   ' → logprob: -17.625045776367188
    6. '`t' → logprob: -17.875045776367188
    7. 'ti' → logprob: -18.500045776367188
    8. '```' → logprob: -19.000045776367188
    9. 'token' → logprob: -19.250045776367188
    10. ' ' → logprob: -19.625045776367188

Token 882: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018152403645217419
    2. '):' → logprob: -6.501815319061279
    3. ',t' → logprob: -9.251814842224121
    4. ',q' → logprob: -9.251814842224121
    5. ' ,' → logprob: -9.876814842224121
    6. '):
' → logprob: -10.501814842224121
    7. ',i' → logprob: -11.376814842224121
    8. ')' → logprob: -12.376814842224121
    9. '   ' → logprob: -12.626814842224121
    10. ',k' → logprob: -12.751814842224121

Token 883: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.3120038501219824e-05
    2. ' r' → logprob: -9.875053405761719
    3. 't' → logprob: -13.625053405761719
    4. '   ' → logprob: -15.250053405761719
    5. 'q' → logprob: -16.75005340576172
    6. '	r' → logprob: -16.87505340576172
    7. '_r' → logprob: -17.00005340576172
    8. 'ri' → logprob: -17.25005340576172
    9. ')' → logprob: -17.37505340576172
    10. '```' → logprob: -17.50005340576172

Token 884: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016542896628379822
    2. '):
' → logprob: -4.141542911529541
    3. ':' → logprob: -7.641542911529541
    4. '):
' → logprob: -11.391542434692383
    5. ')' → logprob: -11.516542434692383
    6. '   ' → logprob: -12.766542434692383
    7. ' ):' → logprob: -13.766542434692383
    8. '=' → logprob: -13.891542434692383
    9. '():' → logprob: -14.141542434692383
    10. ',' → logprob: -14.641542434692383

Token 885: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014326033182442188
    2. ' if' → logprob: -4.889326095581055
    3. '   ' → logprob: -5.264326095581055
    4. 'ti' → logprob: -6.889326095581055
    5. 'return' → logprob: -7.639326095581055
    6. 'or' → logprob: -12.139326095581055
    7. 'and' → logprob: -12.514326095581055
    8. '	if' → logprob: -12.639326095581055
    9. ' return' → logprob: -13.139326095581055
    10. ' ti' → logprob: -13.389326095581055

Token 886: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2571110725402832
    2. 'if' → logprob: -1.5071110725402832
    3. 'ti' → logprob: -6.257111072540283
    4. ' return' → logprob: -6.507111072540283
    5. '   ' → logprob: -6.632111072540283
    6. ' if' → logprob: -7.757111072540283
    7. ' ti' → logprob: -12.132110595703125
    8. 'or' → logprob: -12.132110595703125
    9. ':return' → logprob: -14.132110595703125
    10. '	ti' → logprob: -14.507110595703125

Token 887: ' q' (ID: 2335)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.0001487140398239717
    2. ' ti' → logprob: -9.00014877319336
    3. '	ti' → logprob: -11.75014877319336
    4. '   ' → logprob: -12.12514877319336
    5. '(' → logprob: -12.62514877319336
    6. '(t' → logprob: -12.75014877319336
    7. 'len' → logprob: -13.00014877319336
    8. 'not' → logprob: -13.25014877319336
    9. 't' → logprob: -14.37514877319336
    10. 'tii' → logprob: -14.50014877319336

Token 888: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09697716683149338
    2. 'ti' → logprob: -3.0969772338867188
    3. 'and' → logprob: -3.8469772338867188
    4. ' and' → logprob: -5.096977233886719
    5. 'if' → logprob: -5.346977233886719
    6. '==' → logprob: -5.596977233886719
    7. '   ' → logprob: -5.846977233886719
    8. ' ti' → logprob: -6.096977233886719
    9. '>' → logprob: -7.221977233886719
    10. ')' → logprob: -7.596977233886719

Token 889: 'ti' (ID: 2832)
  Prédit: 'ti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.0003919463779311627
    2. 'i' → logprob: -8.375391960144043
    3. '
' → logprob: -10.500391960144043
    4. '   ' → logprob: -10.750391960144043
    5. '[' → logprob: -10.875391960144043
    6. '0' → logprob: -11.125391960144043
    7. ' ti' → logprob: -11.250391960144043
    8. ']' → logprob: -11.625391960144043
    9. '	ti' → logprob: -11.750391960144043
    10. 't' → logprob: -11.875391960144043

Token 890: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02502080798149109
    2. '[' → logprob: -4.150020599365234
    3. '>[' → logprob: -5.525020599365234
    4. '>' → logprob: -5.900020599365234
    5. ']>' → logprob: -7.025020599365234
    6. ']' → logprob: -7.400020599365234
    7. ':' → logprob: -8.650020599365234
    8. '0' → logprob: -8.775020599365234
    9. ']>=' → logprob: -9.400020599365234
    10. '   ' → logprob: -9.400020599365234

Token 891: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3869000971317291
    2. '0' → logprob: -1.1369000673294067
    3. '
' → logprob: -11.511899948120117
    4. '[' → logprob: -11.761899948120117
    5. '' → logprob: -12.511899948120117
    6. ' ' → logprob: -13.136899948120117
    7. '   ' → logprob: -13.386899948120117
    8. '-' → logprob: -14.136899948120117
    9. ':' → logprob: -14.824399948120117
    10. '(' → logprob: -14.949399948120117

Token 892: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0033178075682371855
    2. ' >' → logprob: -5.753317832946777
    3. '>=' → logprob: -9.128317832946777
    4. ')' → logprob: -11.128317832946777
    5. ')>' → logprob: -11.878317832946777
    6. '()>' → logprob: -13.503317832946777
    7. ']>' → logprob: -13.628317832946777
    8. ']' → logprob: -13.753317832946777
    9. '<' → logprob: -14.128317832946777
    10. ' ' → logprob: -14.253317832946777

Token 893: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.001547002699226141
    2. ' >' → logprob: -6.501546859741211
    3. '>=' → logprob: -10.126546859741211
    4. '()>' → logprob: -14.001546859741211
    5. '>
' → logprob: -14.126546859741211
    6. '<' → logprob: -14.251546859741211
    7. ' ' → logprob: -14.876546859741211
    8. '>`' → logprob: -15.626546859741211
    9. '>x' → logprob: -15.626546859741211
    10. '   ' → logprob: -15.876546859741211

Token 894: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0007100477814674377
    2. ' t' → logprob: -7.2507100105285645
    3. '`t' → logprob: -16.875709533691406
    4. '	t' → logprob: -17.000709533691406
    5. '_t' → logprob: -17.750709533691406
    6. '(t' → logprob: -18.625709533691406
    7. ')t' → logprob: -18.750709533691406
    8. '   ' → logprob: -19.125709533691406
    9. '
' → logprob: -19.875709533691406
    10. ' ' → logprob: -20.000709533691406

Token 895: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09151686728000641
    2. '1' → logprob: -2.4665169715881348
    3. '<|end|>' → logprob: -6.466516971588135
    4. ' ' → logprob: -7.716516971588135
    5. '```' → logprob: -9.091516494750977
    6. '<|end|>' → logprob: -9.216516494750977
    7. '2' → logprob: -9.216516494750977
    8. ')' → logprob: -9.716516494750977
    9. '[i' → logprob: -10.591516494750977
    10. ' and' → logprob: -10.841516494750977

Token 896: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '
' → logprob: -15.250000953674316
    3. '[' → logprob: -16.125
    4. '' → logprob: -16.8125
    5. '```' → logprob: -17.3125
    6. '-' → logprob: -17.375
    7. ' ' → logprob: -17.4375
    8. '
' → logprob: -17.9375
    9. '   ' → logprob: -18.1875
    10. '۱' → logprob: -18.5625

Token 897: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5789262056350708
    2. '<|end|>' → logprob: -1.4539262056350708
    3. 'and' → logprob: -1.8289262056350708
    4. ' or' → logprob: -3.3289260864257812
    5. ' if' → logprob: -5.453926086425781
    6. 'or' → logprob: -5.953926086425781
    7. 'if' → logprob: -6.703926086425781
    8. '<|end|>' → logprob: -7.703926086425781
    9. ')' → logprob: -7.828926086425781
    10. ' ' → logprob: -8.078926086425781

Token 898: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 899: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03841094672679901
    2. '(q' → logprob: -4.0384111404418945
    3. 'r' → logprob: -4.5384111404418945
    4. 'ti' → logprob: -5.1634111404418945
    5. '(t' → logprob: -6.7884111404418945
    6. '(r' → logprob: -6.9134111404418945
    7. '(' → logprob: -7.4134111404418945
    8. 't' → logprob: -7.5384111404418945
    9. 'qi' → logprob: -9.413411140441895
    10. ' q' → logprob: -9.538411140441895

Token 900: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.786196975852363e-05
    2. 'and' → logprob: -11.000038146972656
    3. '[
' → logprob: -11.250038146972656
    4. ' and' → logprob: -12.750038146972656
    5. '
' → logprob: -13.125038146972656
    6. ' [' → logprob: -14.625038146972656
    7. '   ' → logprob: -14.875038146972656
    8. ' or' → logprob: -15.000038146972656
    9. '```' → logprob: -15.125038146972656
    10. '[i' → logprob: -15.500038146972656

Token 901: 'ti' (ID: 2832)
  Prédit: 'ti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.014591929502785206
    2. '[' → logprob: -4.264591693878174
    3. '   ' → logprob: -9.264592170715332
    4. '0' → logprob: -9.264592170715332
    5. ' ti' → logprob: -9.514592170715332
    6. 't' → logprob: -9.764592170715332
    7. '
' → logprob: -10.014592170715332
    8. '
' → logprob: -12.014592170715332
    9. '-' → logprob: -12.139592170715332
    10. ']' → logprob: -12.264592170715332

Token 902: '-' (ID: 12)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5583410263061523
    2. '][' → logprob: -1.0583410263061523
    3. '0' → logprob: -2.5583410263061523
    4. '-' → logprob: -6.433341026306152
    5. '
' → logprob: -7.683341026306152
    6. ':' → logprob: -8.995841026306152
    7. ' ][' → logprob: -8.995841026306152
    8. ']' → logprob: -9.183341026306152
    9. '#' → logprob: -9.308341026306152
    10. ')[' → logprob: -9.370841026306152

Token 903: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.580929347255733e-05
    2. ' ' → logprob: -12.000016212463379
    3. '0' → logprob: -12.375016212463379
    4. ']' → logprob: -13.812516212463379
    5. '```' → logprob: -14.125016212463379
    6. '][' → logprob: -14.312516212463379
    7. '   ' → logprob: -14.500016212463379
    8. '-' → logprob: -15.125016212463379
    9. '...' → logprob: -15.125016212463379
    10. '[' → logprob: -15.562516212463379

Token 904: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.023546632379293442
    2. '[' → logprob: -4.0235466957092285
    3. ')[' → logprob: -5.3985466957092285
    4. ' ][' → logprob: -7.5235466957092285
    5. ']' → logprob: -8.39854621887207
    6. '>[' → logprob: -10.64854621887207
    7. ' )[' → logprob: -10.89854621887207
    8. '   ' → logprob: -11.14854621887207
    9. ')' → logprob: -11.14854621887207
    10. '
' → logprob: -12.52354621887207

Token 905: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.652451464906335e-05
    2. '0' → logprob: -11.125016212463379
    3. ' ' → logprob: -14.000016212463379
    4. '[' → logprob: -14.375016212463379
    5. '-' → logprob: -16.000017166137695
    6. '
' → logprob: -16.875017166137695
    7. '   ' → logprob: -16.875017166137695
    8. '][' → logprob: -18.062517166137695
    9. ''s' → logprob: -18.375017166137695
    10. '۱' → logprob: -18.437517166137695

Token 906: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.011193300597369671
    2. ' <' → logprob: -4.51119327545166
    3. '<=' → logprob: -9.38619327545166
    4. '<
' → logprob: -11.01119327545166
    5. '>' → logprob: -11.26119327545166
    6. ')' → logprob: -11.51119327545166
    7. ' <=' → logprob: -12.76119327545166
    8. '>=' → logprob: -13.01119327545166
    9. ')<' → logprob: -13.01119327545166
    10. '<t' → logprob: -13.26119327545166

Token 907: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.00013369438238441944
    2. ' <' → logprob: -9.250133514404297
    3. '<=' → logprob: -10.500133514404297
    4. '!=' → logprob: -12.750133514404297
    5. '<t' → logprob: -12.750133514404297
    6. '>=' → logprob: -13.125133514404297
    7. '<
' → logprob: -14.625133514404297
    8. '<n' → logprob: -15.250133514404297
    9. '<R' → logprob: -15.625133514404297
    10. '>' → logprob: -16.000133514404297

Token 908: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.018252959474921227
    2. 't' → logprob: -4.018252849578857
    3. '=r' → logprob: -9.768253326416016
    4. '=' → logprob: -10.643253326416016
    5. ' r' → logprob: -11.768253326416016
    6. '=t' → logprob: -12.018253326416016
    7. 'q' → logprob: -12.143253326416016
    8. ' t' → logprob: -14.393253326416016
    9. '	r' → logprob: -14.643253326416016
    10. '_r' → logprob: -15.018253326416016

Token 909: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 910: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 911: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.6065765619277954
    2. 'def' → logprob: -1.1065765619277954
    3. 'q' → logprob: -2.106576442718506
    4. 'remove' → logprob: -6.856576442718506
    5. ' update' → logprob: -6.981576442718506
    6. ' def' → logprob: -8.731576919555664
    7. ' q' → logprob: -8.856576919555664
    8. 'Q' → logprob: -10.856576919555664
    9. '
' → logprob: -11.356576919555664
    10. 'if' → logprob: -11.356576919555664

Token 912: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -2.2200749754119897e-06
    2. 'q' → logprob: -13.875001907348633
    3. '_' → logprob: -14.625001907348633
    4. '_token' → logprob: -15.000001907348633
    5. '_tokens' → logprob: -15.625001907348633
    6. '_index' → logprob: -16.375001907348633
    7. '_i' → logprob: -16.750001907348633
    8. 'def' → logprob: -17.375001907348633
    9. '_qu' → logprob: -17.500001907348633
    10. '_t' → logprob: -18.000001907348633

Token 913: '_insert' (ID: 45075)
  Prédit: '_insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_insert' → logprob: -6.32523515378125e-05
    2. '(q' → logprob: -9.875062942504883
    3. '_' → logprob: -12.250062942504883
    4. '_append' → logprob: -12.875062942504883
    5. 'insert' → logprob: -13.375062942504883
    6. '_INSERT' → logprob: -14.375062942504883
    7. '_q' → logprob: -14.875062942504883
    8. '_Insert' → logprob: -15.000062942504883
    9. '```' → logprob: -15.375062942504883
    10. '(' → logprob: -15.625062942504883

Token 914: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -4.842555426876061e-06
    2. '(' → logprob: -13.125004768371582
    3. '[q' → logprob: -14.250004768371582
    4. '(query' → logprob: -14.250004768371582
    5. '(
' → logprob: -14.875004768371582
    6. ' =' → logprob: -15.125004768371582
    7. 'def' → logprob: -15.375004768371582
    8. '<|end|>' → logprob: -15.750004768371582
    9. '(Q' → logprob: -16.2500057220459
    10. ',' → logprob: -16.3750057220459

Token 915: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030507624614983797
    2. ',q' → logprob: -8.50030517578125
    3. '(q' → logprob: -9.25030517578125
    4. '   ' → logprob: -13.25030517578125
    5. '[q' → logprob: -13.25030517578125
    6. ' ,' → logprob: -13.50030517578125
    7. ',
' → logprob: -15.25030517578125
    8. 'q' → logprob: -15.62530517578125
    9. ':' → logprob: -16.37530517578125
    10. ',(' → logprob: -17.12530517578125

Token 916: ' ti' (ID: 2919)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.0012370144249871373
    2. ' ti' → logprob: -6.751236915588379
    3. '	ti' → logprob: -9.626236915588379
    4. 'tii' → logprob: -14.376236915588379
    5. 'qi' → logprob: -16.001237869262695
    6. '-ti' → logprob: -16.126237869262695
    7. 'til' → logprob: -17.876237869262695
    8. 'TI' → logprob: -18.251237869262695
    9. 't' → logprob: -18.251237869262695
    10. 'ти' → logprob: -18.501237869262695

Token 917: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3822154111694545e-05
    2. ',q' → logprob: -10.750043869018555
    3. ' ,' → logprob: -11.875043869018555
    4. ',t' → logprob: -12.000043869018555
    5. '   ' → logprob: -12.125043869018555
    6. '(q' → logprob: -13.750043869018555
    7. ',
' → logprob: -14.125043869018555
    8. '=' → logprob: -14.625043869018555
    9. ')' → logprob: -14.625043869018555
    10. 'q' → logprob: -15.375043869018555

Token 918: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0015130772953853011
    2. ' t' → logprob: -6.5015130043029785
    3. 'q' → logprob: -12.001513481140137
    4. ')' → logprob: -13.376513481140137
    5. '(t' → logprob: -14.001513481140137
    6. ')t' → logprob: -14.001513481140137
    7. '(' → logprob: -14.626513481140137
    8. 'update' → logprob: -14.876513481140137
    9. '`t' → logprob: -15.751513481140137
    10. '(q' → logprob: -15.876513481140137

Token 919: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012598758330568671
    2. ')' → logprob: -6.876259803771973
    3. ',t' → logprob: -9.001259803771973
    4. ',q' → logprob: -10.376259803771973
    5. '=' → logprob: -10.751259803771973
    6. ',
' → logprob: -10.876259803771973
    7. '),' → logprob: -12.126259803771973
    8. ' ,' → logprob: -12.251259803771973
    9. ',(' → logprob: -12.251259803771973
    10. '   ' → logprob: -12.751259803771973

Token 920: ' r' (ID: 428)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0003418991982471198
    2. ' t' → logprob: -8.62534236907959
    3. 'q' → logprob: -9.50034236907959
    4. 'ti' → logprob: -10.25034236907959
    5. ')' → logprob: -10.62534236907959
    6. '(t' → logprob: -11.12534236907959
    7. ')t' → logprob: -11.87534236907959
    8. 'None' → logprob: -13.12534236907959
    9. '(' → logprob: -14.00034236907959
    10. '[' → logprob: -14.37534236907959

Token 921: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3222126066684723
    2. ':' → logprob: -2.0722126960754395
    3. '):' → logprob: -2.6972126960754395
    4. ':
' → logprob: -2.6972126960754395
    5. '[q' → logprob: -5.0722126960754395
    6. '   ' → logprob: -5.8222126960754395
    7. ')' → logprob: -5.8222126960754395
    8. ')
' → logprob: -7.4472126960754395
    9. ',' → logprob: -7.8222126960754395
    10. '(q' → logprob: -7.9472126960754395

Token 922: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1319168508052826
    2. 'q' → logprob: -2.6319167613983154
    3. ' q' → logprob: -3.8819167613983154
    4. '	q' → logprob: -3.8819167613983154
    5. '```' → logprob: -5.1319169998168945
    6. '[q' → logprob: -5.8819169998168945
    7. '(q' → logprob: -7.1319169998168945
    8. ',q' → logprob: -7.6319169998168945
    9. '``' → logprob: -8.006916999816895
    10. '[' → logprob: -10.881916999816895

Token 923: ' if' (ID: 538)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.015104012563824654
    2. ' q' → logprob: -4.390103816986084
    3. '   ' → logprob: -6.140103816986084
    4. 'return' → logprob: -8.265104293823242
    5. 'new' → logprob: -10.265104293823242
    6. ' return' → logprob: -10.515104293823242
    7. 'ti' → logprob: -10.640104293823242
    8. '	q' → logprob: -10.640104293823242
    9. 'qi' → logprob: -10.890104293823242
    10. 'if' (adapté à ' if') → logprob: -11.640104293823242

Token 924: ' q' (ID: 2335)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.00724785728380084
    2. 'q' → logprob: -5.3822479248046875
    3. ' ti' → logprob: -6.6322479248046875
    4. 't' → logprob: -6.7572479248046875
    5. ' q' → logprob: -10.132247924804688
    6. 'len' → logprob: -10.632247924804688
    7. '	ti' → logprob: -10.632247924804688
    8. 'qi' → logprob: -10.882247924804688
    9. 'tii' → logprob: -11.007247924804688
    10. '   ' → logprob: -12.007247924804688

Token 925: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001649220648687333
    2. '_m' → logprob: -10.125164985656738
    3. ' and' → logprob: -11.125164985656738
    4. '   ' → logprob: -11.125164985656738
    5. '.insert' → logprob: -11.125164985656738
    6. '_insert' → logprob: -11.125164985656738
    7. ':' → logprob: -11.375164985656738
    8. ' [' → logprob: -11.750164985656738
    9. 'and' → logprob: -11.875164985656738
    10. 'insert' → logprob: -12.000164985656738

Token 926: 'ti' (ID: 2832)
  Prédit: 'ti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.0010330495424568653
    2. ' ti' → logprob: -8.001032829284668
    3. 'i' → logprob: -8.751032829284668
    4. '   ' → logprob: -8.876032829284668
    5. '0' → logprob: -9.876032829284668
    6. '[' → logprob: -10.001032829284668
    7. ']' → logprob: -10.251032829284668
    8. 't' → logprob: -10.251032829284668
    9. '  ' → logprob: -10.376032829284668
    10. ' ' → logprob: -10.751032829284668

Token 927: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0030572116374969482
    2. '[' → logprob: -6.00305700302124
    3. ']' → logprob: -8.503057479858398
    4. '>' → logprob: -9.503057479858398
    5. '>[' → logprob: -9.503057479858398
    6. ']>' → logprob: -9.628057479858398
    7. '-' → logprob: -9.628057479858398
    8. ']==' → logprob: -10.378057479858398
    9. ' ][' → logprob: -11.003057479858398
    10. ':' → logprob: -11.128057479858398

Token 928: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02631794847548008
    2. '1' → logprob: -3.651317834854126
    3. ' ' → logprob: -11.901317596435547
    4. '   ' → logprob: -13.338817596435547
    5. ':' → logprob: -13.776317596435547
    6. '[' → logprob: -14.026317596435547
    7. '```' → logprob: -14.151317596435547
    8. '...' → logprob: -14.401317596435547
    9. ']' → logprob: -14.526317596435547
    10. '
' → logprob: -14.526317596435547

Token 929: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4496070146560669
    2. '==' → logprob: -1.074607014656067
    3. '!=' → logprob: -4.074606895446777
    4. '>=' → logprob: -6.449606895446777
    5. ' ==' → logprob: -6.949606895446777
    6. ' >' → logprob: -7.074606895446777
    7. '[' → logprob: -9.699606895446777
    8. ']' → logprob: -9.824606895446777
    9. '<=' → logprob: -10.074606895446777
    10. ')' → logprob: -10.199606895446777

Token 930: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.17191074788570404
    2. '>' → logprob: -2.5469107627868652
    3. '!=' → logprob: -2.5469107627868652
    4. '>=' → logprob: -6.921910762786865
    5. '<=' → logprob: -8.671910285949707
    6. ' ==' → logprob: -9.171910285949707
    7. '=' → logprob: -11.796910285949707
    8. ' !=' → logprob: -12.046910285949707
    9. ' >' → logprob: -12.171910285949707
    10. '<' → logprob: -13.046910285949707

Token 931: ' r' (ID: 428)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.006028096191585064
    2. 'r' → logprob: -5.131028175354004
    3. ' t' → logprob: -9.256028175354004
    4. 'q' → logprob: -13.631028175354004
    5. ' r' → logprob: -14.006028175354004
    6. '   ' → logprob: -14.256028175354004
    7. 'ti' → logprob: -14.381028175354004
    8. '	t' → logprob: -14.506028175354004
    9. '_t' → logprob: -16.256027221679688
    10. ' ' → logprob: -17.006027221679688

Token 932: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6593317985534668
    2. ':' → logprob: -0.9093317985534668
    3. ' and' → logprob: -2.784331798553467
    4. ':
' → logprob: -4.034331798553467
    5. '   ' → logprob: -8.909332275390625
    6. ':return' → logprob: -9.284332275390625
    7. ' or' → logprob: -9.409332275390625
    8. 'or' → logprob: -9.534332275390625
    9. ':#' → logprob: -10.159332275390625
    10. ':q' → logprob: -10.159332275390625

Token 933: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.33686190843582153
    2. '       ' → logprob: -1.7118618488311768
    3. 'and' → logprob: -2.3368618488311768
    4. ':' → logprob: -5.586862087249756
    5. ' =' → logprob: -6.586862087249756
    6. '=' → logprob: -6.836862087249756
    7. ':
' → logprob: -6.836862087249756
    8. '   ' → logprob: -7.461862087249756
    9. ',' → logprob: -8.336861610412598
    10. ' q' → logprob: -8.336861610412598

Token 934: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.10343974828720093
    2. 'if' → logprob: -2.4784398078918457
    3. ' q' → logprob: -4.853439807891846
    4. ' if' → logprob: -5.228439807891846
    5. '       ' → logprob: -6.853439807891846
    6. '           ' → logprob: -9.353439331054688
    7. '	q' → logprob: -10.228439331054688
    8. '   ' → logprob: -11.353439331054688
    9. '=q' → logprob: -11.603439331054688
    10. ' =' → logprob: -11.728439331054688

Token 935: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6587602496147156
    2. '=' → logprob: -0.7837602496147156
    3. ' =' → logprob: -3.6587603092193604
    4. '   ' → logprob: -10.408760070800781
    5. '=[' → logprob: -11.408760070800781
    6. '.pop' → logprob: -12.033760070800781
    7. ' ' → logprob: -12.783760070800781
    8. '=min' → logprob: -13.783760070800781
    9. '  ' → logprob: -14.283760070800781
    10. 'pop' → logprob: -14.408760070800781

Token 936: 'ti' (ID: 2832)
  Prédit: 'ti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.0089031420648098
    2. 'i' → logprob: -4.7589030265808105
    3. 't' → logprob: -9.008903503417969
    4. ' ti' → logprob: -9.758903503417969
    5. ']' → logprob: -10.758903503417969
    6. '[' → logprob: -11.008903503417969
    7. '	ti' → logprob: -11.758903503417969
    8. 'it' → logprob: -11.883903503417969
    9. 'ii' → logprob: -12.008903503417969
    10. '
' → logprob: -12.383903503417969

Token 937: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03653951734304428
    2. ']=' → logprob: -3.9115395545959473
    3. ']' → logprob: -4.411539554595947
    4. ' =' → logprob: -5.911539554595947
    5. ']=(' → logprob: -7.286539554595947
    6. '=(' → logprob: -8.536539077758789
    7. '=q' → logprob: -9.286539077758789
    8. ')' → logprob: -11.286539077758789
    9. ')=' → logprob: -11.536539077758789
    10. '=min' → logprob: -11.911539077758789

Token 938: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01252778060734272
    2. ' =' → logprob: -4.387527942657471
    3. '=q' → logprob: -11.012527465820312
    4. '=(' → logprob: -14.137527465820312
    5. '=min' → logprob: -15.012527465820312
    6. ')=' → logprob: -16.262527465820312
    7. '=t' → logprob: -16.387527465820312
    8. '＝' → logprob: -16.637527465820312
    9. ']=' → logprob: -16.762527465820312
    10. '=re' → logprob: -17.262527465820312

Token 939: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.002244342816993594
    2. ' t' → logprob: -6.377244472503662
    3. '(' → logprob: -8.752243995666504
    4. 'min' → logprob: -8.752243995666504
    5. '(t' → logprob: -9.377243995666504
    6. ' (' → logprob: -9.877243995666504
    7. ' min' → logprob: -10.002243995666504
    8. '(min' → logprob: -10.252243995666504
    9. '(q' → logprob: -13.002243995666504
    10. '(r' → logprob: -13.252243995666504

Token 940: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010829565115272999
    2. 'else' → logprob: -4.760829448699951
    3. ' else' → logprob: -6.135829448699951
    4. '	else' → logprob: -10.01082992553711
    5. ',' → logprob: -13.51082992553711
    6. '
' → logprob: -14.26082992553711
    7. '       ' → logprob: -15.01082992553711
    8. '<|end|>' → logprob: -15.01082992553711
    9. 'elif' → logprob: -15.63582992553711
    10. ' ' → logprob: -16.26082992553711

Token 941: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008513865992426872
    2. 'else' → logprob: -4.883513927459717
    3. ' else' → logprob: -7.133513927459717
    4. '	else' → logprob: -9.258513450622559
    5. '```' → logprob: -12.633513450622559
    6. '       ' → logprob: -12.758513450622559
    7. ',' → logprob: -13.133513450622559
    8. ' ' → logprob: -13.633513450622559
    9. '<|end|>' → logprob: -14.008513450622559
    10. '	' → logprob: -14.258513450622559

Token 942: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3176182508468628
    2. '   ' → logprob: -1.3176182508468628
    3. ' else' → logprob: -5.442618370056152
    4. '	else' → logprob: -10.942618370056152
    5. 'elif' → logprob: -14.692618370056152
    6. '       ' → logprob: -15.692618370056152
    7. ':
' → logprob: -15.942618370056152
    8. ':' → logprob: -16.192617416381836
    9. ' ' → logprob: -16.442617416381836
    10. ',' → logprob: -16.567617416381836

Token 943: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0667806938290596
    2. ':' → logprob: -2.8167808055877686
    3. '   ' → logprob: -6.1917805671691895
    4. '       ' → logprob: -6.8167805671691895
    5. 'q' → logprob: -7.0667805671691895
    6. ' :
' → logprob: -8.691781044006348
    7. ':q' → logprob: -8.691781044006348
    8. ' q' → logprob: -9.316781044006348
    9. ',' → logprob: -9.691781044006348
    10. '[q' → logprob: -9.941781044006348

Token 944: '       ' (ID: 309)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.6108534336090088
    2. 'q' → logprob: -1.4858534336090088
    3. '   ' → logprob: -1.4858534336090088
    4. '	q' → logprob: -5.61085319519043
    5. '       ' → logprob: -7.48585319519043
    6. '(q' → logprob: -9.36085319519043
    7. '```' → logprob: -9.73585319519043
    8. ':q' → logprob: -10.11085319519043
    9. ',q' → logprob: -10.48585319519043
    10. '[q' → logprob: -10.98585319519043

Token 945: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -4.978233846486546e-05
    2. ' q' → logprob: -10.000049591064453
    3. '   ' → logprob: -12.375049591064453
    4. '	q' → logprob: -16.500049591064453
    5. 'bis' → logprob: -17.750049591064453
    6. 'qt' → logprob: -18.000049591064453
    7. '       ' → logprob: -18.000049591064453
    8. 'ql' → logprob: -19.125049591064453
    9. 'insert' → logprob: -19.250049591064453
    10. 'heap' → logprob: -19.375049591064453

Token 946: '.insert' (ID: 13222)
  Prédit: '.insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.insert' → logprob: -0.06198359653353691
    2. '.' → logprob: -2.811983585357666
    3. 'insert' → logprob: -11.811984062194824
    4. '_insert' → logprob: -12.436984062194824
    5. '.Insert' → logprob: -13.186984062194824
    6. ' .' → logprob: -13.436984062194824
    7. '=' → logprob: -14.436984062194824
    8. '__.' → logprob: -16.186983108520508
    9. 's' → logprob: -16.436983108520508
    10. '.ins' → logprob: -16.436983108520508

Token 947: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -5.9795445849886164e-05
    2. '(' → logprob: -9.875060081481934
    3. '	ti' → logprob: -11.875060081481934
    4. '(q' → logprob: -14.000060081481934
    5. 'ti' → logprob: -14.750060081481934
    6. ' ti' → logprob: -15.875060081481934
    7. '(
' → logprob: -17.500059127807617
    8. ' (' → logprob: -18.125059127807617
    9. '(ts' → logprob: -18.375059127807617
    10. 'q' → logprob: -19.000059127807617

Token 948: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.523948907968588e-05
    2. ' i' → logprob: -10.750035285949707
    3. ',' → logprob: -12.000035285949707
    4. '[' → logprob: -13.000035285949707
    5. 'I' → logprob: -14.500035285949707
    6. ')' → logprob: -14.500035285949707
    7. '```' → logprob: -14.625035285949707
    8. '[i' → logprob: -14.750035285949707
    9. 'и' → logprob: -14.875035285949707
    10. 'ti' → logprob: -15.000035285949707

Token 949: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008622728288173676
    2. ',t' → logprob: -4.758622646331787
    3. ' ,' → logprob: -11.883623123168945
    4. 't' → logprob: -14.008623123168945
    5. ',q' → logprob: -15.008623123168945
    6. ' t' → logprob: -16.883623123168945
    7. ',
' → logprob: -17.133623123168945
    8. '	t' → logprob: -18.133623123168945
    9. '(t' → logprob: -18.258623123168945
    10. ',s' → logprob: -18.383623123168945

Token 950: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0031777136027812958
    2. ' t' → logprob: -5.753177642822266
    3. '	t' → logprob: -17.628177642822266
    4. '`t' → logprob: -18.128177642822266
    5. '   ' → logprob: -18.253177642822266
    6. ')t' → logprob: -18.878177642822266
    7. '(t' → logprob: -19.503177642822266
    8. ')' → logprob: -20.003177642822266
    9. '_t' → logprob: -20.503177642822266
    10. ' ' → logprob: -20.503177642822266

Token 951: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5759583115577698
    2. ')' → logprob: -0.8259583115577698
    3. ')
' → logprob: -11.450958251953125
    4. '   ' → logprob: -12.200958251953125
    5. ')

' → logprob: -13.450958251953125
    6. ')return' → logprob: -14.200958251953125
    7. ');' → logprob: -14.825958251953125
    8. ' )
' → logprob: -15.075958251953125
    9. ' )' → logprob: -15.575958251953125
    10. ')`
' → logprob: -16.325958251953125

Token 952: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014171624556183815
    2. '       ' → logprob: -4.264171600341797
    3. 'ti' → logprob: -12.639171600341797
    4. ',' → logprob: -12.764171600341797
    5. '           ' → logprob: -14.139171600341797
    6. '	ti' → logprob: -14.139171600341797
    7. 'return' → logprob: -15.389171600341797
    8. '  ' → logprob: -16.389171600341797
    9. ' ti' → logprob: -16.639171600341797
    10. '     ' → logprob: -16.889171600341797

Token 953: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23338599503040314
    2. 'return' (adapté à ' return') → logprob: -1.7333860397338867
    3. 'ti' → logprob: -3.4833860397338867
    4. ' return' → logprob: -7.608386039733887
    5. ' ti' → logprob: -8.608386039733887
    6. '	ti' → logprob: -9.483386039733887
    7. ' ' → logprob: -12.858386039733887
    8. '  ' → logprob: -13.483386039733887
    9. '       ' → logprob: -13.608386039733887
    10. '	return' → logprob: -14.108386039733887

Token 954: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.2166411478538066e-05
    2. '(q' → logprob: -10.250052452087402
    3. ' q' → logprob: -11.000052452087402
    4. '	q' → logprob: -16.750051498413086
    5. '   ' → logprob: -18.750051498413086
    6. ' (' → logprob: -19.875051498413086
    7. ',q' → logprob: -20.625051498413086
    8. '[q' → logprob: -20.875051498413086
    9. ''q' → logprob: -21.125051498413086
    10. '(' → logprob: -21.125051498413086

Token 955: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6240566083070007e-06
    2. ' ,' → logprob: -13.875001907348633
    3. ',
' → logprob: -14.875001907348633
    4. ',t' → logprob: -15.500001907348633
    5. '‌,' → logprob: -16.875001907348633
    6. ',\
' → logprob: -17.625001907348633
    7. '<|end|>' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.500001907348633
    9. '	ti' → logprob: -18.875001907348633
    10. ',i' → logprob: -18.875001907348633

Token 956: ' ti' (ID: 2919)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -7.896309739408025e-07
    2. '	ti' → logprob: -14.500000953674316
    3. 'tii' → logprob: -15.500000953674316
    4. ' ti' → logprob: -16.75
    5. '   ' → logprob: -20.125
    6. 'TI' → logprob: -21.625
    7. 'Ti' → logprob: -21.875
    8. 'til' → logprob: -21.875
    9. '-ti' → logprob: -22.0
    10. 'tti' → logprob: -22.25

Token 957: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009817834943532944
    2. '<|end|>' → logprob: -4.634817600250244
    3. ' def' → logprob: -10.134818077087402
    4. '<|end|>' → logprob: -11.134818077087402
    5. '```' → logprob: -13.009818077087402
    6. '  
' → logprob: -14.134818077087402
    7. 'Def' → logprob: -14.259818077087402
    8. '#' → logprob: -14.509818077087402
    9. '
' → logprob: -14.634818077087402
    10. '-def' → logprob: -14.884818077087402

Token 958: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -18.375
    3. 'q' → logprob: -20.5
    4. '```' → logprob: -20.875
    5. 'while' → logprob: -21.125
    6. '	def' → logprob: -21.75
    7. 'ndef' → logprob: -21.875
    8. 'Def' → logprob: -22.0
    9. '
' → logprob: -22.125
    10. 'from' → logprob: -22.375

Token 959: ' remove' (ID: 6234)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.0005856798379682004
    2. 'q' → logprob: -8.250585556030273
    3. ' remove' → logprob: -8.250585556030273
    4. 'def' → logprob: -10.750585556030273
    5. '_remove' → logprob: -12.000585556030273
    6. 'main' → logprob: -12.125585556030273
    7. 'get' → logprob: -12.500585556030273
    8. '	remove' → logprob: -12.750585556030273
    9. 'process' → logprob: -13.250585556030273
    10. 'l' → logprob: -13.500585556030273

Token 960: '_less' (ID: 154196)
  Prédit: '_less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_less' → logprob: -0.04367793723940849
    2. '_q' → logprob: -3.168678045272827
    3. 'less' → logprob: -8.168678283691406
    4. '_' → logprob: -8.918678283691406
    5. '_l' → logprob: -9.418678283691406
    6. '_more' → logprob: -9.918678283691406
    7. '(q' → logprob: -10.168678283691406
    8. 'q' → logprob: -10.543678283691406
    9. '_le' → logprob: -10.668678283691406
    10. '```' → logprob: -11.793678283691406

Token 961: '_opt' (ID: 41733)
  Prédit: '_opt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_opt' → logprob: -0.0087986895814538
    2. 'optimal' → logprob: -4.758798599243164
    3. ' optimal' → logprob: -9.633798599243164
    4. 'opt' → logprob: -10.383798599243164
    5. '```' → logprob: -10.383798599243164
    6. 'Optimal' → logprob: -10.758798599243164
    7. '-opt' → logprob: -11.758798599243164
    8. '   ' → logprob: -13.008798599243164
    9. '_op' → logprob: -13.008798599243164
    10. '_than' → logprob: -13.008798599243164

Token 962: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -5.512236498361744e-07
    2. 'IMAL' → logprob: -15.625000953674316
    3. 't' → logprob: -16.25
    4. 'mal' → logprob: -17.5
    5. 'ional' → logprob: -17.625
    6. 'ial' → logprob: -17.625
    7. 'inal' → logprob: -17.75
    8. 'ima' → logprob: -18.0
    9. '(' → logprob: -18.125
    10. '```' → logprob: -18.25

Token 963: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.500001907348633
    3. '(
' → logprob: -17.125001907348633
    4. '```' → logprob: -17.500001907348633
    5. ' (' → logprob: -18.000001907348633
    6. '(query' → logprob: -18.125001907348633
    7. 's' → logprob: -18.250001907348633
    8. '[q' → logprob: -18.625001907348633
    9. '(s' → logprob: -19.000001907348633
    10. '(j' → logprob: -19.375001907348633

Token 964: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020103710994590074
    2. '(q' → logprob: -8.750201225280762
    3. ',q' → logprob: -10.125201225280762
    4. ' ,' → logprob: -13.000201225280762
    5. '   ' → logprob: -16.250200271606445
    6. '[q' → logprob: -16.875200271606445
    7. ',
' → logprob: -17.125200271606445
    8. 'def' → logprob: -18.375200271606445
    9. 'q' → logprob: -18.375200271606445
    10. '(' → logprob: -18.750200271606445

Token 965: ' ti' (ID: 2919)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.00015502817404922098
    2. ' ti' → logprob: -9.000155448913574
    3. 'i' → logprob: -10.500155448913574
    4. 'idx' → logprob: -13.000155448913574
    5. '	ti' → logprob: -14.625155448913574
    6. 'tii' → logprob: -15.125155448913574
    7. 'start' → logprob: -15.500155448913574
    8. '   ' → logprob: -15.500155448913574
    9. 't' → logprob: -15.875155448913574
    10. 'qi' → logprob: -16.250154495239258

Token 966: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013798571308143437
    2. '-' → logprob: -10.375138282775879
    3. ',q' → logprob: -10.375138282775879
    4. '   ' → logprob: -10.750138282775879
    5. ' ,' → logprob: -10.875138282775879
    6. ',t' → logprob: -11.375138282775879
    7. '):
' → logprob: -11.750138282775879
    8. ',
' → logprob: -12.250138282775879
    9. ' -' → logprob: -12.375138282775879
    10. '+' → logprob: -12.500138282775879

Token 967: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07103395462036133
    2. 'ti' → logprob: -2.6960339546203613
    3. ' t' → logprob: -6.946033954620361
    4. ' ti' → logprob: -9.446033477783203
    5. 'q' → logprob: -10.321033477783203
    6. '   ' → logprob: -12.321033477783203
    7. '  ' → logprob: -12.821033477783203
    8. '	ti' → logprob: -12.821033477783203
    9. ')' → logprob: -12.946033477783203
    10. ' ' → logprob: -13.071033477783203

Token 968: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.020581362769007683
    2. '):' → logprob: -3.8955812454223633
    3. '):
' → logprob: -10.395581245422363
    4. '   ' → logprob: -12.520581245422363
    5. ':' → logprob: -13.145581245422363
    6. ',' → logprob: -13.395581245422363
    7. ')' → logprob: -14.270581245422363
    8. '):

' → logprob: -14.395581245422363
    9. ' ):
' → logprob: -15.270581245422363
    10. 'def' → logprob: -16.39558219909668

Token 969: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008171739056706429
    2. 'while' → logprob: -5.258171558380127
    3. ' while' → logprob: -5.883171558380127
    4. 'ti' → logprob: -9.008172035217285
    5. '	while' → logprob: -11.383172035217285
    6. '   ' → logprob: -12.008172035217285
    7. '	ti' → logprob: -12.758172035217285
    8. '```' → logprob: -13.258172035217285
    9. ' ti' → logprob: -13.383172035217285
    10. 'i' → logprob: -14.133172035217285

Token 970: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0047112456522881985
    2. '   ' → logprob: -5.754711151123047
    3. 'ti' → logprob: -6.879711151123047
    4. ' while' → logprob: -7.629711151123047
    5. 'i' → logprob: -11.379711151123047
    6. '	while' → logprob: -13.004711151123047
    7. 'j' → logprob: -13.254711151123047
    8. '```' → logprob: -14.129711151123047
    9. 'wh' → logprob: -14.504711151123047
    10. '
' → logprob: -15.004711151123047

Token 971: ' q' (ID: 2335)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.01828877441585064
    2. ' ti' → logprob: -4.018288612365723
    3. 'len' → logprob: -9.518288612365723
    4. 'q' → logprob: -10.893288612365723
    5. '	ti' → logprob: -11.518288612365723
    6. 'True' → logprob: -11.893288612365723
    7. ' q' → logprob: -12.018288612365723
    8. ' (' → logprob: -12.268288612365723
    9. '(' → logprob: -12.268288612365723
    10. ' len' → logprob: -12.518288612365723

Token 972: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07581432908773422
    2. 'and' → logprob: -2.8258142471313477
    3. ' and' → logprob: -4.450814247131348
    4. '1' → logprob: -6.825814247131348
    5. 'ti' → logprob: -7.950814247131348
    6. ',' → logprob: -8.575814247131348
    7. '[
' → logprob: -8.950814247131348
    8. '   ' → logprob: -9.325814247131348
    9. '>' → logprob: -9.450814247131348
    10. 'len' → logprob: -10.200814247131348

Token 973: 'ti' (ID: 2832)
  Prédit: 'ti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.3195604383945465
    2. 'i' → logprob: -1.3195604085922241
    3. '[' → logprob: -5.569560527801514
    4. '-' → logprob: -6.944560527801514
    5. '   ' → logprob: -7.319560527801514
    6. '1' → logprob: -8.319560050964355
    7. '
' → logprob: -9.444560050964355
    8. '>' → logprob: -9.569560050964355
    9. '  ' → logprob: -9.694560050964355
    10. ' ti' → logprob: -10.069560050964355

Token 974: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2488417774438858
    2. '][' → logprob: -1.8738417625427246
    3. '[' → logprob: -2.8738417625427246
    4. '+' → logprob: -4.998841762542725
    5. ' -' → logprob: -5.873841762542725
    6. '   ' → logprob: -8.748842239379883
    7. ')[' → logprob: -8.998842239379883
    8. ' ' → logprob: -9.373842239379883
    9. '1' → logprob: -9.748842239379883
    10. ' ][' → logprob: -9.873842239379883

Token 975: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8206473871250637e-05
    2. ' ' → logprob: -11.125028610229492
    3. '-' → logprob: -12.375028610229492
    4. '0' → logprob: -12.500028610229492
    5. '   ' → logprob: -13.812528610229492
    6. ')' → logprob: -14.250028610229492
    7. ']' → logprob: -14.625028610229492
    8. '2' → logprob: -14.937528610229492
    9. 'i' → logprob: -15.062528610229492
    10. '```' → logprob: -15.187528610229492

Token 976: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004754751571454108
    2. '[' → logprob: -8.125475883483887
    3. ' ][' → logprob: -9.250475883483887
    4. ']' → logprob: -10.500475883483887
    5. ')[' → logprob: -10.625475883483887
    6. ')][' → logprob: -11.500475883483887
    7. '   ' → logprob: -11.750475883483887
    8. ':' → logprob: -13.375475883483887
    9. '>' → logprob: -13.500475883483887
    10. '1' → logprob: -13.750475883483887

Token 977: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -13.000003814697266
    3. '
' → logprob: -13.750003814697266
    4. '0' → logprob: -15.500003814697266
    5. '   ' → logprob: -17.250003814697266
    6. '' → logprob: -18.000003814697266
    7. '
' → logprob: -18.437503814697266
    8. '```' → logprob: -18.437503814697266
    9. ']' → logprob: -18.875003814697266
    10. '[' → logprob: -18.875003814697266

Token 978: ']' (ID: 60)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.000541592831723392
    2. '>' → logprob: -8.125541687011719
    3. ']>=' → logprob: -8.500541687011719
    4. ' >=' → logprob: -10.250541687011719
    5. ']' → logprob: -12.750541687011719
    6. ')>=' → logprob: -13.375541687011719
    7. '```' → logprob: -14.125541687011719
    8. '≥' → logprob: -14.250541687011719
    9. '   ' → logprob: -15.125541687011719
    10. '=>' → logprob: -15.125541687011719

Token 979: ' >' (ID: 1424)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.00010068230039905757
    2. ' >=' → logprob: -9.875101089477539
    3. '>' → logprob: -10.000101089477539
    4. ']>=' → logprob: -13.000101089477539
    5. '<=' → logprob: -14.875101089477539
    6. ')>=' → logprob: -15.000101089477539
    7. '≥' → logprob: -15.250101089477539
    8. '```' → logprob: -15.625101089477539
    9. '=>' → logprob: -15.750101089477539
    10. '   ' → logprob: -15.875101089477539

Token 980: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00016504127415828407
    2. ' t' → logprob: -8.750164985656738
    3. 'q' → logprob: -12.000164985656738
    4. '	t' → logprob: -15.500164985656738
    5. '`t' → logprob: -16.750165939331055
    6. '_t' → logprob: -18.125165939331055
    7. '   ' → logprob: -18.500165939331055
    8. ')t' → logprob: -18.750165939331055
    9. '
' → logprob: -19.000165939331055
    10. '=t' → logprob: -19.250165939331055

Token 981: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.048599522560834885
    2. '1' → logprob: -3.0485994815826416
    3. ' ' → logprob: -12.548599243164062
    4. ' [' → logprob: -12.673599243164062
    5. '```' → logprob: -12.673599243164062
    6. '   ' → logprob: -13.673599243164062
    7. '(' → logprob: -14.923599243164062
    8. '[
' → logprob: -15.798599243164062
    9. '`' → logprob: -16.423599243164062
    10. '-' → logprob: -16.423599243164062

Token 982: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. '[' → logprob: -12.250004768371582
    3. '```' → logprob: -16.8750057220459
    4. ' ' → logprob: -18.1250057220459
    5. '-' → logprob: -18.6250057220459
    6. '
' → logprob: -18.8750057220459
    7. ']' → logprob: -20.0000057220459
    8. '' → logprob: -20.0000057220459
    9. '   ' → logprob: -20.1250057220459
    10. '{' → logprob: -20.2500057220459

Token 983: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1488635092973709
    2. ':
' → logprob: -2.3988635540008545
    3. 'and' → logprob: -3.6488635540008545
    4. ':' → logprob: -4.398863315582275
    5. '):
' → logprob: -5.148863315582275
    6. '   ' → logprob: -6.273863315582275
    7. '       ' → logprob: -7.398863315582275
    8. 'ti' → logprob: -8.898863792419434
    9. ' :
' → logprob: -8.898863792419434
    10. ')' → logprob: -9.023863792419434

Token 984: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014641272835433483
    2. ' and' → logprob: -4.639641284942627
    3. ' q' → logprob: -6.389641284942627
    4. ':' → logprob: -7.139641284942627
    5. '   ' → logprob: -7.264641284942627
    6. '```' → logprob: -7.889641284942627
    7. ':
' → logprob: -8.014640808105469
    8. ',' → logprob: -8.139640808105469
    9. '    ' → logprob: -8.764640808105469
    10. '):
' → logprob: -8.889640808105469

Token 985: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' (adapté à ' del') → logprob: -0.4818994104862213
    2. '   ' → logprob: -1.231899380683899
    3. 'q' → logprob: -2.7318994998931885
    4. ' del' → logprob: -3.9818994998931885
    5. 'ti' → logprob: -5.731899261474609
    6. ' q' → logprob: -5.856899261474609
    7. '       ' → logprob: -7.981899261474609
    8. '	del' → logprob: -8.23189926147461
    9. '	q' → logprob: -8.98189926147461
    10. '   ' → logprob: -11.10689926147461

Token 986: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.008629591204226017
    2. 'q' → logprob: -4.75862979888916
    3. '(q' → logprob: -11.50862979888916
    4. '[q' → logprob: -12.88362979888916
    5. '	q' → logprob: -13.00862979888916
    6. ',q' → logprob: -16.383628845214844
    7. '?q' → logprob: -17.008628845214844
    8. '```' → logprob: -17.383628845214844
    9. '/q' → logprob: -17.633628845214844
    10. '[' → logprob: -17.633628845214844

Token 987: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.723973582556937e-05
    2. '[q' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.750017166137695
    4. ' [' → logprob: -15.875017166137695
    5. '[
' → logprob: -16.500017166137695
    6. 'q' → logprob: -17.500017166137695
    7. '__[' → logprob: -17.750017166137695
    8. '\[' → logprob: -18.500017166137695
    9. '[i' → logprob: -18.625017166137695
    10. '[-' → logprob: -18.625017166137695

Token 988: 'ti' (ID: 2832)
  Prédit: 'ti'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.00035798799945041537
    2. '[' → logprob: -8.125357627868652
    3. ' ti' → logprob: -9.750357627868652
    4. '(' → logprob: -12.875357627868652
    5. '-ti' → logprob: -14.500357627868652
    6. '	ti' → logprob: -15.125357627868652
    7. '   ' → logprob: -16.37535858154297
    8. '(t' → logprob: -16.50035858154297
    9. ' (' → logprob: -17.12535858154297
    10. 't' → logprob: -17.50035858154297

Token 989: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00010723850573413074
    2. ' -' → logprob: -9.375106811523438
    3. ']' → logprob: -10.750106811523438
    4. '   ' → logprob: -14.375106811523438
    5. '[' → logprob: -15.500106811523438
    6. ']
' → logprob: -16.375106811523438
    7. '-
' → logprob: -17.125106811523438
    8. '1' → logprob: -18.125106811523438
    9. '[-' → logprob: -18.500106811523438
    10. '<|end|>' → logprob: -18.625106811523438

Token 990: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -17.500001907348633
    4. '-' → logprob: -18.000001907348633
    5. '0' → logprob: -19.000001907348633
    6. '<|end|>' → logprob: -20.000001907348633
    7. '```' → logprob: -20.062501907348633
    8. '１' → logprob: -20.125001907348633
    9. '2' → logprob: -20.187501907348633
    10. '  ' → logprob: -20.312501907348633

Token 991: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03890766575932503
    2. ')' → logprob: -3.288907766342163
    3. ']
' → logprob: -7.163907527923584
    4. ')
' → logprob: -9.538908004760742
    5. '   ' → logprob: -12.288908004760742
    6. '])' → logprob: -12.913908004760742
    7. '}' → logprob: -13.038908004760742
    8. ' ]' → logprob: -13.288908004760742
    9. '<|end|>' → logprob: -13.288908004760742
    10. ']

' → logprob: -13.413908004760742

Token 992: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.452426608419046e-05
    2. '   ' → logprob: -11.25003433227539
    3. '	   ' → logprob: -12.50003433227539
    4. '<|end|>' → logprob: -12.50003433227539
    5. '	' → logprob: -12.62503433227539
    6. ',' → logprob: -12.62503433227539
    7. '           ' → logprob: -12.75003433227539
    8. '      ' → logprob: -13.50003433227539
    9. '	ti' → logprob: -13.50003433227539
    10. '<|end|>' → logprob: -14.75003433227539

Token 993: ' ti' (ID: 2919)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' (adapté à ' ti') → logprob: -0.0009420731803402305
    2. '       ' → logprob: -7.000942230224609
    3. '   ' → logprob: -10.87594223022461
    4. '	ti' → logprob: -12.12594223022461
    5. '           ' → logprob: -12.37594223022461
    6. ' ti' → logprob: -13.62594223022461
    7. 'tii' → logprob: -14.75094223022461
    8. '     ' → logprob: -15.50094223022461
    9. '      ' → logprob: -17.62594223022461
    10. 'qi' → logprob: -17.75094223022461

Token 994: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0011191420489922166
    2. ' -=' → logprob: -7.251119136810303
    3. '-' → logprob: -7.876119136810303
    4. '=' → logprob: -10.626119613647461
    5. '+=' → logprob: -12.251119613647461
    6. '```' → logprob: -15.376119613647461
    7. ',' → logprob: -17.62611961364746
    8. '−' → logprob: -18.37611961364746
    9. '<|end|>' → logprob: -18.50111961364746
    10. ')-' → logprob: -18.75111961364746

Token 995: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -18.125
    4. '```' → logprob: -19.125
    5. '１' → logprob: -21.25
    6. '۱' → logprob: -21.75
    7. '2' → logprob: -22.25
    8. '  ' → logprob: -22.5
    9. '১' → logprob: -22.875
    10. '१' → logprob: -22.875

Token 996: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -20.0
    4. '```' → logprob: -20.875
    5. '１' → logprob: -21.75
    6. '2' → logprob: -22.125
    7. '۱' → logprob: -22.375
    8. '  ' → logprob: -22.875
    9. '0' → logprob: -22.875
    10. '' → logprob: -23.625

Token 997: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004765461198985577
    2. ',' → logprob: -6.629765510559082
    3. '<|end|>' → logprob: -6.754765510559082
    4. '       ' → logprob: -6.879765510559082
    5. '
' → logprob: -6.879765510559082
    6. ' return' → logprob: -10.379765510559082
    7. '    
' → logprob: -10.379765510559082
    8. '<|end|>' → logprob: -10.754765510559082
    9. ',
' → logprob: -11.004765510559082
    10. 'return' → logprob: -11.129765510559082

Token 998: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013367896899580956
    2. ',' → logprob: -6.876336574554443
    3. '<|end|>' → logprob: -9.126337051391602
    4. 'return' → logprob: -9.626337051391602
    5. '       ' → logprob: -10.126337051391602
    6. ' return' → logprob: -10.876337051391602
    7. ';' → logprob: -11.501337051391602
    8. '.' → logprob: -12.001337051391602
    9. '  ' → logprob: -12.001337051391602
    10. ':' → logprob: -12.251337051391602

Token 999: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13101474940776825
    2. ' return' → logprob: -2.131014823913574
    3. 'return' (adapté à ' return') → logprob: -5.506014823913574
    4. ' ' → logprob: -11.881014823913574
    5. '	return' → logprob: -11.881014823913574
    6. '  ' → logprob: -13.881014823913574
    7. '       ' → logprob: -14.631014823913574
    8. '    ' → logprob: -15.256014823913574
    9. ' while' → logprob: -15.256014823913574
    10. '   ' → logprob: -15.881014823913574

Token 1000: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00861456897109747
    2. ' q' → logprob: -4.758614540100098
    3. 'remove' → logprob: -18.133615493774414
    4. '	q' → logprob: -18.383615493774414
    5. '(q' → logprob: -18.633615493774414
    6. '[q' → logprob: -18.883615493774414
    7. '_q' → logprob: -20.383615493774414
    8. 'ql' → logprob: -20.383615493774414
    9. ' ' → logprob: -21.008615493774414
    10. ',q' → logprob: -21.008615493774414

Token 1001: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1002: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05395472049713135
    2. '<|end|>' → logprob: -3.428954601287842
    3. '#' → logprob: -4.053954601287842
    4. 'if' → logprob: -6.553954601287842
    5. ')' → logprob: -7.928954601287842
    6. '```' → logprob: -8.428955078125
    7. '<|end|>' → logprob: -8.428955078125
    8. '.' → logprob: -9.178955078125
    9. '...' → logprob: -9.303955078125
    10. 'pass' → logprob: -9.428955078125

Token 1003: ' calc' (ID: 25691)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0050539602525532246
    2. 'solve' → logprob: -5.505053997039795
    3. 'dp' → logprob: -8.255053520202637
    4. 'd' → logprob: -9.005053520202637
    5. 'calc' → logprob: -9.505053520202637
    6. 'max' → logprob: -9.505053520202637
    7. 'binary' → logprob: -9.755053520202637
    8. 'process' → logprob: -10.005053520202637
    9. 'calculate' → logprob: -10.005053520202637
    10. 'get' → logprob: -10.380053520202637

Token 1004: '_result' (ID: 11623)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.6189489364624023
    2. '_max' → logprob: -2.3689489364624023
    3. '_dp' → logprob: -2.3689489364624023
    4. '_opt' → logprob: -2.8689489364624023
    5. '_cost' → logprob: -2.9939489364624023
    6. '_q' → logprob: -3.8689489364624023
    7. '(l' → logprob: -3.9939489364624023
    8. '_total' → logprob: -4.118948936462402
    9. '_sum' → logprob: -4.368948936462402
    10. '(' → logprob: -4.493948936462402

Token 1005: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.16599972546100616
    2. '():' → logprob: -1.9159997701644897
    3. '(l' → logprob: -6.040999889373779
    4. '():
' → logprob: -6.415999889373779
    5. '(' → logprob: -7.165999889373779
    6. '(p' → logprob: -8.165999412536621
    7. '(s' → logprob: -8.540999412536621
    8. '(n' → logprob: -9.165999412536621
    9. ' ():' → logprob: -9.915999412536621
    10. '(m' → logprob: -9.915999412536621

Token 1006: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1603078991174698
    2. '):
' → logprob: -1.9103078842163086
    3. ')' → logprob: -9.785307884216309
    4. '):
' → logprob: -11.410307884216309
    5. '   ' → logprob: -12.160307884216309
    6. ',' → logprob: -12.160307884216309
    7. ' ):' → logprob: -12.410307884216309
    8. ' ' → logprob: -14.785307884216309
    9. '):

' → logprob: -14.785307884216309
    10. ',q' → logprob: -14.785307884216309

Token 1007: ' n' (ID: 297)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9082903861999512
    2. ' l' → logprob: -1.1582903861999512
    3. 'inf' → logprob: -2.158290386199951
    4. ' inf' → logprob: -2.533290386199951
    5. 'm' → logprob: -3.783290386199951
    6. 'i' → logprob: -4.533290386199951
    7. ' m' → logprob: -4.783290386199951
    8. 'r' → logprob: -4.908290386199951
    9. ' i' → logprob: -5.158290386199951
    10. ')' → logprob: -5.283290386199951

Token 1008: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3686584234237671
    2. '):' → logprob: -1.493658423423767
    3. ',' → logprob: -2.4936585426330566
    4. ')' → logprob: -7.368658542633057
    5. '   ' → logprob: -7.868658542633057
    6. '):
' → logprob: -9.868658065795898
    7. ',n' → logprob: -10.618658065795898
    8. ' ,' → logprob: -10.993658065795898
    9. ' ):
' → logprob: -10.993658065795898
    10. '):

' → logprob: -11.493658065795898

Token 1009: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3200197219848633
    2. 'res' → logprob: -2.0700197219848633
    3. 'return' → logprob: -2.5700197219848633
    4. 'for' → logprob: -3.8200197219848633
    5. ' res' → logprob: -4.070019721984863
    6. ' return' → logprob: -4.570019721984863
    7. 'ans' → logprob: -4.695019721984863
    8. ' for' → logprob: -5.695019721984863
    9. 'result' → logprob: -6.070019721984863
    10. 'def' → logprob: -6.570019721984863

Token 1010: ' t' (ID: 260)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25789716839790344
    2. 'for' → logprob: -2.132897138595581
    3. 'res' → logprob: -2.882897138595581
    4. 'if' → logprob: -4.00789737701416
    5. 'qi' → logprob: -4.38289737701416
    6. 'ans' → logprob: -4.88289737701416
    7. 'idx' → logprob: -5.25789737701416
    8. 'ti' → logprob: -5.38289737701416
    9. 'i' → logprob: -7.25789737701416
    10. 'ret' → logprob: -8.00789737701416

Token 1011: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4434635043144226
    2. '=' → logprob: -1.0684635639190674
    3. ',' → logprob: -5.068463325500488
    4. 'ype' → logprob: -5.943463325500488
    5. 'i' → logprob: -6.193463325500488
    6. 'r' → logprob: -7.443463325500488
    7. 'o' → logprob: -7.693463325500488
    8. 'ime' → logprob: -7.818463325500488
    9. 'y' → logprob: -7.943463325500488
    10. '=
' → logprob: -8.568463325500488

Token 1012: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.035553134977817535
    2. 'min' → logprob: -4.160552978515625
    3. ' q' → logprob: -4.660552978515625
    4. '(q' → logprob: -5.535552978515625
    5. 'bis' → logprob: -6.285552978515625
    6. '(min' → logprob: -7.035552978515625
    7. ' min' → logprob: -7.035552978515625
    8. '(' → logprob: -7.535552978515625
    9. 'max' → logprob: -7.660552978515625
    10. ' (' → logprob: -8.160552978515625

Token 1013: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.04674597084522247
    2. '[' → logprob: -3.171746015548706
    3. '[len' → logprob: -6.546745777130127
    4. '[n' → logprob: -6.921745777130127
    5. '[min' → logprob: -7.046745777130127
    6. '[q' → logprob: -9.046746253967285
    7. '   ' → logprob: -9.296746253967285
    8. '
' → logprob: -9.796746253967285
    9. '[i' → logprob: -10.546746253967285
    10. 'def' → logprob: -10.796746253967285

Token 1014: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -4.954393079970032e-05
    2. '(' → logprob: -10.000049591064453
    3. ' ' → logprob: -14.062549591064453
    4. ' (' → logprob: -14.187549591064453
    5. '[' → logprob: -14.312549591064453
    6. '   ' → logprob: -14.875049591064453
    7. '0' → logprob: -15.625049591064453
    8. '```' → logprob: -15.687549591064453
    9. 'n' → logprob: -15.812549591064453
    10. '][' → logprob: -15.875049591064453

Token 1015: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00021748353901784867
    2. ']' → logprob: -8.87521743774414
    3. '[' → logprob: -10.50021743774414
    4. ']
' → logprob: -11.00021743774414
    5. '-' → logprob: -11.25021743774414
    6. '][-' → logprob: -11.87521743774414
    7. ' ][' → logprob: -12.12521743774414
    8. '   ' → logprob: -13.12521743774414
    9. ' ' → logprob: -13.87521743774414
    10. '1' → logprob: -14.00021743774414

Token 1016: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10525434464216232
    2. '   ' → logprob: -2.3552544116973877
    3. 'if' → logprob: -5.730254173278809
    4. 'r' → logprob: -6.980254173278809
    5. 'res' → logprob: -7.730254173278809
    6. ' return' → logprob: -8.730254173278809
    7. 'result' → logprob: -9.355254173278809
    8. '
' → logprob: -9.605254173278809
    9. 'ans' → logprob: -10.605254173278809
    10. ',' → logprob: -10.855254173278809

Token 1017: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0054991221986711025
    2. 'if' (adapté à ' if') → logprob: -5.255498886108398
    3. 'res' → logprob: -8.755498886108398
    4. 'result' → logprob: -10.005498886108398
    5. 'r' → logprob: -10.380498886108398
    6. 'ret' → logprob: -11.880498886108398
    7. 'ans' → logprob: -12.130498886108398
    8. 'print' → logprob: -12.130498886108398
    9. ' return' → logprob: -12.380498886108398
    10. '   ' → logprob: -12.380498886108398

Token 1018: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0019555140752345324
    2. ' t' → logprob: -6.251955509185791
    3. 'q' → logprob: -10.87695598602295
    4. 'n' → logprob: -12.25195598602295
    5. 'len' → logprob: -13.37695598602295
    6. '(t' → logprob: -14.50195598602295
    7. '_t' → logprob: -14.75195598602295
    8. ' q' → logprob: -15.87695598602295
    9. '
' → logprob: -16.001955032348633
    10. 'not' → logprob: -16.251955032348633

Token 1019: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.796184723294573e-06
    2. '==' → logprob: -13.250005722045898
    3. '
' → logprob: -13.750005722045898
    4. ' [' → logprob: -13.875005722045898
    5. '0' → logprob: -15.000005722045898
    6. '][' → logprob: -15.250005722045898
    7. '[
' → logprob: -15.375005722045898
    8. '```' → logprob: -15.500005722045898
    9. ')[' → logprob: -15.750005722045898
    10. '()[' → logprob: -16.1250057220459

Token 1020: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031881670001894236
    2. '1' → logprob: -5.753188133239746
    3. '
' → logprob: -12.128188133239746
    4. '[' → logprob: -12.753188133239746
    5. '```' → logprob: -14.315688133239746
    6. ' ' → logprob: -15.003188133239746
    7. '(' → logprob: -15.753188133239746
    8. '

' → logprob: -15.753188133239746
    9. '   ' → logprob: -15.878188133239746
    10. '
' → logprob: -16.003189086914062

Token 1021: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7637401819229126
    2. '>=' → logprob: -0.7637401819229126
    3. ' >=' → logprob: -3.763740062713623
    4. ' <' → logprob: -4.138740062713623
    5. '==' → logprob: -4.138740062713623
    6. ']>=' → logprob: -5.388740062713623
    7. '[' → logprob: -5.763740062713623
    8. ']' → logprob: -6.388740062713623
    9. '>' → logprob: -6.888740062713623
    10. ' ==' → logprob: -7.013740062713623

Token 1022: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.02073165401816368
    2. '<' → logprob: -4.395731449127197
    3. ' >=' → logprob: -4.895731449127197
    4. '==' → logprob: -8.020731925964355
    5. '<n' → logprob: -9.145731925964355
    6. '<=' → logprob: -9.395731925964355
    7. ' <' → logprob: -9.395731925964355
    8. '>' → logprob: -9.395731925964355
    9. '!=' → logprob: -12.145731925964355
    10. ')>=' → logprob: -12.270731925964355

Token 1023: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004234051739331335
    2. '=' → logprob: -8.000423431396484
    3. '=n' → logprob: -9.500423431396484
    4. ' n' → logprob: -11.375423431396484
    5. '0' → logprob: -14.375423431396484
    6. '	n' → logprob: -15.250423431396484
    7. '1' → logprob: -15.375423431396484
    8. 'q' → logprob: -15.625423431396484
    9. '=sys' → logprob: -15.875423431396484
    10. '=
' → logprob: -16.250423431396484

Token 1024: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6460506319999695
    2. ':' → logprob: -1.2710506916046143
    3. ' and' → logprob: -2.1460506916046143
    4. 'and' → logprob: -2.8960506916046143
    5. ':return' → logprob: -4.396050453186035
    6. ' or' → logprob: -4.646050453186035
    7. 'or' → logprob: -7.271050453186035
    8. ' :' → logprob: -8.646050453186035
    9. ' :
' → logprob: -8.646050453186035
    10. '   ' → logprob: -8.896050453186035

Token 1025: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7789265513420105
    2. '   ' → logprob: -1.1539266109466553
    3. ':
' → logprob: -1.9039266109466553
    4. ':' → logprob: -2.9039266109466553
    5. ' and' → logprob: -4.403926372528076
    6. ':return' → logprob: -5.778926372528076
    7. ' return' → logprob: -6.028926372528076
    8. 'return' → logprob: -6.653926372528076
    9. ' or' → logprob: -6.903926372528076
    10. 'and' → logprob: -6.903926372528076

Token 1026: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04531612992286682
    2. ' return' → logprob: -3.295316219329834
    3. 't' → logprob: -5.420316219329834
    4. '   ' → logprob: -6.420316219329834
    5. ' t' → logprob: -7.670316219329834
    6. 'print' → logprob: -7.795316219329834
    7. 'raise' → logprob: -8.920315742492676
    8. 'res' → logprob: -10.045315742492676
    9. 'r' → logprob: -10.545315742492676
    10. 'q' → logprob: -10.920315742492676

Token 1027: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03271208330988884
    2. '-get' → logprob: -4.282711982727051
    3. 'None' → logprob: -5.157711982727051
    4. 'get' → logprob: -5.282711982727051
    5. '"' → logprob: -5.532711982727051
    6. '-f' → logprob: -6.782711982727051
    7. 'float' → logprob: -7.282711982727051
    8. 't' → logprob: -7.282711982727051
    9. '-inf' → logprob: -7.782711982727051
    10. '10' → logprob: -9.28271198272705

Token 1028: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '2' → logprob: -14.875000953674316
    3. '10' → logprob: -15.375000953674316
    4. '100' → logprob: -15.875000953674316
    5. '9' → logprob: -17.125001907348633
    6. 'get' → logprob: -17.125001907348633
    7. '99' → logprob: -17.375001907348633
    8. 't' → logprob: -17.375001907348633
    9. ' ' → logprob: -17.625001907348633
    10. '11' → logprob: -17.625001907348633

Token 1029: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2849476933479309
    2. '   ' → logprob: -1.4099476337432861
    3. '<|end|>' → logprob: -5.784947872161865
    4. 'return' → logprob: -9.159947395324707
    5. '    
' → logprob: -9.284947395324707
    6. ',' → logprob: -9.534947395324707
    7. '  ' → logprob: -9.659947395324707
    8. ')' → logprob: -9.784947395324707
    9. ' return' → logprob: -9.784947395324707
    10. ' ' → logprob: -9.909947395324707

Token 1030: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009412029758095741
    2. '
' → logprob: -4.759411811828613
    3. 'return' → logprob: -7.759411811828613
    4. ' return' → logprob: -8.884411811828613
    5. '    
' → logprob: -10.134411811828613
    6. ' if' → logprob: -10.259411811828613
    7. 'if' → logprob: -10.384411811828613
    8. ')' → logprob: -10.759411811828613
    9. ' ' → logprob: -10.884411811828613
    10. '  ' → logprob: -11.134411811828613

Token 1031: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0013189311139285564
    2. ' return' → logprob: -7.25131893157959
    3. 'else' → logprob: -7.50131893157959
    4. '   ' → logprob: -9.87631893157959
    5. '
' → logprob: -13.00131893157959
    6. ' ' → logprob: -13.37631893157959
    7. ' else' → logprob: -14.62631893157959
    8. 'eturn' → logprob: -15.37631893157959
    9. 'if' → logprob: -15.50131893157959
    10. 'ret' → logprob: -15.62631893157959

Token 1032: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00023226479243021458
    2. ' t' → logprob: -8.375232696533203
    3. 'q' → logprob: -13.375232696533203
    4. 'int' → logprob: -17.500232696533203
    5. '`t' → logprob: -17.500232696533203
    6. ' ' → logprob: -17.875232696533203
    7. ' q' → logprob: -18.250232696533203
    8. '10' → logprob: -18.375232696533203
    9. '(t' → logprob: -18.500232696533203
    10. '   ' → logprob: -19.000232696533203

Token 1033: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011795496568083763
    2. '<|end|>' → logprob: -4.761795520782471
    3. '
' → logprob: -6.261795520782471
    4. ',' → logprob: -7.011795520782471
    5. ')' → logprob: -8.886795043945312
    6. '0' → logprob: -9.636795043945312
    7. '```' → logprob: -10.011795043945312
    8. '<|end|>' → logprob: -10.886795043945312
    9. 'def' → logprob: -11.261795043945312
    10. ' ' → logprob: -11.511795043945312

Token 1034: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '
' → logprob: -16.625
    4. '   ' → logprob: -17.75
    5. '-' → logprob: -18.125
    6. '[' → logprob: -18.6875
    7. '```' → logprob: -18.8125
    8. '
' → logprob: -19.0625
    9. '１' → logprob: -19.5625
    10. '`' → logprob: -19.6875

Token 1035: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02648189663887024
    2. '<|end|>' → logprob: -4.026482105255127
    3. '}' → logprob: -5.276482105255127
    4. ']' → logprob: -6.276482105255127
    5. '
' → logprob: -7.276482105255127
    6. '+' → logprob: -8.026481628417969
    7. ' )' → logprob: -9.026481628417969
    8. ')return' → logprob: -10.151481628417969
    9. '<|end|>' → logprob: -10.401481628417969
    10. '```' → logprob: -10.776481628417969

Token 1036: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41230398416519165
    2. '#' → logprob: -1.4123039245605469
    3. '<|end|>' → logprob: -2.787303924560547
    4. 'n' → logprob: -3.787303924560547
    5. 'if' → logprob: -4.787303924560547
    6. '```' → logprob: -7.537303924560547
    7. '
' → logprob: -7.787303924560547
    8. '<|end|>' → logprob: -8.787303924560547
    9. ')' → logprob: -8.912303924560547
    10. 'print' → logprob: -9.287303924560547

Token 1037: ' wrapped' (ID: 31831)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00037132782745175064
    2. 'solve' → logprob: -8.000370979309082
    3. '_main' → logprob: -11.750370979309082
    4. '__' → logprob: -11.750370979309082
    5. ' main' → logprob: -12.250370979309082
    6. 'resolve' → logprob: -12.375370979309082
    7. 'calc' → logprob: -13.000370979309082
    8. 'parse' → logprob: -13.250370979309082
    9. 'run' → logprob: -13.500370979309082
    10. 'def' → logprob: -13.750370979309082

Token 1038: '_main' (ID: 23076)
  Prédit: '_calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_calc' → logprob: -1.17154061794281
    2. 'def' → logprob: -1.54654061794281
    3. '_main' → logprob: -1.54654061794281
    4. '_cal' → logprob: -2.9215407371520996
    5. '(func' → logprob: -3.6715407371520996
    6. '():' → logprob: -3.6715407371520996
    7. '_process' → logprob: -3.9215407371520996
    8. '_s' → logprob: -4.4215407371521
    9. '(calc' → logprob: -4.6715407371521
    10. '_def' → logprob: -4.6715407371521

Token 1039: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.194110756041482e-05
    2. ' ():' → logprob: -10.375061988830566
    3. '():
' → logprob: -10.750061988830566
    4. '_' → logprob: -11.750061988830566
    5. '()' → logprob: -13.750061988830566
    6. '(' → logprob: -17.00006103515625
    7. '():
' → logprob: -17.12506103515625
    8. 'def' → logprob: -17.25006103515625
    9. '():

' → logprob: -17.87506103515625
    10. '_def' → logprob: -18.62506103515625

Token 1040: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4481123387813568
    2. '():' → logprob: -2.3231122493743896
    3. 'def' → logprob: -2.5731122493743896
    4. '()' → logprob: -2.5731122493743896
    5. 'n' → logprob: -2.9481122493743896
    6. '():
' → logprob: -3.4481122493743896
    7. '(n' → logprob: -4.698112487792969
    8. '```' → logprob: -5.073112487792969
    9. 's' → logprob: -6.323112487792969
    10. '
' → logprob: -6.323112487792969

Token 1041: ' set' (ID: 920)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03569451719522476
    2. '   ' → logprob: -4.410694599151611
    3. 'set' (adapté à ' set') → logprob: -5.035694599151611
    4. 'n' → logprob: -5.035694599151611
    5. 'm' → logprob: -5.160694599151611
    6. ' def' → logprob: -5.660694599151611
    7. ' set' → logprob: -8.535694122314453
    8. 'import' → logprob: -8.785694122314453
    9. ' n' → logprob: -9.160694122314453
    10. 'l' → logprob: -9.535694122314453

Token 1042: '_rec' (ID: 35314)
  Prédit: '_rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: 0.0
    2. '_recursive' → logprob: -17.375
    3. 'rec' → logprob: -18.75
    4. '_rep' → logprob: -18.875
    5. '_' → logprob: -19.0
    6. '_def' → logprob: -20.25
    7. '_re' → logprob: -21.0
    8. '```' → logprob: -21.375
    9. '_ref' → logprob: -22.0
    10. '_pres' → logprob: -22.25

Token 1043: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0001899511698866263
    2. 'urs' → logprob: -8.625189781188965
    3. 'ursive' → logprob: -12.125189781188965
    4. 'ur' → logprob: -13.250189781188965
    5. '   ' → logprob: -13.875189781188965
    6. 'ursor' → logprob: -14.375189781188965
    7. '(' → logprob: -15.125189781188965
    8. '_' → logprob: -15.125189781188965
    9. 'urses' → logprob: -16.25019073486328
    10. 'ursors' → logprob: -16.25019073486328

Token 1044: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.3868725895881653
    2. 'limit' → logprob: -1.1368725299835205
    3. 'lim' → logprob: -14.386872291564941
    4. ' limit' → logprob: -14.511872291564941
    5. 'Limit' → logprob: -15.136872291564941
    6. '_LIMIT' → logprob: -15.886872291564941
    7. '_limits' → logprob: -17.011873245239258
    8. 'limits' → logprob: -17.136873245239258
    9. 'LIMIT' → logprob: -18.386873245239258
    10. 'imit' → logprob: -18.886873245239258

Token 1045: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0031879288144409657
    2. '()
' → logprob: -5.753188133239746
    3. '()

' → logprob: -11.878188133239746
    4. ' ()' → logprob: -13.378188133239746
    5. '()
' → logprob: -14.128188133239746
    6. '();' → logprob: -15.253188133239746
    7. '()`' → logprob: -15.503188133239746
    8. '()\' → logprob: -16.00318717956543
    9. '())' → logprob: -16.25318717956543
    10. '()<' → logprob: -16.37818717956543

Token 1046: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06623782962560654
    2. '   ' → logprob: -2.8162379264831543
    3. 'n' → logprob: -6.191237926483154
    4. 'if' → logprob: -6.691237926483154
    5. '#' → logprob: -7.941237926483154
    6. ' def' → logprob: -8.566237449645996
    7. '```' → logprob: -8.691237449645996
    8. '
' → logprob: -9.441237449645996
    9. ' n' → logprob: -10.066237449645996
    10. '...' → logprob: -10.066237449645996

Token 1047: ' inf' (ID: 5603)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0022590947337448597
    2. 'm' → logprob: -6.627259254455566
    3. 'def' → logprob: -7.752259254455566
    4. 'N' → logprob: -8.502259254455566
    5. 'inf' (adapté à ' inf') → logprob: -9.377259254455566
    6. '```' → logprob: -9.877259254455566
    7. '
' → logprob: -10.002259254455566
    8. 'mod' → logprob: -10.502259254455566
    9. '(n' → logprob: -10.627259254455566
    10. '#' → logprob: -11.252259254455566

Token 1048: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196925416588783
    2. '=' → logprob: -2.81196928024292
    3. ',' → logprob: -14.686968803405762
    4. '   ' → logprob: -15.061968803405762
    5. ' ' → logprob: -15.311968803405762
    6. '  ' → logprob: -15.811968803405762
    7. '=get' → logprob: -16.186969757080078
    8. '＝' → logprob: -16.311969757080078
    9. '	' → logprob: -16.436969757080078
    10. ')' → logprob: -16.686969757080078

Token 1049: ' get' (ID: 717)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.000675500778015703
    2. 'get' → logprob: -8.250675201416016
    3. 'float' → logprob: -8.375675201416016
    4. '1' → logprob: -9.750675201416016
    5. 'int' → logprob: -9.750675201416016
    6. ' ' → logprob: -10.125675201416016
    7. '100' → logprob: -11.125675201416016
    8. '(' → logprob: -11.625675201416016
    9. '   ' → logprob: -13.625675201416016
    10. '2' → logprob: -14.625675201416016

Token 1050: '_inf' (ID: 107309)
  Prédit: '_inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inf' → logprob: -3.392824874026701e-05
    2. 'inf' → logprob: -11.00003433227539
    3. '20' → logprob: -11.25003433227539
    4. '10' → logprob: -13.37503433227539
    5. '100' → logprob: -14.87503433227539
    6. ' ' → logprob: -15.12503433227539
    7. '_INF' → logprob: -15.25003433227539
    8. '__' → logprob: -15.37503433227539
    9. '1' → logprob: -15.87503433227539
    10. '```' → logprob: -16.12503433227539

Token 1051: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01329575665295124
    2. 'n' → logprob: -4.388295650482178
    3. '
' → logprob: -7.513295650482178
    4. '	n' → logprob: -8.763296127319336
    5. ' n' → logprob: -9.888296127319336
    6. '  ' → logprob: -12.263296127319336
    7. ',n' → logprob: -12.263296127319336
    8. '```' → logprob: -12.388296127319336
    9. '    
' → logprob: -12.513296127319336
    10. '()' → logprob: -12.638296127319336

Token 1052: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6953931450843811
    2. '   ' → logprob: -0.6953931450843811
    3. 'm' → logprob: -6.320393085479736
    4. 'l' → logprob: -8.445393562316895
    5. ' n' → logprob: -10.070393562316895
    6. 'sys' → logprob: -10.445393562316895
    7. 'mod' → logprob: -10.570393562316895
    8. '	n' → logprob: -10.695393562316895
    9. '```' → logprob: -11.070393562316895
    10. 'def' → logprob: -11.445393562316895

Token 1053: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.00042149791261181235
    2. 'mod' → logprob: -8.250421524047852
    3. 'm' → logprob: -8.875421524047852
    4. '   ' → logprob: -12.000421524047852
    5. '(n' → logprob: -12.500421524047852
    6. '
' → logprob: -12.875421524047852
    7. 'MOD' → logprob: -13.375421524047852
    8. '#' → logprob: -13.875421524047852
    9. 'N' → logprob: -13.875421524047852
    10. ' n' → logprob: -14.375421524047852

Token 1054: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027015688829123974
    2. ',m' → logprob: -8.625269889831543
    3. '=' → logprob: -9.625269889831543
    4. ' =' → logprob: -11.000269889831543
    5. ' ,' → logprob: -12.250269889831543
    6. 'm' → logprob: -13.625269889831543
    7. ',n' → logprob: -14.000269889831543
    8. ',q' → logprob: -15.375269889831543
    9. ',l' → logprob: -16.00027084350586
    10. ',M' → logprob: -16.12527084350586

Token 1055: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0008014073828235269
    2. 'k' → logprob: -7.2508015632629395
    3. ' m' → logprob: -9.875801086425781
    4. 'q' → logprob: -10.375801086425781
    5. 'l' → logprob: -12.125801086425781
    6. '_m' → logprob: -14.750801086425781
    7. ' =' → logprob: -15.125801086425781
    8. 't' → logprob: -15.125801086425781
    9. 's' → logprob: -15.250801086425781
    10. 'c' → logprob: -15.375801086425781

Token 1056: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008614926598966122
    2. ' =' → logprob: -4.758615016937256
    3. ',' → logprob: -14.883614540100098
    4. ')' → logprob: -18.383615493774414
    5. ')=' → logprob: -18.508615493774414
    6. '＝' → logprob: -18.508615493774414
    7. '=create' → logprob: -20.383615493774414
    8. '=

' → logprob: -20.508615493774414
    9. '=input' → logprob: -20.633615493774414
    10. '=get' → logprob: -21.133615493774414

Token 1057: ' parse' (ID: 8420)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.8258199691772461
    2. 'parse' → logprob: -0.9508199691772461
    3. ' parse' → logprob: -2.075819969177246
    4. ' LI' → logprob: -3.950819969177246
    5. 'map' → logprob: -4.200819969177246
    6. ' map' → logprob: -4.450819969177246
    7. ' read' → logprob: -6.325819969177246
    8. 'read' → logprob: -6.450819969177246
    9. 'I' → logprob: -7.200819969177246
    10. ' I' → logprob: -9.700819969177246

Token 1058: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.0003663212701212615
    2. 'first' → logprob: -8.6253662109375
    3. '()' → logprob: -8.8753662109375
    4. '(' → logprob: -10.5003662109375
    5. 'First' → logprob: -11.7503662109375
    6. '(n' → logprob: -12.7503662109375
    7. '_FIRST' → logprob: -12.7503662109375
    8. '(first' → logprob: -13.7503662109375
    9. '_input' → logprob: -13.8753662109375
    10. '_First' → logprob: -14.3753662109375

Token 1059: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.07913928478956223
    2. 'input' → logprob: -2.579139232635498
    3. '_' → logprob: -9.579139709472656
    4. '(' → logprob: -9.829139709472656
    5. 'Input' → logprob: -9.954139709472656
    6. '()' → logprob: -10.204139709472656
    7. '(input' → logprob: -11.704139709472656
    8. ' input' → logprob: -12.204139709472656
    9. '```' → logprob: -12.204139709472656
    10. 'INPUT' → logprob: -12.329139709472656

Token 1060: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0336805060505867
    2. '()
' → logprob: -3.4086804389953613
    3. ')' → logprob: -11.28368091583252
    4. '();' → logprob: -12.03368091583252
    5. '()
' → logprob: -12.65868091583252
    6. '   ' → logprob: -12.78368091583252
    7. '(' → logprob: -13.03368091583252
    8. ',' → logprob: -13.28368091583252
    9. ' ()' → logprob: -13.65868091583252
    10. '()\' → logprob: -13.65868091583252

Token 1061: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18276362121105194
    2. 'l' → logprob: -1.8077635765075684
    3. ' l' → logprob: -6.057763576507568
    4. '	l' → logprob: -7.682763576507568
    5. '
' → logprob: -9.432764053344727
    6. '```' → logprob: -9.682764053344727
    7. '   ' → logprob: -10.807764053344727
    8. '  ' → logprob: -11.557764053344727
    9. ',l' → logprob: -11.557764053344727
    10. '    
' → logprob: -11.807764053344727

Token 1062: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -3.190178904333152e-05
    2. ' l' → logprob: -10.625031471252441
    3. '   ' → logprob: -11.875031471252441
    4. '
' → logprob: -15.875031471252441
    5. '	l' → logprob: -15.875031471252441
    6. 'q' → logprob: -16.000032424926758
    7. '```' → logprob: -16.125032424926758
    8. 'm' → logprob: -17.625032424926758
    9. '    
' → logprob: -18.000032424926758
    10. 'li' → logprob: -18.125032424926758

Token 1063: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -1.9981420336989686e-05
    2. 'r' → logprob: -10.875020027160645
    3. '	rc' → logprob: -15.375020027160645
    4. 'l' → logprob: -16.125019073486328
    5. '(rc' → logprob: -16.125019073486328
    6. '_rc' → logprob: -16.125019073486328
    7. 'rpc' → logprob: -16.375019073486328
    8. 'rr' → logprob: -16.500019073486328
    9. 'rcode' → logprob: -16.625019073486328
    10. '   ' → logprob: -16.750019073486328

Token 1064: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602250337600708
    2. ' =' → logprob: -1.9102250337600708
    3. '=parse' → logprob: -15.285224914550781
    4. '=
' → logprob: -16.03522491455078
    5. '=[]' → logprob: -16.41022491455078
    6. ' ' → logprob: -16.53522491455078
    7. '=get' → logprob: -17.16022491455078
    8. '   ' → logprob: -17.41022491455078
    9. '=create' → logprob: -17.41022491455078
    10. '=s' → logprob: -17.66022491455078

Token 1065: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.014165041036903858
    2. ' parse' → logprob: -4.264164924621582
    3. 'append' → logprob: -14.014164924621582
    4. '   ' → logprob: -15.139164924621582
    5. 'par' → logprob: -15.764164924621582
    6. 'l' → logprob: -16.1391658782959
    7. '[' → logprob: -16.7641658782959
    8. '	parse' → logprob: -16.8891658782959
    9. ' ' → logprob: -17.0141658782959
    10. ' l' → logprob: -17.3891658782959

Token 1066: '_l' (ID: 1478)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00014478032244369388
    2. 'm' → logprob: -9.250144958496094
    3. '_l' → logprob: -11.125144958496094
    4. ' (' → logprob: -11.250144958496094
    5. 'l' → logprob: -12.000144958496094
    6. '(' → logprob: -12.625144958496094
    7. '_m' → logprob: -12.750144958496094
    8. '(l' → logprob: -13.750144958496094
    9. '```' → logprob: -13.750144958496094
    10. '=m' → logprob: -14.000144958496094

Token 1067: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -1.3425219549390022e-05
    2. '(rc' → logprob: -11.87501335144043
    3. 'r' → logprob: -12.75001335144043
    4. '_rc' → logprob: -13.37501335144043
    5. 'c' → logprob: -14.12501335144043
    6. '(' → logprob: -14.50001335144043
    7. '   ' → logprob: -15.75001335144043
    8. 'RC' → logprob: -16.37501335144043
    9. 'cr' → logprob: -16.62501335144043
    10. 'ist' → logprob: -16.62501335144043

Token 1068: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.0280383548888494e-06
    2. 'm' → logprob: -14.000000953674316
    3. '(' → logprob: -16.125001907348633
    4. ' (' → logprob: -17.500001907348633
    5. '(
' → logprob: -17.875001907348633
    6. '(M' → logprob: -19.250001907348633
    7. '   ' → logprob: -19.500001907348633
    8. '[m' → logprob: -19.500001907348633
    9. ' m' → logprob: -20.250001907348633
    10. '	m' → logprob: -21.000001907348633

Token 1069: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006812599487602711
    2. ')
' → logprob: -5.006812572479248
    3. '   ' → logprob: -9.506813049316406
    4. '(' → logprob: -11.506813049316406
    5. '(n' → logprob: -12.381813049316406
    6. ')
' → logprob: -12.506813049316406
    7. '())' → logprob: -13.131813049316406
    8. ')n' → logprob: -14.381813049316406
    9. ')

' → logprob: -14.881813049316406
    10. ' )' → logprob: -14.881813049316406

Token 1070: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057648852467536926
    2. 'l' → logprob: -2.9326488971710205
    3. ' l' → logprob: -6.307648658752441
    4. 'q' → logprob: -7.057648658752441
    5. '```' → logprob: -10.432648658752441
    6. '
' → logprob: -11.057648658752441
    7. ' q' → logprob: -11.307648658752441
    8. ' ' → logprob: -12.682648658752441
    9. '	l' → logprob: -12.932648658752441
    10. 'n' → logprob: -12.932648658752441

Token 1071: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.002063661115244031
    2. 'q' → logprob: -6.377063751220703
    3. 'append' → logprob: -8.002063751220703
    4. '   ' → logprob: -11.002063751220703
    5. ' l' → logprob: -12.502063751220703
    6. 'inf' → logprob: -13.377063751220703
    7. '
' → logprob: -13.627063751220703
    8. 'copy' → logprob: -14.627063751220703
    9. 'li' → logprob: -14.627063751220703
    10. 'j' → logprob: -14.752063751220703

Token 1072: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -1.3856492842023727e-06
    2. '_rc' → logprob: -13.875000953674316
    3. 'r' → logprob: -16.375001907348633
    4. '	rc' → logprob: -16.500001907348633
    5. '(rc' → logprob: -16.625001907348633
    6. 'rcode' → logprob: -16.750001907348633
    7. ' =' → logprob: -17.125001907348633
    8. 'rec' → logprob: -17.375001907348633
    9. 'RC' → logprob: -17.625001907348633
    10. 'rpc' → logprob: -17.750001907348633

Token 1073: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.483544260263443
    2. '.sort' → logprob: -1.2335442304611206
    3. ' =' → logprob: -2.48354434967041
    4. '.' → logprob: -4.98354434967041
    5. '.append' → logprob: -6.85854434967041
    6. '_sort' → logprob: -7.60854434967041
    7. 'sort' → logprob: -9.10854434967041
    8. ' .' → logprob: -9.35854434967041
    9. ' ' → logprob: -10.23354434967041
    10. '   ' → logprob: -10.98354434967041

Token 1074: ' sorted' (ID: 20099)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.03330722823739052
    2. 'sorted' → logprob: -3.6583073139190674
    3. ' append' → logprob: -5.033307075500488
    4. ' sorted' → logprob: -7.908307075500488
    5. 'sort' → logprob: -9.408307075500488
    6. 'copy' → logprob: -11.533307075500488
    7. '	append' → logprob: -13.908307075500488
    8. 'list' → logprob: -14.283307075500488
    9. 'app' → logprob: -14.408307075500488
    10. 'add' → logprob: -14.658307075500488

Token 1075: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.1994775377388578e-05
    2. 'l' → logprob: -11.500012397766113
    3. '(' → logprob: -13.375012397766113
    4. '	l' → logprob: -17.125011444091797
    5. '((' → logprob: -17.250011444091797
    6. '[l' → logprob: -17.375011444091797
    7. '(
' → logprob: -17.500011444091797
    8. ',l' → logprob: -18.500011444091797
    9. '(key' → logprob: -18.750011444091797
    10. ' (' → logprob: -19.250011444091797

Token 1076: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.0002116462419508025
    2. 'l' → logprob: -9.125211715698242
    3. '(rc' → logprob: -10.000211715698242
    4. '(l' → logprob: -10.375211715698242
    5. 'c' → logprob: -11.625211715698242
    6. 'r' → logprob: -11.875211715698242
    7. 'lc' → logprob: -12.000211715698242
    8. 'RC' → logprob: -13.875211715698242
    9. 'cr' → logprob: -14.500211715698242
    10. '(' → logprob: -14.625211715698242

Token 1077: ',' (ID: 11)
  Prédit: ',key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',key' → logprob: -0.39103537797927856
    2. ',' → logprob: -1.1410353183746338
    3. ')' → logprob: -5.516035556793213
    4. 'key' → logprob: -9.266035079956055
    5. '(key' → logprob: -10.766035079956055
    6. '(),' → logprob: -11.516035079956055
    7. ' key' → logprob: -12.516035079956055
    8. ' ,' → logprob: -12.766035079956055
    9. ',)' → logprob: -14.766035079956055
    10. ',k' → logprob: -14.891035079956055

Token 1078: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0019301822176203132
    2. ' key' → logprob: -6.251930236816406
    3. '(key' → logprob: -13.626930236816406
    4. ',key' → logprob: -15.501930236816406
    5. 'reverse' → logprob: -16.626930236816406
    6. '	key' → logprob: -16.876930236816406
    7. '   ' → logprob: -17.876930236816406
    8. ')' → logprob: -19.251930236816406
    9. '
' → logprob: -19.501930236816406
    10. 'l' → logprob: -19.751930236816406

Token 1079: '=l' (ID: 103670)
  Prédit: '=l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=l' → logprob: -0.00023655613767914474
    2. '=' → logprob: -8.750236511230469
    3. '=lambda' → logprob: -9.500236511230469
    4. 'l' → logprob: -13.000236511230469
    5. '=len' → logprob: -14.500236511230469
    6. '=
' → logprob: -15.375236511230469
    7. '=w' → logprob: -16.25023651123047
    8. '=L' → logprob: -16.50023651123047
    9. '=get' → logprob: -17.25023651123047
    10. '(l' → logprob: -17.62523651123047

Token 1080: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.00025800178991630673
    2. '=' → logprob: -9.125258445739746
    3. '_rc' → logprob: -10.125258445739746
    4. '=lambda' → logprob: -10.375258445739746
    5. 'lc' → logprob: -11.375258445739746
    6. 'l' → logprob: -11.375258445739746
    7. 'ambda' → logprob: -11.500258445739746
    8. 'amb' → logprob: -12.125258445739746
    9. 'r' → logprob: -12.375258445739746
    10. 'roc' → logprob: -13.000258445739746

Token 1081: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -1.6240566083070007e-06
    2. '_s' → logprob: -13.625001907348633
    3. '_sorted' → logprob: -15.875001907348633
    4. 'sort' → logprob: -16.500001907348633
    5. '_' → logprob: -16.625001907348633
    6. '_append' → logprob: -18.000001907348633
    7. '_key' → logprob: -18.000001907348633
    8. '_split' → logprob: -18.000001907348633
    9. '_SORT' → logprob: -18.250001907348633
    10. '_scroll' → logprob: -18.375001907348633

Token 1082: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -2.15310683415737e-05
    2. 'key' → logprob: -10.750021934509277
    3. 'Key' → logprob: -18.75002098083496
    4. ' key' → logprob: -19.12502098083496
    5. '_KEY' → logprob: -21.12502098083496
    6. ',key' → logprob: -21.50002098083496
    7. '(key' → logprob: -21.62502098083496
    8. ')' → logprob: -21.62502098083496
    9. '_Key' → logprob: -22.00002098083496
    10. ')_' → logprob: -22.12502098083496

Token 1083: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01416798122227192
    2. ')
' → logprob: -4.264167785644531
    3. ')
' → logprob: -12.889167785644531
    4. ' )' → logprob: -14.639167785644531
    5. ')`
' → logprob: -14.639167785644531
    6. ')

' → logprob: -14.889167785644531
    7. '   ' → logprob: -15.389167785644531
    8. ')`' → logprob: -16.26416778564453
    9. ')#' → logprob: -16.63916778564453
    10. ' )
' → logprob: -16.76416778564453

Token 1084: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038269270211458206
    2. 'l' → logprob: -3.288269281387329
    3. ' l' → logprob: -9.03826904296875
    4. 'q' → logprob: -9.66326904296875
    5. '
' → logprob: -10.66326904296875
    6. '```' → logprob: -11.16326904296875
    7. '    
' → logprob: -13.16326904296875
    8. '	l' → logprob: -13.53826904296875
    9. 'j' → logprob: -13.91326904296875
    10. '   ' → logprob: -14.16326904296875

Token 1085: ' l' (ID: 305)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.027882175520062447
    2. 'l' (adapté à ' l') → logprob: -3.6528820991516113
    3. '   ' → logprob: -6.777882099151611
    4. 'inf' → logprob: -8.27788257598877
    5. 'i' → logprob: -8.77788257598877
    6. '
' → logprob: -11.15288257598877
    7. ' q' → logprob: -11.77788257598877
    8. 'j' → logprob: -13.52788257598877
    9. 'initialize' → logprob: -13.65288257598877
    10. 'append' → logprob: -13.77788257598877

Token 1086: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -1.5048530030981055e-06
    2. 'r' → logprob: -13.625001907348633
    3. '_rc' → logprob: -16.750001907348633
    4. 'rl' → logprob: -16.875001907348633
    5. 'rcode' → logprob: -17.375001907348633
    6. 'rpc' → logprob: -17.500001907348633
    7. '	rc' → logprob: -17.625001907348633
    8. 'l' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.250001907348633
    10. 'roc' → logprob: -18.625001907348633

Token 1087: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04302910342812538
    2. ' =' → logprob: -3.1680290699005127
    3. '.append' → logprob: -10.543028831481934
    4. ',' → logprob: -13.168028831481934
    5. 'append' → logprob: -13.918028831481934
    6. '＝' → logprob: -15.168028831481934
    7. '_append' → logprob: -15.418028831481934
    8. '+=' → logprob: -16.54302978515625
    9. '.insert' → logprob: -16.66802978515625
    10. 'Append' → logprob: -16.79302978515625

Token 1088: ' append' (ID: 17147)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.04858850687742233
    2. ' append' → logprob: -3.048588514328003
    3. '	append' → logprob: -14.173588752746582
    4. '   ' → logprob: -15.548588752746582
    5. '.append' → logprob: -15.548588752746582
    6. 'prepend' → logprob: -17.923587799072266
    7. 'Append' → logprob: -18.048587799072266
    8. '_append' → logprob: -18.173587799072266
    9. 'insert' → logprob: -18.298587799072266
    10. 'copy' → logprob: -18.548587799072266

Token 1089: '_inf' (ID: 107309)
  Prédit: '_inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inf' → logprob: -0.005634147208184004
    2. '(l' → logprob: -5.380634307861328
    3. '_l' → logprob: -7.880634307861328
    4. 'inf' → logprob: -8.505634307861328
    5. '_' → logprob: -9.380634307861328
    6. 'l' → logprob: -9.505634307861328
    7. '(_' → logprob: -9.755634307861328
    8. '_in' → logprob: -10.005634307861328
    9. '(' → logprob: -10.005634307861328
    10. '```' → logprob: -10.130634307861328

Token 1090: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: 0.0
    2. 'l' → logprob: -18.25
    3. '(l' → logprob: -19.25
    4. '_' → logprob: -19.375
    5. '```' → logprob: -19.375
    6. '
' → logprob: -19.875
    7. ' _' → logprob: -20.0
    8. '_ll' → logprob: -20.125
    9. '	l' → logprob: -20.375
    10. '\' → logprob: -21.125

Token 1091: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -8.895480277715251e-06
    2. 'r' → logprob: -11.875008583068848
    3. 'cr' → logprob: -14.375008583068848
    4. '_rc' → logprob: -14.500008583068848
    5. '(rc' → logprob: -14.625008583068848
    6. 'c' → logprob: -15.750008583068848
    7. 'l' → logprob: -16.500009536743164
    8. 'RC' → logprob: -17.250009536743164
    9. '(' → logprob: -17.500009536743164
    10. '	rc' → logprob: -17.750009536743164

Token 1092: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: 0.0
    2. ' (' → logprob: -17.875
    3. '(
' → logprob: -19.75
    4. '(' → logprob: -19.875
    5. ',l' → logprob: -20.0
    6. '	l' → logprob: -20.25
    7. '```' → logprob: -20.25
    8. ' l' → logprob: -20.5
    9. '[l' → logprob: -21.0
    10. 'l' → logprob: -21.0

Token 1093: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -1.27099974633893e-05
    2. 'l' → logprob: -12.125012397766113
    3. 'r' → logprob: -12.500012397766113
    4. '(rc' → logprob: -13.500012397766113
    5. 'lc' → logprob: -14.500012397766113
    6. '_rc' → logprob: -14.625012397766113
    7. 'rl' → logprob: -15.375012397766113
    8. 'cr' → logprob: -15.375012397766113
    9. 'RC' → logprob: -15.500012397766113
    10. '(' → logprob: -16.25001335144043

Token 1094: ',' (ID: 11)
  Prédit: '(in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(in' → logprob: -0.9169976711273193
    2. '(l' → logprob: -1.0419976711273193
    3. '(n' → logprob: -2.0419976711273193
    4. ',' → logprob: -2.2919976711273193
    5. '(' → logprob: -4.666997909545898
    6. '(len' → logprob: -5.791997909545898
    7. ' (' → logprob: -5.916997909545898
    8. '(get' → logprob: -7.916997909545898
    9. ')' → logprob: -8.041997909545898
    10. ',l' → logprob: -8.041997909545898

Token 1095: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.013883511535823345
    2. '10' → logprob: -4.388883590698242
    3. 'get' → logprob: -7.638883590698242
    4. 'n' → logprob: -7.638883590698242
    5. 'float' → logprob: -8.138883590698242
    6. 'int' → logprob: -9.888883590698242
    7. '100' → logprob: -10.638883590698242
    8. ' inf' → logprob: -11.263883590698242
    9. '1' → logprob: -12.013883590698242
    10. 'math' → logprob: -12.138883590698242

Token 1096: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011058438569307327
    2. ')
' → logprob: -4.511058330535889
    3. ')

' → logprob: -12.261058807373047
    4. '   ' → logprob: -12.761058807373047
    5. ')
' → logprob: -13.011058807373047
    6. ' )' → logprob: -14.261058807373047
    7. '
' → logprob: -17.136058807373047
    8. ' )
' → logprob: -17.261058807373047
    9. ' ' → logprob: -17.636058807373047
    10. ')n' → logprob: -17.636058807373047

Token 1097: '   ' (ID: 271)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.048883020877838135
    2. '   ' → logprob: -3.0488829612731934
    3. 'i' → logprob: -8.423883438110352
    4. ' q' → logprob: -10.423883438110352
    5. '
' → logprob: -10.673883438110352
    6. '```' → logprob: -11.548883438110352
    7. 'def' → logprob: -11.798883438110352
    8. '	q' → logprob: -13.673883438110352
    9. 'j' → logprob: -13.798883438110352
    10. '``' → logprob: -13.798883438110352

Token 1098: ' i' (ID: 575)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.030269553884863853
    2. 'i' (adapté à ' i') → logprob: -3.5302696228027344
    3. '   ' → logprob: -8.405269622802734
    4. 'def' → logprob: -9.030269622802734
    5. 'res' → logprob: -9.905269622802734
    6. 'index' → logprob: -9.905269622802734
    7. '
' → logprob: -10.530269622802734
    8. 'ans' → logprob: -11.280269622802734
    9. 'idx' → logprob: -11.530269622802734
    10. 'result' → logprob: -11.655269622802734

Token 1099: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002534044673666358
    2. ' =' → logprob: -6.002533912658691
    3. ',' → logprob: -9.752533912658691
    4. '=i' → logprob: -15.627533912658691
    5. '=
' → logprob: -16.502534866333008
    6. ',i' → logprob: -16.877534866333008
    7. ' ' → logprob: -18.252534866333008
    8. '   ' → logprob: -19.377534866333008
    9. '＝' → logprob: -19.377534866333008
    10. '=int' → logprob: -19.377534866333008

Token 1100: ' initialize' (ID: 18400)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028786994516849518
    2. 'initialize' → logprob: -6.252878665924072
    3. ' ' → logprob: -7.002878665924072
    4. ' initialize' → logprob: -10.12787914276123
    5. '   ' → logprob: -15.75287914276123
    6. '1' → logprob: -16.502878189086914
    7. '	initialize' → logprob: -16.627878189086914
    8. '  ' → logprob: -16.877878189086914
    9. 'update' → logprob: -17.002878189086914
    10. 'Initialize' → logprob: -18.002878189086914

Token 1101: '_index' (ID: 7748)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06421179324388504
    2. 'i' → logprob: -3.064211845397949
    3. 'q' → logprob: -4.314211845397949
    4. '_q' → logprob: -7.189211845397949
    5. '_i' → logprob: -7.689211845397949
    6. '(' → logprob: -8.18921184539795
    7. '_' → logprob: -8.81421184539795
    8. '```' → logprob: -9.18921184539795
    9. ' i' → logprob: -9.31421184539795
    10. ' ' → logprob: -9.43921184539795

Token 1102: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7428772449493408
    2. ',' → logprob: -0.8678772449493408
    3. '
' → logprob: -3.492877244949341
    4. '(i' → logprob: -3.492877244949341
    5. '    
' → logprob: -4.117877006530762
    6. '(' → logprob: -4.492877006530762
    7. '(q' → logprob: -5.742877006530762
    8. '(n' → logprob: -6.117877006530762
    9. '()' → logprob: -6.367877006530762
    10. ',q' → logprob: -6.367877006530762

Token 1103: '   ' (ID: 271)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00011677479778882116
    2. '   ' → logprob: -9.250116348266602
    3. '
' → logprob: -11.250116348266602
    4. ' q' → logprob: -12.125116348266602
    5. '```' → logprob: -13.875116348266602
    6. 'l' → logprob: -15.125116348266602
    7. '    
' → logprob: -15.375116348266602
    8. 'j' → logprob: -15.875116348266602
    9. '	q' → logprob: -16.1251163482666
    10. 'def' → logprob: -16.2501163482666

Token 1104: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -15.500000953674316
    3. ' q' → logprob: -16.25
    4. '
' → logprob: -16.375
    5. '    
' → logprob: -17.0
    6. 'qi' → logprob: -17.5
    7. 'j' → logprob: -17.875
    8. '```' → logprob: -18.125
    9. 'i' → logprob: -19.25
    10. '_q' → logprob: -19.375

Token 1105: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011053244583308697
    2. ' =' → logprob: -4.511053085327148
    3. ',' → logprob: -12.136053085327148
    4. '=
' → logprob: -17.26105308532715
    5. '   ' → logprob: -18.01105308532715
    6. '＝' → logprob: -18.38605308532715
    7. '=q' → logprob: -20.01105308532715
    8. ' ' → logprob: -20.26105308532715
    9. ',q' → logprob: -21.01105308532715
    10. '=

' → logprob: -21.26105308532715

Token 1106: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -3.5597102396423e-05
    2. '[(' → logprob: -10.375035285949707
    3. ' initialize' → logprob: -12.375035285949707
    4. 'initial' → logprob: -17.625036239624023
    5. '	initialize' → logprob: -17.625036239624023
    6. 'initialized' → logprob: -17.750036239624023
    7. 'update' → logprob: -19.125036239624023
    8. '   ' → logprob: -19.375036239624023
    9. '[' → logprob: -19.500036239624023
    10. 'Initialize' → logprob: -19.625036239624023

Token 1107: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -1.0683535037969705e-05
    2. '_index' → logprob: -12.37501049041748
    3. 'q' → logprob: -12.50001049041748
    4. '
' → logprob: -13.62501049041748
    5. '_i' → logprob: -14.62501049041748
    6. 'index' → logprob: -15.37501049041748
    7. '```' → logprob: -15.37501049041748
    8. '(q' → logprob: -16.625011444091797
    9. 'initialize' → logprob: -16.750011444091797
    10. '\' → logprob: -17.125011444091797

Token 1108: '(in' (ID: 9573)
  Prédit: '(in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(in' → logprob: -0.0002123614540323615
    2. 'inf' → logprob: -8.500212669372559
    3. '(' → logprob: -12.250212669372559
    4. '(
' → logprob: -13.625212669372559
    5. '(i' → logprob: -14.250212669372559
    6. ' (' → logprob: -14.750212669372559
    7. '
' → logprob: -14.750212669372559
    8. '(inv' → logprob: -15.250212669372559
    9. ')' → logprob: -15.875212669372559
    10. '   ' → logprob: -16.000211715698242

Token 1109: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -6.630610641877865e-06
    2. '   ' → logprob: -13.125006675720215
    3. 'inf' → logprob: -13.500006675720215
    4. 'q' → logprob: -14.250006675720215
    5. '
' → logprob: -14.500006675720215
    6. 'fi' → logprob: -14.875006675720215
    7. 'ф' → logprob: -15.000006675720215
    8. 'def' → logprob: -15.250006675720215
    9. '```' → logprob: -15.875006675720215
    10. '=' → logprob: -16.0000057220459

Token 1110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007958169095218182
    2. ')
' → logprob: -4.882957935333252
    3. '   ' → logprob: -8.00795841217041
    4. ')
' → logprob: -11.63295841217041
    5. '()' → logprob: -12.50795841217041
    6. ' ' → logprob: -13.00795841217041
    7. '())' → logprob: -13.13295841217041
    8. '(' → logprob: -14.00795841217041
    9. ' )' → logprob: -14.50795841217041
    10. '())
' → logprob: -15.38295841217041

Token 1111: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03816818445920944
    2. '   ' → logprob: -3.28816819190979
    3. ' while' → logprob: -9.288167953491211
    4. '```' → logprob: -10.663167953491211
    5. '
' → logprob: -12.038167953491211
    6. '	while' → logprob: -13.038167953491211
    7. 'for' → logprob: -13.288167953491211
    8. '    
' → logprob: -15.038167953491211
    9. 'l' → logprob: -15.663167953491211
    10. '``' → logprob: -16.03816795349121

Token 1112: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.056812748312950134
    2. 'for' (adapté à ' for') → logprob: -3.0568127632141113
    3. 'l' → logprob: -4.806812763214111
    4. ' while' → logprob: -11.556812286376953
    5. '```' → logprob: -13.056812286376953
    6. 'q' → logprob: -13.181812286376953
    7. 'i' → logprob: -13.181812286376953
    8. '   ' → logprob: -13.931812286376953
    9. '
' → logprob: -14.681812286376953
    10. 'While' → logprob: -15.556812286376953

Token 1113: ' l' (ID: 305)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9218169450759888
    2. 'i' → logprob: -1.1718169450759888
    3. '_' → logprob: -1.7968169450759888
    4. ' _' → logprob: -2.296816825866699
    5. ' l' → logprob: -4.921816825866699
    6. '_i' → logprob: -4.921816825866699
    7. 'l' → logprob: -5.671816825866699
    8. 'x' → logprob: -5.796816825866699
    9. ' x' → logprob: -6.296816825866699
    10. ' in' → logprob: -7.421816825866699

Token 1114: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6415266394615173
    2. 'in' → logprob: -0.7665266394615173
    3. ',' → logprob: -5.516526699066162
    4. 'i' → logprob: -5.891526699066162
    5. 'ine' → logprob: -6.766526699066162
    6. ' i' → logprob: -7.766526699066162
    7. ' ' → logprob: -8.266526222229004
    8. '   ' → logprob: -9.141526222229004
    9. ' ,' → logprob: -9.641526222229004
    10. 'n' → logprob: -10.266526222229004

Token 1115: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002614659257233143
    2. 'set' → logprob: -6.877614498138428
    3. ' range' → logprob: -7.377614498138428
    4. '(range' → logprob: -8.127614974975586
    5. 'sorted' → logprob: -8.627614974975586
    6. 'q' → logprob: -9.127614974975586
    7. 'l' → logprob: -9.252614974975586
    8. '[' → logprob: -9.502614974975586
    9. '[l' → logprob: -9.752614974975586
    10. 'list' → logprob: -10.002614974975586

Token 1116: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016247143503278494
    2. '(n' → logprob: -7.001624584197998
    3. '1' → logprob: -7.251624584197998
    4. 'n' → logprob: -13.001625061035156
    5. '(in' → logprob: -13.626625061035156
    6. ' (' → logprob: -15.626625061035156
    7. '   ' → logprob: -16.251625061035156
    8. '(
' → logprob: -16.376625061035156
    9. '(i' → logprob: -16.501625061035156
    10. 'from' → logprob: -16.876625061035156

Token 1117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04876233637332916
    2. 'n' → logprob: -3.048762321472168
    3. 'inf' → logprob: -8.798762321472168
    4. '0' → logprob: -11.048762321472168
    5. ' ' → logprob: -13.298762321472168
    6. '   ' → logprob: -13.673762321472168
    7. '(' → logprob: -14.048762321472168
    8. ' n' → logprob: -14.048762321472168
    9. '2' → logprob: -14.173762321472168
    10. '(n' → logprob: -14.298762321472168

Token 1118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036834771162830293
    2. ',n' → logprob: -8.125368118286133
    3. ',m' → logprob: -9.875368118286133
    4. ' ,' → logprob: -11.375368118286133
    5. ',
' → logprob: -11.750368118286133
    6. '   ' → logprob: -14.125368118286133
    7. ',len' → logprob: -16.250368118286133
    8. '(' → logprob: -16.375368118286133
    9. '(n' → logprob: -16.500368118286133
    10. 'm' → logprob: -16.500368118286133

Token 1119: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005548207554966211
    2. 'inf' → logprob: -7.750555038452148
    3. ' n' → logprob: -9.000555038452148
    4. ' inf' → logprob: -14.375555038452148
    5. '   ' → logprob: -15.750555038452148
    6. '	n' → logprob: -16.37555503845215
    7. 'in' → logprob: -17.75055503845215
    8. '
' → logprob: -18.50055503845215
    9. ' ' → logprob: -19.25055503845215
    10. '=n' → logprob: -19.25055503845215

Token 1120: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005276926793158054
    2. ' +' → logprob: -5.255277156829834
    3. ',' → logprob: -10.755276679992676
    4. '   ' → logprob: -11.505276679992676
    5. '+
' → logprob: -12.255276679992676
    6. '+n' → logprob: -12.255276679992676
    7. '+,' → logprob: -14.130276679992676
    8. '
' → logprob: -14.505276679992676
    9. 'n' → logprob: -15.380276679992676
    10. '()+' → logprob: -16.005277633666992

Token 1121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15266500413417816
    2. '   ' → logprob: -2.02766489982605
    3. ' i' → logprob: -5.027665138244629
    4. 'i' → logprob: -6.027665138244629
    5. ' while' → logprob: -7.402665138244629
    6. 'while' → logprob: -9.027665138244629
    7. '```' → logprob: -9.027665138244629
    8. ',' → logprob: -9.277665138244629
    9. ',i' → logprob: -11.902665138244629
    10. '	i' → logprob: -12.277665138244629

Token 1122: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.024350548163056374
    2. 'while' → logprob: -4.274350643157959
    3. '   ' → logprob: -5.399350643157959
    4. 'if' → logprob: -5.524350643157959
    5. '       ' → logprob: -6.774350643157959
    6. ' i' → logprob: -7.774350643157959
    7. ' while' → logprob: -10.0243501663208
    8. ' ' → logprob: -12.6493501663208
    9. '           ' → logprob: -12.7743501663208
    10. '  ' → logprob: -12.8993501663208

Token 1123: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006499481853097677
    2. '=' → logprob: -5.131499290466309
    3. ',i' → logprob: -8.006499290466309
    4. ' =' → logprob: -8.631499290466309
    5. ' ,' → logprob: -10.506499290466309
    6. '+=' → logprob: -11.506499290466309
    7. '=i' → logprob: -11.631499290466309
    8. ',q' → logprob: -12.131499290466309
    9. ',
' → logprob: -13.631499290466309
    10. ' +=' → logprob: -13.881499290466309

Token 1124: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.004078401252627373
    2. ' update' → logprob: -5.504078388214111
    3. '   ' → logprob: -17.754077911376953
    4. '  ' → logprob: -18.129077911376953
    5. '	update' → logprob: -18.254077911376953
    6. '(update' → logprob: -19.129077911376953
    7. ' ' → logprob: -19.504077911376953
    8. '.update' → logprob: -20.129077911376953
    9. '_update' → logprob: -21.254077911376953
    10. '       ' → logprob: -21.504077911376953

Token 1125: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0011717714369297028
    2. 'index' → logprob: -6.751171588897705
    3. 'Index' → logprob: -14.251172065734863
    4. 'i' → logprob: -14.376172065734863
    5. '_i' → logprob: -16.251171112060547
    6. '```' → logprob: -17.126171112060547
    7. 'q' → logprob: -17.501171112060547
    8. 'l' → logprob: -17.626171112060547
    9. '2' → logprob: -17.876171112060547
    10. '1' → logprob: -18.251171112060547

Token 1126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19716161489486694
    2. '2' → logprob: -2.0721616744995117
    3. '(l' → logprob: -2.9471616744995117
    4. '```' → logprob: -7.697161674499512
    5. 'l' → logprob: -9.822161674499512
    6. '(' → logprob: -11.072161674499512
    7. '(q' → logprob: -12.697161674499512
    8. '(i' → logprob: -13.197161674499512
    9. '   ' → logprob: -13.322161674499512
    10. 'while' → logprob: -13.697161674499512

Token 1127: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00014656837447546422
    2. '(' → logprob: -8.875146865844727
    3. '(
' → logprob: -12.500146865844727
    4. '```' → logprob: -13.000146865844727
    5. ',l' → logprob: -16.250146865844727
    6. '+l' → logprob: -16.375146865844727
    7. '(L' → logprob: -16.500146865844727
    8. ' (' → logprob: -16.875146865844727
    9. '(line' → logprob: -16.875146865844727
    10. '(ll' → logprob: -17.000146865844727

Token 1128: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.00014025058771949261
    2. ',' → logprob: -9.000140190124512
    3. 'r' → logprob: -12.000140190124512
    4. '(rc' → logprob: -12.625140190124512
    5. '_rc' → logprob: -12.875140190124512
    6. 'cr' → logprob: -13.750140190124512
    7. 'c' → logprob: -14.000140190124512
    8. '   ' → logprob: -14.375140190124512
    9. '```' → logprob: -14.500140190124512
    10. ')' → logprob: -14.875140190124512

Token 1129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00566141027957201
    2. ',l' → logprob: -5.255661487579346
    3. ',q' → logprob: -8.380661010742188
    4. '(l' → logprob: -9.130661010742188
    5. ',i' → logprob: -10.380661010742188
    6. ',
' → logprob: -11.255661010742188
    7. '(' → logprob: -11.505661010742188
    8. '(q' → logprob: -11.630661010742188
    9. '(i' → logprob: -12.255661010742188
    10. ' ,' → logprob: -12.755661010742188

Token 1130: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0206720617134124e-05
    2. ' i' → logprob: -11.50001049041748
    3. ')' → logprob: -17.500009536743164
    4. ')i' → logprob: -17.875009536743164
    5. '   ' → logprob: -18.750009536743164
    6. '	i' → logprob: -18.875009536743164
    7. ' ' → logprob: -19.875009536743164
    8. ',' → logprob: -20.125009536743164
    9. '
' → logprob: -20.625009536743164
    10. '_i' → logprob: -20.750009536743164

Token 1131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007061177166178823
    2. ',l' → logprob: -7.625706195831299
    3. ' ,' → logprob: -8.50070571899414
    4. ',i' → logprob: -12.50070571899414
    5. 'l' → logprob: -12.50070571899414
    6. ',n' → logprob: -13.00070571899414
    7. '```' → logprob: -13.50070571899414
    8. ')' → logprob: -14.12570571899414
    9. '+' → logprob: -14.75070571899414
    10. '   ' → logprob: -14.87570571899414

Token 1132: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -6.2729995988775045e-06
    2. ' l' → logprob: -12.000006675720215
    3. '	l' → logprob: -16.7500057220459
    4. '   ' → logprob: -17.0000057220459
    5. '       ' → logprob: -19.7500057220459
    6. ')' → logprob: -19.8750057220459
    7. '```' → logprob: -20.6250057220459
    8. '    ' → logprob: -21.1250057220459
    9. ' ' → logprob: -21.3750057220459
    10. ' ' → logprob: -21.7500057220459

Token 1133: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3198551833629608
    2. ')
' → logprob: -1.3198552131652832
    3. '       ' → logprob: -5.069855213165283
    4. ')
' → logprob: -9.694854736328125
    5. ')return' → logprob: -10.194854736328125
    6. ',' → logprob: -10.444854736328125
    7. '   ' → logprob: -10.569854736328125
    8. '<|end|>' → logprob: -10.569854736328125
    9. ')i' → logprob: -10.694854736328125
    10. ')

' → logprob: -11.319854736328125

Token 1134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8331656455993652
    2. ',' → logprob: -1.2081656455993652
    3. '   ' → logprob: -2.0831656455993652
    4. 'i' → logprob: -2.5831656455993652
    5. ' i' → logprob: -3.9581656455993652
    6. ',i' → logprob: -4.833165645599365
    7. '```' → logprob: -4.833165645599365
    8. ' while' → logprob: -4.958165645599365
    9. '<|end|>' → logprob: -5.083165645599365
    10. 'q' → logprob: -5.458165645599365

Token 1135: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.010229965671896935
    2. 'while' → logprob: -4.63523006439209
    3. 'if' → logprob: -8.76023006439209
    4. ' i' → logprob: -8.88523006439209
    5. '   ' → logprob: -9.51023006439209
    6. '(i' → logprob: -9.88523006439209
    7. '       ' → logprob: -10.76023006439209
    8. ' while' → logprob: -11.26023006439209
    9. 'for' → logprob: -11.76023006439209
    10. 'q' → logprob: -12.01023006439209

Token 1136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011437878711149096
    2. '=' → logprob: -7.126143932342529
    3. ',q' → logprob: -8.376143455505371
    4. ',i' → logprob: -9.626143455505371
    5. ',t' → logprob: -10.501143455505371
    6. ' ,' → logprob: -12.751143455505371
    7. ',j' → logprob: -13.126143455505371
    8. ',l' → logprob: -13.626143455505371
    9. ',n' → logprob: -13.751143455505371
    10. ' =' → logprob: -13.751143455505371

Token 1137: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.04858816787600517
    2. ' q' → logprob: -3.048588275909424
    3. '	q' → logprob: -15.548587799072266
    4. '[q' → logprob: -15.798587799072266
    5. 'update' → logprob: -16.298587799072266
    6. '(q' → logprob: -16.548587799072266
    7. '_q' → logprob: -16.548587799072266
    8. '
' → logprob: -17.173587799072266
    9. ' =' → logprob: -17.298587799072266
    10. '<|end|>' → logprob: -17.548587799072266

Token 1138: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967913061380386
    2. ' =' → logprob: -2.8119678497314453
    3. ',' → logprob: -15.311967849731445
    4. '=
' → logprob: -17.436967849731445
    5. '   ' → logprob: -17.811967849731445
    6. ' ' → logprob: -18.561967849731445
    7. '=q' → logprob: -18.686967849731445
    8. '＝' → logprob: -18.936967849731445
    9. '```' → logprob: -20.311967849731445
    10. ' =
' → logprob: -20.436967849731445

Token 1139: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.023246407508850098
    2. ' update' → logprob: -3.7732462882995605
    3. '   ' → logprob: -14.148246765136719
    4. '       ' → logprob: -16.52324676513672
    5. '	update' → logprob: -17.02324676513672
    6. ' ' → logprob: -17.77324676513672
    7. '(update' → logprob: -18.14824676513672
    8. '  ' → logprob: -18.52324676513672
    9. '    ' → logprob: -18.64824676513672
    10. '           ' → logprob: -19.14824676513672

Token 1140: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -2.816093228830141e-06
    2. 'index' → logprob: -13.37500286102295
    3. '_q' → logprob: -15.00000286102295
    4. '```' → logprob: -15.12500286102295
    5. '_update' → logprob: -15.12500286102295
    6. '_i' → logprob: -16.125001907348633
    7. '_' → logprob: -17.375001907348633
    8. '\' → logprob: -17.500001907348633
    9. 'q' → logprob: -17.625001907348633
    10. '2' → logprob: -17.625001907348633

Token 1141: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.5
    3. ' ' → logprob: -18.0
    4. '   ' → logprob: -18.5
    5. '２' → logprob: -18.5
    6. '_' → logprob: -18.8125
    7. '1' → logprob: -18.875
    8. '۲' → logprob: -19.5
    9. '(' → logprob: -19.8125
    10. '`' → logprob: -19.8125

Token 1142: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -14.375000953674316
    3. ' (' → logprob: -15.000000953674316
    4. '(
' → logprob: -16.375001907348633
    5. 'l' → logprob: -17.125001907348633
    6. '(' → logprob: -17.250001907348633
    7. ' l' → logprob: -17.750001907348633
    8. '	l' → logprob: -18.000001907348633
    9. '(L' → logprob: -18.500001907348633
    10. ',l' → logprob: -18.500001907348633

Token 1143: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -5.438573680294212e-06
    2. '(rc' → logprob: -12.250005722045898
    3. 'cr' → logprob: -15.500005722045898
    4. '_rc' → logprob: -15.750005722045898
    5. 'RC' → logprob: -16.3750057220459
    6. 'r' → logprob: -16.7500057220459
    7. 'c' → logprob: -17.5000057220459
    8. 'lc' → logprob: -17.6250057220459
    9. 'rl' → logprob: -18.5000057220459
    10. '(l' → logprob: -18.7500057220459

Token 1144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021300949156284332
    2. ',l' → logprob: -3.896301031112671
    3. '(l' → logprob: -7.271300792694092
    4. '(' → logprob: -10.89630126953125
    5. ',
' → logprob: -11.02130126953125
    6. ',i' → logprob: -11.89630126953125
    7. ')' → logprob: -12.14630126953125
    8. ' ,' → logprob: -12.89630126953125
    9. '[l' → logprob: -13.27130126953125
    10. '```' → logprob: -13.52130126953125

Token 1145: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009747825562953949
    2. ' i' → logprob: -4.7597479820251465
    3. 'l' → logprob: -6.8847479820251465
    4. ' l' → logprob: -9.384747505187988
    5. 'q' → logprob: -11.259747505187988
    6. '   ' → logprob: -12.384747505187988
    7. ' ' → logprob: -13.009747505187988
    8. '
' → logprob: -13.384747505187988
    9. ')' → logprob: -13.884747505187988
    10. '```' → logprob: -14.134747505187988

Token 1146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004669476300477982
    2. ',l' → logprob: -5.379669666290283
    3. ' ,' → logprob: -10.504669189453125
    4. ',q' → logprob: -11.379669189453125
    5. ' l' → logprob: -13.129669189453125
    6. 'l' → logprob: -13.129669189453125
    7. '(l' → logprob: -13.254669189453125
    8. '
' → logprob: -13.629669189453125
    9. ',
' → logprob: -13.754669189453125
    10. ')' → logprob: -14.004669189453125

Token 1147: ' l' (ID: 305)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.006001440342515707
    2. ' q' → logprob: -5.1310014724731445
    3. 'l' → logprob: -9.631001472473145
    4. ' l' → logprob: -13.506001472473145
    5. ')' → logprob: -13.881001472473145
    6. 'i' → logprob: -13.881001472473145
    7. '
' → logprob: -14.006001472473145
    8. ' ' → logprob: -14.506001472473145
    9. ',' → logprob: -14.756001472473145
    10. '	q' → logprob: -14.756001472473145

Token 1148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04910413920879364
    2. ',q' → logprob: -3.0491042137145996
    3. ' ,' → logprob: -7.7991042137146
    4. 'q' → logprob: -10.049103736877441
    5. ')' → logprob: -10.424103736877441
    6. ' q' → logprob: -10.674103736877441
    7. '```' → logprob: -12.674103736877441
    8. '   ' → logprob: -13.424103736877441
    9. ',i' → logprob: -13.674103736877441
    10. '
' → logprob: -14.049103736877441

Token 1149: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.003177952254191041
    2. ' q' → logprob: -5.753178119659424
    3. '	q' → logprob: -15.503177642822266
    4. '   ' → logprob: -17.378177642822266
    5. ')' → logprob: -18.003177642822266
    6. '[q' → logprob: -19.128177642822266
    7. '
' → logprob: -19.753177642822266
    8. '*q' → logprob: -20.003177642822266
    9. ',q' → logprob: -20.128177642822266
    10. '    ' → logprob: -20.378177642822266

Token 1150: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4854413568973541
    2. ')' → logprob: -0.9854413270950317
    3. '   ' → logprob: -4.485441207885742
    4. '       ' → logprob: -11.735441207885742
    5. ')
' → logprob: -12.235441207885742
    6. ')return' → logprob: -12.235441207885742
    7. ')

' → logprob: -12.485441207885742
    8. ' ' → logprob: -13.360441207885742
    9. ' )
' → logprob: -13.610441207885742
    10. ',' → logprob: -13.985441207885742

Token 1151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004389409441500902
    2. 'result' → logprob: -5.62938928604126
    3. ' result' → logprob: -7.75438928604126
    4. 'print' → logprob: -8.379389762878418
    5. 'return' → logprob: -10.004389762878418
    6. 'pf' → logprob: -10.254389762878418
    7. ' return' → logprob: -10.629389762878418
    8. '
' → logprob: -12.004389762878418
    9. ' print' → logprob: -12.379389762878418
    10. 'answer' → logprob: -12.879389762878418

Token 1152: ' result' (ID: 1534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8691349029541016
    2. 'print' → logprob: -0.8691349029541016
    3. 'result' (adapté à ' result') → logprob: -2.1191349029541016
    4. 'res' → logprob: -3.8691349029541016
    5. 'pf' → logprob: -4.369134902954102
    6. 'return' → logprob: -4.994134902954102
    7. 'ans' → logprob: -7.744134902954102
    8. 'answer' → logprob: -8.619134902954102
    9. '```' → logprob: -9.994134902954102
    10. 'ret' → logprob: -10.119134902954102

Token 1153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141568779945374
    2. '=' → logprob: -1.7014156579971313
    3. ' ' → logprob: -14.201416015625
    4. ',' → logprob: -14.826416015625
    5. '	' → logprob: -14.826416015625
    6. ':' → logprob: -15.201416015625
    7. ' =
' → logprob: -15.826416015625
    8. '_' → logprob: -15.826416015625
    9. ')' → logprob: -16.076416015625
    10. ' ' → logprob: -16.201416015625

Token 1154: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.0009119403548538685
    2. ' calc' → logprob: -7.000911712646484
    3. '(calc' → logprob: -14.875911712646484
    4. 'cal' → logprob: -17.625911712646484
    5. '.calc' → logprob: -19.250911712646484
    6. '
' → logprob: -19.375911712646484
    7. 'calculate' → logprob: -20.375911712646484
    8. '   ' → logprob: -20.625911712646484
    9. '_calc' → logprob: -21.125911712646484
    10. 'Calc' → logprob: -22.500911712646484

Token 1155: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.125
    3. '_res' → logprob: -16.875
    4. 'result' → logprob: -17.0
    5. ' _' → logprob: -17.75
    6. '_results' → logprob: -18.625
    7. '_RESULT' → logprob: -18.875
    8. '_
' → logprob: -19.0
    9. '__' → logprob: -19.5
    10. '```' → logprob: -19.75

Token 1156: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.750001907348633
    3. '(
' → logprob: -15.375001907348633
    4. ' (' → logprob: -15.875001907348633
    5. '```' → logprob: -17.000001907348633
    6. '
' → logprob: -17.500001907348633
    7. '[q' → logprob: -18.250001907348633
    8. '(query' → logprob: -18.375001907348633
    9. '(qu' → logprob: -18.375001907348633
    10. '   ' → logprob: -18.750001907348633

Token 1157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20787061750888824
    2. '(q' → logprob: -1.707870602607727
    3. ',q' → logprob: -5.0828704833984375
    4. '(' → logprob: -8.457870483398438
    5. ',
' → logprob: -12.207870483398438
    6. ' ,' → logprob: -12.582870483398438
    7. '   ' → logprob: -12.582870483398438
    8. ')' → logprob: -12.832870483398438
    9. '(n' → logprob: -12.957870483398438
    10. ',(' → logprob: -13.582870483398438

Token 1158: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002613358374219388
    2. ' n' → logprob: -8.250261306762695
    3. ')n' → logprob: -19.375261306762695
    4. '   ' → logprob: -19.500261306762695
    5. '	n' → logprob: -19.625261306762695
    6. ')' → logprob: -22.500261306762695
    7. '
' → logprob: -22.625261306762695
    8. '(n' → logprob: -23.125261306762695
    9. '_n' → logprob: -23.625261306762695
    10. ',n' → logprob: -24.750261306762695

Token 1159: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.014288906939327717
    2. ')' → logprob: -4.264288902282715
    3. '())
' → logprob: -9.514288902282715
    4. '()
' → logprob: -10.764288902282715
    5. '()' → logprob: -11.139288902282715
    6. '   ' → logprob: -11.389288902282715
    7. ')
' → logprob: -12.639288902282715
    8. ' )
' → logprob: -14.389288902282715
    9. '())' → logprob: -14.639288902282715
    10. ')

' → logprob: -16.01428985595703

Token 1160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009713716572150588
    2. '
' → logprob: -7.62597131729126
    3. '```' → logprob: -8.500971794128418
    4. '    
' → logprob: -8.625971794128418
    5. '<|end|>' → logprob: -9.875971794128418
    6. ' return' → logprob: -10.875971794128418
    7. '	return' → logprob: -12.000971794128418
    8. 'return' → logprob: -12.375971794128418
    9. 'pf' → logprob: -12.500971794128418
    10. ')' → logprob: -12.875971794128418

Token 1161: ' return' (ID: 622)
  Prédit: 'pf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pf' → logprob: -0.0029897091444581747
    2. 'print' → logprob: -6.752989768981934
    3. '   ' → logprob: -7.127989768981934
    4. 'return' (adapté à ' return') → logprob: -7.127989768981934
    5. ' pf' → logprob: -8.502989768981934
    6. '```' → logprob: -12.377989768981934
    7. ' return' → logprob: -12.627989768981934
    8. '
' → logprob: -13.002989768981934
    9. '    
' → logprob: -16.127988815307617
    10. '_pf' → logprob: -16.127988815307617

Token 1162: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00020354038861114532
    2. ' result' → logprob: -8.500203132629395
    3. 'print' → logprob: -16.75020408630371
    4. '(result' → logprob: -19.12520408630371
    5. '	result' → logprob: -22.00020408630371
    6. 'pf' → logprob: -23.50020408630371
    7. '$result' → logprob: -23.50020408630371
    8. 'return' → logprob: -23.87520408630371
    9. '[result' → logprob: -24.25020408630371
    10. 'results' → logprob: -25.12520408630371

Token 1163: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.418998658657074
    2. 'def' → logprob: -1.5439987182617188
    3. 'print' → logprob: -2.5439987182617188
    4. '<|end|>' → logprob: -3.1689987182617188
    5. '#' → logprob: -5.668998718261719
    6. '```' → logprob: -6.168998718261719
    7. ' if' → logprob: -7.293998718261719
    8. '<|end|>' → logprob: -7.668998718261719
    9. '
' → logprob: -7.793998718261719
    10. 'result' → logprob: -8.043998718261719

Token 1164: 'print' (ID: 1598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3136817514896393
    2. 'print' → logprob: -1.313681721687317
    3. 'def' → logprob: -8.188681602478027
    4. ' if' → logprob: -10.063681602478027
    5. '#' → logprob: -10.188681602478027
    6. '```' → logprob: -10.313681602478027
    7. 'result' → logprob: -11.063681602478027
    8. '<|end|>' → logprob: -11.938681602478027
    9. ' print' → logprob: -13.438681602478027
    10. '#print' → logprob: -14.188681602478027

Token 1165: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.25197088718414307
    2. '(' → logprob: -1.501970887184143
    3. '('' → logprob: -10.626971244812012
    4. '(
' → logprob: -12.126971244812012
    5. '(`' → logprob: -13.126971244812012
    6. '(wrapper' → logprob: -13.251971244812012
    7. '()' → logprob: -13.376971244812012
    8. '("("' → logprob: -13.751971244812012
    9. '(()' → logprob: -13.876971244812012
    10. '(W' → logprob: -14.376971244812012

Token 1166: 'rapped' (ID: 112944)
  Prédit: 'rapped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rapped' → logprob: -0.00012570773833431304
    2. 'wrapped' → logprob: -9.000125885009766
    3. 'rap' → logprob: -13.500125885009766
    4. 'apped' → logprob: -14.750125885009766
    5. 'r' → logprob: -15.125125885009766
    6. 'Wrapped' → logprob: -16.375125885009766
    7. ' wrapped' → logprob: -17.125125885009766
    8. 'rapper' → logprob: -17.250125885009766
    9. '(' → logprob: -19.250125885009766
    10. 'raph' → logprob: -20.125125885009766

Token 1167: '_main' (ID: 23076)
  Prédit: '_main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_main' → logprob: 0.0
    2. ')_' → logprob: -17.625
    3. '```' → logprob: -19.875
    4. 'main' → logprob: -20.25
    5. '"_' → logprob: -20.5
    6. ' _' → logprob: -20.875
    7. '_MAIN' → logprob: -21.125
    8. '__' → logprob: -21.25
    9. '
' → logprob: -21.25
    10. ''_' → logprob: -21.5

Token 1168: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0003361774142831564
    2. '()' → logprob: -8.000336647033691
    3. '()
' → logprob: -15.250336647033691
    4. '())
' → logprob: -15.500336647033691
    5. '();)' → logprob: -16.750335693359375
    6. ')' → logprob: -16.875335693359375
    7. ' ())' → logprob: -17.000335693359375
    8. '(' → logprob: -17.000335693359375
    9. '().' → logprob: -17.750335693359375
    10. '()`' → logprob: -17.875335693359375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1166
Tokens correctement prédits (1ère position, stricte): 486
Tokens correctement prédits (1ère position, avec adaptation): 526
Tokens correctement prédits (top 10): 967
Précision stricte (1ère position): 41.68%
Précision adaptée (1ère position): 45.11%
Précision (top 10): 82.93%
================================================================================
