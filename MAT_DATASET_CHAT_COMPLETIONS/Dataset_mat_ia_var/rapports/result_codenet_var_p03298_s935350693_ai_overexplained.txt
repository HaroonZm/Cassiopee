================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Importation du module Counter à partir de collections pour compter les occurrences d'éléments hachables
from collections import Counter
# Importation de product à partir de itertools pour générer le produit cartésien de plusieurs itérables,
# ce qui permet de parcourir toutes les combinaisons possibles de 0 et 1 pour N éléments
from itertools import product

# Lecture d'un entier N depuis l'entrée standard. La fonction input() collecte l'entrée de l'utilisateur sous forme de chaîne.
# int() convertit cette chaîne en un entier.
N = int(input())

# Lecture d'une chaîne de caractères comme entrée. input() retourne une chaîne,
# list() transforme chaque caractère de cette chaîne en un élément de liste : ['a', 'b', 'c']
S = list(input())

# Prendre la partie droite de la chaîne en considérant les caractères depuis l'indice N jusqu'à la fin.
# reversed() retourne un itérable qui lit la séquence à l'envers.
# list() transforme cet itérable en une liste de caractères inversée.
# Cela permet de traiter la moitié droite de S, mais en la lisant de droite à gauche.
S_rev = list(reversed(S[N:]))

# Création d'une liste vide pour stocker toutes les manières de diviser la moitié gauche (première moitié des caractères)
# en deux groupes différents (par exemple, "rouge" et "bleu").
leftlist = []

# Même chose pour la moitié droite, pour stocker toutes les combinaisons possibles de répartition de cette moitié en deux groupes.
rightlist = []

# Parcours de toutes les combinaisons possibles pour N éléments où chaque élément peut être 0 ou 1.
# range(2) produit les valeurs 0 et 1.
# repeat=N pour obtenir toutes les suites de longueur N de 0 et 1.
# product() va donc générer toutes les répartitions possibles.
# Par exemple, pour N=2 : (0,0), (0,1), (1,0), (1,1)
for bit in product(range(2), repeat=N):
    # Initialisation des chaînes de caractères vides pour les groupes "rouge" et "bleu" de la moitié gauche.
    red_left = ''
    blue_left = ''
    # Initialisation des chaînes de caractères vides pour les groupes "rouge" et "bleu" de la moitié droite (mais dans le sens inversé).
    red_right = ''
    blue_right = ''

    # Parcours de chaque position possible dans la moitié du tableau, c'est-à-dire de 0 à N-1
    for j in range(N):
        # Si à la position j, le bit vaut 1, alors :
        if bit[j] == 1:
            # On ajoute le caractère de la moitié gauche à la chaîne "rouge" côté gauche
            red_left += S[j]
            # On ajoute le caractère du même rang dans la moitié droite inversée à la chaîne "bleue" côté droit
            blue_right += S_rev[j]
        else:
            # Sinon, le caractère de la moitié gauche va dans la chaîne "bleue" côté gauche
            blue_left += S[j]
            # Et le caractère associé de la moitié droite inversée va dans la chaîne "rouge" côté droit
            red_right += S_rev[j]

    # On combine les deux groupes ("rouge" et "bleu") de la moitié gauche séparés par "|" et on les ajoute à la liste leftlist
    leftlist.append("".join(red_left + "|" + blue_left))
    # On combine les deux groupes ("bleu" et "rouge") de la moitié droite séparés par "|" (l'ordre est inversé par rapport à la gauche)
    rightlist.append("".join(blue_right + "|" + red_right))

# Utilisation de Counter pour compter le nombre d'occurrences de chaque façon de répartir la moitié gauche
left = Counter(leftlist)
# Idem pour la moitié droite
right = Counter(rightlist)

# Initialisation de la variable qui va contenir la réponse finale.
answer = 0

# Parcours de chaque manière distincte de répartir la moitié gauche, ainsi que de leur nombre d'occurrences
for key, value in left.items():
    # Pour chaque tel "key" (combinaison de répartition), on multiplie le nombre de façons dont on l'obtient dans la moitié gauche (value)
    # par le nombre de façons où la moitié droite a la même répartition (right[key]).
    # Cela donne le nombre de combinaisons globales où la répartition est identique sur les deux moitiés
    answer += value * right[key]

# Affichage de la réponse calculée, c'est-à-dire le nombre total de combinaisons correspondantes
print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Import' (ID: 19998)
  → Token d'amorce (pas de prédiction)

Token 2: 'ation' (ID: 387)
  → Token d'amorce (pas de prédiction)

Token 3: ' du' (ID: 1462)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07076609879732132
    2. 'import' → logprob: -3.6957662105560303
    3. '```' → logprob: -3.8207662105560303
    4. '_' → logprob: -4.195765972137451
    5. '`' → logprob: -6.570765972137451
    6. '.' → logprob: -6.695765972137451
    7. ' ' → logprob: -6.695765972137451
    8. '#' → logprob: -7.695765972137451
    9. ',' → logprob: -7.820765972137451
    10. '=' → logprob: -8.19576644897461

Token 4: ' module' (ID: 8827)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06892605870962143
    2. '_' → logprob: -3.4439260959625244
    3. ''' → logprob: -4.068925857543945
    4. '  ' → logprob: -6.068925857543945
    5. '[' → logprob: -6.193925857543945
    6. 's' → logprob: -6.443925857543945
    7. 'import' → logprob: -6.568925857543945
    8. '.' → logprob: -6.818925857543945
    9. '```' → logprob: -7.068925857543945
    10. ''s' → logprob: -7.318925857543945

Token 5: ' Counter' (ID: 32251)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8134440183639526
    2. '```' → logprob: -1.3134440183639526
    3. ' import' → logprob: -2.063444137573242
    4. '`' → logprob: -2.688444137573242
    5. ':' → logprob: -3.063444137573242
    6. 's' → logprob: -4.938444137573242
    7. '.' → logprob: -5.063444137573242
    8. ' ' → logprob: -5.188444137573242
    9. ' :' → logprob: -5.313444137573242
    10. ' `' → logprob: -5.438444137573242

Token 6: ' à' (ID: 1221)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.01640465296804905
    2. '```' → logprob: -4.891404628753662
    3. ' from' → logprob: -5.016404628753662
    4. ',' → logprob: -6.891404628753662
    5. ':' → logprob: -8.26640510559082
    6. '`' → logprob: -8.26640510559082
    7. 'f' → logprob: -8.64140510559082
    8. '.' → logprob: -9.26640510559082
    9. '(' → logprob: -9.89140510559082
    10. '#' → logprob: -10.14140510559082

Token 7: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.952564001083374
    2. 'collections' → logprob: -1.077564001083374
    3. ' collections' → logprob: -1.327564001083374
    4. 'from' → logprob: -5.452564239501953
    5. ' from' → logprob: -6.327564239501953
    6. 'part' → logprob: -6.952564239501953
    7. ' ' → logprob: -7.327564239501953
    8. ' collection' → logprob: -7.952564239501953
    9. 'collection' → logprob: -8.452564239501953
    10. ' ' → logprob: -9.077564239501953

Token 8: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.04265576973557472
    2. ' ' → logprob: -3.6676557064056396
    3. 'de' → logprob: -5.417655944824219
    4. 'from' → logprob: -5.792655944824219
    5. ' from' → logprob: -5.792655944824219
    6. ' collections' → logprob: -6.167655944824219
    7. 'collections' → logprob: -6.792655944824219
    8. ' des' → logprob: -6.792655944824219
    9. ' d' → logprob: -7.542655944824219
    10. ' ' → logprob: -8.042655944824219

Token 9: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0004025481757707894
    2. ' collections' → logprob: -7.875402450561523
    3. '```' → logprob: -11.375402450561523
    4. 'from' → logprob: -12.250402450561523
    5. 'collection' → logprob: -12.500402450561523
    6. ' ' → logprob: -13.875402450561523
    7. 'col' → logprob: -14.375402450561523
    8. '.collections' → logprob: -15.000402450561523
    9. '`' → logprob: -15.500402450561523
    10. 'collect' → logprob: -16.000402450561523

Token 10: ' pour' (ID: 1930)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.009080125950276852
    2. ' from' → logprob: -4.884079933166504
    3. '```' → logprob: -6.634079933166504
    4. 'f' → logprob: -9.884079933166504
    5. ',' → logprob: -10.384079933166504
    6. '`' → logprob: -10.759079933166504
    7. ' ' → logprob: -11.634079933166504
    8. '.' → logprob: -11.634079933166504
    9. 'fr' → logprob: -12.009079933166504
    10. '	from' → logprob: -12.009079933166504

Token 11: ' compter' (ID: 81694)
  Prédit: ' compter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compter' → logprob: -0.17821143567562103
    2. ' collections' → logprob: -2.8032114505767822
    3. 'comp' → logprob: -2.9282114505767822
    4. 'collections' → logprob: -3.3032114505767822
    5. 'com' → logprob: -4.928211212158203
    6. ' collection' → logprob: -7.178211212158203
    7. ' compt' → logprob: -7.178211212158203
    8. 'collection' → logprob: -7.678211212158203
    9. ' collect' → logprob: -7.803211212158203
    10. 'collect' → logprob: -7.928211212158203

Token 12: ' les' (ID: 1341)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5444406867027283
    2. ' de' → logprob: -1.419440746307373
    3. ' des' → logprob: -2.544440746307373
    4. ' from' → logprob: -2.919440746307373
    5. '_' → logprob: -4.669440746307373
    6. 'des' → logprob: -5.044440746307373
    7. 'import' → logprob: -5.044440746307373
    8. ' ' → logprob: -5.044440746307373
    9. 'de' → logprob: -5.919440746307373
    10. ',' → logprob: -6.044440746307373

Token 13: ' occurrences' (ID: 108073)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.21175293624401093
    2. ' occurrences' → logprob: -2.8367528915405273
    3. ' éléments' → logprob: -3.4617528915405273
    4. ' fré' → logprob: -3.4617528915405273
    5. ' ' → logprob: -3.5867528915405273
    6. 'occ' → logprob: -4.336752891540527
    7. 'fr' → logprob: -4.586752891540527
    8. ' mots' → logprob: -5.711752891540527
    9. ' fréquence' → logprob: -6.086752891540527
    10. 'occur' → logprob: -6.086752891540527

Token 14: ' d' (ID: 272)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.03707967326045036
    2. ' from' → logprob: -4.037079811096191
    3. '```' → logprob: -4.662079811096191
    4. '.' → logprob: -5.287079811096191
    5. ',' → logprob: -6.162079811096191
    6. ':' → logprob: -7.537079811096191
    7. '`' → logprob: -8.162079811096191
    8. ' ' → logprob: -8.287079811096191
    9. 'de' → logprob: -8.662079811096191
    10. '.from' → logprob: -8.912079811096191

Token 15: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20949149131774902
    2. 'e' → logprob: -2.459491491317749
    3. 'u' → logprob: -3.459491491317749
    4. ''une' → logprob: -3.959491491317749
    5. ''u' → logprob: -4.709491729736328
    6. 'a' → logprob: -4.834491729736328
    7. ''un' → logprob: -4.959491729736328
    8. ' ' → logprob: -5.084491729736328
    9. ' e' → logprob: -5.459491729736328
    10. ''ex' → logprob: -5.584491729736328

Token 16: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.09769639372825623
    2. 'collections' → logprob: -2.972696304321289
    3. 'a' → logprob: -4.722696304321289
    4. ' éléments' → logprob: -5.097696304321289
    5. 'é' → logprob: -5.097696304321289
    6. 'obj' → logprob: -5.597696304321289
    7. 'une' → logprob: -5.972696304321289
    8. ''' → logprob: -6.097696304321289
    9. 'elements' → logprob: -6.472696304321289
    10. ' collections' → logprob: -6.472696304321289

Token 17: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.01719026081264019
    2. 'm' → logprob: -4.142190456390381
    3. 'ment' → logprob: -6.892190456390381
    4. '```' → logprob: -9.892189979553223
    5. 'ements' → logprob: -10.267189979553223
    6. 'me' → logprob: -11.267189979553223
    7. 'men' → logprob: -11.392189979553223
    8. 'v' → logprob: -11.767189979553223
    9. 'nements' → logprob: -12.767189979553223
    10. 'mé' → logprob: -13.017189979553223

Token 18: ' h' (ID: 312)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.03421160578727722
    2. ' from' → logprob: -3.9092116355895996
    3. '```' → logprob: -4.5342116355896
    4. ',' → logprob: -6.7842116355896
    5. '.' → logprob: -7.1592116355896
    6. 'f' → logprob: -8.034211158752441
    7. ':' → logprob: -9.159211158752441
    8. '`' → logprob: -9.284211158752441
    9. 'fr' → logprob: -9.534211158752441
    10. ' ' → logprob: -9.534211158752441

Token 19: 'ach' (ID: 678)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7402051687240601
    2. 'from' → logprob: -1.36520516872406
    3. 'élé' → logprob: -1.99020516872406
    4. 'a' → logprob: -2.6152052879333496
    5. 's' → logprob: -4.36520528793335
    6. 'é' → logprob: -4.86520528793335
    7. '```' → logprob: -5.36520528793335
    8. 'i' → logprob: -5.36520528793335
    9. 'elements' → logprob: -5.49020528793335
    10. ')' → logprob: -5.86520528793335

Token 20: 'ables' (ID: 3232)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5713522434234619
    2. 'és' → logprob: -0.9463522434234619
    3. 'able' → logprob: -3.821352243423462
    4. 'ables' → logprob: -4.196352005004883
    5. 'e' → logprob: -6.071352005004883
    6. '```' → logprob: -6.071352005004883
    7. 'ées' → logprob: -6.446352005004883
    8. 'a' → logprob: -6.571352005004883
    9. 'abl' → logprob: -7.071352005004883
    10. 'ée' → logprob: -7.571352005004883

Token 21: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.02350902557373047
    2. '```' → logprob: -4.2735090255737305
    3. ' from' → logprob: -5.0235090255737305
    4. 'f' → logprob: -7.0235090255737305
    5. '.' → logprob: -7.2735090255737305
    6. ',' → logprob: -7.5235090255737305
    7. 'fr' → logprob: -8.27350902557373
    8. '\' → logprob: -9.64850902557373
    9. ':' → logprob: -9.89850902557373
    10. 'import' → logprob: -10.02350902557373

Token 22: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0743393525481224
    2. ' from' → logprob: -3.4493393898010254
    3. '.' → logprob: -4.074339389801025
    4. '```' → logprob: -4.449339389801025
    5. ',' → logprob: -4.949339389801025
    6. ' ' → logprob: -6.699339389801025
    7. 'import' → logprob: -6.949339389801025
    8. '\' → logprob: -8.074338912963867
    9. 'a' → logprob: -8.199338912963867
    10. ':' → logprob: -8.199338912963867

Token 23: ' collections' (ID: 22690)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.693274199962616
    2. ' collections' → logprob: -0.693274199962616
    3. 'collections' → logprob: -9.81827449798584
    4. ' ' → logprob: -9.94327449798584
    5. ' collection' → logprob: -11.81827449798584
    6. ' space' → logprob: -12.06827449798584
    7. ' ﻿' → logprob: -12.19327449798584
    8. ' cole' → logprob: -13.44327449798584
    9. ' colle' → logprob: -14.06827449798584
    10. '  ' → logprob: -14.31827449798584

Token 24: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.14382341504096985
    2. 'import' → logprob: -2.0188233852386475
    3. '.' → logprob: -7.018823623657227
    4. '.import' → logprob: -8.768823623657227
    5. ' ' → logprob: -9.893823623657227
    6. '.collections' → logprob: -10.893823623657227
    7. ' .' → logprob: -11.893823623657227
    8. 'collections' → logprob: -12.643823623657227
    9. '	import' → logprob: -12.768823623657227
    10. ' imports' → logprob: -13.018823623657227

Token 25: ' Counter' (ID: 32251)
  Prédit: ' Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.0007174347410909832
    2. 'Counter' → logprob: -7.250717639923096
    3. '.Counter' → logprob: -12.000717163085938
    4. ' counter' → logprob: -14.125717163085938
    5. ' Coun' → logprob: -15.250717163085938
    6. ' ' → logprob: -16.000717163085938
    7. ' ' → logprob: -16.375717163085938
    8. ' defaultdict' → logprob: -16.625717163085938
    9. '_counter' → logprob: -16.750717163085938
    10. ' Count' → logprob: -18.500717163085938

Token 26: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1925415992736816
    2. '.' → logprob: -1.3175415992736816
    3. '

' → logprob: -2.0675415992736816
    4. ' ' → logprob: -2.1925415992736816
    5. '\' → logprob: -2.8175415992736816
    6. '' → logprob: -3.3175415992736816
    7. '\n' → logprob: -4.067541599273682
    8. ' 

' → logprob: -4.192541599273682
    9. '<|end|>' → logprob: -4.317541599273682
    10. ',' → logprob: -4.442541599273682

Token 27: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5418949127197266
    2. '

' → logprob: -1.1668949127197266
    3. '\n' → logprob: -2.7918949127197266
    4. '' → logprob: -4.666894912719727
    5. 'a' → logprob: -5.416894912719727
    6. '#' → logprob: -5.416894912719727
    7. ' 

' → logprob: -5.541894912719727
    8. '\' → logprob: -5.666894912719727
    9. 'import' → logprob: -5.666894912719727
    10. 'newline' → logprob: -6.166894912719727

Token 28: ' Import' (ID: 19998)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01865459233522415
    2. ' #' → logprob: -4.643654823303223
    3. ' def' → logprob: -5.893654823303223
    4. '#' → logprob: -6.393654823303223
    5. 'def' → logprob: -6.768654823303223
    6. ' import' → logprob: -7.768654823303223
    7. ' space' → logprob: -7.893654823303223
    8. ' 

' → logprob: -8.018654823303223
    9. ' ' → logprob: -8.143654823303223
    10. ' collections' → logprob: -8.393654823303223

Token 29: 'ation' (ID: 387)
  Prédit: ' pandas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pandas' → logprob: -1.0832993984222412
    2. ' des' → logprob: -1.5832993984222412
    3. ' os' → logprob: -2.083299398422241
    4. ' ' → logprob: -2.583299398422241
    5. ' math' → logprob: -2.833299398422241
    6. ' numpy' → logprob: -3.083299398422241
    7. ' json' → logprob: -3.583299398422241
    8. ' random' → logprob: -3.583299398422241
    9. ' re' → logprob: -3.833299398422241
    10. ' datetime' → logprob: -4.45829963684082

Token 30: ' de' (ID: 334)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.7877177596092224
    2. ' ' → logprob: -1.0377178192138672
    3. ' des' → logprob: -2.662717819213867
    4. ' math' → logprob: -3.537717819213867
    5. ' pandas' → logprob: -3.912717819213867
    6. ' de' → logprob: -4.037717819213867
    7. ' json' → logprob: -4.537717819213867
    8. ' datetime' → logprob: -5.037717819213867
    9. ' from' → logprob: -5.162717819213867
    10. ' itertools' → logprob: -5.537717819213867

Token 31: ' product' (ID: 1888)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6507951021194458
    2. ' itertools' → logprob: -1.1507951021194458
    3. ' os' → logprob: -2.9007949829101562
    4. ' random' → logprob: -3.1507949829101562
    5. ' re' → logprob: -3.5257949829101562
    6. ' json' → logprob: -4.400794982910156
    7. ' pandas' → logprob: -5.275794982910156
    8. ' string' → logprob: -5.900794982910156
    9. ' typing' → logprob: -6.025794982910156
    10. ' collections' → logprob: -6.150794982910156

Token 32: ' à' (ID: 1221)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.5248507261276245
    2. 'from' → logprob: -0.8998507261276245
    3. ' ' → logprob: -7.524850845336914
    4. '<|end|>' → logprob: -7.524850845336914
    5. ' itertools' → logprob: -8.649850845336914
    6. ',' → logprob: -9.149850845336914
    7. 's' → logprob: -9.399850845336914
    8. 'import' → logprob: -9.649850845336914
    9. '<|end|>' → logprob: -10.649850845336914
    10. ' de' → logprob: -10.774850845336914

Token 33: ' partir' (ID: 12100)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.0002622894535306841
    2. 'it' → logprob: -8.250262260437012
    3. ' ' → logprob: -14.250262260437012
    4. 'import' → logprob: -16.000263214111328
    5. '  ' → logprob: -16.250263214111328
    6. 'iter' → logprob: -17.000263214111328
    7. ' functools' → logprob: -17.000263214111328
    8. ' iter' → logprob: -17.500263214111328
    9. ' math' → logprob: -17.500263214111328
    10. 'from' → logprob: -17.500263214111328

Token 34: ' de' (ID: 334)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.003123883157968521
    2. ' from' → logprob: -6.253123760223389
    3. 'from' → logprob: -6.878123760223389
    4. ' math' → logprob: -10.253124237060547
    5. ' ' → logprob: -10.753124237060547
    6. '<|end|>' → logprob: -10.753124237060547
    7. ' import' → logprob: -10.878124237060547
    8. 'import' → logprob: -11.253124237060547
    9. '  ' → logprob: -11.628124237060547
    10. ' sklearn' → logprob: -12.003124237060547

Token 35: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.25193870067596436
    2. ' itertools' → logprob: -1.5019387006759644
    3. 'iter' → logprob: -12.251938819885254
    4. 'import' → logprob: -12.376938819885254
    5. ' ' → logprob: -15.001938819885254
    6. 'math' → logprob: -16.251937866210938
    7. '  ' → logprob: -16.376937866210938
    8. '_it' → logprob: -16.876937866210938
    9. '`' → logprob: -17.001937866210938
    10. 'collections' → logprob: -17.251937866210938

Token 36: ' pour' (ID: 1930)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.5800141096115112
    2. 'from' → logprob: -0.8300141096115112
    3. ' ' → logprob: -6.705014228820801
    4. 'import' → logprob: -6.830014228820801
    5. ' import' → logprob: -6.830014228820801
    6. ',' → logprob: -7.455014228820801
    7. ' ,' → logprob: -10.5800142288208
    8. ' product' → logprob: -11.2050142288208
    9. '```' → logprob: -11.2050142288208
    10. ' (' → logprob: -11.9550142288208

Token 37: ' génér' (ID: 18939)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.058928512036800385
    2. 'product' → logprob: -3.1839284896850586
    3. ' itertools' → logprob: -4.183928489685059
    4. ' ' → logprob: -8.558928489685059
    5. ' import' → logprob: -9.558928489685059
    6. ' produire' → logprob: -9.683928489685059
    7. ' produit' → logprob: -10.433928489685059
    8. 'per' → logprob: -10.558928489685059
    9. 'import' → logprob: -10.683928489685059
    10. ' cart' → logprob: -10.933928489685059

Token 38: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.285971462726593
    2. 'ate' → logprob: -1.5359714031219482
    3. 'ateur' → logprob: -4.035971641540527
    4. 'ator' → logprob: -4.410971641540527
    5. 'a' → logprob: -6.660971641540527
    6. 'at' → logprob: -7.160971641540527
    7. 'ater' → logprob: -7.160971641540527
    8. 'érer' → logprob: -9.160971641540527
    9. 'ateurs' → logprob: -9.410971641540527
    10. 'from' → logprob: -9.410971641540527

Token 39: ' le' (ID: 505)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3196950852870941
    2. ' ' → logprob: -1.4446951150894165
    3. 'des' → logprob: -4.194694995880127
    4. ' les' → logprob: -4.819694995880127
    5. ' l' → logprob: -5.819694995880127
    6. '  ' → logprob: -6.069694995880127
    7. 's' → logprob: -6.319694995880127
    8. ' itertools' → logprob: -6.569694995880127
    9. 'l' → logprob: -6.819694995880127
    10. '<|end|>' → logprob: -7.444694995880127

Token 40: ' produit' (ID: 29429)
  Prédit: ' produit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' produit' → logprob: -0.21560150384902954
    2. ' ' → logprob: -1.8406014442443848
    3. ' product' → logprob: -3.5906014442443848
    4. ' produits' → logprob: -6.090601444244385
    5. 's' → logprob: -6.215601444244385
    6. ' espaces' → logprob: -6.840601444244385
    7. ' espace' → logprob: -7.965601444244385
    8. 'produ' → logprob: -7.965601444244385
    9. ' itertools' → logprob: -8.090601921081543
    10. ' space' → logprob: -8.090601921081543

Token 41: ' cart' (ID: 8149)
  Prédit: '_cart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cart' → logprob: -0.7206343412399292
    2. ' cart' → logprob: -0.9706343412399292
    3. 'from' → logprob: -2.8456344604492188
    4. ' Cartesian' → logprob: -3.5956344604492188
    5. 'cart' → logprob: -3.7206344604492188
    6. '_' → logprob: -4.470634460449219
    7. ' from' → logprob: -5.095634460449219
    8. 'Cartesian' → logprob: -6.095634460449219
    9. 'import' → logprob: -7.345634460449219
    10. ' ' → logprob: -7.345634460449219

Token 42: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.02364862523972988
    2. 'es' → logprob: -3.773648738861084
    3. 'esian' → logprob: -8.398648262023926
    4. 'e' → logprob: -9.898648262023926
    5. '```' → logprob: -10.148648262023926
    6. '_' → logprob: -10.523648262023926
    7. 'esion' → logprob: -11.023648262023926
    8. '_es' → logprob: -11.648648262023926
    9. 'é' → logprob: -12.148648262023926
    10. 'esi' → logprob: -12.273648262023926

Token 43: 'ien' (ID: 847)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.02509288117289543
    2. 'ien' → logprob: -4.525093078613281
    3. '```' → logprob: -5.775093078613281
    4. 'é' → logprob: -5.900093078613281
    5. 's' → logprob: -5.900093078613281
    6. 't' → logprob: -7.150093078613281
    7. '#' → logprob: -7.525093078613281
    8. 'i' → logprob: -7.650093078613281
    9. 'es' → logprob: -7.900093078613281
    10. '%' → logprob: -8.150093078613281

Token 44: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.34754323959350586
    2. ' from' → logprob: -1.3475432395935059
    3. ' de' → logprob: -4.472543239593506
    4. 'import' → logprob: -4.847543239593506
    5. ' import' → logprob: -5.097543239593506
    6. ' ' → logprob: -5.222543239593506
    7. ',' → logprob: -7.097543239593506
    8. ' des' → logprob: -7.597543239593506
    9. '```' → logprob: -7.722543239593506
    10. ' ,' → logprob: -7.847543239593506

Token 45: ' plusieurs' (ID: 20875)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.004683476407080889
    2. ' sequences' → logprob: -6.379683494567871
    3. ' iter' → logprob: -7.379683494567871
    4. ' l' → logprob: -7.379683494567871
    5. ' lists' → logprob: -7.754683494567871
    6. ' ' → logprob: -8.004683494567871
    7. ' collections' → logprob: -8.254683494567871
    8. ' les' → logprob: -8.879683494567871
    9. ' des' → logprob: -9.504683494567871
    10. ' iterable' → logprob: -9.754683494567871

Token 46: ' it' (ID: 480)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.7989393472671509
    2. ' sequences' → logprob: -1.1739393472671509
    3. ' listes' → logprob: -2.2989392280578613
    4. ' espaces' → logprob: -3.4239392280578613
    5. ' modules' → logprob: -3.7989392280578613
    6. ' ' → logprob: -4.048939228057861
    7. ' list' → logprob: -4.298939228057861
    8. ' lists' → logprob: -4.548939228057861
    9. ' iterable' → logprob: -4.548939228057861
    10. ' iter' → logprob: -4.548939228057861

Token 47: 'ér' (ID: 2156)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4966158866882324
    2. 'ertools' → logprob: -1.3716158866882324
    3. 'e' → logprob: -1.9966158866882324
    4. 'ert' → logprob: -6.996615886688232
    5. 'era' → logprob: -8.49661636352539
    6. 'ter' → logprob: -8.74661636352539
    7. 'r' → logprob: -9.74661636352539
    8. 't' → logprob: -9.74661636352539
    9. 'ertes' → logprob: -9.74661636352539
    10. 'érations' → logprob: -9.74661636352539

Token 48: 'ables' (ID: 3232)
  Prédit: 'ables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ables' → logprob: -0.005851877853274345
    2. 'tools' → logprob: -6.005851745605469
    3. 'a' → logprob: -6.505851745605469
    4. 'able' → logprob: -6.630851745605469
    5. '```' → logprob: -8.630851745605469
    6. 'ools' → logprob: -8.755851745605469
    7. 'atables' → logprob: -9.755851745605469
    8. 'ators' → logprob: -10.005851745605469
    9. 'ab' → logprob: -10.380851745605469
    10. 'ateurs' → logprob: -11.130851745605469

Token 49: ',
' (ID: 412)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8062283396720886
    2. ' import' → logprob: -1.4312283992767334
    3. 'from' → logprob: -1.5562283992767334
    4. ' from' → logprob: -2.6812283992767334
    5. ' ' → logprob: -3.6812283992767334
    6. '```' → logprob: -5.431228160858154
    7. ',' → logprob: -6.181228160858154
    8. '.' → logprob: -6.931228160858154
    9. ' ,' → logprob: -7.056228160858154
    10. ' de' → logprob: -8.431228637695312

Token 50: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7177054286003113
    2. ' from' → logprob: -0.9677054286003113
    3. ' import' → logprob: -2.342705488204956
    4. 'import' → logprob: -3.592705488204956
    5. ' ' → logprob: -6.092705249786377
    6. ' à' → logprob: -6.967705249786377
    7. ' de' → logprob: -6.967705249786377
    8. ' itertools' → logprob: -7.092705249786377
    9. '```' → logprob: -7.217705249786377
    10. ' which' → logprob: -7.967705249786377

Token 51: ' ce' (ID: 2357)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.165276288986206
    2. 'from' → logprob: -1.165276288986206
    3. '#' → logprob: -2.165276288986206
    4. ' des' → logprob: -2.790276288986206
    5. ' ce' → logprob: -3.040276288986206
    6. ' #' → logprob: -3.290276288986206
    7. ' de' → logprob: -3.540276288986206
    8. ' permettant' → logprob: -3.540276288986206
    9. ' import' → logprob: -4.540276527404785
    10. 'import' → logprob: -4.915276527404785

Token 52: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.48773616552352905
    2. 'pend' → logprob: -1.6127362251281738
    3. 'qui' → logprob: -2.737736225128174
    4. 'ci' → logprob: -3.487736225128174
    5. '#' → logprob: -3.612736225128174
    6. 't' → logprob: -3.987736225128174
    7. 'l' → logprob: -4.737736225128174
    8. 'tte' → logprob: -4.737736225128174
    9. 'n' → logprob: -4.987736225128174
    10. 'la' → logprob: -5.612736225128174

Token 53: ' permet' (ID: 11798)
  Prédit: ' permet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.06957444548606873
    2. ' permettra' → logprob: -3.1945743560791016
    3. ' facilite' → logprob: -4.569574356079102
    4. ' est' → logprob: -5.819574356079102
    5. ' aide' → logprob: -5.819574356079102
    6. 'per' → logprob: -5.944574356079102
    7. ' nous' → logprob: -6.444574356079102
    8. ' allows' → logprob: -7.069574356079102
    9. ' facilit' → logprob: -7.319574356079102
    10. 'a' → logprob: -7.944574356079102

Token 54: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.07903960347175598
    2. ' d' → logprob: -2.7040395736694336
    3. ' ' → logprob: -5.579039573669434
    4. 'de' → logprob: -5.579039573669434
    5. 'd' → logprob: -7.329039573669434
    6. ' ' → logprob: -8.829039573669434
    7. '  ' → logprob: -9.329039573669434
    8. '	' → logprob: -9.454039573669434
    9. ' la' → logprob: -9.704039573669434
    10. ' à' → logprob: -9.954039573669434

Token 55: ' parcour' (ID: 130642)
  Prédit: ' créer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' créer' → logprob: -0.40241310000419617
    2. ' génér' → logprob: -1.5274131298065186
    3. ' produire' → logprob: -3.1524131298065186
    4. ' comb' → logprob: -3.4024131298065186
    5. ' construire' → logprob: -4.9024128913879395
    6. ' obtenir' → logprob: -5.5274128913879395
    7. ' explorer' → logprob: -5.5274128913879395
    8. ' sim' → logprob: -5.6524128913879395
    9. 'g' → logprob: -5.6524128913879395
    10. ' réaliser' → logprob: -6.1524128913879395

Token 56: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.3526874780654907
    2. 'e' → logprob: -2.352687358856201
    3. 'our' → logprob: -2.852687358856201
    4. 'u' → logprob: -2.977687358856201
    5. 'er' → logprob: -3.102687358856201
    6. 'rir' → logprob: -4.102687358856201
    7. 're' → logprob: -5.227687358856201
    8. 'rer' → logprob: -5.352687358856201
    9. 'r' → logprob: -5.602687358856201
    10. 'errer' → logprob: -5.977687358856201

Token 57: ' toutes' (ID: 17502)
  Prédit: ' toutes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' toutes' → logprob: -0.3211400806903839
    2. ' tous' → logprob: -1.8211400508880615
    3. ' les' → logprob: -3.1961400508880615
    4. ' ' → logprob: -3.5711400508880615
    5. ' all' → logprob: -3.8211400508880615
    6. ' des' → logprob: -4.071140289306641
    7. ' l' → logprob: -7.321140289306641
    8. 'all' → logprob: -7.571140289306641
    9. ' tout' → logprob: -7.821140289306641
    10. ' toute' → logprob: -7.821140289306641

Token 58: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.06973767280578613
    2. 'les' → logprob: -3.569737672805786
    3. ' ' → logprob: -3.944737672805786
    4. 's' → logprob: -4.194737434387207
    5. ' possible' → logprob: -6.069737434387207
    6. ' combinations' → logprob: -7.444737434387207
    7. ' s' → logprob: -7.819737434387207
    8. ' possibilités' → logprob: -8.319737434387207
    9. ' leurs' → logprob: -8.444737434387207
    10. ' comb' → logprob: -8.694737434387207

Token 59: ' comb' (ID: 4134)
  Prédit: ' comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.07179868221282959
    2. 'comb' → logprob: -2.946798801422119
    3. 'poss' → logprob: -5.571798801422119
    4. ' ' → logprob: -5.821798801422119
    5. 'com' → logprob: -6.446798801422119
    6. ' possibilités' → logprob: -6.446798801422119
    7. 's' → logprob: -6.571798801422119
    8. ' possible' → logprob: -6.821798801422119
    9. ' combinations' → logprob: -7.196798801422119
    10. 'p' → logprob: -7.696798801422119

Token 60: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.052158910781145096
    2. 'ina' → logprob: -3.802158832550049
    3. 'inations' → logprob: -4.427158832550049
    4. '```' → logprob: -5.052158832550049
    5. 'in' → logprob: -5.177158832550049
    6. '``' → logprob: -6.677158832550049
    7. 'i' → logprob: -7.677158832550049
    8. 'ination' → logprob: -7.927158832550049
    9. '\' → logprob: -8.052159309387207
    10. '#' → logprob: -8.052159309387207

Token 61: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.001424045069143176
    2. 'o' → logprob: -6.6264238357543945
    3. 'on' → logprob: -10.251423835754395
    4. 'os' → logprob: -11.001423835754395
    5. 'onso' → logprob: -11.251423835754395
    6. 'a' → logprob: -11.376423835754395
    7. 'sons' → logprob: -12.376423835754395
    8. 'onsa' → logprob: -13.001423835754395
    9. 's' → logprob: -13.126423835754395
    10. '#' → logprob: -13.126423835754395

Token 62: ' possibles' (ID: 97753)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3809541165828705
    2. ' de' → logprob: -1.8809541463851929
    3. ' des' → logprob: -3.1309540271759033
    4. ' possible' → logprob: -3.3809540271759033
    5. ' possibles' → logprob: -3.7559540271759033
    6. '  ' → logprob: -4.380954265594482
    7. 'from' → logprob: -4.630954265594482
    8. ' itertools' → logprob: -4.880954265594482
    9. 's' → logprob: -5.755954265594482
    10. ' ,' → logprob: -5.880954265594482

Token 63: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8338928818702698
    2. ' from' → logprob: -1.333892822265625
    3. ' de' → logprob: -1.708892822265625
    4. ' ' → logprob: -2.583892822265625
    5. ' des' → logprob: -4.208892822265625
    6. ' import' → logprob: -5.083892822265625
    7. '_' → logprob: -5.333892822265625
    8. 'import' → logprob: -5.708892822265625
    9. ' d' → logprob: -6.083892822265625
    10. ',' → logprob: -6.208892822265625

Token 64: ' ' (ID: 220)
  Prédit: ' caractères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.31070029735565186
    2. ' lettres' → logprob: -2.9357004165649414
    3. ' listes' → logprob: -3.0607004165649414
    4. ' mots' → logprob: -3.8107004165649414
    5. ' car' → logprob: -3.9357004165649414
    6. ' éléments' → logprob: -4.060700416564941
    7. ' caracteres' → logprob: -4.060700416564941
    8. ' l' → logprob: -4.310700416564941
    9. ' chaînes' → logprob: -4.560700416564941
    10. ' ' → logprob: -4.810700416564941

Token 65: '0' (ID: 15)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.3193918764591217
    2. 'élé' → logprob: -2.319391965866089
    3. 'l' → logprob: -2.819391965866089
    4. ' caractères' → logprob: -3.694391965866089
    5. 'val' → logprob: -4.31939172744751
    6. 'm' → logprob: -4.69439172744751
    7. ' car' → logprob: -4.81939172744751
    8. 'lett' → logprob: -5.06939172744751
    9. 'param' → logprob: -5.06939172744751
    10. ' lettres' → logprob: -5.19439172744751

Token 66: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11609344929456711
    2. ' ,' → logprob: -2.241093397140503
    3. '-' → logprob: -6.491093635559082
    4. ' ' → logprob: -7.116093635559082
    5. ' et' → logprob: -9.366093635559082
    6. 'a' → logprob: -9.491093635559082
    7. ' à' → logprob: -9.491093635559082
    8. '.' → logprob: -9.616093635559082
    9. 'et' → logprob: -9.866093635559082
    10. '<|end|>' → logprob: -10.116093635559082

Token 67: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22545477747917175
    2. '1' → logprob: -1.6004548072814941
    3. ' ' → logprob: -10.475454330444336
    4. 's' → logprob: -12.162954330444336
    5. '  ' → logprob: -13.975454330444336
    6. '```' → logprob: -14.037954330444336
    7. ' s' → logprob: -14.725454330444336
    8. 'space' → logprob: -14.975454330444336
    9. '<|end|>' → logprob: -15.037954330444336
    10. ' ' → logprob: -15.225454330444336

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42873239517211914
    2. ' ' → logprob: -1.0537323951721191
    3. ' ' → logprob: -12.053731918334961
    4. 's' → logprob: -12.178731918334961
    5. '```' → logprob: -12.803731918334961
    6. '  ' → logprob: -13.053731918334961
    7. '<|end|>' → logprob: -13.616231918334961
    8. 'd' → logprob: -13.991231918334961
    9. '`' → logprob: -13.991231918334961
    10. 'l' → logprob: -14.303731918334961

Token 69: ' pour' (ID: 1930)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.047564733773469925
    2. ' from' → logprob: -3.297564744949341
    3. ',' → logprob: -6.047564506530762
    4. 'import' → logprob: -6.547564506530762
    5. '```' → logprob: -6.797564506530762
    6. ' 
' → logprob: -7.047564506530762
    7. '
' → logprob: -7.297564506530762
    8. '\n' → logprob: -7.547564506530762
    9. '\' → logprob: -7.672564506530762
    10. 's' → logprob: -7.797564506530762

Token 70: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44115447998046875
    2. ' les' → logprob: -1.9411544799804688
    3. ' des' → logprob: -2.5661544799804688
    4. ' la' → logprob: -3.4411544799804688
    5. ' l' → logprob: -3.4411544799804688
    6. ' [' → logprob: -4.316154479980469
    7. ' coder' → logprob: -4.441154479980469
    8. ' n' → logprob: -4.941154479980469
    9. ' le' → logprob: -5.191154479980469
    10. ' binary' → logprob: -5.941154479980469

Token 71: ' éléments' (ID: 57375)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20542699098587036
    2. '_s' → logprob: -3.0804269313812256
    3. '_' → logprob: -3.5804269313812256
    4. '
' → logprob: -3.9554269313812256
    5. 'from' → logprob: -3.9554269313812256
    6. 'import' → logprob: -4.705427169799805
    7. '_
' → logprob: -4.830427169799805
    8. ',' → logprob: -5.330427169799805
    9. '.' → logprob: -5.455427169799805
    10. '\' → logprob: -5.705427169799805

Token 72: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0496031679213047
    2. '
' → logprob: -3.424603223800659
    3. ' from' → logprob: -4.92460298538208
    4. '```' → logprob: -5.42460298538208
    5. ' 
' → logprob: -6.67460298538208
    6. '\n' → logprob: -7.67460298538208
    7. ',' → logprob: -7.67460298538208
    8. 'import' → logprob: -8.049603462219238
    9. '
' → logprob: -8.049603462219238
    10. ',
' → logprob: -8.049603462219238

Token 73: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -3.4285862057004124e-05
    2. ' from' → logprob: -10.62503433227539
    3. '```' → logprob: -12.00003433227539
    4. '
' → logprob: -13.37503433227539
    5. 'fro' → logprob: -14.25003433227539
    6. 'import' → logprob: -14.25003433227539
    7. 'fr' → logprob: -14.87503433227539
    8. 'f' → logprob: -15.37503433227539
    9. ',' → logprob: -16.37503433227539
    10. 'for' → logprob: -17.00003433227539

Token 74: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.001946844975464046
    2. ' ' → logprob: -6.251946926116943
    3. ' ' → logprob: -11.626946449279785
    4. '  ' → logprob: -12.251946449279785
    5. ' iter' → logprob: -13.376946449279785
    6. 'it' → logprob: -13.751946449279785
    7. ' it' → logprob: -13.876946449279785
    8. ' ﻿' → logprob: -15.126946449279785
    9. ' ‌' → logprob: -15.876946449279785
    10. ' space' → logprob: -16.1269474029541

Token 75: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.012783207930624485
    2. 'import' → logprob: -5.137783050537109
    3. ' .' → logprob: -5.887783050537109
    4. ' ' → logprob: -5.887783050537109
    5. '.' → logprob: -6.762783050537109
    6. '.import' → logprob: -9.26278305053711
    7. '	import' → logprob: -11.38778305053711
    8. ' im' → logprob: -12.01278305053711
    9. '.product' → logprob: -12.38778305053711
    10. '.im' → logprob: -12.63778305053711

Token 76: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.2520277798175812
    2. ' product' → logprob: -1.5020277500152588
    3. 'prod' → logprob: -9.87702751159668
    4. 'pro' → logprob: -11.75202751159668
    5. 'pr' → logprob: -11.87702751159668
    6. 'p' → logprob: -11.87702751159668
    7. 'produ' → logprob: -11.87702751159668
    8. '	product' → logprob: -12.37702751159668
    9. 'produce' → logprob: -13.00202751159668
    10. '.product' → logprob: -13.00202751159668

Token 77: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.43773630261421204
    2. '
' → logprob: -1.0627362728118896
    3. '


' → logprob: -5.562736511230469
    4. '#' → logprob: -7.062736511230469
    5. '



' → logprob: -7.312736511230469
    6. ' 

' → logprob: -7.312736511230469
    7. '<|end|>' → logprob: -7.312736511230469
    8. '
' → logprob: -7.562736511230469
    9. '' → logprob: -8.187736511230469
    10. '[' → logprob: -8.812736511230469

Token 78: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4308120012283325
    2. '
' → logprob: -1.8058120012283325
    3. 'N' → logprob: -2.430811882019043
    4. 'n' → logprob: -2.680811882019043
    5. 'def' → logprob: -4.930811882019043
    6. '

' → logprob: -5.055811882019043
    7. 'd' → logprob: -5.430811882019043
    8. 'a' → logprob: -6.055811882019043
    9. '(' → logprob: -6.430811882019043
    10. '(
' → logprob: -7.055811882019043

Token 79: ' Lecture' (ID: 106534)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8157629370689392
    2. '#' → logprob: -1.440762996673584
    3. ' def' → logprob: -1.690762996673584
    4. ' N' → logprob: -3.440762996673584
    5. ' ' → logprob: -3.690762996673584
    6. ' #' → logprob: -4.065762996673584
    7. 'N' → logprob: -4.065762996673584
    8. ' 
' → logprob: -4.440762996673584
    9. 'n' → logprob: -5.065762996673584
    10. 'import' → logprob: -5.690762996673584

Token 80: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007060127332806587
    2. ' (' → logprob: -5.0070600509643555
    3. ' ' → logprob: -9.007060050964355
    4. '_' → logprob: -9.882060050964355
    5. 's' → logprob: -10.507060050964355
    6. '('' → logprob: -10.507060050964355
    7. '(
' → logprob: -10.507060050964355
    8. '()' → logprob: -11.257060050964355
    9. ' des' → logprob: -11.382060050964355
    10. ',' → logprob: -11.632060050964355

Token 81: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.38605591654777527
    2. ' ' → logprob: -2.5110559463500977
    3. ' e' → logprob: -2.7610559463500977
    4. 'es' → logprob: -2.8860559463500977
    5. 'a' → logprob: -3.2610559463500977
    6. ''' → logprob: -3.2610559463500977
    7. ''un' → logprob: -4.261055946350098
    8. ' a' → logprob: -4.886055946350098
    9. ' le' → logprob: -5.386055946350098
    10. ' la' → logprob: -6.261055946350098

Token 82: ' entier' (ID: 80473)
  Prédit: ' fichier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fichier' → logprob: -0.31395021080970764
    2. ' ' → logprob: -1.8139501810073853
    3. 'f' → logprob: -3.063950300216675
    4. ' f' → logprob: -3.563950300216675
    5. 'e' → logprob: -3.938950300216675
    6. '_' → logprob: -6.438950061798096
    7. ' ' → logprob: -6.563950061798096
    8. 'a' → logprob: -6.563950061798096
    9. ' file' → logprob: -7.063950061798096
    10. ' espace' → logprob: -7.188950061798096

Token 83: ' N' (ID: 478)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08085004985332489
    2. ' (' → logprob: -2.955850124359131
    3. ' ' → logprob: -4.080850124359131
    4. '()' → logprob: -5.205850124359131
    5. '(
' → logprob: -7.205850124359131
    6. ',' → logprob: -7.455850124359131
    7. '(n' → logprob: -8.080849647521973
    8. ' =' → logprob: -8.455849647521973
    9. '(input' → logprob: -8.455849647521973
    10. ' (
' → logprob: -8.705849647521973

Token 84: ' depuis' (ID: 16277)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3164573907852173
    2. ' ' → logprob: -1.6914573907852173
    3. 'n' → logprob: -3.6914572715759277
    4. ' (' → logprob: -4.316457271575928
    5. ',' → logprob: -5.191457271575928
    6. '(N' → logprob: -5.191457271575928
    7. ')' → logprob: -5.316457271575928
    8. '(
' → logprob: -5.316457271575928
    9. 'a' → logprob: -5.566457271575928
    10. 'N' → logprob: -5.816457271575928

Token 85: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.03229043632745743
    2. ' ' → logprob: -4.157290458679199
    3. 'input' → logprob: -4.282290458679199
    4. ' l' → logprob: -6.282290458679199
    5. '(input' → logprob: -9.1572904586792
    6. ' la' → logprob: -9.4072904586792
    7. 'l' → logprob: -9.5322904586792
    8. ' ' → logprob: -9.5322904586792
    9. '=input' → logprob: -10.1572904586792
    10. '_' → logprob: -10.9072904586792

Token 86: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8531657457351685
    2. ''entrée' → logprob: -1.1031657457351685
    3. 'a' → logprob: -1.7281657457351685
    4. 'input' → logprob: -3.103165626525879
    5. 'e' → logprob: -5.353165626525879
    6. ''utilisateur' → logprob: -5.478165626525879
    7. ' input' → logprob: -5.853165626525879
    8. '=input' → logprob: -6.228165626525879
    9. 'entrée' → logprob: -7.103165626525879
    10. 'es' → logprob: -7.103165626525879

Token 87: ' standard' (ID: 7024)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5554594993591309
    2. 'n' → logprob: -1.1804594993591309
    3. '\n' → logprob: -3.305459499359131
    4. 'N' → logprob: -3.805459499359131
    5. '(N' → logprob: -4.555459499359131
    6. '()' → logprob: -4.555459499359131
    7. '(
' → logprob: -4.930459499359131
    8. '```' → logprob: -5.055459499359131
    9. '\' → logprob: -5.430459499359131
    10. 's' → logprob: -5.430459499359131

Token 88: '.' (ID: 13)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5263373851776123
    2. 'N' → logprob: -1.0263373851776123
    3. '
' → logprob: -3.4013373851776123
    4. '\n' → logprob: -4.401337623596191
    5. '(' → logprob: -6.776337623596191
    6. '\' → logprob: -7.151337623596191
    7. '#' → logprob: -7.526337623596191
    8. '```' → logprob: -7.651337623596191
    9. ' 
' → logprob: -8.401337623596191
    10. '(N' → logprob: -8.401337623596191

Token 89: ' La' (ID: 3038)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07040173560380936
    2. 'n' → logprob: -2.695401668548584
    3. ' N' → logprob: -8.945402145385742
    4. '
' → logprob: -8.945402145385742
    5. '#' → logprob: -9.570402145385742
    6. '\n' → logprob: -9.820402145385742
    7. '```' → logprob: -10.570402145385742
    8. 'x' → logprob: -11.695402145385742
    9. '`' → logprob: -12.070402145385742
    10. ',' → logprob: -12.320402145385742

Token 90: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.001078183762729168
    2. ' =' → logprob: -7.501078128814697
    3. '  ' → logprob: -8.751078605651855
    4. '=' → logprob: -9.626078605651855
    5. ' '' → logprob: -9.751078605651855
    6. ' "' → logprob: -9.751078605651855
    7. '_' → logprob: -10.001078605651855
    8. 'space' → logprob: -10.251078605651855
    9. ' )' → logprob: -10.626078605651855
    10. ' space' → logprob: -11.376078605651855

Token 91: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3781130015850067
    2. 'input' → logprob: -1.378113031387329
    3. ' int' → logprob: -3.503113031387329
    4. ' ' → logprob: -3.753113031387329
    5. 'int' → logprob: -5.12811279296875
    6. '(' → logprob: -6.50311279296875
    7. '(input' → logprob: -6.87811279296875
    8. ' `' → logprob: -8.87811279296875
    9. '=input' → logprob: -8.87811279296875
    10. ' (' → logprob: -9.12811279296875

Token 92: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1131724938750267
    2. '()' → logprob: -2.2381725311279297
    3. '('' → logprob: -9.11317253112793
    4. ')' → logprob: -9.73817253112793
    5. '("' → logprob: -9.98817253112793
    6. '(
' → logprob: -10.23817253112793
    7. '("""' → logprob: -10.61317253112793
    8. '().' → logprob: -11.48817253112793
    9. '("")' → logprob: -11.86317253112793
    10. 's' → logprob: -11.98817253112793

Token 93: ' collecte' (ID: 164733)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3137514591217041
    2. '()' → logprob: -1.313751459121704
    3. ')' → logprob: -9.063751220703125
    4. '('' → logprob: -9.188751220703125
    5. '(
' → logprob: -9.688751220703125
    6. ',' → logprob: -9.688751220703125
    7. '("' → logprob: -10.563751220703125
    8. '().' → logprob: -10.938751220703125
    9. '("")' → logprob: -11.063751220703125
    10. ' ()' → logprob: -11.563751220703125

Token 94: ' l' (ID: 305)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08553069084882736
    2. ' ' → logprob: -3.3355307579040527
    3. '('' → logprob: -3.8355307579040527
    4. '("' → logprob: -4.835530757904053
    5. ' (' → logprob: -4.835530757904053
    6. ''' → logprob: -5.210530757904053
    7. '"' → logprob: -6.835530757904053
    8. '()' → logprob: -7.335530757904053
    9. 'l' → logprob: -7.835530757904053
    10. ',' → logprob: -8.710530281066895

Token 95: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1636582612991333
    2. 'e' → logprob: -2.2886581420898438
    3. ''entrée' → logprob: -3.9136581420898438
    4. 'a' → logprob: -4.163658142089844
    5. ''a' → logprob: -5.788658142089844
    6. ''ent' → logprob: -6.038658142089844
    7. ''e' → logprob: -6.538658142089844
    8. ''u' → logprob: -6.663658142089844
    9. ''utilisateur' → logprob: -6.913658142089844
    10. ''é' → logprob: -7.038658142089844

Token 96: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6380806565284729
    2. '(' → logprob: -0.7630806565284729
    3. ',' → logprob: -6.638080596923828
    4. '(
' → logprob: -6.888080596923828
    5. '('' → logprob: -7.138080596923828
    6. ')' → logprob: -8.013080596923828
    7. '()
' → logprob: -8.138080596923828
    8. '.' → logprob: -8.763080596923828
    9. '().' → logprob: -8.763080596923828
    10. '("' → logprob: -8.763080596923828

Token 97: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.44875630736351013
    2. 'l' → logprob: -1.5737563371658325
    3. ' l' → logprob: -1.9487563371658325
    4. ' ' → logprob: -5.448756217956543
    5. ')' → logprob: -6.073756217956543
    6. ' ()' → logprob: -6.823756217956543
    7. ''utilisateur' → logprob: -7.448756217956543
    8. 's' → logprob: -7.698756217956543
    9. 'la' → logprob: -7.948756217956543
    10. ' la' → logprob: -8.073756217956543

Token 98: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.05713581666350365
    2. 'a' → logprob: -3.182135820388794
    3. ''' → logprob: -4.807135581970215
    4. 'u' → logprob: -6.807135581970215
    5. 'e' → logprob: -7.182135581970215
    6. 'es' → logprob: -7.307135581970215
    7. ''user' → logprob: -7.307135581970215
    8. ''entrée' → logprob: -7.432135581970215
    9. ''util' → logprob: -7.432135581970215
    10. '')' → logprob: -7.807135581970215

Token 99: ' sous' (ID: 14487)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.27584952116012573
    2. '(' → logprob: -1.9008495807647705
    3. ')' → logprob: -3.1508495807647705
    4. 'n' → logprob: -4.025849342346191
    5. '(
' → logprob: -4.650849342346191
    6. 'N' → logprob: -5.150849342346191
    7. '()
' → logprob: -5.650849342346191
    8. ',' → logprob: -5.900849342346191
    9. '```' → logprob: -6.400849342346191
    10. '\n' → logprob: -6.650849342346191

Token 100: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.9467644095420837
    2. ' une' → logprob: -1.4467644691467285
    3. ' ' → logprob: -1.8217644691467285
    4. 'chaine' → logprob: -2.5717644691467285
    5. '()' → logprob: -3.6967644691467285
    6. 'une' → logprob: -3.9467644691467285
    7. ' ' → logprob: -4.0717644691467285
    8. ' form' → logprob: -4.1967644691467285
    9. ' la' → logprob: -4.4467644691467285
    10. ' chaîne' → logprob: -4.9467644691467285

Token 101: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.01409662514925003
    2. ' de' → logprob: -4.764096736907959
    3. 'd' → logprob: -6.014096736907959
    4. '()' → logprob: -7.139096736907959
    5. 's' → logprob: -7.639096736907959
    6. ' ' → logprob: -7.889096736907959
    7. ''' → logprob: -8.1390962600708
    8. ')' → logprob: -8.6390962600708
    9. '(' → logprob: -8.6390962600708
    10. 'n' → logprob: -8.8890962600708

Token 102: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.14447486400604248
    2. 'chaine' → logprob: -2.144474983215332
    3. ' chaine' → logprob: -4.769474983215332
    4. ' string' → logprob: -5.894474983215332
    5. ' chaînes' → logprob: -5.894474983215332
    6. 'string' → logprob: -6.894474983215332
    7. 'cha' → logprob: -7.394474983215332
    8. ' cadenas' → logprob: -7.769474983215332
    9. 's' → logprob: -8.019474983215332
    10. 'str' → logprob: -8.144474983215332

Token 103: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.902108907699585
    2. '(' → logprob: -1.902108907699585
    3. 's' → logprob: -2.027108907699585
    4. '()' → logprob: -2.527108907699585
    5. '(
' → logprob: -2.902108907699585
    6. ',' → logprob: -3.152108907699585
    7. '"' → logprob: -3.777108907699585
    8. ''' → logprob: -3.902108907699585
    9. ' (' → logprob: -4.402109146118164
    10. 'de' → logprob: -4.902109146118164

Token 104: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.016165511682629585
    2. 'n' → logprob: -4.141165733337402
    3. ' N' → logprob: -9.641165733337402
    4. '
' → logprob: -10.766165733337402
    5. '\n' → logprob: -11.141165733337402
    6. ' 
' → logprob: -11.266165733337402
    7. '  
' → logprob: -12.266165733337402
    8. '```' → logprob: -12.266165733337402
    9. '`' → logprob: -13.391165733337402
    10. '#' → logprob: -13.766165733337402

Token 105: ' int' (ID: 677)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03190162405371666
    2. 'n' → logprob: -3.5319015979766846
    3. ' N' → logprob: -6.156901836395264
    4. ' n' → logprob: -11.406901359558105
    5. ' 
' → logprob: -11.906901359558105
    6. '#' → logprob: -12.656901359558105
    7. '```' → logprob: -12.906901359558105
    8. '
' → logprob: -13.031901359558105
    9. ' ' → logprob: -13.656901359558105
    10. '`' → logprob: -14.281901359558105

Token 106: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.803360495017841e-05
    2. '()' → logprob: -10.125078201293945
    3. '(input' → logprob: -10.375078201293945
    4. '(
' → logprob: -12.625078201293945
    5. '('' → logprob: -14.625078201293945
    6. '(int' → logprob: -14.750078201293945
    7. '("""' → logprob: -14.750078201293945
    8. ' (' → logprob: -14.875078201293945
    9. '("' → logprob: -15.125078201293945
    10. '(convert' → logprob: -15.250078201293945

Token 107: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0037930659018456936
    2. '(input' → logprob: -5.753793239593506
    3. '(
' → logprob: -8.128792762756348
    4. '(int' → logprob: -9.253792762756348
    5. '(convert' → logprob: -9.253792762756348
    6. '()' → logprob: -9.878792762756348
    7. ' (' → logprob: -10.503792762756348
    8. ')' → logprob: -11.878792762756348
    9. '(parse' → logprob: -11.878792762756348
    10. 'convert' → logprob: -11.878792762756348

Token 108: 'it' (ID: 278)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08918984234333038
    2. '(input' → logprob: -3.2141897678375244
    3. 'e' → logprob: -3.7141897678375244
    4. 'ation' → logprob: -5.7141900062561035
    5. '(
' → logprob: -5.7141900062561035
    6. ')' → logprob: -6.3391900062561035
    7. ' (' → logprob: -6.4641900062561035
    8. 'u' → logprob: -6.8391900062561035
    9. 'ure' → logprob: -6.8391900062561035
    10. ' ' → logprob: -7.0891900062561035

Token 109: ' cette' (ID: 7696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4890575110912323
    2. '(input' → logprob: -1.2390575408935547
    3. 'l' → logprob: -2.6140575408935547
    4. ' l' → logprob: -4.739057540893555
    5. '()' → logprob: -5.739057540893555
    6. '(l' → logprob: -5.739057540893555
    7. 'input' → logprob: -6.114057540893555
    8. ' la' → logprob: -6.239057540893555
    9. ' cette' → logprob: -6.864057540893555
    10. 'la' → logprob: -6.864057540893555

Token 110: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.07817190885543823
    2. '(' → logprob: -3.703171968460083
    3. ' ' → logprob: -4.078171730041504
    4. ' (' → logprob: -4.203171730041504
    5. ' )' → logprob: -4.953171730041504
    6. ' chaine' → logprob: -5.578171730041504
    7. '()' → logprob: -5.828171730041504
    8. ' ()' → logprob: -7.328171730041504
    9. 'chaine' → logprob: -7.453171730041504
    10. ' entrée' → logprob: -7.578171730041504

Token 111: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033816182985901833
    2. ',' → logprob: -6.753381729125977
    3. ' (' → logprob: -7.003381729125977
    4. ')' → logprob: -7.503381729125977
    5. '()' → logprob: -8.628381729125977
    6. '(
' → logprob: -9.253381729125977
    7. ' ' → logprob: -9.378381729125977
    8. '<|end|>' → logprob: -9.503381729125977
    9. ' )' → logprob: -9.628381729125977
    10. 's' → logprob: -9.878381729125977

Token 112: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.4144182503223419
    2. ' ' → logprob: -1.2894182205200195
    3. ' int' → logprob: -2.9144182205200195
    4. ' entier' → logprob: -5.1644182205200195
    5. ' n' → logprob: -7.2894182205200195
    6. '  ' → logprob: -7.6644182205200195
    7. ' ' → logprob: -7.7894182205200195
    8. 'un' → logprob: -7.7894182205200195
    9. ' une' → logprob: -8.28941822052002
    10. 'int' → logprob: -8.41441822052002

Token 113: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.12727423012256622
    2. ' ' → logprob: -3.12727427482605
    3. 'ent' → logprob: -3.25227427482605
    4. 'e' → logprob: -4.252274036407471
    5. ' nombre' → logprob: -4.877274036407471
    6. ' ent' → logprob: -5.127274036407471
    7. ' espace' → logprob: -5.377274036407471
    8. 'nombre' → logprob: -7.127274036407471
    9. ' int' → logprob: -7.127274036407471
    10. ' ' → logprob: -7.377274036407471

Token 114: '.
' (ID: 558)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.26631179451942444
    2. '(' → logprob: -1.766311764717102
    3. 'n' → logprob: -3.6413118839263916
    4. '(
' → logprob: -3.6413118839263916
    5. '\n' → logprob: -5.5163116455078125
    6. '(N' → logprob: -6.0163116455078125
    7. ',' → logprob: -6.6413116455078125
    8. ')' → logprob: -6.8913116455078125
    9. '\' → logprob: -8.016311645507812
    10. '#' → logprob: -8.141311645507812

Token 115: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0015059324214234948
    2. 'n' → logprob: -6.5015058517456055
    3. ' N' → logprob: -13.501505851745605
    4. '
' → logprob: -13.626505851745605
    5. '\n' → logprob: -14.751505851745605
    6. ' 
' → logprob: -15.751505851745605
    7. '```' → logprob: -15.751505851745605
    8. '

' → logprob: -16.001506805419922
    9. '  
' → logprob: -16.751506805419922
    10. '\' → logprob: -16.876506805419922

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023253168910741806
    2. '=' → logprob: -3.7732532024383545
    3. ' ' → logprob: -12.148253440856934
    4. ',' → logprob: -14.023253440856934
    5. ' =
' → logprob: -14.398253440856934
    6. ' ' → logprob: -14.773253440856934
    7. '=input' → logprob: -15.273253440856934
    8. '=int' → logprob: -15.648253440856934
    9. ')' → logprob: -16.148252487182617
    10. '.' → logprob: -17.148252487182617

Token 117: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.003602798329666257
    2. 'int' → logprob: -5.628602981567383
    3. ' ' → logprob: -13.003602981567383
    4. ' in' → logprob: -15.753602981567383
    5. ' input' → logprob: -15.878602981567383
    6. '0' → logprob: -16.503602981567383
    7. ' ' → logprob: -16.628602981567383
    8. '=int' → logprob: -16.753602981567383
    9. '	int' → logprob: -17.253602981567383
    10. ' i' → logprob: -17.253602981567383

Token 118: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.029755467548966408
    2. '(' → logprob: -3.5297553539276123
    3. 'input' → logprob: -13.154755592346191
    4. ' (' → logprob: -13.154755592346191
    5. '()' → logprob: -14.529755592346191
    6. '(
' → logprob: -15.529755592346191
    7. '(int' → logprob: -16.154754638671875
    8. '('' → logprob: -16.529754638671875
    9. '(inp' → logprob: -17.154754638671875
    10. '=input' → logprob: -17.279754638671875

Token 119: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.048693764954805374
    2. '()' → logprob: -3.0486936569213867
    3. '(' → logprob: -9.548693656921387
    4. '()))' → logprob: -11.798693656921387
    5. ' ())' → logprob: -11.923693656921387
    6. '()>' → logprob: -12.673693656921387
    7. '();)' → logprob: -12.798693656921387
    8. '().' → logprob: -12.798693656921387
    9. '()]' → logprob: -13.298693656921387
    10. ')' → logprob: -13.423693656921387

Token 120: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1445468664169312
    2. '#' → logprob: -1.3945468664169312
    3. 'for' → logprob: -2.5195469856262207
    4. 'possible' → logprob: -2.5195469856262207
    5. 's' → logprob: -2.8945469856262207
    6. 'result' → logprob: -3.7695469856262207
    7. '\' → logprob: -4.019546985626221
    8. 'counts' → logprob: -4.144546985626221
    9. 'all' → logprob: -4.269546985626221
    10. '\n' → logprob: -4.269546985626221

Token 121: ' Lecture' (ID: 106534)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -2.3512227535247803
    2. 'counts' → logprob: -2.3512227535247803
    3. 'com' → logprob: -2.4762227535247803
    4. 'lines' → logprob: -2.8512227535247803
    5. 'dp' → logprob: -2.9762227535247803
    6. 'binary' → logprob: -2.9762227535247803
    7. 'all' → logprob: -2.9762227535247803
    8. 'lst' → logprob: -3.1012227535247803
    9. 'comb' → logprob: -3.2262227535247803
    10. '#' → logprob: -3.3512227535247803

Token 122: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006949441507458687
    2. '(' → logprob: -5.131949424743652
    3. '_' → logprob: -7.756949424743652
    4. ' des' → logprob: -8.756949424743652
    5. 's' → logprob: -9.131949424743652
    6. 'des' → logprob: -9.381949424743652
    7. ' ()' → logprob: -9.506949424743652
    8. '[' → logprob: -10.506949424743652
    9. '("")' → logprob: -11.006949424743652
    10. '[]' → logprob: -11.256949424743652

Token 123: ''une' (ID: 13337)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7958316206932068
    2. '()' → logprob: -0.7958316206932068
    3. '_' → logprob: -3.1708316802978516
    4. ' ' → logprob: -4.420831680297852
    5. 'es' → logprob: -4.545831680297852
    6. 'a' → logprob: -4.670831680297852
    7. 'e' → logprob: -5.420831680297852
    8. '[' → logprob: -5.795831680297852
    9. '[]' → logprob: -6.045831680297852
    10. 's' → logprob: -6.045831680297852

Token 124: ' chaîne' (ID: 89288)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.5935178399085999
    2. ' ' → logprob: -0.8435178399085999
    3. ' ligne' → logprob: -5.593517780303955
    4. '_' → logprob: -5.968517780303955
    5. 'liste' → logprob: -6.218517780303955
    6. ' 
' → logprob: -6.343517780303955
    7. ' chaîne' → logprob: -6.593517780303955
    8. ' list' → logprob: -6.718517780303955
    9. 'space' → logprob: -7.343517780303955
    10. 's' → logprob: -7.593517780303955

Token 125: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0016376927960664034
    2. 's' → logprob: -7.6266374588012695
    3. ' ()' → logprob: -7.6266374588012695
    4. '(' → logprob: -8.00163745880127
    5. '("")' → logprob: -9.62663745880127
    6. '<|end|>' → logprob: -9.62663745880127
    7. '_' → logprob: -10.37663745880127
    8. 'a' → logprob: -10.50163745880127
    9. '()
' → logprob: -11.00163745880127
    10. 'user' → logprob: -11.75163745880127

Token 126: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.719892144203186
    2. ' ' → logprob: -0.844892144203186
    3. '0' → logprob: -3.3448920249938965
    4. ' bits' → logprob: -4.4698920249938965
    5. 's' → logprob: -4.8448920249938965
    6. ' espaces' → logprob: -5.0948920249938965
    7. ' caracteres' → logprob: -5.5948920249938965
    8. ' chaînes' → logprob: -5.9698920249938965
    9. ' caract' → logprob: -6.4698920249938965
    10. ' s' → logprob: -6.4698920249938965

Token 127: ' comme' (ID: 7971)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16976672410964966
    2. '()' → logprob: -2.669766664505005
    3. 'b' → logprob: -2.919766664505005
    4. 'S' → logprob: -4.169766902923584
    5. '(' → logprob: -6.044766902923584
    6. 'B' → logprob: -6.169766902923584
    7. 'A' → logprob: -6.169766902923584
    8. '_' → logprob: -6.669766902923584
    9. 'a' → logprob: -6.794766902923584
    10. 'd' → logprob: -7.044766902923584

Token 128: ' entrée' (ID: 95590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3287791013717651
    2. ' une' → logprob: -1.3287791013717651
    3. ' liste' → logprob: -2.3287792205810547
    4. ' la' → logprob: -2.5787792205810547
    5. 's' → logprob: -2.7037792205810547
    6. ' input' → logprob: -3.7037792205810547
    7. ' l' → logprob: -3.8287792205810547
    8. ' s' → logprob: -3.8287792205810547
    9. ' un' → logprob: -3.8287792205810547
    10. '0' → logprob: -3.9537792205810547

Token 129: '.' (ID: 13)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18460580706596375
    2. '()' → logprob: -2.309605836868286
    3. ' s' → logprob: -3.434605836868286
    4. 'S' → logprob: -5.059605598449707
    5. '_' → logprob: -5.559605598449707
    6. ' ' → logprob: -5.809605598449707
    7. 'b' → logprob: -5.809605598449707
    8. ' =' → logprob: -6.059605598449707
    9. ' ()' → logprob: -6.809605598449707
    10. '(' → logprob: -7.059605598449707

Token 130: ' input' (ID: 3422)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.7335323095321655
    2. 's' → logprob: -0.7335323095321655
    3. 'string' → logprob: -5.108532428741455
    4. ' S' → logprob: -5.608532428741455
    5. ' s' → logprob: -5.608532428741455
    6. 'bits' → logprob: -5.733532428741455
    7. 'A' → logprob: -5.858532428741455
    8. 'data' → logprob: -5.858532428741455
    9. 'binary' → logprob: -5.858532428741455
    10. 'b' → logprob: -6.358532428741455

Token 131: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.6550729419104755e-05
    2. '().' → logprob: -10.750036239624023
    3. '())' → logprob: -12.750036239624023
    4. '()
' → logprob: -12.875036239624023
    5. '()`' → logprob: -13.250036239624023
    6. '_str' → logprob: -14.125036239624023
    7. 's' → logprob: -14.250036239624023
    8. '()

' → logprob: -14.250036239624023
    9. '()">' → logprob: -14.250036239624023
    10. '()?>' → logprob: -14.375036239624023

Token 132: ' retourne' (ID: 178818)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00040910433745011687
    2. 's' → logprob: -9.375409126281738
    3. ')' → logprob: -10.000409126281738
    4. '().' → logprob: -10.125409126281738
    5. '#' → logprob: -10.500409126281738
    6. '()
' → logprob: -10.500409126281738
    7. '=' → logprob: -10.875409126281738
    8. '(' → logprob: -11.125409126281738
    9. ' =' → logprob: -11.125409126281738
    10. ':' → logprob: -11.125409126281738

Token 133: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.48324039578437805
    2. ' la' → logprob: -1.6082403659820557
    3. '()' → logprob: -2.1082403659820557
    4. '_' → logprob: -4.358240604400635
    5. ' ' → logprob: -4.358240604400635
    6. 'la' → logprob: -5.108240604400635
    7. 'une' → logprob: -5.233240604400635
    8. 's' → logprob: -5.358240604400635
    9. ' a' → logprob: -5.483240604400635
    10. ' ' → logprob: -5.608240604400635

Token 134: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.5954680442810059
    2. 'chaine' → logprob: -1.2204680442810059
    3. 'str' → logprob: -2.470468044281006
    4. 'string' → logprob: -3.470468044281006
    5. ' chaine' → logprob: -3.970468044281006
    6. 'cha' → logprob: -4.595468044281006
    7. 's' → logprob: -5.470468044281006
    8. ' string' → logprob: -6.595468044281006
    9. '()' → logprob: -6.970468044281006
    10. 'entrée' → logprob: -7.095468044281006

Token 135: ',
' (ID: 412)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005909211467951536
    2. 's' → logprob: -7.875590801239014
    3. '()
' → logprob: -10.125591278076172
    4. '().' → logprob: -10.250591278076172
    5. '(' → logprob: -10.750591278076172
    6. 'de' → logprob: -10.875591278076172
    7. '_' → logprob: -11.250591278076172
    8. 'a' → logprob: -11.625591278076172
    9. 'user' → logprob: -11.625591278076172
    10. ')' → logprob: -11.875591278076172

Token 136: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5376344919204712
    2. ' s' → logprob: -1.5376344919204712
    3. '()' → logprob: -2.4126343727111816
    4. ' bin' → logprob: -4.037634372711182
    5. 'b' → logprob: -4.287634372711182
    6. ' code' → logprob: -4.412634372711182
    7. 'data' → logprob: -5.162634372711182
    8. ' binary' → logprob: -5.162634372711182
    9. 'bin' → logprob: -5.287634372711182
    10. ' data' → logprob: -5.412634372711182

Token 137: ' list' (ID: 1562)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.12969925999641418
    2. 's' → logprob: -3.004699230194092
    3. ' S' → logprob: -3.754699230194092
    4. ' data' → logprob: -4.254699230194092
    5. ' code' → logprob: -4.254699230194092
    6. ' string' → logprob: -5.629699230194092
    7. ' sequence' → logprob: -6.254699230194092
    8. ' binary' → logprob: -6.629699230194092
    9. ' chaine' → logprob: -6.879699230194092
    10. ' bin' → logprob: -7.254699230194092

Token 138: '()' (ID: 416)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2170263528823853
    2. '()' → logprob: -1.2170263528823853
    3. '(' → logprob: -1.5920263528823853
    4. '_' → logprob: -2.0920262336730957
    5. '=' → logprob: -3.7170262336730957
    6. ' =' → logprob: -4.092026233673096
    7. '(s' → logprob: -4.842026233673096
    8. '1' → logprob: -4.967026233673096
    9. '_s' → logprob: -5.967026233673096
    10. 'S' → logprob: -6.092026233673096

Token 139: ' transforme' (ID: 184109)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0050872876308858395
    2. '(input' → logprob: -6.005087375640869
    3. '()' → logprob: -6.755087375640869
    4. '(
' → logprob: -7.380087375640869
    5. 's' → logprob: -8.380086898803711
    6. '(s' → logprob: -9.255086898803711
    7. '(list' → logprob: -9.505086898803711
    8. 'input' → logprob: -9.630086898803711
    9. '(convert' → logprob: -9.880086898803711
    10. 'convert' → logprob: -10.255086898803711

Token 140: ' chaque' (ID: 21194)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.12474287301301956
    2. '(' → logprob: -2.3747429847717285
    3. 'input' → logprob: -4.3747429847717285
    4. ' (' → logprob: -6.4997429847717285
    5. 'l' → logprob: -6.4997429847717285
    6. 'la' → logprob: -6.7497429847717285
    7. ' la' → logprob: -6.9997429847717285
    8. '()' → logprob: -7.2497429847717285
    9. ' cette' → logprob: -7.2497429847717285
    10. '(l' → logprob: -7.2497429847717285

Token 141: ' caractère' (ID: 80509)
  Prédit: ' caractère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.32313597202301025
    2. ' caract' → logprob: -1.9481359720230103
    3. ' ' → logprob: -2.5731358528137207
    4. 'car' → logprob: -3.0731358528137207
    5. ' caractères' → logprob: -5.698135852813721
    6. 'c' → logprob: -6.823135852813721
    7. ' character' → logprob: -6.823135852813721
    8. '(' → logprob: -7.073135852813721
    9. 'élé' → logprob: -7.448135852813721
    10. ' car' → logprob: -7.698135852813721

Token 142: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016906779259443283
    2. '(input' → logprob: -5.14190673828125
    3. ')' → logprob: -5.89190673828125
    4. 's' → logprob: -6.51690673828125
    5. '(s' → logprob: -6.89190673828125
    6. ' (' → logprob: -6.89190673828125
    7. '()' → logprob: -7.14190673828125
    8. '(
' → logprob: -7.26690673828125
    9. ',' → logprob: -7.39190673828125
    10. 'input' → logprob: -7.89190673828125

Token 143: ' cette' (ID: 7696)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4877707362174988
    2. ' l' → logprob: -1.4877707958221436
    3. ' cette' → logprob: -2.4877707958221436
    4. ' input' → logprob: -3.1127707958221436
    5. 'input' → logprob: -4.2377705574035645
    6. 'l' → logprob: -4.7377705574035645
    7. 'la' → logprob: -5.3627705574035645
    8. 's' → logprob: -6.3627705574035645
    9. ' ' → logprob: -7.1127705574035645
    10. 'chaine' → logprob: -7.7377705574035645

Token 144: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.05061444267630577
    2. 'chaine' → logprob: -3.300614356994629
    3. ' chaine' → logprob: -5.175614356994629
    4. 'cha' → logprob: -5.800614356994629
    5. 's' → logprob: -6.800614356994629
    6. 'entrée' → logprob: -6.925614356994629
    7. 'string' → logprob: -7.300614356994629
    8. ' string' → logprob: -7.550614356994629
    9. 'str' → logprob: -8.300614356994629
    10. 'c' → logprob: -9.800614356994629

Token 145: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.422010600566864
    2. ')' → logprob: -2.172010660171509
    3. ' into' → logprob: -2.422010660171509
    4. ' ' → logprob: -3.047010660171509
    5. ' )' → logprob: -3.672010660171509
    6. '(' → logprob: -4.04701042175293
    7. ',' → logprob: -4.92201042175293
    8. 's' → logprob: -5.17201042175293
    9. '('' → logprob: -5.17201042175293
    10. 'into' → logprob: -5.54701042175293

Token 146: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.03333824500441551
    2. ' une' → logprob: -4.1583380699157715
    3. 'élé' → logprob: -4.9083380699157715
    4. 'un' → logprob: -5.2833380699157715
    5. ''un' → logprob: -5.7833380699157715
    6. 'une' → logprob: -7.7833380699157715
    7. ' élément' → logprob: -7.7833380699157715
    8. ''' → logprob: -8.65833854675293
    9. ' ' → logprob: -8.78333854675293
    10. ''une' → logprob: -9.15833854675293

Token 147: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.002935744822025299
    2. ' élément' → logprob: -6.252935886383057
    3. 'él' → logprob: -7.752935886383057
    4. 'é' → logprob: -8.002935409545898
    5. 'car' → logprob: -9.127935409545898
    6. 'element' → logprob: -9.377935409545898
    7. 'el' → logprob: -11.377935409545898
    8. 'e' → logprob: -11.752935409545898
    9. 'liste' → logprob: -12.377935409545898
    10. 's' → logprob: -12.877935409545898

Token 148: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5372316837310791
    2. '[' → logprob: -2.037231683731079
    3. ')' → logprob: -2.162231683731079
    4. '[]' → logprob: -3.162231683731079
    5. ' d' → logprob: -3.787231683731079
    6. '<|end|>' → logprob: -3.787231683731079
    7. ' )' → logprob: -4.4122314453125
    8. ' of' → logprob: -4.4122314453125
    9. ' distinct' → logprob: -5.0372314453125
    10. ',' → logprob: -5.0372314453125

Token 149: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.37866514921188354
    2. ' la' → logprob: -1.2536652088165283
    3. 'liste' → logprob: -4.253664970397949
    4. 'la' → logprob: -4.628664970397949
    5. ' une' → logprob: -5.378664970397949
    6. 'list' → logprob: -7.753664970397949
    7. ' list' → logprob: -8.50366497039795
    8. 'une' → logprob: -8.87866497039795
    9. ' cette' → logprob: -9.25366497039795
    10. 'a' → logprob: -9.75366497039795

Token 150: ' :' (ID: 712)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45632901787757874
    2. 's' → logprob: -1.8313289880752563
    3. '(s' → logprob: -2.581329107284546
    4. '(input' → logprob: -3.081329107284546
    5. '()' → logprob: -3.206329107284546
    6. '(
' → logprob: -4.331328868865967
    7. 'input' → logprob: -4.831328868865967
    8. '_' → logprob: -5.581328868865967
    9. ',' → logprob: -6.831328868865967
    10. ')' → logprob: -6.956328868865967

Token 151: ' ['' (ID: 5140)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.43676695227622986
    2. 'list' → logprob: -1.8117669820785522
    3. ' input' → logprob: -2.0617668628692627
    4. ' list' → logprob: -2.8117668628692627
    5. 's' → logprob: -6.811767101287842
    6. 'l' → logprob: -7.811767101287842
    7. 'str' → logprob: -8.436766624450684
    8. 'data' → logprob: -8.936766624450684
    9. ' l' → logprob: -9.124266624450684
    10. 'liste' → logprob: -9.436766624450684

Token 152: 'a' (ID: 64)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02256190963089466
    2. '1' → logprob: -4.147562026977539
    3. ' ' → logprob: -6.022562026977539
    4. 'a' → logprob: -6.772562026977539
    5. 'i' → logprob: -7.397562026977539
    6. 'b' → logprob: -7.772562026977539
    7. 's' → logprob: -7.897562026977539
    8. 'input' → logprob: -8.272562026977539
    9. ''' → logprob: -8.585062026977539
    10. ' '' → logprob: -8.710062026977539

Token 153: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.06319013983011246
    2. ',' → logprob: -3.313190221786499
    3. '','' → logprob: -4.68818998336792
    4. ''' → logprob: -5.31318998336792
    5. '']' → logprob: -5.81318998336792
    6. ' ',' → logprob: -6.18818998336792
    7. 'b' → logprob: -6.31318998336792
    8. 'a' → logprob: -6.43818998336792
    9. 's' → logprob: -8.063190460205078
    10. 'n' → logprob: -8.313190460205078

Token 154: ' '' (ID: 461)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.4885428249835968
    2. ''' → logprob: -1.6135427951812744
    3. ' '' → logprob: -1.7385427951812744
    4. ''i' → logprob: -5.8635430335998535
    5. ''a' → logprob: -6.3635430335998535
    6. ''e' → logprob: -6.9885430335998535
    7. ''z' → logprob: -7.3635430335998535
    8. ''p' → logprob: -7.3635430335998535
    9. ''f' → logprob: -7.4885430335998535
    10. ''m' → logprob: -7.8635430335998535

Token 155: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003522621700540185
    2. 'a' → logprob: -6.6285223960876465
    3. 'z' → logprob: -7.5035223960876465
    4. '0' → logprob: -8.003522872924805
    5. ''' → logprob: -8.378522872924805
    6. '1' → logprob: -8.503522872924805
    7. 'n' → logprob: -9.378522872924805
    8. 'r' → logprob: -9.503522872924805
    9. '']' → logprob: -9.628522872924805
    10. 'p' → logprob: -9.878522872924805

Token 156: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.00948677770793438
    2. ',' → logprob: -5.009486675262451
    3. '']' → logprob: -6.634486675262451
    4. ''' → logprob: -6.759486675262451
    5. 'c' → logprob: -9.25948715209961
    6. 'a' → logprob: -9.75948715209961
    7. 'e' → logprob: -10.38448715209961
    8. ''a' → logprob: -10.50948715209961
    9. '','' → logprob: -10.63448715209961
    10. ']' → logprob: -10.75948715209961

Token 157: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.7187197804450989
    2. ''' → logprob: -0.8437197804450989
    3. ''a' → logprob: -3.968719720840454
    4. ''z' → logprob: -4.593719959259033
    5. ''p' → logprob: -5.093719959259033
    6. ''e' → logprob: -5.468719959259033
    7. ''s' → logprob: -5.718719959259033
    8. ''i' → logprob: -5.718719959259033
    9. '...' → logprob: -5.843719959259033
    10. '...]' → logprob: -5.968719959259033

Token 158: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5819215178489685
    2. ''' → logprob: -0.8319215178489685
    3. ''z' → logprob: -6.956921577453613
    4. '']' → logprob: -7.206921577453613
    5. ' '' → logprob: -7.456921577453613
    6. ''n' → logprob: -7.706921577453613
    7. ''a' → logprob: -7.831921577453613
    8. 'a' → logprob: -7.956921577453613
    9. ''s' → logprob: -7.956921577453613
    10. ''b' → logprob: -8.081921577453613

Token 159: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '']' → logprob: -0.03560778498649597
    2. ']' → logprob: -3.7856078147888184
    3. '',' → logprob: -4.410607814788818
    4. ''' → logprob: -9.66060733795166
    5. ',' → logprob: -10.16060733795166
    6. '"]' → logprob: -11.91060733795166
    7. ')' → logprob: -12.03560733795166
    8. '')' → logprob: -12.53560733795166
    9. '#' → logprob: -12.91060733795166
    10. '']]' → logprob: -13.16060733795166

Token 160: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.4297062158584595
    2. 's' → logprob: -1.3047062158584595
    3. 'A' → logprob: -3.80470609664917
    4. 'bits' → logprob: -3.80470609664917
    5. 'a' → logprob: -5.05470609664917
    6. 'bit' → logprob: -6.42970609664917
    7. 'chars' → logprob: -6.55470609664917
    8. 'string' → logprob: -6.55470609664917
    9. 'b' → logprob: -6.92970609664917
    10. 'x' → logprob: -7.05470609664917

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894284814596176
    2. '=' → logprob: -2.463942766189575
    3. ',' → logprob: -13.588942527770996
    4. ')' → logprob: -14.713942527770996
    5. '[' → logprob: -14.963942527770996
    6. 's' → logprob: -15.338942527770996
    7. '_' → logprob: -15.463942527770996
    8. '=list' → logprob: -15.588942527770996
    9. '.' → logprob: -15.838942527770996
    10. ' ' → logprob: -16.088943481445312

Token 162: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.005789305083453655
    2. ' list' → logprob: -5.380789279937744
    3. 'input' → logprob: -6.755789279937744
    4. ' input' → logprob: -12.505789756774902
    5. '(list' → logprob: -15.755789756774902
    6. 'li' → logprob: -16.130788803100586
    7. '=list' → logprob: -16.380788803100586
    8. '[list' → logprob: -17.005788803100586
    9. '[input' → logprob: -17.005788803100586
    10. '```' → logprob: -17.255788803100586

Token 163: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.002493968466296792
    2. '(' → logprob: -6.002493858337402
    3. '()' → logprob: -11.252493858337402
    4. ' (' → logprob: -12.752493858337402
    5. '(str' → logprob: -13.252493858337402
    6. 'input' → logprob: -15.377493858337402
    7. '=input' → logprob: -16.50249481201172
    8. ',input' → logprob: -16.75249481201172
    9. '((' → logprob: -17.37749481201172
    10. '<input' → logprob: -17.37749481201172

Token 164: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004084455315023661
    2. '()' → logprob: -5.504084587097168
    3. '().' → logprob: -13.129084587097168
    4. ' ())' → logprob: -13.129084587097168
    5. '();)' → logprob: -13.879084587097168
    6. '()))' → logprob: -15.254084587097168
    7. '())
' → logprob: -15.504084587097168
    8. ')' → logprob: -15.629084587097168
    9. '());' → logprob: -15.754084587097168
    10. '()]' → logprob: -16.00408363342285

Token 165: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02536698430776596
    2. '#' → logprob: -4.40036678314209
    3. 'counter' → logprob: -6.02536678314209
    4. ' 
' → logprob: -6.27536678314209
    5. '
' → logprob: -6.40036678314209
    6. 'result' → logprob: -6.52536678314209
    7. 'counts' → logprob: -6.77536678314209
    8. 'for' → logprob: -7.15036678314209
    9. 'count' → logprob: -7.77536678314209
    10. '  
' → logprob: -8.02536678314209

Token 166: ' Pr' (ID: 2284)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -1.3301829099655151
    2. 'freq' → logprob: -1.3301829099655151
    3. 'counts' → logprob: -1.5801829099655151
    4. 'count' → logprob: -2.7051830291748047
    5. 'com' → logprob: -3.3301830291748047
    6. 'result' → logprob: -3.4551830291748047
    7. 'occ' → logprob: -4.080183029174805
    8. '#' → logprob: -4.330183029174805
    9. 'possible' → logprob: -4.330183029174805
    10. 'for' → logprob: -4.705183029174805

Token 167: 'endre' (ID: 9574)
  Prédit: 'oss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oss' → logprob: -0.21284925937652588
    2. '#' → logprob: -2.0878491401672363
    3. 'r' → logprob: -3.4628491401672363
    4. 'os' → logprob: -4.337849140167236
    5. 'ro' → logprob: -5.087849140167236
    6. 'er' → logprob: -5.962849140167236
    7. 'ar' → logprob: -6.087849140167236
    8. 'rof' → logprob: -6.212849140167236
    9. 'osition' → logprob: -6.587849140167236
    10. 'ermut' → logprob: -6.962849140167236

Token 168: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44245368242263794
    2. '_' → logprob: -1.1924536228179932
    3. '(S' → logprob: -4.442453861236572
    4. '(N' → logprob: -4.942453861236572
    5. '()' → logprob: -5.067453861236572
    6. 'S' → logprob: -5.567453861236572
    7. ' une' → logprob: -5.817453861236572
    8. ' la' → logprob: -5.942453861236572
    9. 's' → logprob: -6.067453861236572
    10. '[' → logprob: -6.192453861236572

Token 169: ' partie' (ID: 22139)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.5524912476539612
    2. ' Counter' → logprob: -1.6774911880493164
    3. 's' → logprob: -3.3024911880493164
    4. 'sum' → logprob: -3.8024911880493164
    5. 'len' → logprob: -3.8024911880493164
    6. 'set' → logprob: -3.9274911880493164
    7. 'S' → logprob: -3.9274911880493164
    8. 'counter' → logprob: -4.052491188049316
    9. 'N' → logprob: -4.302491188049316
    10. 'for' → logprob: -4.552491188049316

Token 170: ' droite' (ID: 61428)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.0229507684707642
    2. ' S' → logprob: -1.6479507684707642
    3. 'N' → logprob: -2.1479506492614746
    4. ' N' → logprob: -2.2729506492614746
    5. '[' → logprob: -2.3979506492614746
    6. 's' → logprob: -3.5229506492614746
    7. '(' → logprob: -3.7729506492614746
    8. '[N' → logprob: -4.272950649261475
    9. ' de' → logprob: -4.772950649261475
    10. '[:]' → logprob: -4.897950649261475

Token 171: ' de' (ID: 334)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.1132452487945557
    2. 'de' → logprob: -1.4882452487945557
    3. '[:]' → logprob: -2.2382452487945557
    4. '[-' → logprob: -2.4882452487945557
    5. ' de' → logprob: -2.4882452487945557
    6. '[' → logprob: -2.8632452487945557
    7. 'N' → logprob: -2.9882452487945557
    8. ' S' → logprob: -4.488245010375977
    9. '[:-' → logprob: -4.738245010375977
    10. 's' → logprob: -4.863245010375977

Token 172: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.09457414597272873
    2. ' S' → logprob: -2.469574213027954
    3. ' la' → logprob: -5.844573974609375
    4. 's' → logprob: -6.094573974609375
    5. 'la' → logprob: -8.344573974609375
    6. '<|end|>' → logprob: -9.344573974609375
    7. 'l' → logprob: -10.094573974609375
    8. 'the' → logprob: -10.594573974609375
    9. '(S' → logprob: -11.219573974609375
    10. '```' → logprob: -11.469573974609375

Token 173: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.35157230496406555
    2. 'liste' → logprob: -1.9765722751617432
    3. 'chaine' → logprob: -2.851572275161743
    4. 'S' → logprob: -3.101572275161743
    5. ' liste' → logprob: -3.476572275161743
    6. 'cha' → logprob: -4.851572513580322
    7. 's' → logprob: -5.101572513580322
    8. 'string' → logprob: -5.726572513580322
    9. ' chaine' → logprob: -5.976572513580322
    10. ' S' → logprob: -5.976572513580322

Token 174: ' en' (ID: 469)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8383867740631104
    2. ' de' → logprob: -1.3383867740631104
    3. ' S' → logprob: -2.0883867740631104
    4. 'de' → logprob: -2.8383867740631104
    5. 's' → logprob: -3.4633867740631104
    6. '[:]' → logprob: -3.8383867740631104
    7. '[' → logprob: -3.9633867740631104
    8. '[-' → logprob: -4.213386535644531
    9. 'N' → logprob: -4.463386535644531
    10. ' N' → logprob: -5.463386535644531

Token 175: ' considér' (ID: 68502)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.44934025406837463
    2. 's' → logprob: -2.199340343475342
    3. ' S' → logprob: -2.324340343475342
    4. '```' → logprob: -3.199340343475342
    5. 'slice' → logprob: -4.199340343475342
    6. 'reverse' → logprob: -4.574340343475342
    7. 't' → logprob: -4.949340343475342
    8. ' utilisant' → logprob: -5.324340343475342
    9. '<|end|>' → logprob: -5.449340343475342
    10. 'f' → logprob: -5.574340343475342

Token 176: 'ant' (ID: 493)
  Prédit: 'ration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ration' → logprob: -0.7000536322593689
    2. 'ng' → logprob: -1.3250536918640137
    3. 's' → logprob: -2.2000536918640137
    4. 'ation' → logprob: -3.5750536918640137
    5. 'raison' → logprob: -3.9500536918640137
    6. 'r' → logprob: -4.075053691864014
    7. 'g' → logprob: -4.575053691864014
    8. 'vation' → logprob: -4.575053691864014
    9. 'er' → logprob: -5.200053691864014
    10. 'son' → logprob: -5.325053691864014

Token 177: ' les' (ID: 1341)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.6683400869369507
    2. ' N' → logprob: -1.1683400869369507
    3. 'S' → logprob: -2.2933402061462402
    4. 'N' → logprob: -3.0433402061462402
    5. ' ' → logprob: -5.16834020614624
    6. '[' → logprob: -5.79334020614624
    7. '[-' → logprob: -5.79334020614624
    8. '[N' → logprob: -5.79334020614624
    9. ' len' → logprob: -6.41834020614624
    10. ' indices' → logprob: -6.66834020614624

Token 178: ' caractères' (ID: 183106)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.16959409415721893
    2. 'N' → logprob: -2.4195940494537354
    3. ' indices' → logprob: -3.5445940494537354
    4. 'indices' → logprob: -4.1695942878723145
    5. ' S' → logprob: -5.5445942878723145
    6. ' derniers' → logprob: -5.5445942878723145
    7. 's' → logprob: -6.1695942878723145
    8. '[N' → logprob: -6.1695942878723145
    9. 'S' → logprob: -6.4195942878723145
    10. '[' → logprob: -6.5445942878723145

Token 179: ' depuis' (ID: 16277)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.1169484853744507
    2. ' S' → logprob: -1.4919484853744507
    3. 'S' → logprob: -1.7419484853744507
    4. '[' → logprob: -2.4919486045837402
    5. '[N' → logprob: -2.8669486045837402
    6. 's' → logprob: -3.2419486045837402
    7. 'N' → logprob: -3.8669486045837402
    8. ' N' → logprob: -3.9919486045837402
    9. ' de' → logprob: -4.36694860458374
    10. '[len' → logprob: -5.11694860458374

Token 180: ' l' (ID: 305)
  Prédit: '-N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-N' → logprob: -0.010135679505765438
    2. ' -' → logprob: -5.010135650634766
    3. '-' → logprob: -6.010135650634766
    4. '-S' → logprob: -7.885135650634766
    5. '-end' → logprob: -8.635135650634766
    6. '[-' → logprob: -9.260135650634766
    7. '-index' → logprob: -9.385135650634766
    8. '-n' → logprob: -9.510135650634766
    9. '-(' → logprob: -10.510135650634766
    10. 'N' → logprob: -10.510135650634766

Token 181: ''ind' (ID: 82245)
  Prédit: '-N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-N' → logprob: -0.7773889303207397
    2. '-' → logprob: -1.1523889303207397
    3. '-n' → logprob: -2.5273890495300293
    4. '[-' → logprob: -3.4023890495300293
    5. '-(' → logprob: -3.4023890495300293
    6. '-i' → logprob: -3.5273890495300293
    7. '(-' → logprob: -4.652389049530029
    8. ' -' → logprob: -4.652389049530029
    9. '-fin' → logprob: -4.652389049530029
    10. '-d' → logprob: -5.527389049530029

Token 182: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.05860389024019241
    2. 'e' → logprob: -3.6836040019989014
    3. 'ice' → logprob: -4.183603763580322
    4. 'ices' → logprob: -4.683603763580322
    5. 'es' → logprob: -6.433603763580322
    6. 'ce' → logprob: -6.683603763580322
    7. 'ces' → logprob: -7.183603763580322
    8. 'x' → logprob: -7.308603763580322
    9. '-' → logprob: -7.308603763580322
    10. '```' → logprob: -7.683603763580322

Token 183: ' N' (ID: 478)
  Prédit: '-N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-N' → logprob: -0.027089811861515045
    2. '-' → logprob: -4.652089595794678
    3. '-l' → logprob: -5.027089595794678
    4. '-n' → logprob: -5.527089595794678
    5. '(-' → logprob: -6.027089595794678
    6. '[-' → logprob: -6.527089595794678
    7. '-L' → logprob: -6.527089595794678
    8. ' -' → logprob: -6.777089595794678
    9. '(len' → logprob: -10.402090072631836
    10. 'len' → logprob: -10.527090072631836

Token 184: ' jusqu' (ID: 21961)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8912290334701538
    2. '[-' → logprob: -0.8912290334701538
    3. '-N' → logprob: -2.5162291526794434
    4. '[' → logprob: -3.5162291526794434
    5. ':' → logprob: -3.6412291526794434
    6. '[N' → logprob: -3.8912291526794434
    7. '[:]' → logprob: -5.016229152679443
    8. '+' → logprob: -5.391229152679443
    9. ':]' → logprob: -6.266229152679443
    10. 'N' → logprob: -6.391229152679443

Token 185: ''à' (ID: 33688)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2560708224773407
    2. ''à' → logprob: -1.881070852279663
    3. 'à' → logprob: -3.756070852279663
    4. ' à' → logprob: -4.631070613861084
    5. ' :' → logprob: -4.756070613861084
    6. '[:]' → logprob: -4.881070613861084
    7. '’à' → logprob: -5.006070613861084
    8. ''au' → logprob: -5.756070613861084
    9. '=len' → logprob: -6.131070613861084
    10. 'au' → logprob: -6.506070613861084

Token 186: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.14940163493156433
    2. '2' → logprob: -2.7744016647338867
    3. ' la' → logprob: -3.6494016647338867
    4. 'la' → logprob: -3.8994016647338867
    5. 'N' → logprob: -4.524401664733887
    6. ' len' → logprob: -4.899401664733887
    7. ' ' → logprob: -5.399401664733887
    8. 'None' → logprob: -6.399401664733887
    9. 'l' → logprob: -7.024401664733887
    10. ' N' → logprob: -7.149401664733887

Token 187: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.21203947067260742
    2. 'len' → logprob: -1.9620394706726074
    3. '2' → logprob: -3.9620394706726074
    4. 'N' → logprob: -4.962039470672607
    5. 'None' → logprob: -5.212039470672607
    6. ' ' → logprob: -5.837039470672607
    7. 'end' → logprob: -5.962039470672607
    8. ' fin' → logprob: -6.087039470672607
    9. 'n' → logprob: -6.712039470672607
    10. ' None' → logprob: -6.837039470672607

Token 188: '.
' (ID: 558)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.03460090234875679
    2. '[' → logprob: -4.159600734710693
    3. '[S' → logprob: -4.409600734710693
    4. 's' → logprob: -5.909600734710693
    5. ' S' → logprob: -6.909600734710693
    6. '(S' → logprob: -7.034600734710693
    7. '[-' → logprob: -8.034601211547852
    8. '[N' → logprob: -8.034601211547852
    9. '[::-' → logprob: -9.159601211547852
    10. '```' → logprob: -9.284601211547852

Token 189: '#' (ID: 2)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.1579778790473938
    2. ' S' → logprob: -2.157977819442749
    3. 'right' → logprob: -4.157978057861328
    4. 's' → logprob: -5.032978057861328
    5. 'R' → logprob: -5.907978057861328
    6. ' right' → logprob: -6.532978057861328
    7. 'r' → logprob: -7.157978057861328
    8. 'suffix' → logprob: -7.907978057861328
    9. '[' → logprob: -8.407978057861328
    10. 'T' → logprob: -8.407978057861328

Token 190: ' reversed' (ID: 57184)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.7834908962249756
    2. 'S' → logprob: -1.1584908962249756
    3. 'R' → logprob: -2.7834908962249756
    4. ' right' → logprob: -3.2834908962249756
    5. ' S' → logprob: -3.4084908962249756
    6. 'suffix' → logprob: -3.6584908962249756
    7. 's' → logprob: -4.158491134643555
    8. 'sub' → logprob: -4.158491134643555
    9. ' suffix' → logprob: -5.408491134643555
    10. 'T' → logprob: -5.658491134643555

Token 191: '()' (ID: 416)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.7354379296302795
    2. 'S' → logprob: -1.2354378700256348
    3. '_s' → logprob: -2.4854378700256348
    4. '_S' → logprob: -2.6104378700256348
    5. '(' → logprob: -3.2354378700256348
    6. 's' → logprob: -3.9854378700256348
    7. '_' → logprob: -4.610437870025635
    8. ' =' → logprob: -6.235437870025635
    9. '_part' → logprob: -6.860437870025635
    10. '=' → logprob: -7.735437870025635

Token 192: ' retourne' (ID: 178818)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.6375806927680969
    2. '(' → logprob: -0.7625806927680969
    3. 's' → logprob: -6.762580871582031
    4. 'S' → logprob: -6.887580871582031
    5. '(
' → logprob: -7.012580871582031
    6. '(s' → logprob: -7.387580871582031
    7. '(re' → logprob: -7.887580871582031
    8. '(list' → logprob: -8.262580871582031
    9. 're' → logprob: -9.012580871582031
    10. '([' → logprob: -9.512580871582031

Token 193: ' un' (ID: 537)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8363820314407349
    2. 're' → logprob: -1.0863820314407349
    3. ' S' → logprob: -1.9613820314407349
    4. '(S' → logprob: -3.3363819122314453
    5. ' reversed' → logprob: -3.3363819122314453
    6. ' (' → logprob: -5.336381912231445
    7. ')' → logprob: -5.836381912231445
    8. ' list' → logprob: -5.836381912231445
    9. 'list' → logprob: -5.961381912231445
    10. '(' → logprob: -6.336381912231445

Token 194: ' it' (ID: 480)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.8792363405227661
    2. 's' → logprob: -1.7542363405227661
    3. ' reversed' → logprob: -2.2542362213134766
    4. 'iterator' → logprob: -2.5042362213134766
    5. ' iterator' → logprob: -2.8792362213134766
    6. '_iterator' → logprob: -3.0042362213134766
    7. 'iter' → logprob: -3.6292362213134766
    8. '<|end|>' → logprob: -4.129236221313477
    9. ' iter' → logprob: -4.504236221313477
    10. '[::-' → logprob: -4.629236221313477

Token 195: 'ér' (ID: 2156)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6456291675567627
    2. '(S' → logprob: -1.2706291675567627
    3. 'ator' → logprob: -2.8956291675567627
    4. 're' → logprob: -3.0206291675567627
    5. 'S' → logprob: -3.8956291675567627
    6. ')' → logprob: -4.645628929138184
    7. 'r' → logprob: -5.020628929138184
    8. '(re' → logprob: -5.270628929138184
    9. '=' → logprob: -5.395628929138184
    10. 'ertools' → logprob: -5.395628929138184

Token 196: 'able' (ID: 562)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.7928557395935059
    2. 'able' → logprob: -1.0428557395935059
    3. 'er' → logprob: -2.917855739593506
    4. 're' → logprob: -3.042855739593506
    5. 's' → logprob: -3.917855739593506
    6. 'e' → logprob: -4.042855739593506
    7. 'r' → logprob: -4.417855739593506
    8. 'red' → logprob: -4.667855739593506
    9. 'ble' → logprob: -4.667855739593506
    10. 'd' → logprob: -5.292855739593506

Token 197: ' qui' (ID: 2780)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.005736679304391146
    2. '(' → logprob: -6.255736827850342
    3. 'S' → logprob: -6.255736827850342
    4. '(re' → logprob: -7.630736827850342
    5. 's' → logprob: -7.755736827850342
    6. 're' → logprob: -8.005736351013184
    7. '(s' → logprob: -8.380736351013184
    8. ' (' → logprob: -8.755736351013184
    9. '(
' → logprob: -9.505736351013184
    10. '(list' → logprob: -9.880736351013184

Token 198: ' lit' (ID: 11980)
  Prédit: 'ren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ren' → logprob: -0.21622300148010254
    2. 'reverse' → logprob: -2.2162230014801025
    3. 'inverse' → logprob: -3.4662230014801025
    4. 're' → logprob: -4.341222763061523
    5. 'rev' → logprob: -4.341222763061523
    6. 'in' → logprob: -5.216222763061523
    7. 's' → logprob: -5.716222763061523
    8. ' retourne' → logprob: -5.841222763061523
    9. 'ret' → logprob: -5.966222763061523
    10. ' ren' → logprob: -6.091222763061523

Token 199: ' la' (ID: 557)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.19652503728866577
    2. 'S' → logprob: -1.9465250968933105
    3. '(' → logprob: -4.1965250968933105
    4. ' S' → logprob: -4.5715250968933105
    5. 's' → logprob: -5.6965250968933105
    6. 're' → logprob: -6.1965250968933105
    7. '(re' → logprob: -6.5715250968933105
    8. ' reversed' → logprob: -7.0715250968933105
    9. ')' → logprob: -7.5715250968933105
    10. ' la' → logprob: -7.6965250968933105

Token 200: ' sé' (ID: 7462)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.30023908615112305
    2. ' S' → logprob: -1.925239086151123
    3. 'élé' → logprob: -2.675239086151123
    4. 's' → logprob: -3.425239086151123
    5. 're' → logprob: -6.050239086151123
    6. 'chaine' → logprob: -6.675239086151123
    7. 'liste' → logprob: -6.800239086151123
    8. ' sequence' → logprob: -7.425239086151123
    9. 'é' → logprob: -7.675239086151123
    10. ')' → logprob: -7.800239086151123

Token 201: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0025366635527461767
    2. 'rie' → logprob: -6.127536773681641
    3. 'que' → logprob: -9.37753677368164
    4. 'quences' → logprob: -9.50253677368164
    5. 'ction' → logprob: -10.00253677368164
    6. 'q' → logprob: -10.12753677368164
    7. 'qu' → logprob: -10.12753677368164
    8. 'r' → logprob: -11.00253677368164
    9. 'QUENCE' → logprob: -11.25253677368164
    10. 'lection' → logprob: -11.37753677368164

Token 202: ' à' (ID: 1221)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.10343535244464874
    2. 'S' → logprob: -2.4784352779388428
    3. '(' → logprob: -4.603435516357422
    4. 's' → logprob: -5.603435516357422
    5. ' (' → logprob: -8.603435516357422
    6. '(s' → logprob: -8.853435516357422
    7. ' S' → logprob: -9.228435516357422
    8. '(
' → logprob: -9.603435516357422
    9. '=' → logprob: -10.228435516357422
    10. ')' → logprob: -10.603435516357422

Token 203: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.017450354993343353
    2. ' l' → logprob: -4.392450332641602
    3. 'reb' → logprob: -6.392450332641602
    4. 'len' → logprob: -6.642450332641602
    5. 're' → logprob: -6.767450332641602
    6. 'part' → logprob: -8.017450332641602
    7. ' partir' → logprob: -9.142450332641602
    8. '[l' → logprob: -9.642450332641602
    9. '```' → logprob: -10.392450332641602
    10. '	l' → logprob: -10.392450332641602

Token 204: ''en' (ID: 16740)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7354899048805237
    2. 'dro' → logprob: -1.860489845275879
    3. ' droite' → logprob: -2.860489845275879
    4. 'r' → logprob: -3.110489845275879
    5. 'ro' → logprob: -3.610489845275879
    6. 'd' → logprob: -3.860489845275879
    7. 'ra' → logprob: -3.985489845275879
    8. 'fin' → logprob: -4.235489845275879
    9. 'e' → logprob: -4.235489845275879
    10. 're' → logprob: -4.485489845275879

Token 205: 'vers' (ID: 3674)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004348821938037872
    2. 'vers' → logprob: -5.5043487548828125
    3. 'ds' → logprob: -9.504348754882812
    4. 's' → logprob: -10.129348754882812
    5. 'de' → logprob: -10.254348754882812
    6. 'dre' → logprob: -10.629348754882812
    7. 'nd' → logprob: -10.879348754882812
    8. 'dl' → logprob: -11.754348754882812
    9. 'def' → logprob: -12.379348754882812
    10. 'D' → logprob: -12.379348754882812

Token 206: '.
' (ID: 558)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.07971999049186707
    2. '(S' → logprob: -2.9547200202941895
    3. 're' → logprob: -4.2047200202941895
    4. 's' → logprob: -5.3297200202941895
    5. '(' → logprob: -6.7047200202941895
    6. '_s' → logprob: -7.0797200202941895
    7. '_S' → logprob: -7.4547200202941895
    8. ' S' → logprob: -8.329719543457031
    9. 'part' → logprob: -8.454719543457031
    10. 'for' → logprob: -8.579719543457031

Token 207: '#' (ID: 2)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.05787006393074989
    2. ' S' → logprob: -3.5578701496124268
    3. 's' → logprob: -4.932869911193848
    4. 're' → logprob: -4.932869911193848
    5. '(S' → logprob: -5.307869911193848
    6. ' reversed' → logprob: -6.307869911193848
    7. 'r' → logprob: -6.432869911193848
    8. 'R' → logprob: -7.057869911193848
    9. 'rev' → logprob: -7.432869911193848
    10. ')' → logprob: -7.682869911193848

Token 208: ' list' (ID: 1562)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5659884214401245
    2. 'suffix' → logprob: -1.5659884214401245
    3. 'R' → logprob: -2.815988540649414
    4. 'T' → logprob: -3.690988540649414
    5. 'S' → logprob: -3.690988540649414
    6. 'tail' → logprob: -4.065988540649414
    7. 'part' → logprob: -4.315988540649414
    8. ' suffix' → logprob: -4.440988540649414
    9. 'r' → logprob: -4.565988540649414
    10. ' right' → logprob: -4.690988540649414

Token 209: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24545761942863464
    2. '(re' → logprob: -1.620457649230957
    3. '()' → logprob: -4.245457649230957
    4. 're' → logprob: -5.745457649230957
    5. '(s' → logprob: -7.495457649230957
    6. '(reverse' → logprob: -7.620457649230957
    7. '(
' → logprob: -7.995457649230957
    8. '_re' → logprob: -8.745457649230957
    9. 's' → logprob: -8.995457649230957
    10. '(S' → logprob: -9.120457649230957

Token 210: ' transforme' (ID: 184109)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2620798349380493
    2. '(re' → logprob: -1.6370798349380493
    3. 're' → logprob: -3.8870797157287598
    4. '(S' → logprob: -4.88707971572876
    5. '(
' → logprob: -6.26207971572876
    6. 'S' → logprob: -6.26207971572876
    7. '()' → logprob: -6.63707971572876
    8. '(reverse' → logprob: -7.01207971572876
    9. 's' → logprob: -8.012080192565918
    10. '(list' → logprob: -8.137080192565918

Token 211: ' cet' (ID: 19505)
  Prédit: '(re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.13002432882785797
    2. 're' → logprob: -2.1300244331359863
    3. '(' → logprob: -6.255024433135986
    4. '(list' → logprob: -8.130023956298828
    5. 'S' → logprob: -8.630023956298828
    6. 's' → logprob: -9.005023956298828
    7. ')' → logprob: -9.130023956298828
    8. '(reverse' → logprob: -9.255023956298828
    9. 'list' → logprob: -9.380023956298828
    10. '(S' → logprob: -9.505023956298828

Token 212: ' it' (ID: 480)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.18997904658317566
    2. 're' → logprob: -2.064979076385498
    3. ' iterable' → logprob: -4.689979076385498
    4. 'a' → logprob: -5.064979076385498
    5. '[::-' → logprob: -5.064979076385498
    6. ' reversed' → logprob: -5.189979076385498
    7. 'es' → logprob: -5.564979076385498
    8. ' it' → logprob: -6.064979076385498
    9. ')' → logprob: -6.314979076385498
    10. 'iter' → logprob: -6.939979076385498

Token 213: 'ér' (ID: 2156)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.03751884400844574
    2. 'ér' → logprob: -3.4125187397003174
    3. 'able' → logprob: -6.9125189781188965
    4. 'r' → logprob: -6.9125189781188965
    5. 're' → logprob: -7.5375189781188965
    6. 'èr' → logprob: -8.412518501281738
    7. 'érateur' → logprob: -9.037518501281738
    8. 'e' → logprob: -9.162518501281738
    9. '(S' → logprob: -9.412518501281738
    10. 'S' → logprob: -9.412518501281738

Token 214: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.0003449984942562878
    2. 'ble' → logprob: -8.875345230102539
    3. 'abl' → logprob: -9.750345230102539
    4. 'e' → logprob: -10.375345230102539
    5. 'table' → logprob: -10.625345230102539
    6. 'er' → logprob: -11.000345230102539
    7. 'ale' → logprob: -11.375345230102539
    8. 'a' → logprob: -12.250345230102539
    9. 'nable' → logprob: -12.250345230102539
    10. 'list' → logprob: -12.375345230102539

Token 215: ' en' (ID: 469)
  Prédit: '(re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.09026661515235901
    2. 're' → logprob: -3.215266704559326
    3. '(' → logprob: -3.340266704559326
    4. ')' → logprob: -5.590266704559326
    5. '(reverse' → logprob: -6.340266704559326
    6. '()' → logprob: -6.465266704559326
    7. '(
' → logprob: -6.590266704559326
    8. '[::-' → logprob: -7.590266704559326
    9. '(list' → logprob: -8.465266227722168
    10. '(S' → logprob: -8.715266227722168

Token 216: ' une' (ID: 2463)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.24792452156543732
    2. 'list' → logprob: -1.872924566268921
    3. 'S' → logprob: -3.622924566268921
    4. ' list' → logprob: -4.747924327850342
    5. '[]' → logprob: -4.997924327850342
    6. 'une' → logprob: -5.372924327850342
    7. ' S' → logprob: -5.497924327850342
    8. '[S' → logprob: -5.747924327850342
    9. ' une' → logprob: -6.122924327850342
    10. '[::-' → logprob: -6.247924327850342

Token 217: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.04992574825882912
    2. ' liste' → logprob: -3.4249258041381836
    3. 'list' → logprob: -4.174925804138184
    4. '[]' → logprob: -8.549925804138184
    5. '[::-' → logprob: -8.549925804138184
    6. ' list' → logprob: -8.674925804138184
    7. 'Liste' → logprob: -10.299925804138184
    8. '[' → logprob: -10.424925804138184
    9. 'lista' → logprob: -10.924925804138184
    10. '```' → logprob: -10.924925804138184

Token 218: ' de' (ID: 334)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.18543754518032074
    2. 're' → logprob: -2.0604374408721924
    3. '(S' → logprob: -4.1854376792907715
    4. 'r' → logprob: -5.1854376792907715
    5. 'right' → logprob: -5.5604376792907715
    6. 's' → logprob: -5.6854376792907715
    7. '(' → logprob: -5.8104376792907715
    8. '(re' → logprob: -6.6854376792907715
    9. 'R' → logprob: -6.8104376792907715
    10. 'part' → logprob: -7.0604376792907715

Token 219: ' caractères' (ID: 183106)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.7861321568489075
    2. 'car' → logprob: -1.1611320972442627
    3. 'S' → logprob: -1.5361320972442627
    4. 'chars' → logprob: -5.411132335662842
    5. ' caractères' → logprob: -5.411132335662842
    6. 'élé' → logprob: -6.911132335662842
    7. 'list' → logprob: -6.911132335662842
    8. 'ré' → logprob: -7.161132335662842
    9. 'l' → logprob: -7.286132335662842
    10. 'la' → logprob: -7.661132335662842

Token 220: ' invers' (ID: 38721)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.28491318225860596
    2. '(S' → logprob: -1.659913182258606
    3. 're' → logprob: -3.6599130630493164
    4. '(' → logprob: -4.409913063049316
    5. ' =' → logprob: -5.534913063049316
    6. '=' → logprob: -5.784913063049316
    7. 's' → logprob: -6.034913063049316
    8. '(re' → logprob: -6.159913063049316
    9. '(
' → logprob: -6.534913063049316
    10. '_S' → logprob: -6.659913063049316

Token 221: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.5679075717926025
    2. 'ed' → logprob: -1.6929075717926025
    3. 'e' → logprob: -2.1929075717926025
    4. 'é' → logprob: -2.8179075717926025
    5. '(S' → logprob: -2.9429075717926025
    6. ']' → logprob: -4.817907333374023
    7. 'S' → logprob: -5.442907333374023
    8. '=S' → logprob: -6.317907333374023
    9. 'és' → logprob: -6.567907333374023
    10. ')' → logprob: -6.817907333374023

Token 222: '.
' (ID: 558)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.05364486202597618
    2. '(S' → logprob: -3.803644895553589
    3. 're' → logprob: -4.30364465713501
    4. 's' → logprob: -5.30364465713501
    5. ' =' → logprob: -6.05364465713501
    6. '(' → logprob: -6.42864465713501
    7. 'r' → logprob: -6.42864465713501
    8. '_s' → logprob: -6.80364465713501
    9. '_S' → logprob: -7.42864465713501
    10. '=' → logprob: -7.42864465713501

Token 223: '#' (ID: 2)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.17448678612709045
    2. 'right' → logprob: -2.6744868755340576
    3. 'T' → logprob: -3.5494868755340576
    4. 'R' → logprob: -4.0494866371154785
    5. 're' → logprob: -4.2994866371154785
    6. 'r' → logprob: -4.5494866371154785
    7. 'rev' → logprob: -5.5494866371154785
    8. 'part' → logprob: -6.2994866371154785
    9. 'tail' → logprob: -6.5494866371154785
    10. 'B' → logprob: -6.6744866371154785

Token 224: ' Cela' (ID: 44403)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5964615345001221
    2. 'R' → logprob: -1.971461534500122
    3. 'T' → logprob: -2.221461534500122
    4. 'S' → logprob: -2.596461534500122
    5. 'suffix' → logprob: -2.846461534500122
    6. 'tail' → logprob: -4.096461296081543
    7. 'part' → logprob: -4.221461296081543
    8. 'r' → logprob: -5.096461296081543
    9. 'D' → logprob: -5.471461296081543
    10. 'rev' → logprob: -5.596461296081543

Token 225: ' permet' (ID: 11798)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7002596259117126
    2. ' =' → logprob: -0.7002596259117126
    3. 's' → logprob: -5.575259685516357
    4. '#' → logprob: -6.825259685516357
    5. '_' → logprob: -7.325259685516357
    6. '_=' → logprob: -8.5752592086792
    7. 'S' → logprob: -8.9502592086792
    8. 'd' → logprob: -9.0752592086792
    9. 'n' → logprob: -9.2002592086792
    10. ' #' → logprob: -9.7002592086792

Token 226: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3670361340045929
    2. ' d' → logprob: -1.6170361042022705
    3. 'de' → logprob: -2.6170361042022705
    4. 'd' → logprob: -3.9920361042022705
    5. '_' → logprob: -4.61703634262085
    6. '_de' → logprob: -6.11703634262085
    7. ' ' → logprob: -6.61703634262085
    8. 's' → logprob: -7.11703634262085
    9. '#' → logprob: -7.11703634262085
    10. '_d' → logprob: -7.24203634262085

Token 227: ' traiter' (ID: 105852)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.5152541399002075
    2. 's' → logprob: -2.515254020690918
    3. 'prendre' → logprob: -2.515254020690918
    4. ' prendre' → logprob: -2.640254020690918
    5. 'comp' → logprob: -2.765254020690918
    6. '#' → logprob: -2.765254020690918
    7. ' comparer' → logprob: -2.765254020690918
    8. ' créer' → logprob: -3.140254020690918
    9. 'corr' → logprob: -3.890254020690918
    10. 'S' → logprob: -4.015254020690918

Token 228: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6439570188522339
    2. ' S' → logprob: -0.7689570188522339
    3. ' la' → logprob: -5.268957138061523
    4. ' reversed' → logprob: -6.018957138061523
    5. ' le' → logprob: -6.643957138061523
    6. 're' → logprob: -7.018957138061523
    7. ' les' → logprob: -8.393957138061523
    8. 'la' → logprob: -8.518957138061523
    9. 's' → logprob: -8.643957138061523
    10. 'le' → logprob: -9.018957138061523

Token 229: ' moitié' (ID: 93216)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.17860276997089386
    2. ' S' → logprob: -2.053602695465088
    3. 's' → logprob: -4.553602695465088
    4. 'part' → logprob: -5.178602695465088
    5. 'liste' → logprob: -6.303602695465088
    6. 'suffix' → logprob: -6.428602695465088
    7. '_' → logprob: -6.553602695465088
    8. 'car' → logprob: -6.678602695465088
    9. 'd' → logprob: -6.928602695465088
    10. 'der' → logprob: -6.928602695465088

Token 230: ' droite' (ID: 61428)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7016727924346924
    2. ' de' → logprob: -1.5766727924346924
    3. 'S' → logprob: -2.3266727924346924
    4. '_' → logprob: -2.5766727924346924
    5. ' droite' → logprob: -3.5766727924346924
    6. '#' → logprob: -3.7016727924346924
    7. 'dro' → logprob: -4.451672554016113
    8. 's' → logprob: -4.451672554016113
    9. ' S' → logprob: -4.701672554016113
    10. 'd' → logprob: -4.826672554016113

Token 231: ' de' (ID: 334)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3864735960960388
    2. '(S' → logprob: -2.1364736557006836
    3. 'de' → logprob: -2.3864736557006836
    4. 's' → logprob: -3.0114736557006836
    5. '_' → logprob: -4.011473655700684
    6. '(' → logprob: -4.261473655700684
    7. ' de' → logprob: -4.261473655700684
    8. ' S' → logprob: -6.011473655700684
    9. '#' → logprob: -6.136473655700684
    10. ' (' → logprob: -6.761473655700684

Token 232: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.16128982603549957
    2. ' S' → logprob: -1.9112898111343384
    3. ' la' → logprob: -7.536289691925049
    4. 'la' → logprob: -8.411290168762207
    5. 's' → logprob: -8.536290168762207
    6. '(S' → logprob: -9.661290168762207
    7. 'l' → logprob: -11.036290168762207
    8. '#' → logprob: -11.661290168762207
    9. ' ' → logprob: -12.161290168762207
    10. ')' → logprob: -13.161290168762207

Token 233: ',' (ID: 11)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.4507043957710266
    2. 'D' → logprob: -2.325704336166382
    3. '=' → logprob: -2.575704336166382
    4. 'R' → logprob: -2.950704336166382
    5. 'S' → logprob: -2.950704336166382
    6. ' =' → logprob: -3.700704336166382
    7. 'r' → logprob: -4.075704574584961
    8. 'd' → logprob: -4.200704574584961
    9. 's' → logprob: -4.825704574584961
    10. '_right' → logprob: -5.575704574584961

Token 234: ' mais' (ID: 2899)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.2238813638687134
    2. 'right' → logprob: -1.4738813638687134
    3. 'S' → logprob: -1.7238813638687134
    4. ' right' → logprob: -2.598881244659424
    5. ' R' → logprob: -2.848881244659424
    6. ' S' → logprob: -3.098881244659424
    7. 'r' → logprob: -3.473881244659424
    8. ' droite' → logprob: -3.723881244659424
    9. 'T' → logprob: -4.473881244659424
    10. 'D' → logprob: -4.848881244659424

Token 235: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -1.0155212879180908
    2. ' en' → logprob: -2.890521287918091
    3. 'on' → logprob: -3.140521287918091
    4. ' pas' → logprob: -3.390521287918091
    5. 'avec' → logprob: -3.390521287918091
    6. 'à' → logprob: -3.515521287918091
    7. 'a' → logprob: -3.640521287918091
    8. ' à' → logprob: -3.640521287918091
    9. ' on' → logprob: -3.640521287918091
    10. ' S' → logprob: -3.765521287918091

Token 236: ' la' (ID: 557)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.8075217008590698
    2. ' sens' → logprob: -1.1825217008590698
    3. ' reverse' → logprob: -2.5575218200683594
    4. 're' → logprob: -2.6825218200683594
    5. 'ordre' → logprob: -3.4325218200683594
    6. 'sens' → logprob: -3.8075218200683594
    7. ' reversed' → logprob: -4.432521820068359
    8. ' ordre' → logprob: -4.432521820068359
    9. '_reverse' → logprob: -5.807521820068359
    10. 'mode' → logprob: -5.807521820068359

Token 237: ' lis' (ID: 20784)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.7054791450500488
    2. 're' → logprob: -1.0804791450500488
    3. 'reverse' → logprob: -3.080479145050049
    4. 'ré' → logprob: -3.580479145050049
    5. ')' → logprob: -4.330479145050049
    6. 's' → logprob: -4.705479145050049
    7. ' retourn' → logprob: -4.955479145050049
    8. ' reversed' → logprob: -5.330479145050049
    9. 'rev' → logprob: -5.580479145050049
    10. 'ren' → logprob: -5.580479145050049

Token 238: 'ant' (ID: 493)
  Prédit: 'vant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vant' → logprob: -0.38407617807388306
    2. 'ant' → logprob: -1.2590761184692383
    3. 'e' → logprob: -5.509076118469238
    4. 's' → logprob: -5.884076118469238
    5. 'nte' → logprob: -5.884076118469238
    6. 'nt' → logprob: -6.009076118469238
    7. 'v' → logprob: -6.134076118469238
    8. 'ée' → logprob: -6.134076118469238
    9. 'nant' → logprob: -6.259076118469238
    10. 'vers' → logprob: -6.509076118469238

Token 239: ' de' (ID: 334)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.4393882155418396
    2. ')' → logprob: -1.8143882751464844
    3. '[' → logprob: -2.1893882751464844
    4. ' )' → logprob: -3.0643882751464844
    5. ' [' → logprob: -4.814388275146484
    6. ']' → logprob: -5.814388275146484
    7. '()[' → logprob: -5.939388275146484
    8. '[:]' → logprob: -5.939388275146484
    9. 'S' → logprob: -6.064388275146484
    10. '[N' → logprob: -6.314388275146484

Token 240: ' droite' (ID: 61428)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.596086859703064
    2. 'man' → logprob: -1.596086859703064
    3. 'l' → logprob: -2.0960869789123535
    4. ' manière' → logprob: -2.2210869789123535
    5. 'la' → logprob: -2.4710869789123535
    6. 'fa' → logprob: -3.0960869789123535
    7. 'S' → logprob: -3.3460869789123535
    8. 'dro' → logprob: -3.7210869789123535
    9. 'reverse' → logprob: -4.0960869789123535
    10. ' façon' → logprob: -4.3460869789123535

Token 241: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14095427095890045
    2. ',' → logprob: -3.8909542560577393
    3. 'à' → logprob: -4.015954494476318
    4. ' )' → logprob: -4.265954494476318
    5. ' à' → logprob: -4.390954494476318
    6. '()' → logprob: -5.015954494476318
    7. ']' → logprob: -5.140954494476318
    8. '[' → logprob: -5.265954494476318
    9. '[::-' → logprob: -5.390954494476318
    10. '_' → logprob: -5.390954494476318

Token 242: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.12895086407661438
    2. ' gauche' → logprob: -3.128950834274292
    3. 'left' → logprob: -3.128950834274292
    4. 'l' → logprob: -3.503950834274292
    5. 'len' → logprob: -6.253951072692871
    6. 'dro' → logprob: -8.128951072692871
    7. 'la' → logprob: -8.378951072692871
    8. '```' → logprob: -8.503951072692871
    9. '_g' → logprob: -8.878951072692871
    10. 'lé' → logprob: -9.503951072692871

Token 243: '.
' (ID: 558)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3116532862186432
    2. 'R' → logprob: -2.3116533756256104
    3. 'D' → logprob: -2.4366533756256104
    4. 'half' → logprob: -3.4366533756256104
    5. 'S' → logprob: -4.186653137207031
    6. 'r' → logprob: -4.936653137207031
    7. 'part' → logprob: -5.186653137207031
    8. 'T' → logprob: -5.311653137207031
    9. 'B' → logprob: -5.686653137207031
    10. 'd' → logprob: -6.186653137207031

Token 244: 'S' (ID: 50)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5358072519302368
    2. 'R' → logprob: -1.4108072519302368
    3. 'D' → logprob: -2.7858071327209473
    4. 'T' → logprob: -3.5358071327209473
    5. 'half' → logprob: -3.7858071327209473
    6. 'S' → logprob: -4.160807132720947
    7. 'r' → logprob: -4.785807132720947
    8. 'B' → logprob: -4.910807132720947
    9. 'part' → logprob: -5.035807132720947
    10. 'd' → logprob: -6.285807132720947

Token 245: '_rev' (ID: 99394)
  Prédit: '_right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.028426431119441986
    2. '_rhs' → logprob: -5.153426647186279
    3. '_rev' → logprob: -5.278426647186279
    4. '_' → logprob: -5.278426647186279
    5. '[N' → logprob: -5.903426647186279
    6. '_r' → logprob: -6.028426647186279
    7. '_suffix' → logprob: -6.403426647186279
    8. ' =' → logprob: -7.403426647186279
    9. 'right' → logprob: -7.403426647186279
    10. '_Right' → logprob: -7.653426647186279

Token 246: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10026933997869492
    2. ' =' → logprob: -2.350269317626953
    3. 's' → logprob: -11.225269317626953
    4. '[' → logprob: -11.725269317626953
    5. '=[]' → logprob: -11.725269317626953
    6. '=[' → logprob: -11.850269317626953
    7. '=S' → logprob: -11.850269317626953
    8. '_' → logprob: -12.225269317626953
    9. '=N' → logprob: -12.725269317626953
    10. '_=' → logprob: -13.350269317626953

Token 247: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.11315503716468811
    2. ' list' → logprob: -2.2381551265716553
    3. 'S' → logprob: -8.113155364990234
    4. ' S' → logprob: -10.488155364990234
    5. 're' → logprob: -12.863155364990234
    6. '(list' → logprob: -14.238155364990234
    7. ' reversed' → logprob: -14.613155364990234
    8. 'List' → logprob: -14.738155364990234
    9. 's' → logprob: -15.113155364990234
    10. '=list' → logprob: -15.613155364990234

Token 248: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.00011808603449026123
    2. '(' → logprob: -9.125118255615234
    3. 're' → logprob: -12.750118255615234
    4. '(s' → logprob: -12.875118255615234
    5. ' (' → logprob: -13.250118255615234
    6. '(reverse' → logprob: -13.875118255615234
    7. ')' → logprob: -15.125118255615234
    8. '()' → logprob: -16.375118255615234
    9. '=re' → logprob: -16.375118255615234
    10. '(input' → logprob: -16.625118255615234

Token 249: 'versed' (ID: 76479)
  Prédit: 'versed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versed' → logprob: -0.00037251986213959754
    2. 'ver' → logprob: -8.000372886657715
    3. 'verse' → logprob: -10.375372886657715
    4. 'ved' → logprob: -13.125372886657715
    5. 'vers' → logprob: -13.250372886657715
    6. 've' → logprob: -14.000372886657715
    7. 'ves' → logprob: -14.500372886657715
    8. 'verted' → logprob: -15.000372886657715
    9. 'v' → logprob: -15.500372886657715
    10. 'verd' → logprob: -15.625372886657715

Token 250: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -5.836499985889532e-05
    2. '(' → logprob: -10.1250581741333
    3. ' (' → logprob: -12.0000581741333
    4. ')(' → logprob: -12.2500581741333
    5. ')' → logprob: -12.5000581741333
    6. 'S' → logprob: -13.2500581741333
    7. '(s' → logprob: -13.6250581741333
    8. '(
' → logprob: -15.2500581741333
    9. '((' → logprob: -15.3750581741333
    10. 's' → logprob: -16.875059127807617

Token 251: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.00014013137842994183
    2. '[' → logprob: -9.000140190124512
    3. ' [' → logprob: -12.375140190124512
    4. '[
' → logprob: -12.500140190124512
    5. '))' → logprob: -12.625140190124512
    6. 'N' → logprob: -13.125140190124512
    7. '[:' → logprob: -13.750140190124512
    8. '[S' → logprob: -14.500140190124512
    9. '
' → logprob: -15.125140190124512
    10. '```' → logprob: -15.250140190124512

Token 252: ':]' (ID: 67377)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00873937364667654
    2. ':]' → logprob: -4.758739471435547
    3. ']))' → logprob: -9.758739471435547
    4. ' :' → logprob: -9.883739471435547
    5. ':].' → logprob: -12.383739471435547
    6. ':],' → logprob: -12.633739471435547
    7. ':N' → logprob: -13.508739471435547
    8. ' :]' → logprob: -13.633739471435547
    9. ':)' → logprob: -13.883739471435547
    10. ':end' → logprob: -14.008739471435547

Token 253: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00021593389101326466
    2. ')' → logprob: -8.500215530395508
    3. ')))' → logprob: -11.500215530395508
    4. ' ))' → logprob: -13.875215530395508
    5. '))
' → logprob: -14.125215530395508
    6. '()))' → logprob: -15.875215530395508
    7. '),' → logprob: -16.625215530395508
    8. ')),' → logprob: -16.750215530395508
    9. '))

' → logprob: -16.875215530395508
    10. '));' → logprob: -16.875215530395508

Token 254: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.41202205419540405
    2. ')' → logprob: -1.2870221138000488
    3. '<|end|>' → logprob: -3.662022113800049
    4. 'for' → logprob: -4.412022113800049
    5. '[' → logprob: -4.787022113800049
    6. ' 
' → logprob: -5.412022113800049
    7. ' ' → logprob: -6.162022113800049
    8. '
' → logprob: -6.287022113800049
    9. '  
' → logprob: -6.787022113800049
    10. ' for' → logprob: -7.037022113800049

Token 255: ' Cré' (ID: 109203)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0257320404052734
    2. 'left' → logprob: -2.0257320404052734
    3. '#' → logprob: -2.1507320404052734
    4. 'counter' → logprob: -2.5257320404052734
    5. 'count' → logprob: -2.7757320404052734
    6. 'counts' → logprob: -2.9007320404052734
    7. 'from' → logprob: -3.4007320404052734
    8. 'half' → logprob: -3.7757320404052734
    9. 'cnt' → logprob: -4.025732040405273
    10. 'right' → logprob: -4.150732040405273

Token 256: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0015938883880153298
    2. 'er' → logprob: -6.751594066619873
    3. '#' → logprob: -7.876594066619873
    4. 'tion' → logprob: -11.376593589782715
    5. 'ate' → logprob: -11.501593589782715
    6. 'a' → logprob: -12.251593589782715
    7. '```' → logprob: -12.626593589782715
    8. 'ption' → logprob: -12.876593589782715
    9. 'p' → logprob: -13.251593589782715
    10. 'at' → logprob: -13.376593589782715

Token 257: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5740940570831299
    2. '_' → logprob: -1.4490940570831299
    3. 'd' → logprob: -1.9490940570831299
    4. '_counter' → logprob: -3.69909405708313
    5. ' de' → logprob: -4.699093818664551
    6. 'de' → logprob: -5.074093818664551
    7. 's' → logprob: -5.074093818664551
    8. '=' → logprob: -5.824093818664551
    9. ' counter' → logprob: -6.324093818664551
    10. 'counter' → logprob: -6.574093818664551

Token 258: ''une' (ID: 13337)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.7650622129440308
    2. 'e' → logprob: -1.3900622129440308
    3. 'a' → logprob: -2.0150623321533203
    4. ''une' → logprob: -2.2650623321533203
    5. 'u' → logprob: -3.6400623321533203
    6. 'un' → logprob: -4.51506233215332
    7. 'Counter' → logprob: -5.64006233215332
    8. 'une' → logprob: -5.89006233215332
    9. ''' → logprob: -6.64006233215332
    10. ' Counter' → logprob: -7.01506233215332

Token 259: ' liste' (ID: 31719)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.14676520228385925
    2. 'liste' → logprob: -2.8967652320861816
    3. 'list' → logprob: -3.5217652320861816
    4. 'counter' → logprob: -3.8967652320861816
    5. 'default' → logprob: -4.896765232086182
    6. ' Counter' → logprob: -5.146765232086182
    7. 'dict' → logprob: -6.396765232086182
    8. 'dictionary' → logprob: -6.521765232086182
    9. 'variable' → logprob: -6.771765232086182
    10. 's' → logprob: -6.896765232086182

Token 260: ' vide' (ID: 21835)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -2.040872812271118
    2. 'de' → logprob: -2.290872812271118
    3. 'A' → logprob: -2.540872812271118
    4. '[' → logprob: -2.790872812271118
    5. 'dp' → logprob: -2.790872812271118
    6. '[]' → logprob: -2.915872812271118
    7. ' des' → logprob: -3.040872812271118
    8. 'counts' → logprob: -3.165872812271118
    9. 'des' → logprob: -3.290872812271118
    10. '=[]' → logprob: -3.540872812271118

Token 261: ' pour' (ID: 1930)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.9063515663146973
    2. 'result' → logprob: -1.9063515663146973
    3. 'results' → logprob: -2.1563515663146973
    4. 'counts' → logprob: -2.1563515663146973
    5. 'dp' → logprob: -2.4063515663146973
    6. 'mask' → logprob: -3.0313515663146973
    7. 'comb' → logprob: -3.4063515663146973
    8. 'ans' → logprob: -3.5313515663146973
    9. 'm' → logprob: -3.5313515663146973
    10. 'valid' → logprob: -3.6563515663146973

Token 262: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.04242841526865959
    2. 'stock' → logprob: -3.917428493499756
    3. ' store' → logprob: -5.542428493499756
    4. '_' → logprob: -5.667428493499756
    5. 'store' → logprob: -6.167428493499756
    6. ' collect' → logprob: -6.542428493499756
    7. ' storing' → logprob: -6.667428493499756
    8. 'collect' → logprob: -7.042428493499756
    9. 'results' → logprob: -7.167428493499756
    10. ' comb' → logprob: -7.292428493499756

Token 263: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0005007279687561095
    2. 'e' → logprob: -8.375500679016113
    3. '#' → logprob: -9.250500679016113
    4. 'urer' → logprob: -9.500500679016113
    5. 'ure' → logprob: -10.375500679016113
    6. 's' → logprob: -11.875500679016113
    7. 'ent' → logprob: -11.875500679016113
    8. '_' → logprob: -11.875500679016113
    9. 'eur' → logprob: -12.500500679016113
    10. 'u' → logprob: -12.625500679016113

Token 264: ' toutes' (ID: 17502)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.3309425115585327
    2. 'les' → logprob: -1.8309425115585327
    3. 'results' → logprob: -1.9559425115585327
    4. 'res' → logprob: -2.3309426307678223
    5. 'result' → logprob: -2.4559426307678223
    6. ' res' → logprob: -2.4559426307678223
    7. ' results' → logprob: -3.5809426307678223
    8. 'counts' → logprob: -3.7059426307678223
    9. ' result' → logprob: -3.8309426307678223
    10. ' counts' → logprob: -4.330942630767822

Token 265: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.48498478531837463
    2. 'les' → logprob: -1.1099847555160522
    3. '_' → logprob: -4.609984874725342
    4. '(' → logprob: -4.734984874725342
    5. 's' → logprob: -5.109984874725342
    6. 'com' → logprob: -5.859984874725342
    7. ' la' → logprob: -5.859984874725342
    8. 'l' → logprob: -5.859984874725342
    9. 'la' → logprob: -5.984984874725342
    10. '#' → logprob: -6.109984874725342

Token 266: ' man' (ID: 873)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.4030584990978241
    2. 'poss' → logprob: -1.9030585289001465
    3. 'com' → logprob: -2.9030585289001465
    4. 'result' → logprob: -3.1530585289001465
    5. 'results' → logprob: -3.9030585289001465
    6. ' comb' → logprob: -3.9030585289001465
    7. 'c' → logprob: -4.4030585289001465
    8. 'res' → logprob: -4.5280585289001465
    9. 'rés' → logprob: -5.4030585289001465
    10. 'possible' → logprob: -6.5280585289001465

Token 267: 'ières' (ID: 44864)
  Prédit: 'ières'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -0.014202293008565903
    2. 'ifest' → logprob: -5.014202117919922
    3. 'ip' → logprob: -5.764202117919922
    4. 'ettes' → logprob: -6.639202117919922
    5. 'i' → logprob: -7.514202117919922
    6. 'iques' → logprob: -7.764202117919922
    7. 'es' → logprob: -7.889202117919922
    8. 'tes' → logprob: -8.639202117919922
    9. 'ques' → logprob: -8.639202117919922
    10. 'd' → logprob: -8.639202117919922

Token 268: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.25886070728302
    2. 'possible' → logprob: -2.5088605880737305
    3. ' de' → logprob: -3.2588605880737305
    4. ' possibles' → logprob: -3.2588605880737305
    5. 's' → logprob: -4.3838605880737305
    6. 'd' → logprob: -4.3838605880737305
    7. ' possible' → logprob: -4.6338605880737305
    8. ' d' → logprob: -4.7588605880737305
    9. '_' → logprob: -4.8838605880737305
    10. ' ' → logprob: -5.3838605880737305

Token 269: ' div' (ID: 4223)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -1.316396713256836
    2. ' choisir' → logprob: -1.941396713256836
    3. ' comb' → logprob: -2.066396713256836
    4. 'assign' → logprob: -2.191396713256836
    5. ' remplir' → logprob: -2.941396713256836
    6. ' remplacer' → logprob: -2.941396713256836
    7. 'modifier' → logprob: -3.316396713256836
    8. ' assign' → logprob: -3.566396713256836
    9. 'cho' → logprob: -3.941396713256836
    10. ' modifier' → logprob: -4.191396713256836

Token 270: 'iser' (ID: 7466)
  Prédit: 'iner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iner' → logprob: -0.972005307674408
    2. 'er' → logprob: -1.3470053672790527
    3. 'e' → logprob: -1.7220053672790527
    4. 'é' → logprob: -2.9720053672790527
    5. 'érer' → logprob: -2.9720053672790527
    6. 'urer' → logprob: -4.722005367279053
    7. 'él' → logprob: -5.097005367279053
    8. 'i' → logprob: -5.097005367279053
    9. 'éer' → logprob: -5.097005367279053
    10. 'irer' → logprob: -5.222005367279053

Token 271: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.06360042095184326
    2. ' S' → logprob: -3.438600540161133
    3. ' la' → logprob: -4.188600540161133
    4. 'la' → logprob: -5.563600540161133
    5. ' le' → logprob: -6.313600540161133
    6. 'le' → logprob: -6.313600540161133
    7. 'N' → logprob: -6.688600540161133
    8. '[' → logprob: -6.813600540161133
    9. '(S' → logprob: -7.063600540161133
    10. 's' → logprob: -7.438600540161133

Token 272: ' moitié' (ID: 93216)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.05298369377851486
    2. 'range' → logprob: -3.3029837608337402
    3. ' S' → logprob: -5.30298376083374
    4. 'chaine' → logprob: -6.17798376083374
    5. '['' → logprob: -6.17798376083374
    6. '[' → logprob: -6.67798376083374
    7. 's' → logprob: -7.42798376083374
    8. 'indices' → logprob: -7.55298376083374
    9. ' range' → logprob: -7.55298376083374
    10. 'N' → logprob: -8.302983283996582

Token 273: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.3977133631706238
    2. 'S' → logprob: -1.8977134227752686
    3. ' gauche' → logprob: -3.0227134227752686
    4. 'G' → logprob: -3.1477134227752686
    5. 's' → logprob: -3.8977134227752686
    6. '_' → logprob: -3.8977134227752686
    7. '_g' → logprob: -4.2727131843566895
    8. 'dro' → logprob: -4.7727131843566895
    9. 'de' → logprob: -4.8977131843566895
    10. 'N' → logprob: -5.3977131843566895

Token 274: ' (' (ID: 350)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.14652565121650696
    2. 'de' → logprob: -2.6465256214141846
    3. '_' → logprob: -3.1465256214141846
    4. '[:]' → logprob: -5.771525859832764
    5. 's' → logprob: -5.896525859832764
    6. ',' → logprob: -6.271525859832764
    7. '[]' → logprob: -6.396525859832764
    8. 'split' → logprob: -6.521525859832764
    9. ' de' → logprob: -6.646525859832764
    10. 'left' → logprob: -6.771525859832764

Token 275: 'prem' (ID: 76294)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.03917548060417175
    2. ' S' → logprob: -3.539175510406494
    3. ')' → logprob: -5.164175510406494
    4. 'de' → logprob: -6.539175510406494
    5. ' de' → logprob: -6.664175510406494
    6. '(S' → logprob: -7.914175510406494
    7. 'N' → logprob: -9.164175033569336
    8. ' )' → logprob: -9.289175033569336
    9. ' of' → logprob: -9.664175033569336
    10. ',' → logprob: -10.164175033569336

Token 276: 'ière' (ID: 12452)
  Prédit: 'ière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ière' → logprob: -0.011333221569657326
    2. 'i' → logprob: -4.511332988739014
    3. 'iere' → logprob: -8.886333465576172
    4. 'ie' → logprob: -9.511333465576172
    5. 'ier' → logprob: -10.386333465576172
    6. 'it' → logprob: -11.636333465576172
    7. 'ise' → logprob: -12.511333465576172
    8. 'e' → logprob: -12.761333465576172
    9. '[i' → logprob: -13.136333465576172
    10. 'ières' → logprob: -13.136333465576172

Token 277: ' moitié' (ID: 93216)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.13201619684696198
    2. 'S' → logprob: -3.132016181945801
    3. 'mo' → logprob: -3.632016181945801
    4. ')' → logprob: -3.757016181945801
    5. 'de' → logprob: -5.007016181945801
    6. ' moitié' → logprob: -5.257016181945801
    7. 'part' → logprob: -5.382016181945801
    8. '#' → logprob: -5.882016181945801
    9. '(N' → logprob: -6.132016181945801
    10. '(' → logprob: -6.382016181945801

Token 278: ' des' (ID: 731)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.568644106388092
    2. ')' → logprob: -1.0686440467834473
    3. ' de' → logprob: -2.8186440467834473
    4. 'S' → logprob: -3.6936440467834473
    5. ' )' → logprob: -6.193644046783447
    6. 'N' → logprob: -6.818644046783447
    7. ' S' → logprob: -8.068644523620605
    8. ']' → logprob: -8.068644523620605
    9. '(S' → logprob: -8.068644523620605
    10. ',' → logprob: -8.318644523620605

Token 279: ' caractères' (ID: 183106)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.006506824865937233
    2. 'la' → logprob: -5.38150691986084
    3. 'car' → logprob: -7.38150691986084
    4. 'chaine' → logprob: -8.00650691986084
    5. ' S' → logprob: -8.13150691986084
    6. 'l' → logprob: -8.38150691986084
    7. '#' → logprob: -8.63150691986084
    8. ' la' → logprob: -9.88150691986084
    9. 's' → logprob: -9.88150691986084
    10. 'N' → logprob: -10.63150691986084

Token 280: ')
' (ID: 446)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8496770262718201
    2. ')' → logprob: -1.3496770858764648
    3. 'de' → logprob: -1.8496770858764648
    4. ' de' → logprob: -1.9746770858764648
    5. ' )' → logprob: -4.599677085876465
    6. ' S' → logprob: -5.474677085876465
    7. 's' → logprob: -6.974677085876465
    8. ',' → logprob: -7.474677085876465
    9. '[' → logprob: -8.349677085876465
    10. 'N' → logprob: -8.724677085876465

Token 281: '#' (ID: 2)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.16114352643489838
    2. 'left' → logprob: -3.0361435413360596
    3. ' S' → logprob: -3.1611435413360596
    4. 'L' → logprob: -4.6611433029174805
    5. ' left' → logprob: -5.2861433029174805
    6. 'split' → logprob: -5.4111433029174805
    7. 'dp' → logprob: -5.6611433029174805
    8. 'de' → logprob: -6.0361433029174805
    9. 'possible' → logprob: -6.2861433029174805
    10. 'part' → logprob: -6.4111433029174805

Token 282: ' en' (ID: 469)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5279883146286011
    2. 'de' → logprob: -1.027988314628601
    3. '#' → logprob: -4.277988433837891
    4. 'left' → logprob: -4.902988433837891
    5. 'split' → logprob: -5.277988433837891
    6. 'div' → logprob: -5.277988433837891
    7. 'for' → logprob: -6.027988433837891
    8. ',' → logprob: -6.277988433837891
    9. 'du' → logprob: -6.402988433837891
    10. 'd' → logprob: -6.652988433837891

Token 283: ' deux' (ID: 10301)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6597546935081482
    2. '[' → logprob: -1.659754753112793
    3. 'de' → logprob: -2.159754753112793
    4. '['' → logprob: -2.534754753112793
    5. '2' → logprob: -3.534754753112793
    6. ' deux' → logprob: -4.409754753112793
    7. '[]' → logprob: -4.659754753112793
    8. 'comb' → logprob: -4.909754753112793
    9. ' ' → logprob: -5.034754753112793
    10. 's' → logprob: -5.159754753112793

Token 284: ' groupes' (ID: 72206)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.6305904388427734
    2. ' parts' → logprob: -2.0055904388427734
    3. 'part' → logprob: -2.7555904388427734
    4. 'sub' → logprob: -3.2555904388427734
    5. 'split' → logprob: -3.7555904388427734
    6. 'segments' → logprob: -3.7555904388427734
    7. 'lists' → logprob: -3.8805904388427734
    8. 'L' → logprob: -4.005590438842773
    9. ' lists' → logprob: -4.505590438842773
    10. 'list' → logprob: -4.630590438842773

Token 285: ' différents' (ID: 36009)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.166281819343567
    2. 'split' → logprob: -1.291281819343567
    3. 'groups' → logprob: -2.1662817001342773
    4. 'parts' → logprob: -2.7912817001342773
    5. 'spl' → logprob: -2.7912817001342773
    6. 'part' → logprob: -3.0412817001342773
    7. 'dp' → logprob: -3.9162817001342773
    8. 'partition' → logprob: -3.9162817001342773
    9. 'div' → logprob: -4.041281700134277
    10. 'group' → logprob: -4.666281700134277

Token 286: ' (' (ID: 350)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.8345447182655334
    2. 'split' → logprob: -1.5845446586608887
    3. 'spl' → logprob: -2.3345446586608887
    4. 'div' → logprob: -2.9595446586608887
    5. 'groups' → logprob: -3.4595446586608887
    6. 'dp' → logprob: -3.5845446586608887
    7. 'parts' → logprob: -3.5845446586608887
    8. 'part' → logprob: -3.8345446586608887
    9. 'half' → logprob: -3.8345446586608887
    10. 'ans' → logprob: -3.9595446586608887

Token 287: 'par' (ID: 796)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8116133213043213
    2. ' )' → logprob: -1.4366133213043213
    3. ' ' → logprob: -3.1866133213043213
    4. ',' → logprob: -3.4366133213043213
    5. ' subsets' → logprob: -3.8116133213043213
    6. '[' → logprob: -3.9366133213043213
    7. ' S' → logprob: -3.9366133213043213
    8. 'mask' → logprob: -4.311613082885742
    9. ' bits' → logprob: -4.436613082885742
    10. '0' → logprob: -4.436613082885742

Token 288: ' exemple' (ID: 26320)
  Prédit: 'mi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mi' → logprob: -0.9456930756568909
    2. '[]' → logprob: -2.320693016052246
    3. 'm' → logprob: -2.445693016052246
    4. 't' → logprob: -2.570693016052246
    5. '```' → logprob: -2.945693016052246
    6. 'fois' → logprob: -3.320693016052246
    7. '[' → logprob: -3.445693016052246
    8. 'indices' → logprob: -3.945693016052246
    9. 'mis' → logprob: -4.320693016052246
    10. ')' → logprob: -4.445693016052246

Token 289: ',' (ID: 11)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5135658979415894
    2. ',' → logprob: -2.263566017150879
    3. ' pour' → logprob: -2.763566017150879
    4. ')' → logprob: -3.638566017150879
    5. ' )' → logprob: -3.638566017150879
    6. '[' → logprob: -3.763566017150879
    7. 'de' → logprob: -3.888566017150879
    8. '   ' → logprob: -3.888566017150879
    9. ' ,' → logprob: -4.263566017150879
    10. ' ['' → logprob: -4.513566017150879

Token 290: ' "' (ID: 392)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24897710978984833
    2. ' [' → logprob: -2.1239771842956543
    3. '0' → logprob: -3.3739771842956543
    4. ' ['' → logprob: -3.8739771842956543
    5. '['' → logprob: -4.123977184295654
    6. ' ' → logprob: -5.123977184295654
    7. ' pour' → logprob: -6.123977184295654
    8. ' '' → logprob: -6.498977184295654
    9. '["' → logprob: -6.748977184295654
    10. '[[' → logprob: -6.998977184295654

Token 291: 'rou' (ID: 691)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.711566150188446
    2. '[' → logprob: -0.836566150188446
    3. ' [' → logprob: -3.586566209793091
    4. '['' → logprob: -3.711566209793091
    5. ' ' → logprob: -4.586565971374512
    6. ' ['' → logprob: -5.461565971374512
    7. 'mask' → logprob: -6.961565971374512
    8. 'binary' → logprob: -7.211565971374512
    9. 'bits' → logprob: -7.211565971374512
    10. '[]' → logprob: -7.586565971374512

Token 292: 'ge' (ID: 684)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.318019300699234
    2. 'ge' → logprob: -1.5680192708969116
    3. 'l' → logprob: -3.068019390106201
    4. 'les' → logprob: -4.443019390106201
    5. 'ges' → logprob: -6.568019390106201
    6. 'e' → logprob: -7.318019390106201
    7. 'g' → logprob: -7.443019390106201
    8. 'u' → logprob: -7.568019390106201
    9. 'a' → logprob: -7.818019390106201
    10. ' le' → logprob: -8.693018913269043

Token 293: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07025795429944992
    2. '",' → logprob: -3.0702579021453857
    3. 'et' → logprob: -4.195258140563965
    4. '","' → logprob: -6.320258140563965
    5. ' et' → logprob: -7.070258140563965
    6. ' "' → logprob: -7.195258140563965
    7. 'e' → logprob: -7.320258140563965
    8. ',"' → logprob: -8.070258140563965
    9. 's' → logprob: -8.195258140563965
    10. '")' → logprob: -8.195258140563965

Token 294: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9187658429145813
    2. ' et' → logprob: -1.4187657833099365
    3. '"' → logprob: -1.6687657833099365
    4. 'et' → logprob: -2.9187657833099365
    5. ' ou' → logprob: -3.1687657833099365
    6. ' ,' → logprob: -3.6687657833099365
    7. 'ou' → logprob: -4.293766021728516
    8. ',"' → logprob: -4.543766021728516
    9. '")' → logprob: -5.043766021728516
    10. '",' → logprob: -5.168766021728516

Token 295: ' "' (ID: 392)
  Prédit: ' bleu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bleu' → logprob: -0.6332209706306458
    2. 'ble' → logprob: -1.758220911026001
    3. '"' → logprob: -2.008220911026001
    4. ' blanc' → logprob: -2.633220911026001
    5. 'bl' → logprob: -3.758220911026001
    6. ' "' → logprob: -3.758220911026001
    7. 'vert' → logprob: -4.13322114944458
    8. ' vert' → logprob: -4.38322114944458
    9. ' noir' → logprob: -4.88322114944458
    10. ' ' → logprob: -5.88322114944458

Token 296: 'ble' (ID: 1124)
  Prédit: 'ble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ble' → logprob: -0.2543644309043884
    2. ' bleu' → logprob: -1.6293644905090332
    3. 'vert' → logprob: -4.504364490509033
    4. 'no' → logprob: -5.254364490509033
    5. 'bl' → logprob: -5.254364490509033
    6. ' ble' → logprob: -5.879364490509033
    7. ' blanc' → logprob: -7.004364490509033
    8. ' noir' → logprob: -7.004364490509033
    9. ' vert' → logprob: -7.004364490509033
    10. ' no' → logprob: -8.004364013671875

Token 297: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.009765179827809334
    2. 'ue' → logprob: -4.634765148162842
    3. '

' → logprob: -13.259765625
    4. 'us' → logprob: -13.384765625
    5. 'uf' → logprob: -13.884765625
    6. '   ' → logprob: -14.009765625
    7. 'ut' → logprob: -14.509765625
    8. 'ues' → logprob: -14.634765625
    9. '#' → logprob: -15.009765625
    10. '```' → logprob: -15.009765625

Token 298: '").
' (ID: 88948)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.013275761157274246
    2. ' ")' → logprob: -5.388275623321533
    3. '").' → logprob: -5.513275623321533
    4. '"' → logprob: -6.138275623321533
    5. ')")' → logprob: -7.388275623321533
    6. ')' → logprob: -7.513275623321533
    7. '",' → logprob: -8.513276100158691
    8. 's' → logprob: -8.638276100158691
    9. ' ").' → logprob: -9.138276100158691
    10. '.")' → logprob: -9.138276100158691

Token 299: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.1565486192703247
    2. 'div' → logprob: -2.031548500061035
    3. 'color' → logprob: -2.156548500061035
    4. 'part' → logprob: -2.531548500061035
    5. 'group' → logprob: -2.656548500061035
    6. 'groups' → logprob: -2.656548500061035
    7. 'colors' → logprob: -3.156548500061035
    8. 'half' → logprob: -3.656548500061035
    9. 'red' → logprob: -3.781548500061035
    10. 'split' → logprob: -3.906548500061035

Token 300: 'list' (ID: 2641)
  Prédit: '_masks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_masks' → logprob: -1.1563138961791992
    2. '_mask' → logprob: -1.5313138961791992
    3. '_' → logprob: -1.9063138961791992
    4. '_groups' → logprob: -2.781313896179199
    5. '_parts' → logprob: -3.281313896179199
    6. '_choices' → logprob: -3.406313896179199
    7. '_part' → logprob: -3.406313896179199
    8. '_colors' → logprob: -3.531313896179199
    9. '_group' → logprob: -3.781313896179199
    10. ' =' → logprob: -4.156313896179199

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.116859070956707
    2. '=' → logprob: -2.241858959197998
    3. 's' → logprob: -6.366858959197998
    4. '=[]' → logprob: -6.366858959197998
    5. '[]' → logprob: -8.366859436035156
    6. '_' → logprob: -8.491859436035156
    7. '_left' → logprob: -10.491859436035156
    8. '[' → logprob: -10.616859436035156
    9. '[:]' → logprob: -10.866859436035156
    10. '=[]
' → logprob: -11.616859436035156

Token 302: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.025041740387678146
    2. '[' → logprob: -3.7750418186187744
    3. '[list' → logprob: -6.775041580200195
    4. 'list' → logprob: -7.900041580200195
    5. '[[' → logprob: -8.775041580200195
    6. '[]
' → logprob: -10.400041580200195
    7. ' []' → logprob: -10.400041580200195
    8. '[][]' → logprob: -10.775041580200195
    9. '["' → logprob: -11.525041580200195
    10. '[]

' → logprob: -12.150041580200195

Token 303: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003208726877346635
    2. ' for' → logprob: -5.753208637237549
    3. 'range' → logprob: -10.878209114074707
    4. '#' → logprob: -12.878209114074707
    5. '[' → logprob: -13.503209114074707
    6. 'f' → logprob: -13.628209114074707
    7. ')' → logprob: -13.878209114074707
    8. ' 
' → logprob: -14.503209114074707
    9. '   ' → logprob: -14.628209114074707
    10. '
' → logprob: -14.628209114074707

Token 304: ' Même' (ID: 89628)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.723352049040841e-06
    2. '#' → logprob: -12.500004768371582
    3. 'left' → logprob: -14.750004768371582
    4. ' for' → logprob: -15.125004768371582
    5. 'fo' → logprob: -16.000003814697266
    6. 'f' → logprob: -17.500003814697266
    7. 'from' → logprob: -17.750003814697266
    8. 'def' → logprob: -18.000003814697266
    9. '
' → logprob: -18.625003814697266
    10. 'bits' → logprob: -18.750003814697266

Token 305: ' chose' (ID: 15505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.042958542704582214
    2. 'pour' → logprob: -3.2929584980010986
    3. 'list' → logprob: -6.292958736419678
    4. '#' → logprob: -6.917958736419678
    5. 'range' → logprob: -7.792958736419678
    6. ' for' → logprob: -7.917958736419678
    7. '[' → logprob: -8.91795825958252
    8. ')' → logprob: -8.91795825958252
    9. 'liste' → logprob: -8.91795825958252
    10. 'left' → logprob: -9.04295825958252

Token 306: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5274681448936462
    2. 'right' → logprob: -0.9024681448936462
    3. ' for' → logprob: -6.527468204498291
    4. 'left' → logprob: -6.652468204498291
    5. 'pour' → logprob: -7.652468204498291
    6. 'S' → logprob: -8.027467727661133
    7. ' right' → logprob: -8.527467727661133
    8. '_right' → logprob: -9.152467727661133
    9. '#' → logprob: -9.152467727661133
    10. ' =' → logprob: -9.902467727661133

Token 307: ' la' (ID: 557)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.21266038715839386
    2. 'left' → logprob: -1.9626604318618774
    3. 'range' → logprob: -3.212660312652588
    4. 'S' → logprob: -5.212660312652588
    5. ' right' → logprob: -6.212660312652588
    6. 'la' → logprob: -6.212660312652588
    7. ' range' → logprob: -8.462660789489746
    8. ' la' → logprob: -8.587660789489746
    9. 'le' → logprob: -8.712660789489746
    10. '#' → logprob: -8.962660789489746

Token 308: ' moitié' (ID: 93216)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00038443657103925943
    2. ' right' → logprob: -8.250384330749512
    3. 'left' → logprob: -10.250384330749512
    4. 'rig' → logprob: -10.250384330749512
    5. 'r' → logprob: -10.875384330749512
    6. '#' → logprob: -11.000384330749512
    7. 'S' → logprob: -12.250384330749512
    8. 'Right' → logprob: -13.000384330749512
    9. '	right' → logprob: -13.625384330749512
    10. '_right' → logprob: -13.875384330749512

Token 309: ' droite' (ID: 61428)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.08518952876329422
    2. 'dro' → logprob: -2.5851895809173584
    3. ' droite' → logprob: -5.210189342498779
    4. '_right' → logprob: -7.710189342498779
    5. ' right' → logprob: -8.585189819335938
    6. 'Dro' → logprob: -10.585189819335938
    7. '_' → logprob: -10.835189819335938
    8. ' derecha' → logprob: -11.210189819335938
    9. 'rev' → logprob: -11.210189819335938
    10. 'drop' → logprob: -11.210189819335938

Token 310: ',' (ID: 11)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00012047011114191264
    2. ' right' → logprob: -9.750120162963867
    3. 'left' → logprob: -10.500120162963867
    4. 'list' → logprob: -10.875120162963867
    5. '_right' → logprob: -12.375120162963867
    6. 'rig' → logprob: -13.250120162963867
    7. '=' → logprob: -13.375120162963867
    8. ':' → logprob: -13.625120162963867
    9. 'Right' → logprob: -13.625120162963867
    10. ' =' → logprob: -14.000120162963867

Token 311: ' pour' (ID: 1930)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -2.47495681833243e-05
    2. ' right' → logprob: -10.750024795532227
    3. 'left' → logprob: -12.875024795532227
    4. '#' → logprob: -15.125024795532227
    5. 'red' → logprob: -16.250024795532227
    6. 'for' → logprob: -16.625024795532227
    7. 'Right' → logprob: -17.125024795532227
    8. '[right' → logprob: -17.125024795532227
    9. '	right' → logprob: -17.250024795532227
    10. '
' → logprob: -17.250024795532227

Token 312: ' stock' (ID: 6546)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.4129231572151184
    2. ' right' → logprob: -1.5379230976104736
    3. ' _' → logprob: -3.2879230976104736
    4. '_' → logprob: -3.5379230976104736
    5. '_right' → logprob: -4.037923336029053
    6. ' i' → logprob: -4.537923336029053
    7. ' la' → logprob: -5.037923336029053
    8. 'left' → logprob: -6.037923336029053
    9. '[]' → logprob: -6.162923336029053
    10. 'r' → logprob: -6.287923336029053

Token 313: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00071386230411008
    2. '[]' → logprob: -8.250714302062988
    3. 'e' → logprob: -8.750714302062988
    4. 'ent' → logprob: -9.250714302062988
    5. '#' → logprob: -10.125714302062988
    6. 'es' → logprob: -10.750714302062988
    7. '=[]' → logprob: -10.875714302062988
    8. 'age' → logprob: -11.125714302062988
    9. 'urer' → logprob: -11.500714302062988
    10. 'ages' → logprob: -11.750714302062988

Token 314: ' toutes' (ID: 17502)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0027286713011562824
    2. ' right' → logprob: -6.377728462219238
    3. 'left' → logprob: -7.252728462219238
    4. '[right' → logprob: -8.877728462219238
    5. '[]' → logprob: -9.252728462219238
    6. 'all' → logprob: -9.752728462219238
    7. 'r' → logprob: -12.752728462219238
    8. '[' → logprob: -12.752728462219238
    9. '	right' → logprob: -12.877728462219238
    10. 'rig' → logprob: -13.252728462219238

Token 315: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.47950756549835205
    2. ' les' → logprob: -0.979507565498352
    3. 'des' → logprob: -6.8545074462890625
    4. ' des' → logprob: -6.9795074462890625
    5. '<|end|>' → logprob: -7.2295074462890625
    6. 'le' → logprob: -8.229507446289062
    7. 'possible' → logprob: -8.229507446289062
    8. '=[]' → logprob: -8.229507446289062
    9. 'the' → logprob: -8.479507446289062
    10. '_possible' → logprob: -8.604507446289062

Token 316: ' comb' (ID: 4134)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.6167916655540466
    2. 'poss' → logprob: -1.6167917251586914
    3. 'comb' → logprob: -1.9917917251586914
    4. 'com' → logprob: -3.3667917251586914
    5. ' comb' → logprob: -3.4917917251586914
    6. 'div' → logprob: -3.7417917251586914
    7. ' façons' → logprob: -4.866791725158691
    8. 'possible' → logprob: -5.116791725158691
    9. 'ways' → logprob: -5.741791725158691
    10. 'split' → logprob: -6.116791725158691

Token 317: 'inais' (ID: 42744)
  Prédit: 'inations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inations' → logprob: -0.4134577214717865
    2. 'inais' → logprob: -1.6634577512741089
    3. 'in' → logprob: -1.9134577512741089
    4. 'ina' → logprob: -8.038457870483398
    5. 'initions' → logprob: -8.663457870483398
    6. 'os' → logprob: -8.788457870483398
    7. '#' → logprob: -8.913457870483398
    8. 'is' → logprob: -9.038457870483398
    9. 'i' → logprob: -9.288457870483398
    10. 'binations' → logprob: -9.288457870483398

Token 318: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.6461951732635498
    2. 't' → logprob: -1.0211951732635498
    3. 'ations' → logprob: -2.27119517326355
    4. 's' → logprob: -5.021195411682129
    5. 'lations' → logprob: -7.021195411682129
    6. 'c' → logprob: -7.396195411682129
    7. 'a' → logprob: -7.521195411682129
    8. 'ts' → logprob: -7.521195411682129
    9. '#' → logprob: -7.521195411682129
    10. 'ots' → logprob: -7.896195411682129

Token 319: ' possibles' (ID: 97753)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0031989887356758118
    2. '_right' → logprob: -6.628199100494385
    3. '=' → logprob: -7.628199100494385
    4. '=[]' → logprob: -7.753199100494385
    5. '[right' → logprob: -8.503198623657227
    6. 'left' → logprob: -8.503198623657227
    7. ' =' → logprob: -8.753198623657227
    8. ' right' → logprob: -9.128198623657227
    9. '=[]
' → logprob: -10.628198623657227
    10. 'list' → logprob: -10.628198623657227

Token 320: ' de' (ID: 334)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.0087516784551553e-05
    2. 'left' → logprob: -12.12501049041748
    3. 'r' → logprob: -13.12501049041748
    4. 'rig' → logprob: -13.87501049041748
    5. ' right' → logprob: -14.50001049041748
    6. 'for' → logprob: -15.12501049041748
    7. '=' → logprob: -15.37501049041748
    8. '[right' → logprob: -15.87501049041748
    9. 'rightness' → logprob: -16.125009536743164
    10. 'rights' → logprob: -16.125009536743164

Token 321: ' ré' (ID: 3146)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2545013129711151
    2. 'product' → logprob: -2.0045013427734375
    3. '["' → logprob: -3.6295013427734375
    4. 'left' → logprob: -3.8795013427734375
    5. '['' → logprob: -4.1295013427734375
    6. 'right' → logprob: -5.0045013427734375
    7. ' product' → logprob: -5.5045013427734375
    8. '[[' → logprob: -6.0045013427734375
    9. ' [' → logprob: -6.1295013427734375
    10. 'list' → logprob: -6.2545013427734375

Token 322: 'partition' (ID: 67655)
  Prédit: 'partition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.07982774823904037
    2. 'part' → logprob: -2.5798277854919434
    3. 'par' → logprob: -8.329827308654785
    4. 'p' → logprob: -8.704827308654785
    5. 'ponses' → logprob: -9.079827308654785
    6. 'paration' → logprob: -10.079827308654785
    7. 'vers' → logprob: -10.204827308654785
    8. 'at' → logprob: -10.704827308654785
    9. 'duction' → logprob: -10.829827308654785
    10. '_partition' → logprob: -10.829827308654785

Token 323: ' de' (ID: 334)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00030388421146199107
    2. ' right' → logprob: -9.250304222106934
    3. 'left' → logprob: -9.625304222106934
    4. '[right' → logprob: -10.125304222106934
    5. 'de' → logprob: -10.375304222106934
    6. 'des' → logprob: -11.000304222106934
    7. 'red' → logprob: -11.250304222106934
    8. '_right' → logprob: -11.375304222106934
    9. '#' → logprob: -11.750304222106934
    10. '(right' → logprob: -12.500304222106934

Token 324: ' cette' (ID: 7696)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.9181901812553406
    2. '0' → logprob: -1.5431902408599854
    3. 'right' → logprob: -2.2931902408599854
    4. 'ble' → logprob: -2.6681902408599854
    5. '1' → logprob: -2.9181902408599854
    6. '[' → logprob: -3.0431902408599854
    7. 'les' → logprob: -3.9181902408599854
    8. 'le' → logprob: -4.668190002441406
    9. 'left' → logprob: -4.793190002441406
    10. ' S' → logprob: -4.918190002441406

Token 325: ' moitié' (ID: 93216)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.2817302644252777
    2. 'mo' → logprob: -2.5317301750183105
    3. ')' → logprob: -4.0317301750183105
    4. 'group' → logprob: -4.1567301750183105
    5. 'car' → logprob: -4.1567301750183105
    6. '_' → logprob: -4.5317301750183105
    7. 'parts' → logprob: -4.7817301750183105
    8. ' mo' → logprob: -4.9067301750183105
    9. ' part' → logprob: -5.0317301750183105
    10. 'S' → logprob: -5.1567301750183105

Token 326: ' en' (ID: 469)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0003131784324068576
    2. 'r' → logprob: -9.125312805175781
    3. 'rig' → logprob: -9.125312805175781
    4. 'left' → logprob: -10.375312805175781
    5. '=' → logprob: -10.625312805175781
    6. ' =' → logprob: -12.000312805175781
    7. 'rights' → logprob: -12.125312805175781
    8. 'list' → logprob: -12.250312805175781
    9. 'rev' → logprob: -12.500312805175781
    10. '_right' → logprob: -13.125312805175781

Token 327: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.6659959554672241
    2. '2' → logprob: -1.4159959554672241
    3. 'de' → logprob: -2.6659960746765137
    4. '[' → logprob: -2.9159960746765137
    5. 'two' → logprob: -3.1659960746765137
    6. 'left' → logprob: -3.1659960746765137
    7. ' two' → logprob: -4.665996074676514
    8. 'right' → logprob: -5.290996074676514
    9. ' ' → logprob: -5.790996074676514
    10. '["' → logprob: -5.915996074676514

Token 328: ' groupes' (ID: 72206)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.205252543091774
    2. 'groups' → logprob: -1.7052525281906128
    3. ' groupes' → logprob: -6.330252647399902
    4. 'list' → logprob: -6.830252647399902
    5. 'colors' → logprob: -7.830252647399902
    6. 'g' → logprob: -8.580252647399902
    7. 'lists' → logprob: -9.205252647399902
    8. 'roups' → logprob: -9.580252647399902
    9. ' groups' → logprob: -9.955252647399902
    10. 'right' → logprob: -10.455252647399902

Token 329: '.
' (ID: 558)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -2.081584716506768e-05
    2. '=' → logprob: -11.500020980834961
    3. 'r' → logprob: -13.000020980834961
    4. ' =' → logprob: -13.125020980834961
    5. ' right' → logprob: -13.375020980834961
    6. 'left' → logprob: -13.625020980834961
    7. 'rig' → logprob: -14.125020980834961
    8. '
' → logprob: -14.375020980834961
    9. '[right' → logprob: -14.750020980834961
    10. 'rights' → logprob: -14.750020980834961

Token 330: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -2.816093228830141e-06
    2. 'left' → logprob: -12.87500286102295
    3. ' right' → logprob: -15.87500286102295
    4. 'for' → logprob: -17.750001907348633
    5. '[right' → logprob: -18.750001907348633
    6. 'red' → logprob: -18.875001907348633
    7. 'r' → logprob: -19.000001907348633
    8. '	right' → logprob: -19.375001907348633
    9. 'rights' → logprob: -19.500001907348633
    10. '
' → logprob: -19.500001907348633

Token 331: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.5776860184123507e-06
    2. '_list' → logprob: -13.25000286102295
    3. 'ist' → logprob: -14.25000286102295
    4. 'lists' → logprob: -16.375001907348633
    5. ' list' → logprob: -16.750001907348633
    6. 'liste' → logprob: -16.875001907348633
    7. ' =' → logprob: -18.250001907348633
    8. '=' → logprob: -18.750001907348633
    9. 'List' → logprob: -18.750001907348633
    10. 'l' → logprob: -18.750001907348633

Token 332: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31531551480293274
    2. '=' → logprob: -1.3153154850006104
    3. '=[]' → logprob: -6.1903157234191895
    4. '=[]
' → logprob: -13.815315246582031
    5. '=[]
' → logprob: -14.565315246582031
    6. '[]' → logprob: -14.940315246582031
    7. '=[' → logprob: -15.440315246582031
    8. '＝' → logprob: -16.06531524658203
    9. ']' → logprob: -16.69031524658203
    10. 's' → logprob: -16.81531524658203

Token 333: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -3.650518920039758e-06
    2. ' []' → logprob: -12.750003814697266
    3. '[]
' → logprob: -14.750003814697266
    4. '[]

' → logprob: -15.500003814697266
    5. '[]}' → logprob: -16.500003814697266
    6. '[' → logprob: -17.875003814697266
    7. '[]>' → logprob: -19.000003814697266
    8. '[],' → logprob: -20.375003814697266
    9. '=[]' → logprob: -20.625003814697266
    10. '[]"' → logprob: -21.000003814697266

Token 334: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007203708868473768
    2. '#' → logprob: -5.007203578948975
    3. ' for' → logprob: -7.632203578948975
    4. 'left' → logprob: -13.382204055786133
    5. '
' → logprob: -14.257204055786133
    6. ' 
' → logprob: -15.132204055786133
    7. ' #' → logprob: -15.507204055786133
    8. 'from' → logprob: -15.632204055786133
    9. '  
' → logprob: -16.007204055786133
    10. '	for' → logprob: -16.132204055786133

Token 335: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.129266067640856e-05
    2. '#' → logprob: -10.875020980834961
    3. ' for' → logprob: -13.250020980834961
    4. 'left' → logprob: -15.250020980834961
    5. 'from' → logprob: -15.625020980834961
    6. '
' → logprob: -17.00002098083496
    7. 'def' → logprob: -18.00002098083496
    8. 'fo' → logprob: -18.25002098083496
    9. ')' → logprob: -18.37502098083496
    10. 'import' → logprob: -19.12502098083496

Token 336: 'ours' (ID: 2327)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.35919609665870667
    2. 'ours' → logprob: -1.2341960668563843
    3. 'ourt' → logprob: -4.609196186065674
    4. 'or' → logprob: -8.109195709228516
    5. 'u' → logprob: -9.234195709228516
    6. '#' → logprob: -9.609195709228516
    7. '```' → logprob: -10.109195709228516
    8. 'for' → logprob: -10.359195709228516
    9. 'ourse' → logprob: -10.359195709228516
    10. 'orr' → logprob: -10.734195709228516

Token 337: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005937566980719566
    2. ' for' → logprob: -5.130937576293945
    3. 'range' → logprob: -12.005937576293945
    4. '
' → logprob: -14.255937576293945
    5. 'pour' → logprob: -15.005937576293945
    6. '```' → logprob: -15.380937576293945
    7. ' range' → logprob: -15.505937576293945
    8. '_' → logprob: -15.630937576293945
    9. '   ' → logprob: -15.755937576293945
    10. '	for' → logprob: -16.005937576293945

Token 338: ' toutes' (ID: 17502)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.017444729804992676
    2. 'range' → logprob: -4.392444610595703
    3. ' product' → logprob: -5.392444610595703
    4. 'list' → logprob: -8.392444610595703
    5. ' range' → logprob: -9.517444610595703
    6. 'all' → logprob: -9.642444610595703
    7. '[' → logprob: -13.267444610595703
    8. '(product' → logprob: -13.517444610595703
    9. '*' → logprob: -14.142444610595703
    10. ' list' → logprob: -14.392444610595703

Token 339: ' les' (ID: 1341)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.12657682597637177
    2. 'product' → logprob: -2.7515769004821777
    3. 'range' → logprob: -3.6265769004821777
    4. ' range' → logprob: -3.6265769004821777
    5. '(product' → logprob: -6.876576900482178
    6. '(' → logprob: -7.251576900482178
    7. '(range' → logprob: -9.50157642364502
    8. ' (' → logprob: -11.75157642364502
    9. '_' → logprob: -11.75157642364502
    10. '_product' → logprob: -12.50157642364502

Token 340: ' comb' (ID: 4134)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.08410020917654037
    2. ' product' → logprob: -2.5841002464294434
    3. 'range' → logprob: -6.209100246429443
    4. '0' → logprob: -6.334100246429443
    5. 'list' → logprob: -8.459099769592285
    6. '[' → logprob: -8.709099769592285
    7. '*' → logprob: -8.709099769592285
    8. '(' → logprob: -8.834099769592285
    9. ' range' → logprob: -8.959099769592285
    10. 'possible' → logprob: -9.209099769592285

Token 341: 'inais' (ID: 42744)
  Prédit: 'inations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inations' → logprob: -0.04961303621530533
    2. 'in' → logprob: -3.0496129989624023
    3. 'inais' → logprob: -7.299612998962402
    4. 'i' → logprob: -9.049612998962402
    5. 'binations' → logprob: -9.799612998962402
    6. 'inat' → logprob: -10.424612998962402
    7. 'os' → logprob: -10.799612998962402
    8. '[' → logprob: -10.924612998962402
    9. 'ations' → logprob: -11.174612998962402
    10. 'ina' → logprob: -11.299612998962402

Token 342: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -1.065800666809082
    2. 't' → logprob: -1.190800666809082
    3. 'ations' → logprob: -1.565800666809082
    4. 'bles' → logprob: -3.065800666809082
    5. 'range' → logprob: -3.315800666809082
    6. 'les' → logprob: -4.065800666809082
    7. 'r' → logprob: -4.440800666809082
    8. 'ranges' → logprob: -5.565800666809082
    9. 's' → logprob: -5.815800666809082
    10. 'b' → logprob: -5.940800666809082

Token 343: ' possibles' (ID: 97753)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10312530398368835
    2. ' for' → logprob: -2.3531253337860107
    3. '(' → logprob: -6.478125095367432
    4. '(range' → logprob: -7.228125095367432
    5. 'range' → logprob: -9.10312557220459
    6. ' of' → logprob: -9.35312557220459
    7. ' in' → logprob: -9.60312557220459
    8. '(
' → logprob: -9.72812557220459
    9. 'in' → logprob: -9.85312557220459
    10. 'of' → logprob: -9.97812557220459

Token 344: ' pour' (ID: 1930)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.4618105888366699
    2. 'for' → logprob: -1.21181058883667
    3. '(' → logprob: -3.33681058883667
    4. ' for' → logprob: -3.96181058883667
    5. 'range' → logprob: -4.46181058883667
    6. '(product' → logprob: -6.08681058883667
    7. '([' → logprob: -6.08681058883667
    8. '((' → logprob: -7.58681058883667
    9. ' range' → logprob: -7.71181058883667
    10. 'product' → logprob: -8.211811065673828

Token 345: ' N' (ID: 478)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.49250471591949463
    2. 'range' → logprob: -1.4925047159194946
    3. ' i' → logprob: -2.492504596710205
    4. 'i' → logprob: -2.992504596710205
    5. '_' → logprob: -4.742504596710205
    6. '0' → logprob: -5.867504596710205
    7. ' _' → logprob: -5.867504596710205
    8. '[' → logprob: -6.242504596710205
    9. 'r' → logprob: -6.492504596710205
    10. 'N' → logprob: -6.617504596710205

Token 346: ' éléments' (ID: 57375)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09476511180400848
    2. 'for' → logprob: -3.4697651863098145
    3. '(' → logprob: -4.2197651863098145
    4. ':' → logprob: -4.3447651863098145
    5. 'range' → logprob: -4.9697651863098145
    6. '):
' → logprob: -5.2197651863098145
    7. '(range' → logprob: -5.2197651863098145
    8. '+' → logprob: -5.4697651863098145
    9. ' for' → logprob: -5.7197651863098145
    10. ' ):' → logprob: -6.5947651863098145

Token 347: ' où' (ID: 15113)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024088973179459572
    2. ' for' → logprob: -3.8990888595581055
    3. 'in' → logprob: -6.3990888595581055
    4. 'range' → logprob: -7.5240888595581055
    5. '(' → logprob: -7.6490888595581055
    6. ':' → logprob: -7.8990888595581055
    7. '(range' → logprob: -8.524088859558105
    8. ' in' → logprob: -8.774088859558105
    9. '
' → logprob: -10.149088859558105
    10. ' range' → logprob: -11.274088859558105

Token 348: ' chaque' (ID: 21194)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0345396995544434
    2. 'i' → logprob: -1.0345396995544434
    3. ' i' → logprob: -2.1595396995544434
    4. ' ' → logprob: -3.1595396995544434
    5. '(' → logprob: -3.2845396995544434
    6. ' (' → logprob: -3.6595396995544434
    7. 'x' → logprob: -4.159539699554443
    8. 'c' → logprob: -4.784539699554443
    9. '_' → logprob: -5.534539699554443
    10. ' c' → logprob: -5.659539699554443

Token 349: ' élément' (ID: 99627)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.070800542831421
    2. ' i' → logprob: -1.195800542831421
    3. ' _' → logprob: -2.070800542831421
    4. 'i' → logprob: -2.695800542831421
    5. ' (' → logprob: -3.320800542831421
    6. '0' → logprob: -3.320800542831421
    7. '_' → logprob: -3.570800542831421
    8. ' x' → logprob: -4.57080078125
    9. ' bit' → logprob: -4.69580078125
    10. '(' → logprob: -4.82080078125

Token 350: ' peut' (ID: 9216)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24536819756031036
    2. '=' → logprob: -1.745368242263794
    3. 'in' → logprob: -3.745368242263794
    4. ' =' → logprob: -4.370368003845215
    5. ' is' → logprob: -6.370368003845215
    6. ' est' → logprob: -6.620368003845215
    7. ' ' → logprob: -6.620368003845215
    8. ')' → logprob: -7.870368003845215
    9. ',' → logprob: -7.870368003845215
    10. ' can' → logprob: -8.495368003845215

Token 351: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.7910460233688354
    2. 'être' → logprob: -1.1660460233688354
    3. ' ' → logprob: -1.7910460233688354
    4. ' val' → logprob: -3.416046142578125
    5. 'val' → logprob: -5.291046142578125
    6. 'êt' → logprob: -5.291046142578125
    7. ' etre' → logprob: -5.291046142578125
    8. 'etre' → logprob: -5.541046142578125
    9. '<|end|>' → logprob: -5.666046142578125
    10. '0' → logprob: -5.916046142578125

Token 352: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021853535436093807
    2. ' ' → logprob: -6.127185344696045
    3. '(' → logprob: -16.127185821533203
    4. '[' → logprob: -16.377185821533203
    5. ' (' → logprob: -17.627185821533203
    6. '1' → logprob: -18.127185821533203
    7. ' either' → logprob: -18.127185821533203
    8. ',' → logprob: -19.002185821533203
    9. ''' → logprob: -19.252185821533203
    10. '۰' → logprob: -19.627185821533203

Token 353: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.215330409351736e-05
    2. '(' → logprob: -10.125041961669922
    3. ' ' → logprob: -13.500041961669922
    4. '[' → logprob: -14.625041961669922
    5. ' (' → logprob: -16.750041961669922
    6. '(
' → logprob: -17.625041961669922
    7. '('' → logprob: -18.000041961669922
    8. ''' → logprob: -18.000041961669922
    9. '"' → logprob: -18.875041961669922
    10. '1' → logprob: -19.000041961669922

Token 354: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05248338729143143
    2. ' ou' → logprob: -3.177483320236206
    3. ' or' → logprob: -5.552483558654785
    4. ' ,' → logprob: -5.802483558654785
    5. 'ou' → logprob: -6.427483558654785
    6. ' ' → logprob: -7.927483558654785
    7. 'or' → logprob: -8.427483558654785
    8. ')' → logprob: -9.052483558654785
    9. 'import' → logprob: -9.802483558654785
    10. '0' → logprob: -10.427483558654785

Token 355: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06993721425533295
    2. ' ' → logprob: -2.694937229156494
    3. ' ' → logprob: -15.569936752319336
    4. '  ' → logprob: -15.757436752319336
    5. ',' → logprob: -15.944936752319336
    6. '   ' → logprob: -16.194936752319336
    7. '<|end|>' → logprob: -16.257436752319336
    8. '0' → logprob: -16.382436752319336
    9. '`' → logprob: -17.007436752319336
    10. '```' → logprob: -17.069936752319336

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '<|end|>' → logprob: -17.625553131103516
    4. '
' → logprob: -18.563053131103516
    5. ',' → logprob: -18.625553131103516
    6. '  ' → logprob: -19.000553131103516
    7. '```' → logprob: -19.188053131103516
    8. '0' → logprob: -19.188053131103516
    9. '   ' → logprob: -19.625553131103516
    10. ' ' → logprob: -19.688053131103516

Token 357: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024896159768104553
    2. ':' → logprob: -3.8998961448669434
    3. ' for' → logprob: -5.524896144866943
    4. ':
' → logprob: -8.274896621704102
    5. '(' → logprob: -9.774896621704102
    6. ',' → logprob: -11.649896621704102
    7. '
' → logprob: -11.649896621704102
    8. ')' → logprob: -12.024896621704102
    9. '):' → logprob: -12.024896621704102
    10. '(N' → logprob: -12.399896621704102

Token 358: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0036022020503878593
    2. ' for' → logprob: -5.628602027893066
    3. '
' → logprob: -13.503602027893066
    4. ' 
' → logprob: -16.003602981567383
    5. 'fo' → logprob: -16.253602981567383
    6. ')' → logprob: -16.503602981567383
    7. '   ' → logprob: -16.503602981567383
    8. 'from' → logprob: -16.503602981567383
    9. ':' → logprob: -16.628602981567383
    10. '```' → logprob: -16.753602981567383

Token 359: ' range' (ID: 3352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00193149340339005
    2. ' for' → logprob: -6.251931667327881
    3. '   ' → logprob: -13.126931190490723
    4. '
' → logprob: -14.751931190490723
    5. '```' → logprob: -15.876931190490723
    6. ' 
' → logprob: -16.00193214416504
    7. '0' → logprob: -17.00193214416504
    8. '`' → logprob: -17.50193214416504
    9. 'from' → logprob: -17.50193214416504
    10. 'fo' → logprob: -17.62693214416504

Token 360: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.020574353635311127
    2. '(' → logprob: -3.8955743312835693
    3. '(n' → logprob: -11.145574569702148
    4. '(
' → logprob: -11.395574569702148
    5. ' (' → logprob: -13.270574569702148
    6. '(range' → logprob: -13.520574569702148
    7. ')' → logprob: -14.145574569702148
    8. 'range' → logprob: -14.395574569702148
    9. ')(' → logprob: -14.645574569702148
    10. '(i' → logprob: -15.145574569702148

Token 361: '2' (ID: 17)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02388657070696354
    2. '(N' → logprob: -4.648886680603027
    3. '(' → logprob: -5.273886680603027
    4. '2' → logprob: -5.523886680603027
    5. '1' → logprob: -5.648886680603027
    6. '0' → logprob: -7.023886680603027
    7. ' N' → logprob: -8.023886680603027
    8. ')' → logprob: -9.148886680603027
    9. ' ' → logprob: -10.648886680603027
    10. '	N' → logprob: -11.898886680603027

Token 362: ')' (ID: 8)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00671252841129899
    2. ')' → logprob: -5.881712436676025
    3. ' **' → logprob: -5.881712436676025
    4. ',' → logprob: -7.006712436676025
    5. ')**' → logprob: -10.256712913513184
    6. ',N' → logprob: -10.381712913513184
    7. '[N' → logprob: -10.631712913513184
    8. '(N' → logprob: -10.881712913513184
    9. ' ,' → logprob: -11.256712913513184
    10. '*' → logprob: -11.256712913513184

Token 363: ' produit' (ID: 29429)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5016088485717773
    2. '):' → logprob: -1.6266088485717773
    3. ')' → logprob: -2.0016088485717773
    4. ' for' → logprob: -3.2516088485717773
    5. ':' → logprob: -4.376608848571777
    6. '):
' → logprob: -6.376608848571777
    7. '),' → logprob: -6.751608848571777
    8. '=' → logprob: -6.876608848571777
    9. 'in' → logprob: -7.001608848571777
    10. ')):' → logprob: -7.126608848571777

Token 364: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007367274374701083
    2. '(N' → logprob: -7.625736713409424
    3. ' (' → logprob: -9.375737190246582
    4. ')' → logprob: -10.125737190246582
    5. '((' → logprob: -10.375737190246582
    6. ',' → logprob: -10.750737190246582
    7. '2' → logprob: -11.750737190246582
    8. '

' → logprob: -11.750737190246582
    9. '(
' → logprob: -11.875737190246582
    10. 'range' → logprob: -12.250737190246582

Token 365: ' valeurs' (ID: 73668)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2830512225627899
    2. ' ' → logprob: -2.1580512523651123
    3. '0' → logprob: -2.4080512523651123
    4. '(' → logprob: -3.5330512523651123
    5. ' (' → logprob: -5.033051013946533
    6. ',' → logprob: -6.283051013946533
    7. 'range' → logprob: -7.408051013946533
    8. '[' → logprob: -7.533051013946533
    9. ' N' → logprob: -7.783051013946533
    10. ' deux' → logprob: -8.033051490783691

Token 366: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18568043410778046
    2. '0' → logprob: -2.435680389404297
    3. ' ' → logprob: -3.185680389404297
    4. ' (' → logprob: -3.310680389404297
    5. '2' → logprob: -6.560680389404297
    6. 'for' → logprob: -7.060680389404297
    7. ' for' → logprob: -7.185680389404297
    8. '[' → logprob: -7.810680389404297
    9. ' de' → logprob: -8.810680389404297
    10. ' pour' → logprob: -8.935680389404297

Token 367: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16233748197555542
    2. '(' → logprob: -2.1623375415802
    3. '2' → logprob: -3.4123375415802
    4. ' ' → logprob: -6.412337303161621
    5. 'for' → logprob: -9.662337303161621
    6. ' (' → logprob: -9.787337303161621
    7. '[' → logprob: -10.287337303161621
    8. ' for' → logprob: -12.287337303161621
    9. '1' → logprob: -12.412337303161621
    10. '```' → logprob: -12.537337303161621

Token 368: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004907466005533934
    2. ' ou' → logprob: -5.754907608032227
    3. ' or' → logprob: -7.629907608032227
    4. ' ,' → logprob: -7.629907608032227
    5. ' et' → logprob: -7.879907608032227
    6. ' ' → logprob: -8.879907608032227
    7. 'et' → logprob: -9.504907608032227
    8. ')' → logprob: -10.129907608032227
    9. ',
' → logprob: -10.629907608032227
    10. 'ou' → logprob: -10.754907608032227

Token 369: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.055158935487270355
    2. ' ' → logprob: -3.055158853530884
    3. '2' → logprob: -5.055159091949463
    4. ',' → logprob: -10.117658615112305
    5. '(' → logprob: -10.367658615112305
    6. 'range' → logprob: -11.555158615112305
    7. '```' → logprob: -11.617658615112305
    8. '=' → logprob: -11.867658615112305
    9. '3' → logprob: -11.930158615112305
    10. '
' → logprob: -12.305158615112305

Token 370: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0027528072241693735
    2. '2' → logprob: -6.127752780914307
    3. ' ' → logprob: -7.502752780914307
    4. '(' → logprob: -11.502753257751465
    5. 'range' → logprob: -13.815253257751465
    6. '
' → logprob: -14.377753257751465
    7. '```' → logprob: -14.502753257751465
    8. '{' → logprob: -14.690253257751465
    9. '`' → logprob: -14.815253257751465
    10. '0' → logprob: -15.002753257751465

Token 371: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029529336839914322
    2. ' for' → logprob: -3.654529333114624
    3. ':' → logprob: -6.154529571533203
    4. ':
' → logprob: -7.904529571533203
    5. 'pour' → logprob: -8.404529571533203
    6. '
' → logprob: -8.654529571533203
    7. ' pour' → logprob: -8.904529571533203
    8. ',' → logprob: -9.154529571533203
    9. ')' → logprob: -10.654529571533203
    10. '.' → logprob: -11.529529571533203

Token 372: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003147280658595264
    2. ' for' → logprob: -8.125314712524414
    3. '
' → logprob: -11.250314712524414
    4. '   ' → logprob: -12.875314712524414
    5. '#' → logprob: -13.125314712524414
    6. ')' → logprob: -15.375314712524414
    7. '

' → logprob: -15.750314712524414
    8. '
' → logprob: -16.000314712524414
    9. '	for' → logprob: -16.125314712524414
    10. '    
' → logprob: -16.250314712524414

Token 373: ' repeat' (ID: 22962)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.554343366995454e-05
    2. ' for' → logprob: -9.375085830688477
    3. '
' → logprob: -15.125085830688477
    4. '   ' → logprob: -15.125085830688477
    5. '	for' → logprob: -16.750085830688477
    6. '#' → logprob: -18.125085830688477
    7. '    
' → logprob: -18.125085830688477
    8. '```' → logprob: -18.625085830688477
    9. ' 
' → logprob: -18.875085830688477
    10. 'from' → logprob: -18.875085830688477

Token 374: '=N' (ID: 143132)
  Prédit: '=N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=N' → logprob: -0.04452132061123848
    2. '=' → logprob: -3.1695213317871094
    3. '(N' → logprob: -6.544521331787109
    4. 'N' → logprob: -10.41952133178711
    5. '=(' → logprob: -10.66952133178711
    6. ' =' → logprob: -11.16952133178711
    7. '(' → logprob: -11.54452133178711
    8. '=
' → logprob: -13.54452133178711
    9. '=n' → logprob: -13.79452133178711
    10. ')' → logprob: -14.29452133178711

Token 375: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.757416307926178
    2. '):' → logprob: -0.757416307926178
    3. '):
' → logprob: -3.132416248321533
    4. '))' → logprob: -4.882416248321533
    5. '=' → logprob: -5.507416248321533
    6. ')
' → logprob: -5.757416248321533
    7. ')))' → logprob: -7.132416248321533
    8. ')):' → logprob: -7.257416248321533
    9. 'for' → logprob: -7.882416248321533
    10. ' )' → logprob: -8.132416725158691

Token 376: ' obtenir' (ID: 54423)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.030523957684636116
    2. ' N' → logprob: -3.5305240154266357
    3. ' rép' → logprob: -9.030524253845215
    4. 'repeat' → logprob: -9.155524253845215
    5. '2' → logprob: -9.655524253845215
    6. ' génér' → logprob: -9.780524253845215
    7. ' ' → logprob: -9.780524253845215
    8. 're' → logprob: -9.905524253845215
    9. 'generate' → logprob: -10.030524253845215
    10. 'produ' → logprob: -10.280524253845215

Token 377: ' toutes' (ID: 17502)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.018255416303873062
    2. ' N' → logprob: -4.018255233764648
    3. '2' → logprob: -10.018255233764648
    4. ')' → logprob: -10.643255233764648
    5. ' ' → logprob: -11.268255233764648
    6. '=N' → logprob: -11.518255233764648
    7. 'range' → logprob: -12.768255233764648
    8. ',' → logprob: -13.518255233764648
    9. 'repeat' → logprob: -13.518255233764648
    10. '(' → logprob: -13.768255233764648

Token 378: ' les' (ID: 1341)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.509788990020752
    2. '=N' → logprob: -1.009788990020752
    3. '(' → logprob: -3.759788990020752
    4. '(N' → logprob: -4.884788990020752
    5. '=(' → logprob: -6.009788990020752
    6. ' (' → logprob: -7.634788990020752
    7. ')' → logprob: -8.134788513183594
    8. 'N' → logprob: -8.259788513183594
    9. ' N' → logprob: -8.634788513183594
    10. ' ' → logprob: -8.884788513183594

Token 379: ' suites' (ID: 59833)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1800297349691391
    2. 'com' → logprob: -2.1800296306610107
    3. ' N' → logprob: -4.55502986907959
    4. 'élé' → logprob: -4.68002986907959
    5. '2' → logprob: -4.93002986907959
    6. 'poss' → logprob: -5.30502986907959
    7. 'elements' → logprob: -5.68002986907959
    8. 'positions' → logprob: -5.80502986907959
    9. 'comb' → logprob: -6.43002986907959
    10. 'possible' → logprob: -6.43002986907959

Token 380: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16032831370830536
    2. '=N' → logprob: -1.9103282690048218
    3. 'of' → logprob: -10.910327911376953
    4. 'de' → logprob: -11.035327911376953
    5. ',' → logprob: -11.035327911376953
    6. 'N' → logprob: -11.410327911376953
    7. ' =' → logprob: -11.535327911376953
    8. '=n' → logprob: -11.535327911376953
    9. '2' → logprob: -12.535327911376953
    10. 'des' → logprob: -13.035327911376953

Token 381: ' longueur' (ID: 104613)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.646955668926239
    2. '0' → logprob: -1.2719557285308838
    3. 'length' → logprob: -2.271955728530884
    4. '2' → logprob: -3.021955728530884
    5. ' N' → logprob: -3.896955728530884
    6. 'long' → logprob: -4.521955490112305
    7. ' ' → logprob: -4.646955490112305
    8. ' longueur' → logprob: -6.271955490112305
    9. ' length' → logprob: -8.146955490112305
    10. 'bits' → logprob: -8.521955490112305

Token 382: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004485461104195565
    2. ' N' → logprob: -8.375448226928711
    3. '=N' → logprob: -8.500448226928711
    4. '=' → logprob: -11.375448226928711
    5. '2' → logprob: -13.250448226928711
    6. '	N' → logprob: -14.875448226928711
    7. ',N' → logprob: -15.250448226928711
    8. ',' → logprob: -16.12544822692871
    9. '```' → logprob: -16.12544822692871
    10. '(N' → logprob: -16.25044822692871

Token 383: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16051432490348816
    2. '):' → logprob: -2.9105143547058105
    3. '):
' → logprob: -2.9105143547058105
    4. ' for' → logprob: -3.9105143547058105
    5. ':
' → logprob: -5.1605143547058105
    6. ':' → logprob: -5.1605143547058105
    7. ')' → logprob: -5.5355143547058105
    8. 'product' → logprob: -6.5355143547058105
    9. '(' → logprob: -7.2855143547058105
    10. '=' → logprob: -8.035513877868652

Token 384: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20353539288043976
    2. '(' → logprob: -2.703535318374634
    3. ' ' → logprob: -2.828535318374634
    4. '[' → logprob: -3.578535318374634
    5. ' (' → logprob: -3.703535318374634
    6. '2' → logprob: -5.828535556793213
    7. ' [' → logprob: -6.078535556793213
    8. '{' → logprob: -8.703535079956055
    9. '([' → logprob: -10.828535079956055
    10. 'range' → logprob: -11.078535079956055

Token 385: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13793739676475525
    2. '(' → logprob: -2.387937307357788
    3. '[' → logprob: -3.512937307357788
    4. ' (' → logprob: -5.762937545776367
    5. ' ' → logprob: -6.137937545776367
    6. '2' → logprob: -6.762937545776367
    7. '{' → logprob: -7.512937545776367
    8. ' [' → logprob: -9.012937545776367
    9. '([' → logprob: -10.762937545776367
    10. '(product' → logprob: -10.762937545776367

Token 386: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005157146602869034
    2. ')' → logprob: -6.255156993865967
    3. '),' → logprob: -7.255156993865967
    4. '=' → logprob: -7.505156993865967
    5. ' ,' → logprob: -7.880156993865967
    6. ',
' → logprob: -8.255157470703125
    7. '<|end|>' → logprob: -8.505157470703125
    8. '2' → logprob: -8.880157470703125
    9. 'or' → logprob: -9.380157470703125
    10. 'for' → logprob: -9.380157470703125

Token 387: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036031559575349092
    2. ' ' → logprob: -5.628602981567383
    3. ',' → logprob: -14.691102981567383
    4. '2' → logprob: -14.816102981567383
    5. ' ' → logprob: -15.316102981567383
    6. '#' → logprob: -15.566102981567383
    7. '...' → logprob: -15.628602981567383
    8. '{' → logprob: -15.753602981567383
    9. '`' → logprob: -15.816102981567383
    10. '```' → logprob: -15.878602981567383

Token 388: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -12.125007629394531
    3. '
' → logprob: -13.875007629394531
    4. '2' → logprob: -15.187507629394531
    5. '{' → logprob: -15.437507629394531
    6. 'N' → logprob: -15.562507629394531
    7. '

' → logprob: -15.875007629394531
    8. '`' → logprob: -16.31250762939453
    9. '```' → logprob: -16.68750762939453
    10. '0' → logprob: -16.93750762939453

Token 389: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21791775524616241
    2. ':
' → logprob: -2.8429176807403564
    3. ':' → logprob: -2.9679176807403564
    4. '):
' → logprob: -3.2179176807403564
    5. '):' → logprob: -3.5929176807403564
    6. ')' → logprob: -4.5929179191589355
    7. ' for' → logprob: -5.4679179191589355
    8. ')
' → logprob: -6.2179179191589355
    9. 'product' → logprob: -7.9679179191589355
    10. '
' → logprob: -7.9679179191589355

Token 390: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8624639324116288e-06
    2. ' for' → logprob: -13.250001907348633
    3. ')' → logprob: -17.875001907348633
    4. '
' → logprob: -18.125001907348633
    5. '#' → logprob: -18.625001907348633
    6. ':' → logprob: -19.000001907348633
    7. '   ' → logprob: -19.625001907348633
    8. '```' → logprob: -20.500001907348633
    9. ']' → logprob: -20.875001907348633
    10. '):
' → logprob: -21.000001907348633

Token 391: ' product' (ID: 1888)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.8087270038668066e-05
    2. ' for' → logprob: -10.500027656555176
    3. '#' → logprob: -15.125027656555176
    4. '
' → logprob: -16.625028610229492
    5. 'left' → logprob: -17.375028610229492
    6. 'For' → logprob: -18.125028610229492
    7. '   ' → logprob: -18.125028610229492
    8. ')' → logprob: -18.125028610229492
    9. 'fo' → logprob: -18.500028610229492
    10. '	for' → logprob: -18.500028610229492

Token 392: '()' (ID: 416)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.07385708391666412
    2. '(' → logprob: -2.698857069015503
    3. '(product' → logprob: -5.573857307434082
    4. ' (' → logprob: -9.698857307434082
    5. 'range' → logprob: -10.448857307434082
    6. 'from' → logprob: -11.823857307434082
    7. '(
' → logprob: -12.073857307434082
    8. '(iter' → logprob: -12.698857307434082
    9. 'product' → logprob: -12.823857307434082
    10. '((' → logprob: -13.698857307434082

Token 393: ' va' (ID: 3423)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1304592490196228
    2. '(range' → logprob: -2.2554593086242676
    3. '(product' → logprob: -4.380459308624268
    4. ')' → logprob: -7.380459308624268
    5. 'range' → logprob: -7.380459308624268
    6. ' (' → logprob: -7.630459308624268
    7. '(*' → logprob: -7.880459308624268
    8. 'product' → logprob: -7.880459308624268
    9. 'for' → logprob: -8.13045883178711
    10. '=' → logprob: -8.13045883178711

Token 394: ' donc' (ID: 14206)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.4520263373851776
    2. ' product' → logprob: -1.0770263671875
    3. '(product' → logprob: -4.2020263671875
    4. 'generate' → logprob: -5.2020263671875
    5. ' generate' → logprob: -7.3270263671875
    6. ' produire' → logprob: -7.3270263671875
    7. '(' → logprob: -8.3270263671875
    8. ' génér' → logprob: -8.4520263671875
    9. 'return' → logprob: -9.0770263671875
    10. ' iter' → logprob: -9.4520263671875

Token 395: ' génér' (ID: 18939)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.04607261344790459
    2. ' product' → logprob: -3.5460727214813232
    3. '(product' → logprob: -4.296072483062744
    4. 'generate' → logprob: -6.046072483062744
    5. ' produire' → logprob: -9.921072959899902
    6. ' generate' → logprob: -10.421072959899902
    7. ' génér' → logprob: -10.546072959899902
    8. 'produ' → logprob: -10.671072959899902
    9. 'prod' → logprob: -11.046072959899902
    10. '(' → logprob: -11.171072959899902

Token 396: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.5978902578353882
    2. 'ate' → logprob: -1.4728902578353882
    3. 'rer' → logprob: -1.5978902578353882
    4. 'te' → logprob: -5.347890377044678
    5. 'r' → logprob: -5.597890377044678
    6. 'product' → logprob: -5.972890377044678
    7. 'rate' → logprob: -5.972890377044678
    8. 'ner' → logprob: -6.597890377044678
    9. 'iter' → logprob: -6.847890377044678
    10. 'érer' → logprob: -7.722890377044678

Token 397: ' toutes' (ID: 17502)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.9188256859779358
    2. '(product' → logprob: -1.168825626373291
    3. '(range' → logprob: -1.668825626373291
    4. '(' → logprob: -2.668825626373291
    5. 'range' → logprob: -3.543825626373291
    6. '([' → logprob: -6.293825626373291
    7. '((' → logprob: -7.418825626373291
    8. 'list' → logprob: -7.668825626373291
    9. ' product' → logprob: -8.04382610321045
    10. '(list' → logprob: -9.04382610321045

Token 398: ' les' (ID: 1341)
  Prédit: '(product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.591393768787384
    2. '(range' → logprob: -1.5913937091827393
    3. '(' → logprob: -1.8413937091827393
    4. '([' → logprob: -2.9663937091827393
    5. '((' → logprob: -3.5913937091827393
    6. '(list' → logprob: -5.591393947601318
    7. '(([' → logprob: -7.466393947601318
    8. 'product' → logprob: -7.966393947601318
    9. '([(' → logprob: -8.71639347076416
    10. '([[' → logprob: -9.46639347076416

Token 399: ' répart' (ID: 147636)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.46924808621406555
    2. '(' → logprob: -1.3442480564117432
    3. ' product' → logprob: -2.844248056411743
    4. 'possible' → logprob: -4.094248294830322
    5. 'com' → logprob: -4.344248294830322
    6. 'poss' → logprob: -5.219248294830322
    7. ' possible' → logprob: -5.469248294830322
    8. 'comb' → logprob: -5.594248294830322
    9. ' possibles' → logprob: -5.969248294830322
    10. '(product' → logprob: -6.344248294830322

Token 400: 'itions' (ID: 5500)
  Prédit: 'itions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itions' → logprob: -0.012924431823194027
    2. 'ition' → logprob: -4.3879241943359375
    3. 'ir' → logprob: -9.637924194335938
    4. 'ations' → logprob: -9.637924194335938
    5. 'issions' → logprob: -10.012924194335938
    6. 'i' → logprob: -10.137924194335938
    7. 'ion' → logprob: -10.262924194335938
    8. 'ions' → logprob: -10.637924194335938
    9. 'itionen' → logprob: -10.637924194335938
    10. '```' → logprob: -11.012924194335938

Token 401: ' possibles' (ID: 97753)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8259919881820679
    2. ' possible' → logprob: -1.7009919881820679
    3. ' possibles' → logprob: -1.9509919881820679
    4. ' de' → logprob: -2.3259921073913574
    5. ' for' → logprob: -3.3259921073913574
    6. 'possible' → logprob: -3.5759921073913574
    7. ',' → logprob: -4.075992107391357
    8. 'for' → logprob: -4.700992107391357
    9. '(' → logprob: -4.700992107391357
    10. ' pour' → logprob: -4.950992107391357

Token 402: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5468766093254089
    2. '(' → logprob: -1.1718766689300537
    3. 'de' → logprob: -3.9218766689300537
    4. 'pour' → logprob: -3.9218766689300537
    5. ' for' → logprob: -4.171876430511475
    6. ' de' → logprob: -4.421876430511475
    7. ' pour' → logprob: -4.671876430511475
    8. ',' → logprob: -5.046876430511475
    9. 'of' → logprob: -5.421876430511475
    10. '((' → logprob: -5.421876430511475

Token 403: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00071695790393278
    2. ' for' → logprob: -7.2507171630859375
    3. ')' → logprob: -12.875717163085938
    4. '(
' → logprob: -13.500717163085938
    5. '(' → logprob: -13.875717163085938
    6. '
' → logprob: -14.375717163085938
    7. ':' → logprob: -14.750717163085938
    8. '   ' → logprob: -14.875717163085938
    9. ' 
' → logprob: -15.750717163085938
    10. '0' → logprob: -16.125717163085938

Token 404: ' Par' (ID: 3371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011732018319889903
    2. ' for' → logprob: -6.75117301940918
    3. '
' → logprob: -13.87617301940918
    4. '   ' → logprob: -14.62617301940918
    5. '#' → logprob: -14.75117301940918
    6. ')' → logprob: -15.50117301940918
    7. ' 
' → logprob: -16.00117301940918
    8. 'For' → logprob: -16.12617301940918
    9. '```' → logprob: -16.37617301940918
    10. '    
' → logprob: -16.62617301940918

Token 405: ' exemple' (ID: 26320)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11599761247634888
    2. 't' → logprob: -2.740997552871704
    3. ' for' → logprob: -3.615997552871704
    4. 'm' → logprob: -5.990997791290283
    5. 'product' → logprob: -6.240997791290283
    6. 'mi' → logprob: -6.240997791290283
    7. 'met' → logprob: -6.990997791290283
    8. '=' → logprob: -7.115997791290283
    9. 'it' → logprob: -7.115997791290283
    10. ' product' → logprob: -7.115997791290283

Token 406: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.43281492590904236
    2. 'for' → logprob: -1.4328149557113647
    3. '(' → logprob: -3.182814836502075
    4. '   ' → logprob: -4.307815074920654
    5. ' (' → logprob: -4.557815074920654
    6. ' pour' → logprob: -4.807815074920654
    7. ' ' → logprob: -5.057815074920654
    8. ' :' → logprob: -5.057815074920654
    9. ',' → logprob: -5.057815074920654
    10. '(
' → logprob: -5.307815074920654

Token 407: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6336330771446228
    2. ' for' → logprob: -0.7586330771446228
    3. ' (' → logprob: -8.38363265991211
    4. '[' → logprob: -9.25863265991211
    5. ' product' → logprob: -9.50863265991211
    6. '#' → logprob: -9.50863265991211
    7. ' ' → logprob: -9.63363265991211
    8. '   ' → logprob: -9.75863265991211
    9. ' [' → logprob: -9.75863265991211
    10. '(' → logprob: -9.88363265991211

Token 408: ' N' (ID: 478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43723514676094055
    2. ' i' → logprob: -2.062235116958618
    3. 'i' → logprob: -2.187235116958618
    4. ' _' → logprob: -3.187235116958618
    5. 'N' → logprob: -3.937235116958618
    6. ' N' → logprob: -4.687235355377197
    7. 'n' → logprob: -4.812235355377197
    8. ' b' → logprob: -5.062235355377197
    9. ' n' → logprob: -5.437235355377197
    10. ' bits' → logprob: -5.562235355377197

Token 409: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06328513473272324
    2. ' =' → logprob: -2.8132851123809814
    3. ')' → logprob: -7.6882853507995605
    4. '):' → logprob: -8.188284873962402
    5. '*' → logprob: -8.813284873962402
    6. ' *' → logprob: -9.188284873962402
    7. ',' → logprob: -9.938284873962402
    8. '),' → logprob: -9.938284873962402
    9. '):
' → logprob: -10.063284873962402
    10. ')=' → logprob: -10.063284873962402

Token 410: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.44408944249153137
    2. '3' → logprob: -1.319089412689209
    3. '1' → logprob: -3.069089412689209
    4. ' ' → logprob: -4.069089412689209
    5. 'N' → logprob: -4.444089412689209
    6. '4' → logprob: -4.444089412689209
    7. ' N' → logprob: -6.694089412689209
    8. '0' → logprob: -6.819089412689209
    9. '5' → logprob: -7.319089412689209
    10. 'range' → logprob: -7.569089412689209

Token 411: ' :' (ID: 712)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7551992535591125
    2. ':' → logprob: -1.1301991939544678
    3. ' for' → logprob: -1.8801991939544678
    4. ',' → logprob: -3.1301991939544678
    5. ':
' → logprob: -5.380199432373047
    6. ' :' → logprob: -6.130199432373047
    7. '(' → logprob: -6.380199432373047
    8. ' in' → logprob: -8.130199432373047
    9. '#' → logprob: -8.130199432373047
    10. ',
' → logprob: -8.255199432373047

Token 412: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.633632242679596
    2. 'for' → logprob: -0.758632242679596
    3. '   ' → logprob: -7.133632183074951
    4. ' ' → logprob: -8.75863265991211
    5. ' 
' → logprob: -10.38363265991211
    6. '
' → logprob: -11.38363265991211
    7. '    
' → logprob: -11.63363265991211
    8. '	for' → logprob: -11.88363265991211
    9. '[' → logprob: -12.88363265991211
    10. '#' → logprob: -13.13363265991211

Token 413: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.032402731478214264
    2. ' ' → logprob: -3.657402753829956
    3. '(' → logprob: -5.657402515411377
    4. ' (' → logprob: -6.032402515411377
    5. ')' → logprob: -9.532402992248535
    6. '   ' → logprob: -10.657402992248535
    7. '
' → logprob: -10.782402992248535
    8. '  ' → logprob: -11.657402992248535
    9. '),' → logprob: -11.657402992248535
    10. 'i' → logprob: -11.782402992248535

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02348794788122177
    2. ',),' → logprob: -4.5234880447387695
    3. ',)' → logprob: -5.0234880447387695
    4. '),' → logprob: -5.2734880447387695
    5. ' ,' → logprob: -8.39848804473877
    6. ')' → logprob: -8.52348804473877
    7. ',),
' → logprob: -9.39848804473877
    8. ' ),' → logprob: -10.14848804473877
    9. '),(' → logprob: -10.39848804473877
    10. '0' → logprob: -10.64848804473877

Token 415: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3132966458797455
    2. ' ' → logprob: -1.3132966756820679
    3. '),' → logprob: -11.4382963180542
    4. ')' → logprob: -11.8132963180542
    5. ' ),' → logprob: -12.8132963180542
    6. ' 
' → logprob: -12.9382963180542
    7. '
' → logprob: -12.9382963180542
    8. ',' → logprob: -13.4382963180542
    9. '  ' → logprob: -13.4382963180542
    10. '   ' → logprob: -13.5632963180542

Token 416: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.02046048641204834
    2. ')' → logprob: -4.270460605621338
    3. '),
' → logprob: -5.145460605621338
    4. ' ),' → logprob: -8.02046012878418
    5. '),(' → logprob: -10.02046012878418
    6. ')
' → logprob: -10.39546012878418
    7. ',' → logprob: -11.02046012878418
    8. '),

' → logprob: -11.14546012878418
    9. '),
' → logprob: -12.14546012878418
    10. ' ),
' → logprob: -12.77046012878418

Token 417: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.01467228028923273
    2. '(' → logprob: -4.26467227935791
    3. ' ' → logprob: -7.76467227935791
    4. '0' → logprob: -9.76467227935791
    5. ',' → logprob: -11.88967227935791
    6. ' 
' → logprob: -12.13967227935791
    7. '    ' → logprob: -13.13967227935791
    8. ')' → logprob: -13.38967227935791
    9. '  ' → logprob: -13.76467227935791
    10. 'product' → logprob: -13.76467227935791

Token 418: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003633327316492796
    2. ' ' → logprob: -5.628633499145508
    3. '1' → logprob: -10.628633499145508
    4. ',' → logprob: -12.128633499145508
    5. '   ' → logprob: -13.566133499145508
    6. ')' → logprob: -14.441133499145508
    7. '  ' → logprob: -15.003633499145508
    8. '2' → logprob: -15.003633499145508
    9. '
' → logprob: -15.503633499145508
    10. '    ' → logprob: -15.691133499145508

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008307131356559694
    2. ',)' → logprob: -7.75083065032959
    3. ',),' → logprob: -8.87583065032959
    4. ')' → logprob: -9.37583065032959
    5. '1' → logprob: -10.00083065032959
    6. ',
' → logprob: -10.12583065032959
    7. '),' → logprob: -10.25083065032959
    8. '),(' → logprob: -11.12583065032959
    9. ' ,' → logprob: -11.50083065032959
    10. '0' → logprob: -11.75083065032959

Token 420: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5849859118461609
    2. '0' → logprob: -0.8349859118461609
    3. ' ' → logprob: -4.709985733032227
    4. ')' → logprob: -14.959985733032227
    5. '01' → logprob: -16.084985733032227
    6. '
' → logprob: -16.834985733032227
    7. '  ' → logprob: -16.834985733032227
    8. '   ' → logprob: -17.084985733032227
    9. '(' → logprob: -17.709985733032227
    10. '00' → logprob: -17.834985733032227

Token 421: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00013512482109945267
    2. ')' → logprob: -9.62513542175293
    3. ' ),' → logprob: -9.75013542175293
    4. '),(' → logprob: -11.62513542175293
    5. '),
' → logprob: -14.25013542175293
    6. ' ' → logprob: -14.62513542175293
    7. ',' → logprob: -14.75013542175293
    8. ',),' → logprob: -16.25013542175293
    9. ' ' → logprob: -17.50013542175293
    10. '   ' → logprob: -17.50013542175293

Token 422: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0889623686671257
    2. '(' → logprob: -2.4639623165130615
    3. ' ' → logprob: -11.71396255493164
    4. ',' → logprob: -11.83896255493164
    5. '0' → logprob: -12.33896255493164
    6. ' ' → logprob: -13.58896255493164
    7. ')' → logprob: -13.83896255493164
    8. ' 
' → logprob: -15.46396255493164
    9. ' ,' → logprob: -16.08896255493164
    10. '1' → logprob: -16.21396255493164

Token 423: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004147032741457224
    2. ' ' → logprob: -8.500414848327637
    3. '1' → logprob: -8.500414848327637
    4. '(' → logprob: -12.000414848327637
    5. ',' → logprob: -15.000414848327637
    6. ' (' → logprob: -15.000414848327637
    7. ')' → logprob: -15.687914848327637
    8. '   ' → logprob: -15.937914848327637
    9. '...' → logprob: -16.06291389465332
    10. '  ' → logprob: -16.25041389465332

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018077615823131055
    2. ')' → logprob: -10.000181198120117
    3. '),(' → logprob: -10.250181198120117
    4. '),' → logprob: -10.375181198120117
    5. ',)' → logprob: -10.750181198120117
    6. ',),' → logprob: -10.875181198120117
    7. '0' → logprob: -11.125181198120117
    8. ' ,' → logprob: -12.000181198120117
    9. ',
' → logprob: -12.750181198120117
    10. '<|end|>' → logprob: -13.375181198120117

Token 425: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.190178904333152e-05
    2. ' ' → logprob: -10.500031471252441
    3. '1' → logprob: -13.000031471252441
    4. ')' → logprob: -13.500031471252441
    5. '),' → logprob: -14.625031471252441
    6. '```' → logprob: -16.250032424926758
    7. '

' → logprob: -16.625032424926758
    8. '(' → logprob: -17.000032424926758
    9. '
' → logprob: -18.000032424926758
    10. '   ' → logprob: -18.375032424926758

Token 426: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00031186718842945993
    2. ')' → logprob: -8.250311851501465
    3. '),(' → logprob: -10.375311851501465
    4. ' ),' → logprob: -11.375311851501465
    5. ',' → logprob: -12.375311851501465
    6. '),
' → logprob: -12.875311851501465
    7. ',),' → logprob: -14.875311851501465
    8. ' ' → logprob: -16.12531280517578
    9. '   ' → logprob: -16.12531280517578
    10. ')،' → logprob: -16.50031280517578

Token 427: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10020861029624939
    2. '(' → logprob: -2.3502085208892822
    3. ' ' → logprob: -14.100208282470703
    4. ')' → logprob: -14.600208282470703
    5. ',' → logprob: -14.850208282470703
    6. '1' → logprob: -15.600208282470703
    7. ' ' → logprob: -16.725208282470703
    8. '...' → logprob: -16.850208282470703
    9. '0' → logprob: -17.100208282470703
    10. '#' → logprob: -17.600208282470703

Token 428: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023863177746534348
    2. '0' → logprob: -3.7738630771636963
    3. ' ' → logprob: -7.398863315582275
    4. ',' → logprob: -13.398862838745117
    5. '```' → logprob: -13.773862838745117
    6. ')' → logprob: -14.148862838745117
    7. '(' → logprob: -14.273862838745117
    8. '2' → logprob: -14.773862838745117
    9. 'product' → logprob: -15.148862838745117
    10. '   ' → logprob: -15.398862838745117

Token 429: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016761370934545994
    2. ')' → logprob: -7.251676082611084
    3. ',)' → logprob: -7.501676082611084
    4. '),' → logprob: -8.376676559448242
    5. ',),' → logprob: -9.126676559448242
    6. ',
' → logprob: -10.626676559448242
    7. '),(' → logprob: -11.126676559448242
    8. '1' → logprob: -11.501676559448242
    9. ' ,' → logprob: -11.876676559448242
    10. ',),
' → logprob: -12.626676559448242

Token 430: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -11.500011444091797
    3. ')' → logprob: -14.750011444091797
    4. '```' → logprob: -16.125011444091797
    5. '
' → logprob: -16.250011444091797
    6. '0' → logprob: -16.250011444091797
    7. '

' → logprob: -16.750011444091797
    8. '   ' → logprob: -18.250011444091797
    9. '),' → logprob: -18.375011444091797
    10. 'product' → logprob: -18.375011444091797

Token 431: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20219624042510986
    2. '):' → logprob: -1.7021962404251099
    3. '):
' → logprob: -7.45219612121582
    4. ')
' → logprob: -8.95219612121582
    5. ':' → logprob: -10.82719612121582
    6. ' )' → logprob: -11.07719612121582
    7. '#' → logprob: -11.70219612121582
    8. ' ):' → logprob: -12.07719612121582
    9. '))' → logprob: -12.45219612121582
    10. 'for' → logprob: -12.70219612121582

Token 432: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.2246291337069124e-05
    2. ' for' → logprob: -10.750021934509277
    3. '
' → logprob: -14.625021934509277
    4. ')' → logprob: -16.250022888183594
    5. '```' → logprob: -17.000022888183594
    6. '#' → logprob: -17.875022888183594
    7. ' 
' → logprob: -17.875022888183594
    8. '    
' → logprob: -18.125022888183594
    9. '   ' → logprob: -18.375022888183594
    10. '

' → logprob: -18.625022888183594

Token 433: ' bit' (ID: 3546)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -1.2810853719711304
    2. 'bits' → logprob: -1.4060853719711304
    3. 'choice' → logprob: -2.53108549118042
    4. 'mask' → logprob: -2.78108549118042
    5. 'assignment' → logprob: -2.78108549118042
    6. 'combo' → logprob: -3.03108549118042
    7. ' comb' → logprob: -3.40608549118042
    8. 'p' → logprob: -3.53108549118042
    9. 'pattern' → logprob: -4.15608549118042
    10. 'color' → logprob: -4.28108549118042

Token 434: ' in' (ID: 306)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004568019416183233
    2. ' in' → logprob: -6.504568099975586
    3. '_tuple' → logprob: -6.504568099975586
    4. '_comb' → logprob: -7.629568099975586
    5. '_combo' → logprob: -8.379568099975586
    6. 'comb' → logprob: -8.379568099975586
    7. 'tuple' → logprob: -8.629568099975586
    8. 'combo' → logprob: -8.879568099975586
    9. 'in' → logprob: -9.254568099975586
    10. 'pattern' → logprob: -9.754568099975586

Token 435: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -2.7610454708337784e-05
    2. ' product' → logprob: -10.500027656555176
    3. 'list' → logprob: -20.62502670288086
    4. '	product' → logprob: -20.75002670288086
    5. '   ' → logprob: -20.87502670288086
    6. '(product' → logprob: -21.37502670288086
    7. ' ' → logprob: -22.12502670288086
    8. '.product' → logprob: -23.37502670288086
    9. 'range' → logprob: -23.87502670288086
    10. 'Product' → logprob: -24.12502670288086

Token 436: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -6.420598219847307e-05
    2. '(' → logprob: -9.7500638961792
    3. ' (' → logprob: -13.1250638961792
    4. '([' → logprob: -13.2500638961792
    5. '((' → logprob: -13.6250638961792
    6. 'range' → logprob: -14.0000638961792
    7. '```' → logprob: -17.750064849853516
    8. '   ' → logprob: -18.625064849853516
    9. '`' → logprob: -18.750064849853516
    10. ' range' → logprob: -19.500064849853516

Token 437: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.4121114822482923e-06
    2. '2' → logprob: -13.000003814697266
    3. '(
' → logprob: -14.875003814697266
    4. ' (' → logprob: -15.000003814697266
    5. ',' → logprob: -15.500003814697266
    6. ')' → logprob: -16.125003814697266
    7. 's' → logprob: -16.375003814697266
    8. ')(' → logprob: -16.375003814697266
    9. '[' → logprob: -18.750003814697266
    10. ' ' → logprob: -19.625003814697266

Token 438: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '(' → logprob: -17.250001907348633
    4. ')' → logprob: -18.375001907348633
    5. '   ' → logprob: -18.375001907348633
    6. '```' → logprob: -18.375001907348633
    7. '0' → logprob: -18.500001907348633
    8. '1' → logprob: -19.375001907348633
    9. ',' → logprob: -19.437501907348633
    10. '  ' → logprob: -19.937501907348633

Token 439: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -7.421908958349377e-05
    2. ')' → logprob: -9.62507438659668
    3. ' ),' → logprob: -12.00007438659668
    4. ',' → logprob: -14.50007438659668
    5. ' ' → logprob: -14.75007438659668
    6. ',),' → logprob: -15.00007438659668
    7. '),
' → logprob: -15.50007438659668
    8. '),(' → logprob: -16.00007438659668
    9. ')),' → logprob: -16.12507438659668
    10. '()),' → logprob: -16.75007438659668

Token 440: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.005236479919403791
    2. ' repeat' → logprob: -5.255236625671387
    3. ')' → logprob: -13.755236625671387
    4. ' ' → logprob: -14.755236625671387
    5. 'N' → logprob: -15.130236625671387
    6. '   ' → logprob: -15.380236625671387
    7. '
' → logprob: -15.630236625671387
    8. 'reverse' → logprob: -15.755236625671387
    9. ',' → logprob: -15.880236625671387
    10. '```' → logprob: -16.63023567199707

Token 441: '=N' (ID: 143132)
  Prédit: '=N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=N' → logprob: -0.0012354647042229772
    2. 'N' → logprob: -7.001235485076904
    3. '=' → logprob: -8.626235008239746
    4. '(N' → logprob: -8.876235008239746
    5. ')' → logprob: -12.876235008239746
    6. '(' → logprob: -14.001235008239746
    7. ' N' → logprob: -14.376235008239746
    8. '	N' → logprob: -15.376235008239746
    9. ')=' → logprob: -15.751235008239746
    10. ',N' → logprob: -16.251235961914062

Token 442: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -7.374227425316349e-05
    2. '):
' → logprob: -10.000073432922363
    3. ':' → logprob: -11.000073432922363
    4. ')' → logprob: -11.500073432922363
    5. ' ):' → logprob: -13.750073432922363
    6. '():' → logprob: -16.00007438659668
    7. '):
' → logprob: -16.62507438659668
    8. '}:' → logprob: -17.00007438659668
    9. '):

' → logprob: -17.50007438659668
    10. ']:' → logprob: -18.00007438659668

Token 443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004465489182621241
    2. '	left' → logprob: -5.754465579986572
    3. ' left' → logprob: -7.004465579986572
    4. 'left' → logprob: -8.504465103149414
    5. '   ' → logprob: -9.254465103149414
    6. '    
' → logprob: -10.254465103149414
    7. '	if' → logprob: -11.379465103149414
    8. '\t' → logprob: -11.504465103149414
    9. '```' → logprob: -13.004465103149414
    10. ' if' → logprob: -13.129465103149414

Token 444: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23255561292171478
    2. ' left' → logprob: -1.732555627822876
    3. 'left' → logprob: -3.982555627822876
    4. ' if' → logprob: -5.357555389404297
    5. '	left' → logprob: -5.982555389404297
    6. '    
' → logprob: -6.607555389404297
    7. '    ' → logprob: -7.232555389404297
    8. '       ' → logprob: -7.857555389404297
    9. ' count' → logprob: -8.482555389404297
    10. 'if' → logprob: -8.607555389404297

Token 445: ' Initial' (ID: 9209)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.1730021834373474
    2. '   ' → logprob: -2.423002243041992
    3. ' left' → logprob: -2.923002243041992
    4. 'partition' → logprob: -6.173002243041992
    5. 'count' → logprob: -6.298002243041992
    6. 'bit' → logprob: -6.673002243041992
    7. 'mask' → logprob: -6.923002243041992
    8. 'if' → logprob: -7.048002243041992
    9. 'red' → logprob: -7.173002243041992
    10. 'color' → logprob: -7.173002243041992

Token 446: 'isation' (ID: 6993)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3109135627746582
    2. 'ize' → logprob: -2.185913562774658
    3. 'ement' → logprob: -2.435913562774658
    4. 'iser' → logprob: -2.435913562774658
    5. 'izer' → logprob: -2.435913562774658
    6. 'ized' → logprob: -2.685913562774658
    7. 'ization' → logprob: -2.935913562774658
    8. '_' → logprob: -3.060913562774658
    9. 'er' → logprob: -3.060913562774658
    10. 'e' → logprob: -3.935913562774658

Token 447: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4449124336242676
    2. ' left' → logprob: -1.9449124336242676
    3. ' rouge' → logprob: -2.1949124336242676
    4. ' red' → logprob: -2.8199124336242676
    5. 'left' → logprob: -3.8199124336242676
    6. 'red' → logprob: -4.694912433624268
    7. ' gauche' → logprob: -4.819912433624268
    8. ' Rouge' → logprob: -6.444912433624268
    9. ' rouges' → logprob: -7.819912433624268
    10. ' blue' → logprob: -7.819912433624268

Token 448: ' chaînes' (ID: 179904)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.9548210501670837
    2. 'g' → logprob: -1.5798211097717285
    3. 'red' → logprob: -1.8298211097717285
    4. 'group' → logprob: -1.9548211097717285
    5. 'rou' → logprob: -3.2048211097717285
    6. '[]' → logprob: -4.5798211097717285
    7. ' rouge' → logprob: -5.0798211097717285
    8. 'ble' → logprob: -5.3298211097717285
    9. 'reds' → logprob: -5.3298211097717285
    10. 'temp' → logprob: -5.7048211097717285

Token 449: ' de' (ID: 334)
  Prédit: ' rouge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rouge' → logprob: -0.5321342945098877
    2. ' left' → logprob: -1.9071342945098877
    3. ' red' → logprob: -2.0321342945098877
    4. ' gauche' → logprob: -3.1571342945098877
    5. '   ' → logprob: -3.6571342945098877
    6. '_' → logprob: -4.407134056091309
    7. ' rouges' → logprob: -4.407134056091309
    8. 'left' → logprob: -5.032134056091309
    9. 'red' → logprob: -5.157134056091309
    10. ' blue' → logprob: -5.782134056091309

Token 450: ' caractères' (ID: 183106)
  Prédit: 'rou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rou' → logprob: -1.038223385810852
    2. '"' → logprob: -1.913223385810852
    3. 'de' → logprob: -2.0382232666015625
    4. 'str' → logprob: -2.4132232666015625
    5. '""' → logprob: -3.1632232666015625
    6. 'car' → logprob: -3.2882232666015625
    7. 'g' → logprob: -3.4132232666015625
    8. ' gauche' → logprob: -3.4132232666015625
    9. 'chaine' → logprob: -3.6632232666015625
    10. 'ble' → logprob: -4.0382232666015625

Token 451: ' v' (ID: 323)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.2566221058368683
    2. ' red' → logprob: -1.756622076034546
    3. 'left' → logprob: -3.881622076034546
    4. ' gauche' → logprob: -4.631622314453125
    5. ' rouge' → logprob: -4.631622314453125
    6. 'red' → logprob: -5.256622314453125
    7. '   ' → logprob: -6.381622314453125
    8. '_left' → logprob: -6.881622314453125
    9. 'g' → logprob: -7.506622314453125
    10. ' blue' → logprob: -7.631622314453125

Token 452: 'ides' (ID: 4105)
  Prédit: 'ert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ert' → logprob: -0.2463253289461136
    2. 'ideo' → logprob: -3.4963252544403076
    3. ' rouge' → logprob: -3.4963252544403076
    4. 'al' → logprob: -3.9963252544403076
    5. 'ide' → logprob: -3.9963252544403076
    6. 'erte' → logprob: -4.371325492858887
    7. 'en' → logprob: -4.496325492858887
    8. 'red' → logprob: -4.496325492858887
    9. '   ' → logprob: -4.621325492858887
    10. 'er' → logprob: -4.871325492858887

Token 453: ' pour' (ID: 1930)
  Prédit: ' rouge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rouge' → logprob: -0.6830561757087708
    2. ' red' → logprob: -2.058056116104126
    3. '   ' → logprob: -2.433056116104126
    4. ' left' → logprob: -2.558056116104126
    5. 'red' → logprob: -3.183056116104126
    6. 'left' → logprob: -3.308056116104126
    7. 'g' → logprob: -3.808056116104126
    8. ' rouges' → logprob: -3.933056116104126
    9. ',' → logprob: -4.058056354522705
    10. 'r' → logprob: -4.058056354522705

Token 454: ' les' (ID: 1341)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.2752205431461334
    2. 'red' → logprob: -1.775220513343811
    3. 'g' → logprob: -4.4002203941345215
    4. ' left' → logprob: -4.5252203941345215
    5. ' red' → logprob: -4.6502203941345215
    6. 'l' → logprob: -4.7752203941345215
    7. 'rou' → logprob: -4.9002203941345215
    8. ' rouge' → logprob: -5.0252203941345215
    9. 'r' → logprob: -5.2752203941345215
    10. '"' → logprob: -6.5252203941345215

Token 455: ' groupes' (ID: 72206)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.542966902256012
    2. 'g' → logprob: -1.1679668426513672
    3. 'rou' → logprob: -2.792966842651367
    4. 'red' → logprob: -3.542966842651367
    5. 'group' → logprob: -4.417966842651367
    6. 'r' → logprob: -6.417966842651367
    7. 'ble' → logprob: -7.292966842651367
    8. 'G' → logprob: -7.417966842651367
    9. 'part' → logprob: -7.667966842651367
    10. 'a' → logprob: -7.917966842651367

Token 456: ' "' (ID: 392)
  Prédit: ' red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.6849929094314575
    2. ' left' → logprob: -1.4349929094314575
    3. ' rouge' → logprob: -2.059992790222168
    4. 'left' → logprob: -2.809992790222168
    5. 'red' → logprob: -3.184992790222168
    6. ' gauche' → logprob: -4.809992790222168
    7. '   ' → logprob: -5.184992790222168
    8. ' blue' → logprob: -5.684992790222168
    9. 'g' → logprob: -6.684992790222168
    10. 'rou' → logprob: -6.934992790222168

Token 457: 'rou' (ID: 691)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.7826899886131287
    2. 'rou' → logprob: -1.6576900482177734
    3. 'g' → logprob: -1.9076900482177734
    4. 'left' → logprob: -2.0326900482177734
    5. ' rouge' → logprob: -3.5326900482177734
    6. ' red' → logprob: -4.407690048217773
    7. 'ble' → logprob: -4.657690048217773
    8. 'blue' → logprob: -5.157690048217773
    9. ' gauche' → logprob: -5.407690048217773
    10. '"' → logprob: -5.907690048217773

Token 458: 'ge' (ID: 684)
  Prédit: 'ert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ert' → logprob: -0.14679886400699615
    2. 'erte' → logprob: -2.646798849105835
    3. 'er' → logprob: -3.271798849105835
    4. '   ' → logprob: -5.021799087524414
    5. 'erde' → logprob: -5.896799087524414
    6. 'erge' → logprob: -6.021799087524414
    7. 'erts' → logprob: -6.146799087524414
    8. 'o' → logprob: -6.521799087524414
    9. '```' → logprob: -6.646799087524414
    10. 'ers' → logprob: -6.896799087524414

Token 459: '"' (ID: 1)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.8789085745811462
    2. '"' → logprob: -1.753908634185791
    3. '_g' → logprob: -1.878908634185791
    4. '_' → logprob: -2.128908634185791
    5. '_red' → logprob: -2.503908634185791
    6. '_left' → logprob: -4.128908634185791
    7. '1' → logprob: -4.628908634185791
    8. 'g' → logprob: -5.003908634185791
    9. '_ro' → logprob: -5.128908634185791
    10. '_a' → logprob: -5.628908634185791

Token 460: ' et' (ID: 859)
  Prédit: '_red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_red' → logprob: -1.0000520944595337
    2. 'red' → logprob: -1.1250520944595337
    3. ' red' → logprob: -2.750051975250244
    4. 'r' → logprob: -2.750051975250244
    5. '_' → logprob: -2.875051975250244
    6. '_r' → logprob: -3.000051975250244
    7. ' rouge' → logprob: -4.000051975250244
    8. 'rou' → logprob: -4.000051975250244
    9. ',' → logprob: -5.125051975250244
    10. 'left' → logprob: -5.125051975250244

Token 461: ' "' (ID: 392)
  Prédit: ' bleu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bleu' → logprob: -0.09554009139537811
    2. 'ble' → logprob: -2.5955400466918945
    3. ' ble' → logprob: -4.3455400466918945
    4. ' blue' → logprob: -6.8455400466918945
    5. 'blue' → logprob: -7.0955400466918945
    6. '_ble' → logprob: -7.7205400466918945
    7. ' ' → logprob: -7.8455400466918945
    8. '"' → logprob: -7.8455400466918945
    9. ' Bleu' → logprob: -9.220540046691895
    10. '```' → logprob: -9.720540046691895

Token 462: 'ble' (ID: 1124)
  Prédit: ' bleu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bleu' → logprob: -0.47878915071487427
    2. 'ble' → logprob: -0.9787891507148743
    3. ' ble' → logprob: -6.103789329528809
    4. 'blue' → logprob: -6.853789329528809
    5. ' blue' → logprob: -8.353789329528809
    6. ' ' → logprob: -8.353789329528809
    7. 'vert' → logprob: -8.478789329528809
    8. '_ble' → logprob: -8.478789329528809
    9. '```' → logprob: -9.103789329528809
    10. '   ' → logprob: -9.353789329528809

Token 463: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3659668266773224
    2. 'ue' → logprob: -1.240966796875
    3. 'e' → logprob: -4.115966796875
    4. 'ues' → logprob: -8.365966796875
    5. 'eu' → logprob: -8.740966796875
    6. 'le' → logprob: -8.990966796875
    7. 'es' → logprob: -9.240966796875
    8. 'us' → logprob: -9.365966796875
    9. 'ur' → logprob: -9.490966796875
    10. 'ge' → logprob: -9.990966796875

Token 464: '"' (ID: 1)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1823159456253052
    2. 'r' → logprob: -1.4323159456253052
    3. '_r' → logprob: -1.8073159456253052
    4. '_' → logprob: -2.6823158264160156
    5. '_red' → logprob: -2.8073158264160156
    6. 'red' → logprob: -3.1823158264160156
    7. ' rouge' → logprob: -3.1823158264160156
    8. ')' → logprob: -4.182315826416016
    9. ',' → logprob: -4.557315826416016
    10. ' ' → logprob: -4.682315826416016

Token 465: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07472483813762665
    2. ' rouge' → logprob: -3.3247249126434326
    3. ' red' → logprob: -3.9497249126434326
    4. 'red' → logprob: -5.1997246742248535
    5. 'r' → logprob: -5.3247246742248535
    6. ' r' → logprob: -6.0747246742248535
    7. ' R' → logprob: -7.0747246742248535
    8. 'R' → logprob: -7.3247246742248535
    9. '    
' → logprob: -7.4497246742248535
    10. 'rou' → logprob: -7.4497246742248535

Token 466: ' la' (ID: 557)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.9033064246177673
    2. 'la' → logprob: -1.528306484222412
    3. 'left' → logprob: -1.903306484222412
    4. ' gauche' → logprob: -2.028306484222412
    5. ' la' → logprob: -2.653306484222412
    6. 'S' → logprob: -4.403306484222412
    7. ' left' → logprob: -5.278306484222412
    8. 'G' → logprob: -5.903306484222412
    9. 'l' → logprob: -6.653306484222412
    10. ' S' → logprob: -7.028306484222412

Token 467: ' moitié' (ID: 93216)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.27962183952331543
    2. 'g' → logprob: -2.4046218395233154
    3. 'for' → logprob: -2.4046218395233154
    4. ' left' → logprob: -3.5296218395233154
    5. ' gauche' → logprob: -4.0296220779418945
    6. ' for' → logprob: -5.7796220779418945
    7. '   ' → logprob: -5.9046220779418945
    8. '#' → logprob: -6.0296220779418945
    9. 'G' → logprob: -6.1546220779418945
    10. 'S' → logprob: -6.9046220779418945

Token 468: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.885340690612793
    2. ' gauche' → logprob: -0.885340690612793
    3. '_g' → logprob: -2.385340690612793
    4. '   ' → logprob: -3.260340690612793
    5. 'left' → logprob: -4.385340690612793
    6. ' left' → logprob: -5.135340690612793
    7. ' g' → logprob: -5.260340690612793
    8. ' gau' → logprob: -5.510340690612793
    9. 'G' → logprob: -5.760340690612793
    10. ' Gau' → logprob: -5.885340690612793

Token 469: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02784355916082859
    2. ' rouge' → logprob: -4.277843475341797
    3. 'red' → logprob: -5.402843475341797
    4. ' red' → logprob: -6.027843475341797
    5. 'left' → logprob: -6.402843475341797
    6. 'rou' → logprob: -6.902843475341797
    7. '    
' → logprob: -7.277843475341797
    8. ',' → logprob: -7.402843475341797
    9. 'r' → logprob: -7.402843475341797
    10. ' left' → logprob: -7.777843475341797

Token 470: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022774476557970047
    2. 'red' → logprob: -5.022774696350098
    3. ' red' → logprob: -5.147774696350098
    4. ' rouge' → logprob: -5.522774696350098
    5. 'left' → logprob: -5.647774696350098
    6. ' left' → logprob: -6.397774696350098
    7. 'rou' → logprob: -8.772774696350098
    8. 'r' → logprob: -8.897774696350098
    9. ' Rouge' → logprob: -9.522774696350098
    10. '    
' → logprob: -9.772774696350098

Token 471: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' (adapté à ' red') → logprob: -0.6935842037200928
    2. 'left' → logprob: -0.8185842037200928
    3. 'r' → logprob: -4.193584442138672
    4. '   ' → logprob: -4.443584442138672
    5. 'l' → logprob: -4.693584442138672
    6. 'L' → logprob: -5.068584442138672
    7. 'R' → logprob: -5.318584442138672
    8. ' red' → logprob: -5.568584442138672
    9. 'lr' → logprob: -6.193584442138672
    10. ' left' → logprob: -6.568584442138672

Token 472: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.133225679397583
    2. '_g' → logprob: -2.883225679397583
    3. '_l' → logprob: -3.633225679397583
    4. 'L' → logprob: -4.008225440979004
    5. ',' → logprob: -4.633225440979004
    6. 'g' → logprob: -5.383225440979004
    7. '_s' → logprob: -5.883225440979004
    8. 'G' → logprob: -6.133225440979004
    9. '_str' → logprob: -6.633225440979004
    10. '_L' → logprob: -7.008225440979004

Token 473: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6807591915130615
    2. ',' → logprob: -1.0557591915130615
    3. '=' → logprob: -1.9307591915130615
    4. ' ,' → logprob: -7.680759429931641
    5. '=""' → logprob: -9.05575942993164
    6. ' ' → logprob: -9.68075942993164
    7. 'red' → logprob: -10.05575942993164
    8. '=''' → logprob: -10.05575942993164
    9. 's' → logprob: -10.68075942993164
    10. '_red' → logprob: -11.93075942993164

Token 474: ' ''
' (ID: 25366)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.069354347884655
    2. '''' → logprob: -2.819354295730591
    3. ' ""' → logprob: -5.06935453414917
    4. ' ''' → logprob: -7.06935453414917
    5. '"' → logprob: -8.444354057312012
    6. ''' → logprob: -12.694354057312012
    7. '''
' → logprob: -12.819354057312012
    8. ' ""
' → logprob: -14.819354057312012
    9. '[]' → logprob: -14.944354057312012
    10. '"",' → logprob: -15.319354057312012

Token 475: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008193373680114746
    2. 'red' → logprob: -5.008193492889404
    3. ' red' → logprob: -8.008193016052246
    4. 'blue' → logprob: -8.133193016052246
    5. '<|end|>' → logprob: -8.258193016052246
    6. ' blue' → logprob: -8.883193016052246
    7. ' for' → logprob: -9.008193016052246
    8. '    
' → logprob: -9.508193016052246
    9. '  ' → logprob: -9.508193016052246
    10. 'for' → logprob: -10.008193016052246

Token 476: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' (adapté à ' blue') → logprob: -0.014819346368312836
    2. ' blue' → logprob: -4.264819145202637
    3. 'ble' → logprob: -8.264819145202637
    4. ' bleu' → logprob: -8.389819145202637
    5. '   ' → logprob: -8.764819145202637
    6. 'blu' → logprob: -12.014819145202637
    7. 'for' → logprob: -12.514819145202637
    8. '_blue' → logprob: -13.639819145202637
    9. '    
' → logprob: -13.764819145202637
    10. ' ' → logprob: -14.264819145202637

Token 477: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0024995561689138412
    2. '_' → logprob: -6.002499580383301
    3. '_right' → logprob: -11.2524995803833
    4. '_le' → logprob: -11.6274995803833
    5. '_Left' → logprob: -14.2524995803833
    6. '_LEFT' → logprob: -14.5024995803833
    7. 'left' → logprob: -15.2524995803833
    8. ' _' → logprob: -15.6274995803833
    9. '_l' → logprob: -16.127498626708984
    10. 'Left' → logprob: -16.877498626708984

Token 478: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5233681797981262
    2. ' =' → logprob: -0.8983681797981262
    3. ' +=' → logprob: -8.898367881774902
    4. '+=' → logprob: -10.023367881774902
    5. '=''' → logprob: -10.398367881774902
    6. ' ' → logprob: -11.773367881774902
    7. ',' → logprob: -11.773367881774902
    8. '='' → logprob: -12.023367881774902
    9. '<|end|>' → logprob: -13.023367881774902
    10. '+='' → logprob: -13.148367881774902

Token 479: ' ''
' (ID: 25366)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0019414882408455014
    2. ' ''' → logprob: -6.251941680908203
    3. ''' → logprob: -11.501941680908203
    4. '''
' → logprob: -13.001941680908203
    5. '""' → logprob: -14.501941680908203
    6. ''',' → logprob: -17.001941680908203
    7. '''.' → logprob: -17.251941680908203
    8. ''''' → logprob: -17.751941680908203
    9. ' ' → logprob: -17.876941680908203
    10. '=''' → logprob: -18.626941680908203

Token 480: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004879915213678032
    2. 'for' → logprob: -8.25048828125
    3. ' for' → logprob: -8.87548828125
    4. '    
' → logprob: -9.37548828125
    5. '	for' → logprob: -14.00048828125
    6. '
' → logprob: -14.25048828125
    7. '   ' → logprob: -15.37548828125
    8. '    ' → logprob: -16.25048828125
    9. '  
' → logprob: -16.37548828125
    10. '        
' → logprob: -16.75048828125

Token 481: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3207860291004181
    2. 'for' → logprob: -1.3207859992980957
    3. ' for' → logprob: -4.945785999298096
    4. '    
' → logprob: -8.195786476135254
    5. '	for' → logprob: -9.445786476135254
    6. '
' → logprob: -12.195786476135254
    7. ' ' → logprob: -12.570786476135254
    8. '  ' → logprob: -12.820786476135254
    9. '<|end|>' → logprob: -12.820786476135254
    10. '  
' → logprob: -13.195786476135254

Token 482: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.537868779967539e-06
    2. '#' → logprob: -11.875008583068848
    3. ' for' → logprob: -13.500008583068848
    4. '   ' → logprob: -15.500008583068848
    5. '	for' → logprob: -17.75000762939453
    6. '    
' → logprob: -19.12500762939453
    7. 'red' → logprob: -19.37500762939453
    8. ' ' → logprob: -20.25000762939453
    9. '
' → logprob: -21.00000762939453
    10. 'For' → logprob: -21.62500762939453

Token 483: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.20208950340747833
    2. 'for' → logprob: -1.952089548110962
    3. 'ization' → logprob: -3.202089548110962
    4. '#' → logprob: -9.202089309692383
    5. 'izing' → logprob: -9.452089309692383
    6. 'iz' → logprob: -10.202089309692383
    7. 'ize' → logprob: -10.702089309692383
    8. 'ized' → logprob: -10.827089309692383
    9. 'i' → logprob: -11.327089309692383
    10. 'iser' → logprob: -11.452089309692383

Token 484: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.09745602309703827
    2. 'des' → logprob: -2.9724559783935547
    3. 'red' → logprob: -3.2224559783935547
    4. ' red' → logprob: -6.972455978393555
    5. 'for' → logprob: -7.847455978393555
    6. ' of' → logprob: -8.597455978393555
    7. 'd' → logprob: -9.472455978393555
    8. ' for' → logprob: -9.722455978393555
    9. ' de' → logprob: -9.972455978393555
    10. '   ' → logprob: -10.347455978393555

Token 485: ' chaînes' (ID: 179904)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.010785343125462532
    2. ' red' → logprob: -4.8857855796813965
    3. 'blue' → logprob: -6.7607855796813965
    4. 'for' → logprob: -7.2607855796813965
    5. 'strings' → logprob: -7.7607855796813965
    6. 'car' → logprob: -7.8857855796813965
    7. ' for' → logprob: -9.510785102844238
    8. '_red' → logprob: -9.635785102844238
    9. '_' → logprob: -10.010785102844238
    10. 'spaces' → logprob: -10.010785102844238

Token 486: ' de' (ID: 334)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.2709929943084717
    2. ' de' → logprob: -2.1459929943084717
    3. ' red' → logprob: -2.3959929943084717
    4. 'de' → logprob: -3.6459929943084717
    5. '_red' → logprob: -6.020993232727051
    6. ' rouges' → logprob: -7.645993232727051
    7. ' =' → logprob: -9.77099323272705
    8. 'for' → logprob: -9.89599323272705
    9. '_' → logprob: -9.89599323272705
    10. ' rouge' → logprob: -10.39599323272705

Token 487: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.00489880470559001
    2. 'red' → logprob: -6.504899024963379
    3. ' caractères' → logprob: -6.879899024963379
    4. 'characters' → logprob: -7.129899024963379
    5. 'char' → logprob: -7.754899024963379
    6. 'code' → logprob: -8.004899024963379
    7. ' red' → logprob: -8.254899024963379
    8. ' caracteres' → logprob: -8.504899024963379
    9. ' caract' → logprob: -8.754899024963379
    10. ' car' → logprob: -9.504899024963379

Token 488: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -1.097115397453308
    2. 'red' → logprob: -1.472115397453308
    3. ' red' → logprob: -1.597115397453308
    4. 'v' → logprob: -1.597115397453308
    5. ' rouges' → logprob: -4.847115516662598
    6. ' =' → logprob: -5.097115516662598
    7. ' ' → logprob: -5.972115516662598
    8. '<|end|>' → logprob: -6.472115516662598
    9. ' ' → logprob: -6.722115516662598
    10. 'vide' → logprob: -6.847115516662598

Token 489: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.0035557658411562443
    2. 'ide' → logprob: -5.753555774688721
    3. 'id' → logprob: -8.878555297851562
    4. 'e' → logprob: -9.753555297851562
    5. 'a' → logprob: -10.378555297851562
    6. 'ideos' → logprob: -10.503555297851562
    7. '   ' → logprob: -10.878555297851562
    8. '=' → logprob: -11.128555297851562
    9. 'i' → logprob: -11.128555297851562
    10. 'ideo' → logprob: -11.753555297851562

Token 490: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2323331832885742
    2. ' for' → logprob: -1.4823331832885742
    3. ' pour' → logprob: -1.4823331832885742
    4. '   ' → logprob: -1.8573331832885742
    5. 'pour' → logprob: -2.732333183288574
    6. 'red' → logprob: -3.857333183288574
    7. ' red' → logprob: -4.482333183288574
    8. '#' → logprob: -8.732333183288574
    9. ' ' → logprob: -9.357333183288574
    10. '	for' → logprob: -9.732333183288574

Token 491: ' les' (ID: 1341)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.1529511958360672
    2. ' red' → logprob: -2.027951240539551
    3. 'les' → logprob: -5.527951240539551
    4. 'blue' → logprob: -5.777951240539551
    5. ' blue' → logprob: -6.402951240539551
    6. ' les' → logprob: -7.152951240539551
    7. '#' → logprob: -8.15295124053955
    8. 'ble' → logprob: -9.15295124053955
    9. ' ' → logprob: -9.40295124053955
    10. 'la' → logprob: -10.02795124053955

Token 492: ' groupes' (ID: 72206)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.022653164342045784
    2. 'blue' → logprob: -4.897653102874756
    3. ' red' → logprob: -5.022653102874756
    4. 'rou' → logprob: -5.772653102874756
    5. 'groups' → logprob: -5.772653102874756
    6. 'right' → logprob: -7.522653102874756
    7. 'group' → logprob: -8.147653579711914
    8. ' groups' → logprob: -8.272653579711914
    9. 'green' → logprob: -8.522653579711914
    10. 'for' → logprob: -8.772653579711914

Token 493: ' "' (ID: 392)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.24159683287143707
    2. ' red' → logprob: -1.6165968179702759
    3. ' right' → logprob: -4.991596698760986
    4. '_blue' → logprob: -6.116596698760986
    5. 'red' → logprob: -6.616596698760986
    6. ' "' → logprob: -6.741596698760986
    7. ' bleu' → logprob: -6.866596698760986
    8. '_right' → logprob: -6.991596698760986
    9. 'blue' → logprob: -7.116596698760986
    10. '_red' → logprob: -7.366596698760986

Token 494: 'rou' (ID: 691)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.1935962587594986
    2. 'red' → logprob: -2.318596363067627
    3. 'ble' → logprob: -3.443596363067627
    4. 'rou' → logprob: -3.693596363067627
    5. ' blue' → logprob: -4.818596363067627
    6. ' rouge' → logprob: -5.068596363067627
    7. ' bleu' → logprob: -5.443596363067627
    8. ' red' → logprob: -6.568596363067627
    9. 'right' → logprob: -7.693596363067627
    10. '_blue' → logprob: -9.693595886230469

Token 495: 'ge' (ID: 684)
  Prédit: 'ge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ge' → logprob: -0.03000582754611969
    2. 'e' → logprob: -3.530005931854248
    3. '_blue' → logprob: -9.78000545501709
    4. 'blue' → logprob: -10.03000545501709
    5. '_' → logprob: -10.15500545501709
    6. 'ege' → logprob: -11.03000545501709
    7. 'ges' → logprob: -11.28000545501709
    8. '```' → logprob: -11.28000545501709
    9. '_ge' → logprob: -11.53000545501709
    10. 'le' → logprob: -11.78000545501709

Token 496: '"' (ID: 1)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08048912137746811
    2. ' and' → logprob: -3.455489158630371
    3. 'et' → logprob: -3.955489158630371
    4. ' et' → logprob: -4.330489158630371
    5. 'and' → logprob: -4.705489158630371
    6. 'red' → logprob: -6.330489158630371
    7. ',' → logprob: -7.205489158630371
    8. ')' → logprob: -8.455489158630371
    9. ' red' → logprob: -8.455489158630371
    10. ' ' → logprob: -8.580489158630371

Token 497: ' et' (ID: 859)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.8139756917953491
    2. '   ' → logprob: -2.0639758110046387
    3. ' and' → logprob: -2.0639758110046387
    4. 'et' → logprob: -2.4389758110046387
    5. ' et' → logprob: -2.6889758110046387
    6. '_red' → logprob: -3.1889758110046387
    7. ' red' → logprob: -3.4389758110046387
    8. '=' → logprob: -3.6889758110046387
    9. 'and' → logprob: -3.9389758110046387
    10. ' =' → logprob: -4.813975811004639

Token 498: ' "' (ID: 392)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.3704444169998169
    2. 'blue' → logprob: -1.245444416999817
    3. '   ' → logprob: -4.870444297790527
    4. 'ble' → logprob: -4.870444297790527
    5. ' bleu' → logprob: -5.120444297790527
    6. ' ' → logprob: -8.620444297790527
    7. '_blue' → logprob: -9.245444297790527
    8. ' ble' → logprob: -10.120444297790527
    9. '#' → logprob: -10.745444297790527
    10. '  ' → logprob: -11.370444297790527

Token 499: 'ble' (ID: 1124)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.20801113545894623
    2. ' blue' → logprob: -1.8330111503601074
    3. ' bleu' → logprob: -3.8330111503601074
    4. 'ble' → logprob: -5.083011150360107
    5. ' ble' → logprob: -12.08301067352295
    6. '_blue' → logprob: -12.08301067352295
    7. 'blu' → logprob: -12.70801067352295
    8. '```' → logprob: -12.70801067352295
    9. ' azul' → logprob: -13.20801067352295
    10. 'b' → logprob: -13.83301067352295

Token 500: 'u' (ID: 84)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.305535227060318
    2. 'u' → logprob: -1.4305351972579956
    3. 'e' → logprob: -4.430535316467285
    4. '   ' → logprob: -4.930535316467285
    5. ' blue' → logprob: -6.930535316467285
    6. 'ge' → logprob: -6.930535316467285
    7. '```' → logprob: -7.680535316467285
    8. '
' → logprob: -7.930535316467285
    9. 'blue' → logprob: -8.430535316467285
    10. '       ' → logprob: -8.430535316467285

Token 501: '"' (ID: 1)
  Prédit: '_right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.2389819622039795
    2. '_left' → logprob: -1.7389819622039795
    3. ' de' → logprob: -4.738982200622559
    4. 'right' → logprob: -4.738982200622559
    5. ' right' → logprob: -5.738982200622559
    6. '   ' → logprob: -5.863982200622559
    7. ' =' → logprob: -6.113982200622559
    8. '_blue' → logprob: -6.113982200622559
    9. '_red' → logprob: -6.363982200622559
    10. 'left' → logprob: -6.988982200622559

Token 502: ' de' (ID: 334)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -1.499910593032837
    2. 'right' → logprob: -1.499910593032837
    3. '_right' → logprob: -1.749910593032837
    4. 'for' → logprob: -2.374910593032837
    5. ' for' → logprob: -2.624910593032837
    6. ' red' → logprob: -2.874910593032837
    7. ' right' → logprob: -3.124910593032837
    8. 'blue' → logprob: -3.624910593032837
    9. '_red' → logprob: -4.124910354614258
    10. ' =' → logprob: -4.124910354614258

Token 503: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3730764091014862
    2. 'right' → logprob: -2.1230764389038086
    3. ' right' → logprob: -2.7480764389038086
    4. ' blue' → logprob: -3.3730764389038086
    5. ' the' → logprob: -3.7480764389038086
    6. 'left' → logprob: -3.8730764389038086
    7. 'blue' → logprob: -4.373076438903809
    8. 'la' → logprob: -4.623076438903809
    9. 'red' → logprob: -4.998076438903809
    10. 'the' → logprob: -5.248076438903809

Token 504: ' moitié' (ID: 93216)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.11469393968582153
    2. 'left' → logprob: -2.2396938800811768
    3. ' right' → logprob: -6.489694118499756
    4. 'dro' → logprob: -8.739693641662598
    5. ' left' → logprob: -9.364693641662598
    6. ' droite' → logprob: -9.989693641662598
    7. 'half' → logprob: -10.989693641662598
    8. '_right' → logprob: -11.239693641662598
    9. ' gauche' → logprob: -11.739693641662598
    10. '#' → logprob: -12.114693641662598

Token 505: ' droite' (ID: 61428)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3632170855998993
    2. '_right' → logprob: -1.2382171154022217
    3. 'dro' → logprob: -4.488216876983643
    4. ' droite' → logprob: -6.113216876983643
    5. ' right' → logprob: -6.863216876983643
    6. '_RIGHT' → logprob: -10.8632173538208
    7. '```' → logprob: -10.8632173538208
    8. '	right' → logprob: -10.9882173538208
    9. 'Right' → logprob: -11.1132173538208
    10. '   ' → logprob: -11.8632173538208

Token 506: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48242655396461487
    2. 'red' → logprob: -1.7324265241622925
    3. '=' → logprob: -2.607426643371582
    4. ' =' → logprob: -2.857426643371582
    5. 'right' → logprob: -3.482426643371582
    6. ' red' → logprob: -3.482426643371582
    7. ',' → logprob: -5.357426643371582
    8. '_red' → logprob: -6.107426643371582
    9. ':' → logprob: -6.857426643371582
    10. ' right' → logprob: -7.107426643371582

Token 507: 'mais' (ID: 29170)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0996817797422409
    2. ' )' → logprob: -3.474681854248047
    3. 'right' → logprob: -3.599681854248047
    4. '')' → logprob: -3.599681854248047
    5. '   ' → logprob: -6.099681854248047
    6. ' right' → logprob: -6.224681854248047
    7. ' ' → logprob: -6.974681854248047
    8. ')
' → logprob: -7.099681854248047
    9. ' ')' → logprob: -7.349681854248047
    10. 'left' → logprob: -7.724681854248047

Token 508: ' dans' (ID: 2671)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -1.0596036911010742
    2. '   ' → logprob: -1.8096036911010742
    3. ' pas' → logprob: -2.059603691101074
    4. ')' → logprob: -2.184603691101074
    5. ' not' → logprob: -3.309603691101074
    6. ' à' → logprob: -3.809603691101074
    7. ':' → logprob: -3.809603691101074
    8. 'pas' → logprob: -3.934603691101074
    9. ' reversed' → logprob: -4.434603691101074
    10. '    ' → logprob: -4.684603691101074

Token 509: ' le' (ID: 505)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6027485728263855
    2. 'red' → logprob: -2.2277486324310303
    3. '''' → logprob: -2.9777486324310303
    4. 'reverse' → logprob: -2.9777486324310303
    5. ''' → logprob: -3.2277486324310303
    6. '')' → logprob: -3.6027486324310303
    7. '#' → logprob: -3.7277486324310303
    8. 'la' → logprob: -3.7277486324310303
    9. 're' → logprob: -3.9777486324310303
    10. 'le' → logprob: -4.102748394012451

Token 510: ' sens' (ID: 5050)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0331720113754272
    2. 'right' → logprob: -2.158172130584717
    3. '#' → logprob: -2.783172130584717
    4. ')' → logprob: -2.783172130584717
    5. '   ' → logprob: -2.908172130584717
    6. 'range' → logprob: -2.908172130584717
    7. ' for' → logprob: -3.033172130584717
    8. ' range' → logprob: -3.158172130584717
    9. ' reversed' → logprob: -3.658172130584717
    10. ' right' → logprob: -3.783172130584717

Token 511: ' invers' (ID: 38721)
  Prédit: ' inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.473590224981308
    2. 'inverse' → logprob: -1.7235902547836304
    3. ' invers' → logprob: -2.473590135574341
    4. ' oppos' → logprob: -2.973590135574341
    5. '   ' → logprob: -3.848590135574341
    6. ' =' → logprob: -4.09859037399292
    7. ' opposite' → logprob: -5.59859037399292
    8. 'op' → logprob: -6.09859037399292
    9. ' contrario' → logprob: -6.22359037399292
    10. '=' → logprob: -6.22359037399292

Token 512: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.002392302267253399
    2. 'e' → logprob: -6.127392292022705
    3. 'ed' → logprob: -9.752392768859863
    4. ')' → logprob: -10.002392768859863
    5. 'er' → logprob: -10.002392768859863
    6. 'ée' → logprob: -11.002392768859863
    7. 'né' → logprob: -12.002392768859863
    8. 'éd' → logprob: -12.377392768859863
    9. 'éré' → logprob: -12.627392768859863
    10. '   ' → logprob: -12.877392768859863

Token 513: ').
' (ID: 6294)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.45003125071525574
    2. ')' → logprob: -1.5750312805175781
    3. '   ' → logprob: -2.075031280517578
    4. ').' → logprob: -4.075031280517578
    5. '):
' → logprob: -4.450031280517578
    6. '.' → logprob: -8.450031280517578
    7. '):

' → logprob: -8.700031280517578
    8. ''):' → logprob: -9.075031280517578
    9. ' ):' → logprob: -9.325031280517578
    10. ' )' → logprob: -9.450031280517578

Token 514: '   ' (ID: 271)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.16858865320682526
    2. '   ' → logprob: -2.043588638305664
    3. ' red' → logprob: -3.668588638305664
    4. 'for' → logprob: -10.793588638305664
    5. '
' → logprob: -11.668588638305664
    6. ' ' → logprob: -11.793588638305664
    7. 'right' → logprob: -11.918588638305664
    8. '    
' → logprob: -12.043588638305664
    9. '_red' → logprob: -12.168588638305664
    10. '  ' → logprob: -12.293588638305664

Token 515: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' (adapté à ' red') → logprob: -0.0006550124380737543
    2. ' red' → logprob: -7.375655174255371
    3. 'for' → logprob: -10.875655174255371
    4. '   ' → logprob: -11.875655174255371
    5. ' ' → logprob: -13.250655174255371
    6. ' for' → logprob: -14.875655174255371
    7. '    
' → logprob: -16.500654220581055
    8. '
' → logprob: -16.625654220581055
    9. 'redd' → logprob: -16.875654220581055
    10. '  ' → logprob: -17.125654220581055

Token 516: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0018855651142075658
    2. '_' → logprob: -6.376885414123535
    3. '_r' → logprob: -9.126885414123535
    4. '_left' → logprob: -9.876885414123535
    5. '_rhs' → logprob: -12.001885414123535
    6. '_d' → logprob: -12.126885414123535
    7. '_rev' → logprob: -12.626885414123535
    8. '_red' → logprob: -13.501885414123535
    9. ' _' → logprob: -13.876885414123535
    10. ''_' → logprob: -14.126885414123535

Token 517: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760317444801331
    2. '=' → logprob: -0.8260317444801331
    3. '=''' → logprob: -9.326031684875488
    4. ',' → logprob: -13.201031684875488
    5. '='' → logprob: -14.076031684875488
    6. '''' → logprob: -15.576031684875488
    7. '=''
' → logprob: -15.701031684875488
    8. ' ' → logprob: -16.076032638549805
    9. ' ='' → logprob: -16.201032638549805
    10. '=""' → logprob: -16.951032638549805

Token 518: ' ''
' (ID: 25366)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -2.47495681833243e-05
    2. ' ''' → logprob: -11.250024795532227
    3. '''
' → logprob: -11.625024795532227
    4. '""' → logprob: -12.875024795532227
    5. '''.' → logprob: -17.375024795532227
    6. ''',' → logprob: -17.500024795532227
    7. ''''' → logprob: -17.500024795532227
    8. ''' → logprob: -18.000024795532227
    9. '=''' → logprob: -19.250024795532227
    10. '''''' → logprob: -20.125024795532227

Token 519: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.093505099765025e-05
    2. ' blue' → logprob: -11.625020980834961
    3. '	' → logprob: -12.500020980834961
    4. '   ' → logprob: -13.250020980834961
    5. 'blue' → logprob: -13.375020980834961
    6. '    
' → logprob: -14.125020980834961
    7. '    ' → logprob: -14.375020980834961
    8. ',' → logprob: -14.375020980834961
    9. '  ' → logprob: -14.375020980834961
    10. ' ' → logprob: -14.750020980834961

Token 520: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' (adapté à ' blue') → logprob: -0.19030804932117462
    2. ' blue' → logprob: -1.8153080940246582
    3. '   ' → logprob: -4.565308094024658
    4. ' ' → logprob: -10.0653076171875
    5. '	' → logprob: -11.3153076171875
    6. ' bleu' → logprob: -11.3153076171875
    7. '  ' → logprob: -12.4403076171875
    8. 'for' → logprob: -12.5653076171875
    9. '_blue' → logprob: -12.5653076171875
    10. ' ' → logprob: -12.6903076171875

Token 521: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0016697037499397993
    2. '_' → logprob: -6.501669883728027
    3. '_r' → logprob: -8.876669883728027
    4. ' _' → logprob: -11.501669883728027
    5. '_left' → logprob: -11.876669883728027
    6. '_Right' → logprob: -12.251669883728027
    7. '_RIGHT' → logprob: -13.126669883728027
    8. '_rhs' → logprob: -13.751669883728027
    9. '_d' → logprob: -14.376669883728027
    10. '_red' → logprob: -15.126669883728027

Token 522: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20164117217063904
    2. '=' → logprob: -1.7016412019729614
    3. '   ' → logprob: -8.701641082763672
    4. ' ' → logprob: -10.326641082763672
    5. '<|end|>' → logprob: -11.451641082763672
    6. 'for' → logprob: -12.576641082763672
    7. '    ' → logprob: -12.951641082763672
    8. ':' → logprob: -13.201641082763672
    9. ' =
' → logprob: -13.576641082763672
    10. ',' → logprob: -13.576641082763672

Token 523: ' ''

' (ID: 107005)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0002740906202234328
    2. ' ''' → logprob: -8.250273704528809
    3. '''
' → logprob: -11.625273704528809
    4. ''' → logprob: -12.625273704528809
    5. '""' → logprob: -14.500273704528809
    6. ''',' → logprob: -16.875274658203125
    7. '''.' → logprob: -17.250274658203125
    8. '=''' → logprob: -18.125274658203125
    9. ''''' → logprob: -18.500274658203125
    10. ' ' → logprob: -18.750274658203125

Token 524: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1295834481716156
    2. 'for' → logprob: -3.3795833587646484
    3. ' for' → logprob: -3.8795833587646484
    4. '    
' → logprob: -3.8795833587646484
    5. '
' → logprob: -4.129583358764648
    6. '<|end|>' → logprob: -4.379583358764648
    7. ' 
' → logprob: -4.754583358764648
    8. ' ' → logprob: -6.129583358764648
    9. '\n' → logprob: -6.129583358764648
    10. '  
' → logprob: -6.379583358764648

Token 525: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22328472137451172
    2. 'for' → logprob: -1.7232847213745117
    3. ' for' → logprob: -3.8482847213745117
    4. '	for' → logprob: -8.598284721374512
    5. '    
' → logprob: -9.598284721374512
    6. '<|end|>' → logprob: -10.723284721374512
    7. '  ' → logprob: -10.973284721374512
    8. '    ' → logprob: -11.098284721374512
    9. ' ' → logprob: -12.598284721374512
    10. '
' → logprob: -12.973284721374512

Token 526: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.4121114822482923e-06
    2. ' for' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.000003814697266
    4. '#' → logprob: -17.625003814697266
    5. '	for' → logprob: -19.250003814697266
    6. 'pour' → logprob: -21.000003814697266
    7. '```' → logprob: -21.125003814697266
    8. ' ' → logprob: -21.250003814697266
    9. '
' → logprob: -21.250003814697266
    10. 'For' → logprob: -21.250003814697266

Token 527: 'ours' (ID: 2327)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.3908688426017761
    2. 'ours' → logprob: -1.140868902206421
    3. 'ourt' → logprob: -5.640868663787842
    4. 'ourse' → logprob: -8.640869140625
    5. 'for' → logprob: -9.140869140625
    6. '#' → logprob: -10.140869140625
    7. ' for' → logprob: -10.515869140625
    8. 'ur' → logprob: -10.640869140625
    9. 'oure' → logprob: -11.140869140625
    10. 'or' → logprob: -11.390869140625

Token 528: ' de' (ID: 334)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.7916362881660461
    2. 'for' → logprob: -1.6666362285614014
    3. '   ' → logprob: -1.9166362285614014
    4. ' for' → logprob: -2.5416362285614014
    5. '(i' → logprob: -2.6666362285614014
    6. '(' → logprob: -3.2916362285614014
    7. '(en' → logprob: -4.5416364669799805
    8. ' in' → logprob: -5.7916364669799805
    9. 'enumer' → logprob: -6.1666364669799805
    10. 'range' → logprob: -6.1666364669799805

Token 529: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25193095207214355
    2. ' range' → logprob: -1.5019309520721436
    3. '(range' → logprob: -13.751931190490723
    4. 'N' → logprob: -15.126931190490723
    5. '	range' → logprob: -15.751931190490723
    6. 'enumer' → logprob: -16.251930236816406
    7. ' ' → logprob: -16.376930236816406
    8. 'i' → logprob: -16.876930236816406
    9. 'rang' → logprob: -17.376930236816406
    10. 'bit' → logprob: -17.501930236816406

Token 530: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.23965543508529663
    2. ' i' → logprob: -1.6146554946899414
    3. 'range' → logprob: -4.864655494689941
    4. ' range' → logprob: -5.114655494689941
    5. 'idx' → logprob: -8.614655494689941
    6. 'index' → logprob: -9.489655494689941
    7. ' idx' → logprob: -9.864655494689941
    8. ' index' → logprob: -10.739655494689941
    9. '_i' → logprob: -11.114655494689941
    10. 'j' → logprob: -11.364655494689941

Token 531: ' possible' (ID: 4149)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.039753507822752
    2. 'in' → logprob: -4.039753437042236
    3. ' for' → logprob: -4.539753437042236
    4. ' i' → logprob: -5.539753437042236
    5. ',' → logprob: -6.039753437042236
    6. 'for' → logprob: -6.289753437042236
    7. ' range' → logprob: -6.914753437042236
    8. 'range' → logprob: -7.414753437042236
    9. 'i' → logprob: -8.414753913879395
    10. '   ' → logprob: -8.664753913879395

Token 532: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19527848064899445
    2. 'in' → logprob: -1.820278525352478
    3. 'for' → logprob: -5.445278644561768
    4. ' for' → logprob: -5.695278644561768
    5. '   ' → logprob: -5.820278644561768
    6. ',' → logprob: -5.945278644561768
    7. ' i' → logprob: -7.070278644561768
    8. 'range' → logprob: -7.820278644561768
    9. 'i' → logprob: -8.57027816772461
    10. ' dans' → logprob: -8.69527816772461

Token 533: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1603715717792511
    2. ' range' → logprob: -1.9103715419769287
    3. 'bit' → logprob: -8.910371780395508
    4. ' bit' → logprob: -11.785371780395508
    5. '(range' → logprob: -12.410371780395508
    6. 'N' → logprob: -15.160371780395508
    7. '	range' → logprob: -15.535371780395508
    8. 'S' → logprob: -15.910371780395508
    9. ' ' → logprob: -16.785371780395508
    10. 'rang' → logprob: -17.035371780395508

Token 534: ' moitié' (ID: 93216)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11469682306051254
    2. 'bit' → logprob: -2.239696741104126
    3. 'for' → logprob: -6.739696979522705
    4. ' range' → logprob: -7.364696979522705
    5. ' bit' → logprob: -10.614696502685547
    6. '(range' → logprob: -11.114696502685547
    7. 'left' → logprob: -12.864696502685547
    8. '(bit' → logprob: -12.864696502685547
    9. '```' → logprob: -13.114696502685547
    10. '   ' → logprob: -13.364696502685547

Token 535: ' du' (ID: 1462)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6097205281257629
    2. 'for' → logprob: -1.4847204685211182
    3. ' range' → logprob: -1.9847204685211182
    4. '   ' → logprob: -3.484720468521118
    5. ' for' → logprob: -3.484720468521118
    6. 'left' → logprob: -4.359720706939697
    7. '(range' → logprob: -4.859720706939697
    8. ' gauche' → logprob: -5.734720706939697
    9. '_left' → logprob: -5.984720706939697
    10. 'g' → logprob: -6.609720706939697

Token 536: ' tableau' (ID: 67053)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7186367511749268
    2. 'bit' → logprob: -1.7186367511749268
    3. 'S' → logprob: -1.9686367511749268
    4. 'left' → logprob: -2.0936367511749268
    5. 'range' → logprob: -2.7186367511749268
    6. 'for' → logprob: -6.593636512756348
    7. 'g' → logprob: -7.343636512756348
    8. ' range' → logprob: -7.468636512756348
    9. ' bit' → logprob: -7.843636512756348
    10. ' N' → logprob: -8.343636512756348

Token 537: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7562764286994934
    2. 'for' → logprob: -0.7562764286994934
    3. '   ' → logprob: -3.0062763690948486
    4. 'range' → logprob: -4.881276607513428
    5. ' range' → logprob: -5.631276607513428
    6. '(range' → logprob: -8.13127613067627
    7. ' in' → logprob: -10.00627613067627
    8. 'in' → logprob: -10.13127613067627
    9. '    ' → logprob: -10.38127613067627
    10. ':' → logprob: -10.50627613067627

Token 538: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13131147623062134
    2. ' for' → logprob: -3.1313114166259766
    3. 'range' → logprob: -3.1313114166259766
    4. '   ' → logprob: -3.5063114166259766
    5. ' range' → logprob: -5.256311416625977
    6. 'pour' → logprob: -8.881311416625977
    7. 'i' → logprob: -9.006311416625977
    8. ' pour' → logprob: -9.506311416625977
    9. '    
' → logprob: -10.506311416625977
    10. ' i' → logprob: -10.631311416625977

Token 539: ''est' (ID: 6616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25803300738334656
    2. 'range' → logprob: -1.758033037185669
    3. 'or' → logprob: -3.133033037185669
    4. ' range' → logprob: -5.00803279876709
    5. ' for' → logprob: -5.50803279876709
    6. '(range' → logprob: -8.25803279876709
    7. 'r' → logprob: -8.63303279876709
    8. '=' → logprob: -9.25803279876709
    9. '```' → logprob: -10.50803279876709
    10. '_range' → logprob: -10.50803279876709

Token 540: '-à' (ID: 56297)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3295188844203949
    2. 'range' → logprob: -1.3295189142227173
    3. '   ' → logprob: -5.704518795013428
    4. 'à' → logprob: -5.954518795013428
    5. ' à' → logprob: -6.079518795013428
    6. 'for' → logprob: -6.204518795013428
    7. '(range' → logprob: -6.454518795013428
    8. ' ' → logprob: -6.954518795013428
    9. ' la' → logprob: -7.079518795013428
    10. ' en' → logprob: -7.204518795013428

Token 541: '-dire' (ID: 76064)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11463909596204758
    2. ' range' → logprob: -2.2396390438079834
    3. '   ' → logprob: -7.1146392822265625
    4. 'N' → logprob: -7.2396392822265625
    5. '0' → logprob: -8.864639282226562
    6. '```' → logprob: -10.489639282226562
    7. 'la' → logprob: -10.864639282226562
    8. ' N' → logprob: -11.364639282226562
    9. 'int' → logprob: -11.364639282226562
    10. ' ' → logprob: -11.614639282226562

Token 542: ' de' (ID: 334)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25252869725227356
    2. 'range' → logprob: -1.5025286674499512
    3. '(range' → logprob: -8.25252914428711
    4. 'for' → logprob: -8.37752914428711
    5. ' for' → logprob: -10.00252914428711
    6. '   ' → logprob: -10.25252914428711
    7. 'N' → logprob: -11.00252914428711
    8. ' N' → logprob: -11.75252914428711
    9. ' ' → logprob: -13.37752914428711
    10. '	range' → logprob: -14.12752914428711

Token 543: ' ' (ID: 220)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2519383430480957
    2. 'range' → logprob: -1.5019383430480957
    3. '(range' → logprob: -11.751937866210938
    4. '0' → logprob: -14.751937866210938
    5. '	range' → logprob: -14.751937866210938
    6. ' ' → logprob: -14.876937866210938
    7. '   ' → logprob: -16.626937866210938
    8. ' la' → logprob: -17.001937866210938
    9. ')' → logprob: -17.251937866210938
    10. 'N' → logprob: -17.501937866210938

Token 544: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006385732558555901
    2. ' range' → logprob: -7.500638484954834
    3. '0' → logprob: -9.375638961791992
    4. 'rang' → logprob: -15.250638961791992
    5. '(range' → logprob: -15.250638961791992
    6. 'N' → logprob: -16.125638961791992
    7. 'i' → logprob: -16.875638961791992
    8. ' ' → logprob: -17.375638961791992
    9. '_' → logprob: -18.125638961791992
    10. '	range' → logprob: -18.375638961791992

Token 545: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.014983771368861198
    2. 'à' → logprob: -4.639983654022217
    3. ' ' → logprob: -5.889983654022217
    4. ' to' → logprob: -6.764983654022217
    5. 'to' → logprob: -7.639983654022217
    6. '   ' → logprob: -7.764983654022217
    7. ',' → logprob: -8.764984130859375
    8. ' jusqu' → logprob: -9.139984130859375
    9. '  ' → logprob: -10.014984130859375
    10. '    ' → logprob: -10.889984130859375

Token 546: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01416398212313652
    2. ' N' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.764163970947266
    4. '<N' → logprob: -16.264163970947266
    5. '   ' → logprob: -16.514163970947266
    6. '	N' → logprob: -16.639163970947266
    7. '(N' → logprob: -17.514163970947266
    8. 'n' → logprob: -17.514163970947266
    9. ' range' → logprob: -18.639163970947266
    10. 'len' → logprob: -18.639163970947266

Token 547: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1184476986527443
    2. ':' → logprob: -2.368447780609131
    3. ' -' → logprob: -4.493447780609131
    4. '):' → logprob: -5.118447780609131
    5. '):
' → logprob: -8.243447303771973
    6. ')' → logprob: -8.868447303771973
    7. ' :' → logprob: -8.993447303771973
    8. '   ' → logprob: -9.368447303771973
    9. '```' → logprob: -9.618447303771973
    10. ':
' → logprob: -9.743447303771973

Token 548: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031975586898624897
    2. 'N' → logprob: -6.00319766998291
    3. ' ' → logprob: -8.00319766998291
    4. '-' → logprob: -8.62819766998291
    5. ' N' → logprob: -8.87819766998291
    6. '   ' → logprob: -9.75319766998291
    7. ' -' → logprob: -13.37819766998291
    8. '```' → logprob: -13.37819766998291
    9. '(N' → logprob: -13.37819766998291
    10. '  ' → logprob: -13.75319766998291

Token 549: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6711964011192322
    2. ':' → logprob: -1.296196460723877
    3. ' for' → logprob: -1.796196460723877
    4. 'for' → logprob: -3.046196460723877
    5. ':
' → logprob: -7.796196460723877
    6. ',' → logprob: -8.296195983886719
    7. '	for' → logprob: -8.296195983886719
    8. '  ' → logprob: -8.546195983886719
    9. '    
' → logprob: -8.671195983886719
    10. '    ' → logprob: -8.921195983886719

Token 550: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3355856239795685
    2. ' for' → logprob: -1.960585594177246
    3. 'for' → logprob: -2.335585594177246
    4. ':' → logprob: -3.085585594177246
    5. ' :' → logprob: -7.960585594177246
    6. '    
' → logprob: -8.210585594177246
    7. '  ' → logprob: -8.585585594177246
    8. ':
' → logprob: -8.585585594177246
    9. '	for' → logprob: -9.085585594177246
    10. ',' → logprob: -9.210585594177246

Token 551: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5012884140014648
    2. 'for' (adapté à ' for') → logprob: -1.0012884140014648
    3. '   ' → logprob: -3.626288414001465
    4. '	for' → logprob: -8.751288414001465
    5. '    
' → logprob: -10.251288414001465
    6. ' 
' → logprob: -10.751288414001465
    7. '
' → logprob: -12.001288414001465
    8. '    ' → logprob: -14.001288414001465
    9. '\n' → logprob: -14.001288414001465
    10. '	
' → logprob: -14.251288414001465

Token 552: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3869078457355499
    2. 'i' → logprob: -1.1369078159332275
    3. ' idx' → logprob: -11.261907577514648
    4. '_i' → logprob: -12.386907577514648
    5. 'idx' → logprob: -12.386907577514648
    6. '	i' → logprob: -12.511907577514648
    7. ' ' → logprob: -12.761907577514648
    8. '_' → logprob: -13.136907577514648
    9. ' _' → logprob: -13.386907577514648
    10. 'j' → logprob: -13.886907577514648

Token 553: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03367440402507782
    2. 'in' → logprob: -3.408674478530884
    3. ' ' → logprob: -11.658674240112305
    4. '   ' → logprob: -12.533674240112305
    5. ')' → logprob: -12.783674240112305
    6. '	in' → logprob: -12.908674240112305
    7. '    ' → logprob: -13.158674240112305
    8. ',' → logprob: -13.658674240112305
    9. ' j' → logprob: -13.658674240112305
    10. '  ' → logprob: -14.033674240112305

Token 554: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759403705596924
    2. ' range' → logprob: -0.8259403705596924
    3. ' ' → logprob: -14.950940132141113
    4. '(range' → logprob: -15.200940132141113
    5. ')' → logprob: -15.825940132141113
    6. '   ' → logprob: -16.82594108581543
    7. '	range' → logprob: -17.20094108581543
    8. '  ' → logprob: -18.20094108581543
    9. '    ' → logprob: -19.07594108581543
    10. '0' → logprob: -19.07594108581543

Token 555: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00025657136575318873
    2. '(' → logprob: -8.500256538391113
    3. 'N' → logprob: -9.875256538391113
    4. '(
' → logprob: -14.500256538391113
    5. ')' → logprob: -14.625256538391113
    6. '(len' → logprob: -15.625256538391113
    7. '(n' → logprob: -15.875256538391113
    8. ' (' → logprob: -16.12525749206543
    9. '	N' → logprob: -17.00025749206543
    10. '[N' → logprob: -17.00025749206543

Token 556: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03813673555850983
    2. '):
' → logprob: -3.2881367206573486
    3. ')' → logprob: -9.91313648223877
    4. ' ):' → logprob: -10.91313648223877
    5. '   ' → logprob: -11.16313648223877
    6. '):
' → logprob: -11.53813648223877
    7. '):

' → logprob: -13.28813648223877
    8. ':' → logprob: -14.41313648223877
    9. '+' → logprob: -15.03813648223877
    10. ' ):
' → logprob: -15.03813648223877

Token 557: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004596861079335213
    2. ' if' → logprob: -6.254596710205078
    3. '<|end|>' → logprob: -7.004596710205078
    4. '   ' → logprob: -7.379596710205078
    5. 'if' → logprob: -7.879596710205078
    6. '        
' → logprob: -8.504596710205078
    7. ' 
' → logprob: -9.254596710205078
    8. '    ' → logprob: -9.379596710205078
    9. ',' → logprob: -9.629596710205078
    10. ':' → logprob: -9.754596710205078

Token 558: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22355452179908752
    2. ' if' → logprob: -2.3485546112060547
    3. 'if' → logprob: -2.4735546112060547
    4. ' 
' → logprob: -4.848554611206055
    5. '        
' → logprob: -5.473554611206055
    6. ' ' → logprob: -5.598554611206055
    7. '   ' → logprob: -5.723554611206055
    8. '       
' → logprob: -8.598554611206055
    9. ' ' → logprob: -8.598554611206055
    10. '```' → logprob: -8.723554611206055

Token 559: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0009262301027774811
    2. ' if' → logprob: -7.0009260177612305
    3. '   ' → logprob: -11.25092601776123
    4. '       ' → logprob: -13.75092601776123
    5. 'red' → logprob: -14.50092601776123
    6. '```' → logprob: -16.375926971435547
    7. ' ' → logprob: -17.250926971435547
    8. '	if' → logprob: -18.000926971435547
    9. '  ' → logprob: -18.875926971435547
    10. '    ' → logprob: -19.125926971435547

Token 560: ' à' (ID: 1221)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.01416398212313652
    2. 'bit' → logprob: -4.264163970947266
    3. '(bit' → logprob: -14.514163970947266
    4. '_bit' → logprob: -19.139163970947266
    5. ' бит' → logprob: -19.264163970947266
    6. 'Bit' → logprob: -20.139163970947266
    7. '-bit' → logprob: -20.264163970947266
    8. ' ' → logprob: -20.639163970947266
    9. ' not' → logprob: -20.764163970947266
    10. ' bits' → logprob: -21.014163970947266

Token 561: ' la' (ID: 557)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.048589982092380524
    2. ' bit' → logprob: -3.0485899448394775
    3. '(bit' → logprob: -13.173589706420898
    4. 'j' → logprob: -15.298589706420898
    5. ' j' → logprob: -15.548589706420898
    6. ' ' → logprob: -16.2985897064209
    7. ' not' → logprob: -16.5485897064209
    8. 'bitr' → logprob: -16.9235897064209
    9. '_bit' → logprob: -17.1735897064209
    10. ' бит' → logprob: -17.4235897064209

Token 562: ' position' (ID: 4010)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006008548196405172
    2. ' j' → logprob: -5.131008625030518
    3. '[j' → logprob: -10.25600814819336
    4. 'bit' → logprob: -10.63100814819336
    5. ' bit' → logprob: -12.00600814819336
    6. ' ' → logprob: -12.13100814819336
    7. 'position' → logprob: -12.88100814819336
    8. ' position' → logprob: -13.38100814819336
    9. '0' → logprob: -13.75600814819336
    10. '   ' → logprob: -14.00600814819336

Token 563: ' j' (ID: 441)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.14348392188549042
    2. 'bit' → logprob: -2.143483877182007
    3. ' j' → logprob: -4.393484115600586
    4. 'j' → logprob: -5.518484115600586
    5. '(bit' → logprob: -10.268484115600586
    6. ' ' → logprob: -12.393484115600586
    7. '   ' → logprob: -13.268484115600586
    8. '_bit' → logprob: -13.393484115600586
    9. 'bits' → logprob: -13.393484115600586
    10. '    ' → logprob: -13.893484115600586

Token 564: ',' (ID: 11)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.09219153225421906
    2. 'bit' → logprob: -2.592191457748413
    3. ' ==' → logprob: -5.217191696166992
    4. ',' → logprob: -6.217191696166992
    5. '==' → logprob: -6.592191696166992
    6. '(bit' → logprob: -6.842191696166992
    7. ' ' → logprob: -7.092191696166992
    8. '   ' → logprob: -7.467191696166992
    9. ' in' → logprob: -7.717191696166992
    10. ' if' → logprob: -7.842191696166992

Token 565: ' le' (ID: 505)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.018150877207517624
    2. ' bit' → logprob: -4.018150806427002
    3. '   ' → logprob: -14.89315128326416
    4. '(bit' → logprob: -15.14315128326416
    5. ' ' → logprob: -15.89315128326416
    6. 'b' → logprob: -17.268150329589844
    7. 'bits' → logprob: -17.393150329589844
    8. '_bit' → logprob: -18.018150329589844
    9. 'bitr' → logprob: -18.018150329589844
    10. '-bit' → logprob: -18.143150329589844

Token 566: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0019295861711725593
    2. ' bit' → logprob: -6.251929759979248
    3. '(bit' → logprob: -14.75192928314209
    4. 'bitr' → logprob: -15.75192928314209
    5. '   ' → logprob: -16.251930236816406
    6. ' ' → logprob: -17.126930236816406
    7. 'b' → logprob: -17.251930236816406
    8. '_bit' → logprob: -17.376930236816406
    9. '-bit' → logprob: -17.376930236816406
    10. 'j' → logprob: -17.376930236816406

Token 567: ' vaut' (ID: 83004)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.02416367083787918
    2. '[' → logprob: -3.7741637229919434
    3. ' ==' → logprob: -7.774163722991943
    4. ' [' → logprob: -8.774163246154785
    5. '==' → logprob: -8.899163246154785
    6. ' bit' → logprob: -10.024163246154785
    7. 's' → logprob: -10.649163246154785
    8. 'bit' → logprob: -10.774163246154785
    9. '[b' → logprob: -11.024163246154785
    10. '[
' → logprob: -11.274163246154785

Token 568: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5849889516830444
    2. '1' → logprob: -0.8349889516830444
    3. ' ' → logprob: -4.709989070892334
    4. '   ' → logprob: -12.709988594055176
    5. '`' → logprob: -15.084988594055176
    6. '```' → logprob: -15.834988594055176
    7. ''' → logprob: -15.959988594055176
    8. '(' → logprob: -16.834989547729492
    9. '[' → logprob: -17.397489547729492
    10. '=' → logprob: -17.397489547729492

Token 569: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5760408639907837
    2. '1' → logprob: -0.8260408639907837
    3. ' ' → logprob: -9.201041221618652
    4. '   ' → logprob: -14.951041221618652
    5. '`' → logprob: -16.451040267944336
    6. '=' → logprob: -17.076040267944336
    7. '```' → logprob: -17.451040267944336
    8. '[' → logprob: -18.076040267944336
    9. '  ' → logprob: -18.263540267944336
    10. 'j' → logprob: -18.451040267944336

Token 570: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15762989223003387
    2. '       ' → logprob: -2.15762996673584
    3. ',' → logprob: -4.90762996673584
    4. ' if' → logprob: -4.90762996673584
    5. ':
' → logprob: -5.40762996673584
    6. '   ' → logprob: -5.40762996673584
    7. ' and' → logprob: -5.53262996673584
    8. ' :' → logprob: -7.03262996673584
    9. '           ' → logprob: -7.90762996673584
    10. 'if' → logprob: -8.15762996673584

Token 571: ' alors' (ID: 17971)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4432702958583832
    2. ' if' → logprob: -1.4432703256607056
    3. ' red' → logprob: -2.443270206451416
    4. '           ' → logprob: -4.818270206451416
    5. 'if' → logprob: -4.943270206451416
    6. ' ' → logprob: -5.318270206451416
    7. 'red' → logprob: -5.443270206451416
    8. '   ' → logprob: -5.568270206451416
    9. '        ' → logprob: -6.318270206451416
    10. ' ' → logprob: -6.443270206451416

Token 572: ' :
' (ID: 10039)
  Prédit: ' red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.03198128938674927
    2. 'red' → logprob: -3.5319812297821045
    3. '           ' → logprob: -6.781981468200684
    4. '       ' → logprob: -7.281981468200684
    5. '   ' → logprob: -8.281981468200684
    6. ' if' → logprob: -9.281981468200684
    7. 'if' → logprob: -10.406981468200684
    8. ' blue' → logprob: -12.156981468200684
    9. ' ' → logprob: -12.781981468200684
    10. '        ' → logprob: -12.906981468200684

Token 573: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0049379547126591206
    2. ' if' → logprob: -6.004938125610352
    3. 'if' → logprob: -6.254938125610352
    4. 'red' → logprob: -8.629938125610352
    5. ' red' → logprob: -8.879938125610352
    6. '        
' → logprob: -9.379938125610352
    7. '           ' → logprob: -9.379938125610352
    8. '```' → logprob: -10.879938125610352
    9. '   ' → logprob: -11.504938125610352
    10. '      ' → logprob: -12.629938125610352

Token 574: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7029956579208374
    2. ' if' → logprob: -0.8279956579208374
    3. 'if' (adapté à ' if') → logprob: -2.702995777130127
    4. ' red' → logprob: -8.077995300292969
    5. 'red' → logprob: -8.452995300292969
    6. ' ' → logprob: -9.077995300292969
    7. '        
' → logprob: -9.077995300292969
    8. '   ' → logprob: -9.327995300292969
    9. '           ' → logprob: -10.327995300292969
    10. ' 
' → logprob: -10.952995300292969

Token 575: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.07889099419116974
    2. 'bit' → logprob: -2.5788910388946533
    3. '(bit' → logprob: -14.078890800476074
    4. '   ' → logprob: -16.07889175415039
    5. 'b' → logprob: -16.32889175415039
    6. 'bitr' → logprob: -17.07889175415039
    7. ' бит' → logprob: -17.45389175415039
    8. '_bit' → logprob: -17.57889175415039
    9. '    ' → logprob: -17.57889175415039
    10. 'j' → logprob: -17.82889175415039

Token 576: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00023083435371518135
    2. '[' → logprob: -8.37523078918457
    3. ' [' → logprob: -16.00023078918457
    4. '[J' → logprob: -16.62523078918457
    5. '[js' → logprob: -17.25023078918457
    6. '[
' → logprob: -17.75023078918457
    7. '[i' → logprob: -18.25023078918457
    8. '   ' → logprob: -18.37523078918457
    9. '```' → logprob: -18.62523078918457
    10. '(j' → logprob: -19.25023078918457

Token 577: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08855649083852768
    2. ']' → logprob: -2.8385565280914307
    3. ' ==' → logprob: -4.088556289672852
    4. ']==' → logprob: -4.713556289672852
    5. ')' → logprob: -8.338556289672852
    6. ']:' → logprob: -9.588556289672852
    7. ')==' → logprob: -9.838556289672852
    8. '=' → logprob: -9.963556289672852
    9. ':' → logprob: -9.963556289672852
    10. '):' → logprob: -11.213556289672852

Token 578: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.010295333340764046
    2. ' ==' → logprob: -4.635295391082764
    3. ':' → logprob: -7.635295391082764
    4. '=' → logprob: -9.885294914245605
    5. ']==' → logprob: -13.385294914245605
    6. ')==' → logprob: -13.385294914245605
    7. '==
' → logprob: -14.135294914245605
    8. '===' → logprob: -14.385294914245605
    9. '()==' → logprob: -16.010295867919922
    10. ')' → logprob: -16.010295867919922

Token 579: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07916329801082611
    2. ' ' → logprob: -2.5791633129119873
    3. '0' → logprob: -8.204163551330566
    4. '<|end|>' → logprob: -18.57916259765625
    5. ' ' → logprob: -19.20416259765625
    6. '```' → logprob: -19.57916259765625
    7. '[' → logprob: -20.01666259765625
    8. '   ' → logprob: -20.20416259765625
    9. '  ' → logprob: -20.39166259765625
    10. ' 
' → logprob: -20.45416259765625

Token 580: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000399091251892969
    2. ' ' → logprob: -7.875399112701416
    3. '0' → logprob: -10.875398635864258
    4. '   ' → logprob: -19.500398635864258
    5. '  ' → logprob: -20.250398635864258
    6. '```' → logprob: -21.875398635864258
    7. '[' → logprob: -22.250398635864258
    8. '    ' → logprob: -22.437898635864258
    9. '' → logprob: -22.437898635864258
    10. '۱' → logprob: -22.562898635864258

Token 581: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1330159306526184
    2. ':
' → logprob: -2.1330158710479736
    3. 'red' → logprob: -5.883016109466553
    4. ' red' → logprob: -6.258016109466553
    5. '       ' → logprob: -7.258016109466553
    6. ':red' → logprob: -7.883016109466553
    7. '):
' → logprob: -8.883015632629395
    8. '):' → logprob: -10.508015632629395
    9. '   ' → logprob: -10.883015632629395
    10. '           ' → logprob: -10.883015632629395

Token 582: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9354660511016846
    2. '           ' → logprob: -1.3104660511016846
    3. 'red' → logprob: -1.4354660511016846
    4. ' red' → logprob: -2.3104660511016846
    5. '```' → logprob: -8.810465812683105
    6. '
' → logprob: -9.435465812683105
    7. ',' → logprob: -9.685465812683105
    8. '#' → logprob: -9.810465812683105
    9. '        
' → logprob: -10.060465812683105
    10. '            
' → logprob: -10.060465812683105

Token 583: ' #' (ID: 1069)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.04750005528330803
    2. ' red' → logprob: -3.1725001335144043
    3. '           ' → logprob: -5.547500133514404
    4. 'blue' → logprob: -7.797500133514404
    5. '               ' → logprob: -9.047499656677246
    6. '   ' → logprob: -10.422499656677246
    7. ' blue' → logprob: -10.547499656677246
    8. '       ' → logprob: -12.172499656677246
    9. ' ' → logprob: -13.422499656677246
    10. '
' → logprob: -14.922499656677246

Token 584: ' On' (ID: 2160)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -9.984787902794778e-05
    2. ' red' → logprob: -10.000100135803223
    3. 'blue' → logprob: -10.125100135803223
    4. '           ' → logprob: -11.375100135803223
    5. '   ' → logprob: -13.000100135803223
    6. '               ' → logprob: -14.750100135803223
    7. ' ' → logprob: -16.875099182128906
    8. '       ' → logprob: -17.375099182128906
    9. '#' → logprob: -17.875099182128906
    10. '
' → logprob: -18.375099182128906

Token 585: ' ajoute' (ID: 91611)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.4741409718990326
    2. ' red' → logprob: -0.974141001701355
    3. '           ' → logprob: -10.724141120910645
    4. 'aj' → logprob: -10.974141120910645
    5. '   ' → logprob: -11.974141120910645
    6. '_red' → logprob: -12.599141120910645
    7. 'blue' → logprob: -13.224141120910645
    8. 'continue' → logprob: -13.224141120910645
    9. 'redi' → logprob: -13.224141120910645
    10. '       ' → logprob: -13.849141120910645

Token 586: ' le' (ID: 505)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.005711558274924755
    2. ' S' → logprob: -5.255711555480957
    3. 'red' → logprob: -7.755711555480957
    4. ' red' → logprob: -10.380711555480957
    5. '   ' → logprob: -11.630711555480957
    6. ' ' → logprob: -12.505711555480957
    7. 'blue' → logprob: -13.130711555480957
    8. '(S' → logprob: -14.255711555480957
    9. '	S' → logprob: -14.505711555480957
    10. ' blue' → logprob: -14.505711555480957

Token 587: ' caractère' (ID: 80509)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00103042705450207
    2. ' S' → logprob: -7.251030445098877
    3. 'red' → logprob: -8.126029968261719
    4. ' red' → logprob: -11.376029968261719
    5. '   ' → logprob: -13.001029968261719
    6. 'blue' → logprob: -13.251029968261719
    7. '>S' → logprob: -14.001029968261719
    8. '_S' → logprob: -14.126029968261719
    9. '[S' → logprob: -14.376029968261719
    10. '```' → logprob: -14.376029968261719

Token 588: ' de' (ID: 334)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.023252815008163452
    2. ' S' → logprob: -4.023252964019775
    3. '(S' → logprob: -5.398252964019775
    4. 'red' → logprob: -8.398252487182617
    5. ' red' → logprob: -9.648252487182617
    6. '   ' → logprob: -9.773252487182617
    7. 'left' → logprob: -9.898252487182617
    8. 's' → logprob: -10.398252487182617
    9. '           ' → logprob: -10.773252487182617
    10. '=S' → logprob: -11.023252487182617

Token 589: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.12841178476810455
    2. ' S' → logprob: -2.1284117698669434
    3. 'red' → logprob: -6.878411769866943
    4. ' red' → logprob: -8.378412246704102
    5. ' la' → logprob: -9.253412246704102
    6. 'left' → logprob: -9.753412246704102
    7. ' left' → logprob: -10.253412246704102
    8. ' gauche' → logprob: -11.753412246704102
    9. 'la' → logprob: -12.378412246704102
    10. ' blue' → logprob: -12.628412246704102

Token 590: ' moitié' (ID: 93216)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0015052208909764886
    2. 'left' → logprob: -6.626505374908447
    3. ' S' → logprob: -9.001504898071289
    4. ' left' → logprob: -10.501504898071289
    5. 'red' → logprob: -11.626504898071289
    6. ' gauche' → logprob: -12.376504898071289
    7. '```' → logprob: -12.751504898071289
    8. 'right' → logprob: -13.001504898071289
    9. '#' → logprob: -13.251504898071289
    10. 'g' → logprob: -13.751504898071289

Token 591: ' gauche' (ID: 58367)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0021110051311552525
    2. 'N' → logprob: -7.377110958099365
    3. ' gauche' → logprob: -7.502110958099365
    4. ' S' → logprob: -8.127111434936523
    5. 'left' → logprob: -8.502111434936523
    6. 'j' → logprob: -9.002111434936523
    7. 'g' → logprob: -9.377111434936523
    8. '   ' → logprob: -9.502111434936523
    9. '[j' → logprob: -10.877111434936523
    10. '(S' → logprob: -11.002111434936523

Token 592: ' à' (ID: 1221)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2766970694065094
    2. '           ' → logprob: -2.4016971588134766
    3. ' à' → logprob: -3.1516971588134766
    4. '   ' → logprob: -3.7766971588134766
    5. ' S' → logprob: -4.026697158813477
    6. '[S' → logprob: -4.776697158813477
    7. '[N' → logprob: -5.026697158813477
    8. '[j' → logprob: -5.026697158813477
    9. '               ' → logprob: -5.151697158813477
    10. '       ' → logprob: -5.151697158813477

Token 593: ' la' (ID: 557)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.0036838091909885406
    2. ' red' → logprob: -5.628684043884277
    3. 'S' → logprob: -10.378684043884277
    4. 'blue' → logprob: -10.378684043884277
    5. 'rou' → logprob: -12.503684043884277
    6. '   ' → logprob: -12.878684043884277
    7. 'la' → logprob: -13.003684043884277
    8. ' ' → logprob: -13.253684043884277
    9. 'green' → logprob: -13.753684043884277
    10. '`' → logprob: -14.003684043884277

Token 594: ' chaîne' (ID: 89288)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.0005468378076329827
    2. ' red' → logprob: -8.0005464553833
    3. 'blue' → logprob: -9.6255464553833
    4. 'rou' → logprob: -9.7505464553833
    5. 'right' → logprob: -11.0005464553833
    6. '```' → logprob: -11.2505464553833
    7. 'left' → logprob: -11.3755464553833
    8. '
' → logprob: -11.7505464553833
    9. '`' → logprob: -12.0005464553833
    10. '"' → logprob: -12.3755464553833

Token 595: ' "' (ID: 392)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.1856769621372223
    2. ' red' → logprob: -1.8106769323349
    3. 'S' → logprob: -5.9356770515441895
    4. 'left' → logprob: -6.1856770515441895
    5. ' S' → logprob: -7.5606770515441895
    6. ' left' → logprob: -8.060676574707031
    7. ' rouge' → logprob: -8.185676574707031
    8. 'rou' → logprob: -10.685676574707031
    9. '_red' → logprob: -11.560676574707031
    10. '(red' → logprob: -11.560676574707031

Token 596: 'rou' (ID: 691)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.0003278368094470352
    2. ' red' → logprob: -8.500328063964844
    3. 'rou' → logprob: -9.250328063964844
    4. 'blue' → logprob: -10.625328063964844
    5. '   ' → logprob: -13.375328063964844
    6. ' ' → logprob: -14.250328063964844
    7. ' rouge' → logprob: -15.125328063964844
    8. 'ble' → logprob: -15.375328063964844
    9. '```' → logprob: -15.500328063964844
    10. 'green' → logprob: -15.750328063964844

Token 597: 'ge' (ID: 684)
  Prédit: 'ge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ge' → logprob: -0.0009768366580829024
    2. 'e' → logprob: -7.625977039337158
    3. 'red' → logprob: -8.5009765625
    4. '_red' → logprob: -9.6259765625
    5. 'le' → logprob: -10.3759765625
    6. 'g' → logprob: -10.3759765625
    7. 'j' → logprob: -10.6259765625
    8. 'je' → logprob: -11.0009765625
    9. '```' → logprob: -11.2509765625
    10. '_' → logprob: -11.3759765625

Token 598: '"' (ID: 1)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.3247966766357422
    2. 'left' → logprob: -1.5747966766357422
    3. ' left' → logprob: -3.574796676635742
    4. '"' → logprob: -4.574796676635742
    5. '[left' → logprob: -4.699796676635742
    6. 'red' → logprob: -4.949796676635742
    7. ' red' → logprob: -5.574796676635742
    8. 'S' → logprob: -6.074796676635742
    9. '_red' → logprob: -6.324796676635742
    10. '   ' → logprob: -6.699796676635742

Token 599: ' côté' (ID: 33533)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.5064501762390137
    2. '+=' → logprob: -1.3814501762390137
    3. ' +=' → logprob: -2.2564501762390137
    4. '+' → logprob: -3.2564501762390137
    5. ' red' → logprob: -6.756450176239014
    6. ' +' → logprob: -7.631450176239014
    7. 'left' → logprob: -7.756450176239014
    8. '=' → logprob: -8.881450653076172
    9. '(red' → logprob: -8.881450653076172
    10. '
' → logprob: -9.256450653076172

Token 600: ' gauche' (ID: 58367)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.31546902656555176
    2. 'red' → logprob: -1.3154690265655518
    3. ' left' → logprob: -7.065468788146973
    4. 'g' → logprob: -7.815468788146973
    5. ' red' → logprob: -7.815468788146973
    6. 'right' → logprob: -8.190468788146973
    7. '_left' → logprob: -9.065468788146973
    8. ' gauche' → logprob: -9.065468788146973
    9. 'blue' → logprob: -11.315468788146973
    10. '_red' → logprob: -12.440468788146973

Token 601: '
' (ID: 198)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.7494319677352905
    2. ' +=' → logprob: -0.8744319677352905
    3. 'red' → logprob: -2.37443208694458
    4. '+' → logprob: -5.12443208694458
    5. '   ' → logprob: -5.12443208694458
    6. ' red' → logprob: -6.37443208694458
    7. '           ' → logprob: -6.37443208694458
    8. ' +' → logprob: -6.87443208694458
    9. '       ' → logprob: -8.249431610107422
    10. '
' → logprob: -8.874431610107422

Token 602: '           ' (ID: 352)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.1518673151731491
    2. ' +=' → logprob: -2.776867389678955
    3. '+=' → logprob: -3.026867389678955
    4. ' red' → logprob: -4.026867389678955
    5. '           ' → logprob: -5.151867389678955
    6. '+' → logprob: -6.026867389678955
    7. '   ' → logprob: -6.026867389678955
    8. ' +' → logprob: -7.151867389678955
    9. '       ' → logprob: -8.151866912841797
    10. '               ' → logprob: -8.276866912841797

Token 603: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' (adapté à ' red') → logprob: -0.012881716713309288
    2. ' red' → logprob: -4.387881755828857
    3. '   ' → logprob: -8.0128812789917
    4. '           ' → logprob: -10.2628812789917
    5. ' ' → logprob: -13.5128812789917
    6. '               ' → logprob: -13.7628812789917
    7. '       ' → logprob: -13.7628812789917
    8. '  ' → logprob: -13.8878812789917
    9. 'redd' → logprob: -15.5128812789917
    10. '    ' → logprob: -15.6378812789917

Token 604: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -1.0087516784551553e-05
    2. '_le' → logprob: -12.25001049041748
    3. 'left' → logprob: -12.87501049041748
    4. '_' → logprob: -14.37501049041748
    5. '_right' → logprob: -14.62501049041748
    6. ')_' → logprob: -15.62501049041748
    7. '+=' → logprob: -15.87501049041748
    8. ' +=' → logprob: -15.87501049041748
    9. '"_' → logprob: -15.87501049041748
    10. '_LEFT' → logprob: -16.125009536743164

Token 605: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.029755927622318268
    2. ' +=' → logprob: -3.5297558307647705
    3. '+' → logprob: -12.904755592346191
    4. ']+=' → logprob: -13.904755592346191
    5. '+='' → logprob: -14.154755592346191
    6. '+="' → logprob: -14.279755592346191
    7. '+=(' → logprob: -14.904755592346191
    8. '=' → logprob: -15.654755592346191
    9. ' +' → logprob: -16.529756546020508
    10. '   ' → logprob: -17.404756546020508

Token 606: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.676292231422849e-05
    2. ' S' → logprob: -11.000017166137695
    3. '   ' → logprob: -20.375017166137695
    4. ' ' → logprob: -20.625017166137695
    5. '	S' → logprob: -21.000017166137695
    6. '(S' → logprob: -21.000017166137695
    7. '[S' → logprob: -21.875017166137695
    8. 's' → logprob: -21.875017166137695
    9. '>S' → logprob: -22.125017166137695
    10. '_S' → logprob: -22.500017166137695

Token 607: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.008129963040119e-06
    2. 'j' → logprob: -13.500003814697266
    3. '[N' → logprob: -13.625003814697266
    4. '[' → logprob: -13.625003814697266
    5. '   ' → logprob: -17.125003814697266
    6. '[i' → logprob: -17.250003814697266
    7. '```' → logprob: -18.000003814697266
    8. '[J' → logprob: -18.500003814697266
    9. '[
' → logprob: -19.500003814697266
    10. '[S' → logprob: -19.500003814697266

Token 608: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005127601907588542
    2. ']
' → logprob: -8.375513076782227
    3. ' ]' → logprob: -9.125513076782227
    4. '[' → logprob: -9.125513076782227
    5. '[j' → logprob: -10.625513076782227
    6. '']' → logprob: -11.125513076782227
    7. ']

' → logprob: -11.875513076782227
    8. ')' → logprob: -12.125513076782227
    9. '<|end|>' → logprob: -12.375513076782227
    10. '+' → logprob: -13.125513076782227

Token 609: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019591260701417923
    2. '           ' → logprob: -4.144591331481934
    3. 'else' → logprob: -6.019591331481934
    4. ' else' → logprob: -7.394591331481934
    5. '<|end|>' → logprob: -8.644591331481934
    6. ')' → logprob: -9.269591331481934
    7. '
' → logprob: -9.519591331481934
    8. '```' → logprob: -10.144591331481934
    9. 'elif' → logprob: -10.644591331481934
    10. '#' → logprob: -11.019591331481934

Token 610: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07860056310892105
    2. 'else' → logprob: -2.9536006450653076
    3. ' else' → logprob: -3.8286006450653076
    4. ' blue' → logprob: -7.2036004066467285
    5. 'blue' → logprob: -7.7036004066467285
    6. '           ' → logprob: -8.578600883483887
    7. '
' → logprob: -9.203600883483887
    8. '<|end|>' → logprob: -9.703600883483887
    9. 'elif' → logprob: -10.578600883483887
    10. ' 
' → logprob: -11.078600883483887

Token 611: ' On' (ID: 2160)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.006979283411055803
    2. ' blue' → logprob: -5.006979465484619
    3. '           ' → logprob: -9.256978988647461
    4. 'else' → logprob: -9.631978988647461
    5. '       ' → logprob: -10.756978988647461
    6. '   ' → logprob: -11.131978988647461
    7. 'red' → logprob: -11.131978988647461
    8. ' ' → logprob: -11.381978988647461
    9. '#' → logprob: -11.506978988647461
    10. '         ' → logprob: -11.756978988647461

Token 612: ' ajoute' (ID: 91611)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.713360607624054
    2. 'blue' → logprob: -1.3383605480194092
    3. ' else' → logprob: -2.213360548019409
    4. 'else' → logprob: -2.213360548019409
    5. ' red' → logprob: -4.713360786437988
    6. '           ' → logprob: -5.088360786437988
    7. ' continue' → logprob: -5.713360786437988
    8. 'red' → logprob: -6.463360786437988
    9. '#' → logprob: -6.588360786437988
    10. 'continue' → logprob: -6.588360786437988

Token 613: ' le' (ID: 505)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.07372575253248215
    2. 'red' → logprob: -3.698725700378418
    3. ' S' → logprob: -3.698725700378418
    4. ' red' → logprob: -4.198725700378418
    5. ' blue' → logprob: -5.573725700378418
    6. 'blue' → logprob: -5.948725700378418
    7. '   ' → logprob: -10.448725700378418
    8. ' ' → logprob: -10.823725700378418
    9. '(S' → logprob: -11.448725700378418
    10. 'the' → logprob: -11.573725700378418

Token 614: ' caractère' (ID: 80509)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.03356040641665459
    2. ' S' → logprob: -4.033560276031494
    3. 'red' → logprob: -4.783560276031494
    4. 'blue' → logprob: -5.533560276031494
    5. ' blue' → logprob: -6.533560276031494
    6. ' red' → logprob: -6.658560276031494
    7. ' ' → logprob: -8.908560752868652
    8. ''S' → logprob: -10.908560752868652
    9. '   ' → logprob: -11.033560752868652
    10. ''' → logprob: -11.158560752868652

Token 615: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0946969985961914
    2. ' à' → logprob: -1.4696969985961914
    3. ' red' → logprob: -1.7196969985961914
    4. 'S' → logprob: -2.0946969985961914
    5. 'red' → logprob: -3.5946969985961914
    6. '           ' → logprob: -3.5946969985961914
    7. ' S' → logprob: -4.219696998596191
    8. ' ' → logprob: -4.969696998596191
    9. '+' → logprob: -5.219696998596191
    10. '(S' → logprob: -5.469696998596191

Token 616: ' même' (ID: 9679)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00023286080977413803
    2. ' S' → logprob: -9.000232696533203
    3. 'right' → logprob: -9.625232696533203
    4. '_rev' → logprob: -11.875232696533203
    5. 'rev' → logprob: -12.375232696533203
    6. '_S' → logprob: -12.375232696533203
    7. '_right' → logprob: -12.375232696533203
    8. '(S' → logprob: -12.625232696533203
    9. ' ' → logprob: -12.625232696533203
    10. ' right' → logprob: -13.250232696533203

Token 617: ' rang' (ID: 32287)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.31148600578308105
    2. 'j' → logprob: -1.936486005783081
    3. 'N' → logprob: -3.061486005783081
    4. ' côté' → logprob: -3.061486005783081
    5. 'rev' → logprob: -5.31148624420166
    6. 're' → logprob: -5.31148624420166
    7. 'index' → logprob: -5.68648624420166
    8. ' S' → logprob: -5.93648624420166
    9. 'right' → logprob: -6.18648624420166
    10. ' j' → logprob: -6.31148624420166

Token 618: ' dans' (ID: 2671)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.2924891710281372
    2. '           ' → logprob: -1.2924891710281372
    3. 'right' → logprob: -2.0424890518188477
    4. ' à' → logprob: -2.5424890518188477
    5. 'red' → logprob: -2.9174890518188477
    6. '            ' → logprob: -3.1674890518188477
    7. ' right' → logprob: -3.6674890518188477
    8. ' red' → logprob: -3.7924890518188477
    9. 'à' → logprob: -4.417489051818848
    10. 'de' → logprob: -4.417489051818848

Token 619: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.004103573504835367
    2. ' S' → logprob: -5.504103660583496
    3. 'red' → logprob: -11.504103660583496
    4. ' ' → logprob: -12.129103660583496
    5. 'right' → logprob: -13.129103660583496
    6. ' red' → logprob: -13.254103660583496
    7. 'the' → logprob: -13.379103660583496
    8. 're' → logprob: -14.004103660583496
    9. ' reversed' → logprob: -14.254103660583496
    10. '   ' → logprob: -14.879103660583496

Token 620: ' moitié' (ID: 93216)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.002591231372207403
    2. 'rev' → logprob: -6.627591133117676
    3. 'right' → logprob: -7.627591133117676
    4. ' S' → logprob: -8.127591133117676
    5. 're' → logprob: -8.127591133117676
    6. '_rev' → logprob: -10.127591133117676
    7. 's' → logprob: -10.502591133117676
    8. ' reversed' → logprob: -11.377591133117676
    9. '`' → logprob: -11.502591133117676
    10. '```' → logprob: -11.627591133117676

Token 621: ' droite' (ID: 61428)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.4960310161113739
    2. 'dro' → logprob: -1.7460310459136963
    3. 'right' → logprob: -2.1210310459136963
    4. 'S' → logprob: -2.7460310459136963
    5. ' droite' → logprob: -4.746030807495117
    6. ' droit' → logprob: -5.371030807495117
    7. ' S' → logprob: -5.621030807495117
    8. ' right' → logprob: -5.996030807495117
    9. 'd' → logprob: -6.496030807495117
    10. '_rev' → logprob: -6.621030807495117

Token 622: ' invers' (ID: 38721)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7284347414970398
    2. ' à' → logprob: -1.7284348011016846
    3. '_right' → logprob: -2.6034348011016846
    4. ' red' → logprob: -2.7284348011016846
    5. 'à' → logprob: -2.8534348011016846
    6. 'red' → logprob: -3.1034348011016846
    7. '+' → logprob: -3.4784348011016846
    8. ' +' → logprob: -4.1034345626831055
    9. 'right' → logprob: -4.4784345626831055
    10. '               ' → logprob: -4.8534345626831055

Token 623: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0660492554306984
    2. 'e' → logprob: -3.191049337387085
    3. 'é' → logprob: -3.816049337387085
    4. 'ee' → logprob: -8.066049575805664
    5. 'S' → logprob: -8.316049575805664
    6. 'ed' → logprob: -9.941049575805664
    7. 'és' → logprob: -10.066049575805664
    8. 'er' → logprob: -10.816049575805664
    9. 'éd' → logprob: -11.066049575805664
    10. 'rée' → logprob: -11.691049575805664

Token 624: ' à' (ID: 1221)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.5795238018035889
    2. ' red' → logprob: -0.9545238018035889
    3. '           ' → logprob: -3.329523801803589
    4. ' à' → logprob: -5.079524040222168
    5. ' if' → logprob: -5.454524040222168
    6. '+' → logprob: -6.829524040222168
    7. 'if' → logprob: -6.954524040222168
    8. ' +=' → logprob: -6.954524040222168
    9. '               ' → logprob: -7.329524040222168
    10. '   ' → logprob: -7.454524040222168

Token 625: ' la' (ID: 557)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.0009699412039481103
    2. ' red' → logprob: -7.125969886779785
    3. 'blue' → logprob: -9.250969886779785
    4. 'S' → logprob: -9.875969886779785
    5. '
' → logprob: -12.125969886779785
    6. 're' → logprob: -13.500969886779785
    7. '`' → logprob: -13.500969886779785
    8. '_red' → logprob: -13.875969886779785
    9. 'la' → logprob: -14.000969886779785
    10. 'the' → logprob: -14.125969886779785

Token 626: ' chaîne' (ID: 89288)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.029997853562235832
    2. 'blue' → logprob: -3.5299978256225586
    3. ' red' → logprob: -9.404997825622559
    4. 'ble' → logprob: -9.779997825622559
    5. 'right' → logprob: -10.654997825622559
    6. 'green' → logprob: -10.779997825622559
    7. 'rou' → logprob: -11.154997825622559
    8. ' blue' → logprob: -11.904997825622559
    9. '```' → logprob: -11.904997825622559
    10. '_red' → logprob: -12.154997825622559

Token 627: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4029274582862854
    2. 'red' → logprob: -1.4029273986816406
    3. ' red' → logprob: -2.9029273986816406
    4. '_red' → logprob: -4.277927398681641
    5. ' "' → logprob: -4.902927398681641
    6. 'blue' → logprob: -5.652927398681641
    7. ' blue' → logprob: -6.152927398681641
    8. '_' → logprob: -6.527927398681641
    9. '_blue' → logprob: -7.277927398681641
    10. ''' → logprob: -7.652927398681641

Token 628: 'ble' (ID: 1124)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.05574201047420502
    2. 'blue' → logprob: -2.930742025375366
    3. ' red' → logprob: -7.305741786956787
    4. ''' → logprob: -9.305742263793945
    5. ' blue' → logprob: -9.930742263793945
    6. ' ' → logprob: -11.430742263793945
    7. '"' → logprob: -11.805742263793945
    8. '   ' → logprob: -12.180742263793945
    9. 'green' → logprob: -12.680742263793945
    10. 'ble' → logprob: -12.930742263793945

Token 629: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.484659880399704
    2. 'u' → logprob: -0.9846599102020264
    3. 'blue' → logprob: -4.734659671783447
    4. '_blue' → logprob: -7.234659671783447
    5. 'e' → logprob: -7.359659671783447
    6. '
' → logprob: -9.609660148620605
    7. ' blue' → logprob: -9.734660148620605
    8. '```' → logprob: -10.609660148620605
    9. 'red' → logprob: -10.734660148620605
    10. '   ' → logprob: -10.734660148620605

Token 630: '"' (ID: 1)
  Prédit: '_right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.15558694303035736
    2. '_left' → logprob: -2.0305869579315186
    3. '_blue' → logprob: -4.4055867195129395
    4. 'right' → logprob: -8.155587196350098
    5. 'blue' → logprob: -8.280587196350098
    6. 'left' → logprob: -10.280587196350098
    7. '_ble' → logprob: -11.155587196350098
    8. '_' → logprob: -11.280587196350098
    9. '_red' → logprob: -13.155587196350098
    10. '_down' → logprob: -13.530587196350098

Token 631: ' côté' (ID: 33533)
  Prédit: '_right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.3953853249549866
    2. '_left' → logprob: -1.1453852653503418
    3. '_blue' → logprob: -4.895385265350342
    4. 'right' → logprob: -7.895385265350342
    5. '_rev' → logprob: -9.0203857421875
    6. '_plus' → logprob: -9.1453857421875
    7. '_red' → logprob: -9.2703857421875
    8. '_' → logprob: -9.3953857421875
    9. 'left' → logprob: -9.5203857421875
    10. '+' → logprob: -10.5203857421875

Token 632: ' droit' (ID: 29964)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.11067268997430801
    2. '_right' → logprob: -2.48567271232605
    3. 'left' → logprob: -3.98567271232605
    4. '_left' → logprob: -6.235672473907471
    5. 'dro' → logprob: -7.110672473907471
    6. ' droite' → logprob: -10.735672950744629
    7. ' right' → logprob: -10.985672950744629
    8. '右' → logprob: -11.360672950744629
    9. '```' → logprob: -11.485672950744629
    10. 'd' → logprob: -11.485672950744629

Token 633: '
' (ID: 198)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.761099100112915
    2. ' blue' → logprob: -1.636099100112915
    3. ' +=' → logprob: -1.761099100112915
    4. '           ' → logprob: -2.136099100112915
    5. '+=' → logprob: -3.386099100112915
    6. '+' → logprob: -5.136098861694336
    7. ' +' → logprob: -5.386098861694336
    8. '               ' → logprob: -6.886098861694336
    9. '       ' → logprob: -7.386098861694336
    10. '          ' → logprob: -7.761098861694336

Token 634: '           ' (ID: 352)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.28680089116096497
    2. ' blue' → logprob: -2.0368008613586426
    3. '           ' → logprob: -2.1618008613586426
    4. ' +=' → logprob: -6.786800861358643
    5. '+' → logprob: -6.911800861358643
    6. '+=' → logprob: -7.286800861358643
    7. ' +' → logprob: -8.7868013381958
    8. '.blue' → logprob: -8.9118013381958
    9. '_blue' → logprob: -9.1618013381958
    10. '          ' → logprob: -9.1618013381958

Token 635: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' (adapté à ' blue') → logprob: -0.007632419932633638
    2. ' blue' → logprob: -4.882632255554199
    3. '   ' → logprob: -11.0076322555542
    4. 'red' → logprob: -12.3826322555542
    5. '  ' → logprob: -13.6326322555542
    6. ' ' → logprob: -13.7576322555542
    7. '           ' → logprob: -14.2576322555542
    8. 'ble' → logprob: -14.5076322555542
    9. '       ' → logprob: -15.3826322555542
    10. 'blu' → logprob: -15.3826322555542

Token 636: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -1.0921942703134846e-05
    2. '_left' → logprob: -11.62501049041748
    3. 'right' → logprob: -13.25001049041748
    4. '_rev' → logprob: -16.625011444091797
    5. '_' → logprob: -17.250011444091797
    6. '右' → logprob: -17.375011444091797
    7. 'Right' → logprob: -17.750011444091797
    8. '"_' → logprob: -18.500011444091797
    9. '```' → logprob: -18.750011444091797
    10. ' right' → logprob: -18.875011444091797

Token 637: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03804401680827141
    2. ' +=' → logprob: -3.288043975830078
    3. ']+=' → logprob: -13.538043975830078
    4. '+='' → logprob: -14.538043975830078
    5. '+' → logprob: -15.163043975830078
    6. '+=(' → logprob: -15.413043975830078
    7. '=' → logprob: -15.538043975830078
    8. ' +' → logprob: -16.288043975830078
    9. '+="' → logprob: -16.538043975830078
    10. '	' → logprob: -19.038043975830078

Token 638: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.6240566083070007e-06
    2. ' S' → logprob: -13.375001907348633
    3. '	S' → logprob: -18.250001907348633
    4. '   ' → logprob: -21.000001907348633
    5. '_S' → logprob: -21.125001907348633
    6. ' ' → logprob: -21.250001907348633
    7. '(S' → logprob: -21.375001907348633
    8. '[S' → logprob: -21.875001907348633
    9. 's' → logprob: -22.250001907348633
    10. '  ' → logprob: -22.750001907348633

Token 639: '_rev' (ID: 99394)
  Prédit: '_rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rev' → logprob: -0.007011952344328165
    2. 'rev' → logprob: -5.132011890411377
    3. '[N' → logprob: -6.882011890411377
    4. 'Rev' → logprob: -11.507012367248535
    5. 'r' → logprob: -11.882012367248535
    6. '[' → logprob: -12.382012367248535
    7. '_reverse' → logprob: -12.507012367248535
    8. '[::-' → logprob: -12.632012367248535
    9. 'N' → logprob: -12.757012367248535
    10. '_ref' → logprob: -12.757012367248535

Token 640: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.2994620242971e-06
    2. 'j' → logprob: -11.750008583068848
    3. '[' → logprob: -15.750008583068848
    4. '[N' → logprob: -16.37500762939453
    5. ' [' → logprob: -16.87500762939453
    6. '```' → logprob: -17.62500762939453
    7. '
' → logprob: -18.00000762939453
    8. '   ' → logprob: -19.00000762939453
    9. '[i' → logprob: -19.00000762939453
    10. '(j' → logprob: -19.50000762939453

Token 641: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04878073185682297
    2. ']
' → logprob: -3.048780679702759
    3. '       ' → logprob: -9.54878044128418
    4. ']

' → logprob: -9.79878044128418
    5. ' ]' → logprob: -10.54878044128418
    6. ')' → logprob: -11.17378044128418
    7. '<|end|>' → logprob: -12.29878044128418
    8. ']
' → logprob: -12.42378044128418
    9. ' ]
' → logprob: -12.54878044128418
    10. '']' → logprob: -12.92378044128418

Token 642: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008990583010017872
    2. 'else' → logprob: -4.88399076461792
    3. ' else' → logprob: -6.63399076461792
    4. '<|end|>' → logprob: -9.633990287780762
    5. 'elif' → logprob: -14.883990287780762
    6. '​' → logprob: -15.258990287780762
    7. '      ' → logprob: -15.383990287780762
    8. '        
' → logprob: -15.508990287780762
    9. '	else' → logprob: -15.508990287780762
    10. '<|end|>' → logprob: -15.508990287780762

Token 643: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10043235123157501
    2. 'else' (adapté à ' else') → logprob: -2.6004323959350586
    3. ' else' → logprob: -3.8504323959350586
    4. '	else' → logprob: -10.725432395935059
    5. '<|end|>' → logprob: -11.725432395935059
    6. '	' → logprob: -12.725432395935059
    7. 'elif' → logprob: -13.100432395935059
    8. '   ' → logprob: -13.475432395935059
    9. '      ' → logprob: -14.225432395935059
    10. '        
' → logprob: -14.600432395935059

Token 644: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6092528700828552
    2. ':
' → logprob: -0.8592528700828552
    3. '           ' → logprob: -3.6092529296875
    4. '       ' → logprob: -5.8592529296875
    5. '   ' → logprob: -6.8592529296875
    6. ' :
' → logprob: -7.2342529296875
    7. ' blue' → logprob: -7.8592529296875
    8. ' :' → logprob: -8.7342529296875
    9. '          ' → logprob: -9.6092529296875
    10. ' red' → logprob: -9.9842529296875

Token 645: '           ' (ID: 352)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.36673930287361145
    2. '           ' → logprob: -1.241739273071289
    3. '       ' → logprob: -4.366739273071289
    4. ' blue' → logprob: -5.366739273071289
    5. '   ' → logprob: -7.491739273071289
    6. 'red' → logprob: -9.866739273071289
    7. '               ' → logprob: -10.116739273071289
    8. ' ' → logprob: -10.991739273071289
    9. '_blue' → logprob: -11.116739273071289
    10. '#' → logprob: -11.241739273071289

Token 646: ' #' (ID: 1069)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.12886188924312592
    2. ' blue' → logprob: -2.128861904144287
    3. '           ' → logprob: -6.378861904144287
    4. '   ' → logprob: -9.003861427307129
    5. '       ' → logprob: -10.378861427307129
    6. ' ' → logprob: -10.503861427307129
    7. '#' (adapté à ' #') → logprob: -11.128861427307129
    8. 'red' → logprob: -11.503861427307129
    9. '               ' → logprob: -12.003861427307129
    10. '
' → logprob: -12.128861427307129

Token 647: ' Sinon' (ID: 154924)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.06209271773695946
    2. ' blue' → logprob: -2.8120927810668945
    3. '           ' → logprob: -9.687092781066895
    4. '   ' → logprob: -10.562092781066895
    5. 'red' → logprob: -10.937092781066895
    6. ' ' → logprob: -12.062092781066895
    7. '#' → logprob: -12.312092781066895
    8. '  ' → logprob: -13.062092781066895
    9. '       ' → logprob: -13.062092781066895
    10. ' red' → logprob: -13.812092781066895

Token 648: ',' (ID: 11)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.07311033457517624
    2. 'blue' → logprob: -2.698110342025757
    3. '           ' → logprob: -5.948110103607178
    4. ' bleu' → logprob: -7.698110103607178
    5. '            ' → logprob: -10.198110580444336
    6. '_blue' → logprob: -10.448110580444336
    7. ' red' → logprob: -11.948110580444336
    8. '               ' → logprob: -12.198110580444336
    9. '   ' → logprob: -12.448110580444336
    10. 'ble' → logprob: -12.948110580444336

Token 649: ' le' (ID: 505)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.2521302402019501
    2. 'blue' → logprob: -1.5021302700042725
    3. '           ' → logprob: -8.627130508422852
    4. 'red' → logprob: -12.127130508422852
    5. ' red' → logprob: -12.252130508422852
    6. ' bleu' → logprob: -12.502130508422852
    7. ' ' → logprob: -13.002130508422852
    8. '   ' → logprob: -13.502130508422852
    9. '_blue' → logprob: -14.252130508422852
    10. '#' → logprob: -14.502130508422852

Token 650: ' caractère' (ID: 80509)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.07928840816020966
    2. ' blue' → logprob: -2.5792884826660156
    3. ' bleu' → logprob: -8.954288482666016
    4. '#' → logprob: -9.329288482666016
    5. 'red' → logprob: -9.329288482666016
    6. 'ble' → logprob: -10.079288482666016
    7. '```' → logprob: -11.079288482666016
    8. ' red' → logprob: -11.579288482666016
    9. ' ' → logprob: -11.954288482666016
    10. '   ' → logprob: -12.204288482666016

Token 651: ' de' (ID: 334)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.13951800763607025
    2. 'blue' → logprob: -2.3895180225372314
    3. ' bleu' → logprob: -3.3895180225372314
    4. 'ble' → logprob: -5.639517784118652
    5. ' ble' → logprob: -7.889517784118652
    6. ' de' → logprob: -8.264517784118652
    7. '_blue' → logprob: -8.514517784118652
    8. ' left' → logprob: -8.639517784118652
    9. ' red' → logprob: -9.389517784118652
    10. 'left' → logprob: -10.139517784118652

Token 652: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.017411351203918457
    2. ' S' → logprob: -4.767411231994629
    3. 'left' → logprob: -5.767411231994629
    4. 'blue' → logprob: -6.392411231994629
    5. 'red' → logprob: -6.642411231994629
    6. ' blue' → logprob: -7.017411231994629
    7. ' bleu' → logprob: -7.642411231994629
    8. ' la' → logprob: -7.892411231994629
    9. ' left' → logprob: -8.142411231994629
    10. ' red' → logprob: -8.142411231994629

Token 653: ' moitié' (ID: 93216)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5964450240135193
    2. 'half' → logprob: -1.096445083618164
    3. 'mo' → logprob: -2.846445083618164
    4. 'S' → logprob: -3.846445083618164
    5. 'blue' → logprob: -3.971445083618164
    6. 'g' → logprob: -5.346445083618164
    7. '#' → logprob: -5.846445083618164
    8. ' moitié' → logprob: -5.846445083618164
    9. '```' → logprob: -6.596445083618164
    10. ' left' → logprob: -6.846445083618164

Token 654: ' gauche' (ID: 58367)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.4119936227798462
    2. ' gauche' → logprob: -1.5369936227798462
    3. '_left' → logprob: -3.2869935035705566
    4. 'g' → logprob: -3.4119935035705566
    5. ' left' → logprob: -3.4119935035705566
    6. '[j' → logprob: -4.786993503570557
    7. 'S' → logprob: -6.036993503570557
    8. '[left' → logprob: -6.036993503570557
    9. 'j' → logprob: -6.286993503570557
    10. 'red' → logprob: -7.536993503570557

Token 655: ' va' (ID: 3423)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.10601502656936646
    2. ' +=' → logprob: -2.6060149669647217
    3. 'blue' → logprob: -4.106015205383301
    4. ' red' → logprob: -5.856015205383301
    5. ' bleu' → logprob: -5.856015205383301
    6. '           ' → logprob: -6.481015205383301
    7. '+=' → logprob: -7.106015205383301
    8. 'aj' → logprob: -8.6060152053833
    9. ' left' → logprob: -8.6060152053833
    10. ' n' → logprob: -8.8560152053833

Token 656: ' dans' (ID: 2671)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.5171341896057129
    2. 'blue' → logprob: -1.142134189605713
    3. ' à' → logprob: -4.017134189605713
    4. 'à' → logprob: -4.142134189605713
    5. 'au' → logprob: -4.892134189605713
    6. 'to' → logprob: -5.017134189605713
    7. 'ble' → logprob: -5.017134189605713
    8. ' to' → logprob: -5.267134189605713
    9. ' ' → logprob: -5.517134189605713
    10. ' red' → logprob: -5.517134189605713

Token 657: ' la' (ID: 557)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.3871407210826874
    2. ' blue' → logprob: -1.1371407508850098
    3. ' bleu' → logprob: -8.512140274047852
    4. 'ble' → logprob: -10.387140274047852
    5. 'red' → logprob: -11.012140274047852
    6. ' ' → logprob: -11.887140274047852
    7. ' red' → logprob: -12.012140274047852
    8. ' la' → logprob: -13.012140274047852
    9. '_blue' → logprob: -14.012140274047852
    10. ' the' → logprob: -14.762140274047852

Token 658: ' chaîne' (ID: 89288)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.002341992687433958
    2. ' blue' → logprob: -6.252342224121094
    3. 'ble' → logprob: -7.877342224121094
    4. ' bleu' → logprob: -10.377342224121094
    5. 'blu' → logprob: -14.002342224121094
    6. 'red' → logprob: -14.502342224121094
    7. '```' → logprob: -14.752342224121094
    8. '_blue' → logprob: -15.377342224121094
    9. ' ' → logprob: -15.377342224121094
    10. 'b' → logprob: -16.252342224121094

Token 659: ' "' (ID: 392)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.4749438166618347
    2. 'blue' → logprob: -0.9749438166618347
    3. ' bleu' → logprob: -7.2249436378479
    4. 'ble' → logprob: -9.349944114685059
    5. '           ' → logprob: -10.474944114685059
    6. '_blue' → logprob: -11.474944114685059
    7. ''' → logprob: -12.349944114685059
    8. '"' → logprob: -13.099944114685059
    9. 'red' → logprob: -13.849944114685059
    10. ' ble' → logprob: -13.974944114685059

Token 660: 'ble' (ID: 1124)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.0005583931924775243
    2. ' blue' → logprob: -7.500558376312256
    3. 'ble' → logprob: -12.375558853149414
    4. ' bleu' → logprob: -14.375558853149414
    5. '   ' → logprob: -15.250558853149414
    6. ' ' → logprob: -15.625558853149414
    7. '```' → logprob: -15.875558853149414
    8. '"' → logprob: -16.750558853149414
    9. 'red' → logprob: -16.875558853149414
    10. '_blue' → logprob: -17.375558853149414

Token 661: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.4577948749065399
    2. 'u' → logprob: -1.7077949047088623
    3. '_blue' → logprob: -2.3327949047088623
    4. 'blue' → logprob: -2.4577949047088623
    5. '_left' → logprob: -6.707794666290283
    6. 'ble' → logprob: -7.207794666290283
    7. 'e' → logprob: -7.582794666290283
    8. 'left' → logprob: -8.957795143127441
    9. ' blue' → logprob: -8.957795143127441
    10. '```' → logprob: -9.082795143127441

Token 662: '"' (ID: 1)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -6.511406809295295e-06
    2. '_blue' → logprob: -12.375006675720215
    3. 'left' → logprob: -13.875006675720215
    4. '_' → logprob: -14.375006675720215
    5. '_right' → logprob: -14.750006675720215
    6. '_LEFT' → logprob: -16.1250057220459
    7. ' left' → logprob: -16.3750057220459
    8. ' _' → logprob: -17.1250057220459
    9. '_le' → logprob: -17.1250057220459
    10. '"' → logprob: -17.3750057220459

Token 663: ' côté' (ID: 33533)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.00017815368482843041
    2. '_blue' → logprob: -8.750178337097168
    3. '_right' → logprob: -11.375178337097168
    4. 'left' → logprob: -12.500178337097168
    5. '_' → logprob: -13.000178337097168
    6. '_ble' → logprob: -14.375178337097168
    7. '           ' → logprob: -15.250178337097168
    8. '_else' → logprob: -15.500178337097168
    9. '_LEFT' → logprob: -15.625178337097168
    10. '_bottom' → logprob: -15.750178337097168

Token 664: ' gauche' (ID: 58367)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.005174227524548769
    2. ' left' → logprob: -6.005174160003662
    3. 'g' → logprob: -6.380174160003662
    4. ' gauche' → logprob: -7.005174160003662
    5. '_left' → logprob: -9.38017463684082
    6. 'lef' → logprob: -13.38017463684082
    7. ' g' → logprob: -13.75517463684082
    8. '	left' → logprob: -13.88017463684082
    9. '_g' → logprob: -14.13017463684082
    10. ' ' → logprob: -14.25517463684082

Token 665: '
' (ID: 198)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.7449444532394409
    2. ' blue' → logprob: -0.8699444532394409
    3. '           ' → logprob: -2.2449445724487305
    4. ' bleu' → logprob: -9.61994457244873
    5. '       ' → logprob: -9.99494457244873
    6. ' =' → logprob: -10.49494457244873
    7. '            
' → logprob: -10.74494457244873
    8. '          ' → logprob: -10.86994457244873
    9. '            ' → logprob: -10.99494457244873
    10. '=' → logprob: -10.99494457244873

Token 666: '           ' (ID: 352)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.634159505367279
    2. 'blue' → logprob: -0.759159505367279
    3. '           ' → logprob: -6.509159564971924
    4. '   ' → logprob: -11.009159088134766
    5. ' bleu' → logprob: -11.759159088134766
    6. '=' → logprob: -11.759159088134766
    7. '       ' → logprob: -12.134159088134766
    8. '            ' → logprob: -12.509159088134766
    9. '_blue' → logprob: -12.634159088134766
    10. '.blue' → logprob: -12.634159088134766

Token 667: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' (adapté à ' blue') → logprob: -0.018160710111260414
    2. ' blue' → logprob: -4.018160820007324
    3. '           ' → logprob: -11.643160820007324
    4. '   ' → logprob: -13.268160820007324
    5. '       ' → logprob: -15.268160820007324
    6. '  ' → logprob: -17.143159866333008
    7. ' ' → logprob: -17.268159866333008
    8. '               ' → logprob: -17.393159866333008
    9. '_blue' → logprob: -18.018159866333008
    10. '```' → logprob: -18.768159866333008

Token 668: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -5.512236498361744e-07
    2. '_right' → logprob: -14.875000953674316
    3. '_le' → logprob: -16.375
    4. '_LEFT' → logprob: -18.5
    5. 'left' → logprob: -18.75
    6. '_' → logprob: -19.125
    7. '_low' → logprob: -19.625
    8. '_Left' → logprob: -19.625
    9. ' _' → logprob: -19.75
    10. '_list' → logprob: -19.875

Token 669: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3868741989135742
    2. '+=' → logprob: -1.1368741989135742
    3. '+='' → logprob: -13.261874198913574
    4. ' +' → logprob: -14.636874198913574
    5. '+="' → logprob: -14.761874198913574
    6. ']+=' → logprob: -15.136874198913574
    7. '+' → logprob: -15.636874198913574
    8. '+=(' → logprob: -15.886874198913574
    9. '=' → logprob: -18.51187515258789
    10. ' ' → logprob: -18.88687515258789

Token 670: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0004306692280806601
    2. ' S' → logprob: -7.750430583953857
    3. '>S' → logprob: -19.250431060791016
    4. '(S' → logprob: -19.625431060791016
    5. '	S' → logprob: -20.125431060791016
    6. '<S' → logprob: -20.375431060791016
    7. 's' → logprob: -20.750431060791016
    8. ' ' → logprob: -20.875431060791016
    9. '_S' → logprob: -21.000431060791016
    10. '[S' → logprob: -21.250431060791016

Token 671: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.014684110297821e-06
    2. '[' → logprob: -11.625008583068848
    3. '[
' → logprob: -17.750009536743164
    4. '[i' → logprob: -18.125009536743164
    5. 'j' → logprob: -18.125009536743164
    6. '```' → logprob: -18.125009536743164
    7. '[js' → logprob: -18.375009536743164
    8. ' [' → logprob: -18.375009536743164
    9. '[N' → logprob: -19.125009536743164
    10. '[J' → logprob: -19.750009536743164

Token 672: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008788274135440588
    2. ']
' → logprob: -7.250878810882568
    3. '[j' → logprob: -9.500879287719727
    4. '       ' → logprob: -10.000879287719727
    5. ')' → logprob: -10.875879287719727
    6. ' ]' → logprob: -10.875879287719727
    7. '[' → logprob: -12.000879287719727
    8. ']

' → logprob: -13.375879287719727
    9. '           ' → logprob: -13.500879287719727
    10. '   ' → logprob: -14.000879287719727

Token 673: '           ' (ID: 352)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.5468676090240479
    2. '           ' → logprob: -1.0468676090240479
    3. ' red' → logprob: -2.671867609024048
    4. '       ' → logprob: -6.921867370605469
    5. '   ' → logprob: -10.421867370605469
    6. '          ' → logprob: -11.546867370605469
    7. '		' → logprob: -11.671867370605469
    8. '​' → logprob: -12.171867370605469
    9. '```' → logprob: -12.671867370605469
    10. '_red' → logprob: -12.671867370605469

Token 674: ' #' (ID: 1069)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.00033593899570405483
    2. ' red' → logprob: -8.000335693359375
    3. '           ' → logprob: -15.000335693359375
    4. '   ' → logprob: -15.875335693359375
    5. '       ' → logprob: -16.625335693359375
    6. '_red' → logprob: -18.375335693359375
    7. 'redir' → logprob: -18.875335693359375
    8. '.red' → logprob: -19.000335693359375
    9. 'redd' → logprob: -19.250335693359375
    10. '(red' → logprob: -19.625335693359375

Token 675: ' Et' (ID: 10007)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -7.493430894101039e-05
    2. ' red' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.75007438659668
    4. 'else' → logprob: -18.62507438659668
    5. 'elif' → logprob: -19.87507438659668
    6. '           ' → logprob: -20.50007438659668
    7. '       ' → logprob: -20.75007438659668
    8. '#' → logprob: -21.00007438659668
    9. ' ' → logprob: -21.75007438659668
    10. 'redd' → logprob: -21.75007438659668

Token 676: ' le' (ID: 505)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.1002541184425354
    2. ' red' → logprob: -2.3502540588378906
    3. '           ' → logprob: -10.22525405883789
    4. '   ' → logprob: -12.72525405883789
    5. 'else' → logprob: -13.22525405883789
    6. '       ' → logprob: -13.47525405883789
    7. '
' → logprob: -13.97525405883789
    8. '_red' → logprob: -14.10025405883789
    9. 'redi' → logprob: -14.47525405883789
    10. 'elif' → logprob: -14.60025405883789

Token 677: ' caractère' (ID: 80509)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.14500202238559723
    2. 'car' → logprob: -2.0200021266937256
    3. 'char' → logprob: -6.6450018882751465
    4. ' red' → logprob: -8.145002365112305
    5. 'character' → logprob: -8.145002365112305
    6. 'else' → logprob: -8.895002365112305
    7. ' caractère' → logprob: -8.895002365112305
    8. 'rou' → logprob: -9.520002365112305
    9. 'elif' → logprob: -10.270002365112305
    10. '#' → logprob: -10.520002365112305

Token 678: ' associé' (ID: 152099)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.4534089267253876
    2. 'de' → logprob: -1.32840895652771
    3. ' red' → logprob: -3.07840895652771
    4. ' de' → logprob: -3.32840895652771
    5. '           ' → logprob: -5.078408718109131
    6. 'right' → logprob: -6.453408718109131
    7. ' of' → logprob: -6.453408718109131
    8. '#' → logprob: -6.578408718109131
    9. 'du' → logprob: -6.953408718109131
    10. '          ' → logprob: -7.078408718109131

Token 679: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19361236691474915
    2. ' red' → logprob: -2.5686123371124268
    3. 'de' → logprob: -3.3186123371124268
    4. 'red' → logprob: -3.6936123371124268
    5. '=' → logprob: -5.443612575531006
    6. '            ' → logprob: -5.568612575531006
    7. ' de' → logprob: -5.568612575531006
    8. 'à' → logprob: -5.693612575531006
    9. 'dans' → logprob: -5.943612575531006
    10. '          ' → logprob: -6.068612575531006

Token 680: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0003485745983198285
    2. ' S' → logprob: -8.000349044799805
    3. ' la' → logprob: -11.875349044799805
    4. 'la' → logprob: -13.250349044799805
    5. 'blue' → logprob: -14.000349044799805
    6. 'right' → logprob: -14.000349044799805
    7. ' ' → logprob: -14.125349044799805
    8. 'l' → logprob: -14.500349044799805
    9. '`' → logprob: -14.875349044799805
    10. 'the' → logprob: -15.250349044799805

Token 681: ' moitié' (ID: 93216)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.13393576443195343
    2. 'mo' → logprob: -2.1339356899261475
    3. 'half' → logprob: -5.133935928344727
    4. ' moitié' → logprob: -8.008935928344727
    5. 'right' → logprob: -8.633935928344727
    6. ' S' → logprob: -8.633935928344727
    7. 'part' → logprob: -9.383935928344727
    8. '#' → logprob: -9.633935928344727
    9. 'dro' → logprob: -10.008935928344727
    10. 'mil' → logprob: -10.383935928344727

Token 682: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.04351302608847618
    2. 'right' → logprob: -3.793513059616089
    3. 'd' → logprob: -4.66851282119751
    4. ' droite' → logprob: -4.91851282119751
    5. 'S' → logprob: -6.41851282119751
    6. 'D' → logprob: -7.54351282119751
    7. '[right' → logprob: -8.168513298034668
    8. '```' → logprob: -8.293513298034668
    9. 'dre' → logprob: -9.043513298034668
    10. '#' → logprob: -9.043513298034668

Token 683: ' invers' (ID: 38721)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.5251927375793457
    2. ' +=' → logprob: -1.1501927375793457
    3. '+=' → logprob: -3.1501927375793457
    4. ' red' → logprob: -4.650192737579346
    5. 'rev' → logprob: -4.775192737579346
    6. '           ' → logprob: -4.900192737579346
    7. ' rev' → logprob: -5.150192737579346
    8. '          ' → logprob: -5.650192737579346
    9. ' right' → logprob: -5.900192737579346
    10. ' blue' → logprob: -6.275192737579346

Token 684: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.008371667005121708
    2. 'é' → logprob: -4.883371829986572
    3. 'ed' → logprob: -7.758371829986572
    4. 'éd' → logprob: -9.008371353149414
    5. 'S' → logprob: -9.508371353149414
    6. '[' → logprob: -9.883371353149414
    7. 'e' → logprob: -10.258371353149414
    8. 'érée' → logprob: -10.883371353149414
    9. '   ' → logprob: -11.633371353149414
    10. 'cée' → logprob: -12.133371353149414

Token 685: ' va' (ID: 3423)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25553324818611145
    2. ' +=' → logprob: -1.505533218383789
    3. '           ' → logprob: -5.880533218383789
    4. ' red' → logprob: -7.630533218383789
    5. '          ' → logprob: -9.130533218383789
    6. 'red' → logprob: -9.630533218383789
    7. '=' → logprob: -10.505533218383789
    8. ']+=' → logprob: -10.755533218383789
    9. '+='' → logprob: -10.880533218383789
    10. '+="' → logprob: -11.255533218383789

Token 686: ' dans' (ID: 2671)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.04924032837152481
    2. ' red' → logprob: -3.7992403507232666
    3. 'dans' → logprob: -4.0492401123046875
    4. '+=' → logprob: -5.2992401123046875
    5. 'into' → logprob: -7.0492401123046875
    6. 'in' → logprob: -7.2992401123046875
    7. ' dans' → logprob: -7.6742401123046875
    8. ' +=' → logprob: -7.7992401123046875
    9. ' into' → logprob: -9.424240112304688
    10. 'à' → logprob: -9.424240112304688

Token 687: ' la' (ID: 557)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.018150178715586662
    2. ' red' → logprob: -4.018150329589844
    3. 're' → logprob: -17.018150329589844
    4. ' ' → logprob: -17.143150329589844
    5. '   ' → logprob: -17.393150329589844
    6. 'r' → logprob: -17.518150329589844
    7. 'redd' → logprob: -18.393150329589844
    8. 'redi' → logprob: -18.518150329589844
    9. '_red' → logprob: -18.518150329589844
    10. 'redir' → logprob: -19.143150329589844

Token 688: ' chaîne' (ID: 89288)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -7.32654589228332e-05
    2. ' red' → logprob: -9.875073432922363
    3. 'rou' → logprob: -10.750073432922363
    4. '#' → logprob: -16.000072479248047
    5. ' rouge' → logprob: -16.875072479248047
    6. 'blue' → logprob: -17.500072479248047
    7. '"' → logprob: -17.500072479248047
    8. ' ' → logprob: -17.625072479248047
    9. ''' → logprob: -18.250072479248047
    10. '   ' → logprob: -18.625072479248047

Token 689: ' "' (ID: 392)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.0023764846846461296
    2. 'rou' → logprob: -6.752376556396484
    3. ' red' → logprob: -6.752376556396484
    4. 'right' → logprob: -10.877376556396484
    5. ' rouge' → logprob: -11.627376556396484
    6. '   ' → logprob: -13.502376556396484
    7. 'orange' → logprob: -13.752376556396484
    8. 'blue' → logprob: -13.752376556396484
    9. 'redd' → logprob: -14.127376556396484
    10. 'ro' → logprob: -14.127376556396484

Token 690: 'rou' (ID: 691)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -3.8889261304575484e-06
    2. ' red' → logprob: -12.500003814697266
    3. 'rev' → logprob: -16.500003814697266
    4. 'right' → logprob: -17.625003814697266
    5. 're' → logprob: -18.500003814697266
    6. 'blue' → logprob: -18.875003814697266
    7. ' ' → logprob: -19.375003814697266
    8. 'rou' → logprob: -19.750003814697266
    9. 'S' → logprob: -20.125003814697266
    10. 'redd' → logprob: -20.250003814697266

Token 691: 'ge' (ID: 684)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04249102994799614
    2. 'ge' → logprob: -3.6674909591674805
    3. '_right' → logprob: -4.9174909591674805
    4. 'blue' → logprob: -5.2924909591674805
    5. 'right' → logprob: -6.4174909591674805
    6. 'ble' → logprob: -6.9174909591674805
    7. '_blue' → logprob: -7.5424909591674805
    8. 'te' → logprob: -8.66749095916748
    9. 'ue' → logprob: -9.29249095916748
    10. '_left' → logprob: -9.29249095916748

Token 692: '"' (ID: 1)
  Prédit: '_right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0007183883571997285
    2. 'right' → logprob: -8.625718116760254
    3. '+' → logprob: -8.750718116760254
    4. '+=' → logprob: -9.000718116760254
    5. ' +=' → logprob: -9.000718116760254
    6. '_RIGHT' → logprob: -10.250718116760254
    7. ' right' → logprob: -10.875718116760254
    8. '_red' → logprob: -11.000718116760254
    9. '           ' → logprob: -11.125718116760254
    10. '	right' → logprob: -12.000718116760254

Token 693: ' côté' (ID: 33533)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.009579592384397984
    2. ' +=' → logprob: -4.759579658508301
    3. '+' → logprob: -7.509579658508301
    4. 'right' → logprob: -9.0095796585083
    5. '           ' → logprob: -9.6345796585083
    6. 'red' → logprob: -9.7595796585083
    7. '          ' → logprob: -9.8845796585083
    8. '+="' → logprob: -10.1345796585083
    9. '_right' → logprob: -10.6345796585083
    10. ']+=' → logprob: -10.7595796585083

Token 694: ' droit' (ID: 29964)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.03903745859861374
    2. 'dro' → logprob: -3.4140374660491943
    3. 'd' → logprob: -5.289037227630615
    4. '_right' → logprob: -8.164037704467773
    5. ' droite' → logprob: -11.789037704467773
    6. ' right' → logprob: -11.789037704467773
    7. 'Right' → logprob: -11.914037704467773
    8. ' droit' → logprob: -12.414037704467773
    9. 'drop' → logprob: -12.539037704467773
    10. 'dre' → logprob: -12.789037704467773

Token 695: '
' (ID: 198)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.00589514197781682
    2. ' red' → logprob: -5.255895137786865
    3. '   ' → logprob: -7.880895137786865
    4. '           ' → logprob: -8.505895614624023
    5. '+=' → logprob: -9.630895614624023
    6. ' +=' → logprob: -12.255895614624023
    7. '       ' → logprob: -12.880895614624023
    8. '=' → logprob: -13.130895614624023
    9. '(red' → logprob: -13.505895614624023
    10. '+' → logprob: -14.130895614624023

Token 696: '           ' (ID: 352)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.0005607772618532181
    2. ' red' → logprob: -7.500560760498047
    3. '   ' → logprob: -12.000560760498047
    4. '           ' → logprob: -14.500560760498047
    5. '.red' → logprob: -14.875560760498047
    6. '_red' → logprob: -15.625560760498047
    7. '       ' → logprob: -15.875560760498047
    8. '+' → logprob: -16.500560760498047
    9. 'r' → logprob: -16.500560760498047
    10. 'redd' → logprob: -16.625560760498047

Token 697: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' (adapté à ' red') → logprob: -3.547789674485102e-05
    2. ' red' → logprob: -10.250035285949707
    3. '   ' → logprob: -21.000036239624023
    4. 'redd' → logprob: -21.250036239624023
    5. '_red' → logprob: -22.875036239624023
    6. ' ' → logprob: -23.125036239624023
    7. 'reds' → logprob: -23.875036239624023
    8. 'redi' → logprob: -24.250036239624023
    9. 'r' → logprob: -24.250036239624023
    10. '.red' → logprob: -24.500036239624023

Token 698: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -4.842555426876061e-06
    2. '_rev' → logprob: -12.375004768371582
    3. 'right' → logprob: -15.750004768371582
    4. '_' → logprob: -16.1250057220459
    5. '"_' → logprob: -16.2500057220459
    6. ''_' → logprob: -16.8750057220459
    7. ' _' → logprob: -17.2500057220459
    8. '_left' → logprob: -17.6250057220459
    9. '_r' → logprob: -17.6250057220459
    10. '_RIGHT' → logprob: -18.1250057220459

Token 699: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759632587432861
    2. '+=' → logprob: -0.8259632587432861
    3. '+='' → logprob: -11.700963020324707
    4. '+' → logprob: -11.950963020324707
    5. ' +' → logprob: -12.450963020324707
    6. '+="' → logprob: -13.075963020324707
    7. ']+=' → logprob: -13.200963020324707
    8. '<|end|>' → logprob: -14.450963020324707
    9. '=' → logprob: -14.950963020324707
    10. '+=(' → logprob: -15.450963020324707

Token 700: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0001234428636962548
    2. ' S' → logprob: -9.000123023986816
    3. '<|end|>' → logprob: -17.500123977661133
    4. 's' → logprob: -19.000123977661133
    5. ' ' → logprob: -20.000123977661133
    6. '(S' → logprob: -20.375123977661133
    7. '>S' → logprob: -20.375123977661133
    8. '	S' → logprob: -20.625123977661133
    9. '[' → logprob: -20.750123977661133
    10. '_S' → logprob: -21.625123977661133

Token 701: '_rev' (ID: 99394)
  Prédit: '_rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rev' → logprob: -0.00029708960209973156
    2. 'rev' → logprob: -8.125297546386719
    3. '[j' → logprob: -14.250297546386719
    4. 'Rev' → logprob: -15.750297546386719
    5. '[' → logprob: -16.12529754638672
    6. '.rev' → logprob: -16.62529754638672
    7. '_REV' → logprob: -16.87529754638672
    8. ' rev' → logprob: -18.37529754638672
    9. '```' → logprob: -18.75029754638672
    10. '_rep' → logprob: -19.12529754638672

Token 702: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.25
    3. 'j' → logprob: -16.0
    4. ' [' → logprob: -17.5
    5. '```' → logprob: -17.625
    6. '   ' → logprob: -18.875
    7. '[J' → logprob: -20.0
    8. '[
' → logprob: -20.25
    9. '[js' → logprob: -21.0
    10. ' ' → logprob: -21.125

Token 703: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5112122297286987
    2. ']' → logprob: -1.0112122297286987
    3. '<|end|>' → logprob: -3.3862123489379883
    4. '}' → logprob: -6.636212348937988
    5. '       ' → logprob: -7.136212348937988
    6. '<|end|>' → logprob: -9.636212348937988
    7. '   ' → logprob: -9.886212348937988
    8. '```' → logprob: -9.886212348937988
    9. '[' → logprob: -10.136212348937988
    10. '']' → logprob: -10.261212348937988

Token 704: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38983914256095886
    2. 'left' → logprob: -1.1398391723632812
    3. ' left' → logprob: -6.014839172363281
    4. 'red' → logprob: -7.889839172363281
    5. '```' → logprob: -9.264839172363281
    6. '[left' → logprob: -11.014839172363281
    7. '	left' → logprob: -11.889839172363281
    8. '    
' → logprob: -12.139839172363281
    9. ' ' → logprob: -12.264839172363281
    10. ' red' → logprob: -12.389839172363281

Token 705: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.033731453120708466
    2. '   ' → logprob: -3.408731460571289
    3. 'red' → logprob: -10.408731460571289
    4. '#' (adapté à ' #') → logprob: -10.408731460571289
    5. ' left' → logprob: -11.033731460571289
    6. '    
' → logprob: -12.908731460571289
    7. '[left' → logprob: -12.908731460571289
    8. '	left' → logprob: -13.033731460571289
    9. 'right' → logprob: -13.908731460571289
    10. '(left' → logprob: -15.033731460571289

Token 706: ' On' (ID: 2160)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0002342912630410865
    2. '#' → logprob: -8.500234603881836
    3. '   ' → logprob: -10.625234603881836
    4. 'red' → logprob: -12.375234603881836
    5. ' left' → logprob: -13.750234603881836
    6. 'right' → logprob: -14.125234603881836
    7. '	left' → logprob: -16.500234603881836
    8. ' ' → logprob: -16.625234603881836
    9. '    
' → logprob: -16.625234603881836
    10. 'from' → logprob: -17.000234603881836

Token 707: ' combine' (ID: 21700)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.23460257053375244
    2. '   ' → logprob: -2.234602451324463
    3. '.append' → logprob: -2.734602451324463
    4. ' left' → logprob: -3.734602451324463
    5. '#' → logprob: -5.234602451324463
    6. '.left' → logprob: -5.859602451324463
    7. 'red' → logprob: -5.984602451324463
    8. 'append' → logprob: -7.359602451324463
    9. 'g' → logprob: -7.734602451324463
    10. ' gauche' → logprob: -7.734602451324463

Token 708: ' les' (ID: 1341)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.06921298056840897
    2. '(left' → logprob: -3.1942129135131836
    3. '(red' → logprob: -4.444212913513184
    4. 'red' → logprob: -4.444212913513184
    5. ' left' → logprob: -6.944212913513184
    6. ' (' → logprob: -8.069212913513184
    7. '(
' → logprob: -8.194212913513184
    8. '(' → logprob: -8.319212913513184
    9. '   ' → logprob: -8.694212913513184
    10. ' red' → logprob: -8.819212913513184

Token 709: ' deux' (ID: 10301)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.01775008998811245
    2. 'left' → logprob: -4.517750263214111
    3. ' red' → logprob: -5.517750263214111
    4. 'blue' → logprob: -6.892750263214111
    5. '_red' → logprob: -7.767750263214111
    6. 'right' → logprob: -8.017749786376953
    7. '_left' → logprob: -8.267749786376953
    8. 'strings' → logprob: -8.517749786376953
    9. 'g' → logprob: -8.767749786376953
    10. '#' → logprob: -10.517749786376953

Token 710: ' groupes' (ID: 72206)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.21748751401901245
    2. '_left' → logprob: -1.7174875736236572
    3. 'list' → logprob: -5.592487335205078
    4. ' left' → logprob: -5.842487335205078
    5. '.append' → logprob: -5.967487335205078
    6. 'for' → logprob: -6.342487335205078
    7. '_list' → logprob: -7.217487335205078
    8. 'if' → logprob: -7.592487335205078
    9. 'g' → logprob: -7.842487335205078
    10. 'string' → logprob: -7.967487335205078

Token 711: ' ("' (ID: 7109)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2163050174713135
    2. 'left' → logprob: -1.2163050174713135
    3. 'if' → logprob: -1.3413050174713135
    4. 'red' → logprob: -2.3413050174713135
    5. ' if' → logprob: -4.216304779052734
    6. ' =' → logprob: -4.716304779052734
    7. ' red' → logprob: -5.466304779052734
    8. '
' → logprob: -5.466304779052734
    9. ' left' → logprob: -5.591304779052734
    10. ' and' → logprob: -5.716304779052734

Token 712: 'rou' (ID: 691)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.05406688153743744
    2. ' red' → logprob: -3.9290668964385986
    3. 'left' → logprob: -4.1790666580200195
    4. 'rou' → logprob: -4.4290666580200195
    5. ' rouge' → logprob: -5.9290666580200195
    6. '_red' → logprob: -7.1790666580200195
    7. 'right' → logprob: -7.3040666580200195
    8. '_' → logprob: -7.9290666580200195
    9. '_left' → logprob: -8.55406665802002
    10. ' left' → logprob: -8.67906665802002

Token 713: 'ge' (ID: 684)
  Prédit: 'ge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ge' → logprob: -9.674858301877975e-05
    2. 'g' → logprob: -9.750096321105957
    3. '_' → logprob: -11.250096321105957
    4. 'ges' → logprob: -11.500096321105957
    5. 'e' → logprob: -12.500096321105957
    6. '```' → logprob: -13.000096321105957
    7. '_ge' → logprob: -13.375096321105957
    8. '_red' → logprob: -13.750096321105957
    9. '``' → logprob: -13.875096321105957
    10. '\' → logprob: -13.875096321105957

Token 714: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.7616620063781738
    2. '_left' → logprob: -1.0116620063781738
    3. 'left' → logprob: -3.011662006378174
    4. '_' → logprob: -3.761662006378174
    5. '_red' → logprob: -4.011662006378174
    6. '+' → logprob: -4.011662006378174
    7. ')' → logprob: -4.136662006378174
    8. ' +' → logprob: -4.636662006378174
    9. ',' → logprob: -5.511662006378174
    10. '+")' → logprob: -5.636662006378174

Token 715: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5175819993019104
    2. ' +' → logprob: -1.3925819396972656
    3. '+' → logprob: -2.2675819396972656
    4. ',' → logprob: -3.5175819396972656
    5. '   ' → logprob: -5.517581939697266
    6. 'g' → logprob: -5.892581939697266
    7. 'left' → logprob: -5.892581939697266
    8. '_left' → logprob: -5.892581939697266
    9. ' )' → logprob: -6.517581939697266
    10. ' ,' → logprob: -6.642581939697266

Token 716: ' "' (ID: 392)
  Prédit: '_ble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ble' → logprob: -0.8396891951560974
    2. '"' → logprob: -1.7146892547607422
    3. 'ble' → logprob: -1.7146892547607422
    4. '_blue' → logprob: -2.839689254760742
    5. ')' → logprob: -3.339689254760742
    6. 'blue' → logprob: -3.339689254760742
    7. '_left' → logprob: -3.589689254760742
    8. '_right' → logprob: -4.464689254760742
    9. ' bleu' → logprob: -4.464689254760742
    10. '_g' → logprob: -4.714689254760742

Token 717: 'ble' (ID: 1124)
  Prédit: 'ble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ble' → logprob: -0.21327710151672363
    2. 'g' → logprob: -2.5882771015167236
    3. 'left' → logprob: -2.5882771015167236
    4. 'rou' → logprob: -4.5882768630981445
    5. 'dro' → logprob: -4.7132768630981445
    6. 'blue' → logprob: -4.8382768630981445
    7. '_ble' → logprob: -5.4632768630981445
    8. '_left' → logprob: -5.7132768630981445
    9. '```' → logprob: -6.3382768630981445
    10. 'right' → logprob: -7.0882768630981445

Token 718: 'u' (ID: 84)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.31686151027679443
    2. '_right' → logprob: -1.3168615102767944
    3. 't' → logprob: -6.816861629486084
    4. 'right' → logprob: -7.191861629486084
    5. 'g' → logprob: -7.566861629486084
    6. 'e' → logprob: -8.066861152648926
    7. 'left' → logprob: -8.441861152648926
    8. 'r' → logprob: -8.691861152648926
    9. '_' → logprob: -8.941861152648926
    10. 'f' → logprob: -9.066861152648926

Token 719: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.1467198133468628
    2. '_left' → logprob: -2.1467199325561523
    3. '_right' → logprob: -4.771719932556152
    4. '_' → logprob: -5.396719932556152
    5. ')' → logprob: -6.396719932556152
    6. '")
' → logprob: -6.896719932556152
    7. 'left' → logprob: -7.021719932556152
    8. ' =' → logprob: -8.021719932556152
    9. ')_' → logprob: -8.021719932556152
    10. '_g' → logprob: -8.146719932556152

Token 720: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17427651584148407
    2. 'left' → logprob: -2.67427659034729
    3. 'red' → logprob: -2.67427659034729
    4. ' if' → logprob: -5.549276351928711
    5. ' red' → logprob: -5.799276351928711
    6. 'if' → logprob: -5.799276351928711
    7. '[left' → logprob: -5.924276351928711
    8. ' left' → logprob: -6.299276351928711
    9. '<|end|>' → logprob: -6.549276351928711
    10. ' =' → logprob: -7.049276351928711

Token 721: ' la' (ID: 557)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.2652868330478668
    2. 'red' → logprob: -2.015286922454834
    3. 'g' → logprob: -2.515286922454834
    4. 'la' → logprob: -4.390286922454834
    5. ' gauche' → logprob: -5.640286922454834
    6. 'c' → logprob: -6.640286922454834
    7. 'right' → logprob: -7.265286922454834
    8. 'S' → logprob: -8.390286445617676
    9. 'dro' → logprob: -8.515286445617676
    10. 'blue' → logprob: -9.515286445617676

Token 722: ' moitié' (ID: 93216)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.018740016967058182
    2. 'g' → logprob: -4.018740177154541
    3. 'c' → logprob: -7.893740177154541
    4. '#' → logprob: -9.768739700317383
    5. 'list' → logprob: -10.143739700317383
    6. ' gauche' → logprob: -10.768739700317383
    7. 'part' → logprob: -11.018739700317383
    8. 'right' → logprob: -11.143739700317383
    9. 'half' → logprob: -11.268739700317383
    10. 'mo' → logprob: -11.393739700317383

Token 723: ' gauche' (ID: 58367)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.1390446573495865
    2. 'g' → logprob: -2.389044761657715
    3. '_g' → logprob: -4.139044761657715
    4. '   ' → logprob: -5.014044761657715
    5. ' gauche' → logprob: -5.139044761657715
    6. '_left' → logprob: -5.514044761657715
    7. 'gau' → logprob: -6.389044761657715
    8. 'right' → logprob: -6.514044761657715
    9. '#' → logprob: -7.139044761657715
    10. 'G' → logprob: -8.139044761657715

Token 724: ' sépar' (ID: 97160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08891046792268753
    2. 'left' → logprob: -2.5889105796813965
    3. '[left' → logprob: -5.8389105796813965
    4. '.append' → logprob: -5.9639105796813965
    5. ',' → logprob: -6.8389105796813965
    6. 'red' → logprob: -7.5889105796813965
    7. ' and' → logprob: -7.7139105796813965
    8. ' left' → logprob: -7.7139105796813965
    9. ',left' → logprob: -7.7139105796813965
    10. ')' → logprob: -7.8389105796813965

Token 725: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.8004560470581055
    2. 'és' → logprob: -0.9254560470581055
    3. 'ée' → logprob: -2.1754560470581055
    4. 'e' → logprob: -3.9254560470581055
    5. 'er' → logprob: -4.5504560470581055
    6. 'ées' → logprob: -5.6754560470581055
    7. '+' → logprob: -6.1754560470581055
    8. 'ed' → logprob: -6.3004560470581055
    9. 'ate' → logprob: -6.9254560470581055
    10. 'ateur' → logprob: -7.8004560470581055

Token 726: ' par' (ID: 686)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.5374630093574524
    2. '+' → logprob: -1.5374629497528076
    3. ''' → logprob: -2.7874629497528076
    4. '('' → logprob: -3.0374629497528076
    5. '=' → logprob: -3.6624629497528076
    6. '#' → logprob: -3.7874629497528076
    7. ')' → logprob: -4.912463188171387
    8. ' by' → logprob: -5.287463188171387
    9. '"' → logprob: -5.287463188171387
    10. '   ' → logprob: -5.662463188171387

Token 727: ' "|"' (ID: 147506)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.2966190278530121
    2. ''' → logprob: -1.5466190576553345
    3. '"' → logprob: -3.921618938446045
    4. ''une' → logprob: -4.546618938446045
    5. 'un' → logprob: -5.046618938446045
    6. ''espace' → logprob: -6.671618938446045
    7. ''\' → logprob: -6.796618938446045
    8. 'a' → logprob: -7.171618938446045
    9. 'space' → logprob: -7.421618938446045
    10. ''s' → logprob: -7.546618938446045

Token 728: ' et' (ID: 859)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5274345278739929
    2. '   ' → logprob: -0.9024345278739929
    3. ' left' → logprob: -6.902434349060059
    4. ',' → logprob: -7.027434349060059
    5. '[left' → logprob: -7.652434349060059
    6. ',left' → logprob: -7.777434349060059
    7. '+' → logprob: -8.027434349060059
    8. '(left' → logprob: -8.402434349060059
    9. ')' → logprob: -8.902434349060059
    10. 'red' → logprob: -9.402434349060059

Token 729: ' on' (ID: 402)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.23605598509311676
    2. ''' → logprob: -2.236056089401245
    3. '#' → logprob: -3.486056089401245
    4. '",' → logprob: -4.611055850982666
    5. '|' → logprob: -4.736055850982666
    6. '"|' → logprob: -4.736055850982666
    7. '   ' → logprob: -5.111055850982666
    8. 'red' → logprob: -5.361055850982666
    9. '","' → logprob: -5.611055850982666
    10. 'left' → logprob: -5.861055850982666

Token 730: ' les' (ID: 1341)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.018377143889665604
    2. 'append' → logprob: -4.393377304077148
    3. 'left' → logprob: -5.518377304077148
    4. ')' → logprob: -7.643377304077148
    5. 'red' → logprob: -7.768377304077148
    6. '#' → logprob: -8.393377304077148
    7. '.' → logprob: -8.643377304077148
    8. 'right' → logprob: -8.768377304077148
    9. 'continue' → logprob: -9.393377304077148
    10. '   ' → logprob: -10.018377304077148

Token 731: ' ajoute' (ID: 91611)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04522419720888138
    2. 'append' → logprob: -3.170224189758301
    3. 'aj' → logprob: -6.295224189758301
    4. 'app' → logprob: -8.2952241897583
    5. '#' → logprob: -10.4202241897583
    6. 'red' → logprob: -10.5452241897583
    7. 'left' → logprob: -10.7952241897583
    8. 'ap' → logprob: -11.7952241897583
    9. '.extend' → logprob: -11.7952241897583
    10. '.add' → logprob: -12.4202241897583

Token 732: ' à' (ID: 1221)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.23274870216846466
    2. '   ' → logprob: -2.2327487468719482
    3. 'left' → logprob: -2.4827487468719482
    4. 'to' → logprob: -4.232748508453369
    5. '(' → logprob: -7.232748508453369
    6. ' to' → logprob: -7.482748508453369
    7. ' left' → logprob: -8.732748985290527
    8. ' à' → logprob: -8.857748985290527
    9. '(red' → logprob: -8.857748985290527
    10. '[left' → logprob: -9.357748985290527

Token 733: ' la' (ID: 557)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -2.1008713702030946e-06
    2. ' left' → logprob: -13.750001907348633
    3. 'right' → logprob: -13.875001907348633
    4. 'lef' → logprob: -17.875001907348633
    5. '[left' → logprob: -18.750001907348633
    6. 'le' → logprob: -19.125001907348633
    7. '	left' → logprob: -19.750001907348633
    8. 'la' → logprob: -20.875001907348633
    9. '(left' → logprob: -21.000001907348633
    10. 'the' → logprob: -21.125001907348633

Token 734: ' liste' (ID: 31719)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -5.512236498361744e-07
    2. 'right' → logprob: -15.125000953674316
    3. ' left' → logprob: -15.750000953674316
    4. 'lef' → logprob: -17.375
    5. 'list' → logprob: -19.125
    6. '[left' → logprob: -19.625
    7. '#' → logprob: -19.75
    8. '   ' → logprob: -20.0
    9. '	left' → logprob: -20.75
    10. '```' → logprob: -20.75

Token 735: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0005569627974182367
    2. '(left' → logprob: -7.500556945800781
    3. '[left' → logprob: -12.875556945800781
    4. ' left' → logprob: -14.500556945800781
    5. '   ' → logprob: -14.750556945800781
    6. 'lef' → logprob: -15.375556945800781
    7. 'right' → logprob: -16.87555694580078
    8. '	left' → logprob: -16.87555694580078
    9. '(' → logprob: -17.00055694580078
    10. '.left' → logprob: -17.12555694580078

Token 736: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.9361264946837764e-07
    2. 'left' → logprob: -16.125
    3. 'liste' → logprob: -20.0
    4. 'lista' → logprob: -22.875
    5. '_list' → logprob: -23.625
    6. '_left' → logprob: -23.625
    7. 'lists' → logprob: -23.625
    8. 'lis' → logprob: -23.625
    9. '```' → logprob: -24.125
    10. ' list' → logprob: -24.25

Token 737: '
' (ID: 198)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0009605350787751377
    2. '   ' → logprob: -7.000960350036621
    3. ' left' → logprob: -10.625960350036621
    4. '[left' → logprob: -10.875960350036621
    5. '.left' → logprob: -13.625960350036621
    6. '	left' → logprob: -13.750960350036621
    7. '(left' → logprob: -13.750960350036621
    8. 'red' → logprob: -14.375960350036621
    9. ',left' → logprob: -14.500960350036621
    10. ')' → logprob: -14.750960350036621

Token 738: '   ' (ID: 271)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.03828085958957672
    2. '   ' → logprob: -3.288280963897705
    3. ' left' → logprob: -8.413280487060547
    4. '[left' → logprob: -11.788280487060547
    5. '	left' → logprob: -12.163280487060547
    6. ',left' → logprob: -13.538280487060547
    7. '(left' → logprob: -13.663280487060547
    8. '.left' → logprob: -14.288280487060547
    9. '    
' → logprob: -14.913280487060547
    10. '_left' → logprob: -15.788280487060547

Token 739: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -8.77627644513268e-06
    2. '   ' → logprob: -12.000008583068848
    3. ' left' → logprob: -13.000008583068848
    4. 'lef' → logprob: -15.875008583068848
    5. '[left' → logprob: -16.750009536743164
    6. '.left' → logprob: -17.625009536743164
    7. '	left' → logprob: -18.125009536743164
    8. '(left' → logprob: -19.500009536743164
    9. 'red' → logprob: -19.500009536743164
    10. '
' → logprob: -19.500009536743164

Token 740: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: 0.0
    2. '_list' → logprob: -20.125
    3. 'lis' → logprob: -21.375
    4. 'left' → logprob: -21.875
    5. 'liste' → logprob: -22.125
    6. 'lista' → logprob: -23.25
    7. 'lists' → logprob: -23.25
    8. 'li' → logprob: -24.0
    9. '```' → logprob: -24.375
    10. 'lst' → logprob: -24.5

Token 741: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.8087270038668066e-05
    2. '.' → logprob: -10.500027656555176
    3. '.app' → logprob: -15.125027656555176
    4. '.ap' → logprob: -16.125028610229492
    5. 'append' → logprob: -16.500028610229492
    6. ' .' → logprob: -17.000028610229492
    7. '.add' → logprob: -17.250028610229492
    8. '.Append' → logprob: -18.000028610229492
    9. '.extend' → logprob: -18.875028610229492
    10. '.insert' → logprob: -19.125028610229492

Token 742: '("' (ID: 568)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.25256380438804626
    2. '(red' → logprob: -1.5025638341903687
    3. '(f' → logprob: -8.0025634765625
    4. '(' → logprob: -8.1275634765625
    5. '(('' → logprob: -13.0025634765625
    6. '(("' → logprob: -14.3775634765625
    7. '(((' → logprob: -14.3775634765625
    8. '(re' → logprob: -15.3775634765625
    9. '(
' → logprob: -15.6275634765625
    10. '(r' → logprob: -16.0025634765625

Token 743: '".' (ID: 4050)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.00607087928801775
    2. '(red' → logprob: -5.131071090698242
    3. 'f' → logprob: -9.256071090698242
    4. ' red' → logprob: -10.881071090698242
    5. '(f' → logprob: -11.131071090698242
    6. '(' → logprob: -11.381071090698242
    7. 'blue' → logprob: -14.631071090698242
    8. 'reds' → logprob: -15.381071090698242
    9. '{' → logprob: -15.881071090698242
    10. '((' → logprob: -15.881071090698242

Token 744: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.2200749754119897e-06
    2. 'format' → logprob: -13.375001907348633
    3. 'red' → logprob: -15.375001907348633
    4. ' join' → logprob: -15.375001907348633
    5. 'strip' → logprob: -16.000001907348633
    6. 'encode' → logprob: -17.500001907348633
    7. 'concat' → logprob: -17.750001907348633
    8. '+' → logprob: -18.375001907348633
    9. 'left' → logprob: -18.375001907348633
    10. 'replace' → logprob: -18.500001907348633

Token 745: '(red' (ID: 83440)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.011826246976852417
    2. '(red' → logprob: -5.386826038360596
    3. '(['' → logprob: -5.761826038360596
    4. '((' → logprob: -6.011826038360596
    5. '[' → logprob: -7.011826038360596
    6. '(["' → logprob: -8.136826515197754
    7. '[(' → logprob: -8.761826515197754
    8. '(' → logprob: -9.636826515197754
    9. '([
' → logprob: -9.761826515197754
    10. '(('' → logprob: -10.011826515197754

Token 746: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -1.9504606825648807e-05
    2. '_le' → logprob: -12.000019073486328
    3. 'left' → logprob: -12.250019073486328
    4. '[left' → logprob: -12.250019073486328
    5. '_' → logprob: -12.875019073486328
    6. '[_' → logprob: -15.750019073486328
    7. '_right' → logprob: -15.875019073486328
    8. '[' → logprob: -16.125019073486328
    9. '_Left' → logprob: -16.250019073486328
    10. 'Left' → logprob: -16.625019073486328

Token 747: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12899580597877502
    2. ')' → logprob: -2.753995895385742
    3. ' +' → logprob: -3.628995895385742
    4. '+'' → logprob: -4.253995895385742
    5. '+"' → logprob: -4.628995895385742
    6. ')+' → logprob: -5.128995895385742
    7. ')+'' → logprob: -8.003995895385742
    8. ')+"' → logprob: -8.753995895385742
    9. ',' → logprob: -9.253995895385742
    10. '|' → logprob: -9.753995895385742

Token 748: ' "|"' (ID: 147506)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.18993951380252838
    2. ''' → logprob: -2.064939498901367
    3. '"|' → logprob: -3.189939498901367
    4. ' "|"' → logprob: -5.814939498901367
    5. '|' → logprob: -6.814939498901367
    6. '("|' → logprob: -7.689939498901367
    7. '['' → logprob: -8.814939498901367
    8. '["' → logprob: -8.939939498901367
    9. '[' → logprob: -10.314939498901367
    10. '('|' → logprob: -10.439939498901367

Token 749: ' +' (ID: 659)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.006758709903806448
    2. '+' → logprob: -5.256758689880371
    3. ' blue' → logprob: -7.006758689880371
    4. ' +' → logprob: -7.506758689880371
    5. '""' → logprob: -10.506758689880371
    6. ')' → logprob: -11.131758689880371
    7. '"' → logprob: -12.131758689880371
    8. ' ' → logprob: -12.256758689880371
    9. '"+"' → logprob: -12.506758689880371
    10. ')+' → logprob: -13.506758689880371

Token 750: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.0004886920796707273
    2. ' blue' → logprob: -7.625488758087158
    3. '   ' → logprob: -15.50048828125
    4. ' ' → logprob: -15.62548828125
    5. 'ble' → logprob: -15.87548828125
    6. 'blu' → logprob: -17.37548828125
    7. 'b' → logprob: -17.87548828125
    8. 'Blue' → logprob: -17.87548828125
    9. '  ' → logprob: -17.87548828125
    10. '.blue' → logprob: -18.87548828125

Token 751: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -3.292907877039397e-06
    2. 'left' → logprob: -12.75000286102295
    3. '_right' → logprob: -15.25000286102295
    4. '_' → logprob: -17.625003814697266
    5. '_list' → logprob: -18.500003814697266
    6. '"_' → logprob: -18.875003814697266
    7. ')_' → logprob: -19.000003814697266
    8. '_LEFT' → logprob: -19.125003814697266
    9. '_le' → logprob: -19.500003814697266
    10. '[left' → logprob: -19.750003814697266

Token 752: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008429800509475172
    2. ')' → logprob: -7.250843048095703
    3. '))
' → logprob: -9.125843048095703
    4. '"))' → logprob: -11.500843048095703
    5. ' ))' → logprob: -12.000843048095703
    6. ')))' → logprob: -13.000843048095703
    7. '()))' → logprob: -13.500843048095703
    8. '))
' → logprob: -14.000843048095703
    9. '))

' → logprob: -14.125843048095703
    10. ''))' → logprob: -14.375843048095703

Token 753: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3900507092475891
    2. '   ' → logprob: -1.2650506496429443
    3. ' for' → logprob: -3.6400506496429443
    4. ')' → logprob: -4.890050888061523
    5. '<|end|>' → logprob: -5.390050888061523
    6. '    
' → logprob: -6.765050888061523
    7. 'right' → logprob: -7.890050888061523
    8. '#' → logprob: -8.640050888061523
    9. ' ' → logprob: -8.765050888061523
    10. '
' → logprob: -9.015050888061523

Token 754: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17617343366146088
    2. 'for' → logprob: -2.176173448562622
    3. 'right' → logprob: -3.176173448562622
    4. ' for' → logprob: -5.426173210144043
    5. ' right' → logprob: -7.301173210144043
    6. ')' → logprob: -7.551173210144043
    7. '    
' → logprob: -8.426173210144043
    8. '[right' → logprob: -8.926173210144043
    9. '#' (adapté à ' #') → logprob: -9.176173210144043
    10. ' ' → logprob: -9.926173210144043

Token 755: ' On' (ID: 2160)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -3.726595241460018e-05
    2. '   ' → logprob: -10.87503719329834
    3. ' right' → logprob: -11.00003719329834
    4. 'left' → logprob: -13.62503719329834
    5. '[right' → logprob: -16.250038146972656
    6. 'append' → logprob: -16.375038146972656
    7. '	right' → logprob: -16.625038146972656
    8. '#' → logprob: -17.125038146972656
    9. 'for' → logprob: -17.500038146972656
    10. '    
' → logprob: -18.125038146972656

Token 756: ' combine' (ID: 21700)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.102005235850811
    2. 'append' → logprob: -2.3520052433013916
    3. '.' → logprob: -6.3520050048828125
    4. ' append' → logprob: -10.477005004882812
    5. ' .' → logprob: -11.102005004882812
    6. 'app' → logprob: -12.102005004882812
    7. 'appen' → logprob: -12.977005004882812
    8. '.extend' → logprob: -13.727005004882812
    9. '_append' → logprob: -14.602005004882812
    10. '	append' → logprob: -14.602005004882812

Token 757: ' les' (ID: 1341)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.020765047520399094
    2. '(' → logprob: -3.8957650661468506
    3. '(red' → logprob: -9.64576530456543
    4. '("("' → logprob: -10.14576530456543
    5. '(right' → logprob: -10.52076530456543
    6. '"' → logprob: -10.77076530456543
    7. '(""' → logprob: -11.14576530456543
    8. '(left' → logprob: -11.14576530456543
    9. 'left' → logprob: -11.27076530456543
    10. '(
' → logprob: -12.02076530456543

Token 758: ' deux' (ID: 10301)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.042359065264463425
    2. 'right' → logprob: -3.5423591136932373
    3. '".' → logprob: -5.792358875274658
    4. '.' → logprob: -6.167358875274658
    5. ' "".' → logprob: -6.167358875274658
    6. 'left' → logprob: -6.167358875274658
    7. '("").' → logprob: -7.292358875274658
    8. '("' → logprob: -7.417358875274658
    9. '(' → logprob: -7.542358875274658
    10. '""' → logprob: -8.167359352111816

Token 759: ' groupes' (ID: 72206)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.441289484500885
    2. 'right' → logprob: -1.5662894248962402
    3. '.' → logprob: -2.0662894248962402
    4. '".' → logprob: -4.94128942489624
    5. '.join' → logprob: -5.56628942489624
    6. 'append' → logprob: -6.06628942489624
    7. '"' → logprob: -6.81628942489624
    8. '(".' → logprob: -7.06628942489624
    9. '.right' → logprob: -7.06628942489624
    10. 'left' → logprob: -7.06628942489624

Token 760: ' ("' (ID: 7109)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.19198931753635406
    2. '.' → logprob: -1.8169893026351929
    3. 'right' → logprob: -5.191989421844482
    4. '<|end|>' → logprob: -6.441989421844482
    5. '+' → logprob: -7.441989421844482
    6. '("' → logprob: -7.566989421844482
    7. '   ' → logprob: -7.566989421844482
    8. '("."' → logprob: -7.691989421844482
    9. '("("' → logprob: -7.816989421844482
    10. '"' → logprob: -8.066988945007324

Token 761: 'ble' (ID: 1124)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014844715595245361
    2. 'right' → logprob: -5.01484489440918
    3. 'red' → logprob: -5.26484489440918
    4. '""' → logprob: -6.51484489440918
    5. ' "".' → logprob: -6.88984489440918
    6. '''.' → logprob: -8.76484489440918
    7. '".' → logprob: -9.51484489440918
    8. '")' → logprob: -9.63984489440918
    9. '").' → logprob: -10.26484489440918
    10. '",".' → logprob: -11.01484489440918

Token 762: 'u' (ID: 84)
  Prédit: '_right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.00410867715254426
    2. 'right' → logprob: -5.629108905792236
    3. '"_' → logprob: -8.129108428955078
    4. '"' → logprob: -8.879108428955078
    5. '_' → logprob: -10.754108428955078
    6. '_red' → logprob: -11.504108428955078
    7. '_left' → logprob: -11.629108428955078
    8. 'blue' → logprob: -11.754108428955078
    9. '_blue' → logprob: -11.754108428955078
    10. ''_' → logprob: -12.004108428955078

Token 763: '"' (ID: 1)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11912655085325241
    2. ' +' → logprob: -2.244126558303833
    3. '_right' → logprob: -5.619126319885254
    4. 'right' → logprob: -6.119126319885254
    5. '_' → logprob: -8.494126319885254
    6. ')' → logprob: -9.119126319885254
    7. '+"' → logprob: -10.119126319885254
    8. '[' → logprob: -10.619126319885254
    9. ' right' → logprob: -11.119126319885254
    10. '+
' → logprob: -11.119126319885254

Token 764: ' et' (ID: 859)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25226926803588867
    2. '+' → logprob: -1.5022692680358887
    3. 'right' → logprob: -8.877269744873047
    4. '_right' → logprob: -8.877269744873047
    5. ')' → logprob: -11.002269744873047
    6. '+"' → logprob: -11.627269744873047
    7. '[' → logprob: -11.627269744873047
    8. '_' → logprob: -12.127269744873047
    9. '+
' → logprob: -12.252269744873047
    10. ' right' → logprob: -12.627269744873047

Token 765: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07329636812210083
    2. '"|' → logprob: -2.823296308517456
    3. 'red' → logprob: -5.323296546936035
    4. ' "".' → logprob: -5.698296546936035
    5. ' red' → logprob: -6.698296546936035
    6. '("|' → logprob: -7.698296546936035
    7. '""' → logprob: -7.823296546936035
    8. '|' → logprob: -8.198296546936035
    9. ' "|"' → logprob: -8.573296546936035
    10. '(red' → logprob: -8.948296546936035

Token 766: 'rou' (ID: 691)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6555584669113159
    2. '"|' → logprob: -0.9055584669113159
    3. 'red' → logprob: -2.6555585861206055
    4. ' "|"' → logprob: -6.2805585861206055
    5. '|' → logprob: -6.4055585861206055
    6. '("|' → logprob: -6.7805585861206055
    7. ' red' → logprob: -7.1555585861206055
    8. '(red' → logprob: -8.155558586120605
    9. 'right' → logprob: -8.280558586120605
    10. ''' → logprob: -9.530558586120605

Token 767: 'ge' (ID: 684)
  Prédit: '_right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.7342031598091125
    2. 'blue' → logprob: -0.8592031598091125
    3. 'right' → logprob: -2.6092031002044678
    4. '_blue' → logprob: -4.359203338623047
    5. 'ight' → logprob: -5.109203338623047
    6. '_left' → logprob: -7.109203338623047
    7. '"' → logprob: -7.234203338623047
    8. '"_' → logprob: -7.484203338623047
    9. 'red' → logprob: -7.859203338623047
    10. 'ght' → logprob: -8.359203338623047

Token 768: '")' (ID: 1405)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3971380293369293
    2. '_right' → logprob: -2.0221381187438965
    3. 'right' → logprob: -2.2721381187438965
    4. ' +' → logprob: -2.5221381187438965
    5. ')' → logprob: -5.5221381187438965
    6. '_' → logprob: -6.2721381187438965
    7. '+"' → logprob: -6.3971381187438965
    8. '"' → logprob: -7.0221381187438965
    9. '[right' → logprob: -7.0221381187438965
    10. ' right' → logprob: -8.022137641906738

Token 769: ' de' (ID: 334)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.21439523994922638
    2. 'right' → logprob: -2.21439528465271
    3. ')' → logprob: -3.46439528465271
    4. '.' → logprob: -4.214395046234131
    5. '   ' → logprob: -4.464395046234131
    6. '+' → logprob: -5.214395046234131
    7. 'append' → logprob: -5.339395046234131
    8. 'left' → logprob: -5.464395046234131
    9. '_right' → logprob: -5.964395046234131
    10. ').' → logprob: -6.339395046234131

Token 770: ' la' (ID: 557)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.13015085458755493
    2. 'right' → logprob: -2.13015079498291
    3. 'red' → logprob: -6.63015079498291
    4. '("' → logprob: -7.50515079498291
    5. ' "".' → logprob: -7.88015079498291
    6. '""' → logprob: -7.88015079498291
    7. 'blue' → logprob: -8.63015079498291
    8. '(right' → logprob: -9.13015079498291
    9. ' right' → logprob: -9.50515079498291
    10. '''.' → logprob: -9.50515079498291

Token 771: ' moitié' (ID: 93216)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.05759112909436226
    2. '"' → logprob: -2.932591199874878
    3. ' right' → logprob: -6.807590961456299
    4. '".' → logprob: -7.682590961456299
    5. 'left' → logprob: -8.682591438293457
    6. '(right' → logprob: -8.932591438293457
    7. '''.' → logprob: -9.182591438293457
    8. '("' → logprob: -9.307591438293457
    9. '.right' → logprob: -9.307591438293457
    10. ' "".' → logprob: -9.432591438293457

Token 772: ' droite' (ID: 61428)
  Prédit: '_right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.4296071529388428
    2. 'right' → logprob: -1.0546071529388428
    3. '+' → logprob: -8.304607391357422
    4. '_left' → logprob: -8.554607391357422
    5. 'left' → logprob: -9.054607391357422
    6. '[right' → logprob: -9.679607391357422
    7. '(right' → logprob: -9.804607391357422
    8. ' right' → logprob: -10.054607391357422
    9. '"' → logprob: -10.054607391357422
    10. '_' → logprob: -10.429607391357422

Token 773: ' sépar' (ID: 97160)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.009046572260558605
    2. '.' → logprob: -5.50904655456543
    3. 'append' → logprob: -5.88404655456543
    4. 'right' → logprob: -6.88404655456543
    5. '+' → logprob: -7.38404655456543
    6. '_right' → logprob: -8.13404655456543
    7. '_append' → logprob: -9.63404655456543
    8. '+=' → logprob: -10.25904655456543
    9. '_' → logprob: -10.38404655456543
    10. ' +=' → logprob: -11.00904655456543

Token 774: 'és' (ID: 1756)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.110142707824707
    2. 'par' → logprob: -1.235142707824707
    3. 'by' → logprob: -2.485142707824707
    4. '|' → logprob: -2.860142707824707
    5. 'er' → logprob: -2.985142707824707
    6. 'é' → logprob: -3.110142707824707
    7. 'e' → logprob: -3.610142707824707
    8. 'ée' → logprob: -3.985142707824707
    9. '"' → logprob: -4.110142707824707
    10. '("|' → logprob: -4.110142707824707

Token 775: ' par' (ID: 686)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0432414673268795
    2. '("|' → logprob: -3.793241500854492
    3. '+' → logprob: -4.918241500854492
    4. '(' → logprob: -5.043241500854492
    5. '("="' → logprob: -6.543241500854492
    6. '"' → logprob: -6.668241500854492
    7. '|' → logprob: -7.418241500854492
    8. '("")' → logprob: -7.668241500854492
    9. '("("' → logprob: -7.668241500854492
    10. 'blue' → logprob: -7.918241500854492

Token 776: ' "|"' (ID: 147506)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02366887964308262
    2. '"|' → logprob: -3.8986687660217285
    3. '("|' → logprob: -6.2736687660217285
    4. ' "|"' → logprob: -7.6486687660217285
    5. '|' → logprob: -8.023669242858887
    6. '""' → logprob: -8.523669242858887
    7. 'blue' → logprob: -8.523669242858887
    8. '","' → logprob: -12.023669242858887
    9. ' blue' → logprob: -12.273669242858887
    10. ''' → logprob: -12.523669242858887

Token 777: ' (' (ID: 350)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.01872890256345272
    2. '.' → logprob: -4.518728733062744
    3. 'right' → logprob: -5.893728733062744
    4. 'append' → logprob: -6.018728733062744
    5. '+' → logprob: -7.018728733062744
    6. '   ' → logprob: -7.643728733062744
    7. ')' → logprob: -8.518729209899902
    8. ').' → logprob: -8.893729209899902
    9. '+=' → logprob: -9.268729209899902
    10. 'blue' → logprob: -9.643729209899902

Token 778: 'l' (ID: 75)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0017262301407754421
    2. 'blue' → logprob: -7.251726150512695
    3. ' "".' → logprob: -7.751726150512695
    4. '""' → logprob: -7.751726150512695
    5. 'red' → logprob: -9.501726150512695
    6. '''.' → logprob: -10.751726150512695
    7. '")' → logprob: -11.376726150512695
    8. ' blue' → logprob: -11.751726150512695
    9. '").' → logprob: -12.126726150512695
    10. '   ' → logprob: -12.251726150512695

Token 779: ''ordre' (ID: 124753)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.29542407393455505
    2. 'e' → logprob: -2.045423984527588
    3. 'eft' → logprob: -3.420423984527588
    4. 'ed' → logprob: -4.045423984527588
    5. 'iste' → logprob: -4.045423984527588
    6. 'red' → logprob: -4.045423984527588
    7. 'blue' → logprob: -4.170423984527588
    8. '"' → logprob: -5.170423984527588
    9. 'eg' → logprob: -5.545423984527588
    10. 'right' → logprob: -5.795423984527588

Token 780: ' est' (ID: 893)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1557770073413849
    2. '=' → logprob: -2.5307769775390625
    3. 'right' → logprob: -3.5307769775390625
    4. ')' → logprob: -4.5307769775390625
    5. ' +' → logprob: -4.5307769775390625
    6. '+=' → logprob: -5.5307769775390625
    7. ' =' → logprob: -6.4057769775390625
    8. '")' → logprob: -6.5307769775390625
    9. 'red' → logprob: -6.6557769775390625
    10. '   ' → logprob: -7.0307769775390625

Token 781: ' invers' (ID: 38721)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.13873174786567688
    2. '"' → logprob: -2.7637317180633545
    3. '""' → logprob: -3.1387317180633545
    4. ' blue' → logprob: -4.138731956481934
    5. 'red' → logprob: -5.638731956481934
    6. '")' → logprob: -6.138731956481934
    7. ')' → logprob: -7.888731956481934
    8. ''' → logprob: -8.138731956481934
    9. '+' → logprob: -9.388731956481934
    10. ' ' → logprob: -9.638731956481934

Token 782: 'é' (ID: 377)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05856150761246681
    2. '=' → logprob: -3.8085615634918213
    3. ')' → logprob: -4.183561325073242
    4. 'red' → logprob: -5.683561325073242
    5. 'by' → logprob: -5.808561325073242
    6. 'join' → logprob: -5.933561325073242
    7. '"' → logprob: -6.183561325073242
    8. '")' → logprob: -7.183561325073242
    9. '+=' → logprob: -7.308561325073242
    10. 'é' → logprob: -7.308561325073242

Token 783: ' par' (ID: 686)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.0478641986846924
    2. '+' → logprob: -1.1728641986846924
    3. ')' → logprob: -1.4228641986846924
    4. ' +' → logprob: -3.2978641986846924
    5. 'blue' → logprob: -4.297863960266113
    6. '")' → logprob: -4.297863960266113
    7. '   ' → logprob: -4.297863960266113
    8. 'red' → logprob: -5.547863960266113
    9. '+")' → logprob: -5.672863960266113
    10. ')+' → logprob: -5.797863960266113

Token 784: ' rapport' (ID: 20847)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.13390573859214783
    2. '"' → logprob: -2.3839056491851807
    3. 'red' → logprob: -3.8839056491851807
    4. '""' → logprob: -4.75890588760376
    5. 'ble' → logprob: -6.38390588760376
    6. ' blue' → logprob: -7.38390588760376
    7. '")' → logprob: -7.38390588760376
    8. ''' → logprob: -7.88390588760376
    9. '''' → logprob: -9.133905410766602
    10. '"""' → logprob: -9.258905410766602

Token 785: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.674604058265686
    2. 'red' → logprob: -1.674604058265686
    3. '   ' → logprob: -1.799604058265686
    4. '"' → logprob: -2.0496039390563965
    5. 'right' → logprob: -2.1746039390563965
    6. 'blue' → logprob: -2.5496039390563965
    7. '+' → logprob: -2.6746039390563965
    8. '")' → logprob: -3.1746039390563965
    9. 'à' → logprob: -5.1746039390563965
    10. 'left' → logprob: -5.5496039390563965

Token 786: ' la' (ID: 557)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.5692236423492432
    2. '"' → logprob: -1.1942236423492432
    3. 'red' → logprob: -2.069223642349243
    4. ' blue' → logprob: -5.944223403930664
    5. ' red' → logprob: -7.069223403930664
    6. 'right' → logprob: -7.694223403930664
    7. '")' → logprob: -8.319223403930664
    8. '""' → logprob: -8.319223403930664
    9. 'ble' → logprob: -9.569223403930664
    10. ''' → logprob: -9.944223403930664

Token 787: ' gauche' (ID: 58367)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.3863997161388397
    2. 'blue' → logprob: -1.261399745941162
    3. 'right' → logprob: -3.886399745941162
    4. '"' → logprob: -4.261399745941162
    5. '")' → logprob: -6.886399745941162
    6. ' red' → logprob: -7.511399745941162
    7. 'left' → logprob: -8.261399269104004
    8. ' blue' → logprob: -8.386399269104004
    9. ''' → logprob: -9.511399269104004
    10. 'str' → logprob: -9.886399269104004

Token 788: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1084164381027222
    2. '+' → logprob: -1.1084164381027222
    3. 'right' → logprob: -1.3584164381027222
    4. ' +' → logprob: -3.2334165573120117
    5. '   ' → logprob: -3.4834165573120117
    6. '+")' → logprob: -5.608416557312012
    7. '")' → logprob: -5.858416557312012
    8. ')+' → logprob: -6.108416557312012
    9. '+)' → logprob: -7.483416557312012
    10. ',' → logprob: -7.858416557312012

Token 789: '   ' (ID: 271)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.007027934771031141
    2. '.append' → logprob: -5.007028102874756
    3. '.right' → logprob: -8.757027626037598
    4. '   ' → logprob: -10.007027626037598
    5. '[right' → logprob: -10.007027626037598
    6. ' right' → logprob: -11.007027626037598
    7. '(right' → logprob: -11.507027626037598
    8. '+' → logprob: -11.507027626037598
    9. 'append' → logprob: -11.757027626037598
    10. '.' → logprob: -12.007027626037598

Token 790: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.006860532332211733
    2. '   ' → logprob: -5.756860733032227
    3. '[right' → logprob: -6.256860733032227
    4. ')' → logprob: -6.506860733032227
    5. ' right' → logprob: -9.631860733032227
    6. '.right' → logprob: -10.006860733032227
    7. ',right' → logprob: -10.131860733032227
    8. '	right' → logprob: -10.381860733032227
    9. '(right' → logprob: -10.381860733032227
    10. ':right' → logprob: -11.381860733032227

Token 791: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.008129963040119e-06
    2. '_list' → logprob: -13.250003814697266
    3. '_right' → logprob: -14.375003814697266
    4. 'right' → logprob: -14.750003814697266
    5. 'liste' → logprob: -15.375003814697266
    6. 'l' → logprob: -15.750003814697266
    7. 'lis' → logprob: -15.875003814697266
    8. 'lists' → logprob: -16.125003814697266
    9. '_' → logprob: -16.375003814697266
    10. ')' → logprob: -16.375003814697266

Token 792: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00033593899570405483
    2. '.' → logprob: -8.000335693359375
    3. ' .' → logprob: -14.625335693359375
    4. 'append' → logprob: -16.750335693359375
    5. '.ap' → logprob: -17.375335693359375
    6. '.app' → logprob: -17.500335693359375
    7. '.extend' → logprob: -19.125335693359375
    8. '.Append' → logprob: -19.375335693359375
    9. '   ' → logprob: -21.125335693359375
    10. ' append' → logprob: -21.125335693359375

Token 793: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0006305903079919517
    2. '(' → logprob: -7.5006303787231445
    3. '(red' → logprob: -9.875630378723145
    4. '"' → logprob: -10.625630378723145
    5. '(""' → logprob: -14.375630378723145
    6. '(("' → logprob: -15.125630378723145
    7. '("("' → logprob: -15.125630378723145
    8. '(""+' → logprob: -15.375630378723145
    9. '(
' → logprob: -15.875630378723145
    10. '(","' → logprob: -16.37563133239746

Token 794: '".' (ID: 4050)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -5.097437315271236e-05
    2. ' "".' → logprob: -10.87505054473877
    3. 'red' → logprob: -11.12505054473877
    4. '''.' → logprob: -11.62505054473877
    5. '""' → logprob: -12.12505054473877
    6. 'blue' → logprob: -12.87505054473877
    7. '"",' → logprob: -16.250051498413086
    8. '",".' → logprob: -16.500051498413086
    9. '("' → logprob: -17.125051498413086
    10. '   ' → logprob: -17.250051498413086

Token 795: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.20161595940589905
    2. '"' → logprob: -1.7016159296035767
    3. '''.' → logprob: -9.201616287231445
    4. ' "".' → logprob: -9.326616287231445
    5. '.join' → logprob: -12.576616287231445
    6. '"|' → logprob: -13.076616287231445
    7. '",".' → logprob: -13.201616287231445
    8. '".' → logprob: -13.326616287231445
    9. '""' → logprob: -13.451616287231445
    10. '">' → logprob: -14.451616287231445

Token 796: '(' (ID: 7)
  Prédit: '(red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.004639219027012587
    2. '(' → logprob: -5.504639148712158
    3. 'red' → logprob: -7.504639148712158
    4. 'blue' → logprob: -11.629639625549316
    5. '((' → logprob: -14.754639625549316
    6. ' red' → logprob: -14.754639625549316
    7. '(re' → logprob: -16.254638671875
    8. '(right' → logprob: -17.004638671875
    9. '(bl' → logprob: -17.879638671875
    10. ')' → logprob: -17.879638671875

Token 797: 'blue' (ID: 18789)
  Prédit: 'blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.08923476189374924
    2. 'red' → logprob: -2.4642348289489746
    3. 'ble' → logprob: -8.714234352111816
    4. ' blue' → logprob: -9.589234352111816
    5. '(red' → logprob: -10.714234352111816
    6. '(' → logprob: -10.714234352111816
    7. ' red' → logprob: -11.464234352111816
    8. 'blu' → logprob: -12.589234352111816
    9. '"' → logprob: -13.589234352111816
    10. 'bl' → logprob: -14.964234352111816

Token 798: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -1.8789383830153383e-05
    2. '_' → logprob: -11.000019073486328
    3. '_left' → logprob: -14.875019073486328
    4. 'right' → logprob: -14.875019073486328
    5. '"_' → logprob: -15.000019073486328
    6. '_r' → logprob: -15.125019073486328
    7. '"' → logprob: -15.250019073486328
    8. ''_' → logprob: -15.750019073486328
    9. '_"' → logprob: -16.625019073486328
    10. '_red' → logprob: -16.875019073486328

Token 799: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759516358375549
    2. ' +' → logprob: -0.8259516358375549
    3. '+"' → logprob: -12.45095157623291
    4. ')' → logprob: -12.70095157623291
    5. '+
' → logprob: -12.95095157623291
    6. ')+' → logprob: -13.57595157623291
    7. '+)' → logprob: -14.70095157623291
    8. '+'' → logprob: -15.32595157623291
    9. ' +
' → logprob: -15.32595157623291
    10. ' ' → logprob: -15.32595157623291

Token 800: ' "|"' (ID: 147506)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.13003195822238922
    2. ' "|"' → logprob: -2.2550320625305176
    3. '"|' → logprob: -4.380032062530518
    4. ''' → logprob: -5.630032062530518
    5. '|' → logprob: -7.130032062530518
    6. '("|' → logprob: -9.88003158569336
    7. ' '' → logprob: -10.63003158569336
    8. '"+"' → logprob: -11.00503158569336
    9. ' ' → logprob: -11.13003158569336
    10. ' "|' → logprob: -11.13003158569336

Token 801: ' +' (ID: 659)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.005251187365502119
    2. ' red' → logprob: -5.255251407623291
    3. '+' → logprob: -11.755250930786133
    4. 'right' → logprob: -12.630250930786133
    5. '"' → logprob: -13.130250930786133
    6. '(red' → logprob: -13.505250930786133
    7. '|' → logprob: -14.505250930786133
    8. ' ' → logprob: -14.630250930786133
    9. '   ' → logprob: -14.630250930786133
    10. ' +' → logprob: -15.005250930786133

Token 802: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.0076081594452261925
    2. ' red' → logprob: -4.882607936859131
    3. '"' → logprob: -13.757608413696289
    4. '(red' → logprob: -15.007608413696289
    5. ' ' → logprob: -15.257608413696289
    6. 'redi' → logprob: -15.882608413696289
    7. 're' → logprob: -17.00760841369629
    8. 'right' → logprob: -17.38260841369629
    9. ' "|"' → logprob: -17.88260841369629
    10. '"|' → logprob: -17.88260841369629

Token 803: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -1.6240566083070007e-06
    2. 'right' → logprob: -14.125001907348633
    3. '_' → logprob: -14.750001907348633
    4. '_left' → logprob: -16.000001907348633
    5. '"_' → logprob: -16.250001907348633
    6. ')_' → logprob: -16.500001907348633
    7. '_r' → logprob: -17.875001907348633
    8. ')' → logprob: -18.125001907348633
    9. ' _' → logprob: -18.125001907348633
    10. '_wrong' → logprob: -18.125001907348633

Token 804: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006825128570199013
    2. ')' → logprob: -5.006824970245361
    3. '"))' → logprob: -9.38182544708252
    4. '))
' → logprob: -10.88182544708252
    5. ')))' → logprob: -13.00682544708252
    6. ''))' → logprob: -13.25682544708252
    7. ')")' → logprob: -14.38182544708252
    8. '()))' → logprob: -14.75682544708252
    9. '   ' → logprob: -14.75682544708252
    10. ' ))' → logprob: -14.88182544708252

Token 805: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2752457857131958
    2. 'for' → logprob: -1.7752457857131958
    3. '<|end|>' → logprob: -3.9002456665039062
    4. ')' → logprob: -4.150245666503906
    5. 'red' → logprob: -5.275245666503906
    6. 'result' → logprob: -5.400245666503906
    7. 'from' → logprob: -5.400245666503906
    8. '
' → logprob: -5.775245666503906
    9. '```' → logprob: -5.900245666503906
    10. ' for' → logprob: -6.650245666503906

Token 806: ' Util' (ID: 13564)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.21654361486434937
    2. 'count' → logprob: -1.8415436744689941
    3. 'from' → logprob: -5.091543674468994
    4. 'answer' → logprob: -5.216543674468994
    5. 'counts' → logprob: -5.216543674468994
    6. 'result' → logprob: -5.341543674468994
    7. '#' → logprob: -5.716543674468994
    8. 'left' → logprob: -6.091543674468994
    9. 'answers' → logprob: -6.341543674468994
    10. 'cnt' → logprob: -6.841543674468994

Token 807: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.9838505387306213
    2. 'isateur' → logprob: -1.1088504791259766
    3. '#' → logprob: -2.3588504791259766
    4. 'iser' → logprob: -2.9838504791259766
    5. 'isez' → logprob: -3.3588504791259766
    6. '=' → logprob: -3.9838504791259766
    7. '```' → logprob: -3.9838504791259766
    8. 'import' → logprob: -4.358850479125977
    9. 'ation' → logprob: -4.483850479125977
    10. 's' → logprob: -4.733850479125977

Token 808: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04393146559596062
    2. '(
' → logprob: -3.668931484222412
    3. 'Counter' → logprob: -4.668931484222412
    4. '(C' → logprob: -6.168931484222412
    5. '#' → logprob: -6.543931484222412
    6. '=' → logprob: -7.168931484222412
    7. '_counter' → logprob: -7.168931484222412
    8. 'counter' → logprob: -7.543931484222412
    9. 'left' → logprob: -7.668931484222412
    10. '_' → logprob: -7.918931484222412

Token 809: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -5.872261317563243e-05
    2. 'left' → logprob: -10.125059127807617
    3. 'counter' → logprob: -11.750059127807617
    4. 'set' → logprob: -13.750059127807617
    5. '(C' → logprob: -13.750059127807617
    6. 'sum' → logprob: -13.750059127807617
    7. ' Counter' → logprob: -13.875059127807617
    8. 'Left' → logprob: -14.000059127807617
    9. '(' → logprob: -14.125059127807617
    10. '.Counter' → logprob: -14.125059127807617

Token 810: ' pour' (ID: 1930)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.1849854439496994
    2. '_left' → logprob: -2.434985399246216
    3. 'counter' → logprob: -3.809985399246216
    4. '_counter' → logprob: -4.184985637664795
    5. '(' → logprob: -4.309985637664795
    6. '(
' → logprob: -4.434985637664795
    7. 'count' → logprob: -4.809985637664795
    8. 'Counter' → logprob: -6.309985637664795
    9. 'counts' → logprob: -6.309985637664795
    10. 'Left' → logprob: -6.559985637664795

Token 811: ' compter' (ID: 81694)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.2541034519672394
    2. 'counter' → logprob: -2.254103422164917
    3. 'count' → logprob: -2.379103422164917
    4. 'c' → logprob: -4.254103660583496
    5. 'right' → logprob: -5.504103660583496
    6. 'Counter' → logprob: -5.754103660583496
    7. ' counter' → logprob: -6.629103660583496
    8. ' left' → logprob: -6.754103660583496
    9. 'counts' → logprob: -7.254103660583496
    10. 'cnt' → logprob: -7.629103660583496

Token 812: ' le' (ID: 505)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.18483056128025055
    2. 'Counter' → logprob: -3.059830665588379
    3. 'counter' → logprob: -3.434830665588379
    4. '_left' → logprob: -3.809830665588379
    5. 'count' → logprob: -3.934830665588379
    6. '_counter' → logprob: -4.184830665588379
    7. 'Left' → logprob: -4.809830665588379
    8. '(' → logprob: -5.059830665588379
    9. 'counts' → logprob: -5.809830665588379
    10. 'combined' → logprob: -5.934830665588379

Token 813: ' nombre' (ID: 9733)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.2701706290245056
    2. 'right' → logprob: -1.6451706886291504
    3. 'Counter' → logprob: -4.27017068862915
    4. ' left' → logprob: -5.02017068862915
    5. 'counter' → logprob: -5.27017068862915
    6. '(left' → logprob: -5.64517068862915
    7. 'combined' → logprob: -6.02017068862915
    8. ' right' → logprob: -6.14517068862915
    9. '(' → logprob: -6.52017068862915
    10. 'count' → logprob: -6.64517068862915

Token 814: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02664649859070778
    2. 'left' → logprob: -4.401646614074707
    3. '_left' → logprob: -5.151646614074707
    4. '(
' → logprob: -5.651646614074707
    5. 'of' → logprob: -6.151646614074707
    6. '_' → logprob: -7.776646614074707
    7. 'de' → logprob: -8.026646614074707
    8. 'g' → logprob: -8.526646614074707
    9. '(left' → logprob: -8.651646614074707
    10. '=' → logprob: -8.901646614074707

Token 815: ''occ' (ID: 158932)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(left' → logprob: -1.4114137887954712
    2. 'élé' → logprob: -1.9114137887954712
    3. '=' → logprob: -2.1614136695861816
    4. 'left' → logprob: -2.2864136695861816
    5. '(' → logprob: -2.5364136695861816
    6. ' occurrences' → logprob: -2.9114136695861816
    7. 'right' → logprob: -3.2864136695861816
    8. 's' → logprob: -3.4114136695861816
    9. '(right' → logprob: -3.5364136695861816
    10. 'es' → logprob: -3.9114136695861816

Token 816: 'urrences' (ID: 63292)
  Prédit: 'urrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -4.084206375409849e-05
    2. 'curr' → logprob: -11.250041007995605
    3. 'urr' → logprob: -11.875041007995605
    4. 'urrencies' → logprob: -11.875041007995605
    5. 'ur' → logprob: -12.000041007995605
    6. 'urrence' → logprob: -12.375041007995605
    7. 'orr' → logprob: -13.875041007995605
    8. 'u' → logprob: -14.750041007995605
    9. 'urrent' → logprob: -15.000041007995605
    10. 'érences' → logprob: -15.000041007995605

Token 817: ' de' (ID: 334)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.04630345478653908
    2. 'counter' → logprob: -4.4213032722473145
    3. '_left' → logprob: -5.0463032722473145
    4. 'right' → logprob: -5.1713032722473145
    5. 'count' → logprob: -5.4213032722473145
    6. 'Counter' → logprob: -5.7963032722473145
    7. 'combined' → logprob: -5.9213032722473145
    8. '_counter' → logprob: -6.4213032722473145
    9. 'g' → logprob: -6.5463032722473145
    10. 'counts' → logprob: -6.5463032722473145

Token 818: ' chaque' (ID: 21194)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5761285424232483
    2. 'left' → logprob: -0.8261285424232483
    3. ' left' → logprob: -9.201128959655762
    4. ' right' → logprob: -9.576128959655762
    5. 'set' → logprob: -11.326128959655762
    6. 'Counter' → logprob: -13.326128959655762
    7. '(left' → logprob: -13.451128959655762
    8. '[left' → logprob: -13.826128959655762
    9. 'Right' → logprob: -14.576128959655762
    10. '(right' → logprob: -15.201128959655762

Token 819: ' façon' (ID: 33381)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.3315032422542572
    2. 'right' → logprob: -1.3315032720565796
    3. 'element' → logprob: -5.081503391265869
    4. '(left' → logprob: -5.456503391265869
    5. 'Counter' → logprob: -5.581503391265869
    6. 'item' → logprob: -7.081503391265869
    7. '(right' → logprob: -7.081503391265869
    8. 'elem' → logprob: -8.081502914428711
    9. 'counter' → logprob: -8.456502914428711
    10. '(C' → logprob: -8.581502914428711

Token 820: ' de' (ID: 334)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.18090187013149261
    2. 'de' → logprob: -1.9309018850326538
    3. 'right' → logprob: -5.305902004241943
    4. '(left' → logprob: -5.805902004241943
    5. ')' → logprob: -6.055902004241943
    6. 'Counter' → logprob: -6.305902004241943
    7. 'counter' → logprob: -6.805902004241943
    8. 'des' → logprob: -6.930902004241943
    9. '(' → logprob: -7.305902004241943
    10. 'counts' → logprob: -7.305902004241943

Token 821: ' répart' (ID: 147636)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.1613021045923233
    2. 'right' → logprob: -1.911302089691162
    3. 'counter' → logprob: -7.911302089691162
    4. ' left' → logprob: -8.53630256652832
    5. 'count' → logprob: -8.66130256652832
    6. 'for' → logprob: -9.78630256652832
    7. 'comp' → logprob: -10.03630256652832
    8. ' compter' → logprob: -10.16130256652832
    9. ' right' → logprob: -11.03630256652832
    10. 'le' → logprob: -11.16130256652832

Token 822: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.03405861184000969
    2. 'ition' → logprob: -3.4090585708618164
    3. 'iter' → logprob: -8.909058570861816
    4. 'ion' → logprob: -9.284058570861816
    5. 'itioner' → logprob: -9.659058570861816
    6. 'er' → logprob: -11.034058570861816
    7. 'issement' → logprob: -11.284058570861816
    8. 'isser' → logprob: -11.534058570861816
    9. 'irer' → logprob: -11.659058570861816
    10. 'iser' → logprob: -11.784058570861816

Token 823: ' la' (ID: 557)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.01739647053182125
    2. 'right' → logprob: -4.392396450042725
    3. '(left' → logprob: -5.517396450042725
    4. 'de' → logprob: -8.517396926879883
    5. '(' → logprob: -9.017396926879883
    6. ' left' → logprob: -9.267396926879883
    7. '(right' → logprob: -9.392396926879883
    8. '_left' → logprob: -9.642396926879883
    9. 'counter' → logprob: -10.142396926879883
    10. 'g' → logprob: -10.267396926879883

Token 824: ' moitié' (ID: 93216)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.004094904754310846
    2. 'right' → logprob: -5.629095077514648
    3. ' left' → logprob: -7.754095077514648
    4. 'S' → logprob: -10.504095077514648
    5. 'list' → logprob: -10.879095077514648
    6. 'g' → logprob: -12.504095077514648
    7. '
' → logprob: -13.004095077514648
    8. '(left' → logprob: -13.254095077514648
    9. 'part' → logprob: -13.879095077514648
    10. ' gauche' → logprob: -14.129095077514648

Token 825: ' gauche' (ID: 58367)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.01470822561532259
    2. '(left' → logprob: -4.764708042144775
    3. 'counter' → logprob: -6.139708042144775
    4. 'Counter' → logprob: -6.764708042144775
    5. 'right' → logprob: -7.264708042144775
    6. 'g' → logprob: -7.764708042144775
    7. 'from' → logprob: -7.889708042144775
    8. 'counts' → logprob: -8.264708518981934
    9. 'de' → logprob: -8.514708518981934
    10. 'of' → logprob: -8.639708518981934

Token 826: '
' (ID: 198)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.11295083165168762
    2. 'counter' → logprob: -2.3629508018493652
    3. 'count' → logprob: -4.487950801849365
    4. 'counts' → logprob: -6.862950801849365
    5. 'c' → logprob: -8.487951278686523
    6. 'comp' → logprob: -9.737951278686523
    7. 'cnt' → logprob: -10.237951278686523
    8. '(left' → logprob: -10.862951278686523
    9. 'Counter' → logprob: -11.487951278686523
    10. 'g' → logprob: -11.487951278686523

Token 827: 'left' (ID: 4530)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.5363438129425049
    2. 'left' → logprob: -1.2863438129425049
    3. 'count' → logprob: -2.036343812942505
    4. 'counts' → logprob: -5.286343574523926
    5. 'cnt' → logprob: -6.286343574523926
    6. 'c' → logprob: -6.786343574523926
    7. 'comp' → logprob: -9.286343574523926
    8. 'freq' → logprob: -9.661343574523926
    9. 'Counter' → logprob: -10.036343574523926
    10. 'ctr' → logprob: -11.036343574523926

Token 828: ' =' (ID: 314)
  Prédit: '_counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counter' → logprob: -0.3978309631347656
    2. '_counts' → logprob: -1.3978309631347656
    3. 'Counter' → logprob: -3.8978309631347656
    4. '_count' → logprob: -3.8978309631347656
    5. 'count' → logprob: -4.022830963134766
    6. 'counter' → logprob: -4.272830963134766
    7. 'counts' → logprob: -5.272830963134766
    8. 'list' → logprob: -6.397830963134766
    9. '=' → logprob: -7.147830963134766
    10. '_' → logprob: -8.022830963134766

Token 829: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.0001234428636962548
    2. ' Counter' → logprob: -9.000123023986816
    3. '.Counter' → logprob: -18.875123977661133
    4. 'counter' → logprob: -19.125123977661133
    5. '   ' → logprob: -19.500123977661133
    6. '_counter' → logprob: -20.375123977661133
    7. 'Count' → logprob: -21.375123977661133
    8. ' ' → logprob: -21.500123977661133
    9. 'Coun' → logprob: -21.500123977661133
    10. ' counter' → logprob: -21.500123977661133

Token 830: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -6.468279752880335e-05
    2. 'left' → logprob: -9.750064849853516
    3. '(' → logprob: -12.125064849853516
    4. '(
' → logprob: -15.125064849853516
    5. '[left' → logprob: -15.500064849853516
    6. '(right' → logprob: -15.875064849853516
    7. '(list' → logprob: -16.125064849853516
    8. '(le' → logprob: -16.375064849853516
    9. ',left' → logprob: -16.375064849853516
    10. ' (' → logprob: -17.875064849853516

Token 831: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00010998018842656165
    2. ')' → logprob: -9.625109672546387
    3. 'ist' → logprob: -10.125109672546387
    4. 'left' → logprob: -12.750109672546387
    5. '))' → logprob: -14.500109672546387
    6. '_list' → logprob: -14.875109672546387
    7. ')]' → logprob: -17.875110626220703
    8. ' list' → logprob: -18.000110626220703
    9. 'List' → logprob: -18.375110626220703
    10. 'liste' → logprob: -18.375110626220703

Token 832: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2007883671903983e-05
    2. ')
' → logprob: -10.750021934509277
    3. ' )' → logprob: -15.500021934509277
    4. ')#' → logprob: -16.000022888183594
    5. ')

' → logprob: -16.625022888183594
    6. '),' → logprob: -16.750022888183594
    7. ')
' → logprob: -16.750022888183594
    8. '#' → logprob: -18.125022888183594
    9. ',' → logprob: -18.500022888183594
    10. ').' → logprob: -19.000022888183594

Token 833: '#' (ID: 2)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -3.650518920039758e-06
    2. '#' → logprob: -13.250003814697266
    3. ' right' → logprob: -13.500003814697266
    4. 'for' → logprob: -16.000003814697266
    5. 'rig' → logprob: -16.500003814697266
    6. ')' → logprob: -16.500003814697266
    7. 'Right' → logprob: -17.625003814697266
    8. 'r' → logprob: -17.750003814697266
    9. 'rights' → logprob: -17.875003814697266
    10. 'left' → logprob: -18.250003814697266

Token 834: ' Id' (ID: 8210)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -7.896309739408025e-07
    2. ' right' → logprob: -14.500000953674316
    3. 'left' → logprob: -16.625
    4. '#' → logprob: -16.875
    5. 'rig' → logprob: -18.375
    6. '
' → logprob: -19.875
    7. 'r' → logprob: -20.0
    8. '	right' → logprob: -20.125
    9. 'Right' → logprob: -20.25
    10. ' ' → logprob: -21.125

Token 835: 'em' (ID: 347)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0001717166742309928
    2. ' right' → logprob: -8.875171661376953
    3. '=' → logprob: -11.125171661376953
    4. '_right' → logprob: -12.250171661376953
    5. '	right' → logprob: -12.500171661376953
    6. 'ent' → logprob: -13.250171661376953
    7. '[right' → logprob: -13.250171661376953
    8. '#' → logprob: -13.875171661376953
    9. 'f' → logprob: -14.250171661376953
    10. ':right' → logprob: -14.375171661376953

Token 836: ' pour' (ID: 1930)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.001911265542730689
    2. '(right' → logprob: -6.876911163330078
    3. '(
' → logprob: -7.751911163330078
    4. 'for' → logprob: -8.626911163330078
    5. '(' → logprob: -8.876911163330078
    6. ' right' → logprob: -9.251911163330078
    7. '=' → logprob: -11.251911163330078
    8. 'rig' → logprob: -12.501911163330078
    9. '_right' → logprob: -12.751911163330078
    10. 'r' → logprob: -13.251911163330078

Token 837: ' la' (ID: 557)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0040831477381289005
    2. ' right' → logprob: -5.504083156585693
    3. '(right' → logprob: -12.629082679748535
    4. 'rig' → logprob: -14.754082679748535
    5. 'left' → logprob: -14.879082679748535
    6. '	right' → logprob: -15.254082679748535
    7. '
' → logprob: -16.37908363342285
    8. '[right' → logprob: -16.62908363342285
    9. 'rightness' → logprob: -16.62908363342285
    10. 'r' → logprob: -17.50408363342285

Token 838: ' moitié' (ID: 93216)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.0325924449716695e-05
    2. ' right' → logprob: -11.50001049041748
    3. 'r' → logprob: -16.500009536743164
    4. 'rig' → logprob: -17.125009536743164
    5. 'rightness' → logprob: -18.375009536743164
    6. '(right' → logprob: -19.250009536743164
    7. 'left' → logprob: -19.250009536743164
    8. '[right' → logprob: -19.375009536743164
    9. 'Right' → logprob: -19.500009536743164
    10. '
' → logprob: -19.625009536743164

Token 839: ' droite' (ID: 61428)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -2.7610454708337784e-05
    2. '(right' → logprob: -10.750027656555176
    3. ' right' → logprob: -12.125027656555176
    4. '=' → logprob: -15.500027656555176
    5. '[right' → logprob: -16.50002670288086
    6. '_right' → logprob: -16.50002670288086
    7. 'left' → logprob: -17.12502670288086
    8. 'r' → logprob: -17.37502670288086
    9. 'rig' → logprob: -17.37502670288086
    10. ' =' → logprob: -17.62502670288086

Token 840: '
' (ID: 198)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.09060605615377426
    2. '=' → logprob: -2.4656059741973877
    3. ' =' → logprob: -6.590606212615967
    4. ' right' → logprob: -8.215605735778809
    5. '(right' → logprob: -11.590605735778809
    6. '=
' → logprob: -11.840605735778809
    7. ',right' → logprob: -13.965605735778809
    8. '[right' → logprob: -14.215605735778809
    9. '```' → logprob: -14.340605735778809
    10. '	right' → logprob: -14.340605735778809

Token 841: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -3.128163257315464e-07
    2. ' right' → logprob: -15.25
    3. 'rig' → logprob: -20.5
    4. 'left' → logprob: -21.875
    5. 'Right' → logprob: -22.75
    6. 'r' → logprob: -23.0
    7. '```' → logprob: -23.5
    8. '	right' → logprob: -24.25
    9. '
' → logprob: -24.25
    10. 'counter' → logprob: -24.375

Token 842: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868710398674011
    2. ' =' → logprob: -1.136871099472046
    3. '＝' → logprob: -17.761871337890625
    4. 'list' → logprob: -18.511871337890625
    5. '=list' → logprob: -18.761871337890625
    6. ' ' → logprob: -19.011871337890625
    7. '=
' → logprob: -19.261871337890625
    8. '=

' → logprob: -19.386871337890625
    9. 'counter' → logprob: -20.011871337890625
    10. 'count' → logprob: -20.136871337890625

Token 843: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.0006267757853493094
    2. ' Counter' → logprob: -7.375626564025879
    3. 'counter' → logprob: -15.750626564025879
    4. ' counter' → logprob: -18.000627517700195
    5. '.Counter' → logprob: -18.250627517700195
    6. ' ' → logprob: -18.500627517700195
    7. 'Coun' → logprob: -18.875627517700195
    8. 'Right' → logprob: -19.000627517700195
    9. '_counter' → logprob: -19.500627517700195
    10. 'Count' → logprob: -19.625627517700195

Token 844: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -7.541112427134067e-05
    2. 'right' → logprob: -9.500075340270996
    3. '[right' → logprob: -14.625075340270996
    4. '(rhs' → logprob: -17.625076293945312
    5. ' right' → logprob: -18.000076293945312
    6. '(' → logprob: -18.625076293945312
    7. '(r' → logprob: -18.875076293945312
    8. ' (' → logprob: -18.875076293945312
    9. ',right' → logprob: -19.125076293945312
    10. '	right' → logprob: -19.375076293945312

Token 845: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.3856492842023727e-06
    2. ')' → logprob: -14.000000953674316
    3. 'ist' → logprob: -15.000000953674316
    4. 'right' → logprob: -15.500000953674316
    5. 'left' → logprob: -17.625001907348633
    6. ' list' → logprob: -18.000001907348633
    7. '))' → logprob: -19.500001907348633
    8. '[' → logprob: -19.750001907348633
    9. 'List' → logprob: -20.000001907348633
    10. '_list' → logprob: -20.000001907348633

Token 846: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022283416241407394
    2. '()' → logprob: -4.272283554077148
    3. '#' → logprob: -5.147283554077148
    4. '(' → logprob: -7.522283554077148
    5. 'for' → logprob: -7.522283554077148
    6. '())' → logprob: -7.522283554077148
    7. '<|end|>' → logprob: -9.272283554077148
    8. ' )' → logprob: -9.397283554077148
    9. '()

' → logprob: -9.647283554077148
    10. ')

' → logprob: -9.897283554077148

Token 847: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.36547189950942993
    2. 'answer' → logprob: -1.6154718399047852
    3. 'ans' → logprob: -3.240471839904785
    4. 'count' → logprob: -3.240471839904785
    5. 'res' → logprob: -3.990471839904785
    6. 'total' → logprob: -4.615471839904785
    7. 'counter' → logprob: -8.365471839904785
    8. '#' → logprob: -8.490471839904785
    9. 'cnt' → logprob: -9.115471839904785
    10. '
' → logprob: -11.115471839904785

Token 848: ' Initial' (ID: 9209)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7196165919303894
    2. 'answer' → logprob: -1.0946166515350342
    3. 'ans' → logprob: -2.594616651535034
    4. 'count' → logprob: -2.969616651535034
    5. 'total' → logprob: -3.594616651535034
    6. 'res' → logprob: -3.719616651535034
    7. 'counter' → logprob: -8.219616889953613
    8. 'cnt' → logprob: -9.219616889953613
    9. 'print' → logprob: -10.094616889953613
    10. 's' → logprob: -10.219616889953613

Token 849: 'isation' (ID: 6993)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8245900273323059
    2. 'count' → logprob: -1.4495899677276611
    3. 'total' → logprob: -2.074589967727661
    4. 'answer' → logprob: -2.449589967727661
    5. '#' → logprob: -3.449589967727661
    6. 'isation' → logprob: -3.699589967727661
    7. '_result' → logprob: -4.19959020614624
    8. 'ization' → logprob: -4.57459020614624
    9. 'res' → logprob: -4.94959020614624
    10. '_answer' → logprob: -5.19959020614624

Token 850: ' de' (ID: 334)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.012337327003479
    2. 'ans' → logprob: -1.512337327003479
    3. 'result' → logprob: -1.512337327003479
    4. 'answer' → logprob: -1.762337327003479
    5. 'total' → logprob: -4.1373372077941895
    6. 'res' → logprob: -5.5123372077941895
    7. 'counter' → logprob: -5.6373372077941895
    8. 'cnt' → logprob: -8.512337684631348
    9. ' ans' → logprob: -8.637337684631348
    10. 'matches' → logprob: -10.012337684631348

Token 851: ' la' (ID: 557)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8815062642097473
    2. 'ans' → logprob: -1.1315062046051025
    3. 'count' → logprob: -1.8815062046051025
    4. 'answer' → logprob: -2.6315062046051025
    5. 'res' → logprob: -3.6315062046051025
    6. 'total' → logprob: -4.506506443023682
    7. 'counter' → logprob: -6.881506443023682
    8. 'cnt' → logprob: -8.006505966186523
    9. ' ans' → logprob: -11.131505966186523
    10. '0' → logprob: -11.506505966186523

Token 852: ' variable' (ID: 11076)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3449636697769165
    2. 'count' → logprob: -1.8449636697769165
    3. 'answer' → logprob: -2.594963550567627
    4. 'res' → logprob: -3.469963550567627
    5. 'ans' → logprob: -3.844963550567627
    6. 'counter' → logprob: -5.719963550567627
    7. 'total' → logprob: -5.844963550567627
    8. 'cnt' → logprob: -8.969964027404785
    9. 's' → logprob: -9.469964027404785
    10. 'rés' → logprob: -9.844964027404785

Token 853: ' qui' (ID: 2780)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7465570569038391
    2. 'answer' → logprob: -1.2465569972991943
    3. 'result' → logprob: -1.9965569972991943
    4. 'count' → logprob: -2.4965569972991943
    5. 'res' → logprob: -4.371557235717773
    6. ' ans' → logprob: -5.496557235717773
    7. 'total' → logprob: -6.246557235717773
    8. ' answer' → logprob: -6.996557235717773
    9. 'counter' → logprob: -8.121557235717773
    10. ' result' → logprob: -8.496557235717773

Token 854: ' va' (ID: 3423)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.1895747184753418
    2. 'comp' → logprob: -1.4395747184753418
    3. 'result' → logprob: -1.6895747184753418
    4. 'res' → logprob: -2.189574718475342
    5. 'ans' → logprob: -2.314574718475342
    6. 'answer' → logprob: -3.439574718475342
    7. 'total' → logprob: -4.314574718475342
    8. '=' → logprob: -5.439574718475342
    9. 'counts' → logprob: -6.314574718475342
    10. 'cnt' → logprob: -6.439574718475342

Token 855: ' conten' (ID: 23523)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2833016812801361
    2. 'result' → logprob: -2.158301591873169
    3. 'answer' → logprob: -2.908301591873169
    4. 'ans' → logprob: -3.158301591873169
    5. 'res' → logprob: -4.158301830291748
    6. 'comp' → logprob: -4.533301830291748
    7. 'total' → logprob: -5.658301830291748
    8. 's' → logprob: -7.158301830291748
    9. 'cnt' → logprob: -7.283301830291748
    10. 'counter' → logprob: -7.408301830291748

Token 856: 'ir' (ID: 380)
  Prédit: 'ter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.001766097266227007
    2. 't' → logprob: -7.126766204833984
    3. 'r' → logprob: -7.876766204833984
    4. 'rer' → logprob: -8.001766204833984
    5. 'trer' → logprob: -9.251766204833984
    6. 'er' → logprob: -9.876766204833984
    7. 'cter' → logprob: -10.001766204833984
    8. 'te' → logprob: -11.126766204833984
    9. 'tter' → logprob: -11.251766204833984
    10. 'ner' → logprob: -12.126766204833984

Token 857: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.19581885635852814
    2. 'answer' → logprob: -2.1958189010620117
    3. 'result' → logprob: -2.9458189010620117
    4. 'count' → logprob: -4.445818901062012
    5. 'res' → logprob: -6.695818901062012
    6. 'total' → logprob: -7.195818901062012
    7. 'cnt' → logprob: -8.570818901062012
    8. ' ans' → logprob: -9.945818901062012
    9. 'counter' → logprob: -10.070818901062012
    10. 'max' → logprob: -12.320818901062012

Token 858: ' réponse' (ID: 50332)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.035435210913419724
    2. 'count' → logprob: -4.285435199737549
    3. 'answer' → logprob: -4.785435199737549
    4. 'res' → logprob: -5.160435199737549
    5. 'rés' → logprob: -5.785435199737549
    6. 'total' → logprob: -6.160435199737549
    7. 'ans' → logprob: -6.660435199737549
    8. 'comp' → logprob: -8.910435676574707
    9. 'counter' → logprob: -9.035435676574707
    10. 'nombre' → logprob: -9.285435676574707

Token 859: ' finale' (ID: 37759)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.11845553666353226
    2. 'ans' → logprob: -2.368455648422241
    3. 'result' → logprob: -4.118455410003662
    4. 'res' → logprob: -6.368455410003662
    5. 'count' → logprob: -9.36845588684082
    6. 'answers' → logprob: -12.24345588684082
    7. 'total' → logprob: -12.24345588684082
    8. ' answer' → logprob: -13.99345588684082
    9. 'Answer' → logprob: -14.49345588684082
    10. '=' → logprob: -14.86845588684082

Token 860: '.
' (ID: 558)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.2438340187072754
    2. 'ans' → logprob: -1.7438340187072754
    3. 'result' → logprob: -3.2438340187072754
    4. 'res' → logprob: -6.118834018707275
    5. 'count' → logprob: -8.118833541870117
    6. 'total' → logprob: -11.618833541870117
    7. 'answers' → logprob: -12.243833541870117
    8. '
' → logprob: -12.868833541870117
    9. 'cnt' → logprob: -14.618833541870117
    10. 'Answer' → logprob: -14.618833541870117

Token 861: 'answer' (ID: 17021)
  Prédit: 'answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.2737698554992676
    2. 'ans' → logprob: -2.0237698554992676
    3. 'result' → logprob: -2.2737698554992676
    4. 'res' → logprob: -5.523769855499268
    5. 'count' → logprob: -8.02376937866211
    6. 'total' → logprob: -9.52376937866211
    7. 'answers' → logprob: -11.39876937866211
    8. ' answer' → logprob: -13.52376937866211
    9. 'results' → logprob: -13.77376937866211
    10. 'Answer' → logprob: -13.89876937866211

Token 862: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020710527896881
    2. '=' → logprob: -2.3502070903778076
    3. 's' → logprob: -15.225207328796387
    4. '_' → logprob: -15.725207328796387
    5. ' ' → logprob: -17.85020637512207
    6. ',' → logprob: -17.97520637512207
    7. '=int' → logprob: -18.10020637512207
    8. ' ' → logprob: -18.22520637512207
    9. ')' → logprob: -18.22520637512207
    10. '_=' → logprob: -18.97520637512207

Token 863: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. 'sum' → logprob: -17.00006675720215
    4. ' ' → logprob: -18.25006675720215
    5. 'int' → logprob: -18.87506675720215
    6. '1' → logprob: -19.75006675720215
    7. '```' → logprob: -20.50006675720215
    8. '=' → logprob: -20.50006675720215
    9. '۰' → logprob: -20.68756675720215
    10. '   ' → logprob: -20.81256675720215

Token 864: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. 'sum' → logprob: -16.25
    4. 'int' → logprob: -18.625
    5. '۰' → logprob: -20.625
    6. '=' → logprob: -20.875
    7. '０' → logprob: -20.875
    8. '[]' → logprob: -21.5
    9. '```' → logprob: -21.5
    10. '1' → logprob: -21.8125

Token 865: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006866451818495989
    2. '
' → logprob: -5.131866455078125
    3. ' for' → logprob: -7.006866455078125
    4. '<|end|>' → logprob: -11.131866455078125
    5. ')' → logprob: -12.256866455078125
    6. '#' → logprob: -12.381866455078125
    7. ')
' → logprob: -13.131866455078125
    8. ' 
' → logprob: -13.381866455078125
    9. '
' → logprob: -13.631866455078125
    10. '

' → logprob: -13.756866455078125

Token 866: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.3438327843905427e-05
    2. '
' → logprob: -11.50002384185791
    3. ' for' → logprob: -11.62502384185791
    4. '#' → logprob: -12.37502384185791
    5. 'f' → logprob: -16.375022888183594
    6. '```' → logprob: -17.625022888183594
    7. '\
' → logprob: -18.250022888183594
    8. '' → logprob: -18.625022888183594
    9. '\' → logprob: -18.750022888183594
    10. '+
' → logprob: -19.000022888183594

Token 867: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.2729995988775045e-06
    2. '#' → logprob: -12.000006675720215
    3. ' for' → logprob: -18.1250057220459
    4. '
' → logprob: -19.2500057220459
    5. '```' → logprob: -20.7500057220459
    6. '	for' → logprob: -21.8750057220459
    7. '   ' → logprob: -22.2500057220459
    8. '

' → logprob: -22.5000057220459
    9. '
' → logprob: -23.2500057220459
    10. 'For' → logprob: -23.5000057220459

Token 868: 'ours' (ID: 2327)
  Prédit: 'ours'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.3881882131099701
    2. 'our' → logprob: -1.1381882429122925
    3. 'ourt' → logprob: -7.263188362121582
    4. 'for' → logprob: -8.388188362121582
    5. 'or' → logprob: -9.013188362121582
    6. ' for' → logprob: -9.513188362121582
    7. '#' → logprob: -9.513188362121582
    8. '```' → logprob: -10.263188362121582
    9. 'ur' → logprob: -10.513188362121582
    10. 'u' → logprob: -11.388188362121582

Token 869: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30630478262901306
    2. 'in' → logprob: -1.5563048124313354
    3. ' in' → logprob: -3.181304693222046
    4. ' for' → logprob: -5.806304931640625
    5. 'of' → logprob: -5.931304931640625
    6. '(' → logprob: -6.181304931640625
    7. 'left' → logprob: -6.431304931640625
    8. '(left' → logprob: -7.431304931640625
    9. '#' → logprob: -7.931304931640625
    10. ' of' → logprob: -8.181304931640625

Token 870: ' chaque' (ID: 21194)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.02149115689098835
    2. 'right' → logprob: -4.021491050720215
    3. ' left' → logprob: -5.771491050720215
    4. '(left' → logprob: -8.771491050720215
    5. ' right' → logprob: -10.021491050720215
    6. 'list' → logprob: -11.896491050720215
    7. '(' → logprob: -12.271491050720215
    8. 'lef' → logprob: -13.021491050720215
    9. '[left' → logprob: -13.521491050720215
    10. '(right' → logprob: -13.521491050720215

Token 871: ' manière' (ID: 35013)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.21100085973739624
    2. ' key' → logprob: -1.961000919342041
    3. 'clé' → logprob: -3.711000919342041
    4. ' clé' → logprob: -4.336000919342041
    5. 'k' → logprob: -5.211000919342041
    6. 'cle' → logprob: -5.961000919342041
    7. ' cle' → logprob: -6.961000919342041
    8. 'item' → logprob: -7.586000919342041
    9. 'partition' → logprob: -7.836000919342041
    10. 'cl' → logprob: -7.961000919342041

Token 872: ' distinct' (ID: 16913)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6451440453529358
    2. 'for' → logprob: -1.145143985748291
    3. 'in' → logprob: -2.645143985748291
    4. ' for' → logprob: -3.395143985748291
    5. ' de' → logprob: -4.020143985748291
    6. 'left' → logprob: -5.020143985748291
    7. 'de' → logprob: -5.145143985748291
    8. ' dans' → logprob: -5.645143985748291
    9. ' clé' → logprob: -5.770143985748291
    10. ' des' → logprob: -6.020143985748291

Token 873: 'e' (ID: 68)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8534280061721802
    2. 'for' → logprob: -1.1034280061721802
    3. 'de' → logprob: -2.1034278869628906
    4. ' in' → logprob: -3.1034278869628906
    5. ' de' → logprob: -3.3534278869628906
    6. ',' → logprob: -4.728427886962891
    7. ' for' → logprob: -4.978427886962891
    8. 'e' → logprob: -5.353427886962891
    9. 'left' → logprob: -5.353427886962891
    10. 'd' → logprob: -5.603427886962891

Token 874: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5751877427101135
    2. 'in' → logprob: -0.9501877427101135
    3. 'for' → logprob: -3.8251876831054688
    4. ' de' → logprob: -4.450187683105469
    5. ' dans' → logprob: -5.075187683105469
    6. 'de' → logprob: -5.200187683105469
    7. ' for' → logprob: -6.700187683105469
    8. 'dans' → logprob: -6.950187683105469
    9. ' des' → logprob: -7.700187683105469
    10. ' en' → logprob: -7.825187683105469

Token 875: ' répart' (ID: 147636)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.005135323386639357
    2. 're' → logprob: -6.380135536193848
    3. 'partition' → logprob: -6.505135536193848
    4. ' left' → logprob: -7.880135536193848
    5. 'key' → logprob: -8.005135536193848
    6. 'right' → logprob: -8.380135536193848
    7. 'clé' → logprob: -8.630135536193848
    8. 'list' → logprob: -8.755135536193848
    9. 'ré' → logprob: -9.005135536193848
    10. 'div' → logprob: -9.005135536193848

Token 876: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0027158339507877827
    2. 'iter' → logprob: -6.877716064453125
    3. 'rir' → logprob: -8.252716064453125
    4. 'r' → logprob: -8.502716064453125
    5. 'er' → logprob: -8.627716064453125
    6. 'left' → logprob: -9.127716064453125
    7. 'is' → logprob: -9.627716064453125
    8. 'i' → logprob: -9.627716064453125
    9. 'tir' → logprob: -9.627716064453125
    10. 'ur' → logprob: -9.752716064453125

Token 877: ' la' (ID: 557)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6772961616516113
    2. 'for' → logprob: -1.5522961616516113
    3. 'key' → logprob: -2.4272961616516113
    4. 'clé' → logprob: -3.0522961616516113
    5. 'de' → logprob: -3.3022961616516113
    6. 'g' → logprob: -3.5522961616516113
    7. 'dans' → logprob: -3.9272961616516113
    8. 'la' → logprob: -4.427296161651611
    9. '(left' → logprob: -4.552296161651611
    10. 'les' → logprob: -4.927296161651611

Token 878: ' moitié' (ID: 93216)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.09144528210163116
    2. 'key' → logprob: -3.091445207595825
    3. 'clé' → logprob: -4.091445446014404
    4. 'g' → logprob: -4.341445446014404
    5. 'list' → logprob: -5.216445446014404
    6. 'k' → logprob: -6.841445446014404
    7. 'cle' → logprob: -7.091445446014404
    8. 'keys' → logprob: -7.341445446014404
    9. 'element' → logprob: -7.466445446014404
    10. 'item' → logprob: -7.716445446014404

Token 879: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.019359542056918144
    2. 'de' → logprob: -5.144359588623047
    3. 'for' → logprob: -5.644359588623047
    4. 'left' → logprob: -6.019359588623047
    5. ' gauche' → logprob: -6.144359588623047
    6. 'à' → logprob: -6.269359588623047
    7. 'gau' → logprob: -6.644359588623047
    8. '_g' → logprob: -7.019359588623047
    9. 'dans' → logprob: -7.894359588623047
    10. 'dro' → logprob: -8.019359588623047

Token 880: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20912878215312958
    2. 'in' → logprob: -2.2091288566589355
    3. ' in' → logprob: -3.0841288566589355
    4. ' for' → logprob: -3.4591288566589355
    5. ':' → logprob: -6.7091288566589355
    6. ',' → logprob: -8.584128379821777
    7. ' dans' → logprob: -8.959128379821777
    8. 'dans' → logprob: -10.084128379821777
    9. ':
' → logprob: -10.459128379821777
    10. '   ' → logprob: -11.334128379821777

Token 881: ' ainsi' (ID: 16371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03372269868850708
    2. ' for' → logprob: -3.5337226390838623
    3. ' key' → logprob: -6.283722877502441
    4. 'key' → logprob: -6.658722877502441
    5. ',' → logprob: -8.283722877502441
    6. ' in' → logprob: -9.158722877502441
    7. ' clé' → logprob: -9.408722877502441
    8. 'in' → logprob: -9.533722877502441
    9. 'clé' → logprob: -10.283722877502441
    10. ' and' → logprob: -10.408722877502441

Token 882: ' que' (ID: 661)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018509145826101303
    2. ' for' → logprob: -4.0185089111328125
    3. 'pour' → logprob: -8.518508911132812
    4. ' pour' → logprob: -9.143508911132812
    5. '   ' → logprob: -11.018508911132812
    6. ':' → logprob: -11.143508911132812
    7. ' que' → logprob: -11.768508911132812
    8. '#' → logprob: -13.018508911132812
    9. ' bien' → logprob: -13.393508911132812
    10. '
' → logprob: -13.518508911132812

Token 883: ' de' (ID: 334)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.5989588499069214
    2. 'left' → logprob: -1.7239588499069214
    3. ' (' → logprob: -2.348958969116211
    4. 'count' → logprob: -3.223958969116211
    5. ' count' → logprob: -3.473958969116211
    6. ' la' → logprob: -3.598958969116211
    7. ' key' → logprob: -3.973958969116211
    8. '(left' → logprob: -3.973958969116211
    9. '(' → logprob: -5.098958969116211
    10. ' for' → logprob: -5.098958969116211

Token 884: ' leur' (ID: 9853)
  Prédit: ' sa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sa' → logprob: -0.5906297564506531
    2. ' its' → logprob: -1.3406298160552979
    3. 'its' → logprob: -2.715629816055298
    4. 'left' → logprob: -2.840629816055298
    5. ' left' → logprob: -4.090629577636719
    6. ' ses' → logprob: -4.215629577636719
    7. ' leurs' → logprob: -5.215629577636719
    8. 'sa' → logprob: -5.340629577636719
    9. ' leur' → logprob: -5.590629577636719
    10. ' la' → logprob: -6.090629577636719

Token 885: ' nombre' (ID: 9733)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.10321303457021713
    2. ' count' → logprob: -2.35321307182312
    3. 'counts' → logprob: -6.853212833404541
    4. 'value' → logprob: -7.228212833404541
    5. ' counts' → logprob: -7.978212833404541
    6. 'occ' → logprob: -8.4782133102417
    7. ' value' → logprob: -8.9782133102417
    8. ' compte' → logprob: -9.3532133102417
    9. '_count' → logprob: -9.4782133102417
    10. 'nombre' → logprob: -9.9782133102417

Token 886: ' d' (ID: 272)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6834012866020203
    2. ',' → logprob: -1.308401346206665
    3. 'for' → logprob: -1.933401346206665
    4. ' in' → logprob: -2.683401346206665
    5. ' for' → logprob: -5.808401107788086
    6. 'items' → logprob: -6.433401107788086
    7. 'dans' → logprob: -6.683401107788086
    8. ' dans' → logprob: -6.808401107788086
    9. '   ' → logprob: -7.558401107788086
    10. ' ,' → logprob: -7.683401107788086

Token 887: ''occ' (ID: 158932)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.7265058159828186
    2. 'items' → logprob: -2.101505756378174
    3. '_' → logprob: -2.601505756378174
    4. ' occurrences' → logprob: -3.101505756378174
    5. '_occ' → logprob: -3.476505756378174
    6. ''occ' → logprob: -3.726505756378174
    7. ' ' → logprob: -3.851505756378174
    8. ',' → logprob: -3.976505756378174
    9. 'occ' → logprob: -4.101505756378174
    10. ' items' → logprob: -4.101505756378174

Token 888: 'urrences' (ID: 63292)
  Prédit: 'urrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.001983118010684848
    2. 'urrence' → logprob: -6.251983165740967
    3. 'urr' → logprob: -10.501982688903809
    4. 'ur' → logprob: -11.126982688903809
    5. 'urrencies' → logprob: -12.001982688903809
    6. 'urrent' → logprob: -12.626982688903809
    7. 'curr' → logprob: -13.251982688903809
    8. 'urrency' → logprob: -15.251982688903809
    9. 'r' → logprob: -15.751982688903809
    10. '```' → logprob: -15.751982688903809

Token 889: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24312558770179749
    2. ',' → logprob: -2.7431256771087646
    3. 'in' → logprob: -2.7431256771087646
    4. ' in' → logprob: -2.9931256771087646
    5. ' for' → logprob: -3.3681256771087646
    6. ':' → logprob: -7.1181254386901855
    7. '   ' → logprob: -7.6181254386901855
    8. 'pour' → logprob: -8.493125915527344
    9. ' dans' → logprob: -8.618125915527344
    10. ' pour' → logprob: -8.868125915527344

Token 890: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.511406809295295e-06
    2. ' for' → logprob: -12.000006675720215
    3. '
' → logprob: -15.500006675720215
    4. 'pour' → logprob: -18.3750057220459
    5. 'in' → logprob: -19.0000057220459
    6. '```' → logprob: -19.1250057220459
    7. 'fo' → logprob: -19.5000057220459
    8. 'or' → logprob: -19.7500057220459
    9. '#' → logprob: -20.7500057220459
    10. 'from' → logprob: -20.8750057220459

Token 891: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.46667829155921936
    2. 'l' → logprob: -1.841678261756897
    3. ' key' → logprob: -1.966678261756897
    4. 'left' → logprob: -2.9666783809661865
    5. 'k' → logprob: -4.216678142547607
    6. ' l' → logprob: -5.716678142547607
    7. ' left' → logprob: -6.091678142547607
    8. 'pattern' → logprob: -7.716678142547607
    9. 'll' → logprob: -8.091678619384766
    10. ' k' → logprob: -8.341678619384766

Token 892: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002226860262453556
    2. ',left' → logprob: -6.252226829528809
    3. ',count' → logprob: -9.127226829528809
    4. 'in' → logprob: -9.377226829528809
    5. ' ,' → logprob: -10.377226829528809
    6. ',value' → logprob: -10.877226829528809
    7. 'left' → logprob: -11.127226829528809
    8. ',val' → logprob: -11.127226829528809
    9. ',in' → logprob: -11.502226829528809
    10. ',right' → logprob: -12.502226829528809

Token 893: ' value' (ID: 1432)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7266446948051453
    2. 'value' → logprob: -1.35164475440979
    3. 'left' → logprob: -1.60164475440979
    4. 'cnt' → logprob: -3.10164475440979
    5. 'val' → logprob: -4.851644515991211
    6. ' count' → logprob: -7.101644515991211
    7. ' left' → logprob: -7.226644515991211
    8. ' value' → logprob: -7.601644515991211
    9. 'v' → logprob: -7.726644515991211
    10. 'l' → logprob: -7.976644515991211

Token 894: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5797770023345947
    2. 'in' → logprob: -0.8297770023345947
    3. ',' → logprob: -5.579776763916016
    4. ' ' → logprob: -10.829776763916016
    5. ' ,' → logprob: -11.704776763916016
    6. '	in' → logprob: -12.329776763916016
    7. '  ' → logprob: -12.579776763916016
    8. 'ins' → logprob: -12.704776763916016
    9. ',in' → logprob: -12.829776763916016
    10. 's' → logprob: -13.204776763916016

Token 895: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.07800377160310745
    2. ' left' → logprob: -2.8280038833618164
    3. 'right' → logprob: -4.203003883361816
    4. ' right' → logprob: -6.953003883361816
    5. '(left' → logprob: -13.703003883361816
    6. '	left' → logprob: -15.203003883361816
    7. ' ' → logprob: -16.3280029296875
    8. ' lef' → logprob: -16.4530029296875
    9. 'lef' → logprob: -16.5780029296875
    10. 'le' → logprob: -16.9530029296875

Token 896: '.items' (ID: 19607)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.639283299446106
    2. ',' → logprob: -0.889283299446106
    3. ' in' → logprob: -3.7642831802368164
    4. '_items' → logprob: -4.014283180236816
    5. 'items' → logprob: -4.514283180236816
    6. 'in' → logprob: -5.264283180236816
    7. ' items' → logprob: -7.014283180236816
    8. '<|end|>' → logprob: -7.514283180236816
    9. '.items' → logprob: -7.639283180236816
    10. '   ' → logprob: -7.764283180236816

Token 897: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.754368223482743e-05
    2. '():
' → logprob: -10.000067710876465
    3. ':' → logprob: -11.000067710876465
    4. '()' → logprob: -12.250067710876465
    5. '(' → logprob: -15.500067710876465
    6. ' ():' → logprob: -15.500067710876465
    7. '():
' → logprob: -16.25006675720215
    8. '):' → logprob: -16.25006675720215
    9. '():

' → logprob: -18.50006675720215
    10. '(),' → logprob: -18.75006675720215

Token 898: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031613188330084085
    2. 'answer' → logprob: -6.128161430358887
    3. ' answer' → logprob: -7.253161430358887
    4. '	answer' → logprob: -8.253161430358887
    5. ' if' → logprob: -12.503161430358887
    6. '   ' → logprob: -13.253161430358887
    7. 'if' → logprob: -14.128161430358887
    8. '```' → logprob: -14.878161430358887
    9. '(answer' → logprob: -15.253161430358887
    10. '       ' → logprob: -16.00316047668457

Token 899: ' #' (ID: 1069)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.1973024606704712
    2. '   ' → logprob: -1.9473024606704712
    3. 'if' → logprob: -3.3223023414611816
    4. ' answer' → logprob: -8.57230281829834
    5. ' if' → logprob: -9.57230281829834
    6. '	answer' → logprob: -9.69730281829834
    7. '       ' → logprob: -13.57230281829834
    8. '    
' → logprob: -13.94730281829834
    9. '   ' → logprob: -14.07230281829834
    10. '(answer' → logprob: -14.07230281829834

Token 900: ' Pour' (ID: 13931)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.061990540474653244
    2. 'if' → logprob: -2.81199049949646
    3. '   ' → logprob: -11.311990737915039
    4. ' answer' → logprob: -11.936990737915039
    5. ' if' → logprob: -13.311990737915039
    6. '	answer' → logprob: -13.811990737915039
    7. '    
' → logprob: -15.061990737915039
    8. 'Answer' → logprob: -15.436990737915039
    9. 'count' → logprob: -15.686990737915039
    10. '(answer' → logprob: -15.811990737915039

Token 901: ' chaque' (ID: 21194)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.5658013820648193
    2. ' key' → logprob: -1.1908013820648193
    3. 'k' → logprob: -3.3158013820648193
    4. 'right' → logprob: -3.4408013820648193
    5. ' right' → logprob: -4.190801620483398
    6. 'rk' → logprob: -4.565801620483398
    7. 'val' → logprob: -4.690801620483398
    8. ' val' → logprob: -5.065801620483398
    9. 'r' → logprob: -5.440801620483398
    10. ' k' → logprob: -5.440801620483398

Token 902: ' tel' (ID: 10716)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.7102818489074707
    2. 'right' → logprob: -1.2102818489074707
    3. 'val' → logprob: -2.7102818489074707
    4. 'count' → logprob: -2.7102818489074707
    5. 'value' → logprob: -3.3352818489074707
    6. ' key' → logprob: -3.9602818489074707
    7. ' right' → logprob: -4.585281848907471
    8. ' val' → logprob: -5.960281848907471
    9. ' count' → logprob: -6.085281848907471
    10. 'cnt' → logprob: -6.085281848907471

Token 903: ' "' (ID: 392)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.674310028553009
    2. ' key' → logprob: -0.799310028553009
    3. 'value' → logprob: -4.424310207366943
    4. '   ' → logprob: -4.549310207366943
    5. '_key' → logprob: -5.549310207366943
    6. ' ' → logprob: -5.924310207366943
    7. 'if' → logprob: -6.174310207366943
    8. ' if' → logprob: -6.424310207366943
    9. 'right' → logprob: -6.924310207366943
    10. ',' → logprob: -7.049310207366943

Token 904: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0856974720954895
    2. 'value' → logprob: -2.9606974124908447
    3. 'count' → logprob: -4.085697650909424
    4. 'val' → logprob: -5.835697650909424
    5. ' key' → logprob: -5.835697650909424
    6. 'right' → logprob: -5.960697650909424
    7. 'answer' → logprob: -6.210697650909424
    8. '
' → logprob: -6.960697650909424
    9. 'occ' → logprob: -7.835697650909424
    10. 'clé' → logprob: -8.085697174072266

Token 905: '"' (ID: 1)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.363995909690857
    2. ':' → logprob: -1.488995909690857
    3. '   ' → logprob: -1.613995909690857
    4. ',' → logprob: -1.613995909690857
    5. 'in' → logprob: -2.7389960289001465
    6. '_in' → logprob: -4.1139960289001465
    7. '_' → logprob: -4.7389960289001465
    8. ' :' → logprob: -4.7389960289001465
    9. ' ,' → logprob: -5.7389960289001465
    10. ')' → logprob: -6.1139960289001465

Token 906: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2366374135017395
    2. ',' → logprob: -1.9866373538970947
    3. ' in' → logprob: -3.6116373538970947
    4. '   ' → logprob: -3.7366373538970947
    5. ':
' → logprob: -4.986637592315674
    6. 'answer' → logprob: -5.236637592315674
    7. ' answer' → logprob: -5.611637592315674
    8. 'in' → logprob: -5.736637592315674
    9. ' :' → logprob: -6.111637592315674
    10. ' ,' → logprob: -8.611637115478516

Token 907: 'comb' (ID: 43606)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.088398814201355
    2. 'key' → logprob: -1.838398814201355
    3. 'right' → logprob: -2.2133989334106445
    4. '   ' → logprob: -2.3383989334106445
    5. ' key' → logprob: -2.5883989334106445
    6. 'val' → logprob: -2.8383989334106445
    7. ' count' → logprob: -2.8383989334106445
    8. ' right' → logprob: -3.7133989334106445
    9. ' in' → logprob: -4.0883989334106445
    10. '):
' → logprob: -4.5883989334106445

Token 908: 'ina' (ID: 1522)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.1782196760177612
    2. 'iné' → logprob: -1.4282196760177612
    3. 'inaire' → logprob: -2.053219795227051
    4. 'ina' → logprob: -2.428219795227051
    5. 'inate' → logprob: -3.303219795227051
    6. ' in' → logprob: -3.428219795227051
    7. 'é' → logprob: -3.553219795227051
    8. 'inação' → logprob: -3.553219795227051
    9. 'né' → logprob: -4.053219795227051
    10. 'ination' → logprob: -4.553219795227051

Token 909: 'ison' (ID: 5072)
  Prédit: 'né'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'né' → logprob: -0.39344361424446106
    2. 'ne' → logprob: -1.6434435844421387
    3. 'n' → logprob: -2.3934435844421387
    4. 'e' → logprob: -4.268443584442139
    5. 'nation' → logprob: -5.268443584442139
    6. 'na' → logprob: -5.518443584442139
    7. 'nement' → logprob: -5.518443584442139
    8. 'née' → logprob: -5.893443584442139
    9. 'é' → logprob: -5.893443584442139
    10. 've' → logprob: -6.518443584442139

Token 910: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15956874191761017
    2. 'in' → logprob: -2.5345687866210938
    3. ',' → logprob: -4.034568786621094
    4. ' en' → logprob: -4.409568786621094
    5. '),' → logprob: -4.534568786621094
    6. ' dans' → logprob: -4.659568786621094
    7. '   ' → logprob: -4.909568786621094
    8. ')' → logprob: -5.909568786621094
    9. 'en' → logprob: -6.409568786621094
    10. ' ,' → logprob: -6.784568786621094

Token 911: ' ré' (ID: 3146)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.2289506494998932
    2. 'left' → logprob: -2.2289507389068604
    3. 'key' → logprob: -3.1039507389068604
    4. 'ré' → logprob: -3.9789507389068604
    5. 'clé' → logprob: -4.853950500488281
    6. ' right' → logprob: -5.103950500488281
    7. 're' → logprob: -5.228950500488281
    8. ' clé' → logprob: -5.353950500488281
    9. 'la' → logprob: -5.603950500488281
    10. ' key' → logprob: -6.978950500488281

Token 912: 'partition' (ID: 67655)
  Prédit: 'partition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.2017027586698532
    2. 'part' → logprob: -1.7017027139663696
    3. 'p' → logprob: -8.326703071594238
    4. 'ponses' → logprob: -11.076703071594238
    5. 'parts' → logprob: -11.326703071594238
    6. 'par' → logprob: -12.076703071594238
    7. 'paration' → logprob: -12.201703071594238
    8. 'ponse' → logprob: -13.826703071594238
    9. '-part' → logprob: -13.951703071594238
    10. '   ' → logprob: -14.076703071594238

Token 913: '),' (ID: 936)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.2555993795394897
    2. '   ' → logprob: -1.8805993795394897
    3. '),' → logprob: -1.8805993795394897
    4. ',' → logprob: -2.0055994987487793
    5. ')' → logprob: -2.3805994987487793
    6. 'in' → logprob: -2.7555994987487793
    7. ' en' → logprob: -3.2555994987487793
    8. '):' → logprob: -3.2555994987487793
    9. ' dans' → logprob: -4.255599498748779
    10. '):
' → logprob: -4.880599498748779

Token 914: ' on' (ID: 402)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.04942256212234497
    2. 'if' → logprob: -3.0494225025177
    3. '   ' → logprob: -7.549422740936279
    4. ' answer' → logprob: -8.424422264099121
    5. ' if' → logprob: -9.799422264099121
    6. '    
' → logprob: -11.174422264099121
    7. '	answer' → logprob: -11.674422264099121
    8. '
' → logprob: -11.799422264099121
    9. '(answer' → logprob: -14.549422264099121
    10. 'Answer' → logprob: -15.049422264099121

Token 915: ' multipl' (ID: 44269)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.07374946773052216
    2. 'if' → logprob: -2.698749542236328
    3. '+=' → logprob: -6.698749542236328
    4. ' answer' → logprob: -7.073749542236328
    5. '
' → logprob: -7.823749542236328
    6. ' if' → logprob: -7.948749542236328
    7. 'for' → logprob: -8.573749542236328
    8. 'value' → logprob: -8.948749542236328
    9. ':' → logprob: -9.573749542236328
    10. ']+=' → logprob: -9.823749542236328

Token 916: 'ie' (ID: 396)
  Prédit: 'ipl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipl' → logprob: -0.4039638042449951
    2. 'ie' → logprob: -1.6539638042449951
    3. 'ique' → logprob: -2.903963804244995
    4. 'ip' → logprob: -3.653963804244995
    5. 'pl' → logprob: -4.153964042663574
    6. 'plique' → logprob: -4.403964042663574
    7. 'icie' → logprob: -4.528964042663574
    8. 'iple' → logprob: -5.403964042663574
    9. 'lique' → logprob: -5.403964042663574
    10. 'ilie' → logprob: -5.403964042663574

Token 917: ' le' (ID: 505)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.6740777492523193
    2. 'value' → logprob: -1.2990777492523193
    3. '   ' → logprob: -1.6740777492523193
    4. ' answer' → logprob: -4.299077987670898
    5. ' value' → logprob: -4.424077987670898
    6. '(answer' → logprob: -5.924077987670898
    7. '(value' → logprob: -6.549077987670898
    8. '	answer' → logprob: -9.174077987670898
    9. 'right' → logprob: -9.674077987670898
    10. ')value' → logprob: -9.799077987670898

Token 918: ' nombre' (ID: 9733)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.015198289416730404
    2. 'value' → logprob: -4.640198230743408
    3. 'if' → logprob: -5.765198230743408
    4. ' answer' → logprob: -6.140198230743408
    5. ' if' → logprob: -10.140198707580566
    6. 'count' → logprob: -10.390198707580566
    7. ' value' → logprob: -10.390198707580566
    8. '   ' → logprob: -11.890198707580566
    9. 'for' → logprob: -12.140198707580566
    10. '
' → logprob: -12.515198707580566

Token 919: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.31211310625076294
    2. '   ' → logprob: -1.9371130466461182
    3. 'd' → logprob: -2.812113046646118
    4. ' de' → logprob: -3.937113046646118
    5. '=' → logprob: -4.687113285064697
    6. '#' → logprob: -4.937113285064697
    7. 'answer' → logprob: -5.562113285064697
    8. 'counter' → logprob: -5.562113285064697
    9. 'dans' → logprob: -6.187113285064697
    10. '(answer' → logprob: -6.312113285064697

Token 920: ' façons' (ID: 165958)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.08379317820072174
    2. 'right' → logprob: -3.0837931632995605
    3. ' value' → logprob: -3.4587931632995605
    4. ' right' → logprob: -6.2087931632995605
    5. 'answer' → logprob: -7.0837931632995605
    6. 'left' → logprob: -8.958793640136719
    7. ' answer' → logprob: -10.208793640136719
    8. ' ' → logprob: -11.333793640136719
    9. 'occ' → logprob: -11.333793640136719
    10. '
' → logprob: -11.708793640136719

Token 921: ' dont' (ID: 11562)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012843120843172073
    2. ' de' → logprob: -4.887843132019043
    3. ' par' → logprob: -6.012843132019043
    4. 'de' → logprob: -6.262843132019043
    5. 'par' → logprob: -8.512843132019043
    6. ',' → logprob: -9.012843132019043
    7. ' dans' → logprob: -9.762843132019043
    8. 'd' → logprob: -10.262843132019043
    9. ' by' → logprob: -10.262843132019043
    10. 'dans' → logprob: -10.387843132019043

Token 922: ' on' (ID: 402)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.19023965299129486
    2. 'right' → logprob: -1.815239667892456
    3. 'on' → logprob: -5.190239429473877
    4. 'il' → logprob: -6.940239429473877
    5. 'clé' → logprob: -7.565239429473877
    6. 'c' → logprob: -7.690239429473877
    7. ' key' → logprob: -7.690239429473877
    8. 'le' → logprob: -7.815239429473877
    9. 'answer' → logprob: -7.815239429473877
    10. 'cela' → logprob: -7.815239429473877

Token 923: ' l' (ID: 305)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.03542818874120712
    2. ' peut' → logprob: -3.910428285598755
    3. 'a' → logprob: -5.285428047180176
    4. 'tr' → logprob: -5.785428047180176
    5. 'can' → logprob: -6.410428047180176
    6. 'pour' → logprob: -6.910428047180176
    7. '#' → logprob: -7.410428047180176
    8. 'p' → logprob: -8.035428047180176
    9. '   ' → logprob: -8.035428047180176
    10. ' peux' → logprob: -8.160428047180176

Token 924: ''ob' (ID: 62273)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.2686138153076172
    2. 'tr' → logprob: -2.393613815307617
    3. ' peut' → logprob: -2.768613815307617
    4. 'a' → logprob: -3.018613815307617
    5. ' trouve' → logprob: -4.143613815307617
    6. ' a' → logprob: -6.018613815307617
    7. 'right' → logprob: -6.143613815307617
    8. 'est' → logprob: -6.518613815307617
    9. '#' → logprob: -6.643613815307617
    10. 'ren' → logprob: -6.893613815307617

Token 925: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.016009965911507607
    2. 'serve' → logprob: -4.51600980758667
    3. 'ten' → logprob: -5.76600980758667
    4. 'served' → logprob: -7.01600980758667
    5. 'tiens' → logprob: -7.76600980758667
    6. 'tenir' → logprob: -8.641010284423828
    7. 'tenant' → logprob: -8.766010284423828
    8. 'tent' → logprob: -9.766010284423828
    9. 'serv' → logprob: -10.391010284423828
    10. '```' → logprob: -10.766010284423828

Token 926: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.0008776353788562119
    2. '```' → logprob: -8.500877380371094
    3. 'ien' → logprob: -8.875877380371094
    4. 'iens' → logprob: -9.125877380371094
    5. 'iennent' → logprob: -9.250877380371094
    6. 'enir' → logprob: -10.000877380371094
    7. 'ent' → logprob: -10.000877380371094
    8. 't' → logprob: -10.500877380371094
    9. 'int' → logprob: -10.500877380371094
    10. '#' → logprob: -10.625877380371094

Token 927: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0505041666328907
    2. ' par' → logprob: -3.175504207611084
    3. ' by' → logprob: -5.550504207611084
    4. 'par' → logprob: -6.050504207611084
    5. 'by' → logprob: -7.675504207611084
    6. 'answer' → logprob: -8.050503730773926
    7. ' answer' → logprob: -9.050503730773926
    8. '(answer' → logprob: -9.925503730773926
    9. '	par' → logprob: -10.425503730773926
    10. '    ' → logprob: -10.550503730773926

Token 928: ' la' (ID: 557)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0059578376822173595
    2. ' right' → logprob: -5.13095760345459
    3. 'left' → logprob: -10.75595760345459
    4. '   ' → logprob: -13.25595760345459
    5. 'answer' → logprob: -13.75595760345459
    6. ' ' → logprob: -13.88095760345459
    7. 'value' → logprob: -14.38095760345459
    8. '	right' → logprob: -14.38095760345459
    9. '[right' → logprob: -14.63095760345459
    10. '
' → logprob: -14.63095760345459

Token 929: ' moitié' (ID: 93216)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00031508569372817874
    2. ' right' → logprob: -8.375314712524414
    3. 'left' → logprob: -9.625314712524414
    4. 'answer' → logprob: -11.750314712524414
    5. '#' → logprob: -12.125314712524414
    6. '
' → logprob: -13.875314712524414
    7. '[right' → logprob: -14.250314712524414
    8. 'rig' → logprob: -14.500314712524414
    9. '	right' → logprob: -14.750314712524414
    10. '(right' → logprob: -15.000314712524414

Token 930: ' gauche' (ID: 58367)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.016278928145766258
    2. ' right' → logprob: -4.5162787437438965
    3. '   ' → logprob: -6.2662787437438965
    4. '(right' → logprob: -6.5162787437438965
    5. '[right' → logprob: -7.2662787437438965
    6. ',right' → logprob: -7.6412787437438965
    7. ',' → logprob: -8.516279220581055
    8. 'for' → logprob: -9.641279220581055
    9. 'left' → logprob: -9.766279220581055
    10. '```' → logprob: -9.766279220581055

Token 931: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029755352064967155
    2. '*' → logprob: -4.779755115509033
    3. ' answer' → logprob: -4.904755115509033
    4. 'answer' → logprob: -5.779755115509033
    5. ' *' → logprob: -6.029755115509033
    6. ',' → logprob: -6.154755115509033
    7. '<|end|>' → logprob: -6.779755115509033
    8. ' and' → logprob: -7.029755115509033
    9. '    
' → logprob: -7.654755115509033
    10. ' for' → logprob: -7.904755115509033

Token 932: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.5774095058441162
    2. ' value' → logprob: -0.8274095058441162
    3. ')' → logprob: -7.702409744262695
    4. 'answer' → logprob: -8.577409744262695
    5. 'right' → logprob: -8.702409744262695
    6. ' answer' → logprob: -8.952409744262695
    7. '   ' → logprob: -9.077409744262695
    8. ' )' → logprob: -9.452409744262695
    9. ''value' → logprob: -9.577409744262695
    10. ' right' → logprob: -9.952409744262695

Token 933: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05662509426474571
    2. ')*' → logprob: -3.6816251277923584
    3. '*' → logprob: -4.056624889373779
    4. '   ' → logprob: -4.806624889373779
    5. ' *' → logprob: -6.431624889373779
    6. '*)' → logprob: -6.681624889373779
    7. ' )' → logprob: -6.806624889373779
    8. '),' → logprob: -9.806625366210938
    9. '    ' → logprob: -9.806625366210938
    10. '  ' → logprob: -9.931625366210938

Token 934: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 935: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3655899167060852
    2. '<|end|>' → logprob: -1.4905898571014404
    3. '  ' → logprob: -3.9905898571014404
    4. ' ' → logprob: -4.3655900955200195
    5. '<|end|>' → logprob: -5.1155900955200195
    6. ',' → logprob: -5.1155900955200195
    7. '    ' → logprob: -5.3655900955200195
    8. 'in' → logprob: -5.6155900955200195
    9. ')' → logprob: -5.6155900955200195
    10. 'for' → logprob: -5.8655900955200195

Token 936: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1842588633298874
    2. 'answer' → logprob: -2.0592589378356934
    3. ' answer' → logprob: -3.8092589378356934
    4. '*' → logprob: -4.934258937835693
    5. ' by' → logprob: -5.809258937835693
    6. ' with' → logprob: -6.559258937835693
    7. ' *' → logprob: -7.059258937835693
    8. ' if' → logprob: -7.059258937835693
    9. '    
' → logprob: -7.184258937835693
    10. ' and' → logprob: -7.309258937835693

Token 937: ' le' (ID: 505)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.03808864951133728
    2. ' right' → logprob: -3.28808856010437
    3. '   ' → logprob: -10.03808879852295
    4. '	right' → logprob: -13.41308879852295
    5. '(right' → logprob: -14.03808879852295
    6. '[right' → logprob: -14.16308879852295
    7. ' ' → logprob: -15.91308879852295
    8. '  ' → logprob: -16.413087844848633
    9. 'left' → logprob: -16.538087844848633
    10. '    ' → logprob: -16.788087844848633

Token 938: ' nombre' (ID: 9733)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.225419282913208
    2. ' right' → logprob: -1.600419282913208
    3. '[right' → logprob: -13.475419044494629
    4. '	right' → logprob: -13.850419044494629
    5. 'left' → logprob: -14.100419044494629
    6. '(right' → logprob: -14.225419044494629
    7. ' ' → logprob: -14.725419044494629
    8. '   ' → logprob: -15.225419044494629
    9. ')' → logprob: -15.225419044494629
    10. '#' → logprob: -15.475419044494629

Token 939: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1523369699716568
    2. 'de' → logprob: -2.902337074279785
    3. ' d' → logprob: -3.277337074279785
    4. '   ' → logprob: -3.652337074279785
    5. 'd' → logprob: -4.402337074279785
    6. ' of' → logprob: -6.777337074279785
    7. ' =' → logprob: -6.902337074279785
    8. '=' → logprob: -6.902337074279785
    9. 'for' → logprob: -6.902337074279785
    10. 's' → logprob: -7.152337074279785

Token 940: ' façons' (ID: 165958)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.20142357051372528
    2. ' right' → logprob: -1.7014235258102417
    3. '(right' → logprob: -11.951423645019531
    4. '	right' → logprob: -13.826423645019531
    5. '[right' → logprob: -14.076423645019531
    6. 'left' → logprob: -14.201423645019531
    7. ' ' → logprob: -14.951423645019531
    8. ')' → logprob: -15.451423645019531
    9. '_right' → logprob: -15.451423645019531
    10. '
' → logprob: -15.826423645019531

Token 941: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8500273823738098
    2. 'right' → logprob: -1.725027322769165
    3. 'de' → logprob: -1.725027322769165
    4. 'dans' → logprob: -2.600027322769165
    5. '(right' → logprob: -3.475027322769165
    6. ' de' → logprob: -3.475027322769165
    7. 'for' → logprob: -3.725027322769165
    8. ' right' → logprob: -4.475027561187744
    9. 'in' → logprob: -4.725027561187744
    10. ' dans' → logprob: -5.100027561187744

Token 942: ' la' (ID: 557)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.038049984723329544
    2. ' right' → logprob: -3.2880499362945557
    3. 'key' → logprob: -12.538049697875977
    4. '(right' → logprob: -13.663049697875977
    5. '   ' → logprob: -14.038049697875977
    6. ' key' → logprob: -14.038049697875977
    7. '	right' → logprob: -14.288049697875977
    8. 'left' → logprob: -14.413049697875977
    9. '[right' → logprob: -14.413049697875977
    10. ' ' → logprob: -15.163049697875977

Token 943: ' moitié' (ID: 93216)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.030867233872413635
    2. ' right' → logprob: -3.780867338180542
    3. 'key' → logprob: -5.155867099761963
    4. 'answer' → logprob: -6.905867099761963
    5. ' key' → logprob: -7.405867099761963
    6. ' answer' → logprob: -9.155867576599121
    7. 'left' → logprob: -10.155867576599121
    8. 'value' → logprob: -10.655867576599121
    9. '
' → logprob: -11.405867576599121
    10. ' ' → logprob: -12.030867576599121

Token 944: ' droite' (ID: 61428)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.10105276107788086
    2. 'dro' → logprob: -3.351052761077881
    3. ' droite' → logprob: -3.976052761077881
    4. ' right' → logprob: -4.351052761077881
    5. 'key' → logprob: -4.726052761077881
    6. '[right' → logprob: -5.101052761077881
    7. '_right' → logprob: -5.476052761077881
    8. '[key' → logprob: -5.726052761077881
    9. '```' → logprob: -7.226052761077881
    10. 'clé' → logprob: -7.226052761077881

Token 945: ' a' (ID: 261)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.7166810631752014
    2. '[key' → logprob: -0.8416810631752014
    3. 'get' → logprob: -3.5916810035705566
    4. '   ' → logprob: -4.091681003570557
    5. 'key' → logprob: -5.216681003570557
    6. '(key' → logprob: -5.341681003570557
    7. '#' → logprob: -5.966681003570557
    8. ' ' → logprob: -6.091681003570557
    9. ' has' → logprob: -6.091681003570557
    10. 'a' → logprob: -6.341681003570557

Token 946: ' la' (ID: 557)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5803425908088684
    2. 'key' → logprob: -0.8303425908088684
    3. ' right' → logprob: -6.080342769622803
    4. ' key' → logprob: -6.205342769622803
    5. '[key' → logprob: -10.955342292785645
    6. 'left' → logprob: -10.955342292785645
    7. ' ' → logprob: -11.455342292785645
    8. '[right' → logprob: -11.955342292785645
    9. '(key' → logprob: -12.080342292785645
    10. 'la' → logprob: -12.330342292785645

Token 947: ' même' (ID: 9679)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.02937955968081951
    2. 'key' → logprob: -3.6543796062469482
    3. ' right' → logprob: -5.904379367828369
    4. ' key' → logprob: -8.404379844665527
    5. 'same' → logprob: -9.654379844665527
    6. 'left' → logprob: -10.904379844665527
    7. 'counter' → logprob: -11.279379844665527
    8. 'value' → logprob: -12.279379844665527
    9. ' ' → logprob: -12.529379844665527
    10. 'answer' → logprob: -13.029379844665527

Token 948: ' ré' (ID: 3146)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0876629650592804
    2. '[key' → logprob: -2.837662935256958
    3. 'occ' → logprob: -4.962663173675537
    4. 'value' → logprob: -5.212663173675537
    5. 'get' → logprob: -5.587663173675537
    6. 'counter' → logprob: -5.837663173675537
    7. ' key' → logprob: -6.087663173675537
    8. 'count' → logprob: -6.587663173675537
    9. 'clé' → logprob: -7.337663173675537
    10. 'occur' → logprob: -7.462663173675537

Token 949: 'partition' (ID: 67655)
  Prédit: 'ponse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponse' → logprob: -0.0711531937122345
    2. 'ponses' → logprob: -2.821153163909912
    3. 'p' → logprob: -5.196153163909912
    4. 'key' → logprob: -6.571153163909912
    5. 'partition' → logprob: -6.821153163909912
    6. 'pon' → logprob: -8.19615364074707
    7. 'pons' → logprob: -8.44615364074707
    8. 'f' → logprob: -9.94615364074707
    9. 'answer' → logprob: -9.94615364074707
    10. 'curr' → logprob: -10.32115364074707

Token 950: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015076172538101673
    2. ' if' → logprob: -4.890076160430908
    3. ',' → logprob: -6.140076160430908
    4. '[' → logprob: -6.515076160430908
    5. 'if' → logprob: -6.890076160430908
    6. 'answer' → logprob: -7.390076160430908
    7. '    
' → logprob: -7.640076160430908
    8. '
' → logprob: -8.390076637268066
    9. ' for' → logprob: -8.640076637268066
    10. '<|end|>' → logprob: -8.640076637268066

Token 951: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0011939177056774497
    2. ' right' → logprob: -6.751194000244141
    3. 'key' → logprob: -11.37619400024414
    4. '   ' → logprob: -11.62619400024414
    5. ')' → logprob: -14.25119400024414
    6. 'left' → logprob: -14.50119400024414
    7. ' key' → logprob: -14.62619400024414
    8. 'answer' → logprob: -14.62619400024414
    9. '[right' → logprob: -14.62619400024414
    10. 'value' → logprob: -14.87619400024414

Token 952: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.08922690153121948
    2. '.get' → logprob: -2.4642269611358643
    3. '[' → logprob: -9.214226722717285
    4. 'get' → logprob: -9.464226722717285
    5. 'key' → logprob: -9.839226722717285
    6. '   ' → logprob: -10.714226722717285
    7. '.' → logprob: -11.464226722717285
    8. ')' → logprob: -12.714226722717285
    9. '[get' → logprob: -12.714226722717285
    10. '
' → logprob: -12.964226722717285

Token 953: ']).
' (ID: 135644)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0030285713728517294
    2. ']' → logprob: -6.003028392791748
    3. ' ])' → logprob: -8.128028869628906
    4. '],' → logprob: -9.628028869628906
    5. '])*' → logprob: -10.128028869628906
    6. ')' → logprob: -10.753028869628906
    7. ']*)' → logprob: -10.753028869628906
    8. '])
' → logprob: -10.878028869628906
    9. '   ' → logprob: -10.878028869628906
    10. ']):' → logprob: -11.003028869628906

Token 954: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08789018541574478
    2. 'answer' → logprob: -2.587890148162842
    3. ' answer' → logprob: -5.087890148162842
    4. '	answer' → logprob: -6.587890148162842
    5. ':' → logprob: -7.837890148162842
    6. '
' → logprob: -7.962890148162842
    7. '```' → logprob: -8.587890625
    8. ')' → logprob: -9.337890625
    9. '    
' → logprob: -9.962890625
    10. '(answer' → logprob: -10.212890625

Token 955: ' #' (ID: 1069)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.031456414610147476
    2. ' answer' → logprob: -3.906456470489502
    3. '   ' → logprob: -4.656456470489502
    4. '	answer' → logprob: -6.656456470489502
    5. '
' → logprob: -9.781455993652344
    6. '(answer' → logprob: -12.406455993652344
    7. '    
' → logprob: -13.031455993652344
    8. '\t' → logprob: -13.406455993652344
    9. '```' → logprob: -14.031455993652344
    10. ' 
' → logprob: -14.406455993652344

Token 956: ' Cela' (ID: 44403)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.002487787976861
    2. ' answer' → logprob: -6.002487659454346
    3. '   ' → logprob: -11.502488136291504
    4. '
' → logprob: -13.752488136291504
    5. '	answer' → logprob: -13.877488136291504
    6. '    
' → logprob: -17.627487182617188
    7. '.answer' → logprob: -18.502487182617188
    8. '(answer' → logprob: -19.002487182617188
    9. 'Answer' → logprob: -19.002487182617188
    10. '_answer' → logprob: -19.127487182617188

Token 957: ' donne' (ID: 30004)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4268837571144104
    2. ')' → logprob: -2.6768836975097656
    3. ' +=' → logprob: -3.1768836975097656
    4. '#' → logprob: -3.1768836975097656
    5. 'answer' → logprob: -3.3018836975097656
    6. '*' → logprob: -3.4268836975097656
    7. '*=' → logprob: -3.5518836975097656
    8. '
' → logprob: -3.5518836975097656
    9. '   ' → logprob: -3.9268836975097656
    10. '.' → logprob: -3.9268836975097656

Token 958: ' le' (ID: 505)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.44262030720710754
    2. ' value' → logprob: -1.1926202774047852
    3. 'answer' → logprob: -3.067620277404785
    4. ' answer' → logprob: -4.942620277404785
    5. '   ' → logprob: -7.567620277404785
    6. '
' → logprob: -11.442620277404785
    7. ')value' → logprob: -11.817620277404785
    8. '	answer' → logprob: -12.567620277404785
    9. '```' → logprob: -12.692620277404785
    10. '	value' → logprob: -12.692620277404785

Token 959: ' nombre' (ID: 9733)
  Prédit: ' answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' answer' → logprob: -0.8115299940109253
    2. '+' → logprob: -1.0615299940109253
    3. 'answer' → logprob: -1.6865299940109253
    4. ' +=' → logprob: -4.811530113220215
    5. ' value' → logprob: -5.061530113220215
    6. 'value' → logprob: -5.811530113220215
    7. '+=' → logprob: -5.936530113220215
    8. ' +' → logprob: -6.186530113220215
    9. '*' → logprob: -8.311530113220215
    10. ' plus' → logprob: -8.561530113220215

Token 960: ' de' (ID: 334)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6815401911735535
    2. ' de' → logprob: -1.9315402507781982
    3. '+=' → logprob: -1.9315402507781982
    4. '=' → logprob: -2.5565402507781982
    5. 'answer' → logprob: -2.9315402507781982
    6. ' answer' → logprob: -4.306540012359619
    7. '   ' → logprob: -4.431540012359619
    8. ' =' → logprob: -4.431540012359619
    9. '*' → logprob: -4.806540012359619
    10. ' d' → logprob: -5.181540012359619

Token 961: ' comb' (ID: 4134)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.8300360441207886
    2. 'answer' → logprob: -1.0800360441207886
    3. ' answer' → logprob: -2.080036163330078
    4. ' value' → logprob: -2.330036163330078
    5. ' ways' → logprob: -7.205036163330078
    6. '"value' → logprob: -7.705036163330078
    7. 'ways' → logprob: -8.580036163330078
    8. '(answer' → logprob: -9.205036163330078
    9. 'possible' → logprob: -9.330036163330078
    10. 'answers' → logprob: -9.705036163330078

Token 962: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.14640848338603973
    2. 'ina' → logprob: -2.2714085578918457
    3. 'left' → logprob: -5.021408557891846
    4. 'answer' → logprob: -5.146408557891846
    5. 'inations' → logprob: -5.271408557891846
    6. 'right' → logprob: -5.271408557891846
    7. 'inas' → logprob: -5.646408557891846
    8. 'for' → logprob: -6.146408557891846
    9. '   ' → logprob: -7.146408557891846
    10. 'value' → logprob: -8.021408081054688

Token 963: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.0021578760351985693
    2. 'sons' → logprob: -6.502157688140869
    3. 'ais' → logprob: -8.002158164978027
    4. 'asons' → logprob: -9.002158164978027
    5. 'a' → logprob: -9.502158164978027
    6. 'on' → logprob: -10.127158164978027
    7. '#' → logprob: -10.377158164978027
    8. ' sons' → logprob: -12.002158164978027
    9. 's' → logprob: -12.377158164978027
    10. 'isons' → logprob: -12.502158164978027

Token 964: ' global' (ID: 5466)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.8379912376403809
    2. 'answer' → logprob: -2.087991237640381
    3. ' de' → logprob: -2.462991237640381
    4. 'possible' → logprob: -2.462991237640381
    5. '   ' → logprob: -2.712991237640381
    6. ' possible' → logprob: -3.087991237640381
    7. '+=' → logprob: -3.337991237640381
    8. '=' → logprob: -3.837991237640381
    9. ' answer' → logprob: -3.962991237640381
    10. ' =' → logprob: -4.087991237640381

Token 965: 'es' (ID: 268)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -1.2603209018707275
    2. 'possible' → logprob: -2.1353209018707275
    3. ' answer' → logprob: -2.3853209018707275
    4. 'answer' → logprob: -2.3853209018707275
    5. '   ' → logprob: -2.5103209018707275
    6. ' +=' → logprob: -2.8853209018707275
    7. ' de' → logprob: -2.8853209018707275
    8. '_answer' → logprob: -3.3853209018707275
    9. '_possible' → logprob: -3.7603209018707275
    10. ' =' → logprob: -4.135320663452148

Token 966: ' où' (ID: 15113)
  Prédit: ' answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' answer' → logprob: -0.5898473858833313
    2. 'answer' → logprob: -1.3398473262786865
    3. '   ' → logprob: -2.3398473262786865
    4. ' +=' → logprob: -2.5898473262786865
    5. '+=' → logprob: -5.714847564697266
    6. '(answer' → logprob: -5.839847564697266
    7. '	answer' → logprob: -6.464847564697266
    8. '=' → logprob: -6.964847564697266
    9. ' =' → logprob: -7.089847564697266
    10. '
' → logprob: -7.839847564697266

Token 967: ' la' (ID: 557)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.22806210815906525
    2. ' answer' → logprob: -1.6030621528625488
    3. 'les' → logprob: -7.103062152862549
    4. 'key' → logprob: -7.478062152862549
    5. ' key' → logprob: -8.10306167602539
    6. ' les' → logprob: -8.47806167602539
    7. 'value' → logprob: -8.47806167602539
    8. ' la' → logprob: -8.97806167602539
    9. ' value' → logprob: -9.85306167602539
    10. '   ' → logprob: -10.22806167602539

Token 968: ' ré' (ID: 3146)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.5887210965156555
    2. ' answer' → logprob: -1.5887210369110107
    3. 'key' → logprob: -1.8387210369110107
    4. ' key' → logprob: -3.5887210369110107
    5. 'de' → logprob: -3.9637210369110107
    6. 'characters' → logprob: -5.08872127532959
    7. 'car' → logprob: -5.46372127532959
    8. 'left' → logprob: -6.08872127532959
    9. 'clé' → logprob: -6.33872127532959
    10. ' deux' → logprob: -6.33872127532959

Token 969: 'partition' (ID: 67655)
  Prédit: 'partition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.1157456710934639
    2. 'ponse' → logprob: -2.865745782852173
    3. 'answer' → logprob: -3.240745782852173
    4. 'part' → logprob: -4.365745544433594
    5. '   ' → logprob: -8.365745544433594
    6. 'p' → logprob: -9.740745544433594
    7. 's' → logprob: -9.740745544433594
    8. 'pon' → logprob: -10.740745544433594
    9. 'value' → logprob: -11.115745544433594
    10. '
' → logprob: -11.240745544433594

Token 970: ' est' (ID: 893)
  Prédit: '[key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.8514618873596191
    2. ' de' → logprob: -1.8514618873596191
    3. '   ' → logprob: -2.601461887359619
    4. ' des' → logprob: -2.726461887359619
    5. ' est' → logprob: -3.226461887359619
    6. '#' → logprob: -3.851461887359619
    7. 'de' → logprob: -3.851461887359619
    8. 'possible' → logprob: -3.851461887359619
    9. ' +=' → logprob: -4.101461887359619
    10. '_key' → logprob: -4.226461887359619

Token 971: ' ident' (ID: 3951)
  Prédit: 'ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ident' → logprob: -0.6192532777786255
    2. 'key' → logprob: -2.744253158569336
    3. ' ég' → logprob: -2.744253158569336
    4. '   ' → logprob: -2.869253158569336
    5. 'sym' → logprob: -3.119253158569336
    6. ' ident' → logprob: -3.119253158569336
    7. 'exact' → logprob: -3.119253158569336
    8. 'correct' → logprob: -3.369253158569336
    9. 'compatible' → logprob: -3.869253158569336
    10. 'équ' → logprob: -4.244253158569336

Token 972: 'ique' (ID: 2222)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.03287993744015694
    2. 'ique' → logprob: -3.5328798294067383
    3. 't' → logprob: -7.407879829406738
    4. '#' → logprob: -7.532879829406738
    5. 'q' → logprob: -7.907879829406738
    6. 'cal' → logprob: -7.907879829406738
    7. 'ques' → logprob: -8.532879829406738
    8. 'f' → logprob: -8.907879829406738
    9. '```' → logprob: -9.032879829406738
    10. 'qu' → logprob: -9.407879829406738

Token 973: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012451570364646614
    2. '
' → logprob: -9.87512493133545
    3. 'answer' → logprob: -10.25012493133545
    4. ' answer' → logprob: -10.87512493133545
    5. ',' → logprob: -11.87512493133545
    6. '    
' → logprob: -12.62512493133545
    7. '	answer' → logprob: -12.62512493133545
    8. '(answer' → logprob: -13.75012493133545
    9. ')' → logprob: -14.37512493133545
    10. '   ' → logprob: -14.37512493133545

Token 974: ' les' (ID: 1341)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.767143964767456
    2. ' key' → logprob: -1.017143964767456
    3. ' la' → logprob: -3.017143964767456
    4. 'les' → logprob: -3.392143964767456
    5. '   ' → logprob: -4.267144203186035
    6. 'la' → logprob: -4.267144203186035
    7. 'both' → logprob: -4.392144203186035
    8. ' les' → logprob: -4.517144203186035
    9. 'l' → logprob: -4.642144203186035
    10. 'left' → logprob: -4.892144203186035

Token 975: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.12263385951519012
    2. ' deux' → logprob: -2.247633934020996
    3. '2' → logprob: -4.872633934020996
    4. ' ' → logprob: -7.122633934020996
    5. 'dro' → logprob: -7.997633934020996
    6. 'g' → logprob: -8.247633934020996
    7. '```' → logprob: -8.622633934020996
    8. 'two' → logprob: -9.247633934020996
    9. ' two' → logprob: -9.372633934020996
    10. '#' → logprob: -9.872633934020996

Token 976: ' mo' (ID: 2093)
  Prédit: ' côtés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' côtés' → logprob: -0.17262369394302368
    2. 'c' → logprob: -3.297623634338379
    3. 'key' → logprob: -3.672623634338379
    4. 'keys' → logprob: -3.797623634338379
    5. '   ' → logprob: -3.922623634338379
    6. ' sides' → logprob: -4.422623634338379
    7. 'cot' → logprob: -4.797623634338379
    8. 'cl' → logprob: -4.797623634338379
    9. ' clés' → logprob: -4.797623634338379
    10. 'clé' → logprob: -4.922623634338379

Token 977: 'iti' (ID: 3889)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5923263430595398
    2. 'd' → logprob: -1.8423264026641846
    3. 'ut' → logprob: -2.9673264026641846
    4. 'del' → logprob: -3.2173264026641846
    5. 'vement' → logprob: -3.5923264026641846
    6. 'ur' → logprob: -3.8423264026641846
    7. 'v' → logprob: -4.0923261642456055
    8. 'ment' → logprob: -4.0923261642456055
    9. 'de' → logprob: -4.3423261642456055
    10. 'ins' → logprob: -4.7173261642456055

Token 978: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.053010258823633194
    2. 'es' → logprob: -3.0530102252960205
    3. 'é' → logprob: -5.9280104637146
    4. 'ées' → logprob: -7.1780104637146
    5. 's' → logprob: -7.3030104637146
    6. 'étés' → logprob: -9.053009986877441
    7. '   ' → logprob: -10.553009986877441
    8. '#' → logprob: -10.803009986877441
    9. 'ès' → logprob: -11.178009986877441
    10. 'e' → logprob: -11.303009986877441

Token 979: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009951811283826828
    2. '
' → logprob: -4.759951591491699
    3. 'answer' → logprob: -7.134951591491699
    4. '    
' → logprob: -8.2599515914917
    5. ' answer' → logprob: -8.6349515914917
    6. '	answer' → logprob: -10.2599515914917
    7. '  ' → logprob: -11.3849515914917
    8. ')' → logprob: -11.6349515914917
    9. ',' → logprob: -11.7599515914917
    10. '(answer' → logprob: -11.7599515914917

Token 980: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037329760380089283
    2. 'answer' → logprob: -6.253733158111572
    3. ' answer' → logprob: -7.253733158111572
    4. '
' → logprob: -7.378733158111572
    5. '	answer' → logprob: -8.878732681274414
    6. ':' → logprob: -9.253732681274414
    7. ',' → logprob: -9.878732681274414
    8. '    
' → logprob: -9.878732681274414
    9. ')' → logprob: -10.128732681274414
    10. ':
' → logprob: -11.128732681274414

Token 981: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.14107562601566315
    2. '   ' → logprob: -2.516075611114502
    3. ' answer' → logprob: -3.016075611114502
    4. '
' → logprob: -7.516075611114502
    5. ':' → logprob: -8.14107608795166
    6. '	answer' → logprob: -8.14107608795166
    7. '):' → logprob: -8.51607608795166
    8. '):
' → logprob: -8.76607608795166
    9. ')' → logprob: -9.01607608795166
    10. '(answer' → logprob: -10.01607608795166

Token 982: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.693200945854187
    2. '+=' → logprob: -0.693200945854187
    3. '+' → logprob: -10.568201065063477
    4. ']+=' → logprob: -11.193201065063477
    5. '+=(' → logprob: -11.818201065063477
    6. '	' → logprob: -12.818201065063477
    7. '   ' → logprob: -13.318201065063477
    8. '=' → logprob: -13.568201065063477
    9. '+="' → logprob: -14.943201065063477
    10. '+='' → logprob: -14.943201065063477

Token 983: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.029750952497124672
    2. ' value' → logprob: -3.5297510623931885
    3. ' ' → logprob: -15.27975082397461
    4. '(value' → logprob: -16.52975082397461
    5. '  ' → logprob: -17.02975082397461
    6. '	value' → logprob: -17.15475082397461
    7. '   ' → logprob: -17.40475082397461
    8. 'right' → logprob: -18.02975082397461
    9. 'valu' → logprob: -18.40475082397461
    10. 'val' → logprob: -18.52975082397461

Token 984: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04859020933508873
    2. '*' → logprob: -3.0485901832580566
    3. ' ' → logprob: -13.048590660095215
    4. '**' → logprob: -15.298590660095215
    5. ' ' → logprob: -15.923590660095215
    6. ' *
' → logprob: -16.2985897064209
    7. ' **' → logprob: -16.5485897064209
    8. '
' → logprob: -16.6735897064209
    9. '   ' → logprob: -17.1735897064209
    10. 'right' → logprob: -17.5485897064209

Token 985: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0002613358374219388
    2. ' right' → logprob: -8.250261306762695
    3. '	right' → logprob: -20.375261306762695
    4. '   ' → logprob: -20.875261306762695
    5. '[right' → logprob: -21.000261306762695
    6. 'rig' → logprob: -21.125261306762695
    7. '(right' → logprob: -22.000261306762695
    8. ' ' → logprob: -22.000261306762695
    9. 'left' → logprob: -22.250261306762695
    10. 'r' → logprob: -22.250261306762695

Token 986: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -3.128163257315464e-07
    2. '.get' → logprob: -15.5
    3. '[' → logprob: -17.625
    4. ' [' → logprob: -18.375
    5. 'key' → logprob: -18.5
    6. '[
' → logprob: -19.0
    7. '[k' → logprob: -19.75
    8. 'get' → logprob: -19.875
    9. '(key' → logprob: -20.625
    10. '[get' → logprob: -21.25

Token 987: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.078839502763003e-05
    2. ']
' → logprob: -9.875090599060059
    3. ')' → logprob: -10.750090599060059
    4. ' ]' → logprob: -11.500090599060059
    5. ']

' → logprob: -12.625090599060059
    6. '']' → logprob: -13.750090599060059
    7. '}' → logprob: -14.125090599060059
    8. '])' → logprob: -14.125090599060059
    9. ']
' → logprob: -14.875090599060059
    10. '"]' → logprob: -14.875090599060059

Token 988: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03810001164674759
    2. '
' → logprob: -3.288100004196167
    3. ' print' → logprob: -10.663100242614746
    4. '
' → logprob: -11.288100242614746
    5. '```' → logprob: -11.663100242614746
    6. '  
' → logprob: -12.538100242614746
    7. ' 
' → logprob: -13.038100242614746
    8. '\n' → logprob: -13.288100242614746
    9. '#' → logprob: -13.413100242614746
    10. '

' → logprob: -13.413100242614746

Token 989: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.75
    3. 'prin' → logprob: -19.125
    4. 'pr' → logprob: -19.25
    5. '#print' → logprob: -19.625
    6. '
' → logprob: -19.625
    7. 'prit' → logprob: -22.25
    8. '```' → logprob: -22.375
    9. '#' → logprob: -23.0
    10. 'printf' → logprob: -23.875

Token 990: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.1398363709449768
    2. 'ichage' → logprob: -2.264836311340332
    3. 'iche' → logprob: -4.014836311340332
    4. '#' → logprob: -4.889836311340332
    5. 'ich' → logprob: -7.264836311340332
    6. 'ic' → logprob: -9.639836311340332
    7. 'ichier' → logprob: -9.764836311340332
    8. 'iché' → logprob: -9.889836311340332
    9. '```' → logprob: -10.139836311340332
    10. '   ' → logprob: -10.389836311340332

Token 991: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15517668426036835
    2. '(answer' → logprob: -2.4051766395568848
    3. '(print' → logprob: -3.4051766395568848
    4. '(' → logprob: -3.9051766395568848
    5. '(ans' → logprob: -9.280177116394043
    6. 'answer' → logprob: -10.155177116394043
    7. '()' → logprob: -11.905177116394043
    8. '(
' → logprob: -12.280177116394043
    9. '```' → logprob: -13.780177116394043
    10. '(output' → logprob: -13.905177116394043

Token 992: ' la' (ID: 557)
  Prédit: '(answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.3868713676929474
    2. 'answer' → logprob: -1.136871337890625
    3. ' answer' → logprob: -15.511871337890625
    4. '(ans' → logprob: -15.886871337890625
    5. '	answer' → logprob: -17.261871337890625
    6. 'ans' → logprob: -17.511871337890625
    7. 'ANSWER' → logprob: -18.636871337890625
    8. '(' → logprob: -19.386871337890625
    9. '_answer' → logprob: -19.886871337890625
    10. '.answer' → logprob: -20.261871337890625

Token 993: ' réponse' (ID: 50332)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.00407923199236393
    2. '(answer' → logprob: -5.504079341888428
    3. ' answer' → logprob: -14.37907886505127
    4. 'print' → logprob: -15.87907886505127
    5. 'ans' → logprob: -16.129079818725586
    6. '(ans' → logprob: -18.504079818725586
    7. '(' → logprob: -18.629079818725586
    8. '(
' → logprob: -18.879079818725586
    9. 'ANSWER' → logprob: -19.004079818725586
    10. '	answer' → logprob: -19.504079818725586

Token 994: ' calcul' (ID: 7559)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.375
    3. '
' → logprob: -17.5
    4. 'answer' → logprob: -19.375
    5. ' print' → logprob: -20.125
    6. '``' → logprob: -21.25
    7. '(print' → logprob: -21.625
    8. '#print' → logprob: -21.625
    9. 'println' → logprob: -23.75
    10. 'ans' → logprob: -24.0

Token 995: 'ée' (ID: 2894)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6154543161392212
    2. 'ée' → logprob: -0.8654543161392212
    3. 'é' → logprob: -3.9904541969299316
    4. 'e' → logprob: -4.615454196929932
    5. '(answer' → logprob: -5.490454196929932
    6. 'answer' → logprob: -5.740454196929932
    7. '#print' → logprob: -6.865454196929932
    8. 'ate' → logprob: -7.490454196929932
    9. '#' → logprob: -7.740454196929932
    10. 'ee' → logprob: -7.990454196929932

Token 996: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.5
    3. '
' → logprob: -17.125
    4. 'answer' → logprob: -18.0
    5. '(print' → logprob: -19.5
    6. ' print' → logprob: -19.75
    7. '``' → logprob: -21.5
    8. '#print' → logprob: -21.875
    9. 'println' → logprob: -22.75
    10. '(' → logprob: -22.875

Token 997: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. 'answer' → logprob: -14.250000953674316
    3. ' print' → logprob: -16.5
    4. '
' → logprob: -18.5
    5. '```' → logprob: -21.125
    6. '#print' → logprob: -22.25
    7. ' answer' → logprob: -25.75
    8. '(print' → logprob: -25.75
    9. '``' → logprob: -25.875
    10. '    
' → logprob: -26.0

Token 998: ''est' (ID: 6616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12937064468860626
    2. 'ho' → logprob: -2.50437068939209
    3. 'nd' → logprob: -4.50437068939209
    4. 'on' → logprob: -5.25437068939209
    5. 'hr' → logprob: -5.37937068939209
    6. 'ode' → logprob: -5.62937068939209
    7. '#print' → logprob: -5.75437068939209
    8. 'har' → logprob: -5.87937068939209
    9. '```' → logprob: -6.25437068939209
    10. 'ont' → logprob: -6.37937068939209

Token 999: '-à' (ID: 56297)
  Prédit: '(answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.761780321598053
    2. 'answer' → logprob: -1.1367802619934082
    3. 'ult' → logprob: -2.761780261993408
    4. '_answer' → logprob: -3.886780261993408
    5. 'à' → logprob: -4.386780261993408
    6. '(' → logprob: -4.636780261993408
    7. 'int' → logprob: -4.636780261993408
    8. '_' → logprob: -4.761780261993408
    9. 'a' → logprob: -5.136780261993408
    10. 'f' → logprob: -5.511780261993408

Token 1000: '-dire' (ID: 76064)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8910015821456909
    2. 'x' → logprob: -2.1410017013549805
    3. 't' → logprob: -2.5160017013549805
    4. 'int' → logprob: -2.6410017013549805
    5. 'print' → logprob: -2.6410017013549805
    6. '0' → logprob: -3.2660017013549805
    7. 'tout' → logprob: -3.2660017013549805
    8. 'd' → logprob: -3.3910017013549805
    9. 'dire' → logprob: -3.5160017013549805
    10. 'f' → logprob: -4.0160017013549805

Token 1001: ' le' (ID: 505)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.07897935062646866
    2. '(answer' → logprob: -2.578979253768921
    3. 'print' → logprob: -9.3289794921875
    4. ' answer' → logprob: -14.2039794921875
    5. 'ans' → logprob: -16.8289794921875
    6. '(ans' → logprob: -16.8289794921875
    7. '	answer' → logprob: -18.0789794921875
    8. '(' → logprob: -18.4539794921875
    9. 'ANSWER' → logprob: -19.0789794921875
    10. '```' → logprob: -19.4539794921875

Token 1002: ' nombre' (ID: 9733)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -6.630610641877865e-06
    2. ' answer' → logprob: -12.000006675720215
    3. '(answer' → logprob: -15.125006675720215
    4. 'print' → logprob: -16.3750057220459
    5. 'ans' → logprob: -17.8750057220459
    6. '
' → logprob: -19.3750057220459
    7. '	answer' → logprob: -20.3750057220459
    8. 'len' → logprob: -21.0000057220459
    9. 'count' → logprob: -21.1250057220459
    10. 'result' → logprob: -21.2500057220459

Token 1003: ' total' (ID: 3609)
  Prédit: '(answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.030442899093031883
    2. '(' → logprob: -3.780442953109741
    3. 'answer' → logprob: -5.280442714691162
    4. 'print' → logprob: -6.530442714691162
    5. '(
' → logprob: -7.530442714691162
    6. '()' → logprob: -9.65544319152832
    7. '(print' → logprob: -11.78044319152832
    8. '(ans' → logprob: -11.90544319152832
    9. '```' → logprob: -13.03044319152832
    10. '(

' → logprob: -13.28044319152832

Token 1004: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03882613778114319
    2. '(answer' → logprob: -3.5388262271881104
    3. '(' → logprob: -5.163825988769531
    4. '(print' → logprob: -5.788825988769531
    5. 'answer' → logprob: -8.788825988769531
    6. '(
' → logprob: -9.538825988769531
    7. '(ans' → logprob: -11.913825988769531
    8. '```' → logprob: -11.913825988769531
    9. '#' → logprob: -12.663825988769531
    10. '
' → logprob: -12.913825988769531

Token 1005: ' comb' (ID: 4134)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.5169290900230408
    2. 'pal' → logprob: -1.1419291496276855
    3. 'ways' → logprob: -4.1419291496276855
    4. 'comb' → logprob: -4.2669291496276855
    5. 'car' → logprob: -4.7669291496276855
    6. 'poss' → logprob: -4.8919291496276855
    7. 'config' → logprob: -5.1419291496276855
    8. 'solutions' → logprob: -5.3919291496276855
    9. ' façons' → logprob: -5.5169291496276855
    10. 'part' → logprob: -5.5169291496276855

Token 1006: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.00019460011390037835
    2. 'in' → logprob: -9.250194549560547
    3. 'ina' → logprob: -9.875194549560547
    4. 'inations' → logprob: -10.250194549560547
    5. 'inas' → logprob: -12.125194549560547
    6. 'i' → logprob: -12.375194549560547
    7. '```' → logprob: -14.125194549560547
    8. 'is' → logprob: -14.375194549560547
    9. '``' → logprob: -15.625194549560547
    10. 'initions' → logprob: -16.250194549560547

Token 1007: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.00013357517309486866
    2. 'sons' → logprob: -9.375133514404297
    3. 'ations' → logprob: -10.375133514404297
    4. 'ais' → logprob: -11.500133514404297
    5. 'on' → logprob: -12.500133514404297
    6. 't' → logprob: -13.375133514404297
    7. '#' → logprob: -14.125133514404297
    8. 'a' → logprob: -14.875133514404297
    9. 's' → logprob: -15.250133514404297
    10. 'asons' → logprob: -15.875133514404297

Token 1008: ' correspond' (ID: 11095)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00031520487391389906
    2. '(' → logprob: -8.87531566619873
    3. '(print' → logprob: -9.00031566619873
    4. '(answer' → logprob: -10.00031566619873
    5. '
' → logprob: -12.75031566619873
    6. '```' → logprob: -13.87531566619873
    7. 'answer' → logprob: -14.00031566619873
    8. '()
' → logprob: -14.37531566619873
    9. '(ans' → logprob: -15.00031566619873
    10. ' print' → logprob: -15.00031566619873

Token 1009: 'antes' (ID: 5193)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -5.88418151892256e-05
    2. '```' → logprob: -10.875059127807617
    3. 'antes' → logprob: -11.000059127807617
    4. '=' → logprob: -12.500059127807617
    5. ' ' → logprob: -13.250059127807617
    6. 'à' → logprob: -13.375059127807617
    7. 'ent' → logprob: -13.500059127807617
    8. '}' → logprob: -13.625059127807617
    9. '\' → logprob: -13.625059127807617
    10. 'antt' → logprob: -13.750059127807617

Token 1010: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.981667537620524e-06
    2. '
' → logprob: -13.250001907348633
    3. '```' → logprob: -15.750001907348633
    4. ' print' → logprob: -19.750001907348633
    5. '#print' → logprob: -19.750001907348633
    6. '
' → logprob: -21.250001907348633
    7. '``' → logprob: -21.250001907348633
    8. '`
' → logprob: -22.625001907348633
    9. ')
' → logprob: -22.750001907348633
    10. '(print' → logprob: -23.000001907348633

Token 1011: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.246537173457909e-06
    2. '```' → logprob: -12.500003814697266
    3. '
' → logprob: -14.500003814697266
    4. ' print' → logprob: -18.625003814697266
    5. '``' → logprob: -18.625003814697266
    6. '#print' → logprob: -20.125003814697266
    7. '
' → logprob: -21.375003814697266
    8. '`
' → logprob: -22.625003814697266
    9. '(print' → logprob: -22.875003814697266
    10. '  
' → logprob: -23.000003814697266

Token 1012: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.00043829824426211417
    2. '(' → logprob: -7.750438213348389
    3. '(ans' → logprob: -12.125438690185547
    4. 'answer' → logprob: -13.875438690185547
    5. ' (' → logprob: -14.750438690185547
    6. '()' → logprob: -14.875438690185547
    7. '(
' → logprob: -15.500438690185547
    8. '(question' → logprob: -16.750438690185547
    9. '	answer' → logprob: -17.125438690185547
    10. '((' → logprob: -17.750438690185547

Token 1013: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32658323645591736
    2. '())' → logprob: -1.3265832662582397
    3. '()' → logprob: -4.326583385467529
    4. ' )' → logprob: -11.451582908630371
    5. '))' → logprob: -12.826582908630371
    6. '(' → logprob: -13.201582908630371
    7. ' ())' → logprob: -13.701582908630371
    8. ')`' → logprob: -13.951582908630371
    9. '')' → logprob: -14.326582908630371
    10. '()
' → logprob: -14.576582908630371


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1011
Tokens correctement prédits (1ère position, stricte): 233
Tokens correctement prédits (1ère position, avec adaptation): 244
Tokens correctement prédits (top 10): 512
Précision stricte (1ère position): 23.05%
Précision adaptée (1ère position): 24.13%
Précision (top 10): 50.64%
================================================================================
