================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir un nombre entier.
# La fonction input() permet de lire un texte écrit par l'utilisateur.
# int() convertit ce texte en un nombre entier.
N = int(input())

# Demande à l'utilisateur de saisir une liste de nombres entiers séparés par des espaces.
# input() lit la ligne entière que l'utilisateur a tapée.
# split() sépare cette ligne en plusieurs sous-chaînes en utilisant les espaces comme séparateur par défaut.
# map(int, ...) applique la fonction int() à chaque sous-chaîne pour la convertir en entier.
# Le résultat est un itérable contenant tous les entiers saisis.
A = map(int, input().split())

# Initialise une variable compteur à zéro.
# Ce compteur va servir à compter combien de nombres remplissent certaines conditions.
cnt = 0

# La boucle for permet d'itérer (parcourir) chacun des éléments de l'itérable A.
# À chaque itération, la variable a prend la valeur d'un des éléments de A.
for a in A:
    # On teste si le nombre actuel (a) est un nombre pair.
    # Un nombre est pair lorsqu'il est divisible par 2, c'est-à-dire que le reste de la division (modulo) par 2 est nul.
    if a % 2 == 0:
        # Si le nombre est pair, on vérifie s'il est aussi divisible par 3.
        # a % 3 == 0 signifie que le nombre est un multiple de 3.
        if a % 3 == 0:
            # Si le nombre est pair et divisible par 3, on incrémente le compteur de 1.
            cnt += 1
        # Si le nombre pair n'est pas divisible par 3, on vérifie s'il est divisible par 5.
        # a % 5 == 0 signifie que le nombre est un multiple de 5.
        elif a % 5 == 0:
            # Si le nombre est pair et divisible par 5, on incrémente le compteur de 1.
            cnt += 1
    else:
        # Si le nombre n'est pas pair, c'est-à-dire s'il est impair,
        # dans ce cas, on incrémente aussi le compteur de 1.
        cnt += 1

# À la fin de la boucle, on effectue un test conditionnel pour afficher un résultat.
# Si le nombre total d'éléments (N) est égal au compteur (cnt),
# cela signifie que tous les nombres respectent les conditions.
# L'expression 'APPROVED' if N == cnt else 'DENIED' utilise le ternaire (opérateur conditionnel),
# qui renvoie 'APPROVED' si la condition est vraie, sinon 'DENIED'.
print('APPROVED' if N == cnt else 'DENIED')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.46207723021507263
    2. '_' → logprob: -1.837077260017395
    3. ' ' → logprob: -2.3370771408081055
    4. ':' → logprob: -3.0870771408081055
    5. ' de' → logprob: -3.4620771408081055
    6. 'u' → logprob: -4.9620771408081055
    7. ' d' → logprob: -5.0870771408081055
    8. 'd' → logprob: -5.4620771408081055
    9. ' :' → logprob: -5.5870771408081055
    10. ''' → logprob: -5.9620771408081055

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.011731287464499474
    2. ' l' → logprob: -4.511731147766113
    3. 'user' → logprob: -8.511731147766113
    4. '#' → logprob: -8.761731147766113
    5. 'util' → logprob: -9.636731147766113
    6. ''' → logprob: -10.386731147766113
    7. '`' → logprob: -10.386731147766113
    8. '```' → logprob: -10.636731147766113
    9. ' ' → logprob: -11.011731147766113
    10. 'la' → logprob: -11.136731147766113

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.050799041986465454
    2. 'util' → logprob: -3.9257991313934326
    3. 'u' → logprob: -4.9257988929748535
    4. ' utilisateur' → logprob: -4.9257988929748535
    5. '’utilisateur' → logprob: -4.9257988929748535
    6. ''' → logprob: -5.4257988929748535
    7. 'a' → logprob: -6.0507988929748535
    8. 'user' → logprob: -8.050799369812012
    9. ''user' → logprob: -8.175799369812012
    10. 'us' → logprob: -8.925799369812012

Token 6: ' de' (ID: 334)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.6975297927856445
    2. 'nom' → logprob: -1.0725297927856445
    3. 's' → logprob: -3.4475297927856445
    4. 'input' → logprob: -3.4475297927856445
    5. 'user' → logprob: -3.5725297927856445
    6. 'n' → logprob: -4.3225297927856445
    7. 'print' → logprob: -4.3225297927856445
    8. '#' → logprob: -4.8225297927856445
    9. ' ' → logprob: -4.9475297927856445
    10. '```' → logprob: -5.3225297927856445

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009185493923723698
    2. ' saisir' → logprob: -5.634185314178467
    3. 'r' → logprob: -6.009185314178467
    4. 'entr' → logprob: -6.259185314178467
    5. '```' → logprob: -7.259185314178467
    6. 'sa' → logprob: -9.009185791015625
    7. '#' → logprob: -9.384185791015625
    8. ' entrer' → logprob: -10.259185791015625
    9. ' fournir' → logprob: -10.634185791015625
    10. 'contin' → logprob: -10.759185791015625

Token 8: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4754936993122101
    2. ' un' → logprob: -1.4754936695098877
    3. ' une' → logprob: -2.2254936695098877
    4. ''' → logprob: -4.350493907928467
    5. 's' → logprob: -5.725493907928467
    6. ''un' → logprob: -5.850493907928467
    7. ' ' → logprob: -5.850493907928467
    8. 'un' → logprob: -6.100493907928467
    9. 'une' → logprob: -6.225493907928467
    10. ''une' → logprob: -6.350493907928467

Token 9: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7632755041122437
    2. ' espace' → logprob: -1.0132755041122437
    3. 'e' → logprob: -2.638275623321533
    4. 'es' → logprob: -3.888275623321533
    5. 'é' → logprob: -4.638275623321533
    6. '_' → logprob: -4.888275623321533
    7. '```' → logprob: -5.013275623321533
    8. 'texte' → logprob: -5.263275623321533
    9. 'a' → logprob: -5.388275623321533
    10. ' caractère' → logprob: -5.763275623321533

Token 10: ' entier' (ID: 80473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.017170695587992668
    2. 'nombre' → logprob: -5.1421709060668945
    3. 'x' → logprob: -5.5171709060668945
    4. '#' → logprob: -6.3921709060668945
    5. '\n' → logprob: -6.8921709060668945
    6. 'input' → logprob: -7.5171709060668945
    7. '_' → logprob: -7.5171709060668945
    8. '`' → logprob: -7.6421709060668945
    9. 's' → logprob: -7.6421709060668945
    10. '```' → logprob: -7.7671709060668945

Token 11: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005820717662572861
    2. 'x' → logprob: -6.0058207511901855
    3. 'nombre' → logprob: -6.6308207511901855
    4. '\n' → logprob: -6.8808207511901855
    5. 'i' → logprob: -8.380820274353027
    6. '#' → logprob: -8.755820274353027
    7. '```' → logprob: -8.755820274353027
    8. 'number' → logprob: -9.505820274353027
    9. '`' → logprob: -9.630820274353027
    10. 'user' → logprob: -9.880820274353027

Token 12: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0073369648307561874
    2. '\n' → logprob: -6.1323370933532715
    3. 'x' → logprob: -6.6323370933532715
    4. 'nombre' → logprob: -7.0073370933532715
    5. 's' → logprob: -8.007336616516113
    6. 'i' → logprob: -8.007336616516113
    7. '```' → logprob: -8.007336616516113
    8. '_' → logprob: -8.007336616516113
    9. '#' → logprob: -8.132336616516113
    10. ' ' → logprob: -8.132336616516113

Token 13: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24113686382770538
    2. 'nombre' → logprob: -1.616136908531189
    3. 'number' → logprob: -4.6161370277404785
    4. 'num' → logprob: -5.7411370277404785
    5. 'ent' → logprob: -7.4911370277404785
    6. 'x' → logprob: -7.7411370277404785
    7. '#' → logprob: -8.24113655090332
    8. ' nombre' → logprob: -8.49113655090332
    9. 'user' → logprob: -8.49113655090332
    10. 'numero' → logprob: -8.49113655090332

Token 14: ' fonction' (ID: 17610)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.593032717704773
    2. 's' → logprob: -1.343032717704773
    3. 'nombre' → logprob: -1.968032717704773
    4. ' nombre' → logprob: -4.2180328369140625
    5. ' ' → logprob: -4.9680328369140625
    6. ' valeur' → logprob: -5.2180328369140625
    7. ' n' → logprob: -5.4680328369140625
    8. 'number' → logprob: -6.2180328369140625
    9. 'val' → logprob: -6.3430328369140625
    10. ' number' → logprob: -6.5930328369140625

Token 15: ' input' (ID: 3422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1446673423051834
    2. ' input' → logprob: -2.769667387008667
    3. 'input' → logprob: -2.769667387008667
    4. 's' → logprob: -5.394667148590088
    5. ' def' → logprob: -5.394667148590088
    6. ' sais' → logprob: -9.269667625427246
    7. 'int' → logprob: -9.644667625427246
    8. 'print' → logprob: -10.394667625427246
    9. ' saisir' → logprob: -11.644667625427246
    10. 'est' → logprob: -12.269667625427246

Token 16: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011005646083503962
    2. '()' → logprob: -7.251100540161133
    3. '('' → logprob: -8.626100540161133
    4. '("' → logprob: -8.751100540161133
    5. '(
' → logprob: -10.751100540161133
    6. 's' → logprob: -11.876100540161133
    7. ' (' → logprob: -12.251100540161133
    8. '("""' → logprob: -12.251100540161133
    9. '("("' → logprob: -13.001100540161133
    10. '("")' → logprob: -13.376100540161133

Token 17: ' permet' (ID: 11798)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11803814768791199
    2. ' ' → logprob: -2.6180381774902344
    3. ' (' → logprob: -4.243038177490234
    4. '()' → logprob: -5.243038177490234
    5. '.' → logprob: -5.493038177490234
    6. 's' → logprob: -5.743038177490234
    7. ')' → logprob: -6.118038177490234
    8. ' )' → logprob: -6.118038177490234
    9. '('' → logprob: -6.743038177490234
    10. ' =' → logprob: -7.118038177490234

Token 18: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5766324996948242
    2. ' d' → logprob: -1.5766324996948242
    3. 'de' → logprob: -2.576632499694824
    4. 'd' → logprob: -2.576632499694824
    5. 't' → logprob: -2.951632499694824
    6. ' à' → logprob: -4.326632499694824
    7. 'l' → logprob: -5.451632499694824
    8. 'à' → logprob: -5.701632499694824
    9. ' l' → logprob: -6.451632499694824
    10. ' ' → logprob: -7.326632499694824

Token 19: ' lire' (ID: 46082)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47679603099823
    2. 'r' → logprob: -1.10179603099823
    3. 'rece' → logprob: -4.3517961502075195
    4. 'l' → logprob: -4.4767961502075195
    5. '#' → logprob: -5.1017961502075195
    6. ' récupérer' → logprob: -5.1017961502075195
    7. ' saisir' → logprob: -5.7267961502075195
    8. 'rec' → logprob: -6.1017961502075195
    9. ' lire' → logprob: -7.2267961502075195
    10. 'dem' → logprob: -7.3517961502075195

Token 20: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.9480284452438354
    2. ' un' → logprob: -1.5730284452438354
    3. '()' → logprob: -1.8230284452438354
    4. 'une' → logprob: -2.073028564453125
    5. '(' → logprob: -3.823028564453125
    6. 'l' → logprob: -3.948028564453125
    7. ' ' → logprob: -4.073028564453125
    8. ' la' → logprob: -4.198028564453125
    9. ' l' → logprob: -4.198028564453125
    10. 'un' → logprob: -4.573028564453125

Token 21: ' texte' (ID: 53492)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -1.5095804929733276
    2. ' ' → logprob: -1.7595804929733276
    3. 'e' → logprob: -2.009580612182617
    4. 'n' → logprob: -2.009580612182617
    5. ' nombre' → logprob: -2.134580612182617
    6. 'ent' → logprob: -2.634580612182617
    7. ' entier' → logprob: -2.759580612182617
    8. 'entrée' → logprob: -3.759580612182617
    9. ''ent' → logprob: -4.009580612182617
    10. 'é' → logprob: -5.509580612182617

Token 22: ' écrit' (ID: 46574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8470419645309448
    2. ' ' → logprob: -1.0970419645309448
    3. '.' → logprob: -3.0970420837402344
    4. ')' → logprob: -3.4720420837402344
    5. '_' → logprob: -3.5970420837402344
    6. '#' → logprob: -3.5970420837402344
    7. ',' → logprob: -3.8470420837402344
    8. 's' → logprob: -3.9720420837402344
    9. ' )' → logprob: -4.722042083740234
    10. 'n' → logprob: -4.847042083740234

Token 23: ' par' (ID: 686)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15108764171600342
    2. 'par' → logprob: -2.776087760925293
    3. ' par' → logprob: -3.276087760925293
    4. '.' → logprob: -4.651087760925293
    5. 'e' → logprob: -4.776087760925293
    6. ' )' → logprob: -5.401087760925293
    7. ')' → logprob: -5.901087760925293
    8. 's' → logprob: -5.901087760925293
    9. ',' → logprob: -6.026087760925293
    10. ' en' → logprob: -6.526087760925293

Token 24: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16189207136631012
    2. ' l' → logprob: -1.911892056465149
    3. '	l' → logprob: -6.661891937255859
    4. ' ' → logprob: -8.66189193725586
    5. ' ' → logprob: -10.28689193725586
    6. ''utilisateur' → logprob: -10.66189193725586
    7. ' lâ' → logprob: -10.91189193725586
    8. 'le' → logprob: -11.28689193725586
    9. 'util' → logprob: -11.41189193725586
    10. 'un' → logprob: -11.41189193725586

Token 25: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.15700989961624146
    2. ''' → logprob: -2.4070098400115967
    3. 'u' → logprob: -3.6570098400115967
    4. ''u' → logprob: -3.9070098400115967
    5. ''util' → logprob: -4.907010078430176
    6. ''us' → logprob: -7.157010078430176
    7. '’utilisateur' → logprob: -7.657010078430176
    8. 'a' → logprob: -8.532010078430176
    9. ''a' → logprob: -8.782010078430176
    10. ''user' → logprob: -9.032010078430176

Token 26: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.010764583945274353
    2. 'nombre' → logprob: -4.7607645988464355
    3. '#' → logprob: -6.5107645988464355
    4. 'x' → logprob: -8.635764122009277
    5. '\' → logprob: -9.010764122009277
    6. '```' → logprob: -9.260764122009277
    7. '\n' → logprob: -9.510764122009277
    8. '.' → logprob: -10.385764122009277
    9. ',' → logprob: -11.010764122009277
    10. '`' → logprob: -11.135764122009277

Token 27: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013190940022468567
    2. 'nombre' → logprob: -4.388190746307373
    3. 'x' → logprob: -7.638190746307373
    4. '#' → logprob: -9.388191223144531
    5. 'number' → logprob: -10.388191223144531
    6. '\n' → logprob: -10.513191223144531
    7. '```' → logprob: -10.888191223144531
    8. '\' → logprob: -11.513191223144531
    9. 'num' → logprob: -11.763191223144531
    10. 'ent' → logprob: -11.763191223144531

Token 28: ' int' (ID: 677)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003994577098637819
    2. '#' → logprob: -5.753994464874268
    3. 'nombre' → logprob: -7.378994464874268
    4. 'x' → logprob: -9.253994941711426
    5. '```' → logprob: -11.128994941711426
    6. 'i' → logprob: -11.253994941711426
    7. 'number' → logprob: -11.378994941711426
    8. 'u' → logprob: -12.128994941711426
    9. 'e' → logprob: -12.128994941711426
    10. 'num' → logprob: -12.253994941711426

Token 29: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00036691725836135447
    2. '()' → logprob: -8.000367164611816
    3. '(
' → logprob: -11.625367164611816
    4. '('' → logprob: -12.125367164611816
    5. '(input' → logprob: -12.375367164611816
    6. ')' → logprob: -13.500367164611816
    7. '("' → logprob: -13.750367164611816
    8. 's' → logprob: -13.875367164611816
    9. ' (' → logprob: -13.875367164611816
    10. '(user' → logprob: -14.000367164611816

Token 30: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004995359340682626
    2. '()' → logprob: -8.750499725341797
    3. '(
' → logprob: -9.375499725341797
    4. '(convert' → logprob: -10.000499725341797
    5. '<|end|>' → logprob: -10.000499725341797
    6. '#' → logprob: -10.125499725341797
    7. ')' → logprob: -10.375499725341797
    8. 'convert' → logprob: -10.375499725341797
    9. ' (' → logprob: -11.500499725341797
    10. 'def' → logprob: -11.875499725341797

Token 31: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0017010066658258438
    2. 'i' → logprob: -6.5017008781433105
    3. '(' → logprob: -9.626701354980469
    4. '()' → logprob: -10.001701354980469
    5. ' it' → logprob: -10.251701354980469
    6. 'ir' → logprob: -10.751701354980469
    7. 'er' → logprob: -11.626701354980469
    8. 't' → logprob: -12.501701354980469
    9. '(it' → logprob: -12.876701354980469
    10. 'is' → logprob: -13.126701354980469

Token 32: ' ce' (ID: 2357)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28178396821022034
    2. ' la' → logprob: -2.5317840576171875
    3. ' ' → logprob: -2.6567840576171875
    4. ' le' → logprob: -3.1567840576171875
    5. ' (' → logprob: -4.5317840576171875
    6. ' une' → logprob: -4.5317840576171875
    7. '()' → logprob: -4.9067840576171875
    8. ' l' → logprob: -5.1567840576171875
    9. ' ' → logprob: -6.2817840576171875
    10. '(input' → logprob: -6.2817840576171875

Token 33: ' texte' (ID: 53492)
  Prédit: ' texte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' texte' → logprob: -0.03970356285572052
    2. 'texte' → logprob: -3.664703607559204
    3. ' ' → logprob: -4.789703369140625
    4. ' que' → logprob: -7.039703369140625
    5. ' ' → logprob: -7.289703369140625
    6. ' type' → logprob: -7.789703369140625
    7. ' string' → logprob: -8.039703369140625
    8. ' texto' → logprob: -8.164703369140625
    9. ' nombre' → logprob: -8.289703369140625
    10. ' text' → logprob: -8.539703369140625

Token 34: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06546099483966827
    2. ' en' → logprob: -2.9404609203338623
    3. '()' → logprob: -5.315461158752441
    4. ' (' → logprob: -6.565461158752441
    5. ' ' → logprob: -6.565461158752441
    6. '(en' → logprob: -7.065461158752441
    7. ')' → logprob: -7.690461158752441
    8. 'en' → logprob: -7.940461158752441
    9. '  ' → logprob: -8.565461158752441
    10. '(
' → logprob: -9.065461158752441

Token 35: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.0544147789478302
    2. ' ' → logprob: -3.179414749145508
    3. ' entier' → logprob: -5.179414749145508
    4. 'un' → logprob: -5.679414749145508
    5. ' nombre' → logprob: -6.304414749145508
    6. 'ent' → logprob: -9.179414749145508
    7. ' une' → logprob: -9.179414749145508
    8. ' ' → logprob: -9.429414749145508
    9. 'nombre' → logprob: -9.679414749145508
    10. 'n' → logprob: -10.679414749145508

Token 36: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.20362913608551025
    2. ' entier' → logprob: -1.8286291360855103
    3. 'nombre' → logprob: -4.078629016876221
    4. ' ' → logprob: -5.328629016876221
    5. 'ent' → logprob: -6.828629016876221
    6. 'e' → logprob: -8.078629493713379
    7. ' ent' → logprob: -9.078629493713379
    8. ' ' → logprob: -9.703629493713379
    9. 'n' → logprob: -9.703629493713379
    10. ' espace' → logprob: -10.203629493713379

Token 37: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6153027415275574
    2. 'n' → logprob: -0.9903027415275574
    3. 'nombre' → logprob: -3.740302801132202
    4. 's' → logprob: -4.865302562713623
    5. '_' → logprob: -4.865302562713623
    6. '.' → logprob: -4.865302562713623
    7. ' entier' → logprob: -4.990302562713623
    8. ' n' → logprob: -5.115302562713623
    9. ',' → logprob: -5.240302562713623
    10. ' ,' → logprob: -5.740302562713623

Token 38: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013528053648769855
    2. 'nombre' → logprob: -4.513527870178223
    3. 'x' → logprob: -6.763527870178223
    4. '#' → logprob: -7.263527870178223
    5. '\n' → logprob: -8.013527870178223
    6. '```' → logprob: -9.513527870178223
    7. '
' → logprob: -9.638527870178223
    8. '\' → logprob: -10.263527870178223
    9. '

' → logprob: -11.013527870178223
    10. '' → logprob: -11.138527870178223

Token 39: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.017105305567383766
    2. 'nombre' → logprob: -4.1421051025390625
    3. '#' → logprob: -7.5171051025390625
    4. 'x' → logprob: -7.7671051025390625
    5. 'number' → logprob: -10.892105102539062
    6. '```' → logprob: -11.017105102539062
    7. '\n' → logprob: -11.142105102539062
    8. 'num' → logprob: -11.267105102539062
    9. '\' → logprob: -11.392105102539062
    10. '

' → logprob: -12.142105102539062

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02786443382501602
    2. '=' → logprob: -3.777864456176758
    3. ' ' → logprob: -5.402864456176758
    4. '  ' → logprob: -10.277864456176758
    5. 'u' → logprob: -11.152864456176758
    6. '   ' → logprob: -11.527864456176758
    7. ' =
' → logprob: -11.902864456176758
    8. '=input' → logprob: -11.902864456176758
    9. 'umber' → logprob: -12.027864456176758
    10. 'um' → logprob: -12.277864456176758

Token 41: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.01626051776111126
    2. 'int' → logprob: -4.141260623931885
    3. ' input' → logprob: -8.516260147094727
    4. 'input' → logprob: -11.391260147094727
    5. ' ' → logprob: -11.516260147094727
    6. ' ' → logprob: -13.016260147094727
    7. '=int' → logprob: -13.391260147094727
    8. '<int' → logprob: -15.391260147094727
    9. '[int' → logprob: -15.641260147094727
    10. '(int' → logprob: -16.016260147094727

Token 42: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.31331852078437805
    2. '(' → logprob: -1.3133184909820557
    3. 'input' → logprob: -10.813318252563477
    4. '('' → logprob: -11.313318252563477
    5. ' (' → logprob: -11.688318252563477
    6. '()' → logprob: -12.063318252563477
    7. '(
' → logprob: -12.438318252563477
    8. '(user' → logprob: -12.688318252563477
    9. '(

' → logprob: -14.188318252563477
    10. '("' → logprob: -14.438318252563477

Token 43: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07736337929964066
    2. '()' → logprob: -3.7023634910583496
    3. '("("' → logprob: -3.8273634910583496
    4. '('' → logprob: -3.9523634910583496
    5. '())' → logprob: -5.57736349105835
    6. '("' → logprob: -6.32736349105835
    7. '(""))' → logprob: -6.32736349105835
    8. '("")' → logprob: -7.07736349105835
    9. '(">' → logprob: -7.95236349105835
    10. ')' → logprob: -9.202363014221191

Token 44: '#' (ID: 2)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4808647036552429
    2. ':' → logprob: -2.2308647632598877
    3. '#' → logprob: -2.6058647632598877
    4. ' ' → logprob: -2.8558647632598877
    5. '*' → logprob: -2.9808647632598877
    6. ')' → logprob: -3.1058647632598877
    7. '%' → logprob: -3.9808647632598877
    8. ',' → logprob: -4.980864524841309
    9. '=' → logprob: -5.480864524841309
    10. '.' → logprob: -5.605864524841309

Token 45: ' Dem' (ID: 9458)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.26230114698410034
    2. 'if' → logprob: -1.5123012065887451
    3. '#' → logprob: -5.137300968170166
    4. 'Si' → logprob: -6.762300968170166
    5. 'factor' → logprob: -7.512300968170166
    6. 'for' → logprob: -7.512300968170166
    7. ' Si' → logprob: -7.762300968170166
    8. ' #' → logprob: -7.887300968170166
    9. ' for' → logprob: -8.012301445007324
    10. 's' → logprob: -8.137301445007324

Token 46: 'ande' (ID: 4102)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7414583563804626
    2. 'andez' → logprob: -1.4914584159851074
    3. 'a' → logprob: -1.8664584159851074
    4. 'ande' → logprob: -2.4914584159851074
    5. '#' → logprob: -4.491458415985107
    6. 'and' → logprob: -5.366458415985107
    7. ' a' → logprob: -5.491458415985107
    8. 'er' → logprob: -5.866458415985107
    9. 'if' → logprob: -5.866458415985107
    10. ' ' → logprob: -5.866458415985107

Token 47: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23550406098365784
    2. '()' → logprob: -1.7355040311813354
    3. ' ' → logprob: -4.735504150390625
    4. '("' → logprob: -5.735504150390625
    5. '<|end|>' → logprob: -5.735504150390625
    6. ')' → logprob: -5.860504150390625
    7. '#' → logprob: -5.985504150390625
    8. ' (' → logprob: -6.360504150390625
    9. ' à' → logprob: -6.485504150390625
    10. '("")' → logprob: -6.860504150390625

Token 48: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3976161479949951
    2. 'l' → logprob: -1.2726161479949951
    3. ' ' → logprob: -3.647616147994995
    4. ' un' → logprob: -4.397616386413574
    5. '<|end|>' → logprob: -5.522616386413574
    6. 'un' → logprob: -6.647616386413574
    7. ' user' → logprob: -7.272616386413574
    8. ' une' → logprob: -7.772616386413574
    9. ' la' → logprob: -8.022616386413574
    10. '  ' → logprob: -8.022616386413574

Token 49: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.006618858315050602
    2. ' utilisateur' → logprob: -5.506618976593018
    3. '’utilisateur' → logprob: -6.756618976593018
    4. ''' → logprob: -7.506618976593018
    5. 'util' → logprob: -8.63161849975586
    6. ''util' → logprob: -8.63161849975586
    7. ' user' → logprob: -8.88161849975586
    8. ' ' → logprob: -9.50661849975586
    9. 'a' → logprob: -9.88161849975586
    10. ''user' → logprob: -10.00661849975586

Token 50: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1274036169052124
    2. ' ' → logprob: -1.6274036169052124
    3. '  ' → logprob: -2.502403736114502
    4. '(' → logprob: -2.627403736114502
    5. '()' → logprob: -2.752403736114502
    6. 'de' → logprob: -3.127403736114502
    7. ' d' → logprob: -3.502403736114502
    8. '<|end|>' → logprob: -3.502403736114502
    9. ')' → logprob: -3.627403736114502
    10. 'd' → logprob: -3.877403736114502

Token 51: ' saisir' (ID: 152120)
  Prédit: ' saisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.005641736090183258
    2. 's' → logprob: -5.380641937255859
    3. ' entrer' → logprob: -8.38064193725586
    4. 'r' → logprob: -8.38064193725586
    5. ' continuer' → logprob: -8.75564193725586
    6. ' nouveau' → logprob: -9.50564193725586
    7. ' ' → logprob: -9.88064193725586
    8. ' sais' → logprob: -10.38064193725586
    9. ' ' → logprob: -10.75564193725586
    10. 'entr' → logprob: -11.00564193725586

Token 52: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.05845626816153526
    2. ' ' → logprob: -2.9334561824798584
    3. 'un' → logprob: -6.5584564208984375
    4. '  ' → logprob: -6.9334564208984375
    5. ' une' → logprob: -7.8084564208984375
    6. ' ' → logprob: -8.683456420898438
    7. ' le' → logprob: -9.183456420898438
    8. ' la' → logprob: -9.808456420898438
    9. ' à' → logprob: -10.058456420898438
    10. ' a' → logprob: -10.058456420898438

Token 53: ' liste' (ID: 31719)
  Prédit: ' autre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' autre' → logprob: -1.0432974100112915
    2. ' chaîne' → logprob: -1.4182974100112915
    3. ' phrase' → logprob: -2.168297290802002
    4. 'phrase' → logprob: -3.168297290802002
    5. 'chaine' → logprob: -3.168297290802002
    6. 'aut' → logprob: -3.293297290802002
    7. ' valeur' → logprob: -3.293297290802002
    8. 'val' → logprob: -3.293297290802002
    9. ' deuxième' → logprob: -3.418297290802002
    10. ' chaine' → logprob: -4.168297290802002

Token 54: ' de' (ID: 334)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.2055342197418213
    2. '()' → logprob: -1.3305342197418213
    3. '[' → logprob: -2.4555342197418213
    4. 's' → logprob: -2.8305342197418213
    5. ' de' → logprob: -3.2055342197418213
    6. '(' → logprob: -3.4555342197418213
    7. '<|end|>' → logprob: -3.4555342197418213
    8. ' []' → logprob: -3.5805342197418213
    9. ' ' → logprob: -3.9555342197418213
    10. '_' → logprob: -4.205533981323242

Token 55: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.015675339847803116
    2. ' ent' → logprob: -5.0156755447387695
    3. 'n' → logprob: -5.2656755447387695
    4. 'ent' → logprob: -7.1406755447387695
    5. 'nombre' → logprob: -7.3906755447387695
    6. ' nombre' → logprob: -7.6406755447387695
    7. ' ' → logprob: -7.7656755447387695
    8. ' valeurs' → logprob: -7.7656755447387695
    9. ' n' → logprob: -7.8906755447387695
    10. ' espaces' → logprob: -9.01567554473877

Token 56: ' ent' (ID: 1121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3529499769210815
    2. '[]' → logprob: -1.6029499769210815
    3. ' ' → logprob: -1.8529499769210815
    4. '()' → logprob: -1.9779499769210815
    5. '[' → logprob: -2.852950096130371
    6. ' []' → logprob: -3.102950096130371
    7. ',' → logprob: -3.727950096130371
    8. '(' → logprob: -4.227950096130371
    9. ' ()' → logprob: -4.352950096130371
    10. ' (' → logprob: -4.352950096130371

Token 57: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.001482247607782483
    2. 'i' → logprob: -6.876482009887695
    3. 'ier' → logprob: -8.376482009887695
    4. 'ières' → logprob: -10.001482009887695
    5. '```' → logprob: -10.251482009887695
    6. ' i' → logprob: -10.251482009887695
    7. '   ' → logprob: -10.376482009887695
    8. 'ers' → logprob: -11.126482009887695
    9. '#' → logprob: -11.251482009887695
    10. '       ' → logprob: -12.001482009887695

Token 58: ' sépar' (ID: 97160)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0629514455795288
    2. ',' → logprob: -1.3129514455795288
    3. ' ,' → logprob: -1.8129514455795288
    4. ' ' → logprob: -2.6879515647888184
    5. '[]' → logprob: -2.9379515647888184
    6. 's' → logprob: -3.3129515647888184
    7. '()' → logprob: -4.687951564788818
    8. ' []' → logprob: -4.812951564788818
    9. ' (' → logprob: -5.312951564788818
    10. ' [' → logprob: -5.437951564788818

Token 59: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.352850079536438
    2. 'é' → logprob: -1.227850079536438
    3. 'ée' → logprob: -5.602849960327148
    4. 'es' → logprob: -7.727849960327148
    5. ' par' → logprob: -9.102849960327148
    6. 'e' → logprob: -9.977849960327148
    7. 'ées' → logprob: -10.102849960327148
    8. 's' → logprob: -10.602849960327148
    9. 'par' → logprob: -11.352849960327148
    10. 'É' → logprob: -12.602849960327148

Token 60: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.06423772871494293
    2. 'par' → logprob: -2.8142378330230713
    3. 'es' → logprob: -6.439237594604492
    4. ' espaces' → logprob: -8.939237594604492
    5. 's' → logprob: -9.439237594604492
    6. '_par' → logprob: -9.814237594604492
    7. '```' → logprob: -9.814237594604492
    8. ' espace' → logprob: -10.314237594604492
    9. '(par' → logprob: -10.314237594604492
    10. 'space' → logprob: -10.314237594604492

Token 61: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.050765872001648
    2. 'es' → logprob: -1.550765872001648
    3. ' ' → logprob: -1.800765872001648
    4. ' espaces' → logprob: -2.5507659912109375
    5. 'des' → logprob: -2.8007659912109375
    6. ''espace' → logprob: -3.6757659912109375
    7. 'un' → logprob: -3.9257659912109375
    8. ' espace' → logprob: -4.1757659912109375
    9. ''' → logprob: -4.3007659912109375
    10. 'esp' → logprob: -4.5507659912109375

Token 62: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.17231027781963348
    2. 'esp' → logprob: -2.4223103523254395
    3. 'es' → logprob: -3.1723103523254395
    4. ' espace' → logprob: -4.2973103523254395
    5. 'spaces' → logprob: -5.5473103523254395
    6. ' ' → logprob: -6.0473103523254395
    7. ''esp' → logprob: -6.4223103523254395
    8. 'space' → logprob: -6.5473103523254395
    9. ''espace' → logprob: -6.5473103523254395
    10. '  ' → logprob: -7.5473103523254395

Token 63: '.
' (ID: 558)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.4000920057296753
    2. 'L' → logprob: -1.5250920057296753
    3. 's' → logprob: -1.5250920057296753
    4. 'numbers' → logprob: -2.275092124938965
    5. 'liste' → logprob: -3.150092124938965
    6. 'n' → logprob: -3.275092124938965
    7. 'lst' → logprob: -3.400092124938965
    8. ' L' → logprob: -3.525092124938965
    9. ' ' → logprob: -4.400092124938965
    10. 'list' → logprob: -4.525092124938965

Token 64: '#' (ID: 2)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -1.4097309112548828
    2. 'numbers' → logprob: -1.5347309112548828
    3. ' numbers' → logprob: -1.7847309112548828
    4. 'L' → logprob: -2.284730911254883
    5. ' lst' → logprob: -2.784730911254883
    6. 'l' → logprob: -2.909730911254883
    7. 'liste' → logprob: -3.284730911254883
    8. 's' → logprob: -3.659730911254883
    9. 'lst' → logprob: -3.784730911254883
    10. ' liste' → logprob: -3.909730911254883

Token 65: ' input' (ID: 3422)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.3305926024913788
    2. ' L' → logprob: -2.205592632293701
    3. 'numbers' → logprob: -2.580592632293701
    4. 'lst' → logprob: -3.455592632293701
    5. 'l' → logprob: -3.705592632293701
    6. ' numbers' → logprob: -4.330592632293701
    7. ' lst' → logprob: -4.580592632293701
    8. 'liste' → logprob: -5.205592632293701
    9. 'values' → logprob: -5.955592632293701
    10. 'nums' → logprob: -6.830592632293701

Token 66: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00016063073417171836
    2. '().' → logprob: -9.625160217285156
    3. '_list' → logprob: -10.875160217285156
    4. 's' → logprob: -11.500160217285156
    5. '_' → logprob: -11.750160217285156
    6. '(' → logprob: -11.750160217285156
    7. '()[' → logprob: -11.750160217285156
    8. ' ()' → logprob: -12.000160217285156
    9. '())' → logprob: -12.000160217285156
    10. '()

' → logprob: -12.625160217285156

Token 67: ' lit' (ID: 11980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.019565431401133537
    2. '().' → logprob: -4.269565582275391
    3. 's' → logprob: -6.644565582275391
    4. '_list' → logprob: -6.894565582275391
    5. '(' → logprob: -7.394565582275391
    6. ')' → logprob: -7.644565582275391
    7. '())' → logprob: -8.14456558227539
    8. ' ()' → logprob: -8.76956558227539
    9. '()
' → logprob: -8.89456558227539
    10. '_str' → logprob: -8.89456558227539

Token 68: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020822256803512573
    2. ' une' → logprob: -4.770822048187256
    3. ' ()' → logprob: -5.395822048187256
    4. ' la' → logprob: -5.645822048187256
    5. ' ' → logprob: -6.895822048187256
    6. ' le' → logprob: -7.520822048187256
    7. '(' → logprob: -7.645822048187256
    8. ' l' → logprob: -8.020822525024414
    9. ' un' → logprob: -8.270822525024414
    10. 'une' → logprob: -8.895822525024414

Token 69: ' ligne' (ID: 19583)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.08835135400295258
    2. ' texte' → logprob: -2.713351249694824
    3. ' ligne' → logprob: -5.838351249694824
    4. ' input' → logprob: -5.838351249694824
    5. 's' → logprob: -5.963351249694824
    6. ' ' → logprob: -6.338351249694824
    7. 'input' → logprob: -6.588351249694824
    8. '()' → logprob: -6.838351249694824
    9. 'l' → logprob: -7.213351249694824
    10. 'ligne' → logprob: -7.213351249694824

Token 70: ' entière' (ID: 61583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6314958333969116
    2. ' suivante' → logprob: -0.8814958333969116
    3. ' de' → logprob: -4.006495952606201
    4. ' complète' → logprob: -4.381495952606201
    5. ' )' → logprob: -5.006495952606201
    6. 's' → logprob: -6.006495952606201
    7. ' s' → logprob: -6.006495952606201
    8. ' d' → logprob: -6.006495952606201
    9. ' suivant' → logprob: -6.381495952606201
    10. ' entière' → logprob: -7.006495952606201

Token 71: ' que' (ID: 661)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2333591878414154
    2. 's' → logprob: -2.4833590984344482
    3. 'user' → logprob: -3.4833590984344482
    4. 'n' → logprob: -3.9833590984344482
    5. 'N' → logprob: -4.358359336853027
    6. ')' → logprob: -4.983359336853027
    7. 'l' → logprob: -5.233359336853027
    8. '#' → logprob: -5.608359336853027
    9. ' )' → logprob: -5.608359336853027
    10. 'la' → logprob: -5.733359336853027

Token 72: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.05301286652684212
    2. 'l' → logprob: -3.0530128479003906
    3. ' ' → logprob: -6.053012847900391
    4. ' input' → logprob: -7.678012847900391
    5. '	l' → logprob: -8.80301284790039
    6. ''utilisateur' → logprob: -8.80301284790039
    7. 'input' → logprob: -8.92801284790039
    8. '_l' → logprob: -8.92801284790039
    9. 'user' → logprob: -9.05301284790039
    10. '```' → logprob: -9.17801284790039

Token 73: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.005657978821545839
    2. ''' → logprob: -6.005658149719238
    3. 'u' → logprob: -6.130658149719238
    4. '’utilisateur' → logprob: -8.005658149719238
    5. ''util' → logprob: -8.255658149719238
    6. 'a' → logprob: -9.005658149719238
    7. ''user' → logprob: -9.630658149719238
    8. ''us' → logprob: -9.630658149719238
    9. 'util' → logprob: -9.755658149719238
    10. ''u' → logprob: -10.755658149719238

Token 74: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5192708373069763
    2. 'a' → logprob: -1.394270896911621
    3. ' écrit' → logprob: -2.394270896911621
    4. ' sais' → logprob: -3.894270896911621
    5. 'é' → logprob: -4.519270896911621
    6. ' tape' → logprob: -4.894270896911621
    7. ' entre' → logprob: -5.269270896911621
    8. 's' → logprob: -5.644270896911621
    9. ' ' → logprob: -5.894270896911621
    10. 'entre' → logprob: -5.894270896911621

Token 75: ' tap' (ID: 12909)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7850354313850403
    2. ' sais' → logprob: -0.7850354313850403
    3. 'entrée' → logprob: -4.035035610198975
    4. ' sa' → logprob: -4.410035610198975
    5. 'sa' → logprob: -4.660035610198975
    6. 'entr' → logprob: -4.785035610198975
    7. ' tap' → logprob: -4.910035610198975
    8. 'é' → logprob: -4.910035610198975
    9. ' écr' → logprob: -5.285035610198975
    10. 'r' → logprob: -5.410035610198975

Token 76: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.004991455469280481
    2. 'é' → logprob: -5.37999153137207
    3. 'e' → logprob: -8.12999153137207
    4. 'ées' → logprob: -10.25499153137207
    5. 'és' → logprob: -11.25499153137207
    6. 'lée' → logprob: -12.12999153137207
    7. 'i' → logprob: -12.12999153137207
    8. 'ee' → logprob: -12.25499153137207
    9. '```' → logprob: -12.62999153137207
    10. 'es' → logprob: -13.87999153137207

Token 77: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2738105058670044
    2. 's' → logprob: -1.2738105058670044
    3. ',' → logprob: -1.8988105058670044
    4. '()' → logprob: -2.148810386657715
    5. ' ' → logprob: -2.773810386657715
    6. ' )' → logprob: -3.023810386657715
    7. '.' → logprob: -4.398810386657715
    8. ' ,' → logprob: -4.648810386657715
    9. '.split' → logprob: -5.398810386657715
    10. '(' → logprob: -5.773810386657715

Token 78: '#' (ID: 2)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.9474440813064575
    2. 'numbers' → logprob: -1.3224440813064575
    3. 'l' → logprob: -1.4474440813064575
    4. 'lst' → logprob: -3.572443962097168
    5. 'liste' → logprob: -3.697443962097168
    6. 's' → logprob: -4.197443962097168
    7. 'n' → logprob: -4.822443962097168
    8. 'ent' → logprob: -5.072443962097168
    9. 'ligne' → logprob: -5.072443962097168
    10. ' numbers' → logprob: -5.447443962097168

Token 79: ' split' (ID: 12648)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.3743783235549927
    2. 'l' → logprob: -1.3743783235549927
    3. 'lst' → logprob: -1.6243783235549927
    4. 'numbers' → logprob: -2.124378204345703
    5. 'liste' → logprob: -2.499378204345703
    6. 'values' → logprob: -4.249378204345703
    7. ' lst' → logprob: -4.624378204345703
    8. ' L' → logprob: -4.624378204345703
    9. 'ligne' → logprob: -4.749378204345703
    10. 'ent' → logprob: -4.874378204345703

Token 80: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.015110228210687637
    2. '(' → logprob: -4.390110015869141
    3. '('' → logprob: -6.015110015869141
    4. '("' → logprob: -9.14011001586914
    5. ' ()' → logprob: -10.89011001586914
    6. '().' → logprob: -11.39011001586914
    7. '("""' → logprob: -13.14011001586914
    8. '("("' → logprob: -13.39011001586914
    9. '()]' → logprob: -13.64011001586914
    10. '(
' → logprob: -13.76511001586914

Token 81: ' sé' (ID: 7462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06630343198776245
    2. '(' → logprob: -2.8163034915924072
    3. '('' → logprob: -5.816303253173828
    4. ' ()' → logprob: -6.941303253173828
    5. '("' → logprob: -8.941303253173828
    6. '().' → logprob: -9.316303253173828
    7. ' (' → logprob: -10.441303253173828
    8. '("""' → logprob: -10.566303253173828
    9. '()">' → logprob: -11.566303253173828
    10. '<|end|>' → logprob: -11.691303253173828

Token 82: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -3.273621405242011e-05
    2. 'par' → logprob: -10.875032424926758
    3. 'parer' → logprob: -12.250032424926758
    4. 'p' → logprob: -12.875032424926758
    5. 'parent' → logprob: -13.500032424926758
    6. ' pare' → logprob: -13.750032424926758
    7. 'paration' → logprob: -13.750032424926758
    8. 'pa' → logprob: -14.125032424926758
    9. 'para' → logprob: -14.750032424926758
    10. 'Pare' → logprob: -14.875032424926758

Token 83: ' cette' (ID: 7696)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2964355945587158
    2. '('' → logprob: -2.046435594558716
    3. '(' → logprob: -2.171435594558716
    4. ''' → logprob: -5.546435356140137
    5. ' ' → logprob: -5.671435356140137
    6. '("' → logprob: -6.171435356140137
    7. ' ()' → logprob: -7.046435356140137
    8. ' (' → logprob: -7.421435356140137
    9. ')' → logprob: -8.046435356140137
    10. ' )' → logprob: -8.171435356140137

Token 84: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.3022719919681549
    2. ' chaîne' → logprob: -1.8022719621658325
    3. 'ligne' → logprob: -3.552272081375122
    4. ' ' → logprob: -3.677272081375122
    5. 'chaine' → logprob: -4.427271842956543
    6. ' chaine' → logprob: -4.677271842956543
    7. ' ' → logprob: -5.677271842956543
    8. 's' → logprob: -6.052271842956543
    9. ' string' → logprob: -6.177271842956543
    10. ' l' → logprob: -6.177271842956543

Token 85: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15485917031764984
    2. '()' → logprob: -2.6548590660095215
    3. '[' → logprob: -3.2798590660095215
    4. '(' → logprob: -4.1548590660095215
    5. ' (' → logprob: -5.7798590660095215
    6. '[]' → logprob: -5.9048590660095215
    7. '('' → logprob: -6.0298590660095215
    8. 'par' → logprob: -6.4048590660095215
    9. ' )' → logprob: -6.6548590660095215
    10. ''' → logprob: -6.7798590660095215

Token 86: ' plusieurs' (ID: 20875)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5114304423332214
    2. ' une' → logprob: -1.2614305019378662
    3. ' espaces' → logprob: -3.136430501937866
    4. 'des' → logprob: -3.636430501937866
    5. ' un' → logprob: -4.261430263519287
    6. ' les' → logprob: -4.386430263519287
    7. ' ' → logprob: -5.761430263519287
    8. 'une' → logprob: -5.761430263519287
    9. ' '' → logprob: -6.136430263519287
    10. 'les' → logprob: -6.261430263519287

Token 87: ' sous' (ID: 14487)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.9065677523612976
    2. ' ' → logprob: -1.9065678119659424
    3. 'élé' → logprob: -2.0315678119659424
    4. ' éléments' → logprob: -2.6565678119659424
    5. ' mots' → logprob: -3.0315678119659424
    6. ' morceaux' → logprob: -3.2815678119659424
    7. 'strings' → logprob: -3.6565678119659424
    8. ' cadenas' → logprob: -3.7815678119659424
    9. ' strings' → logprob: -3.9065678119659424
    10. ' espaces' → logprob: -4.156567573547363

Token 88: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.5919355154037476
    2. '-cha' → logprob: -1.4669355154037476
    3. '-' → logprob: -1.7169355154037476
    4. '-chain' → logprob: -4.341935634613037
    5. 'cha' → logprob: -5.091935634613037
    6. '_' → logprob: -5.466935634613037
    7. 'chain' → logprob: -5.716935634613037
    8. '_chain' → logprob: -6.091935634613037
    9. '' → logprob: -6.591935634613037
    10. ' chain' → logprob: -6.591935634613037

Token 89: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.1551741361618042
    2. 'î' → logprob: -2.6551742553710938
    3. 'nes' → logprob: -2.9051742553710938
    4. 'ines' → logprob: -4.905174255371094
    5. 'r' → logprob: -5.905174255371094
    6. ' nes' → logprob: -6.030174255371094
    7. '```' → logprob: -6.780174255371094
    8. '   ' → logprob: -7.030174255371094
    9. 'ı' → logprob: -7.155174255371094
    10. 'ï' → logprob: -7.405174255371094

Token 90: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.027908025309443474
    2. ')' → logprob: -5.652907848358154
    3. ' ()' → logprob: -5.652907848358154
    4. '```' → logprob: -5.652907848358154
    5. '('' → logprob: -6.027907848358154
    6. 'par' → logprob: -6.152907848358154
    7. ',' → logprob: -6.402907848358154
    8. '[]' → logprob: -6.527907848358154
    9. 's' → logprob: -6.652907848358154
    10. '(' → logprob: -6.777907848358154

Token 91: ' utilisant' (ID: 92474)
  Prédit: ' fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonction' → logprob: -0.1998588740825653
    2. 'fonction' → logprob: -2.5748589038848877
    3. ' espaces' → logprob: -2.8248589038848877
    4. ' ' → logprob: -4.574858665466309
    5. 's' → logprob: -5.074858665466309
    6. '```' → logprob: -5.324858665466309
    7. ' fonctions' → logprob: -5.699858665466309
    8. ' utilisant' → logprob: -5.699858665466309
    9. ' function' → logprob: -6.324858665466309
    10. ' espace' → logprob: -6.449858665466309

Token 92: ' les' (ID: 1341)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08276236802339554
    2. '"' → logprob: -3.0827624797821045
    3. ' ' → logprob: -4.332762241363525
    4. ' '' → logprob: -4.457762241363525
    5. ''un' → logprob: -5.832762241363525
    6. ' ' → logprob: -7.457762241363525
    7. '  ' → logprob: -7.582762241363525
    8. ' la' → logprob: -7.707762241363525
    9. ''une' → logprob: -7.707762241363525
    10. ''espace' → logprob: -7.707762241363525

Token 93: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.0060643600299954414
    2. ''esp' → logprob: -6.256064414978027
    3. ' espace' → logprob: -6.381064414978027
    4. ''espace' → logprob: -7.131064414978027
    5. 'esp' → logprob: -7.631064414978027
    6. 'es' → logprob: -8.131064414978027
    7. 'spaces' → logprob: -8.131064414978027
    8. ' spaces' → logprob: -8.506064414978027
    9. ' espacios' → logprob: -9.381064414978027
    10. ' ' → logprob: -10.256064414978027

Token 94: ' comme' (ID: 7971)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' sépar' (ID: 97160)
  Prédit: ' sépar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sépar' → logprob: -0.04324912279844284
    2. 'delimiter' → logprob: -3.6682491302490234
    3. 'del' → logprob: -5.668249130249023
    4. ' séparation' → logprob: -5.793249130249023
    5. ' delimit' → logprob: -6.543249130249023
    6. 'dé' → logprob: -6.668249130249023
    7. 's' → logprob: -6.793249130249023
    8. ' espaces' → logprob: -7.043249130249023
    9. ' delimiter' → logprob: -7.043249130249023
    10. 'div' → logprob: -7.418249130249023

Token 96: 'ateur' (ID: 12477)
  Prédit: 'ateurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateurs' → logprob: -0.6410629749298096
    2. 'ateur' → logprob: -0.7660629749298096
    3. 'ate' → logprob: -5.1410627365112305
    4. 'ation' → logprob: -7.0160627365112305
    5. '```' → logprob: -7.5160627365112305
    6. 'par' → logprob: -8.26606273651123
    7. '#' → logprob: -9.01606273651123
    8. 'teurs' → logprob: -9.14106273651123
    9. 't' → logprob: -9.51606273651123
    10. 'a' → logprob: -9.51606273651123

Token 97: ' par' (ID: 686)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4851425886154175
    2. '()' → logprob: -1.8601425886154175
    3. 's' → logprob: -2.360142707824707
    4. ' )' → logprob: -2.735142707824707
    5. ',' → logprob: -4.360142707824707
    6. '(' → logprob: -4.610142707824707
    7. '[' → logprob: -4.610142707824707
    8. 'n' → logprob: -4.985142707824707
    9. ' ' → logprob: -5.735142707824707
    10. '_' → logprob: -5.735142707824707

Token 98: ' défaut' (ID: 79375)
  Prédit: ' défaut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' défaut' → logprob: -0.25410327315330505
    2. 'dé' → logprob: -1.8791033029556274
    3. 'default' → logprob: -3.504103183746338
    4. 'def' → logprob: -3.879103183746338
    5. 'd' → logprob: -5.004103183746338
    6. ' default' → logprob: -5.129103183746338
    7. ' def' → logprob: -5.504103183746338
    8. ' dé' → logprob: -6.379103183746338
    9. ' ' → logprob: -7.504103183746338
    10. ' ' → logprob: -8.504103660583496

Token 99: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47073614597320557
    2. 'n' → logprob: -1.7207361459732056
    3. ')' → logprob: -2.845736026763916
    4. ',' → logprob: -2.845736026763916
    5. 'l' → logprob: -4.470736026763916
    6. ' )' → logprob: -4.845736026763916
    7. 'liste' → logprob: -4.970736026763916
    8. ' ,' → logprob: -5.220736026763916
    9. 'lst' → logprob: -5.345736026763916
    10. '[' → logprob: -5.595736026763916

Token 100: '#' (ID: 2)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.5068441033363342
    2. 'L' → logprob: -1.2568440437316895
    3. 'lst' → logprob: -3.1318440437316895
    4. 'l' → logprob: -3.7568440437316895
    5. 'liste' → logprob: -4.3818440437316895
    6. 's' → logprob: -5.0068440437316895
    7. 'n' → logprob: -5.3818440437316895
    8. 'values' → logprob: -5.7568440437316895
    9. 'nums' → logprob: -5.8818440437316895
    10. ' numbers' → logprob: -6.1318440437316895

Token 101: ' map' (ID: 4014)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.5887243747711182
    2. 'lst' → logprob: -1.4637243747711182
    3. 'L' → logprob: -2.963724374771118
    4. ' lst' → logprob: -3.213724374771118
    5. 'l' → logprob: -3.588724374771118
    6. ' numbers' → logprob: -3.838724374771118
    7. ' L' → logprob: -3.963724374771118
    8. 'values' → logprob: -4.213724136352539
    9. 'liste' → logprob: -4.713724136352539
    10. 'nums' → logprob: -4.963724136352539

Token 102: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45311829447746277
    2. '(int' → logprob: -1.0781183242797852
    3. '(lambda' → logprob: -3.828118324279785
    4. '(
' → logprob: -6.328118324279785
    5. '(list' → logprob: -8.703118324279785
    6. '(str' → logprob: -8.953118324279785
    7. '<int' → logprob: -9.578118324279785
    8. '()' → logprob: -9.828118324279785
    9. 'int' → logprob: -10.453118324279785
    10. '[int' → logprob: -10.703118324279785

Token 103: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006508247461169958
    2. ',' → logprob: -5.2565083503723145
    3. ',input' → logprob: -7.1315083503723145
    4. '(input' → logprob: -8.256507873535156
    5. ',)' → logprob: -9.756507873535156
    6. '),' → logprob: -10.756507873535156
    7. 'input' → logprob: -11.006507873535156
    8. '(' → logprob: -11.131507873535156
    9. '`)' → logprob: -11.256507873535156
    10. '```' → logprob: -11.381507873535156

Token 104: ' ...)' (ID: 100545)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.594245970249176
    2. ' input' → logprob: -0.844245970249176
    3. ')' → logprob: -4.094245910644531
    4. ' )' → logprob: -6.844245910644531
    5. '(input' → logprob: -8.719245910644531
    6. ' N' → logprob: -9.469245910644531
    7. 'N' → logprob: -10.344245910644531
    8. '=input' → logprob: -10.594245910644531
    9. '[input' → logprob: -10.719245910644531
    10. ',input' → logprob: -11.094245910644531

Token 105: ' applique' (ID: 180579)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22166985273361206
    2. '(' → logprob: -1.7216699123382568
    3. '(
' → logprob: -5.221669673919678
    4. '(input' → logprob: -5.346669673919678
    5. '()' → logprob: -5.721669673919678
    6. 'list' → logprob: -6.346669673919678
    7. 'input' → logprob: -7.346669673919678
    8. '(n' → logprob: -7.596669673919678
    9. '(int' → logprob: -7.721669673919678
    10. '(list' → logprob: -7.721669673919678

Token 106: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.19355322420597076
    2. ' int' → logprob: -2.4435532093048096
    3. '(int' → logprob: -2.4435532093048096
    4. '<int' → logprob: -7.943553447723389
    5. ')' → logprob: -8.06855297088623
    6. '=int' → logprob: -8.06855297088623
    7. '[int' → logprob: -8.44355297088623
    8. ' la' → logprob: -8.44355297088623
    9. ' ' → logprob: -8.56855297088623
    10. '	int' → logprob: -8.56855297088623

Token 107: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.7935747504234314
    2. 'int' → logprob: -0.9185747504234314
    3. ' fonction' → logprob: -2.418574810028076
    4. ' function' → logprob: -3.668574810028076
    5. ' int' → logprob: -3.918574810028076
    6. 'function' → logprob: -4.293574810028076
    7. 'split' → logprob: -9.418574333190918
    8. 'lambda' → logprob: -9.543574333190918
    9. ' ' → logprob: -9.668574333190918
    10. 'funktion' → logprob: -9.918574333190918

Token 108: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005844650790095329
    2. '(int' → logprob: -5.755844593048096
    3. ' int' → logprob: -6.005844593048096
    4. 'split' → logprob: -9.630845069885254
    5. ')' → logprob: -9.880845069885254
    6. 'list' → logprob: -11.130845069885254
    7. '=int' → logprob: -11.255845069885254
    8. '[int' → logprob: -11.505845069885254
    9. '<int' → logprob: -11.630845069885254
    10. 'input' → logprob: -11.880845069885254

Token 109: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10379570722579956
    2. '()' → logprob: -3.4787957668304443
    3. '(input' → logprob: -3.7287957668304443
    4. '(' → logprob: -3.8537957668304443
    5. '(lambda' → logprob: -4.728795528411865
    6. 'sur' → logprob: -6.103795528411865
    7. ' à' → logprob: -6.228795528411865
    8. '```' → logprob: -6.603795528411865
    9. '<|end|>' → logprob: -6.853795528411865
    10. 'à' → logprob: -6.853795528411865

Token 110: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010654439218342304
    2. 'sur' → logprob: -5.385654449462891
    3. '(' → logprob: -6.260654449462891
    4. '()' → logprob: -6.760654449462891
    5. ' à' → logprob: -7.260654449462891
    6. '```' → logprob: -7.510654449462891
    7. 'à' → logprob: -7.885654449462891
    8. ' )' → logprob: -8.01065444946289
    9. 'to' → logprob: -8.51065444946289
    10. '

' → logprob: -9.26065444946289

Token 111: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.3211309015750885
    2. ' chacune' → logprob: -1.4461308717727661
    3. 'cha' → logprob: -4.321130752563477
    4. ' each' → logprob: -4.696130752563477
    5. 'each' → logprob: -5.321130752563477
    6. ' la' → logprob: -5.821130752563477
    7. 'Chaque' → logprob: -6.446130752563477
    8. 'la' → logprob: -6.571130752563477
    9. 'ch' → logprob: -6.821130752563477
    10. ' chacun' → logprob: -7.071130752563477

Token 112: ' sous' (ID: 14487)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.014770959503948689
    2. ' élément' → logprob: -4.264770984649658
    3. 'element' → logprob: -7.889770984649658
    4. ' element' → logprob: -9.2647705078125
    5. ' mot' → logprob: -10.8897705078125
    6. ')' → logprob: -11.5147705078125
    7. ' éléments' → logprob: -11.5147705078125
    8. ' ' → logprob: -11.6397705078125
    9. 'part' → logprob: -11.6397705078125
    10. ' Él' → logprob: -11.6397705078125

Token 113: '-cha' (ID: 163177)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5004584193229675
    2. ')' → logprob: -1.2504584789276123
    3. 'chaine' → logprob: -3.1254584789276123
    4. '_' → logprob: -3.5004584789276123
    5. 'élé' → logprob: -5.000458240509033
    6. 'es' → logprob: -6.000458240509033
    7. ' )' → logprob: -6.125458240509033
    8. 'é' → logprob: -6.375458240509033
    9. ' chaînes' → logprob: -6.625458240509033
    10. '()' → logprob: -6.750458240509033

Token 114: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.0345052145421505
    2. 'ne' → logprob: -4.409505367279053
    3. 'ine' → logprob: -4.534505367279053
    4. 'î' → logprob: -4.784505367279053
    5. 'ïne' → logprob: -6.909505367279053
    6. 'înes' → logprob: -7.284505367279053
    7. 'ı' → logprob: -8.659504890441895
    8. 'Î' → logprob: -9.034504890441895
    9. 'în' → logprob: -9.659504890441895
    10. '```' → logprob: -10.034504890441895

Token 115: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016355160623788834
    2. '(' → logprob: -5.891355037689209
    3. 'input' → logprob: -6.141355037689209
    4. '(input' → logprob: -6.141355037689209
    5. ',' → logprob: -6.641355037689209
    6. 'N' → logprob: -6.641355037689209
    7. '),' → logprob: -6.766355037689209
    8. ' )' → logprob: -7.016355037689209
    9. '(
' → logprob: -7.516355037689209
    10. ').' → logprob: -7.891355037689209

Token 116: ' la' (ID: 557)
  Prédit: ' convertir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.08873070031404495
    2. ' obtenir' → logprob: -3.213730812072754
    3. ' transformer' → logprob: -3.963730812072754
    4. ' créer' → logprob: -4.713730812072754
    5. ' les' → logprob: -4.713730812072754
    6. 'convert' → logprob: -5.963730812072754
    7. 'transform' → logprob: -5.963730812072754
    8. ' ' → logprob: -7.088730812072754
    9. ' convert' → logprob: -7.713730812072754
    10. 'ob' → logprob: -7.963730812072754

Token 117: ' convertir' (ID: 79223)
  Prédit: ' convertir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.4025890827178955
    2. 'convert' → logprob: -1.7775890827178955
    3. 'transform' → logprob: -2.0275890827178955
    4. ' transformer' → logprob: -4.027588844299316
    5. ' obtenir' → logprob: -4.902588844299316
    6. ' créer' → logprob: -6.527588844299316
    7. 'ob' → logprob: -6.652588844299316
    8. ' convert' → logprob: -7.277588844299316
    9. 'con' → logprob: -8.152588844299316
    10. 'converter' → logprob: -8.152588844299316

Token 118: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6769859194755554
    2. ' en' → logprob: -1.8019859790802002
    3. '(' → logprob: -2.3019859790802
    4. ',' → logprob: -2.6769859790802
    5. '<|end|>' → logprob: -3.4269859790802
    6. 'list' → logprob: -4.301985740661621
    7. ' into' → logprob: -4.301985740661621
    8. ' à' → logprob: -4.426985740661621
    9. 's' → logprob: -4.426985740661621
    10. ' )' → logprob: -4.551985740661621

Token 119: ' entier' (ID: 80473)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6292998790740967
    2. ' une' → logprob: -1.1292998790740967
    3. ' nombres' → logprob: -2.7542998790740967
    4. ' integers' → logprob: -3.8792998790740967
    5. ' ent' → logprob: -3.8792998790740967
    6. ' un' → logprob: -4.004300117492676
    7. 'ent' → logprob: -4.629300117492676
    8. ' liste' → logprob: -5.379300117492676
    9. ' nombre' → logprob: -6.254300117492676
    10. ' int' → logprob: -6.504300117492676

Token 120: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5484168529510498
    2. 's' → logprob: -1.0484168529510498
    3. ' )' → logprob: -4.173417091369629
    4. 'lst' → logprob: -4.423417091369629
    5. 'liste' → logprob: -4.548417091369629
    6. '(' → logprob: -5.048417091369629
    7. 'l' → logprob: -5.548417091369629
    8. '()' → logprob: -5.673417091369629
    9. 'tokens' → logprob: -5.798417091369629
    10. '(
' → logprob: -6.423417091369629

Token 121: '#' (ID: 2)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.6298167109489441
    2. 'lst' → logprob: -1.6298167705535889
    3. 'L' → logprob: -1.7548167705535889
    4. 'liste' → logprob: -3.629816770553589
    5. 'l' → logprob: -4.00481653213501
    6. 'values' → logprob: -4.12981653213501
    7. 'A' → logprob: -4.87981653213501
    8. ' numbers' → logprob: -5.37981653213501
    9. 'nums' → logprob: -5.37981653213501
    10. ' lst' → logprob: -5.50481653213501

Token 122: ' Le' (ID: 2018)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.5923250913619995
    2. 'list' → logprob: -2.092325210571289
    3. 'lst' → logprob: -2.092325210571289
    4. ' L' → logprob: -2.217325210571289
    5. 'liste' → logprob: -2.217325210571289
    6. ' lst' → logprob: -2.342325210571289
    7. 'L' → logprob: -2.467325210571289
    8. ' numbers' → logprob: -2.592325210571289
    9. ' list' → logprob: -3.967325210571289
    10. ' liste' → logprob: -4.217325210571289

Token 123: ' résultat' (ID: 62556)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.311811625957489
    2. 'result' → logprob: -2.061811685562134
    3. ' list' → logprob: -2.936811685562134
    4. ' resultat' → logprob: -3.936811685562134
    5. ' résultat' → logprob: -4.186811447143555
    6. 's' → logprob: -4.311811447143555
    7. ' result' → logprob: -4.561811447143555
    8. 'lst' → logprob: -4.686811447143555
    9. 'res' → logprob: -5.311811447143555
    10. 'liste' → logprob: -5.686811447143555

Token 124: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30107733607292175
    2. '[' → logprob: -2.551077365875244
    3. ' =' → logprob: -2.676077365875244
    4. 's' → logprob: -2.801077365875244
    5. '=' → logprob: -4.426077365875244
    6. ' est' → logprob: -4.551077365875244
    7. '[:]' → logprob: -4.801077365875244
    8. ' is' → logprob: -5.176077365875244
    9. '[]' → logprob: -5.301077365875244
    10. ',' → logprob: -6.551077365875244

Token 125: ' un' (ID: 537)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.2526250183582306
    2. 'list' → logprob: -1.5026249885559082
    3. '_list' → logprob: -8.502625465393066
    4. ' liste' → logprob: -9.377625465393066
    5. 's' → logprob: -9.502625465393066
    6. '=list' → logprob: -10.002625465393066
    7. '[' → logprob: -10.627625465393066
    8. '	list' → logprob: -10.627625465393066
    9. '[list' → logprob: -10.627625465393066
    10. 'liste' → logprob: -10.752625465393066

Token 126: ' it' (ID: 480)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.0145307779312134
    2. ' list' → logprob: -1.1395307779312134
    3. ' liste' → logprob: -1.8895307779312134
    4. 'liste' → logprob: -2.264530658721924
    5. 'e' → logprob: -3.639530658721924
    6. 's' → logprob: -4.014530658721924
    7. 'a' → logprob: -5.264530658721924
    8. 'es' → logprob: -6.014530658721924
    9. 'l' → logprob: -6.139530658721924
    10. 'n' → logprob: -6.764530658721924

Token 127: 'ér' (ID: 2156)
  Prédit: 'érateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érateur' → logprob: -0.3422876000404358
    2. 'er' → logprob: -1.592287540435791
    3. 'ér' → logprob: -2.467287540435791
    4. 'é' → logprob: -7.592287540435791
    5. 'e' → logprob: -8.09228801727295
    6. 'érant' → logprob: -8.34228801727295
    7. 'érer' → logprob: -9.46728801727295
    8. 'able' → logprob: -9.59228801727295
    9. 'ération' → logprob: -9.71728801727295
    10. 'éré' → logprob: -9.96728801727295

Token 128: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.004473085515201092
    2. 'ateur' → logprob: -5.5044732093811035
    3. 'ator' → logprob: -7.8794732093811035
    4. 'er' → logprob: -13.004472732543945
    5. '```' → logprob: -13.129472732543945
    6. 'ables' → logprob: -13.129472732543945
    7. 'acteur' → logprob: -13.379472732543945
    8. 'eur' → logprob: -13.879472732543945
    9. 'abl' → logprob: -14.254472732543945
    10. 'abler' → logprob: -14.379472732543945

Token 129: ' contenant' (ID: 131049)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.15323616564273834
    2. 'convert' → logprob: -2.653236150741577
    3. ')' → logprob: -3.528236150741577
    4. 's' → logprob: -5.028236389160156
    5. '(' → logprob: -5.153236389160156
    6. '```' → logprob: -5.278236389160156
    7. 'liste' → logprob: -5.778236389160156
    8. ' list' → logprob: -6.028236389160156
    9. '(list' → logprob: -6.403236389160156
    10. '`' → logprob: -6.403236389160156

Token 130: ' tous' (ID: 10688)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8070870041847229
    2. ' N' → logprob: -0.8070870041847229
    3. ' la' → logprob: -3.307086944580078
    4. ' les' → logprob: -4.057086944580078
    5. ' des' → logprob: -4.182086944580078
    6. 'les' → logprob: -4.182086944580078
    7. ' une' → logprob: -4.307086944580078
    8. 'list' → logprob: -6.057086944580078
    9. 'la' → logprob: -6.182086944580078
    10. ' list' → logprob: -6.182086944580078

Token 131: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.16720890998840332
    2. 'les' → logprob: -1.9172089099884033
    3. '<|end|>' → logprob: -5.042208671569824
    4. ' ces' → logprob: -8.667208671569824
    5. 'tokens' → logprob: -9.792208671569824
    6. 's' → logprob: -9.792208671569824
    7. 'the' → logprob: -10.167208671569824
    8. ' des' → logprob: -10.292208671569824
    9. 'Les' → logprob: -10.667208671569824
    10. ' the' → logprob: -10.792208671569824

Token 132: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.2989647686481476
    2. 'ent' → logprob: -1.5489647388458252
    3. 'n' → logprob: -3.798964738845825
    4. 'N' → logprob: -4.673964977264404
    5. ' ent' → logprob: -4.798964977264404
    6. 'nombre' → logprob: -6.173964977264404
    7. 'élé' → logprob: -6.298964977264404
    8. ' N' → logprob: -7.048964977264404
    9. ' éléments' → logprob: -7.048964977264404
    10. 'numbers' → logprob: -9.673964500427246

Token 133: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -5.240481914370321e-05
    2. 'i' → logprob: -10.750052452087402
    3. 'ers' → logprob: -11.000052452087402
    4. 'ier' → logprob: -11.750052452087402
    5. 'ières' → logprob: -13.000052452087402
    6. 'ieurs' → logprob: -13.250052452087402
    7. 'eurs' → logprob: -14.375052452087402
    8. 'I' → logprob: -15.125052452087402
    9. '```' → logprob: -15.500052452087402
    10. 'a' → logprob: -15.500052452087402

Token 134: ' sa' (ID: 880)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8437636494636536
    2. ',' → logprob: -2.093763589859009
    3. '(' → logprob: -2.593763589859009
    4. 'tokens' → logprob: -2.718763589859009
    5. 's' → logprob: -2.968763589859009
    6. 'numbers' → logprob: -3.218763589859009
    7. 'n' → logprob: -3.343763589859009
    8. 'list' → logprob: -3.468763589859009
    9. '_' → logprob: -3.968763589859009
    10. 'nums' → logprob: -4.343763828277588

Token 135: 'isis' (ID: 11352)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -1.3703316450119019
    2. 'r' → logprob: -1.4953316450119019
    3. 'u' → logprob: -2.3703317642211914
    4. 'l' → logprob: -2.4953317642211914
    5. 'rv' → logprob: -2.6203317642211914
    6. 'n' → logprob: -3.6203317642211914
    7. 'ur' → logprob: -3.6203317642211914
    8. 'nts' → logprob: -3.6203317642211914
    9. 'ints' → logprob: -3.8703317642211914
    10. 'lus' → logprob: -3.8703317642211914

Token 136: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17979013919830322
    2. 's' → logprob: -2.5547900199890137
    3. ',' → logprob: -3.5547900199890137
    4. ' )' → logprob: -4.179790019989014
    5. '[' → logprob: -5.054790019989014
    6. ' ' → logprob: -5.304790019989014
    7. '(' → logprob: -5.304790019989014
    8. 'tokens' → logprob: -5.429790019989014
    9. 'n' → logprob: -6.179790019989014
    10. 'a' → logprob: -6.304790019989014

Token 137: 'A' (ID: 32)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.6155749559402466
    2. 'numbers' → logprob: -1.4905749559402466
    3. 'lst' → logprob: -1.9905749559402466
    4. 'liste' → logprob: -3.365574836730957
    5. 'A' → logprob: -3.865574836730957
    6. 'l' → logprob: -4.365574836730957
    7. ' L' → logprob: -4.990574836730957
    8. 'values' → logprob: -5.740574836730957
    9. ' numbers' → logprob: -5.740574836730957
    10. ' lst' → logprob: -5.865574836730957

Token 138: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43107786774635315
    2. ' =' → logprob: -1.0560778379440308
    3. '_' → logprob: -6.93107795715332
    4. 's' → logprob: -7.05607795715332
    5. '.' → logprob: -9.30607795715332
    6. ',' → logprob: -9.30607795715332
    7. '[]' → logprob: -9.68107795715332
    8. '[' → logprob: -9.68107795715332
    9. '_list' → logprob: -9.93107795715332
    10. '[:]' → logprob: -9.93107795715332

Token 139: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1307816505432129
    2. ' list' → logprob: -2.130781650543213
    3. 'map' → logprob: -5.630781650543213
    4. ' map' → logprob: -8.255781173706055
    5. 'm' → logprob: -15.005781173706055
    6. ' ' → logprob: -16.255781173706055
    7. '	list' → logprob: -16.505781173706055
    8. ' ' → logprob: -17.255781173706055
    9. '=list' → logprob: -17.505781173706055
    10. 'List' → logprob: -17.880781173706055

Token 140: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.25195640325546265
    2. '(' → logprob: -1.5019564628601074
    3. '(
' → logprob: -11.37695598602295
    4. ' (' → logprob: -12.00195598602295
    5. '<int' → logprob: -12.87695598602295
    6. '(in' → logprob: -13.00195598602295
    7. '(

' → logprob: -13.75195598602295
    8. '(input' → logprob: -13.87695598602295
    9. '(lambda' → logprob: -14.00195598602295
    10. '(list' → logprob: -14.50195598602295

Token 141: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.02074742130935192
    2. ',input' → logprob: -4.395747184753418
    3. '(' → logprob: -5.520747184753418
    4. ',' → logprob: -6.145747184753418
    5. ' (' → logprob: -6.395747184753418
    6. 'input' → logprob: -8.520747184753418
    7. ')' → logprob: -8.895747184753418
    8. ' input' → logprob: -10.270747184753418
    9. ' ,' → logprob: -11.520747184753418
    10. '=input' → logprob: -12.895747184753418

Token 142: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3870885670185089
    2. ' input' → logprob: -1.1370885372161865
    3. '(input' → logprob: -8.512088775634766
    4. ')' → logprob: -12.512088775634766
    5. ',input' → logprob: -12.762088775634766
    6. ' ' → logprob: -13.262088775634766
    7. '	input' → logprob: -13.387088775634766
    8. '<input' → logprob: -13.762088775634766
    9. '=input' → logprob: -13.762088775634766
    10. ' (' → logprob: -13.887088775634766

Token 143: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0067337267100811005
    2. '()' → logprob: -5.1317338943481445
    3. '())' → logprob: -7.1317338943481445
    4. ')' → logprob: -13.006733894348145
    5. ' ().' → logprob: -13.881733894348145
    6. '()))' → logprob: -14.381733894348145
    7. '()
' → logprob: -14.506733894348145
    8. '()

' → logprob: -15.506733894348145
    9. ' ()' → logprob: -16.006732940673828
    10. '()).' → logprob: -16.006732940673828

Token 144: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003386806638445705
    2. 'strip' → logprob: -8.000338554382324
    3. ' split' → logprob: -12.875338554382324
    4. 'rstrip' → logprob: -14.500338554382324
    5. '(split' → logprob: -16.62533950805664
    6. 'spl' → logprob: -16.75033950805664
    7. ')' → logprob: -18.00033950805664
    8. '.split' → logprob: -19.62533950805664
    9. ' strip' → logprob: -20.12533950805664
    10. 's' → logprob: -20.12533950805664

Token 145: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.019517146050930023
    2. '()))' → logprob: -4.269516944885254
    3. '()' → logprob: -5.394516944885254
    4. ')' → logprob: -7.269516944885254
    5. '))' → logprob: -9.894516944885254
    6. ' ())' → logprob: -10.644516944885254
    7. '(' → logprob: -11.269516944885254
    8. '())
' → logprob: -11.769516944885254
    9. '()))
' → logprob: -13.644516944885254
    10. '()));' → logprob: -13.769516944885254

Token 146: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4920463562011719
    2. '<|end|>' → logprob: -1.8670463562011719
    3. '#' → logprob: -1.9920463562011719
    4. '[' → logprob: -2.242046356201172
    5. 'for' → logprob: -2.492046356201172
    6. 'list' → logprob: -2.617046356201172
    7. 'A' → logprob: -2.992046356201172
    8. 'result' → logprob: -3.117046356201172
    9. '
' → logprob: -3.367046356201172
    10. 's' → logprob: -4.242046356201172

Token 147: ' Initialise' (ID: 179601)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.111937165260315
    2. 'A' → logprob: -1.361937165260315
    3. 'L' → logprob: -2.1119370460510254
    4. 'sum' → logprob: -2.3619370460510254
    5. 'lst' → logprob: -2.4869370460510254
    6. '#' → logprob: -3.1119370460510254
    7. 'sorted' → logprob: -3.6119370460510254
    8. ' A' → logprob: -4.986937046051025
    9. 'result' → logprob: -4.986937046051025
    10. ' L' → logprob: -5.236937046051025

Token 148: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.32552629709243774
    2. ' la' → logprob: -1.700526237487793
    3. ' a' → logprob: -2.825526237487793
    4. 'une' → logprob: -4.075526237487793
    5. 's' → logprob: -5.200526237487793
    6. ' un' → logprob: -5.450526237487793
    7. ' ' → logprob: -6.325526237487793
    8. 'a' → logprob: -6.575526237487793
    9. ' ' → logprob: -6.575526237487793
    10. 'la' → logprob: -6.825526237487793

Token 149: ' variable' (ID: 11076)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.49463051557540894
    2. 's' → logprob: -1.4946305751800537
    3. 'list' → logprob: -2.9946305751800537
    4. 'sum' → logprob: -3.1196305751800537
    5. ' liste' → logprob: -3.4946305751800537
    6. ' somme' → logprob: -3.7446305751800537
    7. 'result' → logprob: -6.244630336761475
    8. 'variable' → logprob: -6.244630336761475
    9. '_' → logprob: -6.619630336761475
    10. 'max' → logprob: -6.744630336761475

Token 150: ' compteur' (ID: 163344)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.30802425742149353
    2. ' total' → logprob: -2.4330241680145264
    3. 'sum' → logprob: -2.9330241680145264
    4. ' somme' → logprob: -3.0580241680145264
    5. ' sum' → logprob: -3.4330241680145264
    6. 'total' → logprob: -3.8080241680145264
    7. '_s' → logprob: -4.9330244064331055
    8. ' s' → logprob: -5.1830244064331055
    9. '_sum' → logprob: -5.6830244064331055
    10. ' suma' → logprob: -6.6830244064331055

Token 151: ' à' (ID: 1221)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.33544087409973145
    2. ' compteur' → logprob: -1.7104408740997314
    3. 's' → logprob: -2.9604408740997314
    4. 'c' → logprob: -4.460440635681152
    5. ' count' → logprob: -4.460440635681152
    6. 'comp' → logprob: -4.460440635681152
    7. 'total' → logprob: -5.710440635681152
    8. 'counter' → logprob: -5.835440635681152
    9. ' ' → logprob: -6.210440635681152
    10. 'sum' → logprob: -6.210440635681152

Token 152: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021308885887265205
    2. ' ' → logprob: -3.8963088989257812
    3. ' zéro' → logprob: -7.521308898925781
    4. 'z' → logprob: -9.021308898925781
    5. ' zero' → logprob: -9.896308898925781
    6. ' z' → logprob: -10.646308898925781
    7. 'zero' → logprob: -11.396308898925781
    8. ' ' → logprob: -11.396308898925781
    9. '1' → logprob: -13.146308898925781
    10. '```' → logprob: -13.771308898925781

Token 153: '.
' (ID: 558)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.41948795318603516
    2. ' compteur' → logprob: -1.6694879531860352
    3. 'c' → logprob: -2.544487953186035
    4. 'comp' → logprob: -3.669487953186035
    5. 's' → logprob: -4.044487953186035
    6. 'counter' → logprob: -4.669487953186035
    7. '
' → logprob: -4.919487953186035
    8. ' count' → logprob: -5.544487953186035
    9. 'total' → logprob: -5.794487953186035
    10. 'sum' → logprob: -6.169487953186035

Token 154: '#' (ID: 2)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.012956916354596615
    2. 'counter' → logprob: -5.1379570960998535
    3. 'comp' → logprob: -6.0129570960998535
    4. 'c' → logprob: -6.3879570960998535
    5. ' count' → logprob: -6.5129570960998535
    6. 'sum' → logprob: -7.5129570960998535
    7. ' compteur' → logprob: -7.7629570960998535
    8. 'cnt' → logprob: -8.887956619262695
    9. 's' → logprob: -9.012956619262695
    10. 'total' → logprob: -9.762956619262695

Token 155: ' Ce' (ID: 14228)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.03291373327374458
    2. ' count' → logprob: -4.032913684844971
    3. 'counter' → logprob: -5.157913684844971
    4. 'sum' → logprob: -6.032913684844971
    5. 's' → logprob: -6.282913684844971
    6. 'comp' → logprob: -6.657913684844971
    7. ' compteur' → logprob: -6.657913684844971
    8. 'c' → logprob: -6.782913684844971
    9. 'total' → logprob: -7.782913684844971
    10. ' counter' → logprob: -8.782914161682129

Token 156: ' compteur' (ID: 163344)
  Prédit: ' compteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compteur' → logprob: -0.13709107041358948
    2. 'n' → logprob: -3.2620911598205566
    3. 'comp' → logprob: -3.7620911598205566
    4. 'count' → logprob: -3.8870911598205566
    5. 's' → logprob: -4.137091159820557
    6. ' n' → logprob: -4.887091159820557
    7. ' ' → logprob: -5.887091159820557
    8. 'counter' → logprob: -6.012091159820557
    9. '=' → logprob: -6.262091159820557
    10. ' ' → logprob: -6.387091159820557

Token 157: ' va' (ID: 3423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8508023023605347
    2. '=' → logprob: -1.2258023023605347
    3. ' ' → logprob: -1.6008023023605347
    4. '<|end|>' → logprob: -2.975802421569824
    5. 's' → logprob: -4.600802421569824
    6. 'count' → logprob: -5.850802421569824
    7. ' +=' → logprob: -6.350802421569824
    8. ' compteur' → logprob: -6.475802421569824
    9. 'a' → logprob: -6.975802421569824
    10. 'n' → logprob: -6.975802421569824

Token 158: ' servir' (ID: 42557)
  Prédit: ' compter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compter' → logprob: -0.04065483808517456
    2. ' servir' → logprob: -3.5406548976898193
    3. 'comp' → logprob: -5.04065465927124
    4. 'count' → logprob: -6.66565465927124
    5. 'serv' → logprob: -6.91565465927124
    6. ' ' → logprob: -7.41565465927124
    7. ' permettre' → logprob: -7.79065465927124
    8. ' compt' → logprob: -8.415655136108398
    9. 's' → logprob: -8.540655136108398
    10. 'ser' → logprob: -9.415655136108398

Token 159: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.024371016770601273
    2. 'à' → logprob: -4.274371147155762
    3. ' ' → logprob: -5.399371147155762
    4. ' to' → logprob: -5.899371147155762
    5. '<|end|>' → logprob: -6.524371147155762
    6. ' a' → logprob: -7.899371147155762
    7. ' ' → logprob: -8.649371147155762
    8. 'to' → logprob: -8.899371147155762
    9. 'a' → logprob: -9.149371147155762
    10. 'au' → logprob: -9.524371147155762

Token 160: ' compter' (ID: 81694)
  Prédit: ' compter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compter' → logprob: -0.03667949512600899
    2. 'comp' → logprob: -3.78667950630188
    3. '<|end|>' → logprob: -4.661679267883301
    4. 'count' → logprob: -6.161679267883301
    5. ' compt' → logprob: -7.161679267883301
    6. 'com' → logprob: -8.6616792678833
    7. 'stock' → logprob: -9.0366792678833
    8. 'acc' → logprob: -9.4116792678833
    9. 'con' → logprob: -9.4116792678833
    10. ' cum' → logprob: -9.5366792678833

Token 161: ' combien' (ID: 106648)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.4817262291908264
    2. 'élé' → logprob: -2.2317261695861816
    3. ' A' → logprob: -2.7317261695861816
    4. 'A' → logprob: -2.7317261695861816
    5. ' éléments' → logprob: -3.4817261695861816
    6. 'val' → logprob: -3.6067261695861816
    7. ' valeurs' → logprob: -3.8567261695861816
    8. '0' → logprob: -4.481726169586182
    9. ' fois' → logprob: -4.981726169586182
    10. 'elements' → logprob: -5.106726169586182

Token 164: ' rempl' (ID: 66326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: 'issent' (ID: 31556)
  Prédit: 'issent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issent' → logprob: -0.001280714524909854
    2. 'iss' → logprob: -7.251280784606934
    3. ' iss' → logprob: -8.751280784606934
    4. 'is' → logprob: -8.751280784606934
    5. '```' → logprob: -9.626280784606934
    6. 'issa' → logprob: -10.376280784606934
    7. 'a' → logprob: -10.501280784606934
    8. 'issant' → logprob: -10.876280784606934
    9. 'isent' → logprob: -11.001280784606934
    10. 'ent' → logprob: -11.501280784606934

Token 166: ' certaines' (ID: 46662)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: ' conditions' (ID: 6409)
  Prédit: ' conditions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -0.29501447081565857
    2. 'conditions' → logprob: -1.420014500617981
    3. 'condition' → logprob: -5.795014381408691
    4. '<|end|>' → logprob: -5.795014381408691
    5. ' condition' → logprob: -6.045014381408691
    6. ' ' → logprob: -6.170014381408691
    7. '_conditions' → logprob: -7.795014381408691
    8. ' ' → logprob: -7.795014381408691
    9. ' condiciones' → logprob: -7.920014381408691
    10. '条件' → logprob: -8.045014381408691

Token 168: '.
' (ID: 558)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6935641169548035
    2. 'c' → logprob: -1.8185641765594482
    3. ' compteur' → logprob: -2.3185641765594482
    4. ' 
' → logprob: -2.9435641765594482
    5. 's' → logprob: -3.4435641765594482
    6. ' ' → logprob: -3.4435641765594482
    7. 'i' → logprob: -3.4435641765594482
    8. 'comp' → logprob: -4.068563938140869
    9. '
' → logprob: -4.443563938140869
    10. 'com' → logprob: -4.818563938140869

Token 169: 'cnt' (ID: 33160)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.021156704053282738
    2. 'c' → logprob: -4.3961567878723145
    3. 'counter' → logprob: -5.5211567878723145
    4. ' count' → logprob: -5.7711567878723145
    5. 'comp' → logprob: -7.7711567878723145
    6. 'cnt' → logprob: -7.8961567878723145
    7. ' compteur' → logprob: -8.146156311035156
    8. '
' → logprob: -9.646156311035156
    9. ' counter' → logprob: -10.146156311035156
    10. ' 
' → logprob: -10.146156311035156

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04913511872291565
    2. '=' → logprob: -3.049135208129883
    3. ' ' → logprob: -7.799135208129883
    4. 'er' → logprob: -10.174135208129883
    5. '  ' → logprob: -10.424135208129883
    6. '_' → logprob: -10.549135208129883
    7. ' +=' → logprob: -11.174135208129883
    8. '   ' → logprob: -12.049135208129883
    9. 'ount' → logprob: -12.674135208129883
    10. 's' → logprob: -13.049135208129883

Token 171: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17975039780139923
    2. '0' → logprob: -1.8047504425048828
    3. ' ' → logprob: -12.304750442504883
    4. ' N' → logprob: -14.304750442504883
    5. 'N' → logprob: -15.992250442504883
    6. '  ' → logprob: -16.742250442504883
    7. ' 
' → logprob: -16.742250442504883
    8. '1' → logprob: -16.992250442504883
    9. '۰' → logprob: -16.992250442504883
    10. 's' → logprob: -17.054750442504883

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.098748053773306e-05
    2. ' ' → logprob: -9.75006103515625
    3. 'N' → logprob: -13.37506103515625
    4. 'int' → logprob: -15.12506103515625
    5. '1' → logprob: -15.50006103515625
    6. 'sum' → logprob: -16.81256103515625
    7. '=' → logprob: -16.81256103515625
    8. '۰' → logprob: -17.06256103515625
    9. 's' → logprob: -17.31256103515625
    10. ' N' → logprob: -17.37506103515625

Token 173: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3983748257160187
    2. 'for' → logprob: -1.2733747959136963
    3. ' for' → logprob: -3.6483747959136963
    4. '<|end|>' → logprob: -3.8983747959136963
    5. ' 
' → logprob: -6.898375034332275
    6. '
' → logprob: -7.773375034332275
    7. '  
' → logprob: -8.148374557495117
    8. '' → logprob: -8.398374557495117
    9. ' ' → logprob: -8.898374557495117
    10. '\n' → logprob: -9.023374557495117

Token 174: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004248355980962515
    2. ' for' → logprob: -8.3754243850708
    3. '
' → logprob: -8.6254243850708
    4. ' 
' → logprob: -12.2504243850708
    5. '<|end|>' → logprob: -12.2504243850708
    6. '' → logprob: -13.5004243850708
    7. ' ' → logprob: -13.7504243850708
    8. 'f' → logprob: -14.3754243850708
    9. '  
' → logprob: -14.5004243850708
    10. '	for' → logprob: -15.1254243850708

Token 175: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9385402993066236e-05
    2. ' for' → logprob: -10.875019073486328
    3. 'A' → logprob: -16.000019073486328
    4. 'For' → logprob: -16.000019073486328
    5. 'f' → logprob: -17.125019073486328
    6. '
' → logprob: -17.625019073486328
    7. '	for' → logprob: -17.625019073486328
    8. '```' → logprob: -17.625019073486328
    9. 'fo' → logprob: -18.000019073486328
    10. 'if' → logprob: -18.125019073486328

Token 176: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3916447162628174
    2. ' for' → logprob: -1.1416447162628174
    3. ' ' → logprob: -5.641644477844238
    4. 's' → logprob: -7.391644477844238
    5. '
' → logprob: -9.891644477844238
    6. ' 
' → logprob: -10.016644477844238
    7. ' suivante' → logprob: -10.016644477844238
    8. 'or' → logprob: -10.266644477844238
    9. ' prochaine' → logprob: -10.266644477844238
    10. ' pour' → logprob: -10.391644477844238

Token 177: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.632635772228241
    2. ' for' → logprob: -0.757635772228241
    3. ' pour' → logprob: -11.507636070251465
    4. 'pour' → logprob: -11.507636070251465
    5. ' ' → logprob: -12.007636070251465
    6. ':' → logprob: -12.382636070251465
    7. ' suivante' → logprob: -13.507636070251465
    8. '<|end|>' → logprob: -13.507636070251465
    9. 's' → logprob: -13.757636070251465
    10. '
' → logprob: -14.632636070251465

Token 178: ' permet' (ID: 11798)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4953417479991913
    2. ' i' → logprob: -1.4953417778015137
    3. ' for' → logprob: -1.9953417778015137
    4. 'for' → logprob: -4.870341777801514
    5. ' n' → logprob: -5.495341777801514
    6. ' a' → logprob: -5.495341777801514
    7. '  ' → logprob: -5.745341777801514
    8. ' range' → logprob: -5.870341777801514
    9. ' A' → logprob: -5.995341777801514
    10. ' ' → logprob: -6.495341777801514

Token 179: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6411094665527344
    2. ' d' → logprob: -0.7661094665527344
    3. ' ' → logprob: -5.516109466552734
    4. ' i' → logprob: -6.391109466552734
    5. 'd' → logprob: -6.641109466552734
    6. 'de' → logprob: -6.891109466552734
    7. '<|end|>' → logprob: -9.141109466552734
    8. ' for' → logprob: -10.016109466552734
    9. ' ' → logprob: -10.016109466552734
    10. ' di' → logprob: -10.141109466552734

Token 180: ''' (ID: 6)
  Prédit: ' parcour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parcour' → logprob: -0.11905533820390701
    2. ' iter' → logprob: -3.1190552711486816
    3. 'for' → logprob: -3.9940552711486816
    4. 'iter' → logprob: -4.994055271148682
    5. 'éc' → logprob: -5.119055271148682
    6. ' for' → logprob: -5.119055271148682
    7. 'e' → logprob: -5.494055271148682
    8. ' A' → logprob: -5.744055271148682
    9. 'enumer' → logprob: -5.869055271148682
    10. ' travers' → logprob: -6.369055271148682

Token 181: 'it' (ID: 278)
  Prédit: ' parcour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parcour' → logprob: -0.44197505712509155
    2. ' iter' → logprob: -1.6919751167297363
    3. ' A' → logprob: -2.3169751167297363
    4. 'A' → logprob: -3.1919751167297363
    5. 'iter' → logprob: -3.8169751167297363
    6. 'range' → logprob: -5.816975116729736
    7. 'for' → logprob: -6.566975116729736
    8. ' range' → logprob: -6.691975116729736
    9. ' for' → logprob: -6.941975116729736
    10. 'enumer' → logprob: -7.191975116729736

Token 182: 'érer' (ID: 29097)
  Prédit: 'érer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.0009038381977006793
    2. 'er' → logprob: -8.000904083251953
    3. 'ère' → logprob: -8.625904083251953
    4. 'ére' → logprob: -8.875904083251953
    5. 'ér' → logprob: -9.500904083251953
    6. 'é' → logprob: -10.000904083251953
    7. 'éra' → logprob: -10.250904083251953
    8. 'érez' → logprob: -10.875904083251953
    9. 'ération' → logprob: -11.000904083251953
    10. 'erer' → logprob: -11.250904083251953

Token 183: ' (' (ID: 350)
  Prédit: ' over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.5913254618644714
    2. ' through' → logprob: -1.5913255214691162
    3. ' a' → logprob: -2.216325521469116
    4. ' ' → logprob: -2.341325521469116
    5. ' A' → logprob: -4.091325283050537
    6. ' sur' → logprob: -4.591325283050537
    7. ' à' → logprob: -6.091325283050537
    8. ' au' → logprob: -6.341325283050537
    9. 'sur' → logprob: -6.341325283050537
    10. '<|end|>' → logprob: -6.716325283050537

Token 184: 'par' (ID: 796)
  Prédit: ' over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.6585670709609985
    2. ' through' → logprob: -1.6585670709609985
    3. ' ' → logprob: -2.158566951751709
    4. ' A' → logprob: -2.158566951751709
    5. ' a' → logprob: -3.408566951751709
    6. ' in' → logprob: -5.283566951751709
    7. 'sur' → logprob: -5.533566951751709
    8. ')' → logprob: -5.658566951751709
    9. ' à' → logprob: -6.158566951751709
    10. ' sur' → logprob: -6.283566951751709

Token 185: 'cour' (ID: 118675)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9278179407119751
    2. ' ' → logprob: -1.427817940711975
    3. ' A' → logprob: -1.552817940711975
    4. '_' → logprob: -3.4278178215026855
    5. 'a' → logprob: -4.5528178215026855
    6. '  ' → logprob: -5.0528178215026855
    7. 'er' → logprob: -5.1778178215026855
    8. 'venir' → logprob: -5.1778178215026855
    9. ')' → logprob: -5.3028178215026855
    10. '   ' → logprob: -5.3028178215026855

Token 186: 'ir' (ID: 380)
  Prédit: 'érer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.034461334347724915
    2. 'er' → logprob: -4.159461498260498
    3. 'ère' → logprob: -4.159461498260498
    4. 'ére' → logprob: -7.784461498260498
    5. 'rer' → logprob: -7.784461498260498
    6. 'ération' → logprob: -8.40946102142334
    7. 'u' → logprob: -8.65946102142334
    8. 'èr' → logprob: -8.90946102142334
    9. 'é' → logprob: -9.03446102142334
    10. 'éer' → logprob: -9.03446102142334

Token 187: ')' (ID: 8)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.4540153443813324
    2. ' ' → logprob: -1.4540153741836548
    3. ' over' → logprob: -2.7040152549743652
    4. 'A' → logprob: -3.5790152549743652
    5. ' a' → logprob: -4.329015254974365
    6. ' through' → logprob: -4.829015254974365
    7. ')' → logprob: -4.954015254974365
    8. 's' → logprob: -5.954015254974365
    9. ' )' → logprob: -6.579015254974365
    10. ' sur' → logprob: -6.954015254974365

Token 188: ' chacun' (ID: 52136)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.17247280478477478
    2. ' over' → logprob: -2.0474727153778076
    3. ' through' → logprob: -4.047472953796387
    4. ' ' → logprob: -5.672472953796387
    5. ' a' → logprob: -5.672472953796387
    6. 'A' → logprob: -6.172472953796387
    7. ' sur' → logprob: -6.422472953796387
    8. 'sur' → logprob: -7.672472953796387
    9. ' for' → logprob: -8.422472953796387
    10. ' à' → logprob: -8.672472953796387

Token 189: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.345833957195282
    2. ' ' → logprob: -1.8458340167999268
    3. ' A' → logprob: -2.5958340167999268
    4. '<|end|>' → logprob: -4.345833778381348
    5. ' a' → logprob: -4.845833778381348
    6. 'A' → logprob: -4.970833778381348
    7. ' ' → logprob: -5.470833778381348
    8. ' for' → logprob: -5.720833778381348
    9. ' of' → logprob: -6.095833778381348
    10. 'a' → logprob: -6.095833778381348

Token 190: ' éléments' (ID: 57375)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.17978106439113617
    2. 'A' → logprob: -1.8047810792922974
    3. ' ' → logprob: -11.429780960083008
    4. ' elements' → logprob: -11.554780960083008
    5. ' éléments' → logprob: -12.304780960083008
    6. 'elements' → logprob: -13.054780960083008
    7. ' a' → logprob: -13.054780960083008
    8. 'a' → logprob: -13.179780960083008
    9. ' nombres' → logprob: -13.429780960083008
    10. ' numbers' → logprob: -14.429780960083008

Token 191: ' de' (ID: 334)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.24302901327610016
    2. 'A' → logprob: -1.618028998374939
    3. ' de' → logprob: -4.1180291175842285
    4. ' in' → logprob: -7.9930291175842285
    5. ' ' → logprob: -8.24302864074707
    6. 'de' → logprob: -8.61802864074707
    7. ' dans' → logprob: -9.24302864074707
    8. ' for' → logprob: -9.74302864074707
    9. 'in' → logprob: -9.74302864074707
    10. 'for' → logprob: -9.99302864074707

Token 192: ' l' (ID: 305)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.25192946195602417
    2. ' A' → logprob: -1.501929521560669
    3. ' ' → logprob: -15.75192928314209
    4. ' ' → logprob: -16.251930236816406
    5. '	A' → logprob: -16.501930236816406
    6. ' a' → logprob: -17.626930236816406
    7. 'a' → logprob: -17.751930236816406
    8. 'list' → logprob: -19.376930236816406
    9. ' list' → logprob: -19.501930236816406
    10. '_A' → logprob: -19.501930236816406

Token 193: ''' (ID: 6)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.013141288422048092
    2. ''A' → logprob: -4.88814115524292
    3. 'a' → logprob: -6.01314115524292
    4. ''' → logprob: -6.38814115524292
    5. ' A' → logprob: -7.38814115524292
    6. 'e' → logprob: -7.76314115524292
    7. '`' → logprob: -9.513141632080078
    8. 'range' → logprob: -9.763141632080078
    9. '’A' → logprob: -10.763141632080078
    10. ''utilisateur' → logprob: -10.763141632080078

Token 194: 'it' (ID: 278)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.009787612594664097
    2. ' A' → logprob: -4.634787559509277
    3. ''A' → logprob: -11.134787559509277
    4. 'a' → logprob: -11.884787559509277
    5. ' ' → logprob: -13.259787559509277
    6. '`' → logprob: -13.884787559509277
    7. '	A' → logprob: -14.134787559509277
    8. 'range' → logprob: -14.259787559509277
    9. 'enumer' → logprob: -14.259787559509277
    10. ''' → logprob: -14.759787559509277

Token 195: 'ér' (ID: 2156)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.020906547084450722
    2. 'ér' → logprob: -3.895906448364258
    3. 'A' → logprob: -8.520906448364258
    4. 'érateur' → logprob: -10.020906448364258
    5. 'éré' → logprob: -10.895906448364258
    6. 'é' → logprob: -11.020906448364258
    7. 'éra' → logprob: -11.395906448364258
    8. 'e' → logprob: -11.520906448364258
    9. 'able' → logprob: -11.645906448364258
    10. 'érer' → logprob: -12.020906448364258

Token 196: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.000691824359819293
    2. 'er' → logprob: -7.625691890716553
    3. 'ér' → logprob: -9.500691413879395
    4. 'é' → logprob: -11.000691413879395
    5. '```' → logprob: -11.000691413879395
    6. 'ables' → logprob: -11.375691413879395
    7. 'ABLE' → logprob: -11.750691413879395
    8. 'r' → logprob: -11.875691413879395
    9. 'nable' → logprob: -12.000691413879395
    10. 'table' → logprob: -12.000691413879395

Token 197: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.632621169090271
    2. 'A' → logprob: -0.757621169090271
    3. ' ' → logprob: -11.882620811462402
    4. ' for' → logprob: -12.507620811462402
    5. 'for' → logprob: -12.507620811462402
    6. ' ' → logprob: -12.882620811462402
    7. 's' → logprob: -13.507620811462402
    8. ':' → logprob: -14.007620811462402
    9. '(A' → logprob: -15.007620811462402
    10. '.' → logprob: -15.320120811462402

Token 198: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09520643949508667
    2. 'for' → logprob: -2.8452064990997314
    3. ' for' → logprob: -3.9702064990997314
    4. ':
' → logprob: -4.595206260681152
    5. ' :' → logprob: -5.720206260681152
    6. ' :
' → logprob: -8.720206260681152
    7. ',' → logprob: -9.345206260681152
    8. '.' → logprob: -10.095206260681152
    9. 'pour' → logprob: -10.220206260681152
    10. ' pour' → logprob: -10.845206260681152

Token 199: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04342708736658096
    2. ' for' → logprob: -3.168426990509033
    3. ' 
' → logprob: -8.793427467346191
    4. ':' → logprob: -9.418427467346191
    5. 'in' → logprob: -9.668427467346191
    6. '```' → logprob: -10.043427467346191
    7. '
' → logprob: -10.543427467346191
    8. ':
' → logprob: -11.418427467346191
    9. '<|end|>' → logprob: -11.793427467346191
    10. 'A' → logprob: -11.918427467346191

Token 200: ' À' (ID: 27643)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001170225441455841
    2. ' for' → logprob: -6.7511701583862305
    3. '
' → logprob: -17.626171112060547
    4. 'For' → logprob: -18.126171112060547
    5. '	for' → logprob: -18.376171112060547
    6. 'A' → logprob: -18.501171112060547
    7. 'pour' → logprob: -18.501171112060547
    8. '```' → logprob: -19.751171112060547
    9. ' ' → logprob: -20.251171112060547
    10. ' 
' → logprob: -20.376171112060547

Token 201: ' chaque' (ID: 21194)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3753950297832489
    2. ' for' → logprob: -1.3753950595855713
    3. ' ' → logprob: -4.500394821166992
    4. ' in' → logprob: -4.500394821166992
    5. '_' → logprob: -4.875394821166992
    6. ' chaque' → logprob: -5.750394821166992
    7. 'range' → logprob: -5.875394821166992
    8. 'A' → logprob: -5.875394821166992
    9. 'i' → logprob: -6.125394821166992
    10. 'each' → logprob: -6.125394821166992

Token 202: ' it' (ID: 480)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6127481460571289
    2. ' i' → logprob: -2.737748146057129
    3. 'a' → logprob: -2.862748146057129
    4. ' élément' → logprob: -2.862748146057129
    5. 'élé' → logprob: -3.237748146057129
    6. 'i' → logprob: -3.362748146057129
    7. ':' → logprob: -3.612748146057129
    8. 'element' → logprob: -3.737748146057129
    9. 'for' → logprob: -3.862748146057129
    10. 'n' → logprob: -3.862748146057129

Token 203: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.056357305496931076
    2. 'er' → logprob: -3.0563573837280273
    3. 'em' → logprob: -5.181357383728027
    4. 'érateur' → logprob: -7.931357383728027
    5. 'm' → logprob: -8.056357383728027
    6. 'ém' → logprob: -8.431357383728027
    7. 'ration' → logprob: -8.431357383728027
    8. 'ér' → logprob: -8.556357383728027
    9. 'é' → logprob: -8.806357383728027
    10. 'r' → logprob: -9.681357383728027

Token 204: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4365970492362976
    2. ',' → logprob: -1.6865971088409424
    3. ' for' → logprob: -2.8115971088409424
    4. ' :' → logprob: -3.0615971088409424
    5. ' ' → logprob: -3.6865971088409424
    6. ' ,' → logprob: -4.061596870422363
    7. 'for' → logprob: -4.561596870422363
    8. ':
' → logprob: -5.436596870422363
    9. ' :
' → logprob: -5.811596870422363
    10. '   ' → logprob: -7.686596870422363

Token 205: ' la' (ID: 557)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5270523428916931
    2. ' a' → logprob: -1.527052402496338
    3. 'a' → logprob: -2.152052402496338
    4. 'x' → logprob: -3.527052402496338
    5. ' for' → logprob: -3.652052402496338
    6. 'for' → logprob: -5.027052402496338
    7. ' i' → logprob: -5.027052402496338
    8. ' n' → logprob: -6.152052402496338
    9. ' ' → logprob: -6.902052402496338
    10. ' val' → logprob: -7.027052402496338

Token 206: ' variable' (ID: 11076)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7286083102226257
    2. ' for' → logprob: -1.9786083698272705
    3. 'nombre' → logprob: -2.7286083698272705
    4. ' variable' → logprob: -2.9786083698272705
    5. ' ' → logprob: -3.1036083698272705
    6. 'n' → logprob: -3.4786083698272705
    7. ' nombre' → logprob: -3.4786083698272705
    8. 'variable' → logprob: -3.7286083698272705
    9. 'val' → logprob: -3.8536083698272705
    10. 'a' → logprob: -4.228608131408691

Token 207: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5901023745536804
    2. ' a' → logprob: -1.0901024341583252
    3. 'x' → logprob: -2.965102434158325
    4. ' x' → logprob: -3.215102434158325
    5. ' i' → logprob: -4.715102195739746
    6. 'i' → logprob: -4.840102195739746
    7. 'num' → logprob: -7.840102195739746
    8. ' num' → logprob: -8.715102195739746
    9. 'n' → logprob: -9.090102195739746
    10. ' n' → logprob: -9.715102195739746

Token 208: ' prend' (ID: 37463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06958244740962982
    2. ' in' → logprob: -4.319582462310791
    3. 's' → logprob: -4.444582462310791
    4. ' for' → logprob: -4.694582462310791
    5. ' ' → logprob: -5.194582462310791
    6. '  ' → logprob: -5.319582462310791
    7. '<|end|>' → logprob: -5.944582462310791
    8. 'for' → logprob: -6.069582462310791
    9. ',' → logprob: -6.444582462310791
    10. 'in' → logprob: -6.569582462310791

Token 209: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7258613109588623
    2. '<|end|>' → logprob: -1.1008613109588623
    3. 'a' → logprob: -2.8508613109588623
    4. ' a' → logprob: -3.6008613109588623
    5. '_' → logprob: -4.475861549377441
    6. ' un' → logprob: -4.600861549377441
    7. 'un' → logprob: -4.975861549377441
    8. 'space' → logprob: -5.100861549377441
    9. '<|end|>' → logprob: -5.100861549377441
    10. 's' → logprob: -5.350861549377441

Token 210: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6804652214050293
    2. 'val' → logprob: -1.8054652214050293
    3. 'A' → logprob: -1.9304652214050293
    4. 'a' → logprob: -2.1804652214050293
    5. ' A' → logprob: -2.3054652214050293
    6. ' a' → logprob: -2.3054652214050293
    7. 'value' → logprob: -3.1804652214050293
    8. ' place' → logprob: -3.5554652214050293
    9. ' value' → logprob: -3.5554652214050293
    10. ' next' → logprob: -3.6804652214050293

Token 211: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7464039325714111
    2. '<|end|>' → logprob: -1.1214039325714111
    3. ' de' → logprob: -2.621403932571411
    4. ' suivante' → logprob: -2.996403932571411
    5. ' a' → logprob: -4.121403694152832
    6. '  ' → logprob: -4.496403694152832
    7. ' du' → logprob: -4.621403694152832
    8. 'de' → logprob: -4.746403694152832
    9. '<|end|>' → logprob: -5.496403694152832
    10. 's' → logprob: -5.746403694152832

Token 212: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.7611343860626221
    2. ''' → logprob: -1.386134386062622
    3. 'e' → logprob: -1.761134386062622
    4. 'es' → logprob: -3.136134386062622
    5. 'un' → logprob: -4.386134147644043
    6. ' e' → logprob: -4.636134147644043
    7. ' ' → logprob: -4.636134147644043
    8. 'a' → logprob: -4.886134147644043
    9. ''une' → logprob: -5.011134147644043
    10. ' '' → logprob: -5.386134147644043

Token 213: ' des' (ID: 731)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.41700348258018494
    2. ' élément' → logprob: -1.1670035123825073
    3. ' ' → logprob: -4.042003631591797
    4. ' a' → logprob: -5.667003631591797
    5. 'a' → logprob: -5.917003631591797
    6. ' nombre' → logprob: -6.417003631591797
    7. 'element' → logprob: -6.792003631591797
    8. ' element' → logprob: -6.792003631591797
    9. 'nombre' → logprob: -7.417003631591797
    10. ' éléments' → logprob: -8.042003631591797

Token 214: ' éléments' (ID: 57375)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5871855616569519
    2. ' A' → logprob: -0.9621855616569519
    3. 'a' → logprob: -3.2121856212615967
    4. ' ' → logprob: -4.462185382843018
    5. ' a' → logprob: -4.837185382843018
    6. ' elements' → logprob: -6.712185382843018
    7. ' éléments' → logprob: -7.962185382843018
    8. 'élé' → logprob: -8.212185859680176
    9. 'elements' → logprob: -8.462185859680176
    10. '  ' → logprob: -9.337185859680176

Token 215: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6411312222480774
    2. ':' → logprob: -1.7661311626434326
    3. ' ' → logprob: -2.1411311626434326
    4. ' in' → logprob: -2.6411311626434326
    5. ' a' → logprob: -3.6411311626434326
    6. 'in' → logprob: -4.391131401062012
    7. ' :' → logprob: -4.516131401062012
    8. ' A' → logprob: -4.641131401062012
    9. 'de' → logprob: -4.891131401062012
    10. 'a' → logprob: -5.016131401062012

Token 216: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01815006136894226
    2. ' A' → logprob: -4.0181498527526855
    3. ' ' → logprob: -16.393150329589844
    4. 'a' → logprob: -17.768150329589844
    5. 'l' → logprob: -18.018150329589844
    6. '	A' → logprob: -18.768150329589844
    7. ' la' → logprob: -18.893150329589844
    8. ' the' → logprob: -20.143150329589844
    9. '_A' → logprob: -20.268150329589844
    10. '=A' → logprob: -20.393150329589844

Token 217: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16000716388225555
    2. ':' → logprob: -2.5350072383880615
    3. ' for' → logprob: -2.7850072383880615
    4. ':
' → logprob: -5.035006999969482
    5. 'a' → logprob: -9.03500747680664
    6. ')' → logprob: -9.53500747680664
    7. '
' → logprob: -10.28500747680664
    8. ',' → logprob: -10.28500747680664
    9. '.' → logprob: -10.91000747680664
    10. ' :' → logprob: -11.28500747680664

Token 218: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0067745838314294815
    2. ' for' → logprob: -5.006774425506592
    3. '
' → logprob: -9.88177490234375
    4. ' 
' → logprob: -12.13177490234375
    5. 'a' → logprob: -13.88177490234375
    6. '```' → logprob: -14.38177490234375
    7. 'f' → logprob: -14.63177490234375
    8. '  
' → logprob: -15.88177490234375
    9. 'n' → logprob: -16.38177490234375
    10. '	for' → logprob: -16.63177490234375

Token 219: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.014506877399981022
    2. 'a' → logprob: -4.264506816864014
    3. ' ' → logprob: -8.264507293701172
    4. ' ' → logprob: -9.514507293701172
    5. '_a' → logprob: -11.639507293701172
    6. '	a' → logprob: -13.514507293701172
    7. '_' → logprob: -14.514507293701172
    8. ' ' → logprob: -14.889507293701172
    9. ' _' → logprob: -15.264507293701172
    10. ' а' → logprob: -15.389507293701172

Token 220: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0145031176507473
    2. 'in' → logprob: -4.264503002166748
    3. ' ' → logprob: -8.139503479003906
    4. ',' → logprob: -11.514503479003906
    5. 'a' → logprob: -11.764503479003906
    6. 's' → logprob: -12.139503479003906
    7. ' i' → logprob: -12.264503479003906
    8. 'n' → logprob: -12.264503479003906
    9. ' a' → logprob: -12.764503479003906
    10. '  ' → logprob: -12.764503479003906

Token 221: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.005233882926404476
    2. ' A' → logprob: -5.2552337646484375
    3. '	A' → logprob: -18.130233764648438
    4. '(A' → logprob: -18.880233764648438
    5. ' ' → logprob: -19.505233764648438
    6. 'a' → logprob: -20.505233764648438
    7. '=A' → logprob: -20.505233764648438
    8. '_A' → logprob: -20.880233764648438
    9. ':A' → logprob: -20.880233764648438
    10. '   ' → logprob: -21.630233764648438

Token 222: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.126521035796031e-05
    2. ':
' → logprob: -9.375091552734375
    3. ' :' → logprob: -12.000091552734375
    4. ',' → logprob: -16.375091552734375
    5. ':
' → logprob: -16.375091552734375
    6. '>' → logprob: -17.625091552734375
    7. '   ' → logprob: -17.625091552734375
    8. '):' → logprob: -17.875091552734375
    9. ':

' → logprob: -18.125091552734375
    10. '=' → logprob: -18.625091552734375

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07835303246974945
    2. ' 
' → logprob: -3.328352928161621
    3. ' ' → logprob: -4.078352928161621
    4. '    
' → logprob: -4.953352928161621
    5. ' if' → logprob: -5.078352928161621
    6. '<|end|>' → logprob: -5.453352928161621
    7. ':' → logprob: -6.078352928161621
    8. '  
' → logprob: -7.203352928161621
    9. '   
' → logprob: -7.453352928161621
    10. '  ' → logprob: -8.328352928161621

Token 224: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39602893590927124
    2. ' if' → logprob: -1.146028995513916
    3. ' ' → logprob: -5.521028995513916
    4. '    ' → logprob: -6.146028995513916
    5. 'if' → logprob: -6.521028995513916
    6. '    
' → logprob: -7.146028995513916
    7. ' 
' → logprob: -7.646028995513916
    8. '   ' → logprob: -10.021028518676758
    9. '     
' → logprob: -10.646028518676758
    10. '  ' → logprob: -10.646028518676758

Token 225: ' On' (ID: 2160)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.028268951922655106
    2. 'if' → logprob: -3.653269052505493
    3. '   ' → logprob: -6.278268814086914
    4. '    ' → logprob: -10.153268814086914
    5. ' ' → logprob: -10.278268814086914
    6. ' ' → logprob: -12.778268814086914
    7. '	if' → logprob: -12.778268814086914
    8. ' cnt' → logprob: -12.903268814086914
    9. '   ' → logprob: -13.153268814086914
    10. '    
' → logprob: -13.528268814086914

Token 226: ' teste' (ID: 62670)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6676023006439209
    2. '   ' → logprob: -1.042602300643921
    3. 'if' → logprob: -2.417602300643921
    4. '    ' → logprob: -3.167602300643921
    5. ' ' → logprob: -6.6676025390625
    6. '   ' → logprob: -8.1676025390625
    7. ' a' → logprob: -8.5426025390625
    8. ' ' → logprob: -8.5426025390625
    9. '#' → logprob: -8.6676025390625
    10. '   ' → logprob: -8.7926025390625

Token 227: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2943887412548065
    2. ' if' → logprob: -1.544388771057129
    3. ' ' → logprob: -3.794388771057129
    4. '    ' → logprob: -4.294388771057129
    5. 'if' → logprob: -6.294388771057129
    6. '  ' → logprob: -6.919388771057129
    7. ' a' → logprob: -7.169388771057129
    8. ' whether' → logprob: -7.669388771057129
    9. ':' → logprob: -8.419388771057129
    10. ' si' → logprob: -8.669388771057129

Token 228: ' le' (ID: 505)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3877849578857422
    2. 'a' → logprob: -1.1377849578857422
    3. ' ' → logprob: -7.387784957885742
    4. 'N' → logprob: -9.512784957885742
    5. '   ' → logprob: -9.637784957885742
    6. ' N' → logprob: -10.137784957885742
    7. '  ' → logprob: -11.012784957885742
    8. ' ' → logprob: -11.137784957885742
    9. '	a' → logprob: -11.137784957885742
    10. ' abs' → logprob: -11.387784957885742

Token 229: ' nombre' (ID: 9733)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1270737200975418
    2. ' a' → logprob: -2.1270737648010254
    3. '%' → logprob: -9.752073287963867
    4. ' ' → logprob: -10.502073287963867
    5. 'n' → logprob: -10.752073287963867
    6. '(a' → logprob: -12.252073287963867
    7. ' %' → logprob: -12.689573287963867
    8. '   ' → logprob: -13.002073287963867
    9. 'N' → logprob: -13.439573287963867
    10. 'abs' → logprob: -13.502073287963867

Token 230: ' actuel' (ID: 113646)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3141342103481293
    2. '%' → logprob: -1.8141342401504517
    3. ' a' → logprob: -2.939134120941162
    4. 'a' → logprob: -3.439134120941162
    5. ' >=' → logprob: -4.564134120941162
    6. ' >' → logprob: -4.939134120941162
    7. ' ' → logprob: -6.689134120941162
    8. '>' → logprob: -6.939134120941162
    9. '>a' → logprob: -7.314134120941162
    10. '>=' → logprob: -8.18913459777832

Token 231: ' (' (ID: 350)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.45570918917655945
    2. '%' → logprob: -1.3307092189788818
    3. '   ' → logprob: -2.705709218978882
    4. ' a' → logprob: -4.330708980560303
    5. 'a' → logprob: -4.705708980560303
    6. ' >=' → logprob: -5.705708980560303
    7. ' >' → logprob: -5.830708980560303
    8. '    ' → logprob: -6.080708980560303
    9. ' ' → logprob: -6.330708980560303
    10. '>' → logprob: -7.080708980560303

Token 232: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22587351500988007
    2. ' a' → logprob: -1.6008734703063965
    3. '   ' → logprob: -8.475873947143555
    4. ')' → logprob: -9.350873947143555
    5. ' ' → logprob: -9.975873947143555
    6. 'abs' → logprob: -10.475873947143555
    7. '    ' → logprob: -10.850873947143555
    8. ' )' → logprob: -10.975873947143555
    9. 'N' → logprob: -11.975873947143555
    10. ' abs' → logprob: -11.975873947143555

Token 233: ')' (ID: 8)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.841541588306427
    2. ')' → logprob: -1.3415415287017822
    3. '%' → logprob: -1.7165415287017822
    4. ' )' → logprob: -2.4665415287017822
    5. ' >=' → logprob: -4.341541767120361
    6. ' >' → logprob: -4.341541767120361
    7. '>' → logprob: -5.216541767120361
    8. '   ' → logprob: -5.591541767120361
    9. ' ' → logprob: -6.591541767120361
    10. 'a' → logprob: -6.591541767120361

Token 234: ' est' (ID: 893)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6008016467094421
    2. '%' → logprob: -0.8508016467094421
    3. ' >' → logprob: -4.350801467895508
    4. '>' → logprob: -5.350801467895508
    5. ' >=' → logprob: -5.725801467895508
    6. '   ' → logprob: -6.850801467895508
    7. ' ' → logprob: -7.225801467895508
    8. ' ==' → logprob: -7.475801467895508
    9. '>=' → logprob: -7.725801467895508
    10. ' <=' → logprob: -7.975801467895508

Token 235: ' un' (ID: 537)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.2827156782150269
    2. 'strict' → logprob: -1.4077156782150269
    3. ' supérieur' → logprob: -2.2827157974243164
    4. 'pair' → logprob: -2.6577157974243164
    5. 'sup' → logprob: -2.9077157974243164
    6. '%' → logprob: -2.9077157974243164
    7. ' divisible' → logprob: -3.1577157974243164
    8. ' >' → logprob: -3.6577157974243164
    9. ' positif' → logprob: -3.9077157974243164
    10. 'div' → logprob: -3.9077157974243164

Token 236: ' nombre' (ID: 9733)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.5981016159057617
    2. ' multiple' → logprob: -1.4731016159057617
    3. 'nombre' → logprob: -2.2231016159057617
    4. 'div' → logprob: -3.2231016159057617
    5. 'ent' → logprob: -3.9731016159057617
    6. 'pair' → logprob: -4.473101615905762
    7. ' nombre' → logprob: -4.598101615905762
    8. 'a' → logprob: -5.098101615905762
    9. 'multip' → logprob: -5.348101615905762
    10. 'élé' → logprob: -5.848101615905762

Token 237: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.7715206742286682
    2. 'prem' → logprob: -1.2715206146240234
    3. 'pair' → logprob: -2.0215206146240234
    4. '   ' → logprob: -3.8965206146240234
    5. ' positif' → logprob: -3.8965206146240234
    6. ' impair' → logprob: -3.8965206146240234
    7. ' divisible' → logprob: -4.521520614624023
    8. ' premier' → logprob: -4.646520614624023
    9. ' ' → logprob: -4.896520614624023
    10. 'posit' → logprob: -4.896520614624023

Token 238: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02230941690504551
    2. ':' → logprob: -4.397309303283691
    3. ' and' → logprob: -5.022309303283691
    4. ' :' → logprob: -6.522309303283691
    5. ' et' → logprob: -7.522309303283691
    6. 'and' → logprob: -8.022309303283691
    7. ' or' → logprob: -8.272309303283691
    8. '    ' → logprob: -8.897309303283691
    9. '       ' → logprob: -9.147309303283691
    10. '  ' → logprob: -9.147309303283691

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000205566844670102
    2. ' if' → logprob: -8.875205993652344
    3. '    
' → logprob: -10.250205993652344
    4. '    ' → logprob: -11.625205993652344
    5. '       ' → logprob: -12.000205993652344
    6. 'if' → logprob: -12.375205993652344
    7. ' ' → logprob: -12.625205993652344
    8. '   ' → logprob: -12.750205993652344
    9. '  ' → logprob: -13.750205993652344
    10. ' 
' → logprob: -14.000205993652344

Token 240: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12404792010784149
    2. ' if' → logprob: -2.3740479946136475
    3. 'if' → logprob: -3.7490479946136475
    4. '    
' → logprob: -12.124048233032227
    5. '   ' → logprob: -12.374048233032227
    6. '	if' → logprob: -12.874048233032227
    7. '    ' → logprob: -13.249048233032227
    8. '       ' → logprob: -13.374048233032227
    9. ' ' → logprob: -13.374048233032227
    10. '  ' → logprob: -14.874048233032227

Token 241: ' Un' (ID: 1367)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5875565409660339
    2. ' if' → logprob: -0.8375565409660339
    3. '   ' → logprob: -4.4625563621521
    4. ' ' → logprob: -11.837556838989258
    5. '	if' → logprob: -12.462556838989258
    6. '    ' → logprob: -12.587556838989258
    7. '  ' → logprob: -14.087556838989258
    8. 'If' → logprob: -14.587556838989258
    9. '```' → logprob: -14.962556838989258
    10. '    
' → logprob: -15.087556838989258

Token 242: ' nombre' (ID: 9733)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6227586269378662
    2. 'a' → logprob: -0.9977586269378662
    3. ' ' → logprob: -3.122758626937866
    4. '   ' → logprob: -3.872758626937866
    5. 'e' → logprob: -4.122758865356445
    6. ' if' → logprob: -5.497758865356445
    7. 'if' → logprob: -6.247758865356445
    8. '%' → logprob: -6.247758865356445
    9. '  ' → logprob: -6.497758865356445
    10. '    ' → logprob: -7.122758865356445

Token 243: ' est' (ID: 893)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.365186482667923
    2. '%' → logprob: -1.2401864528656006
    3. ' a' → logprob: -4.86518669128418
    4. 'a' → logprob: -5.11518669128418
    5. ' ' → logprob: -6.24018669128418
    6. '   ' → logprob: -7.11518669128418
    7. ' ' → logprob: -11.11518669128418
    8. '  ' → logprob: -11.24018669128418
    9. '_a' → logprob: -11.36518669128418
    10. ')' → logprob: -11.49018669128418

Token 244: ' pair' (ID: 10610)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8576818704605103
    2. ' pair' → logprob: -1.6076818704605103
    3. ' divisible' → logprob: -1.8576818704605103
    4. ' a' → logprob: -2.1076817512512207
    5. 'pair' → logprob: -2.3576817512512207
    6. ' ' → logprob: -6.857681751251221
    7. '%' → logprob: -7.357681751251221
    8. 'div' → logprob: -7.732681751251221
    9. ' paire' → logprob: -7.982681751251221
    10. ' multiple' → logprob: -8.982682228088379

Token 245: ' lorsqu' (ID: 57416)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15338517725467682
    2. '   ' → logprob: -3.0283851623535156
    3. ' si' → logprob: -3.4033851623535156
    4. 'if' → logprob: -3.6533851623535156
    5. ':' → logprob: -3.9033851623535156
    6. ' ' → logprob: -5.403385162353516
    7. ' a' → logprob: -6.028385162353516
    8. ' et' → logprob: -6.278385162353516
    9. 'si' → logprob: -6.528385162353516
    10. 'a' → logprob: -6.778385162353516

Token 246: ''il' (ID: 14683)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.05013416334986687
    2. 'a' → logprob: -3.0501341819763184
    3. ' ' → logprob: -6.800134181976318
    4. '   ' → logprob: -8.05013370513916
    5. ' (' → logprob: -10.05013370513916
    6. '	a' → logprob: -10.92513370513916
    7. '    ' → logprob: -11.17513370513916
    8. '(a' → logprob: -11.42513370513916
    9. '  ' → logprob: -11.55013370513916
    10. ' ' → logprob: -12.17513370513916

Token 247: ' est' (ID: 893)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2520381510257721
    2. '%' → logprob: -1.5020381212234497
    3. ' ' → logprob: -9.25203800201416
    4. 'a' → logprob: -12.25203800201416
    5. ' a' → logprob: -12.62703800201416
    6. ' modulo' → logprob: -13.25203800201416
    7. '%s' → logprob: -14.25203800201416
    8. ' est' → logprob: -14.50203800201416
    9. ' ' → logprob: -15.25203800201416
    10. '%n' → logprob: -15.37703800201416

Token 248: ' divisible' (ID: 167813)
  Prédit: ' divisible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.031668245792388916
    2. '%' → logprob: -3.656668186187744
    3. ' %' → logprob: -5.406668186187744
    4. 'div' → logprob: -7.156668186187744
    5. ' ' → logprob: -10.156668663024902
    6. ' divis' → logprob: -11.031668663024902
    7. ' modulo' → logprob: -11.531668663024902
    8. '%d' → logprob: -12.406668663024902
    9. ' div' → logprob: -12.531668663024902
    10. '%s' → logprob: -12.906668663024902

Token 249: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.22435656189918518
    2. 'par' → logprob: -2.3493566513061523
    3. ' ' → logprob: -2.7243566513061523
    4. '   ' → logprob: -3.4743566513061523
    5. '  ' → logprob: -6.224356651306152
    6. '%' → logprob: -6.224356651306152
    7. ')' → logprob: -6.724356651306152
    8. '    ' → logprob: -7.099356651306152
    9. ' by' → logprob: -7.349356651306152
    10. ' de' → logprob: -7.599356651306152

Token 250: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3869015872478485
    2. '2' → logprob: -1.136901617050171
    3. ' ' → logprob: -10.63690185546875
    4. ' deux' → logprob: -12.88690185546875
    5. '```' → logprob: -13.01190185546875
    6. 'de' → logprob: -13.88690185546875
    7. '
' → logprob: -15.63690185546875
    8. ' 
' → logprob: -16.26190185546875
    9. ' ' → logprob: -16.26190185546875
    10. '  ' → logprob: -16.63690185546875

Token 251: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00033796546631492674
    2. ' ' → logprob: -8.000337600708008
    3. 'de' → logprob: -13.375337600708008
    4. '```' → logprob: -13.875337600708008
    5. ' deux' → logprob: -16.875337600708008
    6. '
' → logprob: -17.125337600708008
    7. '  ' → logprob: -18.000337600708008
    8. ' ' → logprob: -18.250337600708008
    9. '   ' → logprob: -18.625337600708008
    10. 'div' → logprob: -18.625337600708008

Token 252: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6132252216339111
    2. ':' → logprob: -0.9882252216339111
    3. ' and' → logprob: -3.488225221633911
    4. ' :' → logprob: -3.613225221633911
    5. ' ' → logprob: -4.613224983215332
    6. 'and' → logprob: -4.738224983215332
    7. ',' → logprob: -5.613224983215332
    8. ' if' → logprob: -5.988224983215332
    9. 'if' → logprob: -6.738224983215332
    10. '  ' → logprob: -7.238224983215332

Token 253: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.565355122089386
    2. ' ' → logprob: -1.3153550624847412
    3. '    ' → logprob: -2.315355062484741
    4. ' if' → logprob: -3.940355062484741
    5. ' a' → logprob: -4.19035530090332
    6. ' not' → logprob: -4.56535530090332
    7. 'a' → logprob: -5.94035530090332
    8. ' and' → logprob: -5.94035530090332
    9. ' i' → logprob: -6.44035530090332
    10. 'if' → logprob: -6.69035530090332

Token 254: ''est' (ID: 6616)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.7733187079429626
    2. 'ont' → logprob: -1.8983187675476074
    3. 'es' → logprob: -2.0233187675476074
    4. 'e' → logprob: -3.2733187675476074
    5. ''est' → logprob: -3.3983187675476074
    6. ''' → logprob: -3.5233187675476074
    7. 'a' → logprob: -3.7733187675476074
    8. '   ' → logprob: -3.8983187675476074
    9. '=' → logprob: -4.148318767547607
    10. '%' → logprob: -4.273318767547607

Token 255: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.16035786271095276
    2. 'a' → logprob: -2.66035795211792
    3. 'à' → logprob: -3.53535795211792
    4. ' à' → logprob: -4.41035795211792
    5. ' ' → logprob: -4.41035795211792
    6. ' a' → logprob: -4.91035795211792
    7. '   ' → logprob: -5.41035795211792
    8. ' que' → logprob: -6.28535795211792
    9. '0' → logprob: -6.41035795211792
    10. '=' → logprob: -6.66035795211792

Token 256: '-dire' (ID: 76064)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5903995037078857
    2. '0' → logprob: -1.3403995037078857
    3. '-a' → logprob: -3.3403995037078857
    4. ' ' → logprob: -3.4653995037078857
    5. '2' → logprob: -3.4653995037078857
    6. '-à' → logprob: -3.5903995037078857
    7. '   ' → logprob: -4.840399742126465
    8. '(a' → logprob: -5.090399742126465
    9. '1' → logprob: -5.340399742126465
    10. ' a' → logprob: -5.590399742126465

Token 257: ' que' (ID: 661)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3155618906021118
    2. 'a' → logprob: -1.3155618906021118
    3. ' if' → logprob: -6.815561771392822
    4. ' ' → logprob: -7.690561771392822
    5. '   ' → logprob: -8.19056224822998
    6. ' que' → logprob: -8.31556224822998
    7. 'if' → logprob: -10.06556224822998
    8. '(a' → logprob: -10.19056224822998
    9. '    ' → logprob: -10.31556224822998
    10. ' ' → logprob: -11.31556224822998

Token 258: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1602262556552887
    2. ' a' → logprob: -1.9102262258529663
    3. ' ' → logprob: -14.285225868225098
    4. ' ' → logprob: -14.285225868225098
    5. '	a' → logprob: -15.035225868225098
    6. '(a' → logprob: -15.285225868225098
    7. '   ' → logprob: -15.535225868225098
    8. '_a' → logprob: -16.660226821899414
    9. ' (' → logprob: -17.160226821899414
    10. '```' → logprob: -18.410226821899414

Token 259: ' reste' (ID: 26769)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1603340059518814
    2. ' a' → logprob: -1.9103339910507202
    3. '%' → logprob: -9.535333633422852
    4. 'r' → logprob: -11.910333633422852
    5. ' ' → logprob: -12.285333633422852
    6. 'n' → logprob: -12.285333633422852
    7. ' %' → logprob: -12.660333633422852
    8. 'reste' → logprob: -12.785333633422852
    9. 'rest' → logprob: -12.910333633422852
    10. 're' → logprob: -12.910333633422852

Token 260: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16218280792236328
    2. ' ==' → logprob: -2.4121828079223633
    3. ' de' → logprob: -3.1621828079223633
    4. ')' → logprob: -5.662182807922363
    5. '%' → logprob: -5.912182807922363
    6. '==' → logprob: -6.162182807922363
    7. ' =' → logprob: -6.912182807922363
    8. ' )' → logprob: -7.162182807922363
    9. '  ' → logprob: -7.287182807922363
    10. ' a' → logprob: -7.412182807922363

Token 261: ' la' (ID: 557)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2022368609905243
    2. 'a' → logprob: -1.7022368907928467
    3. ' ' → logprob: -7.452236652374268
    4. ' la' → logprob: -8.952237129211426
    5. ' l' → logprob: -10.202237129211426
    6. '   ' → logprob: -10.702237129211426
    7. 'l' → logprob: -10.827237129211426
    8. 'la' → logprob: -11.702237129211426
    9. 'div' → logprob: -11.827237129211426
    10. '  ' → logprob: -12.952237129211426

Token 262: ' division' (ID: 21629)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.28093525767326355
    2. ' a' → logprob: -1.655935287475586
    3. 'division' → logprob: -3.655935287475586
    4. ' division' → logprob: -3.905935287475586
    5. '%' → logprob: -5.655935287475586
    6. 'div' → logprob: -5.780935287475586
    7. ' ' → logprob: -6.780935287475586
    8. ' %' → logprob: -8.780935287475586
    9. ' modulo' → logprob: -10.155935287475586
    10. '   ' → logprob: -10.405935287475586

Token 263: ' (' (ID: 350)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0843665599822998
    2. 'a' → logprob: -1.4593665599822998
    3. ' ' → logprob: -1.5843665599822998
    4. ' de' → logprob: -2.2093665599823
    5. '%' → logprob: -2.7093665599823
    6. ' ==' → logprob: -4.209366798400879
    7. ')' → logprob: -4.959366798400879
    8. '   ' → logprob: -5.584366798400879
    9. ' %' → logprob: -5.584366798400879
    10. ' modulo' → logprob: -5.584366798400879

Token 264: 'mod' (ID: 4847)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16119667887687683
    2. ' a' → logprob: -1.9111967086791992
    3. '%' → logprob: -7.036196708679199
    4. ')' → logprob: -10.2861967086792
    5. ' %' → logprob: -10.4111967086792
    6. ' ' → logprob: -11.6611967086792
    7. '   ' → logprob: -11.9111967086792
    8. ' )' → logprob: -12.0361967086792
    9. ' ' → logprob: -13.2861967086792
    10. '%)' → logprob: -13.9111967086792

Token 265: 'ulo' (ID: 5953)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -1.0162466764450073
    2. 'ulo' → logprob: -1.0162466764450073
    3. '%' → logprob: -1.8912466764450073
    4. ')' → logprob: -3.016246795654297
    5. ' ' → logprob: -4.141246795654297
    6. 'ulos' → logprob: -4.516246795654297
    7. ' %)' → logprob: -4.516246795654297
    8. 'ulus' → logprob: -4.766246795654297
    9. '   ' → logprob: -4.891246795654297
    10. ' a' → logprob: -5.266246795654297

Token 266: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0788830518722534
    2. ' )' → logprob: -1.0788830518722534
    3. 'a' → logprob: -1.9538830518722534
    4. ' %)' → logprob: -2.078883171081543
    5. ' a' → logprob: -3.703883171081543
    6. ' %' → logprob: -4.203883171081543
    7. '%)' → logprob: -5.078883171081543
    8. ' ' → logprob: -5.953883171081543
    9. '%' → logprob: -6.078883171081543
    10. ')%' → logprob: -7.203883171081543

Token 267: ' par' (ID: 686)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8279144763946533
    2. 'a' → logprob: -0.9529144763946533
    3. ' est' → logprob: -1.9529144763946533
    4. ' ==' → logprob: -4.202914237976074
    5. ' ' → logprob: -4.327914237976074
    6. ' de' → logprob: -5.702914237976074
    7. '   ' → logprob: -6.702914237976074
    8. '==' → logprob: -7.077914237976074
    9. ' n' → logprob: -7.702914237976074
    10. ' is' → logprob: -7.827914237976074

Token 268: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.043005481362342834
    2. ' ' → logprob: -3.1680054664611816
    3. '   ' → logprob: -13.04300594329834
    4. '```' → logprob: -13.79300594329834
    5. '  ' → logprob: -14.54300594329834
    6. '
' → logprob: -14.66800594329834
    7. ' ' → logprob: -14.79300594329834
    8. '    ' → logprob: -15.79300594329834
    9. ' 
' → logprob: -15.91800594329834
    10. '<|end|>' → logprob: -15.91800594329834

Token 269: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014168102643452585
    2. ' ' → logprob: -8.875142097473145
    3. '```' → logprob: -13.625142097473145
    4. '   ' → logprob: -15.750142097473145
    5. '
' → logprob: -16.250141143798828
    6. '`' → logprob: -16.562641143798828
    7. '<|end|>' → logprob: -16.687641143798828
    8. '  ' → logprob: -16.687641143798828
    9. '

' → logprob: -17.875141143798828
    10. ')' → logprob: -17.937641143798828

Token 270: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.18465487658977509
    2. ' ==' → logprob: -2.184654951095581
    3. '==' → logprob: -3.434654951095581
    4. 'est' → logprob: -4.934654712677002
    5. 'a' → logprob: -5.059654712677002
    6. ' a' → logprob: -6.059654712677002
    7. ' ' → logprob: -6.059654712677002
    8. ')' → logprob: -6.059654712677002
    9. '   ' → logprob: -6.934654712677002
    10. ' is' → logprob: -7.059654712677002

Token 271: ' nul' (ID: 64435)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36790114641189575
    2. ' ' → logprob: -1.242901086807251
    3. ' égal' → logprob: -4.11790132522583
    4. ' ég' → logprob: -6.99290132522583
    5. ' zero' → logprob: -7.24290132522583
    6. ' ==' → logprob: -7.74290132522583
    7. ' equal' → logprob: -8.367900848388672
    8. ' zéro' → logprob: -8.617900848388672
    9. '==' → logprob: -9.117900848388672
    10. '=' → logprob: -9.367900848388672

Token 272: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.084785595536232
    2. ':' → logprob: -2.9597856998443604
    3. ' (' → logprob: -4.709785461425781
    4. ' :' → logprob: -4.709785461425781
    5. '.' → logprob: -5.209785461425781
    6. '    ' → logprob: -6.709785461425781
    7. ' ' → logprob: -7.084785461425781
    8. 'a' → logprob: -7.209785461425781
    9. '(' → logprob: -7.584785461425781
    10. ',' → logprob: -7.584785461425781

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00027432903880253434
    2. '       ' → logprob: -8.375274658203125
    3. '    
' → logprob: -11.125274658203125
    4. ' if' → logprob: -11.250274658203125
    5. '   ' → logprob: -11.500274658203125
    6. 'if' → logprob: -13.375274658203125
    7. '    ' → logprob: -13.375274658203125
    8. ' ' → logprob: -14.500274658203125
    9. '
' → logprob: -14.625274658203125
    10. '```' → logprob: -15.250274658203125

Token 274: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010454489849507809
    2. 'if' (adapté à ' if') → logprob: -5.2604546546936035
    3. ' if' → logprob: -5.2604546546936035
    4. '   ' → logprob: -11.635454177856445
    5. '       ' → logprob: -13.010454177856445
    6. '	if' → logprob: -13.760454177856445
    7. '    
' → logprob: -14.385454177856445
    8. '    ' → logprob: -14.635454177856445
    9. ' ' → logprob: -14.760454177856445
    10. '  ' → logprob: -15.010454177856445

Token 275: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0046235607005655766
    2. 'a' → logprob: -5.3796234130859375
    3. ' ' → logprob: -13.129623413085938
    4. ' ' → logprob: -14.004623413085938
    5. '	a' → logprob: -15.004623413085938
    6. ' (' → logprob: -16.379623413085938
    7. '(a' → logprob: -17.004623413085938
    8. '   ' → logprob: -18.879623413085938
    9. ' ' → logprob: -19.629623413085938
    10. '_a' → logprob: -19.754623413085938

Token 276: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0010544841643422842
    2. '%' → logprob: -7.001054286956787
    3. ' ' → logprob: -8.876054763793945
    4. ' ' → logprob: -12.626054763793945
    5. '  ' → logprob: -19.126054763793945
    6. ' %
' → logprob: -19.251054763793945
    7. '2' → logprob: -19.376054763793945
    8. '   ' → logprob: -19.501054763793945
    9. '```' → logprob: -20.501054763793945
    10. '[' → logprob: -20.626054763793945

Token 277: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38687121868133545
    2. '2' → logprob: -1.1368712186813354
    3. ' ' → logprob: -16.261871337890625
    4. '```' → logprob: -16.636871337890625
    5. '  ' → logprob: -18.886871337890625
    6. '0' → logprob: -19.011871337890625
    7. '=' → logprob: -19.574371337890625
    8. '   ' → logprob: -19.574371337890625
    9. ' 
' → logprob: -20.136871337890625
    10. '
' → logprob: -20.511871337890625

Token 278: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -17.500009536743164
    4. '   ' → logprob: -19.500009536743164
    5. '  ' → logprob: -20.750009536743164
    6. '0' → logprob: -20.875009536743164
    7. '۲' → logprob: -21.500009536743164
    8. '1' → logprob: -22.000009536743164
    9. '
' → logprob: -22.312509536743164
    10. '{' → logprob: -22.375009536743164

Token 279: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25207382440567017
    2. '==' → logprob: -1.5020737648010254
    3. '=' → logprob: -9.127074241638184
    4. ' ' → logprob: -11.627074241638184
    5. '0' → logprob: -11.877074241638184
    6. ' =' → logprob: -12.127074241638184
    7. ' ' → logprob: -12.502074241638184
    8. ')==' → logprob: -12.752074241638184
    9. '```' → logprob: -13.127074241638184
    10. ')' → logprob: -13.252074241638184

Token 280: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1269284337759018
    2. ' ' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.001928329467773
    4. '1' → logprob: -17.876928329467773
    5. '```' → logprob: -18.626928329467773
    6. '  ' → logprob: -18.814428329467773
    7. '   ' → logprob: -18.939428329467773
    8. '۰' → logprob: -19.126928329467773
    9. '2' → logprob: -19.564428329467773
    10. '	' → logprob: -19.626928329467773

Token 281: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '2' → logprob: -20.750009536743164
    4. '1' → logprob: -21.500009536743164
    5. '```' → logprob: -21.625009536743164
    6. '۰' → logprob: -22.000009536743164
    7. '   ' → logprob: -22.375009536743164
    8. '00' → logprob: -22.500009536743164
    9. ' ' → logprob: -23.125009536743164
    10. '  ' → logprob: -23.312509536743164

Token 282: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010411443654447794
    2. ':
' → logprob: -6.876040935516357
    3. '   ' → logprob: -12.251041412353516
    4. ' :' → logprob: -13.126041412353516
    5. '):' → logprob: -14.501041412353516
    6. ' and' → logprob: -14.751041412353516
    7. '       ' → logprob: -15.001041412353516
    8. ':
' → logprob: -16.126041412353516
    9. 'and' → logprob: -16.251041412353516
    10. ' :
' → logprob: -17.626041412353516

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00039385363925248384
    2. '   ' → logprob: -8.125393867492676
    3. '
' → logprob: -10.250393867492676
    4. '    ' → logprob: -11.750393867492676
    5. '      ' → logprob: -11.750393867492676
    6. '        
' → logprob: -11.875393867492676
    7. '     ' → logprob: -11.875393867492676
    8. '	' → logprob: -12.000393867492676
    9. ' ' → logprob: -12.125393867492676
    10. '	   ' → logprob: -12.500393867492676

Token 284: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5765618681907654
    2. 'cnt' → logprob: -0.9515618681907654
    3. ' cnt' → logprob: -3.57656192779541
    4. '   ' → logprob: -4.45156192779541
    5. '
' → logprob: -4.57656192779541
    6. '	cnt' → logprob: -7.45156192779541
    7. '        
' → logprob: -8.07656192779541
    8. '[cnt' → logprob: -8.57656192779541
    9. '    
' → logprob: -8.70156192779541
    10. ' 
' → logprob: -8.95156192779541

Token 285: ' Si' (ID: 7832)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.20355211198329926
    2. ' cnt' → logprob: -1.7035521268844604
    3. '   ' → logprob: -6.20355224609375
    4. '	cnt' → logprob: -10.07855224609375
    5. ' ' → logprob: -10.82855224609375
    6. 'c' → logprob: -11.57855224609375
    7. '    ' → logprob: -11.70355224609375
    8. '       ' → logprob: -11.95355224609375
    9. '  ' → logprob: -12.45355224609375
    10. '    
' → logprob: -12.70355224609375

Token 286: ' le' (ID: 505)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.403726726770401
    2. 'cnt' → logprob: -1.9037266969680786
    3. '   ' → logprob: -2.153726816177368
    4. '       ' → logprob: -2.778726816177368
    5. '    ' → logprob: -6.528726577758789
    6. '           ' → logprob: -7.028726577758789
    7. '	cnt' → logprob: -7.153726577758789
    8. ' ' → logprob: -7.778726577758789
    9. ' ' → logprob: -8.153726577758789
    10. '(cnt' → logprob: -8.778726577758789

Token 287: ' nombre' (ID: 9733)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.028323763981461525
    2. ' cnt' → logprob: -3.6533236503601074
    3. 'a' → logprob: -6.528323650360107
    4. ' compteur' → logprob: -8.153324127197266
    5. ' ' → logprob: -9.778324127197266
    6. ' a' → logprob: -10.278324127197266
    7. 'counter' → logprob: -10.528324127197266
    8. 'c' → logprob: -10.653324127197266
    9. '	cnt' → logprob: -10.778324127197266
    10. '_cnt' → logprob: -10.778324127197266

Token 288: ' est' (ID: 893)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5213517546653748
    2. '   ' → logprob: -1.3963518142700195
    3. ' cnt' → logprob: -2.7713518142700195
    4. ' est' → logprob: -3.7713518142700195
    5. 'cnt' → logprob: -4.0213518142700195
    6. ' compteur' → logprob: -4.0213518142700195
    7. '           ' → logprob: -4.5213518142700195
    8. ' ' → logprob: -5.0213518142700195
    9. ' n' → logprob: -5.6463518142700195
    10. ' ' → logprob: -5.6463518142700195

Token 289: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.5834518074989319
    2. 'pair' → logprob: -0.8334518074989319
    3. ' paire' → logprob: -5.958451747894287
    4. ' ' → logprob: -6.083451747894287
    5. '_pair' → logprob: -6.958451747894287
    6. '1' → logprob: -7.833451747894287
    7. 'Pair' → logprob: -8.333452224731445
    8. 'even' → logprob: -8.708452224731445
    9. ' divisible' → logprob: -8.833452224731445
    10. ' not' → logprob: -9.333452224731445

Token 290: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.128136545419693
    2. ':' → logprob: -2.50313663482666
    3. '   ' → logprob: -4.00313663482666
    4. '           ' → logprob: -4.00313663482666
    5. ':
' → logprob: -6.87813663482666
    6. ',' → logprob: -7.62813663482666
    7. ' :' → logprob: -9.12813663482666
    8. 'cnt' → logprob: -9.37813663482666
    9. ' cnt' → logprob: -10.00313663482666
    10. '      ' → logprob: -10.62813663482666

Token 291: ' on' (ID: 402)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.3170826733112335
    2. 'cnt' → logprob: -1.8170826435089111
    3. '       ' → logprob: -2.317082643508911
    4. '   ' → logprob: -4.81708288192749
    5. '           ' → logprob: -6.44208288192749
    6. '    ' → logprob: -8.317082405090332
    7. '	cnt' → logprob: -8.317082405090332
    8. '        ' → logprob: -8.692082405090332
    9. '    ' → logprob: -9.692082405090332
    10. ' ' → logprob: -9.942082405090332

Token 292: ' vér' (ID: 42524)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.7540796399116516
    2. 'cnt' → logprob: -1.2540795803070068
    3. '   ' → logprob: -2.004079580307007
    4. '       ' → logprob: -2.254079580307007
    5. '    ' → logprob: -6.379079818725586
    6. '	cnt' → logprob: -6.879079818725586
    7. '           ' → logprob: -7.754079818725586
    8. ' ' → logprob: -8.754079818725586
    9. ' compteur' → logprob: -9.129079818725586
    10. '        ' → logprob: -9.129079818725586

Token 293: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0003900391166098416
    2. 'ifi' → logprob: -9.25039005279541
    3. 'if' → logprob: -9.75039005279541
    4. 'ife' → logprob: -10.62539005279541
    5. 'onte' → logprob: -10.87539005279541
    6. 'ent' → logprob: -11.12539005279541
    7. 'ifié' → logprob: -11.25039005279541
    8. 'alue' → logprob: -11.37539005279541
    9. 'e' → logprob: -11.37539005279541
    10. 'ifiant' → logprob: -11.50039005279541

Token 294: ' s' (ID: 265)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14680659770965576
    2. ' a' → logprob: -2.5218067169189453
    3. '   ' → logprob: -3.6468067169189453
    4. 'a' → logprob: -4.146806716918945
    5. ' ' → logprob: -5.521806716918945
    6. 'if' → logprob: -5.646806716918945
    7. '       ' → logprob: -6.271806716918945
    8. '    ' → logprob: -6.896806716918945
    9. ' que' → logprob: -7.396806716918945
    10. '  ' → logprob: -7.521806716918945

Token 295: ''il' (ID: 14683)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04351884126663208
    2. '   ' → logprob: -3.4185187816619873
    3. 'i' → logprob: -5.043519020080566
    4. '       ' → logprob: -7.293519020080566
    5. 'e' → logprob: -7.543519020080566
    6. ''il' → logprob: -7.543519020080566
    7. '    ' → logprob: -7.918519020080566
    8. 'u' → logprob: -8.168519020080566
    9. 'on' → logprob: -8.293519020080566
    10. ' ' → logprob: -8.668519020080566

Token 296: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.8289772272109985
    2. 'a' → logprob: -1.4539772272109985
    3. ' a' → logprob: -1.9539772272109985
    4. '   ' → logprob: -2.453977108001709
    5. 'est' → logprob: -4.578977108001709
    6. ' ' → logprob: -4.578977108001709
    7. ' >=' → logprob: -4.703977108001709
    8. ' is' → logprob: -4.953977108001709
    9. '>' → logprob: -5.078977108001709
    10. 'n' → logprob: -5.078977108001709

Token 297: ' aussi' (ID: 9894)
  Prédit: ' supérieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -1.3766114711761475
    2. '>' → logprob: -1.7516114711761475
    3. ' >' → logprob: -2.0016114711761475
    4. ' >=' → logprob: -2.0016114711761475
    5. 'strict' → logprob: -2.5016114711761475
    6. ' strict' → logprob: -3.3766114711761475
    7. '>=' → logprob: -3.5016114711761475
    8. ' divisible' → logprob: -3.8766114711761475
    9. ' positif' → logprob: -4.126611709594727
    10. 'sup' → logprob: -4.251611709594727

Token 298: ' divisible' (ID: 167813)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strict' → logprob: -1.3247740268707275
    2. 'sup' → logprob: -1.4497740268707275
    3. ' supérieur' → logprob: -1.8247740268707275
    4. ' positif' → logprob: -2.1997740268707275
    5. ' divisible' → logprob: -3.0747740268707275
    6. ' strict' → logprob: -3.5747740268707275
    7. ' sup' → logprob: -4.074773788452148
    8. 'posit' → logprob: -4.449773788452148
    9. 'super' → logprob: -4.449773788452148
    10. '>' → logprob: -4.574773788452148

Token 299: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.6722570061683655
    2. 'par' → logprob: -0.7972570061683655
    3. '   ' → logprob: -4.297256946563721
    4. ' ' → logprob: -4.547256946563721
    5. 'by' → logprob: -5.797256946563721
    6. '<|end|>' → logprob: -6.297256946563721
    7. '2' → logprob: -6.797256946563721
    8. '  ' → logprob: -7.047256946563721
    9. '       ' → logprob: -7.172256946563721
    10. '4' → logprob: -7.297256946563721

Token 300: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40603548288345337
    2. '3' → logprob: -1.1560354232788086
    3. ' N' → logprob: -4.406035423278809
    4. '4' → logprob: -5.281035423278809
    5. 'N' → logprob: -6.906035423278809
    6. '5' → logprob: -8.406035423278809
    7. '7' → logprob: -9.406035423278809
    8. ' ' → logprob: -9.656035423278809
    9. '6' → logprob: -9.781035423278809
    10. '   ' → logprob: -9.906035423278809

Token 301: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0244908407330513
    2. '4' → logprob: -4.024490833282471
    3. 'N' → logprob: -5.149490833282471
    4. ' ' → logprob: -8.024491310119629
    5. '5' → logprob: -9.024491310119629
    6. ' N' → logprob: -10.149491310119629
    7. '6' → logprob: -11.274491310119629
    8. '7' → logprob: -12.399491310119629
    9. '   ' → logprob: -12.399491310119629
    10. '10' → logprob: -12.649491310119629

Token 302: '.
' (ID: 558)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1502007693052292
    2. '       ' → logprob: -2.275200843811035
    3. ' or' → logprob: -3.650200843811035
    4. ':' → logprob: -5.150200843811035
    5. 'and' → logprob: -6.025200843811035
    6. '   ' → logprob: -6.775200843811035
    7. ' :' → logprob: -7.275200843811035
    8. '           ' → logprob: -8.525200843811035
    9. '      ' → logprob: -9.275200843811035
    10. ',' → logprob: -9.775200843811035

Token 303: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010220900876447558
    2. '           ' → logprob: -7.251021862030029
    3. ' if' → logprob: -8.751022338867188
    4. ' and' → logprob: -10.251022338867188
    5. '        ' → logprob: -10.376022338867188
    6. '   ' → logprob: -10.751022338867188
    7. ' or' → logprob: -11.001022338867188
    8. '      ' → logprob: -11.501022338867188
    9. '	' → logprob: -12.001022338867188
    10. '        
' → logprob: -12.251022338867188

Token 304: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3987152874469757
    2. ' if' → logprob: -1.1487152576446533
    3. 'if' → logprob: -4.648715496063232
    4. '           ' → logprob: -6.398715496063232
    5. ' and' → logprob: -8.523715019226074
    6. '        ' → logprob: -9.273715019226074
    7. ' continue' → logprob: -9.523715019226074
    8. '   ' → logprob: -9.648715019226074
    9. ' or' → logprob: -10.398715019226074
    10. 'continue' → logprob: -10.898715019226074

Token 305: ' a' (ID: 261)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.40845075249671936
    2. 'if' → logprob: -1.408450722694397
    3. '       ' → logprob: -2.4084508419036865
    4. '           ' → logprob: -8.158451080322266
    5. '   ' → logprob: -8.283451080322266
    6. ' continue' → logprob: -9.533451080322266
    7. ' cnt' → logprob: -9.908451080322266
    8. ' ' → logprob: -10.158451080322266
    9. 'cnt' → logprob: -10.158451080322266
    10. '        ' → logprob: -10.283451080322266

Token 306: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04994229972362518
    2. '%' → logprob: -3.0499422550201416
    3. ' %=' → logprob: -7.299942493438721
    4. ' ' → logprob: -7.424942493438721
    5. '<|end|>' → logprob: -10.424942016601562
    6. ' ' → logprob: -10.799942016601562
    7. '   ' → logprob: -12.174942016601562
    8. 'if' → logprob: -12.299942016601562
    9. ' if' → logprob: -12.424942016601562
    10. '  ' → logprob: -12.549942016601562

Token 307: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.08901940286159515
    2. ' ' → logprob: -2.464019298553467
    3. '2' → logprob: -9.714019775390625
    4. '6' → logprob: -11.214019775390625
    5. ' ' → logprob: -13.214019775390625
    6. '```' → logprob: -13.339019775390625
    7. '0' → logprob: -13.839019775390625
    8. '==' → logprob: -14.964019775390625
    9. '  ' → logprob: -15.464019775390625
    10. '1' → logprob: -15.839019775390625

Token 308: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.44574936106801e-05
    2. ' ' → logprob: -9.62507438659668
    3. '2' → logprob: -12.37507438659668
    4. '6' → logprob: -12.62507438659668
    5. '```' → logprob: -15.25007438659668
    6. '0' → logprob: -15.37507438659668
    7. '==' → logprob: -16.68757438659668
    8. '   ' → logprob: -17.25007438659668
    9. '
' → logprob: -17.31257438659668
    10. '1' → logprob: -17.50007438659668

Token 309: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38713526725769043
    2. '==' → logprob: -1.1371352672576904
    3. ' !=' → logprob: -8.63713550567627
    4. '!=' → logprob: -9.76213550567627
    5. '=' → logprob: -11.38713550567627
    6. ' ' → logprob: -12.13713550567627
    7. ')==' → logprob: -12.51213550567627
    8. ')' → logprob: -12.76213550567627
    9. ' ' → logprob: -13.38713550567627
    10. '()==' → logprob: -13.88713550567627

Token 310: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3132699728012085
    2. ' ' → logprob: -1.3132699728012085
    3. ' ' → logprob: -12.43826961517334
    4. '=' → logprob: -13.43826961517334
    5. '```' → logprob: -14.06326961517334
    6. '==' → logprob: -14.56326961517334
    7. '1' → logprob: -14.62576961517334
    8. '<|end|>' → logprob: -15.62576961517334
    9. '2' → logprob: -15.68826961517334
    10. '   ' → logprob: -16.688270568847656

Token 311: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001933277933858335
    2. ' ' → logprob: -6.2519330978393555
    3. '=' → logprob: -13.626933097839355
    4. '==' → logprob: -13.814433097839355
    5. '1' → logprob: -14.439433097839355
    6. ' ' → logprob: -14.814433097839355
    7. '2' → logprob: -15.376933097839355
    8. '<|end|>' → logprob: -15.626933097839355
    9. '```' → logprob: -15.689433097839355
    10. ' ' → logprob: -16.189434051513672

Token 312: ' signifie' (ID: 81149)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.40070369839668274
    2. ':' → logprob: -1.2757036685943604
    3. '       ' → logprob: -3.1507036685943604
    4. ' or' → logprob: -5.9007039070129395
    5. 'and' → logprob: -6.0257039070129395
    6. '           ' → logprob: -6.7757039070129395
    7. ' :' → logprob: -7.0257039070129395
    8. ':
' → logprob: -7.7757039070129395
    9. '   ' → logprob: -8.400703430175781
    10. '<|end|>' → logprob: -9.775703430175781

Token 313: ' que' (ID: 661)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.56517493724823
    2. ' a' → logprob: -1.56517493724823
    3. 'True' → logprob: -2.3151750564575195
    4. ' que' → logprob: -3.0651750564575195
    5. 'a' → logprob: -3.4401750564575195
    6. ' that' → logprob: -4.1901750564575195
    7. '       ' → logprob: -4.9401750564575195
    8. ' ' → logprob: -5.3151750564575195
    9. ' if' → logprob: -5.8151750564575195
    10. '           ' → logprob: -6.4401750564575195

Token 314: ' le' (ID: 505)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.42989805340766907
    2. 'a' → logprob: -1.0548980236053467
    3. ' True' → logprob: -7.679898262023926
    4. 'True' → logprob: -8.429898262023926
    5. ' (' → logprob: -8.929898262023926
    6. ' ' → logprob: -9.429898262023926
    7. '(a' → logprob: -9.554898262023926
    8. ' the' → logprob: -10.304898262023926
    9. ' ' → logprob: -10.554898262023926
    10. '```' → logprob: -10.804898262023926

Token 315: ' nombre' (ID: 9733)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1077939048409462
    2. ' a' → logprob: -2.7327938079833984
    3. 'reste' → logprob: -3.4827938079833984
    4. 'nombre' → logprob: -6.357793807983398
    5. ' reste' → logprob: -6.482793807983398
    6. 're' → logprob: -6.482793807983398
    7. 'rest' → logprob: -6.857793807983398
    8. 'r' → logprob: -8.482793807983398
    9. ' nombre' → logprob: -8.982793807983398
    10. 'n' → logprob: -9.607793807983398

Token 316: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 317: ' un' (ID: 537)
  Prédit: ' divisible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.1814669519662857
    2. '0' → logprob: -2.931467056274414
    3. 'div' → logprob: -3.056467056274414
    4. ' aussi' → logprob: -3.681467056274414
    5. 'a' → logprob: -4.681467056274414
    6. ' also' → logprob: -5.181467056274414
    7. 'pair' → logprob: -5.306467056274414
    8. ' a' → logprob: -5.556467056274414
    9. 'also' → logprob: -5.681467056274414
    10. ' pair' → logprob: -5.806467056274414

Token 318: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.48390039801597595
    2. ' multiple' → logprob: -0.9839004278182983
    3. 'nombre' → logprob: -5.858900547027588
    4. 'a' → logprob: -6.108900547027588
    5. 'div' → logprob: -6.483900547027588
    6. 'multip' → logprob: -7.108900547027588
    7. ' a' → logprob: -7.608900547027588
    8. ' nombre' → logprob: -8.23390007019043
    9. '3' → logprob: -8.23390007019043
    10. '```' → logprob: -8.85890007019043

Token 319: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.027986612170934677
    2. 'de' → logprob: -4.652986526489258
    3. ' des' → logprob: -4.902986526489258
    4. ' ' → logprob: -5.277986526489258
    5. ' of' → logprob: -6.902986526489258
    6. '<|end|>' → logprob: -7.152986526489258
    7. '   ' → logprob: -7.277986526489258
    8. '    ' → logprob: -7.402986526489258
    9. ')' → logprob: -7.527986526489258
    10. '  ' → logprob: -7.652986526489258

Token 320: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.22723102569580078
    2. ' ' → logprob: -1.6022310256958008
    3. '6' → logprob: -6.977231025695801
    4. '2' → logprob: -7.227231025695801
    5. ' ' → logprob: -9.2272310256958
    6. '```' → logprob: -10.3522310256958
    7. ' trois' → logprob: -11.9772310256958
    8. '   ' → logprob: -12.6022310256958
    9. '1' → logprob: -12.7272310256958
    10. '"' → logprob: -13.4147310256958

Token 321: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2042393833398819
    2. '6' → logprob: -2.3292393684387207
    3. '2' → logprob: -2.4542393684387207
    4. ' ' → logprob: -6.579239368438721
    5. '```' → logprob: -10.704239845275879
    6. '  ' → logprob: -13.016739845275879
    7. '   ' → logprob: -13.016739845275879
    8. '

' → logprob: -13.204239845275879
    9. ' trois' → logprob: -13.329239845275879
    10. '' → logprob: -13.329239845275879

Token 322: '.
' (ID: 558)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5105985999107361
    2. ':' → logprob: -1.3855986595153809
    3. '       ' → logprob: -2.135598659515381
    4. ' or' → logprob: -4.010598659515381
    5. '           ' → logprob: -4.885598659515381
    6. 'and' → logprob: -5.635598659515381
    7. ' :' → logprob: -7.260598659515381
    8. '   ' → logprob: -7.385598659515381
    9. ' et' → logprob: -8.135598182678223
    10. ':
' → logprob: -8.635598182678223

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006992113194428384
    2. '           ' → logprob: -7.375699043273926
    3. '	' → logprob: -10.875699043273926
    4. '    ' → logprob: -11.000699043273926
    5. ' ' → logprob: -11.625699043273926
    6. '        
' → logprob: -11.875699043273926
    7. ' if' → logprob: -12.500699043273926
    8. '   ' → logprob: -12.875699043273926
    9. '      ' → logprob: -13.000699043273926
    10. '        ' → logprob: -13.125699043273926

Token 324: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1351783573627472
    2. '           ' → logprob: -2.385178327560425
    3. 'if' (adapté à ' if') → logprob: -4.260178565979004
    4. 'cnt' → logprob: -4.510178565979004
    5. ' if' → logprob: -5.010178565979004
    6. ' cnt' → logprob: -6.260178565979004
    7. '        ' → logprob: -8.260178565979004
    8. '   ' → logprob: -8.760178565979004
    9. '      ' → logprob: -9.760178565979004
    10. '          ' → logprob: -10.260178565979004

Token 325: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.016038356348872185
    2. 'a' → logprob: -4.141038417816162
    3. ' ' → logprob: -13.266037940979004
    4. ' ' → logprob: -13.766037940979004
    5. '	a' → logprob: -14.391037940979004
    6. '   ' → logprob: -15.391037940979004
    7. '(a' → logprob: -15.641037940979004
    8. ' (' → logprob: -15.891037940979004
    9. '    ' → logprob: -16.39103889465332
    10. '_a' → logprob: -16.89103889465332

Token 326: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0019394654082134366
    2. '%' → logprob: -6.251939296722412
    3. ' ' → logprob: -11.50193977355957
    4. ' ' → logprob: -14.25193977355957
    5. '<|end|>' → logprob: -17.62693977355957
    6. ' %
' → logprob: -17.75193977355957
    7. ' #' → logprob: -18.37693977355957
    8. '  ' → logprob: -18.62693977355957
    9. '   ' → logprob: -18.62693977355957
    10. 's' → logprob: -19.50193977355957

Token 327: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5760195255279541
    2. '3' → logprob: -0.8260195255279541
    3. '6' → logprob: -10.076019287109375
    4. '2' → logprob: -10.826019287109375
    5. ' ' → logprob: -11.201019287109375
    6. '```' → logprob: -13.701019287109375
    7. '32' → logprob: -14.951019287109375
    8. '  ' → logprob: -15.263519287109375
    9. 'space' → logprob: -15.388519287109375
    10. '36' → logprob: -15.576019287109375

Token 328: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.68022444692906e-05
    2. '2' → logprob: -11.000046730041504
    3. ' ' → logprob: -11.000046730041504
    4. '6' → logprob: -11.250046730041504
    5. '```' → logprob: -16.18754768371582
    6. '   ' → logprob: -16.62504768371582
    7. '  ' → logprob: -17.00004768371582
    8. '1' → logprob: -18.12504768371582
    9. '３' → logprob: -18.18754768371582
    10. '' → logprob: -18.25004768371582

Token 329: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03367970138788223
    2. '==' → logprob: -3.408679723739624
    3. ' ' → logprob: -10.908679962158203
    4. '0' → logprob: -12.408679962158203
    5. ')==' → logprob: -12.408679962158203
    6. '=' → logprob: -13.283679962158203
    7. ')' → logprob: -13.658679962158203
    8. ' ' → logprob: -14.033679962158203
    9. ' =' → logprob: -14.408679962158203
    10. '()==' → logprob: -14.408679962158203

Token 330: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020947456359863
    2. ' ' → logprob: -2.3502094745635986
    3. ' ' → logprob: -13.72520923614502
    4. '=' → logprob: -14.85020923614502
    5. '```' → logprob: -14.97520923614502
    6. '   ' → logprob: -15.97520923614502
    7. '3' → logprob: -16.412710189819336
    8. '==' → logprob: -16.475210189819336
    9. '6' → logprob: -16.537710189819336
    10. '  ' → logprob: -16.537710189819336

Token 331: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009130131802521646
    2. ' ' → logprob: -7.000913143157959
    3. '=' → logprob: -15.3134126663208
    4. '```' → logprob: -15.5634126663208
    5. '6' → logprob: -15.7509126663208
    6. '3' → logprob: -16.188413619995117
    7. '<|end|>' → logprob: -16.188413619995117
    8. '1' → logprob: -16.250913619995117
    9. '2' → logprob: -16.438413619995117
    10. '۰' → logprob: -16.688413619995117

Token 332: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04417145997285843
    2. ':
' → logprob: -3.1691715717315674
    3. '           ' → logprob: -7.044171333312988
    4. ' and' → logprob: -8.294171333312988
    5. '       ' → logprob: -10.669171333312988
    6. ' or' → logprob: -11.919171333312988
    7. ' :' → logprob: -12.294171333312988
    8. 'and' → logprob: -12.419171333312988
    9. ':
' → logprob: -12.544171333312988
    10. ',' → logprob: -13.169171333312988

Token 333: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00035083942930214107
    2. ':' → logprob: -8.250350952148438
    3. '       ' → logprob: -10.125350952148438
    4. ':
' → logprob: -11.000350952148438
    5. '	       ' → logprob: -11.750350952148438
    6. 'cnt' → logprob: -12.125350952148438
    7. ' cnt' → logprob: -12.750350952148438
    8. '		' → logprob: -12.875350952148438
    9. '               ' → logprob: -13.000350952148438
    10. '          ' → logprob: -13.000350952148438

Token 334: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.163682758808136
    2. '       ' → logprob: -2.413682699203491
    3. 'cnt' → logprob: -2.913682699203491
    4. ' cnt' → logprob: -5.03868293762207
    5. '               ' → logprob: -7.53868293762207
    6. '	cnt' → logprob: -10.03868293762207
    7. '	       ' → logprob: -10.41368293762207
    8. '   ' → logprob: -10.66368293762207
    9. '         ' → logprob: -11.03868293762207
    10. '          ' → logprob: -11.03868293762207

Token 335: ' Si' (ID: 7832)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.14513595402240753
    2. ' cnt' → logprob: -2.0201358795166016
    3. '       ' → logprob: -6.645135879516602
    4. '           ' → logprob: -7.020135879516602
    5. '   ' → logprob: -8.520135879516602
    6. '	cnt' → logprob: -10.020135879516602
    7. ' ' → logprob: -12.895135879516602
    8. 'count' → logprob: -12.895135879516602
    9. 'counter' → logprob: -13.020135879516602
    10. '(cnt' → logprob: -13.270135879516602

Token 336: ' le' (ID: 505)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7405818700790405
    2. ' cnt' → logprob: -0.8655818700790405
    3. 'cnt' → logprob: -2.99058198928833
    4. 'a' → logprob: -2.99058198928833
    5. ' ' → logprob: -7.24058198928833
    6. ' True' → logprob: -7.49058198928833
    7. 'True' → logprob: -8.865581512451172
    8. '    ' → logprob: -9.865581512451172
    9. '   ' → logprob: -9.865581512451172
    10. ' not' → logprob: -9.990581512451172

Token 337: ' nombre' (ID: 9733)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.03450210019946098
    2. ' cnt' → logprob: -3.5345020294189453
    3. 'a' → logprob: -5.409502029418945
    4. ' a' → logprob: -8.909502029418945
    5. 'counter' → logprob: -10.659502029418945
    6. ' compteur' → logprob: -10.659502029418945
    7. 'c' → logprob: -10.784502029418945
    8. '	cnt' → logprob: -11.534502029418945
    9. 'count' → logprob: -11.659502029418945
    10. ' ' → logprob: -11.659502029418945

Token 338: ' est' (ID: 893)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5467411875724792
    2. '%' → logprob: -1.421741247177124
    3. ' %' → logprob: -1.921741247177124
    4. '               ' → logprob: -3.796741247177124
    5. '       ' → logprob: -6.421741008758545
    6. ' compteur' → logprob: -6.546741008758545
    7. ' +=' → logprob: -6.921741008758545
    8. '   ' → logprob: -7.171741008758545
    9. '>' → logprob: -7.421741008758545
    10. ' %=' → logprob: -7.671741008758545

Token 339: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.5027328729629517
    2. ' pair' → logprob: -1.0027328729629517
    3. ' divisible' → logprob: -4.127732753753662
    4. 'div' → logprob: -6.002732753753662
    5. ' paire' → logprob: -6.502732753753662
    6. 'even' → logprob: -6.752732753753662
    7. ' even' → logprob: -7.127732753753662
    8. 'a' → logprob: -7.377732753753662
    9. ' a' → logprob: -7.377732753753662
    10. ' multiple' → logprob: -7.502732753753662

Token 340: ' et' (ID: 859)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02998720295727253
    2. ' and' → logprob: -3.779987096786499
    3. '               ' → logprob: -5.529987335205078
    4. 'and' → logprob: -6.404987335205078
    5. ' et' → logprob: -8.404987335205078
    6. '       ' → logprob: -8.529987335205078
    7. ',' → logprob: -8.529987335205078
    8. ':' → logprob: -8.529987335205078
    9. ' or' → logprob: -9.404987335205078
    10. 'et' → logprob: -10.029987335205078

Token 341: ' divisible' (ID: 167813)
  Prédit: ' divisible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.6611292958259583
    2. ' a' → logprob: -0.7861292958259583
    3. 'a' → logprob: -4.036129474639893
    4. '           ' → logprob: -5.161129474639893
    5. ' (' → logprob: -6.786129474639893
    6. ' ' → logprob: -6.911129474639893
    7. ' ' → logprob: -7.161129474639893
    8. 'div' → logprob: -8.036128997802734
    9. '(a' → logprob: -8.536128997802734
    10. '   ' → logprob: -8.786128997802734

Token 342: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.4221841096878052
    2. '               ' → logprob: -2.0471839904785156
    3. 'par' → logprob: -2.1721839904785156
    4. '           ' → logprob: -2.2971839904785156
    5. '_par' → logprob: -8.422183990478516
    6. '(par' → logprob: -9.047183990478516
    7. ' by' → logprob: -9.547183990478516
    8. '   ' → logprob: -9.672183990478516
    9. 'by' → logprob: -9.797183990478516
    10. ' ' → logprob: -10.047183990478516

Token 343: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.05946892872452736
    2. ' ' → logprob: -3.059468984603882
    3. '6' → logprob: -4.809468746185303
    4. '2' → logprob: -5.934468746185303
    5. ' trois' → logprob: -11.309469223022461
    6. '   ' → logprob: -12.434469223022461
    7. '  ' → logprob: -13.809469223022461
    8. '```' → logprob: -14.059469223022461
    9. ' ' → logprob: -14.184469223022461
    10. '           ' → logprob: -14.434469223022461

Token 344: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.000271706550847739
    2. '6' → logprob: -8.500271797180176
    3. '2' → logprob: -10.000271797180176
    4. ' ' → logprob: -10.750271797180176
    5. '```' → logprob: -15.250271797180176
    6. '.' → logprob: -15.625271797180176
    7. ' trois' → logprob: -15.625271797180176
    8. '' → logprob: -15.875271797180176
    9. '   ' → logprob: -15.875271797180176
    10. '  ' → logprob: -16.87527084350586

Token 345: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1812063455581665
    2. '           ' → logprob: -2.056206226348877
    3. ':
' → logprob: -3.556206226348877
    4. '               ' → logprob: -4.806206226348877
    5. ',' → logprob: -7.056206226348877
    6. ' :' → logprob: -9.681206703186035
    7. ' and' → logprob: -9.806206703186035
    8. '       ' → logprob: -10.931206703186035
    9. 'and' → logprob: -11.306206703186035
    10. '.' → logprob: -12.056206703186035

Token 346: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22972652316093445
    2. '           ' → logprob: -1.8547265529632568
    3. ' cnt' → logprob: -3.104726552963257
    4. 'cnt' → logprob: -6.104726314544678
    5. '            ' → logprob: -7.979726314544678
    6. ' ' → logprob: -8.104726791381836
    7. '             ' → logprob: -8.729726791381836
    8. '              ' → logprob: -8.979726791381836
    9. ' ' → logprob: -9.229726791381836
    10. '                
' → logprob: -9.729726791381836

Token 347: ' incr' (ID: 52395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37354880571365356
    2. ' cnt' → logprob: -1.6235487461090088
    3. 'cnt' → logprob: -2.248548746109009
    4. '   ' → logprob: -6.123548984527588
    5. '               ' → logprob: -6.373548984527588
    6. '       ' → logprob: -6.373548984527588
    7. ' +=' → logprob: -7.373548984527588
    8. '          ' → logprob: -7.498548984527588
    9. '+=' → logprob: -7.748548984527588
    10. '	cnt' → logprob: -8.12354850769043

Token 348: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.05243576318025589
    2. 'ément' → logprob: -3.802435874938965
    3. 'mente' → logprob: -3.927435874938965
    4. 'emente' → logprob: -5.177435874938965
    5. 'ement' → logprob: -6.927435874938965
    6. 'è' → logprob: -7.427435874938965
    7. 'ment' → logprob: -7.802435874938965
    8. 'éments' → logprob: -8.302435874938965
    9. '   ' → logprob: -8.427435874938965
    10. 'ém' → logprob: -8.552435874938965

Token 349: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.01391278300434351
    2. 'ment' → logprob: -4.638912677764893
    3. 'm' → logprob: -6.638912677764893
    4. 'me' → logprob: -7.013912677764893
    5. 'mentation' → logprob: -7.138912677764893
    6. '#' → logprob: -8.88891315460205
    7. 'ments' → logprob: -9.01391315460205
    8. '1' → logprob: -9.38891315460205
    9. 'mented' → logprob: -9.51391315460205
    10. 'mental' → logprob: -9.51391315460205

Token 350: ' le' (ID: 505)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.28228142857551575
    2. 'cnt' → logprob: -1.4072813987731934
    3. '   ' → logprob: -7.282281398773193
    4. '	cnt' → logprob: -8.157281875610352
    5. '(cnt' → logprob: -9.407281875610352
    6. '[cnt' → logprob: -10.657281875610352
    7. '           ' → logprob: -10.782281875610352
    8. ' ' → logprob: -11.907281875610352
    9. ' ' → logprob: -12.282281875610352
    10. '       ' → logprob: -13.282281875610352

Token 351: ' compteur' (ID: 163344)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.35559043288230896
    2. ' compteur' → logprob: -1.6055904626846313
    3. ' cnt' → logprob: -2.480590343475342
    4. 'comp' → logprob: -4.480590343475342
    5. 'counter' → logprob: -6.230590343475342
    6. ' counter' → logprob: -7.480590343475342
    7. 'contador' → logprob: -8.7305908203125
    8. '   ' → logprob: -8.8555908203125
    9. 'count' → logprob: -8.9805908203125
    10. ' contador' → logprob: -9.8555908203125

Token 352: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012038279324769974
    2. 'cnt' → logprob: -5.137038230895996
    3. '               ' → logprob: -5.512038230895996
    4. ' cnt' → logprob: -6.762038230895996
    5. ' +=' → logprob: -8.137038230895996
    6. '(cnt' → logprob: -9.012038230895996
    7. '+=' → logprob: -9.137038230895996
    8. '[cnt' → logprob: -9.137038230895996
    9. '   ' → logprob: -9.762038230895996
    10. '       ' → logprob: -10.387038230895996

Token 353: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006271334132179618
    2. ' ' → logprob: -7.375627040863037
    3. '   ' → logprob: -15.125627517700195
    4. '+' → logprob: -15.375627517700195
    5. ' +' → logprob: -17.500627517700195
    6. 'un' → logprob: -18.000627517700195
    7. ' ' → logprob: -18.125627517700195
    8. 'cnt' → logprob: -18.875627517700195
    9. '```' → logprob: -19.000627517700195
    10. '１' → logprob: -19.250627517700195

Token 354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.659005157416686e-05
    2. ' ' → logprob: -9.625066757202148
    3. '+' → logprob: -15.000066757202148
    4. '   ' → logprob: -16.12506675720215
    5. 'cnt' → logprob: -17.50006675720215
    6. ' +' → logprob: -17.62506675720215
    7. '+=' → logprob: -17.62506675720215
    8. ' +=' → logprob: -18.12506675720215
    9. '```' → logprob: -18.62506675720215
    10. '  ' → logprob: -18.75006675720215

Token 355: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04366549476981163
    2. '       ' → logprob: -3.1686654090881348
    3. '               ' → logprob: -8.418665885925293
    4. ' cnt' → logprob: -9.168665885925293
    5. 'cnt' → logprob: -9.418665885925293
    6. '   ' → logprob: -9.418665885925293
    7. '
' → logprob: -10.043665885925293
    8. '            
' → logprob: -10.793665885925293
    9. '          ' → logprob: -11.043665885925293
    10. '        ' → logprob: -11.293665885925293

Token 356: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12696202099323273
    2. '           ' → logprob: -2.1269619464874268
    3. '               ' → logprob: -11.376961708068848
    4. '      ' → logprob: -12.001961708068848
    5. '   ' → logprob: -12.626961708068848
    6. '        ' → logprob: -13.126961708068848
    7. '		' → logprob: -13.376961708068848
    8. '     ' → logprob: -13.376961708068848
    9. '          ' → logprob: -13.626961708068848
    10. '    ' → logprob: -13.626961708068848

Token 357: ' cnt' (ID: 27340)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18073004484176636
    2. 'cnt' (adapté à ' cnt') → logprob: -2.305730104446411
    3. ' cnt' → logprob: -3.055730104446411
    4. '   ' → logprob: -4.180729866027832
    5. '           ' → logprob: -5.805729866027832
    6. '	cnt' → logprob: -8.680729866027832
    7. '    ' → logprob: -11.305729866027832
    8. '      ' → logprob: -11.430729866027832
    9. '    ' → logprob: -11.680729866027832
    10. ' ' → logprob: -11.680729866027832

Token 358: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3872000277042389
    2. ' +=' → logprob: -1.1371999979019165
    3. '=' → logprob: -8.137200355529785
    4. '+' → logprob: -10.512200355529785
    5. ' =' → logprob: -12.137200355529785
    6. '   ' → logprob: -12.887200355529785
    7. ']+=' → logprob: -14.387200355529785
    8. '    ' → logprob: -15.137200355529785
    9. '+="' → logprob: -16.01219940185547
    10. ' ' → logprob: -16.13719940185547

Token 359: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -18.50010871887207
    4. ' ' → logprob: -19.87510871887207
    5. '```' → logprob: -19.87510871887207
    6. '１' → logprob: -20.18760871887207
    7. '  ' → logprob: -20.25010871887207
    8. '	' → logprob: -21.06260871887207
    9. '۱' → logprob: -21.18760871887207
    10. '0' → logprob: -21.93760871887207

Token 360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '   ' → logprob: -22.25
    4. '１' → logprob: -22.625
    5. '```' → logprob: -22.625
    6. '2' → logprob: -24.5625
    7. '۱' → logprob: -24.625
    8. '  ' → logprob: -25.0
    9. '१' → logprob: -25.375
    10. '১' → logprob: -25.4375

Token 361: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008825227851048112
    2. '
' → logprob: -7.125882625579834
    3. ' print' → logprob: -10.125882148742676
    4. '#' → logprob: -10.375882148742676
    5. '<|end|>' → logprob: -12.875882148742676
    6. '

' → logprob: -13.500882148742676
    7. '```' → logprob: -14.125882148742676
    8. '
' → logprob: -14.250882148742676
    9. ')' → logprob: -14.750882148742676
    10. '  
' → logprob: -15.000882148742676

Token 362: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002141458389814943
    2. '#' → logprob: -8.500214576721191
    3. ' print' → logprob: -12.375214576721191
    4. '
' → logprob: -12.375214576721191
    5. '```' → logprob: -14.000214576721191
    6. '#print' → logprob: -14.250214576721191
    7. ')' → logprob: -15.375214576721191
    8. 'if' → logprob: -16.000213623046875
    9. '

' → logprob: -16.375213623046875
    10. '<|end|>' → logprob: -16.375213623046875

Token 363: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00014025058771949261
    2. '#' (adapté à ' #') → logprob: -9.375140190124512
    3. ' print' → logprob: -10.125140190124512
    4. 'else' → logprob: -12.250140190124512
    5. '   ' → logprob: -13.625140190124512
    6. ')' → logprob: -13.750140190124512
    7. '    ' → logprob: -13.875140190124512
    8. '
' → logprob: -14.000140190124512
    9. '       ' → logprob: -14.000140190124512
    10. 'for' → logprob: -14.125140190124512

Token 364: ' Si' (ID: 7832)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07186435908079147
    2. ' else' → logprob: -2.821864366531372
    3. 'elif' → logprob: -5.446864128112793
    4. 'print' → logprob: -5.946864128112793
    5. '#' → logprob: -6.321864128112793
    6. '```' → logprob: -8.196864128112793
    7. 'continue' → logprob: -8.446864128112793
    8. '   ' → logprob: -8.821864128112793
    9. 'pass' → logprob: -8.946864128112793
    10. ' elif' → logprob: -9.696864128112793

Token 365: ' le' (ID: 505)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4120083153247833
    2. 'a' → logprob: -1.412008285522461
    3. ' not' → logprob: -2.537008285522461
    4. 'not' → logprob: -4.662008285522461
    5. ' ' → logprob: -5.912008285522461
    6. 'else' → logprob: -7.037008285522461
    7. ' else' → logprob: -7.787008285522461
    8. ' le' → logprob: -8.412008285522461
    9. ' l' → logprob: -8.537008285522461
    10. ' the' → logprob: -8.787008285522461

Token 366: ' nombre' (ID: 9733)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11243215203285217
    2. ' a' → logprob: -2.7374322414398193
    3. ' not' → logprob: -3.8624322414398193
    4. 'else' → logprob: -4.73743200302124
    5. 'not' → logprob: -5.23743200302124
    6. ' else' → logprob: -6.23743200302124
    7. 'cnt' → logprob: -6.23743200302124
    8. ' cnt' → logprob: -7.36243200302124
    9. 'n' → logprob: -7.98743200302124
    10. ' nombre' → logprob: -8.362432479858398

Token 367: ' pair' (ID: 10610)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3886197507381439
    2. '%' → logprob: -1.1386197805404663
    3. ' n' → logprob: -7.388619899749756
    4. ' est' → logprob: -8.013619422912598
    5. ' ' → logprob: -8.638619422912598
    6. ' else' → logprob: -8.763619422912598
    7. 'else' → logprob: -8.763619422912598
    8. 'est' → logprob: -9.513619422912598
    9. 'n' → logprob: -10.013619422912598
    10. ' elif' → logprob: -10.388619422912598

Token 368: ' n' (ID: 297)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5597776770591736
    2. 'else' → logprob: -1.6847777366638184
    3. ' est' → logprob: -2.6847777366638184
    4. ' et' → logprob: -2.9347777366638184
    5. ' %' → logprob: -3.3097777366638184
    6. '%' → logprob: -3.4347777366638184
    7. ' n' → logprob: -4.309777736663818
    8. '   ' → logprob: -4.809777736663818
    9. ' elif' → logprob: -5.059777736663818
    10. ' and' → logprob: -5.184777736663818

Token 369: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.3022960424423218
    2. 'pas' → logprob: -2.4272961616516113
    3. 'n' → logprob: -3.1772961616516113
    4. 'est' → logprob: -3.1772961616516113
    5. ' pas' → logprob: -3.4272961616516113
    6. ' n' → logprob: -4.427296161651611
    7. 'elif' → logprob: -4.427296161651611
    8. '   ' → logprob: -4.552296161651611
    9. '       ' → logprob: -5.177296161651611
    10. ''' → logprob: -5.677296161651611

Token 370: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.47439077496528625
    2. 'pas' → logprob: -0.9743907451629639
    3. ' divisible' → logprob: -8.474390983581543
    4. '_pas' → logprob: -10.224390983581543
    5. '#' → logprob: -11.474390983581543
    6. 'p' → logprob: -11.474390983581543
    7. ' not' → logprob: -11.849390983581543
    8. 't' → logprob: -11.974390983581543
    9. 'plus' → logprob: -12.099390983581543
    10. 'not' → logprob: -12.349390983581543

Token 371: ' divisible' (ID: 167813)
  Prédit: ' divisible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.08621060848236084
    2. 'div' → logprob: -2.7112107276916504
    3. 'pas' → logprob: -4.71121072769165
    4. ' pas' → logprob: -5.33621072769165
    5. '#' → logprob: -7.33621072769165
    6. ' divis' → logprob: -8.336210250854492
    7. ' div' → logprob: -8.336210250854492
    8. 'égal' → logprob: -9.086210250854492
    9. ' aussi' → logprob: -9.336210250854492
    10. '%' → logprob: -9.586210250854492

Token 372: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.24813170731067657
    2. 'par' → logprob: -1.6231317520141602
    3. ' pas' → logprob: -4.12313175201416
    4. 'pas' → logprob: -5.24813175201416
    5. '           ' → logprob: -7.49813175201416
    6. '       ' → logprob: -8.49813175201416
    7. '   ' → logprob: -9.49813175201416
    8. ' ' → logprob: -10.24813175201416
    9. 'else' → logprob: -10.74813175201416
    10. '#' → logprob: -11.12313175201416

Token 373: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004836534149944782
    2. ' ' → logprob: -5.379836559295654
    3. '2' → logprob: -9.129836082458496
    4. '6' → logprob: -9.254836082458496
    5. '   ' → logprob: -12.817336082458496
    6. '#' → logprob: -13.192336082458496
    7. '1' → logprob: -13.692336082458496
    8. '       ' → logprob: -14.129836082458496
    9. '  ' → logprob: -14.504836082458496
    10. ' ' → logprob: -14.504836082458496

Token 374: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.8232690460281447e-05
    2. ' ' → logprob: -10.250048637390137
    3. '2' → logprob: -11.625048637390137
    4. '6' → logprob: -12.500048637390137
    5. '```' → logprob: -17.12504768371582
    6. '1' → logprob: -17.25004768371582
    7. '   ' → logprob: -17.37504768371582
    8. '<|end|>' → logprob: -17.50004768371582
    9. '.' → logprob: -17.68754768371582
    10. '۳' → logprob: -17.81254768371582

Token 375: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18742777407169342
    2. ' else' → logprob: -2.4374277591705322
    3. ':' → logprob: -3.1874277591705322
    4. 'else' → logprob: -3.8124277591705322
    5. '       ' → logprob: -4.187427997589111
    6. '           ' → logprob: -7.187427997589111
    7. ' continue' → logprob: -7.562427997589111
    8. '.' → logprob: -7.687427997589111
    9. ' :' → logprob: -7.812427997589111
    10. '    ' → logprob: -7.812427997589111

Token 376: ' on' (ID: 402)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9218089580535889
    2. ' pass' → logprob: -1.7968089580535889
    3. 'continue' → logprob: -2.296808958053589
    4. '       ' → logprob: -2.546808958053589
    5. ' cnt' → logprob: -2.546808958053589
    6. '   ' → logprob: -2.921808958053589
    7. 'else' → logprob: -3.421808958053589
    8. ' else' → logprob: -3.421808958053589
    9. 'pass' → logprob: -3.671808958053589
    10. 'cnt' → logprob: -4.171809196472168

Token 377: ' vér' (ID: 42524)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.22977398335933685
    2. 'continue' → logprob: -2.479773998260498
    3. '   ' → logprob: -3.229773998260498
    4. '       ' → logprob: -3.604773998260498
    5. ' else' → logprob: -4.479773998260498
    6. '    ' → logprob: -4.854773998260498
    7. 'else' → logprob: -4.854773998260498
    8. ' continues' → logprob: -5.229773998260498
    9. 'contin' → logprob: -5.854773998260498
    10. 'n' → logprob: -5.854773998260498

Token 378: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.1310974657535553
    2. 'ifiez' → logprob: -2.3810975551605225
    3. 'else' → logprob: -5.006097316741943
    4. 'ifi' → logprob: -5.006097316741943
    5. 'ify' → logprob: -5.131097316741943
    6. 'if' → logprob: -5.381097316741943
    7. 'se' → logprob: -6.881097316741943
    8. 'ite' → logprob: -6.881097316741943
    9. 'ase' → logprob: -7.506097316741943
    10. '       ' → logprob: -7.881097316741943

Token 379: ' s' (ID: 265)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.8354847431182861
    2. '   ' → logprob: -1.2104847431182861
    3. ' elif' → logprob: -1.8354847431182861
    4. ' a' → logprob: -3.210484743118286
    5. ' if' → logprob: -3.210484743118286
    6. '       ' → logprob: -4.835484504699707
    7. 'a' → logprob: -5.210484504699707
    8. ' not' → logprob: -5.335484504699707
    9. 'if' → logprob: -5.460484504699707
    10. 'not' → logprob: -6.835484504699707

Token 380: ''il' (ID: 14683)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20112763345241547
    2. 'a' → logprob: -1.8261276483535767
    3. ' (' → logprob: -4.576127529144287
    4. '   ' → logprob: -5.326127529144287
    5. ' ' → logprob: -6.701127529144287
    6. ' not' → logprob: -7.076127529144287
    7. 'i' → logprob: -7.451127529144287
    8. ''a' → logprob: -7.701127529144287
    9. '(' → logprob: -7.951127529144287
    10. ''il' → logprob: -8.076128005981445

Token 381: ' est' (ID: 893)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1906004250049591
    2. ' %' → logprob: -2.4406003952026367
    3. '%' → logprob: -2.9406003952026367
    4. ' not' → logprob: -4.315600395202637
    5. 'a' → logprob: -4.440600395202637
    6. ' ' → logprob: -5.190600395202637
    7. ' #' → logprob: -7.315600395202637
    8. '   ' → logprob: -7.440600395202637
    9. ' >=' → logprob: -7.815600395202637
    10. ' modulo' → logprob: -8.815600395202637

Token 382: ' divisible' (ID: 167813)
  Prédit: ' divisible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.07249830663204193
    2. 'div' → logprob: -3.947498321533203
    3. ' not' → logprob: -4.072498321533203
    4. '%' → logprob: -5.197498321533203
    5. ' multiple' → logprob: -5.322498321533203
    6. 'not' → logprob: -5.697498321533203
    7. ' also' → logprob: -5.947498321533203
    8. '>' → logprob: -6.072498321533203
    9. ' a' → logprob: -6.072498321533203
    10. ' ' → logprob: -6.322498321533203

Token 383: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.16083075106143951
    2. ' by' → logprob: -2.4108307361602783
    3. 'par' → logprob: -3.2858307361602783
    4. 'by' → logprob: -4.160830974578857
    5. '   ' → logprob: -6.160830974578857
    6. '#' → logprob: -7.535830974578857
    7. ' #' → logprob: -7.660830974578857
    8. ' ' → logprob: -7.660830974578857
    9. '    ' → logprob: -8.1608304977417
    10. '1' → logprob: -8.5358304977417

Token 384: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18506184220314026
    2. '5' → logprob: -1.8100618124008179
    3. '7' → logprob: -5.935061931610107
    4. '9' → logprob: -6.310061931610107
    5. '4' → logprob: -7.810061931610107
    6. '6' → logprob: -8.06006145477295
    7. '10' → logprob: -10.31006145477295
    8. '2' → logprob: -11.18506145477295
    9. '3' → logprob: -11.24756145477295
    10. ' ' → logprob: -12.06006145477295

Token 385: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.05744335427880287
    2. '7' → logprob: -3.807443380355835
    3. '4' → logprob: -4.182443141937256
    4. '9' → logprob: -4.307443141937256
    5. ' ' → logprob: -6.057443141937256
    6. '6' → logprob: -6.557443141937256
    7. '10' → logprob: -7.307443141937256
    8. '11' → logprob: -9.057443618774414
    9. '2' → logprob: -9.432443618774414
    10. '1' → logprob: -9.619943618774414

Token 386: '.
' (ID: 558)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.493379682302475
    2. '       ' → logprob: -0.9933797121047974
    3. '   ' → logprob: -4.243379592895508
    4. ' elif' → logprob: -5.368379592895508
    5. 'el' → logprob: -10.368379592895508
    6. '	elif' → logprob: -10.618379592895508
    7. '	' → logprob: -11.868379592895508
    8. 'else' → logprob: -11.993379592895508
    9. '     ' → logprob: -12.118379592895508
    10. ' or' → logprob: -12.243379592895508

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021641308441758156
    2. 'elif' → logprob: -4.271641254425049
    3. ' elif' → logprob: -5.021641254425049
    4. '   ' → logprob: -7.146641254425049
    5. '           ' → logprob: -11.021641731262207
    6. ' else' → logprob: -11.021641731262207
    7. 'else' → logprob: -11.146641731262207
    8. '```' → logprob: -11.896641731262207
    9. '	elif' → logprob: -12.646641731262207
    10. '     ' → logprob: -13.021641731262207

Token 388: ' #' (ID: 1069)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.013300705701112747
    2. '       ' → logprob: -5.263300895690918
    3. ' elif' → logprob: -5.263300895690918
    4. '   ' → logprob: -5.888300895690918
    5. 'else' → logprob: -9.513300895690918
    6. 'el' → logprob: -12.638300895690918
    7. '	elif' → logprob: -12.638300895690918
    8. ' else' → logprob: -14.013300895690918
    9. 'elseif' → logprob: -14.388300895690918
    10. ' ' → logprob: -14.388300895690918

Token 389: ' a' (ID: 261)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.06747560948133469
    2. '       ' → logprob: -3.4424755573272705
    3. ' elif' → logprob: -3.4424755573272705
    4. '   ' → logprob: -6.69247579574585
    5. 'el' → logprob: -11.692475318908691
    6. 'else' → logprob: -11.942475318908691
    7. '	elif' → logprob: -12.067475318908691
    8. '    ' → logprob: -12.067475318908691
    9. ' ' → logprob: -12.817475318908691
    10. '     ' → logprob: -13.067475318908691

Token 390: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6326143741607666
    2. '%' → logprob: -0.7576143741607666
    3. ' ' → logprob: -12.007614135742188
    4. '#' → logprob: -13.007614135742188
    5. ' ' → logprob: -13.257614135742188
    6. '```' → logprob: -13.382614135742188
    7. ' #' → logprob: -14.382614135742188
    8. '[' → logprob: -14.757614135742188
    9. 'if' → logprob: -15.195114135742188
    10. ' %
' → logprob: -15.257614135742188

Token 391: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6326257586479187
    2. ' ' → logprob: -0.7576257586479187
    3. '2' → logprob: -10.882625579833984
    4. ' ' → logprob: -12.882625579833984
    5. '```' → logprob: -13.757625579833984
    6. '1' → logprob: -13.757625579833984
    7. '  ' → logprob: -14.132625579833984
    8. '3' → logprob: -14.320125579833984
    9. '10' → logprob: -14.820125579833984
    10. '   ' → logprob: -15.132625579833984

Token 392: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00023226479243021458
    2. ' ' → logprob: -8.375232696533203
    3. '2' → logprob: -13.750232696533203
    4. '3' → logprob: -15.000232696533203
    5. '  ' → logprob: -16.125232696533203
    6. '```' → logprob: -16.125232696533203
    7. '1' → logprob: -17.125232696533203
    8. '   ' → logprob: -17.437732696533203
    9. ' ' → logprob: -17.500232696533203
    10. '%' → logprob: -17.625232696533203

Token 393: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22543184459209442
    2. '==' → logprob: -1.6004317998886108
    3. ' ' → logprob: -11.600431442260742
    4. '```' → logprob: -12.975431442260742
    5. '=' → logprob: -13.100431442260742
    6. ' !=' → logprob: -13.725431442260742
    7. ')==' → logprob: -13.850431442260742
    8. '==
' → logprob: -14.225431442260742
    9. ']==' → logprob: -14.475431442260742
    10. ')' → logprob: -14.600431442260742

Token 394: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05489615723490715
    2. ' ' → logprob: -2.929896116256714
    3. '5' → logprob: -11.929896354675293
    4. '```' → logprob: -12.679896354675293
    5. '   ' → logprob: -13.804896354675293
    6. '==' → logprob: -14.179896354675293
    7. '=' → logprob: -14.804896354675293
    8. '  ' → logprob: -14.992396354675293
    9. '2' → logprob: -15.242396354675293
    10. ' ' → logprob: -15.429896354675293

Token 395: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015078396536409855
    2. ' ' → logprob: -6.501507759094238
    3. '5' → logprob: -13.251507759094238
    4. '2' → logprob: -13.501507759094238
    5. '1' → logprob: -14.251507759094238
    6. '==' → logprob: -14.626507759094238
    7. '=' → logprob: -14.751507759094238
    8. '```' → logprob: -14.876507759094238
    9. '3' → logprob: -15.814007759094238
    10. '   ' → logprob: -16.751508712768555

Token 396: ' signifie' (ID: 81149)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6168071031570435
    2. '==' → logprob: -1.2418071031570435
    3. ':' → logprob: -1.9918071031570435
    4. '       ' → logprob: -3.616806983947754
    5. '           ' → logprob: -5.991806983947754
    6. ' and' → logprob: -6.866806983947754
    7. ')' → logprob: -6.991806983947754
    8. ':
' → logprob: -6.991806983947754
    9. '   ' → logprob: -7.366806983947754
    10. '=' → logprob: -7.491806983947754

Token 397: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.2775605022907257
    2. ' that' → logprob: -1.5275604724884033
    3. ' a' → logprob: -3.7775604724884033
    4. 'that' → logprob: -6.652560710906982
    5. 'a' → logprob: -7.277560710906982
    6. 'que' → logprob: -8.527560234069824
    7. ' ' → logprob: -9.527560234069824
    8. ')' → logprob: -10.152560234069824
    9. ' if' → logprob: -10.527560234069824
    10. '   ' → logprob: -11.027560234069824

Token 398: ' le' (ID: 505)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2830248177051544
    2. 'a' → logprob: -1.408024787902832
    3. ' le' → logprob: -7.158024787902832
    4. ' the' → logprob: -7.533024787902832
    5. 'le' → logprob: -8.658024787902832
    6. ' that' → logprob: -9.158024787902832
    7. ' que' → logprob: -9.283024787902832
    8. 'the' → logprob: -9.658024787902832
    9. '```' → logprob: -10.658024787902832
    10. '(a' → logprob: -10.783024787902832

Token 399: ' nombre' (ID: 9733)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2044234424829483
    2. ' a' → logprob: -1.704423427581787
    3. 'nombre' → logprob: -6.079423427581787
    4. ' nombre' → logprob: -8.079423904418945
    5. 'n' → logprob: -8.329423904418945
    6. ' ' → logprob: -9.079423904418945
    7. ' n' → logprob: -10.829423904418945
    8. 'number' → logprob: -11.454423904418945
    9. ' ' → logprob: -12.079423904418945
    10. 'num' → logprob: -12.329423904418945

Token 400: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0967284440994263
    2. ' is' → logprob: -1.0967284440994263
    3. ' %' → logprob: -1.4717284440994263
    4. ' est' → logprob: -2.4717283248901367
    5. ' ==' → logprob: -4.596728324890137
    6. ' ' → logprob: -6.096728324890137
    7. 'est' → logprob: -6.721728324890137
    8. 'is' → logprob: -7.096728324890137
    9. ' #' → logprob: -7.221728324890137
    10. '==' → logprob: -7.346728324890137

Token 401: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5235673189163208
    2. '0' → logprob: -0.8985673189163208
    3. ' True' → logprob: -7.898567199707031
    4. 'True' → logprob: -9.648567199707031
    5. ' true' → logprob: -13.398567199707031
    6. ' a' → logprob: -13.523567199707031
    7. '1' → logprob: -14.273567199707031
    8. 'a' → logprob: -14.273567199707031
    9. ' divisible' → logprob: -14.398567199707031
    10. ' vrai' → logprob: -14.773567199707031

Token 402: ' multiple' (ID: 7598)
  Prédit: ' multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.6446737051010132
    2. 'multiple' → logprob: -0.7696737051010132
    3. '5' → logprob: -5.394673824310303
    4. ' divisible' → logprob: -5.769673824310303
    5. ' ' → logprob: -6.519673824310303
    6. '0' → logprob: -6.894673824310303
    7. 'multip' → logprob: -7.144673824310303
    8. 'div' → logprob: -7.769673824310303
    9. 'pair' → logprob: -8.894673347473145
    10. ' múlt' → logprob: -9.019673347473145

Token 403: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7087332606315613
    2. ' par' → logprob: -1.083733320236206
    3. '   ' → logprob: -3.083733320236206
    4. '           ' → logprob: -3.083733320236206
    5. '       ' → logprob: -3.833733320236206
    6. ' ' → logprob: -4.208733081817627
    7. ' of' → logprob: -4.708733081817627
    8. ' ==' → logprob: -5.083733081817627
    9. 'par' → logprob: -5.458733081817627
    10. '=' → logprob: -5.833733081817627

Token 404: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.34846505522727966
    2. ' ' → logprob: -1.223465085029602
    3. ' ' → logprob: -11.723464965820312
    4. '2' → logprob: -12.098464965820312
    5. '0' → logprob: -13.785964965820312
    6. '3' → logprob: -13.973464965820312
    7. '```' → logprob: -14.098464965820312
    8. '1' → logprob: -14.410964965820312
    9. '10' → logprob: -14.473464965820312
    10. '  ' → logprob: -14.598464965820312

Token 405: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0008146316395141184
    2. ' ' → logprob: -7.375814437866211
    3. '0' → logprob: -8.625814437866211
    4. '2' → logprob: -12.000814437866211
    5. '3' → logprob: -14.375814437866211
    6. '1' → logprob: -15.000814437866211
    7. '   ' → logprob: -15.313314437866211
    8. '```' → logprob: -15.313314437866211
    9. '10' → logprob: -15.625814437866211
    10. '
' → logprob: -16.18831443786621

Token 406: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09589021652936935
    2. '       ' → logprob: -2.4708902835845947
    3. ' or' → logprob: -5.720890045166016
    4. ':
' → logprob: -6.595890045166016
    5. '           ' → logprob: -6.845890045166016
    6. '   ' → logprob: -8.095890045166016
    7. '.' → logprob: -8.345890045166016
    8. ' and' → logprob: -8.345890045166016
    9. '):' → logprob: -8.720890045166016
    10. ' :' → logprob: -10.095890045166016

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004853738006204367
    2. 'elif' → logprob: -5.75485372543335
    3. '   ' → logprob: -7.12985372543335
    4. ' elif' → logprob: -7.75485372543335
    5. '           ' → logprob: -7.87985372543335
    6. 'else' → logprob: -10.379854202270508
    7. ' else' → logprob: -11.129854202270508
    8. '	' → logprob: -11.879854202270508
    9. '```' → logprob: -12.754854202270508
    10. ' if' → logprob: -12.879854202270508

Token 408: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.27624037861824036
    2. '       ' → logprob: -1.526240348815918
    3. '   ' → logprob: -4.776240348815918
    4. ' elif' → logprob: -4.901240348815918
    5. 'else' → logprob: -4.901240348815918
    6. ' else' → logprob: -8.276240348815918
    7. 'if' → logprob: -8.526240348815918
    8. '           ' → logprob: -9.151240348815918
    9. '```' → logprob: -10.276240348815918
    10. ' ' → logprob: -10.651240348815918

Token 409: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.007610413245856762
    2. 'a' → logprob: -4.882610321044922
    3. ' ' → logprob: -12.882610321044922
    4. ' ' → logprob: -13.757610321044922
    5. '	a' → logprob: -14.632610321044922
    6. '    ' → logprob: -16.257610321044922
    7. '   ' → logprob: -16.757610321044922
    8. '```' → logprob: -17.632610321044922
    9. '0' → logprob: -18.007610321044922
    10. '(a' → logprob: -18.132610321044922

Token 410: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.02324850670993328
    2. '%' → logprob: -3.7732484340667725
    3. ' ' → logprob: -13.023248672485352
    4. ' ' → logprob: -14.273248672485352
    5. '   ' → logprob: -16.27324867248535
    6. '```' → logprob: -17.27324867248535
    7. '       ' → logprob: -17.77324867248535
    8. ' ==' → logprob: -18.52324867248535
    9. 'a' → logprob: -18.64824867248535
    10. '==' → logprob: -18.77324867248535

Token 411: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00016897499153856188
    2. ' ' → logprob: -8.750168800354004
    3. '2' → logprob: -11.750168800354004
    4. '10' → logprob: -13.625168800354004
    5. '3' → logprob: -14.750168800354004
    6. '   ' → logprob: -15.250168800354004
    7. '```' → logprob: -15.812668800354004
    8. '  ' → logprob: -16.00016975402832
    9. '4' → logprob: -16.68766975402832
    10. '1' → logprob: -17.31266975402832

Token 412: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.975612187583465e-05
    2. '2' → logprob: -11.125029563903809
    3. ' ' → logprob: -11.500029563903809
    4. '3' → logprob: -12.875029563903809
    5. '10' → logprob: -13.375029563903809
    6. '15' → logprob: -15.437529563903809
    7. '
' → logprob: -16.250030517578125
    8. '   ' → logprob: -16.562530517578125
    9. '```' → logprob: -16.687530517578125
    10. '0' → logprob: -16.750030517578125

Token 413: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12696149945259094
    2. '==' → logprob: -2.1269614696502686
    3. ' ' → logprob: -10.876961708068848
    4. ')==' → logprob: -12.501961708068848
    5. ']==' → logprob: -12.626961708068848
    6. '0' → logprob: -13.376961708068848
    7. '=' → logprob: -13.501961708068848
    8. '```' → logprob: -13.876961708068848
    9. '()==' → logprob: -14.001961708068848
    10. ')' → logprob: -14.501961708068848

Token 414: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020548192784190178
    2. ' ' → logprob: -3.895548105239868
    3. '=' → logprob: -12.770547866821289
    4. '==' → logprob: -13.645547866821289
    5. '   ' → logprob: -14.458047866821289
    6. '```' → logprob: -14.833047866821289
    7. ' ' → logprob: -15.645547866821289
    8. '       ' → logprob: -15.770547866821289
    9. '  ' → logprob: -15.958047866821289
    10. ' ==' → logprob: -16.33304786682129

Token 415: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007148159202188253
    2. ' ' → logprob: -7.2507147789001465
    3. '=' → logprob: -13.375715255737305
    4. '==' → logprob: -13.875715255737305
    5. '```' → logprob: -14.313215255737305
    6. '   ' → logprob: -15.375715255737305
    7. '  ' → logprob: -16.188215255737305
    8. '1' → logprob: -16.188215255737305
    9. '2' → logprob: -16.625715255737305
    10. '
' → logprob: -16.625715255737305

Token 416: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5850329995155334
    2. ':
' → logprob: -0.8350329995155334
    3. '           ' → logprob: -4.710032939910889
    4. '       ' → logprob: -11.085033416748047
    5. ':
' → logprob: -11.460033416748047
    6. ' :
' → logprob: -12.085033416748047
    7. ':

' → logprob: -12.335033416748047
    8. '):
' → logprob: -12.585033416748047
    9. ' :' → logprob: -13.585033416748047
    10. '   ' → logprob: -13.710033416748047

Token 417: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.5570885807392187e-05
    2. 'cnt' → logprob: -12.125015258789062
    3. '          ' → logprob: -13.000015258789062
    4. '               ' → logprob: -13.125015258789062
    5. '       ' → logprob: -13.250015258789062
    6. ' cnt' → logprob: -13.375015258789062
    7. '	       ' → logprob: -13.500015258789062
    8. '         ' → logprob: -15.000015258789062
    9. 'count' → logprob: -15.875015258789062
    10. '		' → logprob: -15.875015258789062

Token 418: ' #' (ID: 1069)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.6592517495155334
    2. '           ' → logprob: -0.7842517495155334
    3. ' cnt' → logprob: -3.6592516899108887
    4. '               ' → logprob: -7.909251689910889
    5. '       ' → logprob: -9.284252166748047
    6. '   ' → logprob: -10.534252166748047
    7. '	cnt' → logprob: -10.659252166748047
    8. 'count' → logprob: -11.159252166748047
    9. '          ' → logprob: -12.034252166748047
    10. '(cnt' → logprob: -12.159252166748047

Token 419: ' Si' (ID: 7832)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.000630947935860604
    2. '           ' → logprob: -7.500630855560303
    3. ' cnt' → logprob: -9.500631332397461
    4. '	cnt' → logprob: -13.625631332397461
    5. '       ' → logprob: -13.750631332397461
    6. '               ' → logprob: -15.000631332397461
    7. '   ' → logprob: -15.125631332397461
    8. 'count' → logprob: -16.12563133239746
    9. '(cnt' → logprob: -16.62563133239746
    10. '[cnt' → logprob: -17.12563133239746

Token 420: ' le' (ID: 505)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.1612383872270584
    2. 'cnt' → logprob: -1.911238431930542
    3. '           ' → logprob: -7.161238193511963
    4. 'a' → logprob: -9.411238670349121
    5. ' a' → logprob: -10.161238670349121
    6. '	cnt' → logprob: -10.536238670349121
    7. '               ' → logprob: -10.661238670349121
    8. '(cnt' → logprob: -11.036238670349121
    9. '_cnt' → logprob: -12.161238670349121
    10. '            ' → logprob: -12.286238670349121

Token 421: ' nombre' (ID: 9733)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.004171356093138456
    2. ' cnt' → logprob: -5.504171371459961
    3. ' compteur' → logprob: -9.754171371459961
    4. 'counter' → logprob: -11.629171371459961
    5. 'nombre' → logprob: -12.129171371459961
    6. 'contador' → logprob: -12.254171371459961
    7. '	cnt' → logprob: -12.254171371459961
    8. '           ' → logprob: -12.629171371459961
    9. 'count' → logprob: -13.629171371459961
    10. '       ' → logprob: -13.754171371459961

Token 422: ' est' (ID: 893)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09356284886598587
    2. ' est' → logprob: -2.7185628414154053
    3. ' is' → logprob: -4.468563079833984
    4. '               ' → logprob: -5.468563079833984
    5. '   ' → logprob: -6.468563079833984
    6. '       ' → logprob: -6.718563079833984
    7. ' cnt' → logprob: -7.218563079833984
    8. 'est' → logprob: -7.343563079833984
    9. ' +=' → logprob: -7.468563079833984
    10. 'cnt' → logprob: -7.843563079833984

Token 423: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.3094440698623657
    2. ' pair' → logprob: -1.4344440698623657
    3. ' cnt' → logprob: -4.684443950653076
    4. 'cnt' → logprob: -4.809443950653076
    5. 'even' → logprob: -5.184443950653076
    6. ' even' → logprob: -6.184443950653076
    7. '           ' → logprob: -6.684443950653076
    8. ' paire' → logprob: -7.809443950653076
    9. ' ' → logprob: -7.934443950653076
    10. '_pair' → logprob: -9.559444427490234

Token 424: ' et' (ID: 859)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10403341054916382
    2. ',' → logprob: -2.3540334701538086
    3. ':' → logprob: -6.104033470153809
    4. ' and' → logprob: -7.104033470153809
    5. '       ' → logprob: -8.604033470153809
    6. '               ' → logprob: -9.104033470153809
    7. '   ' → logprob: -9.104033470153809
    8. ' et' → logprob: -9.229033470153809
    9. ':
' → logprob: -9.354033470153809
    10. 'and' → logprob: -10.104033470153809

Token 425: ' divisible' (ID: 167813)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.12992256879806519
    2. 'cnt' → logprob: -2.12992262840271
    3. '           ' → logprob: -5.879922389984131
    4. '	cnt' → logprob: -9.504922866821289
    5. '(cnt' → logprob: -10.004922866821289
    6. ' compteur' → logprob: -11.379922866821289
    7. '```' → logprob: -11.504922866821289
    8. '_cnt' → logprob: -11.629922866821289
    9. '       ' → logprob: -11.754922866821289
    10. '[cnt' → logprob: -11.754922866821289

Token 426: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.05254051461815834
    2. '           ' → logprob: -3.3025405406951904
    3. 'par' → logprob: -4.302540302276611
    4. '               ' → logprob: -7.802540302276611
    5. ' by' → logprob: -8.17754077911377
    6. ' de' → logprob: -9.92754077911377
    7. '            ' → logprob: -10.67754077911377
    8. 'by' → logprob: -11.05254077911377
    9. '_par' → logprob: -11.30254077911377
    10. '   ' → logprob: -11.42754077911377

Token 427: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.35003596544265747
    2. ' ' → logprob: -1.2250359058380127
    3. '2' → logprob: -6.850036144256592
    4. '1' → logprob: -7.600036144256592
    5. '   ' → logprob: -11.725035667419434
    6. ' ' → logprob: -12.537535667419434
    7. '3' → logprob: -12.850035667419434
    8. '10' → logprob: -13.162535667419434
    9. '```' → logprob: -13.225035667419434
    10. '  ' → logprob: -13.412535667419434

Token 428: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.941161776310764e-05
    2. ' ' → logprob: -11.000039100646973
    3. '2' → logprob: -11.500039100646973
    4. '1' → logprob: -11.875039100646973
    5. '3' → logprob: -12.875039100646973
    6. '0' → logprob: -14.062539100646973
    7. '   ' → logprob: -14.250039100646973
    8. '```' → logprob: -14.500039100646973
    9. '
' → logprob: -15.937539100646973
    10. '  ' → logprob: -16.56254005432129

Token 429: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25338810682296753
    2. '           ' → logprob: -1.7533881664276123
    3. ':
' → logprob: -3.3783881664276123
    4. '               ' → logprob: -4.128387928009033
    5. '       ' → logprob: -9.378388404846191
    6. ',' → logprob: -9.503388404846191
    7. '=' → logprob: -9.753388404846191
    8. '```' → logprob: -10.128388404846191
    9. ' :' → logprob: -10.878388404846191
    10. '):
' → logprob: -10.878388404846191

Token 430: ' on' (ID: 402)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.5566181540489197
    2. '           ' → logprob: -1.4316182136535645
    3. ' cnt' → logprob: -1.6816182136535645
    4. '               ' → logprob: -6.5566182136535645
    5. '   ' → logprob: -9.056617736816406
    6. '	cnt' → logprob: -9.181617736816406
    7. '       ' → logprob: -9.431617736816406
    8. '            ' → logprob: -10.806617736816406
    9. '
' → logprob: -11.306617736816406
    10. ' ' → logprob: -11.306617736816406

Token 431: ' incr' (ID: 52395)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.2678965628147125
    2. 'cnt' → logprob: -1.6428965330123901
    3. '           ' → logprob: -3.3928966522216797
    4. '   ' → logprob: -5.26789665222168
    5. '       ' → logprob: -6.76789665222168
    6. '	cnt' → logprob: -7.14289665222168
    7. '```' → logprob: -8.76789665222168
    8. ' ' → logprob: -8.89289665222168
    9. '               ' → logprob: -9.76789665222168
    10. '  ' → logprob: -9.76789665222168

Token 432: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.08993033319711685
    2. 'ément' → logprob: -2.464930295944214
    3. 'ém' → logprob: -8.089930534362793
    4. 'éments' → logprob: -8.464930534362793
    5. 'mé' → logprob: -9.089930534362793
    6. 'mente' → logprob: -9.214930534362793
    7. 'm' → logprob: -9.464930534362793
    8. 'ment' → logprob: -10.339930534362793
    9. 'è' → logprob: -10.464930534362793
    10. '   ' → logprob: -10.964930534362793

Token 433: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.4411546289920807
    2. 'ment' → logprob: -1.0661545991897583
    3. 'm' → logprob: -5.441154479980469
    4. 'é' → logprob: -6.191154479980469
    5. 'mé' → logprob: -6.191154479980469
    6. '       ' → logprob: -7.441154479980469
    7. '   ' → logprob: -7.816154479980469
    8. 'ément' → logprob: -8.066154479980469
    9. '           ' → logprob: -8.441154479980469
    10. 'mentation' → logprob: -8.691154479980469

Token 434: ' le' (ID: 505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6908649802207947
    2. 'cnt' → logprob: -1.5658650398254395
    3. ' cnt' → logprob: -1.5658650398254395
    4. '           ' → logprob: -2.8158650398254395
    5. ' ' → logprob: -3.9408650398254395
    6. '   ' → logprob: -6.5658650398254395
    7. '	cnt' → logprob: -9.440864562988281
    8. '               ' → logprob: -9.565864562988281
    9. '(cnt' → logprob: -9.940864562988281
    10. '       ' → logprob: -10.565864562988281

Token 435: ' compteur' (ID: 163344)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.09265648573637009
    2. ' cnt' → logprob: -2.467656373977661
    3. '1' → logprob: -5.84265661239624
    4. ' compteur' → logprob: -7.59265661239624
    5. 'counter' → logprob: -8.967656135559082
    6. 'comp' → logprob: -10.092656135559082
    7. '   ' → logprob: -10.342656135559082
    8. '       ' → logprob: -11.217656135559082
    9. 'count' → logprob: -11.217656135559082
    10. '           ' → logprob: -11.592656135559082

Token 436: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22304141521453857
    2. '+=' → logprob: -2.098041534423828
    3. ' +=' → logprob: -3.098041534423828
    4. ' de' → logprob: -3.723041534423828
    5. '               ' → logprob: -5.973041534423828
    6. 'de' → logprob: -6.598041534423828
    7. '=' → logprob: -6.848041534423828
    8. 'cnt' → logprob: -7.098041534423828
    9. '       ' → logprob: -7.723041534423828
    10. '          ' → logprob: -8.223041534423828

Token 437: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02054235339164734
    2. ' ' → logprob: -3.8955423831939697
    3. '   ' → logprob: -14.89554214477539
    4. '+' → logprob: -17.02054214477539
    5. '           ' → logprob: -17.39554214477539
    6. '```' → logprob: -17.39554214477539
    7. '2' → logprob: -17.64554214477539
    8. '       ' → logprob: -17.89554214477539
    9. '  ' → logprob: -18.64554214477539
    10. ' +' → logprob: -18.64554214477539

Token 438: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.000006675720215
    3. '2' → logprob: -15.500006675720215
    4. '   ' → logprob: -16.8750057220459
    5. '```' → logprob: -17.6250057220459
    6. '<|end|>' → logprob: -17.6250057220459
    7. '+' → logprob: -17.8125057220459
    8. '.' → logprob: -18.4375057220459
    9. '3' → logprob: -18.5000057220459
    10. '           ' → logprob: -18.8125057220459

Token 439: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00045902872807346284
    2. '               ' → logprob: -7.87545919418335
    3. '       ' → logprob: -10.625458717346191
    4. '          ' → logprob: -11.500458717346191
    5. 'cnt' → logprob: -11.500458717346191
    6. '.' → logprob: -11.750458717346191
    7. '		' → logprob: -11.875458717346191
    8. '	       ' → logprob: -12.500458717346191
    9. ',' → logprob: -12.500458717346191
    10. ' cnt' → logprob: -13.000458717346191

Token 440: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00035906085395254195
    2. ' cnt' → logprob: -9.000359535217285
    3. '               ' → logprob: -9.250359535217285
    4. '       ' → logprob: -9.750359535217285
    5. 'cnt' → logprob: -9.750359535217285
    6. '          ' → logprob: -11.875359535217285
    7. '   ' → logprob: -12.000359535217285
    8. '		' → logprob: -13.000359535217285
    9. '```' → logprob: -13.625359535217285
    10. '	       ' → logprob: -13.875359535217285

Token 441: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.24134410917758942
    2. ' cnt' → logprob: -2.1163442134857178
    3. '           ' → logprob: -2.3663442134857178
    4. '   ' → logprob: -10.241344451904297
    5. '	cnt' → logprob: -10.366344451904297
    6. '               ' → logprob: -10.991344451904297
    7. '       ' → logprob: -11.241344451904297
    8. 'count' → logprob: -11.491344451904297
    9. '(cnt' → logprob: -11.616344451904297
    10. '[cnt' → logprob: -12.616344451904297

Token 442: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1269315630197525
    2. ' +=' → logprob: -2.126931667327881
    3. '+' → logprob: -13.251931190490723
    4. '=' → logprob: -13.501931190490723
    5. ']+=' → logprob: -15.376931190490723
    6. '   ' → logprob: -16.62693214416504
    7. ' ' → logprob: -18.00193214416504
    8. ' ' → logprob: -18.00193214416504
    9. '    ' → logprob: -18.00193214416504
    10. '```' → logprob: -18.37693214416504

Token 443: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04858794063329697
    2. ' ' → logprob: -3.0485880374908447
    3. ' ' → logprob: -15.423587799072266
    4. '   ' → logprob: -15.923587799072266
    5. '```' → logprob: -16.548587799072266
    6. '	' → logprob: -17.048587799072266
    7. '0' → logprob: -17.861087799072266
    8. '+' → logprob: -17.923587799072266
    9. '<|end|>' → logprob: -17.923587799072266
    10. '2' → logprob: -18.673587799072266

Token 444: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '<|end|>' → logprob: -18.625001907348633
    4. '```' → logprob: -18.875001907348633
    5. '   ' → logprob: -19.750001907348633
    6. '１' → logprob: -20.500001907348633
    7. '۱' → logprob: -20.625001907348633
    8. '  ' → logprob: -21.437501907348633
    9. '১' → logprob: -21.625001907348633
    10. '१' → logprob: -21.625001907348633

Token 445: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002649974776431918
    2. '
' → logprob: -6.002649784088135
    3. ' print' → logprob: -9.752650260925293
    4. '<|end|>' → logprob: -9.877650260925293
    5. ')' → logprob: -10.752650260925293
    6. '#' → logprob: -10.877650260925293
    7. '```' → logprob: -12.252650260925293
    8. '

' → logprob: -12.877650260925293
    9. '   ' → logprob: -12.877650260925293
    10. '
' → logprob: -13.002650260925293

Token 446: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0023506726138293743
    2. '
' → logprob: -6.127350807189941
    3. '#' → logprob: -9.627350807189941
    4. ')' → logprob: -10.377350807189941
    5. ' print' → logprob: -10.752350807189941
    6. '

' → logprob: -10.752350807189941
    7. ')
' → logprob: -12.127350807189941
    8. '    
' → logprob: -12.627350807189941
    9. '```' → logprob: -12.627350807189941
    10. '#print' → logprob: -12.752350807189941

Token 447: ' else' (ID: 1203)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00024037064576987177
    2. '
' → logprob: -8.625240325927734
    3. '#' → logprob: -10.875240325927734
    4. '

' → logprob: -11.000240325927734
    5. ' print' → logprob: -11.500240325927734
    6. ')' → logprob: -11.500240325927734
    7. ')

' → logprob: -13.625240325927734
    8. ')
' → logprob: -14.125240325927734
    9. '#print' → logprob: -14.125240325927734
    10. '
' → logprob: -14.375240325927734

Token 448: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006107840221375227
    2. ':
' → logprob: -5.131107807159424
    3. '   ' → logprob: -8.756108283996582
    4. 'if' → logprob: -11.631108283996582
    5. ' :' → logprob: -11.881108283996582
    6. ' if' → logprob: -12.881108283996582
    7. '       ' → logprob: -13.756108283996582
    8. '    ' → logprob: -14.506108283996582
    9. ':

' → logprob: -14.631108283996582
    10. 'elif' → logprob: -14.881108283996582

Token 449: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15612490475177765
    2. '       ' → logprob: -2.6561248302459717
    3. 'cnt' → logprob: -3.2811248302459717
    4. ' cnt' → logprob: -3.5311248302459717
    5. ' if' → logprob: -5.906125068664551
    6. '    ' → logprob: -6.406125068664551
    7. 'if' → logprob: -6.781125068664551
    8. '    
' → logprob: -7.406125068664551
    9. ' pass' → logprob: -8.03112506866455
    10. '	cnt' → logprob: -8.65612506866455

Token 450: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012360133230686188
    2. '   ' → logprob: -4.637360095977783
    3. ' if' → logprob: -6.137360095977783
    4. '       ' → logprob: -8.387360572814941
    5. 'cnt' → logprob: -9.262360572814941
    6. '#' (adapté à ' #') → logprob: -9.387360572814941
    7. 'continue' → logprob: -10.762360572814941
    8. '    ' → logprob: -12.887360572814941
    9. 'pass' → logprob: -13.637360572814941
    10. 'print' → logprob: -13.637360572814941

Token 451: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001818097778595984
    2. '   ' → logprob: -7.0018181800842285
    3. ' if' → logprob: -7.2518181800842285
    4. '#' → logprob: -8.75181770324707
    5. 'cnt' → logprob: -11.12681770324707
    6. '       ' → logprob: -11.37681770324707
    7. 'continue' → logprob: -12.50181770324707
    8. '```' → logprob: -13.62681770324707
    9. 'pass' → logprob: -13.75181770324707
    10. '  ' → logprob: -13.75181770324707

Token 452: ' le' (ID: 505)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10086794942617416
    2. 'a' → logprob: -2.350867986679077
    3. ' ' → logprob: -7.600867748260498
    4. ' not' → logprob: -9.225868225097656
    5. '  ' → logprob: -11.100868225097656
    6. 'not' → logprob: -11.475868225097656
    7. '   ' → logprob: -11.850868225097656
    8. ' (' → logprob: -11.975868225097656
    9. ' the' → logprob: -12.350868225097656
    10. ' le' → logprob: -12.475868225097656

Token 453: ' nombre' (ID: 9733)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04879537597298622
    2. ' a' → logprob: -3.048795461654663
    3. ' ' → logprob: -9.923795700073242
    4. 'n' → logprob: -10.048795700073242
    5. 'nombre' → logprob: -10.173795700073242
    6. 'cnt' → logprob: -10.923795700073242
    7. ' nombre' → logprob: -11.548795700073242
    8. '   ' → logprob: -11.923795700073242
    9. 'num' → logprob: -12.298795700073242
    10. '(a' → logprob: -12.298795700073242

Token 454: ' n' (ID: 297)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0340304970741272
    2. '%' → logprob: -3.4090304374694824
    3. ' ' → logprob: -8.28403091430664
    4. ' est' → logprob: -10.03403091430664
    5. ' n' → logprob: -10.28403091430664
    6. ' ' → logprob: -10.78403091430664
    7. '   ' → logprob: -11.53403091430664
    8. ' a' → logprob: -12.28403091430664
    9. 'a' → logprob: -12.90903091430664
    10. ' <' → logprob: -13.15903091430664

Token 455: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.6307286620140076
    2. '%' → logprob: -0.8807286620140076
    3. 'est' → logprob: -3.8807287216186523
    4. ' est' → logprob: -4.505728721618652
    5. 'e' → logprob: -4.755728721618652
    6. 'a' → logprob: -5.630728721618652
    7. '’est' → logprob: -5.755728721618652
    8. ' n' → logprob: -6.630728721618652
    9. ' pas' → logprob: -6.880728721618652
    10. 'pas' → logprob: -7.255728721618652

Token 456: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.47410470247268677
    2. ' pas' → logprob: -0.9741047024726868
    3. '_pas' → logprob: -10.849104881286621
    4. 'not' → logprob: -12.599104881286621
    5. ' not' → logprob: -13.724104881286621
    6. 'pa' → logprob: -13.849104881286621
    7. 'pair' → logprob: -14.349104881286621
    8. 'p' → logprob: -14.474104881286621
    9. 'Pas' → logprob: -15.099104881286621
    10. 't' → logprob: -15.224104881286621

Token 457: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.11406407505273819
    2. 'pas' → logprob: -2.2390639781951904
    3. ' pair' → logprob: -6.8640642166137695
    4. ' pas' → logprob: -9.61406421661377
    5. 'pa' → logprob: -9.61406421661377
    6. 'div' → logprob: -10.61406421661377
    7. ' divisible' → logprob: -11.61406421661377
    8. '#' → logprob: -11.98906421661377
    9. '0' → logprob: -12.61406421661377
    10. 'pal' → logprob: -12.98906421661377

Token 458: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02482941932976246
    2. '   ' → logprob: -3.899829387664795
    3. ',' → logprob: -6.274829387664795
    4. ' and' → logprob: -6.649829387664795
    5. ':
' → logprob: -7.274829387664795
    6. 'and' → logprob: -8.149829864501953
    7. ' :' → logprob: -9.399829864501953
    8. '       ' → logprob: -10.524829864501953
    9. '.' → logprob: -13.274829864501953
    10. ' ,' → logprob: -13.524829864501953

Token 459: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.448597252368927
    2. 'if' → logprob: -1.0735971927642822
    3. ' if' → logprob: -4.323597431182861
    4. '       ' → logprob: -5.323597431182861
    5. 'continue' → logprob: -6.823597431182861
    6. 'cnt' → logprob: -8.448596954345703
    7. ' continue' → logprob: -9.323596954345703
    8. '#' → logprob: -10.198596954345703
    9. '  ' → logprob: -10.323596954345703
    10. '    ' → logprob: -10.698596954345703

Token 460: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.42526307702064514
    2. '   ' → logprob: -1.1752630472183228
    3. '       ' → logprob: -3.8002631664276123
    4. 'ount' → logprob: -5.675262928009033
    5. ''est' → logprob: -6.425262928009033
    6. '#' → logprob: -6.550262928009033
    7. 'es' → logprob: -6.550262928009033
    8. '  ' → logprob: -6.800262928009033
    9. 'e' → logprob: -7.175262928009033
    10. '    ' → logprob: -7.300262928009033

Token 461: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.8585302233695984
    2. '   ' → logprob: -0.9835302233695984
    3. ' que' → logprob: -2.608530282974243
    4. ' un' → logprob: -3.608530282974243
    5. 'le' → logprob: -4.108530044555664
    6. ' à' → logprob: -4.858530044555664
    7. '       ' → logprob: -4.983530044555664
    8. 'à' → logprob: -4.983530044555664
    9. 'que' → logprob: -4.983530044555664
    10. 'a' → logprob: -5.108530044555664

Token 462: '-dire' (ID: 76064)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.08135383576154709
    2. 'n' → logprob: -2.7063539028167725
    3. 'un' → logprob: -6.331353664398193
    4. '   ' → logprob: -6.956353664398193
    5. 's' → logprob: -7.206353664398193
    6. '#' → logprob: -7.206353664398193
    7. 'ce' → logprob: -7.331353664398193
    8. 't' → logprob: -7.456353664398193
    9. 'f' → logprob: -7.706353664398193
    10. 'ucun' → logprob: -7.831353664398193

Token 463: ' s' (ID: 265)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.4553855061531067
    2. 'a' → logprob: -2.080385446548462
    3. ' qu' → logprob: -2.080385446548462
    4. '   ' → logprob: -2.955385446548462
    5. 'que' → logprob: -3.580385446548462
    6. '#' → logprob: -4.580385684967041
    7. ' a' → logprob: -5.455385684967041
    8. ' que' → logprob: -5.455385684967041
    9. 'if' → logprob: -5.705385684967041
    10. 'à' → logprob: -5.955385684967041

Token 464: ''il' (ID: 14683)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0029677150305360556
    2. 'i' → logprob: -6.877967834472656
    3. '(a' → logprob: -7.502967834472656
    4. ''il' → logprob: -7.502967834472656
    5. '   ' → logprob: -8.502967834472656
    6. 'e' → logprob: -9.002967834472656
    7. 'elif' → logprob: -9.252967834472656
    8. 'u' → logprob: -9.252967834472656
    9. ' a' → logprob: -9.502967834472656
    10. '(' → logprob: -9.627967834472656

Token 465: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7902467846870422
    2. ' a' → logprob: -0.9152467846870422
    3. 'a' → logprob: -2.0402467250823975
    4. ' %' → logprob: -4.165246963500977
    5. ' ' → logprob: -8.415246963500977
    6. ' is' → logprob: -10.665246963500977
    7. ' est' → logprob: -10.790246963500977
    8. ' not' → logprob: -11.290246963500977
    9. 'n' → logprob: -11.415246963500977
    10. ' ' → logprob: -12.165246963500977

Token 466: ' impair' (ID: 64113)
  Prédit: 'imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imp' → logprob: -0.13457563519477844
    2. 'im' → logprob: -2.384575605392456
    3. ' impair' → logprob: -3.509575605392456
    4. ' imp' → logprob: -6.259575843811035
    5. 'odd' → logprob: -7.009575843811035
    6. 'div' → logprob: -7.384575843811035
    7. ' ' → logprob: -9.634575843811035
    8. ' divisible' → logprob: -9.759575843811035
    9. ' impar' → logprob: -10.134575843811035
    10. '   ' → logprob: -10.509575843811035

Token 467: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7417699098587036
    2. ' and' → logprob: -1.6167699098587036
    3. '       ' → logprob: -1.8667699098587036
    4. 'and' → logprob: -2.116769790649414
    5. ',' → logprob: -3.616769790649414
    6. ':
' → logprob: -4.116769790649414
    7. '   ' → logprob: -5.116769790649414
    8. ' :' → logprob: -8.366769790649414
    9. '.' → logprob: -8.491769790649414
    10. '           ' → logprob: -8.616769790649414

Token 468: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05989263206720352
    2. 'if' → logprob: -2.9348926544189453
    3. '   ' → logprob: -5.559892654418945
    4. ' if' → logprob: -6.934892654418945
    5. 'continue' → logprob: -9.184892654418945
    6. '#' → logprob: -10.684892654418945
    7. 'elif' → logprob: -10.934892654418945
    8. '           ' → logprob: -11.309892654418945
    9. 'print' → logprob: -11.934892654418945
    10. ' continue' → logprob: -12.684892654418945

Token 469: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.020575406029820442
    2. '   ' → logprob: -4.145575523376465
    3. '       ' → logprob: -5.520575523376465
    4. ' if' → logprob: -7.895575523376465
    5. 'cnt' → logprob: -10.270575523376465
    6. 'elif' → logprob: -10.395575523376465
    7. '#' (adapté à ' #') → logprob: -10.520575523376465
    8. 'print' → logprob: -10.645575523376465
    9. 'continue' → logprob: -10.645575523376465
    10. '           ' → logprob: -12.520575523376465

Token 470: ' dans' (ID: 2671)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004434389993548393
    2. '   ' → logprob: -5.754434585571289
    3. '       ' → logprob: -7.004434585571289
    4. 'cnt' → logprob: -8.379434585571289
    5. 'continue' → logprob: -9.629434585571289
    6. ' if' → logprob: -10.379434585571289
    7. 'elif' → logprob: -11.379434585571289
    8. 'pass' → logprob: -12.754434585571289
    9. '#' → logprob: -13.504434585571289
    10. '  ' → logprob: -13.629434585571289

Token 471: ' ce' (ID: 2357)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0756988376379013
    2. ' a' → logprob: -2.8256988525390625
    3. 'la' → logprob: -5.4506988525390625
    4. 'le' → logprob: -5.8256988525390625
    5. '   ' → logprob: -6.5756988525390625
    6. ' la' → logprob: -6.7006988525390625
    7. 'cnt' → logprob: -7.3256988525390625
    8. ' ' → logprob: -7.7006988525390625
    9. ' le' → logprob: -7.9506988525390625
    10. 'if' → logprob: -8.075698852539062

Token 472: ' cas' (ID: 2108)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7166529297828674
    2. 'elif' → logprob: -0.9666529297828674
    3. ' cas' → logprob: -2.9666528701782227
    4. 'a' → logprob: -3.2166528701782227
    5. '#' → logprob: -4.216652870178223
    6. ' if' → logprob: -4.466652870178223
    7. '   ' → logprob: -5.716652870178223
    8. ' a' → logprob: -5.841652870178223
    9. 'cas' → logprob: -5.841652870178223
    10. ' elif' → logprob: -6.841652870178223

Token 473: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2881448566913605
    2. '   ' → logprob: -1.913144826889038
    3. 'if' → logprob: -2.913144826889038
    4. ' if' → logprob: -3.788144826889038
    5. ',' → logprob: -3.913144826889038
    6. ':' → logprob: -5.788145065307617
    7. '           ' → logprob: -7.413145065307617
    8. 'elif' → logprob: -7.538145065307617
    9. ' on' → logprob: -8.038145065307617
    10. 'on' → logprob: -8.413145065307617

Token 474: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04399111866950989
    2. '       ' → logprob: -3.7939910888671875
    3. '   ' → logprob: -4.1689910888671875
    4. ' if' → logprob: -5.7939910888671875
    5. 'continue' → logprob: -7.0439910888671875
    6. 'cnt' → logprob: -7.2939910888671875
    7. '```' → logprob: -8.918991088867188
    8. '           ' → logprob: -9.168991088867188
    9. '#' → logprob: -9.418991088867188
    10. 'pass' → logprob: -10.168991088867188

Token 475: ' incr' (ID: 52395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15984411537647247
    2. '       ' → logprob: -3.284844160079956
    3. 'continue' → logprob: -3.284844160079956
    4. '   ' → logprob: -3.409844160079956
    5. ' if' → logprob: -3.409844160079956
    6. ' continue' → logprob: -5.659843921661377
    7. 'elif' → logprob: -6.034843921661377
    8. '#' → logprob: -8.034844398498535
    9. '           ' → logprob: -9.284844398498535
    10. '    ' → logprob: -9.534844398498535

Token 476: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.046196918934583664
    2. 'ément' → logprob: -3.296196937561035
    3. 'ém' → logprob: -5.671196937561035
    4. 'mente' → logprob: -6.171196937561035
    5. 'éments' → logprob: -7.046196937561035
    6. 'ré' → logprob: -7.421196937561035
    7. 'rement' → logprob: -8.421196937561035
    8. '+=' → logprob: -8.796196937561035
    9. 'è' → logprob: -9.046196937561035
    10. 'mé' → logprob: -9.796196937561035

Token 477: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.09730147570371628
    2. 'nte' → logprob: -2.597301483154297
    3. 'ment' → logprob: -4.472301483154297
    4. 'm' → logprob: -5.472301483154297
    5. 'mé' → logprob: -6.972301483154297
    6. 'me' → logprob: -8.972301483154297
    7. '?' → logprob: -9.097301483154297
    8. 'ments' → logprob: -9.097301483154297
    9. 'r' → logprob: -9.347301483154297
    10. 'mentation' → logprob: -9.597301483154297

Token 478: ' aussi' (ID: 9894)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.22916793823242188
    2. ' cnt' → logprob: -1.6041679382324219
    3. '1' → logprob: -6.354167938232422
    4. '   ' → logprob: -6.854167938232422
    5. '	cnt' → logprob: -8.229167938232422
    6. '(cnt' → logprob: -8.479167938232422
    7. '       ' → logprob: -9.229167938232422
    8. ' the' → logprob: -9.354167938232422
    9. '```' → logprob: -9.354167938232422
    10. 'the' → logprob: -9.854167938232422

Token 479: ' le' (ID: 505)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.28281164169311523
    2. ' cnt' → logprob: -1.4078116416931152
    3. '(cnt' → logprob: -7.157811641693115
    4. '   ' → logprob: -7.907811641693115
    5. '1' → logprob: -8.157812118530273
    6. '	cnt' → logprob: -9.282812118530273
    7. '       ' → logprob: -10.157812118530273
    8. 'le' → logprob: -10.157812118530273
    9. ' ' → logprob: -11.282812118530273
    10. '[cnt' → logprob: -12.032812118530273

Token 480: ' compteur' (ID: 163344)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0234440416097641
    2. ' compteur' → logprob: -4.523444175720215
    3. 'comp' → logprob: -4.648444175720215
    4. ' cnt' → logprob: -6.273444175720215
    5. 'counter' → logprob: -7.273444175720215
    6. 'cmp' → logprob: -10.023444175720215
    7. 'contador' → logprob: -10.023444175720215
    8. 'count' → logprob: -11.023444175720215
    9. '```' → logprob: -11.273444175720215
    10. '1' → logprob: -11.398444175720215

Token 481: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09435872733592987
    2. '       ' → logprob: -3.0943586826324463
    3. '           ' → logprob: -3.9693586826324463
    4. ' +=' → logprob: -4.469358921051025
    5. ' de' → logprob: -5.844358921051025
    6. '+=' → logprob: -6.094358921051025
    7. 'cnt' → logprob: -6.219358921051025
    8. ' ' → logprob: -6.969358921051025
    9. '    ' → logprob: -6.969358921051025
    10. ' cnt' → logprob: -7.094358921051025

Token 482: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '+' → logprob: -17.12504005432129
    4. 'a' → logprob: -17.25004005432129
    5. '2' → logprob: -18.50004005432129
    6. '   ' → logprob: -18.50004005432129
    7. '
' → logprob: -18.62504005432129
    8. '```' → logprob: -18.62504005432129
    9. '１' → logprob: -18.62504005432129
    10. '!' → logprob: -18.75004005432129

Token 483: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.625009536743164
    3. 'a' → logprob: -15.625009536743164
    4. '2' → logprob: -16.125009536743164
    5. '+' → logprob: -17.000009536743164
    6. '0' → logprob: -17.750009536743164
    7. 'cnt' → logprob: -17.875009536743164
    8. '```' → logprob: -18.000009536743164
    9. '.' → logprob: -18.375009536743164
    10. '!' → logprob: -18.500009536743164

Token 484: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35024622082710266
    2. '   ' → logprob: -1.2252461910247803
    3. ':' → logprob: -7.225246429443359
    4. '           ' → logprob: -7.600246429443359
    5. ':
' → logprob: -8.47524642944336
    6. 'cnt' → logprob: -9.72524642944336
    7. '  ' → logprob: -10.10024642944336
    8. '    
' → logprob: -10.22524642944336
    9. '	' → logprob: -10.35024642944336
    10. '.' → logprob: -10.60024642944336

Token 485: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022968705743551254
    2. '       ' → logprob: -4.397968769073486
    3. 'cnt' → logprob: -4.647968769073486
    4. ' cnt' → logprob: -7.147968769073486
    5. '	cnt' → logprob: -10.772968292236328
    6. '   ' → logprob: -12.647968292236328
    7. '```' → logprob: -13.022968292236328
    8. '           ' → logprob: -13.147968292236328
    9. '    ' → logprob: -13.147968292236328
    10. ' ' → logprob: -13.272968292236328

Token 486: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.13092473149299622
    2. '   ' → logprob: -2.130924701690674
    3. ' cnt' → logprob: -5.755924701690674
    4. '       ' → logprob: -7.255924701690674
    5. '	cnt' → logprob: -9.630925178527832
    6. ' ' → logprob: -11.005925178527832
    7. '  ' → logprob: -11.380925178527832
    8. 'count' → logprob: -11.630925178527832
    9. '    ' → logprob: -12.630925178527832
    10. '```' → logprob: -12.630925178527832

Token 487: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3868798017501831
    2. '+=' → logprob: -1.136879801750183
    3. '=' → logprob: -12.011879920959473
    4. '+' → logprob: -13.011879920959473
    5. ']+=' → logprob: -15.636879920959473
    6. ' =' → logprob: -16.511878967285156
    7. '   ' → logprob: -16.636878967285156
    8. ' ' → logprob: -16.761878967285156
    9. ' ' → logprob: -17.011878967285156
    10. '+="' → logprob: -17.136878967285156

Token 488: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07888978719711304
    2. ' ' → logprob: -2.578889846801758
    3. ' ' → logprob: -17.453889846801758
    4. '```' → logprob: -19.453889846801758
    5. '	' → logprob: -19.953889846801758
    6. '0' → logprob: -20.328889846801758
    7. '１' → logprob: -20.703889846801758
    8. '   ' → logprob: -20.953889846801758
    9. '<|end|>' → logprob: -20.953889846801758
    10. '۱' → logprob: -20.953889846801758

Token 489: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -19.125
    4. '<|end|>' → logprob: -20.625
    5. '   ' → logprob: -21.5
    6. '0' → logprob: -21.625
    7. '１' → logprob: -21.625
    8. '۱' → logprob: -22.5
    9. '	' → logprob: -22.75
    10. '' → logprob: -23.0625

Token 490: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007168424781411886
    2. '
' → logprob: -7.250716686248779
    3. ' print' → logprob: -12.000717163085938
    4. '```' → logprob: -15.125717163085938
    5. '

' → logprob: -15.500717163085938
    6. '
' → logprob: -15.500717163085938
    7. '#' → logprob: -16.750717163085938
    8. '#print' → logprob: -17.625717163085938
    9. '  
' → logprob: -18.250717163085938
    10. ')
' → logprob: -18.500717163085938

Token 491: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5048530030981055e-06
    2. '
' → logprob: -13.750001907348633
    3. '```' → logprob: -15.250001907348633
    4. ' print' → logprob: -16.375001907348633
    5. '#' → logprob: -16.500001907348633
    6. '#print' → logprob: -17.875001907348633
    7. '
' → logprob: -20.000001907348633
    8. 'pr' → logprob: -20.125001907348633
    9. '``' → logprob: -20.250001907348633
    10. '  
' → logprob: -20.625001907348633

Token 492: ' À' (ID: 27643)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.875
    3. '#' → logprob: -18.0
    4. 'prin' → logprob: -18.875
    5. '#print' → logprob: -18.875
    6. 'pr' → logprob: -19.125
    7. '```' → logprob: -20.0
    8. 'Print' → logprob: -20.25
    9. 'prit' → logprob: -22.0
    10. '
' → logprob: -22.0

Token 493: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0024049084167927504
    2. ' print' → logprob: -6.127404689788818
    3. 'pr' → logprob: -10.377405166625977
    4. 'pp' → logprob: -10.752405166625977
    5. 'fin' → logprob: -10.877405166625977
    6. 'prin' → logprob: -10.877405166625977
    7. 'p' → logprob: -11.002405166625977
    8. '#' → logprob: -11.377405166625977
    9. 'Print' → logprob: -11.502405166625977
    10. ' la' → logprob: -11.627405166625977

Token 494: ' fin' (ID: 2131)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003957608714699745
    2. ' print' → logprob: -8.125395774841309
    3. 'fin' → logprob: -10.375395774841309
    4. '#' → logprob: -11.125395774841309
    5. '```' → logprob: -11.500395774841309
    6. 'bout' → logprob: -11.625395774841309
    7. '#print' → logprob: -12.125395774841309
    8. 'pr' → logprob: -12.500395774841309
    9. 'end' → logprob: -12.500395774841309
    10. 'final' → logprob: -12.875395774841309

Token 495: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001126763760112226
    2. ' print' → logprob: -7.001126766204834
    3. '
' → logprob: -8.501126289367676
    4. '(print' → logprob: -11.751126289367676
    5. '(
' → logprob: -14.251126289367676
    6. '#' → logprob: -14.251126289367676
    7. '(' → logprob: -14.376126289367676
    8. '()
' → logprob: -15.001126289367676
    9. '  
' → logprob: -15.001126289367676
    10. ',' → logprob: -15.001126289367676

Token 496: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3715134859085083
    2. 'print' → logprob: -1.4965134859085083
    3. 'l' → logprob: -2.4965133666992188
    4. ' la' → logprob: -6.621513366699219
    5. 'le' → logprob: -6.871513366699219
    6. '#' → logprob: -7.496513366699219
    7. 'range' → logprob: -7.746513366699219
    8. 'code' → logprob: -9.246513366699219
    9. 'ton' → logprob: -9.496513366699219
    10. 'len' → logprob: -9.496513366699219

Token 497: ' boucle' (ID: 174211)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003513125702738762
    2. 'code' → logprob: -8.875350952148438
    3. 'program' → logprob: -9.375350952148438
    4. 'range' → logprob: -10.000350952148438
    5. '#' → logprob: -10.250350952148438
    6. 'for' → logprob: -10.500350952148438
    7. 'programme' → logprob: -12.250350952148438
    8. 'bou' → logprob: -12.375350952148438
    9. 'ligne' → logprob: -13.375350952148438
    10. ' print' → logprob: -13.375350952148438

Token 498: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.167648876318708e-05
    2. '
' → logprob: -10.375041961669922
    3. ' print' → logprob: -11.750041961669922
    4. ',' → logprob: -13.875041961669922
    5. ',
' → logprob: -14.500041961669922
    6. '#' → logprob: -14.750041961669922
    7. '(print' → logprob: -15.125041961669922
    8. '#print' → logprob: -15.500041961669922
    9. '
' → logprob: -16.375041961669922
    10. '

' → logprob: -16.875041961669922

Token 499: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.615255839889869e-05
    2. ' print' → logprob: -9.250096321105957
    3. '
' → logprob: -17.50009536743164
    4. '```' → logprob: -18.00009536743164
    5. '#print' → logprob: -19.50009536743164
    6. '#' → logprob: -20.37509536743164
    7. '	print' → logprob: -21.37509536743164
    8. 'pr' → logprob: -21.62509536743164
    9. 'prin' → logprob: -21.87509536743164
    10. '.print' → logprob: -22.37509536743164

Token 500: ' effect' (ID: 3159)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.572941179503687e-05
    2. ' print' → logprob: -10.000045776367188
    3. 'pr' → logprob: -15.500045776367188
    4. '#print' → logprob: -17.750045776367188
    5. '
' → logprob: -18.000045776367188
    6. 'prin' → logprob: -18.000045776367188
    7. 'prints' → logprob: -18.250045776367188
    8. '#' → logprob: -18.250045776367188
    9. '.print' → logprob: -18.500045776367188
    10. 'Print' → logprob: -18.750045776367188

Token 501: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.00018971276585943997
    2. 'u' → logprob: -9.375189781188965
    3. 'uera' → logprob: -10.625189781188965
    4. 'print' → logprob: -11.125189781188965
    5. 'uer' → logprob: -11.125189781188965
    6. 'ué' → logprob: -11.125189781188965
    7. 'uate' → logprob: -11.375189781188965
    8. 'ure' → logprob: -11.625189781188965
    9. 'uez' → logprob: -11.625189781188965
    10. 'uent' → logprob: -12.750189781188965

Token 502: ' un' (ID: 537)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00047964724944904447
    2. '#' → logprob: -7.875479698181152
    3. ' print' → logprob: -10.125479698181152
    4. '(print' → logprob: -11.125479698181152
    5. 'l' → logprob: -11.250479698181152
    6. 'un' → logprob: -11.625479698181152
    7. '#print' → logprob: -12.000479698181152
    8. 'le' → logprob: -12.625479698181152
    9. 'la' → logprob: -12.625479698181152
    10. '```' → logprob: -12.875479698181152

Token 503: ' test' (ID: 1746)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.935296834039036e-06
    2. 'prin' → logprob: -13.75000286102295
    3. 'pr' → logprob: -14.00000286102295
    4. ' print' → logprob: -14.37500286102295
    5. '#' → logprob: -15.87500286102295
    6. '
' → logprob: -16.125003814697266
    7. '```' → logprob: -16.750003814697266
    8. '#print' → logprob: -18.125003814697266
    9. 'p' → logprob: -18.375003814697266
    10. '.print' → logprob: -19.375003814697266

Token 504: ' condition' (ID: 7060)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07017616927623749
    2. ' if' → logprob: -2.695176124572754
    3. 'print' → logprob: -9.820176124572754
    4. ':' → logprob: -10.070176124572754
    5. '
' → logprob: -10.070176124572754
    6. '   ' → logprob: -10.445176124572754
    7. '#' → logprob: -10.695176124572754
    8. ':
' → logprob: -11.570176124572754
    9. '```' → logprob: -11.695176124572754
    10. 's' → logprob: -12.320176124572754

Token 505: 'nel' (ID: 10085)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0018474860116839409
    2. ' if' → logprob: -6.876847267150879
    3. 'al' → logprob: -8.001847267150879
    4. 'print' → logprob: -8.876847267150879
    5. 'nel' → logprob: -9.251847267150879
    6. '#' → logprob: -9.376847267150879
    7. 'ale' → logprob: -9.626847267150879
    8. 'nelle' → logprob: -9.876847267150879
    9. 'e' → logprob: -11.126847267150879
    10. '   ' → logprob: -11.126847267150879

Token 506: ' pour' (ID: 1930)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006507210782729089
    2. ' if' → logprob: -7.375650882720947
    3. 'print' → logprob: -11.875650405883789
    4. '```' → logprob: -12.000650405883789
    5. ':' → logprob: -12.125650405883789
    6. ':
' → logprob: -12.375650405883789
    7. '#' → logprob: -15.000650405883789
    8. '
' → logprob: -15.250650405883789
    9. 'si' → logprob: -15.250650405883789
    10. 'If' → logprob: -15.875650405883789

Token 507: ' afficher' (ID: 146524)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008203497272916138
    2. 'aff' → logprob: -7.750820159912109
    3. 'if' → logprob: -8.00082015991211
    4. ' print' → logprob: -10.25082015991211
    5. 'voir' → logprob: -11.75082015991211
    6. 'pr' → logprob: -12.75082015991211
    7. 'prin' → logprob: -12.75082015991211
    8. '#' → logprob: -13.62582015991211
    9. ' afficher' → logprob: -13.75082015991211
    10. 'Afficher' → logprob: -14.50082015991211

Token 508: ' un' (ID: 537)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.32845088839530945
    2. 'cnt' → logprob: -1.3284509181976318
    3. '("' → logprob: -4.453450679779053
    4. '(' → logprob: -6.578450679779053
    5. 'print' → logprob: -6.828450679779053
    6. 'if' → logprob: -7.578450679779053
    7. ' cnt' → logprob: -9.328451156616211
    8. '(count' → logprob: -9.453451156616211
    9. 'le' → logprob: -9.703451156616211
    10. '[cnt' → logprob: -10.078451156616211

Token 509: ' résultat' (ID: 62556)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.28688982129096985
    2. 'if' → logprob: -1.5368897914886475
    3. 'message' → logprob: -4.786890029907227
    4. 'e' → logprob: -4.911890029907227
    5. ' print' → logprob: -5.286890029907227
    6. ' message' → logprob: -5.411890029907227
    7. ' if' → logprob: -5.411890029907227
    8. 'result' → logprob: -7.286890029907227
    9. '#' → logprob: -7.411890029907227
    10. '```' → logprob: -7.536890029907227

Token 510: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010013531893491745
    2. ' if' → logprob: -4.635013580322266
    3. 'print' → logprob: -8.510013580322266
    4. '```' → logprob: -10.510013580322266
    5. ':' → logprob: -11.260013580322266
    6. ':
' → logprob: -11.635013580322266
    7. '#' → logprob: -13.385013580322266
    8. '
' → logprob: -13.510013580322266
    9. '(
' → logprob: -14.510013580322266
    10. '(' → logprob: -14.885013580322266

Token 511: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.670925358776003e-05
    2. ' if' → logprob: -10.000066757202148
    3. 'print' → logprob: -11.000066757202148
    4. '
' → logprob: -13.000066757202148
    5. '```' → logprob: -13.500066757202148
    6. 'i' → logprob: -14.375066757202148
    7. 'If' → logprob: -16.87506675720215
    8. '\' → logprob: -16.87506675720215
    9. '\n' → logprob: -17.50006675720215
    10. ' 
' → logprob: -17.62506675720215

Token 512: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.9795445849886164e-05
    2. 'i' → logprob: -10.250060081481934
    3. 'print' → logprob: -10.750060081481934
    4. '```' → logprob: -13.375060081481934
    5. ' if' → logprob: -13.500060081481934
    6. 'If' → logprob: -18.250059127807617
    7. '
' → logprob: -18.375059127807617
    8. '#' → logprob: -19.000059127807617
    9. ' 
' → logprob: -19.250059127807617
    10. 'I' → logprob: -19.250059127807617

Token 513: ' le' (ID: 505)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.020675132051110268
    2. ' cnt' → logprob: -3.8956751823425293
    3. 'N' → logprob: -9.395674705505371
    4. '(cnt' → logprob: -10.395674705505371
    5. ' N' → logprob: -11.895674705505371
    6. 'cn' → logprob: -12.520674705505371
    7. '	cnt' → logprob: -12.645674705505371
    8. 'c' → logprob: -13.645674705505371
    9. ' ' → logprob: -14.020674705505371
    10. '   ' → logprob: -14.145674705505371

Token 514: ' nombre' (ID: 9733)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.023320946842432022
    2. ' cnt' → logprob: -3.7733209133148193
    3. 'N' → logprob: -9.898321151733398
    4. '(cnt' → logprob: -11.898321151733398
    5. ' N' → logprob: -12.273321151733398
    6. 'cn' → logprob: -12.648321151733398
    7. 'c' → logprob: -13.023321151733398
    8. '	cnt' → logprob: -13.273321151733398
    9. 'ct' → logprob: -13.523321151733398
    10. 'count' → logprob: -13.773321151733398

Token 515: ' total' (ID: 3609)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.22405600547790527
    2. '(cnt' → logprob: -1.7240560054779053
    3. ' cnt' → logprob: -3.9740560054779053
    4. '(' → logprob: -6.474056243896484
    5. '[cnt' → logprob: -7.224056243896484
    6. '>' → logprob: -7.724056243896484
    7. ' (' → logprob: -8.974056243896484
    8. '>=' → logprob: -9.099056243896484
    9. '==' → logprob: -9.599056243896484
    10. 's' → logprob: -9.724056243896484

Token 516: ' d' (ID: 272)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.09849266707897186
    2. ' des' → logprob: -3.5984926223754883
    3. ' cnt' → logprob: -4.098492622375488
    4. ' de' → logprob: -4.348492622375488
    5. 'des' → logprob: -4.973492622375488
    6. 'de' → logprob: -5.473492622375488
    7. '>' → logprob: -5.723492622375488
    8. 'd' → logprob: -5.723492622375488
    9. ' ' → logprob: -5.723492622375488
    10. '(cnt' → logprob: -5.848492622375488

Token 517: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9248171448707581
    2. ' a' → logprob: -1.5498170852661133
    3. 'cnt' → logprob: -1.6748170852661133
    4. ' cnt' → logprob: -2.5498170852661133
    5. ' ' → logprob: -2.6748170852661133
    6. ' des' → logprob: -4.299817085266113
    7. '  ' → logprob: -5.049817085266113
    8. 'des' → logprob: -5.299817085266113
    9. ' pairs' → logprob: -5.549817085266113
    10. 'pairs' → logprob: -5.674817085266113

Token 518: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.5357524156570435
    2. 'n' → logprob: -2.035752296447754
    3. 'a' → logprob: -2.535752296447754
    4. 'cnt' → logprob: -2.785752296447754
    5. 'elements' → logprob: -3.410752296447754
    6. ' éléments' → logprob: -3.535752296447754
    7. ' nombres' → logprob: -4.160752296447754
    8. 'numbers' → logprob: -4.285752296447754
    9. 'val' → logprob: -4.535752296447754
    10. 'num' → logprob: -4.785752296447754

Token 519: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.1030733585357666
    2. 'éments' → logprob: -2.9780733585357666
    3. 'ements' → logprob: -3.1030733585357666
    4. 'ment' → logprob: -7.1030731201171875
    5. 'é' → logprob: -7.8530731201171875
    6. 'ents' → logprob: -8.478073120117188
    7. '```' → logprob: -8.603073120117188
    8. 'm' → logprob: -9.103073120117188
    9. 'è' → logprob: -9.228073120117188
    10. 'ément' → logprob: -9.353073120117188

Token 520: ' (' (ID: 350)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.8831781148910522
    2. ' <=' → logprob: -1.7581781148910522
    3. ' >=' → logprob: -2.383178234100342
    4. ' ' → logprob: -3.008178234100342
    5. ' cnt' → logprob: -3.258178234100342
    6. '<=' → logprob: -3.383178234100342
    7. '>' → logprob: -3.508178234100342
    8. ' est' → logprob: -3.758178234100342
    9. '>=' → logprob: -3.883178234100342
    10. 's' → logprob: -3.883178234100342

Token 521: 'N' (ID: 45)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.010697594843804836
    2. ' cnt' → logprob: -5.135697364807129
    3. 'N' → logprob: -5.385697364807129
    4. '(cnt' → logprob: -9.385697364807129
    5. ' N' → logprob: -9.885697364807129
    6. '[cnt' → logprob: -11.510697364807129
    7. '	cnt' → logprob: -12.260697364807129
    8. 'a' → logprob: -12.510697364807129
    9. 'len' → logprob: -12.635697364807129
    10. 'n' → logprob: -12.760697364807129

Token 522: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7824472784996033
    2. ' ==' → logprob: -1.407447338104248
    3. ' >' → logprob: -2.157447338104248
    4. '==' → logprob: -2.407447338104248
    5. '>' → logprob: -2.907447338104248
    6. ' <=' → logprob: -4.157447338104248
    7. ' )' → logprob: -4.532447338104248
    8. '<=' → logprob: -5.657447338104248
    9. ' !=' → logprob: -6.032447338104248
    10. '%' → logprob: -6.907447338104248

Token 523: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47852832078933716
    2. ' ==' → logprob: -1.1035282611846924
    3. ' >' → logprob: -3.8535282611846924
    4. '>' → logprob: -4.1035284996032715
    5. '<=' → logprob: -5.3535284996032715
    6. ' <=' → logprob: -5.8535284996032715
    7. '>=' → logprob: -6.8535284996032715
    8. '!=' → logprob: -7.1035284996032715
    9. ' !=' → logprob: -7.7285284996032715
    10. '%' → logprob: -7.9785284996032715

Token 524: ' égal' (ID: 15059)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.9797793626785278
    2. '0' → logprob: -2.3547792434692383
    3. 'not' → logprob: -2.3547792434692383
    4. ' not' → logprob: -2.3547792434692383
    5. ' ' → logprob: -2.6047792434692383
    6. ' cnt' → logprob: -2.7297792434692383
    7. '>' → logprob: -2.8547792434692383
    8. '(cnt' → logprob: -3.6047792434692383
    9. '==' → logprob: -3.9797792434692383
    10. '=' → logprob: -4.229779243469238

Token 525: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3602571189403534
    2. 'à' → logprob: -1.9852571487426758
    3. ')' → logprob: -2.485257148742676
    4. ' ' → logprob: -3.860257148742676
    5. ' au' → logprob: -4.735257148742676
    6. '<|end|>' → logprob: -4.735257148742676
    7. 'au' → logprob: -4.860257148742676
    8. '=' → logprob: -4.985257148742676
    9. 'cnt' → logprob: -4.985257148742676
    10. '(cnt' → logprob: -5.360257148742676

Token 526: ' compteur' (ID: 163344)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.000273971410933882
    2. ' cnt' → logprob: -8.250273704528809
    3. '0' → logprob: -12.000273704528809
    4. '1' → logprob: -13.500273704528809
    5. ' ' → logprob: -13.875273704528809
    6. '(cnt' → logprob: -14.125273704528809
    7. '	cnt' → logprob: -14.250273704528809
    8. 'count' → logprob: -14.625273704528809
    9. '[cnt' → logprob: -14.750273704528809
    10. 'ct' → logprob: -15.000273704528809

Token 527: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03932953253388405
    2. ',' → logprob: -3.4143295288085938
    3. ':
' → logprob: -6.164329528808594
    4. 'cnt' → logprob: -6.164329528808594
    5. ' :' → logprob: -6.914329528808594
    6. '(cnt' → logprob: -8.664329528808594
    7. 'print' → logprob: -8.914329528808594
    8. ' ,' → logprob: -10.164329528808594
    9. ' cnt' → logprob: -10.539329528808594
    10. '):' → logprob: -10.914329528808594

Token 528: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.008958564139902592
    2. ' cnt' → logprob: -4.758958339691162
    3. ')' → logprob: -8.13395881652832
    4. '):' → logprob: -11.25895881652832
    5. '(cnt' → logprob: -11.38395881652832
    6. '),' → logprob: -11.63395881652832
    7. '):
' → logprob: -11.88395881652832
    8. '	cnt' → logprob: -13.13395881652832
    9. '
' → logprob: -13.25895881652832
    10. ' )' → logprob: -13.38395881652832

Token 529: '),
' (ID: 2313)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6980365514755249
    2. '):' → logprob: -0.6980365514755249
    3. ' and' → logprob: -6.1980366706848145
    4. ')' → logprob: -6.8230366706848145
    5. '):
' → logprob: -7.1980366706848145
    6. ':
' → logprob: -7.5730366706848145
    7. 'and' → logprob: -8.198036193847656
    8. ',' → logprob: -9.073036193847656
    9. ' :' → logprob: -10.448036193847656
    10. ' ):' → logprob: -10.823036193847656

Token 530: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6994320750236511
    2. 'print' → logprob: -0.6994320750236511
    3. ':' → logprob: -5.824431896209717
    4. ' print' → logprob: -6.449431896209717
    5. '   ' → logprob: -6.949431896209717
    6. ' if' → logprob: -7.324431896209717
    7. ':
' → logprob: -9.199432373046875
    8. '#' → logprob: -12.824432373046875
    9. '):' → logprob: -13.324432373046875
    10. ' :' → logprob: -13.824432373046875

Token 531: ' cela' (ID: 17542)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01119246892631054
    2. 'if' → logprob: -4.511192321777344
    3. ' print' → logprob: -9.011192321777344
    4. '   ' → logprob: -11.136192321777344
    5. ' if' → logprob: -12.136192321777344
    6. ':' → logprob: -13.511192321777344
    7. ':
' → logprob: -14.511192321777344
    8. '#' → logprob: -14.761192321777344
    9. '	print' → logprob: -16.261192321777344
    10. '```' → logprob: -16.261192321777344

Token 532: ' signifie' (ID: 81149)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22576746344566345
    2. 'print' → logprob: -1.7257674932479858
    3. ':
' → logprob: -3.9757673740386963
    4. ' print' → logprob: -5.350767612457275
    5. 'if' → logprob: -8.100767135620117
    6. ' :' → logprob: -8.975767135620117
    7. '
' → logprob: -10.600767135620117
    8. '   ' → logprob: -10.725767135620117
    9. '#' → logprob: -10.850767135620117
    10. '.print' → logprob: -11.100767135620117

Token 533: ' que' (ID: 661)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20660749077796936
    2. ' que' → logprob: -2.0816075801849365
    3. '   ' → logprob: -3.0816075801849365
    4. ' print' → logprob: -4.831607341766357
    5. ' that' → logprob: -5.206607341766357
    6. '#' → logprob: -6.831607341766357
    7. 'que' → logprob: -7.706607341766357
    8. 'that' → logprob: -8.206607818603516
    9. '    ' → logprob: -8.831607818603516
    10. ' qu' → logprob: -9.081607818603516

Token 534: ' tous' (ID: 10688)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47171369194984436
    2. ' print' → logprob: -1.846713662147522
    3. ' cnt' → logprob: -2.3467137813568115
    4. 'cnt' → logprob: -2.5967137813568115
    5. ' True' → logprob: -3.9717137813568115
    6. ' all' → logprob: -4.221713542938232
    7. 'True' → logprob: -5.346713542938232
    8. 'all' → logprob: -5.596713542938232
    9. ' ' → logprob: -6.471713542938232
    10. ' tous' → logprob: -6.971713542938232

Token 535: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.0047328416258096695
    2. ' ' → logprob: -6.129732608795166
    3. ' the' → logprob: -6.754732608795166
    4. 'les' → logprob: -7.754732608795166
    5. ' le' → logprob: -8.504733085632324
    6. ' la' → logprob: -8.629733085632324
    7. ' l' → logprob: -9.004733085632324
    8. ' ceux' → logprob: -9.379733085632324
    9. ' ' → logprob: -9.504733085632324
    10. ' print' → logprob: -10.129733085632324

Token 536: ' nombres' (ID: 76205)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.15993250906467438
    2. ' nombres' → logprob: -2.9099326133728027
    3. ' éléments' → logprob: -3.2849326133728027
    4. 'nombre' → logprob: -3.6599326133728027
    5. 'elements' → logprob: -4.409932613372803
    6. 'num' → logprob: -5.159932613372803
    7. 'a' → logprob: -5.409932613372803
    8. 'n' → logprob: -5.784932613372803
    9. 'numbers' → logprob: -6.409932613372803
    10. 'él' → logprob: -7.659932613372803

Token 537: ' respect' (ID: 5618)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.4977515935897827
    2. 's' → logprob: -1.2477515935897827
    3. 'print' → logprob: -2.8727517127990723
    4. ' rempl' → logprob: -4.122751712799072
    5. ' ont' → logprob: -4.247751712799072
    6. 'avaient' → logprob: -5.247751712799072
    7. ' sont' → logprob: -6.372751712799072
    8. 'aff' → logprob: -6.747751712799072
    9. 'rem' → logprob: -6.872751712799072
    10. 'éta' → logprob: -6.872751712799072

Token 538: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -5.676981345459353e-06
    2. 'aient' → logprob: -12.750005722045898
    3. 'e' → logprob: -13.750005722045898
    4. '```' → logprob: -14.125005722045898
    5. '#' → logprob: -15.125005722045898
    6. 'ont' → logprob: -15.625005722045898
    7. 'ant' → logprob: -15.750005722045898
    8. '(ent' → logprob: -16.6250057220459
    9. ' ent' → logprob: -17.0000057220459
    10. '   ' → logprob: -17.3750057220459

Token 539: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2015451043844223
    2. '   ' → logprob: -3.076545000076294
    3. '"' → logprob: -3.451545000076294
    4. ' N' → logprob: -3.951545000076294
    5. '  ' → logprob: -4.201545238494873
    6. 'cnt' → logprob: -4.201545238494873
    7. '(cnt' → logprob: -4.701545238494873
    8. '(N' → logprob: -4.951545238494873
    9. '<|end|>' → logprob: -5.201545238494873
    10. ' cnt' → logprob: -5.576545238494873

Token 540: ' conditions' (ID: 6409)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.610583484172821
    2. ' conditions' → logprob: -0.860583484172821
    3. 'condition' → logprob: -3.860583543777466
    4. ' condition' → logprob: -5.235583305358887
    5. 'cond' → logprob: -5.860583305358887
    6. ' ' → logprob: -6.235583305358887
    7. ' crit' → logprob: -8.485583305358887
    8. '  ' → logprob: -8.610583305358887
    9. ' condiciones' → logprob: -8.610583305358887
    10. ' cons' → logprob: -8.735583305358887

Token 541: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7033525705337524
    2. ':
' → logprob: -0.7033525705337524
    3. 'print' → logprob: -4.953352451324463
    4. 'if' → logprob: -5.828352451324463
    5. '   ' → logprob: -10.328352928161621
    6. '.' → logprob: -10.453352928161621
    7. ' print' → logprob: -10.703352928161621
    8. ' :
' → logprob: -11.078352928161621
    9. ' :' → logprob: -11.578352928161621
    10. ' if' → logprob: -11.703352928161621

Token 542: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00035274302354082465
    2. 'print' → logprob: -8.00035285949707
    3. ' if' → logprob: -11.37535285949707
    4. '
' → logprob: -12.12535285949707
    5. '```' → logprob: -15.50035285949707
    6. '  
' → logprob: -17.12535285949707
    7. ' 
' → logprob: -17.25035285949707
    8. '#' → logprob: -17.37535285949707
    9. '    
' → logprob: -17.87535285949707
    10. '
' → logprob: -18.12535285949707

Token 543: ' L' (ID: 451)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2233183042553719e-05
    2. 'print' → logprob: -11.375012397766113
    3. ' if' → logprob: -14.250012397766113
    4. '```' → logprob: -16.875011444091797
    5. '#' → logprob: -18.875011444091797
    6. '   ' → logprob: -20.750011444091797
    7. '
' → logprob: -21.375011444091797
    8. 'If' → logprob: -21.625011444091797
    9. '	if' → logprob: -21.750011444091797
    10. 'for' → logprob: -22.250011444091797

Token 544: ''ex' (ID: 23472)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1780671924352646
    2. 'if' → logprob: -1.9280672073364258
    3. ' print' → logprob: -4.303067207336426
    4. '#' → logprob: -6.553067207336426
    5. 'e' → logprob: -6.553067207336426
    6. '```' → logprob: -7.678067207336426
    7. ' if' → logprob: -8.428067207336426
    8. '   ' → logprob: -8.803067207336426
    9. 'i' → logprob: -8.803067207336426
    10. 'p' → logprob: -9.553067207336426

Token 545: 'pression' (ID: 4521)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06623013317584991
    2. 'print' → logprob: -3.816230058670044
    3. 'p' → logprob: -4.441230297088623
    4. 'ecution' → logprob: -5.191230297088623
    5. 'pression' → logprob: -5.566230297088623
    6. 'écution' → logprob: -5.566230297088623
    7. 'planation' → logprob: -5.691230297088623
    8. '```' → logprob: -5.816230297088623
    9. 'ec' → logprob: -6.066230297088623
    10. 'elif' → logprob: -6.441230297088623

Token 546: ' '' (ID: 461)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07369408756494522
    2. '"' → logprob: -3.6986939907073975
    3. 'cnt' → logprob: -3.6986939907073975
    4. ' print' → logprob: -4.698694229125977
    5. 'if' → logprob: -5.073694229125977
    6. ' cnt' → logprob: -6.448694229125977
    7. 'N' → logprob: -6.823694229125977
    8. '"N' → logprob: -7.073694229125977
    9. ' N' → logprob: -7.198694229125977
    10. ''' → logprob: -7.573694229125977

Token 547: 'APP' (ID: 13444)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.19503375887870789
    2. 'cnt' → logprob: -2.5700337886810303
    3. 'print' → logprob: -3.1950337886810303
    4. '"N' → logprob: -3.4450337886810303
    5. ' "' → logprob: -4.820033550262451
    6. ' cnt' → logprob: -5.570033550262451
    7. ''' → logprob: -5.695033550262451
    8. '"A' → logprob: -5.695033550262451
    9. '"T' → logprob: -5.945033550262451
    10. 'N' → logprob: -6.820033550262451

Token 548: 'RO' (ID: 2013)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4642997086048126
    2. 'r' → logprob: -1.9642996788024902
    3. 'LE' → logprob: -2.8392996788024902
    4. 'R' → logprob: -2.9642996788024902
    5. 'le' → logprob: -3.8392996788024902
    6. 'LES' → logprob: -3.9642996788024902
    7. 'L' → logprob: -4.33929967880249
    8. 'end' → logprob: -4.58929967880249
    9. 'les' → logprob: -4.83929967880249
    10. 'END' → logprob: -4.83929967880249

Token 549: 'VED' (ID: 85770)
  Prédit: 'VED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VED' → logprob: -0.5983830094337463
    2. 'UV' → logprob: -1.9733829498291016
    3. 'PRI' → logprob: -2.3483829498291016
    4. 'VE' → logprob: -2.5983829498291016
    5. 'PR' → logprob: -2.5983829498291016
    6. 'U' → logprob: -4.098382949829102
    7. 'RO' → logprob: -4.473382949829102
    8. 'R' → logprob: -5.348382949829102
    9. 'D' → logprob: -5.348382949829102
    10. 'V' → logprob: -5.473382949829102

Token 550: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2875003516674042
    2. '"' → logprob: -1.9125003814697266
    3. 'if' → logprob: -3.0375003814697266
    4. ' if' → logprob: -3.1625003814697266
    5. '')' → logprob: -5.037500381469727
    6. '")' → logprob: -6.662500381469727
    7. '```' → logprob: -6.787500381469727
    8. 'print' → logprob: -7.537500381469727
    9. 'else' → logprob: -8.037500381469727
    10. 'ed' → logprob: -8.412500381469727

Token 551: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18695691227912903
    2. ' if' → logprob: -2.1869568824768066
    3. 'if' → logprob: -3.1869568824768066
    4. ')' → logprob: -4.686956882476807
    5. ' print' → logprob: -4.936956882476807
    6. ',' → logprob: -8.686957359313965
    7. 'else' → logprob: -9.436957359313965
    8. '
' → logprob: -9.686957359313965
    9. ' )' → logprob: -10.311957359313965
    10. '=' → logprob: -10.436957359313965

Token 552: ' N' (ID: 478)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.11740873754024506
    2. 'N' → logprob: -2.6174087524414062
    3. ' cnt' → logprob: -3.3674087524414062
    4. ' N' → logprob: -5.742408752441406
    5. '(cnt' → logprob: -9.492408752441406
    6. ' ' → logprob: -12.242408752441406
    7. '	cnt' → logprob: -12.367408752441406
    8. 'count' → logprob: -12.992408752441406
    9. ' ' → logprob: -13.242408752441406
    10. 'cn' → logprob: -13.367408752441406

Token 553: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6326210498809814
    2. '==' → logprob: -0.7576210498809814
    3. '=' → logprob: -11.257620811462402
    4. ' ' → logprob: -13.132620811462402
    5. '==
' → logprob: -13.382620811462402
    6. '===' → logprob: -14.007620811462402
    7. '<=' → logprob: -14.132620811462402
    8. ')' → logprob: -14.382620811462402
    9. ' =' → logprob: -14.382620811462402
    10. ')==' → logprob: -14.507620811462402

Token 554: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.018158255144953728
    2. ' cnt' → logprob: -4.018158435821533
    3. '	cnt' → logprob: -12.018157958984375
    4. '(cnt' → logprob: -13.518157958984375
    5. ' ' → logprob: -15.393157958984375
    6. '[cnt' → logprob: -15.518157958984375
    7. '   ' → logprob: -15.768157958984375
    8. 'ct' → logprob: -16.268157958984375
    9. 'count' → logprob: -16.268157958984375
    10. ' ' → logprob: -17.018157958984375

Token 555: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2020624279975891
    2. 'else' → logprob: -1.7020623683929443
    3. 'print' → logprob: -7.452062606811523
    4. ' ' → logprob: -10.452062606811523
    5. ' print' → logprob: -10.577062606811523
    6. '```' → logprob: -12.327062606811523
    7. ' ' → logprob: -12.952062606811523
    8. ':' → logprob: -13.452062606811523
    9. '   ' → logprob: -13.452062606811523
    10. ')' → logprob: -13.952062606811523

Token 556: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1017499789595604
    2. ' '' → logprob: -2.351749897003174
    3. '"' → logprob: -6.601749897003174
    4. '   ' → logprob: -9.976750373840332
    5. ' ' → logprob: -10.101750373840332
    6. ''Re' → logprob: -10.226750373840332
    7. ' "' → logprob: -10.601750373840332
    8. '    ' → logprob: -11.601750373840332
    9. ''S' → logprob: -11.976750373840332
    10. ' ' → logprob: -12.476750373840332

Token 557: 'DEN' (ID: 109767)
  Prédit: 'RE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RE' → logprob: -0.038448113948106766
    2. 'DEN' → logprob: -3.2884480953216553
    3. 'FAILED' → logprob: -8.788448333740234
    4. 'DIS' → logprob: -9.288448333740234
    5. 'NOT' → logprob: -9.663448333740234
    6. 'REF' → logprob: -9.913448333740234
    7. 'DECL' → logprob: -11.163448333740234
    8. ' RE' → logprob: -11.413448333740234
    9. ''' → logprob: -11.913448333740234
    10. 'KO' → logprob: -12.663448333740234

Token 558: 'IED' (ID: 17589)
  Prédit: 'IED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IED' → logprob: -8.506661833962426e-05
    2. 'Y' → logprob: -9.50008487701416
    3. 'I' → logprob: -12.12508487701416
    4. 'IAL' → logprob: -13.62508487701416
    5. 'N' → logprob: -13.75008487701416
    6. 'ied' → logprob: -13.87508487701416
    7. 'ED' → logprob: -15.37508487701416
    8. 'IABLE' → logprob: -15.50008487701416
    9. 'IER' → logprob: -15.62508487701416
    10. '```' → logprob: -15.75008487701416

Token 559: ''' (ID: 6)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6049409508705139
    2. ''' → logprob: -0.9799409508705139
    3. ')' → logprob: -2.979940891265869
    4. '')' → logprob: -3.854940891265869
    5. '']' → logprob: -5.854940891265869
    6. '"' → logprob: -6.979940891265869
    7. ']' → logprob: -7.604940891265869
    8. ' print' → logprob: -7.604940891265869
    9. 'APP' → logprob: -7.854940891265869
    10. '")' → logprob: -8.104941368103027

Token 560: ' utilise' (ID: 70283)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0018883032025769353
    2. ')' → logprob: -6.376888275146484
    3. ' print' → logprob: -9.001888275146484
    4. ')
' → logprob: -10.751888275146484
    5. '<|end|>' → logprob: -11.251888275146484
    6. '
' → logprob: -11.501888275146484
    7. ',' → logprob: -12.376888275146484
    8. '```' → logprob: -12.626888275146484
    9. ']' → logprob: -13.001888275146484
    10. '(print' → logprob: -13.376888275146484

Token 561: ' le' (ID: 505)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06788481026887894
    2. '"' → logprob: -2.817884922027588
    3. 'print' → logprob: -5.317884922027588
    4. ' a' → logprob: -8.31788444519043
    5. ' '' → logprob: -8.69288444519043
    6. ''app' → logprob: -9.69288444519043
    7. ' ' → logprob: -9.94288444519043
    8. ''a' → logprob: -9.94288444519043
    9. ''t' → logprob: -10.06788444519043
    10. ' print' → logprob: -10.19288444519043

Token 562: ' ter' (ID: 3069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05600310489535332
    2. '"' → logprob: -3.9310030937194824
    3. ''' → logprob: -3.9310030937194824
    4. 'tern' → logprob: -4.681003093719482
    5. ' print' → logprob: -6.181003093719482
    6. ' tern' → logprob: -6.431003093719482
    7. 'prin' → logprob: -7.806003093719482
    8. 'conditional' → logprob: -7.931003093719482
    9. '
' → logprob: -8.30600357055664
    10. 'ter' → logprob: -8.80600357055664

Token 563: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.04017570987343788
    2. 'n' → logprob: -3.415175676345825
    3. ''' → logprob: -5.790175914764404
    4. '```' → logprob: -6.665175914764404
    5. '"' → logprob: -7.290175914764404
    6. 'rn' → logprob: -7.915175914764404
    7. '

' → logprob: -8.290175437927246
    8. 'ary' → logprob: -8.415175437927246
    9. '``' → logprob: -9.290175437927246
    10. 'inary' → logprob: -9.540175437927246

Token 564: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008114629425108433
    2. ' print' → logprob: -5.133114814758301
    3. ''' → logprob: -6.383114814758301
    4. '"' → logprob: -8.5081148147583
    5. '('' → logprob: -9.3831148147583
    6. 'APP' → logprob: -10.2581148147583
    7. ')' → logprob: -10.2581148147583
    8. ' '' → logprob: -10.2581148147583
    9. ':' → logprob: -11.1331148147583
    10. ',' → logprob: -11.3831148147583

Token 565: 'op' (ID: 467)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3011825680732727
    2. '"' → logprob: -1.426182508468628
    3. 'print' → logprob: -4.801182746887207
    4. ' '' → logprob: -5.301182746887207
    5. ')' → logprob: -5.426182746887207
    6. ' "' → logprob: -7.426182746887207
    7. ''A' → logprob: -7.551182746887207
    8. 'APP' → logprob: -8.176182746887207
    9. ''app' → logprob: -8.426182746887207
    10. '"A' → logprob: -9.676182746887207

Token 566: 'érateur' (ID: 108528)
  Prédit: 'érateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érateur' → logprob: -0.9858661890029907
    2. 'er' → logprob: -1.3608661890029907
    3. 'r' → logprob: -1.8608661890029907
    4. '```' → logprob: -2.360866069793701
    5. 'naire' → logprob: -2.985866069793701
    6. 'ér' → logprob: -3.735866069793701
    7. 'ERATOR' → logprob: -4.985866069793701
    8. 'ération' → logprob: -5.860866069793701
    9. 'print' → logprob: -5.985866069793701
    10. 'ar' → logprob: -6.110866069793701

Token 567: ' condition' (ID: 7060)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.0045867725275456905
    2. 'conditional' → logprob: -6.629586696624756
    3. 'condition' → logprob: -6.754586696624756
    4. ' ?' → logprob: -7.254586696624756
    5. ' conditional' → logprob: -7.504586696624756
    6. '?:' → logprob: -8.379587173461914
    7. ''' → logprob: -8.754587173461914
    8. '   ' → logprob: -9.504587173461914
    9. '1' → logprob: -10.254587173461914
    10. 'print' → logprob: -10.379587173461914

Token 568: 'nel' (ID: 10085)
  Prédit: 'naire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.04384806007146835
    2. '?' → logprob: -3.2938480377197266
    3. 'al' → logprob: -6.043848037719727
    4. 'nel' → logprob: -6.543848037719727
    5. 'nelle' → logprob: -7.793848037719727
    6. 'nal' → logprob: -7.793848037719727
    7. ''' → logprob: -8.293848037719727
    8. 'aire' → logprob: -8.418848037719727
    9. '```' → logprob: -9.168848037719727
    10. 'n' → logprob: -9.293848037719727

Token 569: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006361839361488819
    2. '')' → logprob: -5.631361961364746
    3. 'print' → logprob: -6.381361961364746
    4. ' )' → logprob: -7.381361961364746
    5. ')
' → logprob: -9.256361961364746
    6. ':' → logprob: -9.756361961364746
    7. ''' → logprob: -9.756361961364746
    8. ' print' → logprob: -10.131361961364746
    9. '")' → logprob: -10.256361961364746
    10. '```' → logprob: -10.756361961364746

Token 570: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1875571544806007e-05
    2. ' print' → logprob: -11.375011444091797
    3. ')' → logprob: -15.125011444091797
    4. '```' → logprob: -17.625011444091797
    5. 'result' → logprob: -17.750011444091797
    6. '
' → logprob: -18.250011444091797
    7. ')
' → logprob: -18.875011444091797
    8. '   ' → logprob: -19.125011444091797
    9. 'prin' → logprob: -19.750011444091797
    10. '#' → logprob: -20.875011444091797

Token 571: ' qui' (ID: 2780)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011712945997714996
    2. ' print' → logprob: -6.751171112060547
    3. '   ' → logprob: -14.376171112060547
    4. ')' → logprob: -15.001171112060547
    5. 'result' → logprob: -16.126171112060547
    6. '
' → logprob: -17.626171112060547
    7. '```' → logprob: -18.126171112060547
    8. 'output' → logprob: -18.251171112060547
    9. '	print' → logprob: -18.501171112060547
    10. ' ' → logprob: -18.751171112060547

Token 572: ' ren' (ID: 5427)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.09253749996423721
    2. 'print' → logprob: -2.4675374031066895
    3. ' affiche' → logprob: -6.4675374031066895
    4. ' prints' → logprob: -7.3425374031066895
    5. ' ' → logprob: -7.5925374031066895
    6. ' return' → logprob: -8.717537879943848
    7. ' imprime' → logprob: -9.342537879943848
    8. ' s' → logprob: -9.342537879943848
    9. ' permet' → logprob: -9.467537879943848
    10. '_print' → logprob: -9.717537879943848

Token 573: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.001990374643355608
    2. 'voit' → logprob: -6.37699031829834
    3. 'voy' → logprob: -8.87699031829834
    4. 'v' → logprob: -9.37699031829834
    5. 'voi' → logprob: -9.87699031829834
    6. 'vo' → logprob: -11.37699031829834
    7. 'ver' → logprob: -14.75199031829834
    8. 'vient' → logprob: -15.00199031829834
    9. 'voire' → logprob: -16.376991271972656
    10. 'e' → logprob: -16.626991271972656

Token 574: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3890235126018524
    2. '"' → logprob: -1.1390235424041748
    3. ' '' → logprob: -6.389023303985596
    4. ' "' → logprob: -8.264023780822754
    5. ''D' → logprob: -9.514023780822754
    6. ''app' → logprob: -9.764023780822754
    7. 'APP' → logprob: -11.264023780822754
    8. '   ' → logprob: -11.389023780822754
    9. '('' → logprob: -11.639023780822754
    10. ''"' → logprob: -11.889023780822754

Token 575: 'APP' (ID: 13444)
  Prédit: 'APP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'APP' → logprob: -0.8161004781723022
    2. ''' → logprob: -0.9411004781723022
    3. '"' → logprob: -1.8161004781723022
    4. ' '' → logprob: -5.941100597381592
    5. ' APPRO' → logprob: -6.441100597381592
    6. ' "' → logprob: -7.816100597381592
    7. '(APP' → logprob: -9.316100120544434
    8. ''D' → logprob: -9.441100120544434
    9. '_APPRO' → logprob: -10.566100120544434
    10. '.APP' → logprob: -10.691100120544434

Token 576: 'RO' (ID: 2013)
  Prédit: 'RO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RO' → logprob: -0.0008188001229427755
    2. 'R' → logprob: -7.250818729400635
    3. 'PRO' → logprob: -10.000819206237793
    4. 'ROI' → logprob: -11.625819206237793
    5. 'ROM' → logprob: -11.750819206237793
    6. '```' → logprob: -11.750819206237793
    7. '   ' → logprob: -12.125819206237793
    8. 'ROR' → logprob: -12.375819206237793
    9. 'РО' → logprob: -12.875819206237793
    10. 'APP' → logprob: -13.000819206237793

Token 577: 'VED' (ID: 85770)
  Prédit: 'VED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VED' → logprob: -3.35706390615087e-05
    2. 'V' → logprob: -11.125033378601074
    3. 'OVED' → logprob: -11.625033378601074
    4. 'ved' → logprob: -12.000033378601074
    5. '   ' → logprob: -14.125033378601074
    6. '\' → logprob: -14.125033378601074
    7. 'U' → logprob: -14.625033378601074
    8. 'VE' → logprob: -14.875033378601074
    9. 'Ved' → logprob: -15.625033378601074
    10. 'UV' → logprob: -15.750033378601074

Token 578: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3879208564758301
    2. ' if' → logprob: -1.76292085647583
    3. ' else' → logprob: -2.88792085647583
    4. '')' → logprob: -3.26292085647583
    5. ''' → logprob: -3.63792085647583
    6. 'if' → logprob: -4.51292085647583
    7. 'else' → logprob: -4.51292085647583
    8. 'print' → logprob: -6.13792085647583
    9. '<|end|>' → logprob: -6.13792085647583
    10. ' )' → logprob: -7.01292085647583

Token 579: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8204078078269958
    2. 'print' → logprob: -1.4454078674316406
    3. 'if' → logprob: -1.6954078674316406
    4. ')' → logprob: -2.4454078674316406
    5. 'else' → logprob: -3.3204078674316406
    6. ' else' → logprob: -5.070407867431641
    7. '<|end|>' → logprob: -5.320407867431641
    8. ' print' → logprob: -5.820407867431641
    9. ' ' → logprob: -7.320407867431641
    10. ',' → logprob: -7.445407867431641

Token 580: ' la' (ID: 557)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.31326404213905334
    2. ' N' → logprob: -1.313264012336731
    3. ' ' → logprob: -14.063263893127441
    4. ' ' → logprob: -14.438263893127441
    5. '	N' → logprob: -15.188263893127441
    6. '   ' → logprob: -15.938263893127441
    7. '(N' → logprob: -16.563264846801758
    8. 'cnt' → logprob: -16.813264846801758
    9. '"N' → logprob: -16.813264846801758
    10. ' all' → logprob: -16.938264846801758

Token 581: ' condition' (ID: 7060)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.026345934718847275
    2. ' N' → logprob: -3.65134596824646
    3. 'cnt' → logprob: -10.276346206665039
    4. ' ' → logprob: -12.651346206665039
    5. ' cnt' → logprob: -13.026346206665039
    6. 'n' → logprob: -13.776346206665039
    7. 'count' → logprob: -14.276346206665039
    8. '   ' → logprob: -14.526346206665039
    9. ' ' → logprob: -14.776346206665039
    10. ' condition' → logprob: -14.776346206665039

Token 582: ' est' (ID: 893)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3402872681617737
    2. ' N' → logprob: -1.340287208557129
    3. ' is' → logprob: -3.965287208557129
    4. ' else' → logprob: -5.215287208557129
    5. 'True' → logprob: -7.465287208557129
    6. ' True' → logprob: -7.840287208557129
    7. ' ' → logprob: -8.090287208557129
    8. ' true' → logprob: -8.590287208557129
    9. ' )' → logprob: -8.965287208557129
    10. 'true' → logprob: -9.215287208557129

Token 583: ' vraie' (ID: 105841)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.20194309949874878
    2. ' True' → logprob: -1.7019431591033936
    3. 'true' → logprob: -8.326943397521973
    4. ' true' → logprob: -8.826943397521973
    5. 'N' → logprob: -9.826943397521973
    6. ' N' → logprob: -10.326943397521973
    7. ' met' → logprob: -10.826943397521973
    8. 'v' → logprob: -10.826943397521973
    9. '_true' → logprob: -12.326943397521973
    10. ' ' → logprob: -12.826943397521973

Token 584: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4293125867843628
    2. 'else' → logprob: -1.4293125867843628
    3. ' else' → logprob: -2.3043127059936523
    4. ')' → logprob: -5.304312705993652
    5. ' print' → logprob: -6.054312705993652
    6. '<|end|>' → logprob: -7.054312705993652
    7. ',' → logprob: -7.429312705993652
    8. '```' → logprob: -8.304312705993652
    9. '
' → logprob: -8.429312705993652
    10. ']' → logprob: -9.679312705993652

Token 585: ' sinon' (ID: 52915)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00470175314694643
    2. ''' → logprob: -6.379701614379883
    3. ')' → logprob: -6.504701614379883
    4. ' print' → logprob: -7.254701614379883
    5. 'else' → logprob: -7.504701614379883
    6. ''D' → logprob: -9.129701614379883
    7. '   ' → logprob: -9.879701614379883
    8. '')' → logprob: -10.629701614379883
    9. ' else' → logprob: -10.879701614379883
    10. '"' → logprob: -11.629701614379883

Token 586: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20852860808372498
    2. ''D' → logprob: -1.7085286378860474
    3. ' '' → logprob: -4.958528518676758
    4. '"' → logprob: -10.333528518676758
    5. '('' → logprob: -10.958528518676758
    6. ''d' → logprob: -12.708528518676758
    7. '`' → logprob: -13.083528518676758
    8. 'DEN' → logprob: -13.458528518676758
    9. ''\' → logprob: -13.708528518676758
    10. ''S' → logprob: -13.708528518676758

Token 587: 'DEN' (ID: 109767)
  Prédit: 'DEN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEN' → logprob: -0.7236381769180298
    2. ''D' → logprob: -0.8486381769180298
    3. ''' → logprob: -2.4736380577087402
    4. ' DEN' → logprob: -6.47363805770874
    5. ' '' → logprob: -6.97363805770874
    6. '"' → logprob: -9.223638534545898
    7. '_DEN' → logprob: -9.598638534545898
    8. 'den' → logprob: -11.098638534545898
    9. ' ' → logprob: -11.848638534545898
    10. ''S' → logprob: -11.973638534545898

Token 588: 'IED' (ID: 17589)
  Prédit: 'IED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IED' → logprob: -0.00029267906211316586
    2. 'I' → logprob: -8.250292778015137
    3. '```' → logprob: -11.625292778015137
    4. 'IE' → logprob: -12.250292778015137
    5. 'ED' → logprob: -12.375292778015137
    6. 'N' → logprob: -12.375292778015137
    7. 'ied' → logprob: -13.500292778015137
    8. '   ' → logprob: -13.625292778015137
    9. 'IER' → logprob: -13.875292778015137
    10. 'Y' → logprob: -14.250292778015137

Token 589: ''.
' (ID: 49980)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25427788496017456
    2. ')' → logprob: -1.5042779445648193
    3. ' print' → logprob: -6.87927770614624
    4. ')
' → logprob: -6.87927770614624
    5. '')' → logprob: -8.754278182983398
    6. ']' → logprob: -10.129278182983398
    7. '")' → logprob: -11.129278182983398
    8. ').' → logprob: -11.504278182983398
    9. '(print' → logprob: -11.629278182983398
    10. ',' → logprob: -11.754278182983398

Token 590: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -17.25
    3. ' print' → logprob: -18.125
    4. '
' → logprob: -21.625
    5. 'prin' → logprob: -22.25
    6. 'result' → logprob: -22.75
    7. 'Print' → logprob: -24.0
    8. 'pr' → logprob: -24.875
    9. '``' → logprob: -24.875
    10. '	print' → logprob: -26.0

Token 591: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.012536022812128067
    2. '("' → logprob: -4.51253604888916
    3. '(' → logprob: -6.51253604888916
    4. '(('' → logprob: -13.51253604888916
    5. '((' → logprob: -14.51253604888916
    6. ' ('' → logprob: -15.63753604888916
    7. '()' → logprob: -15.76253604888916
    8. ''' → logprob: -16.012535095214844
    9. '(
' → logprob: -16.512535095214844
    10. '(""' → logprob: -17.887535095214844

Token 592: 'APP' (ID: 13444)
  Prédit: 'APP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'APP' → logprob: -3.128163257315464e-07
    2. ''' → logprob: -15.375
    3. ' APPRO' → logprob: -17.875
    4. 'AP' → logprob: -19.5
    5. '_APPRO' → logprob: -20.5
    6. '')' → logprob: -20.75
    7. '(APP' → logprob: -21.5
    8. '.APP' → logprob: -21.625
    9. 'DEN' → logprob: -21.875
    10. 'Approved' → logprob: -21.875

Token 593: 'RO' (ID: 2013)
  Prédit: 'RO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RO' → logprob: -3.292907877039397e-06
    2. 'R' → logprob: -13.00000286102295
    3. 'ROY' → logprob: -14.25000286102295
    4. 'ro' → logprob: -16.375003814697266
    5. 'РО' → logprob: -16.375003814697266
    6. 'ROI' → logprob: -17.000003814697266
    7. 'PRO' → logprob: -17.125003814697266
    8. 'ROM' → logprob: -18.500003814697266
    9. 'OVED' → logprob: -18.750003814697266
    10. 'ROW' → logprob: -18.875003814697266

Token 594: 'VED' (ID: 85770)
  Prédit: 'VED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VED' → logprob: -6.704273118884885e-07
    2. 'ved' → logprob: -14.500000953674316
    3. 'V' → logprob: -16.375
    4. 'OVED' → logprob: -18.375
    5. 'Ved' → logprob: -19.125
    6. 'ED' → logprob: -19.875
    7. 'VE' → logprob: -20.75
    8. 'RED' → logprob: -20.875
    9. 'VER' → logprob: -21.875
    10. '\' → logprob: -21.875

Token 595: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -4.584861744660884e-05
    2. '')' → logprob: -10.000045776367188
    3. '"' → logprob: -14.750045776367188
    4. 'if' → logprob: -17.125045776367188
    5. ' if' → logprob: -18.125045776367188
    6. ''''' → logprob: -18.625045776367188
    7. ' '' → logprob: -19.000045776367188
    8. ')'' → logprob: -19.750045776367188
    9. '''' → logprob: -20.375045776367188
    10. '',' → logprob: -20.375045776367188

Token 596: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.030119433999061584
    2. 'if' → logprob: -3.5301194190979004
    3. ')' → logprob: -7.9051194190979
    4. ' )' → logprob: -17.405118942260742
    5. '	if' → logprob: -18.155118942260742
    6. ' ' → logprob: -18.405118942260742
    7. '```' → logprob: -18.530118942260742
    8. ''' → logprob: -18.780118942260742
    9. '()' → logprob: -18.780118942260742
    10. ',' → logprob: -19.030118942260742

Token 597: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.20141403377056122
    2. ' N' → logprob: -1.7014139890670776
    3. ' ' → logprob: -14.951414108276367
    4. '	N' → logprob: -15.076414108276367
    5. ' ' → logprob: -15.826414108276367
    6. ')' → logprob: -17.576414108276367
    7. '   ' → logprob: -17.951414108276367
    8. 'n' → logprob: -18.576414108276367
    9. '(N' → logprob: -18.576414108276367
    10. '  ' → logprob: -18.826414108276367

Token 598: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38687872886657715
    2. '==' → logprob: -1.1368787288665771
    3. '=' → logprob: -11.886878967285156
    4. ')' → logprob: -15.261878967285156
    5. ' =' → logprob: -15.511878967285156
    6. '==
' → logprob: -15.886878967285156
    7. ')==' → logprob: -16.011878967285156
    8. ' ' → logprob: -16.761878967285156
    9. ' ' → logprob: -16.886878967285156
    10. ' ==
' → logprob: -17.386878967285156

Token 599: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.1602276712656021
    2. ' cnt' → logprob: -1.910227656364441
    3. '	cnt' → logprob: -13.41022777557373
    4. '(cnt' → logprob: -13.53522777557373
    5. '[cnt' → logprob: -15.41022777557373
    6. '_cnt' → logprob: -15.53522777557373
    7. 'count' → logprob: -15.66022777557373
    8. ' ' → logprob: -16.035226821899414
    9. 'counter' → logprob: -17.035226821899414
    10. 'Cnt' → logprob: -17.785226821899414

Token 600: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5760092735290527
    2. ' else' → logprob: -0.8260092735290527
    3. ')' → logprob: -9.826009750366211
    4. '	else' → logprob: -11.576009750366211
    5. '```' → logprob: -12.826009750366211
    6. ' )' → logprob: -14.076009750366211
    7. ',' → logprob: -14.576009750366211
    8. '
' → logprob: -14.826009750366211
    9. ' ' → logprob: -14.826009750366211
    10. '   ' → logprob: -15.076009750366211

Token 601: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3875805139541626
    2. ' '' → logprob: -1.1375805139541626
    3. ''D' → logprob: -7.262580394744873
    4. '"' → logprob: -12.762580871582031
    5. ' ' → logprob: -13.387580871582031
    6. '('' → logprob: -13.512580871582031
    7. ' ' → logprob: -13.637580871582031
    8. ''S' → logprob: -15.012580871582031
    9. ')' → logprob: -15.137580871582031
    10. '	' → logprob: -16.38758087158203

Token 602: 'DEN' (ID: 109767)
  Prédit: 'DEN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEN' → logprob: -0.00017946491425391287
    2. ''D' → logprob: -8.750179290771484
    3. ''' → logprob: -11.000179290771484
    4. ' DEN' → logprob: -12.500179290771484
    5. '_DEN' → logprob: -14.625179290771484
    6. 'DE' → logprob: -17.375179290771484
    7. 'Denied' → logprob: -17.625179290771484
    8. 'D' → logprob: -18.625179290771484
    9. '''' → logprob: -19.000179290771484
    10. 'DN' → logprob: -19.250179290771484

Token 603: 'IED' (ID: 17589)
  Prédit: 'IED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IED' → logprob: -8.292095299111679e-05
    2. 'ED' → logprob: -9.750082969665527
    3. 'I' → logprob: -10.625082969665527
    4. 'Y' → logprob: -16.12508201599121
    5. 'TED' → logprob: -16.87508201599121
    6. 'ied' → logprob: -17.50008201599121
    7. 'IE' → logprob: -17.62508201599121
    8. 'N' → logprob: -17.75008201599121
    9. 'IER' → logprob: -17.87508201599121
    10. '1' → logprob: -18.50008201599121

Token 604: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026300468016415834
    2. '')' → logprob: -8.250263214111328
    3. '))' → logprob: -14.375263214111328
    4. '")' → logprob: -14.750263214111328
    5. ' )' → logprob: -15.125263214111328
    6. '())' → logprob: -15.625263214111328
    7. '`)' → logprob: -16.000263214111328
    8. ')")' → logprob: -16.250263214111328
    9. '})' → logprob: -16.750263214111328
    10. '()' → logprob: -17.375263214111328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 602
Tokens correctement prédits (1ère position, stricte): 180
Tokens correctement prédits (1ère position, avec adaptation): 183
Tokens correctement prédits (top 10): 366
Précision stricte (1ère position): 29.90%
Précision adaptée (1ère position): 30.40%
Précision (top 10): 60.80%
================================================================================
