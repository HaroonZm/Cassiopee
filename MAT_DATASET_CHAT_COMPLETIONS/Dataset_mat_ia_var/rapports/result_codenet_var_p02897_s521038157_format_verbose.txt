================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
nombre_entier_saisi = int(input())

if nombre_entier_saisi % 2 == 1:
    
    numerateur = nombre_entier_saisi + 1
    denominateur = float(nombre_entier_saisi)
    resultat = numerateur / 2 / denominateur
    print(resultat)

else:
    
    numerateur = nombre_entier_saisi
    denominateur = nombre_entier_saisi
    resultat = numerateur / 2 / denominateur
    print(resultat)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'nombre' (ID: 28576)
  → Token d'amorce (pas de prédiction)

Token 1: '_ent' (ID: 66249)
  → Token d'amorce (pas de prédiction)

Token 2: 'ier' (ID: 905)
  → Token d'amorce (pas de prédiction)

Token 3: '_s' (ID: 1278)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6585304141044617
    2. '=' → logprob: -1.5335304737091064
    3. '[' → logprob: -1.9085304737091064
    4. ' =' → logprob: -2.2835304737091064
    5. '_nombre' → logprob: -5.283530235290527
    6. '[]' → logprob: -6.283530235290527
    7. '.' → logprob: -6.408530235290527
    8. '```' → logprob: -6.908530235290527
    9. '[:]' → logprob: -7.158530235290527
    10. '__' → logprob: -7.283530235290527

Token 4: 'aisi' (ID: 151228)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6953330039978027
    2. 'm' → logprob: -1.8203330039978027
    3. '_' → logprob: -2.1953330039978027
    4. ' =' → logprob: -2.1953330039978027
    5. '=' → logprob: -3.4453330039978027
    6. 'r' → logprob: -4.070333003997803
    7. 'ur' → logprob: -4.070333003997803
    8. 'u' → logprob: -4.445333003997803
    9. 't' → logprob: -4.820333003997803
    10. 'x' → logprob: -5.195333003997803

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5129649639129639
    2. '_' → logprob: -1.6379649639129639
    3. ' =' → logprob: -1.8879649639129639
    4. '[' → logprob: -3.387964963912964
    5. '(' → logprob: -4.762965202331543
    6. ')' → logprob: -5.137965202331543
    7. ' ' → logprob: -5.762965202331543
    8. '.' → logprob: -6.262965202331543
    9. '```' → logprob: -8.387965202331543
    10. '#' → logprob: -8.512965202331543

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4300704896450043
    2. ' input' → logprob: -1.4300705194473267
    3. ' int' → logprob: -2.930070400238037
    4. 'input' → logprob: -3.055070400238037
    5. '0' → logprob: -5.430070400238037
    6. 'int' → logprob: -5.555070400238037
    7. ' "' → logprob: -7.305070400238037
    8. '  ' → logprob: -8.805070877075195
    9. ' ' → logprob: -8.930070877075195
    10. ' ""' → logprob: -9.305070877075195

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009817203972488642
    2. '<|end|>' → logprob: -7.50098180770874
    3. '('' → logprob: -8.875981330871582
    4. '()' → logprob: -9.500981330871582
    5. '("("' → logprob: -10.125981330871582
    6. '```' → logprob: -10.250981330871582
    7. 'user' → logprob: -11.000981330871582
    8. ''' → logprob: -11.000981330871582
    9. ' (' → logprob: -11.125981330871582
    10. '(
' → logprob: -11.125981330871582

Token 8: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021288490388542414
    2. '()' → logprob: -7.252129077911377
    3. ')' → logprob: -7.377129077911377
    4. '("("' → logprob: -7.627129077911377
    5. '('' → logprob: -9.002128601074219
    6. '(
' → logprob: -10.002128601074219
    7. '())' → logprob: -10.627128601074219
    8. '(""))' → logprob: -10.627128601074219
    9. '("")' → logprob: -11.252128601074219
    10. ' (' → logprob: -11.377128601074219

Token 9: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01917819119989872
    2. '*' → logprob: -4.51917839050293
    3. '+
' → logprob: -5.64417839050293
    4. '#' → logprob: -6.89417839050293
    5. '=' → logprob: -6.89417839050293
    6. '%' → logprob: -7.39417839050293
    7. ')' → logprob: -7.89417839050293
    8. '\n' → logprob: -8.26917839050293
    9. ' ' → logprob: -8.51917839050293
    10. '**' → logprob: -8.76917839050293

Token 10: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3182847499847412
    2. ' nombre' → logprob: -1.3182847499847412
    3. 'nombre' → logprob: -5.44328498840332
    4. ' ' → logprob: -7.94328498840332
    5. '  ' → logprob: -8.56828498840332
    6. ' nom' → logprob: -9.56828498840332
    7. ' not' → logprob: -10.31828498840332
    8. ' nombres' → logprob: -11.19328498840332
    9. ' nome' → logprob: -12.06828498840332
    10. 'nom' → logprob: -13.19328498840332

Token 11: '_ent' (ID: 66249)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11431781202554703
    2. '_ent' → logprob: -2.4893178939819336
    3. ' _' → logprob: -3.8643178939819336
    4. '_s' → logprob: -6.239317893981934
    5. ' ' → logprob: -6.489317893981934
    6. '_nombre' → logprob: -8.364317893981934
    7. '  ' → logprob: -9.364317893981934
    8. '__' → logprob: -9.989317893981934
    9. ' ==' → logprob: -10.489317893981934
    10. '_entropy' → logprob: -10.864317893981934

Token 12: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.002329267328605056
    2. '_' → logprob: -6.252329349517822
    3. 'i' → logprob: -8.877328872680664
    4. 'er' → logprob: -9.502328872680664
    5. ' ier' → logprob: -9.627328872680664
    6. '_er' → logprob: -9.627328872680664
    7. '_i' → logprob: -10.877328872680664
    8. '__' → logprob: -12.252328872680664
    9. 't' → logprob: -12.377328872680664
    10. '_ir' → logprob: -12.502328872680664

Token 13: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.12717346847057343
    2. '_' → logprob: -2.12717342376709
    3. '__' → logprob: -9.87717342376709
    4. ' _' → logprob: -10.12717342376709
    5. ' ==' → logprob: -10.50217342376709
    6. '_a' → logprob: -11.75217342376709
    7. '==' → logprob: -11.75217342376709
    8. ' ' → logprob: -11.87717342376709
    9. '_val' → logprob: -11.87717342376709
    10. '_ent' → logprob: -12.37717342376709

Token 14: 'aisi' (ID: 151228)
  Prédit: 'aisi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aisi' → logprob: -0.003237243974581361
    2. 'a' → logprob: -5.753237247467041
    3. 'ais' → logprob: -10.253236770629883
    4. 'ai' → logprob: -11.128236770629883
    5. 'ait' → logprob: -12.878236770629883
    6. '%' → logprob: -13.253236770629883
    7. 'asi' → logprob: -13.503236770629883
    8. '_' → logprob: -14.003236770629883
    9. '_a' → logprob: -14.503236770629883
    10. '_ai' → logprob: -14.628236770629883

Token 15: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.032434236258268356
    2. ' ==' → logprob: -4.407434463500977
    3. ' <' → logprob: -4.657434463500977
    4. '>' → logprob: -5.032434463500977
    5. ' ' → logprob: -6.657434463500977
    6. ' >=' → logprob: -6.782434463500977
    7. ' <=' → logprob: -7.782434463500977
    8. '  ' → logprob: -8.407434463500977
    9. ' %' → logprob: -8.532434463500977
    10. '<' → logprob: -9.032434463500977

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47412627935409546
    2. '2' → logprob: -0.9741262793540955
    3. '3' → logprob: -10.099125862121582
    4. '4' → logprob: -12.849125862121582
    5. '1' → logprob: -13.224125862121582
    6. '5' → logprob: -14.099125862121582
    7. '6' → logprob: -14.349125862121582
    8. ' ' → logprob: -14.349125862121582
    9. '```' → logprob: -14.599125862121582
    10. '10' → logprob: -14.599125862121582

Token 17: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008569086203351617
    2. '3' → logprob: -7.250856876373291
    3. '4' → logprob: -10.00085735321045
    4. '5' → logprob: -10.12585735321045
    5. '1' → logprob: -10.87585735321045
    6. '10' → logprob: -11.00085735321045
    7. ' ' → logprob: -12.00085735321045
    8. '6' → logprob: -12.00085735321045
    9. '7' → logprob: -12.12585735321045
    10. '9' → logprob: -13.25085735321045

Token 18: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0053286245092749596
    2. '==' → logprob: -5.38032865524292
    3. ' !=' → logprob: -8.005328178405762
    4. ' ' → logprob: -8.130328178405762
    5. ' =' → logprob: -10.005328178405762
    6. '=' → logprob: -10.755328178405762
    7. ')' → logprob: -12.255328178405762
    8. ' ' → logprob: -12.755328178405762
    9. '!=' → logprob: -13.630328178405762
    10. '  ' → logprob: -14.005328178405762

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02324594371020794
    2. '0' → logprob: -3.7732460498809814
    3. ' ' → logprob: -14.773245811462402
    4. '1' → logprob: -16.27324676513672
    5. '2' → logprob: -17.27324676513672
    6. '=' → logprob: -17.39824676513672
    7. '```' → logprob: -18.77324676513672
    8. '  ' → logprob: -19.89824676513672
    9. '==' → logprob: -20.64824676513672
    10. ')' → logprob: -20.83574676513672

Token 20: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014168800786137581
    2. ' ' → logprob: -4.264168739318848
    3. '2' → logprob: -12.264168739318848
    4. '1' → logprob: -14.389168739318848
    5. ' ' → logprob: -17.264169692993164
    6. '```' → logprob: -17.764169692993164
    7. '==' → logprob: -18.514169692993164
    8. '=' → logprob: -18.514169692993164
    9. '4' → logprob: -18.639169692993164
    10. '  ' → logprob: -18.889169692993164

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003374886582605541
    2. ' :' → logprob: -8.000337600708008
    3. ':
' → logprob: -13.500337600708008
    4. ':**' → logprob: -14.875337600708008
    5. '):' → logprob: -16.250337600708008
    6. '>:' → logprob: -16.875337600708008
    7. '':'' → logprob: -17.250337600708008
    8. ',:' → logprob: -17.500337600708008
    9. ':return' → logprob: -17.625337600708008
    10. '':' → logprob: -18.000337600708008

Token 22: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3453157842159271
    2. '\n' → logprob: -2.09531569480896
    3. '\' → logprob: -2.72031569480896
    4. 'print' → logprob: -3.47031569480896
    5. ' print' → logprob: -3.59531569480896
    6. ':' → logprob: -4.470315933227539
    7. '    ' → logprob: -4.845315933227539
    8. ' ' → logprob: -4.845315933227539
    9. '    
' → logprob: -4.970315933227539
    10. ' \' → logprob: -5.970315933227539

Token 23: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.26616233587265015
    2. 'print' → logprob: -1.516162395477295
    3. '   ' → logprob: -4.266162395477295
    4. '    ' → logprob: -9.891161918640137
    5. '\' → logprob: -11.016161918640137
    6. '	print' → logprob: -11.266161918640137
    7. ' ' → logprob: -12.266161918640137
    8. '   ' → logprob: -12.266161918640137
    9. '\n' → logprob: -13.016161918640137
    10. '```' → logprob: -13.391161918640137

Token 24: ' numer' (ID: 9076)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05669054016470909
    2. ' print' → logprob: -3.1816904544830322
    3. '   ' → logprob: -4.306690692901611
    4. '    ' → logprob: -9.806690216064453
    5. 'pass' → logprob: -10.556690216064453
    6. ' ' → logprob: -10.806690216064453
    7. '    
' → logprob: -12.181690216064453
    8. '\' → logprob: -12.806690216064453
    9. '	print' → logprob: -12.931690216064453
    10. '#' → logprob: -13.306690216064453

Token 25: 'ateur' (ID: 12477)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.005503034219145775
    2. 'os' → logprob: -5.380503177642822
    3. '_o' → logprob: -7.880503177642822
    4. ' o' → logprob: -8.630502700805664
    5. 'ateur' → logprob: -9.630502700805664
    6. 'ote' → logprob: -10.005502700805664
    7. '	o' → logprob: -10.255502700805664
    8. '=' → logprob: -11.380502700805664
    9. 'ot' → logprob: -11.380502700805664
    10. '=o' → logprob: -11.505502700805664

Token 26: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8534353375434875
    2. ' +' → logprob: -1.4784352779388428
    3. ' =' → logprob: -2.2284352779388428
    4. ' ' → logprob: -2.2284352779388428
    5. '=' → logprob: -2.4784352779388428
    6. ' *' → logprob: -4.228435516357422
    7. ' +=' → logprob: -4.728435516357422
    8. '_' → logprob: -5.228435516357422
    9. '   ' → logprob: -5.228435516357422
    10. '*' → logprob: -5.728435516357422

Token 27: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.37263223528862
    2. '1' → logprob: -1.3726322650909424
    3. ' nombre' → logprob: -3.6226322650909424
    4. '2' → logprob: -4.372632026672363
    5. ' ' → logprob: -4.747632026672363
    6. '0' → logprob: -5.497632026672363
    7. 'nom' → logprob: -6.372632026672363
    8. '   ' → logprob: -6.747632026672363
    9. 'numer' → logprob: -6.997632026672363
    10. '3' → logprob: -7.872632026672363

Token 28: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -9.968312951968983e-06
    2. '_' → logprob: -11.750009536743164
    3. '_s' → logprob: -14.125009536743164
    4. 'ent' → logprob: -14.500009536743164
    5. '_entropy' → logprob: -15.625009536743164
    6. '_ENT' → logprob: -15.750009536743164
    7. ' _' → logprob: -16.375009536743164
    8. '	ent' → logprob: -16.500009536743164
    9. '_int' → logprob: -16.875009536743164
    10. '_enter' → logprob: -16.875009536743164

Token 29: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.030505450442433357
    2. 't' → logprob: -3.655505418777466
    3. 'er' → logprob: -6.280505657196045
    4. 'tier' → logprob: -7.030505657196045
    5. 're' → logprob: -7.530505657196045
    6. 'tre' → logprob: -7.780505657196045
    7. '_t' → logprob: -8.905505180358887
    8. 'ter' → logprob: -9.530505180358887
    9. 'ti' → logprob: -9.780505180358887
    10. 'ent' → logprob: -10.280505180358887

Token 30: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.001312617096118629
    2. 's' → logprob: -7.126312732696533
    3. '_' → logprob: -7.626312732696533
    4. '_ent' → logprob: -11.126312255859375
    5. 'ent' → logprob: -13.751312255859375
    6. ' _' → logprob: -14.001312255859375
    7. '   ' → logprob: -14.001312255859375
    8. ' ' → logprob: -14.876312255859375
    9. '=' → logprob: -15.251312255859375
    10. '...' → logprob: -15.376312255859375

Token 31: 'aisi' (ID: 151228)
  Prédit: 'aisi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aisi' → logprob: -2.0339031834737398e-05
    2. 'a' → logprob: -11.125020027160645
    3. 'asi' → logprob: -12.875020027160645
    4. '_' → logprob: -13.875020027160645
    5. 'ais' → logprob: -14.500020027160645
    6. '   ' → logprob: -14.750020027160645
    7. 'ai' → logprob: -14.875020027160645
    8. 'isi' → logprob: -15.625020027160645
    9. '2' → logprob: -16.25002098083496
    10. 'e' → logprob: -16.25002098083496

Token 32: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.411480188369751
    2. '+' → logprob: -2.161480188369751
    3. ' *' → logprob: -2.411480188369751
    4. ' %' → logprob: -3.286480188369751
    5. '*' → logprob: -3.661480188369751
    6. '**' → logprob: -4.036479949951172
    7. ' ' → logprob: -4.036479949951172
    8. ' **' → logprob: -4.286479949951172
    9. '%' → logprob: -4.411479949951172
    10. ' -' → logprob: -5.536479949951172

Token 33: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07425116002559662
    2. ' ' → logprob: -2.824251174926758
    3. '2' → logprob: -4.449251174926758
    4. '3' → logprob: -8.199251174926758
    5. '4' → logprob: -9.199251174926758
    6. '5' → logprob: -10.199251174926758
    7. '0' → logprob: -10.324251174926758
    8. '10' → logprob: -10.949251174926758
    9. '6' → logprob: -11.199251174926758
    10. '7' → logprob: -11.949251174926758

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011981979012489319
    2. '2' → logprob: -4.511981964111328
    3. '3' → logprob: -7.761981964111328
    4. '4' → logprob: -8.386981964111328
    5. '0' → logprob: -9.386981964111328
    6. '5' → logprob: -9.886981964111328
    7. '10' → logprob: -10.261981964111328
    8. ' ' → logprob: -10.511981964111328
    9. '6' → logprob: -11.136981964111328
    10. 'nombre' → logprob: -11.261981964111328

Token 35: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5992271900177002
    2. '
' → logprob: -1.5992271900177002
    3. ' else' → logprob: -2.2242271900177
    4. '#' → logprob: -3.8492271900177
    5. '    
' → logprob: -3.9742271900177
    6. ')' → logprob: -4.099226951599121
    7. '   ' → logprob: -4.224226951599121
    8. '*' → logprob: -4.349226951599121
    9. '/' → logprob: -4.599226951599121
    10. ' ' → logprob: -4.724226951599121

Token 36: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2814825475215912
    2. '
' → logprob: -2.281482458114624
    3. ' else' → logprob: -2.781482458114624
    4. '<|end|>' → logprob: -3.906482458114624
    5. 'elif' → logprob: -4.406482696533203
    6. '   ' → logprob: -4.656482696533203
    7. ' ' → logprob: -5.406482696533203
    8. '#' → logprob: -5.531482696533203
    9. ')' → logprob: -5.531482696533203
    10. '+' → logprob: -5.656482696533203

Token 37: ' denom' (ID: 73604)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.21370866894721985
    2. ' else' → logprob: -2.2137086391448975
    3. '   ' → logprob: -3.8387086391448975
    4. '*' → logprob: -4.588708877563477
    5. '
' → logprob: -4.588708877563477
    6. '/' → logprob: -4.713708877563477
    7. '    
' → logprob: -5.213708877563477
    8. ')' → logprob: -5.463708877563477
    9. ' ' → logprob: -5.463708877563477
    10. '\n' → logprob: -5.713708877563477

Token 38: 'inate' (ID: 5180)
  Prédit: 'inate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inate' → logprob: -0.0037439060397446156
    2. 'in' → logprob: -5.628744125366211
    3. 'inator' → logprob: -9.503744125366211
    4. 'ination' → logprob: -10.128744125366211
    5. '   ' → logprob: -11.878744125366211
    6. '=' → logprob: -12.128744125366211
    7. ' =' → logprob: -12.753744125366211
    8. 'imate' → logprob: -12.878744125366211
    9. 'ina' → logprob: -13.003744125366211
    10. '    ' → logprob: -13.628744125366211

Token 39: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.00036775172338820994
    2. 'r' → logprob: -8.000368118286133
    3. 'u' → logprob: -10.500368118286133
    4. '=' → logprob: -13.000368118286133
    5. ' ur' → logprob: -14.125368118286133
    6. ' =' → logprob: -14.875368118286133
    7. '_' → logprob: -15.000368118286133
    8. '   ' → logprob: -15.750368118286133
    9. '_r' → logprob: -15.875368118286133
    10. '```' → logprob: -16.000368118286133

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05494355410337448
    2. '=' → logprob: -2.929943561553955
    3. ' +=' → logprob: -10.554943084716797
    4. ' ' → logprob: -11.804943084716797
    5. ' ==' → logprob: -11.929943084716797
    6. '_' → logprob: -12.304943084716797
    7. '   ' → logprob: -12.929943084716797
    8. ' +' → logprob: -13.179943084716797
    9. 's' → logprob: -13.304943084716797
    10. ' -=' → logprob: -13.429943084716797

Token 41: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5795758366584778
    2. '2' → logprob: -0.8295758366584778
    3. 'nombre' → logprob: -6.329576015472412
    4. ' nombre' → logprob: -7.204576015472412
    5. 'numer' → logprob: -7.579576015472412
    6. '   ' → logprob: -8.704575538635254
    7. '  ' → logprob: -9.704575538635254
    8. ' numer' → logprob: -9.829575538635254
    9. '3' → logprob: -10.079575538635254
    10. '1' → logprob: -10.329575538635254

Token 42: '(nombre' (ID: 124319)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020118802785873413
    2. '(n' → logprob: -4.770118713378906
    3. '('' → logprob: -5.020118713378906
    4. '(nombre' → logprob: -5.770118713378906
    5. '("("' → logprob: -6.895118713378906
    6. ' (' → logprob: -8.895118713378906
    7. '(numero' → logprob: -9.270118713378906
    8. '("' → logprob: -9.520118713378906
    9. '((' → logprob: -10.145118713378906
    10. '(-' → logprob: -10.645118713378906

Token 43: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -2.0339031834737398e-05
    2. 'ent' → logprob: -10.875020027160645
    3. '	ent' → logprob: -13.875020027160645
    4. '_entropy' → logprob: -16.50002098083496
    5. '_' → logprob: -16.50002098083496
    6. '_er' → logprob: -17.37502098083496
    7. '_ENT' → logprob: -17.37502098083496
    8. '_enter' → logprob: -17.37502098083496
    9. '.ent' → logprob: -17.62502098083496
    10. 's' → logprob: -17.87502098083496

Token 44: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.0014989104820415378
    2. 't' → logprob: -7.001498699188232
    3. 'rier' → logprob: -9.00149917602539
    4. '_ent' → logprob: -9.12649917602539
    5. 'ent' → logprob: -9.37649917602539
    6. 'tier' → logprob: -9.50149917602539
    7. 'ter' → logprob: -10.37649917602539
    8. 'iert' → logprob: -10.62649917602539
    9. 'er' → logprob: -10.87649917602539
    10. 're' → logprob: -11.00149917602539

Token 45: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -4.4656579120783135e-05
    2. ')' → logprob: -11.375044822692871
    3. 's' → logprob: -11.500044822692871
    4. '_ent' → logprob: -11.625044822692871
    5. ' _' → logprob: -12.250044822692871
    6. '_' → logprob: -12.625044822692871
    7. '   ' → logprob: -13.625044822692871
    8. ' ' → logprob: -14.375044822692871
    9. ')_' → logprob: -14.375044822692871
    10. ' )' → logprob: -14.750044822692871

Token 46: 'aisi' (ID: 151228)
  Prédit: 'aisi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aisi' → logprob: -0.00014716439181938767
    2. 'isi' → logprob: -9.125146865844727
    3. 'asi' → logprob: -11.250146865844727
    4. 'a' → logprob: -11.250146865844727
    5. 'ais' → logprob: -12.500146865844727
    6. '   ' → logprob: -12.750146865844727
    7. '_' → logprob: -12.875146865844727
    8. 'ai' → logprob: -14.625146865844727
    9. '2' → logprob: -15.125146865844727
    10. '1' → logprob: -15.250146865844727

Token 47: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1334318220615387
    2. ' +' → logprob: -2.883431911468506
    3. ' )' → logprob: -3.008431911468506
    4. '+' → logprob: -4.383431911468506
    5. ' -' → logprob: -5.383431911468506
    6. '-' → logprob: -6.883431911468506
    7. ')
' → logprob: -7.258431911468506
    8. ' )
' → logprob: -8.133431434631348
    9. '   ' → logprob: -8.758431434631348
    10. ' ' → logprob: -9.508431434631348

Token 48: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8780946731567383
    2. '
' → logprob: -1.6280946731567383
    3. '+' → logprob: -2.0030946731567383
    4. '\n' → logprob: -2.7530946731567383
    5. '   ' → logprob: -3.1280946731567383
    6. '    
' → logprob: -3.2530946731567383
    7. '*' → logprob: -3.7530946731567383
    8. 'elif' → logprob: -3.7530946731567383
    9. ' else' → logprob: -4.128094673156738
    10. '<|end|>' → logprob: -4.753094673156738

Token 49: ' resultat' (ID: 67404)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0426584482192993
    2. '   ' → logprob: -1.1676584482192993
    3. '+' → logprob: -2.5426583290100098
    4. ')' → logprob: -2.6676583290100098
    5. 'else' → logprob: -3.1676583290100098
    6. '    
' → logprob: -3.2926583290100098
    7. '/' → logprob: -4.16765832901001
    8. '*' → logprob: -4.41765832901001
    9. ' else' → logprob: -4.41765832901001
    10. '
' → logprob: -4.66765832901001

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008639981970191002
    2. '=' → logprob: -4.758639812469482
    3. 's' → logprob: -11.63364028930664
    4. '_' → logprob: -12.13364028930664
    5. ' ' → logprob: -12.63364028930664
    6. ' /' → logprob: -13.50864028930664
    7. '/' → logprob: -13.50864028930664
    8. ' /=' → logprob: -14.00864028930664
    9. ' +=' → logprob: -14.38364028930664
    10. '1' → logprob: -14.75864028930664

Token 51: ' numer' (ID: 9076)
  Prédit: ' numer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numer' → logprob: -0.2722349166870117
    2. 'numer' → logprob: -1.5222349166870117
    3. ' numerator' → logprob: -4.022234916687012
    4. '1' → logprob: -7.022234916687012
    5. ' ' → logprob: -8.272234916687012
    6. '(' → logprob: -8.772234916687012
    7. ' (' → logprob: -8.772234916687012
    8. ' float' → logprob: -8.897234916687012
    9. '(n' → logprob: -9.272234916687012
    10. '   ' → logprob: -9.709734916687012

Token 52: 'ateur' (ID: 12477)
  Prédit: 'ateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.0010501964716240764
    2. 'ate' → logprob: -6.876049995422363
    3. 'a' → logprob: -11.126049995422363
    4. 'ateurs' → logprob: -14.126049995422363
    5. 'eur' → logprob: -14.376049995422363
    6. 'ateau' → logprob: -14.751049995422363
    7. ' ate' → logprob: -15.376049995422363
    8. 'ature' → logprob: -15.501049995422363
    9. 'acteur' → logprob: -15.626049995422363
    10. 'at' → logprob: -16.00105094909668

Token 53: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.1605147421360016
    2. '/' → logprob: -1.9105147123336792
    3. '*' → logprob: -9.160514831542969
    4. ' *' → logprob: -9.410514831542969
    5. ' ' → logprob: -10.410514831542969
    6. '+' → logprob: -10.785514831542969
    7. '-' → logprob: -11.285514831542969
    8. ' ' → logprob: -11.910514831542969
    9. ' +' → logprob: -12.160514831542969
    10. ' /
' → logprob: -12.285514831542969

Token 54: ' ' (ID: 220)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.005961510818451643
    2. ' denom' → logprob: -5.1309614181518555
    3. '2' → logprob: -11.130961418151855
    4. '   ' → logprob: -12.630961418151855
    5. ' den' → logprob: -12.755961418151855
    6. ' ' → logprob: -12.755961418151855
    7. ' denominator' → logprob: -13.505961418151855
    8. ' denomin' → logprob: -13.880961418151855
    9. '  ' → logprob: -13.880961418151855
    10. 'numer' → logprob: -14.380961418151855

Token 55: '2' (ID: 17)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0005147866904735565
    2. ' denom' → logprob: -7.625514984130859
    3. '2' → logprob: -11.12551498413086
    4. 'numer' → logprob: -13.00051498413086
    5. '   ' → logprob: -13.37551498413086
    6. 'd' → logprob: -13.37551498413086
    7. ' ' → logprob: -13.75051498413086
    8. ' den' → logprob: -14.25051498413086
    9. '1' → logprob: -14.37551498413086
    10. '3' → logprob: -14.50051498413086

Token 56: ' /' (ID: 820)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.012956562452018261
    2. ' denom' → logprob: -4.387956619262695
    3. 'nombre' → logprob: -8.762956619262695
    4. 'numer' → logprob: -9.637956619262695
    5. '1' → logprob: -10.137956619262695
    6. 'nom' → logprob: -10.262956619262695
    7. ' denominator' → logprob: -10.637956619262695
    8. ' denomin' → logprob: -10.637956619262695
    9. ' ' → logprob: -11.012956619262695
    10. '2' → logprob: -11.012956619262695

Token 58: 'inate' (ID: 5180)
  Prédit: 'inate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inate' → logprob: -0.00013452880375552922
    2. 'ate' → logprob: -9.125134468078613
    3. 'inator' → logprob: -11.875134468078613
    4. 'in' → logprob: -12.125134468078613
    5. 'imate' → logprob: -12.750134468078613
    6. 'ateur' → logprob: -12.875134468078613
    7. 'icate' → logprob: -13.875134468078613
    8. '   ' → logprob: -14.000134468078613
    9. 'ulate' → logprob: -14.125134468078613
    10. 'ificate' → logprob: -14.375134468078613

Token 59: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -1.1472419600977446e-06
    2. 'u' → logprob: -14.500000953674316
    3. ' ur' → logprob: -15.000000953674316
    4. 'urn' → logprob: -16.875001907348633
    5. 'eur' → logprob: -17.500001907348633
    6. 'ур' → logprob: -18.000001907348633
    7. '```' → logprob: -18.000001907348633
    8. 'urs' → logprob: -18.125001907348633
    9. 'teur' → logprob: -18.500001907348633
    10. 'urse' → logprob: -18.625001907348633

Token 60: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4219081401824951
    2. '\n' → logprob: -2.171908140182495
    3. '
' → logprob: -2.796908140182495
    4. ')' → logprob: -3.171908140182495
    5. '<|end|>' → logprob: -3.296908140182495
    6. 'print' → logprob: -3.671908140182495
    7. 'elif' → logprob: -3.671908140182495
    8. ' else' → logprob: -4.046908378601074
    9. '   ' → logprob: -5.171908378601074
    10. '#' → logprob: -5.546908378601074

Token 61: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' print' (ID: 2123)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.1228032112121582
    2. '\n' → logprob: -1.2478032112121582
    3. '
' → logprob: -2.372803211212158
    4. ')' → logprob: -2.497803211212158
    5. '<|end|>' → logprob: -2.747803211212158
    6. 'print' (adapté à ' print') → logprob: -3.372803211212158
    7. ':' → logprob: -3.622803211212158
    8. '#' → logprob: -3.997803211212158
    9. '\' → logprob: -4.372803211212158
    10. 'elif' → logprob: -4.497803211212158

Token 63: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.4742395281791687
    2. '(' → logprob: -0.9742395281791687
    3. 'result' → logprob: -10.224239349365234
    4. '('' → logprob: -10.474239349365234
    5. '()' → logprob: -10.474239349365234
    6. '("' → logprob: -10.849239349365234
    7. '("("' → logprob: -11.099239349365234
    8. '(resultado' → logprob: -11.349239349365234
    9. '(rest' → logprob: -11.974239349365234
    10. '(res' → logprob: -12.474239349365234

Token 64: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -7.815280696377158e-05
    2. ')' → logprob: -9.500078201293945
    3. ' at' → logprob: -13.375078201293945
    4. 'ats' → logprob: -14.500078201293945
    5. 'ат' → logprob: -14.750078201293945
    6. 't' → logprob: -15.250078201293945
    7. '	at' → logprob: -15.875078201293945
    8. '_at' → logprob: -16.125078201293945
    9. 'a' → logprob: -16.375078201293945
    10. '))' → logprob: -17.625078201293945

Token 65: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -15.125000953674316
    4. '))' → logprob: -16.250001907348633
    5. ')`' → logprob: -16.750001907348633
    6. '')' → logprob: -17.750001907348633
    7. '()' → logprob: -18.375001907348633
    8. '`)' → logprob: -18.625001907348633
    9. '   ' → logprob: -18.750001907348633
    10. '}' → logprob: -18.750001907348633

Token 66: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0270068421959877
    2. 'elif' → logprob: -4.27700662612915
    3. '<|end|>' → logprob: -5.40200662612915
    4. ' else' → logprob: -5.65200662612915
    5. '```' → logprob: -6.77700662612915
    6. ')' → logprob: -6.90200662612915
    7. 'e' → logprob: -7.02700662612915
    8. '#' → logprob: -8.027007102966309
    9. '\n' → logprob: -8.652007102966309
    10. '.' → logprob: -8.777007102966309

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003467865171842277
    2. ' :' → logprob: -8.250347137451172
    3. ':
' → logprob: -9.375347137451172
    4. ' :
' → logprob: -14.625347137451172
    5. ':

' → logprob: -16.125347137451172
    6. ':\' → logprob: -17.375347137451172
    7. ':
' → logprob: -17.375347137451172
    8. ':def' → logprob: -17.375347137451172
    9. '   ' → logprob: -17.500347137451172
    10. ':return' → logprob: -19.000347137451172

Token 68: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.17518779635429382
    2. '   ' → logprob: -1.9251878261566162
    3. '    ' → logprob: -5.300187587738037
    4. '
' → logprob: -5.925187587738037
    5. 'print' → logprob: -6.175187587738037
    6. '    
    
' → logprob: -6.425187587738037
    7. '```' → logprob: -7.050187587738037
    8. '     
' → logprob: -7.300187587738037
    9. '   
' → logprob: -7.675187587738037
    10. ' 
' → logprob: -7.800187587738037

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.679368793964386
    2. 'numer' → logprob: -1.3043687343597412
    3. 'print' → logprob: -1.6793687343597412
    4. 'nombre' → logprob: -3.929368734359741
    5. 'result' → logprob: -5.30436897277832
    6. 'pass' → logprob: -5.55436897277832
    7. '    
' → logprob: -6.17936897277832
    8. 'nom' → logprob: -6.42936897277832
    9. ' numer' → logprob: -7.30436897277832
    10. '```' → logprob: -7.42936897277832

Token 70: ' numer' (ID: 9076)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numer' (adapté à ' numer') → logprob: -0.3649851679801941
    2. 'print' → logprob: -1.3649852275848389
    3. 'result' → logprob: -3.864985227584839
    4. 'nombre' → logprob: -4.11498498916626
    5. 'pass' → logprob: -5.36498498916626
    6. 'den' → logprob: -5.73998498916626
    7. '   ' → logprob: -6.48998498916626
    8. 'for' → logprob: -6.98998498916626
    9. 'nom' → logprob: -7.48998498916626
    10. 'while' → logprob: -7.86498498916626

Token 71: 'ateur' (ID: 12477)
  Prédit: 'ateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.000205566844670102
    2. 'ate' → logprob: -8.500205993652344
    3. 'ateau' → logprob: -14.125205993652344
    4. 'eur' → logprob: -14.625205993652344
    5. 'ateurs' → logprob: -14.750205993652344
    6. 'ature' → logprob: -15.250205993652344
    7. 'a' → logprob: -16.375205993652344
    8. '_' → logprob: -17.000205993652344
    9. 'acteur' → logprob: -17.000205993652344
    10. '   ' → logprob: -17.125205993652344

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011065744794905186
    2. '=' → logprob: -4.51106595993042
    3. ' ' → logprob: -11.761065483093262
    4. 's' → logprob: -12.261065483093262
    5. '_' → logprob: -13.511065483093262
    6. ' ' → logprob: -13.761065483093262
    7. ' +=' → logprob: -13.761065483093262
    8. '   ' → logprob: -13.886065483093262
    9. '    ' → logprob: -15.386065483093262
    10. ',' → logprob: -16.636066436767578

Token 73: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.2602529525756836
    2. ' nombre' → logprob: -1.7602529525756836
    3. 'float' → logprob: -4.260252952575684
    4. '1' → logprob: -4.510252952575684
    5. '2' → logprob: -4.510252952575684
    6. ' float' → logprob: -4.635252952575684
    7. '(nombre' → logprob: -5.135252952575684
    8. ' ' → logprob: -6.385252952575684
    9. 'nom' → logprob: -6.635252952575684
    10. ' (' → logprob: -7.635252952575684

Token 74: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.0001805377542041242
    2. 'ent' → logprob: -8.6251802444458
    3. '	ent' → logprob: -14.2501802444458
    4. '_ENT' → logprob: -16.375181198120117
    5. '.ent' → logprob: -17.250181198120117
    6. 'Ent' → logprob: -17.250181198120117
    7. '_entropy' → logprob: -17.375181198120117
    8. '(ent' → logprob: -17.500181198120117
    9. '-ent' → logprob: -18.125181198120117
    10. '_' → logprob: -18.125181198120117

Token 75: 'ier' (ID: 905)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5399960875511169
    2. 'tier' → logprob: -1.5399961471557617
    3. 'ier' → logprob: -1.7899961471557617
    4. 'tre' → logprob: -4.164996147155762
    5. 'ter' → logprob: -5.039996147155762
    6. 'ent' → logprob: -5.539996147155762
    7. 'ti' → logprob: -5.914996147155762
    8. '_t' → logprob: -6.039996147155762
    9. '_ent' → logprob: -6.414996147155762
    10. 'tie' → logprob: -6.914996147155762

Token 76: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.013553103432059288
    2. '_ent' → logprob: -4.388553142547607
    3. 'ent' → logprob: -7.513553142547607
    4. 's' → logprob: -7.638553142547607
    5. '_' → logprob: -11.63855266571045
    6. '	ent' → logprob: -13.76355266571045
    7. 'int' → logprob: -13.88855266571045
    8. '	s' → logprob: -14.51355266571045
    9. ')' → logprob: -15.13855266571045
    10. 'Ent' → logprob: -15.26355266571045

Token 77: 'aisi' (ID: 151228)
  Prédit: 'aisi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aisi' → logprob: -0.0008545245509594679
    2. 's' → logprob: -8.2508544921875
    3. 'ais' → logprob: -8.5008544921875
    4. 'a' → logprob: -8.8758544921875
    5. '_s' → logprob: -9.2508544921875
    6. 'asi' → logprob: -10.0008544921875
    7. 'isi' → logprob: -10.6258544921875
    8. '_ent' → logprob: -10.8758544921875
    9. '_' → logprob: -11.5008544921875
    10. 'e' → logprob: -11.6258544921875

Token 78: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4622485339641571
    2. ' -' → logprob: -1.8372485637664795
    3. '+' → logprob: -2.3372485637664795
    4. ' *' → logprob: -2.8372485637664795
    5. '-' → logprob: -3.4622485637664795
    6. '*' → logprob: -4.8372483253479
    7. ' ' → logprob: -5.4622483253479
    8. ' =' → logprob: -5.4622483253479
    9. ' /' → logprob: -5.5872483253479
    10. '=' → logprob: -6.3372483253479

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09811589866876602
    2. ' -' → logprob: -3.723115921020508
    3. '-' → logprob: -3.973115921020508
    4. '    ' → logprob: -4.098115921020508
    5. ' /' → logprob: -4.598115921020508
    6. ' +' → logprob: -4.723115921020508
    7. '+' → logprob: -5.098115921020508
    8. 'den' → logprob: -6.098115921020508
    9. ' *' → logprob: -6.223115921020508
    10. '*' → logprob: -6.348115921020508

Token 80: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.11734206229448318
    2. ' denom' → logprob: -2.242341995239258
    3. '   ' → logprob: -6.242341995239258
    4. ' den' → logprob: -7.367341995239258
    5. 'numer' → logprob: -7.492341995239258
    6. ' ' → logprob: -8.492341995239258
    7. 'print' → logprob: -8.742341995239258
    8. ' denomin' → logprob: -8.867341995239258
    9. '/' → logprob: -9.117341995239258
    10. ' denominator' → logprob: -9.367341995239258

Token 81: 'inate' (ID: 5180)
  Prédit: 'inate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inate' → logprob: -5.438573680294212e-06
    2. '_' → logprob: -12.500005722045898
    3. '_in' → logprob: -14.750005722045898
    4. 'inator' → logprob: -15.375005722045898
    5. 'in' → logprob: -15.500005722045898
    6. 'imate' → logprob: -16.1250057220459
    7. 'iate' → logprob: -16.1250057220459
    8. 'itate' → logprob: -16.1250057220459
    9. ' _' → logprob: -16.2500057220459
    10. 'ate' → logprob: -17.0000057220459

Token 82: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.0001843485952122137
    2. '_' → logprob: -9.125184059143066
    3. 'u' → logprob: -10.375184059143066
    4. 'eur' → logprob: -10.375184059143066
    5. '=' → logprob: -13.125184059143066
    6. 'r' → logprob: -13.250184059143066
    7. ' =' → logprob: -13.250184059143066
    8. 'e' → logprob: -13.500184059143066
    9. 'teur' → logprob: -13.500184059143066
    10. 'ateur' → logprob: -13.750184059143066

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029798166826367378
    2. '=' → logprob: -3.5297982692718506
    3. '_' → logprob: -11.15479850769043
    4. ' ' → logprob: -11.40479850769043
    5. 's' → logprob: -12.65479850769043
    6. ' +=' → logprob: -12.77979850769043
    7. ' ' → logprob: -12.90479850769043
    8. ' *' → logprob: -13.27979850769043
    9. ')' → logprob: -13.40479850769043
    10. ' _' → logprob: -13.40479850769043

Token 84: ' nombre' (ID: 9733)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.4264378249645233
    2. 'float' → logprob: -1.1764378547668457
    3. '2' → logprob: -4.176437854766846
    4. ' nombre' → logprob: -4.676437854766846
    5. 'nombre' → logprob: -4.926437854766846
    6. ' ' → logprob: -5.176437854766846
    7. '(float' → logprob: -8.176437377929688
    8. '1' → logprob: -8.426437377929688
    9. 'nom' → logprob: -9.551437377929688
    10. 'int' → logprob: -9.613937377929688

Token 85: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -3.8889261304575484e-06
    2. 'ent' → logprob: -13.125003814697266
    3. '_' → logprob: -13.625003814697266
    4. '_entropy' → logprob: -15.250003814697266
    5. '	ent' → logprob: -15.500003814697266
    6. ' _' → logprob: -16.750003814697266
    7. '_nombre' → logprob: -17.125003814697266
    8. '_ENT' → logprob: -17.250003814697266
    9. ''ent' → logprob: -18.625003814697266
    10. '_des' → logprob: -18.625003814697266

Token 86: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -6.44443862256594e-05
    2. 'i' → logprob: -10.875064849853516
    3. 't' → logprob: -11.375064849853516
    4. '_' → logprob: -12.375064849853516
    5. ' ier' → logprob: -12.375064849853516
    6. '_t' → logprob: -12.500064849853516
    7. '_ent' → logprob: -12.625064849853516
    8. 'iere' → logprob: -12.750064849853516
    9. 'iert' → logprob: -12.750064849853516
    10. 'ire' → logprob: -12.750064849853516

Token 87: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -5.4192871175473556e-05
    2. 's' → logprob: -10.250054359436035
    3. '_ent' → logprob: -11.250054359436035
    4. 'ent' → logprob: -12.875054359436035
    5. '_' → logprob: -13.250054359436035
    6. ' _' → logprob: -15.125054359436035
    7. 'float' → logprob: -15.625054359436035
    8. 'a' → logprob: -15.875054359436035
    9. 'int' → logprob: -16.12505340576172
    10. 'e' → logprob: -16.62505340576172

Token 88: 'aisi' (ID: 151228)
  Prédit: 'aisi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aisi' → logprob: -5.943783253314905e-05
    2. 'a' → logprob: -10.375059127807617
    3. 'ais' → logprob: -11.125059127807617
    4. 'asi' → logprob: -12.000059127807617
    5. 'isi' → logprob: -12.750059127807617
    6. '_' → logprob: -13.875059127807617
    7. 'ai' → logprob: -14.125059127807617
    8. 'e' → logprob: -14.625059127807617
    9. '_ai' → logprob: -15.000059127807617
    10. 'aisie' → logprob: -15.125059127807617

Token 89: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7260090708732605
    2. '   ' → logprob: -1.9760091304779053
    3. '+' → logprob: -2.1010091304779053
    4. ' /' → logprob: -2.9760091304779053
    5. ' ' → logprob: -3.1010091304779053
    6. '**' → logprob: -3.2260091304779053
    7. 'print' → logprob: -3.4760091304779053
    8. '
' → logprob: -3.7260091304779053
    9. '*' → logprob: -4.351008892059326
    10. ' *' → logprob: -4.726008892059326

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13897661864757538
    2. '    
' → logprob: -2.263976573944092
    3. '
' → logprob: -4.638976573944092
    4. 'result' → logprob: -4.888976573944092
    5. 'print' → logprob: -5.138976573944092
    6. '```' → logprob: -6.638976573944092
    7. '  
' → logprob: -8.01397705078125
    8. '   
' → logprob: -8.01397705078125
    9. '    
    
' → logprob: -8.76397705078125
    10. '    ' → logprob: -9.51397705078125

Token 91: ' resultat' (ID: 67404)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1290511190891266
    2. 'print' → logprob: -2.1290512084960938
    3. '   ' → logprob: -6.254051208496094
    4. '    
' → logprob: -9.129051208496094
    5. '
' → logprob: -10.629051208496094
    6. 'import' → logprob: -11.129051208496094
    7. 'if' → logprob: -11.504051208496094
    8. ' resultat' → logprob: -11.754051208496094
    9. '```' → logprob: -12.629051208496094
    10. 'rés' → logprob: -12.754051208496094

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0790216475725174
    2. '=' → logprob: -2.579021692276001
    3. '_' → logprob: -9.704021453857422
    4. ' ' → logprob: -10.579021453857422
    5. ')' → logprob: -10.954021453857422
    6. ' +=' → logprob: -12.079021453857422
    7. ' ' → logprob: -12.579021453857422
    8. ' *' → logprob: -12.704021453857422
    9. '[' → logprob: -13.079021453857422
    10. '*' → logprob: -13.079021453857422

Token 93: ' numer' (ID: 9076)
  Prédit: ' numer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numer' → logprob: -0.28756678104400635
    2. 'numer' → logprob: -1.4125667810440063
    3. ' numerator' → logprob: -6.037566661834717
    4. ' float' → logprob: -6.537566661834717
    5. ' ' → logprob: -7.537566661834717
    6. ' resultat' → logprob: -8.037567138671875
    7. '1' → logprob: -8.037567138671875
    8. ' result' → logprob: -8.162567138671875
    9. 'result' → logprob: -8.537567138671875
    10. '0' → logprob: -8.787567138671875

Token 94: 'ateur' (ID: 12477)
  Prédit: 'ateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -6.599403423024341e-05
    2. 'ate' → logprob: -9.750065803527832
    3. 'eur' → logprob: -12.750065803527832
    4. 'a' → logprob: -12.750065803527832
    5. ' ate' → logprob: -14.875065803527832
    6. 'ateau' → logprob: -14.875065803527832
    7. 'atu' → logprob: -15.500065803527832
    8. 'at' → logprob: -15.750065803527832
    9. 'acteur' → logprob: -15.875065803527832
    10. 'ateurs' → logprob: -15.875065803527832

Token 95: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.049369461834430695
    2. '/' → logprob: -3.0493695735931396
    3. ' ' → logprob: -8.049369812011719
    4. '*' → logprob: -8.674369812011719
    5. ' /
' → logprob: -9.299369812011719
    6. ' *' → logprob: -9.674369812011719
    7. '```' → logprob: -10.299369812011719
    8. ' ' → logprob: -11.049369812011719
    9. '   ' → logprob: -11.299369812011719
    10. '**' → logprob: -11.674369812011719

Token 96: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0029533356428146362
    2. 'den' → logprob: -6.00295352935791
    3. ' ' → logprob: -8.37795352935791
    4. '(' → logprob: -9.37795352935791
    5. 'float' → logprob: -9.75295352935791
    6. '3' → logprob: -10.50295352935791
    7. '4' → logprob: -10.62795352935791
    8. '1' → logprob: -11.50295352935791
    9. 'numer' → logprob: -11.75295352935791
    10. 'de' → logprob: -11.87795352935791

Token 97: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20428971946239471
    2. 'den' → logprob: -1.7042896747589111
    3. ' ' → logprob: -6.70428991317749
    4. '(' → logprob: -6.82928991317749
    5. ' denom' → logprob: -8.329289436340332
    6. 'float' → logprob: -9.204289436340332
    7. '3' → logprob: -9.704289436340332
    8. '4' → logprob: -10.329289436340332
    9. 'numer' → logprob: -11.079289436340332
    10. '1' → logprob: -11.204289436340332

Token 98: ' /' (ID: 820)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1473042368888855
    2. '
' → logprob: -2.2723042964935303
    3. 'print' → logprob: -3.7723042964935303
    4. '    
' → logprob: -5.522304058074951
    5. ' print' → logprob: -6.022304058074951
    6. ' 
' → logprob: -6.272304058074951
    7. '    ' → logprob: -6.897304058074951
    8. '
' → logprob: -8.14730453491211
    9. '/' → logprob: -8.52230453491211
    10. '*' → logprob: -8.64730453491211

Token 99: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.013939240016043186
    2. ' denom' → logprob: -4.513939380645752
    3. 'float' → logprob: -6.263939380645752
    4. '2' → logprob: -7.138939380645752
    5. ' float' → logprob: -8.888938903808594
    6. ' den' → logprob: -11.263938903808594
    7. ' ' → logprob: -11.513938903808594
    8. '1' → logprob: -12.013938903808594
    9. ' denomin' → logprob: -12.013938903808594
    10. ' denominator' → logprob: -12.513938903808594

Token 100: 'inate' (ID: 5180)
  Prédit: 'inate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inate' → logprob: -1.5928495486150496e-05
    2. 'ate' → logprob: -11.375016212463379
    3. 'inator' → logprob: -13.250016212463379
    4. 'in' → logprob: -14.500016212463379
    5. '_' → logprob: -14.625016212463379
    6. 'icate' → logprob: -15.125016212463379
    7. '_in' → logprob: -15.375016212463379
    8. 'imate' → logprob: -15.875016212463379
    9. 'ivate' → logprob: -16.125015258789062
    10. 'uminate' → logprob: -16.250015258789062

Token 101: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.32458558678627014
    2. 'ateur' → logprob: -1.3245855569839478
    3. 'ate' → logprob: -5.449585437774658
    4. 'eur' → logprob: -5.699585437774658
    5. 'teur' → logprob: -5.824585437774658
    6. 'atur' → logprob: -9.199585914611816
    7. 'a' → logprob: -9.324585914611816
    8. 'ator' → logprob: -9.324585914611816
    9. 'at' → logprob: -9.824585914611816
    10. 'uteur' → logprob: -10.199585914611816

Token 102: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07680439203977585
    2. '    
' → logprob: -3.4518043994903564
    3. 'print' → logprob: -3.4518043994903564
    4. '
' → logprob: -4.576804161071777
    5. '  
' → logprob: -9.201804161071777
    6. ' print' → logprob: -9.951804161071777
    7. '   
' → logprob: -10.201804161071777
    8. ' 
' → logprob: -10.826804161071777
    9. '```' → logprob: -11.201804161071777
    10. '       ' → logprob: -11.951804161071777

Token 103: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.33619555830955505
    2. '   ' → logprob: -1.4611955881118774
    3. '    
' → logprob: -3.336195468902588
    4. '
' → logprob: -4.086195468902588
    5. '  
' → logprob: -7.961195468902588
    6. '```' → logprob: -7.961195468902588
    7. ' print' → logprob: -8.461195945739746
    8. '	print' → logprob: -9.586195945739746
    9. '   
' → logprob: -10.086195945739746
    10. '
' → logprob: -10.461195945739746

Token 104: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00022010602697264403
    2. '   ' → logprob: -9.12522029876709
    3. ' print' → logprob: -9.12522029876709
    4. '    
' → logprob: -14.37522029876709
    5. '```' → logprob: -14.37522029876709
    6. ' ' → logprob: -15.12522029876709
    7. '	print' → logprob: -15.12522029876709
    8. '
' → logprob: -15.25022029876709
    9. '  ' → logprob: -16.500219345092773
    10. '.print' → logprob: -16.750219345092773

Token 105: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.38696885108947754
    2. '(' → logprob: -1.1369688510894775
    3. '(resultado' → logprob: -10.761968612670898
    4. '()' → logprob: -11.011968612670898
    5. 'result' → logprob: -11.011968612670898
    6. '(rest' → logprob: -11.136968612670898
    7. '(res' → logprob: -11.386968612670898
    8. '(parent' → logprob: -12.136968612670898
    9. '(ret' → logprob: -13.136968612670898
    10. '('' → logprob: -13.636968612670898

Token 106: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -2.935296834039036e-06
    2. ')' → logprob: -13.87500286102295
    3. '_at' → logprob: -14.00000286102295
    4. 'result' → logprob: -14.62500286102295
    5. 'atul' → logprob: -15.25000286102295
    6. 'ат' → logprob: -16.000003814697266
    7. 'ent' → logprob: -16.750003814697266
    8. 'al' → logprob: -16.750003814697266
    9. 'ultat' → logprob: -17.250003814697266
    10. 'a' → logprob: -17.375003814697266

Token 107: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ')
' → logprob: -13.37500286102295
    3. ' )' → logprob: -13.87500286102295
    4. '))' → logprob: -15.75000286102295
    5. '')' → logprob: -17.000003814697266
    6. ')`' → logprob: -17.000003814697266
    7. '()' → logprob: -17.125003814697266
    8. '())' → logprob: -17.500003814697266
    9. '`)' → logprob: -18.000003814697266
    10. '")' → logprob: -18.125003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 105
Tokens correctement prédits (1ère position, stricte): 55
Tokens correctement prédits (1ère position, avec adaptation): 57
Tokens correctement prédits (top 10): 91
Précision stricte (1ère position): 52.38%
Précision adaptée (1ère position): 54.29%
Précision (top 10): 86.67%
================================================================================
