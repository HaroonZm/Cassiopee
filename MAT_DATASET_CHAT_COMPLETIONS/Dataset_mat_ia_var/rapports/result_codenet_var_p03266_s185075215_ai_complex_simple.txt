================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import groupby, count, islice
import operator

N, K = map(int, input().split())

# Générer les mods avec une approche fonctionnelle et d'espaces non nécessaires
mods = list(map(lambda x: x % K, range(1, N + 1)))

# Grouper et compter via groupby (nécessite de trier d'abord)
mods_sorted = sorted(mods)
counter = {k: len(list(g)) for k, g in groupby(mods_sorted)}

# Utiliser un accumulateur avec reduce sur les clés
def complex_add(acc, a):
    condition = (a + a) % K == 0
    return acc + (counter[a] ** 3 if condition else 0)

ans = reduce(complex_add, counter.keys(), 0)

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014403714798390865
    2. '(
' → logprob: -5.139403820037842
    3. '(lambda' → logprob: -5.389403820037842
    4. 'def' → logprob: -6.639403820037842
    5. ',' → logprob: -7.139403820037842
    6. '\' → logprob: -8.139403343200684
    7. ' ' → logprob: -8.264403343200684
    8. ' (' → logprob: -8.389403343200684
    9. '
' → logprob: -9.139403343200684
    10. '' → logprob: -9.139403343200684

Token 6: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9289020299911499
    2. ' operator' → logprob: -1.42890202999115
    3. ' itertools' → logprob: -1.55390202999115
    4. ' collections' → logprob: -1.92890202999115
    5. ' os' → logprob: -4.9289021492004395
    6. 'operator' → logprob: -7.4289021492004395
    7. ' sys' → logprob: -8.553901672363281
    8. ' typing' → logprob: -8.553901672363281
    9. 'collections' → logprob: -8.928901672363281
    10. 'math' → logprob: -9.053901672363281

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6086577773094177
    2. 'import' → logprob: -0.8586577773094177
    3. '.' → logprob: -3.4836578369140625
    4. '.import' → logprob: -6.7336578369140625
    5. ' .' → logprob: -9.358657836914062
    6. '	import' → logprob: -9.733657836914062
    7. '.im' → logprob: -10.108657836914062
    8. '_import' → logprob: -10.483657836914062
    9. ' ' → logprob: -10.483657836914062
    10. '<|end|>' → logprob: -11.358657836914062

Token 8: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.8675806522369385
    2. 'chain' → logprob: -1.7425806522369385
    3. 'acc' → logprob: -1.8675806522369385
    4. 'count' → logprob: -1.9925806522369385
    5. 'cycle' → logprob: -2.8675806522369385
    6. 'com' → logprob: -3.3675806522369385
    7. 'is' → logprob: -4.992580413818359
    8. 'product' → logprob: -5.367580413818359
    9. ' group' → logprob: -5.492580413818359
    10. 'per' → logprob: -5.867580413818359

Token 9: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.0005151443183422089
    2. 'y' → logprob: -7.875514984130859
    3. 'py' → logprob: -9.12551498413086
    4. 's' → logprob: -12.00051498413086
    5. 'r' → logprob: -12.25051498413086
    6. 'ertools' → logprob: -12.37551498413086
    7. 'tools' → logprob: -12.75051498413086
    8. 'b' → logprob: -13.00051498413086
    9. 'from' → logprob: -13.50051498413086
    10. 'ry' → logprob: -13.75051498413086

Token 10: ',' (ID: 11)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.101599931716919
    2. 'def' → logprob: -1.226599931716919
    3. '\n' → logprob: -1.976599931716919
    4. 'd' → logprob: -2.476599931716919
    5. '(' → logprob: -2.726599931716919
    6. '#' → logprob: -3.351599931716919
    7. '`' → logprob: -4.35159969329834
    8. '```' → logprob: -4.60159969329834
    9. '' → logprob: -5.10159969329834
    10. ',' → logprob: -5.47659969329834

Token 11: ' count' (ID: 3605)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.36603397130966187
    2. 'count' → logprob: -2.3660340309143066
    3. 'chain' → logprob: -2.8660340309143066
    4. 'com' → logprob: -3.1160340309143066
    5. 'product' → logprob: -3.1160340309143066
    6. ' accumulate' → logprob: -3.6160340309143066
    7. 'filter' → logprob: -4.366034030914307
    8. 'cycle' → logprob: -4.616034030914307
    9. 'zip' → logprob: -5.241034030914307
    10. 'tee' → logprob: -5.866034030914307

Token 12: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1516573429107666
    2. '(
' → logprob: -2.7766573429107666
    3. '\n' → logprob: -3.5266573429107666
    4. '\' → logprob: -4.0266571044921875
    5. 'def' → logprob: -4.2766571044921875
    6. '
' → logprob: -5.1516571044921875
    7. ',' → logprob: -6.2766571044921875
    8. 'for' → logprob: -6.4016571044921875
    9. '(

' → logprob: -6.6516571044921875
    10. '`' → logprob: -7.0266571044921875

Token 13: ' is' (ID: 382)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.6454424262046814
    2. 'cycle' → logprob: -1.0204424858093262
    3. ' chain' → logprob: -3.645442485809326
    4. 'chain' → logprob: -3.770442485809326
    5. 'take' → logprob: -4.395442485809326
    6. ' is' → logprob: -4.520442485809326
    7. 'acc' → logprob: -4.645442485809326
    8. 'filter' → logprob: -5.020442485809326
    9. ' take' → logprob: -5.270442485809326
    10. ' accumulate' → logprob: -5.645442485809326

Token 14: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -2.7372048862162046e-05
    2. 'lic' → logprob: -10.875027656555176
    3. 'l' → logprob: -12.625027656555176
    4. 'liced' → logprob: -13.125027656555176
    5. 'land' → logprob: -14.375027656555176
    6. 'lices' → logprob: -14.750027656555176
    7. 'licing' → logprob: -14.875027656555176
    8. '_' → logprob: -15.000027656555176
    9. '```' → logprob: -15.000027656555176
    10. 'li' → logprob: -15.625027656555176

Token 15: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1418810337781906
    2. '(
' → logprob: -2.641880989074707
    3. 'def' → logprob: -3.766880989074707
    4. 'd' → logprob: -4.766880989074707
    5. '\' → logprob: -5.266880989074707
    6. ',' → logprob: -5.266880989074707
    7. '\n' → logprob: -5.266880989074707
    8. '#' → logprob: -5.891880989074707
    9. '_' → logprob: -6.641880989074707
    10. 'for' → logprob: -6.891880989074707

Token 16: 'import' (ID: 561)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1190546751022339
    2. 'def' → logprob: -1.1190546751022339
    3. '\' → logprob: -2.7440547943115234
    4. '(' → logprob: -2.8690547943115234
    5. '#' → logprob: -3.2440547943115234
    6. '`' → logprob: -3.4940547943115234
    7. '\n' → logprob: -3.4940547943115234
    8. '```' → logprob: -3.8690547943115234
    9. ',' → logprob: -4.119054794311523
    10. '(
' → logprob: -4.244054794311523

Token 17: ' operator' (ID: 11019)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -1.2389825582504272
    2. ' math' → logprob: -1.4889825582504272
    3. ' collections' → logprob: -1.6139825582504272
    4. ' os' → logprob: -1.6139825582504272
    5. ' functools' → logprob: -3.238982677459717
    6. ' re' → logprob: -4.113982677459717
    7. ' ' → logprob: -4.488982677459717
    8. ' pandas' → logprob: -4.988982677459717
    9. ' operator' → logprob: -5.363982677459717
    10. ' sys' → logprob: -5.488982677459717

Token 18: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0676192194223404
    2. '(
' → logprob: -3.3176193237304688
    3. '\' → logprob: -4.442619323730469
    4. 'def' → logprob: -4.817619323730469
    5. '.' → logprob: -5.942619323730469
    6. ',' → logprob: -6.567619323730469
    7. '\n' → logprob: -7.067619323730469
    8. '(

' → logprob: -7.192619323730469
    9. '```' → logprob: -7.442619323730469
    10. '`' → logprob: -7.692619323730469

Token 19: 'N' (ID: 45)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8311153054237366
    2. '(' → logprob: -1.2061152458190918
    3. '#' → logprob: -2.581115245819092
    4. '=' → logprob: -2.706115245819092
    5. 'def' → logprob: -3.456115245819092
    6. '(
' → logprob: -3.456115245819092
    7. '_' → logprob: -4.706115245819092
    8. '.' → logprob: -4.831115245819092
    9. '*' → logprob: -5.081115245819092
    10. ',' → logprob: -5.081115245819092

Token 20: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6161903142929077
    2. '_' → logprob: -1.1161903142929077
    3. ' =' → logprob: -2.6161904335021973
    4. ',' → logprob: -3.6161904335021973
    5. '(' → logprob: -5.241190433502197
    6. ' ' → logprob: -5.616190433502197
    7. ')' → logprob: -5.866190433502197
    8. 'O' → logprob: -5.866190433502197
    9. '   ' → logprob: -5.991190433502197
    10. '.' → logprob: -5.991190433502197

Token 21: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.6663999557495117
    2. 'K' → logprob: -1.4163999557495117
    3. ' M' → logprob: -2.5413999557495117
    4. ' ' → logprob: -3.2913999557495117
    5. 'M' → logprob: -3.4163999557495117
    6. ' =' → logprob: -3.5413999557495117
    7. '=' → logprob: -3.9163999557495117
    8. 'data' → logprob: -4.166399955749512
    9. ' data' → logprob: -5.541399955749512
    10. 'A' → logprob: -5.916399955749512

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026317600160837173
    2. '=' → logprob: -3.651317596435547
    3. ',' → logprob: -11.276317596435547
    4. ' ' → logprob: -12.901317596435547
    5. ' =
' → logprob: -14.276317596435547
    6. ' ,' → logprob: -14.651317596435547
    7. ')' → logprob: -15.276317596435547
    8. '<|end|>' → logprob: -15.276317596435547
    9. ' =",' → logprob: -16.276317596435547
    10. ' =)' → logprob: -16.651317596435547

Token 23: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4181595742702484
    2. ' map' → logprob: -1.2931596040725708
    3. 'map' → logprob: -3.4181594848632812
    4. '10' → logprob: -3.6681594848632812
    5. '5' → logprob: -5.918159484863281
    6. '100' → logprob: -6.043159484863281
    7. '0' → logprob: -6.668159484863281
    8. '20' → logprob: -6.793159484863281
    9. ' int' → logprob: -8.168159484863281
    10. ' input' → logprob: -8.293159484863281

Token 24: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03352835401892662
    2. '(lambda' → logprob: -3.9085283279418945
    3. '(int' → logprob: -4.9085283279418945
    4. '<|end|>' → logprob: -5.5335283279418945
    5. '(str' → logprob: -7.1585283279418945
    6. '```' → logprob: -9.533528327941895
    7. '(operator' → logprob: -9.783528327941895
    8. '(range' → logprob: -9.908528327941895
    9. '<|end|>' → logprob: -10.033528327941895
    10. '(user' → logprob: -10.033528327941895

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23721908032894135
    2. ',input' → logprob: -1.6122190952301025
    3. '(input' → logprob: -5.112218856811523
    4. 'input' → logprob: -5.862218856811523
    5. '(' → logprob: -6.112218856811523
    6. ')' → logprob: -7.862218856811523
    7. ',int' → logprob: -9.112218856811523
    8. ' input' → logprob: -10.612218856811523
    9. ',(' → logprob: -10.987218856811523
    10. '=input' → logprob: -11.112218856811523

Token 26: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5761334896087646
    2. 'input' → logprob: -0.8261334896087646
    3. ' ' → logprob: -9.201133728027344
    4. '(input' → logprob: -9.951133728027344
    5. ')' → logprob: -10.576133728027344
    6. ' )' → logprob: -11.826133728027344
    7. ',input' → logprob: -12.201133728027344
    8. '```' → logprob: -13.326133728027344
    9. '=input' → logprob: -13.451133728027344
    10. '  ' → logprob: -13.826133728027344

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3494780957698822
    2. '())' → logprob: -1.7244781255722046
    3. '()' → logprob: -2.349478006362915
    4. '(' → logprob: -4.224478244781494
    5. ')' → logprob: -5.974478244781494
    6. '('' → logprob: -6.224478244781494
    7. '());' → logprob: -7.349478244781494
    8. '("' → logprob: -8.224477767944336
    9. '(),' → logprob: -8.349477767944336
    10. '()))' → logprob: -8.599477767944336

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00027349460287950933
    2. 'strip' → logprob: -8.250273704528809
    3. ')' → logprob: -11.750273704528809
    4. 'rstrip' → logprob: -13.250273704528809
    5. ' split' → logprob: -13.250273704528809
    6. 'read' → logprob: -14.875273704528809
    7. '(split' → logprob: -15.625273704528809
    8. 'spl' → logprob: -15.875273704528809
    9. '())' → logprob: -16.625272750854492
    10. '()' → logprob: -17.125272750854492

Token 29: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012374267913401127
    2. '))' → logprob: -4.637374401092529
    3. '())' → logprob: -6.012374401092529
    4. '()' → logprob: -8.887373924255371
    5. '),' → logprob: -11.512373924255371
    6. '()))' → logprob: -12.137373924255371
    7. '(' → logprob: -12.512373924255371
    8. ')
' → logprob: -13.387373924255371
    9. ')))' → logprob: -13.387373924255371
    10. ')`' → logprob: -13.512373924255371

Token 30: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.48500174283981323
    2. 'arr' → logprob: -1.985001802444458
    3. 'numbers' → logprob: -2.860001802444458
    4. 'def' → logprob: -3.110001802444458
    5. 'data' → logprob: -3.110001802444458
    6. 'A' → logprob: -3.985001802444458
    7. 's' → logprob: -4.485001564025879
    8. 'nums' → logprob: -4.610001564025879
    9. 'result' → logprob: -4.985001564025879
    10. 'elements' → logprob: -5.110001564025879

Token 31: ' Gén' (ID: 71828)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -1.4493359327316284
    2. ' arr' → logprob: -2.449336051940918
    3. 'data' → logprob: -2.574336051940918
    4. 'def' → logprob: -2.699336051940918
    5. 'arr' → logprob: -2.699336051940918
    6. ' numbers' → logprob: -2.949336051940918
    7. ' groups' → logprob: -3.074336051940918
    8. 'a' → logprob: -3.449336051940918
    9. ' nums' → logprob: -3.949336051940918
    10. 'groups' → logprob: -3.949336051940918

Token 32: 'érer' (ID: 29097)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.011862533167004585
    2. 'éral' → logprob: -5.261862754821777
    3. 'ération' → logprob: -6.636862754821777
    4. 'érale' → logprob: -6.636862754821777
    5. '#' → logprob: -7.136862754821777
    6. 'é' → logprob: -7.511862754821777
    7. 'érateur' → logprob: -7.511862754821777
    8. 'eral' → logprob: -7.636862754821777
    9. 'éra' → logprob: -7.636862754821777
    10. 'érer' → logprob: -7.886862754821777

Token 33: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.6035789251327515
    2. ' une' → logprob: -1.8535789251327515
    3. ' un' → logprob: -2.103579044342041
    4. 's' → logprob: -2.353579044342041
    5. ' les' → logprob: -2.728579044342041
    6. '<|end|>' → logprob: -2.978579044342041
    7. ' ' → logprob: -3.103579044342041
    8. ' a' → logprob: -3.728579044342041
    9. ' all' → logprob: -3.728579044342041
    10. ' l' → logprob: -3.853579044342041

Token 34: ' mods' (ID: 60449)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.045304059982299805
    2. ' comb' → logprob: -3.6703040599823
    3. ' ent' → logprob: -5.295304298400879
    4. ' trip' → logprob: -6.545304298400879
    5. ' nombre' → logprob: -6.795304298400879
    6. ' permutations' → logprob: -6.920304298400879
    7. ' N' → logprob: -7.045304298400879
    8. ' group' → logprob: -7.045304298400879
    9. ' premiers' → logprob: -7.670304298400879
    10. ' itertools' → logprob: -7.670304298400879

Token 35: ' avec' (ID: 3937)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12849870324134827
    2. '_' → logprob: -3.3784987926483154
    3. ' (' → logprob: -3.7534987926483154
    4. 'mod' → logprob: -4.128498554229736
    5. 's' → logprob: -4.628498554229736
    6. '[' → logprob: -5.128498554229736
    7. ',' → logprob: -5.753498554229736
    8. '%' → logprob: -5.753498554229736
    9. 'des' → logprob: -6.003498554229736
    10. '_mod' → logprob: -6.003498554229736

Token 36: ' une' (ID: 2463)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.3080235719680786
    2. '[' → logprob: -1.4330235719680786
    3. '(lambda' → logprob: -2.558023452758789
    4. 'range' → logprob: -2.558023452758789
    5. 'operator' → logprob: -3.308023452758789
    6. '(' → logprob: -3.558023452758789
    7. '(operator' → logprob: -3.558023452758789
    8. ' lambda' → logprob: -3.683023452758789
    9. '```' → logprob: -3.933023452758789
    10. ' (' → logprob: -4.058023452758789

Token 37: ' approche' (ID: 102373)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.4999586045742035
    2. 'compr' → logprob: -2.8749585151672363
    3. 'list' → logprob: -3.1249585151672363
    4. 'fonction' → logprob: -3.2499585151672363
    5. ' liste' → logprob: -3.3749585151672363
    6. 'com' → logprob: -3.3749585151672363
    7. 'range' → logprob: -3.6249585151672363
    8. ' compréhension' → logprob: -3.8749585151672363
    9. ' comprehension' → logprob: -4.249958515167236
    10. '```' → logprob: -4.874958515167236

Token 38: ' fonction' (ID: 17610)
  Prédit: ' naï'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' naï' → logprob: -1.8728182315826416
    2. ' naive' → logprob: -2.1228182315826416
    3. ' brute' → logprob: -2.2478182315826416
    4. ' de' → logprob: -2.4978182315826416
    5. ' optim' → logprob: -2.6228182315826416
    6. '```' → logprob: -2.8728182315826416
    7. ' plus' → logprob: -3.2478182315826416
    8. ' modulo' → logprob: -3.2478182315826416
    9. ' par' → logprob: -3.4978182315826416
    10. 'de' → logprob: -3.9978182315826416

Token 39: 'nelle' (ID: 30805)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.070713758468628
    2. 's' → logprob: -2.070713758468628
    3. ':' → logprob: -2.195713758468628
    4. ',' → logprob: -2.320713758468628
    5. 'mod' → logprob: -2.820713758468628
    6. '=' → logprob: -2.945713758468628
    7. '```' → logprob: -3.195713758468628
    8. ' =' → logprob: -3.320713758468628
    9. '_' → logprob: -3.695713758468628
    10. ')' → logprob: -4.070713996887207

Token 40: ' et' (ID: 859)
  Prédit: 'mods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mods' → logprob: -0.08964580297470093
    2. ':' → logprob: -3.4646458625793457
    3. 'mod' → logprob: -3.9646458625793457
    4. 'm' → logprob: -5.089645862579346
    5. 'def' → logprob: -5.089645862579346
    6. 's' → logprob: -5.214645862579346
    7. ')' → logprob: -5.339645862579346
    8. '```' → logprob: -5.464645862579346
    9. '=' → logprob: -6.964645862579346
    10. '_' → logprob: -6.964645862579346

Token 41: ' d' (ID: 272)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.5523644089698792
    2. ' reduce' → logprob: -2.0523643493652344
    3. ' des' → logprob: -3.4273643493652344
    4. ' une' → logprob: -3.5523643493652344
    5. ' itertools' → logprob: -3.5523643493652344
    6. 'l' → logprob: -3.8023643493652344
    7. 'des' → logprob: -4.427364349365234
    8. 'une' → logprob: -4.552364349365234
    9. 'it' → logprob: -4.552364349365234
    10. 'list' → logprob: -4.677364349365234

Token 42: ''esp' (ID: 73244)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.20051638782024384
    2. 'éc' → logprob: -2.70051646232605
    3. 'é' → logprob: -2.95051646232605
    4. 'ef' → logprob: -3.57551646232605
    5. 'ec' → logprob: -5.325516223907471
    6. 'es' → logprob: -5.700516223907471
    7. 'éf' → logprob: -5.825516223907471
    8. ''' → logprob: -5.950516223907471
    9. ''e' → logprob: -6.325516223907471
    10. ''eff' → logprob: -6.700516223907471

Token 43: 'aces' (ID: 3247)
  Prédit: 'aces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aces' → logprob: -0.7174534797668457
    2. 'ace' → logprob: -1.7174534797668457
    3. 'ur' → logprob: -2.4674534797668457
    4. 'érance' → logprob: -2.5924534797668457
    5. 'r' → logprob: -3.3424534797668457
    6. 'acité' → logprob: -3.9674534797668457
    7. '```' → logprob: -4.217453479766846
    8. 'érience' → logprob: -4.467453479766846
    9. 'acement' → logprob: -4.592453479766846
    10. 'èces' → logprob: -4.717453479766846

Token 44: ' non' (ID: 2893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1679366827011108
    2. '=' → logprob: -1.4179366827011108
    3. 'mod' → logprob: -2.4179368019104004
    4. '```' → logprob: -2.7929368019104004
    5. ':' → logprob: -2.9179368019104004
    6. 'def' → logprob: -3.1679368019104004
    7. '_' → logprob: -3.5429368019104004
    8. 's' → logprob: -3.5429368019104004
    9. '[' → logprob: -3.9179368019104004
    10. '(' → logprob: -4.1679368019104

Token 45: ' nécessaires' (ID: 74402)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.6863864660263062
    2. 'vid' → logprob: -1.6863864660263062
    3. 'vide' → logprob: -2.4363865852355957
    4. ' blancs' → logprob: -2.6863865852355957
    5. ' v' → logprob: -2.8113865852355957
    6. '   ' → logprob: -3.1863865852355957
    7. 'a' → logprob: -3.5613865852355957
    8. 'bl' → logprob: -3.6863865852355957
    9. ')' → logprob: -3.8113865852355957
    10. 'v' → logprob: -3.8113865852355957

Token 46: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1598061323165894
    2. 's' → logprob: -1.5348061323165894
    3. 'mod' → logprob: -1.9098061323165894
    4. 'mods' → logprob: -2.284806251525879
    5. '=' → logprob: -2.534806251525879
    6. '```' → logprob: -3.409806251525879
    7. ' =' → logprob: -3.659806251525879
    8. ',' → logprob: -4.409806251525879
    9. ' :' → logprob: -4.534806251525879
    10. ')' → logprob: -4.909806251525879

Token 47: 'mods' (ID: 165035)
  Prédit: 'mods'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mods' → logprob: -0.15951956808567047
    2. 'mod' → logprob: -2.909519672393799
    3. 'def' → logprob: -4.534519672393799
    4. '_mod' → logprob: -4.534519672393799
    5. '```' → logprob: -4.659519672393799
    6. 's' → logprob: -4.659519672393799
    7. 'm' → logprob: -5.034519672393799
    8. ':' → logprob: -5.034519672393799
    9. ' mods' → logprob: -5.034519672393799
    10. '_' → logprob: -5.409519672393799

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28140509128570557
    2. '=' → logprob: -1.4064050912857056
    3. ',' → logprob: -8.906405448913574
    4. ' ' → logprob: -9.656405448913574
    5. '_' → logprob: -10.656405448913574
    6. 's' → logprob: -11.156405448913574
    7. ')' → logprob: -12.031405448913574
    8. ' ,' → logprob: -13.281405448913574
    9. ' =
' → logprob: -13.406405448913574
    10. ' ' → logprob: -13.906405448913574

Token 49: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.742306649684906
    2. 'list' → logprob: -1.2423067092895508
    3. '[(' → logprob: -2.242306709289551
    4. '[' → logprob: -3.117306709289551
    5. ' [' → logprob: -3.117306709289551
    6. '(list' → logprob: -4.617306709289551
    7. ' [(' → logprob: -4.992306709289551
    8. '(lambda' → logprob: -5.242306709289551
    9. ' (' → logprob: -5.367306709289551
    10. '[list' → logprob: -5.742306709289551

Token 50: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5615425109863281
    2. '(map' → logprob: -1.4365425109863281
    3. '(is' → logprob: -1.6865425109863281
    4. '(range' → logprob: -5.186542510986328
    5. '(filter' → logprob: -8.186542510986328
    6. '(operator' → logprob: -8.561542510986328
    7. '((' → logprob: -8.686542510986328
    8. '(re' → logprob: -8.936542510986328
    9. '(count' → logprob: -9.436542510986328
    10. '(
' → logprob: -10.061542510986328

Token 51: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3179576098918915
    2. '(lambda' → logprob: -1.3179576396942139
    3. '(operator' → logprob: -5.442957401275635
    4. '(
' → logprob: -8.192957878112793
    5. '(int' → logprob: -10.442957878112793
    6. '(abs' → logprob: -11.067957878112793
    7. ' (' → logprob: -11.442957878112793
    8. '((' → logprob: -11.942957878112793
    9. '(op' → logprob: -12.442957878112793
    10. 'operator' → logprob: -12.567957878112793

Token 52: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3164289891719818
    2. ' lambda' → logprob: -1.4414290189743042
    3. 'x' → logprob: -3.8164288997650146
    4. 'lambda' → logprob: -4.691429138183594
    5. ' i' → logprob: -6.566429138183594
    6. ' ' → logprob: -7.316429138183594
    7. ' n' → logprob: -8.316429138183594
    8. ':' → logprob: -8.441429138183594
    9. '(lambda' → logprob: -8.441429138183594
    10. ' :' → logprob: -8.816429138183594

Token 53: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011195539496839046
    2. ' :' → logprob: -4.511195659637451
    3. ':x' → logprob: -9.136195182800293
    4. '=' → logprob: -12.011195182800293
    5. ' x' → logprob: -12.261195182800293
    6. ':(' → logprob: -12.261195182800293
    7. ',' → logprob: -12.386195182800293
    8. ':
' → logprob: -12.386195182800293
    9. 'x' → logprob: -13.011195182800293
    10. ':`' → logprob: -13.261195182800293

Token 54: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.49717652797698975
    2. ' x' → logprob: -0.9971765279769897
    3. 'lambda' → logprob: -5.122176647186279
    4. ' lambda' → logprob: -5.372176647186279
    5. ' (' → logprob: -5.622176647186279
    6. 'operator' → logprob: -5.997176647186279
    7. '(x' → logprob: -5.997176647186279
    8. ' operator' → logprob: -6.247176647186279
    9. '(lambda' → logprob: -7.122176647186279
    10. ' ' → logprob: -8.622176170349121

Token 55: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.47599464654922485
    2. ':' → logprob: -1.47599458694458
    3. '%' → logprob: -1.97599458694458
    4. ' :' → logprob: -4.97599458694458
    5. '**' → logprob: -6.47599458694458
    6. ':x' → logprob: -6.72599458694458
    7. '%x' → logprob: -6.85099458694458
    8. ' x' → logprob: -8.350995063781738
    9. 'x' → logprob: -8.725995063781738
    10. ' ' → logprob: -8.975995063781738

Token 56: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0035887870471924543
    2. ' K' → logprob: -5.878588676452637
    3. 'N' → logprob: -7.378588676452637
    4. ' ' → logprob: -9.378588676452637
    5. '3' → logprob: -11.628588676452637
    6. '10' → logprob: -12.128588676452637
    7. '   ' → logprob: -12.253588676452637
    8. 'M' → logprob: -12.378588676452637
    9. '100' → logprob: -12.378588676452637
    10. '  ' → logprob: -12.503588676452637

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022582602687180042
    2. 'range' → logprob: -6.37725830078125
    3. ' ,' → logprob: -7.62725830078125
    4. ' range' → logprob: -10.75225830078125
    5. '(range' → logprob: -11.12725830078125
    6. ',count' → logprob: -11.50225830078125
    7. ',
' → logprob: -12.00225830078125
    8. 'count' → logprob: -13.12725830078125
    9. ',N' → logprob: -13.25225830078125
    10. ',n' → logprob: -13.87725830078125

Token 58: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.18360061943531036
    2. ' range' → logprob: -1.808600664138794
    3. 'count' → logprob: -5.808600425720215
    4. 'is' → logprob: -7.933600425720215
    5. ' count' → logprob: -8.308600425720215
    6. ' is' → logprob: -8.933600425720215
    7. '(range' → logprob: -10.183600425720215
    8. '	range' → logprob: -10.808600425720215
    9. '   ' → logprob: -11.058600425720215
    10. ' ' → logprob: -11.933600425720215

Token 59: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.016096899285912514
    2. '(' → logprob: -4.141097068786621
    3. '(n' → logprob: -9.891097068786621
    4. '(
' → logprob: -12.266097068786621
    5. 'N' → logprob: -13.391097068786621
    6. ' (' → logprob: -13.641097068786621
    7. '(

' → logprob: -14.391097068786621
    8. '(M' → logprob: -14.766097068786621
    9. '	N' → logprob: -14.891097068786621
    10. ')' → logprob: -14.891097068786621

Token 60: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005207431968301535
    2. ' N' → logprob: -7.750520706176758
    3. '1' → logprob: -10.125520706176758
    4. '	N' → logprob: -10.875520706176758
    5. '   ' → logprob: -11.125520706176758
    6. '0' → logprob: -12.250520706176758
    7. 'n' → logprob: -12.625520706176758
    8. ' ' → logprob: -13.500520706176758
    9. '    ' → logprob: -14.000520706176758
    10. '2' → logprob: -14.250520706176758

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001977287931367755
    2. ' ,' → logprob: -6.251977443695068
    3. ',N' → logprob: -10.00197696685791
    4. ' ' → logprob: -13.50197696685791
    5. ',n' → logprob: -14.50197696685791
    6. ',K' → logprob: -14.62697696685791
    7. '1' → logprob: -14.87697696685791
    8. 'N' → logprob: -15.37697696685791
    9. '   ' → logprob: -15.87697696685791
    10. '```' → logprob: -16.376977920532227

Token 62: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06995999813079834
    2. ' N' → logprob: -2.694960117340088
    3. '	N' → logprob: -11.19495964050293
    4. ' ' → logprob: -12.06995964050293
    5. '   ' → logprob: -13.44495964050293
    6. '    ' → logprob: -13.69495964050293
    7. ' ' → logprob: -13.94495964050293
    8. '>N' → logprob: -15.56995964050293
    9. '  ' → logprob: -16.44495964050293
    10. '100' → logprob: -16.56995964050293

Token 63: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1269339919090271
    2. ' +' → logprob: -2.126934051513672
    3. ' ' → logprob: -12.251934051513672
    4. '   ' → logprob: -15.251934051513672
    5. ' +
' → logprob: -15.376934051513672
    6. '+
' → logprob: -15.626934051513672
    7. ' plus' → logprob: -15.876934051513672
    8. '1' → logprob: -16.626934051513672
    9. '```' → logprob: -16.751934051513672
    10. '＋' → logprob: -17.251934051513672

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.054882846772670746
    2. ' ' → logprob: -2.929882764816284
    3. '   ' → logprob: -15.554883003234863
    4. '  ' → logprob: -15.992383003234863
    5. '2' → logprob: -16.367382049560547
    6. '```' → logprob: -16.617382049560547
    7. ')' → logprob: -16.867382049560547
    8. ' ' → logprob: -17.429882049560547
    9. ' )' → logprob: -17.554882049560547
    10. '+' → logprob: -18.054882049560547

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.375045776367188
    4. '```' → logprob: -17.875045776367188
    5. '  ' → logprob: -18.000045776367188
    6. ')' → logprob: -18.875045776367188
    7. '۱' → logprob: -19.312545776367188
    8. '0' → logprob: -19.375045776367188
    9. '2' → logprob: -19.437545776367188
    10. '    ' → logprob: -19.625045776367188

Token 66: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.02217079885303974
    2. ')' → logprob: -4.0221710205078125
    3. '))' → logprob: -5.5221710205078125
    4. '))))' → logprob: -11.522171020507812
    5. ')));' → logprob: -13.522171020507812
    6. ' ' → logprob: -13.647171020507812
    7. ')))
' → logprob: -13.772171020507812
    8. '),' → logprob: -14.022171020507812
    9. ' )' → logprob: -15.647171020507812
    10. ')
' → logprob: -15.772171020507812

Token 67: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2159772515296936
    2. '
' → logprob: -1.7159771919250488
    3. ')
' → logprob: -4.840977191925049
    4. '#' → logprob: -6.840977191925049
    5. ' ' → logprob: -7.215977191925049
    6. ' )' → logprob: -7.465977191925049
    7. '\n' → logprob: -7.840977191925049
    8. '
' → logprob: -7.840977191925049
    9. '```' → logprob: -8.090977668762207
    10. '  
' → logprob: -8.215977668762207

Token 68: ' Grou' (ID: 95992)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -1.5708798170089722
    2. 'group' → logprob: -1.9458798170089722
    3. 'groups' → logprob: -1.9458798170089722
    4. 'count' → logprob: -2.1958799362182617
    5. 'mods' → logprob: -2.1958799362182617
    6. 'counter' → logprob: -3.0708799362182617
    7. 'sorted' → logprob: -3.0708799362182617
    8. '#' → logprob: -3.0708799362182617
    9. 'from' → logprob: -3.0708799362182617
    10. 'result' → logprob: -4.320879936218262

Token 69: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.014855755493044853
    2. 'p' → logprob: -4.389855861663818
    3. 'pe' → logprob: -6.889855861663818
    4. 'pering' → logprob: -7.764855861663818
    5. 'pper' → logprob: -7.764855861663818
    6. 'par' → logprob: -9.76485538482666
    7. 'pere' → logprob: -9.88985538482666
    8. 'ping' → logprob: -10.01485538482666
    9. 'perate' → logprob: -10.13985538482666
    10. 'perator' → logprob: -10.76485538482666

Token 70: ' et' (ID: 859)
  Prédit: 'mods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mods' → logprob: -0.3025979697704315
    2. 'by' → logprob: -1.802597999572754
    3. '(mod' → logprob: -3.427597999572754
    4. ',' → logprob: -3.552597999572754
    5. 'par' → logprob: -4.927597999572754
    6. '(' → logprob: -5.052597999572754
    7. 'mod' → logprob: -5.052597999572754
    8. 's' → logprob: -5.927597999572754
    9. '_by' → logprob: -6.177597999572754
    10. ' by' → logprob: -6.302597999572754

Token 71: ' compter' (ID: 81694)
  Prédit: ' tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tr' → logprob: -0.3447820544242859
    2. ' compter' → logprob: -2.0947821140289307
    3. ' sommer' → logprob: -3.0947821140289307
    4. 'tr' → logprob: -4.219781875610352
    5. ' sum' → logprob: -4.344781875610352
    6. ' calcul' → logprob: -4.344781875610352
    7. '#' → logprob: -4.344781875610352
    8. 's' → logprob: -4.719781875610352
    9. 'sum' → logprob: -4.969781875610352
    10. ' réduire' → logprob: -5.594781875610352

Token 72: ' via' (ID: 4493)
  Prédit: 'mods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mods' → logprob: -0.6100371479988098
    2. '(
' → logprob: -1.860037088394165
    3. '(' → logprob: -2.110037088394165
    4. 'counts' → logprob: -3.235037088394165
    5. ',' → logprob: -3.735037088394165
    6. 'count' → logprob: -4.360037326812744
    7. 'by' → logprob: -4.485037326812744
    8. 'result' → logprob: -4.485037326812744
    9. '(count' → logprob: -4.985037326812744
    10. ')' → logprob: -5.110037326812744

Token 73: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.5443934202194214
    2. ' group' → logprob: -1.1693934202194214
    3. 'lambda' → logprob: -2.794393539428711
    4. ' lambda' → logprob: -4.044393539428711
    5. 'key' → logprob: -5.169393539428711
    6. 'len' → logprob: -5.294393539428711
    7. ' key' → logprob: -5.419393539428711
    8. 'map' → logprob: -5.794393539428711
    9. '[group' → logprob: -6.169393539428711
    10. '```' → logprob: -6.669393539428711

Token 74: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.00047809764510020614
    2. 'y' → logprob: -8.00047779083252
    3. 'b' → logprob: -9.37547779083252
    4. '```' → logprob: -11.00047779083252
    5. 'py' → logprob: -11.50047779083252
    6. 's' → logprob: -11.87547779083252
    7. '   ' → logprob: -12.12547779083252
    8. '

' → logprob: -13.00047779083252
    9. ' by' → logprob: -13.25047779083252
    10. ' ' → logprob: -13.37547779083252

Token 75: ' (' (ID: 350)
  Prédit: 'mods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mods' → logprob: -0.8044427037239075
    2. ',' → logprob: -1.4294426441192627
    3. '(' → logprob: -3.0544426441192627
    4. '(
' → logprob: -3.3044426441192627
    5. 'counts' → logprob: -3.3044426441192627
    6. 's' → logprob: -3.8044426441192627
    7. 'result' → logprob: -3.8044426441192627
    8. 'groups' → logprob: -4.054442882537842
    9. 'for' → logprob: -4.179442882537842
    10. ')' → logprob: -4.554442882537842

Token 76: 'né' (ID: 10149)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -1.1274033784866333
    2. ' key' → logprob: -1.1274033784866333
    3. 'lambda' → logprob: -1.7524033784866333
    4. ' lambda' → logprob: -2.1274032592773438
    5. '),' → logprob: -4.127403259277344
    6. '(key' → logprob: -4.502403259277344
    7. '(lambda' → logprob: -4.752403259277344
    8. ')' → logprob: -4.877403259277344
    9. ',' → logprob: -5.627403259277344
    10. ' clé' → logprob: -6.252403259277344

Token 77: 'cess' (ID: 1185)
  Prédit: 'cess'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cess' → logprob: -0.0029456093907356262
    2. 'anmoins' → logprob: -5.877945423126221
    3. 'c' → logprob: -10.127945899963379
    4. 'ccess' → logprob: -10.877945899963379
    5. 'ces' → logprob: -11.002945899963379
    6. 'a' → logprob: -11.627945899963379
    7. 'an' → logprob: -11.877945899963379
    8. ')' → logprob: -12.502945899963379
    9. 'glig' → logprob: -12.627945899963379
    10. 'moins' → logprob: -12.752945899963379

Token 78: 'ite' (ID: 651)
  Prédit: 'aire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.4995913505554199
    2. 's' → logprob: -1.62459135055542
    3. 'cess' → logprob: -2.87459135055542
    4. ')' → logprob: -3.24959135055542
    5. 'ité' → logprob: -3.87459135055542
    6. 'ite' → logprob: -3.99959135055542
    7. 'à' → logprob: -4.74959135055542
    8. '   ' → logprob: -5.49959135055542
    9. 'aires' → logprob: -5.49959135055542
    10. ':' → logprob: -5.62459135055542

Token 79: ' de' (ID: 334)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.3158684968948364
    2. 'le' → logprob: -3.440868377685547
    3. 'de' → logprob: -3.565868377685547
    4. ' de' → logprob: -3.565868377685547
    5. 'd' → logprob: -3.690868377685547
    6. ' ' → logprob: -3.940868377685547
    7. ' un' → logprob: -4.065868377685547
    8. ' une' → logprob: -4.065868377685547
    9. 'sorted' → logprob: -4.565868377685547
    10. 'que' → logprob: -4.815868377685547

Token 80: ' tr' (ID: 498)
  Prédit: ' tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tr' → logprob: -0.5120658278465271
    2. 'sorted' → logprob: -1.7620658874511719
    3. ' sorted' → logprob: -2.512065887451172
    4. '#' → logprob: -2.887065887451172
    5. 'tr' → logprob: -2.887065887451172
    6. 'tri' → logprob: -4.512065887451172
    7. ' tri' → logprob: -4.512065887451172
    8. ')' → logprob: -5.512065887451172
    9. 's' → logprob: -5.637065887451172
    10. ' #' → logprob: -6.262065887451172

Token 81: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.025053365156054497
    2. 'i' → logprob: -4.77505350112915
    3. 'ié' → logprob: -5.02505350112915
    4. 'ies' → logprob: -6.15005350112915
    5. 'a' → logprob: -6.27505350112915
    6. 'é' → logprob: -6.65005350112915
    7. 'ie' → logprob: -6.77505350112915
    8. 's' → logprob: -8.525053024291992
    9. 'e' → logprob: -8.775053024291992
    10. 'iere' → logprob: -8.900053024291992

Token 82: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6141856908798218
    2. 'mods' → logprob: -1.1141856908798218
    3. '(mod' → logprob: -2.7391858100891113
    4. 'les' → logprob: -4.489185810089111
    5. ' les' → logprob: -4.614185810089111
    6. ',' → logprob: -5.239185810089111
    7. '):' → logprob: -5.489185810089111
    8. '):

' → logprob: -5.489185810089111
    9. ' )' → logprob: -5.739185810089111
    10. ' mods' → logprob: -5.989185810089111

Token 83: ''abord' (ID: 89989)
  Prédit: 'mods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mods' → logprob: -1.1787395477294922
    2. ''abord' → logprob: -1.3037395477294922
    3. 'e' → logprob: -1.5537395477294922
    4. '`' → logprob: -2.678739547729492
    5. '```' → logprob: -3.428739547729492
    6. 'es' → logprob: -3.678739547729492
    7. ' mods' → logprob: -4.303739547729492
    8. 'eux' → logprob: -4.928739547729492
    9. ')' → logprob: -5.053739547729492
    10. 'a' → logprob: -5.616239547729492

Token 84: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22171606123447418
    2. '(mod' → logprob: -2.4717161655426025
    3. 'mods' → logprob: -2.4717161655426025
    4. '):' → logprob: -3.9717161655426025
    5. ',' → logprob: -5.596715927124023
    6. ')

' → logprob: -6.471715927124023
    7. ')
' → logprob: -6.721715927124023
    8. ' )' → logprob: -7.096715927124023
    9. '(' → logprob: -7.221715927124023
    10. '):

' → logprob: -7.471715927124023

Token 85: 'mods' (ID: 165035)
  Prédit: 'mods'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mods' → logprob: -0.15053002536296844
    2. 'sorted' → logprob: -2.0255300998687744
    3. ')
' → logprob: -5.900529861450195
    4. ')' → logprob: -6.650529861450195
    5. ' mods' → logprob: -7.025529861450195
    6. ',' → logprob: -7.400529861450195
    7. ' sorted' → logprob: -7.400529861450195
    8. '
' → logprob: -7.525529861450195
    9. '(sorted' → logprob: -8.150529861450195
    10. 'sort' → logprob: -8.525529861450195

Token 86: '_sorted' (ID: 104993)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.014246244914829731
    2. ')' → logprob: -4.514246463775635
    3. '.' → logprob: -6.389246463775635
    4. '_sorted' → logprob: -7.764246463775635
    5. 'sorted' → logprob: -7.889246463775635
    6. '=' → logprob: -8.389245986938477
    7. 'sort' → logprob: -9.014245986938477
    8. ').' → logprob: -9.389245986938477
    9. '.sorted' → logprob: -9.389245986938477
    10. ' =' → logprob: -10.014245986938477

Token 87: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3079657554626465
    2. '(' → logprob: -1.5579657554626465
    3. ' =' → logprob: -3.0579657554626465
    4. ')' → logprob: -5.0579657554626465
    5. ',' → logprob: -7.6829657554626465
    6. '(mod' → logprob: -8.307966232299805
    7. '(sorted' → logprob: -8.807966232299805
    8. ' ' → logprob: -9.557966232299805
    9. 'sorted' → logprob: -9.807966232299805
    10. '   ' → logprob: -10.557966232299805

Token 88: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.12693345546722412
    2. ' sorted' → logprob: -2.1269335746765137
    3. 's' → logprob: -13.376933097839355
    4. '(sorted' → logprob: -13.376933097839355
    5. 'sort' → logprob: -14.376933097839355
    6. ' ' → logprob: -15.126933097839355
    7. '   ' → logprob: -15.251933097839355
    8. '.sorted' → logprob: -15.251933097839355
    9. '```' → logprob: -15.626933097839355
    10. ' ' → logprob: -16.001934051513672

Token 89: '(mod' (ID: 45051)
  Prédit: '(mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.00036834771162830293
    2. '(' → logprob: -8.000368118286133
    3. 'mods' → logprob: -10.875368118286133
    4. '(m' → logprob: -12.000368118286133
    5. ' (' → logprob: -12.250368118286133
    6. '.mods' → logprob: -14.625368118286133
    7. '(models' → logprob: -14.750368118286133
    8. '```' → logprob: -14.750368118286133
    9. '(
' → logprob: -14.875368118286133
    10. ')' → logprob: -15.375368118286133

Token 90: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.074907287256792e-05
    2. 'mods' → logprob: -10.00006103515625
    3. 'ods' → logprob: -12.50006103515625
    4. 'es' → logprob: -12.62506103515625
    5. ')' → logprob: -12.62506103515625
    6. 'os' → logprob: -13.87506103515625
    7. 'ms' → logprob: -14.62506103515625
    8. '<|end|>' → logprob: -14.75006103515625
    9. ')s' → logprob: -15.25006103515625
    10. 'ols' → logprob: -15.37506103515625

Token 91: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.194110756041482e-05
    2. '))' → logprob: -10.250061988830566
    3. ' )' → logprob: -11.125061988830566
    4. ',' → logprob: -12.000061988830566
    5. ')
' → logprob: -13.250061988830566
    6. ')))' → logprob: -13.625061988830566
    7. ',)' → logprob: -14.250061988830566
    8. ')#' → logprob: -14.375061988830566
    9. ')

' → logprob: -14.750061988830566
    10. '())' → logprob: -16.00006103515625

Token 92: 'counter' (ID: 32128)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.5160678029060364
    2. 'group' → logprob: -1.1410677433013916
    3. 'counts' → logprob: -2.6410677433013916
    4. ')' → logprob: -6.141067981719971
    5. 'count' → logprob: -6.141067981719971
    6. ' groups' → logprob: -6.391067981719971
    7. 'result' → logprob: -6.766067981719971
    8. 'mods' → logprob: -6.891067981719971
    9. 'grp' → logprob: -7.141067981719971
    10. ' grouped' → logprob: -7.391067981719971

Token 93: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.23659329116344452
    2. ' =' → logprob: -1.986593246459961
    3. '=' → logprob: -2.611593246459961
    4. '_' → logprob: -10.486593246459961
    5. ' s' → logprob: -10.611593246459961
    6. '=s' → logprob: -10.736593246459961
    7. ')' → logprob: -11.361593246459961
    8. 'es' → logprob: -12.861593246459961
    9. 'parts' → logprob: -12.861593246459961
    10. '_s' → logprob: -13.236593246459961

Token 94: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.399316668510437
    2. 'list' → logprob: -1.774316668510437
    3. '[(' → logprob: -2.5243167877197266
    4. ' {' → logprob: -3.3993167877197266
    5. '[' → logprob: -4.274316787719727
    6. 'lambda' → logprob: -4.899316787719727
    7. ' list' → logprob: -5.399316787719727
    8. 'dict' → logprob: -5.774316787719727
    9. '[len' → logprob: -5.774316787719727
    10. '[list' → logprob: -5.774316787719727

Token 95: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07904786616563797
    2. 'key' → logprob: -2.579047918319702
    3. '   ' → logprob: -9.704048156738281
    4. 'x' → logprob: -10.829048156738281
    5. ' key' → logprob: -10.829048156738281
    6. ' k' → logprob: -11.579048156738281
    7. ' ' → logprob: -11.704048156738281
    8. '       ' → logprob: -12.079048156738281
    9. '    
' → logprob: -12.704048156738281
    10. 'g' → logprob: -12.829048156738281

Token 96: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016376927960664034
    2. 'len' → logprob: -7.0016374588012695
    3. ' :' → logprob: -7.7516374588012695
    4. ':list' → logprob: -8.87663745880127
    5. '[len' → logprob: -9.75163745880127
    6. ',len' → logprob: -10.62663745880127
    7. '=len' → logprob: -10.87663745880127
    8. ':v' → logprob: -11.37663745880127
    9. '(len' → logprob: -12.00163745880127
    10. ':k' → logprob: -12.37663745880127

Token 97: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0053160544484853745
    2. ' len' → logprob: -5.630316257476807
    3. 'sum' → logprob: -6.380316257476807
    4. ' sum' → logprob: -11.505315780639648
    5. '	len' → logprob: -13.005315780639648
    6. '(len' → logprob: -13.130315780639648
    7. ' ' → logprob: -13.380315780639648
    8. 'v' → logprob: -13.630315780639648
    9. 'list' → logprob: -14.380315780639648
    10. 'lambda' → logprob: -14.880315780639648

Token 98: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.003547924105077982
    2. '(v' → logprob: -6.1285481452941895
    3. 'list' → logprob: -6.7535481452941895
    4. '```' → logprob: -9.753547668457031
    5. '[list' → logprob: -10.003547668457031
    6. ' list' → logprob: -10.878547668457031
    7. '   ' → logprob: -11.128547668457031
    8. 'v' → logprob: -11.378547668457031
    9. '

' → logprob: -12.003547668457031
    10. ' ' → logprob: -12.128547668457031

Token 99: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.16033674776554108
    2. '(v' → logprob: -1.9103367328643799
    3. '(group' → logprob: -9.2853364944458
    4. '(gr' → logprob: -10.9103364944458
    5. 'v' → logprob: -14.6603364944458
    6. 'g' → logprob: -14.7853364944458
    7. '(groups' → logprob: -15.0353364944458
    8. '(b' → logprob: -15.9103364944458
    9. 'grp' → logprob: -16.160337448120117
    10. '(' → logprob: -16.535337448120117

Token 100: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07909709960222244
    2. 'v' → logprob: -2.579097032546997
    3. '(v' → logprob: -9.079096794128418
    4. '))
' → logprob: -10.454096794128418
    5. 'roup' → logprob: -10.704096794128418
    6. 'r' → logprob: -11.329096794128418
    7. ' v' → logprob: -11.954096794128418
    8. ' ))' → logprob: -11.954096794128418
    9. 'roups' → logprob: -12.454096794128418
    10. ' ' → logprob: -12.704096794128418

Token 101: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4744590222835541
    2. 'for' → logprob: -0.9744590520858765
    3. ' ' → logprob: -8.974458694458008
    4. '   ' → logprob: -9.224458694458008
    5. '(v' → logprob: -9.599458694458008
    6. 'v' → logprob: -10.099458694458008
    7. '    ' → logprob: -10.974458694458008
    8. '  ' → logprob: -11.849458694458008
    9. '(mod' → logprob: -12.349458694458008
    10. '	for' → logprob: -12.474458694458008

Token 102: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6468261480331421
    2. 'k' → logprob: -0.7718261480331421
    3. '_,' → logprob: -5.146826267242432
    4. ',' → logprob: -6.146826267242432
    5. ' _,' → logprob: -6.521826267242432
    6. ',k' → logprob: -6.646826267242432
    7. '	k' → logprob: -7.396826267242432
    8. '(k' → logprob: -7.896826267242432
    9. 'mods' → logprob: -8.146825790405273
    10. ' ' → logprob: -8.271825790405273

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004691610229201615
    2. ',k' → logprob: -8.500469207763672
    3. ',v' → logprob: -9.125469207763672
    4. ' ,' → logprob: -9.125469207763672
    5. ',g' → logprob: -10.000469207763672
    6. ' in' → logprob: -14.750469207763672
    7. 'k' → logprob: -14.750469207763672
    8. ',value' → logprob: -15.000469207763672
    9. ',c' → logprob: -15.375469207763672
    10. ',s' → logprob: -15.875469207763672

Token 104: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.3132704198360443
    2. 'g' → logprob: -1.3132704496383667
    3. ' ' → logprob: -12.438270568847656
    4. ' v' → logprob: -13.313270568847656
    5. '	g' → logprob: -13.688270568847656
    6. 'v' → logprob: -14.063270568847656
    7. '_g' → logprob: -14.563270568847656
    8. ' group' → logprob: -15.688270568847656
    9. '  ' → logprob: -16.063270568847656
    10. '_' → logprob: -16.438270568847656

Token 105: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12843748927116394
    2. 'in' → logprob: -2.1284375190734863
    3. ' ' → logprob: -7.253437519073486
    4. 'roup' → logprob: -8.378437042236328
    5. 's' → logprob: -9.003437042236328
    6. 'en' → logprob: -9.253437042236328
    7. 'n' → logprob: -10.253437042236328
    8. ')' → logprob: -10.378437042236328
    9. 'roups' → logprob: -10.378437042236328
    10. '	in' → logprob: -10.753437042236328

Token 106: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.1269380897283554
    2. ' group' → logprob: -2.1269381046295166
    3. '	group' → logprob: -12.501937866210938
    4. 'roup' → logprob: -13.001937866210938
    5. '"group' → logprob: -13.751937866210938
    6. ' ' → logprob: -13.751937866210938
    7. '   ' → logprob: -14.376937866210938
    8. '(group' → logprob: -14.876937866210938
    9. 'g' → logprob: -15.376937866210938
    10. '_group' → logprob: -16.001937866210938

Token 107: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.0003704933915287256
    2. 'y' → logprob: -8.750370025634766
    3. 's' → logprob: -8.875370025634766
    4. 'mods' → logprob: -10.375370025634766
    5. 'b' → logprob: -11.875370025634766
    6. 'in' → logprob: -12.250370025634766
    7. 'er' → logprob: -12.875370025634766
    8. 'group' → logprob: -12.875370025634766
    9. '```' → logprob: -12.875370025634766
    10. 'ing' → logprob: -13.250370025634766

Token 108: '(mod' (ID: 45051)
  Prédit: '(mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mod' → logprob: -0.003968455363065004
    2. ' (' → logprob: -5.878968238830566
    3. 'mods' → logprob: -7.128968238830566
    4. '(m' → logprob: -9.253968238830566
    5. '(' → logprob: -9.253968238830566
    6. '   ' → logprob: -10.003968238830566
    7. '.mods' → logprob: -10.628968238830566
    8. ' ' → logprob: -11.003968238830566
    9. '(sorted' → logprob: -11.628968238830566
    10. ' mods' → logprob: -12.003968238830566

Token 109: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12002889811992645
    2. '_sorted' → logprob: -2.2450289726257324
    3. 'sorted' → logprob: -4.995028972625732
    4. 'mods' → logprob: -8.120028495788574
    5. 'ods' → logprob: -9.870028495788574
    6. 'Sorted' → logprob: -11.120028495788574
    7. ')' → logprob: -11.745028495788574
    8. 'ots' → logprob: -12.245028495788574
    9. '   ' → logprob: -12.620028495788574
    10. 'es' → logprob: -12.870028495788574

Token 110: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.00014191943046171218
    2. 'sorted' → logprob: -8.875142097473145
    3. 's' → logprob: -13.875142097473145
    4. ')' → logprob: -14.375142097473145
    5. ')_' → logprob: -15.875142097473145
    6. 'Sorted' → logprob: -16.000141143798828
    7. '   ' → logprob: -16.875141143798828
    8. '(sorted' → logprob: -17.250141143798828
    9. '_mod' → logprob: -17.625141143798828
    10. '```' → logprob: -17.750141143798828

Token 111: ')}

' (ID: 184554)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.0022536260075867176
    2. ')' → logprob: -6.127253532409668
    3. ' )' → logprob: -10.252253532409668
    4. ')}}' → logprob: -11.377253532409668
    5. ');}' → logprob: -11.502253532409668
    6. '}' → logprob: -12.252253532409668
    7. '))' → logprob: -12.502253532409668
    8. ')},' → logprob: -14.252253532409668
    9. '   ' → logprob: -14.752253532409668
    10. ')}
' → logprob: -15.002253532409668

Token 112: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6387338042259216
    2. 'pairs' → logprob: -2.1387338638305664
    3. 'answer' → logprob: -2.3887338638305664
    4. 'res' → logprob: -2.5137338638305664
    5. '#' → logprob: -2.7637338638305664
    6. 'total' → logprob: -3.2637338638305664
    7. 'def' → logprob: -3.8887338638305664
    8. 'print' → logprob: -4.888733863830566
    9. 'max' → logprob: -4.888733863830566
    10. 's' → logprob: -5.138733863830566

Token 113: ' Util' (ID: 13564)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8236411809921265
    2. 'pairs' → logprob: -0.9486411809921265
    3. '#' → logprob: -2.698641300201416
    4. 'total' → logprob: -3.823641300201416
    5. 'res' → logprob: -4.198641300201416
    6. 'def' → logprob: -4.198641300201416
    7. 'answer' → logprob: -4.323641300201416
    8. 'com' → logprob: -4.573641300201416
    9. 'comb' → logprob: -5.323641300201416
    10. 'count' → logprob: -5.448641300201416

Token 114: 'iser' (ID: 7466)
  Prédit: 'isateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isateur' → logprob: -0.215987429022789
    2. 'iser' → logprob: -1.8409874439239502
    3. 's' → logprob: -4.590987205505371
    4. 'isation' → logprob: -4.715987205505371
    5. '#' → logprob: -4.965987205505371
    6. 'izer' → logprob: -5.840987205505371
    7. 'isateurs' → logprob: -6.465987205505371
    8. 'isez' → logprob: -7.340987205505371
    9. 'max' → logprob: -7.715987205505371
    10. 'total' → logprob: -7.965987205505371

Token 115: ' un' (ID: 537)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.07128118723630905
    2. ' reduce' → logprob: -3.4462811946868896
    3. 'operator' → logprob: -3.8212811946868896
    4. 'sum' → logprob: -4.8212809562683105
    5. ' operator' → logprob: -5.4462809562683105
    6. ' sum' → logprob: -7.1962809562683105
    7. '(operator' → logprob: -7.9462809562683105
    8. '#' → logprob: -8.071281433105469
    9. 'max' → logprob: -8.821281433105469
    10. 'list' → logprob: -8.946281433105469

Token 116: ' accumulate' (ID: 74226)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.978133499622345
    2. 'lambda' → logprob: -1.4781334400177002
    3. 'reduce' → logprob: -2.4781334400177
    4. 'sum' → logprob: -2.8531334400177
    5. 'def' → logprob: -3.1031334400177
    6. 'default' → logprob: -3.2281334400177
    7. 'total' → logprob: -3.3531334400177
    8. 'result' → logprob: -3.4781334400177
    9. 's' → logprob: -4.478133678436279
    10. 'print' → logprob: -4.478133678436279

Token 117: 'ur' (ID: 330)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.27943217754364014
    2. 'd' → logprob: -1.7794321775436401
    3. 'import' → logprob: -3.4044322967529297
    4. ' from' → logprob: -3.5294322967529297
    5. 'r' → logprob: -4.65443229675293
    6. 'or' → logprob: -6.40443229675293
    7. 'e' → logprob: -8.27943229675293
    8. ',' → logprob: -8.40443229675293
    9. '=' → logprob: -8.77943229675293
    10. 'operator' → logprob: -9.15443229675293

Token 118: ' avec' (ID: 3937)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.43406322598457336
    2. 'total' → logprob: -1.309063196182251
    3. 'count' → logprob: -3.184063196182251
    4. 'counts' → logprob: -4.18406343460083
    5. 's' → logprob: -5.68406343460083
    6. '=' → logprob: -5.93406343460083
    7. 'sum' → logprob: -6.05906343460083
    8. ' =' → logprob: -6.05906343460083
    9. 'pairs' → logprob: -6.05906343460083
    10. 'def' → logprob: -6.30906343460083

Token 119: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.004071751609444618
    2. 'operator' → logprob: -6.1290717124938965
    3. 'lambda' → logprob: -6.3790717124938965
    4. ' reduce' → logprob: -8.754072189331055
    5. 'fun' → logprob: -11.879072189331055
    6. ')' → logprob: -12.379072189331055
    7. ' operator' → logprob: -12.379072189331055
    8. 'sum' → logprob: -12.504072189331055
    9. ' lambda' → logprob: -12.629072189331055
    10. '```' → logprob: -13.379072189331055

Token 120: ' sur' (ID: 1512)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.29880455136299133
    2. 'count' → logprob: -2.298804521560669
    3. 'total' → logprob: -2.923804521560669
    4. 'def' → logprob: -3.798804521560669
    5. 'counts' → logprob: -4.298804759979248
    6. '(lambda' → logprob: -4.423804759979248
    7. 'res' → logprob: -4.548804759979248
    8. '(
' → logprob: -4.673804759979248
    9. 'acc' → logprob: -5.173804759979248
    10. ',' → logprob: -5.423804759979248

Token 121: ' les' (ID: 1341)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.0019065011292696
    2. ' counter' → logprob: -6.501906394958496
    3. 'operator' → logprob: -8.251906394958496
    4. 'range' → logprob: -9.251906394958496
    5. '(counter' → logprob: -11.376906394958496
    6. 'lambda' → logprob: -11.626906394958496
    7. '[counter' → logprob: -12.001906394958496
    8. 'list' → logprob: -12.251906394958496
    9. '
' → logprob: -12.751906394958496
    10. 'count' → logprob: -12.876906394958496

Token 122: ' clés' (ID: 96616)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.004769614897668362
    2. ' counter' → logprob: -5.879769802093506
    3. 'operator' → logprob: -6.754769802093506
    4. 'range' → logprob: -8.629769325256348
    5. 'values' → logprob: -8.754769325256348
    6. 'items' → logprob: -9.129769325256348
    7. 'list' → logprob: -9.379769325256348
    8. '[counter' → logprob: -9.504769325256348
    9. '(counter' → logprob: -9.879769325256348
    10. 'mods' → logprob: -10.254769325256348

Token 123: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6890656352043152
    2. 'keys' → logprob: -1.18906569480896
    3. 'counter' → logprob: -2.56406569480896
    4. ',' → logprob: -2.81406569480896
    5. '(
' → logprob: -4.564065456390381
    6. 'acc' → logprob: -5.189065456390381
    7. '(keys' → logprob: -5.439065456390381
    8. '(' → logprob: -5.564065456390381
    9. 'total' → logprob: -5.564065456390381
    10. 'counts' → logprob: -5.689065456390381

Token 124: 'def' (ID: 1314)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.13826031982898712
    2. 'keys' → logprob: -2.8882603645324707
    3. 'total' → logprob: -3.3882603645324707
    4. 'counts' → logprob: -4.513260364532471
    5. 'answer' → logprob: -4.638260364532471
    6. 'count' → logprob: -5.263260364532471
    7. 'res' → logprob: -5.388260364532471
    8. 'acc' → logprob: -5.513260364532471
    9. 'sum' → logprob: -7.013260364532471
    10. 'pairs' → logprob: -7.388260364532471

Token 125: ' complex' (ID: 8012)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.02958640083670616
    2. 'add' → logprob: -4.279586315155029
    3. 'combine' → logprob: -4.779586315155029
    4. 'sum' → logprob: -5.154586315155029
    5. 'count' → logprob: -8.529586791992188
    6. ' accumulator' → logprob: -8.654586791992188
    7. ' accumulate' → logprob: -9.029586791992188
    8. 'multiply' → logprob: -9.154586791992188
    9. 'f' → logprob: -9.404586791992188
    10. 'aggregate' → logprob: -9.904586791992188

Token 126: '_add' (ID: 8390)
  Prédit: '_acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_acc' → logprob: -0.07013483345508575
    2. '_count' → logprob: -3.5701348781585693
    3. '_counter' → logprob: -3.9451348781585693
    4. '_function' → logprob: -4.82013463973999
    5. '_com' → logprob: -5.57013463973999
    6. 'acc' → logprob: -6.07013463973999
    7. '_reduce' → logprob: -6.69513463973999
    8. 'e' → logprob: -7.44513463973999
    9. ' accumulator' → logprob: -7.44513463973999
    10. '_sum' → logprob: -7.44513463973999

Token 127: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.17309662699699402
    2. '(a' → logprob: -2.4230966567993164
    3. '(x' → logprob: -2.6730966567993164
    4. '(counter' → logprob: -7.548096656799316
    5. 'er' → logprob: -8.548096656799316
    6. 'acc' → logprob: -9.048096656799316
    7. '(' → logprob: -9.423096656799316
    8. '(s' → logprob: -10.048096656799316
    9. 'umulator' → logprob: -10.298096656799316
    10. ' (' → logprob: -10.548096656799316

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015051048249006271
    2. 'umulator' → logprob: -4.265050888061523
    3. 'um' → logprob: -7.390050888061523
    4. 'umulate' → logprob: -8.515050888061523
    5. 'umul' → logprob: -10.265050888061523
    6. 'u' → logprob: -11.640050888061523
    7. 'acc' → logprob: -12.515050888061523
    8. 'uator' → logprob: -13.015050888061523
    9. 'e' → logprob: -13.390050888061523
    10. 'ector' → logprob: -13.390050888061523

Token 129: ' a' (ID: 261)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.12964145839214325
    2. 'k' → logprob: -2.754641532897949
    3. 'x' → logprob: -3.254641532897949
    4. 'item' → logprob: -4.129641532897949
    5. 'kv' → logprob: -6.379641532897949
    6. 'pair' → logprob: -7.254641532897949
    7. 'elem' → logprob: -7.629641532897949
    8. ' key' → logprob: -8.50464153289795
    9. 'val' → logprob: -9.50464153289795
    10. 'v' → logprob: -10.25464153289795

Token 130: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18002067506313324
    2. '):' → logprob: -1.8050206899642944
    3. 's' → logprob: -9.430020332336426
    4. '):
' → logprob: -9.555020332336426
    5. '):

' → logprob: -10.305020332336426
    6. 'ue' → logprob: -11.180020332336426
    7. 'e' → logprob: -11.430020332336426
    8. 'r' → logprob: -11.680020332336426
    9. 'u' → logprob: -11.680020332336426
    10. 'ss' → logprob: -11.805020332336426

Token 131: '   ' (ID: 271)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.6475268006324768
    2. '   ' → logprob: -1.522526741027832
    3. 'key' → logprob: -2.647526741027832
    4. 'acc' → logprob: -2.772526741027832
    5. '(k' → logprob: -3.522526741027832
    6. '(key' → logprob: -3.647526741027832
    7. 'k' → logprob: -4.022526741027832
    8. ' key' → logprob: -4.522526741027832
    9. ' acc' → logprob: -4.522526741027832
    10. '(a' → logprob: -5.022526741027832

Token 132: ' condition' (ID: 7060)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.5770135521888733
    2. 'return' → logprob: -2.0770134925842285
    3. ' key' → logprob: -2.3270134925842285
    4. 'k' → logprob: -3.0770134925842285
    5. '   ' → logprob: -3.0770134925842285
    6. 'acc' → logprob: -3.5770134925842285
    7. '(key' → logprob: -3.7020134925842285
    8. '(acc' → logprob: -3.7020134925842285
    9. '(k' → logprob: -4.2020134925842285
    10. ' return' → logprob: -4.9520134925842285

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41616448760032654
    2. ' =' → logprob: -1.166164517402649
    3. ':' → logprob: -3.6661643981933594
    4. ',' → logprob: -5.791164398193359
    5. '=lambda' → logprob: -9.66616439819336
    6. ':
' → logprob: -10.41616439819336
    7. '   ' → logprob: -10.54116439819336
    8. ' if' → logprob: -11.29116439819336
    9. ':return' → logprob: -11.41616439819336
    10. '=
' → logprob: -11.41616439819336

Token 134: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6616632342338562
    2. '(a' → logprob: -1.536663293838501
    3. ' a' → logprob: -1.911663293838501
    4. ' (' → logprob: -2.536663293838501
    5. '(acc' → logprob: -3.411663293838501
    6. 'acc' → logprob: -5.661663055419922
    7. '(' → logprob: -6.411663055419922
    8. ' acc' → logprob: -6.661663055419922
    9. ' abs' → logprob: -7.161663055419922
    10. '(abs' → logprob: -7.661663055419922

Token 135: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006277028471231461
    2. 'acc' → logprob: -5.631277084350586
    3. '(a' → logprob: -6.631277084350586
    4. ' a' → logprob: -7.256277084350586
    5. '(acc' → logprob: -7.881277084350586
    6. 'abs' → logprob: -9.131277084350586
    7. 'operator' → logprob: -9.881277084350586
    8. 'condition' → logprob: -10.506277084350586
    9. ' acc' → logprob: -10.756277084350586
    10. '(operator' → logprob: -11.506277084350586

Token 136: ' +' (ID: 659)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0616455078125
    2. ' %' → logprob: -4.0616455078125
    3. ' not' → logprob: -4.6866455078125
    4. '+' → logprob: -4.9366455078125
    5. ' +' → logprob: -5.0616455078125
    6. '%' → logprob: -5.0616455078125
    7. 'in' → logprob: -5.1866455078125
    8. ',' → logprob: -5.3116455078125
    9. '[' → logprob: -7.5616455078125
    10. ' ,' → logprob: -7.6866455078125

Token 137: ' a' (ID: 261)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.595127284526825
    2. '1' → logprob: -1.3451273441314697
    3. ' acc' → logprob: -1.8451273441314697
    4. ' ' → logprob: -4.470127105712891
    5. '(acc' → logprob: -4.845127105712891
    6. 'a' → logprob: -5.720127105712891
    7. 'counter' → logprob: -6.470127105712891
    8. 'K' → logprob: -6.720127105712891
    9. '0' → logprob: -7.345127105712891
    10. ' a' → logprob: -7.595127105712891

Token 138: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023563832510262728
    2. ' )' → logprob: -6.62735652923584
    3. ')%' → logprob: -7.12735652923584
    4. '[' → logprob: -9.75235652923584
    5. ')**' → logprob: -10.00235652923584
    6. ')<=' → logprob: -10.62735652923584
    7. ' <=' → logprob: -11.25235652923584
    8. '-' → logprob: -11.25235652923584
    9. 'a' → logprob: -11.37735652923584
    10. '+' → logprob: -11.50235652923584

Token 139: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8091440796852112
    2. ' <=' → logprob: -1.6841440200805664
    3. '%' → logprob: -1.9341440200805664
    4. ' %' → logprob: -2.1841440200805664
    5. '<=' → logprob: -2.6841440200805664
    6. ')%' → logprob: -3.5591440200805664
    7. ' <' → logprob: -6.059144020080566
    8. ' )' → logprob: -6.184144020080566
    9. '>' → logprob: -6.309144020080566
    10. '<' → logprob: -6.309144020080566

Token 140: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.026344774290919304
    2. ' K' → logprob: -3.6513447761535645
    3. ' ' → logprob: -10.776344299316406
    4. ' (' → logprob: -12.401344299316406
    5. '(' → logprob: -12.401344299316406
    6. 'N' → logprob: -12.901344299316406
    7. '2' → logprob: -13.026344299316406
    8. '7' → logprob: -13.151344299316406
    9. '{' → logprob: -13.651344299316406
    10. '(K' → logprob: -13.776344299316406

Token 141: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5311002731323242
    2. '==' → logprob: -0.9061002731323242
    3. ' !=' → logprob: -5.281100273132324
    4. '!=' → logprob: -6.656100273132324
    5. ')' → logprob: -7.156100273132324
    6. '<|end|>' → logprob: -8.406100273132324
    7. ')==' → logprob: -8.531100273132324
    8. ' not' → logprob: -9.281100273132324
    9. ' and' → logprob: -9.781100273132324
    10. ' ' → logprob: -10.156100273132324

Token 142: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04861677438020706
    2. ' ' → logprob: -3.048616886138916
    3. 'a' → logprob: -10.798616409301758
    4. '1' → logprob: -12.673616409301758
    5. ' a' → logprob: -13.048616409301758
    6. 'K' → logprob: -14.361116409301758
    7. ' (' → logprob: -14.548616409301758
    8. '(' → logprob: -14.548616409301758
    9. '   ' → logprob: -14.736116409301758
    10. ' K' → logprob: -15.236116409301758

Token 143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00034535606391727924
    2. ' ' → logprob: -8.000345230102539
    3. 'a' → logprob: -12.500345230102539
    4. '1' → logprob: -12.500345230102539
    5. '(' → logprob: -13.875345230102539
    6. 'K' → logprob: -14.750345230102539
    7. ' (' → logprob: -15.687845230102539
    8. '2' → logprob: -15.687845230102539
    9. 'k' → logprob: -15.687845230102539
    10. '(a' → logprob: -17.00034523010254

Token 144: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9796736240386963
    2. ':' → logprob: -1.1046736240386963
    3. '
' → logprob: -2.1046736240386963
    4. ' and' → logprob: -2.3546736240386963
    5. ':
' → logprob: -3.2296736240386963
    6. ',' → logprob: -4.729673385620117
    7. '<|end|>' → logprob: -4.854673385620117
    8. ':return' → logprob: -5.729673385620117
    9. '    
' → logprob: -5.854673385620117
    10. ')' → logprob: -5.854673385620117

Token 145: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16182929277420044
    2. '   ' → logprob: -2.7868292331695557
    3. ':
' → logprob: -3.4118292331695557
    4. '<|end|>' → logprob: -4.286829471588135
    5. ' and' → logprob: -4.411829471588135
    6. '
' → logprob: -4.661829471588135
    7. ':return' → logprob: -4.911829471588135
    8. ' :' → logprob: -5.161829471588135
    9. ')' → logprob: -6.411829471588135
    10. ',' → logprob: -6.536829471588135

Token 146: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3798888921737671
    2. ' return' → logprob: -1.754888892173767
    3. 'return' (adapté à ' return') → logprob: -2.1298890113830566
    4. ' if' → logprob: -4.004889011383057
    5. 'if' → logprob: -5.629889011383057
    6. 'acc' → logprob: -7.004889011383057
    7. ' acc' → logprob: -7.129889011383057
    8. 'result' → logprob: -7.754889011383057
    9. ' result' → logprob: -9.254888534545898
    10. '{
' → logprob: -10.129888534545898

Token 147: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.044239435344934464
    2. ' acc' → logprob: -3.6692395210266113
    3. '(acc' → logprob: -4.294239521026611
    4. '{' → logprob: -5.669239521026611
    5. '(' → logprob: -8.544239044189453
    6. 'operator' → logprob: -8.669239044189453
    7. '   ' → logprob: -9.169239044189453
    8. '{
' → logprob: -10.169239044189453
    9. ' (' → logprob: -10.169239044189453
    10. ' ' → logprob: -10.294239044189453

Token 148: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.063287153840065
    2. '+' → logprob: -2.8132872581481934
    3. ' if' → logprob: -6.688287258148193
    4. 'if' → logprob: -9.813286781311035
    5. 'acc' → logprob: -12.188286781311035
    6. ' or' → logprob: -12.438286781311035
    7. ' ' → logprob: -13.563286781311035
    8. '   ' → logprob: -13.688286781311035
    9. '0' → logprob: -14.188286781311035
    10. '
' → logprob: -14.438286781311035

Token 149: ' (' (ID: 350)
  Prédit: ' counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.19577983021736145
    2. 'counter' → logprob: -1.820779800415039
    3. '(counter' → logprob: -4.820779800415039
    4. ' (' → logprob: -5.570779800415039
    5. ' a' → logprob: -7.195779800415039
    6. ' acc' → logprob: -7.445779800415039
    7. ' operator' → logprob: -7.570779800415039
    8. '1' → logprob: -7.695779800415039
    9. ' ' → logprob: -8.195779800415039
    10. 'a' → logprob: -8.320779800415039

Token 150: 'counter' (ID: 32128)
  Prédit: 'counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.019157014787197113
    2. ' counter' → logprob: -4.3941569328308105
    3. '(counter' → logprob: -5.8941569328308105
    4. 'operator' → logprob: -6.2691569328308105
    5. 'acc' → logprob: -7.2691569328308105
    6. 'a' → logprob: -7.3941569328308105
    7. '1' → logprob: -9.269157409667969
    8. '(' → logprob: -9.644157409667969
    9. '   ' → logprob: -9.644157409667969
    10. '(a' → logprob: -9.769157409667969

Token 151: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.01253496203571558
    2. '.get' → logprob: -4.387535095214844
    3. 'a' → logprob: -11.387535095214844
    4. '[' → logprob: -12.637535095214844
    5. '[k' → logprob: -13.012535095214844
    6. ' [' → logprob: -13.262535095214844
    7. '(a' → logprob: -13.512535095214844
    8. 'get' → logprob: -13.637535095214844
    9. ' a' → logprob: -13.762535095214844
    10. '[get' → logprob: -14.387535095214844

Token 152: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.29106104373931885
    2. '*' → logprob: -1.4160610437393188
    3. '*(' → logprob: -4.916060924530029
    4. ' ' → logprob: -6.791060924530029
    5. ')' → logprob: -7.041060924530029
    6. '-' → logprob: -8.916061401367188
    7. '  ' → logprob: -9.666061401367188
    8. ' -' → logprob: -9.666061401367188
    9. ')*(' → logprob: -9.791061401367188
    10. '   ' → logprob: -9.916061401367188

Token 153: ' **' (ID: 6240)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6939049959182739
    2. ' *' → logprob: -0.6939049959182739
    3. '**' → logprob: -8.568904876708984
    4. ' ' → logprob: -8.568904876708984
    5. '*(' → logprob: -8.818904876708984
    6. ')' → logprob: -9.068904876708984
    7. ')*' → logprob: -10.068904876708984
    8. '   ' → logprob: -11.193904876708984
    9. ')*(' → logprob: -11.693904876708984
    10. '  ' → logprob: -11.693904876708984

Token 154: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000399091251892969
    2. ' ' → logprob: -7.875399112701416
    3. ')' → logprob: -12.625398635864258
    4. '```' → logprob: -12.812898635864258
    5. '3' → logprob: -12.875398635864258
    6. '1' → logprob: -13.000398635864258
    7. '   ' → logprob: -13.312898635864258
    8. '{' → logprob: -13.437898635864258
    9. '  ' → logprob: -14.375398635864258
    10. '(' → logprob: -14.687898635864258

Token 155: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.078839502763003e-05
    2. ' ' → logprob: -9.500090599060059
    3. '1' → logprob: -12.125090599060059
    4. '3' → logprob: -12.625090599060059
    5. ')' → logprob: -13.500090599060059
    6. '```' → logprob: -14.125090599060059
    7. '

' → logprob: -14.250090599060059
    8. '   ' → logprob: -14.500090599060059
    9. '0' → logprob: -14.687590599060059
    10. '{' → logprob: -14.750090599060059

Token 156: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29481732845306396
    2. ' if' → logprob: -1.419817328453064
    3. ' )' → logprob: -4.7948174476623535
    4. ' *' → logprob: -6.4198174476623535
    5. '   ' → logprob: -6.4198174476623535
    6. ' +' → logprob: -6.9198174476623535
    7. 'if' → logprob: -7.6698174476623535
    8. ')*' → logprob: -8.669816970825195
    9. '+' → logprob: -9.044816970825195
    10. '*' → logprob: -9.294816970825195

Token 157: ' condition' (ID: 7060)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.1129390150308609
    2. ' condition' → logprob: -2.2379391193389893
    3. 'not' → logprob: -9.86293888092041
    4. ' not' → logprob: -10.48793888092041
    5. '(condition' → logprob: -10.73793888092041
    6. ' ' → logprob: -12.11293888092041
    7. '   ' → logprob: -12.86293888092041
    8. 'counter' → logprob: -13.11293888092041
    9. 'a' → logprob: -13.61293888092041
    10. ' ' → logprob: -14.23793888092041

Token 158: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.013659999705851078
    2. ')' → logprob: -5.013659954071045
    3. 'else' → logprob: -5.013659954071045
    4. ' )' → logprob: -8.763660430908203
    5. ' ' → logprob: -9.263660430908203
    6. '	else' → logprob: -11.513660430908203
    7. '   ' → logprob: -12.388660430908203
    8. '<|end|>' → logprob: -12.888660430908203
    9. '    ' → logprob: -13.638660430908203
    10. '  ' → logprob: -13.888660430908203

Token 159: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006336133927106857
    2. ' ' → logprob: -5.131336212158203
    3. 'counter' → logprob: -8.256336212158203
    4. ' counter' → logprob: -9.006336212158203
    5. 'acc' → logprob: -11.506336212158203
    6. '   ' → logprob: -12.818836212158203
    7. ')' → logprob: -12.881336212158203
    8. '1' → logprob: -13.068836212158203
    9. '  ' → logprob: -13.693836212158203
    10. ' acc' → logprob: -13.881336212158203

Token 160: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000998751842416823
    2. ' ' → logprob: -7.6259989738464355
    3. 'counter' → logprob: -7.6259989738464355
    4. ' counter' → logprob: -11.500998497009277
    5. '1' → logprob: -12.750998497009277
    6. 'acc' → logprob: -13.000998497009277
    7. '(' → logprob: -13.375998497009277
    8. '(counter' → logprob: -13.563498497009277
    9. ')' → logprob: -13.688498497009277
    10. 'operator' → logprob: -14.563498497009277

Token 161: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011893989285454154
    2. ' )' → logprob: -6.751189231872559
    3. ',' → logprob: -11.501189231872559
    4. '   ' → logprob: -12.251189231872559
    5. ')
' → logprob: -14.001189231872559
    6. ')return' → logprob: -14.001189231872559
    7. '))' → logprob: -14.251189231872559
    8. '),' → logprob: -14.626189231872559
    9. ')+' → logprob: -15.251189231872559
    10. ',)' → logprob: -15.251189231872559

Token 162: 'ans' (ID: 616)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0034031171817332506
    2. 'res' → logprob: -6.503403186798096
    3. 'print' → logprob: -7.128403186798096
    4. 'answer' → logprob: -7.628403186798096
    5. ')' → logprob: -8.753402709960938
    6. 'reduce' → logprob: -8.878402709960938
    7. 'total' → logprob: -9.628402709960938
    8. 'keys' → logprob: -9.753402709960938
    9. 'sum' → logprob: -10.003402709960938
    10. 'from' → logprob: -10.503402709960938

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03809599578380585
    2. '=' → logprob: -3.2880959510803223
    3. ',' → logprob: -10.78809642791748
    4. '_' → logprob: -11.28809642791748
    5. ' ' → logprob: -11.53809642791748
    6. '  ' → logprob: -12.78809642791748
    7. ' +=' → logprob: -12.78809642791748
    8. ' ' → logprob: -13.16309642791748
    9. ')' → logprob: -13.66309642791748
    10. ' ,' → logprob: -14.28809642791748

Token 164: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.0009118211455643177
    2. ' reduce' → logprob: -7.000911712646484
    3. 'redu' → logprob: -16.250911712646484
    4. '   ' → logprob: -17.125911712646484
    5. '.reduce' → logprob: -17.375911712646484
    6. ' ' → logprob: -18.125911712646484
    7. '0' → logprob: -18.375911712646484
    8. '_reduce' → logprob: -18.500911712646484
    9. 'Reduce' → logprob: -18.625911712646484
    10. 're' → logprob: -18.750911712646484

Token 165: '(com' (ID: 27868)
  Prédit: '(operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(operator' → logprob: -0.13457052409648895
    2. '(com' → logprob: -2.134570598602295
    3. '(lambda' → logprob: -5.009570598602295
    4. '(' → logprob: -7.009570598602295
    5. '```' → logprob: -11.259570121765137
    6. 'complex' → logprob: -11.634570121765137
    7. ' (' → logprob: -12.134570121765137
    8. 'operator' → logprob: -12.759570121765137
    9. ' complex' → logprob: -12.759570121765137
    10. '(
' → logprob: -13.384570121765137

Token 166: 'plex' (ID: 12081)
  Prédit: 'plex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plex' → logprob: -0.0071005006320774555
    2. 'ple' → logprob: -5.132100582122803
    3. 'operator' → logprob: -7.382100582122803
    4. 'complex' → logprob: -8.132100105285645
    5. 'pl' → logprob: -9.007100105285645
    6. 'pler' → logprob: -10.632100105285645
    7. '(operator' → logprob: -10.882100105285645
    8. 'lex' → logprob: -11.007100105285645
    9. '[' → logprob: -11.132100105285645
    10. '```' → logprob: -11.632100105285645

Token 167: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -4.320199877838604e-07
    2. 'add' → logprob: -15.625
    3. 'Add' → logprob: -16.0
    4. '_Add' → logprob: -16.625
    5. ')' → logprob: -17.75
    6. '_ADD' → logprob: -18.375
    7. '_append' → logprob: -18.375
    8. '_ad' → logprob: -18.5
    9. 'def' → logprob: -18.625
    10. ')add' → logprob: -18.625

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014025058771949261
    2. ' ,' → logprob: -8.875140190124512
    3. ',c' → logprob: -15.375140190124512
    4. ',
' → logprob: -16.875141143798828
    5. '(counter' → logprob: -17.875141143798828
    6. 'counter' → logprob: -18.000141143798828
    7. '[counter' → logprob: -18.250141143798828
    8. ',k' → logprob: -18.500141143798828
    9. ')' → logprob: -19.000141143798828
    10. '‌,' → logprob: -19.250141143798828

Token 169: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.001729444949887693
    2. ' counter' → logprob: -6.376729488372803
    3. 'list' → logprob: -11.001729011535645
    4. 'sorted' → logprob: -12.001729011535645
    5. '[counter' → logprob: -13.126729011535645
    6. '(counter' → logprob: -14.626729011535645
    7. '	counter' → logprob: -14.626729011535645
    8. 'range' → logprob: -15.001729011535645
    9. 'filter' → logprob: -15.251729011535645
    10. ' ' → logprob: -15.501729011535645

Token 170: '.keys' (ID: 18392)
  Prédit: '.keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.keys' → logprob: -0.014274803921580315
    2. ')' → logprob: -4.514274597167969
    3. ',' → logprob: -5.764274597167969
    4. '),' → logprob: -9.764274597167969
    5. 'keys' → logprob: -11.389274597167969
    6. '.' → logprob: -12.139274597167969
    7. ',)' → logprob: -12.514274597167969
    8. ' ,' → logprob: -13.639274597167969
    9. '_keys' → logprob: -14.014274597167969
    10. '))' → logprob: -14.014274597167969

Token 171: '(),' (ID: 2547)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3875136077404022
    2. '(),' → logprob: -1.1375136375427246
    3. '()' → logprob: -7.512513637542725
    4. ')' → logprob: -9.512513160705566
    5. ' ())' → logprob: -11.137513160705566
    6. '()),' → logprob: -12.887513160705566
    7. ',' → logprob: -13.262513160705566
    8. '()]' → logprob: -14.262513160705566
    9. ' (),' → logprob: -14.262513160705566
    10. '();)' → logprob: -14.387513160705566

Token 172: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.875009536743164
    4. '۰' → logprob: -19.250009536743164
    5. ')' → logprob: -19.500009536743164
    6. '00' → logprob: -20.125009536743164
    7. '000' → logprob: -20.687509536743164
    8. '  ' → logprob: -21.062509536743164
    9. '０' → logprob: -21.062509536743164
    10. '1' → logprob: -21.187509536743164

Token 173: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '۰' → logprob: -18.875001907348633
    4. ')' → logprob: -19.125001907348633
    5. '00' → logprob: -19.312501907348633
    6. '000' → logprob: -19.500001907348633
    7. '   ' → logprob: -19.750001907348633
    8. '０' → logprob: -20.562501907348633
    9. '1' → logprob: -20.937501907348633
    10. '  ' → logprob: -21.250001907348633

Token 174: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -14.250001907348633
    3. ' )' → logprob: -14.375001907348633
    4. ')+' → logprob: -15.125001907348633
    5. ')`' → logprob: -16.375001907348633
    6. '))' → logprob: -16.500001907348633
    7. ')#' → logprob: -17.250001907348633
    8. '+' → logprob: -17.250001907348633
    9. ')}' → logprob: -17.375001907348633
    10. ').' → logprob: -18.625001907348633

Token 175: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11408120393753052
    2. 'print' → logprob: -2.2390811443328857
    3. 'p' → logprob: -7.489081382751465
    4. '
' → logprob: -7.864081382751465
    5. ')
' → logprob: -9.614081382751465
    6. '#' → logprob: -10.114081382751465
    7. '  
' → logprob: -10.364081382751465
    8. '+' → logprob: -10.739081382751465
    9. 'pr' → logprob: -10.739081382751465
    10. ' 
' → logprob: -10.989081382751465

Token 176: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.014306649565696716
    2. '(' → logprob: -4.264306545257568
    3. '()' → logprob: -8.889307022094727
    4. 'ans' → logprob: -13.264307022094727
    5. ' (' → logprob: -13.639307022094727
    6. '(len' → logprob: -14.889307022094727
    7. '(answer' → logprob: -15.014307022094727
    8. '(sum' → logprob: -15.014307022094727
    9. '('' → logprob: -15.264307022094727
    10. '((' → logprob: -15.264307022094727

Token 177: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ' )' → logprob: -13.25000286102295
    3. '))' → logprob: -14.50000286102295
    4. ')
' → logprob: -15.25000286102295
    5. ')`' → logprob: -15.25000286102295
    6. '`)' → logprob: -16.625003814697266
    7. '())' → logprob: -17.625003814697266
    8. '+' → logprob: -17.875003814697266
    9. '')' → logprob: -18.000003814697266
    10. '(' → logprob: -18.125003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 175
Tokens correctement prédits (1ère position, stricte): 61
Tokens correctement prédits (1ère position, avec adaptation): 61
Tokens correctement prédits (top 10): 124
Précision stricte (1ère position): 34.86%
Précision adaptée (1ère position): 34.86%
Précision (top 10): 70.86%
================================================================================
