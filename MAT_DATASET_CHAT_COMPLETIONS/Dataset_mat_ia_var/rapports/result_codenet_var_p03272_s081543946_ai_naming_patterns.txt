================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_total_count, input_subtract_value = map(int, input().split())
output_result = input_total_count - input_subtract_value + 1
print(output_result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_total' (ID: 23814)
  → Token d'amorce (pas de prédiction)

Token 2: '_count' (ID: 7536)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07225313782691956
    2. '.' → logprob: -3.1972532272338867
    3. '[' → logprob: -4.322253227233887
    4. '```' → logprob: -5.447253227233887
    5. '=' → logprob: -5.572253227233887
    6. ')' → logprob: -5.572253227233887
    7. '_input' → logprob: -6.947253227233887
    8. ' _' → logprob: -8.322253227233887
    9. '__' → logprob: -8.322253227233887
    10. '_count' → logprob: -8.697253227233887

Token 4: ' input' (ID: 3422)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9519413709640503
    2. ' ' → logprob: -1.8269413709640503
    3. '_' → logprob: -1.8269413709640503
    4. ' =' → logprob: -2.82694149017334
    5. '_input' → logprob: -3.07694149017334
    6. 'input' → logprob: -3.32694149017334
    7. ',' → logprob: -3.45194149017334
    8. '<|end|>' → logprob: -3.82694149017334
    9. '```' → logprob: -4.20194149017334
    10. ')' → logprob: -4.32694149017334

Token 5: '_sub' (ID: 11572)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9891699552536011
    2. '.' → logprob: -1.114169955253601
    3. '=' → logprob: -1.614169955253601
    4. '[' → logprob: -3.2391700744628906
    5. ' =' → logprob: -3.7391700744628906
    6. ',' → logprob: -4.114170074462891
    7. ')' → logprob: -4.239170074462891
    8. '_space' → logprob: -5.364170074462891
    9. '+' → logprob: -7.614170074462891
    10. '```' → logprob: -7.864170074462891

Token 6: 'tract' (ID: 2642)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3570699393749237
    2. '[' → logprob: -1.982069969177246
    3. '.' → logprob: -2.107069969177246
    4. '=' → logprob: -4.482069969177246
    5. '```' → logprob: -4.482069969177246
    6. '*' → logprob: -5.732069969177246
    7. ')' → logprob: -5.857069969177246
    8. ',' → logprob: -5.857069969177246
    9. ' =' → logprob: -6.232069969177246
    10. '+' → logprob: -6.357069969177246

Token 7: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08769932389259338
    2. '=' → logprob: -2.8376994132995605
    3. ' =' → logprob: -4.3376994132995605
    4. '```' → logprob: -5.2126994132995605
    5. '*' → logprob: -6.3376994132995605
    6. ')' → logprob: -6.8376994132995605
    7. ',' → logprob: -7.2126994132995605
    8. ' _' → logprob: -7.2126994132995605
    9. '(' → logprob: -7.9626994132995605
    10. ' ' → logprob: -8.462698936462402

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3975183963775635
    2. '_' → logprob: -1.5225183963775635
    3. ' =' → logprob: -2.3975183963775635
    4. '```' → logprob: -5.272518157958984
    5. ')' → logprob: -5.397518157958984
    6. '*' → logprob: -5.772518157958984
    7. ',' → logprob: -6.272518157958984
    8. '+' → logprob: -6.772518157958984
    9. '-' → logprob: -7.147518157958984
    10. '.' → logprob: -7.772518157958984

Token 9: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3988523483276367
    2. '0' → logprob: -1.1488523483276367
    3. ' map' → logprob: -5.148852348327637
    4. 'input' → logprob: -5.898852348327637
    5. 'map' → logprob: -6.523852348327637
    6. ' input' → logprob: -6.523852348327637
    7. '10' → logprob: -9.273852348327637
    8. ' [' → logprob: -9.648852348327637
    9. '1' → logprob: -9.773852348327637
    10. ' (' → logprob: -10.023852348327637

Token 10: '(int' (ID: 2742)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 11: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04912593215703964
    2. 'input' → logprob: -3.549125909805298
    3. ')' → logprob: -4.049126148223877
    4. '(' → logprob: -7.424126148223877
    5. ' input' → logprob: -8.299125671386719
    6. '[input' → logprob: -8.549125671386719
    7. ',input' → logprob: -8.924125671386719
    8. '(user' → logprob: -8.924125671386719
    9. '<|end|>' → logprob: -9.174125671386719
    10. '```' → logprob: -9.799125671386719

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018155328929424286
    2. ' input' → logprob: -4.018155097961426
    3. '(input' → logprob: -12.518155097961426
    4. ')' → logprob: -13.518155097961426
    5. ',input' → logprob: -16.018156051635742
    6. '<input' → logprob: -16.643156051635742
    7. '```' → logprob: -17.018156051635742
    8. '[input' → logprob: -17.018156051635742
    9. '=input' → logprob: -17.393156051635742
    10. '	input' → logprob: -18.018156051635742

Token 13: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.22959919273853302
    2. '()' → logprob: -1.7295992374420166
    3. '())' → logprob: -3.6045992374420166
    4. '(' → logprob: -8.229598999023438
    5. '());' → logprob: -9.229598999023438
    6. ')' → logprob: -9.354598999023438
    7. '();)' → logprob: -10.229598999023438
    8. '`()' → logprob: -11.229598999023438
    9. '()]' → logprob: -11.479598999023438
    10. '()).' → logprob: -11.479598999023438

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.236549335066229e-05
    2. 'strip' → logprob: -10.875021934509277
    3. ' split' → logprob: -13.375021934509277
    4. 'rstrip' → logprob: -13.500021934509277
    5. 'spl' → logprob: -14.875021934509277
    6. '(split' → logprob: -16.625022888183594
    7. 'replace' → logprob: -17.125022888183594
    8. 'startswith' → logprob: -17.875022888183594
    9. 'read' → logprob: -18.875022888183594
    10. 's' → logprob: -18.875022888183594

Token 15: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3759775757789612
    2. ')' → logprob: -1.2509775161743164
    3. '))' → logprob: -3.8759775161743164
    4. '()' → logprob: -5.750977516174316
    5. '()))' → logprob: -6.125977516174316
    6. '('' → logprob: -7.750977516174316
    7. '(' → logprob: -8.000977516174316
    8. '`)' → logprob: -10.000977516174316
    9. ' ())' → logprob: -10.250977516174316
    10. '(','' → logprob: -10.625977516174316

Token 16: 'output' (ID: 6130)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3696419596672058
    2. '+' → logprob: -1.8696420192718506
    3. '
' → logprob: -2.7446420192718506
    4. 'input' → logprob: -3.9946420192718506
    5. '+
' → logprob: -3.9946420192718506
    6. '```' → logprob: -4.3696417808532715
    7. '\n' → logprob: -4.8696417808532715
    8. ' if' → logprob: -5.1196417808532715
    9. '-' → logprob: -5.3696417808532715
    10. 'result' → logprob: -5.6196417808532715

Token 17: '_result' (ID: 11623)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4387838542461395
    2. '(' → logprob: -1.063783884048462
    3. '=' → logprob: -5.438783645629883
    4. ' =' → logprob: -6.563783645629883
    5. '+' → logprob: -6.813783645629883
    6. '[' → logprob: -7.313783645629883
    7. '.' → logprob: -7.688783645629883
    8. ''' → logprob: -8.188783645629883
    9. ')' → logprob: -8.188783645629883
    10. '```' → logprob: -8.438783645629883

Token 18: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5549054741859436
    2. ' =' → logprob: -1.1799054145812988
    3. ' +=' → logprob: -2.804905414581299
    4. '<|end|>' → logprob: -3.679905414581299
    5. '_' → logprob: -4.929905414581299
    6. '+=' → logprob: -4.929905414581299
    7. '+' → logprob: -4.929905414581299
    8. ' ' → logprob: -5.429905414581299
    9. '```' → logprob: -6.179905414581299
    10. '[' → logprob: -6.804905414581299

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20164458453655243
    2. ' input' → logprob: -1.7016445398330688
    3. 'max' → logprob: -8.951644897460938
    4. ' max' → logprob: -9.576644897460938
    5. '0' → logprob: -11.576644897460938
    6. 'output' → logprob: -11.576644897460938
    7. ' ' → logprob: -12.326644897460938
    8. '(input' → logprob: -12.451644897460938
    9. 'int' → logprob: -13.701644897460938
    10. 'abs' → logprob: -14.201644897460938

Token 20: '_total' (ID: 23814)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2658180892467499
    2. '(' → logprob: -2.1408181190490723
    3. '```' → logprob: -3.5158181190490723
    4. '[' → logprob: -3.6408181190490723
    5. '()' → logprob: -4.515818119049072
    6. ''' → logprob: -4.640818119049072
    7. '_total' → logprob: -4.890818119049072
    8. '.' → logprob: -4.890818119049072
    9. ')' → logprob: -5.015818119049072
    10. '"' → logprob: -5.265818119049072

Token 21: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00023917861108202487
    2. '_total' → logprob: -8.500239372253418
    3. '_' → logprob: -11.500239372253418
    4. '_result' → logprob: -12.125239372253418
    5. '_code' → logprob: -12.375239372253418
    6. '_output' → logprob: -12.375239372253418
    7. '_counts' → logprob: -12.500239372253418
    8. '_sum' → logprob: -13.125239372253418
    9. '_value' → logprob: -13.250239372253418
    10. '_counter' → logprob: -14.375239372253418

Token 22: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03842953220009804
    2. ' -' → logprob: -3.9134294986724854
    3. ' ' → logprob: -4.2884297370910645
    4. '<|end|>' → logprob: -5.9134297370910645
    5. 'for' → logprob: -8.163429260253906
    6. '_' → logprob: -8.413429260253906
    7. ' for' → logprob: -9.038429260253906
    8. '  ' → logprob: -9.163429260253906
    9. ' -=' → logprob: -9.163429260253906
    10. '```' → logprob: -9.288429260253906

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759477615356445
    2. ' input' → logprob: -0.8259477615356445
    3. ' ' → logprob: -12.575947761535645
    4. '_input' → logprob: -12.950947761535645
    5. '1' → logprob: -14.200947761535645
    6. '_' → logprob: -14.450947761535645
    7. '(input' → logprob: -15.200947761535645
    8. 'output' → logprob: -15.825947761535645
    9. '=input' → logprob: -15.825947761535645
    10. ' ' → logprob: -15.950947761535645

Token 24: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.09248599410057068
    2. '_' → logprob: -2.4674859046936035
    3. '_total' → logprob: -5.7174859046936035
    4. '_s' → logprob: -9.717486381530762
    5. '_)' → logprob: -11.092486381530762
    6. '_SUB' → logprob: -11.092486381530762
    7. '_-' → logprob: -11.217486381530762
    8. '_subset' → logprob: -11.467486381530762
    9. ''_' → logprob: -11.592486381530762
    10. '__' → logprob: -11.717486381530762

Token 25: 'tract' (ID: 2642)
  Prédit: 'tract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tract' → logprob: -6.749814019713085e-06
    2. 'stract' → logprob: -12.125006675720215
    3. 'tra' → logprob: -14.125006675720215
    4. 'tracted' → logprob: -15.250006675720215
    5. 'tr' → logprob: -16.37500762939453
    6. ' tract' → logprob: -16.62500762939453
    7. 'traction' → logprob: -17.37500762939453
    8. 'tractor' → logprob: -18.50000762939453
    9. 'TRACT' → logprob: -18.62500762939453
    10. '```' → logprob: -18.62500762939453

Token 26: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00010640407708706334
    2. '_' → logprob: -9.250106811523438
    3. '_val' → logprob: -12.750106811523438
    4. '```' → logprob: -13.250106811523438
    5. '_count' → logprob: -13.500106811523438
    6. '_values' → logprob: -14.250106811523438
    7. ' _' → logprob: -14.250106811523438
    8. 'value' → logprob: -14.500106811523438
    9. '_Value' → logprob: -15.000106811523438
    10. '_output' → logprob: -15.000106811523438

Token 27: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014680384658277035
    2. ' ' → logprob: -4.5146803855896
    3. '10' → logprob: -6.2646803855896
    4. '0' → logprob: -7.3896803855896
    5. '2' → logprob: -8.139679908752441
    6. '5' → logprob: -8.389679908752441
    7. '20' → logprob: -9.014679908752441
    8. 'input' → logprob: -9.139679908752441
    9. ' input' → logprob: -9.264679908752441
    10. '100' → logprob: -9.264679908752441

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016986940056085587
    2. '10' → logprob: -5.391986846923828
    3. '0' → logprob: -5.516986846923828
    4. 'input' → logprob: -5.891986846923828
    5. '2' → logprob: -6.516986846923828
    6. ' ' → logprob: -6.641986846923828
    7. '5' → logprob: -7.141986846923828
    8. '(' → logprob: -7.766986846923828
    9. '100' → logprob: -7.891986846923828
    10. '3' → logprob: -8.266986846923828

Token 30: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16157658398151398
    2. ')' → logprob: -2.411576509475708
    3. '<|end|>' → logprob: -3.036576509475708
    4. '```' → logprob: -5.661576747894287
    5. '
' → logprob: -5.911576747894287
    6. '#' → logprob: -6.911576747894287
    7. ' print' → logprob: -7.161576747894287
    8. '\n' → logprob: -7.286576747894287
    9. '\' → logprob: -7.536576747894287
    10. '%' → logprob: -7.786576747894287

Token 32: '(output' (ID: 22485)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10023190826177597
    2. '(output' → logprob: -2.350231885910034
    3. '("("' → logprob: -11.975232124328613
    4. '(input' → logprob: -12.100232124328613
    5. '('' → logprob: -12.225232124328613
    6. ' (' → logprob: -13.225232124328613
    7. '(open' → logprob: -13.225232124328613
    8. '()' → logprob: -13.475232124328613
    9. '(print' → logprob: -14.725232124328613
    10. '(
' → logprob: -14.975232124328613

Token 33: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.0001923352392623201
    2. ')_' → logprob: -9.500192642211914
    3. '_res' → logprob: -10.125192642211914
    4. '_' → logprob: -10.500192642211914
    5. '_output' → logprob: -11.250192642211914
    6. ')' → logprob: -11.375192642211914
    7. '_results' → logprob: -11.750192642211914
    8. '_)' → logprob: -11.750192642211914
    9. '_r' → logprob: -12.375192642211914
    10. '_value' → logprob: -13.250192642211914

Token 34: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. '))' → logprob: -14.250000953674316
    3. ' )' → logprob: -14.750000953674316
    4. ')`' → logprob: -16.625001907348633
    5. '`)' → logprob: -16.750001907348633
    6. '')' → logprob: -18.125001907348633
    7. ')
' → logprob: -18.250001907348633
    8. '```' → logprob: -18.500001907348633
    9. '()' → logprob: -19.500001907348633
    10. '）' → logprob: -19.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 32
Tokens correctement prédits (1ère position, stricte): 10
Tokens correctement prédits (1ère position, avec adaptation): 10
Tokens correctement prédits (top 10): 20
Précision stricte (1ère position): 31.25%
Précision adaptée (1ère position): 31.25%
Précision (top 10): 62.50%
================================================================================
