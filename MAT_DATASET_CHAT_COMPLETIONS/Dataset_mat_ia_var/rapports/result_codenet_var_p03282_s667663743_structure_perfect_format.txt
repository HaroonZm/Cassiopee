================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
S = input()
K = int(input())

ans = 1
for i in range(K):
    if S[i] != '1':
        ans = S[i]
        break

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'S' (ID: 50)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0149991475045681
    2. ''' → logprob: -4.889998912811279
    3. '('' → logprob: -5.514998912811279
    4. '"' → logprob: -6.514998912811279
    5. '()' → logprob: -7.014998912811279
    6. '("("' → logprob: -7.889998912811279
    7. '`' → logprob: -8.764999389648438
    8. '(
' → logprob: -9.139999389648438
    9. '```' → logprob: -9.639999389648438
    10. '[' → logprob: -10.264999389648438

Token 4: 'K' (ID: 42)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09113486111164093
    2. '[' → logprob: -3.466134786605835
    3. '[::-' → logprob: -3.591134786605835
    4. 'if' → logprob: -4.716135025024414
    5. '.strip' → logprob: -4.841135025024414
    6. '.count' → logprob: -5.966135025024414
    7. 'print' → logprob: -6.091135025024414
    8. '+' → logprob: -6.716135025024414
    9. '.lower' → logprob: -6.966135025024414
    10. '.upper' → logprob: -7.216135025024414

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6405919790267944
    2. '=' → logprob: -0.7655919790267944
    3. ' ' → logprob: -5.890592098236084
    4. '[' → logprob: -5.890592098236084
    5. '.' → logprob: -6.265592098236084
    6. '=int' → logprob: -8.890591621398926
    7. '_' → logprob: -9.265591621398926
    8. ',' → logprob: -9.765591621398926
    9. ')' → logprob: -9.890591621398926
    10. '*' → logprob: -10.515591621398926

Token 6: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2535022795200348
    2. ' int' → logprob: -1.5035022497177124
    3. '0' → logprob: -7.003502368927002
    4. ' ' → logprob: -7.628502368927002
    5. '1' → logprob: -9.503501892089844
    6. 'input' → logprob: -10.878501892089844
    7. '10' → logprob: -11.378501892089844
    8. '=int' → logprob: -11.378501892089844
    9. 'len' → logprob: -11.628501892089844
    10. '<int' → logprob: -11.753501892089844

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10185687988996506
    2. '(S' → logprob: -2.3518569469451904
    3. '(input' → logprob: -7.101856708526611
    4. '('' → logprob: -7.976856708526611
    5. '()' → logprob: -8.47685718536377
    6. '(`' → logprob: -9.60185718536377
    7. ' (' → logprob: -10.10185718536377
    8. '`' → logprob: -10.60185718536377
    9. '(K' → logprob: -10.85185718536377
    10. ')' → logprob: -11.47685718536377

Token 8: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011782300658524036
    2. '()' → logprob: -4.886782169342041
    3. '())' → logprob: -5.636782169342041
    4. '(' → logprob: -7.511782169342041
    5. '`)' → logprob: -10.8867826461792
    6. '))' → logprob: -11.1367826461792
    7. '('' → logprob: -12.3867826461792
    8. '')' → logprob: -12.3867826461792
    9. ')`' → logprob: -12.3867826461792
    10. ' )' → logprob: -12.7617826461792

Token 9: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16787846386432648
    2. 'if' → logprob: -2.7928783893585205
    3. 'result' → logprob: -3.1678783893585205
    4. 'print' → logprob: -3.5428783893585205
    5. 'count' → logprob: -4.1678786277771
    6. 's' → logprob: -6.5428786277771
    7. '```' → logprob: -6.7928786277771
    8. 'd' → logprob: -7.5428786277771
    9. 'n' → logprob: -8.042878150939941
    10. 'i' → logprob: -8.292878150939941

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2266901433467865
    2. '=' → logprob: -1.6016901731491089
    3. '_' → logprob: -7.101690292358398
    4. '[' → logprob: -7.976690292358398
    5. ' ' → logprob: -9.976690292358398
    6. ' +=' → logprob: -10.601690292358398
    7. '[:]' → logprob: -11.726690292358398
    8. '[]' → logprob: -12.226690292358398
    9. ',' → logprob: -12.226690292358398
    10. '_=' → logprob: -13.101690292358398

Token 11: ' ' (ID: 220)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.24793300032615662
    2. '''' → logprob: -1.872933030128479
    3. '"' → logprob: -3.3729329109191895
    4. ''' → logprob: -4.4979329109191895
    5. '0' → logprob: -4.4979329109191895
    6. 'S' → logprob: -5.7479329109191895
    7. ''S' → logprob: -5.9979329109191895
    8. '[]' → logprob: -6.4979329109191895
    9. '"S' → logprob: -7.8729329109191895
    10. ''s' → logprob: -8.122933387756348

Token 12: '1' (ID: 16)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.2666134536266327
    2. '''' → logprob: -1.891613483428955
    3. '"' → logprob: -3.516613483428955
    4. 'len' → logprob: -4.141613483428955
    5. 'S' → logprob: -4.266613483428955
    6. '[]' → logprob: -4.641613483428955
    7. '0' → logprob: -5.016613483428955
    8. ''S' → logprob: -6.141613483428955
    9. ''' → logprob: -6.391613483428955
    10. '"S' → logprob: -7.141613483428955

Token 13: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 14: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12459061294794083
    2. ' for' → logprob: -2.9995906352996826
    3. 'current' → logprob: -3.4995906352996826
    4. '*' → logprob: -3.7495906352996826
    5. 'd' → logprob: -5.9995903968811035
    6. 'max' → logprob: -6.1245903968811035
    7. ' current' → logprob: -6.9995903968811035
    8. 'i' → logprob: -7.2495903968811035
    9. 'l' → logprob: -7.3745903968811035
    10. 'f' → logprob: -7.3745903968811035

Token 15: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4312794804573059
    2. ' ' → logprob: -1.1812794208526611
    3. '_' → logprob: -3.806279420852661
    4. ' _' → logprob: -3.931279420852661
    5. 'i' → logprob: -6.55627965927124
    6. '  ' → logprob: -9.681279182434082
    7. ' ‌' → logprob: -10.431279182434082
    8. ' ' → logprob: -10.681279182434082
    9. ' ▁' → logprob: -11.306279182434082
    10. '_i' → logprob: -11.306279182434082

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018647341057658195
    2. 'in' → logprob: -4.018647193908691
    3. ' ' → logprob: -7.768647193908691
    4. 'n' → logprob: -10.643647193908691
    5. ' n' → logprob: -11.018647193908691
    6. ',' → logprob: -11.893647193908691
    7. '+' → logprob: -12.018647193908691
    8. 'range' → logprob: -12.768647193908691
    9. '  ' → logprob: -12.893647193908691
    10. ' i' → logprob: -12.893647193908691

Token 17: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20144978165626526
    2. 'range' → logprob: -1.7014497518539429
    3. ' ' → logprob: -10.451449394226074
    4. '	range' → logprob: -12.951449394226074
    5. '(range' → logprob: -13.701449394226074
    6. ' in' → logprob: -14.076449394226074
    7. ' S' → logprob: -14.326449394226074
    8. '  ' → logprob: -14.576449394226074
    9. ' xrange' → logprob: -14.701449394226074
    10. '   ' → logprob: -14.951449394226074

Token 18: '(K' (ID: 28797)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6935829520225525
    2. '(len' → logprob: -0.6935829520225525
    3. '(length' → logprob: -8.693582534790039
    4. '(S' → logprob: -9.443582534790039
    5. '(K' → logprob: -9.443582534790039
    6. ' (' → logprob: -9.818582534790039
    7. '(n' → logprob: -10.693582534790039
    8. '(s' → logprob: -11.818582534790039
    9. '(L' → logprob: -12.193582534790039
    10. '(i' → logprob: -12.443582534790039

Token 19: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5576280951499939
    2. '):' → logprob: -1.1826281547546387
    3. ')' → logprob: -3.0576281547546387
    4. '-' → logprob: -3.3076281547546387
    5. ' +' → logprob: -4.182628154754639
    6. ' ):' → logprob: -4.432628154754639
    7. ' )' → logprob: -5.557628154754639
    8. ',' → logprob: -5.807628154754639
    9. ' -' → logprob: -7.057628154754639
    10. ' ' → logprob: -7.057628154754639

Token 20: '   ' (ID: 271)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.6551716327667236
    2. ' if' → logprob: -1.1551716327667236
    3. 'ans' → logprob: -2.6551716327667236
    4. '   ' → logprob: -3.1551716327667236
    5. 'if' → logprob: -4.2801713943481445
    6. ' ' → logprob: -4.4051713943481445
    7. '	ans' → logprob: -5.5301713943481445
    8. ' *' → logprob: -5.6551713943481445
    9. 's' → logprob: -5.6551713943481445
    10. ' for' → logprob: -5.6551713943481445

Token 21: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2217599153518677
    2. ' ans' → logprob: -1.4717599153518677
    3. 'ans' → logprob: -2.221759796142578
    4. ' ' → logprob: -2.221759796142578
    5. '   ' → logprob: -2.346759796142578
    6. 'if' (adapté à ' if') → logprob: -2.346759796142578
    7. ' S' → logprob: -4.971759796142578
    8. 'S' → logprob: -5.096759796142578
    9. ' a' → logprob: -5.221759796142578
    10. 's' → logprob: -5.221759796142578

Token 22: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.09468855708837509
    2. 'S' → logprob: -2.469688653945923
    3. ' i' → logprob: -5.969688415527344
    4. ' ' → logprob: -6.094688415527344
    5. 'i' → logprob: -7.344688415527344
    6. ' ans' → logprob: -8.719688415527344
    7. ' len' → logprob: -10.969688415527344
    8. '   ' → logprob: -11.219688415527344
    9. ' K' → logprob: -11.469688415527344
    10. ' not' → logprob: -11.594688415527344

Token 23: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006738699972629547
    2. '[' → logprob: -5.006738662719727
    3. ' [' → logprob: -11.381738662719727
    4. '[I' → logprob: -12.131738662719727
    5. '[S' → logprob: -13.381738662719727
    6. '==' → logprob: -14.256738662719727
    7. 'i' → logprob: -14.381738662719727
    8. '[int' → logprob: -14.506738662719727
    9. '[K' → logprob: -14.631738662719727
    10. '[...]' → logprob: -14.631738662719727

Token 24: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.031593408435583115
    2. ']==' → logprob: -4.281593322753906
    3. ']!=' → logprob: -5.156593322753906
    4. ' ]' → logprob: -6.156593322753906
    5. '==' → logprob: -6.156593322753906
    6. '!=' → logprob: -6.531593322753906
    7. ':' → logprob: -6.531593322753906
    8. ':]' → logprob: -6.781593322753906
    9. ' ' → logprob: -7.281593322753906
    10. '+' → logprob: -7.531593322753906

Token 25: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8453159928321838
    2. '!=' → logprob: -1.345315933227539
    3. ' ==' → logprob: -1.595315933227539
    4. ' !=' → logprob: -2.345315933227539
    5. '=' → logprob: -5.220315933227539
    6. ' ' → logprob: -5.595315933227539
    7. '+' → logprob: -7.845315933227539
    8. '>' → logprob: -7.970315933227539
    9. ' in' → logprob: -8.345315933227539
    10. ':' → logprob: -9.095315933227539

Token 26: ' '' (ID: 461)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.007870413362979889
    2. ' S' → logprob: -4.882870197296143
    3. ''' → logprob: -8.7578706741333
    4. ''S' → logprob: -9.7578706741333
    5. '   ' → logprob: -11.1328706741333
    6. ' ' → logprob: -11.2578706741333
    7. ' '' → logprob: -12.2578706741333
    8. '"S' → logprob: -12.7578706741333
    9. '  ' → logprob: -12.8828706741333
    10. 's' → logprob: -13.5078706741333

Token 27: '1' (ID: 16)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.06356137990951538
    2. ''' → logprob: -3.43856143951416
    3. ''S' → logprob: -4.93856143951416
    4. '?' → logprob: -5.06356143951416
    5. '0' → logprob: -5.06356143951416
    6. ' S' → logprob: -5.81356143951416
    7. 'a' → logprob: -5.93856143951416
    8. '1' → logprob: -6.81356143951416
    9. ''?' → logprob: -7.43856143951416
    10. ''a' → logprob: -7.68856143951416

Token 28: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.35915353894233704
    2. ''' → logprob: -1.4841535091400146
    3. '0' → logprob: -2.7341535091400146
    4. '1' → logprob: -4.984153747558594
    5. ' ':' → logprob: -6.734153747558594
    6. '9' → logprob: -7.484153747558594
    7. ''s' → logprob: -8.484153747558594
    8. '*' → logprob: -8.484153747558594
    9. ':' → logprob: -8.484153747558594
    10. ' '' → logprob: -9.109153747558594

Token 29: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8409178256988525
    2. ' ans' → logprob: -0.8409178256988525
    3. '   ' → logprob: -2.3409178256988525
    4. '1' → logprob: -4.965917587280273
    5. '	ans' → logprob: -4.965917587280273
    6. '0' → logprob: -5.215917587280273
    7. 'break' → logprob: -5.590917587280273
    8. '       ' → logprob: -5.715917587280273
    9. ' ' → logprob: -5.965917587280273
    10. '    ' → logprob: -6.090917587280273

Token 30: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.12986908853054047
    2. 'break' → logprob: -2.504868984222412
    3. ' ans' → logprob: -3.504868984222412
    4. ' break' → logprob: -4.879868984222412
    5. '   ' → logprob: -7.004868984222412
    6. '	ans' → logprob: -7.254868984222412
    7. ' ' → logprob: -8.25486946105957
    8. '(ans' → logprob: -9.25486946105957
    9. '```' → logprob: -9.25486946105957
    10. 'print' → logprob: -9.62986946105957

Token 31: ' =' (ID: 314)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -1.0713253021240234
    2. '*=' → logprob: -1.1963253021240234
    3. '=' → logprob: -1.3213253021240234
    4. ' =' → logprob: -2.8213253021240234
    5. '*' → logprob: -3.8213253021240234
    6. '+=' → logprob: -5.446325302124023
    7. ' +=' → logprob: -6.071325302124023
    8. ' *' → logprob: -8.321325302124023
    9. ' ' → logprob: -10.446325302124023
    10. ' ' → logprob: -11.821325302124023

Token 32: ' S' (ID: 336)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05264558643102646
    2. 'ans' → logprob: -4.052645683288574
    3. 'int' → logprob: -4.677645683288574
    4. 'S' → logprob: -4.802645683288574
    5. ' ' → logprob: -4.927645683288574
    6. 'i' → logprob: -5.427645683288574
    7. '1' → logprob: -6.427645683288574
    8. '2' → logprob: -6.552645683288574
    9. ' ans' → logprob: -7.302645683288574
    10. ' S' → logprob: -8.177645683288574

Token 33: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006465525948442519
    2. '[' → logprob: -7.500646591186523
    3. '[:' → logprob: -10.125646591186523
    4. 'i' → logprob: -10.500646591186523
    5. '[int' → logprob: -11.000646591186523
    6. '[:]' → logprob: -13.000646591186523
    7. '[index' → logprob: -14.125646591186523
    8. '[count' → logprob: -14.500646591186523
    9. '[I' → logprob: -14.500646591186523
    10. '[]' → logprob: -14.750646591186523

Token 34: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014780828496441245
    2. ')
' → logprob: -7.75147819519043
    3. ' )' → logprob: -8.12647819519043
    4. '')' → logprob: -8.87647819519043
    5. ']' → logprob: -9.62647819519043
    6. '<|end|>' → logprob: -9.75147819519043
    7. '   ' → logprob: -9.75147819519043
    8. '.count' → logprob: -10.37647819519043
    9. '])' → logprob: -10.62647819519043
    10. ')i' → logprob: -10.75147819519043

Token 35: '       ' (ID: 309)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6714831590652466
    2. '+' → logprob: -1.7964831590652466
    3. '<|end|>' → logprob: -1.9214831590652466
    4. '*' → logprob: -2.296483039855957
    5. ' ' → logprob: -2.796483039855957
    6. ' 
' → logprob: -3.046483039855957
    7. 'i' → logprob: -3.046483039855957
    8. '[' → logprob: -3.296483039855957
    9. 'break' → logprob: -3.296483039855957
    10. '
' → logprob: -3.421483039855957

Token 36: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -1.0848472118377686
    2. '       ' → logprob: -1.2098472118377686
    3. ' break' → logprob: -1.9598472118377686
    4. ' ' → logprob: -3.2098472118377686
    5. '+' → logprob: -3.3348472118377686
    6. '*' → logprob: -3.7098472118377686
    7. '\n' → logprob: -3.8348472118377686
    8. '   ' → logprob: -3.9598472118377686
    9. '           ' → logprob: -4.584847450256348
    10. '
' → logprob: -4.959847450256348

Token 37: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: 'print' (ID: 1598)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.0391157865524292
    2. '<|end|>' → logprob: -1.2891157865524292
    3. 'print' → logprob: -2.0391159057617188
    4. '+' → logprob: -2.0391159057617188
    5. '0' → logprob: -3.4141159057617188
    6. 'else' → logprob: -4.039115905761719
    7. '#' → logprob: -4.164115905761719
    8. '```' → logprob: -4.664115905761719
    9. ')' → logprob: -5.039115905761719
    10. '1' → logprob: -5.539115905761719

Token 39: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.13160578906536102
    2. '(' → logprob: -2.131605863571167
    3. '()' → logprob: -5.381605625152588
    4. 'ans' → logprob: -10.256606101989746
    5. '('' → logprob: -11.631606101989746
    6. '(
' → logprob: -12.006606101989746
    7. '(`' → logprob: -12.131606101989746
    8. '(len' → logprob: -13.006606101989746
    9. '(S' → logprob: -13.256606101989746
    10. '(

' → logprob: -13.631606101989746

Token 40: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.625000953674316
    3. ')`' → logprob: -16.5
    4. '`)' → logprob: -16.875
    5. '')' → logprob: -17.0
    6. '）' → logprob: -17.75
    7. '))' → logprob: -17.75
    8. '()' → logprob: -18.0
    9. ')
' → logprob: -18.75
    10. '")' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 38
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 26
Précision stricte (1ère position): 34.21%
Précision adaptée (1ère position): 39.47%
Précision (top 10): 68.42%
================================================================================
