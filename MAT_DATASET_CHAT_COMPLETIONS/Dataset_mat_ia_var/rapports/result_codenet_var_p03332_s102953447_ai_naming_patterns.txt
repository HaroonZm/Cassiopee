================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
MOD_CONST = 998244353

class FactorialSystematic:
    def __init__(self, size_max, mod_value):
        self.factorial_list = factorial_list = [0] * (size_max + 1)
        factorial_list[0] = factorial_acc = 1
        for idx in range(1, size_max + 1):
            factorial_list[idx] = factorial_acc = factorial_acc * idx % mod_value
        self.inv_factorial_list = inv_factorial_list = [0] * (size_max + 1)
        inv_factorial_list[size_max] = inv_acc = pow(self.factorial_list[size_max], -1, mod_value)
        for idx in range(size_max, 0, -1):
            inv_factorial_list[idx - 1] = inv_acc = inv_acc * idx % mod_value
        self.mod_value = mod_value

    def get_factorial(self, idx):
        return self.factorial_list[idx]

    def get_inv_factorial(self, idx):
        return self.inv_factorial_list[idx]

    def comb(self, n_val, k_val):
        if not 0 <= k_val <= n_val:
            return 0
        return self.factorial_list[n_val] * self.inv_factorial_list[n_val - k_val] * self.inv_factorial_list[k_val] % self.mod_value

    def perm(self, n_val, k_val):
        if not 0 <= k_val <= n_val:
            return 0
        return self.factorial_list[n_val] * self.inv_factorial_list[n_val - k_val] % self.mod_value

    def multi_comb(self, n_val, k_val):
        if (n_val == 0 and k_val > 0) or k_val < 0:
            return 0
        return self.factorial_list[n_val + k_val - 1] * self.inv_factorial_list[k_val] % self.mod_value * self.inv_factorial_list[n_val - 1] % self.mod_value

input_n, input_a, input_b, input_k = map(int, input().split())
factorial_helper = FactorialSystematic(input_n, MOD_CONST)
count_ans = 0
for p_val in range(input_k // input_a + 1):
    q_val, remainder_val = divmod(input_k - p_val * input_a, input_b)
    if remainder_val != 0:
        continue
    count_ans = (count_ans + factorial_helper.comb(input_n, p_val) * factorial_helper.comb(input_n, q_val)) % MOD_CONST
print(count_ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'MOD' (ID: 52135)
  → Token d'amorce (pas de prédiction)

Token 1: '_CONST' (ID: 91635)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02736254595220089
    2. '10' → logprob: -4.27736234664917
    3. '32' → logprob: -5.15236234664917
    4. '1' → logprob: -5.90236234664917
    5. '42' → logprob: -5.90236234664917
    6. '100' → logprob: -6.90236234664917
    7. '123' → logprob: -8.277362823486328
    8. ' ' → logprob: -9.402362823486328
    9. '20' → logprob: -9.652362823486328
    10. '0' → logprob: -9.652362823486328

Token 4: '998' (ID: 34589)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.13971519470214844
    2. '10' → logprob: -2.8897151947021484
    3. ' ' → logprob: -3.3897151947021484
    4. '123' → logprob: -3.5147151947021484
    5. '2' → logprob: -5.514715194702148
    6. '409' → logprob: -6.389715194702148
    7. '256' → logprob: -6.639715194702148
    8. '1' → logprob: -7.014715194702148
    9. '42' → logprob: -7.889715194702148
    10. '102' → logprob: -7.889715194702148

Token 5: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -0.024835802614688873
    2. '_' → logprob: -3.7748358249664307
    3. '247' → logprob: -7.399835586547852
    4. ',' → logprob: -7.649835586547852
    5. '.' → logprob: -8.899835586547852
    6. '*' → logprob: -9.774835586547852
    7. '4' → logprob: -10.024835586547852
    8. ';' → logprob: -10.024835586547852
    9. '245' → logprob: -10.524835586547852
    10. '3' → logprob: -10.649835586547852

Token 6: '353' (ID: 32996)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.001139623112976551
    2. '33' → logprob: -8.251139640808105
    3. '353' → logprob: -8.251139640808105
    4. '4' → logprob: -8.501139640808105
    5. '_' → logprob: -9.001139640808105
    6. '2' → logprob: -9.251139640808105
    7. '357' → logprob: -10.376139640808105
    8. '333' → logprob: -10.751139640808105
    9. '344' → logprob: -11.126139640808105
    10. '400' → logprob: -11.251139640808105

Token 7: '

' (ID: 279)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7298343181610107
    2. '```' → logprob: -1.1048343181610107
    3. '**' → logprob: -2.4798343181610107
    4. '+' → logprob: -2.6048343181610107
    5. '\n' → logprob: -4.60483455657959
    6. '`' → logprob: -4.97983455657959
    7. '\' → logprob: -5.85483455657959
    8. '_' → logprob: -5.97983455657959
    9. '#' → logprob: -6.47983455657959
    10. '%' → logprob: -6.47983455657959

Token 8: 'class' (ID: 1444)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2820080518722534
    2. '```' → logprob: -2.532008171081543
    3. '=' → logprob: -3.407008171081543
    4. '+' → logprob: -3.532008171081543
    5. '**' → logprob: -3.532008171081543
    6. '_' → logprob: -3.782008171081543
    7. '#' → logprob: -4.157008171081543
    8. '\' → logprob: -4.907008171081543
    9. '`' → logprob: -5.407008171081543
    10. ':' → logprob: -5.407008171081543

Token 9: ' Factor' (ID: 63743)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01167697086930275
    2. ' My' → logprob: -4.761676788330078
    3. ' Factor' → logprob: -7.636676788330078
    4. ' int' → logprob: -8.011676788330078
    5. ' Modular' → logprob: -8.011676788330078
    6. ' Solution' → logprob: -8.011676788330078
    7. ' Integer' → logprob: -8.386676788330078
    8. ' Math' → logprob: -8.386676788330078
    9. ' `' → logprob: -8.511676788330078
    10. ' ' → logprob: -8.636676788330078

Token 10: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.7650261521339417
    2. 'al' → logprob: -1.0150260925292969
    3. ':' → logprob: -2.015026092529297
    4. '```' → logprob: -4.015026092529297
    5. 'ialize' → logprob: -4.015026092529297
    6. 'ization' → logprob: -7.265026092529297
    7. 'izer' → logprob: -7.640026092529297
    8. ',' → logprob: -7.890026092529297
    9. ':
' → logprob: -8.515026092529297
    10. '(' → logprob: -9.015026092529297

Token 11: 'System' (ID: 3320)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022488467395305634
    2. '(' → logprob: -4.272488594055176
    3. '():' → logprob: -5.647488594055176
    4. 'Calculator' → logprob: -6.647488594055176
    5. 'Calcul' → logprob: -7.147488594055176
    6. 'Factor' → logprob: -7.147488594055176
    7. '(:' → logprob: -7.397488594055176
    8. '```' → logprob: -7.897488594055176
    9. 'Calculation' → logprob: -8.897488594055176
    10. '(object' → logprob: -9.272488594055176

Token 12: 'atic' (ID: 2351)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004444931691978127
    2. '(' → logprob: -8.125444412231445
    3. '():' → logprob: -9.750444412231445
    4. '```' → logprob: -10.250444412231445
    5. ':
' → logprob: -11.125444412231445
    6. '(:' → logprob: -11.500444412231445
    7. ' :' → logprob: -11.625444412231445
    8. '(object' → logprob: -12.625444412231445
    9. ':**' → logprob: -12.625444412231445
    10. '{' → logprob: -12.875444412231445

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0069379559718072414
    2. '(' → logprob: -5.2569379806518555
    3. '():' → logprob: -6.8819379806518555
    4. '(:' → logprob: -8.381937980651855
    5. 'Factor' → logprob: -8.881937980651855
    6. '(object' → logprob: -9.256937980651855
    7. '(F' → logprob: -10.006937980651855
    8. ' :' → logprob: -10.756937980651855
    9. '```' → logprob: -11.006937980651855
    10. ':**' → logprob: -11.631937980651855

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3072334825992584
    2. ':' → logprob: -1.432233452796936
    3. '```' → logprob: -4.0572333335876465
    4. '    
' → logprob: -5.8072333335876465
    5. '(' → logprob: -6.0572333335876465
    6. '():' → logprob: -6.5572333335876465
    7. ' def' → logprob: -7.9322333335876465
    8. 'def' → logprob: -7.9322333335876465
    9. ':
' → logprob: -8.432233810424805
    10. '``' → logprob: -8.807233810424805

Token 15: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.1535537838935852
    2. 'def' (adapté à ' def') → logprob: -2.1535537242889404
    3. '   ' → logprob: -3.6535537242889404
    4. '```' → logprob: -9.02855396270752
    5. '    ' → logprob: -9.27855396270752
    6. ' ' → logprob: -10.02855396270752
    7. ' ```' → logprob: -10.65355396270752
    8. 'de' → logprob: -10.90355396270752
    9. '    
' → logprob: -11.40355396270752
    10. ')' → logprob: -11.40355396270752

Token 16: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02246096543967724
    2. ' ' → logprob: -5.0224609375
    3. ' _' → logprob: -5.1474609375
    4. '__' → logprob: -5.3974609375
    5. '_' → logprob: -6.0224609375
    6. ' init' → logprob: -6.7724609375
    7. 'init' → logprob: -7.3974609375
    8. '_init' → logprob: -8.0224609375
    9. ' ' → logprob: -8.1474609375
    10. 'itialize' → logprob: -8.7724609375

Token 17: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.339278580620885e-06
    2. 'ini' → logprob: -13.000001907348633
    3. 'int' → logprob: -17.750001907348633
    4. 'in' → logprob: -17.875001907348633
    5. ' init' → logprob: -19.375001907348633
    6. '_init' → logprob: -19.875001907348633
    7. 'i' → logprob: -21.000001907348633
    8. 'inite' → logprob: -21.250001907348633
    9. 'call' → logprob: -21.500001907348633
    10. 'inti' → logprob: -22.250001907348633

Token 18: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5114006996154785
    2. ' (' → logprob: -1.7614006996154785
    3. '__(' → logprob: -1.8864006996154785
    4. '__' → logprob: -3.2614006996154785
    5. '(self' → logprob: -4.0114006996154785
    6. '<|end|>' → logprob: -4.6364006996154785
    7. '_' → logprob: -6.2614006996154785
    8. '<|end|>' → logprob: -6.5114006996154785
    9. '__(
' → logprob: -6.6364006996154785
    10. '```' → logprob: -7.1364006996154785

Token 19: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000498701527249068
    2. ' self' → logprob: -7.6254987716674805
    3. ')' → logprob: -11.62549877166748
    4. ' ' → logprob: -14.50049877166748
    5. '(self' → logprob: -14.62549877166748
    6. '	self' → logprob: -15.50049877166748
    7. ' )' → logprob: -15.50049877166748
    8. '   ' → logprob: -16.500497817993164
    9. ',self' → logprob: -16.625497817993164
    10. '_self' → logprob: -16.750497817993164

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013845771551132202
    2. ')' → logprob: -5.263845920562744
    3. 'self' → logprob: -5.388845920562744
    4. ' ,' → logprob: -5.763845920562744
    5. ',self' → logprob: -8.388845443725586
    6. '):' → logprob: -8.513845443725586
    7. ' )' → logprob: -8.763845443725586
    8. '(self' → logprob: -9.638845443725586
    9. ' self' → logprob: -9.763845443725586
    10. ' ' → logprob: -10.013845443725586

Token 21: ' size' (ID: 2349)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.23395182192325592
    2. ' n' → logprob: -1.9839518070220947
    3. 'self' → logprob: -2.8589518070220947
    4. ' self' → logprob: -4.483952045440674
    5. 'max' → logprob: -6.608952045440674
    6. ')' → logprob: -7.608952045440674
    7. ' max' → logprob: -7.983952045440674
    8. ')n' → logprob: -9.983951568603516
    9. ' )' → logprob: -10.233951568603516
    10. '   ' → logprob: -10.358951568603516

Token 22: '_max' (ID: 13731)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010173292830586433
    2. ')' → logprob: -7.876017093658447
    3. ',' → logprob: -8.001017570495605
    4. ' ):' → logprob: -8.251017570495605
    5. '):
' → logprob: -10.876017570495605
    6. ':' → logprob: -11.501017570495605
    7. '   ' → logprob: -12.376017570495605
    8. '=' → logprob: -12.626017570495605
    9. ' ' → logprob: -14.001017570495605
    10. ' )' → logprob: -14.251017570495605

Token 23: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004526365548372269
    2. ',' → logprob: -6.629526138305664
    3. '=' → logprob: -6.879526138305664
    4. ' ):' → logprob: -6.879526138305664
    5. '):
' → logprob: -7.129526138305664
    6. ':' → logprob: -8.379526138305664
    7. ')' → logprob: -9.504526138305664
    8. '):
' → logprob: -11.629526138305664
    9. ' ,' → logprob: -11.879526138305664
    10. '   ' → logprob: -12.129526138305664

Token 24: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.019736554473638535
    2. 'mod' → logprob: -4.3947367668151855
    3. ' modulus' → logprob: -5.1447367668151855
    4. ' MOD' → logprob: -7.5197367668151855
    5. ' modulo' → logprob: -8.269736289978027
    6. 'MOD' → logprob: -8.644736289978027
    7. '	mod' → logprob: -9.019736289978027
    8. ' m' → logprob: -9.894736289978027
    9. ')' → logprob: -10.269736289978027
    10. ' ' → logprob: -10.519736289978027

Token 25: '_value' (ID: 6734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2841207981109619
    2. '):' → logprob: -1.409120798110962
    3. ' ):' → logprob: -6.159120559692383
    4. '=None' → logprob: -7.784120559692383
    5. ' =' → logprob: -8.284120559692383
    6. ')' → logprob: -9.784120559692383
    7. ':' → logprob: -10.284120559692383
    8. '=int' → logprob: -10.534120559692383
    9. '=_' → logprob: -10.784120559692383
    10. ')=' → logprob: -11.659120559692383

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010608787648379803
    2. '=' → logprob: -4.760608673095703
    3. ')' → logprob: -6.510608673095703
    4. ' ):' → logprob: -7.885608673095703
    5. ':' → logprob: -9.260608673095703
    6. ' ' → logprob: -11.635608673095703
    7. ',' → logprob: -11.760608673095703
    8. '=None' → logprob: -12.260608673095703
    9. '):
' → logprob: -12.635608673095703
    10. '   ' → logprob: -12.760608673095703

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007117064669728279
    2. '        ' → logprob: -5.38211727142334
    3. '<|end|>' → logprob: -7.00711727142334
    4. '   ' → logprob: -8.00711727142334
    5. ':' → logprob: -8.25711727142334
    6. '    ' → logprob: -8.63211727142334
    7. '```' → logprob: -8.63211727142334
    8. '        
' → logprob: -9.25711727142334
    9. '<|end|>' → logprob: -9.63211727142334
    10. ')' → logprob: -9.75711727142334

Token 28: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6378344297409058
    2. '       ' → logprob: -1.3878344297409058
    3. ' self' → logprob: -1.8878344297409058
    4. '<|end|>' → logprob: -2.8878345489501953
    5. '```' → logprob: -5.762834548950195
    6. '        ' → logprob: -5.762834548950195
    7. '<|end|>' → logprob: -6.137834548950195
    8. ' ' → logprob: -6.387834548950195
    9. '_self' → logprob: -7.012834548950195
    10. '(self' → logprob: -7.262834548950195

Token 29: '.factor' (ID: 196244)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02496616169810295
    2. '.mod' → logprob: -4.524966239929199
    3. ' .' → logprob: -4.774966239929199
    4. '.size' → logprob: -6.149966239929199
    5. ' ' → logprob: -6.899966239929199
    6. '.next' → logprob: -8.1499662399292
    7. '.initialize' → logprob: -9.0249662399292
    8. '.token' → logprob: -9.0249662399292
    9. '.calculate' → logprob: -9.1499662399292
    10. '.code' → logprob: -9.1499662399292

Token 30: 'ial' (ID: 563)
  Prédit: 'ials'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.0019732422661036253
    2. 'ial' → logprob: -6.2519731521606445
    3. 's' → logprob: -10.126973152160645
    4. 'ialize' → logprob: -12.876973152160645
    5. '   ' → logprob: -13.751973152160645
    6. '       ' → logprob: -15.126973152160645
    7. '```' → logprob: -15.126973152160645
    8. '_' → logprob: -16.25197410583496
    9. '=' → logprob: -16.75197410583496
    10. ' ' → logprob: -16.87697410583496

Token 31: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006369070615619421
    2. '=' → logprob: -5.506369113922119
    3. ' =' → logprob: -6.381369113922119
    4. '_s' → logprob: -8.006368637084961
    5. '_' → logprob: -9.006368637084961
    6. ' ' → logprob: -9.381368637084961
    7. '   ' → logprob: -10.631368637084961
    8. '[' → logprob: -11.131368637084961
    9. '  ' → logprob: -12.381368637084961
    10. '[s' → logprob: -13.131368637084961

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01063851173967123
    2. '=' → logprob: -4.63563871383667
    3. '[' → logprob: -7.51063871383667
    4. '.append' → logprob: -8.885638236999512
    5. '   ' → logprob: -9.760638236999512
    6. ' ' → logprob: -10.385638236999512
    7. '  ' → logprob: -10.760638236999512
    8. ' =[' → logprob: -10.885638236999512
    9. '=[]' → logprob: -11.010638236999512
    10. '    ' → logprob: -11.385638236999512

Token 33: ' factorial' (ID: 111204)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3868754208087921
    2. '[' → logprob: -1.1368753910064697
    3. ' ' → logprob: -13.38687515258789
    4. '[int' → logprob: -14.38687515258789
    5. '[self' → logprob: -14.51187515258789
    6. '   ' → logprob: -14.88687515258789
    7. '[]' → logprob: -14.88687515258789
    8. '[n' → logprob: -15.01187515258789
    9. '[len' → logprob: -16.38687515258789
    10. '[class' → logprob: -16.38687515258789

Token 34: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11814248561859131
    2. '_s' → logprob: -3.368142604827881
    3. '[' → logprob: -3.493142604827881
    4. '_' → logprob: -4.368142604827881
    5. '(' → logprob: -4.618142604827881
    6. '_list' → logprob: -4.618142604827881
    7. '(s' → logprob: -5.118142604827881
    8. '[size' → logprob: -5.868142604827881
    9. '[s' → logprob: -6.368142604827881
    10. '```' → logprob: -6.743142604827881

Token 35: ' =' (ID: 314)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.47448059916496277
    2. '(' → logprob: -0.9744806289672852
    3. '[size' → logprob: -8.974480628967285
    4. '[' → logprob: -9.474480628967285
    5. '```' → logprob: -9.974480628967285
    6. '(s' → logprob: -10.349480628967285
    7. '_' → logprob: -10.849480628967285
    8. '(
' → logprob: -11.099480628967285
    9. 's' → logprob: -11.224480628967285
    10. '(max' → logprob: -11.849480628967285

Token 36: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3869211673736572
    2. '[' → logprob: -1.1369211673736572
    3. ' ' → logprob: -11.386920928955078
    4. '[size' → logprob: -11.386920928955078
    5. '[int' → logprob: -12.136920928955078
    6. '[n' → logprob: -12.386920928955078
    7. '[]' → logprob: -12.511920928955078
    8. '[class' → logprob: -13.261920928955078
    9. '[self' → logprob: -13.511920928955078
    10. ' ' → logprob: -13.636920928955078

Token 37: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9795445849886164e-05
    2. ' ' → logprob: -9.750060081481934
    3. '   ' → logprob: -13.625060081481934
    4. '       ' → logprob: -16.250059127807617
    5. '    ' → logprob: -17.000059127807617
    6. '           ' → logprob: -17.125059127807617
    7. '  ' → logprob: -17.625059127807617
    8. '0' → logprob: -17.875059127807617
    9. '     ' → logprob: -18.625059127807617
    10. '               ' → logprob: -19.250059127807617

Token 38: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08978965133428574
    2. ']' → logprob: -2.464789628982544
    3. ')' → logprob: -7.839789867401123
    4. '<|end|>' → logprob: -8.964789390563965
    5. ' ,' → logprob: -9.339789390563965
    6. ' for' → logprob: -9.464789390563965
    7. ']int' → logprob: -10.464789390563965
    8. '0' → logprob: -10.839789390563965
    9. '1' → logprob: -10.839789390563965
    10. ',
' → logprob: -10.839789390563965

Token 39: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003984366077929735
    2. ' ,' → logprob: -5.753984451293945
    3. '0' → logprob: -8.128984451293945
    4. ' ' → logprob: -8.753984451293945
    5. ',
' → logprob: -9.003984451293945
    6. '1' → logprob: -9.878984451293945
    7. '<|end|>' → logprob: -9.878984451293945
    8. '[' → logprob: -10.003984451293945
    9. '```' → logprob: -10.628984451293945
    10. '
' → logprob: -11.128984451293945

Token 40: ' (' (ID: 350)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -1.4617256056226324e-05
    2. '(' → logprob: -12.250014305114746
    3. 'size' → logprob: -12.375014305114746
    4. '[size' → logprob: -13.000014305114746
    5. '<size' → logprob: -13.750014305114746
    6. ' (' → logprob: -13.875014305114746
    7. '(max' → logprob: -14.875014305114746
    8. '(sz' → logprob: -14.875014305114746
    9. '(s' → logprob: -15.750014305114746
    10. ' size' → logprob: -16.625015258789062

Token 41: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0009775519138202071
    2. ' size' → logprob: -7.000977516174316
    3. '(size' → logprob: -9.625977516174316
    4. '1' → logprob: -17.500978469848633
    5. '[size' → logprob: -17.625978469848633
    6. '<size' → logprob: -17.625978469848633
    7. 'siz' → logprob: -18.000978469848633
    8. '=size' → logprob: -18.000978469848633
    9. 's' → logprob: -18.375978469848633
    10. ',size' → logprob: -19.000978469848633

Token 42: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -2.045823566731997e-05
    2. 'max' → logprob: -11.500020027160645
    3. '+' → logprob: -12.500020027160645
    4. ' _' → logprob: -12.875020027160645
    5. '_' → logprob: -13.000020027160645
    6. '_min' → logprob: -14.750020027160645
    7. '_MAX' → logprob: -14.875020027160645
    8. '_next' → logprob: -15.375020027160645
    9. ')_' → logprob: -15.500020027160645
    10. '_mod' → logprob: -17.00002098083496

Token 43: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005933186039328575
    2. ' +' → logprob: -5.1309332847595215
    3. '+
' → logprob: -12.630932807922363
    4. ' +
' → logprob: -15.005932807922363
    5. ' ' → logprob: -15.255932807922363
    6. '```' → logprob: -16.13093376159668
    7. '＋' → logprob: -16.25593376159668
    8. ')' → logprob: -16.38093376159668
    9. '1' → logprob: -16.50593376159668
    10. '+++' → logprob: -16.63093376159668

Token 44: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024762547109276056
    2. ' ' → logprob: -6.002476215362549
    3. '```' → logprob: -14.752476692199707
    4. '2' → logprob: -15.752476692199707
    5. '   ' → logprob: -16.87747573852539
    6. '  ' → logprob: -17.12747573852539
    7. '+' → logprob: -18.62747573852539
    8. ')' → logprob: -18.75247573852539
    9. '`' → logprob: -19.12747573852539
    10. '7' → logprob: -19.62747573852539

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -18.625003814697266
    4. '１' → logprob: -19.875003814697266
    5. '+' → logprob: -19.875003814697266
    6. ')' → logprob: -20.000003814697266
    7. '2' → logprob: -20.375003814697266
    8. '   ' → logprob: -20.625003814697266
    9. '' → logprob: -20.875003814697266
    10. '۱' → logprob: -21.000003814697266

Token 46: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20188114047050476
    2. ')
' → logprob: -1.7018811702728271
    3. '       ' → logprob: -8.951881408691406
    4. '[' → logprob: -9.201881408691406
    5. ')
' → logprob: -9.826881408691406
    6. '<|end|>' → logprob: -10.701881408691406
    7. ',' → logprob: -11.076881408691406
    8. '),' → logprob: -11.076881408691406
    9. ')\' → logprob: -11.201881408691406
    10. '```' → logprob: -11.201881408691406

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5894399285316467
    2. 'factor' → logprob: -1.964439868927002
    3. '
' → logprob: -2.214439868927002
    4. '<|end|>' → logprob: -2.464439868927002
    5. '[' → logprob: -2.714439868927002
    6. '   ' → logprob: -4.964439868927002
    7. '\n' → logprob: -5.214439868927002
    8. '```' → logprob: -5.214439868927002
    9. '<|end|>' → logprob: -5.214439868927002
    10. ' factorial' → logprob: -5.839439868927002

Token 48: ' factorial' (ID: 111204)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11702165007591248
    2. 'factor' → logprob: -2.2420215606689453
    3. ' factorial' → logprob: -5.742021560668945
    4. 'fact' → logprob: -8.117021560668945
    5. '   ' → logprob: -8.242021560668945
    6. '```' → logprob: -9.492021560668945
    7. 'self' → logprob: -9.617021560668945
    8. '        
' → logprob: -9.867021560668945
    9. '[' → logprob: -10.367021560668945
    10. '.factor' → logprob: -10.492021560668945

Token 49: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.248469718324486e-05
    2. 's' → logprob: -12.250022888183594
    3. '_lists' → logprob: -12.500022888183594
    4. '_' → logprob: -12.875022888183594
    5. '[' → logprob: -13.125022888183594
    6. '_lst' → logprob: -13.375022888183594
    7. 'List' → logprob: -13.500022888183594
    8. '_List' → logprob: -13.750022888183594
    9. '[_' → logprob: -13.750022888183594
    10. '_s' → logprob: -14.000022888183594

Token 50: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.306760805164231e-05
    2. ' =' → logprob: -11.87501335144043
    3. '<|end|>' → logprob: -12.87501335144043
    4. ' [' → logprob: -13.87501335144043
    5. '<|end|>' → logprob: -13.87501335144043
    6. '```' → logprob: -15.25001335144043
    7. '=' → logprob: -15.50001335144043
    8. '\[' → logprob: -15.75001335144043
    9. 'factor' → logprob: -15.87501335144043
    10. '[
' → logprob: -16.00001335144043

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '=' → logprob: -19.375
    4. '1' → logprob: -20.125
    5. '۰' → logprob: -20.625
    6. ')' → logprob: -20.625
    7. '```' → logprob: -20.875
    8. '<|end|>' → logprob: -21.125
    9. '[' → logprob: -21.25
    10. '>' → logprob: -21.625

Token 52: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002844576956704259
    2. ' ]' → logprob: -8.375284194946289
    3. ']=' → logprob: -10.000284194946289
    4. ')' → logprob: -12.000284194946289
    5. '=' → logprob: -13.500284194946289
    6. '<|end|>' → logprob: -15.250284194946289
    7. '`]' → logprob: -15.625284194946289
    8. ' =' → logprob: -16.37528419494629
    9. ')]' → logprob: -16.62528419494629
    10. '']' → logprob: -16.75028419494629

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018155209720134735
    2. '=' → logprob: -4.018155097961426
    3. ' =
' → logprob: -12.768155097961426
    4. '<|end|>' → logprob: -13.768155097961426
    5. ' ' → logprob: -14.518155097961426
    6. ',' → logprob: -15.768155097961426
    7. ' =)' → logprob: -16.018156051635742
    8. ' |=' → logprob: -16.768156051635742
    9. '=
' → logprob: -17.143156051635742
    10. ' =[' → logprob: -17.143156051635742

Token 54: ' factorial' (ID: 111204)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '۱' → logprob: -18.25001335144043
    4. '   ' → logprob: -18.50001335144043
    5. 'factor' → logprob: -18.50001335144043
    6. '```' → logprob: -18.81251335144043
    7. '১' → logprob: -18.87501335144043
    8. '' → logprob: -19.00001335144043
    9. '１' → logprob: -19.43751335144043
    10. '<|end|>' → logprob: -19.43751335144043

Token 55: '_acc' (ID: 35551)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06606900691986084
    2. '_' → logprob: -3.1910691261291504
    3. '_list' → logprob: -4.31606912612915
    4. ' ' → logprob: -6.06606912612915
    5. 's' → logprob: -6.94106912612915
    6. '[' → logprob: -6.94106912612915
    7. '_const' → logprob: -7.19106912612915
    8. '_value' → logprob: -7.31606912612915
    9. '!' → logprob: -7.44106912612915
    10. '(_' → logprob: -7.69106912612915

Token 56: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.7952612638473511
    2. 'umulate' → logprob: -0.9202612638473511
    3. 'umulator' → logprob: -1.920261263847351
    4. 'umu' → logprob: -6.420261383056641
    5. 'umul' → logprob: -6.670261383056641
    6. 'u' → logprob: -8.17026138305664
    7. '=' → logprob: -8.79526138305664
    8. 'uml' → logprob: -10.04526138305664
    9. 'umulative' → logprob: -10.17026138305664
    10. 'umal' → logprob: -10.92026138305664

Token 57: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006267757853493094
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -16.625627517700195
    4. 'factor' → logprob: -16.750627517700195
    5. '<|end|>' → logprob: -17.500627517700195
    6. '  ' → logprob: -17.875627517700195
    7. '[' → logprob: -18.625627517700195
    8. '۱' → logprob: -18.625627517700195
    9. ' factorial' → logprob: -18.750627517700195
    10. '=' → logprob: -19.000627517700195

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. 'factor' → logprob: -16.875
    4. '[' → logprob: -18.25
    5. 'fact' → logprob: -19.375
    6. '<|end|>' → logprob: -19.625
    7. '   ' → logprob: -19.75
    8. '=' → logprob: -20.0
    9. '```' → logprob: -20.25
    10. '۱' → logprob: -20.25

Token 59: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15712054073810577
    2. '
' → logprob: -2.7821204662323
    3. '\n' → logprob: -3.1571204662323
    4. '   ' → logprob: -3.9071204662323
    5. '<|end|>' → logprob: -5.157120704650879
    6. ' for' → logprob: -5.657120704650879
    7. ' 
' → logprob: -6.532120704650879
    8. '[' → logprob: -6.532120704650879
    9. '```' → logprob: -6.782120704650879
    10. ',' → logprob: -7.032120704650879

Token 60: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3973855674266815
    2. '       ' → logprob: -2.147385597229004
    3. '\n' → logprob: -2.522385597229004
    4. '<|end|>' → logprob: -2.897385597229004
    5. '   ' → logprob: -3.647385597229004
    6. ' for' → logprob: -4.022385597229004
    7. 'newline' → logprob: -5.272385597229004
    8. 'for' → logprob: -5.272385597229004
    9. '  
' → logprob: -5.897385597229004
    10. '' → logprob: -5.897385597229004

Token 61: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7330478429794312
    2. ' for' → logprob: -1.2330478429794312
    3. 'for' (adapté à ' for') → logprob: -1.4830478429794312
    4. '        ' → logprob: -8.358047485351562
    5. '   ' → logprob: -8.358047485351562
    6. '    ' → logprob: -8.733047485351562
    7. '	for' → logprob: -9.108047485351562
    8. '```' → logprob: -9.233047485351562
    9. '\n' → logprob: -9.858047485351562
    10. ' ' → logprob: -9.858047485351562

Token 62: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.030205372720956802
    2. 'i' → logprob: -3.530205488204956
    3. ' _' → logprob: -8.530205726623535
    4. ' ' → logprob: -8.780205726623535
    5. '_' → logprob: -9.905205726623535
    6. ' index' → logprob: -10.905205726623535
    7. 'index' → logprob: -11.655205726623535
    8. ' idx' → logprob: -12.280205726623535
    9. '_i' → logprob: -12.530205726623535
    10. ' in' → logprob: -13.030205726623535

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004200678784400225
    2. 'in' → logprob: -5.504200458526611
    3. ' ' → logprob: -9.12920093536377
    4. ',' → logprob: -12.50420093536377
    5. '	in' → logprob: -13.50420093536377
    6. ' ,' → logprob: -13.75420093536377
    7. '1' → logprob: -14.00420093536377
    8. '<|end|>' → logprob: -14.12920093536377
    9. '  ' → logprob: -14.25420093536377
    10. '=' → logprob: -14.50420093536377

Token 64: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0788951888680458
    2. 'range' → logprob: -2.578895092010498
    3. '(range' → logprob: -12.953895568847656
    4. '	range' → logprob: -13.328895568847656
    5. ' xrange' → logprob: -14.703895568847656
    6. ' ' → logprob: -14.828895568847656
    7. ' in' → logprob: -15.203895568847656
    8. '1' → logprob: -15.703895568847656
    9. '   ' → logprob: -15.828895568847656
    10. '```' → logprob: -16.828895568847656

Token 65: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.511406809295295e-06
    2. '1' → logprob: -12.125006675720215
    3. ' (' → logprob: -13.875006675720215
    4. '(size' → logprob: -16.8750057220459
    5. '   ' → logprob: -18.0000057220459
    6. '(
' → logprob: -18.1250057220459
    7. '(len' → logprob: -18.3750057220459
    8. ' ' → logprob: -18.8750057220459
    9. '[' → logprob: -19.3750057220459
    10. ')' → logprob: -19.3750057220459

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.664371848164592e-05
    2. ' ' → logprob: -11.375016212463379
    3. 'size' → logprob: -12.250016212463379
    4. '   ' → logprob: -15.500016212463379
    5. ' size' → logprob: -15.875016212463379
    6. '0' → logprob: -18.125017166137695
    7. ')' → logprob: -19.250017166137695
    8. '2' → logprob: -20.375017166137695
    9. '       ' → logprob: -21.000017166137695
    10. ',size' → logprob: -21.125017166137695

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004598631348926574
    2. ' ,' → logprob: -8.000459671020508
    3. ',size' → logprob: -9.000459671020508
    4. ',len' → logprob: -14.000459671020508
    5. ',
' → logprob: -16.000459671020508
    6. 'size' → logprob: -16.375459671020508
    7. ',length' → logprob: -17.875459671020508
    8. '，' → logprob: -17.875459671020508
    9. ' size' → logprob: -18.250459671020508
    10. '(size' → logprob: -18.500459671020508

Token 68: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.0297679603099823
    2. 'size' → logprob: -3.5297679901123047
    3. ' len' → logprob: -11.279767990112305
    4. 'len' → logprob: -12.279767990112305
    5. '(size' → logprob: -16.779767990112305
    6. ' length' → logprob: -17.154767990112305
    7. ')' → logprob: -17.654767990112305
    8. '	size' → logprob: -17.779767990112305
    9. ',size' → logprob: -18.404767990112305
    10. '=size' → logprob: -18.779767990112305

Token 69: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.1279553291387856e-05
    2. 'max' → logprob: -11.750011444091797
    3. '+' → logprob: -12.750011444091797
    4. '_MAX' → logprob: -15.750011444091797
    5. '_' → logprob: -16.250011444091797
    6. '_size' → logprob: -17.000011444091797
    7. 'Max' → logprob: -17.750011444091797
    8. '_plus' → logprob: -18.375011444091797
    9. '_const' → logprob: -18.500011444091797
    10. '_Max' → logprob: -18.625011444091797

Token 70: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20141403377056122
    2. '+' → logprob: -1.7014139890670776
    3. ' +
' → logprob: -15.201414108276367
    4. ' ' → logprob: -15.451414108276367
    5. '   ' → logprob: -16.701414108276367
    6. '＋' → logprob: -16.951414108276367
    7. '):
' → logprob: -17.076414108276367
    8. ' ' → logprob: -17.201414108276367
    9. '+
' → logprob: -17.326414108276367
    10. ')' → logprob: -18.201414108276367

Token 71: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008614926598966122
    2. ' ' → logprob: -4.758615016937256
    3. '```' → logprob: -15.008614540100098
    4. ')' → logprob: -17.008615493774414
    5. '   ' → logprob: -17.508615493774414
    6. '<|end|>' → logprob: -19.008615493774414
    7. '۱' → logprob: -19.133615493774414
    8. '１' → logprob: -19.508615493774414
    9. ',' → logprob: -19.696115493774414
    10. '  ' → logprob: -20.008615493774414

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -16.62504005432129
    4. '   ' → logprob: -16.75004005432129
    5. ')' → logprob: -17.75004005432129
    6. '  ' → logprob: -18.87504005432129
    7. '１' → logprob: -20.00004005432129
    8. '``' → logprob: -20.12504005432129
    9. '۱' → logprob: -20.31254005432129
    10. '+' → logprob: -20.43754005432129

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006745331920683384
    2. '):
' → logprob: -5.881745338439941
    3. ')' → logprob: -6.131745338439941
    4. ':' → logprob: -6.381745338439941
    5. ' ):' → logprob: -10.006745338439941
    6. ',' → logprob: -11.506745338439941
    7. '       ' → logprob: -12.756745338439941
    8. '):
' → logprob: -12.756745338439941
    9. ' )' → logprob: -13.131745338439941
    10. '   ' → logprob: -13.131745338439941

Token 74: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07928179949522018
    2. '<|end|>' → logprob: -2.954281806945801
    3. '       ' → logprob: -5.079281806945801
    4. '        ' → logprob: -5.954281806945801
    5. ' factorial' → logprob: -5.954281806945801
    6. '            
' → logprob: -6.079281806945801
    7. ' 
' → logprob: -6.454281806945801
    8. '            ' → logprob: -6.454281806945801
    9. '```' → logprob: -6.579281806945801
    10. '<|end|>' → logprob: -6.704281806945801

Token 75: ' factorial' (ID: 111204)
  Prédit: ' factorial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.014127896167337894
    2. 'factor' → logprob: -4.514127731323242
    3. ' factor' → logprob: -7.014127731323242
    4. '            ' → logprob: -7.014127731323242
    5. ' 
' → logprob: -7.264127731323242
    6. '_factor' → logprob: -9.264127731323242
    7. ' ' → logprob: -9.514127731323242
    8. '            
' → logprob: -9.639127731323242
    9. '           ' → logprob: -9.639127731323242
    10. '               ' → logprob: -10.264127731323242

Token 76: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.014169389382004738
    2. '_acc' → logprob: -4.264169216156006
    3. '_' → logprob: -13.264169692993164
    4. ' _' → logprob: -13.639169692993164
    5. '[_' → logprob: -14.639169692993164
    6. '_lst' → logprob: -14.639169692993164
    7. 'acc' → logprob: -14.764169692993164
    8. '_factor' → logprob: -14.764169692993164
    9. 's' → logprob: -15.264169692993164
    10. 'list' → logprob: -15.264169692993164

Token 77: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -8.566264295950532e-05
    2. '[' → logprob: -9.375085830688477
    3. 'idx' → logprob: -15.125085830688477
    4. ' [' → logprob: -15.625085830688477
    5. '	idx' → logprob: -16.125085830688477
    6. '```' → logprob: -16.750085830688477
    7. '[id' → logprob: -16.875085830688477
    8. '[index' → logprob: -17.250085830688477
    9. ' idx' → logprob: -17.500085830688477
    10. '[int' → logprob: -17.750085830688477

Token 78: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008802706375718117
    2. '=' → logprob: -5.758802890777588
    3. ' =' → logprob: -6.133802890777588
    4. ' ]' → logprob: -6.258802890777588
    5. ']=' → logprob: -7.133802890777588
    6. ')' → logprob: -7.258802890777588
    7. ' ' → logprob: -11.00880241394043
    8. ')=' → logprob: -12.63380241394043
    9. ' )' → logprob: -13.38380241394043
    10. ')]' → logprob: -13.63380241394043

Token 79: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519305646419525
    2. ' =' → logprob: -1.501930594444275
    3. '=f' → logprob: -14.626930236816406
    4. '=int' → logprob: -14.876930236816406
    5. '*=' → logprob: -15.251930236816406
    6. ' *=' → logprob: -15.751930236816406
    7. '＝' → logprob: -16.626930236816406
    8. ' ' → logprob: -17.001930236816406
    9. '=

' → logprob: -17.126930236816406
    10. '=
' → logprob: -17.251930236816406

Token 80: ' factorial' (ID: 111204)
  Prédit: ' factorial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.5383674502372742
    2. 'factor' → logprob: -1.288367509841919
    3. ' (' → logprob: -2.413367509841919
    4. '(f' → logprob: -3.038367509841919
    5. '           ' → logprob: -6.41336727142334
    6. ' factor' → logprob: -7.28836727142334
    7. 'fact' → logprob: -8.03836727142334
    8. '(' → logprob: -9.16336727142334
    9. ' ' → logprob: -9.78836727142334
    10. '_factor' → logprob: -9.91336727142334

Token 81: '_acc' (ID: 35551)
  Prédit: '_acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -0.0003992104611825198
    2. '_list' → logprob: -7.875399112701416
    3. '_' → logprob: -11.250399589538574
    4. 'acc' → logprob: -12.625399589538574
    5. '_ac' → logprob: -14.000399589538574
    6. '```' → logprob: -14.625399589538574
    7. 'list' → logprob: -15.125399589538574
    8. 'Acc' → logprob: -15.250399589538574
    9. '_a' → logprob: -15.750399589538574
    10. '	acc' → logprob: -16.625398635864258

Token 82: ' =' (ID: 314)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.16023163497447968
    2. ' *' → logprob: -1.910231590270996
    3. ' ' → logprob: -12.660231590270996
    4. '**' → logprob: -13.910231590270996
    5. '=' → logprob: -14.285231590270996
    6. '*object' → logprob: -14.285231590270996
    7. '*=' → logprob: -14.410231590270996
    8. '   ' → logprob: -15.035231590270996
    9. '```' → logprob: -15.035231590270996
    10. '*(' → logprob: -15.285231590270996

Token 83: ' factorial' (ID: 111204)
  Prédit: ' factorial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.05659389868378639
    2. ' (' → logprob: -3.431593894958496
    3. 'factor' → logprob: -3.931593894958496
    4. '(f' → logprob: -5.931593894958496
    5. ' factor' → logprob: -8.431593894958496
    6. 'fact' → logprob: -9.181593894958496
    7. '(mod' → logprob: -10.556593894958496
    8. ' fact' → logprob: -10.806593894958496
    9. '.factor' → logprob: -11.556593894958496
    10. '           ' → logprob: -11.931593894958496

Token 84: '_acc' (ID: 35551)
  Prédit: '_acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -0.01690865494310856
    2. '_list' → logprob: -4.141908645629883
    3. 'acc' → logprob: -7.141908645629883
    4. 'Acc' → logprob: -10.266908645629883
    5. 'list' → logprob: -11.016908645629883
    6. '_idx' → logprob: -12.016908645629883
    7. '```' → logprob: -12.016908645629883
    8. '*' → logprob: -12.266908645629883
    9. '_factor' → logprob: -13.391908645629883
    10. '_' → logprob: -13.391908645629883

Token 85: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06197004392743111
    2. ' *' → logprob: -2.8119699954986572
    3. '*object' → logprob: -13.561969757080078
    4. '**' → logprob: -15.061969757080078
    5. ' ' → logprob: -15.311969757080078
    6. '*(' → logprob: -15.436969757080078
    7. '   ' → logprob: -15.686969757080078
    8. ' ' → logprob: -16.186969757080078
    9. '```' → logprob: -16.311969757080078
    10. '	' → logprob: -17.561969757080078

Token 86: ' idx' (ID: 14016)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.17975030839443207
    2. 'mod' → logprob: -1.8047503232955933
    3. '	mod' → logprob: -13.054750442504883
    4. '(mod' → logprob: -13.804750442504883
    5. ' idx' → logprob: -14.304750442504883
    6. '_mod' → logprob: -14.929750442504883
    7. 'idx' → logprob: -15.179750442504883
    8. 'MOD' → logprob: -15.304750442504883
    9. ' modul' → logprob: -15.554750442504883
    10. '```' → logprob: -15.554750442504883

Token 87: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.011047814972698689
    2. '%' → logprob: -4.511047840118408
    3. '%n' → logprob: -16.76104736328125
    4. '%c' → logprob: -18.51104736328125
    5. '%d' → logprob: -18.63604736328125
    6. '%m' → logprob: -19.26104736328125
    7. '%s' → logprob: -19.26104736328125
    8. ' %
' → logprob: -19.63604736328125
    9. '%i' → logprob: -19.76104736328125
    10. ' ' → logprob: -20.01104736328125

Token 88: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.02327517792582512
    2. 'mod' → logprob: -3.773275136947632
    3. ' MOD' → logprob: -11.148275375366211
    4. '(mod' → logprob: -12.273275375366211
    5. '_mod' → logprob: -12.398275375366211
    6. 'MOD' → logprob: -12.773275375366211
    7. '	mod' → logprob: -14.148275375366211
    8. ' modul' → logprob: -14.148275375366211
    9. ' ' → logprob: -14.523275375366211
    10. '_MOD' → logprob: -14.773275375366211

Token 89: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.45848218582978e-06
    2. '_val' → logprob: -13.75000286102295
    3. '_' → logprob: -14.37500286102295
    4. 'value' → logprob: -15.25000286102295
    5. '_const' → logprob: -16.000001907348633
    6. '_VALUE' → logprob: -16.500001907348633
    7. '_Value' → logprob: -16.500001907348633
    8. 'alue' → logprob: -16.625001907348633
    9. '_values' → logprob: -17.250001907348633
    10. '_constant' → logprob: -18.000001907348633

Token 90: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: '.inv' (ID: 83561)
  Prédit: '.mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.3242488503456116
    2. '.factor' → logprob: -1.6992487907409668
    3. '.' → logprob: -2.574248790740967
    4. '.inv' → logprob: -4.699248790740967
    5. '.inverse' → logprob: -5.949248790740967
    6. '.fact' → logprob: -6.449248790740967
    7. '.size' → logprob: -6.449248790740967
    8. '.fac' → logprob: -6.574248790740967
    9. '.MOD' → logprob: -7.949248790740967
    10. '.f' → logprob: -8.699249267578125

Token 94: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0561569407582283
    2. '_list' → logprob: -2.931156873703003
    3. '_fact' → logprob: -7.306157112121582
    4. '_' → logprob: -8.306157112121582
    5. 'factor' → logprob: -8.431157112121582
    6. '_value' → logprob: -10.306157112121582
    7. '_array' → logprob: -11.056157112121582
    8. ' =' → logprob: -11.431157112121582
    9. 'list' → logprob: -12.056157112121582
    10. 's' → logprob: -12.431157112121582

Token 95: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.10789579153060913
    2. '_list' → logprob: -2.607895851135254
    3. 'al' → logprob: -3.607895851135254
    4. 'alist' → logprob: -7.357895851135254
    5. 'list' → logprob: -7.732895851135254
    6. 'ialist' → logprob: -8.732895851135254
    7. '```' → logprob: -9.482895851135254
    8. 'ialize' → logprob: -9.482895851135254
    9. '_lists' → logprob: -10.607895851135254
    10. 'ials' → logprob: -11.232895851135254

Token 96: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.966313281329349e-05
    2. '=' → logprob: -10.750049591064453
    3. 's' → logprob: -10.875049591064453
    4. ' =' → logprob: -12.625049591064453
    5. 'list' → logprob: -12.625049591064453
    6. '_lst' → logprob: -13.250049591064453
    7. '_' → logprob: -14.875049591064453
    8. 'List' → logprob: -15.250049591064453
    9. '=_' → logprob: -16.125049591064453
    10. '_lista' → logprob: -17.125049591064453

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00044377794256433845
    2. '=' → logprob: -7.750443935394287
    3. '<|end|>' → logprob: -12.500443458557129
    4. ' ' → logprob: -12.875443458557129
    5. ' =[' → logprob: -13.250443458557129
    6. '_' → logprob: -13.875443458557129
    7. 's' → logprob: -14.125443458557129
    8. ',' → logprob: -14.125443458557129
    9. '  ' → logprob: -14.250443458557129
    10. '[' → logprob: -14.750443458557129

Token 98: ' inv' (ID: 1827)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4742369055747986
    2. '[' → logprob: -0.9742369055747986
    3. '[len' → logprob: -10.474236488342285
    4. 'factor' → logprob: -10.474236488342285
    5. ' factorial' → logprob: -10.849236488342285
    6. '[in' → logprob: -11.224236488342285
    7. '[self' → logprob: -11.474236488342285
    8. '[f' → logprob: -11.849236488342285
    9. '[val' → logprob: -12.224236488342285
    10. 'inv' → logprob: -12.349236488342285

Token 99: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0025997955817729235
    2. '_list' → logprob: -6.502599716186523
    3. '_' → logprob: -7.002599716186523
    4. '_fact' → logprob: -9.877599716186523
    5. 'factor' → logprob: -10.127599716186523
    6. '```' → logprob: -10.877599716186523
    7. '[' → logprob: -11.877599716186523
    8. '_array' → logprob: -12.002599716186523
    9. 's' → logprob: -12.127599716186523
    10. '_const' → logprob: -12.252599716186523

Token 100: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.006404604762792587
    2. '_list' → logprob: -5.256404399871826
    3. 'alist' → logprob: -6.881404399871826
    4. 'ial' → logprob: -9.006404876708984
    5. '[' → logprob: -12.381404876708984
    6. 'list' → logprob: -12.881404876708984
    7. 'ary' → logprob: -13.006404876708984
    8. 'all' → logprob: -13.381404876708984
    9. 'ail' → logprob: -13.881404876708984
    10. 'ar' → logprob: -13.881404876708984

Token 101: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0016257872339338064
    2. '[' → logprob: -7.251626014709473
    3. '_' → logprob: -7.626626014709473
    4. ' =' → logprob: -8.501626014709473
    5. '_factor' → logprob: -9.501626014709473
    6. 's' → logprob: -9.751626014709473
    7. 'list' → logprob: -10.501626014709473
    8. 'List' → logprob: -11.626626014709473
    9. '=' → logprob: -11.626626014709473
    10. '_lst' → logprob: -12.001626014709473

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005684053525328636
    2. '=' → logprob: -5.255683898925781
    3. '<|end|>' → logprob: -7.755683898925781
    4. '[' → logprob: -12.380683898925781
    5. '<|end|>' → logprob: -12.380683898925781
    6. '       ' → logprob: -12.755683898925781
    7. 's' → logprob: -12.880683898925781
    8. '=[]' → logprob: -13.005683898925781
    9. ' ' → logprob: -13.755683898925781
    10. ' =[' → logprob: -13.755683898925781

Token 103: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12692883610725403
    2. ' [' → logprob: -2.1269288063049316
    3. '   ' → logprob: -15.37692928314209
    4. ' ' → logprob: -15.62692928314209
    5. '[len' → logprob: -15.87692928314209
    6. '[-' → logprob: -16.876928329467773
    7. 'factor' → logprob: -17.001928329467773
    8. '[f' → logprob: -18.126928329467773
    9. '[n' → logprob: -18.251928329467773
    10. '[size' → logprob: -18.501928329467773

Token 104: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.407366916188039e-05
    2. ' ' → logprob: -10.000054359436035
    3. '1' → logprob: -11.875054359436035
    4. 'size' → logprob: -13.750054359436035
    5. '   ' → logprob: -16.00005340576172
    6. ' size' → logprob: -16.25005340576172
    7. '(' → logprob: -16.25005340576172
    8. ')' → logprob: -16.75005340576172
    9. '  ' → logprob: -17.06255340576172
    10. '-' → logprob: -17.50005340576172

Token 105: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00030709904967807233
    2. '<|end|>' → logprob: -9.250307083129883
    3. ']*(' → logprob: -9.375307083129883
    4. ' ]' → logprob: -9.750307083129883
    5. ')' → logprob: -10.125307083129883
    6. ']*' → logprob: -12.000307083129883
    7. '<|end|>' → logprob: -12.250307083129883
    8. '']' → logprob: -12.750307083129883
    9. '}' → logprob: -12.875307083129883
    10. '`]' → logprob: -12.875307083129883

Token 106: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02487429790198803
    2. '*' → logprob: -4.149874210357666
    3. '*(' → logprob: -4.774874210357666
    4. '<|end|>' → logprob: -9.649874687194824
    5. ']*(' → logprob: -10.024874687194824
    6. '[' → logprob: -10.149874687194824
    7. ' ' → logprob: -10.274874687194824
    8. ']' → logprob: -10.399874687194824
    9. ' (' → logprob: -10.524874687194824
    10. '(' → logprob: -10.649874687194824

Token 107: ' (' (ID: 350)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.028363630175590515
    2. ' (' → logprob: -3.7783637046813965
    3. '(len' → logprob: -5.2783637046813965
    4. '(' → logprob: -12.778363227844238
    5. '(length' → logprob: -14.903363227844238
    6. '[size' → logprob: -14.903363227844238
    7. '(sz' → logprob: -15.153363227844238
    8. '((' → logprob: -15.528363227844238
    9. '<size' → logprob: -15.778363227844238
    10. 'len' → logprob: -16.403364181518555

Token 108: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.14308148622512817
    2. '(size' → logprob: -2.1430814266204834
    3. ' size' → logprob: -4.1430816650390625
    4. ' (' → logprob: -9.643081665039062
    5. '[size' → logprob: -10.643081665039062
    6. 'len' → logprob: -10.893081665039062
    7. '   ' → logprob: -11.518081665039062
    8. '<size' → logprob: -11.768081665039062
    9. '       ' → logprob: -11.893081665039062
    10. ',size' → logprob: -12.393081665039062

Token 109: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0008066523587331176
    2. 'max' → logprob: -7.12580680847168
    3. '+' → logprob: -13.75080680847168
    4. '_size' → logprob: -15.25080680847168
    5. '_MAX' → logprob: -15.37580680847168
    6. 'Max' → logprob: -15.87580680847168
    7. '```' → logprob: -15.87580680847168
    8. 'maxlength' → logprob: -16.00080680847168
    9. 'const' → logprob: -16.12580680847168
    10. 'size' → logprob: -17.12580680847168

Token 110: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.693148672580719
    2. ' +' → logprob: -0.693148672580719
    3. '   ' → logprob: -14.818148612976074
    4. ' ' → logprob: -14.818148612976074
    5. ' +
' → logprob: -15.318148612976074
    6. '+
' → logprob: -15.943148612976074
    7. '       ' → logprob: -17.06814956665039
    8. '<|end|>' → logprob: -17.06814956665039
    9. '＋' → logprob: -17.06814956665039
    10. '```' → logprob: -17.44314956665039

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -17.125017166137695
    4. '   ' → logprob: -18.187517166137695
    5. '2' → logprob: -18.625017166137695
    6. '0' → logprob: -18.687517166137695
    7. '۱' → logprob: -18.750017166137695
    8. '<|end|>' → logprob: -18.750017166137695
    9. 'import' → logprob: -20.000017166137695
    10. '１' → logprob: -20.187517166137695

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -17.375001907348633
    4. '+' → logprob: -17.625001907348633
    5. 'size' → logprob: -18.437501907348633
    6. '2' → logprob: -18.500001907348633
    7. '   ' → logprob: -18.687501907348633
    8. '0' → logprob: -18.812501907348633
    9. '(' → logprob: -19.125001907348633
    10. '１' → logprob: -19.500001907348633

Token 113: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010615389794111252
    2. ')
' → logprob: -4.635615348815918
    3. '       ' → logprob: -7.135615348815918
    4. '<|end|>' → logprob: -9.885615348815918
    5. ']' → logprob: -12.635615348815918
    6. ')
' → logprob: -13.385615348815918
    7. '```' → logprob: -13.510615348815918
    8. '   ' → logprob: -13.635615348815918
    9. ')

' → logprob: -14.010615348815918
    10. '<|end|>' → logprob: -14.385615348815918

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007815150311216712
    2. '<|end|>' → logprob: -8.125781059265137
    3. 'self' → logprob: -8.875781059265137
    4. 'inv' → logprob: -9.000781059265137
    5. '```' → logprob: -9.250781059265137
    6. '           ' → logprob: -10.000781059265137
    7. '   ' → logprob: -10.375781059265137
    8. '        ' → logprob: -11.625781059265137
    9. 'import' → logprob: -11.750781059265137
    10. '<|end|>' → logprob: -12.000781059265137

Token 115: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' (adapté à ' inv') → logprob: -0.00115486653521657
    2. '       ' → logprob: -7.001154899597168
    3. 'self' → logprob: -8.501154899597168
    4. 'import' → logprob: -10.751154899597168
    5. ' inv' → logprob: -11.501154899597168
    6. 'inverse' → logprob: -13.126154899597168
    7. '```' → logprob: -13.376154899597168
    8. '_inv' → logprob: -13.876154899597168
    9. 'mod' → logprob: -13.876154899597168
    10. '(inv' → logprob: -14.251154899597168

Token 116: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -2.696889623621246e-06
    2. '```' → logprob: -13.87500286102295
    3. '_' → logprob: -14.12500286102295
    4. '_fact' → logprob: -15.50000286102295
    5. '_f' → logprob: -16.000001907348633
    6. '_inv' → logprob: -16.125001907348633
    7. '_FACTOR' → logprob: -16.375001907348633
    8. '\' → logprob: -16.500001907348633
    9. '_fac' → logprob: -16.625001907348633
    10. 'factor' → logprob: -16.750001907348633

Token 117: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.3172331750392914
    2. 'al' → logprob: -1.3172332048416138
    3. '_factor' → logprob: -5.692233085632324
    4. 'atorial' → logprob: -8.192233085632324
    5. 'orial' → logprob: -9.192233085632324
    6. 'actor' → logprob: -10.192233085632324
    7. 'factor' → logprob: -10.442233085632324
    8. 'ator' → logprob: -10.567233085632324
    9. 'omial' → logprob: -10.567233085632324
    10. 'alist' → logprob: -10.567233085632324

Token 118: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.2200749754119897e-06
    2. '_factor' → logprob: -14.125001907348633
    3. '[' → logprob: -14.500001907348633
    4. 'List' → logprob: -15.250001907348633
    5. '_value' → logprob: -15.375001907348633
    6. '_lists' → logprob: -16.375001907348633
    7. 'list' → logprob: -17.000001907348633
    8. '_lst' → logprob: -17.125001907348633
    9. '```' → logprob: -17.375001907348633
    10. ' _' → logprob: -17.500001907348633

Token 119: '[size' (ID: 77532)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.015625225380063057
    2. '[size' → logprob: -4.515625
    3. '[' → logprob: -5.390625
    4. '=' → logprob: -13.265625
    5. '[len' → logprob: -13.640625
    6. 'size' → logprob: -13.765625
    7. '[:]' → logprob: -13.765625
    8. '[
' → logprob: -14.140625
    9. '[::-' → logprob: -14.890625
    10. '=[' → logprob: -15.515625

Token 120: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -4.036524842376821e-05
    2. 'max' → logprob: -10.125040054321289
    3. '_MAX' → logprob: -17.25004005432129
    4. '_min' → logprob: -17.50004005432129
    5. 'Max' → logprob: -17.62504005432129
    6. '_mod' → logprob: -17.87504005432129
    7. 'maxlength' → logprob: -18.00004005432129
    8. '_' → logprob: -18.50004005432129
    9. '=' → logprob: -19.00004005432129
    10. '+' → logprob: -19.12504005432129

Token 121: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.2020991056924686e-05
    2. ' ]' → logprob: -10.375032424926758
    3. ']=' → logprob: -14.125032424926758
    4. ']
' → logprob: -17.875032424926758
    5. '   ' → logprob: -18.750032424926758
    6. '=' → logprob: -19.250032424926758
    7. ')' → logprob: -19.500032424926758
    8. ']

' → logprob: -19.625032424926758
    9. '],' → logprob: -20.000032424926758
    10. '`]' → logprob: -20.625032424926758

Token 122: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022737324237823
    2. ' =' → logprob: -1.9102274179458618
    3. '=

' → logprob: -14.16022777557373
    4. '=
' → logprob: -14.53522777557373
    5. '=}' → logprob: -14.91022777557373
    6. '=int' → logprob: -14.91022777557373
    7. '<|end|>' → logprob: -15.16022777557373
    8. ' =
' → logprob: -15.91022777557373
    9. '=len' → logprob: -16.035226821899414
    10. ',' → logprob: -16.035226821899414

Token 123: ' inv' (ID: 1827)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0012872596271336079
    2. ' pow' → logprob: -6.751287460327148
    3. '1' → logprob: -9.251287460327148
    4. '(pow' → logprob: -11.626287460327148
    5. '       ' → logprob: -12.001287460327148
    6. '   ' → logprob: -12.376287460327148
    7. '_pow' → logprob: -15.126287460327148
    8. ' ' → logprob: -15.251287460327148
    9. '3' → logprob: -15.376287460327148
    10. '2' → logprob: -15.376287460327148

Token 124: '_acc' (ID: 35551)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -7.004696090007201e-05
    2. '_value' → logprob: -10.125069618225098
    3. 'factor' → logprob: -11.750069618225098
    4. '_FACTOR' → logprob: -11.875069618225098
    5. 'pow' → logprob: -12.500069618225098
    6. 'Factor' → logprob: -13.125069618225098
    7. 'erm' → logprob: -13.750069618225098
    8. '_fact' → logprob: -14.000069618225098
    9. 'mod' → logprob: -14.125069618225098
    10. '_' → logprob: -14.375069618225098

Token 125: ' =' (ID: 314)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.6646581292152405
    2. '=' → logprob: -1.1646580696105957
    3. ' =' → logprob: -1.9146580696105957
    4. '_value' → logprob: -3.9146580696105957
    5. 'uator' → logprob: -6.539658069610596
    6. 'ulator' → logprob: -7.414658069610596
    7. 'factor' → logprob: -7.664658069610596
    8. 'urate' → logprob: -8.039658546447754
    9. '_constant' → logprob: -8.164658546447754
    10. '[size' → logprob: -8.289658546447754

Token 126: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0002752790169324726
    2. ' pow' → logprob: -8.250275611877441
    3. '1' → logprob: -11.500275611877441
    4. '(pow' → logprob: -12.750275611877441
    5. '   ' → logprob: -14.375275611877441
    6. '       ' → logprob: -16.625274658203125
    7. '_pow' → logprob: -16.625274658203125
    8. 'Pow' → logprob: -17.500274658203125
    9. ' ' → logprob: -18.250274658203125
    10. '.pow' → logprob: -18.375274658203125

Token 127: '(self' (ID: 2402)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.11332227289676666
    2. '(' → logprob: -2.2383222579956055
    3. '(mod' → logprob: -8.363322257995605
    4. 'factor' → logprob: -8.488322257995605
    5. '(
' → logprob: -10.738322257995605
    6. '(self' → logprob: -11.738322257995605
    7. 'mod' → logprob: -12.238322257995605
    8. '```' → logprob: -12.363322257995605
    9. 'f' → logprob: -12.613322257995605
    10. '(Mod' → logprob: -13.238322257995605

Token 128: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -2.1888679839321412e-05
    2. '.fact' → logprob: -11.000021934509277
    3. '.mod' → logprob: -13.250021934509277
    4. '.fac' → logprob: -13.375021934509277
    5. 'factor' → logprob: -13.500021934509277
    6. '.' → logprob: -15.125021934509277
    7. ' .' → logprob: -15.625021934509277
    8. ').' → logprob: -18.25002098083496
    9. '.operator' → logprob: -18.50002098083496
    10. '.floor' → logprob: -18.62502098083496

Token 129: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.1276845484972
    2. 'ial' → logprob: -2.1276845932006836
    3. 'alist' → logprob: -7.877684593200684
    4. '_list' → logprob: -9.127684593200684
    5. 'ator' → logprob: -9.627684593200684
    6. 'alc' → logprob: -9.752684593200684
    7. '_factor' → logprob: -10.377684593200684
    8. 'acc' → logprob: -10.627684593200684
    9. 'actor' → logprob: -10.752684593200684
    10. 'or' → logprob: -11.752684593200684

Token 130: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00043257648940198123
    2. 'list' → logprob: -7.75043249130249
    3. 'factor' → logprob: -13.500432968139648
    4. 'List' → logprob: -15.000432968139648
    5. '_factor' → logprob: -16.25043296813965
    6. '[' → logprob: -16.87543296813965
    7. 'self' → logprob: -17.12543296813965
    8. 's' → logprob: -18.37543296813965
    9. 'l' → logprob: -18.75043296813965
    10. '```' → logprob: -18.87543296813965

Token 131: '[size' (ID: 77532)
  Prédit: '[size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[size' → logprob: -0.0019320894498378038
    2. '[-' → logprob: -6.251932144165039
    3. '[
' → logprob: -12.876932144165039
    4. '[' → logprob: -14.876932144165039
    5. ',size' → logprob: -15.126932144165039
    6. 'size' → logprob: -15.376932144165039
    7. '<size' → logprob: -16.87693214416504
    8. ' size' → logprob: -17.50193214416504
    9. '[length' → logprob: -17.75193214416504
    10. '
' → logprob: -18.00193214416504

Token 132: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.003185436362400651
    2. 'max' → logprob: -5.753185272216797
    3. 'Max' → logprob: -12.128185272216797
    4. '_MAX' → logprob: -14.128185272216797
    5. 'x' → logprob: -15.003185272216797
    6. 'maxlength' → logprob: -15.253185272216797
    7. '-max' → logprob: -15.503185272216797
    8. 'MAX' → logprob: -15.628185272216797
    9. 'const' → logprob: -15.753185272216797
    10. ')' → logprob: -16.628185272216797

Token 133: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5213274309644476e-05
    2. ',
' → logprob: -11.750015258789062
    3. ' ,' → logprob: -12.125015258789062
    4. ',module' → logprob: -14.125015258789062
    5. ',

' → logprob: -14.750015258789062
    6. ')' → logprob: -15.875015258789062
    7. 'MOD' → logprob: -16.375015258789062
    8. '‌,' → logprob: -16.625015258789062
    9. '),' → logprob: -16.625015258789062
    10. '       ' → logprob: -16.875015258789062

Token 134: ' -' (ID: 533)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.15263687074184418
    2. ' mod' → logprob: -2.402636766433716
    3. '-' → logprob: -3.402636766433716
    4. 'MOD' → logprob: -4.527637004852295
    5. '-mod' → logprob: -5.277637004852295
    6. ' -' → logprob: -7.152637004852295
    7. ' MOD' → logprob: -7.402637004852295
    8. '	mod' → logprob: -8.027636528015137
    9. '.mod' → logprob: -10.402636528015137
    10. ' ' → logprob: -10.527636528015137

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. 'MOD' → logprob: -13.375003814697266
    3. '2' → logprob: -13.500003814697266
    4. ' ' → logprob: -15.500003814697266
    5. '   ' → logprob: -17.000003814697266
    6. '```' → logprob: -17.125003814697266
    7. 'mod' → logprob: -17.375003814697266
    8. ' MOD' → logprob: -18.000003814697266
    9. '998' → logprob: -18.375003814697266
    10. '

' → logprob: -19.000003814697266

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5954712075181305e-05
    2. ' ,' → logprob: -10.750036239624023
    3. ',
' → logprob: -11.500036239624023
    4. ',module' → logprob: -13.625036239624023
    5. '   ' → logprob: -14.000036239624023
    6. ')' → logprob: -14.250036239624023
    7. 'mod' → logprob: -14.750036239624023
    8. ',

' → logprob: -15.250036239624023
    9. 'MOD' → logprob: -15.375036239624023
    10. '       ' → logprob: -15.500036239624023

Token 137: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.033653534948825836
    2. ' mod' → logprob: -3.408653497695923
    3. 'MOD' → logprob: -12.158653259277344
    4. ' MOD' → logprob: -13.783653259277344
    5. '	mod' → logprob: -13.908653259277344
    6. '(mod' → logprob: -15.783653259277344
    7. '_mod' → logprob: -16.408653259277344
    8. '       ' → logprob: -16.533653259277344
    9. '   ' → logprob: -16.658653259277344
    10. '           ' → logprob: -17.283653259277344

Token 138: '_value' (ID: 6734)
  Prédit: '_const'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_const' → logprob: -0.10976194590330124
    2. '_CONST' → logprob: -3.234761953353882
    3. 'CONST' → logprob: -3.484761953353882
    4. 'const' → logprob: -3.734761953353882
    5. '_value' → logprob: -5.484761714935303
    6. 'value' → logprob: -6.234761714935303
    7. 'mod' → logprob: -6.484761714935303
    8. ')' → logprob: -6.609761714935303
    9. '_mod' → logprob: -7.984761714935303
    10. 'MOD' → logprob: -8.609762191772461

Token 139: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006293982733041048
    2. ')
' → logprob: -7.375629425048828
    3. ' )' → logprob: -13.250629425048828
    4. ')

' → logprob: -14.125629425048828
    5. '       ' → logprob: -15.250629425048828
    6. '   ' → logprob: -16.500629425048828
    7. ')
' → logprob: -17.375629425048828
    8. ')`' → logprob: -17.750629425048828
    9. ' )
' → logprob: -18.625629425048828
    10. '))' → logprob: -18.625629425048828

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036747753620147705
    2. '<|end|>' → logprob: -5.8786749839782715
    3. ' for' → logprob: -7.5036749839782715
    4. ')' → logprob: -9.378674507141113
    5. 'for' → logprob: -9.503674507141113
    6. '	' → logprob: -10.003674507141113
    7. ',' → logprob: -10.628674507141113
    8. '        ' → logprob: -10.753674507141113
    9. '	for' → logprob: -11.253674507141113
    10. '	       ' → logprob: -11.753674507141113

Token 141: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.062291327863931656
    2. '       ' → logprob: -2.812291383743286
    3. ' for' → logprob: -8.062291145324707
    4. '   ' → logprob: -12.062291145324707
    5. '	for' → logprob: -12.937291145324707
    6. '	' → logprob: -16.062292098999023
    7. '      ' → logprob: -16.187292098999023
    8. '```' → logprob: -16.812292098999023
    9. '     ' → logprob: -17.187292098999023
    10. '           ' → logprob: -17.562292098999023

Token 142: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.5238803625106812
    2. 'idx' → logprob: -0.8988803625106812
    3. ' i' → logprob: -8.148880004882812
    4. 'rev' → logprob: -8.898880004882812
    5. 'i' → logprob: -9.398880004882812
    6. '	idx' → logprob: -10.023880004882812
    7. 'reverse' → logprob: -10.398880004882812
    8. ' reverse' → logprob: -10.523880004882812
    9. ' ' → logprob: -11.148880004882812
    10. ' index' → logprob: -11.148880004882812

Token 143: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007141007808968425
    2. 'in' → logprob: -7.250714302062988
    3. ' ' → logprob: -13.250714302062988
    4. '	in' → logprob: -14.125714302062988
    5. 's' → logprob: -15.500714302062988
    6. 'range' → logprob: -15.500714302062988
    7. 'size' → logprob: -15.625714302062988
    8. ' i' → logprob: -15.750714302062988
    9. '```' → logprob: -15.750714302062988
    10. '  ' → logprob: -16.000713348388672

Token 144: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20591342449188232
    2. ' range' → logprob: -1.7059134244918823
    3. 're' → logprob: -5.580913543701172
    4. ' reversed' → logprob: -7.330913543701172
    5. '   ' → logprob: -10.205913543701172
    6. ' ' → logprob: -11.080913543701172
    7. '  ' → logprob: -12.330913543701172
    8. '(range' → logprob: -12.580913543701172
    9. '	range' → logprob: -12.830913543701172
    10. '
' → logprob: -13.580913543701172

Token 145: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -2.5776860184123507e-06
    2. ' (' → logprob: -13.12500286102295
    3. '(' → logprob: -14.87500286102295
    4. ' size' → logprob: -16.875001907348633
    5. 'size' → logprob: -16.875001907348633
    6. ',size' → logprob: -17.000001907348633
    7. '[size' → logprob: -17.125001907348633
    8. '=size' → logprob: -17.375001907348633
    9. '(sz' → logprob: -17.875001907348633
    10. '<size' → logprob: -18.875001907348633

Token 146: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -2.463036435074173e-05
    2. 'max' → logprob: -10.625024795532227
    3. 'Max' → logprob: -16.125024795532227
    4. '_MAX' → logprob: -16.500024795532227
    5. '-' → logprob: -18.875024795532227
    6. 'x' → logprob: -19.000024795532227
    7. '_mod' → logprob: -19.500024795532227
    8. '_Max' → logprob: -19.500024795532227
    9. '-max' → logprob: -19.625024795532227
    10. '_size' → logprob: -19.750024795532227

Token 147: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0025080014020204544
    2. ' -' → logprob: -6.377508163452148
    3. ',' → logprob: -7.127508163452148
    4. ' ,' → logprob: -13.377508163452148
    5. 'size' → logprob: -15.002508163452148
    6. '-,' → logprob: -15.252508163452148
    7. ',-' → logprob: -15.502508163452148
    8. '   ' → logprob: -16.00250816345215
    9. ',size' → logprob: -16.12750816345215
    10. ' ' → logprob: -16.50250816345215

Token 148: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010337610729038715
    2. ' ' → logprob: -6.876033782958984
    3. '   ' → logprob: -14.876033782958984
    4. '1' → logprob: -15.501033782958984
    5. '-' → logprob: -15.876033782958984
    6. '
' → logprob: -16.376033782958984
    7. '  ' → logprob: -17.001033782958984
    8. 'size' → logprob: -17.126033782958984
    9. ' -' → logprob: -17.751033782958984
    10. '    ' → logprob: -17.751033782958984

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3544423381972592e-05
    2. '-' → logprob: -11.50001335144043
    3. ' ' → logprob: -12.87501335144043
    4. '1' → logprob: -14.50001335144043
    5. '
' → logprob: -16.50001335144043
    6. ' -' → logprob: -17.12501335144043
    7. '   ' → logprob: -17.62501335144043
    8. '```' → logprob: -17.75001335144043
    9. '

' → logprob: -18.37501335144043
    10. 'size' → logprob: -18.75001335144043

Token 150: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6065993309020996
    2. ' -' → logprob: -1.1065993309020996
    3. ',' → logprob: -2.1065993309020996
    4. ',-' → logprob: -6.2315993309021
    5. '   ' → logprob: -8.731599807739258
    6. ' ,' → logprob: -8.731599807739258
    7. '-,' → logprob: -9.356599807739258
    8. ' ,-' → logprob: -10.231599807739258
    9. ' -,' → logprob: -11.106599807739258
    10. ' ' → logprob: -11.606599807739258

Token 151: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.029765525832772255
    2. ' -' → logprob: -3.5297656059265137
    3. '  ' → logprob: -11.904765129089355
    4. '   ' → logprob: -12.279765129089355
    5. ' ' → logprob: -13.404765129089355
    6. '       ' → logprob: -14.654765129089355
    7. '           ' → logprob: -14.904765129089355
    8. '```' → logprob: -15.154765129089355
    9. ',-' → logprob: -15.404765129089355
    10. '    ' → logprob: -15.904765129089355

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011879685334861279
    2. '-' → logprob: -6.751187801361084
    3. ' -' → logprob: -11.001188278198242
    4. ' ' → logprob: -14.626188278198242
    5. ')' → logprob: -15.126188278198242
    6. '):
' → logprob: -15.626188278198242
    7. '```' → logprob: -16.001188278198242
    8. '   ' → logprob: -17.001188278198242
    9. ')-' → logprob: -17.876188278198242
    10. '  ' → logprob: -18.001188278198242

Token 153: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7015790939331055
    2. '):' → logprob: -1.3265790939331055
    3. '-' → logprob: -1.4515790939331055
    4. ' -' → logprob: -5.4515790939331055
    5. '   ' → logprob: -9.326579093933105
    6. ':' → logprob: -9.826579093933105
    7. '):
' → logprob: -9.951579093933105
    8. ')' → logprob: -10.076579093933105
    9. ' ):
' → logprob: -10.826579093933105
    10. ',-' → logprob: -11.076579093933105

Token 154: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09858652949333191
    2. '       ' → logprob: -2.8485865592956543
    3. '-' → logprob: -4.223586559295654
    4. ':' → logprob: -4.848586559295654
    5. '   ' → logprob: -5.723586559295654
    6. '):
' → logprob: -6.223586559295654
    7. ' -' → logprob: -6.598586559295654
    8. '<|end|>' → logprob: -7.098586559295654
    9. ' ' → logprob: -7.223586559295654
    10. '1' → logprob: -7.348586559295654

Token 155: ' inv' (ID: 1827)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27795538306236267
    2. 'inv' (adapté à ' inv') → logprob: -2.7779552936553955
    3. '0' → logprob: -2.9029552936553955
    4. '               ' → logprob: -3.0279552936553955
    5. ' ' → logprob: -3.5279552936553955
    6. '1' → logprob: -3.6529552936553955
    7. '
' → logprob: -4.652955532073975
    8. ' inv' → logprob: -5.027955532073975
    9. '       ' → logprob: -7.027955532073975
    10. ':' → logprob: -7.027955532073975

Token 156: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -1.981667537620524e-06
    2. 'factor' → logprob: -13.500001907348633
    3. '_fact' → logprob: -15.250001907348633
    4. '_acc' → logprob: -15.625001907348633
    5. '_' → logprob: -16.750001907348633
    6. '_FACTOR' → logprob: -17.000001907348633
    7. '```' → logprob: -17.625001907348633
    8. '_fac' → logprob: -17.750001907348633
    9. 'Factor' → logprob: -18.375001907348633
    10. '   ' → logprob: -18.375001907348633

Token 157: 'ial' (ID: 563)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.375538163818419e-05
    2. 'alist' → logprob: -10.250083923339844
    3. 'al' → logprob: -11.000083923339844
    4. 'ial' → logprob: -11.250083923339844
    5. 'or' → logprob: -12.625083923339844
    6. 'rial' → logprob: -13.125083923339844
    7. 'list' → logprob: -13.500083923339844
    8. 'acc' → logprob: -14.000083923339844
    9. '[' → logprob: -14.125083923339844
    10. 'o' → logprob: -14.125083923339844

Token 158: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.816093228830141e-06
    2. 'list' → logprob: -13.25000286102295
    3. 'List' → logprob: -14.50000286102295
    4. '[' → logprob: -15.62500286102295
    5. '_lists' → logprob: -16.000001907348633
    6. 's' → logprob: -16.250001907348633
    7. '_LIST' → logprob: -16.375001907348633
    8. '_List' → logprob: -17.375001907348633
    9. '```' → logprob: -17.500001907348633
    10. '[_' → logprob: -18.250001907348633

Token 159: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.3080716346157715e-05
    2. 'idx' → logprob: -11.625022888183594
    3. '[' → logprob: -11.875022888183594
    4. '
' → logprob: -13.375022888183594
    5. '[
' → logprob: -13.500022888183594
    6. '[id' → logprob: -14.000022888183594
    7. '[ind' → logprob: -15.000022888183594
    8. '	idx' → logprob: -15.250022888183594
    9. '[int' → logprob: -15.375022888183594
    10. '[index' → logprob: -15.500022888183594

Token 160: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006776946131139994
    2. ' -' → logprob: -5.006776809692383
    3. ']' → logprob: -9.756776809692383
    4. '-=' → logprob: -13.756776809692383
    5. '[' → logprob: -13.881776809692383
    6. '[idx' → logprob: -14.881776809692383
    7. '```' → logprob: -15.256776809692383
    8. 'idx' → logprob: -15.631776809692383
    9. '   ' → logprob: -15.756776809692383
    10. 'minus' → logprob: -16.131776809692383

Token 161: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8908587662735954e-05
    2. ' ' → logprob: -11.000019073486328
    3. '<|end|>' → logprob: -13.250019073486328
    4. '   ' → logprob: -16.000019073486328
    5. ')' → logprob: -16.375019073486328
    6. '<|end|>' → logprob: -16.750019073486328
    7. '```' → logprob: -17.125019073486328
    8. '=' → logprob: -18.062519073486328
    9. '
' → logprob: -18.125019073486328
    10. ']' → logprob: -18.187519073486328

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.250015258789062
    3. '   ' → logprob: -14.000015258789062
    4. '
' → logprob: -15.062515258789062
    5. ')' → logprob: -15.750015258789062
    6. '```' → logprob: -15.750015258789062
    7. '    ' → logprob: -16.375015258789062
    8. ']' → logprob: -16.500015258789062
    9. 'idx' → logprob: -17.125015258789062
    10. '       ' → logprob: -17.250015258789062

Token 163: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4288221001625061
    2. ']' → logprob: -1.1788220405578613
    3. ' =' → logprob: -3.3038220405578613
    4. ')' → logprob: -5.928822040557861
    5. ']=' → logprob: -6.428822040557861
    6. ')=' → logprob: -10.05382251739502
    7. 's' → logprob: -11.92882251739502
    8. ' ]' → logprob: -12.05382251739502
    9. ' ' → logprob: -13.05382251739502
    10. ',' → logprob: -13.42882251739502

Token 164: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245595395565033
    2. ' =' → logprob: -3.7732455730438232
    3. '＝' → logprob: -17.398244857788086
    4. ' ' → logprob: -18.023244857788086
    5. '=

' → logprob: -18.023244857788086
    6. '=
' → logprob: -18.523244857788086
    7. ']' → logprob: -19.523244857788086
    8. ')' → logprob: -19.773244857788086
    9. ',' → logprob: -19.898244857788086
    10. '*=' → logprob: -20.273244857788086

Token 165: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.02985982969403267
    2. ' inv' → logprob: -3.779859781265259
    3. '(inv' → logprob: -5.029860019683838
    4. ' (' → logprob: -10.52985954284668
    5. '(' → logprob: -10.65485954284668
    6. '(in' → logprob: -14.90485954284668
    7. '_inv' → logprob: -15.02985954284668
    8. ' ' → logprob: -15.27985954284668
    9. '```' → logprob: -15.52985954284668
    10. '   ' → logprob: -15.65485954284668

Token 166: '_acc' (ID: 35551)
  Prédit: '_acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -0.0009515985148027539
    2. '_factor' → logprob: -7.250951766967773
    3. 'acc' → logprob: -8.375951766967773
    4. 'factor' → logprob: -12.250951766967773
    5. '	acc' → logprob: -13.375951766967773
    6. '_' → logprob: -13.500951766967773
    7. '_inv' → logprob: -14.500951766967773
    8. '```' → logprob: -14.750951766967773
    9. '<|end|>' → logprob: -14.875951766967773
    10. 'Acc' → logprob: -15.500951766967773

Token 167: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016071204096078873
    2. ' =' → logprob: -4.141071319580078
    3. '*' → logprob: -10.641071319580078
    4. '*=' → logprob: -11.391071319580078
    5. ' *' → logprob: -13.516071319580078
    6. '=
' → logprob: -15.641071319580078
    7. '＝' → logprob: -17.016071319580078
    8. '<|end|>' → logprob: -17.141071319580078
    9. ' *=' → logprob: -17.391071319580078
    10. '   ' → logprob: -17.391071319580078

Token 168: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.044236693531274796
    2. '(inv' → logprob: -3.794236660003662
    3. ' inv' → logprob: -3.919236660003662
    4. ' (' → logprob: -7.044236660003662
    5. '   ' → logprob: -11.54423713684082
    6. '           ' → logprob: -11.54423713684082
    7. '(in' → logprob: -11.91923713684082
    8. ' ' → logprob: -12.41923713684082
    9. '(' → logprob: -12.54423713684082
    10. '_inv' → logprob: -13.29423713684082

Token 169: '_acc' (ID: 35551)
  Prédit: '_acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -9.269565634895116e-05
    2. 'acc' → logprob: -9.500092506408691
    3. '*' → logprob: -11.000092506408691
    4. 'Acc' → logprob: -14.875092506408691
    5. ' *' → logprob: -15.250092506408691
    6. '	acc' → logprob: -16.000093460083008
    7. '_factor' → logprob: -16.250093460083008
    8. 'acci' → logprob: -17.375093460083008
    9. '_mul' → logprob: -17.375093460083008
    10. ' acc' → logprob: -17.500093460083008

Token 170: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11282826960086823
    2. '*' → logprob: -2.237828254699707
    3. '*object' → logprob: -13.112828254699707
    4. ' ' → logprob: -13.487828254699707
    5. '   ' → logprob: -13.737828254699707
    6. '*(' → logprob: -15.487828254699707
    7. '**' → logprob: -15.737828254699707
    8. '```' → logprob: -15.862828254699707
    9. '<|end|>' → logprob: -15.862828254699707
    10. '[idx' → logprob: -15.987828254699707

Token 171: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.004119838587939739
    2. ' idx' → logprob: -5.504119873046875
    3. '(idx' → logprob: -10.754119873046875
    4. '[idx' → logprob: -11.504119873046875
    5. '	idx' → logprob: -11.629119873046875
    6. '<|end|>' → logprob: -14.504119873046875
    7. '_idx' → logprob: -14.754119873046875
    8. '.idx' → logprob: -16.254119873046875
    9. ' ' → logprob: -17.004119873046875
    10. 'index' → logprob: -17.629119873046875

Token 172: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.014164329506456852
    2. '%' → logprob: -4.264164447784424
    3. ' ' → logprob: -14.889163970947266
    4. ')' → logprob: -16.764163970947266
    5. 'mod' → logprob: -16.889163970947266
    6. ' ' → logprob: -16.889163970947266
    7. ' %=' → logprob: -17.014163970947266
    8. '%c' → logprob: -17.139163970947266
    9. '
' → logprob: -17.264163970947266
    10. '%s' → logprob: -17.389163970947266

Token 173: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0001366744691040367
    2. ' mod' → logprob: -9.000136375427246
    3. 'MOD' → logprob: -11.250136375427246
    4. '	mod' → logprob: -16.125137329101562
    5. '(mod' → logprob: -16.875137329101562
    6. ' MOD' → logprob: -17.250137329101562
    7. 'moder' → logprob: -17.375137329101562
    8. '998' → logprob: -19.125137329101562
    9. '_mod' → logprob: -19.125137329101562
    10. '```' → logprob: -19.375137329101562

Token 174: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.21540957689285278
    2. 'mod' → logprob: -1.840409517288208
    3. '_mod' → logprob: -4.090409755706787
    4. '_const' → logprob: -4.590409755706787
    5. 'od' → logprob: -5.215409755706787
    6. '_val' → logprob: -6.590409755706787
    7. 'const' → logprob: -7.965409755706787
    8. 'value' → logprob: -7.965409755706787
    9. ' mod' → logprob: -8.715409278869629
    10. 'val' → logprob: -8.965409278869629

Token 175: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.04389803856611252
    2. '.size' → logprob: -3.168898105621338
    3. '.MOD' → logprob: -7.668898105621338
    4. '.' → logprob: -8.41889762878418
    5. 'size' → logprob: -9.91889762878418
    6. 'mod' → logprob: -10.29389762878418
    7. ' .' → logprob: -10.29389762878418
    8. '.factor' → logprob: -10.54389762878418
    9. 'MOD' → logprob: -11.16889762878418
    10. '.module' → logprob: -11.66889762878418

Token 179: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0010278081754222512
    2. '_' → logprob: -7.001027584075928
    3. ' =' → logprob: -10.251028060913086
    4. 'value' → logprob: -10.376028060913086
    5. '_val' → logprob: -10.751028060913086
    6. '=' → logprob: -10.876028060913086
    7. ' _' → logprob: -13.001028060913086
    8. '=_' → logprob: -13.001028060913086
    9. '_=' → logprob: -13.501028060913086
    10. '_VALUE' → logprob: -14.001028060913086

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038044363260269165
    2. '=' → logprob: -3.2880444526672363
    3. ' ' → logprob: -13.163043975830078
    4. ' =
' → logprob: -14.413043975830078
    5. '_' → logprob: -15.538043975830078
    6. '<|end|>' → logprob: -16.163043975830078
    7. ',' → logprob: -16.788043975830078
    8. '=model' → logprob: -18.163043975830078
    9. ' ' → logprob: -18.288043975830078
    10. ' =)' → logprob: -18.288043975830078

Token 181: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.03804183006286621
    2. ' mod' → logprob: -3.288041830062866
    3. '	mod' → logprob: -14.913042068481445
    4. 'MOD' → logprob: -17.038042068481445
    5. '(mod' → logprob: -17.288042068481445
    6. '_mod' → logprob: -17.788042068481445
    7. ' мод' → logprob: -19.538042068481445
    8. 'mo' → logprob: -19.663042068481445
    9. ' MOD' → logprob: -19.913042068481445
    10. ' ' → logprob: -19.913042068481445

Token 182: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00011474833445390686
    2. '_const' → logprob: -9.250114440917969
    3. '_' → logprob: -11.625114440917969
    4. '_val' → logprob: -12.500114440917969
    5. '_VALUE' → logprob: -12.625114440917969
    6. '_constant' → logprob: -13.500114440917969
    7. '_mod' → logprob: -14.875114440917969
    8. '_Value' → logprob: -15.250114440917969
    9. 'const' → logprob: -15.500114440917969
    10. ' _' → logprob: -16.25011444091797

Token 183: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3695229291915894
    2. ')' → logprob: -1.4945229291915894
    3. '<|end|>' → logprob: -1.6195229291915894
    4. '       ' → logprob: -1.8695229291915894
    5. '   ' → logprob: -1.9945229291915894
    6. '    ' → logprob: -4.619523048400879
    7. '_' → logprob: -5.244523048400879
    8. '        ' → logprob: -5.494523048400879
    9. '  ' → logprob: -6.244523048400879
    10. ',' → logprob: -6.244523048400879

Token 185: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5860918760299683
    2. '       ' → logprob: -1.3360918760299683
    3. ')' → logprob: -2.961091995239258
    4. '   ' → logprob: -3.086091995239258
    5. '<|end|>' → logprob: -3.211091995239258
    6. '    ' → logprob: -4.211091995239258
    7. '        ' → logprob: -4.461091995239258
    8. '_' → logprob: -4.711091995239258
    9. '  ' → logprob: -6.586091995239258
    10. ' )' → logprob: -7.336091995239258

Token 186: ' get' (ID: 717)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.17116162180900574
    2. 'factor' → logprob: -2.046161651611328
    3. '_factor' → logprob: -4.921161651611328
    4. ' n' → logprob: -5.921161651611328
    5. ' calculate' → logprob: -6.046161651611328
    6. ' get' → logprob: -6.171161651611328
    7. 'n' → logprob: -6.421161651611328
    8. ' calc' → logprob: -6.421161651611328
    9. ' factor' → logprob: -6.671161651611328
    10. 'get' → logprob: -6.796161651611328

Token 187: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.031849201768636703
    2. '(self' → logprob: -4.281849384307861
    3. '(' → logprob: -4.781849384307861
    4. '_' → logprob: -5.156849384307861
    5. '_fac' → logprob: -6.781849384307861
    6. 'factor' → logprob: -7.281849384307861
    7. '_fact' → logprob: -7.906849384307861
    8. ' factorial' → logprob: -8.156848907470703
    9. ' (' → logprob: -8.531848907470703
    10. '_size' → logprob: -9.656848907470703

Token 188: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.3032420873641968
    2. 'orial' → logprob: -1.5532420873641968
    3. 'or' → logprob: -3.9282422065734863
    4. '_' → logprob: -4.428242206573486
    5. '_or' → logprob: -5.178242206573486
    6. 'rial' → logprob: -5.803242206573486
    7. '(' → logprob: -6.428242206573486
    8. 'ialize' → logprob: -6.553242206573486
    9. '```' → logprob: -6.803242206573486
    10. '   ' → logprob: -6.928242206573486

Token 189: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2818250358104706
    2. '(' → logprob: -1.406825065612793
    3. ' (' → logprob: -8.656825065612793
    4. '   ' → logprob: -9.156825065612793
    5. '(
' → logprob: -9.281825065612793
    6. '_factor' → logprob: -10.031825065612793
    7. 's' → logprob: -10.281825065612793
    8. '_list' → logprob: -10.406825065612793
    9. 'self' → logprob: -10.406825065612793
    10. '_value' → logprob: -10.406825065612793

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00300444639287889
    2. ' ,' → logprob: -6.628004550933838
    3. ',n' → logprob: -7.378004550933838
    4. ',size' → logprob: -8.12800407409668
    5. ',value' → logprob: -8.50300407409668
    6. 'self' → logprob: -8.62800407409668
    7. ',_' → logprob: -9.50300407409668
    8. '_,' → logprob: -10.12800407409668
    9. ',num' → logprob: -10.25300407409668
    10. ',length' → logprob: -10.37800407409668

Token 191: ' idx' (ID: 14016)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.308210164308548
    2. ' n' → logprob: -1.4332101345062256
    3. 'number' → logprob: -4.808210372924805
    4. 'self' → logprob: -5.058210372924805
    5. 'num' → logprob: -5.183210372924805
    6. ' number' → logprob: -6.558210372924805
    7. ' self' → logprob: -6.683210372924805
    8. 'value' → logprob: -7.183210372924805
    9. 'idx' → logprob: -7.183210372924805
    10. '   ' → logprob: -7.308210372924805

Token 192: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023745812941342592
    2. '):
' → logprob: -6.127374649047852
    3. ')' → logprob: -8.627374649047852
    4. ':' → logprob: -12.627374649047852
    5. '   ' → logprob: -12.877374649047852
    6. '):
' → logprob: -13.002374649047852
    7. ' ):' → logprob: -13.377374649047852
    8. '       ' → logprob: -15.127374649047852
    9. ')：' → logprob: -16.50237464904785
    10. '):

' → logprob: -16.62737464904785

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00489275436848402
    2. ' return' → logprob: -5.754892826080322
    3. 'return' → logprob: -7.004892826080322
    4. '   ' → logprob: -7.254892826080322
    5. '	' → logprob: -10.879892349243164
    6. '	return' → logprob: -11.004892349243164
    7. ':return' → logprob: -11.379892349243164
    8. '    ' → logprob: -11.879892349243164
    9. ' ' → logprob: -12.129892349243164
    10. ',' → logprob: -12.379892349243164

Token 194: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009138475870713592
    2. '       ' → logprob: -7.250913619995117
    3. ' return' → logprob: -8.500913619995117
    4. 'if' → logprob: -15.250913619995117
    5. '	return' → logprob: -15.500913619995117
    6. '   ' → logprob: -16.000913619995117
    7. '	' → logprob: -17.875913619995117
    8. '{return' → logprob: -18.750913619995117
    9. ':return' → logprob: -19.000913619995117
    10. '```' → logprob: -20.000913619995117

Token 195: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889033854007721
    2. ' self' → logprob: -2.578890323638916
    3. '(self' → logprob: -15.578890800476074
    4. '   ' → logprob: -15.703890800476074
    5. '       ' → logprob: -16.328889846801758
    6. '0' → logprob: -16.828889846801758
    7. '	self' → logprob: -17.578889846801758
    8. ' ' → logprob: -17.828889846801758
    9. ' ' → logprob: -18.453889846801758
    10. '1' → logprob: -20.078889846801758

Token 196: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.00013440960901789367
    2. '.' → logprob: -9.750134468078613
    3. ' .' → logprob: -10.000134468078613
    4. '.fact' → logprob: -10.625134468078613
    5. '.fac' → logprob: -12.500134468078613
    6. '.period' → logprob: -14.250134468078613
    7. '.f' → logprob: -15.375134468078613
    8. '.face' → logprob: -15.500134468078613
    9. '.factory' → logprob: -15.500134468078613
    10. '.fa' → logprob: -15.750134468078613

Token 197: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.2146824598312378
    2. 'al' → logprob: -1.7146824598312378
    3. '_list' → logprob: -4.714682579040527
    4. '_factor' → logprob: -6.464682579040527
    5. '       ' → logprob: -6.964682579040527
    6. 'cial' → logprob: -7.964682579040527
    7. '   ' → logprob: -8.214682579040527
    8. 'orial' → logprob: -8.589682579040527
    9. 'factor' → logprob: -8.714682579040527
    10. 't' → logprob: -8.839682579040527

Token 198: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.9361264946837764e-07
    2. '[_' → logprob: -16.625
    3. '[' → logprob: -18.25
    4. '_factor' → logprob: -18.875
    5. '_' → logprob: -19.625
    6. '_value' → logprob: -19.75
    7. '_lst' → logprob: -20.125
    8. 's' → logprob: -20.375
    9. ' _' → logprob: -20.75
    10. '_lists' → logprob: -20.875

Token 199: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00038443657103925943
    2. '[' → logprob: -7.875384330749512
    3. '[id' → logprob: -13.375384330749512
    4. '```' → logprob: -14.375384330749512
    5. '[index' → logprob: -15.125384330749512
    6. '[ind' → logprob: -15.125384330749512
    7. '   ' → logprob: -15.125384330749512
    8. '[src' → logprob: -15.375384330749512
    9. '[
' → logprob: -15.375384330749512
    10. ' [' → logprob: -15.625384330749512

Token 200: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0061256177723407745
    2. ']' → logprob: -5.256125450134277
    3. '<|end|>' → logprob: -7.131125450134277
    4. '}' → logprob: -9.756125450134277
    5. ')
' → logprob: -11.256125450134277
    6. '<|end|>' → logprob: -11.881125450134277
    7. '   ' → logprob: -12.381125450134277
    8. ' )' → logprob: -13.131125450134277
    9. '```' → logprob: -13.256125450134277
    10. ')return' → logprob: -13.381125450134277

Token 201: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10663197934627533
    2. '   ' → logprob: -2.9816319942474365
    3. '
' → logprob: -3.9816319942474365
    4. ' def' → logprob: -4.106631755828857
    5. '<|end|>' → logprob: -4.356631755828857
    6. '    
' → logprob: -6.606631755828857
    7. '```' → logprob: -7.856631755828857
    8. ' ' → logprob: -8.606632232666016
    9. ' 
' → logprob: -8.731632232666016
    10. '  ' → logprob: -9.606632232666016

Token 203: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.11395430564880371
    2. '_get' → logprob: -3.2389543056488037
    3. 'get' → logprob: -3.3639543056488037
    4. ' def' → logprob: -3.6139543056488037
    5. 'def' → logprob: -5.738954544067383
    6. ' _' → logprob: -5.863954544067383
    7. '_' → logprob: -7.363954544067383
    8. ' ' → logprob: -8.613954544067383
    9. '_def' → logprob: -10.738954544067383
    10. '.get' → logprob: -11.238954544067383

Token 204: '_inv' (ID: 53427)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.76511549949646
    2. '_inverse' → logprob: -1.01511549949646
    3. '_inv' → logprob: -1.76511549949646
    4. '_' → logprob: -7.390115737915039
    5. '_mod' → logprob: -8.890115737915039
    6. '_in' → logprob: -9.890115737915039
    7. '_fac' → logprob: -10.140115737915039
    8. '_div' → logprob: -10.390115737915039
    9. '_answer' → logprob: -10.390115737915039
    10. '_f' → logprob: -10.390115737915039

Token 205: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -2.8087270038668066e-05
    2. '_' → logprob: -11.250027656555176
    3. '_factory' → logprob: -12.625027656555176
    4. '   ' → logprob: -13.250027656555176
    5. '
' → logprob: -13.875027656555176
    6. '(_' → logprob: -14.125027656555176
    7. '```' → logprob: -14.125027656555176
    8. '_token' → logprob: -14.500027656555176
    9. '

' → logprob: -14.625027656555176
    10. '(' → logprob: -14.625027656555176

Token 206: 'ial' (ID: 563)
  Prédit: 'orial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orial' → logprob: -1.0668854713439941
    2. 'ial' → logprob: -1.1918854713439941
    3. 'atorial' → logprob: -1.6918854713439941
    4. 'ctor' → logprob: -2.816885471343994
    5. '(self' → logprob: -3.316885471343994
    6. 'actor' → logprob: -3.816885471343994
    7. '_factor' → logprob: -4.441885471343994
    8. 'or' → logprob: -5.066885471343994
    9. '(' → logprob: -5.316885471343994
    10. '   ' → logprob: -5.691885471343994

Token 207: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00038658222183585167
    2. '(' → logprob: -7.875386714935303
    3. ' (' → logprob: -12.625386238098145
    4. 'self' → logprob: -13.750386238098145
    5. '   ' → logprob: -14.125386238098145
    6. '(s' → logprob: -14.500386238098145
    7. 's' → logprob: -15.250386238098145
    8. '(
' → logprob: -15.625386238098145
    9. ' ' → logprob: -15.875386238098145
    10. '_list' → logprob: -16.12538719177246

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019579214858822525
    2. ' ,' → logprob: -8.750195503234863
    3. '[' → logprob: -11.250195503234863
    4. '[idx' → logprob: -12.000195503234863
    5. '   ' → logprob: -12.750195503234863
    6. '_idx' → logprob: -13.500195503234863
    7. '       ' → logprob: -13.500195503234863
    8. ' ' → logprob: -13.625195503234863
    9. ',[' → logprob: -13.625195503234863
    10. ')' → logprob: -13.875195503234863

Token 209: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0046301959082484245
    2. ' idx' → logprob: -5.379630088806152
    3. 'index' → logprob: -12.004630088806152
    4. '	idx' → logprob: -13.379630088806152
    5. '_idx' → logprob: -14.129630088806152
    6. '(idx' → logprob: -14.504630088806152
    7. ' ' → logprob: -14.754630088806152
    8. ')' → logprob: -15.004630088806152
    9. '<|end|>' → logprob: -15.754630088806152
    10. '   ' → logprob: -16.37963104248047

Token 210: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005860374658368528
    2. '):
' → logprob: -7.500586032867432
    3. ')' → logprob: -10.37558650970459
    4. '   ' → logprob: -14.50058650970459
    5. ' ):' → logprob: -14.50058650970459
    6. '):
' → logprob: -15.12558650970459
    7. '       ' → logprob: -15.25058650970459
    8. ':' → logprob: -15.25058650970459
    9. '():' → logprob: -17.375585556030273
    10. '}:' → logprob: -17.375585556030273

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018593916902318597
    2. ' return' → logprob: -6.501859188079834
    3. '   ' → logprob: -8.501859664916992
    4. 'return' → logprob: -9.001859664916992
    5. '	' → logprob: -11.501859664916992
    6. '	return' → logprob: -11.626859664916992
    7. ':' → logprob: -13.501859664916992
    8. ':return' → logprob: -13.501859664916992
    9. '<|end|>' → logprob: -13.626859664916992
    10. '	   ' → logprob: -14.001859664916992

Token 212: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.031725525856018066
    2. ' return' → logprob: -3.7817254066467285
    3. '       ' → logprob: -4.7817254066467285
    4. '   ' → logprob: -9.781725883483887
    5. '	return' → logprob: -12.281725883483887
    6. '```' → logprob: -14.531725883483887
    7. ':return' → logprob: -14.781725883483887
    8. ' ' → logprob: -15.031725883483887
    9. '    ' → logprob: -16.65672492980957
    10. '	' → logprob: -16.90672492980957

Token 213: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38687241077423096
    2. ' self' → logprob: -1.136872410774231
    3. '(self' → logprob: -14.511872291564941
    4. '	self' → logprob: -14.761872291564941
    5. ' ' → logprob: -16.386873245239258
    6. '[self' → logprob: -16.386873245239258
    7. ' ' → logprob: -16.386873245239258
    8. '       ' → logprob: -16.761873245239258
    9. '=self' → logprob: -16.886873245239258
    10. '_self' → logprob: -17.011873245239258

Token 214: '.inv' (ID: 83561)
  Prédit: '.inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inv' → logprob: -0.00016659092216286808
    2. '.' → logprob: -9.000166893005371
    3. '.factor' → logprob: -10.250166893005371
    4. ' .' → logprob: -12.250166893005371
    5. '.Inv' → logprob: -14.750166893005371
    6. '.inf' → logprob: -15.000166893005371
    7. '.inc' → logprob: -15.000166893005371
    8. '._' → logprob: -15.250166893005371
    9. '.fac' → logprob: -15.375166893005371
    10. '.fact' → logprob: -15.375166893005371

Token 215: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -4.127333340875339e-06
    2. 'factor' → logprob: -13.500003814697266
    3. '_' → logprob: -13.875003814697266
    4. '_fact' → logprob: -14.625003814697266
    5. '_fac' → logprob: -15.125003814697266
    6. '```' → logprob: -15.625003814697266
    7. '_factory' → logprob: -16.000003814697266
    8. '   ' → logprob: -16.125003814697266
    9. '_FACTOR' → logprob: -16.375003814697266
    10. ' _' → logprob: -16.375003814697266

Token 216: 'ial' (ID: 563)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.34061965346336365
    2. 'actor' → logprob: -2.2156195640563965
    3. 'al' → logprob: -2.7156195640563965
    4. 'atorial' → logprob: -2.9656195640563965
    5. 'ial' → logprob: -3.9656195640563965
    6. 'ctor' → logprob: -4.3406195640563965
    7. '_list' → logprob: -4.4656195640563965
    8. 'cial' → logprob: -5.0906195640563965
    9. 'acial' → logprob: -5.3406195640563965
    10. '_' → logprob: -5.9656195640563965

Token 217: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.8624639324116288e-06
    2. '_factor' → logprob: -13.500001907348633
    3. 'list' → logprob: -15.875001907348633
    4. 'factor' → logprob: -16.625001907348633
    5. '[_' → logprob: -17.000001907348633
    6. '_lst' → logprob: -17.125001907348633
    7. '[' → logprob: -17.375001907348633
    8. 'ist' → logprob: -17.500001907348633
    9. 'List' → logprob: -17.750001907348633
    10. '_lists' → logprob: -18.250001907348633

Token 218: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.875000953674316
    3. 'idx' → logprob: -17.000001907348633
    4. ' [' → logprob: -17.375001907348633
    5. '[id' → logprob: -17.375001907348633
    6. '[index' → logprob: -17.750001907348633
    7. '```' → logprob: -18.250001907348633
    8. '[ind' → logprob: -18.375001907348633
    9. '   ' → logprob: -18.625001907348633
    10. '(idx' → logprob: -18.750001907348633

Token 219: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008625566959381104
    2. ']' → logprob: -4.758625507354736
    3. '}' → logprob: -12.133625984191895
    4. '])' → logprob: -13.383625984191895
    5. ' )' → logprob: -13.508625984191895
    6. ')]' → logprob: -13.883625984191895
    7. '）' → logprob: -14.383625984191895
    8. ')
' → logprob: -14.633625984191895
    9. '   ' → logprob: -15.008625984191895
    10. '[' → logprob: -16.133625030517578

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1141219288110733
    2. ' ' → logprob: -3.239121913909912
    3. ')' → logprob: -3.614121913909912
    4. '<|end|>' → logprob: -3.614121913909912
    5. '
' → logprob: -5.239121913909912
    6. ' 
' → logprob: -5.614121913909912
    7. '    
' → logprob: -6.614121913909912
    8. 'def' → logprob: -6.864121913909912
    9. '  ' → logprob: -7.364121913909912
    10. '    ' → logprob: -7.614121913909912

Token 221: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8566408157348633
    2. '<|end|>' → logprob: -1.1066408157348633
    3. ')' → logprob: -1.8566408157348633
    4. 'def' (adapté à ' def') → logprob: -3.2316408157348633
    5. '```' → logprob: -4.231640815734863
    6. ' ' → logprob: -4.606640815734863
    7. '#' → logprob: -4.731640815734863
    8. '
' → logprob: -5.731640815734863
    9. ' def' → logprob: -5.856640815734863
    10. ']' → logprob: -6.481640815734863

Token 222: ' comb' (ID: 4134)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.4115143418312073
    2. ' def' → logprob: -1.1615142822265625
    3. 'def' → logprob: -4.5365142822265625
    4. 'get' → logprob: -4.9115142822265625
    5. ' factorial' → logprob: -6.1615142822265625
    6. ' ' → logprob: -6.7865142822265625
    7. ' compute' → logprob: -7.1615142822265625
    8. ' calculate' → logprob: -7.9115142822265625
    9. ' comb' → logprob: -8.286514282226562
    10. ' calc' → logprob: -8.661514282226562

Token 223: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002084593055769801
    2. '(' → logprob: -6.502084732055664
    3. 'ine' → logprob: -7.502084732055664
    4. 'self' → logprob: -11.752084732055664
    5. 'o' → logprob: -11.877084732055664
    6. 'in' → logprob: -12.627084732055664
    7. ' (' → logprob: -13.002084732055664
    8. 'ination' → logprob: -13.502084732055664
    9. '```' → logprob: -13.502084732055664
    10. '_(' → logprob: -13.752084732055664

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056815121322870255
    2. '(self' → logprob: -3.0568151473999023
    3. ',self' → logprob: -5.431815147399902
    4. ')(' → logprob: -6.181815147399902
    5. 'self' → logprob: -7.181815147399902
    6. ')' → logprob: -7.931815147399902
    7. ' ,' → logprob: -8.181815147399902
    8. '       ' → logprob: -9.181815147399902
    9. '_,' → logprob: -9.806815147399902
    10. '   ' → logprob: -10.681815147399902

Token 225: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5978514552116394
    2. ' n' → logprob: -1.2228515148162842
    3. 'self' → logprob: -2.347851514816284
    4. ' self' → logprob: -2.847851514816284
    5. 'r' → logprob: -7.472851276397705
    6. ' k' → logprob: -7.972851276397705
    7. 'k' → logprob: -8.097851753234863
    8. ')' → logprob: -8.222851753234863
    9. '   ' → logprob: -8.847851753234863
    10. ' r' → logprob: -8.847851753234863

Token 226: '_val' (ID: 13694)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005673298146575689
    2. ' ,' → logprob: -7.875567436218262
    3. ',k' → logprob: -8.625567436218262
    4. ',n' → logprob: -12.375567436218262
    5. ',r' → logprob: -13.875567436218262
    6. '   ' → logprob: -14.500567436218262
    7. ',
' → logprob: -15.000567436218262
    8. '_,' → logprob: -15.250567436218262
    9. ',m' → logprob: -15.375567436218262
    10. ',K' → logprob: -15.500567436218262

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010541265364736319
    2. ' ,' → logprob: -7.001054286956787
    3. ',n' → logprob: -9.001053810119629
    4. '   ' → logprob: -12.126053810119629
    5. 'r' → logprob: -12.501053810119629
    6. 'ex' → logprob: -13.501053810119629
    7. 'u' → logprob: -13.626053810119629
    8. 'n' → logprob: -13.876053810119629
    9. 'er' → logprob: -14.001053810119629
    10. ',k' → logprob: -14.251053810119629

Token 228: ' k' (ID: 372)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6390170454978943
    2. 'k' → logprob: -0.7640170454978943
    3. ' r' → logprob: -5.389017105102539
    4. ' k' → logprob: -6.389017105102539
    5. '
' → logprob: -9.764017105102539
    6. '   ' → logprob: -10.139017105102539
    7. ' ' → logprob: -10.639017105102539
    8. 'm' → logprob: -11.514017105102539
    9. '```' → logprob: -11.889017105102539
    10. '  ' → logprob: -12.514017105102539

Token 229: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0005437385407276452
    2. '):' → logprob: -8.000543594360352
    3. '):
' → logprob: -8.625543594360352
    4. 'val' → logprob: -11.250543594360352
    5. '_VAL' → logprob: -12.375543594360352
    6. ')_' → logprob: -12.625543594360352
    7. '_' → logprob: -13.250543594360352
    8. 'ex' → logprob: -13.625543594360352
    9. ')' → logprob: -13.625543594360352
    10. '   ' → logprob: -13.875543594360352

Token 230: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0037203843239694834
    2. '):
' → logprob: -5.628720283508301
    3. ')' → logprob: -9.3787202835083
    4. '):
' → logprob: -10.6287202835083
    5. ' ):' → logprob: -11.5037202835083
    6. '   ' → logprob: -14.3787202835083
    7. ',' → logprob: -15.6287202835083
    8. ':' → logprob: -15.7537202835083
    9. ')：' → logprob: -16.003721237182617
    10. ' ' → logprob: -16.378721237182617

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04083086550235748
    2. ':' → logprob: -3.2908308506011963
    3. '):' → logprob: -6.790831089019775
    4. ',' → logprob: -7.415831089019775
    5. ' if' → logprob: -7.665831089019775
    6. '<|end|>' → logprob: -8.290830612182617
    7. '   ' → logprob: -9.540830612182617
    8. 'if' → logprob: -10.165830612182617
    9. ':return' → logprob: -10.290830612182617
    10. '):
' → logprob: -10.415830612182617

Token 232: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13958457112312317
    2. ' if' → logprob: -2.139584541320801
    3. '       ' → logprob: -4.389584541320801
    4. '   ' → logprob: -9.3895845413208
    5. 'return' → logprob: -9.8895845413208
    6. 'i' → logprob: -11.3895845413208
    7. '```' → logprob: -11.6395845413208
    8. ' return' → logprob: -12.3895845413208
    9. ' i' → logprob: -12.6395845413208
    10. '	if' → logprob: -12.7645845413208

Token 233: ' not' (ID: 625)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.11616689711809158
    2. 'k' → logprob: -2.241166830062866
    3. ' n' → logprob: -5.991167068481445
    4. ' not' → logprob: -7.241167068481445
    5. 'n' → logprob: -9.491167068481445
    6. '(k' → logprob: -10.866167068481445
    7. '   ' → logprob: -11.241167068481445
    8. ' ' → logprob: -12.866167068481445
    9. ' (' → logprob: -12.866167068481445
    10. 'not' → logprob: -12.866167068481445

Token 234: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8999089598655701
    2. ' (' → logprob: -1.1499090194702148
    3. ' ' → logprob: -1.3999090194702148
    4. '0' → logprob: -3.524909019470215
    5. '(k' → logprob: -7.524909019470215
    6. 'k' → logprob: -10.024909019470215
    7. ' isinstance' → logprob: -10.399909019470215
    8. ' k' → logprob: -10.774909019470215
    9. '1' → logprob: -11.524909019470215
    10. '(n' → logprob: -13.024909019470215

Token 235: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4771665930747986
    2. '0' → logprob: -0.9771665930747986
    3. '(k' → logprob: -5.977166652679443
    4. ' (' → logprob: -7.727166652679443
    5. ' ' → logprob: -9.602166175842285
    6. '(n' → logprob: -10.852166175842285
    7. 'k' → logprob: -10.852166175842285
    8. '((' → logprob: -14.852166175842285
    9. '1' → logprob: -15.102166175842285
    10. '   ' → logprob: -15.227166175842285

Token 236: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3868715465068817
    2. ' <=' → logprob: -1.136871576309204
    3. ' ' → logprob: -15.011871337890625
    4. '<' → logprob: -16.636871337890625
    5. '=' → logprob: -16.761871337890625
    6. ' <' → logprob: -17.761871337890625
    7. ')<=' → logprob: -17.886871337890625
    8. ' <=",' → logprob: -18.011871337890625
    9. ' ' → logprob: -18.511871337890625
    10. '```' → logprob: -18.886871337890625

Token 237: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0015024791937321424
    2. ' k' → logprob: -6.501502513885498
    3. '	k' → logprob: -16.501502990722656
    4. '   ' → logprob: -17.126502990722656
    5. '       ' → logprob: -18.626502990722656
    6. '_k' → logprob: -18.626502990722656
    7. '           ' → logprob: -18.626502990722656
    8. ' ' → logprob: -18.626502990722656
    9. 'n' → logprob: -18.751502990722656
    10. '  ' → logprob: -19.126502990722656

Token 238: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -2.2200749754119897e-06
    2. 'val' → logprob: -13.625001907348633
    3. '<=' → logprob: -14.125001907348633
    4. ' <=' → logprob: -15.750001907348633
    5. '_' → logprob: -16.875001907348633
    6. '\' → logprob: -17.125001907348633
    7. '_VAL' → logprob: -17.375001907348633
    8. ' _' → logprob: -17.875001907348633
    9. '```' → logprob: -17.875001907348633
    10. '   ' → logprob: -18.500001907348633

Token 239: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0076085166074335575
    2. ' <=' → logprob: -4.882608413696289
    3. ']<=' → logprob: -14.757608413696289
    4. '<|end|>' → logprob: -14.757608413696289
    5. '≤' → logprob: -15.007608413696289
    6. ')<=' → logprob: -15.132608413696289
    7. 'and' → logprob: -15.257608413696289
    8. 'le' → logprob: -16.00760841369629
    9. '<|end|>' → logprob: -16.00760841369629
    10. '```' → logprob: -16.25760841369629

Token 240: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001170225441455841
    2. ' n' → logprob: -6.7511701583862305
    3. '	n' → logprob: -18.626171112060547
    4. '   ' → logprob: -20.626171112060547
    5. ' ' → logprob: -21.376171112060547
    6. '(n' → logprob: -21.751171112060547
    7. '_n' → logprob: -21.876171112060547
    8. ')n' → logprob: -22.251171112060547
    9. '       ' → logprob: -22.501171112060547
    10. '```' → logprob: -22.751171112060547

Token 241: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.0683535037969705e-05
    2. 'val' → logprob: -11.50001049041748
    3. '_' → logprob: -14.75001049041748
    4. '_VAL' → logprob: -17.625011444091797
    5. 'al' → logprob: -18.000011444091797
    6. '\' → logprob: -18.000011444091797
    7. 'Val' → logprob: -18.375011444091797
    8. '```' → logprob: -18.375011444091797
    9. 'n' → logprob: -18.500011444091797
    10. '_var' → logprob: -18.750011444091797

Token 242: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6117342114448547
    2. ':
' → logprob: -0.8617342114448547
    3. ':return' → logprob: -3.36173415184021
    4. ' or' → logprob: -8.861734390258789
    5. ' :' → logprob: -8.986734390258789
    6. '       ' → logprob: -9.111734390258789
    7. ' :
' → logprob: -9.486734390258789
    8. '   ' → logprob: -11.486734390258789
    9. 'return' → logprob: -11.861734390258789
    10. ' return' → logprob: -12.236734390258789

Token 243: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6606333255767822
    2. ':
' → logprob: -1.4106333255767822
    3. '           ' → logprob: -1.5356333255767822
    4. ':return' → logprob: -4.285633087158203
    5. '       ' → logprob: -4.660633087158203
    6. ' return' → logprob: -8.160633087158203
    7. ' :' → logprob: -8.535633087158203
    8. ' :
' → logprob: -8.785633087158203
    9. '):
' → logprob: -9.410633087158203
    10. 'return' → logprob: -9.535633087158203

Token 244: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.21284492313861847
    2. '0' → logprob: -1.712844967842102
    3. '
' → logprob: -4.7128448486328125
    4. '           ' → logprob: -6.3378448486328125
    5. ' return' → logprob: -7.8378448486328125
    6. '       ' → logprob: -8.587844848632812
    7. '   ' → logprob: -11.087844848632812
    8. ' ' → logprob: -12.212844848632812
    9. ':return' → logprob: -12.462844848632812
    10. '1' → logprob: -12.587844848632812

Token 245: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -21.375017166137695
    4. '۰' → logprob: -22.625017166137695
    5. '  ' → logprob: -23.250017166137695
    6. ' ' → logprob: -23.500017166137695
    7. '```' → logprob: -23.625017166137695
    8. '000' → logprob: -23.625017166137695
    9. '
' → logprob: -23.875017166137695
    10. '０' → logprob: -24.625017166137695

Token 246: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -21.125
    4. '000' → logprob: -21.5
    5. '۰' → logprob: -21.5
    6. '00' → logprob: -22.125
    7. '  ' → logprob: -22.75
    8. '```' → logprob: -22.875
    9. '０' → logprob: -23.375
    10. '
' → logprob: -23.5

Token 247: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027485268656164408
    2. '
' → logprob: -6.002748489379883
    3. ' return' → logprob: -9.002748489379883
    4. '   ' → logprob: -9.877748489379883
    5. '        
' → logprob: -10.127748489379883
    6. '    
' → logprob: -11.252748489379883
    7. ' 
' → logprob: -11.502748489379883
    8. 'return' → logprob: -11.502748489379883
    9. '  
' → logprob: -12.002748489379883
    10. '\n' → logprob: -12.252748489379883

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005745976231992245
    2. '   ' → logprob: -8.000575065612793
    3. ' return' → logprob: -9.250575065612793
    4. '        
' → logprob: -10.000575065612793
    5. '    
' → logprob: -10.875575065612793
    6. ' 
' → logprob: -10.875575065612793
    7. ')' → logprob: -10.875575065612793
    8. '
' → logprob: -11.500575065612793
    9. '<|end|>' → logprob: -12.000575065612793
    10. '           ' → logprob: -12.625575065612793

Token 249: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4750845432281494
    2. 'return' (adapté à ' return') → logprob: -1.2250845432281494
    3. ' return' → logprob: -2.4750845432281494
    4. 'result' → logprob: -9.47508430480957
    5. 'res' → logprob: -9.97508430480957
    6. 'ret' → logprob: -10.10008430480957
    7. 'r' → logprob: -10.35008430480957
    8. '   ' → logprob: -10.97508430480957
    9. 'n' → logprob: -11.22508430480957
    10. ' result' → logprob: -11.47508430480957

Token 250: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7728230953216553
    2. 'self' → logprob: -0.7728230953216553
    3. '(self' → logprob: -2.7728230953216553
    4. ' (' → logprob: -4.272823333740234
    5. '(
' → logprob: -9.897823333740234
    6. '       ' → logprob: -9.897823333740234
    7. '   ' → logprob: -10.147823333740234
    8. '(' → logprob: -11.647823333740234
    9. ' ' → logprob: -12.647823333740234
    10. '	self' → logprob: -13.522823333740234

Token 251: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.0020248775836080313
    2. '.get' → logprob: -6.2520246505737305
    3. '.fac' → logprob: -10.37702465057373
    4. '.' → logprob: -10.37702465057373
    5. '.fact' → logprob: -10.50202465057373
    6. ' .' → logprob: -13.00202465057373
    7. 'factor' → logprob: -13.00202465057373
    8. '.mod' → logprob: -13.37702465057373
    9. '.factory' → logprob: -16.377025604248047
    10. '.fast' → logprob: -17.002025604248047

Token 252: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -1.9361264946837764e-07
    2. '       ' → logprob: -17.625
    3. 'orial' → logprob: -17.75
    4. 'al' → logprob: -17.75
    5. '           ' → logprob: -18.25
    6. 'ional' → logprob: -18.25
    7. 'ialize' → logprob: -18.375
    8. '   ' → logprob: -18.5
    9. 'ialist' → logprob: -18.75
    10. 'IAL' → logprob: -18.875

Token 253: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.2729995988775045e-06
    2. 'list' → logprob: -12.250006675720215
    3. 'List' → logprob: -14.000006675720215
    4. '_system' → logprob: -15.500006675720215
    5. '[self' → logprob: -16.2500057220459
    6. '[' → logprob: -16.2500057220459
    7. 'self' → logprob: -16.8750057220459
    8. '[n' → logprob: -16.8750057220459
    9. 'System' → logprob: -17.5000057220459
    10. 'system' → logprob: -18.2500057220459

Token 254: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.3856492842023727e-06
    2. 'n' → logprob: -13.625000953674316
    3. '[' → logprob: -16.250001907348633
    4. ' [' → logprob: -20.125001907348633
    5. '[
' → logprob: -20.125001907348633
    6. '[k' → logprob: -20.750001907348633
    7. '	n' → logprob: -20.750001907348633
    8. '   ' → logprob: -21.500001907348633
    9. '[m' → logprob: -21.875001907348633
    10. '[N' → logprob: -21.875001907348633

Token 255: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -7.941850526549388e-06
    2. 'val' → logprob: -11.750007629394531
    3. '_VAL' → logprob: -18.50000762939453
    4. 'al' → logprob: -18.75000762939453
    5. 'Val' → logprob: -19.25000762939453
    6. '_value' → logprob: -19.37500762939453
    7. ']' → logprob: -19.37500762939453
    8. '   ' → logprob: -19.50000762939453
    9. 'n' → logprob: -20.00000762939453
    10. '_' → logprob: -20.00000762939453

Token 256: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.796184723294573e-06
    2. '   ' → logprob: -12.625005722045898
    3. ']*' → logprob: -13.000005722045898
    4. ' ]' → logprob: -15.875005722045898
    5. ']
' → logprob: -16.8750057220459
    6. '       ' → logprob: -18.2500057220459
    7. '
' → logprob: -18.6250057220459
    8. ' ' → logprob: -18.7500057220459
    9. '"]' → logprob: -19.0000057220459
    10. '    ' → logprob: -19.6250057220459

Token 257: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.388395220041275
    2. '*' → logprob: -1.1383951902389526
    3. '   ' → logprob: -7.138395309448242
    4. '*self' → logprob: -7.263395309448242
    5. '*object' → logprob: -11.763395309448242
    6. ' ' → logprob: -12.638395309448242
    7. '       ' → logprob: -12.638395309448242
    8. '    ' → logprob: -12.763395309448242
    9. '*k' → logprob: -13.013395309448242
    10. '  ' → logprob: -13.013395309448242

Token 258: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00434739887714386
    2. ' self' → logprob: -5.754347324371338
    3. '(self' → logprob: -6.754347324371338
    4. '<|end|>' → logprob: -13.879347801208496
    5. '[self' → logprob: -14.129347801208496
    6. '	self' → logprob: -15.129347801208496
    7. ' (' → logprob: -15.129347801208496
    8. '       ' → logprob: -15.254347801208496
    9. '(' → logprob: -15.629347801208496
    10. '\
' → logprob: -15.879347801208496

Token 259: '.inv' (ID: 83561)
  Prédit: '.inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inv' → logprob: -0.03866467624902725
    2. '.get' → logprob: -3.2886645793914795
    3. 'inv' → logprob: -7.413664817810059
    4. 'get' → logprob: -10.913664817810059
    5. '.' → logprob: -14.163664817810059
    6. '.in' → logprob: -15.663664817810059
    7. '```' → logprob: -15.663664817810059
    8. '.factor' → logprob: -15.663664817810059
    9. ' inv' → logprob: -15.913664817810059
    10. '_inv' → logprob: -15.913664817810059

Token 260: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -5.512236498361744e-07
    2. 'factor' → logprob: -14.500000953674316
    3. '```' → logprob: -18.125
    4. '_FACTOR' → logprob: -19.25
    5. ' factorial' → logprob: -20.125
    6. '_fact' → logprob: -20.25
    7. '_factory' → logprob: -20.375
    8. '
' → logprob: -20.625
    9. '   ' → logprob: -20.625
    10. '_fac' → logprob: -20.75

Token 261: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.575952410697937
    2. 'al' → logprob: -0.825952410697937
    3. 'cial' → logprob: -12.825952529907227
    4. '_list' → logprob: -12.950952529907227
    5. 'alist' → logprob: -13.825952529907227
    6. 'ator' → logprob: -13.825952529907227
    7. 'omial' → logprob: -14.075952529907227
    8. 'orial' → logprob: -14.325952529907227
    9. 'atorial' → logprob: -14.325952529907227
    10. '_factor' → logprob: -14.700952529907227

Token 262: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.0280383548888494e-06
    2. 'list' → logprob: -13.875000953674316
    3. '[_' → logprob: -17.625001907348633
    4. '[' → logprob: -18.000001907348633
    5. 'List' → logprob: -18.750001907348633
    6. 'self' → logprob: -18.875001907348633
    7. 'factor' → logprob: -19.375001907348633
    8. '_factor' → logprob: -19.625001907348633
    9. 's' → logprob: -19.875001907348633
    10. '[self' → logprob: -20.125001907348633

Token 263: '[n' (ID: 15433)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0001093841710826382
    2. '[n' → logprob: -9.125109672546387
    3. 'k' → logprob: -15.625109672546387
    4. '   ' → logprob: -16.50010871887207
    5. '
' → logprob: -16.75010871887207
    6. '[' → logprob: -16.75010871887207
    7. ' [' → logprob: -17.75010871887207
    8. '

' → logprob: -18.00010871887207
    9. '       ' → logprob: -18.37510871887207
    10. '```' → logprob: -18.62510871887207

Token 264: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0031808018684387207
    2. 'val' → logprob: -5.753180980682373
    3. '_VAL' → logprob: -14.003180503845215
    4. 'Val' → logprob: -14.128180503845215
    5. '_value' → logprob: -15.253180503845215
    6. '[val' → logprob: -15.378180503845215
    7. '_idx' → logprob: -15.503180503845215
    8. '       ' → logprob: -16.25318145751953
    9. '	val' → logprob: -16.50318145751953
    10. '-val' → logprob: -16.62818145751953

Token 265: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.029674123972654343
    2. ' -' → logprob: -4.029674053192139
    3. '[k' → logprob: -4.654674053192139
    4. ']' → logprob: -6.654674053192139
    5. '-' → logprob: -8.029674530029297
    6. '   ' → logprob: -8.654674530029297
    7. '[' → logprob: -9.279674530029297
    8. 'k' → logprob: -11.154674530029297
    9. '[n' → logprob: -11.529674530029297
    10. '-n' → logprob: -12.029674530029297

Token 266: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -8.061054359131958e-06
    2. ' k' → logprob: -11.750007629394531
    3. '<|end|>' → logprob: -16.50000762939453
    4. '{k' → logprob: -19.12500762939453
    5. '	k' → logprob: -19.12500762939453
    6. '   ' → logprob: -19.75000762939453
    7. 'kx' → logprob: -19.75000762939453
    8. ' к' → logprob: -19.87500762939453
    9. '           ' → logprob: -20.50000762939453
    10. '*k' → logprob: -20.75000762939453

Token 267: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.0445127372804563e-05
    2. 'val' → logprob: -11.87501049041748
    3. '_k' → logprob: -13.62501049041748
    4. ']' → logprob: -14.12501049041748
    5. ']_' → logprob: -14.75001049041748
    6. '   ' → logprob: -15.12501049041748
    7. 'k' → logprob: -15.75001049041748
    8. '```' → logprob: -16.000009536743164
    9. '_idx' → logprob: -16.250009536743164
    10. 'Val' → logprob: -16.625009536743164

Token 268: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004156568902544677
    2. ' *' → logprob: -8.500415802001953
    3. '*' → logprob: -8.875415802001953
    4. '%' → logprob: -10.250415802001953
    5. ']%' → logprob: -11.250415802001953
    6. ' ]' → logprob: -11.625415802001953
    7. ']*' → logprob: -11.750415802001953
    8. '   ' → logprob: -12.625415802001953
    9. ')' → logprob: -13.750415802001953
    10. '']' → logprob: -14.625415802001953

Token 269: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.001044124481268227
    2. '*' → logprob: -6.876044273376465
    3. '   ' → logprob: -12.626044273376465
    4. '%' → logprob: -13.126044273376465
    5. ' ' → logprob: -13.126044273376465
    6. ' %' → logprob: -13.626044273376465
    7. ' ' → logprob: -14.001044273376465
    8. '       ' → logprob: -14.751044273376465
    9. 'import' → logprob: -15.001044273376465
    10. '	' → logprob: -15.126044273376465

Token 270: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759534239768982
    2. ' self' → logprob: -0.8259534239768982
    3. '(self' → logprob: -12.075953483581543
    4. '[self' → logprob: -12.950953483581543
    5. '       ' → logprob: -13.200953483581543
    6. '	self' → logprob: -13.325953483581543
    7. '   ' → logprob: -14.575953483581543
    8. '*self' → logprob: -14.700953483581543
    9. '```' → logprob: -14.825953483581543
    10. '           ' → logprob: -15.200953483581543

Token 271: '.inv' (ID: 83561)
  Prédit: '.inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inv' → logprob: -0.0005171707598492503
    2. '.get' → logprob: -8.125516891479492
    3. 'inv' → logprob: -8.500516891479492
    4. '.factor' → logprob: -11.125516891479492
    5. '.' → logprob: -13.375516891479492
    6. ' .' → logprob: -14.500516891479492
    7. 'get' → logprob: -14.750516891479492
    8. '_inv' → logprob: -15.750516891479492
    9. '.mod' → logprob: -16.375516891479492
    10. 'factor' → logprob: -16.500516891479492

Token 272: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -6.704273118884885e-07
    2. 'factor' → logprob: -14.875000953674316
    3. '_fact' → logprob: -16.5
    4. '_FACTOR' → logprob: -17.125
    5. '```' → logprob: -17.25
    6. '_fac' → logprob: -18.125
    7. 'Factor' → logprob: -19.0
    8. '_constant' → logprob: -19.25
    9. ' factorial' → logprob: -19.375
    10. '_factory' → logprob: -19.5

Token 273: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.0005527943139895797
    2. 'al' → logprob: -8.000553131103516
    3. 'orial' → logprob: -9.000553131103516
    4. 'actor' → logprob: -10.625553131103516
    5. 'atorial' → logprob: -10.875553131103516
    6. '_list' → logprob: -10.875553131103516
    7. 'cial' → logprob: -11.625553131103516
    8. '_' → logprob: -12.625553131103516
    9. 'omial' → logprob: -13.125553131103516
    10. '_factor' → logprob: -13.375553131103516

Token 274: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.512236498361744e-07
    2. 'list' → logprob: -15.000000953674316
    3. '_factor' → logprob: -16.75
    4. 'ist' → logprob: -17.375
    5. '_lists' → logprob: -17.625
    6. 'List' → logprob: -17.625
    7. 'factor' → logprob: -17.75
    8. 'alist' → logprob: -17.75
    9. '_LIST' → logprob: -19.0
    10. '[_' → logprob: -19.5

Token 275: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.25
    3. 'k' → logprob: -16.5
    4. ' [' → logprob: -17.5
    5. '   ' → logprob: -18.0
    6. '[
' → logprob: -18.5
    7. '[n' → logprob: -18.5
    8. '```' → logprob: -18.625
    9. ' ' → logprob: -19.125
    10. '       ' → logprob: -20.125

Token 276: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.9361264946837764e-07
    2. 'val' → logprob: -15.875
    3. '_VAL' → logprob: -17.625
    4. ' _' → logprob: -18.125
    5. 'Val' → logprob: -18.75
    6. '_k' → logprob: -19.125
    7. '_const' → logprob: -19.25
    8. '```' → logprob: -19.5
    9. '_value' → logprob: -19.875
    10. '_' → logprob: -20.125

Token 277: ']' (ID: 60)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.161892369389534
    2. '%' → logprob: -1.9118924140930176
    3. ']' → logprob: -6.536892414093018
    4. ')' → logprob: -8.78689193725586
    5. '%n' → logprob: -10.41189193725586
    6. ']%' → logprob: -11.03689193725586
    7. '<|end|>' → logprob: -12.41189193725586
    8. ' ' → logprob: -12.41189193725586
    9. ')%' → logprob: -12.91189193725586
    10. ' %=' → logprob: -13.16189193725586

Token 278: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1269291490316391
    2. '%' → logprob: -2.1269290447235107
    3. '%n' → logprob: -14.25192928314209
    4. ' ' → logprob: -15.50192928314209
    5. ' %=' → logprob: -16.501928329467773
    6. ')' → logprob: -17.251928329467773
    7. '   ' → logprob: -17.376928329467773
    8. ' %
' → logprob: -17.376928329467773
    9. '%c' → logprob: -17.876928329467773
    10. ' ' → logprob: -17.876928329467773

Token 279: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.575939953327179
    2. ' self' → logprob: -0.825939953327179
    3. '(self' → logprob: -14.825940132141113
    4. ' MOD' → logprob: -16.700939178466797
    5. 'MOD' → logprob: -17.200939178466797
    6. '	self' → logprob: -17.200939178466797
    7. ' ' → logprob: -17.575939178466797
    8. '       ' → logprob: -17.700939178466797
    9. '   ' → logprob: -18.575939178466797
    10. 'mod' → logprob: -19.575939178466797

Token 280: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -3.128163257315464e-07
    2. '.' → logprob: -15.875
    3. ' .' → logprob: -16.0
    4. '.MOD' → logprob: -18.25
    5. 'mod' → logprob: -19.5
    6. 'MOD' → logprob: -19.625
    7. '	mod' → logprob: -20.5
    8. '.mods' → logprob: -20.75
    9. '.Mod' → logprob: -20.875
    10. '_MOD' → logprob: -21.25

Token 281: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00797839555889368
    2. '_const' → logprob: -4.882978439331055
    3. '_CONST' → logprob: -9.132978439331055
    4. '_VALUE' → logprob: -9.507978439331055
    5. '_factor' → logprob: -9.632978439331055
    6. '_val' → logprob: -10.007978439331055
    7. '_constant' → logprob: -10.382978439331055
    8. 'const' → logprob: -12.007978439331055
    9. '       ' → logprob: -12.382978439331055
    10. 'CONST' → logprob: -12.507978439331055

Token 282: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 283: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 284: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 285: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.30511796474456787
    2. ' perm' → logprob: -1.6801179647445679
    3. 'pow' → logprob: -2.9301180839538574
    4. ' factorial' → logprob: -5.555118083953857
    5. ' get' → logprob: -6.055118083953857
    6. 'factor' → logprob: -6.180118083953857
    7. 'p' → logprob: -6.555118083953857
    8. 'n' → logprob: -6.555118083953857
    9. ' pow' → logprob: -6.555118083953857
    10. 'get' → logprob: -6.555118083953857

Token 286: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02408827468752861
    2. 'ute' → logprob: -4.649088382720947
    3. 'utation' → logprob: -5.149088382720947
    4. 'ut' → logprob: -5.524088382720947
    5. '(' → logprob: -5.899088382720947
    6. 'utations' → logprob: -6.774088382720947
    7. 'utate' → logprob: -7.899088382720947
    8. '   ' → logprob: -9.024087905883789
    9. '(
' → logprob: -11.024087905883789
    10. '       ' → logprob: -12.399087905883789

Token 287: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.24892012774944305
    2. ',' → logprob: -1.9989200830459595
    3. 'self' → logprob: -2.498920202255249
    4. ',self' → logprob: -6.62391996383667
    5. ' self' → logprob: -7.24891996383667
    6. ')' → logprob: -8.123920440673828
    7. '   ' → logprob: -9.123920440673828
    8. ' ,' → logprob: -9.623920440673828
    9. ')(' → logprob: -9.623920440673828
    10. '(' → logprob: -10.373920440673828

Token 288: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2731441855430603
    2. ' self' → logprob: -2.023144245147705
    3. 'n' → logprob: -2.398144245147705
    4. ' n' → logprob: -4.148144245147705
    5. '   ' → logprob: -9.398143768310547
    6. '       ' → logprob: -12.148143768310547
    7. ' ' → logprob: -12.273143768310547
    8. '	self' → logprob: -14.148143768310547
    9. '(self' → logprob: -14.273143768310547
    10. '  ' → logprob: -14.273143768310547

Token 289: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -7.107425062713446e-06
    2. ',' → logprob: -12.875006675720215
    3. ',val' → logprob: -13.750006675720215
    4. 'val' → logprob: -14.125006675720215
    5. '_,' → logprob: -14.250006675720215
    6. ',_' → logprob: -14.250006675720215
    7. '_value' → logprob: -14.875006675720215
    8. '_' → logprob: -15.375006675720215
    9. '_VAL' → logprob: -15.625006675720215
    10. ' _' → logprob: -16.00000762939453

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8193366486229934e-05
    2. ' ,' → logprob: -11.250018119812012
    3. ',n' → logprob: -13.250018119812012
    4. ',k' → logprob: -13.250018119812012
    5. ',self' → logprob: -13.875018119812012
    6. 'self' → logprob: -14.500018119812012
    7. ',val' → logprob: -16.375019073486328
    8. ' self' → logprob: -17.750019073486328
    9. ',int' → logprob: -17.875019073486328
    10. ',
' → logprob: -18.125019073486328

Token 291: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.006716674659401178
    2. ' k' → logprob: -5.006716728210449
    3. 'r' → logprob: -13.88171672821045
    4. ' ' → logprob: -16.256715774536133
    5. ' r' → logprob: -16.256715774536133
    6. '   ' → logprob: -16.381715774536133
    7. '	k' → logprob: -18.006715774536133
    8. '  ' → logprob: -18.631715774536133
    9. '    ' → logprob: -19.256715774536133
    10. 'n' → logprob: -19.381715774536133

Token 292: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -6.630610641877865e-06
    2. 'val' → logprob: -12.250006675720215
    3. '_VAL' → logprob: -14.250006675720215
    4. '_' → logprob: -14.500006675720215
    5. 'Val' → logprob: -15.375006675720215
    6. ')' → logprob: -15.500006675720215
    7. '):' → logprob: -16.0000057220459
    8. ' _' → logprob: -17.8750057220459
    9. '_value' → logprob: -17.8750057220459
    10. '_vals' → logprob: -17.8750057220459

Token 293: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -9.579495235811919e-05
    2. '):
' → logprob: -9.37509536743164
    3. ' ):' → logprob: -12.12509536743164
    4. ')' → logprob: -13.00009536743164
    5. ':' → logprob: -13.62509536743164
    6. ',' → logprob: -14.00009536743164
    7. '   ' → logprob: -14.12509536743164
    8. '):
' → logprob: -15.37509536743164
    9. '       ' → logprob: -16.25009536743164
    10. '}:' → logprob: -16.75009536743164

Token 294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005616958253085613
    2. ' if' → logprob: -5.880617141723633
    3. 'self' → logprob: -6.630617141723633
    4. 'if' → logprob: -6.630617141723633
    5. ' self' → logprob: -9.380617141723633
    6. '(self' → logprob: -10.255617141723633
    7. 'n' → logprob: -11.005617141723633
    8. 'return' → logprob: -11.255617141723633
    9. '   ' → logprob: -12.130617141723633
    10. ',' → logprob: -12.630617141723633

Token 295: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003197204554453492
    2. ' if' → logprob: -6.003197193145752
    3. '       ' → logprob: -7.253197193145752
    4. 'return' → logprob: -11.25319766998291
    5. '   ' → logprob: -14.87819766998291
    6. '```' → logprob: -17.128196716308594
    7. '
' → logprob: -17.878196716308594
    8. ' return' → logprob: -18.253196716308594
    9. '	if' → logprob: -19.128196716308594
    10. '           ' → logprob: -19.378196716308594

Token 296: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.12716317176818848
    2. 'not' → logprob: -2.1271631717681885
    3. 'k' → logprob: -8.50216293334961
    4. ' k' → logprob: -10.50216293334961
    5. '	not' → logprob: -12.87716293334961
    6. 'n' → logprob: -14.37716293334961
    7. '   ' → logprob: -15.00216293334961
    8. '(not' → logprob: -15.37716293334961
    9. ' ' → logprob: -15.62716293334961
    10. '```' → logprob: -16.12716293334961

Token 297: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02324594371020794
    2. '0' → logprob: -3.7732460498809814
    3. ' ' → logprob: -15.648245811462402
    4. ' (' → logprob: -15.773245811462402
    5. '(' → logprob: -16.14824676513672
    6. ' k' → logprob: -17.64824676513672
    7. 'k' → logprob: -17.77324676513672
    8. '  ' → logprob: -18.02324676513672
    9. '1' → logprob: -19.02324676513672
    10. '
' → logprob: -19.39824676513672

Token 298: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011048289015889168
    2. ' ' → logprob: -4.511048316955566
    3. 'k' → logprob: -15.386048316955566
    4. '(' → logprob: -16.63604736328125
    5. ' k' → logprob: -17.26104736328125
    6. ' (' → logprob: -18.13604736328125
    7. '   ' → logprob: -18.88604736328125
    8. '  ' → logprob: -18.88604736328125
    9. '1' → logprob: -19.19854736328125
    10. '
' → logprob: -19.63604736328125

Token 299: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03806788846850395
    2. '<=' → logprob: -3.2880678176879883
    3. ' <' → logprob: -10.663067817687988
    4. '<' → logprob: -13.038067817687988
    5. ' ' → logprob: -14.288067817687988
    6. ' ≤' → logprob: -16.413068771362305
    7. ' >=' → logprob: -17.163068771362305
    8. ' ' → logprob: -17.413068771362305
    9. '_' → logprob: -18.288068771362305
    10. '>=' → logprob: -18.413068771362305

Token 300: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.023245712742209435
    2. ' k' → logprob: -3.7732458114624023
    3. '	k' → logprob: -16.398244857788086
    4. ' ' → logprob: -16.898244857788086
    5. '           ' → logprob: -17.773244857788086
    6. '   ' → logprob: -18.023244857788086
    7. '  ' → logprob: -19.148244857788086
    8. '       ' → logprob: -19.273244857788086
    9. ' к' → logprob: -19.273244857788086
    10. 'n' → logprob: -19.398244857788086

Token 301: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -6.837811088189483e-05
    2. 'val' → logprob: -9.625068664550781
    3. '<=' → logprob: -14.750068664550781
    4. '_VAL' → logprob: -14.875068664550781
    5. '<' → logprob: -15.000068664550781
    6. 'Val' → logprob: -15.125068664550781
    7. '_' → logprob: -15.625068664550781
    8. '_value' → logprob: -15.625068664550781
    9. '   ' → logprob: -16.37506866455078
    10. ' _' → logprob: -17.12506866455078

Token 302: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16022443771362305
    2. '<=' → logprob: -1.910224437713623
    3. '<' → logprob: -16.78522491455078
    4. ' ' → logprob: -16.78522491455078
    5. ' <' → logprob: -17.16022491455078
    6. ' ' → logprob: -17.41022491455078
    7. ')<=' → logprob: -17.41022491455078
    8. ']<=' → logprob: -17.53522491455078
    9. ' <=",' → logprob: -18.16022491455078
    10. '```' → logprob: -18.16022491455078

Token 303: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931471824645996
    2. ' n' → logprob: -0.6931471824645996
    3. '	n' → logprob: -17.568147659301758
    4. '_n' → logprob: -18.318147659301758
    5. ' ' → logprob: -19.193147659301758
    6. ' н' → logprob: -19.443147659301758
    7. '   ' → logprob: -19.443147659301758
    8. '(n' → logprob: -19.568147659301758
    9. 'user' → logprob: -19.693147659301758
    10. '$n' → logprob: -20.193147659301758

Token 304: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -2.4868770196917467e-05
    2. 'val' → logprob: -10.625024795532227
    3. 'Val' → logprob: -14.875024795532227
    4. '_VAL' → logprob: -16.250024795532227
    5. '_' → logprob: -17.125024795532227
    6. '```' → logprob: -17.750024795532227
    7. '_value' → logprob: -18.500024795532227
    8. 'n' → logprob: -18.875024795532227
    9. '_var' → logprob: -18.875024795532227
    10. '[val' → logprob: -19.375024795532227

Token 305: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05497764050960541
    2. ':' → logprob: -2.9299776554107666
    3. '       ' → logprob: -9.554977416992188
    4. ':
' → logprob: -11.429977416992188
    5. ':return' → logprob: -11.929977416992188
    6. ':

' → logprob: -12.679977416992188
    7. '):
' → logprob: -12.929977416992188
    8. ' :
' → logprob: -14.179977416992188
    9. '():
' → logprob: -15.429977416992188
    10. '           ' → logprob: -15.554977416992188

Token 306: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07956191152334213
    2. 'return' → logprob: -2.579561948776245
    3. ' return' → logprob: -7.329561710357666
    4. '   ' → logprob: -11.454562187194824
    5. '           ' → logprob: -12.454562187194824
    6. '
' → logprob: -13.954562187194824
    7. '	return' → logprob: -15.079562187194824
    8. ':return' → logprob: -16.079561233520508
    9. '```' → logprob: -16.454561233520508
    10. '      ' → logprob: -16.704561233520508

Token 307: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05288679152727127
    2. '       ' → logprob: -3.552886724472046
    3. ' return' → logprob: -3.802886724472046
    4. '           ' → logprob: -7.677886962890625
    5. '   ' → logprob: -9.802886962890625
    6. '	return' → logprob: -10.552886962890625
    7. '
' → logprob: -11.302886962890625
    8. ' ' → logprob: -13.177886962890625
    9. '{return' → logprob: -13.177886962890625
    10. ')return' → logprob: -13.927886962890625

Token 308: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22541318833827972
    2. ' ' → logprob: -1.600413203239441
    3. '   ' → logprob: -15.47541332244873
    4. '       ' → logprob: -15.72541332244873
    5. ' ' → logprob: -16.225412368774414
    6. '  ' → logprob: -17.100412368774414
    7. '	' → logprob: -17.975412368774414
    8. '
' → logprob: -18.100412368774414
    9. '۰' → logprob: -18.100412368774414
    10. '     ' → logprob: -18.225412368774414

Token 309: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -19.00001335144043
    4. '000' → logprob: -20.00001335144043
    5. '00' → logprob: -20.87501335144043
    6. '       ' → logprob: -20.87501335144043
    7. '۰' → logprob: -20.87501335144043
    8. '
' → logprob: -21.12501335144043
    9. '  ' → logprob: -21.50001335144043
    10. '０' → logprob: -22.06251335144043

Token 310: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07894840091466904
    2. '
' → logprob: -2.578948497772217
    3. 'return' → logprob: -11.453948020935059
    4. '        
' → logprob: -11.453948020935059
    5. '
' → logprob: -11.703948020935059
    6. ' return' → logprob: -11.953948020935059
    7. '  
' → logprob: -11.953948020935059
    8. '   ' → logprob: -11.953948020935059
    9. ' 
' → logprob: -12.703948020935059
    10. '    
' → logprob: -12.953948020935059

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002916618948802352
    2. 'return' → logprob: -6.0029168128967285
    3. ' return' → logprob: -7.7529168128967285
    4. '   ' → logprob: -11.75291633605957
    5. '
' → logprob: -13.00291633605957
    6. '```' → logprob: -14.50291633605957
    7. '        
' → logprob: -15.25291633605957
    8. '	return' → logprob: -15.62791633605957
    9. '           ' → logprob: -15.75291633605957
    10. '      ' → logprob: -16.12791633605957

Token 312: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008729918859899044
    2. '       ' → logprob: -4.758729934692383
    3. ' return' → logprob: -9.508729934692383
    4. '   ' → logprob: -10.133729934692383
    5. '	return' → logprob: -14.008729934692383
    6. '
' → logprob: -14.383729934692383
    7. 'ret' → logprob: -17.633729934692383
    8. '     ' → logprob: -17.633729934692383
    9. '```' → logprob: -18.008729934692383
    10. '        
' → logprob: -18.758729934692383

Token 313: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16038081049919128
    2. ' self' → logprob: -1.9103808403015137
    3. '(self' → logprob: -8.785380363464355
    4. '   ' → logprob: -13.285380363464355
    5. '       ' → logprob: -13.910380363464355
    6. ' (' → logprob: -14.160380363464355
    7. '	self' → logprob: -15.160380363464355
    8. ' ' → logprob: -16.285381317138672
    9. '[self' → logprob: -16.785381317138672
    10. '(' → logprob: -17.785381317138672

Token 314: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -5.5577775128767826e-06
    2. '.fac' → logprob: -13.125005722045898
    3. ' .' → logprob: -13.625005722045898
    4. 'factor' → logprob: -13.875005722045898
    5. '.fact' → logprob: -14.125005722045898
    6. '.' → logprob: -14.500005722045898
    7. '.get' → logprob: -17.2500057220459
    8. '.
' → logprob: -19.0000057220459
    9. '.mod' → logprob: -19.0000057220459
    10. '.factory' → logprob: -19.3750057220459

Token 315: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.12695835530757904
    2. 'al' → logprob: -2.1269583702087402
    3. '_list' → logprob: -10.626957893371582
    4. 'alist' → logprob: -12.501957893371582
    5. '_al' → logprob: -14.876957893371582
    6. 'ialist' → logprob: -15.126957893371582
    7. '       ' → logprob: -15.251957893371582
    8. '           ' → logprob: -15.251957893371582
    9. '_factor' → logprob: -15.376957893371582
    10. 'orial' → logprob: -15.626957893371582

Token 316: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: 0.0
    2. '[' → logprob: -18.125
    3. '[_' → logprob: -18.125
    4. 'list' → logprob: -18.375
    5. 'List' → logprob: -18.625
    6. 's' → logprob: -19.0
    7. '_lists' → logprob: -19.25
    8. '[self' → logprob: -21.25
    9. '```' → logprob: -21.25
    10. '_LIST' → logprob: -21.25

Token 317: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.9361264946837764e-07
    2. 'n' → logprob: -16.75
    3. '[' → logprob: -18.125
    4. '[
' → logprob: -18.25
    5. ' [' → logprob: -19.125
    6. '
' → logprob: -19.75
    7. '(n' → logprob: -19.875
    8. '   ' → logprob: -21.625
    9. '```' → logprob: -21.75
    10. '<n' → logprob: -22.125

Token 318: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0003815756645053625
    2. 'val' → logprob: -7.8753814697265625
    3. 'Val' → logprob: -13.875381469726562
    4. '_VAL' → logprob: -15.250381469726562
    5. '[val' → logprob: -15.500381469726562
    6. '_value' → logprob: -16.500381469726562
    7. '_idx' → logprob: -17.250381469726562
    8. '```' → logprob: -18.125381469726562
    9. '   ' → logprob: -18.375381469726562
    10. '	val' → logprob: -18.375381469726562

Token 319: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.5776860184123507e-06
    2. ' ]' → logprob: -13.50000286102295
    3. '   ' → logprob: -13.87500286102295
    4. ']*' → logprob: -16.375001907348633
    5. ' ' → logprob: -17.125001907348633
    6. ']
' → logprob: -18.625001907348633
    7. '       ' → logprob: -18.875001907348633
    8. '[n' → logprob: -19.000001907348633
    9. '}' → logprob: -19.250001907348633
    10. '[' → logprob: -19.375001907348633

Token 320: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.043096136301755905
    2. '*' → logprob: -3.1680960655212402
    3. '*self' → logprob: -9.918096542358398
    4. '   ' → logprob: -10.418096542358398
    5. ' ' → logprob: -11.793096542358398
    6. 'self' → logprob: -12.793096542358398
    7. ' ' → logprob: -13.418096542358398
    8. '       ' → logprob: -13.918096542358398
    9. ' self' → logprob: -14.043096542358398
    10. '[self' → logprob: -14.293096542358398

Token 321: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1002747043967247
    2. ' self' → logprob: -2.3502748012542725
    3. '<|end|>' → logprob: -10.100275039672852
    4. '(self' → logprob: -11.225275039672852
    5. '[self' → logprob: -11.725275039672852
    6. '	self' → logprob: -13.100275039672852
    7. ' ' → logprob: -13.600275039672852
    8. '       ' → logprob: -14.475275039672852
    9. '*self' → logprob: -14.600275039672852
    10. '   ' → logprob: -15.225275039672852

Token 322: '.inv' (ID: 83561)
  Prédit: '.inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inv' → logprob: -0.031229868531227112
    2. '.get' → logprob: -3.5312299728393555
    3. 'inv' → logprob: -6.5312299728393555
    4. 'get' → logprob: -11.156229972839355
    5. '_inv' → logprob: -12.781229972839355
    6. '.' → logprob: -14.031229972839355
    7. ' inv' → logprob: -14.156229972839355
    8. 'self' → logprob: -14.281229972839355
    9. ' .' → logprob: -15.406229972839355
    10. 'INV' → logprob: -15.656229972839355

Token 323: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: 0.0
    2. 'factor' → logprob: -17.25
    3. '```' → logprob: -18.5
    4. '\' → logprob: -19.75
    5. '_fact' → logprob: -20.0
    6. '_fac' → logprob: -20.375
    7. '"_' → logprob: -20.875
    8. ' factorial' → logprob: -21.25
    9. '_FACTOR' → logprob: -21.375
    10. '_factory' → logprob: -21.375

Token 324: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.2275988906621933
    2. 'al' → logprob: -1.7275989055633545
    3. '_list' → logprob: -3.7275989055633545
    4. 'cial' → logprob: -6.852598667144775
    5. 'atorial' → logprob: -7.977598667144775
    6. 'orial' → logprob: -8.852599143981934
    7. 'alist' → logprob: -9.727599143981934
    8. 'ator' → logprob: -10.227599143981934
    9. 'cal' → logprob: -10.352599143981934
    10. '_factor' → logprob: -10.477599143981934

Token 325: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.7432603272027336e-06
    2. 'list' → logprob: -13.750001907348633
    3. '_factor' → logprob: -15.500001907348633
    4. 'factor' → logprob: -15.750001907348633
    5. 'self' → logprob: -16.625001907348633
    6. '[_' → logprob: -18.125001907348633
    7. '_lists' → logprob: -18.125001907348633
    8. '[self' → logprob: -18.500001907348633
    9. 'val' → logprob: -19.125001907348633
    10. 'List' → logprob: -19.625001907348633

Token 326: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.750000953674316
    3. 'n' → logprob: -16.375
    4. ' [' → logprob: -17.5
    5. '[
' → logprob: -18.25
    6. '[self' → logprob: -20.625
    7. '   ' → logprob: -20.625
    8. '[num' → logprob: -20.75
    9. '
' → logprob: -20.875
    10. '\[' → logprob: -21.125

Token 327: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0001097417771234177
    2. 'val' → logprob: -9.125109672546387
    3. 'Val' → logprob: -14.375109672546387
    4. '_VAL' → logprob: -16.750110626220703
    5. '_idx' → logprob: -17.625110626220703
    6. '[val' → logprob: -17.875110626220703
    7. 'n' → logprob: -18.375110626220703
    8. '_factor' → logprob: -18.625110626220703
    9. 'v' → logprob: -18.875110626220703
    10. '```' → logprob: -18.875110626220703

Token 328: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07494029402732849
    2. ' -' → logprob: -2.8249402046203613
    3. '[n' → logprob: -4.824940204620361
    4. '-k' → logprob: -5.574940204620361
    5. '[-' → logprob: -7.449940204620361
    6. '[' → logprob: -8.44994068145752
    7. '-n' → logprob: -8.82494068145752
    8. '   ' → logprob: -9.82494068145752
    9. '[k' → logprob: -9.94994068145752
    10. 'n' → logprob: -11.19994068145752

Token 329: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0011703446507453918
    2. ' k' → logprob: -6.7511701583862305
    3. '	k' → logprob: -16.376171112060547
    4. '           ' → logprob: -19.251171112060547
    5. '{k' → logprob: -19.501171112060547
    6. '_k' → logprob: -20.251171112060547
    7. ' к' → logprob: -20.251171112060547
    8. ',k' → logprob: -21.126171112060547
    9. '       ' → logprob: -21.126171112060547
    10. '   ' → logprob: -21.251171112060547

Token 330: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0001439459010725841
    2. 'val' → logprob: -9.125144004821777
    3. '_k' → logprob: -11.000144004821777
    4. 'k' → logprob: -11.000144004821777
    5. 'Val' → logprob: -15.125144004821777
    6. '[val' → logprob: -15.125144004821777
    7. '_VAL' → logprob: -15.375144004821777
    8. '```' → logprob: -15.750144004821777
    9. '[k' → logprob: -16.00014305114746
    10. '_' → logprob: -16.25014305114746

Token 331: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004599823441822082
    2. ']%' → logprob: -8.000459671020508
    3. '%' → logprob: -9.125459671020508
    4. ' ]' → logprob: -11.250459671020508
    5. ' %' → logprob: -14.625459671020508
    6. ')' → logprob: -14.875459671020508
    7. '}' → logprob: -14.875459671020508
    8. '[' → logprob: -15.000459671020508
    9. '```' → logprob: -15.250459671020508
    10. 's' → logprob: -15.750459671020508

Token 332: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.20142367482185364
    2. ' %' → logprob: -1.7014236450195312
    3. '%n' → logprob: -12.826423645019531
    4. '[' → logprob: -13.076423645019531
    5. ' ' → logprob: -13.326423645019531
    6. ' ' → logprob: -13.826423645019531
    7. '       ' → logprob: -14.326423645019531
    8. '[n' → logprob: -15.326423645019531
    9. '%s' → logprob: -15.451423645019531
    10. '[k' → logprob: -15.451423645019531

Token 333: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889176905155182
    2. ' self' → logprob: -2.5788917541503906
    3. '       ' → logprob: -13.32889175415039
    4. '   ' → logprob: -15.70389175415039
    5. '(self' → logprob: -16.07889175415039
    6. '	self' → logprob: -16.82889175415039
    7. ' ' → logprob: -18.07889175415039
    8. '           ' → logprob: -18.70389175415039
    9. ' ' → logprob: -18.95389175415039
    10. '[self' → logprob: -19.45389175415039

Token 334: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.00012451570364646614
    2. 'mod' → logprob: -9.00012493133545
    3. ' .' → logprob: -14.62512493133545
    4. '_mod' → logprob: -15.50012493133545
    5. '.' → logprob: -15.87512493133545
    6. '_.' → logprob: -16.500123977661133
    7. '	mod' → logprob: -16.625123977661133
    8. ' mod' → logprob: -16.875123977661133
    9. ' ' → logprob: -17.875123977661133
    10. 'MOD' → logprob: -18.125123977661133

Token 335: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.3947240710258484
    2. '_val' → logprob: -1.5197241306304932
    3. '_const' → logprob: -2.644724130630493
    4. '_CONST' → logprob: -4.519723892211914
    5. 'val' → logprob: -4.894723892211914
    6. '244' → logprob: -5.019723892211914
    7. '_VALUE' → logprob: -6.019723892211914
    8. 'CONST' → logprob: -6.644723892211914
    9. 'const' → logprob: -6.894723892211914
    10. 'VAL' → logprob: -7.019723892211914

Token 336: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 337: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 338: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 339: ' multi' (ID: 12151)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.2281353771686554
    2. 'mod' → logprob: -2.603135347366333
    3. 'mult' → logprob: -3.478135347366333
    4. 'mul' → logprob: -3.853135347366333
    5. 'inv' → logprob: -3.853135347366333
    6. 'factor' → logprob: -4.228135585784912
    7. 'inverse' → logprob: -4.353135585784912
    8. 'get' → logprob: -5.103135585784912
    9. ' pow' → logprob: -5.103135585784912
    10. ' factorial' → logprob: -5.853135585784912

Token 340: '_comb' (ID: 105956)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.24494755268096924
    2. '_comb' → logprob: -1.9949475526809692
    3. 'combine' → logprob: -3.1199474334716797
    4. 'p' → logprob: -4.36994743347168
    5. 'plic' → logprob: -5.11994743347168
    6. 'com' → logprob: -5.49494743347168
    7. 'ple' → logprob: -5.86994743347168
    8. '_com' → logprob: -5.99494743347168
    9. 'nom' → logprob: -6.36994743347168
    10. 'n' → logprob: -6.61994743347168

Token 341: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.013994814362377e-05
    2. 'ination' → logprob: -10.37505054473877
    3. '(n' → logprob: -11.37505054473877
    4. '(' → logprob: -12.12505054473877
    5. '   ' → logprob: -13.75005054473877
    6. 'self' → logprob: -15.62505054473877
    7. 'inition' → logprob: -15.75005054473877
    8. '(sel' → logprob: -16.500049591064453
    9. 'ining' → logprob: -17.000049591064453
    10. 'ine' → logprob: -17.250049591064453

Token 342: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1481117308139801
    2. ',' → logprob: -2.1481118202209473
    3. 'self' → logprob: -4.148111820220947
    4. 'f' → logprob: -6.523111820220947
    5. ')(' → logprob: -6.523111820220947
    6. ',self' → logprob: -6.523111820220947
    7. ' self' → logprob: -8.023111343383789
    8. 'elf' → logprob: -9.023111343383789
    9. '   ' → logprob: -9.148111343383789
    10. ' (' → logprob: -9.898111343383789

Token 343: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4784334599971771
    2. 'n' → logprob: -0.9784334897994995
    3. 'self' → logprob: -5.853433609008789
    4. ' self' → logprob: -6.978433609008789
    5. '   ' → logprob: -7.603433609008789
    6. ')' → logprob: -10.853433609008789
    7. ' ' → logprob: -11.978433609008789
    8. ',' → logprob: -12.353433609008789
    9. '       ' → logprob: -12.353433609008789
    10. '    ' → logprob: -13.103433609008789

Token 344: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.14374670386314392
    2. ',' → logprob: -2.2687466144561768
    3. 'self' → logprob: -4.518746852874756
    4. 'val' → logprob: -4.893746852874756
    5. ',val' → logprob: -5.018746852874756
    6. '(self' → logprob: -5.893746852874756
    7. ',self' → logprob: -7.268746852874756
    8. ')' → logprob: -8.268746376037598
    9. '   ' → logprob: -8.518746376037598
    10. ',_' → logprob: -8.518746376037598

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010900551453232765
    2. ',k' → logprob: -4.635900497436523
    3. ' ,' → logprob: -6.885900497436523
    4. ',n' → logprob: -9.510900497436523
    5. ',r' → logprob: -10.760900497436523
    6. ',m' → logprob: -11.260900497436523
    7. '   ' → logprob: -13.010900497436523
    8. ',
' → logprob: -13.010900497436523
    9. ',self' → logprob: -14.010900497436523
    10. ',v' → logprob: -14.385900497436523

Token 346: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00020747410599142313
    2. ' k' → logprob: -8.500207901000977
    3. '   ' → logprob: -12.750207901000977
    4. 'r' → logprob: -14.125207901000977
    5. '
' → logprob: -15.875207901000977
    6. 'n' → logprob: -16.500207901000977
    7. '```' → logprob: -16.875207901000977
    8. '       ' → logprob: -17.125207901000977
    9. '	k' → logprob: -18.625207901000977
    10. '    ' → logprob: -18.875207901000977

Token 347: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0003500050224829465
    2. 'val' → logprob: -8.000349998474121
    3. ')' → logprob: -12.500349998474121
    4. 'Val' → logprob: -13.250349998474121
    5. '):' → logprob: -13.375349998474121
    6. '_VAL' → logprob: -13.500349998474121
    7. '_' → logprob: -13.750349998474121
    8. '_const' → logprob: -14.250349998474121
    9. ',val' → logprob: -14.375349998474121
    10. '	val' → logprob: -14.875349998474121

Token 348: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12702438235282898
    2. '):
' → logprob: -2.1270244121551514
    3. '):
' → logprob: -9.50202465057373
    4. ')' → logprob: -11.25202465057373
    5. '   ' → logprob: -12.62702465057373
    6. ' ):' → logprob: -12.87702465057373
    7. '       ' → logprob: -13.37702465057373
    8. '):

' → logprob: -14.37702465057373
    9. ':' → logprob: -15.25202465057373
    10. ' ):
' → logprob: -15.75202465057373

Token 349: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018909110222011805
    2. 'return' → logprob: -7.251891136169434
    3. ':' → logprob: -7.501891136169434
    4. ':
' → logprob: -8.501891136169434
    5. '):
' → logprob: -8.626891136169434
    6. ' return' → logprob: -8.876891136169434
    7. ':return' → logprob: -10.376891136169434
    8. '):' → logprob: -10.626891136169434
    9. '   ' → logprob: -11.251891136169434
    10. ')' → logprob: -11.251891136169434

Token 350: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.038668688386678696
    2. 'if' (adapté à ' if') → logprob: -3.288668632507324
    3. '       ' → logprob: -7.413668632507324
    4. ' return' → logprob: -10.788668632507324
    5. ' if' → logprob: -13.413668632507324
    6. '   ' → logprob: -14.038668632507324
    7. '#' → logprob: -15.038668632507324
    8. '"""' → logprob: -15.163668632507324
    9. '
' → logprob: -15.538668632507324
    10. 'n' → logprob: -15.788668632507324

Token 351: ' (' (ID: 350)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.0861166715621948
    2. ' n' → logprob: -1.3361166715621948
    3. 'k' → logprob: -1.8361166715621948
    4. 'n' → logprob: -2.0861167907714844
    5. ' k' → logprob: -2.3361167907714844
    6. 'not' → logprob: -3.9611167907714844
    7. '0' → logprob: -9.211116790771484
    8. ' ' → logprob: -9.711116790771484
    9. '(n' → logprob: -10.586116790771484
    10. '(k' → logprob: -11.711116790771484

Token 352: 'n' (ID: 77)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4448786675930023
    2. 'n' → logprob: -1.0698786973953247
    3. ' n' → logprob: -4.819878578186035
    4. 'not' → logprob: -5.694878578186035
    5. ' k' → logprob: -5.694878578186035
    6. ' not' → logprob: -6.944878578186035
    7. '(n' → logprob: -8.694878578186035
    8. '(k' → logprob: -9.694878578186035
    9. '   ' → logprob: -11.319878578186035
    10. ')' → logprob: -12.069878578186035

Token 353: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -4.7994282795116305e-05
    2. 'val' → logprob: -10.00004768371582
    3. '<' → logprob: -13.87504768371582
    4. 'Val' → logprob: -14.62504768371582
    5. '_VAL' → logprob: -14.75004768371582
    6. '<=' → logprob: -15.87504768371582
    7. '	val' → logprob: -16.00004768371582
    8. '
' → logprob: -16.62504768371582
    9. ')' → logprob: -16.62504768371582
    10. '=' → logprob: -17.12504768371582

Token 354: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.633263885974884
    2. '<' → logprob: -1.1332638263702393
    3. ' ==' → logprob: -2.3832638263702393
    4. ' <' → logprob: -3.0082638263702393
    5. '<=' → logprob: -6.133264064788818
    6. '=' → logprob: -7.133264064788818
    7. '+' → logprob: -7.383264064788818
    8. ' +' → logprob: -7.383264064788818
    9. ',' → logprob: -7.508264064788818
    10. ' <=' → logprob: -8.00826358795166

Token 355: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004668287932872772
    2. ' ' → logprob: -5.379668235778809
    3. '-' → logprob: -10.129668235778809
    4. ' -' → logprob: -12.254668235778809
    5. 'k' → logprob: -13.254668235778809
    6. 'n' → logprob: -14.879668235778809
    7. '   ' → logprob: -15.504668235778809
    8. '1' → logprob: -15.504668235778809
    9. '  ' → logprob: -15.504668235778809
    10. ')' → logprob: -15.504668235778809

Token 356: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002017974853515625
    2. '-' → logprob: -6.252017974853516
    3. ' ' → logprob: -9.377017974853516
    4. ' -' → logprob: -12.627017974853516
    5. 'k' → logprob: -13.877017974853516
    6. 'n' → logprob: -16.002017974853516
    7. '<' → logprob: -16.127017974853516
    8. '1' → logprob: -17.002017974853516
    9. '
' → logprob: -17.502017974853516
    10. '  ' → logprob: -17.752017974853516

Token 357: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6935775876045227
    2. 'and' → logprob: -0.6935775876045227
    3. ')' → logprob: -8.068577766418457
    4. '   ' → logprob: -10.193577766418457
    5. ' ' → logprob: -10.318577766418457
    6. '):' → logprob: -10.693577766418457
    7. '):
' → logprob: -12.193577766418457
    8. '       ' → logprob: -12.443577766418457
    9. '  ' → logprob: -12.443577766418457
    10. '	and' → logprob: -12.568577766418457

Token 358: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0336780920624733
    2. ' k' → logprob: -3.4086780548095703
    3. '0' → logprob: -11.15867805480957
    4. '(k' → logprob: -12.03367805480957
    5. 'n' → logprob: -12.78367805480957
    6. ' not' → logprob: -13.03367805480957
    7. ' ' → logprob: -13.03367805480957
    8. ' (' → logprob: -13.65867805480957
    9. ' n' → logprob: -13.90867805480957
    10. '   ' → logprob: -13.90867805480957

Token 359: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -2.5776860184123507e-06
    2. 'val' → logprob: -13.00000286102295
    3. '_VAL' → logprob: -16.375001907348633
    4. '==' → logprob: -16.625001907348633
    5. '	val' → logprob: -16.875001907348633
    6. 'Val' → logprob: -17.625001907348633
    7. '_' → logprob: -17.750001907348633
    8. ' val' → logprob: -18.250001907348633
    9. '<' → logprob: -18.375001907348633
    10. '=' → logprob: -18.625001907348633

Token 360: ' >' (ID: 1424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1683313101530075
    2. ' ==' → logprob: -1.918331265449524
    3. ')' → logprob: -5.043331146240234
    4. '<' → logprob: -7.418331146240234
    5. ')==' → logprob: -7.418331146240234
    6. ' <' → logprob: -8.793331146240234
    7. '<=' → logprob: -9.168331146240234
    8. '>' → logprob: -9.543331146240234
    9. '=' → logprob: -10.418331146240234
    10. ' <=' → logprob: -11.043331146240234

Token 361: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1431584358215332
    2. ' ' → logprob: -2.018158435821533
    3. '=' → logprob: -7.643158435821533
    4. '  ' → logprob: -13.268157958984375
    5. '   ' → logprob: -14.768157958984375
    6. ' =' → logprob: -15.205657958984375
    7. '>' → logprob: -15.268157958984375
    8. 'k' → logprob: -15.580657958984375
    9. '1' → logprob: -15.705657958984375
    10. ' ' → logprob: -16.143157958984375

Token 362: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.5649528298527e-05
    2. ' ' → logprob: -9.500075340270996
    3. 'n' → logprob: -15.312575340270996
    4. '=' → logprob: -15.875075340270996
    5. '-' → logprob: -16.437576293945312
    6. '۰' → logprob: -16.625076293945312
    7. '1' → logprob: -16.812576293945312
    8. '   ' → logprob: -16.812576293945312
    9. 'k' → logprob: -17.250076293945312
    10. '
' → logprob: -17.625076293945312

Token 363: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24615685641765594
    2. '):
' → logprob: -1.8711568117141724
    3. '):' → logprob: -2.746156930923462
    4. '       ' → logprob: -10.121156692504883
    5. '   ' → logprob: -11.371156692504883
    6. '):
' → logprob: -11.746156692504883
    7. ')==' → logprob: -12.371156692504883
    8. ' or' → logprob: -12.621156692504883
    9. ')return' → logprob: -12.746156692504883
    10. ' )' → logprob: -13.246156692504883

Token 364: ' or' (ID: 503)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1932590901851654
    2. ':' → logprob: -2.0682590007781982
    3. '           ' → logprob: -3.3182590007781982
    4. '       ' → logprob: -4.568259239196777
    5. ':return' → logprob: -6.193259239196777
    6. '):
' → logprob: -8.443259239196777
    7. ' or' → logprob: -8.443259239196777
    8. '   ' → logprob: -8.818259239196777
    9. ' return' → logprob: -10.318259239196777
    10. 'return' → logprob: -10.943259239196777

Token 365: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7442477941513062
    2. ' k' → logprob: -0.7442477941513062
    3. ' n' → logprob: -3.6192479133605957
    4. 'n' → logprob: -4.619247913360596
    5. '(n' → logprob: -5.369247913360596
    6. '(k' → logprob: -5.369247913360596
    7. ' (' → logprob: -5.744247913360596
    8. ' not' → logprob: -7.869247913360596
    9. '(' → logprob: -8.744247436523438
    10. 'not' → logprob: -10.494247436523438

Token 366: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -16.0
    3. 'val' → logprob: -16.0
    4. '_VAL' → logprob: -16.375
    5. '<' → logprob: -17.25
    6. '<=' → logprob: -17.625
    7. '_value' → logprob: -18.25
    8. ' _' → logprob: -18.75
    9. '>' → logprob: -18.875
    10. '```' → logprob: -19.0

Token 367: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.39162084460258484
    2. '<' → logprob: -1.1416208744049072
    3. ' <=' → logprob: -5.891620635986328
    4. '<=' → logprob: -6.266620635986328
    5. '==' → logprob: -10.016620635986328
    6. ' ==' → logprob: -10.641620635986328
    7. ' ' → logprob: -12.016620635986328
    8. ' >' → logprob: -13.891620635986328
    9. '>' → logprob: -14.891620635986328
    10. '=' → logprob: -15.391620635986328

Token 368: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11287353187799454
    2. ' ' → logprob: -2.2378735542297363
    3. '=' → logprob: -9.987873077392578
    4. '1' → logprob: -12.737873077392578
    5. ' =' → logprob: -14.112873077392578
    6. '   ' → logprob: -14.237873077392578
    7. '  ' → logprob: -15.862873077392578
    8. '-' → logprob: -15.987873077392578
    9. '۰' → logprob: -16.175373077392578
    10. ')' → logprob: -16.987873077392578

Token 369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.939851037808694e-05
    2. ' ' → logprob: -10.500029563903809
    3. '1' → logprob: -14.250029563903809
    4. '=' → logprob: -15.000029563903809
    5. '   ' → logprob: -15.125029563903809
    6. '-' → logprob: -16.187528610229492
    7. '０' → logprob: -16.187528610229492
    8. '۰' → logprob: -16.375028610229492
    9. '       ' → logprob: -16.625028610229492
    10. '           ' → logprob: -17.250028610229492

Token 370: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4201738238334656
    2. ':
' → logprob: -1.1701738834381104
    3. ' or' → logprob: -4.170173645019531
    4. '       ' → logprob: -4.170173645019531
    5. ':return' → logprob: -6.545173645019531
    6. '):
' → logprob: -8.295173645019531
    7. ',' → logprob: -10.545173645019531
    8. '   ' → logprob: -10.545173645019531
    9. ' :' → logprob: -10.920173645019531
    10. ' :
' → logprob: -11.045173645019531

Token 371: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20429040491580963
    2. '           ' → logprob: -1.7042903900146484
    3. '   ' → logprob: -6.704290390014648
    4. 'return' → logprob: -7.329290390014648
    5. ' return' → logprob: -7.454290390014648
    6. '
' → logprob: -8.579290390014648
    7. ':
' → logprob: -9.329290390014648
    8. ':return' → logprob: -9.829290390014648
    9. ':' → logprob: -10.204290390014648
    10. '     ' → logprob: -11.954290390014648

Token 372: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10904161632061005
    2. '           ' → logprob: -2.859041690826416
    3. ' return' → logprob: -3.109041690826416
    4. '       ' → logprob: -6.984041690826416
    5. '   ' → logprob: -8.109041213989258
    6. '
' → logprob: -9.359041213989258
    7. '	return' → logprob: -10.984041213989258
    8. '{return' → logprob: -12.859041213989258
    9. ':return' → logprob: -13.359041213989258
    10. ' ' → logprob: -13.734041213989258

Token 373: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '   ' → logprob: -19.00247573852539
    4. '
' → logprob: -19.50247573852539
    5. ' ' → logprob: -19.50247573852539
    6. '۰' → logprob: -20.25247573852539
    7. '       ' → logprob: -20.62747573852539
    8. ' 
' → logprob: -20.87747573852539
    9. '  ' → logprob: -20.87747573852539
    10. '000' → logprob: -21.12747573852539

Token 374: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '۰' → logprob: -20.125
    4. '
' → logprob: -20.625
    5. '   ' → logprob: -20.625
    6. '０' → logprob: -21.8125
    7. '000' → logprob: -22.0625
    8. ' ' → logprob: -22.1875
    9. '00' → logprob: -22.1875
    10. '  ' → logprob: -22.25

Token 375: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002081739716231823
    2. '
' → logprob: -6.252081871032715
    3. '        
' → logprob: -9.127081871032715
    4. ',' → logprob: -11.002081871032715
    5. '    
' → logprob: -12.002081871032715
    6. ' return' → logprob: -12.377081871032715
    7. 'return' → logprob: -12.752081871032715
    8. '  
' → logprob: -12.877081871032715
    9. '   ' → logprob: -13.502081871032715
    10. '.' → logprob: -13.752081871032715

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006137822289019823
    2. 'return' → logprob: -5.131137847900391
    3. ' return' → logprob: -8.50613784790039
    4. '
' → logprob: -12.63113784790039
    5. '   ' → logprob: -13.63113784790039
    6. 'if' → logprob: -13.75613784790039
    7. '        
' → logprob: -15.00613784790039
    8. ',' → logprob: -15.13113784790039
    9. 'n' → logprob: -15.25613784790039
    10. ' if' → logprob: -16.00613784790039

Token 377: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02976854331791401
    2. '       ' → logprob: -3.529768466949463
    3. ' return' → logprob: -11.154768943786621
    4. 'n' → logprob: -12.904768943786621
    5. 'if' → logprob: -14.529768943786621
    6. '   ' → logprob: -14.904768943786621
    7. '	return' → logprob: -15.154768943786621
    8. 'r' → logprob: -17.404767990112305
    9. 'ret' → logprob: -18.029767990112305
    10. '           ' → logprob: -18.279767990112305

Token 378: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017107593594118953
    2. ' self' → logprob: -6.376710891723633
    3. '(self' → logprob: -12.001710891723633
    4. '       ' → logprob: -13.876710891723633
    5. '1' → logprob: -15.126710891723633
    6. 'factor' → logprob: -15.376710891723633
    7. '   ' → logprob: -15.501710891723633
    8. '           ' → logprob: -16.001710891723633
    9. '	self' → logprob: -16.126710891723633
    10. '0' → logprob: -16.501710891723633

Token 379: '.factor' (ID: 196244)
  Prédit: '.com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.com' → logprob: -0.014567844569683075
    2. '.factor' → logprob: -4.264567852020264
    3. '.fac' → logprob: -9.389567375183105
    4. '.per' → logprob: -9.389567375183105
    5. '.combo' → logprob: -9.514567375183105
    6. '.fact' → logprob: -9.639567375183105
    7. '.comm' → logprob: -9.764567375183105
    8. '.combine' → logprob: -10.889567375183105
    9. '.' → logprob: -11.889567375183105
    10. '.comp' → logprob: -12.389567375183105

Token 380: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.12753640115261078
    2. 'al' → logprob: -2.1275362968444824
    3. 'omial' → logprob: -7.627536296844482
    4. '(self' → logprob: -10.62753677368164
    5. 'alist' → logprob: -10.62753677368164
    6. 'cial' → logprob: -10.87753677368164
    7. '_list' → logprob: -11.00253677368164
    8. '_factor' → logprob: -11.75253677368164
    9. 'ialist' → logprob: -12.25253677368164
    10. 'atorial' → logprob: -12.37753677368164

Token 381: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.2664456789934775e-06
    2. 'list' → logprob: -14.625000953674316
    3. 'List' → logprob: -15.125000953674316
    4. 'System' → logprob: -15.375000953674316
    5. '_system' → logprob: -15.500000953674316
    6. '[' → logprob: -18.250001907348633
    7. '_lists' → logprob: -18.375001907348633
    8. '列表' → logprob: -19.625001907348633
    9. 'self' → logprob: -20.375001907348633
    10. 's' → logprob: -20.875001907348633

Token 382: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.306760805164231e-05
    2. 'n' → logprob: -11.37501335144043
    3. '[k' → logprob: -14.12501335144043
    4. '[' → logprob: -14.87501335144043
    5. '[
' → logprob: -15.87501335144043
    6. '[self' → logprob: -16.00001335144043
    7. '(n' → logprob: -16.25001335144043
    8. '[m' → logprob: -16.37501335144043
    9. '[num' → logprob: -19.00001335144043
    10. '[(' → logprob: -19.00001335144043

Token 383: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.1875571544806007e-05
    2. 'val' → logprob: -11.375011444091797
    3. '_max' → logprob: -16.375011444091797
    4. 'Val' → logprob: -16.500011444091797
    5. 'max' → logprob: -17.125011444091797
    6. '_VAL' → logprob: -18.375011444091797
    7. '[val' → logprob: -19.750011444091797
    8. '_const' → logprob: -19.875011444091797
    9. '_idx' → logprob: -19.875011444091797
    10. ']' → logprob: -20.000011444091797

Token 384: ' +' (ID: 659)
  Prédit: '+k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+k' → logprob: -0.10059988498687744
    2. ' +' → logprob: -2.475599765777588
    3. '+' → logprob: -4.725599765777588
    4. '   ' → logprob: -6.475599765777588
    5. 'k' → logprob: -7.350599765777588
    6. '+n' → logprob: -7.600599765777588
    7. ' k' → logprob: -10.725600242614746
    8. 'n' → logprob: -12.100600242614746
    9. ' ' → logprob: -12.475600242614746
    10. '    ' → logprob: -12.975600242614746

Token 385: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.320199877838604e-07
    2. ' k' → logprob: -14.875
    3. '	k' → logprob: -19.25
    4. '   ' → logprob: -19.75
    5. '
' → logprob: -20.0
    6. '       ' → logprob: -21.25
    7. '           ' → logprob: -21.875
    8. '{k' → logprob: -22.125
    9. '"k' → logprob: -23.0
    10. '(k' → logprob: -23.5

Token 386: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.00023298001906368881
    2. 'val' → logprob: -8.375232696533203
    3. 'Val' → logprob: -13.000232696533203
    4. '_VAL' → logprob: -17.000232696533203
    5. '```' → logprob: -17.875232696533203
    6. '	val' → logprob: -18.500232696533203
    7. 'v' → logprob: -18.625232696533203
    8. '.val' → logprob: -19.000232696533203
    9. '[val' → logprob: -19.000232696533203
    10. ' val' → logprob: -19.125232696533203

Token 387: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008130120113492012
    2. '-' → logprob: -5.258130073547363
    3. ' -' → logprob: -6.008130073547363
    4. '   ' → logprob: -7.758130073547363
    5. ']*' → logprob: -13.508130073547363
    6. ' ]' → logprob: -13.633130073547363
    7. '```' → logprob: -14.258130073547363
    8. '*' → logprob: -14.258130073547363
    9. ' ' → logprob: -14.383130073547363
    10. '  ' → logprob: -15.008130073547363

Token 388: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -20.75
    4. '
' → logprob: -21.0
    5. '```' → logprob: -22.0
    6. '１' → logprob: -22.125
    7. '-' → logprob: -22.375
    8. '۱' → logprob: -22.5
    9. '2' → logprob: -22.75
    10. '

' → logprob: -22.875

Token 389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '۱' → logprob: -20.375
    4. '１' → logprob: -20.875
    5. '
' → logprob: -22.125
    6. '১' → logprob: -22.625
    7. '   ' → logprob: -22.9375
    8. '```' → logprob: -23.0625
    9. '१' → logprob: -23.1875
    10. '

' → logprob: -23.5625

Token 390: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0280383548888494e-06
    2. ']*' → logprob: -14.125000953674316
    3. '   ' → logprob: -16.000001907348633
    4. ' ]' → logprob: -16.250001907348633
    5. ']
' → logprob: -20.875001907348633
    6. ']%' → logprob: -21.000001907348633
    7. '    ' → logprob: -21.625001907348633
    8. ']

' → logprob: -21.625001907348633
    9. '}' → logprob: -21.625001907348633
    10. '       ' → logprob: -21.750001907348633

Token 391: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16033856570720673
    2. '*' → logprob: -1.9103385210037231
    3. '   ' → logprob: -9.160338401794434
    4. '*self' → logprob: -12.035338401794434
    5. ' ' → logprob: -14.035338401794434
    6. '    ' → logprob: -14.910338401794434
    7. '*object' → logprob: -15.035338401794434
    8. '%' → logprob: -15.160338401794434
    9. '  ' → logprob: -15.285338401794434
    10. '       ' → logprob: -15.410338401794434

Token 392: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05526722967624664
    2. ' self' → logprob: -2.930267333984375
    3. '       ' → logprob: -8.555267333984375
    4. '(self' → logprob: -8.680267333984375
    5. '	self' → logprob: -11.680267333984375
    6. ' (' → logprob: -12.430267333984375
    7. '   ' → logprob: -12.430267333984375
    8. '           ' → logprob: -13.305267333984375
    9. '[self' → logprob: -13.680267333984375
    10. '(' → logprob: -13.805267333984375

Token 393: '.inv' (ID: 83561)
  Prédit: '.inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inv' → logprob: -0.0019702657591551542
    2. 'inv' → logprob: -6.251970291137695
    3. '.get' → logprob: -10.126970291137695
    4. 'get' → logprob: -14.126970291137695
    5. '.' → logprob: -14.501970291137695
    6. ' inv' → logprob: -15.626970291137695
    7. '_inv' → logprob: -16.126970291137695
    8. '(inv' → logprob: -16.501970291137695
    9. '```' → logprob: -16.876970291137695
    10. 'Inv' → logprob: -17.751970291137695

Token 394: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -1.9361264946837764e-07
    2. 'factor' → logprob: -16.25
    3. '```' → logprob: -17.875
    4. '_fact' → logprob: -19.0
    5. '_inv' → logprob: -19.25
    6. '_FACTOR' → logprob: -20.25
    7. '_constant' → logprob: -20.625
    8. '_f' → logprob: -20.625
    9. 'Factor' → logprob: -21.0
    10. '_fac' → logprob: -21.125

Token 395: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.0015780634712427855
    2. 'orial' → logprob: -7.376577854156494
    3. 'al' → logprob: -7.501577854156494
    4. 'cial' → logprob: -8.251578330993652
    5. 'omial' → logprob: -9.501578330993652
    6. 'atorial' → logprob: -10.501578330993652
    7. '_factor' → logprob: -11.251578330993652
    8. '_' → logprob: -12.251578330993652
    9. 'rial' → logprob: -12.251578330993652
    10. 'ional' → logprob: -12.876578330993652

Token 396: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.729906196298543e-06
    2. 'self' → logprob: -12.375009536743164
    3. 'list' → logprob: -12.500009536743164
    4. '[self' → logprob: -13.750009536743164
    5. '[k' → logprob: -15.625009536743164
    6. '[' → logprob: -16.250009536743164
    7. 'List' → logprob: -16.500009536743164
    8. '[_' → logprob: -17.250009536743164
    9. '[n' → logprob: -17.500009536743164
    10. '_factor' → logprob: -17.625009536743164

Token 397: '[k' (ID: 14298)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.62500286102295
    3. 'n' → logprob: -13.87500286102295
    4. '[k' → logprob: -14.75000286102295
    5. '[
' → logprob: -15.87500286102295
    6. ' [' → logprob: -16.250003814697266
    7. '[(' → logprob: -16.750003814697266
    8. '(n' → logprob: -17.375003814697266
    9. '[-' → logprob: -17.875003814697266
    10. '[num' → logprob: -18.000003814697266

Token 398: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -4.723352049040841e-06
    2. 'val' → logprob: -12.375004768371582
    3. '_VAL' → logprob: -15.625004768371582
    4. 'Val' → logprob: -16.250003814697266
    5. '_factor' → logprob: -16.500003814697266
    6. '_const' → logprob: -17.875003814697266
    7. '	val' → logprob: -18.750003814697266
    8. 'aval' → logprob: -18.875003814697266
    9. '[val' → logprob: -18.875003814697266
    10. 'ival' → logprob: -19.250003814697266

Token 399: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003179465711582452
    2. ']%' → logprob: -9.125317573547363
    3. '   ' → logprob: -9.375317573547363
    4. '%' → logprob: -9.625317573547363
    5. '-' → logprob: -10.375317573547363
    6. ' ]' → logprob: -12.000317573547363
    7. '_val' → logprob: -12.000317573547363
    8. '    ' → logprob: -12.625317573547363
    9. ']*' → logprob: -13.250317573547363
    10. '     ' → logprob: -13.875317573547363

Token 400: ' %' (ID: 1851)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0015105740167200565
    2. '*' → logprob: -6.5015106201171875
    3. '   ' → logprob: -12.501510620117188
    4. '       ' → logprob: -13.626510620117188
    5. '%' → logprob: -14.001510620117188
    6. ' ' → logprob: -14.251510620117188
    7. ' %' → logprob: -14.626510620117188
    8. ' ' → logprob: -14.751510620117188
    9. '*self' → logprob: -15.126510620117188
    10. '	' → logprob: -15.501510620117188

Token 401: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12698994576931
    2. ' self' → logprob: -2.1269898414611816
    3. '(self' → logprob: -10.00199031829834
    4. '       ' → logprob: -12.12699031829834
    5. '	self' → logprob: -12.37699031829834
    6. '[self' → logprob: -12.75199031829834
    7. ' ' → logprob: -14.12699031829834
    8. '*self' → logprob: -14.25199031829834
    9. '           ' → logprob: -14.37699031829834
    10. 'mod' → logprob: -14.62699031829834

Token 402: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -9.13388703338569e-06
    2. 'mod' → logprob: -11.625009536743164
    3. '.' → logprob: -16.750009536743164
    4. '	mod' → logprob: -17.500009536743164
    5. ' .' → logprob: -17.875009536743164
    6. 'MOD' → logprob: -18.375009536743164
    7. '```' → logprob: -19.500009536743164
    8. ' mod' → logprob: -20.250009536743164
    9. '.MOD' → logprob: -20.250009536743164
    10. '_mod' → logprob: -20.500009536743164

Token 403: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.28395307064056396
    2. '_val' → logprob: -2.0339531898498535
    3. '_factor' → logprob: -3.1589531898498535
    4. '_const' → logprob: -3.2839531898498535
    5. 'val' → logprob: -4.4089531898498535
    6. 'value' → logprob: -4.4089531898498535
    7. '244' → logprob: -5.1589531898498535
    8. 'const' → logprob: -6.7839531898498535
    9. 'CONST' → logprob: -6.7839531898498535
    10. '_CONST' → logprob: -6.9089531898498535

Token 404: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.563541054725647
    2. '       ' → logprob: -1.313541054725647
    3. '*' → logprob: -1.938541054725647
    4. '*self' → logprob: -4.063540935516357
    5. '   ' → logprob: -8.188541412353516
    6. 'self' → logprob: -8.438541412353516
    7. ' ' → logprob: -10.063541412353516
    8. ' ' → logprob: -10.188541412353516
    9. '```' → logprob: -10.438541412353516
    10. '        ' → logprob: -10.563541412353516

Token 405: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20145250856876373
    2. ' self' → logprob: -1.7014524936676025
    3. '           ' → logprob: -11.326452255249023
    4. '	self' → logprob: -11.576452255249023
    5. '       ' → logprob: -12.076452255249023
    6. '   ' → logprob: -12.576452255249023
    7. '(self' → logprob: -13.326452255249023
    8. ' ' → logprob: -13.326452255249023
    9. '[self' → logprob: -13.951452255249023
    10. '  ' → logprob: -14.576452255249023

Token 406: '.inv' (ID: 83561)
  Prédit: '.inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inv' → logprob: -2.3080716346157715e-05
    2. 'inv' → logprob: -10.875022888183594
    3. '.factor' → logprob: -12.625022888183594
    4. '.' → logprob: -15.000022888183594
    5. '.get' → logprob: -15.000022888183594
    6. ' .' → logprob: -16.500022888183594
    7. '_inv' → logprob: -18.500022888183594
    8. '.Inv' → logprob: -18.750022888183594
    9. ' inv' → logprob: -18.875022888183594
    10. '..' → logprob: -18.875022888183594

Token 407: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -1.9361264946837764e-07
    2. 'factor' → logprob: -16.375
    3. '_fact' → logprob: -17.125
    4. '```' → logprob: -18.125
    5. '_fac' → logprob: -18.25
    6. '_inv' → logprob: -18.75
    7. '_FACTOR' → logprob: -19.125
    8. '\' → logprob: -20.25
    9. 'Factor' → logprob: -20.25
    10. '_' → logprob: -20.25

Token 408: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.07976962625980377
    2. 'al' → logprob: -3.3297696113586426
    3. '_factor' → logprob: -4.079769611358643
    4. 'omial' → logprob: -4.329769611358643
    5. 'atorial' → logprob: -4.704769611358643
    6. '_list' → logprob: -7.579769611358643
    7. 'orial' → logprob: -7.579769611358643
    8. 'cial' → logprob: -8.7047700881958
    9. 'alist' → logprob: -9.0797700881958
    10. ' factorial' → logprob: -9.5797700881958

Token 409: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.0445127372804563e-05
    2. 'list' → logprob: -11.50001049041748
    3. 'List' → logprob: -16.000009536743164
    4. 'alist' → logprob: -17.000009536743164
    5. 'self' → logprob: -17.125009536743164
    6. 'ist' → logprob: -17.500009536743164
    7. '_LIST' → logprob: -17.625009536743164
    8. '_factor' → logprob: -17.875009536743164
    9. '[' → logprob: -17.875009536743164
    10. 'factor' → logprob: -18.000009536743164

Token 410: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.747814349073451e-05
    2. 'n' → logprob: -11.875017166137695
    3. '[
' → logprob: -12.625017166137695
    4. '[' → logprob: -12.875017166137695
    5. '	n' → logprob: -13.500017166137695
    6. '

' → logprob: -14.000017166137695
    7. '
' → logprob: -14.375017166137695
    8. ' [' → logprob: -14.875017166137695
    9. '(n' → logprob: -14.875017166137695
    10. '```' → logprob: -14.875017166137695

Token 411: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -6.933173426659778e-05
    2. 'val' → logprob: -9.625069618225098
    3. '_const' → logprob: -12.750069618225098
    4. '_VAL' → logprob: -15.875069618225098
    5. 'Val' → logprob: -17.00006866455078
    6. 'const' → logprob: -17.62506866455078
    7. '```' → logprob: -17.87506866455078
    8. '[val' → logprob: -18.12506866455078
    9. '	val' → logprob: -18.87506866455078
    10. 'v' → logprob: -19.00006866455078

Token 412: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07026562094688416
    2. ' -' → logprob: -2.695265531539917
    3. '_val' → logprob: -8.945265769958496
    4. 'val' → logprob: -9.445265769958496
    5. ' ' → logprob: -9.820265769958496
    6. '[val' → logprob: -10.945265769958496
    7. '[' → logprob: -11.195265769958496
    8. '+' → logprob: -11.570265769958496
    9. '-val' → logprob: -11.695265769958496
    10. '_minus' → logprob: -12.320265769958496

Token 413: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -16.500001907348633
    4. '(' → logprob: -16.750001907348633
    5. '
' → logprob: -17.125001907348633
    6. '[' → logprob: -17.750001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '{
' → logprob: -17.875001907348633
    9. '<|end|>' → logprob: -18.000001907348633
    10. '﻿' → logprob: -18.125001907348633

Token 414: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '
' → logprob: -17.0
    4. '```' → logprob: -17.625
    5. '   ' → logprob: -18.0
    6. '{
' → logprob: -19.0
    7. '[' → logprob: -19.375
    8. '﻿' → logprob: -19.375
    9. '۱' → logprob: -19.5625
    10. '<|end|>' → logprob: -19.8125

Token 415: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00826809462159872
    2. '%' → logprob: -5.758267879486084
    3. ']%' → logprob: -5.758267879486084
    4. '<|end|>' → logprob: -6.633267879486084
    5. '[' → logprob: -8.133268356323242
    6. '}' → logprob: -8.258268356323242
    7. '[
' → logprob: -11.633268356323242
    8. '```' → logprob: -11.758268356323242
    9. '[n' → logprob: -12.133268356323242
    10. ' %' → logprob: -12.508268356323242

Token 416: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.20171484351158142
    2. ' %' → logprob: -1.7017148733139038
    3. '%n' → logprob: -8.451714515686035
    4. '[n' → logprob: -10.326714515686035
    5. '<|end|>' → logprob: -10.826714515686035
    6. '%
' → logprob: -10.826714515686035
    7. ')' → logprob: -12.951714515686035
    8. ' ' → logprob: -13.076714515686035
    9. ' %
' → logprob: -13.326714515686035
    10. '```' → logprob: -13.451714515686035

Token 417: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008615635335445404
    2. ' self' → logprob: -4.758615493774414
    3. '(self' → logprob: -14.383615493774414
    4. '	self' → logprob: -15.633615493774414
    5. '[self' → logprob: -15.883615493774414
    6. '<|end|>' → logprob: -15.883615493774414
    7. ' ' → logprob: -17.508615493774414
    8. '*self' → logprob: -18.008615493774414
    9. ' ' → logprob: -18.383615493774414
    10. '       ' → logprob: -18.508615493774414

Token 418: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.001510335598140955
    2. 'mod' → logprob: -6.501510143280029
    3. '_mod' → logprob: -12.251510620117188
    4. '.' → logprob: -13.376510620117188
    5. '	mod' → logprob: -14.126510620117188
    6. ' mod' → logprob: -14.876510620117188
    7. ' .' → logprob: -14.876510620117188
    8. '_.' → logprob: -16.126510620117188
    9. '```' → logprob: -17.001510620117188
    10. '._' → logprob: -17.751510620117188

Token 419: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.09396346658468246
    2. '_const' → logprob: -2.468963384628296
    3. 'const' → logprob: -6.093963623046875
    4. 'mod' → logprob: -7.218963623046875
    5. 'CONST' → logprob: -7.343963623046875
    6. 'value' → logprob: -7.718963623046875
    7. '_CONST' → logprob: -7.843963623046875
    8. '_val' → logprob: -7.843963623046875
    9. '_constant' → logprob: -9.593963623046875
    10. 'val' → logprob: -10.593963623046875

Token 420: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 421: 'input' (ID: 2586)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 422: '_n' (ID: 2170)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.5217389464378357
    2. '_line' → logprob: -1.5217390060424805
    3. '_str' → logprob: -2.6467390060424805
    4. '_text' → logprob: -3.1467390060424805
    5. '()' → logprob: -3.7717390060424805
    6. '_val' → logprob: -4.1467390060424805
    7. ' =' → logprob: -4.6467390060424805
    8. '_lines' → logprob: -4.7717390060424805
    9. '_' → logprob: -5.2717390060424805
    10. '_string' → logprob: -5.5217390060424805

Token 423: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3508983552455902
    2. '_' → logprob: -1.6008983850479126
    3. '()' → logprob: -3.100898265838623
    4. '=' → logprob: -3.475898265838623
    5. ')' → logprob: -5.350898265838623
    6. ' ' → logprob: -5.850898265838623
    7. '(' → logprob: -6.225898265838623
    8. '[' → logprob: -6.475898265838623
    9. ',' → logprob: -6.725898265838623
    10. '  ' → logprob: -6.975898265838623

Token 424: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06998033821582794
    2. ' input' → logprob: -2.6949803829193115
    3. '=input' → logprob: -10.44498062133789
    4. '=' → logprob: -12.81998062133789
    5. ',input' → logprob: -13.06998062133789
    6. ' =' → logprob: -13.31998062133789
    7. 'k' → logprob: -13.56998062133789
    8. 'a' → logprob: -13.69498062133789
    9. '_input' → logprob: -13.81998062133789
    10. 'output' → logprob: -14.44498062133789

Token 425: '_a' (ID: 10852)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.001342850853689015
    2. '_m' → logprob: -6.6263427734375
    3. '_' → logprob: -12.0013427734375
    4. 'k' → logprob: -12.3763427734375
    5. '_K' → logprob: -13.3763427734375
    6. '_r' → logprob: -14.0013427734375
    7. '_t' → logprob: -14.5013427734375
    8. '_q' → logprob: -14.5013427734375
    9. '_n' → logprob: -14.6263427734375
    10. '_x' → logprob: -15.0013427734375

Token 426: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6728690266609192
    2. ',' → logprob: -0.7978690266609192
    3. ' =' → logprob: -3.2978689670562744
    4. '=input' → logprob: -6.4228692054748535
    5. ',input' → logprob: -7.1728692054748535
    6. ',_' → logprob: -10.297868728637695
    7. ' ,' → logprob: -10.672868728637695
    8. 'input' → logprob: -11.047868728637695
    9. 'm' → logprob: -11.547868728637695
    10. 'l' → logprob: -12.422868728637695

Token 427: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10021119564771652
    2. ' input' → logprob: -2.3502111434936523
    3. ' =' → logprob: -13.225211143493652
    4. '=input' → logprob: -13.225211143493652
    5. ',input' → logprob: -14.725211143493652
    6. '=' → logprob: -15.225211143493652
    7. '_input' → logprob: -15.975211143493652
    8. ' ' → logprob: -17.60021209716797
    9. 'import' → logprob: -17.85021209716797
    10. ',' → logprob: -18.10021209716797

Token 428: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.43552425503730774
    2. '_k' → logprob: -1.1855242252349854
    3. '_m' → logprob: -3.4355242252349854
    4. '_c' → logprob: -5.5605244636535645
    5. '_t' → logprob: -5.5605244636535645
    6. '_d' → logprob: -6.1855244636535645
    7. '_x' → logprob: -6.5605244636535645
    8. '_s' → logprob: -7.3105244636535645
    9. '_r' → logprob: -7.5605244636535645
    10. 'b' → logprob: -7.8105244636535645

Token 429: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016237998381257057
    2. ' =' → logprob: -4.141238212585449
    3. '=input' → logprob: -8.89123821258545
    4. ',' → logprob: -9.64123821258545
    5. '=int' → logprob: -15.26623821258545
    6. '=

' → logprob: -15.89123821258545
    7. 'input' → logprob: -16.016237258911133
    8. ',input' → logprob: -16.016237258911133
    9. '=
' → logprob: -16.141237258911133
    10. ' ' → logprob: -16.391237258911133

Token 430: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.003901246003806591
    2. ' input' → logprob: -5.753901481628418
    3. '=input' → logprob: -7.628901481628418
    4. ' =' → logprob: -8.878901481628418
    5. '=' → logprob: -9.503901481628418
    6. '_input' → logprob: -12.253901481628418
    7. ',input' → logprob: -12.628901481628418
    8. 'k' → logprob: -12.628901481628418
    9. 'import' → logprob: -13.003901481628418
    10. '_=' → logprob: -13.003901481628418

Token 431: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.6631306409835815
    2. '_c' → logprob: -0.7881306409835815
    3. '_x' → logprob: -4.538130760192871
    4. '_t' → logprob: -4.788130760192871
    5. '_m' → logprob: -5.663130760192871
    6. 'k' → logprob: -6.038130760192871
    7. '_d' → logprob: -6.538130760192871
    8. '_s' → logprob: -7.163130760192871
    9. '_p' → logprob: -7.538130760192871
    10. '_n' → logprob: -8.038130760192871

Token 432: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38688984513282776
    2. ' =' → logprob: -1.1368898153305054
    3. '=input' → logprob: -11.386889457702637
    4. ',' → logprob: -11.886889457702637
    5. ' ' → logprob: -15.136889457702637
    6. '=list' → logprob: -15.636889457702637
    7. '=int' → logprob: -17.136890411376953
    8. '＝' → logprob: -17.261890411376953
    9. ' ' → logprob: -17.636890411376953
    10. ')' → logprob: -18.636890411376953

Token 433: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.25195613503456116
    2. ' map' → logprob: -1.5019561052322388
    3. 'list' → logprob: -10.75195598602295
    4. '(map' → logprob: -13.00195598602295
    5. ' list' → logprob: -13.25195598602295
    6. '	map' → logprob: -14.25195598602295
    7. '[' → logprob: -14.62695598602295
    8. ' ' → logprob: -15.12695598602295
    9. 'input' → logprob: -15.50195598602295
    10. 'tuple' → logprob: -17.001956939697266

Token 434: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0013758298009634018
    2. 'int' → logprob: -6.626375675201416
    3. '(' → logprob: -10.626376152038574
    4. '(str' → logprob: -11.376376152038574
    5. '(input' → logprob: -12.376376152038574
    6. '(
' → logprob: -12.876376152038574
    7. 'input' → logprob: -12.876376152038574
    8. '[int' → logprob: -13.126376152038574
    9. ' int' → logprob: -14.126376152038574
    10. 'list' → logprob: -14.626376152038574

Token 435: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5569252967834473
    2. 'input' → logprob: -1.1819252967834473
    3. '(input' → logprob: -2.1819252967834473
    4. ',' → logprob: -5.306925296783447
    5. '(' → logprob: -7.181925296783447
    6. ' input' → logprob: -7.306925296783447
    7. ')' → logprob: -7.931925296783447
    8. '=input' → logprob: -8.306924819946289
    9. '   ' → logprob: -8.681924819946289
    10. ' ' → logprob: -9.556924819946289

Token 436: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020354038861114532
    2. ' input' → logprob: -8.500203132629395
    3. 'open' → logprob: -20.12520408630371
    4. '   ' → logprob: -20.12520408630371
    5. '<input' → logprob: -21.12520408630371
    6. '=input' → logprob: -21.12520408630371
    7. ' ' → logprob: -21.25020408630371
    8. ',input' → logprob: -21.37520408630371
    9. '(input' → logprob: -21.62520408630371
    10. '
' → logprob: -21.62520408630371

Token 437: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1994775377388578e-05
    2. '()' → logprob: -11.375012397766113
    3. '().__' → logprob: -15.250012397766113
    4. ' ().' → logprob: -16.500011444091797
    5. '())' → logprob: -16.625011444091797
    6. '()
' → logprob: -18.250011444091797
    7. '()[' → logprob: -18.875011444091797
    8. '(' → logprob: -18.875011444091797
    9. '()>' → logprob: -19.125011444091797
    10. '.readline' → logprob: -19.750011444091797

Token 438: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.674858301877975e-05
    2. 'strip' → logprob: -9.250096321105957
    3. 'rstrip' → logprob: -14.875096321105957
    4. 'spl' → logprob: -16.125097274780273
    5. 'read' → logprob: -16.375097274780273
    6. ' split' → logprob: -16.875097274780273
    7. '(split' → logprob: -17.125097274780273
    8. '_split' → logprob: -21.000097274780273
    9. 's' → logprob: -21.250097274780273
    10. '.split' → logprob: -21.500097274780273

Token 439: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08087203651666641
    2. ')' → logprob: -3.330872058868408
    3. '()' → logprob: -3.330872058868408
    4. '(' → logprob: -5.205872058868408
    5. '('' → logprob: -7.705872058868408
    6. '(','' → logprob: -8.70587158203125
    7. '(),' → logprob: -10.95587158203125
    8. '(',' → logprob: -11.83087158203125
    9. '("' → logprob: -12.08087158203125
    10. '().' → logprob: -12.20587158203125

Token 440: 'factor' (ID: 73174)
  Prédit: 'fs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.22333800792694092
    2. 'factor' → logprob: -2.3483381271362305
    3. 'fact' → logprob: -2.3483381271362305
    4. 'fac' → logprob: -5.5983381271362305
    5. 'f' → logprob: -6.0983381271362305
    6. 'sys' → logprob: -6.3483381271362305
    7. 'system' → logprob: -7.3483381271362305
    8. 'mod' → logprob: -8.59833812713623
    9. 'FS' → logprob: -9.22333812713623
    10. 'facts' → logprob: -9.47333812713623

Token 441: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.003405732335522771
    2. 'al' → logprob: -6.003405570983887
    3. '_const' → logprob: -7.878405570983887
    4. '_system' → logprob: -7.878405570983887
    5. '_factor' → logprob: -9.378405570983887
    6. 'ialize' → logprob: -10.378405570983887
    7. '_sys' → logprob: -10.878405570983887
    8. 'system' → logprob: -11.628405570983887
    9. 'sys' → logprob: -11.878405570983887
    10. 'ials' → logprob: -11.878405570983887

Token 442: '_helper' (ID: 26744)
  Prédit: '_system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_system' → logprob: -0.010591329075396061
    2. '_sys' → logprob: -5.135591506958008
    3. ' =' → logprob: -5.635591506958008
    4. 'system' → logprob: -8.010591506958008
    5. 's' → logprob: -8.135591506958008
    6. '=' → logprob: -8.885591506958008
    7. 'sys' → logprob: -8.885591506958008
    8. 'System' → logprob: -8.885591506958008
    9. '_calc' → logprob: -11.635591506958008
    10. '_factor' → logprob: -11.760591506958008

Token 443: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324722334742546
    2. '=' → logprob: -3.773247241973877
    3. 'Factor' → logprob: -14.398246765136719
    4. 'factor' → logprob: -14.523246765136719
    5. '_factor' → logprob: -14.898246765136719
    6. 's' → logprob: -15.773246765136719
    7. '=f' → logprob: -16.39824676513672
    8. ' ' → logprob: -16.52324676513672
    9. ' =
' → logprob: -16.77324676513672
    10. '  ' → logprob: -18.02324676513672

Token 444: ' Factor' (ID: 63743)
  Prédit: 'Factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factor' → logprob: -0.0019293478690087795
    2. ' Factor' → logprob: -6.25192928314209
    3. 'Fact' → logprob: -14.25192928314209
    4. 'Factory' → logprob: -17.126930236816406
    5. '_factor' → logprob: -18.251930236816406
    6. 'factor' → logprob: -18.501930236816406
    7. ' factorial' → logprob: -19.001930236816406
    8. ' ' → logprob: -19.501930236816406
    9. '```' → logprob: -20.751930236816406
    10. '   ' → logprob: -20.876930236816406

Token 445: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.5759536027908325
    2. 'ial' → logprob: -0.8259536027908325
    3. 'System' → logprob: -12.075953483581543
    4. 'orial' → logprob: -13.075953483581543
    5. 'onal' → logprob: -13.450953483581543
    6. 'ional' → logprob: -13.700953483581543
    7. 'Factor' → logprob: -14.200953483581543
    8. 'Al' → logprob: -14.700953483581543
    9. 'o' → logprob: -14.825953483581543
    10. 'ical' → logprob: -15.200953483581543

Token 446: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: 0.0
    2. '_system' → logprob: -17.75
    3. '_System' → logprob: -18.375
    4. 'Sys' → logprob: -19.125
    5. 'Systems' → logprob: -19.375
    6. ' System' → logprob: -19.375
    7. 'system' → logprob: -20.0
    8. '<System' → logprob: -20.25
    9. '_SYSTEM' → logprob: -22.125
    10. 'S' → logprob: -22.5

Token 447: 'atic' (ID: 2351)
  Prédit: 'System'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -0.018444662913680077
    2. 'atic' → logprob: -4.018444538116455
    3. 'system' → logprob: -8.643445014953613
    4. 'istic' → logprob: -10.143445014953613
    5. 'ic' → logprob: -10.518445014953613
    6. 'ical' → logprob: -10.893445014953613
    7. 'ary' → logprob: -11.143445014953613
    8. '_system' → logprob: -11.518445014953613
    9. 'matic' → logprob: -13.268445014953613
    10. 'ystem' → logprob: -13.643445014953613

Token 448: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00875567365437746
    2. '(' → logprob: -4.758755683898926
    3. '(max' → logprob: -8.883755683898926
    4. '(
' → logprob: -13.758755683898926
    5. '(MAX' → logprob: -14.258755683898926
    6. 'input' → logprob: -15.258755683898926
    7. '(M' → logprob: -15.633755683898926
    8. '(n' → logprob: -16.00875473022461
    9. '((' → logprob: -16.50875473022461
    10. '(min' → logprob: -17.00875473022461

Token 449: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -2.546478935983032e-05
    2. '_k' → logprob: -10.625025749206543
    3. '_a' → logprob: -13.875025749206543
    4. 'n' → logprob: -16.750024795532227
    5. '_' → logprob: -17.625024795532227
    6. '_max' → logprob: -18.000024795532227
    7. '_b' → logprob: -18.500024795532227
    8. '_i' → logprob: -18.625024795532227
    9. '```' → logprob: -19.125024795532227
    10. '\' → logprob: -19.250024795532227

Token 450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.383526149671525e-05
    2. ' ,' → logprob: -10.375053405761719
    3. '+' → logprob: -11.250053405761719
    4. ')' → logprob: -12.375053405761719
    5. ' +' → logprob: -12.500053405761719
    6. '*' → logprob: -14.750053405761719
    7. ',input' → logprob: -15.250053405761719
    8. '   ' → logprob: -15.375053405761719
    9. ' *' → logprob: -15.875053405761719
    10. '  ' → logprob: -16.00005340576172

Token 451: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.01830562949180603
    2. ' MOD' → logprob: -4.018305778503418
    3. '998' → logprob: -8.768305778503418
    4. ' ' → logprob: -16.8933048248291
    5. '_MOD' → logprob: -17.7683048248291
    6. 'MO' → logprob: -17.8933048248291
    7. '.MOD' → logprob: -18.8933048248291
    8. 'M' → logprob: -19.2683048248291
    9. 'Mod' → logprob: -19.5183048248291
    10. 'mod' → logprob: -19.5183048248291

Token 452: '_CONST' (ID: 91635)
  Prédit: '_CONST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONST' → logprob: -2.2200749754119897e-06
    2. 'CONST' → logprob: -13.125001907348633
    3. 'const' → logprob: -16.375001907348633
    4. '_CONSTANT' → logprob: -16.875001907348633
    5. '_MOD' → logprob: -18.375001907348633
    6. '_const' → logprob: -18.500001907348633
    7. 'Const' → logprob: -19.500001907348633
    8. ' const' → logprob: -19.875001907348633
    9. ' CONST' → logprob: -19.875001907348633
    10. '_CON' → logprob: -20.250001907348633

Token 453: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.895480277715251e-06
    2. ')
' → logprob: -11.750008583068848
    3. ')

' → logprob: -14.125008583068848
    4. ' )' → logprob: -15.500008583068848
    5. '),' → logprob: -18.750009536743164
    6. '))' → logprob: -19.250009536743164
    7. ');' → logprob: -19.500009536743164
    8. 'input' → logprob: -19.500009536743164
    9. '<|end|>' → logprob: -19.625009536743164
    10. ').' → logprob: -19.750009536743164

Token 454: 'count' (ID: 5420)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.15330959856510162
    2. 'answer' → logprob: -2.1533095836639404
    3. 'total' → logprob: -5.0283098220825195
    4. 'current' → logprob: -5.1533098220825195
    5. 'dp' → logprob: -5.1533098220825195
    6. 'ans' → logprob: -5.4033098220825195
    7. 'count' → logprob: -6.6533098220825195
    8. 'output' → logprob: -7.1533098220825195
    9. 'sum' → logprob: -7.6533098220825195
    10. 'res' → logprob: -7.6533098220825195

Token 455: '_ans' (ID: 146254)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7300704717636108
    2. 's' → logprob: -1.3550704717636108
    3. '_result' → logprob: -1.7300704717636108
    4. '_sum' → logprob: -3.3550705909729004
    5. ' =' → logprob: -3.8550705909729004
    6. 'ing' → logprob: -5.2300705909729
    7. '_val' → logprob: -5.4800705909729
    8. '=' → logprob: -5.6050705909729
    9. '_ans' → logprob: -5.7300705909729
    10. 'er' → logprob: -5.9800705909729

Token 456: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47665995359420776
    2. ' =' → logprob: -0.9766599535942078
    3. 's' → logprob: -6.101659774780273
    4. '_' → logprob: -8.101659774780273
    5. 'er' → logprob: -10.976659774780273
    6. '_=' → logprob: -11.101659774780273
    7. ' ' → logprob: -13.851659774780273
    8. '  ' → logprob: -13.976659774780273
    9. '_total' → logprob: -14.476659774780273
    10. ')' → logprob: -15.226659774780273

Token 457: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022730084601789713
    2. ' ' → logprob: -6.127273082733154
    3. '1' → logprob: -9.377272605895996
    4. 'factor' → logprob: -14.252272605895996
    5. 'pow' → logprob: -15.002272605895996
    6. '[' → logprob: -15.127272605895996
    7. '(' → logprob: -15.377272605895996
    8. 'fact' → logprob: -15.814772605895996
    9. '[]' → logprob: -15.939772605895996
    10. '   ' → logprob: -16.064773559570312

Token 458: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.00000286102295
    3. '[' → logprob: -15.87500286102295
    4. 'factor' → logprob: -16.250001907348633
    5. '(' → logprob: -16.375001907348633
    6. '1' → logprob: -16.625001907348633
    7. '
' → logprob: -17.750001907348633
    8. 'fact' → logprob: -18.250001907348633
    9. 'sum' → logprob: -18.312501907348633
    10. '```' → logprob: -18.312501907348633

Token 459: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01253354549407959
    2. ' for' → logprob: -4.387533664703369
    3. '
' → logprob: -11.137533187866211
    4. 'factor' → logprob: -13.012533187866211
    5. 'i' → logprob: -13.262533187866211
    6. '+' → logprob: -13.387533187866211
    7. 'count' → logprob: -14.137533187866211
    8. 'a' → logprob: -14.262533187866211
    9. ' 
' → logprob: -14.762533187866211
    10. 'f' → logprob: -14.887533187866211

Token 460: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011706985533237457
    2. ' for' → logprob: -6.751170635223389
    3. 'i' → logprob: -16.001171112060547
    4. 'f' → logprob: -16.126171112060547
    5. '
' → logprob: -16.626171112060547
    6. 'count' → logprob: -16.876171112060547
    7. 'factor' → logprob: -17.001171112060547
    8. ')' → logprob: -17.251171112060547
    9. 'a' → logprob: -18.376171112060547
    10. '	for' → logprob: -18.626171112060547

Token 461: ' p' (ID: 275)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1285310983657837
    2. ' i' → logprob: -3.128530979156494
    3. 'x' → logprob: -3.378530979156494
    4. 'a' → logprob: -4.003530979156494
    5. 'diff' → logprob: -6.378530979156494
    6. 'num' → logprob: -6.503530979156494
    7. 'k' → logprob: -6.628530979156494
    8. ' x' → logprob: -6.753530979156494
    9. 'value' → logprob: -6.753530979156494
    10. 'd' → logprob: -6.753530979156494

Token 462: '_val' (ID: 13694)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03390408679842949
    2. 'in' → logprob: -3.5339040756225586
    3. '_' → logprob: -6.033904075622559
    4. 'i' → logprob: -7.658904075622559
    5. ' i' → logprob: -7.908904075622559
    6. '_i' → logprob: -8.658904075622559
    7. 'r' → logprob: -8.783904075622559
    8. 'er' → logprob: -8.783904075622559
    9. ' ' → logprob: -9.033904075622559
    10. '_in' → logprob: -9.658904075622559

Token 463: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029825929552316666
    2. 'in' → logprob: -3.5298259258270264
    3. 'range' → logprob: -10.404826164245605
    4. 'p' → logprob: -10.904826164245605
    5. ' ' → logprob: -11.404826164245605
    6. ',' → logprob: -12.154826164245605
    7. 'n' → logprob: -13.279826164245605
    8. '1' → logprob: -13.404826164245605
    9. 'a' → logprob: -13.529826164245605
    10. '0' → logprob: -13.904826164245605

Token 464: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '0' → logprob: -18.75009536743164
    4. ' ' → logprob: -18.75009536743164
    5. '
' → logprob: -18.87509536743164
    6. '(range' → logprob: -19.12509536743164
    7. '   ' → logprob: -19.75009536743164
    8. '	range' → logprob: -20.00009536743164
    9. '

' → logprob: -20.25009536743164
    10. 'r' → logprob: -20.25009536743164

Token 465: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -7.755678961984813e-05
    2. '(' → logprob: -9.500077247619629
    3. 'input' → logprob: -13.000077247619629
    4. '(max' → logprob: -15.875077247619629
    5. '(min' → logprob: -16.500078201293945
    6. '((' → logprob: -16.875078201293945
    7. '0' → logprob: -17.625078201293945
    8. '(len' → logprob: -18.375078201293945
    9. ',input' → logprob: -18.625078201293945
    10. '=input' → logprob: -18.750078201293945

Token 466: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.004344786982983351
    2. 'k' → logprob: -6.254344940185547
    3. '0' → logprob: -6.379344940185547
    4. '_b' → logprob: -7.629344940185547
    5. '_a' → logprob: -8.754344940185547
    6. ' ' → logprob: -10.129344940185547
    7. '(k' → logprob: -11.879344940185547
    8. '_n' → logprob: -12.379344940185547
    9. 'b' → logprob: -12.504344940185547
    10. 'a' → logprob: -13.004344940185547

Token 467: ' //' (ID: 602)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2014143168926239
    2. ' +' → logprob: -1.7014143466949463
    3. ' ' → logprob: -14.701414108276367
    4. ',' → logprob: -14.701414108276367
    5. '   ' → logprob: -15.951414108276367
    6. '
' → logprob: -16.451414108276367
    7. '//' → logprob: -18.576414108276367
    8. '	' → logprob: -18.701414108276367
    9. '＋' → logprob: -18.826414108276367
    10. '

' → logprob: -18.951414108276367

Token 468: ' input' (ID: 3422)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6826968789100647
    2. 'input' → logprob: -1.68269681930542
    3. '2' → logprob: -1.93269681930542
    4. '(input' → logprob: -1.93269681930542
    5. 'p' → logprob: -5.05769681930542
    6. '(min' → logprob: -5.55769681930542
    7. '(' → logprob: -5.68269681930542
    8. '(p' → logprob: -5.93269681930542
    9. 'min' → logprob: -7.18269681930542
    10. '1' → logprob: -7.18269681930542

Token 469: '_a' (ID: 10852)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4529711902141571
    2. '_a' → logprob: -1.0779712200164795
    3. '_b' → logprob: -4.4529709815979
    4. '1' → logprob: -5.0779709815979
    5. 'b' → logprob: -5.5779709815979
    6. '_n' → logprob: -6.9529709815979
    7. '2' → logprob: -7.0779709815979
    8. 'p' → logprob: -8.702971458435059
    9. 'n' → logprob: -9.577971458435059
    10. 'input' → logprob: -9.702971458435059

Token 470: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759431719779968
    2. ' +' → logprob: -0.8259431719779968
    3. ',' → logprob: -13.075942993164062
    4. ' +
' → logprob: -14.575942993164062
    5. '+
' → logprob: -14.700942993164062
    6. ' ' → logprob: -14.950942993164062
    7. ' plus' → logprob: -15.950942993164062
    8. ')' → logprob: -16.450942993164062
    9. '＋' → logprob: -16.700942993164062
    10. 'import' → logprob: -16.950942993164062

Token 471: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '2' → logprob: -17.500059127807617
    4. '   ' → logprob: -18.250059127807617
    5. '
' → logprob: -18.875059127807617
    6. '(' → logprob: -20.250059127807617
    7. '１' → logprob: -20.250059127807617
    8. '  ' → logprob: -20.500059127807617
    9. '```' → logprob: -20.625059127807617
    10. '

' → logprob: -20.750059127807617

Token 472: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.875019073486328
    4. '
' → logprob: -18.875019073486328
    5. '2' → logprob: -19.000019073486328
    6. '  ' → logprob: -19.625019073486328
    7. '１' → logprob: -20.125019073486328
    8. '

' → logprob: -20.625019073486328
    9. '    ' → logprob: -20.625019073486328
    10. '     ' → logprob: -21.562519073486328

Token 473: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014506638050079346
    2. '):
' → logprob: -4.389506816864014
    3. ':' → logprob: -6.264506816864014
    4. '():' → logprob: -9.639506340026855
    5. ' ):' → logprob: -11.514506340026855
    6. '   ' → logprob: -11.764506340026855
    7. '):
' → logprob: -12.764506340026855
    8. ')' → logprob: -13.014506340026855
    9. '():
' → logprob: -13.639506340026855
    10. ':
' → logprob: -14.264506340026855

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019581448286771774
    2. 'q' → logprob: -4.144581317901611
    3. ' q' → logprob: -6.019581317901611
    4. '	q' → logprob: -8.14458179473877
    5. ':' → logprob: -8.26958179473877
    6. ':
' → logprob: -8.64458179473877
    7. ' ' → logprob: -9.14458179473877
    8. '       ' → logprob: -9.89458179473877
    9. '    
' → logprob: -10.01958179473877
    10. '  ' → logprob: -10.39458179473877

Token 475: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.04104495793581009
    2. 'rem' → logprob: -4.041045188903809
    3. 'remain' → logprob: -4.416045188903809
    4. 'rest' → logprob: -5.666045188903809
    5. 'remaining' → logprob: -5.916045188903809
    6. 'if' → logprob: -7.541045188903809
    7. 'r' → logprob: -7.666045188903809
    8. 're' → logprob: -7.666045188903809
    9. '   ' → logprob: -7.916045188903809
    10. 'x' → logprob: -8.291045188903809

Token 476: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.019927402958273888
    2. ' =' → logprob: -4.519927501678467
    3. '_' → logprob: -5.269927501678467
    4. '=' → logprob: -5.644927501678467
    5. '_=' → logprob: -9.769927024841309
    6. ' _' → logprob: -10.019927024841309
    7. '_VAL' → logprob: -11.519927024841309
    8. 'val' → logprob: -11.519927024841309
    9. ' ' → logprob: -12.019927024841309
    10. '_space' → logprob: -12.394927024841309

Token 477: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023247109726071358
    2. ' =' → logprob: -3.773247003555298
    3. '=int' → logprob: -14.273246765136719
    4. '=
' → logprob: -15.398246765136719
    5. ',' → logprob: -15.523246765136719
    6. '=input' → logprob: -15.773246765136719
    7. '＝' → logprob: -15.773246765136719
    8. ')' → logprob: -16.14824676513672
    9. ' ' → logprob: -17.39824676513672
    10. '=}' → logprob: -17.39824676513672

Token 478: ' remainder' (ID: 47056)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11437948048114777
    2. ' r' → logprob: -2.989379405975342
    3. 'rem' → logprob: -4.114379405975342
    4. 'rest' → logprob: -4.614379405975342
    5. '=' → logprob: -4.989379405975342
    6. ' =' → logprob: -5.114379405975342
    7. 'remain' → logprob: -5.239379405975342
    8. ' rest' → logprob: -5.489379405975342
    9. ' rem' → logprob: -5.739379405975342
    10. ' remainder' → logprob: -6.114379405975342

Token 479: '_val' (ID: 13694)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759764313697815
    2. '=' → logprob: -0.8259764313697815
    3. ',' → logprob: -10.325976371765137
    4. ' ' → logprob: -13.950976371765137
    5. '＝' → logprob: -14.575976371765137
    6. '=
' → logprob: -14.700976371765137
    7. '```' → logprob: -14.950976371765137
    8. '<|end|>' → logprob: -14.950976371765137
    9. '    ' → logprob: -15.575976371765137
    10. ' =
' → logprob: -15.700976371765137

Token 480: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269364058971405
    2. ' =' → logprob: -2.126936435699463
    3. '=input' → logprob: -12.501935958862305
    4. ',' → logprob: -12.751935958862305
    5. '＝' → logprob: -14.876935958862305
    6. '=int' → logprob: -15.126935958862305
    7. '=p' → logprob: -15.501935958862305
    8. '=
' → logprob: -15.876935958862305
    9. ' ' → logprob: -16.751935958862305
    10. '=q' → logprob: -16.876935958862305

Token 481: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -3.082895273109898e-05
    2. ' div' → logprob: -10.500030517578125
    3. '(div' → logprob: -12.875030517578125
    4. '   ' → logprob: -14.500030517578125
    5. '
' → logprob: -16.375030517578125
    6. 'input' → logprob: -16.750030517578125
    7. '	div' → logprob: -18.250030517578125
    8. '_div' → logprob: -19.125030517578125
    9. '    ' → logprob: -19.375030517578125
    10. '    
' → logprob: -19.375030517578125

Token 482: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.001976215047761798
    2. '(input' → logprob: -6.251976013183594
    3. 'input' → logprob: -10.001976013183594
    4. 'rem' → logprob: -14.501976013183594
    5. 'div' → logprob: -14.876976013183594
    6. 'MOD' → logprob: -15.126976013183594
    7. ',input' → logprob: -15.501976013183594
    8. 'mods' → logprob: -15.876976013183594
    9. 'Mod' → logprob: -16.001976013183594
    10. '=input' → logprob: -16.251976013183594

Token 483: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0031954164151102304
    2. 'input' → logprob: -5.753195285797119
    3. '(
' → logprob: -11.878195762634277
    4. '(' → logprob: -12.753195762634277
    5. '[input' → logprob: -13.003195762634277
    6. ' input' → logprob: -13.128195762634277
    7. '=input' → logprob: -13.503195762634277
    8. '<input' → logprob: -14.128195762634277
    9. ',input' → logprob: -14.503195762634277
    10. '((' → logprob: -15.003195762634277

Token 484: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.0007372042746283114
    2. 'k' → logprob: -7.250737190246582
    3. '(k' → logprob: -12.250737190246582
    4. '_n' → logprob: -12.500737190246582
    5. '_q' → logprob: -12.750737190246582
    6. '```' → logprob: -13.250737190246582
    7. '
' → logprob: -13.250737190246582
    8. '(' → logprob: -13.625737190246582
    9. '(p' → logprob: -13.750737190246582
    10. '_b' → logprob: -14.000737190246582

Token 485: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23984238505363464
    2. ',' → logprob: -2.239842414855957
    3. ' -' → logprob: -2.489842414855957
    4. '-p' → logprob: -4.614842414855957
    5. '(p' → logprob: -5.989842414855957
    6. ' ,' → logprob: -5.989842414855957
    7. '   ' → logprob: -5.989842414855957
    8. ',p' → logprob: -6.489842414855957
    9. ' p' → logprob: -6.864842414855957
    10. 'p' → logprob: -6.864842414855957

Token 486: ' p' (ID: 275)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5791873335838318
    2. 'p' → logprob: -0.8291873335838318
    3. 'a' → logprob: -5.954187393188477
    4. ' input' → logprob: -7.954187393188477
    5. ' p' → logprob: -8.204187393188477
    6. '(input' → logprob: -11.579187393188477
    7. '   ' → logprob: -11.954187393188477
    8. 'q' → logprob: -12.329187393188477
    9. ' a' → logprob: -13.704187393188477
    10. '[input' → logprob: -15.079187393188477

Token 487: '_val' (ID: 13694)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.10344383865594864
    2. '_val' → logprob: -2.6034438610076904
    3. 'a' → logprob: -4.228443622589111
    4. '_b' → logprob: -4.728443622589111
    5. 'val' → logprob: -7.978443622589111
    6. 'b' → logprob: -7.978443622589111
    7. '_' → logprob: -9.35344409942627
    8. 'input' → logprob: -9.97844409942627
    9. '_input' → logprob: -11.97844409942627
    10. ')' → logprob: -12.10344409942627

Token 488: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.32844170928001404
    2. '(input' → logprob: -1.9534417390823364
    3. ',input' → logprob: -2.828441619873047
    4. ',' → logprob: -3.078441619873047
    5. ' *' → logprob: -4.453441619873047
    6. 'input' → logprob: -4.578441619873047
    7. '*,' → logprob: -5.453441619873047
    8. '[input' → logprob: -6.078441619873047
    9. '*b' → logprob: -6.203441619873047
    10. 'b' → logprob: -6.828441619873047

Token 489: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -7.584239938296378e-06
    2. ' input' → logprob: -11.875007629394531
    3. 'a' → logprob: -15.500007629394531
    4. '=input' → logprob: -15.500007629394531
    5. '<input' → logprob: -17.12500762939453
    6. '[input' → logprob: -17.50000762939453
    7. '(input' → logprob: -17.62500762939453
    8. ' ' → logprob: -17.62500762939453
    9. '   ' → logprob: -17.75000762939453
    10. ',input' → logprob: -18.75000762939453

Token 490: '_a' (ID: 10852)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.6003938317298889
    2. '_a' → logprob: -0.8503938317298889
    3. 'a' → logprob: -3.975393772125244
    4. 'b' → logprob: -5.225393772125244
    5. '```' → logprob: -13.100394248962402
    6. '_' → logprob: -13.600394248962402
    7. '	a' → logprob: -14.350394248962402
    8. '	b' → logprob: -14.475394248962402
    9. ' a' → logprob: -14.475394248962402
    10. '#a' → logprob: -14.725394248962402

Token 491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014463171362876892
    2. ',input' → logprob: -4.264462947845459
    3. ' ,' → logprob: -8.264463424682617
    4. ',
' → logprob: -11.139463424682617
    5. ',b' → logprob: -11.514463424682617
    6. 'input' → logprob: -11.639463424682617
    7. ',p' → logprob: -11.889463424682617
    8. ',q' → logprob: -14.514463424682617
    9. ')' → logprob: -15.264463424682617
    10. 'b' → logprob: -15.389463424682617

Token 492: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00012582694762386382
    2. ' input' → logprob: -9.000125885009766
    3. 'b' → logprob: -13.000125885009766
    4. '   ' → logprob: -16.125125885009766
    5. '[input' → logprob: -18.375125885009766
    6. '<input' → logprob: -18.500125885009766
    7. '=input' → logprob: -18.500125885009766
    8. '	input' → logprob: -18.625125885009766
    9. '
' → logprob: -18.750125885009766
    10. 'int' → logprob: -19.375125885009766

Token 493: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.9027791495318525e-05
    2. 'b' → logprob: -10.875019073486328
    3. '
' → logprob: -18.625019073486328
    4. '```' → logprob: -19.625019073486328
    5. '_' → logprob: -20.750019073486328
    6. '	b' → logprob: -20.875019073486328
    7. '_B' → logprob: -21.250019073486328
    8. ''b' → logprob: -21.500019073486328
    9. '

' → logprob: -21.625019073486328
    10. '_q' → logprob: -21.875019073486328

Token 494: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004078997299075127
    2. ')
' → logprob: -5.5040788650512695
    3. ')

' → logprob: -15.00407886505127
    4. ')return' → logprob: -16.129079818725586
    5. ')
' → logprob: -16.879079818725586
    6. ' )' → logprob: -17.379079818725586
    7. '   ' → logprob: -17.504079818725586
    8. '<|end|>' → logprob: -17.504079818725586
    9. '),' → logprob: -18.004079818725586
    10. ')#' → logprob: -18.629079818725586

Token 495: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00034356804098933935
    2. 'if' → logprob: -8.000343322753906
    3. ' if' → logprob: -11.875343322753906
    4. '    
' → logprob: -15.000343322753906
    5. '
' → logprob: -15.125343322753906
    6. '<|end|>' → logprob: -15.625343322753906
    7. ',' → logprob: -15.750343322753906
    8. 'for' → logprob: -16.500343322753906
    9. '  ' → logprob: -16.750343322753906
    10. '   ' → logprob: -17.750343322753906

Token 496: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03187471628189087
    2. ' if' → logprob: -3.531874656677246
    3. '   ' → logprob: -6.156874656677246
    4. ' ' → logprob: -14.406874656677246
    5. ' 
' → logprob: -14.406874656677246
    6. '```' → logprob: -14.406874656677246
    7. 'for' → logprob: -14.781874656677246
    8. '	if' → logprob: -14.906874656677246
    9. '
' → logprob: -15.281874656677246
    10. '    
' → logprob: -15.406874656677246

Token 497: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.007233412936329842
    2. ' remainder' → logprob: -5.257233619689941
    3. '0' → logprob: -6.257233619689941
    4. 'q' → logprob: -10.382233619689941
    5. ' ' → logprob: -11.007233619689941
    6. '   ' → logprob: -11.382233619689941
    7. 'not' → logprob: -11.757233619689941
    8. 'rem' → logprob: -12.382233619689941
    9. 'rema' → logprob: -13.007233619689941
    10. '(re' → logprob: -13.632233619689941

Token 498: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.500000953674316
    3. 'Val' → logprob: -15.625000953674316
    4. 'val' → logprob: -16.625
    5. '_VAL' → logprob: -17.625
    6. '==' → logprob: -17.75
    7. '_va' → logprob: -18.25
    8. '_v' → logprob: -19.625
    9. '_var' → logprob: -19.625
    10. '__' → logprob: -20.0

Token 499: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.05911729857325554
    2. '==' → logprob: -3.559117317199707
    3. ' !=' → logprob: -3.559117317199707
    4. ' ==' → logprob: -7.934117317199707
    5. '=' → logprob: -9.809117317199707
    6. ':' → logprob: -9.809117317199707
    7. '>' → logprob: -12.934117317199707
    8. ')!=' → logprob: -13.684117317199707
    9. '!='' → logprob: -13.934117317199707
    10. '!==' → logprob: -13.934117317199707

Token 500: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '
' → logprob: -22.750036239624023
    4. '۰' → logprob: -22.750036239624023
    5. ' ' → logprob: -23.125036239624023
    6. '=' → logprob: -23.250036239624023
    7. '```' → logprob: -23.375036239624023
    8. '00' → logprob: -23.375036239624023
    9. ')' → logprob: -23.750036239624023
    10. '  ' → logprob: -24.000036239624023

Token 501: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -21.500003814697266
    4. '```' → logprob: -22.375003814697266
    5. '00' → logprob: -22.500003814697266
    6. ' ' → logprob: -22.875003814697266
    7. '  ' → logprob: -23.000003814697266
    8. '
' → logprob: -23.125003814697266
    9. ')' → logprob: -23.250003814697266
    10. '<|end|>' → logprob: -23.375003814697266

Token 502: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05606541782617569
    2. '       ' → logprob: -2.931065320968628
    3. ':
' → logprob: -7.056065559387207
    4. '   ' → logprob: -8.931065559387207
    5. ' or' → logprob: -8.931065559387207
    6. ' continue' → logprob: -10.806065559387207
    7. 'continue' → logprob: -11.431065559387207
    8. '	continue' → logprob: -11.681065559387207
    9. '           ' → logprob: -12.556065559387207
    10. ':return' → logprob: -12.556065559387207

Token 503: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005588700296357274
    2. 'continue' → logprob: -7.750558853149414
    3. ' continue' → logprob: -9.250558853149414
    4. '	continue' → logprob: -11.000558853149414
    5. '   ' → logprob: -11.250558853149414
    6. '	' → logprob: -14.250558853149414
    7. '_continue' → logprob: -14.750558853149414
    8. '           ' → logprob: -15.250558853149414
    9. ',' → logprob: -15.250558853149414
    10. '	   ' → logprob: -15.375558853149414

Token 504: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.15176008641719818
    2. '       ' → logprob: -2.1517601013183594
    3. ' continue' → logprob: -3.9017601013183594
    4. '   ' → logprob: -5.651760101318359
    5. '	continue' → logprob: -7.651760101318359
    6. '           ' → logprob: -8.02676010131836
    7. '_continue' → logprob: -12.77676010131836
    8. '```' → logprob: -13.90176010131836
    9. 'contin' → logprob: -14.02676010131836
    10. '
' → logprob: -14.02676010131836

Token 505: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001514504081569612
    2. 'count' → logprob: -6.876514434814453
    3. '    
' → logprob: -8.501514434814453
    4. '
' → logprob: -8.876514434814453
    5. ' count' → logprob: -9.376514434814453
    6. 'if' → logprob: -10.126514434814453
    7. ' if' → logprob: -12.751514434814453
    8. '```' → logprob: -13.251514434814453
    9. '  
' → logprob: -13.501514434814453
    10. '	count' → logprob: -13.626514434814453

Token 506: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025735176168382168
    2. 'count' → logprob: -6.002573490142822
    3. '    
' → logprob: -10.00257396697998
    4. ' count' → logprob: -10.75257396697998
    5. 'if' → logprob: -11.00257396697998
    6. '
' → logprob: -11.25257396697998
    7. '```' → logprob: -14.62757396697998
    8. ' if' → logprob: -15.75257396697998
    9. '[count' → logprob: -15.87757396697998
    10. '	count' → logprob: -15.87757396697998

Token 507: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.25613558292388916
    2. 'if' → logprob: -1.5061355829238892
    3. '   ' → logprob: -5.5061354637146
    4. ' if' → logprob: -9.756135940551758
    5. ' count' → logprob: -10.381135940551758
    6. '    
' → logprob: -10.631135940551758
    7. '
' → logprob: -12.256135940551758
    8. '```' → logprob: -12.506135940551758
    9. 'temp' → logprob: -13.256135940551758
    10. 'for' → logprob: -13.256135940551758

Token 508: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -4.320199877838604e-07
    2. '_val' → logprob: -15.875
    3. '_answer' → logprob: -16.25
    4. 'Ans' → logprob: -16.75
    5. 'ans' → logprob: -17.0
    6. '_answers' → logprob: -17.0
    7. '_' → logprob: -17.875
    8. '_an' → logprob: -17.875
    9. '\' → logprob: -18.875
    10. '	ans' → logprob: -19.0

Token 509: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20151010155677795
    2. '+=' → logprob: -1.7015100717544556
    3. '=' → logprob: -9.451510429382324
    4. ' =' → logprob: -11.076510429382324
    5. '+' → logprob: -14.076510429382324
    6. '   ' → logprob: -14.201510429382324
    7. '+=(' → logprob: -14.451510429382324
    8. ']+=' → logprob: -14.826510429382324
    9. ' ^=' → logprob: -15.826510429382324
    10. ' ' → logprob: -16.451509475708008

Token 510: ' (' (ID: 350)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.011173728853464127
    2. ' (' → logprob: -4.511173725128174
    3. '(' → logprob: -9.386174201965332
    4. '(f' → logprob: -10.761174201965332
    5. '(cnt' → logprob: -11.636174201965332
    6. '   ' → logprob: -12.886174201965332
    7. '(max' → logprob: -13.511174201965332
    8. '(counter' → logprob: -13.761174201965332
    9. '(sum' → logprob: -14.011174201965332
    10. '(ans' → logprob: -14.261174201965332

Token 511: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -2.546478935983032e-05
    2. '(count' → logprob: -11.125025749206543
    3. ' count' → logprob: -11.500025749206543
    4. 'factor' → logprob: -15.500025749206543
    5. '   ' → logprob: -16.125024795532227
    6. '
' → logprob: -16.625024795532227
    7. '       ' → logprob: -18.250024795532227
    8. '[count' → logprob: -18.500024795532227
    9. '           ' → logprob: -18.625024795532227
    10. '.count' → logprob: -19.000024795532227

Token 512: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -1.2664456789934775e-06
    2. 'ans' → logprob: -14.000000953674316
    3. 'Ans' → logprob: -14.750000953674316
    4. '_val' → logprob: -17.250001907348633
    5. '_answer' → logprob: -17.750001907348633
    6. '	ans' → logprob: -18.625001907348633
    7. '_answers' → logprob: -20.500001907348633
    8. '+' → logprob: -20.625001907348633
    9. ' ans' → logprob: -20.625001907348633
    10. '(ans' → logprob: -21.125001907348633

Token 513: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.386911541223526
    2. '+' → logprob: -1.1369115114212036
    3. '+p' → logprob: -10.261911392211914
    4. '+c' → logprob: -13.761911392211914
    5. '+
' → logprob: -14.261911392211914
    6. ' +
' → logprob: -14.261911392211914
    7. '+self' → logprob: -14.636911392211914
    8. '＋' → logprob: -14.761911392211914
    9. ')' → logprob: -15.261911392211914
    10. '+s' → logprob: -15.386911392211914

Token 514: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.08912299573421478
    2. ' factorial' → logprob: -2.464123010635376
    3. ' factor' → logprob: -8.839122772216797
    4. 'fact' → logprob: -10.464122772216797
    5. '   ' → logprob: -12.089122772216797
    6. 'fac' → logprob: -14.089122772216797
    7. '.factor' → logprob: -14.214122772216797
    8. '_factor' → logprob: -14.214122772216797
    9. '    ' → logprob: -14.714122772216797
    10. '-factor' → logprob: -15.214122772216797

Token 515: '_helper' (ID: 26744)
  Prédit: '_helper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_helper' → logprob: -1.6166903151315637e-05
    2. 'helper' → logprob: -11.125016212463379
    3. 'Helper' → logprob: -14.125016212463379
    4. '_helpers' → logprob: -14.375016212463379
    5. '_help' → logprob: -16.500015258789062
    6. '.helper' → logprob: -17.375015258789062
    7. ' helper' → logprob: -17.750015258789062
    8. '_Helper' → logprob: -18.250015258789062
    9. '-helper' → logprob: -18.375015258789062
    10. 'factor' → logprob: -18.375015258789062

Token 516: '.com' (ID: 1136)
  Prédit: '.com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.com' → logprob: -0.000596043246332556
    2. '.per' → logprob: -8.000596046447754
    3. '.combo' → logprob: -9.000596046447754
    4. 'comb' → logprob: -9.625596046447754
    5. '.combine' → logprob: -10.375596046447754
    6. '.multi' → logprob: -11.000596046447754
    7. '.comm' → logprob: -11.875596046447754
    8. '.mult' → logprob: -12.125596046447754
    9. ' .' → logprob: -12.625596046447754
    10. ').' → logprob: -13.375596046447754

Token 517: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.896309739408025e-07
    2. '(b' → logprob: -15.000000953674316
    3. 'p' → logprob: -15.750000953674316
    4. 'bin' → logprob: -16.125
    5. 'б' → logprob: -17.0
    6. '_b' → logprob: -17.125
    7. '```' → logprob: -17.5
    8. '.b' → logprob: -17.75
    9. '[b' → logprob: -17.75
    10. '(input' → logprob: -17.875

Token 518: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -6.2729995988775045e-06
    2. 'input' → logprob: -12.125006675720215
    3. '(' → logprob: -14.750006675720215
    4. '[input' → logprob: -16.1250057220459
    5. ',input' → logprob: -16.6250057220459
    6. '(n' → logprob: -16.8750057220459
    7. '=input' → logprob: -16.8750057220459
    8. ' input' → logprob: -17.0000057220459
    9. '(
' → logprob: -17.1250057220459
    10. '<input' → logprob: -17.7500057220459

Token 519: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0066266776993870735
    2. 'n' → logprob: -5.256626605987549
    3. 'input' → logprob: -6.756626605987549
    4. '(input' → logprob: -8.631627082824707
    5. '[input' → logprob: -11.006627082824707
    6. '   ' → logprob: -11.256627082824707
    7. '_input' → logprob: -11.631627082824707
    8. '
' → logprob: -12.631627082824707
    9. '=input' → logprob: -13.006627082824707
    10. ' input' → logprob: -14.506627082824707

Token 520: ',' (ID: 11)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.47892650961875916
    2. '(input' → logprob: -0.9789265394210815
    3. '(' → logprob: -6.353926658630371
    4. ',' → logprob: -6.728926658630371
    5. 'input' → logprob: -7.103926658630371
    6. ',input' → logprob: -8.228926658630371
    7. ',p' → logprob: -8.353926658630371
    8. 'p' → logprob: -8.728926658630371
    9. '(n' → logprob: -8.978926658630371
    10. '(count' → logprob: -8.978926658630371

Token 521: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.583550642360933e-05
    2. ' p' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.750036239624023
    4. 'q' → logprob: -17.375036239624023
    5. ')' → logprob: -17.500036239624023
    6. '
' → logprob: -18.000036239624023
    7. ')p' → logprob: -18.375036239624023
    8. '	p' → logprob: -18.750036239624023
    9. '<p' → logprob: -18.875036239624023
    10. ' ' → logprob: -19.000036239624023

Token 522: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -5.908022285439074e-05
    2. 'val' → logprob: -9.750059127807617
    3. '	val' → logprob: -15.625059127807617
    4. '```' → logprob: -16.250059127807617
    5. ')' → logprob: -16.375059127807617
    6. '[val' → logprob: -17.000059127807617
    7. '_' → logprob: -17.375059127807617
    8. '_va' → logprob: -17.625059127807617
    9. '_VAL' → logprob: -17.875059127807617
    10. 'Val' → logprob: -17.875059127807617

Token 523: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00866006687283516
    2. '))' → logprob: -4.758659839630127
    3. '   ' → logprob: -10.633660316467285
    4. ')
' → logprob: -11.758660316467285
    5. ')*' → logprob: -12.133660316467285
    6. '       ' → logprob: -12.883660316467285
    7. ' )' → logprob: -13.633660316467285
    8. '```' → logprob: -14.258660316467285
    9. ' *' → logprob: -14.633660316467285
    10. ')))' → logprob: -14.883660316467285

Token 524: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00747837545350194
    2. ')' → logprob: -5.0074782371521
    3. '*' → logprob: -7.3824782371521
    4. '   ' → logprob: -9.507478713989258
    5. 'count' → logprob: -10.382478713989258
    6. '%' → logprob: -11.632478713989258
    7. '*f' → logprob: -12.632478713989258
    8. '.count' → logprob: -12.757478713989258
    9. '(count' → logprob: -12.757478713989258
    10. ' %' → logprob: -12.882478713989258

Token 525: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.0005761472275480628
    2. ' factorial' → logprob: -7.625576019287109
    3. 'fact' → logprob: -9.50057601928711
    4. '   ' → logprob: -12.50057601928711
    5. ' factor' → logprob: -13.12557601928711
    6. '           ' → logprob: -13.25057601928711
    7. '
' → logprob: -14.00057601928711
    8. 'fac' → logprob: -14.12557601928711
    9. '       ' → logprob: -14.62557601928711
    10. '  ' → logprob: -14.62557601928711

Token 526: '_helper' (ID: 26744)
  Prédit: '_helper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_helper' → logprob: -6.704273118884885e-07
    2. 'helper' → logprob: -15.125000953674316
    3. '_helpers' → logprob: -15.625000953674316
    4. '```' → logprob: -16.125
    5. '-helper' → logprob: -16.625
    6. 'val' → logprob: -17.5
    7. '_Helper' → logprob: -17.625
    8. '.helper' → logprob: -17.625
    9. '_val' → logprob: -17.875
    10. 'Helper' → logprob: -18.125

Token 527: '.com' (ID: 1136)
  Prédit: '.com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.com' → logprob: -0.0008608423522673547
    2. 'comb' → logprob: -7.125860691070557
    3. '.' → logprob: -10.250861167907715
    4. '.per' → logprob: -11.625861167907715
    5. ' .' → logprob: -13.000861167907715
    6. ' comb' → logprob: -13.125861167907715
    7. '```' → logprob: -13.125861167907715
    8. 'Comb' → logprob: -13.250861167907715
    9. '.comm' → logprob: -14.000861167907715
    10. '.combine' → logprob: -14.000861167907715

Token 528: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.1008713702030946e-06
    2. 'p' → logprob: -13.750001907348633
    3. 'б' → logprob: -14.625001907348633
    4. '(input' → logprob: -15.750001907348633
    5. 'bp' → logprob: -16.750001907348633
    6. '```' → logprob: -17.000001907348633
    7. 'bin' → logprob: -17.375001907348633
    8. '.b' → logprob: -17.375001907348633
    9. 'm' → logprob: -18.000001907348633
    10. '[input' → logprob: -18.125001907348633

Token 529: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -7.896309739408025e-07
    2. 'input' → logprob: -15.000000953674316
    3. '(' → logprob: -15.250000953674316
    4. '(
' → logprob: -15.500000953674316
    5. '[input' → logprob: -17.375
    6. ',input' → logprob: -17.5
    7. '=input' → logprob: -17.75
    8. '<input' → logprob: -18.375
    9. ' (' → logprob: -18.625
    10. '```' → logprob: -19.25

Token 530: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0018184551736339927
    2. 'n' → logprob: -6.501818656921387
    3. 'input' → logprob: -8.126818656921387
    4. '(input' → logprob: -10.876818656921387
    5. '[input' → logprob: -14.626818656921387
    6. '```' → logprob: -14.626818656921387
    7. ',input' → logprob: -15.376818656921387
    8. '=input' → logprob: -16.00181770324707
    9. 'count' → logprob: -16.37681770324707
    10. '   ' → logprob: -16.50181770324707

Token 531: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03093172423541546
    2. ',q' → logprob: -3.6559317111968994
    3. '(q' → logprob: -5.7809319496154785
    4. 'q' → logprob: -6.6559319496154785
    5. '(' → logprob: -9.65593147277832
    6. ' ,' → logprob: -9.78093147277832
    7. ',
' → logprob: -10.53093147277832
    8. '(n' → logprob: -10.90593147277832
    9. '   ' → logprob: -11.15593147277832
    10. '[q' → logprob: -11.15593147277832

Token 532: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.842555426876061e-06
    2. ' q' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.3750057220459
    4. ' ' → logprob: -20.0000057220459
    5. '	q' → logprob: -20.0000057220459
    6. '
' → logprob: -20.5000057220459
    7. '    ' → logprob: -20.7500057220459
    8. '     ' → logprob: -20.8750057220459
    9. '[q' → logprob: -20.8750057220459
    10. '       ' → logprob: -21.0000057220459

Token 533: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -2.069664333248511e-05
    2. 'val' → logprob: -10.875020980834961
    3. '```' → logprob: -14.250020980834961
    4. 'Val' → logprob: -15.125020980834961
    5. '_VAL' → logprob: -15.500020980834961
    6. '_var' → logprob: -16.37502098083496
    7. ',' → logprob: -16.50002098083496
    8. ',val' → logprob: -17.12502098083496
    9. ')' → logprob: -17.25002098083496
    10. 'q' → logprob: -17.25002098083496

Token 534: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015118853189051151
    2. '))' → logprob: -6.626512050628662
    3. ')%' → logprob: -8.626511573791504
    4. ' )' → logprob: -12.251511573791504
    5. '   ' → logprob: -14.126511573791504
    6. ')
' → logprob: -15.501511573791504
    7. '       ' → logprob: -15.751511573791504
    8. '%)' → logprob: -15.876511573791504
    9. '})' → logprob: -16.00151252746582
    10. '%' → logprob: -16.00151252746582

Token 535: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.051049187779426575
    2. '%' → logprob: -3.05104923248291
    3. ')' → logprob: -6.05104923248291
    4. ')%' → logprob: -9.92604923248291
    5. ' count' → logprob: -11.67604923248291
    6. '(count' → logprob: -11.92604923248291
    7. ' %=' → logprob: -11.92604923248291
    8. 'count' → logprob: -12.05104923248291
    9. '%c' → logprob: -12.30104923248291
    10. ' %)' → logprob: -12.30104923248291

Token 536: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -5.200166469876422e-06
    2. ' MOD' → logprob: -12.750004768371582
    3. '998' → logprob: -13.000004768371582
    4. '999' → logprob: -21.1250057220459
    5. '_MOD' → logprob: -22.1250057220459
    6. '
' → logprob: -22.3750057220459
    7. 'MO' → logprob: -22.3750057220459
    8. 'MODE' → logprob: -22.7500057220459
    9. ' ' → logprob: -23.0000057220459
    10. '.MOD' → logprob: -23.1250057220459

Token 537: '_CONST' (ID: 91635)
  Prédit: '_CONST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONST' → logprob: -5.919942486798391e-05
    2. 'CONST' → logprob: -10.000059127807617
    3. '_MOD' → logprob: -11.500059127807617
    4. 'const' → logprob: -12.750059127807617
    5. '_const' → logprob: -14.500059127807617
    6. '```' → logprob: -16.625059127807617
    7. '_CON' → logprob: -17.250059127807617
    8. '_CONSTANT' → logprob: -17.500059127807617
    9. 'Const' → logprob: -17.875059127807617
    10. '\' → logprob: -18.125059127807617

Token 538: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2664456789934775e-06
    2. '
' → logprob: -13.750000953674316
    3. ' print' → logprob: -15.875000953674316
    4. '```' → logprob: -18.875001907348633
    5. ')' → logprob: -19.625001907348633
    6. 'for' → logprob: -19.750001907348633
    7. '(print' → logprob: -20.125001907348633
    8. 'return' → logprob: -20.500001907348633
    9. 'pr' → logprob: -20.625001907348633
    10. '<|end|>' → logprob: -21.000001907348633

Token 539: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06922166049480438
    2. '<|end|>' → logprob: -2.8192217350006104
    3. 'count' → logprob: -5.819221496582031
    4. ')' → logprob: -6.569221496582031
    5. '
' → logprob: -6.819221496582031
    6. '```' → logprob: -6.944221496582031
    7. '#' → logprob: -8.194221496582031
    8. 'return' → logprob: -8.819221496582031
    9. '[count' → logprob: -9.194221496582031
    10. ' print' → logprob: -9.319221496582031

Token 540: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -1.6047699318733066e-05
    2. 'count' → logprob: -11.250016212463379
    3. '(' → logprob: -12.750016212463379
    4. '(
' → logprob: -17.875015258789062
    5. ' count' → logprob: -19.500015258789062
    6. ',count' → logprob: -20.125015258789062
    7. '<count' → logprob: -20.375015258789062
    8. '$count' → logprob: -20.500015258789062
    9. '[count' → logprob: -20.625015258789062
    10. '=count' → logprob: -20.750015258789062

Token 541: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -3.953082341467962e-05
    2. ')' → logprob: -10.500039100646973
    3. '_answer' → logprob: -12.375039100646973
    4. 'ans' → logprob: -12.625039100646973
    5. '_val' → logprob: -14.125039100646973
    6. 'Ans' → logprob: -14.250039100646973
    7. '_count' → logprob: -14.375039100646973
    8. 'count' → logprob: -14.625039100646973
    9. '_answers' → logprob: -14.750039100646973
    10. '_)' → logprob: -15.000039100646973

Token 542: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021785128861665726
    2. '<|end|>' → logprob: -3.896785020828247
    3. '```' → logprob: -6.896785259246826
    4. '
' → logprob: -8.896784782409668
    5. ' )' → logprob: -11.021784782409668
    6. '")' → logprob: -11.396784782409668
    7. ')
' → logprob: -11.521784782409668
    8. '#' → logprob: -11.521784782409668
    9. '\n' → logprob: -11.771784782409668
    10. '<|end|>' → logprob: -11.896784782409668


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 540
Tokens correctement prédits (1ère position, stricte): 275
Tokens correctement prédits (1ère position, avec adaptation): 292
Tokens correctement prédits (top 10): 485
Précision stricte (1ère position): 50.93%
Précision adaptée (1ère position): 54.07%
Précision (top 10): 89.81%
================================================================================
