================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
a = list(map(int, input().split()))
[ a.__setitem__(j, a[j]-(j+1)) for j in range(n) ]
a = sorted(a)

odd = n&1
if odd:
    acc = sum(map(lambda x: abs(x - a[n//2]), a))
else:
    acc, alt = 0, 0
    x = (a[n//2-1] + a[n//2]) >> 1
    for y in a:
        acc += abs(y - x)
        alt += abs(y - (x-1))
    acc = (acc, alt)[acc > alt]

print(acc)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'a' (ID: 64)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0034722555428743362
    2. '[a' → logprob: -6.503472328186035
    3. 'a' → logprob: -7.628472328186035
    4. '[i' → logprob: -7.878472328186035
    5. '+' → logprob: -8.253472328186035
    6. '[n' → logprob: -8.378472328186035
    7. '[:]' → logprob: -9.378472328186035
    8. '.' → logprob: -9.503472328186035
    9. '\[' → logprob: -9.503472328186035
    10. '=' → logprob: -9.628472328186035

Token 7: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.718782365322113
    2. ' []' → logprob: -0.843782365322113
    3. 'list' → logprob: -3.718782424926758
    4. ' [' → logprob: -3.718782424926758
    5. '[' → logprob: -4.593782424926758
    6. '[int' → logprob: -4.718782424926758
    7. ' list' → logprob: -4.843782424926758
    8. '[input' → logprob: -6.218782424926758
    9. 'a' → logprob: -6.718782424926758
    10. 'n' → logprob: -6.843782424926758

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003077886998653412
    2. '[' → logprob: -6.253077983856201
    3. '(range' → logprob: -8.003077507019043
    4. '```' → logprob: -8.003077507019043
    5. '[(' → logprob: -8.753077507019043
    6. ')' → logprob: -9.128077507019043
    7. '(a' → logprob: -10.128077507019043
    8. ' (' → logprob: -10.378077507019043
    9. ''s' → logprob: -10.628077507019043
    10. '`' → logprob: -10.753077507019043

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.020255954936146736
    2. '(' → logprob: -4.145256042480469
    3. '(str' → logprob: -6.770256042480469
    4. '(input' → logprob: -7.020256042480469
    5. '(lambda' → logprob: -7.145256042480469
    6. '<int' → logprob: -7.770256042480469
    7. ')' → logprob: -8.520256042480469
    8. '[int' → logprob: -8.520256042480469
    9. 'int' → logprob: -8.645256042480469
    10. '```' → logprob: -9.020256042480469

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004734257236123085
    2. '(' → logprob: -5.879734039306641
    3. '))' → logprob: -7.129734039306641
    4. ',input' → logprob: -7.379734039306641
    5. 'input' → logprob: -8.62973403930664
    6. ')' → logprob: -8.75473403930664
    7. '=input' → logprob: -9.62973403930664
    8. '[input' → logprob: -11.37973403930664
    9. '(user' → logprob: -11.75473403930664
    10. ')))' → logprob: -12.00473403930664

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006735026836395264
    2. ' input' → logprob: -5.006734848022461
    3. '(input' → logprob: -10.881734848022461
    4. ',input' → logprob: -15.131734848022461
    5. ')' → logprob: -15.506734848022461
    6. '=input' → logprob: -15.631734848022461
    7. '	input' → logprob: -16.25673484802246
    8. '<input' → logprob: -17.25673484802246
    9. '_input' → logprob: -18.00673484802246
    10. '))' → logprob: -18.00673484802246

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6957465410232544
    2. '()))' → logprob: -1.3207465410232544
    3. '())' → logprob: -1.6957465410232544
    4. '().' → logprob: -3.070746421813965
    5. ')' → logprob: -6.570746421813965
    6. '()));' → logprob: -6.695746421813965
    7. '))' → logprob: -7.820746421813965
    8. '()>' → logprob: -7.945746421813965
    9. '(' → logprob: -8.070746421813965
    10. '())))' → logprob: -8.570746421813965

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000573167169932276
    2. 'strip' → logprob: -7.50057315826416
    3. 'rstrip' → logprob: -10.87557315826416
    4. ' split' → logprob: -13.87557315826416
    5. '(split' → logprob: -15.75057315826416
    6. 'spl' → logprob: -16.500574111938477
    7. ')' → logprob: -18.375574111938477
    8. 's' → logprob: -18.500574111938477
    9. 'sp' → logprob: -19.250574111938477
    10. 'replace' → logprob: -19.875574111938477

Token 14: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.8037156462669373
    2. '()))' → logprob: -0.8037156462669373
    3. ')' → logprob: -2.928715705871582
    4. '())' → logprob: -3.178715705871582
    5. '(' → logprob: -5.178715705871582
    6. '()' → logprob: -6.053715705871582
    7. '('' → logprob: -7.303715705871582
    8. ')))' → logprob: -7.803715705871582
    9. ''))' → logprob: -8.553715705871582
    10. '())))' → logprob: -9.053715705871582

Token 15: '[' (ID: 58)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6516948342323303
    2. 's' → logprob: -1.0266947746276855
    3. 'c' → logprob: -3.2766947746276855
    4. 'for' → logprob: -3.7766947746276855
    5. 'sum' → logprob: -4.2766947746276855
    6. 'b' → logprob: -4.6516947746276855
    7. 'count' → logprob: -4.6516947746276855
    8. 'm' → logprob: -4.7766947746276855
    9. 'result' → logprob: -5.0266947746276855
    10. 'd' → logprob: -6.5266947746276855

Token 16: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11674866080284119
    2. 'i' → logprob: -2.616748571395874
    3. 'x' → logprob: -3.741748571395874
    4. 'n' → logprob: -4.616748809814453
    5. '_' → logprob: -6.491748809814453
    6. 'sum' → logprob: -7.741748809814453
    7. ']' → logprob: -7.866748809814453
    8. ' a' → logprob: -8.491748809814453
    9. '-' → logprob: -8.866748809814453
    10. '0' → logprob: -8.991748809814453

Token 17: '.__' (ID: 10210)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.36814677715301514
    2. '[' → logprob: -1.7431467771530151
    3. ')' → logprob: -2.4931468963623047
    4. ')]' → logprob: -3.7431468963623047
    5. '])' → logprob: -4.743146896362305
    6. '[i' → logprob: -5.243146896362305
    7. '.' → logprob: -5.243146896362305
    8. '])]' → logprob: -5.868146896362305
    9. ':' → logprob: -7.368146896362305
    10. ' ]' → logprob: -7.493146896362305

Token 18: 'set' (ID: 977)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.6112256646156311
    2. 'getitem' → logprob: -0.8612256646156311
    3. 'len' → logprob: -3.6112256050109863
    4. 'i' → logprob: -5.361225605010986
    5. 'get' → logprob: -7.111225605010986
    6. 'sort' → logprob: -7.611225605010986
    7. 'class' → logprob: -8.236226081848145
    8. 'copy' → logprob: -8.361226081848145
    9. 'count' → logprob: -8.486226081848145
    10. 'add' → logprob: -8.486226081848145

Token 19: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -4.847109812544659e-05
    2. 'attr' → logprob: -10.000048637390137
    3. '_item' → logprob: -13.875048637390137
    4. '__' → logprob: -14.250048637390137
    5. 'index' → logprob: -14.875048637390137
    6. '(item' → logprob: -15.375048637390137
    7. 'items' → logprob: -15.750048637390137
    8. ' item' → logprob: -16.00004768371582
    9. 'getitem' → logprob: -16.50004768371582
    10. '__(' → logprob: -16.75004768371582

Token 20: '__(' (ID: 8241)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.25218644738197327
    2. '(' → logprob: -1.5021864175796509
    3. '((' → logprob: -9.62718677520752
    4. '(index' → logprob: -9.75218677520752
    5. '(k' → logprob: -10.12718677520752
    6. '](' → logprob: -11.12718677520752
    7. '(x' → logprob: -11.25218677520752
    8. '(idx' → logprob: -11.37718677520752
    9. '(ii' → logprob: -11.50218677520752
    10. '(
' → logprob: -11.75218677520752

Token 21: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002922206884250045
    2. ' i' → logprob: -6.252922058105469
    3. '0' → logprob: -7.627922058105469
    4. ')' → logprob: -8.127922058105469
    5. '(i' → logprob: -8.877922058105469
    6. ')i' → logprob: -10.252922058105469
    7. '1' → logprob: -11.377922058105469
    8. 'j' → logprob: -12.502922058105469
    9. '(' → logprob: -12.627922058105469
    10. ',i' → logprob: -12.752922058105469

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006470463704317808
    2. ',j' → logprob: -5.131470680236816
    3. ' ,' → logprob: -8.256470680236816
    4. '+' → logprob: -9.256470680236816
    5. ',i' → logprob: -9.881470680236816
    6. ',n' → logprob: -10.006470680236816
    7. ',a' → logprob: -10.506470680236816
    8. ',k' → logprob: -11.006470680236816
    9. ',len' → logprob: -11.381470680236816
    10. 'j' → logprob: -12.631470680236816

Token 23: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2623313069343567
    2. ' a' → logprob: -1.637331247329712
    3. '0' → logprob: -3.512331247329712
    4. ' ' → logprob: -6.387331485748291
    5. ' max' → logprob: -6.387331485748291
    6. 'max' → logprob: -7.137331485748291
    7. ' n' → logprob: -7.262331485748291
    8. 'n' → logprob: -7.387331485748291
    9. ' min' → logprob: -8.762331008911133
    10. '(a' → logprob: -9.262331008911133

Token 24: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.01159060001373291
    2. 'j' → logprob: -4.886590480804443
    3. '[i' → logprob: -7.136590480804443
    4. '-' → logprob: -7.511590480804443
    5. '[' → logprob: -7.511590480804443
    6. ')' → logprob: -8.011590957641602
    7. '(j' → logprob: -8.511590957641602
    8. '[a' → logprob: -8.636590957641602
    9. '[::-' → logprob: -8.886590957641602
    10. '[n' → logprob: -9.011590957641602

Token 25: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.34239763021469116
    2. '+' → logprob: -1.717397689819336
    3. ')' → logprob: -3.342397689819336
    4. ']' → logprob: -3.592397689819336
    5. ']+' → logprob: -3.717397689819336
    6. ')+' → logprob: -4.592397689819336
    7. ' -' → logprob: -4.967397689819336
    8. '*' → logprob: -6.467397689819336
    9. ' +' → logprob: -6.967397689819336
    10. ']-' → logprob: -7.467397689819336

Token 26: '-(' (ID: 18825)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.780628502368927
    2. '-' → logprob: -0.905628502368927
    3. '*' → logprob: -2.4056284427642822
    4. ' -' → logprob: -3.7806284427642822
    5. ' +' → logprob: -4.655628681182861
    6. ' *' → logprob: -4.905628681182861
    7. ')' → logprob: -5.405628681182861
    8. ' ' → logprob: -7.405628681182861
    9. '%' → logprob: -7.530628681182861
    10. ' )' → logprob: -7.655628681182861

Token 27: 'j' (ID: 73)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6109125018119812
    2. '1' → logprob: -1.360912561416626
    3. 'i' → logprob: -2.860912561416626
    4. 'n' → logprob: -2.985912561416626
    5. '2' → logprob: -3.485912561416626
    6. 'j' → logprob: -3.860912561416626
    7. '-' → logprob: -3.985912561416626
    8. ' a' → logprob: -4.860912322998047
    9. ' ' → logprob: -5.610912322998047
    10. ' n' → logprob: -6.110912322998047

Token 28: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.025596152991056442
    2. '%' → logprob: -4.2755961418151855
    3. '-' → logprob: -5.2755961418151855
    4. ')' → logprob: -6.0255961418151855
    5. ' +' → logprob: -6.9005961418151855
    6. '>' → logprob: -7.1505961418151855
    7. '))' → logprob: -8.025596618652344
    8. '*' → logprob: -8.150596618652344
    9. '%n' → logprob: -8.400596618652344
    10. '<n' → logprob: -8.650596618652344

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026455431361682713
    2. 'n' → logprob: -9.250264167785645
    3. ' ' → logprob: -9.375264167785645
    4. '2' → logprob: -10.000264167785645
    5. ')' → logprob: -11.375264167785645
    6. ' n' → logprob: -11.875264167785645
    7. '   ' → logprob: -12.250264167785645
    8. '3' → logprob: -13.250264167785645
    9. 'a' → logprob: -13.250264167785645
    10. 'i' → logprob: -13.375264167785645

Token 30: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07049350440502167
    2. ')' → logprob: -2.695493459701538
    3. ')**' → logprob: -8.445493698120117
    4. ')))' → logprob: -9.070493698120117
    5. ' ' → logprob: -10.070493698120117
    6. ''))' → logprob: -10.070493698120117
    7. ' ))' → logprob: -10.320493698120117
    8. ')*' → logprob: -10.445493698120117
    9. '))
' → logprob: -11.070493698120117
    10. '**' → logprob: -11.445493698120117

Token 31: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2717956006526947
    2. ' for' → logprob: -1.521795630455017
    3. 'for' → logprob: -4.146795749664307
    4. ' )' → logprob: -5.771795749664307
    5. ')]' → logprob: -7.771795749664307
    6. ' ' → logprob: -9.021795272827148
    7. ' if' → logprob: -9.271795272827148
    8. ']' → logprob: -9.896795272827148
    9. '	for' → logprob: -11.771795272827148
    10. 'if' → logprob: -11.896795272827148

Token 32: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3116435110569
    2. ' j' → logprob: -1.4366434812545776
    3. 'range' → logprob: -3.561643600463867
    4. 'j' → logprob: -6.561643600463867
    5. ' ' → logprob: -9.186643600463867
    6. 'Range' → logprob: -9.686643600463867
    7. '_range' → logprob: -11.311643600463867
    8. '	range' → logprob: -11.811643600463867
    9. ' i' → logprob: -11.936643600463867
    10. ' xrange' → logprob: -12.061643600463867

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006796013563871384
    2. 'in' → logprob: -5.006795883178711
    3. ' ' → logprob: -9.756795883178711
    4. 'range' → logprob: -11.881795883178711
    5. ')' → logprob: -12.006795883178711
    6. ' range' → logprob: -12.756795883178711
    7. ',' → logprob: -12.756795883178711
    8. ' )' → logprob: -14.131795883178711
    9. '<|end|>' → logprob: -14.256795883178711
    10. '	in' → logprob: -14.881795883178711

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10020849853754044
    2. 'range' → logprob: -2.3502085208892822
    3. '	range' → logprob: -14.350208282470703
    4. '(range' → logprob: -14.725208282470703
    5. ' xrange' → logprob: -15.600208282470703
    6. ')' → logprob: -15.600208282470703
    7. 'Range' → logprob: -16.100208282470703
    8. ' ' → logprob: -16.100208282470703
    9. 'n' → logprob: -17.100208282470703
    10. '.range' → logprob: -17.100208282470703

Token 35: '(n' (ID: 2406)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.4927012026309967
    2. '(n' → logprob: -0.9927011728286743
    3. '(' → logprob: -3.992701292037964
    4. '(
' → logprob: -14.742701530456543
    5. ' (' → logprob: -14.742701530456543
    6. 'len' → logprob: -14.992701530456543
    7. '(

' → logprob: -14.992701530456543
    8. '(length' → logprob: -15.742701530456543
    9. ')' → logprob: -15.992701530456543
    10. 'n' → logprob: -16.867700576782227

Token 36: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00939738005399704
    2. ')' → logprob: -5.009397506713867
    3. ')])' → logprob: -6.009397506713867
    4. ' )' → logprob: -9.134397506713867
    5. '))' → logprob: -9.259397506713867
    6. '])]' → logprob: -12.509397506713867
    7. '])' → logprob: -12.634397506713867
    8. '):' → logprob: -13.134397506713867
    9. ')],' → logprob: -13.259397506713867
    10. ']' → logprob: -13.509397506713867

Token 37: ' ]
' (ID: 10213)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.10543020814657211
    2. ')' → logprob: -2.3554301261901855
    3. ']' → logprob: -5.3554301261901855
    4. '])' → logprob: -8.230430603027344
    5. ')])' → logprob: -8.855430603027344
    6. '])]' → logprob: -10.230430603027344
    7. ' )' → logprob: -10.605430603027344
    8. '))' → logprob: -12.230430603027344
    9. ')
' → logprob: -12.730430603027344
    10. '）' → logprob: -13.105430603027344

Token 38: 'a' (ID: 64)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1948249191045761
    2. '\n' → logprob: -2.0698249340057373
    3. 'a' → logprob: -4.819824695587158
    4. ')' → logprob: -4.944824695587158
    5. '' → logprob: -5.194824695587158
    6. 'print' → logprob: -5.319824695587158
    7. ' 
' → logprob: -5.444824695587158
    8. '```' → logprob: -5.819824695587158
    9. '
' → logprob: -6.194824695587158
    10. '\' → logprob: -6.194824695587158

Token 39: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.2016916424036026
    2. 'sorted' → logprob: -1.7016916275024414
    3. ' list' → logprob: -8.951691627502441
    4. 'list' → logprob: -10.076691627502441
    5. '[' → logprob: -10.576691627502441
    6. 'set' → logprob: -11.076691627502441
    7. ' ' → logprob: -11.451691627502441
    8. 'sort' → logprob: -11.826691627502441
    9. 's' → logprob: -11.951691627502441
    10. ' set' → logprob: -12.076691627502441

Token 41: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.38711315393447876
    2. '(' → logprob: -1.137113094329834
    3. '(
' → logprob: -9.137113571166992
    4. '((' → logprob: -9.637113571166992
    5. '(lambda' → logprob: -9.762113571166992
    6. 'a' → logprob: -12.512113571166992
    7. '(

' → logprob: -12.762113571166992
    8. ' (' → logprob: -14.012113571166992
    9. '```' → logprob: -14.887113571166992
    10. '(list' → logprob: -15.012113571166992

Token 42: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007272057700902224
    2. '))' → logprob: -7.25072717666626
    3. ')
' → logprob: -12.375727653503418
    4. '())' → logprob: -12.750727653503418
    5. ',' → logprob: -13.125727653503418
    6. ' )' → logprob: -13.250727653503418
    7. '()' → logprob: -13.375727653503418
    8. ')))' → logprob: -13.750727653503418
    9. ')a' → logprob: -14.375727653503418
    10. ')**' → logprob: -15.000727653503418

Token 43: 'odd' (ID: 18303)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9402964115142822
    2. 'for' → logprob: -1.6902964115142822
    3. '[' → logprob: -1.8152964115142822
    4. 'print' → logprob: -2.8152964115142822
    5. 'if' → logprob: -2.9402964115142822
    6. '(
' → logprob: -3.0652964115142822
    7. '0' → logprob: -3.3152964115142822
    8. '[
' → logprob: -4.065296173095703
    9. 'import' → logprob: -5.440296173095703
    10. '\n' → logprob: -5.690296173095703

Token 44: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7387949824333191
    2. '()' → logprob: -0.9887949824333191
    3. '[' → logprob: -2.238795042037964
    4. ' ' → logprob: -4.863794803619385
    5. ' =' → logprob: -4.988794803619385
    6. '_' → logprob: -4.988794803619385
    7. '=' → logprob: -5.363794803619385
    8. ':' → logprob: -5.613794803619385
    9. ')' → logprob: -6.363794803619385
    10. '[]' → logprob: -6.488794803619385

Token 45: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8806604146957397
    2. 'a' → logprob: -1.0056604146957397
    3. '[]' → logprob: -2.6306605339050293
    4. '[' → logprob: -3.0056605339050293
    5. '[a' → logprob: -4.005660533905029
    6. ' ' → logprob: -4.380660533905029
    7. '[n' → logprob: -4.505660533905029
    8. ' a' → logprob: -4.505660533905029
    9. 'sum' → logprob: -4.630660533905029
    10. ' [' → logprob: -5.005660533905029

Token 46: '&' (ID: 5)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.10905861109495163
    2. ' //' → logprob: -2.3590586185455322
    3. '%' → logprob: -4.859058380126953
    4. '```' → logprob: -7.984058380126953
    5. ' %' → logprob: -8.359058380126953
    6. ' ' → logprob: -8.734058380126953
    7. '2' → logprob: -9.984058380126953
    8. '+' → logprob: -9.984058380126953
    9. '`' → logprob: -10.109058380126953
    10. '(' → logprob: -10.484058380126953

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.875004768371582
    3. 'a' → logprob: -14.625004768371582
    4. '(' → logprob: -14.625004768371582
    5. '-' → logprob: -15.375004768371582
    6. '3' → logprob: -15.750004768371582
    7. '

' → logprob: -16.187503814697266
    8. '01' → logprob: -16.500003814697266
    9. '0' → logprob: -17.000003814697266
    10. '   ' → logprob: -17.437503814697266

Token 48: '
' (ID: 198)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -1.008805751800537
    2. ' ' → logprob: -1.008805751800537
    3. ' and' → logprob: -2.133805751800537
    4. ' ?' → logprob: -2.633805751800537
    5. ':' → logprob: -3.883805751800537
    6. '0' → logprob: -3.883805751800537
    7. ' ==' → logprob: -5.258805751800537
    8. '+' → logprob: -5.383805751800537
    9. '>' → logprob: -5.383805751800537
    10. ' :' → logprob: -5.633805751800537

Token 49: 'if' (ID: 366)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.044563889503479
    2. ' ' → logprob: -1.169563889503479
    3. ' if' → logprob: -2.4195637702941895
    4. 'if' → logprob: -2.5445637702941895
    5. ' for' → logprob: -3.2945637702941895
    6. 'i' → logprob: -3.4195637702941895
    7. '0' → logprob: -4.0445637702941895
    8. 'for' → logprob: -4.4195637702941895
    9. 's' → logprob: -4.5445637702941895
    10. '  
' → logprob: -4.7945637702941895

Token 50: ' odd' (ID: 14210)
  Prédit: ' odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' odd' → logprob: -0.0011287828674539924
    2. ' not' → logprob: -7.126128673553467
    3. 'odd' → logprob: -8.126129150390625
    4. ' ' → logprob: -10.626129150390625
    5. ' ' → logprob: -13.001129150390625
    6. ' odds' → logprob: -14.626129150390625
    7. 'not' → logprob: -14.876129150390625
    8. '   ' → logprob: -15.251129150390625
    9. ' n' → logprob: -15.626129150390625
    10. ' o' → logprob: -15.626129150390625

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.054715596139431
    2. '==' → logprob: -3.179715633392334
    3. ' ==' → logprob: -4.679715633392334
    4. ' :' → logprob: -6.179715633392334
    5. ':
' → logprob: -8.554715156555176
    6. '=' → logprob: -10.679715156555176
    7. ' and' → logprob: -10.804715156555176
    8. '>:' → logprob: -11.054715156555176
    9. '>' → logprob: -11.304715156555176
    10. '!=' → logprob: -11.679715156555176

Token 52: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.1338663250207901
    2. ' a' → logprob: -3.633866310119629
    3. ' ans' → logprob: -3.633866310119629
    4. ' middle' → logprob: -3.758866310119629
    5. '   ' → logprob: -4.633866310119629
    6. ' c' → logprob: -4.758866310119629
    7. ' median' → logprob: -5.008866310119629
    8. 'print' → logprob: -5.133866310119629
    9. ' mid' → logprob: -5.383866310119629
    10. ' result' → logprob: -6.008866310119629

Token 53: ' acc' (ID: 1259)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'median' → logprob: -1.6421704292297363
    2. 'mid' → logprob: -1.6421704292297363
    3. ' median' → logprob: -1.6421704292297363
    4. ' mid' → logprob: -2.1421704292297363
    5. 'm' → logprob: -2.3921704292297363
    6. 'print' → logprob: -3.0171704292297363
    7. ' m' → logprob: -3.1421704292297363
    8. ' a' → logprob: -3.6421704292297363
    9. 'a' → logprob: -3.6421704292297363
    10. ' print' → logprob: -3.6421704292297363

Token 54: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010609379969537258
    2. ' =' → logprob: -5.510609149932861
    3. 'um' → logprob: -6.010609149932861
    4. 'umulate' → logprob: -6.135609149932861
    5. 'umulator' → logprob: -6.510609149932861
    6. 'umul' → logprob: -8.88560962677002
    7. 'u' → logprob: -9.38560962677002
    8. '+=' → logprob: -10.01060962677002
    9. '   ' → logprob: -10.13560962677002
    10. 'umulative' → logprob: -11.01060962677002

Token 55: ' sum' (ID: 4215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1393418312072754
    2. '0' → logprob: -2.5143418312072754
    3. ' a' → logprob: -3.2643418312072754
    4. '[a' → logprob: -5.764341831207275
    5. ' ' → logprob: -6.014341831207275
    6. '(a' → logprob: -6.264341831207275
    7. ' (' → logprob: -7.264341831207275
    8. '[' → logprob: -7.639341831207275
    9. ' [' → logprob: -7.889341831207275
    10. 'abs' → logprob: -7.889341831207275

Token 56: '(map' (ID: 16946)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.014108380302786827
    2. '(abs' → logprob: -4.889108180999756
    3. '(' → logprob: -5.514108180999756
    4. '([' → logprob: -6.389108180999756
    5. 'a' → logprob: -7.764108180999756
    6. '(sorted' → logprob: -9.139108657836914
    7. 'abs' → logprob: -9.639108657836914
    8. '(
' → logprob: -9.639108657836914
    9. '([
' → logprob: -10.389108657836914
    10. '([(' → logprob: -11.139108657836914

Token 57: '(lambda' (ID: 43341)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.14304903149604797
    2. 'abs' → logprob: -2.1430490016937256
    3. '(lambda' → logprob: -4.143049240112305
    4. '(' → logprob: -9.768049240112305
    5. ' abs' → logprob: -10.518049240112305
    6. 'lambda' → logprob: -10.518049240112305
    7. '_abs' → logprob: -12.643049240112305
    8. 'Abs' → logprob: -14.143049240112305
    9. '(
' → logprob: -14.768049240112305
    10. '(int' → logprob: -14.893049240112305

Token 58: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.44201335310935974
    2. ' lambda' → logprob: -1.5670133829116821
    3. '(lambda' → logprob: -2.3170132637023926
    4. 'x' → logprob: -4.067013263702393
    5. 'a' → logprob: -4.317013263702393
    6. ' x' → logprob: -4.567013263702393
    7. ' a' → logprob: -5.817013263702393
    8. ':' → logprob: -6.317013263702393
    9. '=lambda' → logprob: -6.442013263702393
    10. 'abs' → logprob: -7.567013263702393

Token 59: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013780406676232815
    2. ',' → logprob: -4.76378059387207
    3. ' :' → logprob: -6.26378059387207
    4. ' x' → logprob: -7.01378059387207
    5. ':x' → logprob: -7.88878059387207
    6. 'a' → logprob: -8.01378059387207
    7. ':a' → logprob: -8.13878059387207
    8. ',x' → logprob: -8.13878059387207
    9. ',a' → logprob: -8.51378059387207
    10. ',j' → logprob: -9.01378059387207

Token 60: ' abs' (ID: 8443)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9416662454605103
    2. 'abs' → logprob: -0.9416662454605103
    3. ' x' → logprob: -1.8166662454605103
    4. ' abs' → logprob: -2.9416661262512207
    5. 'lambda' → logprob: -5.941666126251221
    6. ' lambda' → logprob: -6.816666126251221
    7. 'a' → logprob: -7.691666126251221
    8. '   ' → logprob: -9.191666603088379
    9. '(abs' → logprob: -9.191666603088379
    10. ' a' → logprob: -9.191666603088379

Token 61: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0018031037179753184
    2. 'x' → logprob: -7.126802921295166
    3. '(' → logprob: -7.251802921295166
    4. '(a' → logprob: -8.251803398132324
    5. '((' → logprob: -11.501803398132324
    6. 'a' → logprob: -12.126803398132324
    7. ' x' → logprob: -12.251803398132324
    8. '(
' → logprob: -12.251803398132324
    9. ' (' → logprob: -13.501803398132324
    10. ')x' → logprob: -15.126803398132324

Token 62: ' -' (ID: 533)
  Prédit: '-x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-x' → logprob: -0.793292760848999
    2. '-' → logprob: -0.918292760848999
    3. ' -' → logprob: -1.918292760848999
    4. 'x' → logprob: -7.668292999267578
    5. '-a' → logprob: -8.293292999267578
    6. '-)' → logprob: -8.293292999267578
    7. '-n' → logprob: -8.793292999267578
    8. ' x' → logprob: -9.418292999267578
    9. ')' → logprob: -10.168292999267578
    10. '   ' → logprob: -10.293292999267578

Token 63: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016222640872001648
    2. ' a' → logprob: -4.1412224769592285
    3. '0' → logprob: -9.766222953796387
    4. '(a' → logprob: -10.016222953796387
    5. ' (' → logprob: -10.766222953796387
    6. ')a' → logprob: -10.766222953796387
    7. ' ' → logprob: -11.016222953796387
    8. '(' → logprob: -11.516222953796387
    9. '   ' → logprob: -11.891222953796387
    10. ')' → logprob: -13.391222953796387

Token 64: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.003550416324287653
    2. '[' → logprob: -6.3785505294799805
    3. '[(' → logprob: -6.6285505294799805
    4. '[len' → logprob: -8.00355052947998
    5. ' [' → logprob: -10.00355052947998
    6. '   ' → logprob: -10.37855052947998
    7. '[int' → logprob: -10.37855052947998
    8. 'n' → logprob: -10.37855052947998
    9. '[m' → logprob: -11.50355052947998
    10. '[mid' → logprob: -11.87855052947998

Token 65: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -4.811348480870947e-05
    2. ' //' → logprob: -10.62504768371582
    3. '[n' → logprob: -10.75004768371582
    4. ' ' → logprob: -14.50004768371582
    5. '[' → logprob: -14.62504768371582
    6. '   ' → logprob: -15.00004768371582
    7. '(n' → logprob: -15.37504768371582
    8. '/' → logprob: -15.50004768371582
    9. 'n' → logprob: -15.62504768371582
    10. '#' → logprob: -16.50004768371582

Token 66: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018363336857873946
    2. ' ' → logprob: -8.625184059143066
    3. '   ' → logprob: -13.500184059143066
    4. '1' → logprob: -14.000184059143066
    5. '```' → logprob: -14.750184059143066
    6. '۲' → logprob: -15.562684059143066
    7. '    ' → logprob: -15.875184059143066
    8. ')' → logprob: -16.12518310546875
    9. '  ' → logprob: -16.18768310546875
    10. '[' → logprob: -16.18768310546875

Token 67: ']),' (ID: 19560)
  Prédit: ']),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.02000686153769493
    2. '])' → logprob: -4.7700066566467285
    3. ']))' → logprob: -5.6450066566467285
    4. ']' → logprob: -5.7700066566467285
    5. '])))' → logprob: -6.6450066566467285
    6. '])),' → logprob: -7.0200066566467285
    7. ')' → logprob: -7.3950066566467285
    8. ')]' → logprob: -7.5200066566467285
    9. ')],' → logprob: -8.270007133483887
    10. '])))
' → logprob: -8.645007133483887

Token 68: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10030113160610199
    2. ' a' → logprob: -2.3503010272979736
    3. '   ' → logprob: -10.975300788879395
    4. ')' → logprob: -11.100300788879395
    5. ' ' → logprob: -11.100300788879395
    6. '[a' → logprob: -11.725300788879395
    7. '  ' → logprob: -11.850300788879395
    8. ')a' → logprob: -11.975300788879395
    9. '	a' → logprob: -12.100300788879395
    10. '0' → logprob: -12.475300788879395

Token 69: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011007029563188553
    2. '))
' → logprob: -4.886006832122803
    3. ')' → logprob: -6.136006832122803
    4. ')))' → logprob: -7.261006832122803
    5. ' ))' → logprob: -8.636007308959961
    6. '),' → logprob: -9.011007308959961
    7. ' ' → logprob: -9.636007308959961
    8. '))
' → logprob: -9.761007308959961
    9. '   ' → logprob: -10.386007308959961
    10. '))

' → logprob: -11.136007308959961

Token 70: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.002783600240945816
    2. ' else' → logprob: -6.25278377532959
    3. 'print' → logprob: -7.75278377532959
    4. ')' → logprob: -8.50278377532959
    5. '
' → logprob: -9.50278377532959
    6. ')
' → logprob: -10.25278377532959
    7. 'elif' → logprob: -10.37778377532959
    8. '    
' → logprob: -10.75278377532959
    9. ' 
' → logprob: -11.25278377532959
    10. '}else' → logprob: -11.87778377532959

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3101520836353302
    2. ':
' → logprob: -1.5601520538330078
    3. '   ' → logprob: -3.185152053833008
    4. '{' → logprob: -5.310152053833008
    5. '(' → logprob: -5.810152053833008
    6. '
' → logprob: -6.310152053833008
    7. '[' → logprob: -6.685152053833008
    8. ' ' → logprob: -7.310152053833008
    9. ' 
' → logprob: -7.560152053833008
    10. '    ' → logprob: -7.560152053833008

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0313473641872406
    2. ' acc' → logprob: -3.9063472747802734
    3. 'acc' → logprob: -5.031347274780273
    4. '    ' → logprob: -7.031347274780273
    5. ' ' → logprob: -7.156347274780273
    6. '0' → logprob: -7.656347274780273
    7. '1' → logprob: -8.281347274780273
    8. '
' → logprob: -8.531347274780273
    9. ' for' → logprob: -8.656347274780273
    10. '  ' → logprob: -8.906347274780273

Token 73: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' (adapté à ' acc') → logprob: -0.44267866015434265
    2. ' acc' → logprob: -1.692678689956665
    3. 'mid' → logprob: -3.067678689956665
    4. 'l' → logprob: -3.567678689956665
    5. 'low' → logprob: -4.067678451538086
    6. 'm' → logprob: -4.192678451538086
    7. '   ' → logprob: -4.442678451538086
    8. ' mid' → logprob: -4.692678451538086
    9. 'left' → logprob: -5.317678451538086
    10. ' l' → logprob: -5.317678451538086

Token 74: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012942914851009846
    2. '=' → logprob: -4.387942790985107
    3. ' +=' → logprob: -8.012943267822266
    4. '_' → logprob: -10.387943267822266
    5. '1' → logprob: -10.887943267822266
    6. ' ' → logprob: -11.012943267822266
    7. '+=' → logprob: -11.137943267822266
    8. 's' → logprob: -12.012943267822266
    9. '0' → logprob: -12.512943267822266
    10. '  ' → logprob: -12.637943267822266

Token 75: ' alt' (ID: 5001)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.7377387881278992
    2. '_' → logprob: -1.612738847732544
    3. ' acc' → logprob: -1.612738847732544
    4. '_=' → logprob: -3.612738847732544
    5. 'a' → logprob: -3.862738847732544
    6. '=' → logprob: -3.862738847732544
    7. ' =' → logprob: -4.112738609313965
    8. 'b' → logprob: -5.237738609313965
    9. 'min' → logprob: -5.487738609313965
    10. ' a' → logprob: -5.987738609313965

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06235886737704277
    2. '=' → logprob: -2.812358856201172
    3. '1' → logprob: -8.062358856201172
    4. ' ' → logprob: -10.687358856201172
    5. '_' → logprob: -11.187358856201172
    6. 's' → logprob: -11.312358856201172
    7. '  ' → logprob: -11.437358856201172
    8. 'a' → logprob: -12.562358856201172
    9. '0' → logprob: -12.562358856201172
    10. '2' → logprob: -13.312358856201172

Token 77: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.069417953491211
    2. 'sum' → logprob: -1.069417953491211
    3. ' sum' → logprob: -1.319417953491211
    4. ' ' → logprob: -3.444417953491211
    5. ' float' → logprob: -5.319417953491211
    6. 'float' → logprob: -5.819417953491211
    7. '(sum' → logprob: -6.194417953491211
    8. 'abs' → logprob: -7.194417953491211
    9. 'min' → logprob: -7.569417953491211
    10. ' abs' → logprob: -7.569417953491211

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10876760631799698
    2. 'sum' → logprob: -2.358767509460449
    3. 'float' → logprob: -6.233767509460449
    4. '[' → logprob: -6.233767509460449
    5. 'map' → logprob: -6.608767509460449
    6. '(sum' → logprob: -6.983767509460449
    7. ' ' → logprob: -7.483767509460449
    8. '(' → logprob: -8.10876750946045
    9. ' sum' → logprob: -8.23376750946045
    10. 'abs' → logprob: -8.48376750946045

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018558766692876816
    2. '
' → logprob: -4.268558979034424
    3. '<|end|>' → logprob: -6.393558979034424
    4. '0' → logprob: -7.268558979034424
    5. ',
' → logprob: -7.393558979034424
    6. ' ,' → logprob: -8.143558502197266
    7. ' ' → logprob: -8.393558502197266
    8. 'acc' → logprob: -8.393558502197266
    9. 'x' → logprob: -8.643558502197266
    10. ',sum' → logprob: -9.143558502197266

Token 80: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006657465361058712
    2. ' ' → logprob: -5.131657600402832
    3. '[]' → logprob: -8.506657600402832
    4. 'float' → logprob: -8.756657600402832
    5. 'sum' → logprob: -9.256657600402832
    6. 'a' → logprob: -9.506657600402832
    7. 'abs' → logprob: -10.381657600402832
    8. '1' → logprob: -10.756657600402832
    9. '  ' → logprob: -10.881657600402832
    10. '[' → logprob: -11.006657600402832

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010314998216927052
    2. 'abs' → logprob: -7.876031398773193
    3. ' ' → logprob: -8.751031875610352
    4. 'float' → logprob: -8.876031875610352
    5. 'a' → logprob: -9.001031875610352
    6. 'sum' → logprob: -9.376031875610352
    7. '1' → logprob: -9.876031875610352
    8. 'acc' → logprob: -10.376031875610352
    9. 'int' → logprob: -11.376031875610352
    10. '[]' → logprob: -11.876031875610352

Token 82: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8044552803039551
    2. '   ' → logprob: -1.429455280303955
    3. 'for' → logprob: -1.679455280303955
    4. 'm' → logprob: -2.929455280303955
    5. ' for' → logprob: -3.679455280303955
    6. 'mid' → logprob: -3.929455280303955
    7. '    
' → logprob: -5.429455280303955
    8. ' 
' → logprob: -5.554455280303955
    9. 'x' → logprob: -5.929455280303955
    10. ' ' → logprob: -6.304455280303955

Token 83: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3656933605670929
    2. '   ' → logprob: -1.2406933307647705
    3. 'mid' → logprob: -4.99069356918335
    4. 'm' → logprob: -4.99069356918335
    5. 'median' → logprob: -6.74069356918335
    6. ' for' → logprob: -7.11569356918335
    7. '
' → logprob: -7.36569356918335
    8. 'med' → logprob: -7.61569356918335
    9. '```' → logprob: -9.990693092346191
    10. 'pivot' → logprob: -9.990693092346191

Token 84: ' x' (ID: 1215)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24005083739757538
    2. 'm' → logprob: -2.365050792694092
    3. 'mid' → logprob: -2.490050792694092
    4. 'median' → logprob: -4.115050792694092
    5. 'med' → logprob: -4.365050792694092
    6. 'x' (adapté à ' x') → logprob: -6.115050792694092
    7. 'middle' → logprob: -6.865050792694092
    8. 'half' → logprob: -7.365050792694092
    9. 'val' → logprob: -7.740050792694092
    10. 'b' → logprob: -7.740050792694092

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43006277084350586
    2. '0' → logprob: -1.5550627708435059
    3. '1' → logprob: -2.430062770843506
    4. '=' → logprob: -3.055062770843506
    5. 'a' → logprob: -7.180062770843506
    6. ',' → logprob: -7.180062770843506
    7. '_' → logprob: -7.680062770843506
    8. '=n' → logprob: -7.805062770843506
    9. 'n' → logprob: -9.055063247680664
    10. '=a' → logprob: -9.055063247680664

Token 86: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13635222613811493
    2. ' a' → logprob: -2.136352300643921
    3. '(a' → logprob: -4.886352062225342
    4. ' (' → logprob: -6.386352062225342
    5. '(' → logprob: -9.1363525390625
    6. ' ' → logprob: -10.5113525390625
    7. '(n' → logprob: -12.6363525390625
    8. '((' → logprob: -13.5113525390625
    9. '	a' → logprob: -13.5113525390625
    10. 'n' → logprob: -14.3238525390625

Token 87: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0624060183763504
    2. ' a' → logprob: -2.812406063079834
    3. '(a' → logprob: -7.937406063079834
    4. ' (' → logprob: -9.812405586242676
    5. ' ' → logprob: -12.062405586242676
    6. ' n' → logprob: -12.187405586242676
    7. 'n' → logprob: -12.187405586242676
    8. '   ' → logprob: -12.437405586242676
    9. ')a' → logprob: -12.937405586242676
    10. '(n' → logprob: -13.937405586242676

Token 88: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.2961512513575144e-05
    2. '[(' → logprob: -11.250022888183594
    3. 'n' → logprob: -11.750022888183594
    4. '[len' → logprob: -14.500022888183594
    5. '[' → logprob: -14.625022888183594
    6. '(n' → logprob: -14.875022888183594
    7. '
' → logprob: -15.625022888183594
    8. '[
' → logprob: -16.000022888183594
    9. '[int' → logprob: -16.250022888183594
    10. ')' → logprob: -16.875022888183594

Token 89: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.00010008628305513412
    2. '#' → logprob: -9.625100135803223
    3. ' //' → logprob: -11.375100135803223
    4. '/' → logprob: -11.375100135803223
    5. '2' → logprob: -12.500100135803223
    6. '   ' → logprob: -13.500100135803223
    7. '[' → logprob: -13.500100135803223
    8. '```' → logprob: -13.625100135803223
    9. '-' → logprob: -13.875100135803223
    10. '1' → logprob: -14.500100135803223

Token 90: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006198368966579437
    2. '1' → logprob: -5.131198406219482
    3. ' ' → logprob: -8.381197929382324
    4. '   ' → logprob: -10.506197929382324
    5. '```' → logprob: -12.943697929382324
    6. '       ' → logprob: -13.631197929382324
    7. '3' → logprob: -13.693697929382324
    8. '  ' → logprob: -14.006197929382324
    9. ')' → logprob: -14.256197929382324
    10. '
' → logprob: -14.443697929382324

Token 91: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3774246275424957
    2. '+' → logprob: -1.5024245977401733
    3. ' +' → logprob: -2.877424716949463
    4. ']' → logprob: -4.252424716949463
    5. ' -' → logprob: -4.377424716949463
    6. ']+' → logprob: -5.127424716949463
    7. ' ' → logprob: -6.627424716949463
    8. ')' → logprob: -7.752424716949463
    9. '}' → logprob: -8.502424240112305
    10. '}+' → logprob: -8.877424240112305

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004493805463425815
    2. ' ' → logprob: -7.750449180603027
    3. '   ' → logprob: -12.375449180603027
    4. ']' → logprob: -12.375449180603027
    5. ']+' → logprob: -13.125449180603027
    6. '2' → logprob: -13.500449180603027
    7. ')' → logprob: -13.625449180603027
    8. '  ' → logprob: -13.625449180603027
    9. '```' → logprob: -13.625449180603027
    10. '])' → logprob: -14.625449180603027

Token 93: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08504292368888855
    2. '+' → logprob: -2.960042953491211
    3. '+a' → logprob: -3.585042953491211
    4. ')' → logprob: -6.585042953491211
    5. '+x' → logprob: -8.585042953491211
    6. ' )' → logprob: -8.960042953491211
    7. ')+' → logprob: -9.085042953491211
    8. '+)' → logprob: -9.585042953491211
    9. ' ' → logprob: -10.835042953491211
    10. 'a' → logprob: -11.335042953491211

Token 94: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2278752475976944
    2. '+' → logprob: -1.8528752326965332
    3. '+a' → logprob: -3.352875232696533
    4. '+x' → logprob: -4.852875232696533
    5. '+)' → logprob: -6.352875232696533
    6. ')' → logprob: -6.352875232696533
    7. ' )' → logprob: -8.477875709533691
    8. '+
' → logprob: -8.602875709533691
    9. ' +
' → logprob: -9.352875709533691
    10. '+n' → logprob: -9.477875709533691

Token 95: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6931562423706055
    2. ' a' → logprob: -0.6931562423706055
    3. ' ' → logprob: -12.443156242370605
    4. '1' → logprob: -12.568156242370605
    5. '	a' → logprob: -13.943156242370605
    6. '    ' → logprob: -15.443156242370605
    7. ' ' → logprob: -16.068157196044922
    8. '   ' → logprob: -16.068157196044922
    9. '(a' → logprob: -16.318157196044922
    10. '  ' → logprob: -16.693157196044922

Token 96: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.5213274309644476e-05
    2. '//' → logprob: -11.875015258789062
    3. '[' → logprob: -12.625015258789062
    4. '[j' → logprob: -13.250015258789062
    5. ' [' → logprob: -14.125015258789062
    6. '[
' → logprob: -14.250015258789062
    7. ' //' → logprob: -14.625015258789062
    8. '
' → logprob: -15.125015258789062
    9. 'n' → logprob: -15.375015258789062
    10. ')' → logprob: -15.625015258789062

Token 97: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -3.2855416066013277e-05
    2. '2' → logprob: -10.625032424926758
    3. '#' → logprob: -12.500032424926758
    4. '/' → logprob: -13.375032424926758
    5. ' //' → logprob: -13.500032424926758
    6. '   ' → logprob: -14.625032424926758
    7. ']' → logprob: -15.375032424926758
    8. '4' → logprob: -15.500032424926758
    9. ' ' → logprob: -15.875032424926758
    10. '//=' → logprob: -16.000032424926758

Token 98: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001737431448418647
    2. '1' → logprob: -8.875173568725586
    3. ' ' → logprob: -10.375173568725586
    4. '   ' → logprob: -14.250173568725586
    5. '۲' → logprob: -14.875173568725586
    6. '  ' → logprob: -15.312673568725586
    7. '२' → logprob: -16.250173568725586
    8. '21' → logprob: -16.250173568725586
    9. '22' → logprob: -16.250173568725586
    10. ']' → logprob: -16.312673568725586

Token 99: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05131500959396362
    2. ')//' → logprob: -3.0513150691986084
    3. ' )' → logprob: -5.926314830780029
    4. ')>>' → logprob: -10.051315307617188
    5. ' ' → logprob: -12.426315307617188
    6. '//' → logprob: -12.801315307617188
    7. '   ' → logprob: -13.426315307617188
    8. '）' → logprob: -13.551315307617188
    9. ')#' → logprob: -13.926315307617188
    10. '  ' → logprob: -14.926315307617188

Token 100: ' >>' (ID: 6832)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.00323938624933362
    2. ' //' → logprob: -5.753239154815674
    3. '#' → logprob: -10.128239631652832
    4. '>>' → logprob: -11.253239631652832
    5. '//
' → logprob: -12.128239631652832
    6. '//=' → logprob: -14.128239631652832
    7. ' ' → logprob: -14.753239631652832
    8. ')//' → logprob: -15.003239631652832
    9. ' //
' → logprob: -15.128239631652832
    10. '
' → logprob: -15.378239631652832

Token 101: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.214019307051785e-05
    2. ' ' → logprob: -10.375032424926758
    3. '   ' → logprob: -14.625032424926758
    4. '```' → logprob: -15.125032424926758
    5. '  ' → logprob: -17.375032424926758
    6. '0' → logprob: -17.500032424926758
    7. '' → logprob: -17.687532424926758
    8. ' ' → logprob: -17.875032424926758
    9. '' → logprob: -17.875032424926758
    10. '１' → logprob: -18.000032424926758

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -16.625
    4. '```' → logprob: -16.625
    5. '0' → logprob: -17.0
    6. '2' → logprob: -17.5625
    7. '01' → logprob: -18.3125
    8. '001' → logprob: -18.5625
    9. '１' → logprob: -18.6875
    10. '=' → logprob: -18.9375

Token 103: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07306424528360367
    2. '   ' → logprob: -2.9480643272399902
    3. '<|end|>' → logprob: -4.57306432723999
    4. ' for' → logprob: -5.82306432723999
    5. 'for' → logprob: -6.57306432723999
    6. '<|end|>' → logprob: -6.94806432723999
    7. '    
' → logprob: -7.57306432723999
    8. '  
' → logprob: -7.69806432723999
    9. '
' → logprob: -8.073063850402832
    10. ')' → logprob: -8.323063850402832

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6105629801750183
    2. 'for' → logprob: -0.8605629801750183
    3. ' for' → logprob: -3.610563039779663
    4. '
' → logprob: -5.360562801361084
    5. '<|end|>' → logprob: -6.235562801361084
    6. '    
' → logprob: -8.485563278198242
    7. '	for' → logprob: -9.735563278198242
    8. '  ' → logprob: -10.985563278198242
    9. '<|end|>' → logprob: -11.110563278198242
    10. '  
' → logprob: -11.360563278198242

Token 105: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0010082771768793464
    2. ' for' → logprob: -7.1260085105896
    3. '   ' → logprob: -8.501008033752441
    4. '	for' → logprob: -15.751008033752441
    5. '
' → logprob: -15.876008033752441
    6. '    
' → logprob: -16.126008987426758
    7. ' ' → logprob: -16.876008987426758
    8. 'i' → logprob: -17.376008987426758
    9. '[' → logprob: -17.626008987426758
    10. 'from' → logprob: -18.126008987426758

Token 106: ' y' (ID: 342)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3930440843105316
    2. ' i' → logprob: -1.143044114112854
    3. 'j' → logprob: -5.5180439949035645
    4. ' j' → logprob: -6.5180439949035645
    5. 'v' → logprob: -9.018044471740723
    6. ' ' → logprob: -9.143044471740723
    7. 'k' → logprob: -9.268044471740723
    8. ' v' → logprob: -9.268044471740723
    9. ' y' → logprob: -10.143044471740723
    10. 'y' → logprob: -10.268044471740723

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22549377381801605
    2. 'in' → logprob: -1.6004937887191772
    3. ' ' → logprob: -10.100493431091309
    4. ',' → logprob: -10.975493431091309
    5. 'a' → logprob: -11.225493431091309
    6. '  ' → logprob: -12.725493431091309
    7. ',a' → logprob: -13.725493431091309
    8. ' a' → logprob: -13.975493431091309
    9. '   ' → logprob: -14.100493431091309
    10. ' ,' → logprob: -14.100493431091309

Token 108: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0017067246371880174
    2. ' a' → logprob: -6.376706600189209
    3. ' ' → logprob: -13.251707077026367
    4. 'range' → logprob: -13.626707077026367
    5. '   ' → logprob: -14.376707077026367
    6. ' range' → logprob: -15.001707077026367
    7. '(a' → logprob: -15.376707077026367
    8. '  ' → logprob: -15.876707077026367
    9. '	a' → logprob: -16.001707077026367
    10. '(' → logprob: -16.876707077026367

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011216417187824845
    2. ':
' → logprob: -6.876121520996094
    3. ' in' → logprob: -10.001121520996094
    4. '):' → logprob: -10.876121520996094
    5. ' :' → logprob: -11.126121520996094
    6. '<|end|>' → logprob: -13.126121520996094
    7. 'in' → logprob: -13.751121520996094
    8. '):
' → logprob: -13.876121520996094
    9. ':

' → logprob: -14.501121520996094
    10. ']:' → logprob: -14.501121520996094

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004511411767452955
    2. ' ' → logprob: -5.87951135635376
    3. '<|end|>' → logprob: -6.87951135635376
    4. '   ' → logprob: -8.879511833190918
    5. ' 
' → logprob: -9.254511833190918
    6. '    ' → logprob: -9.254511833190918
    7. ' acc' → logprob: -9.629511833190918
    8. ',' → logprob: -9.754511833190918
    9. '        
' → logprob: -9.879511833190918
    10. '      ' → logprob: -10.254511833190918

Token 111: ' acc' (ID: 1259)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03243977576494217
    2. ' acc' → logprob: -3.532439708709717
    3. '
' → logprob: -7.157439708709717
    4. '   ' → logprob: -7.282439708709717
    5. 'acc' (adapté à ' acc') → logprob: -7.907439708709717
    6. ' if' → logprob: -8.282440185546875
    7. '```' → logprob: -9.157440185546875
    8. ' 
' → logprob: -9.407440185546875
    9. ' ' → logprob: -9.532440185546875
    10. '           ' → logprob: -9.782440185546875

Token 112: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3870657980442047
    2. ' +=' → logprob: -1.1370657682418823
    3. '+' → logprob: -9.387065887451172
    4. '   ' → logprob: -9.887065887451172
    5. '+=(' → logprob: -9.887065887451172
    6. ']+=' → logprob: -12.887065887451172
    7. '+="' → logprob: -13.512065887451172
    8. '+='' → logprob: -13.512065887451172
    9. '=' → logprob: -13.637065887451172
    10. ' +' → logprob: -14.387065887451172

Token 113: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.2519521713256836
    2. ' abs' → logprob: -1.5019521713256836
    3. 'y' → logprob: -11.626952171325684
    4. ' y' → logprob: -11.626952171325684
    5. '(abs' → logprob: -12.626952171325684
    6. ' ' → logprob: -14.376952171325684
    7. '   ' → logprob: -14.876952171325684
    8. 'max' → logprob: -14.876952171325684
    9. 'x' → logprob: -16.001953125
    10. '    ' → logprob: -16.376953125

Token 114: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.05351695045828819
    2. '(' → logprob: -3.4285168647766113
    3. '(x' → logprob: -3.9285168647766113
    4. 'y' → logprob: -14.30351734161377
    5. '<|end|>' → logprob: -14.42851734161377
    6. ' (' → logprob: -15.30351734161377
    7. '((' → logprob: -15.30351734161377
    8. '(abs' → logprob: -16.178516387939453
    9. ')' → logprob: -16.428516387939453
    10. '(
' → logprob: -16.803516387939453

Token 115: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03950556367635727
    2. '-' → logprob: -3.2895054817199707
    3. '-x' → logprob: -6.539505481719971
    4. ' ' → logprob: -11.414505958557129
    5. 'x' → logprob: -13.289505958557129
    6. '-(' → logprob: -13.539505958557129
    7. ' -(' → logprob: -13.914505958557129
    8. ' x' → logprob: -14.539505958557129
    9. ')' → logprob: -15.039505958557129
    10. '   ' → logprob: -15.477005958557129

Token 116: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.019778281450271606
    2. ' x' → logprob: -4.019778251647949
    3. '(x' → logprob: -6.519778251647949
    4. ' (' → logprob: -9.01977825164795
    5. '   ' → logprob: -11.51977825164795
    6. '(' → logprob: -11.64477825164795
    7. ' ' → logprob: -12.01977825164795
    8. ')' → logprob: -13.39477825164795
    9. '  ' → logprob: -14.01977825164795
    10. '```' → logprob: -14.33227825164795

Token 117: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0008483405690640211
    2. ')' → logprob: -7.250848293304443
    3. ')
' → logprob: -9.625848770141602
    4. ' )
' → logprob: -9.875848770141602
    5. '       ' → logprob: -11.125848770141602
    6. ')

' → logprob: -12.125848770141602
    7. '   ' → logprob: -14.625848770141602
    8. ' ' → logprob: -16.5008487701416
    9. ');
' → logprob: -17.1258487701416
    10. ' )' → logprob: -17.2508487701416

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014821283984929323
    2. '   ' → logprob: -6.876482009887695
    3. ' alt' → logprob: -8.626482009887695
    4. '
' → logprob: -9.376482009887695
    5. 'alt' → logprob: -9.501482009887695
    6. '        
' → logprob: -9.876482009887695
    7. '    
' → logprob: -10.751482009887695
    8. '
' → logprob: -12.001482009887695
    9. ' ' → logprob: -12.126482009887695
    10. '    ' → logprob: -12.626482009887695

Token 119: ' alt' (ID: 5001)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' (adapté à ' alt') → logprob: -0.023755501955747604
    2. ' alt' → logprob: -4.1487555503845215
    3. '       ' → logprob: -4.8987555503845215
    4. '   ' → logprob: -8.523755073547363
    5. '_alt' → logprob: -11.398755073547363
    6. '    ' → logprob: -12.523755073547363
    7. '  ' → logprob: -12.898755073547363
    8. '      ' → logprob: -12.898755073547363
    9. ' ' → logprob: -12.898755073547363
    10. '     ' → logprob: -13.023755073547363

Token 120: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.007635493762791157
    2. '+=' → logprob: -4.882635593414307
    3. '   ' → logprob: -11.132635116577148
    4. ' ' → logprob: -12.257635116577148
    5. '+' → logprob: -12.632635116577148
    6. ' -=' → logprob: -12.882635116577148
    7. '  ' → logprob: -13.132635116577148
    8. ' +' → logprob: -14.257635116577148
    9. '    ' → logprob: -14.382635116577148
    10. ']+=' → logprob: -14.632635116577148

Token 121: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.029797932133078575
    2. ' abs' → logprob: -3.5297980308532715
    3. '1' → logprob: -10.404797554016113
    4. '(abs' → logprob: -11.404797554016113
    5. ' ' → logprob: -13.029797554016113
    6. 'y' → logprob: -13.904797554016113
    7. '   ' → logprob: -13.904797554016113
    8. ' y' → logprob: -14.654797554016113
    9. '  ' → logprob: -15.154797554016113
    10. '    ' → logprob: -15.279797554016113

Token 122: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0013392893597483635
    2. '(' → logprob: -6.626339435577393
    3. '(x' → logprob: -12.376338958740234
    4. 'y' → logprob: -12.751338958740234
    5. ' (' → logprob: -13.001338958740234
    6. '((' → logprob: -13.251338958740234
    7. '(abs' → logprob: -13.501338958740234
    8. '(a' → logprob: -15.876338958740234
    9. '(z' → logprob: -16.126338958740234
    10. ' y' → logprob: -16.751338958740234

Token 123: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3132791221141815
    2. '-' → logprob: -1.313279151916504
    3. '-(' → logprob: -11.813279151916504
    4. ' ' → logprob: -12.438279151916504
    5. ' -(' → logprob: -12.688279151916504
    6. '+' → logprob: -14.250779151916504
    7. ' -
' → logprob: -14.813279151916504
    8. ' ' → logprob: -15.438279151916504
    9. ' -

' → logprob: -15.500779151916504
    10. '-
' → logprob: -15.563279151916504

Token 124: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.24536174535751343
    2. 'x' → logprob: -1.6203618049621582
    3. ' (' → logprob: -4.620361804962158
    4. ' x' → logprob: -5.245361804962158
    5. '(' → logprob: -5.995361804962158
    6. '(a' → logprob: -6.995361804962158
    7. '1' → logprob: -7.620361804962158
    8. '((' → logprob: -7.870361804962158
    9. 'a' → logprob: -8.370361328125
    10. ' ' → logprob: -10.620361328125

Token 125: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0010537689086049795
    2. ' x' → logprob: -7.251053810119629
    3. '(x' → logprob: -8.001053810119629
    4. ' (' → logprob: -13.376053810119629
    5. ')x' → logprob: -13.376053810119629
    6. 'a' → logprob: -13.501053810119629
    7. '   ' → logprob: -14.001053810119629
    8. '(' → logprob: -14.126053810119629
    9. '  ' → logprob: -14.501053810119629
    10. '1' → logprob: -14.626053810119629

Token 126: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19599318504333496
    2. '-' → logprob: -2.570993185043335
    3. ' +' → logprob: -2.570993185043335
    4. ' -' → logprob: -3.695993185043335
    5. '1' → logprob: -8.945993423461914
    6. ' ' → logprob: -9.570993423461914
    7. '   ' → logprob: -10.945993423461914
    8. '  ' → logprob: -12.195993423461914
    9. ')' → logprob: -12.445993423461914
    10. '))' → logprob: -12.570993423461914

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.856408536899835e-05
    2. ' ' → logprob: -10.500028610229492
    3. ')' → logprob: -14.125028610229492
    4. '   ' → logprob: -15.375028610229492
    5. '+' → logprob: -17.375028610229492
    6. '-' → logprob: -17.750028610229492
    7. '
' → logprob: -17.875028610229492
    8. '))' → logprob: -19.000028610229492
    9. '=' → logprob: -19.187528610229492
    10. ' )' → logprob: -19.312528610229492

Token 128: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00668482156470418
    2. '))
' → logprob: -5.13168478012085
    3. ')' → logprob: -7.38168478012085
    4. ' ))' → logprob: -9.756685256958008
    5. ')))' → logprob: -10.256685256958008
    6. '   ' → logprob: -11.631685256958008
    7. '))

' → logprob: -11.756685256958008
    8. '       ' → logprob: -12.006685256958008
    9. ' ' → logprob: -12.131685256958008
    10. ')
' → logprob: -12.631685256958008

Token 129: '   ' (ID: 271)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.25392332673072815
    2. 'print' → logprob: -2.0039234161376953
    3. 'if' → logprob: -3.0039234161376953
    4. '   ' → logprob: -3.8789234161376953
    5. ' acc' → logprob: -5.378923416137695
    6. '
' → logprob: -5.628923416137695
    7. 'a' → logprob: -5.878923416137695
    8. ' if' → logprob: -6.003923416137695
    9. 'answer' → logprob: -6.628923416137695
    10. ')' → logprob: -6.753923416137695

Token 130: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' (adapté à ' acc') → logprob: -0.030496325343847275
    2. 'print' → logprob: -3.53049635887146
    3. 'if' → logprob: -8.030496597290039
    4. ' acc' → logprob: -8.155496597290039
    5. '   ' → logprob: -9.530496597290039
    6. '
' → logprob: -10.780496597290039
    7. ' print' → logprob: -11.655496597290039
    8. 'a' → logprob: -11.655496597290039
    9. 'ac' → logprob: -12.155496597290039
    10. 'ans' → logprob: -12.280496597290039

Token 131: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.049147721379995346
    2. ' =' → logprob: -3.299147605895996
    3. '=min' → logprob: -5.174147605895996
    4. ',' → logprob: -5.924147605895996
    5. '<|end|>' → logprob: -7.049147605895996
    6. ' if' → logprob: -7.174147605895996
    7. 'if' → logprob: -7.674147605895996
    8. '=max' → logprob: -7.799147605895996
    9. '<=' → logprob: -10.049147605895996
    10. ' ' → logprob: -10.549147605895996

Token 132: ' (' (ID: 350)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.16033288836479187
    2. ' min' → logprob: -1.9103329181671143
    3. 'acc' → logprob: -9.535332679748535
    4. ' acc' → logprob: -11.535332679748535
    5. ' alt' → logprob: -11.785332679748535
    6. 'alt' → logprob: -11.910332679748535
    7. '   ' → logprob: -12.285332679748535
    8. '(min' → logprob: -12.910332679748535
    9. ' ' → logprob: -13.660332679748535
    10. '[min' → logprob: -13.785332679748535

Token 133: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.2260514497756958
    2. ' acc' → logprob: -1.9760514497756958
    3. 'alt' → logprob: -3.2260513305664062
    4. 'min' → logprob: -4.601051330566406
    5. ' alt' → logprob: -4.726051330566406
    6. ' min' → logprob: -5.601051330566406
    7. '   ' → logprob: -7.476051330566406
    8. ' ' → logprob: -8.226051330566406
    9. 'ac' → logprob: -9.351051330566406
    10. ')' → logprob: -9.413551330566406

Token 134: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04991587996482849
    2. ',' → logprob: -3.0499157905578613
    3. 'if' → logprob: -6.799915790557861
    4. ' ,' → logprob: -9.29991626739502
    5. '<' → logprob: -9.79991626739502
    6. ' alt' → logprob: -10.54991626739502
    7. ' <' → logprob: -11.04991626739502
    8. ' ' → logprob: -11.17491626739502
    9. '
' → logprob: -12.92491626739502
    10. ')' → logprob: -13.04991626739502

Token 135: ' alt' (ID: 5001)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.11599612236022949
    2. ' alt' → logprob: -2.2409961223602295
    3. 'min' → logprob: -6.615996360778809
    4. ' min' → logprob: -6.740996360778809
    5. 'acc' → logprob: -7.490996360778809
    6. ' acc' → logprob: -9.990996360778809
    7. ')' → logprob: -10.865996360778809
    8. ' ' → logprob: -12.365996360778809
    9. '
' → logprob: -12.615996360778809
    10. '   ' → logprob: -12.615996360778809

Token 136: ')[' (ID: 13637)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006995969917625189
    2. ')[' → logprob: -5.006996154785156
    3. ')
' → logprob: -8.631996154785156
    4. '[' → logprob: -10.006996154785156
    5. ' )' → logprob: -11.006996154785156
    6. '   ' → logprob: -12.006996154785156
    7. 'if' → logprob: -12.006996154785156
    8. ').__' → logprob: -12.256996154785156
    9. 'min' → logprob: -12.881996154785156
    10. '),' → logprob: -13.006996154785156

Token 137: 'acc' (ID: 3717)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3570398986339569
    2. 'acc' → logprob: -1.4820399284362793
    3. '0' → logprob: -3.1070399284362793
    4. ' acc' → logprob: -4.482039928436279
    5. 'alt' → logprob: -4.607039928436279
    6. '<' → logprob: -6.357039928436279
    7. '>' → logprob: -6.607039928436279
    8. ':' → logprob: -7.232039928436279
    9. 'abs' → logprob: -7.232039928436279
    10. ']' → logprob: -7.607039928436279

Token 138: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0700346902012825
    2. ' >' → logprob: -2.6950347423553467
    3. '[' → logprob: -10.320034980773926
    4. ' ' → logprob: -10.820034980773926
    5. '>=' → logprob: -11.695034980773926
    6. '>x' → logprob: -11.945034980773926
    7. ']' → logprob: -12.070034980773926
    8. ']>' → logprob: -12.195034980773926
    9. '1' → logprob: -12.695034980773926
    10. '<' → logprob: -12.945034980773926

Token 139: ' alt' (ID: 5001)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.005238975863903761
    2. ' alt' → logprob: -5.255239009857178
    3. '0' → logprob: -13.25523853302002
    4. ' ' → logprob: -14.00523853302002
    5. '   ' → logprob: -14.50523853302002
    6. 'acc' → logprob: -14.63023853302002
    7. '_alt' → logprob: -15.00523853302002
    8. '  ' → logprob: -15.38023853302002
    9. 'opt' → logprob: -15.38023853302002
    10. '(' → logprob: -16.005239486694336

Token 140: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024847904220223427
    2. ')]' → logprob: -4.524847984313965
    3. ')' → logprob: -4.649847984313965
    4. '])' → logprob: -5.524847984313965
    5. ' ]' → logprob: -9.024847984313965
    6. '])]' → logprob: -11.274847984313965
    7. ']
' → logprob: -11.899847984313965
    8. ' )' → logprob: -12.274847984313965
    9. ')])' → logprob: -12.399847984313965
    10. '<|end|>' → logprob: -14.274847984313965

Token 141: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1472419600977446e-06
    2. '
' → logprob: -14.500000953674316
    3. ')' → logprob: -15.250000953674316
    4. ' print' → logprob: -15.375000953674316
    5. '#print' → logprob: -17.375001907348633
    6. 'for' → logprob: -17.625001907348633
    7. '```' → logprob: -17.875001907348633
    8. ')
' → logprob: -18.625001907348633
    9. '#' → logprob: -19.000001907348633
    10. 'n' → logprob: -19.000001907348633

Token 142: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.2525602877140045
    2. '(' → logprob: -1.5025602579116821
    3. '(sum' → logprob: -8.62756061553955
    4. '(a' → logprob: -8.75256061553955
    5. '(abs' → logprob: -9.12756061553955
    6. '()' → logprob: -9.50256061553955
    7. '((' → logprob: -10.12756061553955
    8. '('' → logprob: -11.12756061553955
    9. ' (' → logprob: -11.37756061553955
    10. '(ans' → logprob: -11.50256061553955

Token 143: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -13.875001907348633
    3. '))' → logprob: -14.875001907348633
    4. ')
' → logprob: -16.125001907348633
    5. ')`' → logprob: -17.500001907348633
    6. '+' → logprob: -18.250001907348633
    7. '')' → logprob: -18.875001907348633
    8. ')}' → logprob: -18.875001907348633
    9. '）' → logprob: -19.000001907348633
    10. '),' → logprob: -19.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 141
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 60
Tokens correctement prédits (top 10): 113
Précision stricte (1ère position): 39.72%
Précision adaptée (1ère position): 42.55%
Précision (top 10): 80.14%
================================================================================
