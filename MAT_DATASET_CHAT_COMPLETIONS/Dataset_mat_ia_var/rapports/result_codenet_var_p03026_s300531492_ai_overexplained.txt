================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demander à l'utilisateur de saisir un entier, qui sera assigné à la variable N
# Ceci correspond typiquement au nombre de sommets/nœuds dans un graphe/arbre
N = int(input())

# Créer une liste de listes vide, appelée E, de taille (N+1)
# E[i] contiendra la liste des voisins du nœud i, c'est-à-dire sa liste d'adjacence
# On commence à l'indice 0, mais on n'utilisera que les indices 1 à N inclusivement
E = [[] for i in range(N + 1)]

# Créer un dictionnaire vide nommé ans
# Il servira à stocker les valeurs assignées à chaque nœud
ans = {}

# Initialiser la variable First à 0 ; elle désignera le nœud ayant le plus de voisins (le degré maximal)
First = 0

# Initialiser la variable edges à 0 ; elle retiendra le degré (nombre d'arêtes) maximal rencontré
edges = 0

# Créer une liste vide q, qui sera employée comme file (queue) pour le parcours (BFS)
q = []

# Créer une liste visited, initialement de longueur N+1, de valeurs False
# visited[i] indiquera si le nœud i a été visité ou non lors du parcours
visited = [False] * (N + 1)

# Boucle pour lire les N-1 arêtes (parce que dans un arbre à N nœuds, il y a toujours N-1 arêtes)
for i in range(N - 1):
    # Lire une ligne d'entrée, couper la chaîne par les espaces et convertir chaque élément en entier
    # On obtient ainsi les deux nœuds (A et B) reliés par une arête
    A, B = map(int, input().split())
    
    # Ajouter B dans la liste des voisins de A et vice-versa
    # Ceci car le graphe est non-orienté
    E[A].append(B)
    E[B].append(A)
    
    # Si le nombre de voisins de A dépasse la valeur maximale atteinte jusque-là, mettre à jour
    if len(E[A]) > edges:
        First = A      # Le nouveau nœud initial sera A
        edges = len(E[A])  # Mettre à jour le maximum de degré observé
    
    # Faire la même vérification pour B, pour être sûr de détecter le vrai max
    if len(E[B]) > edges:
        First = B
        edges = len(E[B])

# Lire une ligne, séparer les éléments et les convertir en entiers pour former la liste C
# Cette liste C contiendra les valeurs à assigner aux nœuds
C = list(map(int, input().split()))

# Trier la liste C en ordre croissant
# Cela sera utile pour l'affectation ultérieure des valeurs aux nœuds
C.sort()

# Calculer la somme maximale possible en additionnant toutes les valeurs de C sauf la plus grande
# Ceci est obtenu en faisant sum(C) - C[-1]
max = sum(C) - C[-1]

# Ajouter le nœud First à la file q pour débuter le parcours
q.append(First)

# Boucle pour parcourir l'ensemble des nœuds de 1 à N
for i in range(1, N + 1):
    # Retirer et obtenir le premier élément de la file q
    # C'est le nœud à traiter (BFS : on traite le plus ancien inséré)
    x = q.pop(0)
    
    # Marquer x comme visité dans la liste visited
    visited[x] = True
    
    # Assigner au nœud x la i-ème valeur la plus grande de la liste C
    # Comme on la veut en décroissant, on prend C[-i]
    ans[x] = C[-i]
    
    # Pour tous les voisins xx de x dans la liste d'adjacence
    for xx in E[x]:
        # Si ce voisin n'a pas encore été visité
        if not visited[xx]:
            # L'ajouter à la file q pour le traiter plus tard
            q.append(xx)

# Afficher la somme maximale calculée précédemment
print(max)

# Initialiser une chaîne vide s pour la construction du résultat final
s = ""

# Boucle sur chaque nœud de 1 à N pour construire et afficher les assignations
for i in range(1, N + 1):
    # Convertir la valeur assignée du nœud i en chaîne et l'ajouter à s
    s += str(ans[i])
    
    # Si ce n'est pas le dernier nœud, ajouter un espace pour la séparation
    if i != N:
        s += " "

# Afficher la chaîne s qui contient les valeurs attribuées à chaque nœud, séparées par des espaces
print(s)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ander' (ID: 9330)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10995493829250336
    2. ' ' → logprob: -2.859954833984375
    3. ':' → logprob: -4.234954833984375
    4. '```' → logprob: -4.984954833984375
    5. ' à' → logprob: -5.484954833984375
    6. ''' → logprob: -5.484954833984375
    7. ' d' → logprob: -6.109954833984375
    8. ' de' → logprob: -6.234954833984375
    9. ' a' → logprob: -6.609954833984375
    10. 's' → logprob: -6.609954833984375

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1835603415966034
    2. 'util' → logprob: -1.9335603713989258
    3. 'user' → logprob: -4.183560371398926
    4. ' l' → logprob: -5.558560371398926
    5. 'u' → logprob: -5.808560371398926
    6. 'us' → logprob: -7.433560371398926
    7. ' user' → logprob: -9.433560371398926
    8. 'un' → logprob: -9.433560371398926
    9. 'input' → logprob: -10.933560371398926
    10. 'client' → logprob: -11.058560371398926

Token 5: ''utilisateur' (ID: 140803)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.809927225112915
    2. ''utilisateur' → logprob: -0.934927225112915
    3. ''' → logprob: -2.434927225112915
    4. 'a' → logprob: -3.059927225112915
    5. ' utilisateur' → logprob: -4.934926986694336
    6. ' ' → logprob: -5.184926986694336
    7. '’utilisateur' → logprob: -5.309926986694336
    8. '_' → logprob: -6.309926986694336
    9. 'e' → logprob: -6.434926986694336
    10. ' u' → logprob: -6.559926986694336

Token 6: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9538620114326477
    2. ' ' → logprob: -1.703861951828003
    3. 's' → logprob: -1.953861951828003
    4. 'input' → logprob: -2.453861951828003
    5. 'name' → logprob: -3.578861951828003
    6. '=' → logprob: -3.953861951828003
    7. ' =' → logprob: -4.203862190246582
    8. '=input' → logprob: -4.453862190246582
    9. ',' → logprob: -4.703862190246582
    10. '#' → logprob: -4.828862190246582

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.055717092007398605
    2. ' saisir' → logprob: -3.6807169914245605
    3. 'entr' → logprob: -3.9307169914245605
    4. 'r' → logprob: -5.0557169914245605
    5. ' entrer' → logprob: -7.0557169914245605
    6. '```' → logprob: -7.3057169914245605
    7. 'entrée' → logprob: -8.305717468261719
    8. 'contin' → logprob: -8.805717468261719
    9. '#' → logprob: -9.055717468261719
    10. 'ent' → logprob: -9.180717468261719

Token 8: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026280203834176064
    2. '_' → logprob: -3.901280164718628
    3. ''' → logprob: -6.526280403137207
    4. ' :' → logprob: -6.776280403137207
    5. 's' → logprob: -7.401280403137207
    6. ':' → logprob: -7.776280403137207
    7. ' un' → logprob: -7.901280403137207
    8. ' ' → logprob: -8.026280403137207
    9. ' =' → logprob: -8.776280403137207
    10. 'u' → logprob: -8.901280403137207

Token 9: ' entier' (ID: 80473)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5433986186981201
    2. ' nombre' → logprob: -1.1683986186981201
    3. 'nom' → logprob: -3.29339861869812
    4. 'e' → logprob: -3.91839861869812
    5. ' nom' → logprob: -4.043398857116699
    6. ' ' → logprob: -5.043398857116699
    7. 'texte' → logprob: -5.168398857116699
    8. 'n' → logprob: -5.293398857116699
    9. 'a' → logprob: -5.418398857116699
    10. '```' → logprob: -6.668398857116699

Token 10: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0407567024230957
    2. 'x' → logprob: -4.290756702423096
    3. '```' → logprob: -5.165756702423096
    4. 'ent' → logprob: -5.415756702423096
    5. 'nombre' → logprob: -5.415756702423096
    6. 'input' → logprob: -6.415756702423096
    7. 'i' → logprob: -6.665756702423096
    8. 'user' → logprob: -6.665756702423096
    9. '\n' → logprob: -6.665756702423096
    10. '`' → logprob: -6.915756702423096

Token 11: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.493720680475235
    2. 'n' → logprob: -1.6187206506729126
    3. 'input' → logprob: -2.368720769882202
    4. ' input' → logprob: -3.493720769882202
    5. 's' → logprob: -3.993720769882202
    6. 'a' → logprob: -4.618720531463623
    7. 'ent' → logprob: -4.618720531463623
    8. ' n' → logprob: -5.368720531463623
    9. 'x' → logprob: -5.868720531463623
    10. ' entier' → logprob: -6.368720531463623

Token 12: ' sera' (ID: 15511)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13178719580173492
    2. '_' → logprob: -2.8817873001098633
    3. 's' → logprob: -3.3817873001098633
    4. ''' → logprob: -4.131787300109863
    5. '`' → logprob: -5.506787300109863
    6. '```' → logprob: -6.631787300109863
    7. ' sera' → logprob: -6.756787300109863
    8. 'est' → logprob: -6.881787300109863
    9. '_s' → logprob: -7.131787300109863
    10. 'n' → logprob: -7.381787300109863

Token 13: ' assign' (ID: 14975)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.12972377240657806
    2. 'convert' → logprob: -3.2547237873077393
    3. 'stock' → logprob: -3.5047237873077393
    4. ' utilisé' → logprob: -3.7547237873077393
    5. ' convert' → logprob: -4.87972354888916
    6. 'util' → logprob: -5.25472354888916
    7. 'multip' → logprob: -5.75472354888916
    8. ' multip' → logprob: -5.75472354888916
    9. ' ensuite' → logprob: -6.00472354888916
    10. 's' → logprob: -6.25472354888916

Token 14: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0011109242914244533
    2. 'u' → logprob: -7.126111030578613
    3. 'r' → logprob: -8.876111030578613
    4. '#' → logprob: -10.001111030578613
    5. '́' → logprob: -10.001111030578613
    6. '�' → logprob: -11.626111030578613
    7. ' é' → logprob: -11.751111030578613
    8. '=' → logprob: -11.876111030578613
    9. '\u' → logprob: -12.001111030578613
    10. ''' → logprob: -12.251111030578613

Token 15: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10160060971975327
    2. ' ' → logprob: -2.7266006469726562
    3. ' à' → logprob: -3.8516006469726562
    4. ' a' → logprob: -5.726600646972656
    5. '_a' → logprob: -5.976600646972656
    6. ' _' → logprob: -6.351600646972656
    7. '_space' → logprob: -7.726600646972656
    8. ' au' → logprob: -8.226600646972656
    9. 'à' → logprob: -8.351600646972656
    10. ' =' → logprob: -8.726600646972656

Token 16: ' la' (ID: 557)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '`' → logprob: -1.120692253112793
    2. 'variable' → logprob: -1.745692253112793
    3. 'une' → logprob: -1.870692253112793
    4. 'n' → logprob: -2.370692253112793
    5. '```' → logprob: -2.870692253112793
    6. 'la' → logprob: -3.120692253112793
    7. 'a' → logprob: -3.370692253112793
    8. ' variable' → logprob: -3.495692253112793
    9. ' la' → logprob: -3.995692253112793
    10. 'nombre' → logprob: -4.120692253112793

Token 17: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.2659315764904022
    2. 'nombre' → logprob: -2.7659316062927246
    3. ' variable' → logprob: -3.0159316062927246
    4. 'n' → logprob: -3.7659316062927246
    5. 'v' → logprob: -3.7659316062927246
    6. 'var' → logprob: -4.265931606292725
    7. 's' → logprob: -4.515931606292725
    8. 'a' → logprob: -4.765931606292725
    9. '_' → logprob: -4.890931606292725
    10. ' ' → logprob: -5.265931606292725

Token 18: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6426371335983276
    2. 'n' → logprob: -2.017637252807617
    3. '`' → logprob: -2.267637252807617
    4. '_' → logprob: -2.767637252807617
    5. ' entier' → logprob: -3.392637252807617
    6. '```' → logprob: -3.642637252807617
    7. 'ent' → logprob: -3.892637252807617
    8. ' `' → logprob: -4.142637252807617
    9. 'a' → logprob: -4.392637252807617
    10. 'nombre' → logprob: -4.517637252807617

Token 19: '
' (ID: 198)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0036326120607554913
    2. 'n' → logprob: -5.628632545471191
    3. '```' → logprob: -11.378632545471191
    4. 'i' → logprob: -11.628632545471191
    5. '`' → logprob: -12.753632545471191
    6. 'x' → logprob: -12.878632545471191
    7. '#' → logprob: -13.253632545471191
    8. ' N' → logprob: -14.128632545471191
    9. '_' → logprob: -14.128632545471191
    10. '\n' → logprob: -14.628632545471191

Token 20: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.012797567993402481
    2. 'n' → logprob: -4.3877973556518555
    3. '\' → logprob: -10.012797355651855
    4. '\n' → logprob: -10.012797355651855
    5. '```' → logprob: -10.262797355651855
    6. '_' → logprob: -10.762797355651855
    7. '#' → logprob: -10.887797355651855
    8. ' ' → logprob: -11.012797355651855
    9. ' N' → logprob: -11.012797355651855
    10. 'x' → logprob: -11.262797355651855

Token 21: ' Ceci' (ID: 144699)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.014139651320874691
    2. ' N' → logprob: -5.014139652252197
    3. 'n' → logprob: -5.514139652252197
    4. ' ' → logprob: -5.764139652252197
    5. '#' → logprob: -10.264139175415039
    6. ' ' → logprob: -10.514139175415039
    7. '_' → logprob: -10.764139175415039
    8. 'i' → logprob: -10.889139175415039
    9. ' #' → logprob: -11.014139175415039
    10. ' n' → logprob: -11.139139175415039

Token 22: ' correspond' (ID: 11095)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2541000247001648
    2. ' ' → logprob: -1.6291000843048096
    3. ' n' → logprob: -4.8790998458862305
    4. '_' → logprob: -5.2540998458862305
    5. '=' → logprob: -6.3790998458862305
    6. ' vaut' → logprob: -6.3790998458862305
    7. ' sera' → logprob: -6.3790998458862305
    8. 'n' → logprob: -6.5040998458862305
    9. ' va' → logprob: -6.5040998458862305
    10. ' a' → logprob: -6.6290998458862305

Token 23: ' typ' (ID: 5378)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.017180074006319046
    2. ' au' → logprob: -4.6421799659729
    3. ' =' → logprob: -6.0171799659729
    4. 'à' → logprob: -6.1421799659729
    5. ' a' → logprob: -6.3921799659729
    6. ' ' → logprob: -8.392180442810059
    7. ' to' → logprob: -8.517180442810059
    8. 'au' → logprob: -8.517180442810059
    9. '  ' → logprob: -8.642180442810059
    10. '=' → logprob: -9.517180442810059

Token 24: 'iquement' (ID: 83934)
  Prédit: 'iquement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iquement' → logprob: -0.6343485713005066
    2. 'é' → logprob: -1.8843486309051514
    3. 'quement' → logprob: -1.8843486309051514
    4. 'e' → logprob: -2.6343486309051514
    5. '#' → logprob: -3.1343486309051514
    6. 'que' → logprob: -3.5093486309051514
    7. 'q' → logprob: -4.634348392486572
    8. 'qu' → logprob: -5.384348392486572
    9. 'ique' → logprob: -6.009348392486572
    10. '```' → logprob: -7.009348392486572

Token 25: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.014764491468667984
    2. 'à' → logprob: -4.764764308929443
    3. ' au' → logprob: -6.014764308929443
    4. ' ' → logprob: -6.264764308929443
    5. ' a' → logprob: -7.639764308929443
    6. 'au' → logprob: -8.014764785766602
    7. '  ' → logprob: -8.389764785766602
    8. ' ' → logprob: -8.389764785766602
    9. 's' → logprob: -9.139764785766602
    10. ''à' → logprob: -9.514764785766602

Token 26: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -1.1426657438278198
    2. 'input' → logprob: -1.5176657438278198
    3. ' nombre' → logprob: -2.1426658630371094
    4. ' type' → logprob: -2.6426658630371094
    5. ' input' → logprob: -2.6426658630371094
    6. 'type' → logprob: -3.0176658630371094
    7. 'entrée' → logprob: -3.1426658630371094
    8. ' point' → logprob: -4.392665863037109
    9. 's' → logprob: -4.517665863037109
    10. 'point' → logprob: -4.642665863037109

Token 27: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6390123963356018
    2. ' ' → logprob: -0.7640123963356018
    3. '_d' → logprob: -6.389012336730957
    4. '_de' → logprob: -6.389012336730957
    5. 'd' → logprob: -6.889012336730957
    6. ' d' → logprob: -7.889012336730957
    7. ' de' → logprob: -8.014012336730957
    8. ')' → logprob: -8.264012336730957
    9. '_total' → logprob: -8.264012336730957
    10. 'de' → logprob: -8.889012336730957

Token 28: ' somm' (ID: 44830)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -1.318686842918396
    2. 'élé' → logprob: -1.443686842918396
    3. ' ' → logprob: -1.943686842918396
    4. 'l' → logprob: -2.6936869621276855
    5. 'é' → logprob: -3.0686869621276855
    6. ' personnes' → logprob: -3.8186869621276855
    7. 's' → logprob: -3.8186869621276855
    8. '_' → logprob: -4.0686869621276855
    9. ' éléments' → logprob: -4.1936869621276855
    10. 'person' → logprob: -4.3186869621276855

Token 29: 'ets' (ID: 1719)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.001822024118155241
    2. 'e' → logprob: -6.501821994781494
    3. 'ets' → logprob: -9.126822471618652
    4. '#' → logprob: -9.751822471618652
    5. 'et' → logprob: -9.876822471618652
    6. 'etes' → logprob: -10.501822471618652
    7. 'ation' → logprob: -10.626822471618652
    8. 'ations' → logprob: -11.501822471618652
    9. 'a' → logprob: -12.001822471618652
    10. 'er' → logprob: -12.376822471618652

Token 30: '/n' (ID: 18292)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01301527488976717
    2. 'n' → logprob: -4.513015270233154
    3. '#' → logprob: -7.263015270233154
    4. '```' → logprob: -7.763015270233154
    5. '\n' → logprob: -8.388015747070312
    6. '\' → logprob: -8.888015747070312
    7. '.' → logprob: -9.263015747070312
    8. ':' → logprob: -9.888015747070312
    9. 's' → logprob: -9.888015747070312
    10. ',' → logprob: -10.013015747070312

Token 31: 'œ' (ID: 15335)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45911070704460144
    2. '=' → logprob: -1.8341107368469238
    3. ')' → logprob: -2.834110736846924
    4. 'N' → logprob: -3.209110736846924
    5. ' ' → logprob: -3.209110736846924
    6. ' =' → logprob: -3.209110736846924
    7. '```' → logprob: -4.834110736846924
    8. '\' → logprob: -4.959110736846924
    9. '`' → logprob: -6.084110736846924
    10. ' )' → logprob: -6.084110736846924

Token 32: 'uds' (ID: 44387)
  Prédit: 'uds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uds' → logprob: -0.7689265012741089
    2. 'd' → logprob: -0.8939265012741089
    3. 'ud' → logprob: -2.3939266204833984
    4. 'u' → logprob: -3.5189266204833984
    5. 'ds' → logprob: -6.268926620483398
    6. '\xc2' → logprob: -7.268926620483398
    7. 'ù' → logprob: -7.518926620483398
    8. 'û' → logprob: -7.518926620483398
    9. 'œ' → logprob: -8.268926620483398
    10. 'ú' → logprob: -8.643926620483398

Token 33: ' dans' (ID: 2671)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004670780152082443
    2. 'n' → logprob: -5.5046706199646
    3. '#' → logprob: -7.8796706199646
    4. '```' → logprob: -9.629671096801758
    5. '\n' → logprob: -10.004671096801758
    6. '\' → logprob: -10.879671096801758
    7. '
' → logprob: -11.004671096801758
    8. '

' → logprob: -11.504671096801758
    9. ' N' → logprob: -11.879671096801758
    10. '' → logprob: -11.879671096801758

Token 34: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15463624894618988
    2. ' un' → logprob: -2.5296361446380615
    3. ' le' → logprob: -3.2796361446380615
    4. ' ' → logprob: -4.779636383056641
    5. ' graph' → logprob: -5.029636383056641
    6. ' l' → logprob: -5.904636383056641
    7. ' la' → logprob: -6.029636383056641
    8. 'le' → logprob: -6.654636383056641
    9. ' grap' → logprob: -6.904636383056641
    10. 'l' → logprob: -7.154636383056641

Token 35: ' grap' (ID: 60955)
  Prédit: ' grap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grap' → logprob: -0.7438897490501404
    2. 'graph' → logprob: -1.3688898086547852
    3. ' graph' → logprob: -1.6188898086547852
    4. ' ' → logprob: -3.493889808654785
    5. 'gr' → logprob: -3.743889808654785
    6. ' ' → logprob: -4.868889808654785
    7. ' graphique' → logprob: -5.493889808654785
    8. '	graph' → logprob: -5.993889808654785
    9. '_graph' → logprob: -7.243889808654785
    10. '   ' → logprob: -7.868889808654785

Token 36: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.34945249557495117
    2. 'he' → logprob: -1.2244524955749512
    3. 'aphe' → logprob: -8.59945297241211
    4. '#' → logprob: -9.22445297241211
    5. 'hé' → logprob: -9.22445297241211
    6. 'rap' → logprob: -9.34945297241211
    7. 'hne' → logprob: -9.84945297241211
    8. 'raph' → logprob: -9.97445297241211
    9. 'phe' → logprob: -10.09945297241211
    10. 'hap' → logprob: -10.34945297241211

Token 37: '/ar' (ID: 191806)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.002397770993411541
    2. 'n' → logprob: -6.127397537231445
    3. '#' → logprob: -9.252397537231445
    4. '
' → logprob: -9.502397537231445
    5. '```' → logprob: -11.127397537231445
    6. '' → logprob: -12.002397537231445
    7. '\n' → logprob: -12.252397537231445
    8. '

' → logprob: -12.502397537231445
    9. '\' → logprob: -12.752397537231445
    10. ' 
' → logprob: -13.002397537231445

Token 38: 'bre' (ID: 9945)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8137820959091187
    2. 'ê' → logprob: -1.6887820959091187
    3. 'b' → logprob: -2.063782215118408
    4. 'g' → logprob: -2.188782215118408
    5. 'c' → logprob: -3.313782215118408
    6. 'r' → logprob: -3.563782215118408
    7. 'é' → logprob: -4.313782215118408
    8. 't' → logprob: -4.313782215118408
    9. '#' → logprob: -4.563782215118408
    10. 'ç' → logprob: -5.313782215118408

Token 39: '
' (ID: 198)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0039048073813319206
    2. 'n' → logprob: -5.628904819488525
    3. '#' → logprob: -8.378904342651367
    4. '
' → logprob: -11.003904342651367
    5. '\n' → logprob: -11.003904342651367
    6. '```' → logprob: -11.003904342651367
    7. '' → logprob: -11.503904342651367
    8. '\' → logprob: -12.378904342651367
    9. ' N' → logprob: -13.253904342651367
    10. '

' → logprob: -13.253904342651367

Token 40: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0013996411580592394
    2. 'n' → logprob: -6.626399517059326
    3. '
' → logprob: -10.126399993896484
    4. '#' → logprob: -11.001399993896484
    5. '```' → logprob: -12.376399993896484
    6. '' → logprob: -12.751399993896484
    7. '\n' → logprob: -12.751399993896484
    8. '

' → logprob: -13.126399993896484
    9. '\' → logprob: -13.376399993896484
    10. ' 
' → logprob: -14.001399993896484

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005244072061032057
    2. '=' → logprob: -5.255244255065918
    3. ' ' → logprob: -12.630244255065918
    4. ' ' → logprob: -13.005244255065918
    5. '=int' → logprob: -13.005244255065918
    6. '=input' → logprob: -14.380244255065918
    7. 's' → logprob: -14.630244255065918
    8. 'space' → logprob: -14.755244255065918
    9. ' =
' → logprob: -15.005244255065918
    10. ',' → logprob: -15.130244255065918

Token 42: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0013369088992476463
    2. 'int' → logprob: -7.001337051391602
    3. ' input' → logprob: -8.126337051391602
    4. ' ' → logprob: -9.001337051391602
    5. 'input' → logprob: -12.876337051391602
    6. '=int' → logprob: -13.376337051391602
    7. ' ' → logprob: -13.626337051391602
    8. ' in' → logprob: -15.251337051391602
    9. '  ' → logprob: -15.376337051391602
    10. '	int' → logprob: -15.626337051391602

Token 43: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931660175323486
    2. '(input' → logprob: -0.6931660175323486
    3. 'input' → logprob: -12.19316577911377
    4. '(
' → logprob: -12.44316577911377
    5. ' (' → logprob: -12.69316577911377
    6. '('' → logprob: -13.06816577911377
    7. '(int' → logprob: -13.31816577911377
    8. '()' → logprob: -14.19316577911377
    9. '(

' → logprob: -15.06816577911377
    10. '(eval' → logprob: -15.56816577911377

Token 44: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46848493814468384
    2. '("("' → logprob: -1.093484878540039
    3. '('' → logprob: -3.843484878540039
    4. '("' → logprob: -4.343484878540039
    5. '()' → logprob: -6.218484878540039
    6. '("")' → logprob: -6.843484878540039
    7. '(""))' → logprob: -7.468484878540039
    8. '("(' → logprob: -7.843484878540039
    9. '(">' → logprob: -8.218484878540039
    10. '(
' → logprob: -9.843484878540039

Token 45: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5548617839813232
    2. '#' → logprob: -1.6798617839813232
    3. '
' → logprob: -2.9298617839813232
    4. '\n' → logprob: -2.9298617839813232
    5. '\' → logprob: -3.1798617839813232
    6. ' ' → logprob: -3.3048617839813232
    7. '<|end|>' → logprob: -3.6798617839813232
    8. '```' → logprob: -4.679862022399902
    9. '  
' → logprob: -5.804862022399902
    10. '.' → logprob: -6.054862022399902

Token 46: ' Cr' (ID: 5790)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.5212160348892212
    2. ' adjacency' → logprob: -1.5212160348892212
    3. 'for' → logprob: -1.6462160348892212
    4. '#' → logprob: -2.3962159156799316
    5. ' edges' → logprob: -2.7712159156799316
    6. ' graph' → logprob: -3.1462159156799316
    7. 'graph' → logprob: -3.1462159156799316
    8. ' #' → logprob: -3.2712159156799316
    9. 'adj' → logprob: -3.7712159156799316
    10. ' ' → logprob: -3.7712159156799316

Token 47: 'éer' (ID: 83012)
  Prédit: 'éer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éer' → logprob: -0.1032325029373169
    2. 'é' → logprob: -2.4782323837280273
    3. 'ée' → logprob: -4.853232383728027
    4. 'e' → logprob: -6.353232383728027
    5. 'ép' → logprob: -6.603232383728027
    6. 'a' → logprob: -6.728232383728027
    7. '#' → logprob: -7.103232383728027
    8. 'ea' → logprob: -7.603232383728027
    9. 'éf' → logprob: -8.228232383728027
    10. 'éal' → logprob: -9.228232383728027

Token 48: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003442832676228136
    2. '()' → logprob: -9.000344276428223
    3. '('' → logprob: -9.125344276428223
    4. '("' → logprob: -10.125344276428223
    5. ' (' → logprob: -11.125344276428223
    6. '([' → logprob: -11.875344276428223
    7. ')' → logprob: -12.000344276428223
    8. ' ' → logprob: -12.125344276428223
    9. 'a' → logprob: -12.250344276428223
    10. '(`' → logprob: -12.500344276428223

Token 49: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.09195246547460556
    2. 'liste' → logprob: -2.8419525623321533
    3. ' ' → logprob: -4.216952323913574
    4. 'list' → logprob: -5.966952323913574
    5. ' list' → logprob: -6.216952323913574
    6. '[' → logprob: -6.341952323913574
    7. 's' → logprob: -6.341952323913574
    8. ' ```' → logprob: -7.341952323913574
    9. '[]' → logprob: -7.466952323913574
    10. 'Liste' → logprob: -7.591952323913574

Token 50: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.020127534866333
    2. '()' → logprob: -2.020127534866333
    3. '[]' → logprob: -2.270127534866333
    4. 's' → logprob: -2.395127534866333
    5. '_' → logprob: -2.395127534866333
    6. 'graph' → logprob: -3.020127534866333
    7. '[' → logprob: -3.145127534866333
    8. 'des' → logprob: -3.770127534866333
    9. '_nodes' → logprob: -4.145127296447754
    10. '_graph' → logprob: -4.270127296447754

Token 51: ' listes' (ID: 179198)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6972678899765015
    2. '[' → logprob: -0.8222678899765015
    3. '[N' → logprob: -3.447268009185791
    4. ' N' → logprob: -5.447268009185791
    5. ' [' → logprob: -5.572268009185791
    6. '_' → logprob: -5.572268009185791
    7. ' []' → logprob: -5.822268009185791
    8. ' ' → logprob: -5.947268009185791
    9. '0' → logprob: -6.072268009185791
    10. 'list' → logprob: -6.322268009185791

Token 52: ' vide' (ID: 21835)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3548824191093445
    2. 'adj' → logprob: -2.1048824787139893
    3. ' graph' → logprob: -2.2298824787139893
    4. ' adjacency' → logprob: -3.7298824787139893
    5. '[]' → logprob: -4.85488224029541
    6. ' adj' → logprob: -5.10488224029541
    7. '[' → logprob: -5.22988224029541
    8. 'G' → logprob: -5.22988224029541
    9. 's' → logprob: -5.60488224029541
    10. '_graph' → logprob: -5.72988224029541

Token 53: ',' (ID: 11)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.46221593022346497
    2. '[' → logprob: -1.7122159004211426
    3. ' graph' → logprob: -2.5872159004211426
    4. 's' → logprob: -3.4622159004211426
    5. 'adj' → logprob: -3.9622159004211426
    6. '[]' → logprob: -4.212215900421143
    7. '(' → logprob: -4.712215900421143
    8. '_' → logprob: -5.337215900421143
    9. '_graph' → logprob: -5.587215900421143
    10. '(graph' → logprob: -5.837215900421143

Token 54: ' appelée' (ID: 179130)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9882379174232483
    2. ' [[]' → logprob: -1.1132378578186035
    3. ' [' → logprob: -2.1132378578186035
    4. ' ' → logprob: -2.9882378578186035
    5. ' []' → logprob: -3.2382378578186035
    6. ' adjacency' → logprob: -3.6132378578186035
    7. '[]' → logprob: -3.9882378578186035
    8. ' graph' → logprob: -4.1132378578186035
    9. 'graph' → logprob: -4.9882378578186035
    10. 'adj' → logprob: -5.2382378578186035

Token 55: ' E' (ID: 457)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.8546958565711975
    2. ' adjacency' → logprob: -1.3546957969665527
    3. 'graph' → logprob: -2.2296957969665527
    4. ' adj' → logprob: -2.6046957969665527
    5. 'adj' → logprob: -2.6046957969665527
    6. ' grap' → logprob: -4.354695796966553
    7. ' voisins' → logprob: -4.479695796966553
    8. '```' → logprob: -4.479695796966553
    9. 'G' → logprob: -5.354695796966553
    10. ' G' → logprob: -5.604695796966553

Token 56: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5998026728630066
    2. '=' → logprob: -2.2248027324676514
    3. '[]' → logprob: -2.2248027324676514
    4. '[' → logprob: -2.2248027324676514
    5. 'E' → logprob: -2.7248027324676514
    6. '(' → logprob: -4.099802494049072
    7. '[:]' → logprob: -4.599802494049072
    8. 's' → logprob: -4.974802494049072
    9. '[E' → logprob: -4.974802494049072
    10. '=[]' → logprob: -5.099802494049072

Token 57: ' de' (ID: 334)
  Prédit: ' [[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.7426502108573914
    2. '[' → logprob: -1.7426502704620361
    3. ' []' → logprob: -1.8676502704620361
    4. ' [' → logprob: -2.117650270462036
    5. '[]' → logprob: -2.992650270462036
    6. ' ' → logprob: -3.867650270462036
    7. '[E' → logprob: -7.117650032043457
    8. ' E' → logprob: -7.617650032043457
    9. '[:]' → logprob: -7.617650032043457
    10. ' [
' → logprob: -7.992650032043457

Token 58: ' taille' (ID: 41644)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7563369274139404
    2. '[' → logprob: -1.6313369274139404
    3. ' taille' → logprob: -1.6313369274139404
    4. ' []' → logprob: -3.2563369274139404
    5. 'tail' → logprob: -3.8813369274139404
    6. 'len' → logprob: -4.3813371658325195
    7. ' ' → logprob: -4.5063371658325195
    8. ' size' → logprob: -4.6313371658325195
    9. ' [' → logprob: -4.7563371658325195
    10. 'size' → logprob: -4.7563371658325195

Token 59: ' (' (ID: 350)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.22661259770393372
    2. 'N' → logprob: -1.6016125679016113
    3. ' ' → logprob: -8.10161304473877
    4. '(N' → logprob: -8.22661304473877
    5. '[N' → logprob: -8.47661304473877
    6. ' (' → logprob: -8.60161304473877
    7. '[' → logprob: -9.60161304473877
    8. '(' → logprob: -9.85161304473877
    9. ' ' → logprob: -10.85161304473877
    10. ' [' → logprob: -11.10161304473877

Token 60: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.31569576263427734
    2. ' N' → logprob: -1.3156957626342773
    3. ')' → logprob: -6.440695762634277
    4. '(N' → logprob: -7.690695762634277
    5. ' )' → logprob: -9.065695762634277
    6. ' ' → logprob: -9.315695762634277
    7. ' (' → logprob: -9.440695762634277
    8. '(' → logprob: -9.815695762634277
    9. '	N' → logprob: -11.190695762634277
    10. ' ' → logprob: -11.815695762634277

Token 61: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03552505746483803
    2. '+' → logprob: -3.78552508354187
    3. ' )' → logprob: -4.660524845123291
    4. ' +' → logprob: -6.535524845123291
    5. '-' → logprob: -8.41052532196045
    6. ',' → logprob: -8.53552532196045
    7. 'x' → logprob: -8.78552532196045
    8. ' x' → logprob: -8.78552532196045
    9. ')x' → logprob: -8.91052532196045
    10. '+)' → logprob: -9.53552532196045

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003670364967547357
    2. ' ' → logprob: -8.000367164611816
    3. '2' → logprob: -10.500367164611816
    4. ')' → logprob: -13.000367164611816
    5. '  ' → logprob: -14.625367164611816
    6. '```' → logprob: -15.500367164611816
    7. ' )' → logprob: -15.750367164611816
    8. 'N' → logprob: -15.750367164611816
    9. '   ' → logprob: -16.1253662109375
    10. '0' → logprob: -16.3753662109375

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008198728901334107
    2. '[' → logprob: -7.875819683074951
    3. ' )' → logprob: -8.37582015991211
    4. '[])' → logprob: -9.50082015991211
    5. ']' → logprob: -10.00082015991211
    6. '),' → logprob: -10.75082015991211
    7. '[]' → logprob: -10.75082015991211
    8. ')[' → logprob: -11.00082015991211
    9. ')
' → logprob: -11.75082015991211
    10. '```' → logprob: -12.37582015991211

Token 64: '#' (ID: 2)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.00473414920270443
    2. ' E' → logprob: -5.379734039306641
    3. ',' → logprob: -9.87973403930664
    4. ' =' → logprob: -10.87973403930664
    5. '[' → logprob: -11.00473403930664
    6. ' ,' → logprob: -12.75473403930664
    7. ' 
' → logprob: -12.75473403930664
    8. ' ' → logprob: -12.87973403930664
    9. 'e' → logprob: -13.00473403930664
    10. 's' → logprob: -13.00473403930664

Token 65: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.03367428854107857
    2. ' E' → logprob: -3.4086742401123047
    3. ' ' → logprob: -11.158674240112305
    4. ' 
' → logprob: -12.283674240112305
    5. ',' → logprob: -13.658674240112305
    6. ' =' → logprob: -13.658674240112305
    7. ' ,' → logprob: -13.783674240112305
    8. '```' → logprob: -13.908674240112305
    9. '  
' → logprob: -14.283674240112305
    10. '
' → logprob: -14.283674240112305

Token 66: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018235746771097183
    2. '=' → logprob: -4.018235683441162
    3. '[' → logprob: -10.39323616027832
    4. ' ' → logprob: -11.14323616027832
    5. '=[]' → logprob: -11.39323616027832
    6. ' =[' → logprob: -12.01823616027832
    7. '[]' → logprob: -12.14323616027832
    8. '=[' → logprob: -12.39323616027832
    9. 'E' → logprob: -12.76823616027832
    10. '.' → logprob: -13.01823616027832

Token 67: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005405457690358162
    2. ' ]' → logprob: -6.255405426025391
    3. ')' → logprob: -6.630405426025391
    4. ' =' → logprob: -6.880405426025391
    5. ']=' → logprob: -7.380405426025391
    6. '=' → logprob: -8.38040542602539
    7. '][]' → logprob: -8.63040542602539
    8. '])' → logprob: -11.00540542602539
    9. '][' → logprob: -11.13040542602539
    10. '],' → logprob: -11.75540542602539

Token 68: ' cont' (ID: 836)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038381461054086685
    2. '=' → logprob: -3.288381576538086
    3. '=[]' → logprob: -8.413381576538086
    4. ' ' → logprob: -9.913381576538086
    5. '<|end|>' → logprob: -10.538381576538086
    6. '.append' → logprob: -12.163381576538086
    7. ']' → logprob: -12.163381576538086
    8. 's' → logprob: -12.413381576538086
    9. '[]' → logprob: -12.663381576538086
    10. ',' → logprob: -12.788381576538086

Token 69: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5389392971992493
    2. 'ient' → logprob: -1.7889392375946045
    3. 'inue' → logprob: -1.9139392375946045
    4. 'e' → logprob: -3.4139392375946045
    5. 'iend' → logprob: -3.6639392375946045
    6. 'in' → logprob: -4.413939476013184
    7. ' =' → logprob: -5.038939476013184
    8. 'ien' → logprob: -5.038939476013184
    9. 'iennent' → logprob: -5.788939476013184
    10. '=' → logprob: -5.788939476013184

Token 70: 'endra' (ID: 32364)
  Prédit: 'endra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endra' → logprob: -0.34432661533355713
    2. 'ent' → logprob: -1.5943266153335571
    3. 'end' → logprob: -3.0943264961242676
    4. 'nent' → logprob: -3.9693264961242676
    5. 'n' → logprob: -4.219326496124268
    6. 'nt' → logprob: -6.094326496124268
    7. 'nd' → logprob: -6.844326496124268
    8. 'endr' → logprob: -6.969326496124268
    9. 'nds' → logprob: -7.094326496124268
    10. 'ents' → logprob: -7.969326496124268

Token 71: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.2659475803375244
    2. '[]' → logprob: -1.3909475803375244
    3. ' des' → logprob: -1.3909475803375244
    4. ' []' → logprob: -2.5159475803375244
    5. '<|end|>' → logprob: -3.2659475803375244
    6. ' ' → logprob: -3.3909475803375244
    7. ' la' → logprob: -3.5159475803375244
    8. ' =' → logprob: -5.140947341918945
    9. ' l' → logprob: -5.140947341918945
    10. '=[]' → logprob: -5.515947341918945

Token 72: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.46461454033851624
    2. 's' → logprob: -1.0896145105361938
    3. 'liste' → logprob: -3.5896146297454834
    4. ' listes' → logprob: -6.339614391326904
    5. ' list' → logprob: -7.089614391326904
    6. 'is' → logprob: -7.339614391326904
    7. 'ss' → logprob: -7.839614391326904
    8. 'ls' → logprob: -7.964614391326904
    9. 'l' → logprob: -8.214614868164062
    10. 'list' → logprob: -8.464614868164062

Token 73: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.028901483863592148
    2. '<|end|>' → logprob: -4.27890157699585
    3. 'des' → logprob: -5.27890157699585
    4. ' ' → logprob: -5.77890157699585
    5. 's' → logprob: -5.90390157699585
    6. ' d' → logprob: -6.65390157699585
    7. ' de' → logprob: -7.15390157699585
    8. '[]' → logprob: -7.27890157699585
    9. '_des' → logprob: -7.90390157699585
    10. 'd' → logprob: -9.028901100158691

Token 74: ' voisins' (ID: 166720)
  Prédit: ' voisins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.10935840755701065
    2. ' ' → logprob: -3.609358310699463
    3. ' voisin' → logprob: -3.734358310699463
    4. ' espaces' → logprob: -3.984358310699463
    5. ' ar' → logprob: -4.359358310699463
    6. ' a' → logprob: -6.109358310699463
    7. 's' → logprob: -6.484358310699463
    8. 'a' → logprob: -6.484358310699463
    9. ' neighbors' → logprob: -6.484358310699463
    10. ' listes' → logprob: -6.859358310699463

Token 75: ' du' (ID: 1462)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9474309682846069
    2. '<|end|>' → logprob: -1.322430968284607
    3. ' de' → logprob: -2.3224310874938965
    4. '[' → logprob: -2.8224310874938965
    5. ' des' → logprob: -3.0724310874938965
    6. '[i' → logprob: -3.1974310874938965
    7. '[]' → logprob: -3.3224310874938965
    8. ' ' → logprob: -4.0724310874938965
    9. 'de' → logprob: -4.9474310874938965
    10. 'des' → logprob: -5.1974310874938965

Token 76: ' n' (ID: 297)
  Prédit: ' sommet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.07378499209880829
    2. ' i' → logprob: -2.6987850666046143
    3. 'i' → logprob: -6.448784828186035
    4. ' noe' → logprob: -6.823784828186035
    5. ' ' → logprob: -7.448784828186035
    6. 's' → logprob: -8.448784828186035
    7. 'som' → logprob: -9.448784828186035
    8. 'n' → logprob: -9.698784828186035
    9. ' node' → logprob: -9.698784828186035
    10. ' n' → logprob: -9.698784828186035

Token 77: 'œ' (ID: 15335)
  Prédit: 'œ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'œ' → logprob: -0.00599219324067235
    2. 'oe' → logprob: -6.005992412567139
    3. 'o' → logprob: -6.630992412567139
    4. 'i' → logprob: -6.755992412567139
    5. '```' → logprob: -7.380992412567139
    6. '_' → logprob: -9.50599193572998
    7. '_i' → logprob: -10.00599193572998
    8. '[i' → logprob: -10.13099193572998
    9. '\xc2' → logprob: -10.13099193572998
    10. ' i' → logprob: -10.75599193572998

Token 78: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.013238699175417423
    2. 'd' → logprob: -4.763238906860352
    3. 'œ' → logprob: -6.138238906860352
    4. 'uds' → logprob: -7.263238906860352
    5. 'e' → logprob: -7.763238906860352
    6. '\xc2' → logprob: -7.888238906860352
    7. 'u' → logprob: -8.138238906860352
    8. 'i' → logprob: -9.013238906860352
    9. '```' → logprob: -9.263238906860352
    10. '#' → logprob: -9.638238906860352

Token 79: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03514429181814194
    2. 'i' → logprob: -3.410144329071045
    3. ' ' → logprob: -7.410144329071045
    4. ' ' → logprob: -8.285143852233887
    5. '[i' → logprob: -8.285143852233887
    6. '	i' → logprob: -9.660143852233887
    7. ' '' → logprob: -10.035143852233887
    8. '  ' → logprob: -10.160143852233887
    9. '   ' → logprob: -10.410143852233887
    10. '```' → logprob: -10.410143852233887

Token 80: ',' (ID: 11)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0029290912207216024
    2. '
' → logprob: -6.502929210662842
    3. ' E' → logprob: -6.752929210662842
    4. ',' → logprob: -9.627928733825684
    5. ' 
' → logprob: -9.877928733825684
    6. '```' → logprob: -10.002928733825684
    7. '' → logprob: -11.002928733825684
    8. '
' → logprob: -11.127928733825684
    9. '

' → logprob: -11.627928733825684
    10. '.' → logprob: -11.752928733825684

Token 81: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.025781946256756783
    2. ' for' → logprob: -5.150782108306885
    3. ' E' → logprob: -5.775782108306885
    4. ')' → logprob: -5.775782108306885
    5. 'for' → logprob: -6.025782108306885
    6. '[' → logprob: -6.400782108306885
    7. '<|end|>' → logprob: -6.400782108306885
    8. ' )' → logprob: -6.525782108306885
    9. ' [' → logprob: -6.900782108306885
    10. ' =' → logprob: -7.025782108306885

Token 82: ''est' (ID: 6616)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.6345354318618774
    2. 'e' → logprob: -1.8845354318618774
    3. ''' → logprob: -2.509535312652588
    4. 'a' → logprob: -2.759535312652588
    5. '[' → logprob: -2.884535312652588
    6. '.' → logprob: -3.884535312652588
    7. 'i' → logprob: -4.009535312652588
    8. '`' → logprob: -4.259535312652588
    9. '```' → logprob: -4.509535312652588
    10. '['' → logprob: -5.259535312652588

Token 83: '-à' (ID: 56297)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.1479018926620483
    2. ''' → logprob: -2.272902011871338
    3. 'à' → logprob: -2.397902011871338
    4. ' ' → logprob: -2.647902011871338
    5. '=' → logprob: -3.022902011871338
    6. ' des' → logprob: -3.272902011871338
    7. 's' → logprob: -3.522902011871338
    8. '"' → logprob: -3.647902011871338
    9. 'u' → logprob: -3.772902011871338
    10. ')' → logprob: -3.772902011871338

Token 84: '-dire' (ID: 76064)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9041080474853516
    2. '-' → logprob: -1.5291080474853516
    3. ' jour' → logprob: -1.9041080474853516
    4. 'j' → logprob: -2.4041080474853516
    5. 'jour' → logprob: -2.6541080474853516
    6. '`' → logprob: -4.279108047485352
    7. 'jà' → logprob: -4.529108047485352
    8. 'i' → logprob: -4.654108047485352
    9. ']' → logprob: -5.279108047485352
    10. '1' → logprob: -5.654108047485352

Token 85: ' sa' (ID: 880)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029594719409942627
    2. '<|end|>' → logprob: -4.529594898223877
    3. ''' → logprob: -4.654594898223877
    4. '  ' → logprob: -6.029594898223877
    5. ' des' → logprob: -6.154594898223877
    6. 's' → logprob: -6.904594898223877
    7. ' '' → logprob: -7.154594898223877
    8. ' "' → logprob: -7.904594898223877
    9. '```' → logprob: -8.404594421386719
    10. 'es' → logprob: -8.404594421386719

Token 86: ' liste' (ID: 31719)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0943678468465805
    2. ' ' → logprob: -2.594367742538452
    3. ' voisins' → logprob: -6.219367980957031
    4. ' s' → logprob: -6.344367980957031
    5. ''' → logprob: -6.469367980957031
    6. ' adjacency' → logprob: -7.219367980957031
    7. ' voisin' → logprob: -7.344367980957031
    8. '[' → logprob: -7.469367980957031
    9. ' "' → logprob: -7.594367980957031
    10. '_' → logprob: -7.594367980957031

Token 87: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4830867052078247
    2. ' ' → logprob: -1.2330867052078247
    3. '[' → logprob: -2.983086585998535
    4. 's' → logprob: -4.233086585998535
    5. 'd' → logprob: -5.233086585998535
    6. ' d' → logprob: -5.358086585998535
    7. ' des' → logprob: -5.608086585998535
    8. '<|end|>' → logprob: -6.233086585998535
    9. ')' → logprob: -6.483086585998535
    10. 'des' → logprob: -6.858086585998535

Token 88: ''ad' (ID: 36162)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4992332458496094
    2. 'e' → logprob: -1.2492332458496094
    3. 'es' → logprob: -3.4992332458496094
    4. 's' → logprob: -3.6242332458496094
    5. 'u' → logprob: -4.249233245849609
    6. ''espace' → logprob: -4.749233245849609
    7. '_' → logprob: -4.999233245849609
    8. ''e' → logprob: -5.249233245849609
    9. ''s' → logprob: -5.374233245849609
    10. 'a' → logprob: -6.749233245849609

Token 89: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.5999862551689148
    2. 'j' → logprob: -0.8499862551689148
    3. 'ja' → logprob: -4.0999860763549805
    4. 'd' → logprob: -5.2249860763549805
    5. 'jec' → logprob: -7.0999860763549805
    6. '```' → logprob: -8.09998607635498
    7. ')' → logprob: -9.22498607635498
    8. '[j' → logprob: -10.09998607635498
    9. 'dj' → logprob: -10.09998607635498
    10. ']' → logprob: -10.22498607635498

Token 90: 'ence' (ID: 1082)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.25703439116477966
    2. 'ence' → logprob: -1.757034420967102
    3. 'acency' → logprob: -3.8820343017578125
    4. 'a' → logprob: -4.7570343017578125
    5. 'escence' → logprob: -4.8820343017578125
    6. 'es' → logprob: -5.6320343017578125
    7. 'en' → logprob: -6.1320343017578125
    8. '```' → logprob: -6.2570343017578125
    9. 'ences' → logprob: -6.3820343017578125
    10. '#' → logprob: -7.0070343017578125

Token 91: '
' (ID: 198)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.009091111831367016
    2. ',' → logprob: -5.759090900421143
    3. ' E' → logprob: -5.759090900421143
    4. ' =' → logprob: -6.384090900421143
    5. '[' → logprob: -8.2590913772583
    6. '=' → logprob: -8.3840913772583
    7. ' ' → logprob: -8.5090913772583
    8. ')' → logprob: -9.6340913772583
    9. '.' → logprob: -9.7590913772583
    10. '_' → logprob: -10.0090913772583

Token 92: '#' (ID: 2)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.002903897315263748
    2. '
' → logprob: -5.877903938293457
    3. ' E' → logprob: -10.127903938293457
    4. ' 
' → logprob: -10.502903938293457
    5. '```' → logprob: -11.127903938293457
    6. '

' → logprob: -13.127903938293457
    7. '' → logprob: -13.127903938293457
    8. 's' → logprob: -13.252903938293457
    9. '  
' → logprob: -13.502903938293457
    10. '<|end|>' → logprob: -13.752903938293457

Token 93: ' On' (ID: 2160)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.002360902028158307
    2. ' E' → logprob: -6.502360820770264
    3. ' 
' → logprob: -7.752360820770264
    4. '
' → logprob: -9.002361297607422
    5. 's' → logprob: -9.252361297607422
    6. ' ' → logprob: -10.002361297607422
    7. '```' → logprob: -10.252361297607422
    8. '#' → logprob: -10.502361297607422
    9. '  
' → logprob: -10.627361297607422
    10. ',' → logprob: -11.377361297607422

Token 94: ' commence' (ID: 44755)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20303496718406677
    2. '=' → logprob: -1.8280349969863892
    3. ' ' → logprob: -5.4530348777771
    4. '_' → logprob: -5.5780348777771
    5. 'n' → logprob: -5.7030348777771
    6. 'space' → logprob: -6.4530348777771
    7. ' space' → logprob: -6.4530348777771
    8. '[' → logprob: -6.7030348777771
    9. 'for' → logprob: -6.7030348777771
    10. ' for' → logprob: -6.9530348777771

Token 95: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22156468033790588
    2. '[' → logprob: -1.8465646505355835
    3. '_' → logprob: -4.346564769744873
    4. ' [' → logprob: -4.846564769744873
    5. ' =' → logprob: -5.596564769744873
    6. ' (' → logprob: -6.096564769744873
    7. '=' → logprob: -6.471564769744873
    8. '  ' → logprob: -6.596564769744873
    9. ' ‌' → logprob: -6.596564769744873
    10. ' ```' → logprob: -6.721564769744873

Token 96: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05921606719493866
    2. '1' → logprob: -3.184216022491455
    3. ' range' → logprob: -4.684216022491455
    4. ' i' → logprob: -5.684216022491455
    5. 'i' → logprob: -6.934216022491455
    6. '0' → logprob: -6.934216022491455
    7. 'range' → logprob: -7.809216022491455
    8. ' l' → logprob: -8.684216499328613
    9. ' index' → logprob: -8.934216499328613
    10. 'l' → logprob: -9.059216499328613

Token 97: ''ind' (ID: 82245)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17736099660396576
    2. 'e' → logprob: -2.052361011505127
    3. 'i' → logprob: -4.927361011505127
    4. ' '' → logprob: -5.052361011505127
    5. '[' → logprob: -5.302361011505127
    6. ''i' → logprob: -5.677361011505127
    7. '1' → logprob: -5.802361011505127
    8. '+' → logprob: -5.927361011505127
    9. '_' → logprob: -6.927361011505127
    10. ''+' → logprob: -7.302361011505127

Token 98: 'ice' (ID: 603)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03404835984110832
    2. 'ex' → logprob: -3.409048318862915
    3. 'i' → logprob: -8.034048080444336
    4. 'é' → logprob: -9.909048080444336
    5. '#' → logprob: -11.784048080444336
    6. 'е' → logprob: -12.909048080444336
    7. '	e' → logprob: -13.034048080444336
    8. 'es' → logprob: -13.159048080444336
    9. 'ice' → logprob: -13.159048080444336
    10. 'è' → logprob: -13.409048080444336

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7065189480781555
    2. ' ' → logprob: -0.7065189480781555
    3. '0' → logprob: -4.33151912689209
    4. ' ' → logprob: -9.70651912689209
    5. '_' → logprob: -10.45651912689209
    6. 's' → logprob: -10.58151912689209
    7. 'e' → logprob: -11.83151912689209
    8. ')' → logprob: -13.20651912689209
    9. ',' → logprob: -13.45651912689209
    10. '2' → logprob: -13.58151912689209

Token 100: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010092840529978275
    2. ' ' → logprob: -4.635092735290527
    3. '0' → logprob: -8.010092735290527
    4. ' ' → logprob: -14.010092735290527
    5. ' 
' → logprob: -14.135092735290527
    6. '_' → logprob: -14.510092735290527
    7. '`' → logprob: -14.635092735290527
    8. '=' → logprob: -14.760092735290527
    9. '```' → logprob: -14.760092735290527
    10. 's' → logprob: -14.760092735290527

Token 101: ',' (ID: 11)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.7749649286270142
    2. '
' → logprob: -2.2749648094177246
    3. ' ' → logprob: -2.3999648094177246
    4. ' E' → logprob: -2.5249648094177246
    5. '[' → logprob: -2.7749648094177246
    6. ')' → logprob: -2.8999648094177246
    7. '<|end|>' → logprob: -3.2749648094177246
    8. ' 
' → logprob: -3.3999648094177246
    9. ']' → logprob: -3.7749648094177246
    10. '#' → logprob: -4.524964809417725

Token 102: ' mais' (ID: 2899)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.746162474155426
    2. ' [' → logprob: -1.2461624145507812
    3. '[' → logprob: -1.6211624145507812
    4. ' [
' → logprob: -4.246162414550781
    5. ' E' → logprob: -5.371162414550781
    6. ' []' → logprob: -5.371162414550781
    7. ' N' → logprob: -5.621162414550781
    8. ' ]' → logprob: -6.121162414550781
    9. '[]' → logprob: -6.371162414550781
    10. 'E' → logprob: -7.121162414550781

Token 103: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.02820023149251938
    2. 'on' → logprob: -4.778200149536133
    3. ' l' → logprob: -5.403200149536133
    4. ' les' → logprob: -5.778200149536133
    5. ' i' → logprob: -6.028200149536133
    6. ' ' → logprob: -6.278200149536133
    7. ' le' → logprob: -6.778200149536133
    8. '_' → logprob: -6.903200149536133
    9. 'l' → logprob: -7.153200149536133
    10. 'le' → logprob: -7.653200149536133

Token 104: ' n' (ID: 297)
  Prédit: ' ignore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ignore' → logprob: -1.2782344818115234
    2. 'n' → logprob: -1.7782344818115234
    3. 'ignore' → logprob: -2.2782344818115234
    4. ' n' → logprob: -2.5282344818115234
    5. ' va' → logprob: -2.5282344818115234
    6. ' ne' → logprob: -2.9032344818115234
    7. ' utilis' → logprob: -4.153234481811523
    8. ' part' → logprob: -4.153234481811523
    9. ' préfère' → logprob: -4.153234481811523
    10. ' veut' → logprob: -4.528234481811523

Token 105: ''util' (ID: 37761)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8692740201950073
    2. ''' → logprob: -0.9942740201950073
    3. ''util' → logprob: -1.6192740201950073
    4. ' '' → logprob: -5.619274139404297
    5. ''oubl' → logprob: -5.869274139404297
    6. 'a' → logprob: -7.369274139404297
    7. ''é' → logprob: -7.494274139404297
    8. 'é' → logprob: -7.494274139404297
    9. ''a' → logprob: -7.619274139404297
    10. ''e' → logprob: -7.744274139404297

Token 106: 'is' (ID: 276)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26753270626068115
    2. 'i' → logprob: -2.3925328254699707
    3. 'ise' → logprob: -3.0175328254699707
    4. 'is' → logprob: -3.1425328254699707
    5. 'se' → logprob: -3.5175328254699707
    6. 'es' → logprob: -5.267532825469971
    7. '```' → logprob: -5.642532825469971
    8. 'e' → logprob: -6.017532825469971
    9. 'ser' → logprob: -6.142532825469971
    10. 'r' → logprob: -6.142532825469971

Token 107: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.11359651386737823
    2. 'era' → logprob: -3.2385964393615723
    3. 'er' → logprob: -4.113596439361572
    4. 'se' → logprob: -4.363596439361572
    5. 'ons' → logprob: -4.863596439361572
    6. 'sera' → logprob: -4.863596439361572
    7. 'ze' → logprob: -5.238596439361572
    8. 'z' → logprob: -5.238596439361572
    9. 'on' → logprob: -5.988596439361572
    10. 's' → logprob: -6.238596439361572

Token 108: ' que' (ID: 661)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.181296244263649
    2. ' ' → logprob: -2.8062963485717773
    3. '_' → logprob: -3.0562963485717773
    4. '<|end|>' → logprob: -3.1812963485717773
    5. ' ' → logprob: -6.306296348571777
    6. ' rien' → logprob: -6.556296348571777
    7. ' i' → logprob: -6.556296348571777
    8. ' l' → logprob: -6.681296348571777
    9. '1' → logprob: -6.681296348571777
    10. ' jamais' → logprob: -7.056296348571777

Token 109: ' les' (ID: 1341)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0548701286315918
    2. ' les' → logprob: -1.5548701286315918
    3. ' l' → logprob: -1.6798701286315918
    4. ' ' → logprob: -2.179870128631592
    5. '<|end|>' → logprob: -2.429870128631592
    6. 'l' → logprob: -4.929870128631592
    7. ' indices' → logprob: -5.179870128631592
    8. ' E' → logprob: -5.554870128631592
    9. ' i' → logprob: -5.679870128631592
    10. ' N' → logprob: -5.679870128631592

Token 110: ' indices' (ID: 30378)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14503058791160583
    2. ' ' → logprob: -2.6450304985046387
    3. 'indices' → logprob: -3.3950304985046387
    4. ' indices' → logprob: -3.5200304985046387
    5. 'i' → logprob: -8.520030975341797
    6. ' i' → logprob: -8.645030975341797
    7. 'indice' → logprob: -8.770030975341797
    8. 'n' → logprob: -9.895030975341797
    9. ' n' → logprob: -10.020030975341797
    10. '0' → logprob: -10.395030975341797

Token 111: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5233715772628784
    2. '1' → logprob: -0.8983715772628784
    3. '2' → logprob: -9.023371696472168
    4. ' ' → logprob: -10.023371696472168
    5. ' de' → logprob: -10.648371696472168
    6. ' i' → logprob: -11.023371696472168
    7. ' range' → logprob: -11.148371696472168
    8. ' from' → logprob: -12.398371696472168
    9. ' ,' → logprob: -12.773371696472168
    10. '_' → logprob: -13.148371696472168

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024807697627693415
    2. ' ' → logprob: -6.002480983734131
    3. ' de' → logprob: -13.627480506896973
    4. ' range' → logprob: -13.627480506896973
    5. 'de' → logprob: -13.877480506896973
    6. 'range' → logprob: -14.377480506896973
    7. ' ' → logprob: -15.877480506896973
    8. '0' → logprob: -15.877480506896973
    9. '```' → logprob: -16.50248146057129
    10. 'from' → logprob: -16.62748146057129

Token 113: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9304438829421997
    2. ')' → logprob: -1.5554438829421997
    3. ' ' → logprob: -2.05544376373291
    4. '<|end|>' → logprob: -2.43044376373291
    5. ' )' → logprob: -2.93044376373291
    6. '+' → logprob: -3.05544376373291
    7. ' ,' → logprob: -4.43044376373291
    8. ']' → logprob: -4.80544376373291
    9. '#' → logprob: -4.93044376373291
    10. '-' → logprob: -5.18044376373291

Token 114: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3132631182670593
    2. ' N' → logprob: -1.313263177871704
    3. ' ' → logprob: -13.563262939453125
    4. '<|end|>' → logprob: -17.813262939453125
    5. ' ' → logprob: -18.688262939453125
    6. '	N' → logprob: -18.688262939453125
    7. '>N' → logprob: -18.688262939453125
    8. '1' → logprob: -18.813262939453125
    9. 'n' → logprob: -19.813262939453125
    10. ',N' → logprob: -19.938262939453125

Token 115: ' inclus' (ID: 11891)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0008732284768484533
    2. ' E' → logprob: -7.25087308883667
    3. '
' → logprob: -9.500873565673828
    4. ' 
' → logprob: -10.125873565673828
    5. ',' → logprob: -10.500873565673828
    6. '```' → logprob: -12.625873565673828
    7. '  
' → logprob: -13.000873565673828
    8. ',E' → logprob: -13.000873565673828
    9. '' → logprob: -13.125873565673828
    10. ')' → logprob: -13.250873565673828

Token 116: 'ivement' (ID: 37978)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.006526718847453594
    2. ' E' → logprob: -5.381526947021484
    3. '
' → logprob: -6.881526947021484
    4. ' 
' → logprob: -7.506526947021484
    5. ',' → logprob: -9.006526947021484
    6. '[
' → logprob: -10.381526947021484
    7. '' → logprob: -10.631526947021484
    8. ',
' → logprob: -11.006526947021484
    9. '[E' → logprob: -11.131526947021484
    10. '[' → logprob: -11.256526947021484

Token 117: '
' (ID: 198)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.009912852197885513
    2. '
' → logprob: -5.634912967681885
    3. ' 
' → logprob: -5.759912967681885
    4. ' E' → logprob: -5.884912967681885
    5. ',' → logprob: -9.009912490844727
    6. '' → logprob: -10.009912490844727
    7. '  
' → logprob: -10.134912490844727
    8. ',
' → logprob: -10.634912490844727
    9. '[' → logprob: -11.259912490844727
    10. '

' → logprob: -11.259912490844727

Token 118: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0036678907927125692
    2. '
' → logprob: -5.753667831420898
    3. ' E' → logprob: -8.253667831420898
    4. ' 
' → logprob: -8.628667831420898
    5. '```' → logprob: -11.378667831420898
    6. '' → logprob: -11.503667831420898
    7. '  
' → logprob: -12.128667831420898
    8. '
' → logprob: -12.253667831420898
    9. '`
' → logprob: -12.503667831420898
    10. '

' → logprob: -12.878667831420898

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694647908210754
    2. '=' → logprob: -2.126946449279785
    3. '.' → logprob: -12.501946449279785
    4. '=[]' → logprob: -12.626946449279785
    5. ' ' → logprob: -12.751946449279785
    6. '[' → logprob: -13.251946449279785
    7. '.append' → logprob: -13.501946449279785
    8. ' =[' → logprob: -13.751946449279785
    9. 's' → logprob: -14.126946449279785
    10. '=[' → logprob: -14.376946449279785

Token 120: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.47410640120506287
    2. '[' → logprob: -0.9741064310073853
    3. ' [' → logprob: -10.474106788635254
    4. '[]' → logprob: -14.099106788635254
    5. '[[' → logprob: -16.224105834960938
    6. '[N' → logprob: -16.349105834960938
    7. ' ' → logprob: -16.849105834960938
    8. ' []' → logprob: -17.474105834960938
    9. '[n' → logprob: -17.974105834960938
    10. '```' → logprob: -17.974105834960938

Token 121: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3492937684059143
    2. 'for' → logprob: -1.2242937088012695
    3. ']' → logprob: -7.7242937088012695
    4. ')' → logprob: -8.09929370880127
    5. ' ' → logprob: -10.09929370880127
    6. ' f' → logprob: -11.22429370880127
    7. 'f' → logprob: -11.22429370880127
    8. '	for' → logprob: -11.47429370880127
    9. ' fo' → logprob: -11.97429370880127
    10. '()' → logprob: -12.34929370880127

Token 122: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.12049936503171921
    2. ' i' → logprob: -2.3704993724823
    3. '_' → logprob: -3.9954993724823
    4. ' ' → logprob: -6.495499134063721
    5. ' range' → logprob: -9.120499610900879
    6. ' in' → logprob: -11.245499610900879
    7. 'i' → logprob: -11.245499610900879
    8. '(' → logprob: -11.245499610900879
    9. ' (' → logprob: -12.245499610900879
    10. ' ' → logprob: -12.370499610900879

Token 123: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03846704214811325
    2. 'in' → logprob: -3.2884669303894043
    3. ' ' → logprob: -7.913466930389404
    4. ' i' → logprob: -10.788467407226562
    5. 'range' → logprob: -11.788467407226562
    6. 'n' → logprob: -12.038467407226562
    7. '<|end|>' → logprob: -12.288467407226562
    8. '_' → logprob: -12.413467407226562
    9. ')' → logprob: -12.663467407226562
    10. ' ' → logprob: -13.163467407226562

Token 124: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759403109550476
    2. ' range' → logprob: -0.8259403109550476
    3. '(range' → logprob: -14.075940132141113
    4. 'rang' → logprob: -16.82594108581543
    5. '	range' → logprob: -17.82594108581543
    6. ' rang' → logprob: -18.45094108581543
    7. 'ran' → logprob: -19.07594108581543
    8. ' ' → logprob: -19.45094108581543
    9. ' xrange' → logprob: -20.57594108581543
    10. ' ran' → logprob: -20.95094108581543

Token 125: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.004094073548913002
    2. '(' → logprob: -5.504094123840332
    3. ' (' → logprob: -11.129094123840332
    4. '(n' → logprob: -14.504094123840332
    5. '((' → logprob: -15.129094123840332
    6. '(
' → logprob: -15.879094123840332
    7. '(NUM' → logprob: -18.004093170166016
    8. 'N' → logprob: -18.254093170166016
    9. '(

' → logprob: -18.754093170166016
    10. '1' → logprob: -18.879093170166016

Token 126: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010343570029363036
    2. ' +' → logprob: -6.876034259796143
    3. ')' → logprob: -14.1260347366333
    4. ')]' → logprob: -14.7510347366333
    5. '+
' → logprob: -15.7510347366333
    6. '+)' → logprob: -16.376033782958984
    7. '1' → logprob: -17.001033782958984
    8. '()+' → logprob: -17.376033782958984
    9. ')+' → logprob: -17.876033782958984
    10. ' ' → logprob: -18.376033782958984

Token 127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021852378267794847
    2. ' ' → logprob: -6.127185344696045
    3. ')' → logprob: -15.627184867858887
    4. '```' → logprob: -17.252185821533203
    5. '2' → logprob: -18.752185821533203
    6. '   ' → logprob: -19.064685821533203
    7. ' ' → logprob: -19.502185821533203
    8. '0' → logprob: -19.627185821533203
    9. '
' → logprob: -19.752185821533203
    10. '  ' → logprob: -19.939685821533203

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -18.625001907348633
    4. '   ' → logprob: -18.750001907348633
    5. ')' → logprob: -18.875001907348633
    6. '(' → logprob: -20.250001907348633
    7. '2' → logprob: -20.500001907348633
    8. '0' → logprob: -20.500001907348633
    9. '１' → logprob: -21.312501907348633
    10. '۱' → logprob: -21.437501907348633

Token 129: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.376848902320489e-05
    2. ')' → logprob: -9.500093460083008
    3. ']' → logprob: -11.250093460083008
    4. '])' → logprob: -12.375093460083008
    5. ' )' → logprob: -14.000093460083008
    6. ')])' → logprob: -14.625093460083008
    7. '])]' → logprob: -16.250093460083008
    8. ')],' → logprob: -16.625093460083008
    9. '))' → logprob: -16.750093460083008
    10. ')]
' → logprob: -17.250093460083008

Token 130: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6360607147216797
    2. '#' → logprob: -1.0110607147216797
    3. '
' → logprob: -2.3860607147216797
    4. ' for' → logprob: -5.38606071472168
    5. '\n' → logprob: -5.63606071472168
    6. 'n' → logprob: -6.38606071472168
    7. '' → logprob: -6.76106071472168
    8. '<|end|>' → logprob: -6.88606071472168
    9. ' 
' → logprob: -7.26106071472168
    10. '\' → logprob: -8.38606071472168

Token 131: ' Cr' (ID: 5790)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015098588773980737
    2. ' for' → logprob: -6.751509666442871
    3. 'range' → logprob: -9.126509666442871
    4. 'M' → logprob: -9.251509666442871
    5. 'f' → logprob: -10.501509666442871
    6. '#' → logprob: -10.501509666442871
    7. 'r' → logprob: -10.751509666442871
    8. 'F' → logprob: -11.001509666442871
    9. 'n' → logprob: -11.126509666442871
    10. 'Q' → logprob: -12.501509666442871

Token 132: 'éer' (ID: 83012)
  Prédit: 'éer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éer' → logprob: -0.10725744068622589
    2. '#' → logprob: -2.73225736618042
    3. 'ir' → logprob: -4.48225736618042
    4. 'iter' → logprob: -4.98225736618042
    5. 'ire' → logprob: -5.73225736618042
    6. 'a' → logprob: -5.73225736618042
    7. 'u' → logprob: -7.10725736618042
    8. 'ép' → logprob: -7.10725736618042
    9. 'é' → logprob: -7.10725736618042
    10. 'éf' → logprob: -7.35725736618042

Token 133: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.4041599929332733
    2. ' un' → logprob: -1.9041600227355957
    3. '#' → logprob: -2.4041600227355957
    4. ' la' → logprob: -3.2791600227355957
    5. 'une' → logprob: -4.154160022735596
    6. ' ' → logprob: -4.404160022735596
    7. ' #' → logprob: -4.779160022735596
    8. ' ' → logprob: -5.029160022735596
    9. ' des' → logprob: -5.654160022735596
    10. 'a' → logprob: -6.154160022735596

Token 134: ' diction' (ID: 155259)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.053395576775074005
    2. ' diction' → logprob: -3.9283955097198486
    3. 'for' → logprob: -4.928395748138428
    4. '#' → logprob: -5.303395748138428
    5. 's' → logprob: -5.553395748138428
    6. 'dict' → logprob: -5.928395748138428
    7. ' d' → logprob: -6.178395748138428
    8. 'default' → logprob: -6.678395748138428
    9. 'D' → logprob: -7.053395748138428
    10. 'set' → logprob: -7.178395748138428

Token 135: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.0006378580583259463
    2. 'aire' → logprob: -7.375638008117676
    3. 'ary' → logprob: -12.000638008117676
    4. 'na' → logprob: -13.125638008117676
    5. 'naires' → logprob: -13.500638008117676
    6. 'n' → logprob: -13.875638008117676
    7. 'a' → logprob: -14.375638008117676
    8. '```' → logprob: -16.75063705444336
    9. 'iaire' → logprob: -17.12563705444336
    10. '#' → logprob: -17.25063705444336

Token 136: ' vide' (ID: 21835)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.5669560432434082
    2. ' edges' → logprob: -1.9419560432434082
    3. 'edges' → logprob: -2.066956043243408
    4. 'd' → logprob: -2.566956043243408
    5. ' edge' → logprob: -3.191956043243408
    6. ' distances' → logprob: -3.316956043243408
    7. 'E' → logprob: -3.316956043243408
    8. ' E' → logprob: -3.566956043243408
    9. ' node' → logprob: -3.691956043243408
    10. ' graph' → logprob: -3.816956043243408

Token 137: ' nommé' (ID: 149888)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.729462742805481
    2. 'd' → logprob: -1.854462742805481
    3. 'edges' → logprob: -2.2294626235961914
    4. ' d' → logprob: -2.3544626235961914
    5. 'E' → logprob: -2.9794626235961914
    6. 'G' → logprob: -2.9794626235961914
    7. ' edges' → logprob: -3.1044626235961914
    8. ' D' → logprob: -3.1044626235961914
    9. ',' → logprob: -3.2294626235961914
    10. ' E' → logprob: -3.8544626235961914

Token 138: ' ans' (ID: 3345)
  Prédit: 'labels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'labels' → logprob: -2.077052354812622
    2. 'P' → logprob: -2.827052354812622
    3. 'edges' → logprob: -2.827052354812622
    4. 'colors' → logprob: -2.827052354812622
    5. 'dist' → logprob: -2.827052354812622
    6. 'V' → logprob: -2.952052354812622
    7. 'positions' → logprob: -2.952052354812622
    8. 'C' → logprob: -3.202052354812622
    9. 'd' → logprob: -3.452052354812622
    10. 'D' → logprob: -3.577052354812622

Token 139: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06647063791751862
    2. '=' → logprob: -2.8164706230163574
    3. 'ans' → logprob: -5.941470623016357
    4. '<|end|>' → logprob: -7.316470623016357
    5. ' ans' → logprob: -8.191471099853516
    6. ' ' → logprob: -8.566471099853516
    7. '={}' → logprob: -8.816471099853516
    8. '
' → logprob: -9.441471099853516
    9. '_ans' → logprob: -9.441471099853516
    10. 's' → logprob: -9.566471099853516

Token 140: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0005846070707775652
    2. ' ans' → logprob: -7.625584602355957
    3. ' =' → logprob: -10.375584602355957
    4. '(ans' → logprob: -11.000584602355957
    5. '	ans' → logprob: -11.000584602355957
    6. 'a' → logprob: -11.625584602355957
    7. '=' → logprob: -12.000584602355957
    8. '_ans' → logprob: -12.125584602355957
    9. 'answers' → logprob: -13.500584602355957
    10. '{}' → logprob: -13.500584602355957

Token 141: ' Il' (ID: 5329)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0015117661096155643
    2. ' ans' → logprob: -6.501511573791504
    3. 'answer' → logprob: -12.376511573791504
    4. 'answers' → logprob: -13.001511573791504
    5. '	ans' → logprob: -13.626511573791504
    6. 'anst' → logprob: -14.126511573791504
    7. '_ans' → logprob: -14.751511573791504
    8. 'a' → logprob: -15.876511573791504
    9. ' ' → logprob: -16.12651252746582
    10. '(ans' → logprob: -16.12651252746582

Token 142: ' serv' (ID: 2096)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4381706714630127
    2. '=' → logprob: -1.0631706714630127
    3. ' ' → logprob: -6.313170433044434
    4. '.' → logprob: -6.438170433044434
    5. '['' → logprob: -7.063170433044434
    6. '.setdefault' → logprob: -7.063170433044434
    7. 's' → logprob: -7.188170433044434
    8. '[' → logprob: -7.313170433044434
    9. '#' → logprob: -7.563170433044434
    10. ']' → logprob: -8.188170433044434

Token 143: 'ira' (ID: 2633)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3242766857147217
    2. 'ira' → logprob: -2.0742766857147217
    3. 'à' → logprob: -2.9492766857147217
    4. ' à' → logprob: -3.3242766857147217
    5. '=' → logprob: -4.324276924133301
    6. 'ra' → logprob: -4.449276924133301
    7. 'i' → logprob: -4.449276924133301
    8. '#' → logprob: -4.824276924133301
    9. ' =' → logprob: -5.824276924133301
    10. 'irà' → logprob: -5.949276924133301

Token 144: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.00387061620131135
    2. 'à' → logprob: -5.878870487213135
    3. ' to' → logprob: -8.128870964050293
    4. 's' → logprob: -8.753870964050293
    5. ' a' → logprob: -8.753870964050293
    6. ' ' → logprob: -9.253870964050293
    7. '<|end|>' → logprob: -9.503870964050293
    8. ' au' → logprob: -9.878870964050293
    9. ' ' → logprob: -10.003870964050293
    10. ''à' → logprob: -10.628870964050293

Token 145: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.28449422121047974
    2. 'stock' → logprob: -1.409494161605835
    3. 'st' → logprob: -6.659494400024414
    4. ' mém' → logprob: -7.159494400024414
    5. 's' → logprob: -8.409494400024414
    6. ' enregistr' → logprob: -9.159494400024414
    7. ' conserver' → logprob: -9.159494400024414
    8. '_stock' → logprob: -9.409494400024414
    9. ' compter' → logprob: -9.659494400024414
    10. 'registrer' → logprob: -9.784494400024414

Token 146: 'er' (ID: 259)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3628897964954376
    2. ' ' → logprob: -1.4878897666931152
    3. 'e' → logprob: -4.237889766693115
    4. 'i' → logprob: -5.112889766693115
    5. 'us' → logprob: -5.362889766693115
    6. ' to' → logprob: -5.362889766693115
    7. '_' → logprob: -5.612889766693115
    8. 'uler' → logprob: -5.612889766693115
    9. 'ul' → logprob: -5.737889766693115
    10. 's' → logprob: -5.737889766693115

Token 147: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.1360817402601242
    2. '<|end|>' → logprob: -3.7610816955566406
    3. ' la' → logprob: -3.8860816955566406
    4. ' l' → logprob: -3.8860816955566406
    5. ' des' → logprob: -4.011081695556641
    6. ' ' → logprob: -4.011081695556641
    7. 'les' → logprob: -5.011081695556641
    8. ' le' → logprob: -5.136081695556641
    9. 's' → logprob: -5.136081695556641
    10. 'l' → logprob: -5.761081695556641

Token 148: ' valeurs' (ID: 73668)
  Prédit: ' chemins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chemins' → logprob: -1.1970717906951904
    2. ' résultats' → logprob: -1.4470717906951904
    3. ' nombres' → logprob: -2.4470717906951904
    4. ' degrés' → logprob: -2.5720717906951904
    5. ' degré' → logprob: -2.8220717906951904
    6. ' distances' → logprob: -3.3220717906951904
    7. ' nombre' → logprob: -3.5720717906951904
    8. 'de' → logprob: -4.0720720291137695
    9. ' voisins' → logprob: -4.4470720291137695
    10. ' couleurs' → logprob: -4.4470720291137695

Token 149: ' assign' (ID: 14975)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.044289957731962204
    2. ' ' → logprob: -4.544290065765381
    3. '<|end|>' → logprob: -5.044290065765381
    4. ' de' → logprob: -5.419290065765381
    5. 'des' → logprob: -5.544290065765381
    6. ',' → logprob: -5.669290065765381
    7. '_' → logprob: -5.669290065765381
    8. ' ans' → logprob: -6.294290065765381
    9. ' final' → logprob: -6.794290065765381
    10. ' (' → logprob: -7.169290065765381

Token 150: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.015294786542654037
    2. 'é' → logprob: -4.515294551849365
    3. 'és' → logprob: -5.890294551849365
    4. 'er' → logprob: -6.890294551849365
    5. '=' → logprob: -9.265295028686523
    6. 'ée' → logprob: -9.265295028686523
    7. 'es' → logprob: -9.390295028686523
    8. '{' → logprob: -9.765295028686523
    9. 'e' → logprob: -11.390295028686523
    10. 'a' → logprob: -11.515295028686523

Token 151: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.172942042350769
    2. ' aux' → logprob: -1.547942042350769
    3. ' to' → logprob: -1.922942042350769
    4. ' à' → logprob: -1.922942042350769
    5. ' =' → logprob: -3.7979421615600586
    6. ',' → logprob: -3.7979421615600586
    7. 'a' → logprob: -3.9229421615600586
    8. 'ans' → logprob: -3.9229421615600586
    9. 'to' → logprob: -4.172942161560059
    10. '=' → logprob: -4.422942161560059

Token 152: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.48150262236595154
    2. ' each' → logprob: -1.106502652168274
    3. 'each' → logprob: -3.1065025329589844
    4. ' chacun' → logprob: -6.356502532958984
    5. ' des' → logprob: -6.981502532958984
    6. 's' → logprob: -7.106502532958984
    7. ' ' → logprob: -7.481502532958984
    8. ' i' → logprob: -7.481502532958984
    9. ' nodes' → logprob: -7.981502532958984
    10. ' chacune' → logprob: -8.356502532958984

Token 153: ' n' (ID: 297)
  Prédit: ' sommet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.38919323682785034
    2. ' noe' → logprob: -1.3891932964324951
    3. ' n' → logprob: -3.514193296432495
    4. ' node' → logprob: -3.764193296432495
    5. 'n' → logprob: -4.264193058013916
    6. ' ' → logprob: -6.014193058013916
    7. 's' → logprob: -6.639193058013916
    8. 'node' → logprob: -7.014193058013916
    9. ' somm' → logprob: -7.389193058013916
    10. '```' → logprob: -9.014193534851074

Token 154: 'œ' (ID: 15335)
  Prédit: 'œ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'œ' → logprob: -0.015078053809702396
    2. 'oe' → logprob: -4.890078067779541
    3. 'e' → logprob: -5.890078067779541
    4. '\xc2' → logprob: -6.140078067779541
    5. '?' → logprob: -7.390078067779541
    6. '_' → logprob: -7.640078067779541
    7. '\' → logprob: -8.390077590942383
    8. '#' → logprob: -8.390077590942383
    9. 'o' → logprob: -8.515077590942383
    10. '```' → logprob: -8.640077590942383

Token 155: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.17493192851543427
    2. 'd' → logprob: -2.6749320030212402
    3. 'œ' → logprob: -2.9249320030212402
    4. 'e' → logprob: -3.9249320030212402
    5. 'u' → logprob: -4.54993200302124
    6. '_' → logprob: -5.54993200302124
    7. 'uds' → logprob: -7.04993200302124
    8. ',' → logprob: -7.79993200302124
    9. 'o' → logprob: -7.92493200302124
    10. '```' → logprob: -7.92493200302124

Token 156: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01711374521255493
    2. 'a' → logprob: -4.89211368560791
    3. '
' → logprob: -4.89211368560791
    4. ' ans' → logprob: -6.64211368560791
    5. '(ans' → logprob: -8.64211368560791
    6. '```' → logprob: -9.14211368560791
    7. '	ans' → logprob: -9.26711368560791
    8. '\n' → logprob: -9.51711368560791
    9. '_ans' → logprob: -10.76711368560791
    10. ':' → logprob: -11.14211368560791

Token 157: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.001431905198842287
    2. ' ans' → logprob: -6.626431941986084
    3. 'a' → logprob: -9.626431465148926
    4. '
' → logprob: -10.876431465148926
    5. '(ans' → logprob: -12.126431465148926
    6. '_ans' → logprob: -12.126431465148926
    7. '	ans' → logprob: -12.626431465148926
    8. 'answer' → logprob: -13.001431465148926
    9. 'anst' → logprob: -13.251431465148926
    10. 'answers' → logprob: -13.751431465148926

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22561003267765045
    2. '=' → logprob: -1.6006100177764893
    3. '={}' → logprob: -8.85060977935791
    4. '[' → logprob: -10.47560977935791
    5. ' ' → logprob: -11.60060977935791
    6. ' ={' → logprob: -12.22560977935791
    7. '[:]' → logprob: -12.72560977935791
    8. '={' → logprob: -13.22560977935791
    9. ',' → logprob: -13.60060977935791
    10. '{' → logprob: -13.72560977935791

Token 159: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -2.6537622034084052e-05
    2. ' {}' → logprob: -10.75002670288086
    3. 'dict' → logprob: -12.25002670288086
    4. '{}
' → logprob: -15.87502670288086
    5. '{' → logprob: -16.25002670288086
    6. ' dict' → logprob: -17.75002670288086
    7. '{})' → logprob: -17.87502670288086
    8. '{}

' → logprob: -18.12502670288086
    9. '{}\' → logprob: -18.12502670288086
    10. '={}' → logprob: -18.37502670288086

Token 160: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009941066382452846
    2. '#' → logprob: -7.5009942054748535
    3. ' for' → logprob: -8.500993728637695
    4. 'f' → logprob: -8.625993728637695
    5. '
' → logprob: -10.125993728637695
    6. 'n' → logprob: -12.000993728637695
    7. 'F' → logprob: -12.500993728637695
    8. '\n' → logprob: -13.375993728637695
    9. '' → logprob: -14.000993728637695
    10. '```' → logprob: -14.250993728637695

Token 161: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014920076355338097
    2. 'f' → logprob: -6.626492023468018
    3. '#' → logprob: -9.25149154663086
    4. ' for' → logprob: -10.25149154663086
    5. 'fo' → logprob: -11.25149154663086
    6. 'F' → logprob: -11.37649154663086
    7. 'm' → logprob: -13.75149154663086
    8. 'n' → logprob: -13.87649154663086
    9. 'M' → logprob: -14.25149154663086
    10. 'd' → logprob: -14.37649154663086

Token 162: 'iser' (ID: 7466)
  Prédit: 'izer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -0.3878690004348755
    2. 'iser' → logprob: -1.5128690004348755
    3. 'ize' → logprob: -2.887868881225586
    4. '#' → logprob: -4.637868881225586
    5. 'er' → logprob: -4.887868881225586
    6. 'izing' → logprob: -5.387868881225586
    7. 'i' → logprob: -5.512868881225586
    8. '_' → logprob: -5.512868881225586
    9. 'e' → logprob: -5.887868881225586
    10. 'iz' → logprob: -6.137868881225586

Token 163: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.1344728469848633
    2. ' un' → logprob: -1.3844728469848633
    3. ' une' → logprob: -1.7594728469848633
    4. ' a' → logprob: -2.8844728469848633
    5. 'i' → logprob: -3.0094728469848633
    6. ' l' → logprob: -3.5094728469848633
    7. ' u' → logprob: -3.6344728469848633
    8. 'u' → logprob: -3.8844728469848633
    9. ' la' → logprob: -4.009472846984863
    10. 'a' → logprob: -4.259472846984863

Token 164: ' variable' (ID: 11076)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.8895650506019592
    2. ' file' → logprob: -1.0145649909973145
    3. 'queue' → logprob: -2.1395649909973145
    4. 'file' → logprob: -2.7645649909973145
    5. ' stack' → logprob: -4.6395649909973145
    6. 'stack' → logprob: -5.2645649909973145
    7. 'for' → logprob: -5.2645649909973145
    8. 'visited' → logprob: -5.3895649909973145
    9. ' for' → logprob: -5.8895649909973145
    10. ' visited' → logprob: -6.1395649909973145

Token 165: ' First' (ID: 8338)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -2.040074348449707
    2. ' visited' → logprob: -2.040074348449707
    3. ' i' → logprob: -2.165074348449707
    4. ' stack' → logprob: -2.540074348449707
    5. ' color' → logprob: -2.790074348449707
    6. ' queue' → logprob: -3.290074348449707
    7. ' val' → logprob: -3.290074348449707
    8. ' u' → logprob: -3.540074348449707
    9. 'visited' → logprob: -3.665074348449707
    10. ' d' → logprob: -3.665074348449707

Token 166: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.44993969798088074
    2. ' =' → logprob: -1.1999397277832031
    3. '=' → logprob: -2.949939727783203
    4. '_val' → logprob: -6.199939727783203
    5. '_value' → logprob: -6.449939727783203
    6. '_node' → logprob: -6.699939727783203
    7. 'First' → logprob: -6.824939727783203
    8. ',' → logprob: -7.074939727783203
    9. '_first' → logprob: -7.074939727783203
    10. '_=' → logprob: -8.199939727783203

Token 167: ' ' (ID: 220)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.7839867472648621
    2. 'True' → logprob: -1.4089868068695068
    3. ' None' → logprob: -2.283986806869507
    4. '0' → logprob: -2.783986806869507
    5. 'None' → logprob: -3.033986806869507
    6. '1' → logprob: -3.158986806869507
    7. ' ' → logprob: -3.658986806869507
    8. 'False' → logprob: -5.158986568450928
    9. ' N' → logprob: -5.533986568450928
    10. ' False' → logprob: -6.033986568450928

Token 168: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2656922340393066
    2. 'None' → logprob: -1.2656922340393066
    3. 'True' → logprob: -1.6406922340393066
    4. '0' → logprob: -2.0156922340393066
    5. '-' → logprob: -3.0156922340393066
    6. 'N' → logprob: -3.1406922340393066
    7. 'False' → logprob: -4.765692234039307
    8. 'int' → logprob: -5.890692234039307
    9. 'float' → logprob: -6.640692234039307
    10. ' None' → logprob: -6.765692234039307

Token 169: ' ;' (ID: 4605)
  Prédit: 'First'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.01672942191362381
    2. 'F' → logprob: -4.891729354858398
    3. '
' → logprob: -4.891729354858398
    4. ' First' → logprob: -6.766729354858398
    5. ' 
' → logprob: -8.891729354858398
    6. ' =' → logprob: -9.016729354858398
    7. '=' → logprob: -9.641729354858398
    8. '
' → logprob: -10.766729354858398
    9. ' ' → logprob: -11.141729354858398
    10. '

' → logprob: -11.766729354858398

Token 170: ' elle' (ID: 11451)
  Prédit: 'First'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.0006797884125262499
    2. 'F' → logprob: -8.000679969787598
    3. ' First' → logprob: -8.125679969787598
    4. '
' → logprob: -10.750679969787598
    5. 'first' → logprob: -10.750679969787598
    6. '#' → logprob: -13.500679969787598
    7. ' first' → logprob: -14.000679969787598
    8. '0' → logprob: -14.000679969787598
    9. '_first' → logprob: -14.625679969787598
    10. '```' → logprob: -15.000679969787598

Token 171: ' dés' (ID: 19454)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.690548062324524
    2. ' sera' → logprob: -2.0655479431152344
    3. ' serv' → logprob: -2.1905479431152344
    4. ' signifie' → logprob: -2.3155479431152344
    5. ' sert' → logprob: -2.4405479431152344
    6. ' correspond' → logprob: -2.8155479431152344
    7. ' représente' → logprob: -2.9405479431152344
    8. ' permettra' → logprob: -3.3155479431152344
    9. ' semble' → logprob: -3.3155479431152344
    10. ' indique' → logprob: -3.4405479431152344

Token 172: 'ign' (ID: 733)
  Prédit: 'igne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.29895731806755066
    2. 'ign' → logprob: -2.173957347869873
    3. 'e' → logprob: -3.548957347869873
    4. 'ire' → logprob: -3.798957347869873
    5. 'igné' → logprob: -3.798957347869873
    6. 'é' → logprob: -4.173957347869873
    7. 'ignée' → logprob: -4.423957347869873
    8. 'i' → logprob: -4.923957347869873
    9. 'int' → logprob: -5.048957347869873
    10. '#' → logprob: -5.048957347869873

Token 173: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008740320801734924
    2. 'era' → logprob: -5.008740425109863
    3. 'er' → logprob: -6.258740425109863
    4. 'a' → logprob: -9.383740425109863
    5. '#' → logprob: -11.133740425109863
    6. 'é' → logprob: -12.633740425109863
    7. ' e' → logprob: -13.133740425109863
    8. '	e' → logprob: -13.383740425109863
    9. 'е' → logprob: -14.758740425109863
    10. 'ent' → logprob: -15.008740425109863

Token 174: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.2876754105091095
    2. ' le' → logprob: -2.412675380706787
    3. ' la' → logprob: -2.787675380706787
    4. 'l' → logprob: -2.912675380706787
    5. ' l' → logprob: -4.162675380706787
    6. 'la' → logprob: -4.162675380706787
    7. ' une' → logprob: -5.662675380706787
    8. '0' → logprob: -6.037675380706787
    9. ' un' → logprob: -6.287675380706787
    10. ' ' → logprob: -6.787675380706787

Token 175: ' n' (ID: 297)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.13630478084087372
    2. ' premier' → logprob: -2.1363048553466797
    3. 'n' → logprob: -6.01130485534668
    4. 'first' → logprob: -6.63630485534668
    5. ' first' → logprob: -6.76130485534668
    6. 'num' → logprob: -7.51130485534668
    7. 's' → logprob: -7.76130485534668
    8. 'indice' → logprob: -7.88630485534668
    9. 'irst' → logprob: -8.01130485534668
    10. 'dern' → logprob: -8.38630485534668

Token 176: 'œ' (ID: 15335)
  Prédit: 'œ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'œ' → logprob: -0.0029879247304052114
    2. 'oe' → logprob: -6.752987861633301
    3. 'o' → logprob: -7.127987861633301
    4. 'e' → logprob: -8.0029878616333
    5. '\xc2' → logprob: -8.7529878616333
    6. 'ø' → logprob: -9.3779878616333
    7. '°' → logprob: -9.6279878616333
    8. 'um' → logprob: -10.0029878616333
    9. 'º' → logprob: -10.0029878616333
    10. '#' → logprob: -10.5029878616333

Token 177: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.0018376067746430635
    2. 'd' → logprob: -7.501837730407715
    3. 'œ' → logprob: -7.626837730407715
    4. 'u' → logprob: -7.876837730407715
    5. 'e' → logprob: -9.126837730407715
    6. '#' → logprob: -9.126837730407715
    7. '```' → logprob: -10.001837730407715
    8. '\xc2' → logprob: -10.251837730407715
    9. '%' → logprob: -11.626837730407715
    10. 'uds' → logprob: -11.626837730407715

Token 178: ' ayant' (ID: 45436)
  Prédit: 'First'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'First' → logprob: -1.3504054546356201
    2. '_' → logprob: -1.4754054546356201
    3. '_first' → logprob: -1.8504054546356201
    4. '<|end|>' → logprob: -2.22540545463562
    5. ' ' → logprob: -2.60040545463562
    6. ' =' → logprob: -3.35040545463562
    7. ' First' → logprob: -3.60040545463562
    8. 's' → logprob: -4.725405693054199
    9. 'prem' → logprob: -4.725405693054199
    10. ' choisi' → logprob: -5.100405693054199

Token 179: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.2542418241500854
    2. ' le' → logprob: -2.004241943359375
    3. 'l' → logprob: -2.129241943359375
    4. 'été' → logprob: -2.629241943359375
    5. ' été' → logprob: -3.004241943359375
    6. '0' → logprob: -3.129241943359375
    7. '<|end|>' → logprob: -3.379241943359375
    8. ' la' → logprob: -3.629241943359375
    9. ' reçu' → logprob: -3.629241943359375
    10. '_le' → logprob: -3.754241943359375

Token 180: ' plus' (ID: 2932)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.5937170386314392
    2. 'plus' → logprob: -0.8437170386314392
    3. 'first' → logprob: -5.093717098236084
    4. ' plus' → logprob: -5.468717098236084
    5. ' premier' → logprob: -6.718717098236084
    6. 'minimum' → logprob: -7.343717098236084
    7. 'indice' → logprob: -7.468717098236084
    8. 'point' → logprob: -7.843717098236084
    9. 'moins' → logprob: -7.968717098236084
    10. 'maximum' → logprob: -7.968717098236084

Token 181: ' de' (ID: 334)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.3329552412033081
    2. 'long' → logprob: -2.2079553604125977
    3. ' grand' → logprob: -3.2079553604125977
    4. 'pet' → logprob: -3.4579553604125977
    5. ' long' → logprob: -3.5829553604125977
    6. 'haut' → logprob: -4.582955360412598
    7. '<|end|>' → logprob: -4.832955360412598
    8. 'é' → logprob: -5.082955360412598
    9. '_' → logprob: -5.707955360412598
    10. 'b' → logprob: -5.957955360412598

Token 182: ' voisins' (ID: 166720)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 183: ' (' (ID: 350)
  Prédit: 'First'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.06544134765863419
    2. '
' → logprob: -2.815441370010376
    3. 'F' → logprob: -6.690441131591797
    4. ' First' → logprob: -7.440441131591797
    5. '
' → logprob: -7.690441131591797
    6. '0' → logprob: -7.690441131591797
    7. '

' → logprob: -8.940441131591797
    8. '#' → logprob: -9.190441131591797
    9. 'first' → logprob: -9.565441131591797
    10. '' → logprob: -10.065441131591797

Token 184: 'le' (ID: 282)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03878050670027733
    2. ' )' → logprob: -3.288780450820923
    3. ').' → logprob: -8.163780212402344
    4. ',' → logprob: -9.413780212402344
    5. ' ' → logprob: -9.538780212402344
    6. ')
' → logprob: -9.913780212402344
    7. '#' → logprob: -9.913780212402344
    8. ' ' → logprob: -10.663780212402344
    9. '),' → logprob: -10.913780212402344
    10. ')#' → logprob: -10.913780212402344

Token 185: ' degré' (ID: 169072)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3451552391052246
    2. 'max' → logprob: -2.5951552391052246
    3. 'plus' → logprob: -2.8451552391052246
    4. '#' → logprob: -2.8451552391052246
    5. ' plus' → logprob: -3.8451552391052246
    6. ' )' → logprob: -3.9701552391052246
    7. '```' → logprob: -4.470155239105225
    8. 'n' → logprob: -5.095155239105225
    9. 'nombre' → logprob: -5.345155239105225
    10. ' max' → logprob: -5.470155239105225

Token 186: ' maximal' (ID: 65414)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15750117599964142
    2. '_max' → logprob: -2.907501220703125
    3. ' )' → logprob: -3.032501220703125
    4. 'max' → logprob: -3.657501220703125
    5. ' maximal' → logprob: -5.532501220703125
    6. '_' → logprob: -5.657501220703125
    7. ' =' → logprob: -6.907501220703125
    8. ' max' → logprob: -6.907501220703125
    9. 'maximum' → logprob: -6.907501220703125
    10. ' maximum' → logprob: -7.032501220703125

Token 187: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001219643629156053
    2. ' )' → logprob: -6.751219749450684
    3. ')
' → logprob: -10.251219749450684
    4. ').' → logprob: -12.376219749450684
    5. '#' → logprob: -13.001219749450684
    6. ' ' → logprob: -13.876219749450684
    7. ')#' → logprob: -14.001219749450684
    8. '0' → logprob: -14.126219749450684
    9. ' ' → logprob: -14.376219749450684
    10. ',' → logprob: -14.626219749450684

Token 188: 'First' (ID: 7127)
  Prédit: 'First'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.00021867557370569557
    2. 'F' → logprob: -9.000218391418457
    3. ' First' → logprob: -9.375218391418457
    4. 'first' → logprob: -12.250218391418457
    5. '
' → logprob: -12.375218391418457
    6. '```' → logprob: -15.125218391418457
    7. '_first' → logprob: -15.375218391418457
    8. '#' → logprob: -16.000219345092773
    9. '_First' → logprob: -16.125219345092773
    10. ' first' → logprob: -16.125219345092773

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16033126413822174
    2. '=' → logprob: -1.9103312492370605
    3. ' ' → logprob: -9.535331726074219
    4. ',' → logprob: -11.035331726074219
    5. ' =
' → logprob: -12.285331726074219
    6. '.' → logprob: -12.410331726074219
    7. ')' → logprob: -12.535331726074219
    8. ' ' → logprob: -12.660331726074219
    9. 's' → logprob: -14.035331726074219
    10. '=int' → logprob: -14.785331726074219

Token 190: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08894001692533493
    2. ' ' → logprob: -2.463939905166626
    3. ' ' → logprob: -14.338939666748047
    4. '  ' → logprob: -17.838939666748047
    5. '1' → logprob: -17.901439666748047
    6. '۰' → logprob: -18.338939666748047
    7. '   ' → logprob: -18.463939666748047
    8. '０' → logprob: -19.151439666748047
    9. '```' → logprob: -19.338939666748047
    10. '=' → logprob: -19.651439666748047

Token 191: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '۰' → logprob: -19.5000057220459
    4. '０' → logprob: -20.1250057220459
    5. '-' → logprob: -21.2500057220459
    6. '00' → logprob: -21.7500057220459
    7. '000' → logprob: -22.1250057220459
    8. '  ' → logprob: -22.1250057220459
    9. '```' → logprob: -22.2500057220459
    10. '   ' → logprob: -22.3125057220459

Token 192: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2241915762424469
    2. 'for' → logprob: -1.8491915464401245
    3. '#' → logprob: -4.224191665649414
    4. '<|end|>' → logprob: -4.974191665649414
    5. ' for' → logprob: -5.224191665649414
    6. '' → logprob: -5.474191665649414
    7. 'max' → logprob: -5.599191665649414
    8. ',' → logprob: -6.474191665649414
    9. 'n' → logprob: -6.599191665649414
    10. ' 
' → logprob: -7.099191665649414

Token 193: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00038705902989022434
    2. '#' → logprob: -8.000387191772461
    3. ' for' → logprob: -10.625387191772461
    4. 'max' → logprob: -11.125387191772461
    5. '
' → logprob: -12.625387191772461
    6. 'm' → logprob: -13.000387191772461
    7. 'f' → logprob: -13.375387191772461
    8. 'F' → logprob: -13.375387191772461
    9. 'M' → logprob: -13.500387191772461
    10. 'n' → logprob: -13.875387191772461

Token 194: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04136903956532478
    2. 'max' → logprob: -3.2913689613342285
    3. ' for' → logprob: -6.0413689613342285
    4. 'degree' → logprob: -7.5413689613342285
    5. '#' → logprob: -8.291369438171387
    6. ' max' → logprob: -9.416369438171387
    7. 'best' → logprob: -11.416369438171387
    8. 'deg' → logprob: -11.416369438171387
    9. 'degrees' → logprob: -11.916369438171387
    10. 'pour' → logprob: -12.041369438171387

Token 195: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.46102002263069153
    2. 'izer' → logprob: -1.0860199928283691
    3. '#' → logprob: -4.211019992828369
    4. 'ize' → logprob: -4.836019992828369
    5. 'i' → logprob: -5.961019992828369
    6. 'is' → logprob: -6.336019992828369
    7. 'er' → logprob: -6.336019992828369
    8. 'iz' → logprob: -7.336019992828369
    9. '_' → logprob: -7.461019992828369
    10. 'izar' → logprob: -8.086020469665527

Token 196: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.24440284073352814
    2. ' max' → logprob: -1.8694028854370117
    3. 'Max' → logprob: -3.1194028854370117
    4. 'First' → logprob: -4.994402885437012
    5. ' First' → logprob: -5.244402885437012
    6. ' Max' → logprob: -5.744402885437012
    7. 'deg' → logprob: -6.869402885437012
    8. 'degree' → logprob: -7.744402885437012
    9. ' deg' → logprob: -7.869402885437012
    10. 'first' → logprob: -9.119402885437012

Token 197: ' variable' (ID: 11076)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.05594617873430252
    2. 'degree' → logprob: -3.555946111679077
    3. 'deg' → logprob: -4.555946350097656
    4. ' max' → logprob: -4.680946350097656
    5. 'Max' → logprob: -5.555946350097656
    6. 'd' → logprob: -6.805946350097656
    7. ' degree' → logprob: -8.555946350097656
    8. 'First' → logprob: -9.055946350097656
    9. ' degré' → logprob: -9.180946350097656
    10. 'de' → logprob: -9.305946350097656

Token 198: ' edges' (ID: 22569)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6959480047225952
    2. 'Max' → logprob: -0.9459480047225952
    3. ' max' → logprob: -2.5709481239318848
    4. ' Max' → logprob: -3.6959481239318848
    5. 'Degree' → logprob: -5.570948123931885
    6. 'degree' → logprob: -6.195948123931885
    7. 'First' → logprob: -6.570948123931885
    8. 'deg' → logprob: -6.570948123931885
    9. 'Deg' → logprob: -7.195948123931885
    10. ' First' → logprob: -7.570948123931885

Token 199: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026952199637889862
    2. '=' → logprob: -3.6519522666931152
    3. ' ' → logprob: -8.276951789855957
    4. '_edges' → logprob: -8.776951789855957
    5. '_' → logprob: -9.651951789855957
    6. 's' → logprob: -9.651951789855957
    7. '=[]' → logprob: -9.901951789855957
    8. '_count' → logprob: -10.526951789855957
    9. 'edges' → logprob: -11.901951789855957
    10. '_list' → logprob: -12.401951789855957

Token 200: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.44863033294677734
    2. ' ' → logprob: -1.4486303329467773
    3. '[]' → logprob: -2.5736303329467773
    4. ' []' → logprob: -3.3236303329467773
    5. ' N' → logprob: -4.948630332946777
    6. 'N' → logprob: -5.198630332946777
    7. '<|end|>' → logprob: -6.948630332946777
    8. '1' → logprob: -8.573630332946777
    9. 'int' → logprob: -8.698630332946777
    10. ' []
' → logprob: -9.823630332946777

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4361121356487274
    2. '[]' → logprob: -1.0611121654510498
    3. ' ' → logprob: -5.811111927032471
    4. ' []' → logprob: -6.186111927032471
    5. 'int' → logprob: -6.311111927032471
    6. 'N' → logprob: -7.811111927032471
    7. '1' → logprob: -10.811112403869629
    8. '[int' → logprob: -10.811112403869629
    9. '[]
' → logprob: -10.936112403869629
    10. '{}' → logprob: -11.436112403869629

Token 202: ' ;' (ID: 4605)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.19115446507930756
    2. '
' → logprob: -2.0661544799804688
    3. '<|end|>' → logprob: -3.5661544799804688
    4. ' edges' → logprob: -4.566154479980469
    5. '(edges' → logprob: -6.316154479980469
    6. '_edges' → logprob: -6.441154479980469
    7. 'e' → logprob: -6.566154479980469
    8. '\n' → logprob: -6.816154479980469
    9. ' 
' → logprob: -7.316154479980469
    10. '<|end|>' → logprob: -7.816154479980469

Token 203: ' elle' (ID: 11451)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.002657820237800479
    2. ' edges' → logprob: -6.002657890319824
    3. '#' → logprob: -9.502657890319824
    4. 'edge' → logprob: -9.752657890319824
    5. 'e' → logprob: -11.877657890319824
    6. 'E' → logprob: -11.877657890319824
    7. '0' → logprob: -12.002657890319824
    8. '(edges' → logprob: -12.127657890319824
    9. '_edges' → logprob: -12.377657890319824
    10. 'ed' → logprob: -12.627657890319824

Token 204: ' reti' (ID: 95058)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1643003672361374
    2. ' =' → logprob: -1.9143003225326538
    3. 'for' → logprob: -6.164300441741943
    4. '.' → logprob: -7.914300441741943
    5. '+=' → logprob: -8.539299964904785
    6. ' +=' → logprob: -8.539299964904785
    7. 's' → logprob: -8.539299964904785
    8. ' ' → logprob: -8.664299964904785
    9. '#' → logprob: -8.914299964904785
    10. ' for' → logprob: -8.914299964904785

Token 205: 'endra' (ID: 32364)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7731737494468689
    2. 'er' → logprob: -0.8981737494468689
    3. 'ner' → logprob: -3.3981738090515137
    4. 'e' → logprob: -3.8981738090515137
    5. 're' → logprob: -4.523173809051514
    6. 'ère' → logprob: -4.648173809051514
    7. 'nt' → logprob: -4.898173809051514
    8. 'r' → logprob: -5.273173809051514
    9. 'n' → logprob: -5.273173809051514
    10. 'ere' → logprob: -5.523173809051514

Token 206: ' le' (ID: 505)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.38434329628944397
    2. 'N' → logprob: -1.8843432664871216
    3. ' edges' → logprob: -2.009343385696411
    4. '0' → logprob: -5.009343147277832
    5. '_edges' → logprob: -5.134343147277832
    6. '<|end|>' → logprob: -5.259343147277832
    7. ' ' → logprob: -5.634343147277832
    8. ' N' → logprob: -5.634343147277832
    9. '(edges' → logprob: -6.009343147277832
    10. ')' → logprob: -6.509343147277832

Token 207: ' degré' (ID: 169072)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.172184944152832
    2. 'edges' → logprob: -1.422184944152832
    3. 'nombre' → logprob: -2.172184944152832
    4. 'len' → logprob: -2.297184944152832
    5. 'n' → logprob: -2.922184944152832
    6. ' edges' → logprob: -3.297184944152832
    7. ' N' → logprob: -3.922184944152832
    8. '[]' → logprob: -3.922184944152832
    9. ' nombre' → logprob: -4.172184944152832
    10. 'number' → logprob: -4.422184944152832

Token 208: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1940927505493164
    2. '_max' → logprob: -1.4440927505493164
    3. 'max' → logprob: -1.9440927505493164
    4. ' =' → logprob: -2.3190927505493164
    5. ' ' → logprob: -2.9440927505493164
    6. 's' → logprob: -3.1940927505493164
    7. '_edges' → logprob: -3.1940927505493164
    8. '<|end|>' → logprob: -4.319092750549316
    9. 'des' → logprob: -4.444092750549316
    10. '=' → logprob: -4.694092750549316

Token 209: 'nombre' (ID: 28576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05216594040393829
    2. ' )' → logprob: -3.552165985107422
    3. '0' → logprob: -4.552165985107422
    4. 'max' → logprob: -5.302165985107422
    5. ' ' → logprob: -6.177165985107422
    6. 'N' → logprob: -7.052165985107422
    7. 'edges' → logprob: -7.052165985107422
    8. ')
' → logprob: -7.177165985107422
    9. 'E' → logprob: -8.177165985107422
    10. '
' → logprob: -8.302165985107422

Token 210: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.1091015338897705
    2. 'des' → logprob: -1.4841015338897705
    3. ')' → logprob: -1.9841015338897705
    4. ' de' → logprob: -2.1091015338897705
    5. 'de' → logprob: -2.9841015338897705
    6. ' =' → logprob: -3.2341015338897705
    7. '_' → logprob: -3.7341015338897705
    8. ' )' → logprob: -4.234101295471191
    9. '=' → logprob: -4.484101295471191
    10. '_des' → logprob: -5.109101295471191

Token 211: ''ar' (ID: 54307)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.138266682624817
    2. ')' → logprob: -1.263266682624817
    3. '_' → logprob: -1.763266682624817
    4. ' des' → logprob: -2.3882665634155273
    5. 'de' → logprob: -3.6382665634155273
    6. ' d' → logprob: -3.7632665634155273
    7. ' )' → logprob: -3.8882665634155273
    8. 'des' → logprob: -4.138266563415527
    9. '_de' → logprob: -4.263266563415527
    10. 's' → logprob: -4.513266563415527

Token 212: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.6202185750007629
    2. 'tes' → logprob: -0.9952185750007629
    3. 'cs' → logprob: -3.495218515396118
    4. '�' → logprob: -4.495218753814697
    5. '^' → logprob: -4.745218753814697
    6. 'c' → logprob: -4.870218753814697
    7. 'ˆ' → logprob: -5.245218753814697
    8. '#' → logprob: -5.495218753814697
    9. 'es' → logprob: -5.620218753814697
    10. '=' → logprob: -5.745218753814697

Token 213: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4345881938934326
    2. ' )' → logprob: -1.0595881938934326
    3. ' ' → logprob: -6.434588432312012
    4. 'max' → logprob: -7.059588432312012
    5. '_max' → logprob: -7.559588432312012
    6. ' maximal' → logprob: -7.559588432312012
    7. ' de' → logprob: -7.684588432312012
    8. 'de' → logprob: -7.934588432312012
    9. ' des' → logprob: -7.934588432312012
    10. 'des' → logprob: -8.684588432312012

Token 214: ' maximal' (ID: 65414)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8699693083763123
    2. '=' → logprob: -2.119969367980957
    3. 's' → logprob: -2.119969367980957
    4. 'max' → logprob: -2.369969367980957
    5. '
' → logprob: -3.369969367980957
    6. 'First' → logprob: -3.744969367980957
    7. 'des' → logprob: -3.744969367980957
    8. '_max' → logprob: -3.994969367980957
    9. 'for' → logprob: -4.119969367980957
    10. 'edges' → logprob: -4.119969367980957

Token 215: ' rencontré' (ID: 141085)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33584851026535034
    2. '=' → logprob: -1.8358485698699951
    3. 'edges' → logprob: -2.210848569869995
    4. 'max' → logprob: -5.710848331451416
    5. ' edges' → logprob: -6.085848331451416
    6. '_edges' → logprob: -6.335848331451416
    7. '<|end|>' → logprob: -6.585848331451416
    8. ' ' → logprob: -6.585848331451416
    9. '0' → logprob: -6.835848331451416
    10. '
' → logprob: -6.960848331451416

Token 216: '
' (ID: 198)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.20099212229251862
    2. '<|end|>' → logprob: -3.0759921073913574
    3. '=' → logprob: -3.2009921073913574
    4. ' =' → logprob: -3.4509921073913574
    5. '
' → logprob: -3.8259921073913574
    6. '0' → logprob: -3.9509921073913574
    7. ' edges' → logprob: -4.950992107391357
    8. 'max' → logprob: -5.950992107391357
    9. '<|end|>' → logprob: -6.075992107391357
    10. '#' → logprob: -6.325992107391357

Token 217: 'edges' (ID: 39127)
  Prédit: 'edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.012502356432378292
    2. ' edges' → logprob: -4.512502193450928
    3. '0' → logprob: -6.637502193450928
    4. 'max' → logprob: -9.387502670288086
    5. '(edges' → logprob: -11.387502670288086
    6. '#' → logprob: -11.887502670288086
    7. '.edges' → logprob: -11.887502670288086
    8. 'edge' → logprob: -12.012502670288086
    9. 'Edges' → logprob: -12.137502670288086
    10. '```' → logprob: -12.262502670288086

Token 218: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474077433347702
    2. ' =' → logprob: -0.9740774631500244
    3. ' ' → logprob: -15.974077224731445
    4. ' ' → logprob: -16.849077224731445
    5. '=int' → logprob: -16.974077224731445
    6. 's' → logprob: -17.099077224731445
    7. '＝' → logprob: -17.224077224731445
    8. ',' → logprob: -17.349077224731445
    9. '0' → logprob: -17.599077224731445
    10. '.' → logprob: -17.724077224731445

Token 219: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08894045650959015
    2. ' ' → logprob: -2.463940382003784
    3. ' ' → logprob: -14.463940620422363
    4. ' -' → logprob: -15.338940620422363
    5. '-' → logprob: -16.338939666748047
    6. '  ' → logprob: -16.838939666748047
    7. '   ' → logprob: -16.963939666748047
    8. '00' → logprob: -18.463939666748047
    9. '۰' → logprob: -18.713939666748047
    10. '1' → logprob: -18.838939666748047

Token 220: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014489953173324466
    2. ' ' → logprob: -8.875144958496094
    3. '-' → logprob: -12.375144958496094
    4. ' -' → logprob: -14.375144958496094
    5. '   ' → logprob: -17.125144958496094
    6. '  ' → logprob: -17.500144958496094
    7. ' ' → logprob: -18.000144958496094
    8. '00' → logprob: -18.125144958496094
    9. 'int' → logprob: -18.125144958496094
    10. '۰' → logprob: -18.375144958496094

Token 221: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0035352094564586878
    2. '
' → logprob: -5.753535270690918
    3. ' for' → logprob: -8.128535270690918
    4. '<|end|>' → logprob: -10.503535270690918
    5. '#' → logprob: -10.628535270690918
    6. '\n' → logprob: -12.628535270690918
    7. 'n' → logprob: -12.753535270690918
    8. ' 
' → logprob: -14.503535270690918
    9. '

' → logprob: -14.628535270690918
    10. '
' → logprob: -14.878535270690918

Token 222: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.988221684878226e-06
    2. '
' → logprob: -12.625006675720215
    3. ' for' → logprob: -12.625006675720215
    4. '#' → logprob: -15.250006675720215
    5. 'n' → logprob: -17.37500762939453
    6. 'f' → logprob: -17.50000762939453
    7. 'F' → logprob: -18.25000762939453
    8. 'For' → logprob: -18.87500762939453
    9. 'fo' → logprob: -19.37500762939453
    10. 'i' → logprob: -19.37500762939453

Token 223: ' Cr' (ID: 5790)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.13388703338569e-06
    2. ' for' → logprob: -11.625009536743164
    3. '#' → logprob: -17.125009536743164
    4. 'import' → logprob: -18.250009536743164
    5. 'F' → logprob: -19.375009536743164
    6. 'range' → logprob: -19.500009536743164
    7. 'from' → logprob: -19.625009536743164
    8. 'f' → logprob: -19.875009536743164
    9. 'For' → logprob: -19.875009536743164
    10. 'fo' → logprob: -20.000009536743164

Token 224: 'éer' (ID: 83012)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6369219422340393
    2. 'éer' → logprob: -1.5119218826293945
    3. 'for' → logprob: -1.6369218826293945
    4. 'e' → logprob: -3.8869218826293945
    5. 'é' → logprob: -4.3869218826293945
    6. 'ef' → logprob: -5.3869218826293945
    7. 'ar' → logprob: -5.6369218826293945
    8. ' for' → logprob: -6.2619218826293945
    9. 'ép' → logprob: -6.2619218826293945
    10. 'éf' → logprob: -6.3869218826293945

Token 225: ' une' (ID: 2463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14644627273082733
    2. ' for' → logprob: -2.3964462280273438
    3. ' une' → logprob: -3.8964462280273438
    4. 'range' → logprob: -4.271446228027344
    5. ' range' → logprob: -5.521446228027344
    6. ' un' → logprob: -5.646446228027344
    7. ' la' → logprob: -7.271446228027344
    8. ' a' → logprob: -7.396446228027344
    9. '_' → logprob: -7.521446228027344
    10. ' ' → logprob: -7.646446228027344

Token 226: ' liste' (ID: 31719)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0033542821183800697
    2. 'bou' → logprob: -6.253354072570801
    3. ' for' → logprob: -7.253354072570801
    4. 'range' → logprob: -7.378354072570801
    5. ' boucle' → logprob: -9.8783540725708
    6. '
' → logprob: -11.7533540725708
    7. 'b' → logprob: -12.3783540725708
    8. 'ligne' → logprob: -12.3783540725708
    9. ' range' → logprob: -12.5033540725708
    10. 'fo' → logprob: -12.5033540725708

Token 227: ' vide' (ID: 21835)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -1.4722306728363037
    2. 'degrees' → logprob: -1.8472306728363037
    3. 'des' → logprob: -2.4722306728363037
    4. 'edges' → logprob: -2.7222306728363037
    5. ' des' → logprob: -3.0972306728363037
    6. '_edges' → logprob: -3.0972306728363037
    7. 'degree' → logprob: -3.2222306728363037
    8. 'de' → logprob: -3.2222306728363037
    9. 'for' → logprob: -3.2222306728363037
    10. '[]' → logprob: -3.4722306728363037

Token 228: ' q' (ID: 2335)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -1.8676903247833252
    2. 'edges' → logprob: -2.117690324783325
    3. 'neighbors' → logprob: -2.117690324783325
    4. 'for' → logprob: -2.367690324783325
    5. 'lines' → logprob: -2.867690324783325
    6. 'nodes' → logprob: -3.117690324783325
    7. 'visited' → logprob: -3.117690324783325
    8. 'L' → logprob: -3.242690324783325
    9. 'edge' → logprob: -3.367690324783325
    10. 'answers' → logprob: -3.742690324783325

Token 229: ',' (ID: 11)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.437883198261261
    2. ' =' → logprob: -1.3128831386566162
    3. '=' → logprob: -2.687883138656616
    4. 'u' → logprob: -4.187883377075195
    5. '=[]' → logprob: -6.437883377075195
    6. 'uer' → logprob: -8.187883377075195
    7. 'q' → logprob: -8.687883377075195
    8. '=[]
' → logprob: -9.562883377075195
    9. '[]' → logprob: -9.812883377075195
    10. '=q' → logprob: -10.437883377075195

Token 230: ' qui' (ID: 2780)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.04845324903726578
    2. ' []' → logprob: -3.4234533309936523
    3. 'q' → logprob: -4.923453330993652
    4. ' q' → logprob: -5.173453330993652
    5. '=[]' → logprob: -7.548453330993652
    6. '[])' → logprob: -8.548453330993652
    7. ' que' → logprob: -9.173453330993652
    8. '[:]' → logprob: -9.173453330993652
    9. '```' → logprob: -9.298453330993652
    10. ' ' → logprob: -9.298453330993652

Token 231: ' sera' (ID: 15511)
  Prédit: 'serv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'serv' → logprob: -0.20292092859745026
    2. ' serv' → logprob: -2.202920913696289
    3. ' sera' → logprob: -3.077920913696289
    4. 'sera' → logprob: -4.577920913696289
    5. ' servir' → logprob: -5.077920913696289
    6. 's' → logprob: -5.952920913696289
    7. ' va' → logprob: -6.202920913696289
    8. 'serve' → logprob: -6.827920913696289
    9. '#' → logprob: -7.077920913696289
    10. 'will' → logprob: -7.702920913696289

Token 232: ' employ' (ID: 4350)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.28143972158432007
    2. ' utilisée' → logprob: -1.4064397811889648
    3. ' utilisé' → logprob: -9.156439781188965
    4. ' utilis' → logprob: -9.781439781188965
    5. '[]' → logprob: -10.156439781188965
    6. 'used' → logprob: -11.281439781188965
    7. ' utilizada' → logprob: -11.656439781188965
    8. ' utilisées' → logprob: -11.781439781188965
    9. ' utilisés' → logprob: -11.906439781188965
    10. ' used' → logprob: -11.906439781188965

Token 233: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.10845918953418732
    2. 'uée' → logprob: -2.608459234237671
    3. 'rée' → logprob: -4.983458995819092
    4. 'ue' → logprob: -5.358458995819092
    5. ' utilisée' → logprob: -6.108458995819092
    6. 'érée' → logprob: -6.358458995819092
    7. 'q' → logprob: -6.358458995819092
    8. 'u' → logprob: -6.483458995819092
    9. ']' → logprob: -7.108458995819092
    10. ')' → logprob: -7.108458995819092

Token 234: ' comme' (ID: 7971)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8350045680999756
    2. ' pour' → logprob: -1.2100045680999756
    3. ' for' → logprob: -1.5850045680999756
    4. ' as' → logprob: -4.085004806518555
    5. 'pour' → logprob: -4.085004806518555
    6. '[]' → logprob: -4.460004806518555
    7. 'as' → logprob: -5.210004806518555
    8. ' to' → logprob: -6.335004806518555
    9. ' comme' → logprob: -6.585004806518555
    10. ' q' → logprob: -6.835004806518555

Token 235: ' file' (ID: 1974)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.3810685873031616
    2. 'une' → logprob: -1.3810685873031616
    3. 'file' → logprob: -1.5060685873031616
    4. 'queue' → logprob: -2.006068706512451
    5. '[]' → logprob: -2.381068706512451
    6. ' file' → logprob: -3.256068706512451
    7. ' queue' → logprob: -5.256068706512451
    8. 'deque' → logprob: -6.506068706512451
    9. 'la' → logprob: -6.756068706512451
    10. 'liste' → logprob: -7.881068706512451

Token 236: ' (' (ID: 350)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.02034660056233406
    2. '[]' → logprob: -4.145346641540527
    3. ' q' → logprob: -6.520346641540527
    4. '=[]' → logprob: -6.520346641540527
    5. ' =' → logprob: -7.520346641540527
    6. '=' → logprob: -7.645346641540527
    7. '[q' → logprob: -9.520346641540527
    8. ',' → logprob: -9.770346641540527
    9. '=q' → logprob: -10.270346641540527
    10. 'queue' → logprob: -11.020346641540527

Token 237: 'queue' (ID: 9409)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6660127639770508
    2. '[]' → logprob: -1.5410127639770508
    3. '[])' → logprob: -1.5410127639770508
    4. 'queue' → logprob: -3.666012763977051
    5. ' [])' → logprob: -4.166012763977051
    6. 'deque' → logprob: -4.916012763977051
    7. 'q' → logprob: -5.791012763977051
    8. ' queue' → logprob: -6.041012763977051
    9. ' )' → logprob: -6.291012763977051
    10. ' []' → logprob: -7.541012763977051

Token 238: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00680524529889226
    2. 'q' → logprob: -6.256805419921875
    3. ' )' → logprob: -6.256805419921875
    4. ' =' → logprob: -6.756805419921875
    5. '[]' → logprob: -7.131805419921875
    6. ')
' → logprob: -8.256805419921875
    7. '[])' → logprob: -8.381805419921875
    8. '=' → logprob: -8.631805419921875
    9. '=[]' → logprob: -9.006805419921875
    10. ' q' → logprob: -10.506805419921875

Token 239: ' pour' (ID: 1930)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.000803672184702009
    2. '[]' → logprob: -7.500803470611572
    3. ' q' → logprob: -8.50080394744873
    4. ' =' → logprob: -11.12580394744873
    5. '=[]' → logprob: -11.12580394744873
    6. '=' → logprob: -11.50080394744873
    7. '[]
' → logprob: -13.25080394744873
    8. ',' → logprob: -13.25080394744873
    9. '=[]
' → logprob: -14.25080394744873
    10. '=q' → logprob: -14.37580394744873

Token 240: ' le' (ID: 505)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.21697109937667847
    2. 'b' → logprob: -3.2169711589813232
    3. 'from' → logprob: -3.3419711589813232
    4. 'deque' → logprob: -3.4669711589813232
    5. 'q' → logprob: -4.091970920562744
    6. 'B' → logprob: -4.341970920562744
    7. 'range' → logprob: -4.716970920562744
    8. ' la' → logprob: -4.841970920562744
    9. ' BFS' → logprob: -4.966970920562744
    10. ' bfs' → logprob: -5.466970920562744

Token 241: ' parcours' (ID: 62625)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6434615254402161
    2. 'from' → logprob: -1.2684614658355713
    3. ' BFS' → logprob: -2.7684614658355713
    4. 'par' → logprob: -3.2684614658355713
    5. 'b' → logprob: -4.26846170425415
    6. 'q' → logprob: -4.26846170425415
    7. 'bread' → logprob: -4.76846170425415
    8. 'import' → logprob: -4.89346170425415
    9. ' bfs' → logprob: -4.89346170425415
    10. 'deque' → logprob: -4.89346170425415

Token 242: ' (' (ID: 350)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.008463163860142231
    2. '[]' → logprob: -5.133463382720947
    3. ' q' → logprob: -6.008463382720947
    4. ' []' → logprob: -11.008462905883789
    5. '=[]' → logprob: -11.133462905883789
    6. '[]
' → logprob: -11.133462905883789
    7. 'deque' → logprob: -12.258462905883789
    8. '```' → logprob: -12.633462905883789
    9. ' =' → logprob: -12.883462905883789
    10. '()' → logprob: -13.008462905883789

Token 243: 'B' (ID: 33)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.128084421157837
    2. 'B' → logprob: -1.503084421157837
    3. 'b' → logprob: -2.003084421157837
    4. '[])' → logprob: -2.253084421157837
    5. 'deque' → logprob: -2.628084421157837
    6. '[]' → logprob: -3.128084421157837
    7. ' bfs' → logprob: -3.503084421157837
    8. 'q' → logprob: -3.878084421157837
    9. 'de' → logprob: -4.628084182739258
    10. ' breadth' → logprob: -4.753084182739258

Token 244: 'FS' (ID: 14179)
  Prédit: 'FS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FS' → logprob: -0.0020216628909111023
    2. 'F' → logprob: -6.252021789550781
    3. 'fs' → logprob: -9.377021789550781
    4. 'read' → logprob: -12.627021789550781
    5. '   ' → logprob: -13.502021789550781
    6. '
' → logprob: -13.877021789550781
    7. ')' → logprob: -14.252021789550781
    8. 'B' → logprob: -14.377021789550781
    9. ' F' → logprob: -15.252021789550781
    10. 'r' → logprob: -15.377021789550781

Token 245: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003753767115995288
    2. 'q' → logprob: -5.628753662109375
    3. ')
' → logprob: -9.253753662109375
    4. ' )' → logprob: -10.628753662109375
    5. ']' → logprob: -12.503753662109375
    6. ').' → logprob: -12.628753662109375
    7. '()' → logprob: -12.628753662109375
    8. '[])' → logprob: -12.753753662109375
    9. 'queue' → logprob: -12.878753662109375
    10. '(q' → logprob: -13.128753662109375

Token 246: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -8.256334695033729e-05
    2. ' q' → logprob: -9.500082969665527
    3. '
' → logprob: -11.875082969665527
    4. '

' → logprob: -15.500082969665527
    5. '	q' → logprob: -16.12508201599121
    6. '```' → logprob: -16.12508201599121
    7. '[q' → logprob: -16.87508201599121
    8. '[]' → logprob: -17.25008201599121
    9. ' 
' → logprob: -17.50008201599121
    10. '
' → logprob: -17.50008201599121

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134360611438751
    2. '=' → logprob: -1.3134360313415527
    3. '=[]' → logprob: -8.688436508178711
    4. '.' → logprob: -13.688436508178711
    5. ' ' → logprob: -13.813436508178711
    6. '=[]
' → logprob: -14.188436508178711
    7. ',' → logprob: -14.438436508178711
    8. '=[' → logprob: -14.563436508178711
    9. '＝' → logprob: -14.938436508178711
    10. ' ' → logprob: -15.313436508178711

Token 248: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -7.994086627149954e-05
    2. ' []' → logprob: -9.500080108642578
    3. '[' → logprob: -12.625080108642578
    4. 'deque' → logprob: -14.000080108642578
    5. '[]}' → logprob: -14.750080108642578
    6. '[]
' → logprob: -14.750080108642578
    7. '[q' → logprob: -17.000080108642578
    8. '[]>' → logprob: -17.375080108642578
    9. '[]

' → logprob: -17.625080108642578
    10. '[:]' → logprob: -17.750080108642578

Token 249: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00012701898231171072
    2. ' for' → logprob: -9.875126838684082
    3. '#' → logprob: -10.000126838684082
    4. 'M' → logprob: -10.750126838684082
    5. 'n' → logprob: -12.500126838684082
    6. '
' → logprob: -13.625126838684082
    7. 'f' → logprob: -14.000126838684082
    8. 'm' → logprob: -14.625126838684082
    9. 'F' → logprob: -14.875126838684082
    10. 'i' → logprob: -15.000126838684082

Token 250: ' Cr' (ID: 5790)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5690089639974758e-05
    2. '#' → logprob: -11.875015258789062
    3. ' for' → logprob: -12.875015258789062
    4. 'M' → logprob: -12.875015258789062
    5. 'import' → logprob: -13.375015258789062
    6. 'from' → logprob: -14.000015258789062
    7. 'pour' → logprob: -15.250015258789062
    8. 'def' → logprob: -15.750015258789062
    9. 'fo' → logprob: -15.875015258789062
    10. 'Q' → logprob: -16.125015258789062

Token 251: 'éer' (ID: 83012)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2572403848171234
    2. 'ont' → logprob: -2.8822402954101562
    3. 'éer' → logprob: -3.5072402954101562
    4. 'r' → logprob: -3.8822402954101562
    5. 'ur' → logprob: -4.132240295410156
    6. 'omm' → logprob: -4.257240295410156
    7. 'urrent' → logprob: -4.507240295410156
    8. 'orer' → logprob: -4.757240295410156
    9. 'q' → logprob: -5.007240295410156
    10. 'om' → logprob: -5.132240295410156

Token 252: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.2539731562137604
    2. 'une' → logprob: -2.2539732456207275
    3. ' la' → logprob: -2.8789732456207275
    4. 'la' → logprob: -3.7539732456207275
    5. ' un' → logprob: -4.128973007202148
    6. '#' → logprob: -5.003973007202148
    7. 'a' → logprob: -5.253973007202148
    8. 'un' → logprob: -5.753973007202148
    9. 'for' → logprob: -5.878973007202148
    10. ' ' → logprob: -6.878973007202148

Token 253: ' liste' (ID: 31719)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024251408874988556
    2. 'from' → logprob: -5.399251461029053
    3. 'deque' → logprob: -5.649251461029053
    4. 'queue' → logprob: -5.774251461029053
    5. 'visited' → logprob: -5.774251461029053
    6. 'stack' → logprob: -6.149251461029053
    7. ' for' → logprob: -6.399251461029053
    8. 'def' → logprob: -7.024251461029053
    9. 'range' → logprob: -7.149251461029053
    10. 'set' → logprob: -7.399251461029053

Token 254: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.1422385573387146
    2. 'vis' → logprob: -3.1422386169433594
    3. ' visited' → logprob: -3.2672386169433594
    4. 'de' → logprob: -3.7672386169433594
    5. 'deque' → logprob: -5.017238616943359
    6. 'used' → logprob: -5.892238616943359
    7. 'visit' → logprob: -6.142238616943359
    8. 'des' → logprob: -6.517238616943359
    9. 'dist' → logprob: -6.517238616943359
    10. 'vist' → logprob: -6.642238616943359

Token 255: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1181897297501564
    2. '=' → logprob: -2.243189811706543
    3. 'visited' → logprob: -5.243189811706543
    4. '=[' → logprob: -10.493189811706543
    5. '=[]' → logprob: -10.993189811706543
    6. ' visited' → logprob: -11.868189811706543
    7. 'Visited' → logprob: -11.993189811706543
    8. '=[]
' → logprob: -13.118189811706543
    9. '[' → logprob: -13.243189811706543
    10. '_' → logprob: -13.618189811706543

Token 256: ' initial' (ID: 4871)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.08077967911958694
    2. '[' → logprob: -2.580779790878296
    3. ' [' → logprob: -6.330779552459717
    4. '[n' → logprob: -9.830780029296875
    5. '[size' → logprob: -10.955780029296875
    6. '[E' → logprob: -11.080780029296875
    7. '[T' → logprob: -12.705780029296875
    8. 'N' → logprob: -12.955780029296875
    9. '[B' → logprob: -13.205780029296875
    10. '[V' → logprob: -13.705780029296875

Token 257: 'ement' (ID: 962)
  Prédit: 'isée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'isée' → logprob: -0.159714475274086
    2. 'ized' → logprob: -2.284714460372925
    3. 'isé' → logprob: -3.909714460372925
    4. '=[]' → logprob: -4.659714698791504
    5. '=[' → logprob: -5.159714698791504
    6. '=' → logprob: -5.909714698791504
    7. 'visited' → logprob: -5.909714698791504
    8. 'isés' → logprob: -6.784714698791504
    9. 'izada' → logprob: -7.284714698791504
    10. 'isées' → logprob: -7.284714698791504

Token 258: ' de' (ID: 334)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.4207116961479187
    2. '=' → logprob: -1.9207117557525635
    3. '[N' → logprob: -2.0457117557525635
    4. '[' → logprob: -3.1707117557525635
    5. ' =' → logprob: -3.7957117557525635
    6. 'de' → logprob: -5.920711517333984
    7. '=[]' → logprob: -9.045711517333984
    8. 'visited' → logprob: -9.545711517333984
    9. '=N' → logprob: -9.545711517333984
    10. '[E' → logprob: -10.295711517333984

Token 259: ' longueur' (ID: 104613)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.07106304168701172
    2. 'False' → logprob: -2.8210630416870117
    3. '[' → logprob: -5.071063041687012
    4. 'N' → logprob: -6.446063041687012
    5. '[T' → logprob: -8.071063041687012
    6. 'tail' → logprob: -8.196063041687012
    7. 'size' → logprob: -9.196063041687012
    8. '(N' → logprob: -9.321063041687012
    9. 'len' → logprob: -9.321063041687012
    10. 'F' → logprob: -9.446063041687012

Token 260: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.030070269480347633
    2. ' N' → logprob: -3.6550703048706055
    3. '(N' → logprob: -5.6550703048706055
    4. ' (' → logprob: -8.280070304870605
    5. '(' → logprob: -12.280070304870605
    6. '0' → logprob: -13.530070304870605
    7. '=N' → logprob: -14.280070304870605
    8. '	N' → logprob: -14.405070304870605
    9. ' ' → logprob: -14.655070304870605
    10. ' ' → logprob: -14.780070304870605

Token 261: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01794271357357502
    2. ',' → logprob: -4.892942905426025
    3. ' +' → logprob: -4.892942905426025
    4. 'visited' → logprob: -6.267942905426025
    5. '+[' → logprob: -8.142942428588867
    6. ' ,' → logprob: -8.642942428588867
    7. '[' → logprob: -8.767942428588867
    8. ' visited' → logprob: -9.017942428588867
    9. ',[' → logprob: -10.517942428588867
    10. ' [' → logprob: -10.642942428588867

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8087270038668066e-05
    2. ' ' → logprob: -10.500027656555176
    3. '
' → logprob: -16.125028610229492
    4. '```' → logprob: -16.375028610229492
    5. '+' → logprob: -16.750028610229492
    6. '   ' → logprob: -17.187528610229492
    7. '

' → logprob: -17.500028610229492
    8. '(' → logprob: -17.750028610229492
    9. '2' → logprob: -17.812528610229492
    10. '...' → logprob: -18.000028610229492

Token 263: ',' (ID: 11)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.2583067715167999
    2. ',' → logprob: -1.5083067417144775
    3. ' visited' → logprob: -5.883306980133057
    4. ' =' → logprob: -6.383306980133057
    5. '=[' → logprob: -7.133306980133057
    6. '[' → logprob: -7.383306980133057
    7. '=' → logprob: -8.133306503295898
    8. ' ,' → logprob: -10.008306503295898
    9. ']' → logprob: -10.383306503295898
    10. ',
' → logprob: -10.508306503295898

Token 264: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16765780746936798
    2. 'visited' → logprob: -2.0426578521728516
    3. ' [' → logprob: -5.167657852172852
    4. ' filled' → logprob: -5.417657852172852
    5. 'False' → logprob: -5.542657852172852
    6. ' visited' → logprob: -5.542657852172852
    7. 'filled' → logprob: -6.167657852172852
    8. ' with' → logprob: -6.542657852172852
    9. ' initialized' → logprob: -7.542657852172852
    10. ' False' → logprob: -7.667657852172852

Token 265: ' valeurs' (ID: 73668)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.013268345966935158
    2. ' False' → logprob: -4.76326847076416
    3. 'bool' → logprob: -5.88826847076416
    4. '[' → logprob: -6.51326847076416
    5. 'bo' → logprob: -8.38826847076416
    6. 'F' → logprob: -9.26326847076416
    7. ' bool' → logprob: -10.63826847076416
    8. ' bo' → logprob: -11.76326847076416
    9. 'Bo' → logprob: -12.13826847076416
    10. '(False' → logprob: -12.26326847076416

Token 266: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.01053671259433031
    2. ' False' → logprob: -5.1355366706848145
    3. '[' → logprob: -5.3855366706848145
    4. '(False' → logprob: -12.635537147521973
    5. 'F' → logprob: -12.760537147521973
    6. '=False' → logprob: -12.885537147521973
    7. ' [' → logprob: -12.885537147521973
    8. 'bool' → logprob: -13.510537147521973
    9. '```' → logprob: -14.010537147521973
    10. 'Fa' → logprob: -14.510537147521973

Token 267: '
' (ID: 198)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.04211324825882912
    2. ' =' → logprob: -3.5421133041381836
    3. ',' → logprob: -5.167113304138184
    4. '=' → logprob: -5.917113304138184
    5. '=[' → logprob: -6.292113304138184
    6. ' visited' → logprob: -6.792113304138184
    7. '[' → logprob: -7.167113304138184
    8. '([' → logprob: -9.792113304138184
    9. '(' → logprob: -10.792113304138184
    10. ' =[' → logprob: -11.167113304138184

Token 268: '#' (ID: 2)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.006086984649300575
    2. ' visited' → logprob: -5.131086826324463
    3. ',' → logprob: -9.131087303161621
    4. ' =' → logprob: -10.756087303161621
    5. '[' → logprob: -10.756087303161621
    6. '=[' → logprob: -12.631087303161621
    7. ' ' → logprob: -14.006087303161621
    8. '=' → logprob: -14.006087303161621
    9. 'Visited' → logprob: -14.006087303161621
    10. ' [' → logprob: -14.506087303161621

Token 269: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0036004253197461367
    2. ' visited' → logprob: -5.628600597381592
    3. '[' → logprob: -15.878600120544434
    4. ' ' → logprob: -16.75360107421875
    5. 'Visited' → logprob: -17.25360107421875
    6. '
' → logprob: -17.37860107421875
    7. '#' → logprob: -17.50360107421875
    8. '```' → logprob: -17.62860107421875
    9. ',' → logprob: -18.37860107421875
    10. 'visit' → logprob: -18.75360107421875

Token 270: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06995588541030884
    2. '=' → logprob: -2.694955825805664
    3. ']' → logprob: -11.944955825805664
    4. '[' → logprob: -12.069955825805664
    5. ' ' → logprob: -12.819955825805664
    6. ' =[' → logprob: -13.194955825805664
    7. '=[' → logprob: -13.819955825805664
    8. ')' → logprob: -13.944955825805664
    9. '[:]' → logprob: -15.569955825805664
    10. ' ]' → logprob: -15.569955825805664

Token 271: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00428508035838604
    2. ' ]' → logprob: -5.504284858703613
    3. ']=' → logprob: -8.629284858703613
    4. '=' → logprob: -11.504284858703613
    5. ' ' → logprob: -11.879284858703613
    6. ' =' → logprob: -12.379284858703613
    7. ' ' → logprob: -13.254284858703613
    8. ']
' → logprob: -13.879284858703613
    9. ')' → logprob: -14.004284858703613
    10. '[' → logprob: -14.754284858703613

Token 272: ' indiqu' (ID: 100773)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133014440536499
    2. '=' → logprob: -1.31330144405365
    3. ' ' → logprob: -10.438301086425781
    4. ']' → logprob: -12.438301086425781
    5. '=False' → logprob: -13.688301086425781
    6. ')' → logprob: -13.938301086425781
    7. '=True' → logprob: -14.063301086425781
    8. '[' → logprob: -14.063301086425781
    9. ',' → logprob: -14.313301086425781
    10. ' ' → logprob: -14.563301086425781

Token 273: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5029325485229492
    2. 'ant' → logprob: -1.2529325485229492
    3. 'era' → logprob: -2.252932548522949
    4. '#' → logprob: -6.502932548522949
    5. 'ent' → logprob: -6.752932548522949
    6. 'er' → logprob: -8.12793254852295
    7. '[' → logprob: -8.12793254852295
    8. '```' → logprob: -8.37793254852295
    9. '=' → logprob: -8.62793254852295
    10. '[]' → logprob: -8.75293254852295

Token 274: ' si' (ID: 1784)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.787368893623352
    2. 'False' → logprob: -1.162368893623352
    3. ' True' → logprob: -2.1623687744140625
    4. ' if' → logprob: -3.0373687744140625
    5. ' whether' → logprob: -3.5373687744140625
    6. 'True' → logprob: -3.6623687744140625
    7. ' si' → logprob: -4.5373687744140625
    8. '=False' → logprob: -7.2873687744140625
    9. ' ' → logprob: -7.2873687744140625
    10. 'whether' → logprob: -7.4123687744140625

Token 275: ' le' (ID: 505)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.08697693049907684
    2. 'visited' → logprob: -3.336977005004883
    3. ' i' → logprob: -3.586977005004883
    4. ' ' → logprob: -4.711977005004883
    5. ' q' → logprob: -4.711977005004883
    6. ' ' → logprob: -7.086977005004883
    7. ' l' → logprob: -7.836977005004883
    8. 'i' → logprob: -8.086977005004883
    9. ' not' → logprob: -8.711977005004883
    10. 'q' → logprob: -8.836977005004883

Token 276: ' n' (ID: 297)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09477562457323074
    2. 'i' → logprob: -2.469775676727295
    3. ' noe' → logprob: -5.469775676727295
    4. ' node' → logprob: -7.469775676727295
    5. 'n' → logprob: -7.969775676727295
    6. ' n' → logprob: -7.969775676727295
    7. ' visited' → logprob: -9.469775199890137
    8. ' ' → logprob: -9.719775199890137
    9. ' ' → logprob: -9.844775199890137
    10. ' sommet' → logprob: -10.469775199890137

Token 277: 'œ' (ID: 15335)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.21744032204151154
    2. 'visited' → logprob: -2.217440366744995
    3. ' i' → logprob: -3.217440366744995
    4. ']' → logprob: -4.217440128326416
    5. ' visited' → logprob: -4.842440128326416
    6. '   ' → logprob: -4.842440128326416
    7. 'i' → logprob: -4.967440128326416
    8. ' =' → logprob: -5.842440128326416
    9. ' ' → logprob: -6.592440128326416
    10. '=' → logprob: -6.967440128326416

Token 278: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.014749695546925068
    2. ' visited' → logprob: -5.014749526977539
    3. 'visited' → logprob: -5.764749526977539
    4. 'u' → logprob: -6.639749526977539
    5. 'œ' → logprob: -7.014749526977539
    6. 'uds' → logprob: -7.514749526977539
    7. '[i' → logprob: -7.639749526977539
    8. 'd' → logprob: -8.014749526977539
    9. '   ' → logprob: -8.514749526977539
    10. 'Visited' → logprob: -8.639749526977539

Token 279: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0366981104016304
    2. ' ' → logprob: -3.91169810295105
    3. ' a' → logprob: -4.411698341369629
    4. 'i' → logprob: -6.161698341369629
    5. '[i' → logprob: -6.661698341369629
    6. ' visited' → logprob: -8.661698341369629
    7. ' ' → logprob: -9.161698341369629
    8. ' has' → logprob: -9.911698341369629
    9. 'visited' → logprob: -10.286698341369629
    10. ' est' → logprob: -10.661698341369629

Token 280: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.014470689930021763
    2. 'a' → logprob: -4.26447057723999
    3. ' ' → logprob: -8.514471054077148
    4. '_a' → logprob: -10.764471054077148
    5. ')' → logprob: -11.014471054077148
    6. ' has' → logprob: -11.389471054077148
    7. ' ' → logprob: -11.514471054077148
    8. ']' → logprob: -11.639471054077148
    9. ' est' → logprob: -11.889471054077148
    10. '#' → logprob: -11.889471054077148

Token 281: ' été' (ID: 9799)
  Prédit: ' été'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' été' → logprob: -0.11869852244853973
    2. 'été' → logprob: -2.2436985969543457
    3. 'dé' → logprob: -5.868698596954346
    4. ' déjà' → logprob: -6.868698596954346
    5. ' been' → logprob: -7.493698596954346
    6. ' ' → logprob: -7.743698596954346
    7. '_' → logprob: -8.743698120117188
    8. 'ét' → logprob: -8.868698120117188
    9. 'êt' → logprob: -8.993698120117188
    10. ' ' → logprob: -9.368698120117188

Token 282: ' vis' (ID: 1909)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.2388184368610382
    2. ' visited' → logprob: -2.363818407058716
    3. 'True' → logprob: -2.863818407058716
    4. 'visited' → logprob: -3.488818407058716
    5. 'vis' → logprob: -4.488818645477295
    6. ' vis' → logprob: -4.738818645477295
    7. ' visit' → logprob: -4.863818645477295
    8. 'v' → logprob: -7.113818645477295
    9. ' False' → logprob: -7.238818645477295
    10. 'visit' → logprob: -7.488818645477295

Token 283: 'ité' (ID: 3761)
  Prédit: 'ited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -0.007243710570037365
    2. 'ité' → logprob: -5.007243633270264
    3. 'ite' → logprob: -8.507244110107422
    4. 'it' → logprob: -8.882244110107422
    5. 'isted' → logprob: -9.382244110107422
    6. '   ' → logprob: -10.632244110107422
    7. '```' → logprob: -10.632244110107422
    8. '
' → logprob: -11.507244110107422
    9. '[' → logprob: -12.007244110107422
    10. '

' → logprob: -12.132244110107422

Token 284: ' ou' (ID: 2031)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7204859256744385
    2. 'visited' → logprob: -0.7204859256744385
    3. '=' → logprob: -4.095485687255859
    4. ' visited' → logprob: -4.595485687255859
    5. '=[' → logprob: -9.72048568725586
    6. ',' → logprob: -9.84548568725586
    7. ' =
' → logprob: -10.34548568725586
    8. ' ' → logprob: -10.84548568725586
    9. ' ' → logprob: -10.97048568725586
    10. '[' → logprob: -11.84548568725586

Token 285: ' non' (ID: 2893)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.7379847764968872
    2. ' not' → logprob: -0.9879847764968872
    3. 'True' → logprob: -1.9879847764968872
    4. 'not' → logprob: -4.612984657287598
    5. ' False' → logprob: -6.987984657287598
    6. 'False' → logprob: -7.237984657287598
    7. ' pas' → logprob: -7.862984657287598
    8. 'pas' → logprob: -8.362984657287598
    9. ' non' → logprob: -9.112984657287598
    10. 'vis' → logprob: -9.362984657287598

Token 286: ' lors' (ID: 15456)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.00386266247369349
    2. ' visited' → logprob: -6.0038628578186035
    3. ' =' → logprob: -6.6288628578186035
    4. '=' → logprob: -10.003862380981445
    5. '
' → logprob: -11.253862380981445
    6. ',' → logprob: -12.503862380981445
    7. ' =
' → logprob: -14.628862380981445
    8. '=[' → logprob: -14.753862380981445
    9. ' 
' → logprob: -15.128862380981445
    10. '[' → logprob: -15.128862380981445

Token 287: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.44032517075538635
    2. ' d' → logprob: -1.690325140953064
    3. ' de' → logprob: -2.0653252601623535
    4. 'du' → logprob: -3.6903252601623535
    5. 'd' → logprob: -4.6903252601623535
    6. ' des' → logprob: -5.0653252601623535
    7. 'de' → logprob: -5.8153252601623535
    8. ' of' → logprob: -8.190324783325195
    9. '#' → logprob: -8.440324783325195
    10. '[]' → logprob: -8.815324783325195

Token 288: ' parcours' (ID: 62625)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.44067010283470154
    2. 'b' → logprob: -1.315670132637024
    3. 'B' → logprob: -2.6906700134277344
    4. ' BFS' → logprob: -4.690670013427734
    5. ' traversal' → logprob: -4.940670013427734
    6. ' parcours' → logprob: -6.565670013427734
    7. ' bfs' → logprob: -6.565670013427734
    8. 'q' → logprob: -7.565670013427734
    9. 'dfs' → logprob: -9.190670013427734
    10. 'visited' → logprob: -9.315670013427734

Token 289: '
' (ID: 198)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.00608532689511776
    2. ' =' → logprob: -5.381085395812988
    3. ' visited' → logprob: -6.881085395812988
    4. '=' → logprob: -7.756085395812988
    5. '=[' → logprob: -12.256085395812988
    6. '[' → logprob: -13.381085395812988
    7. '
' → logprob: -14.381085395812988
    8. '```' → logprob: -14.631085395812988
    9. ',' → logprob: -15.131085395812988
    10. ' ' → logprob: -15.256085395812988

Token 290: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0019286326132714748
    2. ' visited' → logprob: -6.251928806304932
    3. '
' → logprob: -18.626928329467773
    4. '```' → logprob: -18.751928329467773
    5. 'Visited' → logprob: -19.501928329467773
    6. ' 
' → logprob: -20.626928329467773
    7. 'vis' → logprob: -21.501928329467773
    8. 'visit' → logprob: -21.626928329467773
    9. ' ' → logprob: -22.126928329467773
    10. '[' → logprob: -22.126928329467773

Token 291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132660686969757
    2. ' =' → logprob: -1.3132660388946533
    3. '=[' → logprob: -12.688265800476074
    4. ' =[' → logprob: -14.188265800476074
    5. '[' → logprob: -15.063265800476074
    6. ' ' → logprob: -16.18826675415039
    7. '＝' → logprob: -16.68826675415039
    8. '=[]' → logprob: -16.93826675415039
    9. ')' → logprob: -17.31326675415039
    10. ']' → logprob: -17.56326675415039

Token 292: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02975199744105339
    2. ' [' → logprob: -3.529752016067505
    3. '[N' → logprob: -13.654751777648926
    4. ' ' → logprob: -15.529751777648926
    5. '([' → logprob: -16.154752731323242
    6. '=[' → logprob: -17.029752731323242
    7. '   ' → logprob: -17.779752731323242
    8. ' ' → logprob: -17.904752731323242
    9. '```' → logprob: -19.654752731323242
    10. '  ' → logprob: -19.779752731323242

Token 293: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.306760805164231e-05
    2. ' False' → logprob: -11.25001335144043
    3. '(False' → logprob: -19.50001335144043
    4. '0' → logprob: -21.87501335144043
    5. '=False' → logprob: -22.00001335144043
    6. '   ' → logprob: -22.87501335144043
    7. 'True' → logprob: -23.25001335144043
    8. '.False' → logprob: -23.25001335144043
    9. 'false' → logprob: -24.50001335144043
    10. 'F' → logprob: -24.62501335144043

Token 294: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010586611926555634
    2. ' for' → logprob: -5.135586738586426
    3. ']*(' → logprob: -5.885586738586426
    4. ']*' → logprob: -6.510586738586426
    5. 'for' → logprob: -8.135586738586426
    6. ' ]' → logprob: -9.635586738586426
    7. ']+' → logprob: -11.135586738586426
    8. ')' → logprob: -12.635586738586426
    9. ' ' → logprob: -13.760586738586426
    10. '*' → logprob: -14.510586738586426

Token 295: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3018067479133606
    2. '*' → logprob: -1.8018066883087158
    3. 'for' → logprob: -2.426806688308716
    4. ' *' → logprob: -5.301806926727295
    5. ']' → logprob: -7.426806926727295
    6. '*(' → logprob: -7.551806926727295
    7. ')' → logprob: -7.801806926727295
    8. '(N' → logprob: -8.426806449890137
    9. '+' → logprob: -8.426806449890137
    10. '(' → logprob: -9.301806449890137

Token 296: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0009014541283249855
    2. ' (' → logprob: -7.125901222229004
    3. '(' → logprob: -9.250901222229004
    4. '(n' → logprob: -14.625901222229004
    5. '((' → logprob: -15.250901222229004
    6. '(
' → logprob: -16.00090217590332
    7. 'N' → logprob: -16.62590217590332
    8. ' ' → logprob: -17.50090217590332
    9. '（' → logprob: -18.12590217590332
    10. '   ' → logprob: -18.37590217590332

Token 297: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0008827611454762518
    2. '(N' → logprob: -7.125882625579834
    3. ' N' → logprob: -9.500883102416992
    4. ' (' → logprob: -12.875883102416992
    5. '   ' → logprob: -14.750883102416992
    6. '(' → logprob: -14.875883102416992
    7. '	N' → logprob: -16.000883102416992
    8. ' ' → logprob: -17.125883102416992
    9. ')' → logprob: -18.000883102416992
    10. '  ' → logprob: -18.625883102416992

Token 298: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00523612555116415
    2. ' +' → logprob: -5.2552361488342285
    3. '+
' → logprob: -13.13023567199707
    4. '1' → logprob: -15.38023567199707
    5. ' +
' → logprob: -16.50523567199707
    6. ')' → logprob: -16.75523567199707
    7. '[' → logprob: -16.75523567199707
    8. ' plus' → logprob: -17.13023567199707
    9. '()+' → logprob: -17.50523567199707
    10. '＋' → logprob: -18.00523567199707

Token 299: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -16.87504005432129
    4. ')' → logprob: -17.00004005432129
    5. '
' → logprob: -17.25004005432129
    6. '2' → logprob: -17.75004005432129
    7. '   ' → logprob: -17.75004005432129
    8. '7' → logprob: -18.12504005432129
    9. '۱' → logprob: -18.62504005432129
    10. '(' → logprob: -19.12504005432129

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '+' → logprob: -16.875001907348633
    4. '(' → logprob: -18.500001907348633
    5. '```' → logprob: -19.125001907348633
    6. '2' → logprob: -19.375001907348633
    7. '   ' → logprob: -19.500001907348633
    8. '
' → logprob: -19.625001907348633
    9. ')' → logprob: -19.750001907348633
    10. '

' → logprob: -21.125001907348633

Token 301: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ' )' → logprob: -12.500005722045898
    3. ')
' → logprob: -13.500005722045898
    4. ']' → logprob: -15.875005722045898
    5. ')

' → logprob: -16.7500057220459
    6. '))' → logprob: -17.6250057220459
    7. ')#' → logprob: -18.0000057220459
    8. '）' → logprob: -18.1250057220459
    9. ')`' → logprob: -18.1250057220459
    10. '])' → logprob: -18.3750057220459

Token 302: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00018780550453811884
    2. ' for' → logprob: -9.250187873840332
    3. 'n' → logprob: -10.000187873840332
    4. '
' → logprob: -10.750187873840332
    5. 'f' → logprob: -11.125187873840332
    6. 'i' → logprob: -13.125187873840332
    7. '<|end|>' → logprob: -13.125187873840332
    8. 'm' → logprob: -13.500187873840332
    9. 'F' → logprob: -13.625187873840332
    10. '#' → logprob: -13.625187873840332

Token 303: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.244413766078651e-05
    2. '#' → logprob: -9.500082015991211
    3. 'import' → logprob: -12.500082015991211
    4. ' for' → logprob: -12.625082015991211
    5. 'M' → logprob: -15.500082015991211
    6. 'from' → logprob: -15.625082015991211
    7. '
' → logprob: -17.37508201599121
    8. 'For' → logprob: -17.50008201599121
    9. 'pour' → logprob: -18.00008201599121
    10. 'Q' → logprob: -18.12508201599121

Token 304: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.20726746320724487
    2. 'c' → logprob: -1.9572675228118896
    3. 't' → logprob: -3.2072675228118896
    4. '#' → logprob: -6.2072672843933105
    5. 'cl' → logprob: -6.5822672843933105
    6. 'r' → logprob: -7.0822672843933105
    7. 'cler' → logprob: -7.2072672843933105
    8. 'cles' → logprob: -8.332267761230469
    9. 'e' → logprob: -10.082267761230469
    10. 'i' → logprob: -10.332267761230469

Token 305: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.576276957988739
    2. 'for' → logprob: -0.826276957988739
    3. ' i' → logprob: -8.326276779174805
    4. 'i' → logprob: -10.076276779174805
    5. '
' → logprob: -11.076276779174805
    6. '_' → logprob: -11.076276779174805
    7. ' ' → logprob: -11.326276779174805
    8. ' _' → logprob: -12.826276779174805
    9. ' pour' → logprob: -13.451276779174805
    10. ' 
' → logprob: -13.701276779174805

Token 306: ' lire' (ID: 46082)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5434615612030029
    2. ' _' → logprob: -1.043461561203003
    3. ' i' → logprob: -2.793461561203003
    4. 'i' → logprob: -5.168461799621582
    5. ' ' → logprob: -10.043461799621582
    6. '_i' → logprob: -10.168461799621582
    7. ' range' → logprob: -10.543461799621582
    8. 'range' → logprob: -11.918461799621582
    9. ' ' → logprob: -12.293461799621582
    10. '_=' → logprob: -13.168461799621582

Token 307: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.040450386703014374
    2. 'N' → logprob: -3.91545033454895
    3. ' _' → logprob: -5.040450572967529
    4. ' N' → logprob: -5.290450572967529
    5. '(' → logprob: -5.665450572967529
    6. ' range' → logprob: -6.415450572967529
    7. 'range' → logprob: -6.665450572967529
    8. '(N' → logprob: -7.165450572967529
    9. 'i' → logprob: -7.915450572967529
    10. '_N' → logprob: -8.540450096130371

Token 308: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.23389644920825958
    2. ' ar' → logprob: -2.358896493911743
    3. ' _' → logprob: -3.358896493911743
    4. '_' → logprob: -3.358896493911743
    5. 'N' → logprob: -3.608896493911743
    6. ' edges' → logprob: -4.733896255493164
    7. 'ar' → logprob: -5.733896255493164
    8. ' are' → logprob: -6.858896255493164
    9. 'edges' → logprob: -6.983896255493164
    10. 'are' → logprob: -7.733896255493164

Token 309: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.253373384475708
    2. '-' → logprob: -1.503373384475708
    3. ' ' → logprob: -7.628373146057129
    4. ' N' → logprob: -8.628373146057129
    5. '
' → logprob: -8.878373146057129
    6. ' range' → logprob: -9.128373146057129
    7. 'range' → logprob: -9.503373146057129
    8. ' _' → logprob: -9.628373146057129
    9. '  ' → logprob: -9.878373146057129
    10. ' ' → logprob: -10.128373146057129

Token 310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011705794604495168
    2. ' ' → logprob: -6.751170635223389
    3. '-' → logprob: -14.75117015838623
    4. '2' → logprob: -17.501171112060547
    5. '
' → logprob: -17.751171112060547
    6. '   ' → logprob: -18.001171112060547
    7. ' ' → logprob: -18.063671112060547
    8. '```' → logprob: -18.251171112060547
    9. '#' → logprob: -18.376171112060547
    10. '  ' → logprob: -18.501171112060547

Token 311: ' ar' (ID: 646)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.2317817658185959
    2. ' lignes' → logprob: -2.9817817211151123
    3. 'edges' → logprob: -3.2317817211151123
    4. ' lines' → logprob: -3.2317817211151123
    5. ' for' → logprob: -3.4817817211151123
    6. 'for' → logprob: -4.106781959533691
    7. ' ' → logprob: -4.481781959533691
    8. '<|end|>' → logprob: -5.231781959533691
    9. '_edges' → logprob: -5.731781959533691
    10. ' ar' → logprob: -6.106781959533691

Token 312: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.0006137899472378194
    2. 'etes' → logprob: -8.000614166259766
    3. 'cs' → logprob: -9.000614166259766
    4. 'tes' → logprob: -9.750614166259766
    5. 'ê' → logprob: -10.500614166259766
    6. 'es' → logprob: -11.000614166259766
    7. 'ètes' → logprob: -11.250614166259766
    8. 'c' → logprob: -11.625614166259766
    9. 'êts' → logprob: -12.250614166259766
    10. 'e' → logprob: -12.375614166259766

Token 313: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00012892624363303185
    2. ' for' → logprob: -9.000128746032715
    3. '
' → logprob: -12.125128746032715
    4. ':
' → logprob: -18.50012969970703
    5. ' 
' → logprob: -19.00012969970703
    6. 'f' → logprob: -19.50012969970703
    7. 'range' → logprob: -19.50012969970703
    8. ':' → logprob: -19.62512969970703
    9. '	for' → logprob: -20.50012969970703
    10. ',
' → logprob: -20.50012969970703

Token 314: 'par' (ID: 796)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07117351144552231
    2. ' for' → logprob: -2.6961734294891357
    3. ')' → logprob: -7.571173667907715
    4. ' range' → logprob: -8.446173667907715
    5. 'range' → logprob: -8.571173667907715
    6. ' i' → logprob: -8.696173667907715
    7. 'i' → logprob: -9.321173667907715
    8. '
' → logprob: -10.696173667907715
    9. '_' → logprob: -10.821173667907715
    10. ' _' → logprob: -11.571173667907715

Token 315: 'ce' (ID: 400)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4651162922382355
    2. ' i' → logprob: -1.840116262435913
    3. 'range' → logprob: -1.965116262435913
    4. 'i' → logprob: -3.090116262435913
    5. '_' → logprob: -4.465116500854492
    6. 'for' → logprob: -6.090116500854492
    7. 'e' → logprob: -6.715116500854492
    8. ' ' → logprob: -6.840116500854492
    9. ')' → logprob: -6.840116500854492
    10. 'mi' → logprob: -6.965116500854492

Token 316: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.4153420329093933
    2. 'que' → logprob: -2.040342092514038
    3. ' ' → logprob: -2.290342092514038
    4. ' i' → logprob: -3.040342092514038
    5. ')' → logprob: -3.915342092514038
    6. '#' → logprob: -4.540341854095459
    7. 'i' → logprob: -4.790341854095459
    8. 'u' → logprob: -5.415341854095459
    9. ' des' → logprob: -6.040341854095459
    10. 'ce' → logprob: -6.415341854095459

Token 317: ' dans' (ID: 2671)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6497242450714111
    2. ' les' → logprob: -2.024724245071411
    3. 'un' → logprob: -2.149724245071411
    4. 'N' → logprob: -3.024724245071411
    5. ' N' → logprob: -3.024724245071411
    6. 'les' → logprob: -3.149724245071411
    7. 'for' → logprob: -4.149724006652832
    8. ' for' → logprob: -4.274724006652832
    9. 'le' → logprob: -4.649724006652832
    10. ' dans' → logprob: -4.774724006652832

Token 318: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5366925001144409
    2. 'un' → logprob: -1.161692500114441
    3. 'les' → logprob: -3.0366926193237305
    4. ' les' → logprob: -3.0366926193237305
    5. 'range' → logprob: -6.9116926193237305
    6. 'a' → logprob: -7.4116926193237305
    7. 'l' → logprob: -7.4116926193237305
    8. 'une' → logprob: -7.6616926193237305
    9. ' une' → logprob: -7.7866926193237305
    10. 'le' → logprob: -7.7866926193237305

Token 319: ' arbre' (ID: 164180)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.23117844760417938
    2. ' arbre' → logprob: -1.6061784029006958
    3. 'arb' → logprob: -5.481178283691406
    4. 'gr' → logprob: -7.106178283691406
    5. 'tree' → logprob: -8.231178283691406
    6. ' grap' → logprob: -8.481178283691406
    7. 'graph' → logprob: -8.856178283691406
    8. '```' → logprob: -9.731178283691406
    9. ' tree' → logprob: -10.606178283691406
    10. '   ' → logprob: -10.856178283691406

Token 320: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5178282856941223
    2. ')' → logprob: -1.0178282260894775
    3. ' )' → logprob: -4.267828464508057
    4. ' ,' → logprob: -4.642828464508057
    5. '):' → logprob: -4.767828464508057
    6. '):
' → logprob: -5.517828464508057
    7. 'N' → logprob: -6.267828464508057
    8. '),' → logprob: -6.392828464508057
    9. ' N' → logprob: -7.017828464508057
    10. 's' → logprob: -7.642828464508057

Token 321: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.020080706104636192
    2. 'n' → logprob: -4.27008056640625
    3. ' N' → logprob: -5.27008056640625
    4. 'st' → logprob: -9.64508056640625
    5. '```' → logprob: -9.64508056640625
    6. 'graph' → logprob: -9.77008056640625
    7. '#' → logprob: -10.14508056640625
    8. 'python' → logprob: -10.14508056640625
    9. 'u' → logprob: -10.14508056640625
    10. 'un' → logprob: -10.52008056640625

Token 322: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3068663477897644
    2. 's' → logprob: -1.9318664073944092
    3. 'nodes' → logprob: -2.556866407394409
    4. '```' → logprob: -4.30686616897583
    5. ' noe' → logprob: -4.68186616897583
    6. ' somm' → logprob: -4.80686616897583
    7. ' n' → logprob: -5.93186616897583
    8. 'som' → logprob: -6.18186616897583
    9. ' ' → logprob: -7.18186616897583
    10. ')' → logprob: -7.43186616897583

Token 323: 'œ' (ID: 15335)
  Prédit: 'œ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'œ' → logprob: -0.17508584260940552
    2. 'oe' → logprob: -1.9250857830047607
    3. '\xc2' → logprob: -5.17508602142334
    4. 'odes' → logprob: -6.05008602142334
    5. '```' → logprob: -6.17508602142334
    6. 'e' → logprob: -6.67508602142334
    7. '\' → logprob: -7.17508602142334
    8. '#' → logprob: -7.55008602142334
    9. 's' → logprob: -7.67508602142334
    10. '-' → logprob: -8.55008602142334

Token 324: 'uds' (ID: 44387)
  Prédit: 'uds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uds' → logprob: -0.006046112626791
    2. 'ud' → logprob: -5.131046295166016
    3. 'ds' → logprob: -9.131046295166016
    4. 'e' → logprob: -12.381046295166016
    5. '```' → logprob: -13.506046295166016
    6. 'nds' → logprob: -13.756046295166016
    7. 'd' → logprob: -14.881046295166016
    8. '#' → logprob: -15.131046295166016
    9. '\xc2' → logprob: -15.256046295166016
    10. '``' → logprob: -15.256046295166016

Token 325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1439845710992813
    2. ')' → logprob: -2.01898455619812
    3. ' ,' → logprob: -7.393984794616699
    4. '),' → logprob: -8.1439847946167
    5. ',
' → logprob: -8.3939847946167
    6. ' )' → logprob: -9.6439847946167
    7. ')
' → logprob: -11.2689847946167
    8. 'N' → logprob: -11.2689847946167
    9. 's' → logprob: -11.3939847946167
    10. ',)' → logprob: -11.5189847946167

Token 326: ' il' (ID: 1793)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.95931077003479
    2. 'N' → logprob: -1.20931077003479
    3. ' for' → logprob: -1.70931077003479
    4. ' N' → logprob: -2.08431077003479
    5. 'range' → logprob: -5.209310531616211
    6. ' range' → logprob: -5.709310531616211
    7. '#' → logprob: -7.084310531616211
    8. ')' → logprob: -7.584310531616211
    9. 's' → logprob: -7.709310531616211
    10. '
' → logprob: -7.709310531616211

Token 327: ' y' (ID: 342)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0095493793487549
    2. 's' → logprob: -2.009549379348755
    3. ' N' → logprob: -2.259549379348755
    4. ' =' → logprob: -2.634549379348755
    5. ' )' → logprob: -2.884549379348755
    6. '=' → logprob: -3.134549379348755
    7. ' n' → logprob: -3.259549379348755
    8. ' a' → logprob: -3.259549379348755
    9. 'N' → logprob: -3.634549379348755
    10. ' faudra' → logprob: -3.634549379348755

Token 328: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20207741856575012
    2. ' a' → logprob: -1.7020773887634277
    3. 'y' → logprob: -8.202077865600586
    4. ' y' → logprob: -9.452077865600586
    5. ' aura' → logprob: -9.577077865600586
    6. '#a' → logprob: -9.827077865600586
    7. '#' → logprob: -9.952077865600586
    8. '	a' → logprob: -10.827077865600586
    9. ' have' → logprob: -10.827077865600586
    10. ' avait' → logprob: -11.452077865600586

Token 329: ' toujours' (ID: 16867)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.09045764058828354
    2. ' N' → logprob: -2.4654576778411865
    3. 'n' → logprob: -7.215457439422607
    4. '<|end|>' → logprob: -7.715457439422607
    5. '(N' → logprob: -8.840457916259766
    6. '	N' → logprob: -9.840457916259766
    7. '<|end|>' → logprob: -10.340457916259766
    8. '
' → logprob: -11.215457916259766
    9. ' ' → logprob: -11.590457916259766
    10. ')' → logprob: -11.590457916259766

Token 330: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.22551269829273224
    2. ' N' → logprob: -1.6005127429962158
    3. 'n' → logprob: -10.225512504577637
    4. '(N' → logprob: -10.350512504577637
    5. ' exactly' → logprob: -11.850512504577637
    6. ' (' → logprob: -12.475512504577637
    7. ' ' → logprob: -12.600512504577637
    8. ' une' → logprob: -12.600512504577637
    9. ' exactement' → logprob: -12.600512504577637
    10. 'exact' → logprob: -12.975512504577637

Token 331: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012510471045970917
    2. ' -' → logprob: -4.387510299682617
    3. ' ' → logprob: -15.012510299682617
    4. ')' → logprob: -15.387510299682617
    5. '<|end|>' → logprob: -15.887510299682617
    6. '#' → logprob: -16.137510299682617
    7. ' ' → logprob: -16.887510299682617
    8. '
' → logprob: -17.387510299682617
    9. '()-' → logprob: -18.137510299682617
    10. '-
' → logprob: -18.262510299682617

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '-' → logprob: -16.625015258789062
    4. '```' → logprob: -17.250015258789062
    5. '2' → logprob: -18.125015258789062
    6. '#' → logprob: -18.125015258789062
    7. '
' → logprob: -18.250015258789062
    8. '<|end|>' → logprob: -18.750015258789062
    9. ' ' → logprob: -20.000015258789062
    10. '   ' → logprob: -20.250015258789062

Token 333: ' ar' (ID: 646)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.24908117949962616
    2. 'edges' → logprob: -1.9990811347961426
    3. ')' → logprob: -2.8740811347961426
    4. ' ar' → logprob: -5.124081134796143
    5. '_edges' → logprob: -5.249081134796143
    6. ' lines' → logprob: -5.624081134796143
    7. ' lignes' → logprob: -6.249081134796143
    8. '<|end|>' → logprob: -6.249081134796143
    9. '
' → logprob: -6.499081134796143
    10. ' 
' → logprob: -6.624081134796143

Token 334: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.002854447579011321
    2. 'tes' → logprob: -6.627854347229004
    3. 'ê' → logprob: -7.252854347229004
    4. 'etes' → logprob: -8.877854347229004
    5. 'êts' → logprob: -9.002854347229004
    6. 'cs' → logprob: -9.252854347229004
    7. 'es' → logprob: -9.502854347229004
    8. 'êt' → logprob: -9.627854347229004
    9. '�' → logprob: -9.752854347229004
    10. 'ètes' → logprob: -10.002854347229004

Token 335: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8551379442214966
    2. ':' → logprob: -0.9801379442214966
    3. 'for' → logprob: -2.355137825012207
    4. ')' → logprob: -2.855137825012207
    5. '):
' → logprob: -3.730137825012207
    6. ':
' → logprob: -4.105137825012207
    7. ' for' → logprob: -5.730137825012207
    8. ' :' → logprob: -6.480137825012207
    9. ' ):' → logprob: -7.230137825012207
    10. ',' → logprob: -8.230137825012207

Token 336: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003633521846495569
    2. '
' → logprob: -8.00036334991455
    3. ' for' → logprob: -10.50036334991455
    4. 'range' → logprob: -16.125364303588867
    5. '
' → logprob: -16.375364303588867
    6. 'f' → logprob: -17.000364303588867
    7. ' 
' → logprob: -17.375364303588867
    8. '_for' → logprob: -17.375364303588867
    9. '```' → logprob: -17.375364303588867
    10. '' → logprob: -17.500364303588867

Token 337: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.09584309905767441
    2. ' i' → logprob: -2.9708430767059326
    3. '_' → logprob: -3.2208430767059326
    4. 'i' → logprob: -8.720843315124512
    5. ' ' → logprob: -10.095843315124512
    6. '_i' → logprob: -12.345843315124512
    7. ' ' → logprob: -13.970843315124512
    8. ' _
' → logprob: -14.720843315124512
    9. ' j' → logprob: -14.720843315124512
    10. '	i' → logprob: -15.220843315124512

Token 338: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018266061320900917
    2. 'in' → logprob: -4.018266201019287
    3. ' ' → logprob: -9.518265724182129
    4. '1' → logprob: -10.893265724182129
    5. ' i' → logprob: -11.893265724182129
    6. 'range' → logprob: -12.518265724182129
    7. ' ' → logprob: -13.268265724182129
    8. '_' → logprob: -13.268265724182129
    9. '  ' → logprob: -13.393265724182129
    10. '+' → logprob: -13.893265724182129

Token 339: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029765525832772255
    2. 'range' → logprob: -3.5297656059265137
    3. ' ' → logprob: -11.279765129089355
    4. '(range' → logprob: -14.529765129089355
    5. '	range' → logprob: -14.654765129089355
    6. ' in' → logprob: -14.779765129089355
    7. ' ' → logprob: -15.404765129089355
    8. '  ' → logprob: -15.779765129089355
    9. ' ran' → logprob: -16.029766082763672
    10. ' r' → logprob: -16.404766082763672

Token 340: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9266199160483666e-05
    2. '(N' → logprob: -11.125019073486328
    3. '1' → logprob: -12.500019073486328
    4. ' (' → logprob: -14.250019073486328
    5. '(
' → logprob: -16.000019073486328
    6. ' ' → logprob: -19.375019073486328
    7. '(n' → logprob: -20.875019073486328
    8. '(

' → logprob: -21.500019073486328
    9. '((' → logprob: -21.750019073486328
    10. 'N' → logprob: -22.500019073486328

Token 341: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3491390645503998
    2. '-' → logprob: -1.2241390943527222
    3. '1' → logprob: -7.724139213562012
    4. ' ' → logprob: -8.474139213562012
    5. ')' → logprob: -10.474139213562012
    6. '-
' → logprob: -12.599139213562012
    7. ' -
' → logprob: -12.724139213562012
    8. ' )' → logprob: -13.224139213562012
    9. '   ' → logprob: -13.349139213562012
    10. '):
' → logprob: -13.661639213562012

Token 342: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02630215883255005
    2. ' ' → logprob: -3.6513020992279053
    3. '<|end|>' → logprob: -14.276302337646484
    4. '   ' → logprob: -15.151302337646484
    5. ')' → logprob: -15.463802337646484
    6. '  ' → logprob: -15.526302337646484
    7. ' ' → logprob: -15.713802337646484
    8. '```' → logprob: -16.276302337646484
    9. '0' → logprob: -16.338802337646484
    10. '2' → logprob: -16.776302337646484

Token 343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -17.125001907348633
    4. ')' → logprob: -18.125001907348633
    5. '   ' → logprob: -18.562501907348633
    6. '１' → logprob: -18.687501907348633
    7. '۱' → logprob: -19.062501907348633
    8. '১' → logprob: -19.187501907348633
    9. '१' → logprob: -19.562501907348633
    10. '2' → logprob: -19.750001907348633

Token 344: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004640522412955761
    2. ' ):' → logprob: -5.879640579223633
    3. ')' → logprob: -6.754640579223633
    4. '):
' → logprob: -7.379640579223633
    5. ':' → logprob: -10.254640579223633
    6. ' )' → logprob: -12.629640579223633
    7. '):
' → logprob: -13.004640579223633
    8. ' ):
' → logprob: -13.254640579223633
    9. ' :' → logprob: -13.379640579223633
    10. '():' → logprob: -15.379640579223633

Token 345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09080571681261063
    2. ' u' → logprob: -3.090805768966675
    3. 'u' → logprob: -3.465805768966675
    4. 'a' → logprob: -5.465805530548096
    5. ' a' → logprob: -5.590805530548096
    6. '	u' → logprob: -6.715805530548096
    7. ' line' → logprob: -7.715805530548096
    8. '	a' → logprob: -9.340806007385254
    9. 'x' → logprob: -9.465806007385254
    10. ' x' → logprob: -10.090806007385254

Token 346: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.10346157848834991
    2. 'a' → logprob: -2.353461503982544
    3. '   ' → logprob: -6.478461742401123
    4. ' u' → logprob: -6.728461742401123
    5. 'x' → logprob: -7.728461742401123
    6. ' a' → logprob: -10.103461265563965
    7. ' ' → logprob: -11.353461265563965
    8. '    
' → logprob: -12.228461265563965
    9. 'A' → logprob: -12.353461265563965
    10. '	u' → logprob: -12.478461265563965

Token 347: ' Lire' (ID: 57624)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.09111341834068298
    2. 'a' → logprob: -2.466113328933716
    3. 'x' → logprob: -6.216113567352295
    4. ' u' → logprob: -9.091113090515137
    5. '   ' → logprob: -10.841113090515137
    6. 'A' → logprob: -12.216113090515137
    7. 's' → logprob: -12.216113090515137
    8. 'v' → logprob: -12.216113090515137
    9. ' a' → logprob: -12.466113090515137
    10. 'line' → logprob: -12.966113090515137

Token 348: ' une' (ID: 2463)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.11589378118515015
    2. 'u' → logprob: -2.740893840789795
    3. 'a' → logprob: -3.365893840789795
    4. ' a' → logprob: -4.740893840789795
    5. '   ' → logprob: -8.490893363952637
    6. ' node' → logprob: -8.615893363952637
    7. ' line' → logprob: -8.740893363952637
    8. ' un' → logprob: -9.115893363952637
    9. 'x' → logprob: -9.115893363952637
    10. ',' → logprob: -9.115893363952637

Token 349: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.09955185651779175
    2. ' ' → logprob: -3.2245519161224365
    3. ' ar' → logprob: -4.099551677703857
    4. 'ligne' → logprob: -4.349551677703857
    5. ' a' → logprob: -4.974551677703857
    6. ' paire' → logprob: -5.349551677703857
    7. ' line' → logprob: -5.599551677703857
    8. ' u' → logprob: -5.974551677703857
    9. 'a' → logprob: -6.474551677703857
    10. ' l' → logprob: -6.724551677703857

Token 350: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25172436237335205
    2. '()' → logprob: -2.6267242431640625
    3. 'a' → logprob: -3.1267242431640625
    4. ',' → logprob: -3.8767242431640625
    5. '().' → logprob: -4.0017242431640625
    6. '=' → logprob: -4.2517242431640625
    7. '   ' → logprob: -4.6267242431640625
    8. 's' → logprob: -4.7517242431640625
    9. 'u' → logprob: -5.1267242431640625
    10. 'split' → logprob: -5.2517242431640625

Token 351: ''entrée' (ID: 115820)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5549032688140869
    2. 'input' → logprob: -1.054903268814087
    3. 'e' → logprob: -3.679903268814087
    4. ''entrée' → logprob: -3.679903268814087
    5. 'entrée' → logprob: -4.804903030395508
    6. '=input' → logprob: -4.929903030395508
    7. 'es' → logprob: -5.679903030395508
    8. 's' → logprob: -6.929903030395508
    9. 'a' → logprob: -6.929903030395508
    10. ' code' → logprob: -6.929903030395508

Token 352: ',' (ID: 11)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.5337875485420227
    2. 'u' → logprob: -1.533787488937378
    3. '   ' → logprob: -2.908787488937378
    4. ' =' → logprob: -3.033787488937378
    5. ',' → logprob: -3.283787488937378
    6. 'a' → logprob: -3.658787488937378
    7. 'x' → logprob: -5.158787727355957
    8. ' ,' → logprob: -5.283787727355957
    9. ' x' → logprob: -5.533787727355957
    10. 's' → logprob: -5.658787727355957

Token 353: ' couper' (ID: 135212)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.04076792299747467
    2. 'u' → logprob: -3.6657679080963135
    3. ' a' → logprob: -5.040768146514893
    4. 'a' → logprob: -5.165768146514893
    5. ' x' → logprob: -6.540768146514893
    6. 'x' → logprob: -7.915768146514893
    7. '   ' → logprob: -8.915767669677734
    8. ' split' → logprob: -9.665767669677734
    9. 'split' → logprob: -10.165767669677734
    10. ' ' → logprob: -10.165767669677734

Token 354: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012965508736670017
    2. '().' → logprob: -4.387965679168701
    3. 'r' → logprob: -8.137965202331543
    4. '('' → logprob: -9.887965202331543
    5. '("' → logprob: -11.137965202331543
    6. '()[' → logprob: -11.387965202331543
    7. ' la' → logprob: -11.512965202331543
    8. '(' → logprob: -11.637965202331543
    9. 'la' → logprob: -11.637965202331543
    10. 's' → logprob: -12.137965202331543

Token 355: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.1057799756526947
    2. 'chaine' → logprob: -2.9807798862457275
    3. ' chaine' → logprob: -3.6057798862457275
    4. ' chaînes' → logprob: -5.355780124664307
    5. ' ligne' → logprob: -5.480780124664307
    6. ' chain' → logprob: -5.730780124664307
    7. ' string' → logprob: -5.855780124664307
    8. 'string' → logprob: -5.980780124664307
    9. 'ligne' → logprob: -6.480780124664307
    10. 'chain' → logprob: -6.730780124664307

Token 356: ' par' (ID: 686)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6510162353515625
    2. '().' → logprob: -0.9010162353515625
    3. '.split' → logprob: -2.7760162353515625
    4. '.strip' → logprob: -5.6510162353515625
    5. ' .' → logprob: -6.5260162353515625
    6. '.' → logprob: -6.6510162353515625
    7. 'r' → logprob: -6.9010162353515625
    8. 'split' → logprob: -7.5260162353515625
    9. ' en' → logprob: -7.5260162353515625
    10. 's' → logprob: -7.7760162353515625

Token 357: ' les' (ID: 1341)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.5774571895599365
    2. ' un' → logprob: -1.9524571895599365
    3. 'un' → logprob: -2.0774571895599365
    4. ''' → logprob: -2.4524571895599365
    5. ' espaces' → logprob: -2.4524571895599365
    6. ' des' → logprob: -3.0774571895599365
    7. 'esp' → logprob: -3.2024571895599365
    8. ' ' → logprob: -3.4524571895599365
    9. ' espace' → logprob: -3.4524571895599365
    10. '"' → logprob: -3.5774571895599365

Token 358: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.058079641312360764
    2. 'esp' → logprob: -2.933079719543457
    3. 'es' → logprob: -5.933079719543457
    4. ''esp' → logprob: -8.433079719543457
    5. ' espace' → logprob: -8.558079719543457
    6. 'spaces' → logprob: -9.933079719543457
    7. ''espace' → logprob: -10.558079719543457
    8. ' spaces' → logprob: -11.558079719543457
    9. 'space' → logprob: -11.808079719543457
    10. ' espacios' → logprob: -11.808079719543457

Token 359: ' et' (ID: 859)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.69610595703125
    2. 's' → logprob: -1.44610595703125
    3. 'a' → logprob: -2.44610595703125
    4. ' u' → logprob: -2.94610595703125
    5. ',' → logprob: -3.19610595703125
    6. ')' → logprob: -4.07110595703125
    7. ' s' → logprob: -4.07110595703125
    8. 'x' → logprob: -4.94610595703125
    9. 'r' → logprob: -5.19610595703125
    10. ' a' → logprob: -5.44610595703125

Token 360: ' convertir' (ID: 79223)
  Prédit: ' convertir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.8770320415496826
    2. 'map' → logprob: -1.0020320415496826
    3. ' map' → logprob: -2.8770320415496826
    4. 'assign' → logprob: -3.0020320415496826
    5. 'convert' → logprob: -3.5020320415496826
    6. ' unpack' → logprob: -3.7520320415496826
    7. ' assign' → logprob: -4.252032279968262
    8. 'split' → logprob: -4.377032279968262
    9. ' convert' → logprob: -5.002032279968262
    10. ' les' → logprob: -5.627032279968262

Token 361: ' chaque' (ID: 21194)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.06218110769987106
    2. '()' → logprob: -3.687180995941162
    3. 'en' → logprob: -4.312180995941162
    4. ' les' → logprob: -4.437180995941162
    5. 'les' → logprob: -5.812180995941162
    6. 'la' → logprob: -5.937180995941162
    7. '   ' → logprob: -5.937180995941162
    8. ' la' → logprob: -7.437180995941162
    9. 'l' → logprob: -8.31218147277832
    10. 'int' → logprob: -8.56218147277832

Token 362: ' élément' (ID: 99627)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0977919101715088
    2. 'element' → logprob: -1.4727919101715088
    3. 'val' → logprob: -1.8477919101715088
    4. 'token' → logprob: -2.847791910171509
    5. ' element' → logprob: -2.972791910171509
    6. ' token' → logprob: -3.347791910171509
    7. 'ent' → logprob: -3.847791910171509
    8. ' int' → logprob: -4.09779167175293
    9. ' élément' → logprob: -4.22279167175293
    10. 'élé' → logprob: -4.47279167175293

Token 363: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.1458200365304947
    2. 'en' → logprob: -2.020820140838623
    3. 'int' → logprob: -6.520820140838623
    4. '()' → logprob: -7.395820140838623
    5. ' into' → logprob: -8.270819664001465
    6. '(int' → logprob: -8.770819664001465
    7. '   ' → logprob: -9.145819664001465
    8. '_en' → logprob: -9.270819664001465
    9. 'into' → logprob: -9.645819664001465
    10. ' in' → logprob: -10.270819664001465

Token 364: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1333482563495636
    2. 'ent' → logprob: -2.633348226547241
    3. ' int' → logprob: -3.133348226547241
    4. ' entier' → logprob: -4.75834846496582
    5. ' ent' → logprob: -7.25834846496582
    6. ' un' → logprob: -9.63334846496582
    7. ' integer' → logprob: -10.88334846496582
    8. 'un' → logprob: -11.25834846496582
    9. ' ' → logprob: -11.25834846496582
    10. 'integer' → logprob: -12.00834846496582

Token 365: '
' (ID: 198)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3162008225917816
    2. ' u' → logprob: -1.566200852394104
    3. '   ' → logprob: -2.8162007331848145
    4. 'a' → logprob: -6.5662007331848145
    5. '(u' → logprob: -8.066201210021973
    6. 'x' → logprob: -8.316201210021973
    7. '[u' → logprob: -8.941201210021973
    8. ' a' → logprob: -9.066201210021973
    9. '	u' → logprob: -9.691201210021973
    10. '_u' → logprob: -10.566201210021973

Token 366: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3053683936595917
    2. ' u' → logprob: -1.930368423461914
    3. 'u' → logprob: -2.180368423461914
    4. 'a' → logprob: -5.805368423461914
    5. ' a' → logprob: -6.555368423461914
    6. '[u' → logprob: -8.680368423461914
    7. 'x' → logprob: -9.305368423461914
    8. '(u' → logprob: -9.430368423461914
    9. '	u' → logprob: -9.430368423461914
    10. '    
' → logprob: -9.680368423461914

Token 367: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.26015883684158325
    2. 'a' → logprob: -1.5101587772369385
    3. 'x' → logprob: -5.010159015655518
    4. ' u' → logprob: -7.135159015655518
    5. 'A' → logprob: -7.885159015655518
    6. 'U' → logprob: -8.76015853881836
    7. ' a' → logprob: -9.13515853881836
    8. '   ' → logprob: -10.76015853881836
    9. 'v' → logprob: -11.38515853881836
    10. 'l' → logprob: -11.51015853881836

Token 368: ' On' (ID: 2160)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.13565081357955933
    2. 'a' → logprob: -2.260650873184204
    3. ' u' → logprob: -4.010650634765625
    4. 'x' → logprob: -6.010650634765625
    5. ' a' → logprob: -6.760650634765625
    6. 'A' → logprob: -7.885650634765625
    7. '   ' → logprob: -8.635650634765625
    8. 'U' → logprob: -8.635650634765625
    9. ' ' → logprob: -10.260650634765625
    10. ' x' → logprob: -11.260650634765625

Token 369: ' obt' (ID: 5564)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2604837417602539
    2. 's' → logprob: -2.385483741760254
    3. '=' → logprob: -3.010483741760254
    4. '_' → logprob: -3.760483741760254
    5. ' a' → logprob: -4.510483741760254
    6. 'u' → logprob: -4.760483741760254
    7. 'a' → logprob: -4.760483741760254
    8. ' ' → logprob: -5.635483741760254
    9. ' s' → logprob: -6.010483741760254
    10. ' u' → logprob: -6.385483741760254

Token 370: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.014072886668145657
    2. 'iens' → logprob: -4.389072895050049
    3. 'iennent' → logprob: -7.514072895050049
    4. 'ienne' → logprob: -9.01407241821289
    5. 'ien' → logprob: -9.01407241821289
    6. 'ients' → logprob: -9.01407241821289
    7. 'iene' → logprob: -9.01407241821289
    8. 'ois' → logprob: -9.63907241821289
    9. '=' → logprob: -9.63907241821289
    10. 'iend' → logprob: -9.88907241821289

Token 371: ' ainsi' (ID: 16371)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.02777678333222866
    2. 'u' → logprob: -3.7777767181396484
    3. ' a' → logprob: -6.152776718139648
    4. '   ' → logprob: -7.027776718139648
    5. 'a' → logprob: -7.152776718139648
    6. ' ' → logprob: -8.527776718139648
    7. '[u' → logprob: -9.027776718139648
    8. '	u' → logprob: -9.152776718139648
    9. '(u' → logprob: -9.277776718139648
    10. ' x' → logprob: -9.777776718139648

Token 372: ' les' (ID: 1341)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.07845377177000046
    2. 'u' → logprob: -2.703453779220581
    3. 'a' → logprob: -5.453453540802002
    4. ' a' → logprob: -5.703453540802002
    5. ' ' → logprob: -8.07845401763916
    6. '   ' → logprob: -8.82845401763916
    7. '[u' → logprob: -9.20345401763916
    8. ' ' → logprob: -10.07845401763916
    9. ' un' → logprob: -10.32845401763916
    10. ' une' → logprob: -10.57845401763916

Token 373: ' deux' (ID: 10301)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.3700941503047943
    2. 'u' → logprob: -1.2450941801071167
    3. 'a' → logprob: -4.495094299316406
    4. ' a' → logprob: -4.620094299316406
    5. '[u' → logprob: -9.245094299316406
    6. ' ' → logprob: -9.495094299316406
    7. 'x' → logprob: -9.620094299316406
    8. ' nodes' → logprob: -9.995094299316406
    9. ' x' → logprob: -10.495094299316406
    10. ' node' → logprob: -11.245094299316406

Token 374: ' n' (ID: 297)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.3728662133216858
    2. ' nodes' → logprob: -1.747866153717041
    3. 'u' → logprob: -3.122866153717041
    4. ' vertices' → logprob: -3.997866153717041
    5. ' n' → logprob: -4.247866153717041
    6. 'nodes' → logprob: -4.622866153717041
    7. ' a' → logprob: -4.622866153717041
    8. 'n' → logprob: -5.122866153717041
    9. 's' → logprob: -5.247866153717041
    10. 'a' → logprob: -5.372866153717041

Token 375: 'œ' (ID: 15335)
  Prédit: 'odes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odes' → logprob: -0.3670899271965027
    2. 'œ' → logprob: -1.3670899868011475
    3. 'e' → logprob: -3.8670899868011475
    4. 'oe' → logprob: -3.9920899868011475
    5. 'o' → logprob: -5.117089748382568
    6. '[' → logprob: -5.992089748382568
    7. '_' → logprob: -7.117089748382568
    8. 's' → logprob: -7.867089748382568
    9. '1' → logprob: -7.867089748382568
    10. 'eurs' → logprob: -8.117090225219727

Token 376: 'uds' (ID: 44387)
  Prédit: 'uds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uds' → logprob: -0.0027402082923799753
    2. 'ud' → logprob: -6.502740383148193
    3. 's' → logprob: -7.627740383148193
    4. 'ds' → logprob: -8.002739906311035
    5. 'e' → logprob: -8.627739906311035
    6. 'œ' → logprob: -9.877739906311035
    7. 'd' → logprob: -10.127739906311035
    8. 'ods' → logprob: -10.502739906311035
    9. 'x' → logprob: -10.752739906311035
    10. '_' → logprob: -11.502739906311035

Token 377: ' (' (ID: 350)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5464962124824524
    2. ' u' → logprob: -0.9214962124824524
    3. 'a' → logprob: -4.296496391296387
    4. '[u' → logprob: -5.421496391296387
    5. ' a' → logprob: -6.046496391296387
    6. ',' → logprob: -7.421496391296387
    7. ' =' → logprob: -7.421496391296387
    8. '   ' → logprob: -7.546496391296387
    9. ',u' → logprob: -8.171496391296387
    10. '(u' → logprob: -8.796496391296387

Token 378: 'A' (ID: 32)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5778839588165283
    2. ' u' → logprob: -1.0778839588165283
    3. 'a' → logprob: -3.0778839588165283
    4. ')' → logprob: -3.2028839588165283
    5. ' a' → logprob: -4.827883720397949
    6. ' )' → logprob: -6.327883720397949
    7. ',' → logprob: -6.827883720397949
    8. 'x' → logprob: -8.70288372039795
    9. ',u' → logprob: -8.70288372039795
    10. '   ' → logprob: -9.07788372039795

Token 379: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005090686026960611
    2. ' ,' → logprob: -7.625509262084961
    3. '1' → logprob: -12.375509262084961
    4. ',n' → logprob: -13.250509262084961
    5. ',b' → logprob: -13.250509262084961
    6. ')' → logprob: -13.375509262084961
    7. 's' → logprob: -13.750509262084961
    8. ',a' → logprob: -13.875509262084961
    9. ',int' → logprob: -14.000509262084961
    10. ',A' → logprob: -14.000509262084961

Token 380: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6935607194900513
    2. ' B' → logprob: -0.6935607194900513
    3. ',' → logprob: -8.568560600280762
    4. ')' → logprob: -8.568560600280762
    5. ' ,' → logprob: -11.193560600280762
    6. ' ' → logprob: -11.318560600280762
    7. ' )' → logprob: -12.693560600280762
    8. ' ' → logprob: -13.943560600280762
    9. '  ' → logprob: -14.318560600280762
    10. ',B' → logprob: -14.318560600280762

Token 381: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014613081002607942
    2. ' )' → logprob: -7.626461505889893
    3. ')=' → logprob: -8.001461029052734
    4. ' =' → logprob: -8.376461029052734
    5. ',' → logprob: -8.501461029052734
    6. '   ' → logprob: -9.751461029052734
    7. 'A' → logprob: -10.126461029052734
    8. '),' → logprob: -10.626461029052734
    9. 'a' → logprob: -10.751461029052734
    10. '=' → logprob: -11.001461029052734

Token 382: ' reli' (ID: 10856)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.35664093494415283
    2. ' A' → logprob: -1.2316409349441528
    3. '   ' → logprob: -5.981640815734863
    4. 'a' → logprob: -6.231640815734863
    5. ' =' → logprob: -6.856640815734863
    6. ',' → logprob: -7.106640815734863
    7. 's' → logprob: -7.856640815734863
    8. ' a' → logprob: -7.981640815734863
    9. '[' → logprob: -8.981640815734863
    10. ' ,' → logprob: -9.106640815734863

Token 383: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.011158415116369724
    2. 'ant' → logprob: -5.386158466339111
    3. 'e' → logprob: -5.886158466339111
    4. '   ' → logprob: -6.886158466339111
    5. 'é' → logprob: -7.386158466339111
    6. 'es' → logprob: -7.511158466339111
    7. ' par' → logprob: -8.011157989501953
    8. ',' → logprob: -8.136157989501953
    9. 's' → logprob: -8.636157989501953
    10. 'eux' → logprob: -9.261157989501953

Token 384: ' par' (ID: 686)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3100197911262512
    2. ' par' → logprob: -2.4350197315216064
    3. '   ' → logprob: -2.5600197315216064
    4. ' A' → logprob: -2.8100197315216064
    5. ',' → logprob: -3.8100197315216064
    6. ' =' → logprob: -4.8100199699401855
    7. 'a' → logprob: -5.3100199699401855
    8. 'par' → logprob: -5.9350199699401855
    9. ' a' → logprob: -6.6850199699401855
    10. 's' → logprob: -7.4350199699401855

Token 385: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.33988356590271
    2. ' un' → logprob: -1.58988356590271
    3. ' l' → logprob: -1.71488356590271
    4. ' la' → logprob: -1.71488356590271
    5. 'l' → logprob: -2.71488356590271
    6. ' ' → logprob: -4.089883804321289
    7. ' a' → logprob: -4.339883804321289
    8. ',' → logprob: -4.589883804321289
    9. 'un' → logprob: -4.589883804321289
    10. '_' → logprob: -4.839883804321289

Token 386: ' ar' (ID: 646)
  Prédit: ' ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.7989400029182434
    2. ' ' → logprob: -1.1739399433135986
    3. ' edge' → logprob: -1.7989399433135986
    4. ' are' → logprob: -3.6739399433135986
    5. ' espace' → logprob: -4.048940181732178
    6. 'ar' → logprob: -4.798940181732178
    7. 'are' → logprob: -5.173940181732178
    8. 'arest' → logprob: -5.798940181732178
    9. ' sp' → logprob: -5.798940181732178
    10. ' lien' → logprob: -6.173940181732178

Token 387: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.5525294542312622
    2. 'êtes' → logprob: -0.9275294542312622
    3. 'r' → logprob: -5.052529335021973
    4. 'bre' → logprob: -5.177529335021973
    5. 'e' → logprob: -5.177529335021973
    6. 'cs' → logprob: -5.552529335021973
    7. 'c' → logprob: -5.927529335021973
    8. 'b' → logprob: -7.177529335021973
    9. 'êt' → logprob: -7.427529335021973
    10. 'ê' → logprob: -7.552529335021973

Token 388: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06411676108837128
    2. ' A' → logprob: -3.3141167163848877
    3. '   ' → logprob: -3.9391167163848877
    4. 'a' → logprob: -5.814116954803467
    5. '
' → logprob: -6.939116954803467
    6. '    
' → logprob: -7.064116954803467
    7. ' a' → logprob: -7.689116954803467
    8. ',' → logprob: -8.689116477966309
    9. ' line' → logprob: -8.939116477966309
    10. 's' → logprob: -9.064116477966309

Token 389: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2076880931854248
    2. ' A' → logprob: -1.9576880931854248
    3. '   ' → logprob: -3.207688093185425
    4. 'a' → logprob: -6.457688331604004
    5. '
' → logprob: -6.582688331604004
    6. '    
' → logprob: -6.832688331604004
    7. ' 
' → logprob: -6.957688331604004
    8. ' a' → logprob: -7.707688331604004
    9. '	A' → logprob: -9.457688331604004
    10. ' ' → logprob: -9.582688331604004

Token 390: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.001963485963642597
    2. ' A' → logprob: -6.3769636154174805
    3. 'a' → logprob: -8.62696361541748
    4. '   ' → logprob: -9.50196361541748
    5. 'u' → logprob: -13.25196361541748
    6. 'line' → logprob: -13.50196361541748
    7. '    
' → logprob: -13.75196361541748
    8. '	A' → logprob: -14.12696361541748
    9. ' a' → logprob: -14.75196361541748
    10. '
' → logprob: -14.87696361541748

Token 391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001037815964082256
    2. ',B' → logprob: -9.500103950500488
    3. ' ,' → logprob: -10.500103950500488
    4. ',
' → logprob: -13.875103950500488
    5. 'B' → logprob: -15.750103950500488
    6. ',b' → logprob: -16.625102996826172
    7. '_,' → logprob: -17.375102996826172
    8. 's' → logprob: -17.500102996826172
    9. ',A' → logprob: -18.000102996826172
    10. ',\
' → logprob: -18.250102996826172

Token 392: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5270954370498657
    2. ' B' → logprob: -0.9020954370498657
    3. ' ' → logprob: -5.902095317840576
    4. '<|end|>' → logprob: -6.777095317840576
    5. ' 
' → logprob: -9.902095794677734
    6. '  
' → logprob: -10.777095794677734
    7. '  ' → logprob: -11.277095794677734
    8. ' ' → logprob: -13.402095794677734
    9. ' =' → logprob: -14.152095794677734
    10. '=' → logprob: -14.152095794677734

Token 393: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22542136907577515
    2. ' =' → logprob: -1.60042142868042
    3. ',' → logprob: -12.725420951843262
    4. '=input' → logprob: -12.850420951843262
    5. ')' → logprob: -13.350420951843262
    6. '=int' → logprob: -14.600420951843262
    7. ')=' → logprob: -15.350420951843262
    8. ' ' → logprob: -15.475420951843262
    9. '=

' → logprob: -15.975420951843262
    10. ' =
' → logprob: -16.225421905517578

Token 394: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.004081724211573601
    2. 'map' → logprob: -5.504081726074219
    3. ' list' → logprob: -12.754081726074219
    4. '	map' → logprob: -15.129081726074219
    5. 'list' → logprob: -16.37908172607422
    6. ' ' → logprob: -16.62908172607422
    7. '(map' → logprob: -19.12908172607422
    8. ' tuple' → logprob: -19.12908172607422
    9. '.map' → logprob: -19.87908172607422
    10. 'int' → logprob: -19.87908172607422

Token 395: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0025369017384946346
    2. '(' → logprob: -6.002536773681641
    3. 'int' → logprob: -10.12753677368164
    4. '(
' → logprob: -11.00253677368164
    5. '<int' → logprob: -13.00253677368164
    6. ' int' → logprob: -14.00253677368164
    7. '(input' → logprob: -14.25253677368164
    8. '(lambda' → logprob: -15.12753677368164
    9. '=int' → logprob: -15.75253677368164
    10. ' (' → logprob: -16.00253677368164

Token 396: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.028857599943876266
    2. 'input' → logprob: -3.778857707977295
    3. ',input' → logprob: -5.278857707977295
    4. ')' → logprob: -8.278857231140137
    5. ',' → logprob: -9.403857231140137
    6. '(' → logprob: -9.403857231140137
    7. ' input' → logprob: -9.653857231140137
    8. ' (' → logprob: -11.903857231140137
    9. '=input' → logprob: -12.028857231140137
    10. '[input' → logprob: -14.778857231140137

Token 397: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.002477796748280525
    2. ' input' → logprob: -6.002477645874023
    3. '(input' → logprob: -13.627477645874023
    4. ')' → logprob: -14.127477645874023
    5. '=input' → logprob: -17.127477645874023
    6. ',input' → logprob: -17.377477645874023
    7. ' ' → logprob: -18.502477645874023
    8. '	input' → logprob: -18.877477645874023
    9. '_input' → logprob: -18.877477645874023
    10. '[input' → logprob: -19.627477645874023

Token 398: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.228561349213123e-05
    2. '()' → logprob: -9.875052452087402
    3. ' ().' → logprob: -15.125052452087402
    4. ')' → logprob: -15.750052452087402
    5. '(' → logprob: -15.750052452087402
    6. '())' → logprob: -16.625051498413086
    7. '()
' → logprob: -17.250051498413086
    8. '.' → logprob: -19.125051498413086
    9. '.split' → logprob: -19.500051498413086
    10. ' .' → logprob: -20.125051498413086

Token 399: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.541112427134067e-05
    2. 'strip' → logprob: -9.500075340270996
    3. ' split' → logprob: -15.500075340270996
    4. 'spl' → logprob: -16.125076293945312
    5. '(split' → logprob: -16.625076293945312
    6. 'rstrip' → logprob: -17.750076293945312
    7. ')' → logprob: -18.750076293945312
    8. '().' → logprob: -19.250076293945312
    9. 's' → logprob: -19.375076293945312
    10. '.split' → logprob: -19.750076293945312

Token 400: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02503313310444355
    2. ')' → logprob: -3.9000332355499268
    3. '()' → logprob: -5.775032997131348
    4. '()))' → logprob: -6.900032997131348
    5. '))' → logprob: -8.025032997131348
    6. '(' → logprob: -10.650032997131348
    7. '())
' → logprob: -11.775032997131348
    8. ' ())' → logprob: -12.025032997131348
    9. ' )' → logprob: -13.400032997131348
    10. '());' → logprob: -14.275032997131348

Token 401: '    
' (ID: 1944)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.3938189148902893
    2. '   ' → logprob: -1.1438188552856445
    3. ' E' → logprob: -5.6438188552856445
    4. '    
' → logprob: -7.1438188552856445
    5. '#' → logprob: -7.3938188552856445
    6. '
' → logprob: -7.7688188552856445
    7. ')' → logprob: -7.7688188552856445
    8. '  ' → logprob: -8.143818855285645
    9. '   
' → logprob: -8.893818855285645
    10. '<|end|>' → logprob: -8.893818855285645

Token 402: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07943848520517349
    2. 'E' → logprob: -2.5794384479522705
    3. ' E' → logprob: -7.82943868637085
    4. '#' → logprob: -9.204438209533691
    5. '    
' → logprob: -10.454438209533691
    6. '
' → logprob: -11.454438209533691
    7. '```' → logprob: -12.704438209533691
    8. '  ' → logprob: -13.454438209533691
    9. ' ' → logprob: -13.579438209533691
    10. '   ' → logprob: -13.954438209533691

Token 403: ' #' (ID: 1069)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -8.542423165636137e-05
    2. ' E' → logprob: -9.750085830688477
    3. '#' (adapté à ' #') → logprob: -10.750085830688477
    4. '   ' → logprob: -12.125085830688477
    5. '
' → logprob: -16.000085830688477
    6. ' ' → logprob: -18.125085830688477
    7. ' #' → logprob: -18.375085830688477
    8. '	E' → logprob: -18.875085830688477
    9. '```' → logprob: -18.875085830688477
    10. '  ' → logprob: -19.375085830688477

Token 404: ' Ajouter' (ID: 165754)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.004627480171620846
    2. ' E' → logprob: -5.379627704620361
    3. '#' → logprob: -12.254627227783203
    4. '   ' → logprob: -13.129627227783203
    5. ' ' → logprob: -15.379627227783203
    6. '	E' → logprob: -16.379627227783203
    7. ' #' → logprob: -16.879627227783203
    8. '  ' → logprob: -17.754627227783203
    9. '[E' → logprob: -18.379627227783203
    10. '>E' → logprob: -18.379627227783203

Token 405: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.25533249974250793
    2. 'B' → logprob: -1.5053324699401855
    3. ' A' → logprob: -6.0053324699401855
    4. 'A' → logprob: -7.0053324699401855
    5. ' ' → logprob: -11.755332946777344
    6. '   ' → logprob: -12.130332946777344
    7. '	B' → logprob: -12.505332946777344
    8. ' a' → logprob: -13.005332946777344
    9. '(B' → logprob: -13.255332946777344
    10. '(' → logprob: -14.380332946777344

Token 406: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.460829496383667
    2. ' to' → logprob: -1.460829496383667
    3. 'to' → logprob: -2.210829496383667
    4. '.append' → logprob: -4.710829734802246
    5. ' à' → logprob: -4.835829734802246
    6. ' )' → logprob: -5.710829734802246
    7. ' ' → logprob: -6.210829734802246
    8. ' in' → logprob: -7.085829734802246
    9. ').' → logprob: -7.460829734802246
    10. '   ' → logprob: -7.585829734802246

Token 407: ' la' (ID: 557)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.17977149784564972
    2. ' E' → logprob: -1.8047715425491333
    3. '   ' → logprob: -12.054771423339844
    4. ' ' → logprob: -12.179771423339844
    5. ' ' → logprob: -12.804771423339844
    6. ' la' → logprob: -12.929771423339844
    7. ')' → logprob: -12.929771423339844
    8. '	E' → logprob: -13.179771423339844
    9. '(E' → logprob: -13.804771423339844
    10. 'l' → logprob: -13.804771423339844

Token 408: ' liste' (ID: 31719)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.02054421976208687
    2. ' E' → logprob: -3.8955442905426025
    3. '[E' → logprob: -13.520544052124023
    4. ' ' → logprob: -14.895544052124023
    5. ')' → logprob: -15.645544052124023
    6. '   ' → logprob: -16.395544052124023
    7. '
' → logprob: -16.645544052124023
    8. ' ' → logprob: -16.895544052124023
    9. ' list' → logprob: -17.145544052124023
    10. '>E' → logprob: -17.270544052124023

Token 409: ' des' (ID: 731)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.10617401450872421
    2. '[E' → logprob: -2.4811739921569824
    3. ' E' → logprob: -4.231173992156982
    4. '[' → logprob: -7.231173992156982
    5. '   ' → logprob: -7.231173992156982
    6. '(E' → logprob: -8.23117446899414
    7. ')' → logprob: -8.23117446899414
    8. ' de' → logprob: -9.23117446899414
    9. 'de' → logprob: -9.35617446899414
    10. ' ' → logprob: -9.98117446899414

Token 410: ' voisins' (ID: 166720)
  Prédit: ' E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' E' → logprob: -0.6834315657615662
    2. ' voisins' → logprob: -1.058431625366211
    3. 'E' → logprob: -1.933431625366211
    4. ' voisin' → logprob: -6.433431625366211
    5. 'neighbors' → logprob: -7.558431625366211
    6. 'vo' → logprob: -7.933431625366211
    7. ' neighbors' → logprob: -8.058431625366211
    8. ' ' → logprob: -8.558431625366211
    9. 'adj' → logprob: -8.933431625366211
    10. '[E' → logprob: -9.558431625366211

Token 411: ' de' (ID: 334)
  Prédit: '[E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[E' → logprob: -0.20441877841949463
    2. 'E' → logprob: -1.7044187784194946
    3. '[A' → logprob: -6.079418659210205
    4. '[' → logprob: -8.079419136047363
    5. ' E' → logprob: -8.079419136047363
    6. '   ' → logprob: -9.579419136047363
    7. ' [' → logprob: -11.204419136047363
    8. 'A' → logprob: -12.954419136047363
    9. ' de' → logprob: -13.954419136047363
    10. '	E' → logprob: -13.954419136047363

Token 412: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.48734012246131897
    2. ' A' → logprob: -0.9873400926589966
    3. 'E' → logprob: -4.612339973449707
    4. ' E' → logprob: -5.737339973449707
    5. ' ' → logprob: -11.112339973449707
    6. '[A' → logprob: -12.737339973449707
    7. '	A' → logprob: -13.112339973449707
    8. '   ' → logprob: -14.487339973449707
    9. '`' → logprob: -14.737339973449707
    10. 'a' → logprob: -14.862339973449707

Token 413: ' et' (ID: 859)
  Prédit: '[E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[E' → logprob: -0.07482527196407318
    2. 'E' → logprob: -3.0748252868652344
    3. '   ' → logprob: -3.8248252868652344
    4. '[' → logprob: -6.199825286865234
    5. '[A' → logprob: -7.574825286865234
    6. '.' → logprob: -7.824825286865234
    7. ' E' → logprob: -8.199825286865234
    8. ')' → logprob: -8.449825286865234
    9. '[i' → logprob: -8.574825286865234
    10. ']' → logprob: -8.824825286865234

Token 414: ' vice' (ID: 22625)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1580183506011963
    2. 'E' → logprob: -1.1580183506011963
    3. ' E' → logprob: -1.4080183506011963
    4. ' A' → logprob: -2.2830183506011963
    5. '   ' → logprob: -4.908018112182617
    6. ' ' → logprob: -5.283018112182617
    7. ')' → logprob: -5.408018112182617
    8. 'a' → logprob: -6.783018112182617
    9. '    ' → logprob: -7.033018112182617
    10. '.' → logprob: -7.158018112182617

Token 415: '-' (ID: 12)
  Prédit: 'versa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versa' → logprob: -0.18563596904277802
    2. ' versa' → logprob: -1.9356359243392944
    3. '-' → logprob: -3.685636043548584
    4. 'vers' → logprob: -12.685635566711426
    5. '-à' → logprob: -13.685635566711426
    6. ' vers' → logprob: -14.060635566711426
    7. 'versal' → logprob: -14.060635566711426
    8. ' -' → logprob: -14.185635566711426
    9. '_' → logprob: -14.185635566711426
    10. ' Versa' → logprob: -14.560635566711426

Token 416: 'versa' (ID: 107365)
  Prédit: 'versa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versa' → logprob: -0.007019649259746075
    2. ' versa' → logprob: -5.132019519805908
    3. 'A' → logprob: -6.882019519805908
    4. 'vers' → logprob: -10.132019996643066
    5. 'à' → logprob: -12.007019996643066
    6. 'a' → logprob: -12.382019996643066
    7. 'B' → logprob: -12.757019996643066
    8. '[A' → logprob: -12.882019996643066
    9. '-' → logprob: -13.132019996643066
    10. 'verse' → logprob: -13.507019996643066

Token 417: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04456224665045738
    2. ' E' → logprob: -3.919562339782715
    3. 'E' → logprob: -4.044562339782715
    4. '
' → logprob: -5.169562339782715
    5. '    
' → logprob: -7.794562339782715
    6. ' 
' → logprob: -11.294562339782715
    7. '	E' → logprob: -11.419562339782715
    8. '  ' → logprob: -11.419562339782715
    9. '  
' → logprob: -11.544562339782715
    10. ' ' → logprob: -11.669562339782715

Token 418: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047858305275440216
    2. ' E' → logprob: -3.547858238220215
    3. 'E' → logprob: -4.047858238220215
    4. '
' → logprob: -7.797858238220215
    5. '    
' → logprob: -10.047858238220215
    6. '	E' → logprob: -12.297858238220215
    7. '```' → logprob: -12.297858238220215
    8. ',E' → logprob: -12.547858238220215
    9. '[E' → logprob: -12.672858238220215
    10. '  ' → logprob: -12.672858238220215

Token 419: ' #' (ID: 1069)
  Prédit: ' E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' E' → logprob: -0.6343300938606262
    2. 'E' → logprob: -0.7593300938606262
    3. '   ' → logprob: -6.3843302726745605
    4. ' 
' → logprob: -11.259329795837402
    5. '
' → logprob: -11.384329795837402
    6. '	E' → logprob: -12.759329795837402
    7. '    
' → logprob: -12.759329795837402
    8. ' ' → logprob: -12.884329795837402
    9. '    ' → logprob: -13.134329795837402
    10. ' ' → logprob: -13.134329795837402

Token 420: ' Ceci' (ID: 144699)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.48019030690193176
    2. ' E' → logprob: -0.9801902770996094
    3. '   ' → logprob: -5.105190277099609
    4. ' ' → logprob: -11.98019027709961
    5. '
' → logprob: -12.10519027709961
    6. '	E' → logprob: -12.35519027709961
    7. ' ' → logprob: -12.48019027709961
    8. '    ' → logprob: -13.23019027709961
    9. '  ' → logprob: -13.73019027709961
    10. '    
' → logprob: -13.73019027709961

Token 421: ' car' (ID: 1669)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.09410019963979721
    2. ' E' → logprob: -2.4691002368927
    3. '   ' → logprob: -5.844099998474121
    4. '.' → logprob: -7.719099998474121
    5. ' est' → logprob: -8.219099998474121
    6. '#' → logprob: -8.344099998474121
    7. 'n' → logprob: -8.344099998474121
    8. 'a' → logprob: -9.344099998474121
    9. ' ' → logprob: -9.719099998474121
    10. 'e' → logprob: -9.844099998474121

Token 422: ' le' (ID: 505)
  Prédit: ' E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' E' → logprob: -0.44909825921058655
    2. 'E' → logprob: -1.0740982294082642
    3. ' A' → logprob: -5.324098110198975
    4. 'A' → logprob: -5.324098110198975
    5. ' les' → logprob: -5.949098110198975
    6. ' le' → logprob: -6.449098110198975
    7. ' on' → logprob: -6.574098110198975
    8. ' the' → logprob: -7.199098110198975
    9. ' ' → logprob: -7.449098110198975
    10. ' la' → logprob: -8.199098587036133

Token 423: ' grap' (ID: 60955)
  Prédit: ' grap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grap' → logprob: -0.6291106343269348
    2. 'graph' → logprob: -1.50411057472229
    3. ' graph' → logprob: -1.75411057472229
    4. 'gr' → logprob: -3.25411057472229
    5. 'E' → logprob: -4.129110813140869
    6. ' E' → logprob: -5.754110813140869
    7. '#' → logprob: -6.129110813140869
    8. ' code' → logprob: -6.254110813140869
    9. ' arbre' → logprob: -6.254110813140869
    10. '   ' → logprob: -6.379110813140869

Token 424: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0740717425942421
    2. 'phe' → logprob: -3.1990716457366943
    3. 'aphe' → logprob: -3.6990716457366943
    4. '#' → logprob: -6.199071884155273
    5. 'h' → logprob: -6.824071884155273
    6. 'e' → logprob: -7.574071884155273
    7. '   ' → logprob: -7.699071884155273
    8. 'E' → logprob: -7.699071884155273
    9. 'ph' → logprob: -8.199071884155273
    10. '[' → logprob: -9.324071884155273

Token 425: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.0072989752516150475
    2. 'est' → logprob: -5.632298946380615
    3. ' is' → logprob: -6.507298946380615
    4. 'E' → logprob: -7.007298946380615
    5. '#' → logprob: -7.757298946380615
    6. ' n' → logprob: -8.257299423217773
    7. 's' → logprob: -8.882299423217773
    8. ' E' → logprob: -9.132299423217773
    9. 'e' → logprob: -9.507299423217773
    10. ''est' → logprob: -10.007299423217773

Token 426: ' non' (ID: 2893)
  Prédit: ' non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' non' → logprob: -0.05108894780278206
    2. 'non' → logprob: -3.05108904838562
    3. ' und' → logprob: -6.926088809967041
    4. 'und' → logprob: -7.301088809967041
    5. '   ' → logprob: -7.551088809967041
    6. ' un' → logprob: -9.0510892868042
    7. ' ' → logprob: -9.5510892868042
    8. ' nond' → logprob: -10.3010892868042
    9. ' bid' → logprob: -10.5510892868042
    10. '  ' → logprob: -10.9260892868042

Token 427: '-or' (ID: 24277)
  Prédit: ' orient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' orient' → logprob: -0.353970468044281
    2. 'orient' → logprob: -1.6039705276489258
    3. 'or' → logprob: -2.478970527648926
    4. ' dirig' → logprob: -4.353970527648926
    5. ' oriented' → logprob: -9.103970527648926
    6. '   ' → logprob: -9.228970527648926
    7. ' or' → logprob: -10.353970527648926
    8. '-or' → logprob: -10.853970527648926
    9. ' orientation' → logprob: -11.228970527648926
    10. 'dir' → logprob: -11.353970527648926

Token 428: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.08487747609615326
    2. 'iented' → logprob: -2.5848774909973145
    3. 'iente' → logprob: -5.2098774909973145
    4. 'IENT' → logprob: -8.709877014160156
    5. 'i' → logprob: -9.584877014160156
    6. 'ent' → logprob: -10.834877014160156
    7. 'e' → logprob: -10.834877014160156
    8. '#' → logprob: -10.834877014160156
    9. '</' → logprob: -10.959877014160156
    10. 'int' → logprob: -10.959877014160156

Token 429: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00031770815257914364
    2. 'ed' → logprob: -8.250317573547363
    3. 'e' → logprob: -10.000317573547363
    4. 'ée' → logprob: -12.875317573547363
    5. 'és' → logprob: -13.375317573547363
    6. '```' → logprob: -13.375317573547363
    7. '#' → logprob: -13.500317573547363
    8. 'è' → logprob: -14.125317573547363
    9. 'éd' → logprob: -14.250317573547363
    10. 'É' → logprob: -14.625317573547363

Token 430: '
' (ID: 198)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.7444309592247009
    2. ' E' → logprob: -0.9944309592247009
    3. '   ' → logprob: -1.8694310188293457
    4. '
' → logprob: -7.869431018829346
    5. '    
' → logprob: -8.244430541992188
    6. '	E' → logprob: -9.744430541992188
    7. ')' → logprob: -10.369430541992188
    8. ')
' → logprob: -10.994430541992188
    9. ' 
' → logprob: -11.244430541992188
    10. ',' → logprob: -11.369430541992188

Token 431: '   ' (ID: 271)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.3411327302455902
    2. ' E' → logprob: -1.7161327600479126
    3. '   ' → logprob: -2.216132640838623
    4. '
' → logprob: -8.466133117675781
    5. '	E' → logprob: -11.841133117675781
    6. '    
' → logprob: -11.966133117675781
    7. ',E' → logprob: -12.091133117675781
    8. ')
' → logprob: -12.716133117675781
    9. ' 
' → logprob: -13.091133117675781
    10. '```' → logprob: -13.216133117675781

Token 432: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' (adapté à ' E') → logprob: -0.030540719628334045
    2. ' E' → logprob: -3.530540704727173
    3. '   ' → logprob: -7.155540943145752
    4. '
' → logprob: -11.780540466308594
    5. ' ' → logprob: -14.530540466308594
    6. '	E' → logprob: -14.655540466308594
    7. 'A' → logprob: -15.780540466308594
    8. '  ' → logprob: -15.905540466308594
    9. ' 
' → logprob: -16.280540466308594
    10. '```' → logprob: -16.280540466308594

Token 433: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -9.13388703338569e-06
    2. '[E' → logprob: -12.375009536743164
    3. '[' → logprob: -12.500009536743164
    4. 'A' → logprob: -14.750009536743164
    5. '```' → logprob: -15.625009536743164
    6. '   ' → logprob: -15.750009536743164
    7. ' [' → logprob: -15.875009536743164
    8. '[i' → logprob: -16.625009536743164
    9. '[a' → logprob: -17.125009536743164
    10. ')[' → logprob: -17.125009536743164

Token 434: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00010604646377032623
    2. ']' → logprob: -9.750105857849121
    3. '.' → logprob: -10.500105857849121
    4. '.append' → logprob: -11.375105857849121
    5. ').' → logprob: -11.875105857849121
    6. ' ].' → logprob: -13.500105857849121
    7. ']).' → logprob: -15.625105857849121
    8. '[' → logprob: -16.500106811523438
    9. '   ' → logprob: -18.125106811523438
    10. ''].' → logprob: -18.250106811523438

Token 435: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: 0.0
    2. ' append' → logprob: -17.75
    3. '.append' → logprob: -18.25
    4. 'appen' → logprob: -19.875
    5. 'app' → logprob: -21.375
    6. '_append' → logprob: -22.375
    7. 'add' → logprob: -22.5
    8. 'Append' → logprob: -23.25
    9. 'push' → logprob: -23.375
    10. '	append' → logprob: -23.75

Token 436: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -5.438573680294212e-06
    2. 'B' → logprob: -12.250005722045898
    3. '(' → logprob: -14.375005722045898
    4. '(
' → logprob: -19.6250057220459
    5. '	B' → logprob: -19.8750057220459
    6. ' (' → logprob: -20.6250057220459
    7. ' B' → logprob: -21.1250057220459
    8. '(b' → logprob: -22.3750057220459
    9. '(A' → logprob: -22.7500057220459
    10. '((' → logprob: -23.3750057220459

Token 437: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3795937522663735e-05
    2. ')
' → logprob: -11.00002384185791
    3. ' )' → logprob: -12.00002384185791
    4. '   ' → logprob: -14.25002384185791
    5. '),' → logprob: -16.500022888183594
    6. ')#' → logprob: -16.750022888183594
    7. ')

' → logprob: -17.500022888183594
    8. ');' → logprob: -17.500022888183594
    9. ')
' → logprob: -18.000022888183594
    10. ').' → logprob: -18.000022888183594

Token 438: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029749644454568624
    2. ' E' → logprob: -6.377974987030029
    3. 'E' → logprob: -7.127974987030029
    4. '    
' → logprob: -8.252974510192871
    5. '  ' → logprob: -9.752974510192871
    6. '<|end|>' → logprob: -9.752974510192871
    7. ' ' → logprob: -10.127974510192871
    8. '    ' → logprob: -11.502974510192871
    9. '  
' → logprob: -11.502974510192871
    10. '   
' → logprob: -11.627974510192871

Token 439: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' (adapté à ' E') → logprob: -0.16493971645832062
    2. '   ' → logprob: -2.1649396419525146
    3. ' E' → logprob: -3.2899396419525146
    4. ' ' → logprob: -10.914939880371094
    5. '  ' → logprob: -11.539939880371094
    6. '	E' → logprob: -12.664939880371094
    7. '    
' → logprob: -13.039939880371094
    8. '    ' → logprob: -13.414939880371094
    9. ' ' → logprob: -13.414939880371094
    10. '
' → logprob: -13.789939880371094

Token 440: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -0.0001613459608051926
    2. '[' → logprob: -9.000161170959473
    3. '[A' → logprob: -10.375161170959473
    4. '[E' → logprob: -12.125161170959473
    5. '```' → logprob: -14.375161170959473
    6. 'B' → logprob: -15.625161170959473
    7. ' [' → logprob: -15.750161170959473
    8. '[b' → logprob: -16.25016212463379
    9. '[
' → logprob: -17.25016212463379
    10. '[S' → logprob: -17.37516212463379

Token 441: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.02545507811009884
    2. '[A' → logprob: -3.9004549980163574
    3. ').' → logprob: -5.400454998016357
    4. '.' → logprob: -8.650455474853516
    5. ']' → logprob: -8.775455474853516
    6. '   ' → logprob: -10.775455474853516
    7. ')' → logprob: -11.900455474853516
    8. '[' → logprob: -12.025455474853516
    9. '.append' → logprob: -12.525455474853516
    10. '][' → logprob: -12.525455474853516

Token 442: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. 'appen' → logprob: -14.875000953674316
    3. ' append' → logprob: -16.125
    4. '.append' → logprob: -17.25
    5. '	append' → logprob: -18.5
    6. 'app' → logprob: -18.875
    7. 'A' → logprob: -19.625
    8. 'Append' → logprob: -20.125
    9. '```' → logprob: -21.625
    10. 'prepend' → logprob: -21.875

Token 443: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.375001907348633
    3. '(
' → logprob: -15.375001907348633
    4. 'A' → logprob: -16.625001907348633
    5. '(B' → logprob: -20.000001907348633
    6. '(E' → logprob: -20.375001907348633
    7. '   ' → logprob: -20.750001907348633
    8. '(a' → logprob: -21.125001907348633
    9. ' (' → logprob: -21.500001907348633
    10. '(I' → logprob: -21.875001907348633

Token 444: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ')
' → logprob: -13.000005722045898
    3. ' )' → logprob: -13.250005722045898
    4. '())' → logprob: -14.000005722045898
    5. '()' → logprob: -15.125005722045898
    6. ')

' → logprob: -16.5000057220459
    7. '   ' → logprob: -16.5000057220459
    8. '))' → logprob: -17.6250057220459
    9. ')#' → logprob: -17.6250057220459
    10. '[' → logprob: -17.8750057220459

Token 445: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4410117268562317
    2. 'for' → logprob: -1.066011667251587
    3. 'if' → logprob: -5.066011905670166
    4. ' for' → logprob: -5.566011905670166
    5. '
' → logprob: -7.316011905670166
    6. '#' → logprob: -7.441011905670166
    7. '    
' → logprob: -7.816011905670166
    8. '  ' → logprob: -8.941011428833008
    9. ' if' → logprob: -9.316011428833008
    10. '```' → logprob: -9.691011428833008

Token 446: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01596163772046566
    2. 'for' → logprob: -4.890961647033691
    3. '#' → logprob: -5.265961647033691
    4. 'if' → logprob: -5.765961647033691
    5. ' for' → logprob: -12.015961647033691
    6. '
' → logprob: -12.015961647033691
    7. '    
' → logprob: -12.390961647033691
    8. '```' → logprob: -12.515961647033691
    9. ' if' → logprob: -13.015961647033691
    10. '   ' → logprob: -14.890961647033691

Token 447: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8313573002815247
    2. 'if' → logprob: -0.8313573002815247
    3. 'for' → logprob: -2.08135724067688
    4. '#' (adapté à ' #') → logprob: -5.456357479095459
    5. '```' → logprob: -10.5813570022583
    6. ' if' → logprob: -11.3313570022583
    7. ' for' → logprob: -11.5813570022583
    8. '    
' → logprob: -12.5813570022583
    9. 'edges' → logprob: -14.0813570022583
    10. '   ' → logprob: -14.3313570022583

Token 448: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.027247004210948944
    2. '#' → logprob: -4.152246952056885
    3. 'for' → logprob: -4.527246952056885
    4. '   ' → logprob: -8.402247428894043
    5. 'edges' → logprob: -9.277247428894043
    6. ' if' → logprob: -11.277247428894043
    7. '```' → logprob: -13.152247428894043
    8. 'current' → logprob: -13.777247428894043
    9. 'If' → logprob: -14.152247428894043
    10. ' for' → logprob: -14.527247428894043

Token 449: ' le' (ID: 505)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2519776225090027
    2. ' len' → logprob: -1.5019776821136475
    3. ' ' → logprob: -10.251977920532227
    4. '   ' → logprob: -11.876977920532227
    5. '(len' → logprob: -12.751977920532227
    6. '	len' → logprob: -14.001977920532227
    7. '  ' → logprob: -14.626977920532227
    8. 'le' → logprob: -14.626977920532227
    9. ' le' → logprob: -15.126977920532227
    10. ' ' → logprob: -15.501977920532227

Token 450: ' nombre' (ID: 9733)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.005390399135649204
    2. ' len' → logprob: -5.255390167236328
    3. 'edges' → logprob: -9.505390167236328
    4. 'length' → logprob: -10.255390167236328
    5. '	len' → logprob: -11.880390167236328
    6. 'le' → logprob: -12.130390167236328
    7. 'leng' → logprob: -12.255390167236328
    8. ' ' → logprob: -12.255390167236328
    9. ' edges' → logprob: -12.505390167236328
    10. 'l' → logprob: -12.630390167236328

Token 451: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6453413963317871
    2. 'len' → logprob: -1.520341396331787
    3. ' de' → logprob: -1.645341396331787
    4. 'd' → logprob: -4.145341396331787
    5. '   ' → logprob: -4.145341396331787
    6. ' len' → logprob: -5.145341396331787
    7. ' ' → logprob: -5.145341396331787
    8. '#' → logprob: -5.270341396331787
    9. '(len' → logprob: -5.520341396331787
    10. 'E' → logprob: -6.270341396331787

Token 452: ' voisins' (ID: 166720)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.003816703101620078
    2. ' len' → logprob: -5.628816604614258
    3. 'edges' → logprob: -9.128816604614258
    4. '(len' → logprob: -10.003816604614258
    5. 'E' → logprob: -10.503816604614258
    6. 'max' → logprob: -12.253816604614258
    7. 'A' → logprob: -12.503816604614258
    8. ' edges' → logprob: -12.503816604614258
    9. '```' → logprob: -12.503816604614258
    10. 'le' → logprob: -12.628816604614258

Token 453: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.33484625816345215
    2. 'd' → logprob: -2.459846258163452
    3. ' de' → logprob: -2.584846258163452
    4. 'E' → logprob: -2.584846258163452
    5. ' d' → logprob: -3.709846258163452
    6. '(E' → logprob: -4.834846496582031
    7. 'len' → logprob: -5.209846496582031
    8. '   ' → logprob: -6.209846496582031
    9. '(A' → logprob: -6.209846496582031
    10. 'of' → logprob: -6.709846496582031

Token 454: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0015791363548487425
    2. 'E' → logprob: -6.501579284667969
    3. ' A' → logprob: -10.126579284667969
    4. 'B' → logprob: -10.251579284667969
    5. '   ' → logprob: -14.376579284667969
    6. '	A' → logprob: -15.126579284667969
    7. ' ' → logprob: -15.626579284667969
    8. '[A' → logprob: -16.00157928466797
    9. ' E' → logprob: -16.62657928466797
    10. '(A' → logprob: -17.00157928466797

Token 455: ' dépasse' (ID: 165701)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10411141812801361
    2. ' >' → logprob: -2.729111433029175
    3. ' ' → logprob: -4.854111194610596
    4. 'E' → logprob: -4.979111194610596
    5. '   ' → logprob: -5.479111194610596
    6. ')' → logprob: -5.604111194610596
    7. ')>' → logprob: -5.854111194610596
    8. '[' → logprob: -6.479111194610596
    9. 'A' → logprob: -6.729111194610596
    10. '>E' → logprob: -6.979111194610596

Token 456: ' la' (ID: 557)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0003385614836588502
    2. ' edges' → logprob: -8.000338554382324
    3. 'len' → logprob: -13.500338554382324
    4. 'les' → logprob: -14.125338554382324
    5. '(edges' → logprob: -14.875338554382324
    6. 'edge' → logprob: -15.750338554382324
    7. '.edges' → logprob: -16.12533950805664
    8. 'le' → logprob: -16.12533950805664
    9. 'Edges' → logprob: -16.50033950805664
    10. '_edges' → logprob: -16.62533950805664

Token 457: ' valeur' (ID: 41664)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.011055483482778072
    2. ' edges' → logprob: -4.5110554695129395
    3. 'current' → logprob: -13.136055946350098
    4. 'max' → logprob: -13.636055946350098
    5. '(edges' → logprob: -14.011055946350098
    6. '.edges' → logprob: -14.386055946350098
    7. 'edge' → logprob: -14.636055946350098
    8. 'len' → logprob: -14.761055946350098
    9. '_edges' → logprob: -14.886055946350098
    10. '
' → logprob: -15.011055946350098

Token 458: ' maximale' (ID: 76380)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.03942190855741501
    2. ' edges' → logprob: -3.414421796798706
    3. '(edges' → logprob: -5.539422035217285
    4. '[' → logprob: -7.414422035217285
    5. 'len' → logprob: -7.914422035217285
    6. '   ' → logprob: -8.164422035217285
    7. 'of' → logprob: -8.914422035217285
    8. ' of' → logprob: -9.039422035217285
    9. 'd' → logprob: -9.914422035217285
    10. '[len' → logprob: -10.164422035217285

Token 459: ' atte' (ID: 43312)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.7240414023399353
    2. 'E' → logprob: -1.84904146194458
    3. ' edges' → logprob: -2.22404146194458
    4. 'if' → logprob: -2.97404146194458
    5. '   ' → logprob: -2.97404146194458
    6. ':' → logprob: -3.09904146194458
    7. '>' → logprob: -3.84904146194458
    8. 's' → logprob: -3.84904146194458
    9. '(edges' → logprob: -4.09904146194458
    10. ' if' → logprob: -4.47404146194458

Token 460: 'inte' (ID: 18750)
  Prédit: 'inte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.001326433615759015
    2. 'nte' → logprob: -7.376326560974121
    3. 'ints' → logprob: -7.751326560974121
    4. 'int' → logprob: -8.501326560974121
    5. 'ite' → logprob: -10.376326560974121
    6. 'te' → logprob: -12.251326560974121
    7. 'unte' → logprob: -12.376326560974121
    8. 'intes' → logprob: -12.376326560974121
    9. 'in' → logprob: -12.626326560974121
    10. '#' → logprob: -12.751326560974121

Token 461: ' jusque' (ID: 188953)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.364612877368927
    2. 'edges' → logprob: -1.7396128177642822
    3. '(edges' → logprob: -2.7396128177642822
    4. 's' → logprob: -3.7396128177642822
    5. 'E' → logprob: -4.489613056182861
    6. ' edges' → logprob: -4.989613056182861
    7. '   ' → logprob: -4.989613056182861
    8. ' ' → logprob: -5.864613056182861
    9. ',' → logprob: -5.864613056182861
    10. ':
' → logprob: -6.739613056182861

Token 462: '-là' (ID: 71108)
  Prédit: '-là'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-là' → logprob: -0.034175898879766464
    2. 'l' → logprob: -3.7841758728027344
    3. 'à' → logprob: -5.534175872802734
    4. ''à' → logprob: -5.784175872802734
    5. ''ici' → logprob: -6.284175872802734
    6. 'ici' → logprob: -6.909175872802734
    7. '-à' → logprob: -8.159175872802734
    8. '   ' → logprob: -8.284175872802734
    9. 'al' → logprob: -9.409175872802734
    10. '’ici' → logprob: -9.534175872802734

Token 463: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7332675457000732
    2. '   ' → logprob: -1.3582675457000732
    3. '>' → logprob: -2.2332675457000732
    4. 'if' → logprob: -2.7332675457000732
    5. ' and' → logprob: -3.3582675457000732
    6. 'and' → logprob: -3.8582675457000732
    7. ' if' → logprob: -4.108267784118652
    8. ' >' → logprob: -4.608267784118652
    9. ',' → logprob: -5.858267784118652
    10. ' :' → logprob: -6.108267784118652

Token 464: ' mettre' (ID: 25339)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9807238578796387
    2. 'if' → logprob: -1.1057238578796387
    3. '   ' → logprob: -1.2307238578796387
    4. '       ' → logprob: -6.480723857879639
    5. '	if' → logprob: -9.105724334716797
    6. '    ' → logprob: -9.355724334716797
    7. ':' → logprob: -10.230724334716797
    8. '  ' → logprob: -10.355724334716797
    9. '    
' → logprob: -10.605724334716797
    10. '   ' → logprob: -11.230724334716797

Token 465: ' à' (ID: 1221)
  Prédit: 'First'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.5141107439994812
    2. 'A' → logprob: -1.639110803604126
    3. 'à' → logprob: -1.889110803604126
    4. ' à' → logprob: -3.139110803604126
    5. 'À' → logprob: -5.139110565185547
    6. ' First' → logprob: -6.139110565185547
    7. '```' → logprob: -6.514110565185547
    8. 'la' → logprob: -7.014110565185547
    9. '_A' → logprob: -8.014110565185547
    10. '   ' → logprob: -8.014110565185547

Token 466: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0010176869109272957
    2. 'A' → logprob: -7.8760175704956055
    3. ' jour' → logprob: -8.501017570495605
    4. 'jours' → logprob: -8.626017570495605
    5. '```' → logprob: -8.876017570495605
    6. 'jou' → logprob: -10.376017570495605
    7. 'First' → logprob: -10.376017570495605
    8. 'day' → logprob: -10.876017570495605
    9. 'i' → logprob: -12.126017570495605
    10. 'E' → logprob: -12.501017570495605

Token 467: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7624186277389526
    2. '   ' → logprob: -1.1374186277389526
    3. ' if' → logprob: -2.262418746948242
    4. 'First' → logprob: -3.262418746948242
    5. 'edges' → logprob: -3.387418746948242
    6. ' First' → logprob: -3.762418746948242
    7. ' edges' → logprob: -4.637418746948242
    8. 'E' → logprob: -7.387418746948242
    9. '    
' → logprob: -7.762418746948242
    10. '       ' → logprob: -7.887418746948242

Token 468: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.34926286339759827
    2. ' if' → logprob: -1.4742628335952759
    3. '   ' → logprob: -2.7242629528045654
    4. '    
' → logprob: -9.349263191223145
    5. '       ' → logprob: -10.099263191223145
    6. '    ' → logprob: -10.849263191223145
    7. 'A' → logprob: -10.974263191223145
    8. 'E' → logprob: -11.099263191223145
    9. '	if' → logprob: -11.349263191223145
    10. ' ' → logprob: -11.974263191223145

Token 469: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1706838458776474
    2. '   ' → logprob: -2.5456838607788086
    3. ' if' → logprob: -2.5456838607788086
    4. '    
' → logprob: -10.420683860778809
    5. '	if' → logprob: -10.920683860778809
    6. ' ' → logprob: -12.295683860778809
    7. '    ' → logprob: -12.545683860778809
    8. '  ' → logprob: -12.920683860778809
    9. '   ' → logprob: -12.920683860778809
    10. '       ' → logprob: -13.045683860778809

Token 470: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.12696526944637299
    2. ' len' → logprob: -2.126965284347534
    3. '   ' → logprob: -10.876965522766113
    4. '(len' → logprob: -11.126965522766113
    5. '	len' → logprob: -13.001965522766113
    6. ' ' → logprob: -13.751965522766113
    7. '  ' → logprob: -15.876965522766113
    8. 'edges' → logprob: -17.001964569091797
    9. '    ' → logprob: -17.126964569091797
    10. '[len' → logprob: -17.626964569091797

Token 471: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.00012523093027994037
    2. '(' → logprob: -9.00012493133545
    3. '(
' → logprob: -13.75012493133545
    4. ' (' → logprob: -15.37512493133545
    5. '(A' → logprob: -15.37512493133545
    6. 'E' → logprob: -15.87512493133545
    7. '(

' → logprob: -18.500125885009766
    8. '[E' → logprob: -18.625125885009766
    9. ')' → logprob: -19.000125885009766
    10. '(I' → logprob: -19.250125885009766

Token 472: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.00011605957115534693
    2. 'A' → logprob: -9.125116348266602
    3. ')' → logprob: -12.875116348266602
    4. ')[' → logprob: -13.625116348266602
    5. '(A' → logprob: -13.750116348266602
    6. '[' → logprob: -14.625116348266602
    7. '[E' → logprob: -14.875116348266602
    8. '   ' → logprob: -15.000116348266602
    9. '```' → logprob: -15.000116348266602
    10. '[
' → logprob: -15.250116348266602

Token 473: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24889373779296875
    2. '])' → logprob: -1.7488937377929688
    3. '[A' → logprob: -3.1238937377929688
    4. ')>' → logprob: -6.373893737792969
    5. '[' → logprob: -8.498893737792969
    6. 'A' → logprob: -9.248893737792969
    7. '   ' → logprob: -9.498893737792969
    8. '>)' → logprob: -9.998893737792969
    9. ' )' → logprob: -10.123893737792969
    10. ')])' → logprob: -10.248893737792969

Token 474: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1269349306821823
    2. ' >' → logprob: -2.1269350051879883
    3. ' ' → logprob: -12.376935005187988
    4. ')>' → logprob: -14.751935005187988
    5. ')' → logprob: -15.251935005187988
    6. '()>' → logprob: -15.501935005187988
    7. '">' → logprob: -15.626935005187988
    8. '＞' → logprob: -15.626935005187988
    9. ' >
' → logprob: -15.626935005187988
    10. ' ' → logprob: -15.626935005187988

Token 475: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -9.639096970204264e-05
    2. ' edges' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.750096321105957
    4. 'edge' → logprob: -17.125097274780273
    5. '.edges' → logprob: -18.250097274780273
    6. '(edges' → logprob: -18.250097274780273
    7. 'Edges' → logprob: -18.625097274780273
    8. ' ' → logprob: -18.875097274780273
    9. '  ' → logprob: -19.625097274780273
    10. '_edges' → logprob: -19.625097274780273

Token 476: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01116195134818554
    2. ':
' → logprob: -4.511161804199219
    3. '   ' → logprob: -9.761161804199219
    4. ' :' → logprob: -10.636161804199219
    5. '=' → logprob: -11.636161804199219
    6. '):' → logprob: -11.636161804199219
    7. ':
' → logprob: -12.136161804199219
    8. ':

' → logprob: -13.136161804199219
    9. ' :
' → logprob: -13.136161804199219
    10. '):
' → logprob: -13.636161804199219

Token 477: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6893748044967651
    2. '       ' → logprob: -0.8143748044967651
    3. 'edges' → logprob: -3.4393749237060547
    4. ' edges' → logprob: -4.814374923706055
    5. ':' → logprob: -5.564374923706055
    6. 'First' → logprob: -5.814374923706055
    7. '(edges' → logprob: -5.814374923706055
    8. ':
' → logprob: -6.064374923706055
    9. '<|end|>' → logprob: -7.689374923706055
    10. '):
' → logprob: -7.689374923706055

Token 478: ' First' (ID: 8338)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.30658724904060364
    2. ' edges' → logprob: -2.1815872192382812
    3. 'First' (adapté à ' First') → logprob: -2.3065872192382812
    4. '   ' → logprob: -3.4315872192382812
    5. ' First' → logprob: -4.056587219238281
    6. '       ' → logprob: -6.431587219238281
    7. 'Edges' → logprob: -9.431587219238281
    8. '    
' → logprob: -10.181587219238281
    9. '```' → logprob: -10.431587219238281
    10. '    ' → logprob: -10.431587219238281

Token 479: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008622255176305771
    2. '=' → logprob: -4.758622169494629
    3. '=A' → logprob: -12.258622169494629
    4. ',' → logprob: -13.008622169494629
    5. ' ' → logprob: -14.508622169494629
    6. ' ,' → logprob: -16.008623123168945
    7. ' =
' → logprob: -16.133623123168945
    8. '＝' → logprob: -17.258623123168945
    9. ' =
' → logprob: -18.383623123168945
    10. ' ' → logprob: -19.008623123168945

Token 480: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04858805239200592
    2. ' A' → logprob: -3.0485880374908447
    3. '	A' → logprob: -14.298587799072266
    4. '   ' → logprob: -17.298587799072266
    5. ' ' → logprob: -18.548587799072266
    6. 'a' → logprob: -18.923587799072266
    7. '>A' → logprob: -19.548587799072266
    8. '[A' → logprob: -19.673587799072266
    9. '=A' → logprob: -19.798587799072266
    10. '_A' → logprob: -20.048587799072266

Token 481: '     ' (ID: 530)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025422658771276474
    2. 'edges' → logprob: -4.0254225730896
    3. ' edges' → logprob: -5.6504225730896
    4. '   ' → logprob: -5.9004225730896
    5. '        
' → logprob: -7.5254225730896
    6. '(edges' → logprob: -8.900423049926758
    7. '    
' → logprob: -9.025423049926758
    8. '	' → logprob: -9.900423049926758
    9. '
' → logprob: -10.400423049926758
    10. '<|end|>' → logprob: -10.900423049926758

Token 482: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031090281903743744
    2. 'edges' → logprob: -3.531090259552002
    3. ' edges' → logprob: -7.281090259552002
    4. '   ' → logprob: -7.531090259552002
    5. '        
' → logprob: -10.15609073638916
    6. '(edges' → logprob: -10.28109073638916
    7. '    
' → logprob: -11.40609073638916
    8. '.edges' → logprob: -11.53109073638916
    9. '<|end|>' → logprob: -11.78109073638916
    10. '           ' → logprob: -13.03109073638916

Token 483: ' Le' (ID: 2018)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.07184827327728271
    2. '       ' → logprob: -2.9468483924865723
    3. 'First' → logprob: -4.821848392486572
    4. ' edges' → logprob: -5.071848392486572
    5. '   ' → logprob: -6.071848392486572
    6. ' First' → logprob: -9.571847915649414
    7. '(edges' → logprob: -11.071847915649414
    8. '```' → logprob: -11.196847915649414
    9. 'Edges' → logprob: -11.321847915649414
    10. '           ' → logprob: -11.571847915649414

Token 484: ' nouveau' (ID: 23184)
  Prédit: 'First'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.010679677128791809
    2. 'A' → logprob: -4.760679721832275
    3. 'edges' → logprob: -6.760679721832275
    4. 'len' → logprob: -7.635679721832275
    5. ' First' → logprob: -8.635679244995117
    6. '       ' → logprob: -9.135679244995117
    7. '   ' → logprob: -9.635679244995117
    8. 'E' → logprob: -11.135679244995117
    9. '#' → logprob: -11.510679244995117
    10. 'Edges' → logprob: -12.135679244995117

Token 485: ' n' (ID: 297)
  Prédit: 'First'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.3438893258571625
    2. 'n' → logprob: -2.0938892364501953
    3. 'A' → logprob: -2.4688892364501953
    4. 'prem' → logprob: -2.8438892364501953
    5. 'node' → logprob: -4.843889236450195
    6. ' noe' → logprob: -5.468889236450195
    7. ' n' → logprob: -5.843889236450195
    8. 'no' → logprob: -6.093889236450195
    9. ' First' → logprob: -6.218889236450195
    10. 'Premier' → logprob: -6.968889236450195

Token 486: 'œ' (ID: 15335)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8500539064407349
    2. '       ' → logprob: -1.4750539064407349
    3. 'len' → logprob: -2.3500537872314453
    4. '   ' → logprob: -2.6000537872314453
    5. 'E' → logprob: -3.1000537872314453
    6. 'e' → logprob: -3.9750537872314453
    7. 'um' → logprob: -3.9750537872314453
    8. 'First' → logprob: -4.225053787231445
    9. '[A' → logprob: -4.350053787231445
    10. ' len' → logprob: -4.850053787231445

Token 487: 'ud' (ID: 527)
  Prédit: 'œ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'œ' → logprob: -0.49735748767852783
    2. 'ud' → logprob: -0.9973574876785278
    3. 'e' → logprob: -5.247357368469238
    4. '_' → logprob: -5.497357368469238
    5. 'oe' → logprob: -5.872357368469238
    6. '```' → logprob: -6.122357368469238
    7. '   ' → logprob: -6.622357368469238
    8. '#' → logprob: -7.247357368469238
    9. 'd' → logprob: -7.247357368469238
    10. 'uds' → logprob: -7.247357368469238

Token 488: ' initial' (ID: 4871)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: ' sera' (ID: 15511)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0725223496556282
    2. '<|end|>' → logprob: -3.4475224018096924
    3. '=' → logprob: -4.072522163391113
    4. ' =' → logprob: -4.572522163391113
    5. '   ' → logprob: -5.322522163391113
    6. '        
' → logprob: -6.822522163391113
    7. ';' → logprob: -6.947522163391113
    8. 'First' → logprob: -7.322522163391113
    9. '<|end|>' → logprob: -7.822522163391113
    10. ')' → logprob: -8.197522163391113

Token 490: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.004096208605915308
    2. ' A' → logprob: -5.504096031188965
    3. 'First' → logprob: -11.504096031188965
    4. 'E' → logprob: -13.129096031188965
    5. '	A' → logprob: -13.129096031188965
    6. '   ' → logprob: -13.879096031188965
    7. ' First' → logprob: -14.254096031188965
    8. ' ' → logprob: -14.629096031188965
    9. 'len' → logprob: -14.754096031188965
    10. ' first' → logprob: -15.004096031188965

Token 491: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002315953141078353
    2. 'edges' → logprob: -6.252315998077393
    3. ' edges' → logprob: -8.377315521240234
    4. '   ' → logprob: -9.502315521240234
    5. '        
' → logprob: -10.002315521240234
    6. '(edges' → logprob: -11.627315521240234
    7. '<|end|>' → logprob: -11.877315521240234
    8. '           ' → logprob: -12.252315521240234
    9. ',' → logprob: -12.627315521240234
    10. '.edges' → logprob: -13.127315521240234

Token 492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011976680718362331
    2. 'edges' → logprob: -4.511976718902588
    3. ' edges' → logprob: -7.136976718902588
    4. '   ' → logprob: -9.13697624206543
    5. '(edges' → logprob: -11.88697624206543
    6. '	   ' → logprob: -12.63697624206543
    7. '	' → logprob: -12.76197624206543
    8. '        
' → logprob: -12.88697624206543
    9. '           ' → logprob: -13.01197624206543
    10. '.edges' → logprob: -13.13697624206543

Token 493: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.5356023907661438
    2. ' edges' → logprob: -0.9106023907661438
    3. 'len' → logprob: -5.035602569580078
    4. '   ' → logprob: -5.410602569580078
    5. ' len' → logprob: -6.785602569580078
    6. '       ' → logprob: -8.410602569580078
    7. '(edges' → logprob: -11.035602569580078
    8. '```' → logprob: -11.160602569580078
    9. '    
' → logprob: -11.410602569580078
    10. '.edges' → logprob: -11.910602569580078

Token 494: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16025082767009735
    2. '=' → logprob: -1.9102507829666138
    3. '=len' → logprob: -10.660250663757324
    4. '   ' → logprob: -13.910250663757324
    5. '    ' → logprob: -14.035250663757324
    6. ' ' → logprob: -14.660250663757324
    7. ',' → logprob: -14.785250663757324
    8. 'len' → logprob: -15.910250663757324
    9. ' +=' → logprob: -16.28525161743164
    10. '+=' → logprob: -16.41025161743164

Token 495: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.023245826363563538
    2. ' len' → logprob: -3.7732458114624023
    3. '	len' → logprob: -16.27324676513672
    4. '(len' → logprob: -16.52324676513672
    5. '   ' → logprob: -16.77324676513672
    6. '[len' → logprob: -17.64824676513672
    7. ' ' → logprob: -19.02324676513672
    8. '    ' → logprob: -19.77324676513672
    9. 'le' → logprob: -19.89824676513672
    10. ' ' → logprob: -20.39824676513672

Token 496: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -11.25001335144043
    3. 'E' → logprob: -16.00001335144043
    4. '(A' → logprob: -17.37501335144043
    5. '(
' → logprob: -17.62501335144043
    6. ' (' → logprob: -18.62501335144043
    7. '[E' → logprob: -19.00001335144043
    8. '<E' → logprob: -20.00001335144043
    9. '(O' → logprob: -20.87501335144043
    10. '((' → logprob: -21.50001335144043

Token 497: '[A' (ID: 58391)
  Prédit: '(E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.10466672480106354
    2. '[E' → logprob: -2.3546667098999023
    3. '(A' → logprob: -5.729666709899902
    4. '[A' → logprob: -7.229666709899902
    5. 'E' → logprob: -7.729666709899902
    6. '(' → logprob: -10.479666709899902
    7. '[' → logprob: -11.854666709899902
    8. '(
' → logprob: -14.729666709899902
    9. ')' → logprob: -14.729666709899902
    10. '<E' → logprob: -14.854666709899902

Token 498: '])' (ID: 4636)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.08014380186796188
    2. '(A' → logprob: -2.955143690109253
    3. ')' → logprob: -3.955143690109253
    4. '])' → logprob: -5.205143928527832
    5. 'A' → logprob: -9.830143928527832
    6. ']' → logprob: -9.955143928527832
    7. '[' → logprob: -10.330143928527832
    8. '()' → logprob: -10.455143928527832
    9. '[E' → logprob: -10.455143928527832
    10. ')]' → logprob: -10.580143928527832

Token 499: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007924106903374195
    2. '    
' → logprob: -4.8829240798950195
    3. '        
' → logprob: -8.38292407989502
    4. '  
' → logprob: -10.38292407989502
    5. '   
' → logprob: -10.75792407989502
    6. '<|end|>' → logprob: -11.25792407989502
    7. ' 
' → logprob: -12.00792407989502
    8. '
' → logprob: -12.38292407989502
    9. '       ' → logprob: -12.63292407989502
    10. '       
' → logprob: -13.38292407989502

Token 500: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00576608395203948
    2. '    
' → logprob: -5.255765914916992
    3. '        
' → logprob: -7.880765914916992
    4. '
' → logprob: -9.505765914916992
    5. '<|end|>' → logprob: -10.505765914916992
    6. '  
' → logprob: -11.505765914916992
    7. 'elif' → logprob: -11.505765914916992
    8. '   
' → logprob: -11.630765914916992
    9. '       ' → logprob: -12.380765914916992
    10. '       
' → logprob: -12.880765914916992

Token 501: ' Met' (ID: 7227)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.38692429661750793
    2. 'edges' → logprob: -1.2619242668151855
    3. ' edges' → logprob: -3.8869242668151855
    4. ' len' → logprob: -4.1369242668151855
    5. 'E' → logprob: -6.8869242668151855
    6. '   ' → logprob: -9.261924743652344
    7. '       ' → logprob: -10.386924743652344
    8. '[len' → logprob: -11.011924743652344
    9. '(len' → logprob: -11.011924743652344
    10. '           ' → logprob: -11.261924743652344

Token 502: 'tre' (ID: 4086)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.3310573101043701
    2. '(edges' → logprob: -1.3310573101043701
    3. 'ch' → logprob: -2.20605731010437
    4. 'ches' → logprob: -2.58105731010437
    5. '=len' → logprob: -2.83105731010437
    6. '   ' → logprob: -3.20605731010437
    7. ' edges' → logprob: -3.33105731010437
    8. 'len' → logprob: -3.45605731010437
    9. '```' → logprob: -3.95605731010437
    10. 'chs' → logprob: -4.206057548522949

Token 503: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.2798124551773071
    2. '(len' → logprob: -1.5298124551773071
    3. 'len' → logprob: -1.7798124551773071
    4. '(edges' → logprob: -1.9048124551773071
    5. '(E' → logprob: -2.5298123359680176
    6. '(' → logprob: -2.7798123359680176
    7. ' à' → logprob: -3.6548123359680176
    8. 'la' → logprob: -5.029812335968018
    9. 'edges' → logprob: -5.779812335968018
    10. 'le' → logprob: -6.029812335968018

Token 504: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.47772765159606934
    2. 'len' → logprob: -0.9777276515960693
    3. ' jour' → logprob: -5.727727890014648
    4. 'jours' → logprob: -8.477727890014648
    5. 'Jour' → logprob: -9.352727890014648
    6. 'day' → logprob: -9.727727890014648
    7. '```' → logprob: -11.602727890014648
    8. ' jours' → logprob: -12.602727890014648
    9. '(len' → logprob: -12.602727890014648
    10. 'le' → logprob: -12.852727890014648

Token 505: ' le' (ID: 505)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.8337810039520264
    2. '(len' → logprob: -1.0837810039520264
    3. '(edges' → logprob: -2.4587810039520264
    4. 'edges' → logprob: -2.7087810039520264
    5. '   ' → logprob: -3.8337810039520264
    6. '(' → logprob: -3.9587810039520264
    7. 'E' → logprob: -4.7087812423706055
    8. ')' → logprob: -4.8337812423706055
    9. '()' → logprob: -5.8337812423706055
    10. ' len' → logprob: -6.2087812423706055

Token 506: ' maximum' (ID: 10562)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.7008001804351807
    2. 'edges' → logprob: -0.7008001804351807
    3. 'max' → logprob: -5.950799942016602
    4. ' edges' → logprob: -6.575799942016602
    5. 'len' → logprob: -6.575799942016602
    6. ' nombre' → logprob: -7.200799942016602
    7. 'niveau' → logprob: -8.700799942016602
    8. 'length' → logprob: -8.825799942016602
    9. 'count' → logprob: -8.825799942016602
    10. 'de' → logprob: -9.200799942016602

Token 507: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010372139513492584
    2. '    
' → logprob: -4.760372161865234
    3. '<|end|>' → logprob: -7.010372161865234
    4. '        
' → logprob: -8.010372161865234
    5. '  ' → logprob: -9.260372161865234
    6. 'elif' → logprob: -9.510372161865234
    7. ')' → logprob: -9.635372161865234
    8. '  
' → logprob: -9.635372161865234
    9. '   
' → logprob: -10.260372161865234
    10. '    ' → logprob: -10.510372161865234

Token 508: ' degré' (ID: 169072)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.2453330159187317
    2. 'neighbors' → logprob: -2.245332956314087
    3. 'vo' → logprob: -2.745332956314087
    4. 'len' → logprob: -3.995332956314087
    5. ' edges' → logprob: -4.370333194732666
    6. ' voisins' → logprob: -4.370333194732666
    7. 'ar' → logprob: -6.495333194732666
    8. ' neighbors' → logprob: -7.620333194732666
    9. '(edges' → logprob: -7.745333194732666
    10. 'E' → logprob: -8.370332717895508

Token 509: ' observ' (ID: 8664)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00046630011638626456
    2. '    
' → logprob: -7.750466346740723
    3. '<|end|>' → logprob: -11.125466346740723
    4. '        
' → logprob: -11.500466346740723
    5. '       ' → logprob: -12.750466346740723
    6. '  
' → logprob: -13.125466346740723
    7. ')' → logprob: -13.250466346740723
    8. 'elif' → logprob: -14.375466346740723
    9. '<|end|>' → logprob: -14.500466346740723
    10. '
' → logprob: -14.625466346740723

Token 510: 'é' (ID: 377)
  Prédit: 'enu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enu' → logprob: -0.7872143387794495
    2. 'ené' → logprob: -1.5372142791748047
    3. 'é' → logprob: -1.9122142791748047
    4. 'u' → logprob: -2.5372142791748047
    5. 'e' → logprob: -4.287214279174805
    6. 'ed' → logprob: -4.412214279174805
    7. 'ent' → logprob: -4.412214279174805
    8. 'édé' → logprob: -4.537214279174805
    9. 'éné' → logprob: -4.787214279174805
    10. 'enue' → logprob: -5.162214279174805

Token 511: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004230004735291004
    2. '    
' → logprob: -5.50423002243042
    3. '        
' → logprob: -9.504229545593262
    4. '<|end|>' → logprob: -10.379229545593262
    5. '  
' → logprob: -11.379229545593262
    6. '
' → logprob: -11.629229545593262
    7. '   
' → logprob: -12.004229545593262
    8. 'if' → logprob: -12.879229545593262
    9. '       ' → logprob: -12.879229545593262
    10. ')' → logprob: -13.004229545593262

Token 512: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.874882430769503e-05
    2. 'if' → logprob: -9.875079154968262
    3. '    
' → logprob: -10.750079154968262
    4. 'elif' → logprob: -12.875079154968262
    5. ' if' → logprob: -13.750079154968262
    6. '
' → logprob: -14.250079154968262
    7. '       ' → logprob: -14.625079154968262
    8. '```' → logprob: -14.750079154968262
    9. ' ' → logprob: -15.625079154968262
    10. '        
' → logprob: -16.125078201293945

Token 513: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04397274926304817
    2. 'if' → logprob: -3.2939727306365967
    3. ' if' → logprob: -5.168972969055176
    4. '    
' → logprob: -8.668972969055176
    5. 'elif' → logprob: -10.418972969055176
    6. '
' → logprob: -11.293972969055176
    7. '   ' → logprob: -13.293972969055176
    8. ' ' → logprob: -13.668972969055176
    9. '```' → logprob: -13.668972969055176
    10. ' 
' → logprob: -14.168972969055176

Token 514: ' Faire' (ID: 104849)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.042011190205812454
    2. ' if' → logprob: -3.667011260986328
    3. '   ' → logprob: -4.167011260986328
    4. 'If' → logprob: -9.917011260986328
    5. 'elif' → logprob: -10.917011260986328
    6. ' ' → logprob: -12.167011260986328
    7. '  ' → logprob: -12.542011260986328
    8. '
' → logprob: -12.667011260986328
    9. '	if' → logprob: -12.917011260986328
    10. '#' → logprob: -13.417011260986328

Token 515: ' la' (ID: 557)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08198840171098709
    2. ' la' → logprob: -3.5819883346557617
    3. ' pareil' → logprob: -3.7069883346557617
    4. 'la' → logprob: -4.081988334655762
    5. 'de' → logprob: -4.831988334655762
    6. 'le' → logprob: -7.456988334655762
    7. 'pare' → logprob: -8.081988334655762
    8. 'if' → logprob: -9.081988334655762
    9. ' le' → logprob: -10.206988334655762
    10. ' the' → logprob: -10.206988334655762

Token 516: ' même' (ID: 9679)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5256409049034119
    2. 'm' → logprob: -2.0256409645080566
    3. 'len' → logprob: -2.0256409645080566
    4. 'same' → logprob: -2.5256409645080566
    5. ' même' → logprob: -3.1506409645080566
    6. 'elif' → logprob: -4.025640964508057
    7. ' same' → logprob: -6.525640964508057
    8. ' if' → logprob: -7.275640964508057
    9. '   ' → logprob: -7.775640964508057
    10. 'suite' → logprob: -7.900640964508057

Token 517: ' vér' (ID: 42524)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8653803467750549
    2. ' chose' → logprob: -1.6153802871704102
    3. 'for' → logprob: -1.6153802871704102
    4. ' pour' → logprob: -3.11538028717041
    5. ' for' → logprob: -3.36538028717041
    6. 'pour' → logprob: -3.36538028717041
    7. 'elif' → logprob: -3.61538028717041
    8. 'fois' → logprob: -4.61538028717041
    9. ' if' → logprob: -4.74038028717041
    10. '   ' → logprob: -5.61538028717041

Token 518: 'ification' (ID: 3166)
  Prédit: 'ification'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.031863290816545486
    2. 'if' → logprob: -3.656863212585449
    3. 'elif' → logprob: -5.531863212585449
    4. 'ifie' → logprob: -6.906863212585449
    5. 'ifi' → logprob: -8.40686321258545
    6. 'ication' → logprob: -9.28186321258545
    7. '```' → logprob: -10.28186321258545
    8. 'ificate' → logprob: -10.40686321258545
    9. 'ifice' → logprob: -10.40686321258545
    10. 'inition' → logprob: -10.65686321258545

Token 519: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010159638710319996
    2. ' for' → logprob: -4.885159492492676
    3. ' if' → logprob: -6.510159492492676
    4. 'for' → logprob: -7.135159492492676
    5. 'if' → logprob: -8.885159492492676
    6. ' with' → logprob: -10.010159492492676
    7. ' len' → logprob: -11.010159492492676
    8. 'elif' → logprob: -11.385159492492676
    9. ' elif' → logprob: -11.635159492492676
    10. '(' → logprob: -11.760159492492676

Token 520: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.05110706761479378
    2. ' B' → logprob: -3.176107168197632
    3. 'len' → logprob: -5.426106929779053
    4. ' len' → logprob: -5.801106929779053
    5. '   ' → logprob: -7.926106929779053
    6. 'E' → logprob: -8.426107406616211
    7. ' ' → logprob: -10.426107406616211
    8. ' E' → logprob: -11.301107406616211
    9. 'if' → logprob: -11.426107406616211
    10. ' if' → logprob: -12.176107406616211

Token 521: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04157387092709541
    2. 'if' → logprob: -3.2915737628936768
    3. ' if' → logprob: -5.666574001312256
    4. '```' → logprob: -10.416573524475098
    5. '	if' → logprob: -11.416573524475098
    6. '    
' → logprob: -11.416573524475098
    7. '
' → logprob: -11.416573524475098
    8. '       ' → logprob: -13.541573524475098
    9. ';if' → logprob: -14.666573524475098
    10. '  ' → logprob: -14.666573524475098

Token 522: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04738637059926987
    2. ' if' → logprob: -3.422386407852173
    3. 'if' → logprob: -4.297386169433594
    4. 'elif' → logprob: -10.797386169433594
    5. '       ' → logprob: -12.047386169433594
    6. '    ' → logprob: -12.047386169433594
    7. '  ' → logprob: -12.672386169433594
    8. '	if' → logprob: -13.172386169433594
    9. ' elif' → logprob: -13.297386169433594
    10. ' ' → logprob: -13.297386169433594

Token 523: ' être' (ID: 9104)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6660760641098022
    2. 'len' → logprob: -1.2910760641098022
    3. ' if' → logprob: -2.166076183319092
    4. ' len' → logprob: -3.541076183319092
    5. '   ' → logprob: -4.166076183319092
    6. 'B' → logprob: -4.541076183319092
    7. 'le' → logprob: -4.666076183319092
    8. 'E' → logprob: -5.416076183319092
    9. 'elif' → logprob: -5.541076183319092
    10. ' le' → logprob: -5.916076183319092

Token 524: ' sûr' (ID: 46415)
  Prédit: ' sûr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sûr' → logprob: -0.890005886554718
    2. 'certain' → logprob: -0.890005886554718
    3. 's' → logprob: -2.1400058269500732
    4. 'exact' → logprob: -3.2650058269500732
    5. 'co' → logprob: -5.015006065368652
    6. 'com' → logprob: -5.515006065368652
    7. 'sure' → logprob: -5.765006065368652
    8. ' certain' → logprob: -6.515006065368652
    9. 'bien' → logprob: -6.640006065368652
    10. '   ' → logprob: -6.765006065368652

Token 525: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.967624019831419e-05
    2. ' if' → logprob: -10.000060081481934
    3. 'if' → logprob: -11.750060081481934
    4. '```' → logprob: -12.250060081481934
    5. '       ' → logprob: -14.625060081481934
    6. '    
' → logprob: -14.750060081481934
    7. '
' → logprob: -15.250060081481934
    8. '  ' → logprob: -15.750060081481934
    9. '   ' → logprob: -16.500059127807617
    10. 'If' → logprob: -16.625059127807617

Token 526: ' détect' (ID: 118715)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1995198130607605
    2. 'if' → logprob: -3.3245198726654053
    3. 'not' → logprob: -3.4495198726654053
    4. 'edges' → logprob: -3.8245198726654053
    5. ' len' → logprob: -3.9495198726654053
    6. ' edges' → logprob: -4.074519634246826
    7. ' not' → logprob: -4.324519634246826
    8. 'max' → logprob: -4.449519634246826
    9. '   ' → logprob: -4.699519634246826
    10. '(len' → logprob: -6.074519634246826

Token 527: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.5928495486150496e-05
    2. '#' → logprob: -12.375016212463379
    3. 'ter' → logprob: -12.375016212463379
    4. 'ion' → logprob: -13.250016212463379
    5. 'ed' → logprob: -13.875016212463379
    6. 'é' → logprob: -14.000016212463379
    7. 'rer' → logprob: -14.625016212463379
    8. 'e' → logprob: -14.750016212463379
    9. '```' → logprob: -15.125016212463379
    10. 'urer' → logprob: -15.250016212463379

Token 528: ' le' (ID: 505)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9274135231971741
    2. ' if' → logprob: -1.0524134635925293
    3. '   ' → logprob: -1.4274134635925293
    4. 'len' → logprob: -4.802413463592529
    5. ' len' → logprob: -5.177413463592529
    6. ' si' → logprob: -7.177413463592529
    7. '(len' → logprob: -7.677413463592529
    8. 'si' → logprob: -8.427413940429688
    9. '  ' → logprob: -10.802413940429688
    10. ' la' → logprob: -11.427413940429688

Token 529: ' vrai' (ID: 42682)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7502548694610596
    2. 'no' → logprob: -1.2502548694610596
    3. 'prem' → logprob: -2.5002548694610596
    4. 'maximum' → logprob: -3.1252548694610596
    5. 'max' → logprob: -3.2502548694610596
    6. 'plus' → logprob: -3.5002548694610596
    7. 'nou' → logprob: -4.6252546310424805
    8. ' n' → logprob: -4.8752546310424805
    9. ' noe' → logprob: -5.0002546310424805
    10. 'som' → logprob: -5.3752546310424805

Token 530: ' max' (ID: 2999)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15283404290676117
    2. ' if' → logprob: -2.527833938598633
    3. 'max' → logprob: -3.652833938598633
    4. 'maximum' → logprob: -4.527833938598633
    5. 'n' → logprob: -4.902833938598633
    6. 'nombre' → logprob: -5.152833938598633
    7. '   ' → logprob: -6.027833938598633
    8. ' maximum' → logprob: -6.152833938598633
    9. 'plus' → logprob: -6.527833938598633
    10. 'no' → logprob: -7.027833938598633

Token 531: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007086210534907877
    2. 'if' → logprob: -7.50070858001709
    3. ' if' → logprob: -9.37570858001709
    4. '
' → logprob: -10.37570858001709
    5. '```' → logprob: -10.62570858001709
    6. '    
' → logprob: -11.25070858001709
    7. '       ' → logprob: -13.62570858001709
    8. '	if' → logprob: -14.87570858001709
    9. '   ' → logprob: -15.37570858001709
    10. '   
' → logprob: -16.375709533691406

Token 532: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004842962371185422
    2. 'if' → logprob: -7.750484466552734
    3. ' if' → logprob: -9.875484466552734
    4. '```' → logprob: -13.125484466552734
    5. '       ' → logprob: -15.875484466552734
    6. '  ' → logprob: -17.375484466552734
    7. '	if' → logprob: -17.750484466552734
    8. ' ' → logprob: -18.000484466552734
    9. '   ' → logprob: -18.125484466552734
    10. '    
' → logprob: -18.125484466552734

Token 533: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31382331252098083
    2. ' if' → logprob: -1.5638233423233032
    3. 'if' (adapté à ' if') → logprob: -2.8138232231140137
    4. '	if' → logprob: -10.438823699951172
    5. '```' → logprob: -12.188823699951172
    6. '       ' → logprob: -12.563823699951172
    7. ' ' → logprob: -13.563823699951172
    8. '  ' → logprob: -13.938823699951172
    9. '   ' → logprob: -14.438823699951172
    10. '    
' → logprob: -14.688823699951172

Token 534: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.029752805829048157
    2. 'len' → logprob: -3.529752731323242
    3. '(len' → logprob: -13.154752731323242
    4. '	len' → logprob: -15.529752731323242
    5. '   ' → logprob: -16.154752731323242
    6. ' ' → logprob: -17.154752731323242
    7. '  ' → logprob: -18.029752731323242
    8. '[len' → logprob: -18.029752731323242
    9. 'Len' → logprob: -18.779752731323242
    10. '    ' → logprob: -19.029752731323242

Token 535: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.5
    3. '(A' → logprob: -19.125
    4. '(
' → logprob: -19.125
    5. '(I' → logprob: -19.125
    6. 'E' → logprob: -19.625
    7. ' (' → logprob: -20.25
    8. '[E' → logprob: -21.0
    9. '(O' → logprob: -21.25
    10. '(F' → logprob: -21.375

Token 536: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -1.4259644558478612e-05
    2. 'B' → logprob: -12.250014305114746
    3. '[E' → logprob: -12.750014305114746
    4. '[' → logprob: -13.250014305114746
    5. '(B' → logprob: -13.875014305114746
    6. '[b' → logprob: -14.250014305114746
    7. ' [' → logprob: -14.500014305114746
    8. ')' → logprob: -14.625014305114746
    9. '```' → logprob: -14.750014305114746
    10. '[
' → logprob: -14.750014305114746

Token 537: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005989041528664529
    2. '])' → logprob: -7.875598907470703
    3. ')>' → logprob: -8.875598907470703
    4. ' )' → logprob: -9.750598907470703
    5. '）' → logprob: -12.125598907470703
    6. '   ' → logprob: -12.250598907470703
    7. ')]' → logprob: -12.500598907470703
    8. ']' → logprob: -12.875598907470703
    9. '[])' → logprob: -13.500598907470703
    10. '>)' → logprob: -14.375598907470703

Token 538: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.054895371198654175
    2. ' >' → logprob: -2.9298954010009766
    3. '()>' → logprob: -11.679895401000977
    4. ' ' → logprob: -13.679895401000977
    5. ')>' → logprob: -13.679895401000977
    6. ')' → logprob: -14.554895401000977
    7. '>B' → logprob: -14.679895401000977
    8. '>b' → logprob: -15.304895401000977
    9. '   ' → logprob: -15.554895401000977
    10. '&gt' → logprob: -15.679895401000977

Token 539: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.6931554675102234
    2. 'edges' → logprob: -0.6931554675102234
    3. ' ' → logprob: -12.943155288696289
    4. '   ' → logprob: -13.193155288696289
    5. '(edges' → logprob: -13.693155288696289
    6. ' ' → logprob: -13.943155288696289
    7. '.edges' → logprob: -14.568155288696289
    8. 'edge' → logprob: -14.568155288696289
    9. '_edges' → logprob: -14.693155288696289
    10. '  ' → logprob: -15.818155288696289

Token 540: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39010608196258545
    2. ':
' → logprob: -1.7651060819625854
    3. '       ' → logprob: -1.8901060819625854
    4. '):' → logprob: -8.390106201171875
    5. '):
' → logprob: -8.515106201171875
    6. '   ' → logprob: -8.640106201171875
    7. 'First' → logprob: -9.765106201171875
    8. ' :
' → logprob: -10.765106201171875
    9. '=' → logprob: -10.890106201171875
    10. ' First' → logprob: -11.015106201171875

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029472745954990387
    2. 'First' → logprob: -5.8779473304748535
    3. ' First' → logprob: -8.877946853637695
    4. '   ' → logprob: -13.627946853637695
    5. ' first' → logprob: -14.627946853637695
    6. '           ' → logprob: -14.877946853637695
    7. '```' → logprob: -15.377946853637695
    8. '      ' → logprob: -15.752946853637695
    9. '1' → logprob: -15.877946853637695
    10. '	' → logprob: -16.377946853637695

Token 542: ' First' (ID: 8338)
  Prédit: 'First'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'First' (adapté à ' First') → logprob: -0.06493842601776123
    2. 'B' → logprob: -3.189938545227051
    3. ' First' → logprob: -3.939938545227051
    4. ' B' → logprob: -6.189938545227051
    5. '   ' → logprob: -8.81493854522705
    6. ' first' → logprob: -10.18993854522705
    7. '       ' → logprob: -11.81493854522705
    8. 'first' → logprob: -13.06493854522705
    9. '	B' → logprob: -13.43993854522705
    10. '_B' → logprob: -13.56493854522705

Token 543: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4745193123817444
    2. '=' → logprob: -0.9745193123817444
    3. '=B' → logprob: -7.7245192527771
    4. ' ' → logprob: -15.849519729614258
    5. '=A' → logprob: -16.724519729614258
    6. '=b' → logprob: -16.974519729614258
    7. 'B' → logprob: -17.474519729614258
    8. '＝' → logprob: -17.474519729614258
    9. '=
' → logprob: -17.724519729614258
    10. ' =
' → logprob: -17.849519729614258

Token 544: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.38687121868133545
    2. ' B' → logprob: -1.1368712186813354
    3. '<|end|>' → logprob: -16.261871337890625
    4. ' ' → logprob: -17.011871337890625
    5. '	B' → logprob: -17.261871337890625
    6. '>B' → logprob: -17.636871337890625
    7. ' ' → logprob: -18.011871337890625
    8. '=B' → logprob: -18.886871337890625
    9. '"B' → logprob: -18.886871337890625
    10. 'b' → logprob: -19.136871337890625

Token 545: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009933913825079799
    2. '     ' → logprob: -7.750993251800537
    3. '      ' → logprob: -8.375993728637695
    4. ' len' → logprob: -8.875993728637695
    5. '   ' → logprob: -9.625993728637695
    6. '        ' → logprob: -10.000993728637695
    7. '    ' → logprob: -10.625993728637695
    8. 'len' → logprob: -10.750993728637695
    9. '    ' → logprob: -11.750993728637695
    10. '[len' → logprob: -12.625993728637695

Token 546: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007346196565777063
    2. ' len' → logprob: -5.132346153259277
    3. ' edges' → logprob: -7.007346153259277
    4. 'len' → logprob: -8.257346153259277
    5. 'edges' → logprob: -8.757346153259277
    6. '   ' → logprob: -9.882346153259277
    7. '      ' → logprob: -11.507346153259277
    8. '=len' → logprob: -11.632346153259277
    9. '	len' → logprob: -12.507346153259277
    10. ',len' → logprob: -12.882346153259277

Token 547: ' edges' (ID: 22569)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.547789674485102e-05
    2. ' len' → logprob: -10.250035285949707
    3. 'length' → logprob: -19.875036239624023
    4. '	len' → logprob: -19.875036239624023
    5. 'edges' (adapté à ' edges') → logprob: -20.250036239624023
    6. '(len' → logprob: -21.125036239624023
    7. '   ' → logprob: -21.500036239624023
    8. '[len' → logprob: -22.250036239624023
    9. '       ' → logprob: -22.625036239624023
    10. 'Len' → logprob: -22.875036239624023

Token 548: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931869387626648
    2. ' =' → logprob: -0.6931869387626648
    3. '=len' → logprob: -10.19318675994873
    4. 'len' → logprob: -13.94318675994873
    5. '   ' → logprob: -14.31818675994873
    6. '<|end|>' → logprob: -15.19318675994873
    7. ' ' → logprob: -15.69318675994873
    8. ')' → logprob: -15.94318675994873
    9. '       ' → logprob: -17.068187713623047
    10. '.' → logprob: -17.443187713623047

Token 549: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.56102097814437e-05
    2. ' len' → logprob: -10.000045776367188
    3. '(len' → logprob: -16.250045776367188
    4. '	len' → logprob: -20.625045776367188
    5. '[len' → logprob: -20.750045776367188
    6. '   ' → logprob: -22.000045776367188
    7. 'Len' → logprob: -23.750045776367188
    8. '=len' → logprob: -23.875045776367188
    9. '.len' → logprob: -24.875045776367188
    10. '<len' → logprob: -25.000045776367188

Token 550: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.375000953674316
    3. 'E' → logprob: -16.125
    4. '(
' → logprob: -19.25
    5. '[E' → logprob: -19.25
    6. '(A' → logprob: -19.75
    7. '(I' → logprob: -20.125
    8. '<E' → logprob: -20.625
    9. ' (' → logprob: -21.0
    10. '	E' → logprob: -21.25

Token 551: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -0.18036940693855286
    2. '[E' → logprob: -1.8053693771362305
    3. 'E' → logprob: -7.5553693771362305
    4. '(B' → logprob: -10.30536937713623
    5. '[' → logprob: -10.80536937713623
    6. ')' → logprob: -10.93036937713623
    7. '[
' → logprob: -11.93036937713623
    8. '[A' → logprob: -12.30536937713623
    9. '(E' → logprob: -12.43036937713623
    10. 'B' → logprob: -12.43036937713623

Token 552: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48012682795524597
    2. '])' → logprob: -1.4801268577575684
    3. '())' → logprob: -1.9801268577575684
    4. '()' → logprob: -4.355126857757568
    5. '[A' → logprob: -7.230126857757568
    6. ')]' → logprob: -7.355126857757568
    7. '[])' → logprob: -7.730126857757568
    8. ']' → logprob: -8.23012638092041
    9. '[B' → logprob: -8.23012638092041
    10. ')])' → logprob: -8.48012638092041

Token 553: '#' (ID: 2)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.48209190368652344
    2. 'visited' → logprob: -0.9820919036865234
    3. '#' → logprob: -5.107091903686523
    4. 'ans' → logprob: -6.357091903686523
    5. 'from' → logprob: -9.357091903686523
    6. 'First' → logprob: -9.857091903686523
    7. 'first' → logprob: -10.982091903686523
    8. '```' → logprob: -11.357091903686523
    9. ' visited' → logprob: -11.607091903686523
    10. 'for' → logprob: -12.232091903686523

Token 554: ' Lire' (ID: 57624)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.07778146117925644
    2. 'visited' → logprob: -2.8277814388275146
    3. 'ans' → logprob: -4.327781677246094
    4. 'from' → logprob: -6.077781677246094
    5. '#' → logprob: -8.827781677246094
    6. 'import' → logprob: -10.452781677246094
    7. 'first' → logprob: -12.452781677246094
    8. 'Ans' → logprob: -13.077781677246094
    9. ' visited' → logprob: -13.202781677246094
    10. 'queue' → logprob: -13.202781677246094

Token 555: ' une' (ID: 2463)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.1226814985275269
    2. 'First' → logprob: -1.3726814985275269
    3. 'q' → logprob: -1.4976814985275269
    4. '()' → logprob: -3.1226816177368164
    5. 'K' → logprob: -3.3726816177368164
    6. '1' → logprob: -3.9976816177368164
    7. 'M' → logprob: -4.122681617736816
    8. 'ans' → logprob: -4.372681617736816
    9. 'k' → logprob: -4.497681617736816
    10. 'int' → logprob: -4.497681617736816

Token 556: ' ligne' (ID: 19583)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.1912076473236084
    2. 'line' → logprob: -1.6912076473236084
    3. 'ligne' → logprob: -1.8162076473236084
    4. '#' → logprob: -2.3162076473236084
    5. 'value' → logprob: -3.4412076473236084
    6. 'for' → logprob: -3.5662076473236084
    7. 'q' → logprob: -3.5662076473236084
    8. 'queue' → logprob: -3.8162076473236084
    9. ' ligne' → logprob: -4.3162078857421875
    10. 'file' → logprob: -4.3162078857421875

Token 557: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.746900200843811
    2. ' =' → logprob: -1.621900200843811
    3. '()' → logprob: -2.3719000816345215
    4. 'N' → logprob: -2.9969000816345215
    5. 's' → logprob: -3.3719000816345215
    6. '=input' → logprob: -3.7469000816345215
    7. '#' → logprob: -4.3719000816345215
    8. 'for' → logprob: -4.3719000816345215
    9. 'data' → logprob: -4.4969000816345215
    10. 'input' → logprob: -4.6219000816345215

Token 558: ' sé' (ID: 7462)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.4311455488204956
    2. 'K' → logprob: -1.6811455488204956
    3. 's' → logprob: -2.056145668029785
    4. 'start' → logprob: -2.431145668029785
    5. 'val' → logprob: -3.181145668029785
    6. 'k' → logprob: -3.306145668029785
    7. 'V' → logprob: -3.431145668029785
    8. 'M' → logprob: -3.681145668029785
    9. 'C' → logprob: -3.681145668029785
    10. 'x' → logprob: -4.056145668029785

Token 559: 'parer' (ID: 48041)
  Prédit: 'lect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lect' → logprob: -1.3643603324890137
    2. 'par' → logprob: -1.7393603324890137
    3. 'quence' → logprob: -1.9893603324890137
    4. 'cond' → logprob: -2.1143603324890137
    5. 'lection' → logprob: -2.3643603324890137
    6. 'ries' → logprob: -3.4893603324890137
    7. 'arch' → logprob: -3.4893603324890137
    8. 'lected' → logprob: -3.6143603324890137
    9. 'r' → logprob: -4.114360332489014
    10. 'm' → logprob: -4.239360332489014

Token 560: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15148994326591492
    2. 'par' → logprob: -3.1514899730682373
    3. 'tokens' → logprob: -3.1514899730682373
    4. 'la' → logprob: -4.776489734649658
    5. 's' → logprob: -4.901489734649658
    6. 'input' → logprob: -5.026489734649658
    7. 'de' → logprob: -5.151489734649658
    8. 'val' → logprob: -5.151489734649658
    9. 'le' → logprob: -5.776489734649658
    10. '().' → logprob: -6.026489734649658

Token 561: ' éléments' (ID: 57375)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.6123650074005127
    2. 'val' → logprob: -1.4873650074005127
    3. 'chain' → logprob: -2.3623650074005127
    4. 'ent' → logprob: -3.4873650074005127
    5. 'inputs' → logprob: -3.4873650074005127
    6. 'esp' → logprob: -4.112364768981934
    7. 'ch' → logprob: -4.737364768981934
    8. 'car' → logprob: -4.987364768981934
    9. 'input' → logprob: -5.112364768981934
    10. 'chaine' → logprob: -5.487364768981934

Token 562: ' et' (ID: 859)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1541406810283661
    2. ' =' → logprob: -2.5291407108306885
    3. 'vals' → logprob: -3.9041407108306885
    4. 's' → logprob: -4.279140472412109
    5. 'input' → logprob: -4.779140472412109
    6. 'values' → logprob: -5.404140472412109
    7. 'val' → logprob: -5.654140472412109
    8. '=input' → logprob: -6.404140472412109
    9. 'tokens' → logprob: -6.779140472412109
    10. 'v' → logprob: -7.154140472412109

Token 563: ' les' (ID: 1341)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6084020733833313
    2. 'assign' → logprob: -1.1084020137786865
    3. 'for' → logprob: -3.1084020137786865
    4. 'convert' → logprob: -3.3584020137786865
    5. ' convertir' → logprob: -4.858402252197266
    6. 'val' → logprob: -5.233402252197266
    7. 'N' → logprob: -5.233402252197266
    8. 'mettre' → logprob: -5.483402252197266
    9. 'ans' → logprob: -5.608402252197266
    10. 'vals' → logprob: -5.733402252197266

Token 564: ' convertir' (ID: 79223)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.00028946425300091505
    2. 'list' → logprob: -8.375289916992188
    3. 'convert' → logprob: -10.750289916992188
    4. ' map' → logprob: -10.875289916992188
    5. 'assign' → logprob: -11.750289916992188
    6. 'int' → logprob: -12.500289916992188
    7. '=' → logprob: -13.125289916992188
    8. 'append' → logprob: -13.500289916992188
    9. 'extend' → logprob: -13.625289916992188
    10. 'strip' → logprob: -14.000289916992188

Token 565: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.04691717028617859
    2. ' en' → logprob: -3.921917200088501
    3. '()' → logprob: -5.421916961669922
    4. ' =' → logprob: -5.671916961669922
    5. 's' → logprob: -5.921916961669922
    6. 'vals' → logprob: -6.421916961669922
    7. '=' → logprob: -6.546916961669922
    8. 'val' → logprob: -6.796916961669922
    9. 'values' → logprob: -6.921916961669922
    10. 'v' → logprob: -6.921916961669922

Token 566: ' ent' (ID: 1121)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00406070938333869
    2. 'list' → logprob: -6.004060745239258
    3. 'ints' → logprob: -6.629060745239258
    4. 'inte' → logprob: -8.879060745239258
    5. 'map' → logprob: -9.504060745239258
    6. '[int' → logprob: -11.129060745239258
    7. 'ent' → logprob: -11.129060745239258
    8. 'liste' → logprob: -11.504060745239258
    9. ' int' → logprob: -11.879060745239258
    10. 'str' → logprob: -14.129060745239258

Token 567: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.008935637772083282
    2. 'iers' → logprob: -5.008935451507568
    3. 'tiers' → logprob: -7.008935451507568
    4. 'ter' → logprob: -8.008935928344727
    5. 'tre' → logprob: -8.508935928344727
    6. 'te' → logprob: -8.633935928344727
    7. 'teurs' → logprob: -9.008935928344727
    8. 'ti' → logprob: -9.258935928344727
    9. '```' → logprob: -10.258935928344727
    10. 'ints' → logprob: -10.758935928344727

Token 568: ' pour' (ID: 1930)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.608665943145752
    2. 'values' → logprob: -2.358665943145752
    3. 'p' → logprob: -2.733665943145752
    4. 'P' → logprob: -3.233665943145752
    5. 'colors' → logprob: -3.733665943145752
    6. 'V' → logprob: -3.733665943145752
    7. 'L' → logprob: -4.108665943145752
    8. 'val' → logprob: -4.108665943145752
    9. 'arr' → logprob: -4.233665943145752
    10. 'a' → logprob: -4.233665943145752

Token 569: ' former' (ID: 9254)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2665826678276062
    2. 'q' → logprob: -2.266582727432251
    3. 'N' → logprob: -3.516582727432251
    4. 'assign' → logprob: -3.766582727432251
    5. ' ans' → logprob: -4.141582489013672
    6. 'vals' → logprob: -4.266582489013672
    7. '_' → logprob: -4.891582489013672
    8. 'lst' → logprob: -5.141582489013672
    9. 'arr' → logprob: -5.266582489013672
    10. 'val' → logprob: -5.391582489013672

Token 570: ' la' (ID: 557)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.3497777283191681
    2. 'values' → logprob: -2.7247776985168457
    3. 'ans' → logprob: -3.2247776985168457
    4. 'val' → logprob: -3.5997776985168457
    5. 'lst' → logprob: -3.5997776985168457
    6. 'labels' → logprob: -3.9747776985168457
    7. 'p' → logprob: -3.9747776985168457
    8. 'P' → logprob: -4.099777698516846
    9. 'arr' → logprob: -4.224777698516846
    10. 'V' → logprob: -4.974777698516846

Token 571: ' liste' (ID: 31719)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vals' → logprob: -1.4208166599273682
    2. 'q' → logprob: -2.170816659927368
    3. 'lst' → logprob: -2.170816659927368
    4. 'val' → logprob: -2.670816659927368
    5. 'path' → logprob: -2.795816659927368
    6. 'values' → logprob: -3.170816659927368
    7. 'colors' → logprob: -3.420816659927368
    8. 'liste' → logprob: -3.420816659927368
    9. 'ans' → logprob: -3.545816659927368
    10. 'L' → logprob: -3.920816659927368

Token 572: ' C' (ID: 363)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vals' → logprob: -1.2725019454956055
    2. 'P' → logprob: -2.3975019454956055
    3. 'values' → logprob: -2.6475019454956055
    4. 'p' → logprob: -2.7725019454956055
    5. 'L' → logprob: -3.2725019454956055
    6. 'lst' → logprob: -3.2725019454956055
    7. 'C' → logprob: -3.2725019454956055
    8. 'ans' → logprob: -3.3975019454956055
    9. 'colors' → logprob: -3.3975019454956055
    10. 'a' → logprob: -3.3975019454956055

Token 573: '
' (ID: 198)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -3.531315314830863e-06
    2. '=' → logprob: -13.375003814697266
    3. ' =' → logprob: -13.625003814697266
    4. '
' → logprob: -14.500003814697266
    5. ' C' → logprob: -16.250003814697266
    6. 'c' → logprob: -16.250003814697266
    7. '#' → logprob: -16.875003814697266
    8. '=C' → logprob: -17.000003814697266
    9. '```' → logprob: -18.125003814697266
    10. '=
' → logprob: -19.000003814697266

Token 574: '#' (ID: 2)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.9361264946837764e-07
    2. ' C' → logprob: -16.0
    3. 'c' → logprob: -17.875
    4. '#' → logprob: -19.75
    5. '
' → logprob: -19.875
    6. 'list' → logprob: -21.625
    7. '```' → logprob: -21.875
    8. '*C' → logprob: -22.125
    9. '_C' → logprob: -22.75
    10. '   ' → logprob: -23.0

Token 575: ' Cette' (ID: 27383)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.9361264946837764e-07
    2. ' C' → logprob: -16.125
    3. 'c' → logprob: -19.0
    4. '#' → logprob: -21.25
    5. 'list' → logprob: -21.625
    6. 'import' → logprob: -22.0
    7. 'from' → logprob: -22.125
    8. '*C' → logprob: -22.125
    9. '
' → logprob: -22.375
    10. '=C' → logprob: -22.625

Token 576: ' liste' (ID: 31719)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0014677229337394238
    2. ' =' → logprob: -7.251467704772949
    3. '=' → logprob: -7.501467704772949
    4. ' C' → logprob: -8.87646770477295
    5. '#' → logprob: -11.25146770477295
    6. '=C' → logprob: -11.62646770477295
    7. ' line' → logprob: -11.75146770477295
    8. 'c' → logprob: -11.75146770477295
    9. 'line' → logprob: -11.87646770477295
    10. 's' → logprob: -12.25146770477295

Token 577: ' C' (ID: 363)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009054131805896759
    2. ' =' → logprob: -4.759054183959961
    3. 'C' → logprob: -7.759054183959961
    4. '=C' → logprob: -11.634054183959961
    5. '=list' → logprob: -13.884054183959961
    6. '=[]' → logprob: -14.259054183959961
    7. 'c' → logprob: -14.509054183959961
    8. '=input' → logprob: -14.509054183959961
    9. '=[' → logprob: -15.134054183959961
    10. ' C' → logprob: -15.509054183959961

Token 578: ' cont' (ID: 836)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011240334250032902
    2. ' =' → logprob: -4.511240482330322
    3. 'C' → logprob: -8.636240005493164
    4. '=C' → logprob: -11.261240005493164
    5. '=list' → logprob: -14.511240005493164
    6. '=[]' → logprob: -14.511240005493164
    7. '=input' → logprob: -15.261240005493164
    8. '=
' → logprob: -15.636240005493164
    9. 'c' → logprob: -15.636240005493164
    10. '=[' → logprob: -16.011240005493164

Token 579: 'i' (ID: 72)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.025240406394004822
    2. 'i' → logprob: -3.900240421295166
    3. 'in' → logprob: -5.900240421295166
    4. 'iend' → logprob: -7.025240421295166
    5. 'inue' → logprob: -8.400239944458008
    6. 'iennent' → logprob: -8.650239944458008
    7. '=' → logprob: -9.275239944458008
    8. 'ien' → logprob: -9.400239944458008
    9. 't' → logprob: -9.525239944458008
    10. 'iens' → logprob: -9.775239944458008

Token 580: 'endra' (ID: 32364)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ient' → logprob: -1.158880352973938
    2. 'ent' → logprob: -1.533880352973938
    3. 'u' → logprob: -2.5338802337646484
    4. '=C' → logprob: -2.5338802337646484
    5. 'ents' → logprob: -2.6588802337646484
    6. 'ues' → logprob: -2.6588802337646484
    7. '=' → logprob: -2.7838802337646484
    8. 'ients' → logprob: -3.6588802337646484
    9. 'ue' → logprob: -4.158880233764648
    10. 'end' → logprob: -4.408880233764648

Token 581: ' les' (ID: 1341)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.011577526107430458
    2. 'C' → logprob: -4.511577606201172
    3. ' list' → logprob: -7.636577606201172
    4. 'c' → logprob: -11.636577606201172
    5. '[]' → logprob: -11.636577606201172
    6. 'input' → logprob: -12.011577606201172
    7. 'l' → logprob: -12.136577606201172
    8. ' C' → logprob: -12.261577606201172
    9. '=list' → logprob: -12.636577606201172
    10. 'lst' → logprob: -13.386577606201172

Token 582: ' valeurs' (ID: 73668)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.11072006821632385
    2. 'C' → logprob: -2.485720157623291
    3. 'map' → logprob: -5.485720157623291
    4. ' list' → logprob: -5.610720157623291
    5. 'values' → logprob: -5.735720157623291
    6. 'vals' → logprob: -5.860720157623291
    7. 'int' → logprob: -6.360720157623291
    8. 'c' → logprob: -6.860720157623291
    9. 'val' → logprob: -6.985720157623291
    10. 'ints' → logprob: -7.110720157623291

Token 583: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3837413191795349
    2. 'C' → logprob: -1.2587413787841797
    3. ' =' → logprob: -3.3837413787841797
    4. 'de' → logprob: -7.50874137878418
    5. '=C' → logprob: -9.75874137878418
    6. 'c' → logprob: -10.63374137878418
    7. 'input' → logprob: -11.13374137878418
    8. ' C' → logprob: -11.63374137878418
    9. '=input' → logprob: -11.63374137878418
    10. 's' → logprob: -11.63374137878418

Token 584: ' assign' (ID: 14975)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.9010052680969238
    2. 'attrib' → logprob: -1.0260052680969238
    3. 'assign' → logprob: -1.5260052680969238
    4. '```' → logprob: -4.401005268096924
    5. 'assoc' → logprob: -6.776005268096924
    6. 'at' → logprob: -7.276005268096924
    7. '
' → logprob: -7.401005268096924
    8. 'list' → logprob: -7.901005268096924
    9. 'ass' → logprob: -7.901005268096924
    10. 'val' → logprob: -8.276004791259766

Token 585: 'er' (ID: 259)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7468069195747375
    2. 'er' → logprob: -1.3718068599700928
    3. '=' → logprob: -1.9968068599700928
    4. ' =' → logprob: -2.8718068599700928
    5. '=C' → logprob: -3.1218068599700928
    6. 'e' → logprob: -4.621807098388672
    7. ' C' → logprob: -4.746807098388672
    8. 'ées' → logprob: -5.496807098388672
    9. 'es' → logprob: -5.746807098388672
    10. 'é' → logprob: -6.246807098388672

Token 586: ' aux' (ID: 5850)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0433172769844532
    2. '=' → logprob: -3.1683173179626465
    3. ' =' → logprob: -8.168316841125488
    4. '#' → logprob: -11.543316841125488
    5. '=C' → logprob: -11.543316841125488
    6. ' C' → logprob: -12.418316841125488
    7. '
' → logprob: -12.793316841125488
    8. '=
' → logprob: -13.168316841125488
    9. 'c' → logprob: -13.293316841125488
    10. 's' → logprob: -14.418316841125488

Token 587: ' n' (ID: 297)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.5079876184463501
    2. 'C' → logprob: -1.63298761844635
    3. 'n' → logprob: -2.0079874992370605
    4. 'input' → logprob: -4.1329874992370605
    5. 'list' → logprob: -4.3829874992370605
    6. 'E' → logprob: -4.3829874992370605
    7. 'q' → logprob: -4.5079874992370605
    8. 'ans' → logprob: -6.0079874992370605
    9. ' nodes' → logprob: -6.1329874992370605
    10. 'les' → logprob: -6.3829874992370605

Token 588: 'œ' (ID: 15335)
  Prédit: 'œ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'œ' → logprob: -0.10477912425994873
    2. 'oe' → logprob: -2.6047792434692383
    3. 'odes' → logprob: -3.7297792434692383
    4. 'C' → logprob: -7.604779243469238
    5. 'o' → logprob: -8.354779243469238
    6. '[' → logprob: -8.979779243469238
    7. '_nodes' → logprob: -9.229779243469238
    8. '=' → logprob: -9.229779243469238
    9. '[C' → logprob: -9.354779243469238
    10. 'Œ' → logprob: -9.729779243469238

Token 589: 'uds' (ID: 44387)
  Prédit: 'œ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'œ' → logprob: -0.43784138560295105
    2. 'uds' → logprob: -1.0628414154052734
    3. 'ud' → logprob: -5.562841415405273
    4. '\xc2' → logprob: -5.812841415405273
    5. '\' → logprob: -7.562841415405273
    6. '_' → logprob: -8.062841415405273
    7. '#' → logprob: -8.312841415405273
    8. 'oe' → logprob: -8.687841415405273
    9. '%C' → logprob: -8.937841415405273
    10. '¶' → logprob: -9.187841415405273

Token 590: '
' (ID: 198)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -6.704273118884885e-07
    2. ' C' → logprob: -15.500000953674316
    3. '=C' → logprob: -15.625000953674316
    4. '=' → logprob: -16.0
    5. 'c' → logprob: -16.625
    6. ' =' → logprob: -16.75
    7. '#' → logprob: -17.625
    8. '
' → logprob: -19.5
    9. 'list' → logprob: -19.625
    10. 'from' → logprob: -20.125

Token 591: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: 0.0
    2. ' C' → logprob: -19.125
    3. 'c' → logprob: -20.125
    4. '#' → logprob: -21.375
    5. 'import' → logprob: -21.75
    6. '*C' → logprob: -22.0
    7. '=C' → logprob: -22.25
    8. '	C' → logprob: -22.375
    9. 'from' → logprob: -22.75
    10. '```' → logprob: -23.125

Token 592: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692862749099731
    2. ' =' → logprob: -2.1269285678863525
    3. '=list' → logprob: -15.126928329467773
    4. '=input' → logprob: -16.626928329467773
    5. '=[]' → logprob: -17.251928329467773
    6. ' ' → logprob: -17.251928329467773
    7. ',' → logprob: -17.626928329467773
    8. '＝' → logprob: -17.626928329467773
    9. '=int' → logprob: -17.876928329467773
    10. '=C' → logprob: -18.126928329467773

Token 593: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0001584850688232109
    2. ' list' → logprob: -8.750158309936523
    3. '[list' → logprob: -19.625158309936523
    4. '=list' → logprob: -21.375158309936523
    5. 'map' → logprob: -21.625158309936523
    6. '	list' → logprob: -22.750158309936523
    7. '(list' → logprob: -22.750158309936523
    8. 'List' → logprob: -23.500158309936523
    9. '[' → logprob: -23.750158309936523
    10. '.list' → logprob: -24.000158309936523

Token 594: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.0802738870552275e-05
    2. 'map' → logprob: -12.25001049041748
    3. '(' → logprob: -12.37501049041748
    4. '(int' → logprob: -13.25001049041748
    5. ' map' → logprob: -18.750011444091797
    6. ' (' → logprob: -19.000011444091797
    7. '()' → logprob: -19.250011444091797
    8. '(
' → logprob: -19.625011444091797
    9. '.map' → logprob: -19.750011444091797
    10. ',map' → logprob: -19.750011444091797

Token 595: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008719289675354958
    2. 'int' → logprob: -4.758719444274902
    3. '(' → logprob: -9.383719444274902
    4. '[int' → logprob: -11.758719444274902
    5. '<int' → logprob: -12.258719444274902
    6. ',int' → logprob: -12.508719444274902
    7. '=int' → logprob: -13.258719444274902
    8. ']int' → logprob: -14.008719444274902
    9. ' int' → logprob: -14.133719444274902
    10. '(
' → logprob: -14.383719444274902

Token 596: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10496138781309128
    2. ',input' → logprob: -2.354961395263672
    3. '(input' → logprob: -5.354961395263672
    4. 'input' → logprob: -11.479961395263672
    5. '(' → logprob: -12.229961395263672
    6. ' ,' → logprob: -12.854961395263672
    7. '=input' → logprob: -14.604961395263672
    8. ' input' → logprob: -15.604961395263672
    9. ',int' → logprob: -15.979961395263672
    10. ' (' → logprob: -16.354961395263672

Token 597: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00012368128227535635
    2. ' input' → logprob: -9.000123977661133
    3. '(input' → logprob: -15.500123977661133
    4. ',input' → logprob: -19.000123977661133
    5. ' ' → logprob: -19.375123977661133
    6. '<input' → logprob: -19.500123977661133
    7. '=input' → logprob: -20.000123977661133
    8. '	input' → logprob: -20.000123977661133
    9. '[input' → logprob: -20.125123977661133
    10. '   ' → logprob: -20.250123977661133

Token 598: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.77022064034827e-05
    2. '()' → logprob: -9.250097274780273
    3. ' ().' → logprob: -14.000097274780273
    4. '=input' → logprob: -15.500097274780273
    5. '(' → logprob: -15.625097274780273
    6. '(input' → logprob: -16.625097274780273
    7. '.' → logprob: -17.125097274780273
    8. '.split' → logprob: -17.250097274780273
    9. ' .' → logprob: -17.500097274780273
    10. ',input' → logprob: -17.625097274780273

Token 599: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. 'strip' → logprob: -16.5
    3. ' split' → logprob: -17.125
    4. '(split' → logprob: -17.875
    5. 'spl' → logprob: -19.25
    6. ')' → logprob: -19.625
    7. 's' → logprob: -20.625
    8. 'rstrip' → logprob: -21.25
    9. '.split' → logprob: -21.875
    10. '```' → logprob: -23.375

Token 600: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04868853837251663
    2. '))' → logprob: -3.6736886501312256
    3. '()' → logprob: -4.2986884117126465
    4. '())' → logprob: -4.7986884117126465
    5. '(' → logprob: -8.548688888549805
    6. ')' → logprob: -9.423688888549805
    7. '(),' → logprob: -11.423688888549805
    8. '()));' → logprob: -11.423688888549805
    9. '()))
' → logprob: -11.548688888549805
    10. '())).' → logprob: -14.048688888549805

Token 601: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1332533359527588
    2. 'q' → logprob: -2.133253335952759
    3. 'from' → logprob: -5.63325309753418
    4. '#' → logprob: -6.25825309753418
    5. 'visited' → logprob: -8.00825309753418
    6. 'first' → logprob: -8.88325309753418
    7. 'for' → logprob: -8.88325309753418
    8. 'idx' → logprob: -9.75825309753418
    9. 'import' → logprob: -9.88325309753418
    10. 'First' → logprob: -10.50825309753418

Token 602: ' Trier' (ID: 191551)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.22207793593406677
    2. 'q' → logprob: -1.8470779657363892
    3. '#' → logprob: -3.5970778465270996
    4. 'from' → logprob: -4.5970778465271
    5. 'visited' → logprob: -6.2220778465271
    6. 'for' → logprob: -7.3470778465271
    7. 'import' → logprob: -7.3470778465271
    8. 'first' → logprob: -8.222078323364258
    9. 'def' → logprob: -8.972078323364258
    10. 'First' → logprob: -9.722078323364258

Token 603: ' la' (ID: 557)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.011060554534196854
    2. '(C' → logprob: -4.51106071472168
    3. '(
' → logprob: -11.88606071472168
    4. '(' → logprob: -12.13606071472168
    5. ' C' → logprob: -14.51106071472168
    6. '()' → logprob: -16.13606071472168
    7. '#' → logprob: -17.51106071472168
    8. 'c' → logprob: -17.63606071472168
    9. '	C' → logprob: -18.01106071472168
    10. '_C' → logprob: -19.13606071472168

Token 604: ' liste' (ID: 31719)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -4.320199877838604e-07
    2. 'list' → logprob: -15.125
    3. ' C' → logprob: -16.25
    4. '(C' → logprob: -17.375
    5. 's' → logprob: -18.0
    6. '#' → logprob: -19.125
    7. 'c' → logprob: -19.125
    8. ')' → logprob: -19.5
    9. '=C' → logprob: -19.75
    10. 'liste' → logprob: -20.0

Token 605: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0004307884373702109
    2. '(C' → logprob: -7.750430583953857
    3. ' C' → logprob: -17.250431060791016
    4. '(' → logprob: -17.375431060791016
    5. '(
' → logprob: -17.625431060791016
    6. '_C' → logprob: -19.375431060791016
    7. '	C' → logprob: -20.250431060791016
    8. 'c' → logprob: -20.250431060791016
    9. 's' → logprob: -20.375431060791016
    10. '()' → logprob: -20.875431060791016

Token 606: ' en' (ID: 469)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.027088530361652374
    2. '.' → logprob: -3.7770886421203613
    3. 'C' → logprob: -5.652088642120361
    4. '().' → logprob: -9.277088165283203
    5. '.reverse' → logprob: -9.277088165283203
    6. '=' → logprob: -10.152088165283203
    7. '.C' → logprob: -10.277088165283203
    8. 'sort' → logprob: -11.152088165283203
    9. '.c' → logprob: -11.277088165283203
    10. ' C' → logprob: -11.777088165283203

Token 607: ' ordre' (ID: 103061)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.0016157961217686534
    2. 'descending' → logprob: -6.75161600112915
    3. '.reverse' → logprob: -8.376615524291992
    4. ' reverse' → logprob: -8.751615524291992
    5. 'desc' → logprob: -11.126615524291992
    6. 'ordre' → logprob: -11.376615524291992
    7. '```' → logprob: -11.876615524291992
    8. 'ascending' → logprob: -12.626615524291992
    9. '(reverse' → logprob: -12.751615524291992
    10. 'place' → logprob: -12.751615524291992

Token 608: ' cro' (ID: 11270)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.4948575794696808
    2. '.reverse' → logprob: -1.2448575496673584
    3. 'desc' → logprob: -2.4948575496673584
    4. 'descending' → logprob: -4.7448577880859375
    5. 'de' → logprob: -4.9948577880859375
    6. '(reverse' → logprob: -6.9948577880859375
    7. '.' → logprob: -7.1198577880859375
    8. 'd' → logprob: -7.3698577880859375
    9. 'C' → logprob: -7.3698577880859375
    10. 'dec' → logprob: -7.6198577880859375

Token 609: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.26059362292289734
    2. 'issante' → logprob: -1.5105936527252197
    3. 'issance' → logprob: -5.135593414306641
    4. 'issement' → logprob: -6.635593414306641
    5. 'ss' → logprob: -7.885593414306641
    6. 'iss' → logprob: -7.885593414306641
    7. 'issent' → logprob: -8.26059341430664
    8. 'is' → logprob: -8.88559341430664
    9. 't' → logprob: -10.13559341430664
    10. 'i' → logprob: -10.38559341430664

Token 610: '
' (ID: 198)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -2.2723104848410003e-05
    2. '.sort' → logprob: -10.750022888183594
    3. '.' → logprob: -14.500022888183594
    4. ')' → logprob: -14.625022888183594
    5. ').' → logprob: -16.625022888183594
    6. ')
' → logprob: -16.750022888183594
    7. ' C' → logprob: -17.125022888183594
    8. '.C' → logprob: -17.250022888183594
    9. '```' → logprob: -17.750022888183594
    10. 'sorted' → logprob: -17.875022888183594

Token 611: '#' (ID: 2)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: 0.0
    2. ' C' → logprob: -20.375
    3. '```' → logprob: -24.125
    4. 'sorted' → logprob: -25.0
    5. 'c' → logprob: -25.625
    6. '#' → logprob: -25.875
    7. '	C' → logprob: -26.75
    8. '
' → logprob: -26.75
    9. '`' → logprob: -27.25
    10. 'sort' → logprob: -27.5

Token 612: ' Cela' (ID: 44403)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: 0.0
    2. ' C' → logprob: -21.25
    3. '```' → logprob: -24.0
    4. '#' → logprob: -24.5
    5. 'c' → logprob: -26.5
    6. 'sorted' → logprob: -26.75
    7. '
' → logprob: -26.875
    8. '>C' → logprob: -28.0
    9. '	C' → logprob: -28.0
    10. 'sort' → logprob: -28.125

Token 613: ' sera' (ID: 15511)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.09097182750701904
    2. '.' → logprob: -2.5909719467163086
    3. 'C' → logprob: -4.465971946716309
    4. 'sort' → logprob: -8.965971946716309
    5. ' .' → logprob: -9.090971946716309
    6. ' C' → logprob: -9.215971946716309
    7. '.reverse' → logprob: -9.840971946716309
    8. '=' → logprob: -10.340971946716309
    9. '.C' → logprob: -11.090971946716309
    10. ')' → logprob: -11.340971946716309

Token 614: ' utile' (ID: 68237)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.008419298566877842
    2. ' C' → logprob: -4.883419513702393
    3. '
' → logprob: -8.133419036865234
    4. '#' → logprob: -9.633419036865234
    5. 'utile' → logprob: -9.883419036865234
    6. ' important' → logprob: -10.008419036865234
    7. 'important' → logprob: -10.008419036865234
    8. 'util' → logprob: -10.133419036865234
    9. ' utile' → logprob: -10.383419036865234
    10. 'for' → logprob: -10.508419036865234

Token 615: ' pour' (ID: 1930)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.04114105924963951
    2. 'for' → logprob: -4.041141033172607
    3. '()' → logprob: -5.041141033172607
    4. ',' → logprob: -5.041141033172607
    5. '.' → logprob: -5.166141033172607
    6. '()
' → logprob: -7.416141033172607
    7. ')' → logprob: -7.541141033172607
    8. ' for' → logprob: -7.666141033172607
    9. 'to' → logprob: -7.666141033172607
    10. 'pour' → logprob: -7.666141033172607

Token 616: ' l' (ID: 305)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.2224094420671463
    2. 'ass' → logprob: -3.09740948677063
    3. '#' → logprob: -3.22240948677063
    4. 'fac' → logprob: -3.72240948677063
    5. ' garantir' → logprob: -3.84740948677063
    6. 'util' → logprob: -4.222409248352051
    7. 'tr' → logprob: -4.472409248352051
    8. 'optim' → logprob: -4.722409248352051
    9. 'aff' → logprob: -5.222409248352051
    10. 'p' → logprob: -5.347409248352051

Token 617: ''aff' (ID: 53397)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.42206689715385437
    2. 'assign' → logprob: -1.2970669269561768
    3. 'C' → logprob: -3.4220669269561768
    4. 'aff' → logprob: -4.172066688537598
    5. 'a' → logprob: -4.422066688537598
    6. 'e' → logprob: -5.797066688537598
    7. 'ens' → logprob: -6.422066688537598
    8. 'attrib' → logprob: -6.672066688537598
    9. 'ass' → logprob: -7.047066688537598
    10. 'ans' → logprob: -7.422066688537598

Token 618: 'ect' (ID: 534)
  Prédit: 'ichage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.03481230512261391
    2. 'icher' → logprob: -3.4098122119903564
    3. '#' → logprob: -7.5348124504089355
    4. 'ich' → logprob: -7.6598124504089355
    5. 'in' → logprob: -9.909811973571777
    6. 'ect' → logprob: -10.284811973571777
    7. 'iche' → logprob: -10.784811973571777
    8. 'ic' → logprob: -11.034811973571777
    9. 'iner' → logprob: -11.909811973571777
    10. 'ichier' → logprob: -12.034811973571777

Token 619: 'ation' (ID: 387)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.12871505320072174
    2. 'er' → logprob: -2.1287150382995605
    3. 'ection' → logprob: -7.3787150382995605
    4. 'igner' → logprob: -8.003715515136719
    5. '#' → logprob: -8.128715515136719
    6. 'assign' → logprob: -8.503715515136719
    7. 'ign' → logprob: -9.878715515136719
    8. 'ec' → logprob: -10.003715515136719
    9. 'ation' → logprob: -10.503715515136719
    10. 'e' → logprob: -10.628715515136719

Token 620: ' ult' (ID: 11619)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -6.704273118884885e-07
    2. '#' → logprob: -15.000000953674316
    3. ' C' → logprob: -15.875000953674316
    4. '=' → logprob: -16.375
    5. 's' → logprob: -17.375
    6. '.' → logprob: -17.625
    7. ':' → logprob: -18.0
    8. ',' → logprob: -18.125
    9. '=C' → logprob: -18.125
    10. '_C' → logprob: -18.5

Token 621: 'érieure' (ID: 45836)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.6677191853523254
    2. 'C' → logprob: -1.2927191257476807
    3. 'issante' → logprob: -2.6677191257476807
    4. 'e' → logprob: -3.1677191257476807
    5. 'def' → logprob: -4.16771936416626
    6. 'issement' → logprob: -4.41771936416626
    7. '#' → logprob: -4.54271936416626
    8. 'ir' → logprob: -4.79271936416626
    9. 'issant' → logprob: -4.91771936416626
    10. 'end' → logprob: -5.66771936416626

Token 622: ' des' (ID: 731)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: 0.0
    2. ' C' → logprob: -19.125
    3. '#' → logprob: -20.125
    4. '
' → logprob: -22.25
    5. 'sorted' → logprob: -22.375
    6. '```' → logprob: -23.125
    7. '>C' → logprob: -23.875
    8. '	C' → logprob: -24.0
    9. ')' → logprob: -24.375
    10. '=C' → logprob: -24.5

Token 623: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.024869415909051895
    2. 'values' → logprob: -4.524869441986084
    3. 'C' → logprob: -4.899869441986084
    4. 'vals' → logprob: -5.524869441986084
    5. 'ans' → logprob: -6.649869441986084
    6. ' valeurs' → logprob: -8.024868965148926
    7. 'nodes' → logprob: -8.399868965148926
    8. 'n' → logprob: -8.399868965148926
    9. 'valu' → logprob: -10.149868965148926
    10. 'labels' → logprob: -10.524868965148926

Token 624: ' aux' (ID: 5850)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: 0.0
    2. '#' → logprob: -19.75
    3. 'sorted' → logprob: -20.0
    4. ' C' → logprob: -20.25
    5. 'c' → logprob: -22.125
    6. '```' → logprob: -22.25
    7. '=' → logprob: -22.875
    8. ')' → logprob: -23.125
    9. 's' → logprob: -23.125
    10. '
' → logprob: -23.25

Token 625: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004882788751274347
    2. 'no' → logprob: -6.1298828125
    3. 'ans' → logprob: -6.7548828125
    4. 'nodes' → logprob: -6.7548828125
    5. 's' → logprob: -8.8798828125
    6. ' n' → logprob: -9.5048828125
    7. 'C' → logprob: -9.7548828125
    8. '#' → logprob: -10.7548828125
    9. ' noe' → logprob: -10.8798828125
    10. 'nos' → logprob: -11.6298828125

Token 626: 'œ' (ID: 15335)
  Prédit: 'œ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'œ' → logprob: -0.0021035063546150923
    2. 'oe' → logprob: -6.627103328704834
    3. '\xc2' → logprob: -7.502103328704834
    4. '?' → logprob: -10.127103805541992
    5. '¶' → logprob: -10.252103805541992
    6. '#' → logprob: -10.752103805541992
    7. 'Œ' → logprob: -10.752103805541992
    8. '\' → logprob: -10.877103805541992
    9. 'odes' → logprob: -11.002103805541992
    10. 'e' → logprob: -11.127103805541992

Token 627: 'uds' (ID: 44387)
  Prédit: 'uds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uds' → logprob: -0.010475837625563145
    2. 'œ' → logprob: -4.7604756355285645
    3. 'e' → logprob: -6.8854756355285645
    4. 'ud' → logprob: -8.010476112365723
    5. '\xc2' → logprob: -8.010476112365723
    6. '\' → logprob: -9.510476112365723
    7. '_' → logprob: -10.885476112365723
    8. '#' → logprob: -11.635476112365723
    9. '�' → logprob: -11.760476112365723
    10. '```' → logprob: -12.010476112365723

Token 628: '
' (ID: 198)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: 0.0
    2. ' C' → logprob: -18.25
    3. '
' → logprob: -18.75
    4. '#' → logprob: -18.75
    5. '```' → logprob: -20.5
    6. 'sorted' → logprob: -20.625
    7. 'c' → logprob: -21.875
    8. 's' → logprob: -22.0
    9. '>C' → logprob: -22.0
    10. ')' → logprob: -22.25

Token 629: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: 0.0
    2. ' C' → logprob: -20.5
    3. '#' → logprob: -20.625
    4. 'sorted' → logprob: -21.25
    5. '```' → logprob: -21.625
    6. 'c' → logprob: -22.375
    7. '>C' → logprob: -22.5
    8. 'Sorted' → logprob: -23.875
    9. '	C' → logprob: -24.0
    10. '*C' → logprob: -24.375

Token 630: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0024764856789261103
    2. '.' → logprob: -6.002476692199707
    3. '=' → logprob: -14.627476692199707
    4. 'sort' → logprob: -16.00247573852539
    5. ' .' → logprob: -16.37747573852539
    6. '.s' → logprob: -16.62747573852539
    7. '.=' → logprob: -17.12747573852539
    8. ' =' → logprob: -17.25247573852539
    9. '.sorted' → logprob: -18.12747573852539
    10. '.Sort' → logprob: -18.37747573852539

Token 631: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03269246965646744
    2. '#' → logprob: -3.9076924324035645
    3. '

' → logprob: -5.6576924324035645
    4. '()' → logprob: -5.7826924324035645
    5. 'q' → logprob: -5.9076924324035645
    6. '()
' → logprob: -6.6576924324035645
    7. '()

' → logprob: -7.6576924324035645
    8. '
' → logprob: -8.157692909240723
    9. 'First' → logprob: -8.532692909240723
    10. 'for' → logprob: -8.907692909240723

Token 632: '#' (ID: 2)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1872732788324356
    2. 'ans' → logprob: -2.1872732639312744
    3. 'visited' → logprob: -3.1872732639312744
    4. '#' → logprob: -4.3122735023498535
    5. 'from' → logprob: -5.6872735023498535
    6. 'first' → logprob: -8.812273025512695
    7. 'import' → logprob: -9.187273025512695
    8. 'First' → logprob: -9.687273025512695
    9. 'idx' → logprob: -10.062273025512695
    10. 'for' → logprob: -10.187273025512695

Token 633: ' Calcul' (ID: 57243)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.44982975721359253
    2. 'ans' → logprob: -1.4498298168182373
    3. 'from' → logprob: -2.9498298168182373
    4. 'visited' → logprob: -2.9498298168182373
    5. '#' → logprob: -4.074829578399658
    6. 'import' → logprob: -5.449829578399658
    7. 'first' → logprob: -7.449829578399658
    8. 'First' → logprob: -7.824829578399658
    9. 'def' → logprob: -8.074830055236816
    10. 'idx' → logprob: -9.449830055236816

Token 634: 'er' (ID: 259)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9606441855430603
    2. 'from' → logprob: -1.460644245147705
    3. 'for' → logprob: -1.960644245147705
    4. 'q' → logprob: -2.210644245147705
    5. '=' → logprob: -3.210644245147705
    6. 'First' → logprob: -4.085644245147705
    7. 'import' → logprob: -4.335644245147705
    8. ' =' → logprob: -4.585644245147705
    9. 'max' → logprob: -5.085644245147705
    10. 'u' → logprob: -5.585644245147705

Token 635: ' la' (ID: 557)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.1156761646270752
    2. 'max' → logprob: -1.6156761646270752
    3. 'sum' → logprob: -1.7406761646270752
    4. 'val' → logprob: -2.615676164627075
    5. 'm' → logprob: -3.490676164627075
    6. 'res' → logprob: -3.490676164627075
    7. 'mid' → logprob: -3.615676164627075
    8. 'result' → logprob: -4.365675926208496
    9. 's' → logprob: -4.615675926208496
    10. 'ans' → logprob: -4.615675926208496

Token 636: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.5268398523330688
    2. 's' → logprob: -1.6518398523330688
    3. 'total' → logprob: -1.7768398523330688
    4. 'max' → logprob: -1.7768398523330688
    5. 'result' → logprob: -2.6518397331237793
    6. 'm' → logprob: -2.7768397331237793
    7. 'res' → logprob: -3.2768397331237793
    8. 'maximum' → logprob: -3.7768397331237793
    9. 'som' → logprob: -4.151839733123779
    10. 'answer' → logprob: -4.401839733123779

Token 637: ' maximale' (ID: 76380)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.42733144760131836
    2. 'sum' → logprob: -1.1773314476013184
    3. 's' → logprob: -4.052331447601318
    4. 'result' → logprob: -4.802331447601318
    5. 'ans' → logprob: -5.052331447601318
    6. 'res' → logprob: -5.927331447601318
    7. 'S' → logprob: -6.802331447601318
    8. '=' → logprob: -6.802331447601318
    9. 'answer' → logprob: -7.177331447601318
    10. 'C' → logprob: -7.177331447601318

Token 638: ' possible' (ID: 4149)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7121809124946594
    2. 'sum' → logprob: -0.9621809124946594
    3. 'ans' → logprob: -3.0871808528900146
    4. '=' → logprob: -3.4621808528900146
    5. 'total' → logprob: -4.587181091308594
    6. 'res' → logprob: -4.837181091308594
    7. 'result' → logprob: -4.962181091308594
    8. ' =' → logprob: -5.087181091308594
    9. 'answer' → logprob: -5.087181091308594
    10. 'print' → logprob: -5.962181091308594

Token 639: ' en' (ID: 469)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5395638346672058
    2. '=' → logprob: -1.4145638942718506
    3. 'sum' → logprob: -2.5395638942718506
    4. ' =' → logprob: -2.6645638942718506
    5. '=sum' → logprob: -4.9145636558532715
    6. 'ans' → logprob: -5.6645636558532715
    7. 'total' → logprob: -5.7895636558532715
    8. 'result' → logprob: -5.9145636558532715
    9. 'answer' → logprob: -6.0395636558532715
    10. 's' → logprob: -6.1645636558532715

Token 640: ' addition' (ID: 5856)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.09092774987220764
    2. 'edges' → logprob: -2.840927839279175
    3. 's' → logprob: -4.590927600860596
    4. 'assign' → logprob: -4.715927600860596
    5. 'multip' → logprob: -6.090927600860596
    6. 'ans' → logprob: -6.340927600860596
    7. '0' → logprob: -6.590927600860596
    8. 'range' → logprob: -6.965927600860596
    9. 'C' → logprob: -7.465927600860596
    10. 'placing' → logprob: -7.590927600860596

Token 641: 'nant' (ID: 48648)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0145177841186523
    2. 'max' → logprob: -1.1395177841186523
    3. '=sum' → logprob: -2.7645177841186523
    4. ' =' → logprob: -2.8895177841186523
    5. '(max' → logprob: -3.2645177841186523
    6. '_max' → logprob: -3.3895177841186523
    7. '=max' → logprob: -3.6395177841186523
    8. 'nant' → logprob: -3.6395177841186523
    9. 'sum' → logprob: -4.264517784118652
    10. '_' → logprob: -4.514517784118652

Token 642: ' toutes' (ID: 17502)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.16365057229995728
    2. 'sum' → logprob: -2.0386505126953125
    3. 'edges' → logprob: -4.1636505126953125
    4. ' C' → logprob: -6.1636505126953125
    5. ' sum' → logprob: -6.1636505126953125
    6. ' edges' → logprob: -7.1636505126953125
    7. '(sum' → logprob: -9.038650512695312
    8. 's' → logprob: -10.663650512695312
    9. '(edges' → logprob: -11.038650512695312
    10. 'len' → logprob: -11.413650512695312

Token 643: ' les' (ID: 1341)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.020849227905273438
    2. 'C' → logprob: -3.8958492279052734
    3. '[C' → logprob: -9.145849227905273
    4. '(' → logprob: -9.895849227905273
    5. 'les' → logprob: -10.645849227905273
    6. ' C' → logprob: -10.770849227905273
    7. '(c' → logprob: -11.145849227905273
    8. '([' → logprob: -11.145849227905273
    9. '(len' → logprob: -11.520849227905273
    10. 'len' → logprob: -11.520849227905273

Token 644: ' valeurs' (ID: 73668)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.035737305879592896
    2. 'val' → logprob: -3.9107372760772705
    3. 'values' → logprob: -5.28573751449585
    4. 'edges' → logprob: -5.78573751449585
    5. 'elements' → logprob: -5.91073751449585
    6. 'E' → logprob: -6.41073751449585
    7. 'c' → logprob: -7.16073751449585
    8. 'vals' → logprob: -8.410737037658691
    9. 'len' → logprob: -8.535737037658691
    10. ' C' → logprob: -8.910737037658691

Token 645: ' de' (ID: 334)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.043910130858421326
    2. '=' → logprob: -3.668910026550293
    3. ' =' → logprob: -4.543910026550293
    4. '(C' → logprob: -5.543910026550293
    5. '=C' → logprob: -7.168910026550293
    6. 'max' → logprob: -7.668910026550293
    7. 'ans' → logprob: -7.918910026550293
    8. '+=' → logprob: -8.543910026550293
    9. 's' → logprob: -8.668910026550293
    10. 'de' → logprob: -8.918910026550293

Token 646: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00020854694594163448
    2. 'E' → logprob: -8.500208854675293
    3. ' C' → logprob: -12.375208854675293
    4. '[C' → logprob: -15.625208854675293
    5. 'l' → logprob: -16.250207901000977
    6. '
' → logprob: -16.500207901000977
    7. 'la' → logprob: -16.500207901000977
    8. '[' → logprob: -16.750207901000977
    9. 'c' → logprob: -17.125207901000977
    10. '(C' → logprob: -17.250207901000977

Token 647: ' sauf' (ID: 87919)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04479160159826279
    2. 'total' → logprob: -3.2947916984558105
    3. 'sum' → logprob: -5.2947916984558105
    4. 'result' → logprob: -7.2947916984558105
    5. 'maximum' → logprob: -7.6697916984558105
    6. 's' → logprob: -8.419791221618652
    7. 'ans' → logprob: -8.794791221618652
    8. 'answer' → logprob: -9.294791221618652
    9. 'res' → logprob: -9.669791221618652
    10. 'S' → logprob: -10.669791221618652

Token 648: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5839366316795349
    2. ' la' → logprob: -1.4589366912841797
    3. 'C' → logprob: -1.7089366912841797
    4. ' C' → logprob: -3.7089366912841797
    5. 'le' → logprob: -6.20893669128418
    6. 'celle' → logprob: -7.33393669128418
    7. ' celle' → logprob: -7.33393669128418
    8. 'une' → logprob: -8.33393669128418
    9. 'l' → logprob: -8.33393669128418
    10. ' le' → logprob: -8.95893669128418

Token 649: ' plus' (ID: 2932)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010597458109259605
    2. '[' → logprob: -4.635597229003906
    3. 'prem' → logprob: -8.385597229003906
    4. 'first' → logprob: -8.635597229003906
    5. '[-' → logprob: -8.885597229003906
    6. 'dern' → logprob: -9.260597229003906
    7. 'C' → logprob: -10.010597229003906
    8. ' ' → logprob: -10.260597229003906
    9. 'last' → logprob: -10.760597229003906
    10. 'm' → logprob: -11.385597229003906

Token 650: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.001421187655068934
    2. 'grand' → logprob: -7.751420974731445
    3. 'é' → logprob: -7.876420974731445
    4. 'pet' → logprob: -8.376420974731445
    5. 'import' → logprob: -9.001420974731445
    6. 'g' → logprob: -9.626420974731445
    7. '```' → logprob: -9.751420974731445
    8. ' grande' → logprob: -10.251420974731445
    9. 'gran' → logprob: -10.876420974731445
    10. '[' → logprob: -11.126420974731445

Token 651: '
' (ID: 198)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.2236819565296173
    2. 'max' → logprob: -1.723681926727295
    3. 'total' → logprob: -4.223681926727295
    4. 'ans' → logprob: -5.973681926727295
    5. 's' → logprob: -6.348681926727295
    6. 'result' → logprob: -6.848681926727295
    7. 'answer' → logprob: -7.098681926727295
    8. 'res' → logprob: -7.348681926727295
    9. 'print' → logprob: -8.473682403564453
    10. ' sum' → logprob: -9.848682403564453

Token 652: '#' (ID: 2)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4735778272151947
    2. 'sum' → logprob: -1.223577857017517
    3. 'total' → logprob: -2.5985777378082275
    4. 's' → logprob: -5.723577976226807
    5. 'res' → logprob: -6.098577976226807
    6. 'result' → logprob: -6.848577976226807
    7. 'ans' → logprob: -7.223577976226807
    8. 'answer' → logprob: -7.598577976226807
    9. 'print' → logprob: -7.973577976226807
    10. 'maximum' → logprob: -8.598577499389648

Token 653: ' Ceci' (ID: 144699)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.264524906873703
    2. 'sum' → logprob: -2.0145249366760254
    3. 'total' → logprob: -3.5145249366760254
    4. 's' → logprob: -4.014524936676025
    5. 'res' → logprob: -4.264524936676025
    6. 'answer' → logprob: -4.389524936676025
    7. 'ans' → logprob: -4.639524936676025
    8. 'result' → logprob: -4.889524936676025
    9. 'print' → logprob: -5.764524936676025
    10. 'S' → logprob: -6.514524936676025

Token 654: ' est' (ID: 893)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6461562514305115
    2. '_max' → logprob: -2.1461563110351562
    3. '_sum' → logprob: -2.1461563110351562
    4. 'sum' → logprob: -2.5211563110351562
    5. 'ans' → logprob: -3.0211563110351562
    6. '_ans' → logprob: -3.6461563110351562
    7. ' =' → logprob: -3.8961563110351562
    8. 's' → logprob: -4.021156311035156
    9. '_total' → logprob: -4.646156311035156
    10. 'total' → logprob: -5.021156311035156

Token 655: ' obtenu' (ID: 117330)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3586846888065338
    2. ' sum' → logprob: -1.2336846590042114
    3. 'C' → logprob: -4.858684539794922
    4. ' C' → logprob: -6.358684539794922
    5. 'max' → logprob: -8.233684539794922
    6. '=sum' → logprob: -8.983684539794922
    7. ' ' → logprob: -9.233684539794922
    8. '(sum' → logprob: -10.233684539794922
    9. ' max' → logprob: -10.733684539794922
    10. '   ' → logprob: -10.733684539794922

Token 656: ' en' (ID: 469)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.15914316475391388
    2. '=sum' → logprob: -3.1591432094573975
    3. ' =' → logprob: -3.4091432094573975
    4. '=' → logprob: -3.6591432094573975
    5. ' sum' → logprob: -3.7841432094573975
    6. '(sum' → logprob: -4.284142971038818
    7. 's' → logprob: -4.909142971038818
    8. '_sum' → logprob: -7.034142971038818
    9. ' par' → logprob: -8.409143447875977
    10. 'val' → logprob: -8.659143447875977

Token 657: ' faisant' (ID: 67003)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.006817077286541462
    2. ' sum' → logprob: -5.006816864013672
    3. 's' → logprob: -9.506816864013672
    4. '(sum' → logprob: -10.881816864013672
    5. '=sum' → logprob: -13.131816864013672
    6. 'C' → logprob: -13.631816864013672
    7. 'su' → logprob: -14.131816864013672
    8. '```' → logprob: -14.256816864013672
    9. 'summ' → logprob: -14.381816864013672
    10. ',sum' → logprob: -14.631816864013672

Token 658: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.012523548677563667
    2. ' sum' → logprob: -4.387523651123047
    3. '(sum' → logprob: -12.262523651123047
    4. ' ' → logprob: -12.762523651123047
    5. 'su' → logprob: -13.137523651123047
    6. '	sum' → logprob: -13.512523651123047
    7. 's' → logprob: -13.887523651123047
    8. '```' → logprob: -14.762523651123047
    9. '=sum' → logprob: -14.762523651123047
    10. 'max' → logprob: -15.012523651123047

Token 659: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.0001005630983854644
    2. 'C' → logprob: -9.250100135803223
    3. '(' → logprob: -12.875100135803223
    4. '(sum' → logprob: -14.125100135803223
    5. 'sum' → logprob: -15.125100135803223
    6. '(len' → logprob: -15.375100135803223
    7. '(
' → logprob: -15.875100135803223
    8. '=C' → logprob: -16.00010108947754
    9. 'len' → logprob: -16.37510108947754
    10. '(c' → logprob: -16.62510108947754

Token 660: ')' (ID: 8)
  Prédit: '[:-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.009097971022129059
    2. ')' → logprob: -4.759098052978516
    3. '[' → logprob: -7.759098052978516
    4. '[:' → logprob: -9.884098052978516
    5. ')-' → logprob: -12.259098052978516
    6. '()' → logprob: -15.759098052978516
    7. '[-' → logprob: -16.009098052978516
    8. '   ' → logprob: -16.259098052978516
    9. '[:]' → logprob: -16.259098052978516
    10. '(' → logprob: -16.384098052978516

Token 661: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7237058877944946
    2. ' -' → logprob: -1.3487058877944946
    3. '[:-' → logprob: -1.4737058877944946
    4. ')' → logprob: -4.223705768585205
    5. '[' → logprob: -4.723705768585205
    6. '()' → logprob: -6.848705768585205
    7. ' ' → logprob: -7.098705768585205
    8. '(' → logprob: -7.848705768585205
    9. '```' → logprob: -8.848706245422363
    10. '
' → logprob: -8.973706245422363

Token 662: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0051835933700203896
    2. 'max' → logprob: -5.380183696746826
    3. ' C' → logprob: -7.505183696746826
    4. ' max' → logprob: -11.380183219909668
    5. '   ' → logprob: -14.130183219909668
    6. ' ' → logprob: -15.005183219909668
    7. '1' → logprob: -15.255183219909668
    8. 'min' → logprob: -15.880183219909668
    9. '	C' → logprob: -17.130184173583984
    10. '(max' → logprob: -17.380184173583984

Token 663: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.0206720617134124e-05
    2. '[' → logprob: -11.50001049041748
    3. '[
' → logprob: -19.000009536743164
    4. ' [-' → logprob: -19.250009536743164
    5. '0' → logprob: -20.875009536743164
    6. '[len' → logprob: -21.250009536743164
    7. '
' → logprob: -21.375009536743164
    8. '[:-' → logprob: -21.875009536743164
    9. '-' → logprob: -22.750009536743164
    10. '1' → logprob: -22.750009536743164

Token 664: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5954712075181305e-05
    2. '2' → logprob: -10.250036239624023
    3. ' ' → logprob: -14.750036239624023
    4. '```' → logprob: -16.625036239624023
    5. '   ' → logprob: -16.875036239624023
    6. '
' → logprob: -17.437536239624023
    7. '１' → logprob: -17.437536239624023
    8. '

' → logprob: -18.562536239624023
    9. '``' → logprob: -18.625036239624023
    10. '3' → logprob: -18.687536239624023

Token 665: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00046033994294703007
    2. ' )' → logprob: -8.125460624694824
    3. '[' → logprob: -9.000460624694824
    4. '#' → logprob: -11.500460624694824
    5. '])' → logprob: -11.500460624694824
    6. ')#' → logprob: -12.125460624694824
    7. ']' → logprob: -12.500460624694824
    8. ')
' → logprob: -12.750460624694824
    9. '))' → logprob: -13.000460624694824
    10. ').' → logprob: -13.750460624694824

Token 666: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12985821068286896
    2. 'total' → logprob: -3.0048582553863525
    3. 'sum' → logprob: -3.2548582553863525
    4. 'result' → logprob: -4.504858016967773
    5. 'res' → logprob: -4.754858016967773
    6. 'ans' → logprob: -5.379858016967773
    7. 'answer' → logprob: -5.754858016967773
    8. 'maximum' → logprob: -6.254858016967773
    9. 'S' → logprob: -6.629858016967773
    10. 's' → logprob: -6.629858016967773

Token 667: ' =' (ID: 314)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.11075732111930847
    2. '_' → logprob: -2.860757350921631
    3. '_val' → logprob: -3.610757350921631
    4. '_value' → logprob: -4.235757350921631
    5. 'sum' → logprob: -5.985757350921631
    6. '_max' → logprob: -6.485757350921631
    7. '_score' → logprob: -7.735757350921631
    8. ' =' → logprob: -7.860757350921631
    9. '_s' → logprob: -8.360756874084473
    10. '=' → logprob: -8.485756874084473

Token 668: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.3868723213672638
    2. 'sum' → logprob: -1.1368722915649414
    3. '(sum' → logprob: -14.136872291564941
    4. ' ' → logprob: -15.136872291564941
    5. ' ' → logprob: -15.386872291564941
    6. '	sum' → logprob: -16.761873245239258
    7. '_sum' → logprob: -17.886873245239258
    8. 'max' → logprob: -17.886873245239258
    9. '=sum' → logprob: -18.261873245239258
    10. '0' → logprob: -18.386873245239258

Token 669: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.061970487236976624
    2. '(' → logprob: -2.8119704723358154
    3. '(
' → logprob: -13.311970710754395
    4. ' (' → logprob: -15.311970710754395
    5. '(

' → logprob: -15.561970710754395
    6. 'C' → logprob: -15.811970710754395
    7. '(c' → logprob: -16.061969757080078
    8. '(max' → logprob: -16.311969757080078
    9. ')' → logprob: -16.561969757080078
    10. '()' → logprob: -16.561969757080078

Token 670: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016605432610958815
    2. '-' → logprob: -6.751660346984863
    3. '[:-' → logprob: -8.251660346984863
    4. ' -' → logprob: -9.126660346984863
    5. ' )' → logprob: -9.626660346984863
    6. '[' → logprob: -10.626660346984863
    7. ')-' → logprob: -10.751660346984863
    8. ' ' → logprob: -12.126660346984863
    9. ']' → logprob: -13.876660346984863
    10. ')
' → logprob: -14.876660346984863

Token 671: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759581923484802
    2. ' -' → logprob: -0.8259581923484802
    3. ' ' → logprob: -11.575958251953125
    4. ' ' → logprob: -12.200958251953125
    5. '-C' → logprob: -13.075958251953125
    6. '-
' → logprob: -14.825958251953125
    7. ' -
' → logprob: -14.825958251953125
    8. ')' → logprob: -15.450958251953125
    9. '
' → logprob: -15.575958251953125
    10. '_' → logprob: -15.950958251953125

Token 672: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0009114635176956654
    2. ' C' → logprob: -7.000911235809326
    3. ' ' → logprob: -20.000911712646484
    4. 'c' → logprob: -21.500911712646484
    5. '	C' → logprob: -22.000911712646484
    6. '1' → logprob: -22.000911712646484
    7. ' ' → logprob: -22.375911712646484
    8. '   ' → logprob: -23.375911712646484
    9. '>C' → logprob: -23.625911712646484
    10. '.C' → logprob: -24.125911712646484

Token 673: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -5.2762428822461516e-05
    2. '[' → logprob: -9.875052452087402
    3. '-' → logprob: -14.250052452087402
    4. '[
' → logprob: -15.250052452087402
    5. ' [-' → logprob: -15.500052452087402
    6. '[:-' → logprob: -17.00005340576172
    7. '[len' → logprob: -18.12505340576172
    8. ' ' → logprob: -18.25005340576172
    9. '][-' → logprob: -18.50005340576172
    10. '1' → logprob: -18.62505340576172

Token 674: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.750001907348633
    3. '```' → logprob: -14.875001907348633
    4. '   ' → logprob: -15.937501907348633
    5. '
' → logprob: -16.562501907348633
    6. '2' → logprob: -16.562501907348633
    7. ']' → logprob: -17.500001907348633
    8. '１' → logprob: -17.625001907348633
    9. '#' → logprob: -17.625001907348633
    10. '-' → logprob: -17.875001907348633

Token 675: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012737659562844783
    2. '<|end|>' → logprob: -9.250127792358398
    3. ' )' → logprob: -11.375127792358398
    4. '+' → logprob: -11.625127792358398
    5. '#' → logprob: -12.125127792358398
    6. ')
' → logprob: -13.375127792358398
    7. ')#' → logprob: -13.625127792358398
    8. ']' → logprob: -14.750127792358398
    9. ').' → logprob: -14.875127792358398
    10. '<|end|>' → logprob: -15.250127792358398

Token 676: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25466546416282654
    2. 'visited' → logprob: -2.6296653747558594
    3. 'ans' → logprob: -2.7546653747558594
    4. 'q' → logprob: -2.7546653747558594
    5. '#' → logprob: -4.129665374755859
    6. 'for' → logprob: -5.379665374755859
    7. 'max' → logprob: -6.504665374755859
    8. 'First' → logprob: -7.129665374755859
    9. 'from' → logprob: -7.379665374755859
    10. 'first' → logprob: -7.379665374755859

Token 677: ' Ajouter' (ID: 165754)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11170756071805954
    2. 'ans' → logprob: -2.3617074489593506
    3. 'q' → logprob: -5.11170768737793
    4. 'from' → logprob: -6.11170768737793
    5. 'visited' → logprob: -6.11170768737793
    6. '#' → logprob: -7.61170768737793
    7. 'import' → logprob: -8.73670768737793
    8. 'def' → logprob: -9.11170768737793
    9. 'for' → logprob: -9.86170768737793
    10. 'First' → logprob: -9.86170768737793

Token 678: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0302644744515419
    2. 'ans' → logprob: -4.155264377593994
    3. 'max' → logprob: -5.405264377593994
    4. 'First' → logprob: -5.655264377593994
    5. ' print' → logprob: -6.780264377593994
    6. ' ans' → logprob: -7.280264377593994
    7. '(ans' → logprob: -7.530264377593994
    8. 'C' → logprob: -7.655264377593994
    9. ' First' → logprob: -7.655264377593994
    10. '1' → logprob: -7.780264377593994

Token 679: ' n' (ID: 297)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6177043318748474
    2. 'First' → logprob: -1.7427043914794922
    3. ' First' → logprob: -2.742704391479492
    4. '"' → logprob: -3.117704391479492
    5. 'C' → logprob: -3.492704391479492
    6. ' ' → logprob: -3.742704391479492
    7. 'r' → logprob: -4.117704391479492
    8. 'f' → logprob: -4.492704391479492
    9. 'max' → logprob: -4.492704391479492
    10. 'first' → logprob: -4.867704391479492

Token 680: 'œ' (ID: 15335)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.745541512966156
    2. 'e' → logprob: -1.7455415725708008
    3. 'w' → logprob: -1.9955415725708008
    4. 'print' → logprob: -2.120541572570801
    5. '#' → logprob: -3.995541572570801
    6. 'ext' → logprob: -3.995541572570801
    7. 'n' → logprob: -4.120541572570801
    8. 'ans' → logprob: -4.745541572570801
    9. 'a' → logprob: -5.120541572570801
    10. 'max' → logprob: -5.245541572570801

Token 681: 'ud' (ID: 527)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.1797209084033966
    2. 'u' → logprob: -2.679720878601074
    3. '_' → logprob: -3.304720878601074
    4. 'o' → logprob: -3.304720878601074
    5. ' First' → logprob: -4.679720878601074
    6. 'First' → logprob: -5.929720878601074
    7. 'e' → logprob: -6.054720878601074
    8. '_first' → logprob: -6.429720878601074
    9. '.' → logprob: -6.804720878601074
    10. '0' → logprob: -6.929720878601074

Token 682: ' First' (ID: 8338)
  Prédit: 'First'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.21875126659870148
    2. ' First' → logprob: -1.843751311302185
    3. '[' → logprob: -4.968751430511475
    4. 'print' → logprob: -5.093751430511475
    5. ' ' → logprob: -5.468751430511475
    6. '"' → logprob: -5.468751430511475
    7. '(' → logprob: -6.468751430511475
    8. 's' → logprob: -6.843751430511475
    9. ' ans' → logprob: -6.843751430511475
    10. ',' → logprob: -6.968751430511475

Token 683: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12476308643817902
    2. ']' → logprob: -3.374763011932373
    3. ' ' → logprob: -4.249763011932373
    4. 'First' → logprob: -4.249763011932373
    5. ')' → logprob: -4.874763011932373
    6. 'to' → logprob: -5.124763011932373
    7. '<|end|>' → logprob: -5.624763011932373
    8. 'C' → logprob: -5.874763011932373
    9. 'max' → logprob: -5.999763011932373
    10. 'for' → logprob: -5.999763011932373

Token 684: ' la' (ID: 557)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.15310683415737e-05
    2. ' q' → logprob: -10.750021934509277
    3. '	q' → logprob: -17.62502098083496
    4. 'the' → logprob: -19.50002098083496
    5. '   ' → logprob: -19.75002098083496
    6. '[q' → logprob: -20.37502098083496
    7. ''q' → logprob: -20.37502098083496
    8. 'que' → logprob: -21.12502098083496
    9. ' the' → logprob: -21.25002098083496
    10. 'c' → logprob: -21.37502098083496

Token 685: ' file' (ID: 1974)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0007375618442893028
    2. 'queue' → logprob: -7.25073766708374
    3. 'file' → logprob: -11.625737190246582
    4. 'deque' → logprob: -11.625737190246582
    5. ' q' → logprob: -12.375737190246582
    6. 'que' → logprob: -12.875737190246582
    7. ' queue' → logprob: -14.500737190246582
    8. 'c' → logprob: -14.625737190246582
    9. '```' → logprob: -14.750737190246582
    10. '
' → logprob: -15.500737190246582

Token 686: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03620292991399765
    2. '(q' → logprob: -3.411202907562256
    3. '.append' → logprob: -6.661202907562256
    4. '(' → logprob: -6.786202907562256
    5. '.q' → logprob: -9.661203384399414
    6. '(
' → logprob: -10.786203384399414
    7. ' q' → logprob: -10.911203384399414
    8. '.' → logprob: -11.036203384399414
    9. 'append' → logprob: -11.286203384399414
    10. '([' → logprob: -13.036203384399414

Token 687: ' pour' (ID: 1930)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4222683310508728
    2. '.append' → logprob: -1.1722683906555176
    3. '.q' → logprob: -3.9222683906555176
    4. '.' → logprob: -4.297268390655518
    5. '(q' → logprob: -7.172268390655518
    6. '.
' → logprob: -8.79726791381836
    7. '[q' → logprob: -9.04726791381836
    8. 'append' → logprob: -9.29726791381836
    9. ' q' → logprob: -9.42226791381836
    10. '.push' → logprob: -9.79726791381836

Token 688: ' début' (ID: 29589)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.005824160296469927
    2. ' q' → logprob: -5.255824089050293
    3. 'visited' → logprob: -7.630824089050293
    4. ' commencer' → logprob: -10.505824089050293
    5. 'que' → logprob: -11.255824089050293
    6. 'deque' → logprob: -11.255824089050293
    7. '	q' → logprob: -11.630824089050293
    8. 'start' → logprob: -11.880824089050293
    9. 'vis' → logprob: -11.880824089050293
    10. ' visiter' → logprob: -12.005824089050293

Token 689: 'er' (ID: 259)
  Prédit: 'ner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.8814632296562195
    2. 'r' → logprob: -1.5064632892608643
    3. 'er' → logprob: -2.0064632892608643
    4. '.append' → logprob: -2.2564632892608643
    5. 'nner' → logprob: -3.1314632892608643
    6. 're' → logprob: -4.381463050842285
    7. 'append' → logprob: -4.506463050842285
    8. 'q' → logprob: -4.506463050842285
    9. 'la' → logprob: -5.256463050842285
    10. 'le' → logprob: -5.506463050842285

Token 690: ' le' (ID: 505)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0005155019462108612
    2. ' q' → logprob: -8.500515937805176
    3. '(q' → logprob: -8.750515937805176
    4. '(' → logprob: -8.875515937805176
    5. '.append' → logprob: -12.125515937805176
    6. '([' → logprob: -12.750515937805176
    7. '[' → logprob: -13.000515937805176
    8. '[q' → logprob: -14.125515937805176
    9. ' (' → logprob: -14.500515937805176
    10. ')' → logprob: -14.875515937805176

Token 691: ' parcours' (ID: 62625)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.01724100112915039
    2. 'par' → logprob: -4.51724100112915
    3. 'B' → logprob: -6.01724100112915
    4. 'b' → logprob: -6.64224100112915
    5. ' parcours' → logprob: -6.64224100112915
    6. ' q' → logprob: -7.14224100112915
    7. ' BFS' → logprob: -9.267240524291992
    8. 'deque' → logprob: -9.392240524291992
    9. 'queue' → logprob: -10.642240524291992
    10. 'que' → logprob: -10.892240524291992

Token 692: '
' (ID: 198)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4214925169944763
    2. '.append' → logprob: -1.171492576599121
    3. '.' → logprob: -4.296492576599121
    4. '(q' → logprob: -4.296492576599121
    5. '.q' → logprob: -5.171492576599121
    6. '(' → logprob: -7.046492576599121
    7. 'append' → logprob: -9.046492576599121
    8. '.push' → logprob: -10.296492576599121
    9. ' q' → logprob: -10.546492576599121
    10. '[q' → logprob: -10.796492576599121

Token 693: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.128163257315464e-07
    2. ' q' → logprob: -15.375
    3. '[q' → logprob: -22.25
    4. '	q' → logprob: -22.375
    5. '.q' → logprob: -22.625
    6. '
' → logprob: -23.75
    7. '(q' → logprob: -23.875
    8. '```' → logprob: -24.25
    9. 'queue' → logprob: -24.875
    10. '[' → logprob: -25.125

Token 694: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.7729658540920354e-05
    2. '.' → logprob: -10.500027656555176
    3. '.app' → logprob: -16.250028610229492
    4. '.ap' → logprob: -16.625028610229492
    5. 'append' → logprob: -18.500028610229492
    6. '.insert' → logprob: -18.625028610229492
    7. '.push' → logprob: -19.250028610229492
    8. '.extend' → logprob: -20.125028610229492
    9. '.enqueue' → logprob: -20.375028610229492
    10. ' .' → logprob: -20.875028610229492

Token 695: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '((' → logprob: -18.125
    3. '(first' → logprob: -18.25
    4. '(
' → logprob: -18.375
    5. 'First' → logprob: -19.125
    6. ' (' → logprob: -19.125
    7. '(F' → logprob: -22.0
    8. '(

' → logprob: -22.5
    9. '(
' → logprob: -23.25
    10. '	' → logprob: -23.25

Token 696: 'First' (ID: 7127)
  Prédit: 'First'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'First' → logprob: 0.0
    2. ' First' → logprob: -18.5
    3. '(' → logprob: -23.0
    4. 'first' → logprob: -23.5
    5. 'F' → logprob: -24.625
    6. '   ' → logprob: -25.25
    7. '_First' → logprob: -25.25
    8. '.First' → logprob: -25.5
    9. '_first' → logprob: -25.625
    10. 'FIRST' → logprob: -25.75

Token 697: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5094070477061905e-05
    2. ')
' → logprob: -11.250015258789062
    3. ' )' → logprob: -13.750015258789062
    4. ')#' → logprob: -15.000015258789062
    5. ')

' → logprob: -15.875015258789062
    6. ')
' → logprob: -16.000015258789062
    7. '#' → logprob: -16.125015258789062
    8. '))' → logprob: -16.125015258789062
    9. '),' → logprob: -17.750015258789062
    10. ']' → logprob: -17.875015258789062

Token 698: '#' (ID: 2)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0003074566484428942
    2. 'ans' → logprob: -8.125307083129883
    3. 'while' → logprob: -11.875307083129883
    4. ' visited' → logprob: -12.875307083129883
    5. 'idx' → logprob: -13.875307083129883
    6. '```' → logprob: -14.500307083129883
    7. '#' → logprob: -15.750307083129883
    8. 'index' → logprob: -16.000307083129883
    9. 'answers' → logprob: -16.875307083129883
    10. 'Visited' → logprob: -17.125307083129883

Token 699: ' Bou' (ID: 33816)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0010768724605441093
    2. 'ans' → logprob: -6.876076698303223
    3. 'while' → logprob: -10.376076698303223
    4. 'idx' → logprob: -11.626076698303223
    5. ' visited' → logprob: -14.001076698303223
    6. 'index' → logprob: -14.126076698303223
    7. '#' → logprob: -14.126076698303223
    8. 'pos' → logprob: -14.876076698303223
    9. 'first' → logprob: -15.376076698303223
    10. 'import' → logprob: -15.376076698303223

Token 700: 'cle' (ID: 3170)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8121941089630127
    2. 'ile' → logprob: -1.5621941089630127
    3. 'hile' → logprob: -1.9371941089630127
    4. 'visited' → logprob: -2.1871941089630127
    5. 'ck' → logprob: -3.4371941089630127
    6. 'r' → logprob: -4.312193870544434
    7. 'e' → logprob: -4.562193870544434
    8. '   ' → logprob: -5.062193870544434
    9. '
' → logprob: -5.312193870544434
    10. 'space' → logprob: -6.062193870544434

Token 701: ' pour' (ID: 1930)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.481533408164978
    2. ':' → logprob: -1.106533408164978
    3. ' while' → logprob: -2.9815335273742676
    4. 'for' → logprob: -8.23153305053711
    5. '   ' → logprob: -9.23153305053711
    6. ' :' → logprob: -9.60653305053711
    7. '=' → logprob: -9.85653305053711
    8. '.' → logprob: -9.98153305053711
    9. '	while' → logprob: -10.35653305053711
    10. ':
' → logprob: -10.35653305053711

Token 702: ' parcour' (ID: 130642)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.47439321875572205
    2. 'visited' → logprob: -0.9743932485580444
    3. 'len' → logprob: -8.599392890930176
    4. ' while' → logprob: -9.599392890930176
    5. ' visited' → logprob: -10.349392890930176
    6. '
' → logprob: -11.224392890930176
    7. 'q' → logprob: -11.599392890930176
    8. '   ' → logprob: -13.099392890930176
    9. 'ans' → logprob: -13.974392890930176
    10. '```' → logprob: -14.099392890930176

Token 703: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0018252426525577903
    2. 'ue' → logprob: -7.251825332641602
    3. 'er' → logprob: -7.626825332641602
    4. 'u' → logprob: -8.126825332641602
    5. '#' → logprob: -9.626825332641602
    6. 'e' → logprob: -9.876825332641602
    7. '(C' → logprob: -10.126825332641602
    8. 'uer' → logprob: -10.376825332641602
    9. 'eur' → logprob: -10.626825332641602
    10. 'ur' → logprob: -10.626825332641602

Token 704: ' l' (ID: 305)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.09466827660799026
    2. 'while' → logprob: -2.469668388366699
    3. 'len' → logprob: -5.344668388366699
    4. ' while' → logprob: -7.594668388366699
    5. ' q' → logprob: -9.0946683883667
    6. ':' → logprob: -9.4696683883667
    7. ')' → logprob: -9.8446683883667
    8. '   ' → logprob: -9.9696683883667
    9. 'visited' → logprob: -10.5946683883667
    10. '(len' → logprob: -11.3446683883667

Token 705: ''ensemble' (ID: 79341)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0010580566013231874
    2. ' q' → logprob: -7.501058101654053
    3. 'while' → logprob: -8.251057624816895
    4. 'range' → logprob: -9.501057624816895
    5. 'not' → logprob: -10.126057624816895
    6. 'len' → logprob: -10.501057624816895
    7. '(q' → logprob: -10.501057624816895
    8. ' while' → logprob: -10.751057624816895
    9. ' not' → logprob: -11.251057624816895
    10. '   ' → logprob: -11.626057624816895

Token 706: ' des' (ID: 731)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3168189823627472
    2. 'q' → logprob: -1.4418189525604248
    3. ' while' → logprob: -3.441818952560425
    4. ' q' → logprob: -6.316819190979004
    5. 'len' → logprob: -7.941819190979004
    6. '(q' → logprob: -8.441819190979004
    7. 'for' → logprob: -9.191819190979004
    8. ':' → logprob: -9.441819190979004
    9. '   ' → logprob: -9.566819190979004
    10. 'E' → logprob: -9.566819190979004

Token 707: ' n' (ID: 297)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.006854369770735502
    2. 'visited' → logprob: -5.38185453414917
    3. 'while' → logprob: -6.13185453414917
    4. 'E' → logprob: -11.506854057312012
    5. 'nodes' → logprob: -11.881854057312012
    6. '```' → logprob: -11.881854057312012
    7. 'First' → logprob: -11.881854057312012
    8. '#' → logprob: -12.381854057312012
    9. 'queue' → logprob: -12.381854057312012
    10. ')' → logprob: -12.881854057312012

Token 708: 'œ' (ID: 15335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1268494725227356
    2. 'odes' → logprob: -2.251849412918091
    3. 'visited' → logprob: -4.87684965133667
    4. 'range' → logprob: -5.62684965133667
    5. 'while' → logprob: -7.62684965133667
    6. 'ode' → logprob: -7.75184965133667
    7. '```' → logprob: -8.126849174499512
    8. 'e' → logprob: -8.501849174499512
    9. 'queue' → logprob: -8.501849174499512
    10. 'E' → logprob: -9.001849174499512

Token 709: 'uds' (ID: 44387)
  Prédit: 'uds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uds' → logprob: -0.008026995696127415
    2. 'ud' → logprob: -5.383027076721191
    3. 'œ' → logprob: -5.883027076721191
    4. '\xc2' → logprob: -9.133027076721191
    5. '#' → logprob: -9.258027076721191
    6. '```' → logprob: -9.383027076721191
    7. 'e' → logprob: -9.508027076721191
    8. 's' → logprob: -9.883027076721191
    9. 'ds' → logprob: -10.258027076721191
    10. ' uds' → logprob: -10.633027076721191

Token 710: ' de' (ID: 334)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0003362966235727072
    2. ' while' → logprob: -8.000336647033691
    3. 'wh' → logprob: -15.000336647033691
    4. '
' → logprob: -15.625336647033691
    5. '	while' → logprob: -15.875336647033691
    6. ',' → logprob: -16.125335693359375
    7. 'While' → logprob: -17.375335693359375
    8. ':' → logprob: -17.375335693359375
    9. 'for' → logprob: -17.500335693359375
    10. '.' → logprob: -17.875335693359375

Token 711: ' ' (ID: 220)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00012570773833431304
    2. 'E' → logprob: -9.625125885009766
    3. 'range' → logprob: -10.000125885009766
    4. 'la' → logprob: -12.000125885009766
    5. ' q' → logprob: -12.000125885009766
    6. 'l' → logprob: -14.875125885009766
    7. '```' → logprob: -15.000125885009766
    8. ' la' → logprob: -15.750125885009766
    9. 'the' → logprob: -15.875125885009766
    10. '(q' → logprob: -16.000125885009766

Token 712: '1' (ID: 16)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0025517656467854977
    2. 'la' → logprob: -6.002551555633545
    3. 'E' → logprob: -10.002552032470703
    4. 'l' → logprob: -10.752552032470703
    5. ' q' → logprob: -12.502552032470703
    6. ' la' → logprob: -13.502552032470703
    7. 'range' → logprob: -14.127552032470703
    8. '```' → logprob: -14.377552032470703
    9. 'le' → logprob: -14.502552032470703
    10. 'queue' → logprob: -14.627552032470703

Token 713: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7439684271812439
    2. ' à' → logprob: -0.9939684271812439
    3. 'à' → logprob: -2.7439684867858887
    4. ':' → logprob: -3.3689684867858887
    5. ' ' → logprob: -3.6189684867858887
    6. 'to' → logprob: -4.743968486785889
    7. ' to' → logprob: -5.868968486785889
    8. ' in' → logprob: -5.993968486785889
    9. ' ,' → logprob: -5.993968486785889
    10. '1' → logprob: -6.118968486785889

Token 714: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.1424973713001236e-05
    2. ' N' → logprob: -10.375031471252441
    3. '1' → logprob: -16.000030517578125
    4. '
' → logprob: -17.125030517578125
    5. '   ' → logprob: -18.625030517578125
    6. ' ' → logprob: -18.625030517578125
    7. '(N' → logprob: -18.875030517578125
    8. '```' → logprob: -19.375030517578125
    9. '	N' → logprob: -19.375030517578125
    10. 'range' → logprob: -19.750030517578125

Token 715: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06197508051991463
    2. ' for' → logprob: -2.8119750022888184
    3. '
' → logprob: -13.436975479125977
    4. 'range' → logprob: -13.436975479125977
    5. 'while' → logprob: -14.061975479125977
    6. '```' → logprob: -14.311975479125977
    7. 'i' → logprob: -14.686975479125977
    8. ')' → logprob: -14.686975479125977
    9. ':' → logprob: -14.686975479125977
    10. ',' → logprob: -14.811975479125977

Token 716: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029787063598632812
    2. 'while' → logprob: -3.529787063598633
    3. 'visited' → logprob: -10.279787063598633
    4. ' for' → logprob: -13.404787063598633
    5. 'range' → logprob: -14.529787063598633
    6. 'from' → logprob: -16.154787063598633
    7. '```' → logprob: -16.404787063598633
    8. ' while' → logprob: -16.779787063598633
    9. 'i' → logprob: -17.779787063598633
    10. 'fo' → logprob: -19.529787063598633

Token 717: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.052587565034627914
    2. 'node' → logprob: -3.8025875091552734
    3. ' i' → logprob: -4.427587509155273
    4. 'u' → logprob: -4.552587509155273
    5. 'v' → logprob: -5.802587509155273
    6. 'x' → logprob: -6.427587509155273
    7. ' node' → logprob: -6.677587509155273
    8. ' u' → logprob: -8.677587509155273
    9. 'current' → logprob: -9.552587509155273
    10. ' v' → logprob: -9.677587509155273

Token 718: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11300480365753174
    2. 'in' → logprob: -2.238004684448242
    3. ' ' → logprob: -8.988004684448242
    4. '1' → logprob: -11.238004684448242
    5. ',' → logprob: -11.363004684448242
    6. '  ' → logprob: -12.488004684448242
    7. 'n' → logprob: -12.488004684448242
    8. '```' → logprob: -12.488004684448242
    9. '+' → logprob: -12.738004684448242
    10. ')' → logprob: -12.738004684448242

Token 719: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03364858031272888
    2. ' range' → logprob: -3.4086484909057617
    3. '(range' → logprob: -14.033648490905762
    4. 'q' → logprob: -14.283648490905762
    5. ' ' → logprob: -14.533648490905762
    6. '   ' → logprob: -15.533648490905762
    7. 'E' → logprob: -15.908648490905762
    8. '	range' → logprob: -15.908648490905762
    9. ' q' → logprob: -16.033649444580078
    10. '  ' → logprob: -16.158649444580078

Token 720: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.73052782076411e-05
    2. '(N' → logprob: -9.875067710876465
    3. '1' → logprob: -11.125067710876465
    4. '(
' → logprob: -14.375067710876465
    5. ' (' → logprob: -15.625067710876465
    6. '(len' → logprob: -16.37506675720215
    7. 'N' → logprob: -16.87506675720215
    8. '(n' → logprob: -17.37506675720215
    9. '   ' → logprob: -17.62506675720215
    10. 'First' → logprob: -18.37506675720215

Token 721: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027276931330561638
    2. 'N' → logprob: -3.6522769927978516
    3. '(' → logprob: -7.402276992797852
    4. '(N' → logprob: -8.277276992797852
    5. 'len' → logprob: -9.402276992797852
    6. 'First' → logprob: -11.152276992797852
    7. '2' → logprob: -12.152276992797852
    8. '(len' → logprob: -12.527276992797852
    9. ' ' → logprob: -13.527276992797852
    10. 'q' → logprob: -13.902276992797852

Token 722: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005243193008936942
    2. ' ,' → logprob: -7.750524520874023
    3. ',N' → logprob: -9.375524520874023
    4. ',
' → logprob: -11.875524520874023
    5. '(N' → logprob: -14.625524520874023
    6. ',n' → logprob: -14.750524520874023
    7. '   ' → logprob: -15.250524520874023
    8. '1' → logprob: -15.375524520874023
    9. '(' → logprob: -15.500524520874023
    10. ',
' → logprob: -16.250524520874023

Token 723: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.627176768844947e-05
    2. ' N' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.50009536743164
    4. ' ' → logprob: -19.25009536743164
    5. '	N' → logprob: -20.12509536743164
    6. 'len' → logprob: -20.62509536743164
    7. '(N' → logprob: -21.25009536743164
    8. 'n' → logprob: -21.87509536743164
    9. '  ' → logprob: -22.12509536743164
    10. '    ' → logprob: -23.50009536743164

Token 724: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10021152347326279
    2. ' +' → logprob: -2.3502116203308105
    3. '+
' → logprob: -12.850211143493652
    4. '):' → logprob: -14.100211143493652
    5. '):
' → logprob: -14.350211143493652
    6. ' +
' → logprob: -15.100211143493652
    7. '   ' → logprob: -15.600211143493652
    8. '
' → logprob: -15.975211143493652
    9. '1' → logprob: -16.10021209716797
    10. ')' → logprob: -16.22521209716797

Token 725: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. ')' → logprob: -16.000051498413086
    4. '   ' → logprob: -17.000051498413086
    5. '```' → logprob: -18.250051498413086
    6. '2' → logprob: -19.500051498413086
    7. '  ' → logprob: -19.750051498413086
    8. ' )' → logprob: -20.125051498413086
    9. ',' → logprob: -20.250051498413086
    10. '
' → logprob: -21.000051498413086

Token 726: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -16.12500762939453
    4. '```' → logprob: -17.62500762939453
    5. ')' → logprob: -17.75000762939453
    6. '2' → logprob: -18.12500762939453
    7. '
' → logprob: -18.93750762939453
    8. '۱' → logprob: -19.56250762939453
    9. '  ' → logprob: -19.68750762939453
    10. '１' → logprob: -19.81250762939453

Token 727: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09182337671518326
    2. '):
' → logprob: -2.4668233394622803
    3. ':' → logprob: -6.591823577880859
    4. ')' → logprob: -7.091823577880859
    5. '   ' → logprob: -7.466823577880859
    6. '):
' → logprob: -9.84182357788086
    7. ':
' → logprob: -10.21682357788086
    8. ' ):' → logprob: -12.59182357788086
    9. ',' → logprob: -12.71682357788086
    10. '}:' → logprob: -13.59182357788086

Token 728: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2567971348762512
    2. 'visited' → logprob: -1.5067970752716064
    3. 'ans' → logprob: -6.0067973136901855
    4. ' visited' → logprob: -6.6317973136901855
    5. 'if' → logprob: -7.0067973136901855
    6. ' ans' → logprob: -10.381796836853027
    7. '	ans' → logprob: -10.506796836853027
    8. '   ' → logprob: -10.631796836853027
    9. ' if' → logprob: -11.006796836853027
    10. 'answers' → logprob: -11.381796836853027

Token 729: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.39816418290138245
    2. '   ' → logprob: -1.27316415309906
    3. 'ans' → logprob: -3.3981642723083496
    4. 'if' → logprob: -4.27316427230835
    5. ' visited' → logprob: -7.27316427230835
    6. ' ans' → logprob: -9.773163795471191
    7. '       ' → logprob: -9.773163795471191
    8. ' ' → logprob: -9.898163795471191
    9. '	ans' → logprob: -9.898163795471191
    10. '  ' → logprob: -10.148163795471191

Token 730: ' Ret' (ID: 16724)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.24185819923877716
    2. 'ans' → logprob: -1.7418582439422607
    3. 'if' → logprob: -3.2418582439422607
    4. '   ' → logprob: -7.866858005523682
    5. ' visited' → logprob: -10.49185848236084
    6. 'q' → logprob: -10.61685848236084
    7. '#' → logprob: -11.61685848236084
    8. 'C' → logprob: -11.74185848236084
    9. 'print' → logprob: -11.99185848236084
    10. ' ans' → logprob: -11.99185848236084

Token 731: 'irer' (ID: 85189)
  Prédit: 'urn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urn' → logprob: -0.028131624683737755
    2. 'ans' → logprob: -4.528131484985352
    3. 'visited' → logprob: -4.653131484985352
    4. 'our' → logprob: -6.778131484985352
    5. 'irer' → logprob: -6.778131484985352
    6. '   ' → logprob: -7.028131484985352
    7. ' visited' → logprob: -7.528131484985352
    8. 'ed' → logprob: -7.528131484985352
    9. 'r' → logprob: -8.028131484985352
    10. 'ourn' → logprob: -8.028131484985352

Token 732: ' et' (ID: 859)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6825125813484192
    2. 'i' → logprob: -1.6825125217437744
    3. 'q' → logprob: -2.5575125217437744
    4. ' i' → logprob: -3.0575125217437744
    5. ' visited' → logprob: -3.0575125217437744
    6. 'First' → logprob: -3.3075125217437744
    7. 'False' → logprob: -4.3075127601623535
    8. ' q' → logprob: -4.3075127601623535
    9. 'if' → logprob: -4.3075127601623535
    10. ' ' → logprob: -4.6825127601623535

Token 733: ' obtenir' (ID: 54423)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.17416533827781677
    2. ' q' → logprob: -2.1741652488708496
    3. 'visited' → logprob: -3.2991652488708496
    4. ' visited' → logprob: -5.17416524887085
    5. 'i' → logprob: -6.79916524887085
    6. 'First' → logprob: -7.29916524887085
    7. 'first' → logprob: -7.79916524887085
    8. '0' → logprob: -8.049165725708008
    9. 'E' → logprob: -8.174165725708008
    10. ' first' → logprob: -8.799165725708008

Token 734: ' le' (ID: 505)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.010407892055809498
    2. ' q' → logprob: -5.2604079246521
    3. 'node' → logprob: -6.1354079246521
    4. 'v' → logprob: -6.8854079246521
    5. 'u' → logprob: -7.3854079246521
    6. '0' → logprob: -7.8854079246521
    7. ' node' → logprob: -8.010407447814941
    8. 'i' → logprob: -8.885407447814941
    9. 'x' → logprob: -9.760407447814941
    10. ')' → logprob: -9.760407447814941

Token 735: ' premier' (ID: 15506)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3427897095680237
    2. 'q' → logprob: -1.717789649963379
    3. 'first' → logprob: -3.467789649963379
    4. 'prem' → logprob: -3.592789649963379
    5. 'i' → logprob: -3.967789649963379
    6. ' premier' → logprob: -4.842789649963379
    7. 'First' → logprob: -5.092789649963379
    8. 'node' → logprob: -5.217789649963379
    9. ' q' → logprob: -5.592789649963379
    10. ' first' → logprob: -5.842789649963379

Token 736: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.7688804864883423
    2. 'element' → logprob: -1.2688804864883423
    3. '=' → logprob: -2.3938803672790527
    4. 'q' → logprob: -2.7688803672790527
    5. ' élément' → logprob: -3.2688803672790527
    6. 'node' → logprob: -4.518880367279053
    7. 'n' → logprob: -4.893880367279053
    8. ' element' → logprob: -5.143880367279053
    9. 'elem' → logprob: -5.143880367279053
    10. ' =' → logprob: -5.268880367279053

Token 737: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6726358532905579
    2. ' =' → logprob: -1.047635793685913
    3. 'q' → logprob: -2.422635793685913
    4. '=q' → logprob: -3.547635793685913
    5. ' q' → logprob: -4.547636032104492
    6. 'from' → logprob: -5.172636032104492
    7. 'de' → logprob: -6.672636032104492
    8. 'of' → logprob: -6.797636032104492
    9. 's' → logprob: -7.672636032104492
    10. '(q' → logprob: -7.797636032104492

Token 738: ' la' (ID: 557)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.696889623621246e-06
    2. ' q' → logprob: -12.87500286102295
    3. '	q' → logprob: -17.125001907348633
    4. 'the' → logprob: -19.500001907348633
    5. '   ' → logprob: -19.625001907348633
    6. '
' → logprob: -20.375001907348633
    7. '(q' → logprob: -20.625001907348633
    8. '`' → logprob: -21.000001907348633
    9. 'que' → logprob: -21.625001907348633
    10. ' ' → logprob: -21.875001907348633

Token 739: ' file' (ID: 1974)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.5048530030981055e-06
    2. ' q' → logprob: -13.500001907348633
    3. 'queue' → logprob: -17.000001907348633
    4. '
' → logprob: -17.125001907348633
    5. '	q' → logprob: -17.875001907348633
    6. '`' → logprob: -18.250001907348633
    7. '   ' → logprob: -19.000001907348633
    8. ' ' → logprob: -19.250001907348633
    9. ')' → logprob: -19.375001907348633
    10. '```' → logprob: -19.375001907348633

Token 740: ' q' (ID: 2335)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.4218338429927826
    2. 'u' → logprob: -1.921833872795105
    3. ' =' → logprob: -2.6718337535858154
    4. ' node' → logprob: -2.9218337535858154
    5. 'v' → logprob: -4.1718339920043945
    6. 'current' → logprob: -4.2968339920043945
    7. '   ' → logprob: -4.9218339920043945
    8. '=' → logprob: -4.9218339920043945
    9. ' u' → logprob: -5.1718339920043945
    10. 'q' → logprob: -5.2968339920043945

Token 741: '
' (ID: 198)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.32553496956825256
    2. 'node' → logprob: -1.7005349397659302
    3. 'current' → logprob: -3.0755350589752197
    4. 'v' → logprob: -3.5755350589752197
    5. ' node' → logprob: -4.825534820556641
    6. ' u' → logprob: -5.325534820556641
    7. 'cur' → logprob: -6.075534820556641
    8. 'curr' → logprob: -6.325534820556641
    9. ' current' → logprob: -6.450534820556641
    10. '   ' → logprob: -6.700534820556641

Token 742: '   ' (ID: 271)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3007237911224365
    2. 'node' → logprob: -2.3007237911224365
    3. ' node' → logprob: -3.1757237911224365
    4. '   ' → logprob: -3.1757237911224365
    5. ' u' → logprob: -3.5507237911224365
    6. 'current' → logprob: -3.5507237911224365
    7. ' current' → logprob: -4.925724029541016
    8. 'v' → logprob: -5.050724029541016
    9. 'curr' → logprob: -6.550724029541016
    10. 'cur' → logprob: -7.050724029541016

Token 743: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6813246011734009
    2. 'node' → logprob: -1.4313246011734009
    3. 'v' → logprob: -2.4313244819641113
    4. 'cur' → logprob: -2.6813244819641113
    5. 'current' → logprob: -3.1813244819641113
    6. 'x' → logprob: -3.3063244819641113
    7. 'curr' → logprob: -4.556324481964111
    8. 'now' → logprob: -5.306324481964111
    9. ' node' → logprob: -7.181324481964111
    10. ' u' → logprob: -7.181324481964111

Token 744: ' C' (ID: 363)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.44512271881103516
    2. 'node' → logprob: -1.9451227188110352
    3. 'current' → logprob: -2.445122718811035
    4. 'v' → logprob: -2.570122718811035
    5. 'cur' → logprob: -3.320122718811035
    6. 'curr' → logprob: -5.195122718811035
    7. 'x' → logprob: -5.320122718811035
    8. 'now' → logprob: -5.320122718811035
    9. ' u' → logprob: -7.945122718811035
    10. '   ' → logprob: -8.070122718811035

Token 745: ''est' (ID: 6616)
  Prédit: 'urrent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'urrent' → logprob: -0.11203821748495102
    2. 'ur' → logprob: -3.4870381355285645
    3. ' =' → logprob: -3.7370381355285645
    4. 'ho' → logprob: -4.8620381355285645
    5. 'urr' → logprob: -5.1120381355285645
    6. '=' → logprob: -5.2370381355285645
    7. 'u' → logprob: -5.4870381355285645
    8. 'ode' → logprob: -5.6120381355285645
    9. 'h' → logprob: -5.7370381355285645
    10. '.pop' → logprob: -5.7370381355285645

Token 746: ' le' (ID: 505)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0258045196533203
    2. 'node' → logprob: -1.0258045196533203
    3. ' node' → logprob: -2.0258045196533203
    4. 'current' → logprob: -3.0258045196533203
    5. 'q' → logprob: -3.4008045196533203
    6. ' u' → logprob: -4.02580451965332
    7. 'cur' → logprob: -4.65080451965332
    8. ' current' → logprob: -4.65080451965332
    9. 'curr' → logprob: -4.65080451965332
    10. 'v' → logprob: -5.02580451965332

Token 747: ' n' (ID: 297)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.7600004076957703
    2. 'current' → logprob: -1.260000467300415
    3. 'u' → logprob: -2.260000467300415
    4. 'cur' → logprob: -2.760000467300415
    5. 'curr' → logprob: -3.260000467300415
    6. ' node' → logprob: -4.010000228881836
    7. 'v' → logprob: -5.010000228881836
    8. 'x' → logprob: -5.010000228881836
    9. ' current' → logprob: -5.010000228881836
    10. ' u' → logprob: -6.635000228881836

Token 748: 'œ' (ID: 15335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.45454034209251404
    2. 'ode' → logprob: -1.0795403718948364
    3. 'ext' → logprob: -4.704540252685547
    4. '=q' → logprob: -6.204540252685547
    5. 'odes' → logprob: -6.579540252685547
    6. 'ame' → logprob: -6.704540252685547
    7. 'om' → logprob: -6.954540252685547
    8. 'e' → logprob: -6.954540252685547
    9. ' q' → logprob: -6.954540252685547
    10. 'o' → logprob: -6.954540252685547

Token 749: 'ud' (ID: 527)
  Prédit: 'œ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'œ' → logprob: -0.6102800965309143
    2. 'o' → logprob: -1.7352800369262695
    3. 'q' → logprob: -2.1102800369262695
    4. 'ode' → logprob: -2.3602800369262695
    5. 'oe' → logprob: -3.3602800369262695
    6. '[' → logprob: -3.8602800369262695
    7. 'd' → logprob: -6.1102800369262695
    8. 'e' → logprob: -6.1102800369262695
    9. 'de' → logprob: -7.2352800369262695
    10. 'u' → logprob: -7.4852800369262695

Token 750: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2645041942596436
    2. '=' → logprob: -1.7645041942596436
    3. 'u' → logprob: -1.8895041942596436
    4. '_current' → logprob: -2.2645041942596436
    5. 'current' → logprob: -2.5145041942596436
    6. 'cur' → logprob: -3.0145041942596436
    7. '_act' → logprob: -3.1395041942596436
    8. 'act' → logprob: -3.5145041942596436
    9. 'node' → logprob: -4.014504432678223
    10. '_node' → logprob: -4.264504432678223

Token 751: ' traiter' (ID: 105852)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.5720646977424622
    2. ' traiter' → logprob: -1.8220646381378174
    3. 'vis' → logprob: -2.6970646381378174
    4. 'tr' → logprob: -2.9470646381378174
    5. ' visiter' → logprob: -2.9470646381378174
    6. 'assign' → logprob: -3.3220646381378174
    7. 'visit' → logprob: -3.4470646381378174
    8. 'aff' → logprob: -4.6970648765563965
    9. 'visited' → logprob: -5.1970648765563965
    10. 'pop' → logprob: -5.4470648765563965

Token 752: ' (' (ID: 350)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3074464201927185
    2. 'node' → logprob: -2.3074464797973633
    3. ' u' → logprob: -3.0574464797973633
    4. ' node' → logprob: -3.0574464797973633
    5. 'v' → logprob: -3.4324464797973633
    6. 'current' → logprob: -3.8074464797973633
    7. ' current' → logprob: -5.182446479797363
    8. 'cur' → logprob: -5.807446479797363
    9. 'x' → logprob: -5.932446479797363
    10. '   ' → logprob: -6.057446479797363

Token 753: 'B' (ID: 33)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.9771177768707275
    2. 'node' → logprob: -1.3521177768707275
    3. ')' → logprob: -1.4771177768707275
    4. 'current' → logprob: -3.2271177768707275
    5. 'v' → logprob: -3.3521177768707275
    6. ' node' → logprob: -3.7271177768707275
    7. ' u' → logprob: -4.352117538452148
    8. 'cur' → logprob: -5.102117538452148
    9. 'x' → logprob: -5.477117538452148
    10. 'q' → logprob: -5.477117538452148

Token 754: 'FS' (ID: 14179)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.160419300198555
    2. '=' → logprob: -2.785419225692749
    3. ')' → logprob: -2.910419225692749
    4. 'q' → logprob: -4.285419464111328
    5. 'pop' → logprob: -5.785419464111328
    6. '[' → logprob: -5.785419464111328
    7. '=q' → logprob: -6.035419464111328
    8. '_node' → logprob: -6.535419464111328
    9. '_pop' → logprob: -7.035419464111328
    10. ']' → logprob: -7.285419464111328

Token 755: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8123772144317627
    2. '.pop' → logprob: -0.9373772144317627
    3. 'pop' → logprob: -2.1873772144317627
    4. ').' → logprob: -3.9373772144317627
    5. ' =' → logprob: -4.562376976013184
    6. '_pop' → logprob: -4.812376976013184
    7. 'q' → logprob: -5.687376976013184
    8. '().' → logprob: -6.437376976013184
    9. '=' → logprob: -6.437376976013184
    10. '0' → logprob: -6.562376976013184

Token 756: ' on' (ID: 402)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0846971273422241
    2. 'u' → logprob: -1.0846971273422241
    3. 'node' → logprob: -1.5846971273422241
    4. 'current' → logprob: -3.4596972465515137
    5. ')' → logprob: -4.084697246551514
    6. 'v' → logprob: -4.209697246551514
    7. 'pop' → logprob: -4.459697246551514
    8. ' node' → logprob: -4.584697246551514
    9. ' u' → logprob: -5.084697246551514
    10. 'cur' → logprob: -5.459697246551514

Token 757: ' traite' (ID: 180696)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.02553701028227806
    2. '.pop' → logprob: -4.275537014007568
    3. 'q' → logprob: -4.650537014007568
    4. ' pop' → logprob: -6.775537014007568
    5. ' q' → logprob: -8.77553653717041
    6. '	pop' → logprob: -9.40053653717041
    7. '   ' → logprob: -9.52553653717041
    8. 'p' → logprob: -9.65053653717041
    9. '_pop' → logprob: -9.77553653717041
    10. ')' → logprob: -9.90053653717041

Token 758: ' le' (ID: 505)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4113714098930359
    2. ')' → logprob: -1.2863714694976807
    3. ' q' → logprob: -3.1613714694976807
    4. ' )' → logprob: -4.286371231079102
    5. '0' → logprob: -6.661371231079102
    6. '(' → logprob: -6.661371231079102
    7. '()' → logprob: -7.286371231079102
    8. '[' → logprob: -8.036371231079102
    9. ' ' → logprob: -8.161371231079102
    10. '   ' → logprob: -8.661371231079102

Token 759: ' plus' (ID: 2932)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.40641382336616516
    2. ' q' → logprob: -1.5314137935638428
    3. ' node' → logprob: -3.2814137935638428
    4. '0' → logprob: -3.6564137935638428
    5. ')' → logprob: -3.9064137935638428
    6. ' )' → logprob: -4.156414031982422
    7. 'node' → logprob: -5.156414031982422
    8. ' first' → logprob: -5.531414031982422
    9. ' noe' → logprob: -6.281414031982422
    10. ' ' → logprob: -6.531414031982422

Token 760: ' ancien' (ID: 81732)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.30909597873687744
    2. 'pop' → logprob: -1.9340959787368774
    3. '[' → logprob: -3.059095859527588
    4. 'en' → logprob: -3.684095859527588
    5. '0' → logprob: -4.684095859527588
    6. 'à' → logprob: -4.684095859527588
    7. '.pop' → logprob: -5.184095859527588
    8. '```' → logprob: -5.559095859527588
    9. 'pro' → logprob: -5.684095859527588
    10. ')' → logprob: -6.059095859527588

Token 761: ' ins' (ID: 2215)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11621646583080292
    2. 'q' → logprob: -2.8662164211273193
    3. '_q' → logprob: -4.491216659545898
    4. 'element' → logprob: -4.741216659545898
    5. 'élé' → logprob: -4.866216659545898
    6. ' élément' → logprob: -5.741216659545898
    7. ' )' → logprob: -5.866216659545898
    8. '_element' → logprob: -5.866216659545898
    9. 'node' → logprob: -5.991216659545898
    10. ' q' → logprob: -6.116216659545898

Token 762: 'éré' (ID: 33338)
  Prédit: 'éré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éré' → logprob: -0.5943219661712646
    2. 'ert' → logprob: -0.8443219661712646
    3. 'ért' → logprob: -5.469322204589844
    4. '[' → logprob: -5.719322204589844
    5. 'ort' → logprob: -6.219322204589844
    6. 'erti' → logprob: -7.094322204589844
    7. 'érer' → logprob: -7.219322204589844
    8. 'er' → logprob: -7.344322204589844
    9. 'e' → logprob: -7.344322204589844
    10. 'érant' → logprob: -7.469322204589844

Token 763: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1460513174533844
    2. '()' → logprob: -2.2710514068603516
    3. '())' → logprob: -4.271051406860352
    4. '(' → logprob: -4.521051406860352
    5. 'q' → logprob: -6.146051406860352
    6. '0' → logprob: -6.521051406860352
    7. '_node' → logprob: -7.396051406860352
    8. '[' → logprob: -7.396051406860352
    9. ' )' → logprob: -7.396051406860352
    10. '_q' → logprob: -7.521051406860352

Token 764: '   ' (ID: 271)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.7863437533378601
    2. 'u' → logprob: -1.0363438129425049
    3. 'current' → logprob: -2.161343812942505
    4. 'v' → logprob: -3.661343812942505
    5. ' node' → logprob: -3.786343812942505
    6. ' u' → logprob: -5.286343574523926
    7. 'cur' → logprob: -5.286343574523926
    8. ' current' → logprob: -5.411343574523926
    9. 'curr' → logprob: -5.536343574523926
    10. 'x' → logprob: -6.036343574523926

Token 765: ' x' (ID: 1215)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3992801904678345
    2. 'node' → logprob: -1.6492801904678345
    3. 'current' → logprob: -2.899280071258545
    4. 'cur' → logprob: -3.274280071258545
    5. 'v' → logprob: -3.899280071258545
    6. 'x' (adapté à ' x') → logprob: -4.899280071258545
    7. 'curr' → logprob: -5.024280071258545
    8. ' u' → logprob: -5.524280071258545
    9. ' node' → logprob: -5.899280071258545
    10. 'now' → logprob: -6.774280071258545

Token 766: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31328654289245605
    2. '=' → logprob: -1.313286542892456
    3. ')' → logprob: -11.063286781311035
    4. '=q' → logprob: -12.438286781311035
    5. ' ' → logprob: -13.688286781311035
    6. ',' → logprob: -13.688286781311035
    7. ' ' → logprob: -14.438286781311035
    8. ']' → logprob: -14.438286781311035
    9. '	' → logprob: -14.813286781311035
    10. ')=' → logprob: -15.188286781311035

Token 767: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00012356207298580557
    2. ' q' → logprob: -9.000123977661133
    3. '	q' → logprob: -16.250123977661133
    4. '   ' → logprob: -19.625123977661133
    5. '
' → logprob: -21.500123977661133
    6. ' ' → logprob: -22.000123977661133
    7. '  ' → logprob: -22.750123977661133
    8. '    ' → logprob: -23.125123977661133
    9. 'p' → logprob: -23.125123977661133
    10. '0' → logprob: -23.750123977661133

Token 768: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0007318547577597201
    2. '.' → logprob: -7.250731945037842
    3. 'pop' → logprob: -10.750731468200684
    4. '.p' → logprob: -15.000731468200684
    5. '[' → logprob: -16.000732421875
    6. ' .' → logprob: -17.125732421875
    7. '   ' → logprob: -17.375732421875
    8. '.remove' → logprob: -18.500732421875
    9. '(pop' → logprob: -18.500732421875
    10. '.Pop' → logprob: -18.750732421875

Token 769: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.2994620242971e-06
    2. '0' → logprob: -11.875008583068848
    3. '()' → logprob: -13.625008583068848
    4. '(
' → logprob: -16.00000762939453
    5. '(

' → logprob: -19.12500762939453
    6. ' (' → logprob: -20.25000762939453
    7. '	' → logprob: -20.50000762939453
    8. '()
' → logprob: -20.50000762939453
    9. '(
' → logprob: -21.12500762939453
    10. '[' → logprob: -21.75000762939453

Token 770: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4140441635390744e-05
    2. '(' → logprob: -11.250014305114746
    3. ' ' → logprob: -14.000014305114746
    4. ')' → logprob: -16.25001335144043
    5. '[' → logprob: -16.25001335144043
    6. '()' → logprob: -19.50001335144043
    7. '00' → logprob: -19.62501335144043
    8. '```' → logprob: -19.87501335144043
    9. '۰' → logprob: -20.12501335144043
    10. '	' → logprob: -20.37501335144043

Token 771: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ')
' → logprob: -12.625003814697266
    3. ' )' → logprob: -14.125003814697266
    4. ')

' → logprob: -16.000003814697266
    5. ')#' → logprob: -17.375003814697266
    6. ')
' → logprob: -17.750003814697266
    7. ')`' → logprob: -18.250003814697266
    8. '))' → logprob: -18.375003814697266
    9. '   ' → logprob: -18.375003814697266
    10. ' ' → logprob: -19.625003814697266

Token 772: '    
' (ID: 1944)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.005764895584434271
    2. '   ' → logprob: -5.630764961242676
    3. '#' → logprob: -7.255764961242676
    4. 'ans' → logprob: -7.505764961242676
    5. ' visited' → logprob: -7.505764961242676
    6. '
' → logprob: -9.380764961242676
    7. 'for' → logprob: -9.505764961242676
    8. 'if' → logprob: -9.880764961242676
    9. '```' → logprob: -10.005764961242676
    10. '    
' → logprob: -10.130764961242676

Token 773: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.31652557849884033
    2. 'ans' → logprob: -1.3165255784988403
    3. '#' → logprob: -5.941525459289551
    4. '   ' → logprob: -7.816525459289551
    5. 'if' → logprob: -9.56652545928955
    6. 'for' → logprob: -9.69152545928955
    7. 'answers' → logprob: -10.44152545928955
    8. ' visited' → logprob: -10.94152545928955
    9. 'answer' → logprob: -11.69152545928955
    10. '    
' → logprob: -11.81652545928955

Token 774: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2529433071613312
    2. 'visited' → logprob: -1.5029432773590088
    3. '#' (adapté à ' #') → logprob: -7.252943515777588
    4. 'if' → logprob: -8.25294303894043
    5. 'for' → logprob: -11.62794303894043
    6. 'answers' → logprob: -12.37794303894043
    7. '   ' → logprob: -12.50294303894043
    8. 'print' → logprob: -12.50294303894043
    9. 'val' → logprob: -12.87794303894043
    10. ' visited' → logprob: -12.87794303894043

Token 775: ' Mar' (ID: 3145)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5236334800720215
    2. 'ans' → logprob: -0.8986334800720215
    3. '#' → logprob: -7.6486334800720215
    4. 'if' → logprob: -11.64863395690918
    5. ' visited' → logprob: -12.02363395690918
    6. 'answer' → logprob: -13.27363395690918
    7. 'print' → logprob: -13.39863395690918
    8. '   ' → logprob: -13.39863395690918
    9. 'answers' → logprob: -13.39863395690918
    10. 'for' → logprob: -13.52363395690918

Token 776: 'quer' (ID: 8054)
  Prédit: 'quer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quer' → logprob: -0.001221774611622095
    2. 'ker' → logprob: -6.751221656799316
    3. 'r' → logprob: -10.876221656799316
    4. '#' → logprob: -11.001221656799316
    5. '   ' → logprob: -12.876221656799316
    6. '	' → logprob: -13.001221656799316
    7. 'k' → logprob: -13.001221656799316
    8. 'que' → logprob: -13.126221656799316
    9. 'rer' → logprob: -13.626221656799316
    10. 'qué' → logprob: -14.001221656799316

Token 777: ' x' (ID: 1215)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.00318163656629622
    2. ' visited' → logprob: -5.753181457519531
    3. 'x' → logprob: -12.628181457519531
    4. '(x' → logprob: -14.503181457519531
    5. ' x' → logprob: -17.37818145751953
    6. 'Visited' → logprob: -17.37818145751953
    7. '(' → logprob: -17.62818145751953
    8. ' ' → logprob: -19.87818145751953
    9. ' ' → logprob: -20.50318145751953
    10. '   ' → logprob: -21.00318145751953

Token 778: ' comme' (ID: 7971)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0003134168218821287
    2. '[' → logprob: -8.125313758850098
    3. 'visited' → logprob: -11.500313758850098
    4. ' [' → logprob: -13.375313758850098
    5. '[i' → logprob: -13.375313758850098
    6. ']' → logprob: -13.875313758850098
    7. 'Visited' → logprob: -15.000313758850098
    8. '[v' → logprob: -15.250313758850098
    9. '][' → logprob: -15.250313758850098
    10. '(x' → logprob: -15.500313758850098

Token 779: ' vis' (ID: 1909)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0024291672743856907
    2. 'True' → logprob: -6.502429008483887
    3. ' visited' → logprob: -7.002429008483887
    4. ' True' → logprob: -11.002429008483887
    5. 'vis' → logprob: -17.002429962158203
    6. 'Visited' → logprob: -17.877429962158203
    7. 'visit' → logprob: -19.127429962158203
    8. 'False' → logprob: -20.502429962158203
    9. 'true' → logprob: -20.877429962158203
    10. 'v' → logprob: -20.877429962158203

Token 780: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.03445488214492798
    2. 'ited' → logprob: -3.409454822540283
    3. 'it' → logprob: -7.909454822540283
    4. 'té' → logprob: -8.784455299377441
    5. 't' → logprob: -9.409455299377441
    6. 'ist' → logprob: -10.409455299377441
    7. 'is' → logprob: -10.534455299377441
    8. 'ted' → logprob: -11.034455299377441
    9. 'itable' → logprob: -11.034455299377441
    10. 'sit' → logprob: -11.159455299377441

Token 781: ' dans' (ID: 2671)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.027091315016150475
    2. ' visited' → logprob: -4.1520915031433105
    3. '
' → logprob: -4.5270915031433105
    4. '   ' → logprob: -9.152091026306152
    5. '    
' → logprob: -10.402091026306152
    6. '[' → logprob: -11.277091026306152
    7. ' 
' → logprob: -11.652091026306152
    8. 'Visited' → logprob: -11.902091026306152
    9. '
' → logprob: -12.277091026306152
    10. '  
' → logprob: -12.777091026306152

Token 782: ' la' (ID: 557)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0019286326132714748
    2. ' visited' → logprob: -6.251928806304932
    3. 'la' → logprob: -19.126928329467773
    4. '
' → logprob: -19.251928329467773
    5. '   ' → logprob: -19.251928329467773
    6. 'visit' → logprob: -19.626928329467773
    7. 'Visited' → logprob: -19.626928329467773
    8. '#' → logprob: -20.251928329467773
    9. 'vis' → logprob: -20.501928329467773
    10. ' la' → logprob: -20.626928329467773

Token 783: ' liste' (ID: 31719)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -2.7610454708337784e-05
    2. ' visited' → logprob: -10.500027656555176
    3. 'code' → logprob: -19.25002670288086
    4. 'x' → logprob: -20.87502670288086
    5. ' code' → logprob: -21.12502670288086
    6. 'True' → logprob: -21.12502670288086
    7. 'Visited' → logprob: -21.62502670288086
    8. 'v' → logprob: -21.62502670288086
    9. '
' → logprob: -21.87502670288086
    10. '`' → logprob: -21.87502670288086

Token 784: ' visited' (ID: 18416)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.31446948647499084
    2. 'visited' → logprob: -1.3144694566726685
    3. ' visited' → logprob: -7.314469337463379
    4. 'x' → logprob: -8.064469337463379
    5. '[' → logprob: -8.439469337463379
    6. '(x' → logprob: -12.564469337463379
    7. 'Visited' → logprob: -12.564469337463379
    8. '   ' → logprob: -14.189469337463379
    9. '```' → logprob: -14.314469337463379
    10. '[i' → logprob: -14.439469337463379

Token 785: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6959187984466553
    2. 'visited' → logprob: -0.6959187984466553
    3. ' visited' → logprob: -6.320919036865234
    4. '[x' → logprob: -7.445919036865234
    5. '
' → logprob: -8.695919036865234
    6. '   ' → logprob: -8.820919036865234
    7. '```' → logprob: -11.320919036865234
    8. '    
' → logprob: -11.695919036865234
    9. ' =' → logprob: -11.945919036865234
    10. '=' → logprob: -11.945919036865234

Token 786: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.050492946058511734
    2. '[' → logprob: -3.050493001937866
    3. ' visited' → logprob: -6.550492763519287
    4. '   ' → logprob: -8.175493240356445
    5. '[x' → logprob: -9.425493240356445
    6. '
' → logprob: -10.550493240356445
    7. '    
' → logprob: -10.925493240356445
    8. '[
' → logprob: -11.175493240356445
    9. '```' → logprob: -11.300493240356445
    10. '  
' → logprob: -11.425493240356445

Token 787: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.0007154120248742402
    2. ' visited' → logprob: -7.250715255737305
    3. '   ' → logprob: -12.125715255737305
    4. '    
' → logprob: -17.250715255737305
    5. ' ' → logprob: -18.750715255737305
    6. '    ' → logprob: -19.000715255737305
    7. ' 
' → logprob: -19.375715255737305
    8. ' ' → logprob: -19.375715255737305
    9. 'Visited' → logprob: -20.000715255737305
    10. '```' → logprob: -20.000715255737305

Token 788: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.014167269691824913
    2. '[' → logprob: -4.264167308807373
    3. ' [' → logprob: -12.639166831970215
    4. '[i' → logprob: -15.764166831970215
    5. 'x' → logprob: -16.51416778564453
    6. '[
' → logprob: -16.63916778564453
    7. '```' → logprob: -17.01416778564453
    8. '[X' → logprob: -17.13916778564453
    9. '\[' → logprob: -17.13916778564453
    10. '[s' → logprob: -17.51416778564453

Token 789: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.5107177862082608e-05
    2. ']=' → logprob: -10.625024795532227
    3. ' ]' → logprob: -14.875024795532227
    4. '=' → logprob: -15.250024795532227
    5. ')' → logprob: -15.875024795532227
    6. ']
' → logprob: -17.500024795532227
    7. '[' → logprob: -18.750024795532227
    8. '=True' → logprob: -19.125024795532227
    9. ' =' → logprob: -19.625024795532227
    10. ']
' → logprob: -20.375024795532227

Token 790: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015071245143190026
    2. ' =' → logprob: -6.50150728225708
    3. '=True' → logprob: -12.251506805419922
    4. ']' → logprob: -19.501506805419922
    5. '＝' → logprob: -19.626506805419922
    6. '[' → logprob: -19.751506805419922
    7. '=true' → logprob: -20.001506805419922
    8. '=False' → logprob: -20.126506805419922
    9. '=
' → logprob: -20.251506805419922
    10. ')' → logprob: -20.626506805419922

Token 791: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00033546582562848926
    2. ' True' → logprob: -8.000335693359375
    3. '(True' → logprob: -19.125335693359375
    4. '=True' → logprob: -22.000335693359375
    5. '1' → logprob: -22.750335693359375
    6. '.True' → logprob: -23.125335693359375
    7. 'Tr' → logprob: -23.250335693359375
    8. '_true' → logprob: -23.750335693359375
    9. 'true' → logprob: -24.625335693359375
    10. 'T' → logprob: -24.750335693359375

Token 792: '
    
' (ID: 15698)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4634944200515747
    2. 'for' → logprob: -1.4634944200515747
    3. '#' → logprob: -2.463494300842285
    4. 'if' → logprob: -3.338494300842285
    5. 'idx' → logprob: -4.588494300842285
    6. '   ' → logprob: -5.588494300842285
    7. 'val' → logprob: -6.713494300842285
    8. 'i' → logprob: -7.213494300842285
    9. 'j' → logprob: -7.713494300842285
    10. 'neighbors' → logprob: -7.838494300842285

Token 793: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6483046412467957
    2. 'for' → logprob: -1.1483047008514404
    3. 'idx' → logprob: -3.1483047008514404
    4. '#' → logprob: -3.2733047008514404
    5. 'neighbors' → logprob: -3.2733047008514404
    6. 'if' → logprob: -3.6483047008514404
    7. 'val' → logprob: -5.648304462432861
    8. 'index' → logprob: -6.023304462432861
    9. 'neighbor' → logprob: -6.148304462432861
    10. 'value' → logprob: -7.023304462432861

Token 794: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.016261573880910873
    2. 'for' → logprob: -5.016261577606201
    3. 'if' → logprob: -5.266261577606201
    4. '#' (adapté à ' #') → logprob: -6.016261577606201
    5. 'idx' → logprob: -6.516261577606201
    6. 'index' → logprob: -8.891261100769043
    7. 'val' → logprob: -9.141261100769043
    8. 'pos' → logprob: -9.891261100769043
    9. 'while' → logprob: -10.766261100769043
    10. 'value' → logprob: -11.266261100769043

Token 795: ' Ass' (ID: 4744)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.017999153584241867
    2. 'if' → logprob: -4.267999172210693
    3. '#' → logprob: -5.892999172210693
    4. 'for' → logprob: -7.642999172210693
    5. 'val' → logprob: -7.892999172210693
    6. 'idx' → logprob: -10.017998695373535
    7. 'value' → logprob: -10.517998695373535
    8. 'assign' → logprob: -10.642998695373535
    9. 'while' → logprob: -11.017998695373535
    10. 'index' → logprob: -11.267998695373535

Token 796: 'igner' (ID: 32459)
  Prédit: 'ign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ign' → logprob: -0.0001835141738411039
    2. '   ' → logprob: -9.87518310546875
    3. 'ing' → logprob: -10.50018310546875
    4. '#' → logprob: -10.62518310546875
    5. 'igner' → logprob: -10.87518310546875
    6. 'ig' → logprob: -11.00018310546875
    7. 'i' → logprob: -11.75018310546875
    8. 'igned' → logprob: -12.12518310546875
    9. '```' → logprob: -12.25018310546875
    10. 'igning' → logprob: -12.50018310546875

Token 797: ' au' (ID: 2791)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4804268777370453
    2. 'C' → logprob: -0.9804269075393677
    3. ' ans' → logprob: -5.230426788330078
    4. ' C' → logprob: -7.480426788330078
    5. '(ans' → logprob: -8.105426788330078
    6. 'x' → logprob: -9.730426788330078
    7. '	ans' → logprob: -10.980426788330078
    8. 'max' → logprob: -11.605426788330078
    9. 'Ans' → logprob: -12.355426788330078
    10. '   ' → logprob: -12.355426788330078

Token 798: ' n' (ID: 297)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01604609750211239
    2. 'x' → logprob: -4.141046047210693
    3. ' ans' → logprob: -11.516046524047852
    4. '	ans' → logprob: -14.266046524047852
    5. '(ans' → logprob: -14.766046524047852
    6. 'an' → logprob: -16.14104652404785
    7. 'node' → logprob: -16.26604652404785
    8. ' x' → logprob: -16.39104652404785
    9. 'Ans' → logprob: -16.39104652404785
    10. 'a' → logprob: -16.76604652404785

Token 799: 'œ' (ID: 15335)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7880154252052307
    2. '[x' → logprob: -1.288015365600586
    3. 'œ' → logprob: -1.538015365600586
    4. 'o' → logprob: -3.538015365600586
    5. 'oe' → logprob: -4.163015365600586
    6. 'n' → logprob: -5.288015365600586
    7. 'ode' → logprob: -6.538015365600586
    8. '(x' → logprob: -6.913015365600586
    9. '```' → logprob: -7.663015365600586
    10. 'ans' → logprob: -7.913015365600586

Token 800: 'ud' (ID: 527)
  Prédit: 'œ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'œ' → logprob: -0.4801868200302124
    2. 'x' → logprob: -0.9801868200302124
    3. 'o' → logprob: -5.480186939239502
    4. 'oe' → logprob: -7.230186939239502
    5. '[x' → logprob: -7.730186939239502
    6. '```' → logprob: -8.730186462402344
    7. 'e' → logprob: -8.855186462402344
    8. '(x' → logprob: -9.105186462402344
    9. 'ud' → logprob: -9.355186462402344
    10. ' x' → logprob: -9.855186462402344

Token 801: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00023226479243021458
    2. ' x' → logprob: -8.875232696533203
    3. 'First' → logprob: -9.375232696533203
    4. ' First' → logprob: -12.125232696533203
    5. 'first' → logprob: -14.125232696533203
    6. 'ans' → logprob: -14.750232696533203
    7. '[x' → logprob: -15.000232696533203
    8. '(x' → logprob: -15.375232696533203
    9. '   ' → logprob: -16.000232696533203
    10. ' first' → logprob: -16.125232696533203

Token 802: ' la' (ID: 557)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.472186803817749
    2. ' =' → logprob: -1.472186803817749
    3. '=' → logprob: -2.222186803817749
    4. ' ans' → logprob: -4.097187042236328
    5. ' C' → logprob: -4.097187042236328
    6. '=C' → logprob: -5.972187042236328
    7. 'ans' → logprob: -6.222187042236328
    8. ']' → logprob: -8.222187042236328
    9. '[' → logprob: -8.597187042236328
    10. ')' → logprob: -9.097187042236328

Token 803: ' i' (ID: 575)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.015308989211916924
    2. 'ans' → logprob: -4.265308856964111
    3. 'max' → logprob: -6.890308856964111
    4. ' ans' → logprob: -10.01530933380127
    5. ' C' → logprob: -10.51530933380127
    6. 'c' → logprob: -10.89030933380127
    7. 'len' → logprob: -11.14030933380127
    8. 'x' → logprob: -12.26530933380127
    9. '=' → logprob: -13.14030933380127
    10. 'value' → logprob: -13.14030933380127

Token 804: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0490422248840332
    2. 'nt' → logprob: -1.2990422248840332
    3. ']' → logprob: -2.174042224884033
    4. 'nd' → logprob: -2.924042224884033
    5. 'n' → logprob: -2.924042224884033
    6. ' ' → logprob: -3.549042224884033
    7. ' -' → logprob: -3.674042224884033
    8. 'th' → logprob: -3.674042224884033
    9. '=' → logprob: -4.674042224884033
    10. 'e' → logprob: -5.299042224884033

Token 805: 'ème' (ID: 9767)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2293427437543869
    2. 'th' → logprob: -2.3543426990509033
    3. '-' → logprob: -2.6043426990509033
    4. ' ' → logprob: -4.604342937469482
    5. ''t' → logprob: -4.729342937469482
    6. '-th' → logprob: -4.854342937469482
    7. 'nt' → logprob: -5.854342937469482
    8. 't' → logprob: -6.104342937469482
    9. ' -' → logprob: -6.729342937469482
    10. 'space' → logprob: -7.604342937469482

Token 806: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11112316697835922
    2. 'space' → logprob: -3.6111230850219727
    3. ' value' → logprob: -4.361123085021973
    4. 'value' → logprob: -4.361123085021973
    5. '_' → logprob: -5.236123085021973
    6. ']' → logprob: -5.361123085021973
    7. ' space' → logprob: -5.486123085021973
    8. ')' → logprob: -5.611123085021973
    9. 'token' → logprob: -5.611123085021973
    10. 'val' → logprob: -5.736123085021973

Token 807: ' la' (ID: 557)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.765911877155304
    2. 'de' → logprob: -1.2659118175506592
    3. 'C' → logprob: -1.8909118175506592
    4. '=' → logprob: -3.390911817550659
    5. '(C' → logprob: -3.890911817550659
    6. ' =' → logprob: -4.390912055969238
    7. 'from' → logprob: -4.640912055969238
    8. '(ans' → logprob: -5.015912055969238
    9. ' C' → logprob: -5.515912055969238
    10. '=C' → logprob: -6.140912055969238

Token 808: ' plus' (ID: 2932)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7219744920730591
    2. ' plus' → logprob: -1.471974492073059
    3. 'plus' → logprob: -2.4719743728637695
    4. ' C' → logprob: -3.0969743728637695
    5. '=C' → logprob: -3.2219743728637695
    6. 'ng' → logprob: -4.0969743728637695
    7. 'i' → logprob: -4.5969743728637695
    8. '=' → logprob: -4.5969743728637695
    9. 'n' → logprob: -4.5969743728637695
    10. 'st' → logprob: -4.8469743728637695

Token 809: ' grande' (ID: 10094)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.008171265944838524
    2. ' petite' → logprob: -6.008171081542969
    3. '```' → logprob: -6.133171081542969
    4. 'import' → logprob: -7.133171081542969
    5. 'pro' → logprob: -7.133171081542969
    6. 'b' → logprob: -7.633171081542969
    7. 'small' → logprob: -8.008171081542969
    8. ' petit' → logprob: -8.133171081542969
    9. ' ' → logprob: -9.008171081542969
    10. ' faible' → logprob: -9.133171081542969

Token 810: ' de' (ID: 334)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.05644112825393677
    2. ' =' → logprob: -4.056441307067871
    3. ' C' → logprob: -4.056441307067871
    4. '=' → logprob: -5.056441307067871
    5. '(C' → logprob: -5.681441307067871
    6. '=C' → logprob: -5.806441307067871
    7. ']' → logprob: -6.306441307067871
    8. '[' → logprob: -6.931441307067871
    9. ' (' → logprob: -7.181441307067871
    10. '[::-' → logprob: -7.306441307067871

Token 811: ' la' (ID: 557)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -4.0126840758603066e-05
    2. ' C' → logprob: -10.125040054321289
    3. '
' → logprob: -17.50004005432129
    4. '`' → logprob: -17.62504005432129
    5. '   ' → logprob: -17.75004005432129
    6. 'c' → logprob: -18.50004005432129
    7. ' ' → logprob: -18.50004005432129
    8. '```' → logprob: -18.62504005432129
    9. '	C' → logprob: -19.00004005432129
    10. '=C' → logprob: -19.62504005432129

Token 812: ' liste' (ID: 31719)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -3.5597102396423e-05
    2. ' C' → logprob: -10.250035285949707
    3. '
' → logprob: -16.625036239624023
    4. ' ' → logprob: -16.750036239624023
    5. '   ' → logprob: -16.750036239624023
    6. '`' → logprob: -17.375036239624023
    7. '```' → logprob: -17.625036239624023
    8. '  ' → logprob: -18.000036239624023
    9. 'c' → logprob: -18.750036239624023
    10. 'list' → logprob: -19.125036239624023

Token 813: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00018232580623589456
    2. ' C' → logprob: -8.625182151794434
    3. '(C' → logprob: -13.375182151794434
    4. '   ' → logprob: -14.625182151794434
    5. '```' → logprob: -15.250182151794434
    6. '`' → logprob: -15.625182151794434
    7. '=C' → logprob: -16.75018310546875
    8. '(' → logprob: -16.87518310546875
    9. '[C' → logprob: -16.87518310546875
    10. 'c' → logprob: -17.12518310546875

Token 814: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.14550171792507172
    2. ']' → logprob: -3.2705016136169434
    3. '=' → logprob: -3.3955016136169434
    4. '[-' → logprob: -3.6455016136169434
    5. '[len' → logprob: -4.645501613616943
    6. ']=' → logprob: -5.020501613616943
    7. ' ans' → logprob: -5.145501613616943
    8. '[' → logprob: -5.395501613616943
    9. ' =' → logprob: -5.895501613616943
    10. '(ans' → logprob: -6.395501613616943

Token 815: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.042569052428007126
    2. ' ans' → logprob: -3.292569160461426
    3. ']' → logprob: -5.917569160461426
    4. '   ' → logprob: -7.542569160461426
    5. '(ans' → logprob: -7.542569160461426
    6. '=' → logprob: -8.167569160461426
    7. '[' → logprob: -8.917569160461426
    8. '	ans' → logprob: -9.042569160461426
    9. ' =' → logprob: -9.417569160461426
    10. ']=' → logprob: -9.667569160461426

Token 816: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.009856902994215488
    2. ' ans' → logprob: -4.634856700897217
    3. '   ' → logprob: -9.634857177734375
    4. '(ans' → logprob: -10.759857177734375
    5. '	ans' → logprob: -11.634857177734375
    6. '_ans' → logprob: -13.759857177734375
    7. '`' → logprob: -14.009857177734375
    8. '```' → logprob: -14.259857177734375
    9. '    
' → logprob: -14.509857177734375
    10. '=' → logprob: -14.759857177734375

Token 817: ' Comme' (ID: 53252)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0031932818237692118
    2. ' ans' → logprob: -5.753193378448486
    3. '   ' → logprob: -11.753192901611328
    4. '(ans' → logprob: -12.753192901611328
    5. '	ans' → logprob: -12.753192901611328
    6. '`' → logprob: -14.503192901611328
    7. '```' → logprob: -15.003192901611328
    8. '_ans' → logprob: -15.378192901611328
    9. '#' → logprob: -15.503192901611328
    10. 'anst' → logprob: -16.128192901611328

Token 818: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5867639780044556
    2. ' ans' → logprob: -0.8367639780044556
    3. 'C' → logprob: -4.711763858795166
    4. ' C' → logprob: -7.336763858795166
    5. '   ' → logprob: -7.336763858795166
    6. '	ans' → logprob: -8.711764335632324
    7. 'x' → logprob: -9.211764335632324
    8. '`' → logprob: -9.711764335632324
    9. '(ans' → logprob: -9.961764335632324
    10. ' ' → logprob: -10.711764335632324

Token 819: ' la' (ID: 557)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.2771638333797455
    2. 'C' → logprob: -2.9021637439727783
    3. '[::-' → logprob: -3.5271637439727783
    4. '[C' → logprob: -3.6521637439727783
    5. ' [-' → logprob: -3.7771637439727783
    6. '][-' → logprob: -3.7771637439727783
    7. ']' → logprob: -4.277163982391357
    8. '[' → logprob: -4.277163982391357
    9. ' C' → logprob: -4.277163982391357
    10. 'assign' → logprob: -4.527163982391357

Token 820: ' veut' (ID: 41653)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.026956958696246147
    2. ' [-' → logprob: -4.276957035064697
    3. '[::-' → logprob: -5.151957035064697
    4. '[' → logprob: -6.026957035064697
    5. '[len' → logprob: -6.901957035064697
    6. '][-' → logprob: -6.901957035064697
    7. ']' → logprob: -7.651957035064697
    8. '-' → logprob: -7.651957035064697
    9. 'len' → logprob: -7.901957035064697
    10. ' -' → logprob: -8.026956558227539

Token 821: ' en' (ID: 469)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.7483202815055847
    2. '[::-' → logprob: -1.1233203411102295
    3. '[' → logprob: -1.9983203411102295
    4. ' C' → logprob: -4.49832010269165
    5. '[i' → logprob: -4.74832010269165
    6. 'C' → logprob: -4.99832010269165
    7. ' =' → logprob: -5.24832010269165
    8. '[N' → logprob: -5.49832010269165
    9. 'reverse' → logprob: -5.87332010269165
    10. ' [-' → logprob: -5.87332010269165

Token 822: ' décro' (ID: 176854)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.20807163417339325
    2. '[::-' → logprob: -2.833071708679199
    3. ' reverse' → logprob: -3.083071708679199
    4. '-' → logprob: -3.958071708679199
    5. 'C' → logprob: -4.583071708679199
    6. ' C' → logprob: -4.833071708679199
    7. 'descending' → logprob: -4.833071708679199
    8. '[-' → logprob: -4.958071708679199
    9. 're' → logprob: -4.958071708679199
    10. ' reversed' → logprob: -5.458071708679199

Token 823: 'issant' (ID: 31359)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.39343589544296265
    2. 'd' → logprob: -2.5184359550476074
    3. 'sent' → logprob: -2.6434359550476074
    4. 'sc' → logprob: -2.7684359550476074
    5. 'dent' → logprob: -2.8934359550476074
    6. 'sd' → logprob: -4.143435955047607
    7. 'ss' → logprob: -4.393435955047607
    8. 'desc' → logprob: -5.143435955047607
    9. 'ds' → logprob: -5.893435955047607
    10. 'rs' → logprob: -5.893435955047607

Token 824: ',' (ID: 11)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.7289900779724121
    2. '[::-' → logprob: -1.103990077972412
    3. '[C' → logprob: -2.353990077972412
    4. '[' → logprob: -2.853990077972412
    5. 'C' → logprob: -4.353990077972412
    6. ',' → logprob: -4.978990077972412
    7. '[len' → logprob: -5.103990077972412
    8. '[i' → logprob: -5.478990077972412
    9. ' C' → logprob: -7.103990077972412
    10. ' [-' → logprob: -7.728990077972412

Token 825: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5762037634849548
    2. ' ans' → logprob: -0.8262037634849548
    3. '   ' → logprob: -8.451203346252441
    4. '	ans' → logprob: -10.451203346252441
    5. '(ans' → logprob: -11.701203346252441
    6. 'x' → logprob: -12.201203346252441
    7. ' ' → logprob: -12.826203346252441
    8. ' x' → logprob: -13.326203346252441
    9. '_ans' → logprob: -13.826203346252441
    10. ' ' → logprob: -14.701203346252441

Token 826: ' prend' (ID: 37463)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assign' → logprob: -1.0063575506210327
    2. ']' → logprob: -1.8813575506210327
    3. 'ans' → logprob: -2.0063576698303223
    4. '[-' → logprob: -2.1313576698303223
    5. '][-' → logprob: -2.8813576698303223
    6. '][' → logprob: -3.3813576698303223
    7. ' ans' → logprob: -3.5063576698303223
    8. '[' → logprob: -4.131357669830322
    9. '[i' → logprob: -4.381357669830322
    10. 'n' → logprob: -4.506357669830322

Token 827: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.19672147929668427
    2. ' C' → logprob: -2.3217215538024902
    3. '[-' → logprob: -2.5717215538024902
    4. '   ' → logprob: -6.94672155380249
    5. '-C' → logprob: -7.19672155380249
    6. ' -' → logprob: -7.19672155380249
    7. '-' → logprob: -7.82172155380249
    8. ' [-' → logprob: -7.94672155380249
    9. '`' → logprob: -8.946721076965332
    10. '[::-' → logprob: -9.196721076965332

Token 828: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00018565983918961138
    2. '[' → logprob: -8.8751859664917
    3. '[len' → logprob: -10.6251859664917
    4. '[::-' → logprob: -11.3751859664917
    5. '[N' → logprob: -11.7501859664917
    6. '[
' → logprob: -14.3751859664917
    7. '[:-' → logprob: -14.5001859664917
    8. '[n' → logprob: -14.6251859664917
    9. '[i' → logprob: -16.750185012817383
    10. '[#' → logprob: -16.875185012817383

Token 829: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.610702363715973e-06
    2. ' i' → logprob: -11.625009536743164
    3. '```' → logprob: -14.875009536743164
    4. ' ' → logprob: -15.750009536743164
    5. '(' → logprob: -17.125009536743164
    6. '   ' → logprob: -17.500009536743164
    7. '(i' → logprob: -17.750009536743164
    8. '`' → logprob: -17.875009536743164
    9. '
' → logprob: -18.000009536743164
    10. ' ' → logprob: -18.250009536743164

Token 830: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0075626065954566
    2. '])' → logprob: -5.132562637329102
    3. '-' → logprob: -6.507562637329102
    4. ']
' → logprob: -9.882562637329102
    5. ' ]' → logprob: -10.007562637329102
    6. ')]' → logprob: -11.757562637329102
    7. ' -' → logprob: -12.132562637329102
    8. ')' → logprob: -12.132562637329102
    9. ']

' → logprob: -12.382562637329102
    10. ']]' → logprob: -13.007562637329102

Token 831: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0008403576212003827
    2. ']' → logprob: -7.750840187072754
    3. ' ans' → logprob: -7.875840187072754
    4. '(ans' → logprob: -11.500840187072754
    5. '	ans' → logprob: -12.500840187072754
    6. ']
' → logprob: -12.500840187072754
    7. ']=' → logprob: -12.625840187072754
    8. '   ' → logprob: -12.875840187072754
    9. '=' → logprob: -13.250840187072754
    10. '
' → logprob: -13.500840187072754

Token 832: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -4.632542913896032e-05
    2. ' ans' → logprob: -10.000046730041504
    3. '   ' → logprob: -14.375046730041504
    4. '(ans' → logprob: -15.875046730041504
    5. '	ans' → logprob: -16.250045776367188
    6. '```' → logprob: -19.375045776367188
    7. '_ans' → logprob: -19.625045776367188
    8. '
' → logprob: -19.750045776367188
    9. '`' → logprob: -20.000045776367188
    10. 'anst' → logprob: -20.125045776367188

Token 833: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.12701325118541718
    2. '[' → logprob: -2.1270132064819336
    3. '```' → logprob: -10.127013206481934
    4. ' [' → logprob: -10.877013206481934
    5. '\[' → logprob: -11.502013206481934
    6. '[
' → logprob: -12.002013206481934
    7. '[C' → logprob: -13.127013206481934
    8. 'x' → logprob: -13.377013206481934
    9. '[...]' → logprob: -13.377013206481934
    10. '[c' → logprob: -14.627013206481934

Token 834: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00018780550453811884
    2. ']=' → logprob: -8.625187873840332
    3. '=' → logprob: -12.000187873840332
    4. ' ]' → logprob: -13.250187873840332
    5. ']
' → logprob: -16.375186920166016
    6. ' =' → logprob: -16.625186920166016
    7. ')' → logprob: -17.375186920166016
    8. '']' → logprob: -17.875186920166016
    9. '`]' → logprob: -18.500186920166016
    10. ']

' → logprob: -18.625186920166016

Token 835: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001929228543303907
    2. ' =' → logprob: -6.25192928314209
    3. ']' → logprob: -15.25192928314209
    4. '=

' → logprob: -16.126928329467773
    5. ']=' → logprob: -16.251928329467773
    6. '=
' → logprob: -16.751928329467773
    7. '=C' → logprob: -17.376928329467773
    8. '=}' → logprob: -17.376928329467773
    9. ')' → logprob: -18.251928329467773
    10. ')=' → logprob: -18.251928329467773

Token 836: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0619698166847229
    2. ' C' → logprob: -2.811969757080078
    3. ' ' → logprob: -13.436969757080078
    4. ' ' → logprob: -14.311969757080078
    5. '	C' → logprob: -16.186969757080078
    6. '   ' → logprob: -16.811969757080078
    7. '  ' → logprob: -18.061969757080078
    8. '`' → logprob: -18.686969757080078
    9. ' ' → logprob: -18.811969757080078
    10. '_C' → logprob: -18.936969757080078

Token 837: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -5.538490950129926e-05
    2. '[' → logprob: -10.750055313110352
    3. '-i' → logprob: -12.000055313110352
    4. '   ' → logprob: -12.000055313110352
    5. '[len' → logprob: -12.125055313110352
    6. ' [-' → logprob: -12.500055313110352
    7. '[::-' → logprob: -12.875055313110352
    8. '-' → logprob: -13.125055313110352
    9. '[:-' → logprob: -13.125055313110352
    10. '```' → logprob: -13.500055313110352

Token 838: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.36574100604048e-06
    2. ' i' → logprob: -12.375004768371582
    3. '(i' → logprob: -16.500003814697266
    4. '1' → logprob: -17.250003814697266
    5. '(' → logprob: -17.750003814697266
    6. '   ' → logprob: -18.625003814697266
    7. '```' → logprob: -18.625003814697266
    8. '	i' → logprob: -19.000003814697266
    9. '_i' → logprob: -19.875003814697266
    10. ' ' → logprob: -19.875003814697266

Token 839: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000116655595775228
    2. ' ]' → logprob: -9.375116348266602
    3. ']
' → logprob: -11.250116348266602
    4. ')' → logprob: -11.375116348266602
    5. '])' → logprob: -12.250116348266602
    6. ')]' → logprob: -14.000116348266602
    7. ']

' → logprob: -14.500116348266602
    8. ']
' → logprob: -15.000116348266602
    9. '']' → logprob: -15.500116348266602
    10. '[' → logprob: -15.625116348266602

Token 840: '    
' (ID: 1944)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10134019702672958
    2. '   ' → logprob: -2.3513402938842773
    3. '    
' → logprob: -7.601340293884277
    4. ' for' → logprob: -7.851340293884277
    5. '#' → logprob: -9.476340293884277
    6. '	for' → logprob: -9.476340293884277
    7. '```' → logprob: -9.476340293884277
    8. '
' → logprob: -11.851340293884277
    9. '   
' → logprob: -13.476340293884277
    10. '   ' → logprob: -13.601340293884277

Token 841: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006296366918832064
    2. '#' → logprob: -7.375629425048828
    3. '
' → logprob: -13.750629425048828
    4. '    
' → logprob: -14.000629425048828
    5. '   ' → logprob: -14.125629425048828
    6. ' for' → logprob: -14.750629425048828
    7. '```' → logprob: -16.625629425048828
    8. '	for' → logprob: -17.250629425048828
    9. '  
' → logprob: -18.000629425048828
    10. 'For' → logprob: -18.875629425048828

Token 842: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.968312951968983e-06
    2. '#' (adapté à ' #') → logprob: -11.625009536743164
    3. '    
' → logprob: -14.625009536743164
    4. ' for' → logprob: -15.250009536743164
    5. '   ' → logprob: -16.375009536743164
    6. '
' → logprob: -16.500009536743164
    7. '	for' → logprob: -17.625009536743164
    8. '```' → logprob: -18.250009536743164
    9. '  
' → logprob: -18.750009536743164
    10. '
' → logprob: -19.000009536743164

Token 843: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.635164754698053e-05
    2. '#' → logprob: -9.625066757202148
    3. ' for' → logprob: -15.500066757202148
    4. 'if' → logprob: -17.50006675720215
    5. 'For' → logprob: -18.37506675720215
    6. '	for' → logprob: -18.62506675720215
    7. '   ' → logprob: -18.87506675720215
    8. '
' → logprob: -19.25006675720215
    9. '#print' → logprob: -19.62506675720215
    10. 'q' → logprob: -19.75006675720215

Token 844: ' tous' (ID: 10688)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2119513303041458
    2. 'v' → logprob: -2.21195125579834
    3. 'neighbor' → logprob: -2.58695125579834
    4. 'nx' → logprob: -5.58695125579834
    5. 'nei' → logprob: -6.58695125579834
    6. 'e' → logprob: -7.58695125579834
    7. 'ne' → logprob: -8.33695125579834
    8. ' y' → logprob: -9.21195125579834
    9. 'node' → logprob: -9.58695125579834
    10. 'nbr' → logprob: -9.83695125579834

Token 845: ' les' (ID: 1341)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.29787564277648926
    2. 'y' → logprob: -1.4228756427764893
    3. ' v' → logprob: -5.17287540435791
    4. ' y' → logprob: -5.29787540435791
    5. 'neighbor' → logprob: -5.54787540435791
    6. 'nx' → logprob: -7.79787540435791
    7. 'u' → logprob: -7.79787540435791
    8. 'e' → logprob: -7.79787540435791
    9. 'nei' → logprob: -7.92287540435791
    10. 'ne' → logprob: -9.42287540435791

Token 846: ' voisins' (ID: 166720)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7055756449699402
    2. 'y' → logprob: -0.8305756449699402
    3. 'neighbor' → logprob: -2.955575704574585
    4. 'vo' → logprob: -4.955575466156006
    5. 'nx' → logprob: -5.455575466156006
    6. 'nei' → logprob: -6.080575466156006
    7. 'ne' → logprob: -6.455575466156006
    8. 'n' → logprob: -7.330575466156006
    9. 'u' → logprob: -7.455575466156006
    10. 'e' → logprob: -7.830575466156006

Token 847: ' xx' (ID: 44242)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3609614670276642
    2. 'v' → logprob: -1.7359614372253418
    3. 'in' → logprob: -2.860961437225342
    4. ' in' → logprob: -3.360961437225342
    5. ' y' → logprob: -3.985961437225342
    6. 'of' → logprob: -5.860961437225342
    7. ' v' → logprob: -5.985961437225342
    8. 'w' → logprob: -6.360961437225342
    9. 'for' → logprob: -6.360961437225342
    10. 'u' → logprob: -6.610961437225342

Token 848: ' de' (ID: 334)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931719779968262
    2. ' in' → logprob: -0.6931719779968262
    3. ' ' → logprob: -11.068172454833984
    4. '	in' → logprob: -11.943172454833984
    5. 'n' → logprob: -14.193172454833984
    6. '  ' → logprob: -14.818172454833984
    7. ' ' → logprob: -14.943172454833984
    8. 'x' → logprob: -15.318172454833984
    9. ',' → logprob: -15.443172454833984
    10. 's' → logprob: -15.943172454833984

Token 849: ' x' (ID: 1215)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0007218453683890402
    2. ' E' → logprob: -7.2507219314575195
    3. 'x' → logprob: -11.37572193145752
    4. '   ' → logprob: -15.00072193145752
    5. ' ' → logprob: -15.62572193145752
    6. '  ' → logprob: -17.500720977783203
    7. '	E' → logprob: -18.250720977783203
    8. ' x' → logprob: -18.375720977783203
    9. '    ' → logprob: -19.000720977783203
    10. 'xx' → logprob: -19.125720977783203

Token 850: ' dans' (ID: 2671)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.19553320109844208
    2. ' E' → logprob: -2.320533275604248
    3. 'in' → logprob: -3.320533275604248
    4. ' in' → logprob: -3.695533275604248
    5. '   ' → logprob: -4.570533275604248
    6. ':' → logprob: -4.945533275604248
    7. 'for' → logprob: -8.07053279876709
    8. ':E' → logprob: -8.69553279876709
    9. ':
' → logprob: -8.82053279876709
    10. ' :' → logprob: -9.07053279876709

Token 851: ' la' (ID: 557)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0002314303710591048
    2. ' E' → logprob: -8.375231742858887
    3. '   ' → logprob: -14.250231742858887
    4. ' ' → logprob: -16.25023078918457
    5. '	E' → logprob: -17.50023078918457
    6. '(E' → logprob: -18.62523078918457
    7. '  ' → logprob: -18.62523078918457
    8. '
' → logprob: -19.50023078918457
    9. '    ' → logprob: -19.62523078918457
    10. '       ' → logprob: -19.75023078918457

Token 852: ' liste' (ID: 31719)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.3425219549390022e-05
    2. ' E' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.25001335144043
    4. 'for' → logprob: -17.12501335144043
    5. '
' → logprob: -17.25001335144043
    6. ' range' → logprob: -18.00001335144043
    7. ' ' → logprob: -18.00001335144043
    8. 'range' → logprob: -18.00001335144043
    9. ' for' → logprob: -18.12501335144043
    10. '[E' → logprob: -18.37501335144043

Token 853: ' d' (ID: 272)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.0921942703134846e-05
    2. ' E' → logprob: -11.50001049041748
    3. '[E' → logprob: -14.62501049041748
    4. '   ' → logprob: -15.37501049041748
    5. '(E' → logprob: -17.125011444091797
    6. 'x' → logprob: -19.250011444091797
    7. '```' → logprob: -19.750011444091797
    8. ' ' → logprob: -20.125011444091797
    9. '`' → logprob: -20.375011444091797
    10. ',E' → logprob: -20.375011444091797

Token 854: ''ad' (ID: 36162)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.056605271995067596
    2. 'adj' → logprob: -2.931605339050293
    3. ''E' → logprob: -7.556605339050293
    4. '[E' → logprob: -7.806605339050293
    5. 'jac' → logprob: -8.056605339050293
    6. ''ad' → logprob: -8.306605339050293
    7. ' E' → logprob: -9.931605339050293
    8. '`' → logprob: -9.931605339050293
    9. 'es' → logprob: -10.806605339050293
    10. ' adjacency' → logprob: -11.056605339050293

Token 855: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.03808589652180672
    2. 'j' → logprob: -3.2880859375
    3. '[j' → logprob: -10.6630859375
    4. 'E' → logprob: -11.6630859375
    5. 'js' → logprob: -12.2880859375
    6. 'acency' → logprob: -13.2880859375
    7. 'aj' → logprob: -13.6630859375
    8. 'jec' → logprob: -13.7880859375
    9. 'jc' → logprob: -14.0380859375
    10. 'J' → logprob: -14.1630859375

Token 856: 'ence' (ID: 1082)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0327833816409111
    2. 'ence' → logprob: -3.782783269882202
    3. 'ac' → logprob: -5.907783508300781
    4. 'acency' → logprob: -6.907783508300781
    5. 'escence' → logprob: -7.032783508300781
    6. 'jac' → logprob: -7.032783508300781
    7. '[E' → logprob: -7.282783508300781
    8. 'j' → logprob: -7.407783508300781
    9. 'ences' → logprob: -7.532783508300781
    10. 'es' → logprob: -7.657783508300781

Token 857: '
' (ID: 198)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0028011982794851065
    2. ' E' → logprob: -6.127801418304443
    3. '   ' → logprob: -7.627801418304443
    4. ':' → logprob: -9.377800941467285
    5. '(E' → logprob: -10.877800941467285
    6. ':
' → logprob: -11.127800941467285
    7. ':E' → logprob: -13.252800941467285
    8. '  ' → logprob: -13.377800941467285
    9. ' ' → logprob: -13.627800941467285
    10. 'for' → logprob: -13.752800941467285

Token 858: '   ' (ID: 271)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.030224448069930077
    2. '   ' → logprob: -4.030224323272705
    3. ' E' → logprob: -4.655224323272705
    4. ':' → logprob: -6.280224323272705
    5. ':
' → logprob: -7.780224323272705
    6. '(E' → logprob: -9.530224800109863
    7. ':E' → logprob: -10.905224800109863
    8. 'for' → logprob: -11.030224800109863
    9. '  ' → logprob: -11.030224800109863
    10. '       ' → logprob: -11.280224800109863

Token 859: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1718652844429016
    2. '   ' → logprob: -2.421865224838257
    3. ' for' → logprob: -2.671865224838257
    4. '	for' → logprob: -11.171865463256836
    5. ' ' → logprob: -12.046865463256836
    6. '  ' → logprob: -12.421865463256836
    7. '_for' → logprob: -13.421865463256836
    8. '    
' → logprob: -13.921865463256836
    9. '```' → logprob: -14.171865463256836
    10. '       ' → logprob: -14.796865463256836

Token 860: ' xx' (ID: 44242)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.2519296407699585
    2. ' xx' → logprob: -1.5019296407699585
    3. '(xx' → logprob: -14.62692928314209
    4. 'x' → logprob: -16.376930236816406
    5. 'xxx' → logprob: -17.376930236816406
    6. ' ' → logprob: -17.876930236816406
    7. ' x' → logprob: -18.251930236816406
    8. ' ' → logprob: -19.251930236816406
    9. '.xx' → logprob: -19.251930236816406
    10. 'E' → logprob: -20.126930236816406

Token 861: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10022371262311935
    2. ' in' → logprob: -2.3502237796783447
    3. ' ' → logprob: -11.850223541259766
    4. '	in' → logprob: -11.975223541259766
    5. '  ' → logprob: -13.350223541259766
    6. 'In' → logprob: -13.850223541259766
    7. '_in' → logprob: -14.725223541259766
    8. '   ' → logprob: -15.725223541259766
    9. 'ins' → logprob: -16.100223541259766
    10. 'E' → logprob: -16.225223541259766

Token 862: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0005530327325686812
    2. ' E' → logprob: -7.500553131103516
    3. '   ' → logprob: -18.125553131103516
    4. ' ' → logprob: -19.500553131103516
    5. '(E' → logprob: -19.500553131103516
    6. '[E' → logprob: -20.500553131103516
    7. '	E' → logprob: -21.000553131103516
    8. '  ' → logprob: -21.875553131103516
    9. ',E' → logprob: -22.000553131103516
    10. ' ' → logprob: -22.500553131103516

Token 863: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.375
    3. ' [' → logprob: -17.0
    4. 'x' → logprob: -17.25
    5. '[
' → logprob: -19.625
    6. '```' → logprob: -20.5
    7. '(x' → logprob: -20.75
    8. '{x' → logprob: -21.375
    9. '[i' → logprob: -22.375
    10. ' ' → logprob: -22.625

Token 864: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -4.143808109802194e-05
    2. ']' → logprob: -10.375041007995605
    3. ']:
' → logprob: -12.000041007995605
    4. ']:
' → logprob: -12.625041007995605
    5. ':' → logprob: -14.875041007995605
    6. ']:

' → logprob: -16.000041961669922
    7. ']>' → logprob: -17.000041961669922
    8. '):' → logprob: -17.000041961669922
    9. '']:' → logprob: -17.000041961669922
    10. ' ]' → logprob: -17.125041961669922

Token 865: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006648937705904245
    2. 'if' → logprob: -5.756649017333984
    3. '   ' → logprob: -6.506649017333984
    4. ' if' → logprob: -6.506649017333984
    5. '	   ' → logprob: -7.881649017333984
    6. '	' → logprob: -10.131649017333984
    7. '    ' → logprob: -10.131649017333984
    8. ' ' → logprob: -12.006649017333984
    9. '	if' → logprob: -12.006649017333984
    10. '           ' → logprob: -13.381649017333984

Token 866: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08260388672351837
    2. '       ' → logprob: -2.582603931427002
    3. '   ' → logprob: -6.082603931427002
    4. ' if' → logprob: -6.582603931427002
    5. '           ' → logprob: -11.207603454589844
    6. '	if' → logprob: -11.332603454589844
    7. '	   ' → logprob: -11.332603454589844
    8. '    ' → logprob: -13.332603454589844
    9. '	' → logprob: -14.332603454589844
    10. ' ' → logprob: -14.832603454589844

Token 867: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002558561391197145
    2. '   ' → logprob: -8.500255584716797
    3. ' if' → logprob: -10.500255584716797
    4. '       ' → logprob: -10.750255584716797
    5. '           ' → logprob: -12.750255584716797
    6. '	if' → logprob: -15.000255584716797
    7. '    ' → logprob: -17.375255584716797
    8. '```' → logprob: -17.500255584716797
    9. 'If' → logprob: -17.625255584716797
    10. '#' → logprob: -18.125255584716797

Token 868: ' ce' (ID: 2357)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.030818453058600426
    2. ' not' → logprob: -3.530818462371826
    3. 'visited' → logprob: -6.905818462371826
    4. '(not' → logprob: -9.905817985534668
    5. ' visited' → logprob: -11.155817985534668
    6. '	not' → logprob: -14.280817985534668
    7. ' ' → logprob: -16.030818939208984
    8. '   ' → logprob: -16.280818939208984
    9. '!' → logprob: -16.405818939208984
    10. '(' → logprob: -16.530818939208984

Token 869: ' voisin' (ID: 145411)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5975211262702942
    2. 'not' → logprob: -0.8475211262702942
    3. 'visited' → logprob: -3.9725210666656494
    4. ' visited' → logprob: -6.0975213050842285
    5. '!' → logprob: -9.09752082824707
    6. ' ' → logprob: -9.84752082824707
    7. 'xx' → logprob: -10.59752082824707
    8. '   ' → logprob: -11.47252082824707
    9. ' xx' → logprob: -11.72252082824707
    10. '       ' → logprob: -11.84752082824707

Token 870: ' n' (ID: 297)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.12776701152324677
    2. ' not' → logprob: -2.1277670860290527
    3. 'and' → logprob: -7.877767086029053
    4. '!=' → logprob: -8.752766609191895
    5. 'visited' → logprob: -8.877766609191895
    6. 'is' → logprob: -9.252766609191895
    7. ' and' → logprob: -10.502766609191895
    8. '!' → logprob: -11.502766609191895
    9. ' is' → logprob: -11.502766609191895
    10. '   ' → logprob: -12.502766609191895

Token 871: ''a' (ID: 10443)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.00023321842309087515
    2. 'o' → logprob: -9.12523365020752
    3. '[' → logprob: -9.37523365020752
    4. 'not' → logprob: -10.37523365020752
    5. 'visited' → logprob: -12.25023365020752
    6. '[o' → logprob: -14.50023365020752
    7. '#' → logprob: -14.87523365020752
    8. '```' → logprob: -14.87523365020752
    9. 'on' → logprob: -15.25023365020752
    10. ']' → logprob: -15.37523365020752

Token 872: ' pas' (ID: 2173)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3328503966331482
    2. 'pas' → logprob: -1.332850456237793
    3. 'ot' → logprob: -4.582850456237793
    4. ' not' → logprob: -5.207850456237793
    5. ' pas' → logprob: -6.207850456237793
    6. 'et' → logprob: -7.707850456237793
    7. '#' → logprob: -7.957850456237793
    8. 'visited' → logprob: -8.207850456237793
    9. 't' → logprob: -8.332850456237793
    10. '_pas' → logprob: -9.707850456237793

Token 873: ' encore' (ID: 14043)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.04058432579040527
    2. ' visited' → logprob: -3.5405843257904053
    3. ' in' → logprob: -5.790584564208984
    4. 'in' → logprob: -5.915584564208984
    5. 'been' → logprob: -6.540584564208984
    6. ' been' → logprob: -6.540584564208984
    7. 'not' → logprob: -7.165584564208984
    8. ' not' → logprob: -7.540584564208984
    9. 'vis' → logprob: -7.540584564208984
    10. ')' → logprob: -10.165584564208984

Token 874: ' été' (ID: 9799)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0009712525061331689
    2. ' visited' → logprob: -7.12597131729126
    3. 'been' → logprob: -8.750970840454102
    4. 'vis' → logprob: -12.500970840454102
    5. ' been' → logprob: -12.875970840454102
    6. 'visit' → logprob: -13.875970840454102
    7. 'visi' → logprob: -14.750970840454102
    8. 'v' → logprob: -15.875970840454102
    9. 'True' → logprob: -16.0009708404541
    10. '
' → logprob: -16.6259708404541

Token 875: ' vis' (ID: 1909)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0009348054882138968
    2. ' visited' → logprob: -7.000934600830078
    3. 'vis' → logprob: -10.750934600830078
    4. 'visit' → logprob: -13.625934600830078
    5. 'visi' → logprob: -14.750934600830078
    6. 'vist' → logprob: -16.625934600830078
    7. 'True' → logprob: -17.125934600830078
    8. 'v' → logprob: -17.500934600830078
    9. 'Visited' → logprob: -17.875934600830078
    10. '
' → logprob: -19.000934600830078

Token 876: 'ité' (ID: 3761)
  Prédit: 'ited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -9.901345038088039e-05
    2. 'ité' → logprob: -9.375099182128906
    3. 'ite' → logprob: -11.875099182128906
    4. 'isted' → logprob: -12.125099182128906
    5. 'it' → logprob: -14.125099182128906
    6. 'ITED' → logprob: -15.250099182128906
    7. '```' → logprob: -15.875099182128906
    8. '   ' → logprob: -16.125099182128906
    9. 'itted' → logprob: -16.500099182128906
    10. '[' → logprob: -16.500099182128906

Token 877: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1318095475435257
    2. '           ' → logprob: -2.2568094730377197
    3. 'and' → logprob: -4.006809711456299
    4. '       ' → logprob: -8.13180923461914
    5. ':' → logprob: -9.38180923461914
    6. ',' → logprob: -9.63180923461914
    7. ':
' → logprob: -10.00680923461914
    8. '		' → logprob: -10.88180923461914
    9. '          ' → logprob: -10.88180923461914
    10. '   ' → logprob: -11.13180923461914

Token 878: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11770740151405334
    2. '           ' → logprob: -2.2427074909210205
    3. 'and' → logprob: -5.742707252502441
    4. '       ' → logprob: -6.617707252502441
    5. '   ' → logprob: -9.617707252502441
    6. ':' → logprob: -9.867707252502441
    7. ' if' → logprob: -10.117707252502441
    8. ',' → logprob: -10.367707252502441
    9. '               ' → logprob: -10.617707252502441
    10. '		' → logprob: -10.867707252502441

Token 879: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21343165636062622
    2. 'if' (adapté à ' if') → logprob: -2.5884315967559814
    3. '       ' → logprob: -2.8384315967559814
    4. ' if' → logprob: -3.3384315967559814
    5. '   ' → logprob: -4.2134318351745605
    6. '	   ' → logprob: -6.0884318351745605
    7. '	' → logprob: -6.2134318351745605
    8. '	       ' → logprob: -6.7134318351745605
    9. '	if' → logprob: -7.0884318351745605
    10. '		' → logprob: -7.0884318351745605

Token 880: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.023431815207004547
    2. ' not' → logprob: -3.7734317779541016
    3. 'visited' → logprob: -8.648431777954102
    4. '(not' → logprob: -11.898431777954102
    5. ' visited' → logprob: -12.773431777954102
    6. '	not' → logprob: -14.273431777954102
    7. '   ' → logprob: -14.523431777954102
    8. '!' → logprob: -16.6484317779541
    9. ' ' → logprob: -16.7734317779541
    10. '
' → logprob: -17.6484317779541

Token 881: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.07888978719711304
    2. ' visited' → logprob: -2.578889846801758
    3. ' ' → logprob: -19.828889846801758
    4. 'Visited' → logprob: -20.578889846801758
    5. ' ' → logprob: -20.953889846801758
    6. '   ' → logprob: -21.328889846801758
    7. 'visit' → logprob: -21.703889846801758
    8. 'vis' → logprob: -21.828889846801758
    9. '	' → logprob: -23.078889846801758
    10. 'visible' → logprob: -23.953889846801758

Token 882: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. 'xx' → logprob: -15.25
    3. '(xx' → logprob: -17.625
    4. ' [' → logprob: -17.875
    5. '[x' → logprob: -18.75
    6. '```' → logprob: -20.5
    7. '   ' → logprob: -21.25
    8. '
' → logprob: -21.25
    9. '

' → logprob: -21.625
    10. '\[' → logprob: -22.375

Token 883: 'xx' (ID: 7605)
  Prédit: 'xx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -2.6537622034084052e-05
    2. '[' → logprob: -11.50002670288086
    3. '(xx' → logprob: -11.50002670288086
    4. ' xx' → logprob: -12.00002670288086
    5. '   ' → logprob: -18.87502670288086
    6. 'x' → logprob: -19.37502670288086
    7. '(' → logprob: -20.62502670288086
    8. '       ' → logprob: -21.12502670288086
    9. 'xxx' → logprob: -21.37502670288086
    10. '```' → logprob: -21.37502670288086

Token 884: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4452737271785736
    2. '):
' → logprob: -2.1952736377716064
    3. ']:' → logprob: -2.4452736377716064
    4. '):' → logprob: -2.5702736377716064
    5. ':
' → logprob: -3.0702736377716064
    6. ']:
' → logprob: -3.3202736377716064
    7. '       ' → logprob: -6.9452738761901855
    8. '   ' → logprob: -7.1952738761901855
    9. ']' → logprob: -8.695273399353027
    10. '():
' → logprob: -9.195273399353027

Token 885: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027035735547542572
    2. '		' → logprob: -4.277035713195801
    3. '	       ' → logprob: -4.902035713195801
    4. 'q' → logprob: -5.777035713195801
    5. ' q' → logprob: -6.777035713195801
    6. '	   ' → logprob: -8.0270357131958
    7. '		   ' → logprob: -8.2770357131958
    8. '    	' → logprob: -9.1520357131958
    9. ' ' → logprob: -9.2770357131958
    10. '	' → logprob: -9.9020357131958

Token 886: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03476452827453613
    2. ' q' → logprob: -4.034764289855957
    3. '               ' → logprob: -4.534764289855957
    4. '           ' → logprob: -5.534764289855957
    5. '       ' → logprob: -7.284764289855957
    6. '   ' → logprob: -7.534764289855957
    7. '	q' → logprob: -7.534764289855957
    8. '		' → logprob: -11.784764289855957
    9. '	       ' → logprob: -12.159764289855957
    10. '	' → logprob: -12.409764289855957

Token 887: ' L' (ID: 451)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.0868278524139896e-05
    2. 'visited' → logprob: -10.25006103515625
    3. '           ' → logprob: -10.62506103515625
    4. '               ' → logprob: -13.87506103515625
    5. ' q' → logprob: -16.50006103515625
    6. '   ' → logprob: -16.50006103515625
    7. '                   ' → logprob: -17.50006103515625
    8. '            
' → logprob: -17.75006103515625
    9. '	q' → logprob: -18.00006103515625
    10. '#' → logprob: -18.37506103515625

Token 888: ''aj' (ID: 116735)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0005299181793816388
    2. ' q' → logprob: -7.750529766082764
    3. '   ' → logprob: -9.500530242919922
    4. '	q' → logprob: -11.875530242919922
    5. '#' → logprob: -12.250530242919922
    6. '           ' → logprob: -12.875530242919922
    7. '[q' → logprob: -13.500530242919922
    8. 'e' → logprob: -13.625530242919922
    9. '       ' → logprob: -13.750530242919922
    10. 'a' → logprob: -14.125530242919922

Token 889: 'outer' (ID: 5838)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.32648104429244995
    2. 'a' → logprob: -1.3264811038970947
    3. 'aj' → logprob: -4.576480865478516
    4. '   ' → logprob: -6.576480865478516
    5. '#' → logprob: -8.076480865478516
    6. 'e' → logprob: -8.576480865478516
    7. 'er' → logprob: -8.701480865478516
    8. '           ' → logprob: -9.201480865478516
    9. 'iste' → logprob: -9.576480865478516
    10. 'ister' → logprob: -9.701480865478516

Token 890: ' à' (ID: 1221)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4367924630641937
    2. ' q' → logprob: -1.5617924928665161
    3. '(q' → logprob: -2.0617923736572266
    4. 'to' → logprob: -4.936792373657227
    5. '           ' → logprob: -5.436792373657227
    6. '(' → logprob: -6.311792373657227
    7. ' to' → logprob: -6.561792373657227
    8. '	q' → logprob: -7.061792373657227
    9. '            ' → logprob: -8.811792373657227
    10. '   ' → logprob: -8.811792373657227

Token 891: ' la' (ID: 557)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0002613358374219388
    2. ' q' → logprob: -8.250261306762695
    3. '	q' → logprob: -17.625261306762695
    4. '   ' → logprob: -21.625261306762695
    5. ' ' → logprob: -22.125261306762695
    6. '_q' → logprob: -23.125261306762695
    7. ' ' → logprob: -24.125261306762695
    8. '    ' → logprob: -24.250261306762695
    9. '  ' → logprob: -24.375261306762695
    10. 'qx' → logprob: -24.750261306762695

Token 892: ' file' (ID: 1974)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.320199877838604e-07
    2. ' q' → logprob: -14.875
    3. '	q' → logprob: -19.0
    4. 'queue' → logprob: -21.5
    5. '_q' → logprob: -21.5
    6. 'u' → logprob: -21.75
    7. 'que' → logprob: -22.25
    8. '   ' → logprob: -22.25
    9. '[q' → logprob: -22.25
    10. 'qq' → logprob: -22.375

Token 893: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.062257274985313416
    2. ' q' → logprob: -2.8122572898864746
    3. '           ' → logprob: -8.187256813049316
    4. '               ' → logprob: -12.187256813049316
    5. '	q' → logprob: -13.312256813049316
    6. '   ' → logprob: -14.062256813049316
    7. '            ' → logprob: -14.187256813049316
    8. ' ' → logprob: -14.187256813049316
    9. '            
' → logprob: -14.687256813049316
    10. '_q' → logprob: -14.937256813049316

Token 894: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22745941579341888
    2. '.append' → logprob: -1.97745943069458
    3. ' q' → logprob: -3.22745943069458
    4. '               ' → logprob: -4.22745943069458
    5. 'q' → logprob: -4.97745943069458
    6. '.q' → logprob: -6.72745943069458
    7. '.' → logprob: -7.10245943069458
    8. '		' → logprob: -7.72745943069458
    9. '	q' → logprob: -8.227458953857422
    10. ',q' → logprob: -8.477458953857422

Token 895: ' le' (ID: 505)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.06213114783167839
    2. ' q' → logprob: -3.18713116645813
    3. 'que' → logprob: -4.812130928039551
    4. 'visited' → logprob: -4.937130928039551
    5. 'y' → logprob: -7.062130928039551
    6. 'la' → logprob: -7.312130928039551
    7. 'qq' → logprob: -7.437130928039551
    8. 'qu' → logprob: -8.06213092803955
    9. 'vis' → logprob: -8.43713092803955
    10. ' y' → logprob: -8.56213092803955

Token 896: ' traiter' (ID: 105852)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.4733710289001465
    2. 'par' → logprob: -1.3483710289001465
    3. 'pro' → logprob: -3.0983710289001465
    4. 'vis' → logprob: -3.2233710289001465
    5. 'tr' → logprob: -4.8483710289001465
    6. ' traitement' → logprob: -4.9733710289001465
    7. 'visit' → logprob: -5.2233710289001465
    8. 'processing' → logprob: -5.3483710289001465
    9. 'visited' → logprob: -6.0983710289001465
    10. 'f' → logprob: -6.7233710289001465

Token 897: ' plus' (ID: 2932)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.036987196654081345
    2. ' q' → logprob: -3.9119873046875
    3. 'q' → logprob: -4.2869873046875
    4. '		' → logprob: -6.7869873046875
    5. '               ' → logprob: -6.9119873046875
    6. '	q' → logprob: -8.5369873046875
    7. '(q' → logprob: -9.7869873046875
    8. '            
' → logprob: -10.2869873046875
    9. '	       ' → logprob: -10.7869873046875
    10. ',q' → logprob: -11.0369873046875

Token 898: ' tard' (ID: 30225)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.048723965883255005
    2. ' tard' → logprob: -3.0487239360809326
    3. 'loin' → logprob: -9.548724174499512
    4. 'late' → logprob: -10.173724174499512
    5. '   ' → logprob: -12.048724174499512
    6. 'tar' → logprob: -12.298724174499512
    7. 'l' → logprob: -12.423724174499512
    8. 'avant' → logprob: -13.423724174499512
    9. '```' → logprob: -13.423724174499512
    10. 'ard' → logprob: -13.423724174499512

Token 899: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09681098163127899
    2. '		' → logprob: -3.096811056137085
    3. '               ' → logprob: -3.596811056137085
    4. ' q' → logprob: -4.471810817718506
    5. 'q' → logprob: -5.221810817718506
    6. '	       ' → logprob: -7.471810817718506
    7. '	q' → logprob: -7.596810817718506
    8. '			' → logprob: -8.096811294555664
    9. '	           ' → logprob: -8.596811294555664
    10. '		       ' → logprob: -8.846811294555664

Token 900: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20496590435504913
    2. '		' → logprob: -2.704965829849243
    3. ' q' → logprob: -2.829965829849243
    4. '               ' → logprob: -3.704965829849243
    5. '	       ' → logprob: -4.204966068267822
    6. 'q' → logprob: -4.329966068267822
    7. '		       ' → logprob: -6.329966068267822
    8. '	           ' → logprob: -6.579966068267822
    9. '		   ' → logprob: -6.954966068267822
    10. ' ' → logprob: -7.329966068267822

Token 901: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -7.517272024415433e-05
    2. ' q' → logprob: -9.500075340270996
    3. '           ' → logprob: -15.875075340270996
    4. '	q' → logprob: -16.87507438659668
    5. '               ' → logprob: -18.25007438659668
    6. '   ' → logprob: -20.00007438659668
    7. '            ' → logprob: -20.12507438659668
    8. '_q' → logprob: -20.25007438659668
    9. 'qq' → logprob: -20.75007438659668
    10. 'qx' → logprob: -21.50007438659668

Token 902: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011741555063053966
    2. '.' → logprob: -6.751173973083496
    3. '.app' → logprob: -12.876173973083496
    4. '.ap' → logprob: -14.626173973083496
    5. '.extend' → logprob: -15.126173973083496
    6. '.push' → logprob: -15.251173973083496
    7. ' .' → logprob: -15.376173973083496
    8. 'append' → logprob: -15.376173973083496
    9. '.add' → logprob: -17.126174926757812
    10. '.insert' → logprob: -17.626174926757812

Token 903: '(xx' (ID: 161745)
  Prédit: '(xx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xx' → logprob: -0.12693241238594055
    2. '(' → logprob: -2.126932382583618
    3. ' (' → logprob: -13.001932144165039
    4. '(x' → logprob: -13.251932144165039
    5. '((' → logprob: -16.62693214416504
    6. 'xx' → logprob: -16.75193214416504
    7. '(nn' → logprob: -16.75193214416504
    8. '(
' → logprob: -16.75193214416504
    9. '(ii' → logprob: -17.75193214416504
    10. '(ll' → logprob: -18.12693214416504

Token 904: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9862216504407115e-05
    2. ')
' → logprob: -11.750020027160645
    3. ' )' → logprob: -12.125020027160645
    4. '())' → logprob: -12.750020027160645
    5. '(x' → logprob: -13.500020027160645
    6. '(' → logprob: -14.125020027160645
    7. '))' → logprob: -14.500020027160645
    8. '()' → logprob: -15.375020027160645
    9. ')#' → logprob: -16.125019073486328
    10. '`)' → logprob: -16.750019073486328

Token 905: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001984067726880312
    2. 'for' → logprob: -6.626984119415283
    3. '#' → logprob: -8.376983642578125
    4. '<|end|>' → logprob: -8.501983642578125
    5. 'if' → logprob: -9.126983642578125
    6. '#print' → logprob: -9.376983642578125
    7. '```' → logprob: -11.001983642578125
    8. ')' → logprob: -12.751983642578125
    9. ' print' → logprob: -12.751983642578125
    10. '
' → logprob: -13.126983642578125

Token 906: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '#' → logprob: -16.75
    3. '```' → logprob: -17.625
    4. '#print' → logprob: -18.375
    5. ' print' → logprob: -20.25
    6. '
' → logprob: -20.625
    7. '``' → logprob: -20.75
    8. 'for' → logprob: -21.625
    9. 'pr' → logprob: -22.0
    10. 'Print' → logprob: -22.5

Token 907: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.031794700771570206
    2. '#' → logprob: -3.531794786453247
    3. 'ichage' → logprob: -7.281794548034668
    4. 'iche' → logprob: -7.656794548034668
    5. 'ich' → logprob: -7.906794548034668
    6. 'print' → logprob: -8.781794548034668
    7. 'f' → logprob: -8.906794548034668
    8. 'ic' → logprob: -8.906794548034668
    9. 'ichier' → logprob: -10.656794548034668
    10. '```' → logprob: -11.781794548034668

Token 908: ' la' (ID: 557)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.004689407534897327
    2. 'max' → logprob: -5.7546892166137695
    3. 'print' → logprob: -6.5046892166137695
    4. '(' → logprob: -11.75468921661377
    5. '(print' → logprob: -12.12968921661377
    6. '(sum' → logprob: -14.25468921661377
    7. '(f' → logprob: -16.879690170288086
    8. '(m' → logprob: -17.004690170288086
    9. '(ans' → logprob: -17.629690170288086
    10. '(min' → logprob: -17.754690170288086

Token 909: ' somme' (ID: 64484)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.5758623480796814
    2. 'max' → logprob: -1.0758624076843262
    3. 'print' → logprob: -2.575862407684326
    4. 'sum' → logprob: -4.325862407684326
    5. 's' → logprob: -5.575862407684326
    6. '(sum' → logprob: -6.325862407684326
    7. 'maximum' → logprob: -6.700862407684326
    8. 'r' → logprob: -9.075861930847168
    9. '(' → logprob: -9.075861930847168
    10. 'value' → logprob: -9.700861930847168

Token 910: ' maximale' (ID: 76380)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.07718197256326675
    2. 'print' → logprob: -3.0771820545196533
    3. '(' → logprob: -3.8271820545196533
    4. '(print' → logprob: -5.077181816101074
    5. 'max' → logprob: -8.827181816101074
    6. '(
' → logprob: -11.327181816101074
    7. '(sum' → logprob: -11.702181816101074
    8. '()' → logprob: -11.952181816101074
    9. '("' → logprob: -13.077181816101074
    10. '(min' → logprob: -13.452181816101074

Token 911: ' calcul' (ID: 7559)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00012511172099038959
    2. '(print' → logprob: -9.00012493133545
    3. '(' → logprob: -13.87512493133545
    4. '(max' → logprob: -14.50012493133545
    5. ' print' → logprob: -16.625125885009766
    6. '```' → logprob: -17.125125885009766
    7. '(
' → logprob: -17.875125885009766
    8. '
' → logprob: -18.125125885009766
    9. '#print' → logprob: -19.125125885009766
    10. '(pr' → logprob: -19.125125885009766

Token 912: 'ée' (ID: 2894)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.06754256784915924
    2. 'max' → logprob: -3.317542552947998
    3. 'e' → logprob: -4.192542552947998
    4. 'print' → logprob: -4.817542552947998
    5. 'ation' → logprob: -6.192542552947998
    6. '(' → logprob: -6.317542552947998
    7. '(sum' → logprob: -7.067542552947998
    8. 'é' → logprob: -8.067543029785156
    9. '(e' → logprob: -8.567543029785156
    10. 'sum' → logprob: -9.067543029785156

Token 913: ' précéd' (ID: 55435)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -14.500000953674316
    3. ' print' → logprob: -17.875
    4. '(print' → logprob: -18.625
    5. '``' → logprob: -19.5
    6. '
' → logprob: -21.125
    7. '#print' → logprob: -21.875
    8. 'pr' → logprob: -22.625
    9. 'Print' → logprob: -23.0
    10. '(' → logprob: -23.375

Token 914: 'emment' (ID: 58019)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.4866946339607239
    2. 'ente' → logprob: -1.986694574356079
    3. 'e' → logprob: -2.361694574356079
    4. 'print' → logprob: -2.361694574356079
    5. 'ee' → logprob: -4.111694812774658
    6. 'ed' → logprob: -4.486694812774658
    7. 'emment' → logprob: -5.486694812774658
    8. 'é' → logprob: -5.611694812774658
    9. 'ent' → logprob: -5.986694812774658
    10. 'ue' → logprob: -6.111694812774658

Token 915: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.65707261255011e-06
    2. '(print' → logprob: -11.750008583068848
    3. '```' → logprob: -14.750008583068848
    4. ' print' → logprob: -16.000009536743164
    5. '(' → logprob: -16.375009536743164
    6. '
' → logprob: -17.875009536743164
    7. ')' → logprob: -18.625009536743164
    8. '()' → logprob: -19.125009536743164
    9. '#print' → logprob: -19.375009536743164
    10. '()
' → logprob: -19.875009536743164

Token 916: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.25
    3. ' print' → logprob: -21.625
    4. '``' → logprob: -22.375
    5. '
' → logprob: -24.75
    6. '#print' → logprob: -25.625
    7. 'pr' → logprob: -26.0
    8. 'println' → logprob: -26.5
    9. '(print' → logprob: -26.5
    10. '`' → logprob: -27.125

Token 917: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.3868773579597473
    2. '(' → logprob: -1.1368772983551025
    3. 'max' → logprob: -12.886877059936523
    4. '('' → logprob: -13.761877059936523
    5. ' (' → logprob: -14.011877059936523
    6. '(Max' → logprob: -14.386877059936523
    7. '(sum' → logprob: -14.886877059936523
    8. '("' → logprob: -15.136877059936523
    9. '(MAX' → logprob: -15.261877059936523
    10. '()' → logprob: -16.011877059936523

Token 918: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.584239938296378e-06
    2. ' )' → logprob: -12.375007629394531
    3. '())' → logprob: -13.875007629394531
    4. '()' → logprob: -13.875007629394531
    5. '(' → logprob: -14.625007629394531
    6. ')
' → logprob: -15.125007629394531
    7. ',' → logprob: -15.375007629394531
    8. '+' → logprob: -16.00000762939453
    9. ')`' → logprob: -16.00000762939453
    10. '))' → logprob: -16.12500762939453

Token 919: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012202570214867592
    2. 'print' → logprob: -4.887202739715576
    3. ' for' → logprob: -5.512202739715576
    4. '#' → logprob: -7.887202739715576
    5. '
' → logprob: -9.512202262878418
    6. '<|end|>' → logprob: -10.137202262878418
    7. ' 
' → logprob: -11.137202262878418
    8. '#print' → logprob: -11.262202262878418
    9. '  
' → logprob: -11.387202262878418
    10. '    
' → logprob: -12.137202262878418

Token 920: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.100281722843647
    2. 'print' → logprob: -2.3502817153930664
    3. ' for' → logprob: -9.725281715393066
    4. '#' → logprob: -11.475281715393066
    5. ' print' → logprob: -12.850281715393066
    6. 'ans' → logprob: -13.725281715393066
    7. ' 
' → logprob: -15.225281715393066
    8. 'values' → logprob: -15.725281715393066
    9. ''' → logprob: -15.850281715393066
    10. 'answer' → logprob: -16.350282669067383

Token 921: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.0763310119509697
    2. '#' → logprob: -3.2013309001922607
    3. 'izer' → logprob: -3.7013309001922607
    4. 'ize' → logprob: -5.45133113861084
    5. 'print' → logprob: -7.20133113861084
    6. 'isez' → logprob: -7.20133113861084
    7. 'er' → logprob: -7.70133113861084
    8. 'e' → logprob: -7.82633113861084
    9. 'for' → logprob: -7.95133113861084
    10. 'es' → logprob: -8.07633113861084

Token 922: ' une' (ID: 2463)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11476738750934601
    2. 'res' → logprob: -3.36476731300354
    3. 'result' → logprob: -4.114767551422119
    4. 'output' → logprob: -4.614767551422119
    5. 'ans' → logprob: -4.614767551422119
    6. 'print' → logprob: -4.739767551422119
    7. 'values' → logprob: -4.989767551422119
    8. 'for' → logprob: -5.364767551422119
    9. 'val' → logprob: -6.114767551422119
    10. 'x' → logprob: -6.364767551422119

Token 923: ' chaîne' (ID: 89288)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014597212895751
    2. 'space' → logprob: -5.514597415924072
    3. 'print' → logprob: -5.889597415924072
    4. 'list' → logprob: -6.389597415924072
    5. ')' → logprob: -7.014597415924072
    6. '(' → logprob: -7.264597415924072
    7. '"' → logprob: -7.389597415924072
    8. '[' → logprob: -7.389597415924072
    9. 'liste' → logprob: -7.389597415924072
    10. ' for' → logprob: -7.514597415924072

Token 924: ' vide' (ID: 21835)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.46075475215911865
    2. 'res' → logprob: -1.8357547521591187
    3. 'output' → logprob: -2.210754871368408
    4. 'ans' → logprob: -3.460754871368408
    5. 's' → logprob: -3.585754871368408
    6. '""' → logprob: -3.710754871368408
    7. 'answer' → logprob: -4.960754871368408
    8. 'out' → logprob: -5.085754871368408
    9. '"' → logprob: -6.835754871368408
    10. '''' → logprob: -7.960754871368408

Token 925: ' s' (ID: 265)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.41220611333847046
    2. 'result' → logprob: -1.4122061729431152
    3. 's' → logprob: -3.0372061729431152
    4. 'output' → logprob: -3.2872061729431152
    5. 'ans' → logprob: -5.287206172943115
    6. 'answer' → logprob: -6.037206172943115
    7. 'out' → logprob: -6.662206172943115
    8. 'ret' → logprob: -10.412205696105957
    9. 'chaine' → logprob: -11.037205696105957
    10. 'assign' → logprob: -11.287205696105957

Token 926: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.578518271446228
    2. '=' → logprob: -0.828518271446228
    3. '=""' → logprob: -6.578518390655518
    4. '=''' → logprob: -7.578518390655518
    5. 'tring' → logprob: -8.20351791381836
    6. 'tr' → logprob: -8.32851791381836
    7. 's' → logprob: -9.32851791381836
    8. ' ' → logprob: -10.70351791381836
    9. ' s' → logprob: -11.45351791381836
    10. '_' → logprob: -11.82851791381836

Token 927: ' la' (ID: 557)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.07435020059347153
    2. 's' → logprob: -3.074350118637085
    3. '''' → logprob: -3.824350118637085
    4. '"' → logprob: -5.699350357055664
    5. ''' → logprob: -8.699350357055664
    6. '"""' → logprob: -10.449350357055664
    7. '"s' → logprob: -10.949350357055664
    8. ' ""' → logprob: -11.074350357055664
    9. ''s' → logprob: -11.449350357055664
    10. ' s' → logprob: -12.574350357055664

Token 928: ' construction' (ID: 9770)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.42897936701774597
    2. '"' → logprob: -1.9289793968200684
    3. 'for' → logprob: -2.4289793968200684
    4. 'print' → logprob: -2.9289793968200684
    5. ''' → logprob: -3.6789793968200684
    6. '""' → logprob: -3.8039793968200684
    7. ' s' → logprob: -5.428979396820068
    8. 'str' → logprob: -5.678979396820068
    9. 'output' → logprob: -6.303979396820068
    10. ''s' → logprob: -6.928979396820068

Token 929: ' du' (ID: 1462)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.000317231344524771
    2. '""' → logprob: -9.125317573547363
    3. ' s' → logprob: -9.625317573547363
    4. '(' → logprob: -9.625317573547363
    5. '("")' → logprob: -9.875317573547363
    6. '(s' → logprob: -12.125317573547363
    7. '_s' → logprob: -12.625317573547363
    8. '()' → logprob: -12.875317573547363
    9. '"' → logprob: -13.000317573547363
    10. '=' → logprob: -13.000317573547363

Token 930: ' résultat' (ID: 62556)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.45183226466178894
    2. 's' → logprob: -1.8268322944641113
    3. ''' → logprob: -2.3268322944641113
    4. 'result' → logprob: -2.8268322944641113
    5. 'output' → logprob: -3.9518322944641113
    6. 'str' → logprob: -4.076832294464111
    7. 'string' → logprob: -5.451832294464111
    8. '"s' → logprob: -6.576832294464111
    9. ''s' → logprob: -6.826832294464111
    10. 'ans' → logprob: -7.576832294464111

Token 931: ' final' (ID: 1721)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -7.941850526549388e-06
    2. ' s' → logprob: -11.750007629394531
    3. '""' → logprob: -18.37500762939453
    4. '"' → logprob: -19.00000762939453
    5. '_s' → logprob: -20.12500762939453
    6. '"s' → logprob: -20.37500762939453
    7. '```' → logprob: -21.00000762939453
    8. '`s' → logprob: -21.12500762939453
    9. ''s' → logprob: -21.25000762939453
    10. '''' → logprob: -21.37500762939453

Token 932: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.8624639324116288e-06
    2. ' s' → logprob: -13.250001907348633
    3. '""' → logprob: -19.000001907348633
    4. '"' → logprob: -20.250001907348633
    5. '_s' → logprob: -20.375001907348633
    6. '```' → logprob: -20.375001907348633
    7. '`s' → logprob: -20.750001907348633
    8. '"s' → logprob: -21.000001907348633
    9. ''s' → logprob: -21.125001907348633
    10. '	s' → logprob: -21.750001907348633

Token 933: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: 0.0
    2. ' s' → logprob: -17.0
    3. '_s' → logprob: -23.25
    4. '"s' → logprob: -23.375
    5. '`s' → logprob: -24.0
    6. ''s' → logprob: -24.625
    7. '	s' → logprob: -25.125
    8. '"' → logprob: -26.25
    9. '```' → logprob: -26.875
    10. 'S' → logprob: -27.125

Token 934: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006726737599819899
    2. ' =' → logprob: -5.0067267417907715
    3. '=""' → logprob: -12.506726264953613
    4. '+=' → logprob: -12.506726264953613
    5. '=''' → logprob: -12.756726264953613
    6. '="' → logprob: -15.506726264953613
    7. '='' → logprob: -15.506726264953613
    8. '=[]' → logprob: -15.631726264953613
    9. '=

' → logprob: -15.881726264953613
    10. '.=' → logprob: -16.13172721862793

Token 935: ' ""

' (ID: 86057)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.01815626211464405
    2. '''' → logprob: -4.018156051635742
    3. '"' → logprob: -12.018156051635742
    4. ''' → logprob: -15.268156051635742
    5. ' ""' → logprob: -17.018156051635742
    6. '"",' → logprob: -18.518156051635742
    7. '"""' → logprob: -19.643156051635742
    8. '"":' → logprob: -20.518156051635742
    9. '""""' → logprob: -20.518156051635742
    10. ' ''' → logprob: -21.143156051635742

Token 936: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5048530030981055e-06
    2. ' for' → logprob: -13.500001907348633
    3. '
' → logprob: -17.500001907348633
    4. '```' → logprob: -19.625001907348633
    5. '	for' → logprob: -19.625001907348633
    6. 'i' → logprob: -19.875001907348633
    7. 'f' → logprob: -20.125001907348633
    8. 'print' → logprob: -20.125001907348633
    9. '   ' → logprob: -20.750001907348633
    10. '\n' → logprob: -21.000001907348633

Token 937: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -18.875
    3. '	for' → logprob: -23.75
    4. '
' → logprob: -23.75
    5. '#' → logprob: -23.875
    6. 'f' → logprob: -24.25
    7. '```' → logprob: -24.375
    8. 'For' → logprob: -24.625
    9. 'fo' → logprob: -24.625
    10. '   ' → logprob: -25.875

Token 938: 'cle' (ID: 3170)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5050951838493347
    2. 'for' → logprob: -1.0050952434539795
    3. 'r' → logprob: -3.6300952434539795
    4. 'o' → logprob: -6.1300950050354
    5. ' for' → logprob: -7.6300950050354
    6. 'i' → logprob: -7.7550950050354
    7. '#' → logprob: -8.255095481872559
    8. 'c' → logprob: -8.505095481872559
    9. 'n' → logprob: -8.630095481872559
    10. 'e' → logprob: -9.755095481872559

Token 939: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029354088008403778
    2. ' for' → logprob: -4.279354095458984
    3. 'i' → logprob: -4.529354095458984
    4. ' i' → logprob: -5.529354095458984
    5. 'in' → logprob: -8.529354095458984
    6. '_' → logprob: -9.404354095458984
    7. ' in' → logprob: -10.529354095458984
    8. ' ' → logprob: -11.654354095458984
    9. 'from' → logprob: -13.904354095458984
    10. '   ' → logprob: -14.029354095458984

Token 940: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5982421040534973
    2. 'range' → logprob: -0.8482421040534973
    3. ' range' → logprob: -3.8482420444488525
    4. ' i' → logprob: -7.223242282867432
    5. '_' → logprob: -13.223241806030273
    6. 'x' → logprob: -13.598241806030273
    7. '(range' → logprob: -13.848241806030273
    8. 'rang' → logprob: -13.848241806030273
    9. 'for' → logprob: -14.223241806030273
    10. '_i' → logprob: -14.348241806030273

Token 941: ' n' (ID: 297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03806019574403763
    2. ' i' → logprob: -3.288060188293457
    3. '_' → logprob: -11.288060188293457
    4. '_i' → logprob: -13.288060188293457
    5. 'x' → logprob: -13.663060188293457
    6. 'k' → logprob: -14.038060188293457
    7. 'range' → logprob: -14.288060188293457
    8. 'j' → logprob: -15.038060188293457
    9. ' range' → logprob: -15.288060188293457
    10. '	i' → logprob: -15.663060188293457

Token 942: 'œ' (ID: 15335)
  Prédit: 'ode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ode' → logprob: -1.0891193151474
    2. 'range' → logprob: -1.2141193151474
    3. ' range' → logprob: -1.8391193151474
    4. '_' → logprob: -2.5891194343566895
    5. 'i' → logprob: -2.5891194343566895
    6. ' in' → logprob: -4.3391194343566895
    7. 'e' → logprob: -4.4641194343566895
    8. ' i' → logprob: -4.4641194343566895
    9. '   ' → logprob: -5.5891194343566895
    10. '(range' → logprob: -5.8391194343566895

Token 943: 'ud' (ID: 527)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.44154849648475647
    2. 'œ' → logprob: -2.0665485858917236
    3. 'o' → logprob: -2.8165485858917236
    4. '_' → logprob: -3.0665485858917236
    5. 'oe' → logprob: -3.3165485858917236
    6. 'ode' → logprob: -3.4415485858917236
    7. 'u' → logprob: -4.1915483474731445
    8. 'i' → logprob: -4.9415483474731445
    9. ',' → logprob: -5.3165483474731445
    10. ' range' → logprob: -5.4415483474731445

Token 944: ' de' (ID: 334)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1031319797039032
    2. 'i' → logprob: -2.9781320095062256
    3. ' in' → logprob: -3.2281320095062256
    4. 'for' → logprob: -4.9781317710876465
    5. ' i' → logprob: -8.103132247924805
    6. 'range' → logprob: -8.978132247924805
    7. '_' → logprob: -9.603132247924805
    8. 'from' → logprob: -10.353132247924805
    9. ' for' → logprob: -10.603132247924805
    10. '1' → logprob: -11.603132247924805

Token 945: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033546582562848926
    2. ' range' → logprob: -8.000335693359375
    3. '1' → logprob: -16.875335693359375
    4. '(range' → logprob: -18.250335693359375
    5. '```' → logprob: -20.500335693359375
    6. '   ' → logprob: -21.375335693359375
    7. '	range' → logprob: -21.625335693359375
    8. 'rang' → logprob: -22.000335693359375
    9. '[' → logprob: -22.125335693359375
    10. 's' → logprob: -22.375335693359375

Token 946: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.836499985889532e-05
    2. ' range' → logprob: -9.7500581741333
    3. '(range' → logprob: -18.250059127807617
    4. '1' → logprob: -21.125059127807617
    5. '```' → logprob: -22.875059127807617
    6. '   ' → logprob: -22.875059127807617
    7. '	range' → logprob: -22.875059127807617
    8. '
' → logprob: -24.125059127807617
    9. '[' → logprob: -24.125059127807617
    10. 'rang' → logprob: -24.625059127807617

Token 947: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3418552875518799
    2. 'to' → logprob: -1.3418552875518799
    3. 'in' → logprob: -1.7168552875518799
    4. ' in' → logprob: -2.21685528755188
    5. ' range' → logprob: -2.59185528755188
    6. 'range' → logprob: -2.71685528755188
    7. ' to' → logprob: -3.21685528755188
    8. '(range' → logprob: -5.841855049133301
    9. ' ' → logprob: -6.466855049133301
    10. ' ,' → logprob: -7.091855049133301

Token 948: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -7.44574936106801e-05
    2. ' N' → logprob: -9.62507438659668
    3. '(N' → logprob: -11.75007438659668
    4. 'range' → logprob: -15.12507438659668
    5. ' range' → logprob: -16.25007438659668
    6. '   ' → logprob: -18.00007438659668
    7. ' (' → logprob: -18.37507438659668
    8. '(' → logprob: -18.62507438659668
    9. ' ' → logprob: -18.87507438659668
    10. '	N' → logprob: -19.00007438659668

Token 949: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009018104523420334
    2. ' for' → logprob: -4.7590179443359375
    3. 'in' → logprob: -8.009017944335938
    4. ' in' → logprob: -9.634017944335938
    5. 'range' → logprob: -12.259017944335938
    6. 'i' → logprob: -15.384017944335938
    7. ' range' → logprob: -15.509017944335938
    8. '   ' → logprob: -15.759017944335938
    9. ',' → logprob: -16.134017944335938
    10. '(range' → logprob: -16.884017944335938

Token 950: ' construire' (ID: 92473)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.189634308218956
    2. 'range' → logprob: -2.689634323120117
    3. 'for' → logprob: -3.439634323120117
    4. ' s' → logprob: -3.564634323120117
    5. 'i' → logprob: -3.689634323120117
    6. '   ' → logprob: -4.439634323120117
    7. ' range' → logprob: -5.439634323120117
    8. ' for' → logprob: -6.564634323120117
    9. ' i' → logprob: -6.814634323120117
    10. 'print' → logprob: -7.939634323120117

Token 951: ' et' (ID: 859)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.25901445746421814
    2. 's' → logprob: -1.5090144872665405
    3. '"' → logprob: -5.75901460647583
    4. 'range' → logprob: -6.13401460647583
    5. ' str' → logprob: -7.13401460647583
    6. ' s' → logprob: -8.134014129638672
    7. 'f' → logprob: -8.384014129638672
    8. '(str' → logprob: -9.384014129638672
    9. '"s' → logprob: -9.509014129638672
    10. 'the' → logprob: -9.634014129638672

Token 952: ' afficher' (ID: 146524)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.012651853263378143
    2. ' s' → logprob: -4.3876519203186035
    3. 'print' → logprob: -9.762651443481445
    4. '(s' → logprob: -10.387651443481445
    5. '"' → logprob: -10.762651443481445
    6. 'str' → logprob: -10.762651443481445
    7. ''' → logprob: -12.137651443481445
    8. 'f' → logprob: -13.512651443481445
    9. '   ' → logprob: -14.137651443481445
    10. 'range' → logprob: -14.137651443481445

Token 953: ' les' (ID: 1341)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.342332124710083
    2. 'range' → logprob: -1.592332124710083
    3. 's' → logprob: -2.967332124710083
    4. 'f' → logprob: -3.842332124710083
    5. ' range' → logprob: -5.467331886291504
    6. '"' → logprob: -5.592331886291504
    7. ' str' → logprob: -5.717331886291504
    8. ' s' → logprob: -7.342331886291504
    9. ' f' → logprob: -7.717331886291504
    10. '   ' → logprob: -7.842331886291504

Token 954: ' assign' (ID: 14975)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0008403576212003827
    2. 's' → logprob: -7.500840187072754
    3. ' str' → logprob: -8.625840187072754
    4. 'f' → logprob: -9.875840187072754
    5. '(str' → logprob: -10.625840187072754
    6. '"' → logprob: -10.875840187072754
    7. 'ans' → logprob: -12.125840187072754
    8. 'range' → logprob: -13.375840187072754
    9. 'print' → logprob: -13.375840187072754
    10. '[str' → logprob: -13.625840187072754

Token 955: 'ations' (ID: 929)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.33532699942588806
    2. 'e' → logprob: -2.710326910018921
    3. ''' → logprob: -3.085326910018921
    4. 'é' → logprob: -3.210326910018921
    5. 'ment' → logprob: -3.960326910018921
    6. 'er' → logprob: -4.0853271484375
    7. 's' → logprob: -4.0853271484375
    8. '=' → logprob: -4.5853271484375
    9. 'ed' → logprob: -4.5853271484375
    10. 'f' → logprob: -4.9603271484375

Token 956: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3425219549390022e-05
    2. ' for' → logprob: -11.62501335144043
    3. '
' → logprob: -12.87501335144043
    4. '   ' → logprob: -14.12501335144043
    5. 'range' → logprob: -14.25001335144043
    6. 'in' → logprob: -14.87501335144043
    7. '	for' → logprob: -17.25001335144043
    8. '    
' → logprob: -17.62501335144043
    9. '\n' → logprob: -18.25001335144043
    10. 'f' → logprob: -18.37501335144043

Token 957: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001613459608051926
    2. ' for' → logprob: -8.750161170959473
    3. 'range' → logprob: -13.000161170959473
    4. 'i' → logprob: -14.875161170959473
    5. 'in' → logprob: -16.25016212463379
    6. '   ' → logprob: -16.75016212463379
    7. '
' → logprob: -17.25016212463379
    8. ' range' → logprob: -18.50016212463379
    9. '```' → logprob: -18.75016212463379
    10. ' in' → logprob: -19.25016212463379

Token 958: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018166331574320793
    2. ' i' → logprob: -4.018166542053223
    3. 'node' → logprob: -11.893166542053223
    4. ' node' → logprob: -12.518166542053223
    5. 'x' → logprob: -12.518166542053223
    6. 'v' → logprob: -14.143166542053223
    7. 'u' → logprob: -15.018166542053223
    8. '_' → logprob: -15.143166542053223
    9. ' ' → logprob: -15.268166542053223
    10. '	i' → logprob: -15.518166542053223

Token 959: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22566388547420502
    2. 'in' → logprob: -1.6006639003753662
    3. ' ' → logprob: -8.975664138793945
    4. '1' → logprob: -9.975664138793945
    5. 's' → logprob: -11.225664138793945
    6. 'n' → logprob: -11.350664138793945
    7. '```' → logprob: -11.725664138793945
    8. 'range' → logprob: -11.850664138793945
    9. 'In' → logprob: -12.475664138793945
    10. '	in' → logprob: -12.475664138793945

Token 960: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020377879263833165
    2. ' range' → logprob: -8.500204086303711
    3. '(range' → logprob: -15.500204086303711
    4. 'in' → logprob: -19.37520408630371
    5. ' ' → logprob: -19.62520408630371
    6. '   ' → logprob: -19.87520408630371
    7. '(' → logprob: -20.62520408630371
    8. '1' → logprob: -20.87520408630371
    9. '  ' → logprob: -21.37520408630371
    10. '	range' → logprob: -22.37520408630371

Token 961: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005514653865247965
    2. 'range' → logprob: -5.380514621734619
    3. ' range' → logprob: -8.130515098571777
    4. 'in' → logprob: -8.380515098571777
    5. '1' → logprob: -8.630515098571777
    6. '(range' → logprob: -8.630515098571777
    7. ' in' → logprob: -11.505515098571777
    8. ' (' → logprob: -13.005515098571777
    9. ' ' → logprob: -15.255515098571777
    10. '(i' → logprob: -15.755515098571777

Token 962: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39045101404190063
    2. 'range' → logprob: -1.1404509544372559
    3. ' range' → logprob: -5.640450954437256
    4. ' ' → logprob: -11.140451431274414
    5. '(' → logprob: -12.640451431274414
    6. '   ' → logprob: -12.765451431274414
    7. '(range' → logprob: -14.140451431274414
    8. ')' → logprob: -15.265451431274414
    9. ',' → logprob: -15.265451431274414
    10. 'Range' → logprob: -16.140451431274414

Token 963: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01312116626650095
    2. ',' → logprob: -4.888121128082275
    3. '1' → logprob: -5.263121128082275
    4. ' (' → logprob: -8.763121604919434
    5. ' in' → logprob: -9.763121604919434
    6. 'in' → logprob: -10.013121604919434
    7. ' ,' → logprob: -10.388121604919434
    8. 'range' → logprob: -11.263121604919434
    9. '+' → logprob: -12.138121604919434
    10. '   ' → logprob: -12.388121604919434

Token 964: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004306692280806601
    2. ' N' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.375431060791016
    4. '(N' → logprob: -18.750431060791016
    5. ' ' → logprob: -19.500431060791016
    6. '	N' → logprob: -21.125431060791016
    7. ' ' → logprob: -21.625431060791016
    8. '```' → logprob: -21.750431060791016
    9. 'n' → logprob: -21.875431060791016
    10. ')' → logprob: -22.250431060791016

Token 965: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10021820664405823
    2. ' +' → logprob: -2.3502182960510254
    3. '):
' → logprob: -12.600217819213867
    4. '()+' → logprob: -12.850217819213867
    5. '):' → logprob: -12.975217819213867
    6. '+
' → logprob: -13.100217819213867
    7. ' +
' → logprob: -15.225217819213867
    8. '(' → logprob: -15.600217819213867
    9. ')' → logprob: -15.725217819213867
    10. '1' → logprob: -15.850217819213867

Token 966: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000548983458429575
    2. ' ' → logprob: -8.12554931640625
    3. 'N' → logprob: -8.75054931640625
    4. '(N' → logprob: -10.00054931640625
    5. ' N' → logprob: -10.37554931640625
    6. '2' → logprob: -11.87554931640625
    7. '(' → logprob: -12.87554931640625
    8. ')' → logprob: -13.00054931640625
    9. '+' → logprob: -13.12554931640625
    10. '```' → logprob: -13.25054931640625

Token 967: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12981757521629333
    2. 'N' → logprob: -2.129817485809326
    3. '+' → logprob: -6.004817485809326
    4. ' ' → logprob: -8.879817962646484
    5. 'i' → logprob: -8.879817962646484
    6. '(N' → logprob: -9.629817962646484
    7. ' N' → logprob: -9.879817962646484
    8. '   ' → logprob: -11.754817962646484
    9. '(' → logprob: -12.254817962646484
    10. ' +' → logprob: -13.379817962646484

Token 968: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030910342931747437
    2. ':
' → logprob: -3.5309102535247803
    3. '):' → logprob: -7.405910491943359
    4. '):
' → logprob: -8.03091049194336
    5. ')' → logprob: -8.90591049194336
    6. '   ' → logprob: -9.78091049194336
    7. ' :' → logprob: -11.65591049194336
    8. ':
' → logprob: -12.15591049194336
    9. ',' → logprob: -12.40591049194336
    10. ' s' → logprob: -12.40591049194336

Token 969: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07994969189167023
    2. '   ' → logprob: -2.9549496173858643
    3. ' s' → logprob: -3.7049496173858643
    4. '	s' → logprob: -9.079949378967285
    5. '{s' → logprob: -11.329949378967285
    6. ''s' → logprob: -11.829949378967285
    7. '(s' → logprob: -12.329949378967285
    8. '`s' → logprob: -12.579949378967285
    9. '```' → logprob: -12.829949378967285
    10. ' ' → logprob: -13.204949378967285

Token 970: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7764895558357239
    2. '   ' → logprob: -0.7764895558357239
    3. ' s' → logprob: -2.526489496231079
    4. '	s' → logprob: -10.6514892578125
    5. ' ' → logprob: -14.7764892578125
    6. '  ' → logprob: -15.0264892578125
    7. '_s' → logprob: -15.5264892578125
    8. '    ' → logprob: -16.9014892578125
    9. '       ' → logprob: -16.9014892578125
    10. '{s' → logprob: -17.1514892578125

Token 971: ' Convert' (ID: 15629)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: 0.0
    2. '   ' → logprob: -17.25
    3. ' s' → logprob: -17.625
    4. '	s' → logprob: -21.875
    5. '    
' → logprob: -22.5
    6. '#' → logprob: -22.625
    7. 'if' → logprob: -22.75
    8. '_s' → logprob: -23.0
    9. '```' → logprob: -23.0
    10. 'i' → logprob: -23.0

Token 972: 'ir' (ID: 380)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02439987286925316
    2. '(' → logprob: -4.774399757385254
    3. 'str' → logprob: -5.149399757385254
    4. '(s' → logprob: -5.149399757385254
    5. 'i' → logprob: -7.024399757385254
    6. ')' → logprob: -7.399399757385254
    7. '_' → logprob: -8.024399757385254
    8. '   ' → logprob: -8.024399757385254
    9. 'ans' → logprob: -8.024399757385254
    10. '_str' → logprob: -8.149399757385254

Token 973: ' la' (ID: 557)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0002820736262947321
    2. 'ans' → logprob: -8.250282287597656
    3. '(str' → logprob: -11.125282287597656
    4. ' str' → logprob: -12.125282287597656
    5. '(ans' → logprob: -15.500282287597656
    6. 's' → logprob: -15.500282287597656
    7. '   ' → logprob: -16.375282287597656
    8. '=str' → logprob: -16.750282287597656
    9. '	str' → logprob: -16.875282287597656
    10. 'i' → logprob: -17.375282287597656

Token 974: ' valeur' (ID: 41664)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6952876448631287
    2. 'str' → logprob: -0.6952876448631287
    3. 'i' → logprob: -6.195287704467773
    4. ' ans' → logprob: -10.570287704467773
    5. 'int' → logprob: -10.945287704467773
    6. '(ans' → logprob: -10.945287704467773
    7. ' str' → logprob: -11.195287704467773
    8. 'answer' → logprob: -12.195287704467773
    9. '(str' → logprob: -12.195287704467773
    10. 'repr' → logprob: -13.070287704467773

Token 975: ' assign' (ID: 14975)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.025487856939435005
    2. '(str' → logprob: -4.275487899780273
    3. 'ans' → logprob: -5.025487899780273
    4. 'str' → logprob: -5.400487899780273
    5. '(' → logprob: -9.025487899780273
    6. '(s' → logprob: -11.150487899780273
    7. 's' → logprob: -11.775487899780273
    8. '(
' → logprob: -11.900487899780273
    9. '   ' → logprob: -12.775487899780273
    10. '=str' → logprob: -12.775487899780273

Token 976: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.013156114146113396
    2. 'é' → logprob: -4.763155937194824
    3. '[' → logprob: -5.763155937194824
    4. '[i' → logprob: -7.888155937194824
    5. '(ans' → logprob: -7.888155937194824
    6. 'ee' → logprob: -8.388155937194824
    7. 'e' → logprob: -8.638155937194824
    8. '[str' → logprob: -9.763155937194824
    9. 'ées' → logprob: -10.263155937194824
    10. 'és' → logprob: -10.513155937194824

Token 977: ' du' (ID: 1462)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.005292219575494528
    2. '(' → logprob: -6.2552924156188965
    3. 'ans' → logprob: -6.6302924156188965
    4. '(str' → logprob: -6.7552924156188965
    5. 'to' → logprob: -7.2552924156188965
    6. 'str' → logprob: -10.255291938781738
    7. '(i' → logprob: -10.380291938781738
    8. '   ' → logprob: -10.755291938781738
    9. ' (' → logprob: -11.380291938781738
    10. '(
' → logprob: -11.630291938781738

Token 978: ' n' (ID: 297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16035431623458862
    2. 'ans' → logprob: -1.9103543758392334
    3. ' i' → logprob: -9.535354614257812
    4. ' ans' → logprob: -10.410354614257812
    5. '(ans' → logprob: -11.660354614257812
    6. '(i' → logprob: -11.785354614257812
    7. 'str' → logprob: -12.660354614257812
    8. '[i' → logprob: -12.910354614257812
    9. '	ans' → logprob: -13.660354614257812
    10. '{i' → logprob: -14.410354614257812

Token 979: 'œ' (ID: 15335)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9725145697593689
    2. 'œ' → logprob: -0.9725145697593689
    3. 'oe' → logprob: -2.0975146293640137
    4. 'ode' → logprob: -3.3475146293640137
    5. 'o' → logprob: -3.8475146293640137
    6. 'ans' → logprob: -4.972514629364014
    7. '`' → logprob: -5.097514629364014
    8. '=' → logprob: -5.097514629364014
    9. 'i' → logprob: -5.597514629364014
    10. '#' → logprob: -5.597514629364014

Token 980: 'ud' (ID: 527)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1110708713531494
    2. 'ud' → logprob: -1.1110708713531494
    3. 'œ' → logprob: -1.1110708713531494
    4. 'd' → logprob: -5.86107063293457
    5. 'oe' → logprob: -6.23607063293457
    6. 'u' → logprob: -6.86107063293457
    7. '```' → logprob: -6.98607063293457
    8. '   ' → logprob: -6.98607063293457
    9. '[i' → logprob: -7.48607063293457
    10. 'ode' → logprob: -7.86107063293457

Token 981: ' i' (ID: 575)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.13542501628398895
    2. '(ans' → logprob: -2.385425090789795
    3. 'ans' → logprob: -4.010425090789795
    4. '[i' → logprob: -4.510425090789795
    5. 'i' → logprob: -5.635425090789795
    6. 'to' → logprob: -6.510425090789795
    7. '(' → logprob: -9.010424613952637
    8. 's' → logprob: -9.135424613952637
    9. '   ' → logprob: -9.760424613952637
    10. '```' → logprob: -10.510424613952637

Token 982: ' en' (ID: 469)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.06852885335683823
    2. 'ans' → logprob: -2.943528890609741
    3. 'to' → logprob: -5.568528652191162
    4. '(str' → logprob: -5.568528652191162
    5. 'str' → logprob: -6.318528652191162
    6. '   ' → logprob: -7.193528652191162
    7. '(i' → logprob: -7.443528652191162
    8. '(' → logprob: -7.693528652191162
    9. 's' → logprob: -7.818528652191162
    10. ')' → logprob: -7.818528652191162

Token 983: ' chaîne' (ID: 89288)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -3.011373155459296e-05
    2. ' str' → logprob: -10.750030517578125
    3. 'string' → logprob: -11.750030517578125
    4. 'chaine' → logprob: -14.875030517578125
    5. 's' → logprob: -15.875030517578125
    6. '_str' → logprob: -16.500030517578125
    7. '(str' → logprob: -16.875030517578125
    8. '=str' → logprob: -17.250030517578125
    9. '	str' → logprob: -18.875030517578125
    10. 'stri' → logprob: -19.125030517578125

Token 984: ' et' (ID: 859)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.4753094017505646
    2. 's' → logprob: -1.1003093719482422
    3. '(str' → logprob: -3.600309371948242
    4. '(s' → logprob: -4.100309371948242
    5. ' str' → logprob: -7.225309371948242
    6. '=str' → logprob: -7.850309371948242
    7. ')' → logprob: -8.850309371948242
    8. '   ' → logprob: -9.225309371948242
    9. '(' → logprob: -9.475309371948242
    10. ':str' → logprob: -9.725309371948242

Token 985: ' l' (ID: 305)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.38725700974464417
    2. 'str' → logprob: -1.2622569799423218
    3. ' s' → logprob: -3.6372570991516113
    4. '"' → logprob: -5.137257099151611
    5. ' str' → logprob: -5.887257099151611
    6. '   ' → logprob: -6.262257099151611
    7. '+' → logprob: -7.387257099151611
    8. 'append' → logprob: -8.637256622314453
    9. '"s' → logprob: -9.762256622314453
    10. '(str' → logprob: -9.887256622314453

Token 986: ''aj' (ID: 116735)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.045142270624637604
    2. '+=' → logprob: -4.29514217376709
    3. '+' → logprob: -4.92014217376709
    4. 'e' → logprob: -5.17014217376709
    5. ''aj' → logprob: -5.54514217376709
    6. ''' → logprob: -5.79514217376709
    7. '+='' → logprob: -6.29514217376709
    8. '```' → logprob: -6.54514217376709
    9. ' s' → logprob: -6.79514217376709
    10. '#' → logprob: -6.92014217376709

Token 987: 'outer' (ID: 5838)
  Prédit: 'outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.024309590458869934
    2. 'out' → logprob: -4.0243096351623535
    3. 'oin' → logprob: -6.2743096351623535
    4. 's' → logprob: -6.2743096351623535
    5. 'oute' → logprob: -6.7743096351623535
    6. 'o' → logprob: -7.0243096351623535
    7. 'oint' → logprob: -8.649309158325195
    8. 'outez' → logprob: -9.274309158325195
    9. 'ouer' → logprob: -11.524309158325195
    10. '```' → logprob: -11.774309158325195

Token 988: ' à' (ID: 1221)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.24673376977443695
    2. '(s' → logprob: -2.1217336654663086
    3. '(' → logprob: -2.9967336654663086
    4. 'str' → logprob: -3.6217336654663086
    5. 's' → logprob: -4.121733665466309
    6. '("' → logprob: -5.246733665466309
    7. '+' → logprob: -8.371733665466309
    8. '(
' → logprob: -8.496733665466309
    9. '('' → logprob: -9.996733665466309
    10. '("("' → logprob: -10.371733665466309

Token 989: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.088346359931165e-07
    2. ' s' → logprob: -14.125000953674316
    3. '`s' → logprob: -17.25
    4. '```' → logprob: -18.0
    5. 'str' → logprob: -19.125
    6. '"s' → logprob: -19.375
    7. '   ' → logprob: -19.625
    8. '	s' → logprob: -19.875
    9. '_s' → logprob: -19.875
    10. 'string' → logprob: -20.125

Token 990: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21314193308353424
    2. 's' → logprob: -1.963141918182373
    3. ' +' → logprob: -3.088141918182373
    4. '   ' → logprob: -5.963141918182373
    5. ' s' → logprob: -6.213141918182373
    6. '+s' → logprob: -7.213141918182373
    7. '+=' → logprob: -7.963141918182373
    8. ' +=' → logprob: -8.588142395019531
    9. '+
' → logprob: -10.088142395019531
    10. ',' → logprob: -11.213142395019531

Token 991: '   ' (ID: 271)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.16899585723876953
    2. 's' → logprob: -1.9189958572387695
    3. '   ' → logprob: -5.5439958572387695
    4. ' str' → logprob: -5.6689958572387695
    5. '+' → logprob: -7.5439958572387695
    6. ' s' → logprob: -7.6689958572387695
    7. '(str' → logprob: -8.41899585723877
    8. ' +' → logprob: -9.66899585723877
    9. '+s' → logprob: -10.41899585723877
    10. '=str' → logprob: -10.79399585723877

Token 992: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -1.0445127372804563e-05
    2. ' s' → logprob: -12.12501049041748
    3. 'str' → logprob: -12.50001049041748
    4. '   ' → logprob: -13.62501049041748
    5. '	s' → logprob: -18.875009536743164
    6. '(s' → logprob: -20.500009536743164
    7. '`s' → logprob: -20.625009536743164
    8. '  ' → logprob: -20.875009536743164
    9. ' ' → logprob: -21.125009536743164
    10. ' str' → logprob: -21.375009536743164

Token 993: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -4.4418171455617994e-05
    2. ' +=' → logprob: -10.125044822692871
    3. '+="' → logprob: -13.250044822692871
    4. '+='' → logprob: -13.625044822692871
    5. '=' → logprob: -14.375044822692871
    6. '+' → logprob: -14.625044822692871
    7. '+=(' → logprob: -15.625044822692871
    8. ']+=' → logprob: -16.750043869018555
    9. 's' → logprob: -16.750043869018555
    10. '```' → logprob: -19.125043869018555

Token 994: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -6.392202976712724e-06
    2. ' str' → logprob: -12.000006675720215
    3. '(str' → logprob: -16.0000057220459
    4. '	str' → logprob: -20.0000057220459
    5. '=str' → logprob: -20.8750057220459
    6. '   ' → logprob: -21.6250057220459
    7. '[str' → logprob: -22.6250057220459
    8. '"' → logprob: -23.5000057220459
    9. 'string' → logprob: -24.0000057220459
    10. ':str' → logprob: -24.0000057220459

Token 995: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -13.875000953674316
    3. 'ans' → logprob: -15.000000953674316
    4. '(
' → logprob: -17.250001907348633
    5. ' (' → logprob: -18.250001907348633
    6. '	ans' → logprob: -18.875001907348633
    7. '(answer' → logprob: -19.375001907348633
    8. '(an' → logprob: -19.875001907348633
    9. ' ans' → logprob: -20.125001907348633
    10. '((' → logprob: -21.125001907348633

Token 996: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.500001907348633
    3. '[I' → logprob: -16.500001907348633
    4. 'i' → logprob: -16.750001907348633
    5. ' [' → logprob: -17.000001907348633
    6. '[
' → logprob: -17.375001907348633
    7. '[s' → logprob: -18.125001907348633
    8. '(i' → logprob: -18.125001907348633
    9. '```' → logprob: -18.625001907348633
    10. '[int' → logprob: -19.000001907348633

Token 997: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002986392646562308
    2. ')+' → logprob: -8.875298500061035
    3. '])' → logprob: -8.875298500061035
    4. ')+'' → logprob: -11.750298500061035
    5. ' )' → logprob: -12.625298500061035
    6. '})' → logprob: -12.875298500061035
    7. '))' → logprob: -13.750298500061035
    8. ')+"' → logprob: -13.875298500061035
    9. '())' → logprob: -14.125298500061035
    10. ']' → logprob: -14.250298500061035

Token 998: '    
' (ID: 1944)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03398878499865532
    2. ' +' → logprob: -3.6589887142181396
    3. 's' → logprob: -6.033988952636719
    4. 'if' → logprob: -6.408988952636719
    5. '<|end|>' → logprob: -6.408988952636719
    6. '+=' → logprob: -7.533988952636719
    7. '"' → logprob: -8.408988952636719
    8. 'print' → logprob: -8.408988952636719
    9. '+
' → logprob: -8.908988952636719
    10. '+"' → logprob: -9.158988952636719

Token 999: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38128334283828735
    2. '+' → logprob: -1.7562832832336426
    3. ' +' → logprob: -2.5062832832336426
    4. ' if' → logprob: -3.3812832832336426
    5. ' ' → logprob: -4.256283283233643
    6. '<|end|>' → logprob: -5.506283283233643
    7. ''' → logprob: -6.006283283233643
    8. 's' → logprob: -6.131283283233643
    9. ' 
' → logprob: -6.506283283233643
    10. '   ' → logprob: -7.006283283233643

Token 1000: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04356370121240616
    2. ' if' → logprob: -3.1685636043548584
    3. '   ' → logprob: -8.168563842773438
    4. ''' → logprob: -9.168563842773438
    5. '"' → logprob: -9.668563842773438
    6. '+' → logprob: -10.418563842773438
    7. ' +' → logprob: -11.043563842773438
    8. ' ' → logprob: -11.168563842773438
    9. '    ' → logprob: -11.293563842773438
    10. 's' → logprob: -11.793563842773438

Token 1001: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02664034813642502
    2. 's' → logprob: -4.02664041519165
    3. ' if' → logprob: -4.77664041519165
    4. ' s' → logprob: -11.401639938354492
    5. ' ' → logprob: -11.401639938354492
    6. 'print' → logprob: -12.401639938354492
    7. '   ' → logprob: -13.026639938354492
    8. '#' → logprob: -14.651639938354492
    9. '  ' → logprob: -14.776639938354492
    10. '    ' → logprob: -15.151639938354492

Token 1002: ' ce' (ID: 2357)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1269284337759018
    2. ' i' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.376928329467773
    4. '	i' → logprob: -17.001928329467773
    5. '   ' → logprob: -18.251928329467773
    6. ' ' → logprob: -18.626928329467773
    7. '  ' → logprob: -19.126928329467773
    8. '(i' → logprob: -19.126928329467773
    9. ' not' → logprob: -20.376928329467773
    10. 'I' → logprob: -21.251928329467773

Token 1003: ' n' (ID: 297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02975129522383213
    2. ' i' → logprob: -3.5297513008117676
    3. '	i' → logprob: -14.02975082397461
    4. ' ' → logprob: -17.27975082397461
    5. ''i' → logprob: -18.40475082397461
    6. '_i' → logprob: -18.52975082397461
    7. '  ' → logprob: -18.77975082397461
    8. '<' → logprob: -19.02975082397461
    9. '=i' → logprob: -19.40475082397461
    10. '(i' → logprob: -19.65475082397461

Token 1004: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -1.3978370428085327
    2. 'e' → logprob: -1.6478370428085327
    3. ''i' → logprob: -1.7728370428085327
    4. ''' → logprob: -2.0228371620178223
    5. 'i' → logprob: -2.0228371620178223
    6. 'o' → logprob: -3.3978371620178223
    7. 'u' → logprob: -3.7728371620178223
    8. '#' → logprob: -4.022837162017822
    9. '(i' → logprob: -4.772837162017822
    10. '[i' → logprob: -5.147837162017822

Token 1005: ' pas' (ID: 2173)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10171691328287125
    2. ' pas' → logprob: -2.851716995239258
    3. 'pas' → logprob: -3.726716995239258
    4. ' i' → logprob: -4.351716995239258
    5. ''i' → logprob: -6.976716995239258
    6. '(i' → logprob: -7.601716995239258
    7. '#' → logprob: -8.601716995239258
    8. 'e' → logprob: -9.476716995239258
    9. '[i' → logprob: -9.601716995239258
    10. 'not' → logprob: -9.976716995239258

Token 1006: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6937478184700012
    2. ' i' → logprob: -0.6937478184700012
    3. 'N' → logprob: -8.068747520446777
    4. ' N' → logprob: -8.818747520446777
    5. ' ' → logprob: -9.443747520446777
    6. '1' → logprob: -10.443747520446777
    7. ' not' → logprob: -11.568747520446777
    8. '  ' → logprob: -11.693747520446777
    9. 'n' → logprob: -12.318747520446777
    10. '   ' → logprob: -13.068747520446777

Token 1007: ' dernier' (ID: 27982)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.8351892473874614e-05
    2. ' N' → logprob: -10.250048637390137
    3. 'i' → logprob: -11.750048637390137
    4. 'n' → logprob: -13.000048637390137
    5. 'last' → logprob: -14.125048637390137
    6. '1' → logprob: -14.500048637390137
    7. 'dern' → logprob: -14.875048637390137
    8. '#' → logprob: -15.250048637390137
    9. '   ' → logprob: -15.500048637390137
    10. ' ' → logprob: -15.875048637390137

Token 1008: ' n' (ID: 297)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0459744855761528
    2. 'i' → logprob: -3.2959744930267334
    3. ' ' → logprob: -5.545974254608154
    4. '  ' → logprob: -6.170974254608154
    5. '"' → logprob: -7.545974254608154
    6. ''' → logprob: -7.920974254608154
    7. '   ' → logprob: -8.045974731445312
    8. '    ' → logprob: -9.420974731445312
    9. ' "' → logprob: -9.545974731445312
    10. '_' → logprob: -9.920974731445312

Token 1009: 'œ' (ID: 15335)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8642564415931702
    2. '(i' → logprob: -1.2392563819885254
    3. ''i' → logprob: -1.4892563819885254
    4. '_i' → logprob: -3.4892563819885254
    5. '[i' → logprob: -4.364256381988525
    6. ''' → logprob: -5.364256381988525
    7. ' i' → logprob: -5.739256381988525
    8. ',i' → logprob: -6.114256381988525
    9. '```' → logprob: -6.489256381988525
    10. '`' → logprob: -6.614256381988525

Token 1010: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.00467054545879364
    2. 'œ' → logprob: -6.0046706199646
    3. 'e' → logprob: -6.7546706199646
    4. 'u' → logprob: -7.6296706199646
    5. '\xc2' → logprob: -8.879670143127441
    6. 'd' → logprob: -9.129670143127441
    7. '#' → logprob: -10.004670143127441
    8. 'uds' → logprob: -10.504670143127441
    9. '```' → logprob: -10.629670143127441
    10. '\' → logprob: -10.629670143127441

Token 1011: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2850792407989502
    2. '!=' → logprob: -1.4100792407989502
    3. ' !=' → logprob: -2.03507924079895
    4. '   ' → logprob: -2.16007924079895
    5. ',' → logprob: -2.78507924079895
    6. '+' → logprob: -2.78507924079895
    7. ' +' → logprob: -4.160079002380371
    8. '{' → logprob: -4.535079002380371
    9. 's' → logprob: -4.535079002380371
    10. ' and' → logprob: -4.660079002380371

Token 1012: ' ajouter' (ID: 78457)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.030019598081707954
    2. ' s' → logprob: -3.530019521713257
    3. '   ' → logprob: -8.530019760131836
    4. '    ' → logprob: -9.780019760131836
    5. ' ' → logprob: -12.155019760131836
    6. 'print' → logprob: -12.155019760131836
    7. '	s' → logprob: -12.780019760131836
    8. '  ' → logprob: -14.030019760131836
    9. '    
' → logprob: -15.405019760131836
    10. '.' → logprob: -16.155019760131836

Token 1013: ' un' (ID: 537)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1612987518310547
    2. ''' → logprob: -1.9112987518310547
    3. ' ' → logprob: -7.036298751831055
    4. ' "' → logprob: -9.411298751831055
    5. ' a' → logprob: -10.911298751831055
    6. '`' → logprob: -11.036298751831055
    7. '(' → logprob: -11.286298751831055
    8. '("' → logprob: -11.286298751831055
    9. 'a' → logprob: -11.661298751831055
    10. '_' → logprob: -11.911298751831055

Token 1014: ' espace' (ID: 66004)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5034596920013428
    2. ''' → logprob: -1.7534596920013428
    3. 'space' → logprob: -1.8784596920013428
    4. ' space' → logprob: -2.8784596920013428
    5. ' ' → logprob: -4.628459930419922
    6. ' espace' → logprob: -6.253459930419922
    7. ' "' → logprob: -7.253459930419922
    8. ''espace' → logprob: -8.253459930419922
    9. '(space' → logprob: -8.753459930419922
    10. '_' → logprob: -9.253459930419922

Token 1015: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.142155647277832
    2. '   ' → logprob: -1.267155647277832
    3. '+' → logprob: -2.267155647277832
    4. '    ' → logprob: -2.642155647277832
    5. 'if' → logprob: -2.642155647277832
    6. ' if' → logprob: -3.142155647277832
    7. 's' → logprob: -3.392155647277832
    8. '<|end|>' → logprob: -4.017155647277832
    9. ' +' → logprob: -4.142155647277832
    10. ''' → logprob: -4.517155647277832

Token 1016: ' la' (ID: 557)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.29050251841545105
    2. '"' → logprob: -2.4155025482177734
    3. 's' → logprob: -2.7905025482177734
    4. '<|end|>' → logprob: -3.0405025482177734
    5. ' ' → logprob: -3.4155025482177734
    6. 'print' → logprob: -4.665502548217773
    7. '_' → logprob: -5.540502548217773
    8. ' "' → logprob: -6.540502548217773
    9. ' s' → logprob: -7.165502548217773
    10. 'se' → logprob: -7.540502548217773

Token 1017: ' séparation' (ID: 199055)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.2315000295639038
    2. 's' → logprob: -1.2315000295639038
    3. ''' → logprob: -1.3565000295639038
    4. 'print' → logprob: -2.4815001487731934
    5. ' ' → logprob: -3.6065001487731934
    6. '<|end|>' → logprob: -3.9815001487731934
    7. 'space' → logprob: -4.356500148773193
    8. ' "' → logprob: -4.981500148773193
    9. 'n' → logprob: -6.981500148773193
    10. '#' → logprob: -7.106500148773193

Token 1018: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0894473791122437
    2. ' if' → logprob: -1.0894473791122437
    3. 'if' → logprob: -1.2144473791122437
    4. '+' → logprob: -4.214447498321533
    5. ' ' → logprob: -5.214447498321533
    6. '    ' → logprob: -5.464447498321533
    7. ' +' → logprob: -5.839447498321533
    8. '  ' → logprob: -6.964447498321533
    9. '	if' → logprob: -7.089447498321533
    10. '<|end|>' → logprob: -7.964447498321533

Token 1019: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8820136785507202
    2. '   ' → logprob: -1.2570136785507202
    3. 'if' → logprob: -1.5070136785507202
    4. ' ' → logprob: -3.0070137977600098
    5. '    ' → logprob: -4.25701379776001
    6. 's' → logprob: -4.88201379776001
    7. '  ' → logprob: -6.13201379776001
    8. ' s' → logprob: -6.50701379776001
    9. '+' → logprob: -6.50701379776001
    10. '	if' → logprob: -7.25701379776001

Token 1020: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47121986746788025
    2. 'if' (adapté à ' if') → logprob: -1.0962198972702026
    3. ' ' → logprob: -3.221219778060913
    4. '   ' → logprob: -7.471220016479492
    5. 's' → logprob: -7.846220016479492
    6. '    ' → logprob: -8.096220016479492
    7. ' s' → logprob: -9.221220016479492
    8. '  ' → logprob: -9.596220016479492
    9. ''' → logprob: -9.971220016479492
    10. ' else' → logprob: -10.096220016479492

Token 1021: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20141372084617615
    2. ' i' → logprob: -1.7014137506484985
    3. '	i' → logprob: -15.326414108276367
    4. ' ' → logprob: -16.326414108276367
    5. ' ' → logprob: -16.576414108276367
    6. '   ' → logprob: -19.326414108276367
    7. 'I' → logprob: -19.326414108276367
    8. '  ' → logprob: -19.826414108276367
    9. '(i' → logprob: -20.951414108276367
    10. ' ' → logprob: -21.451414108276367

Token 1022: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.13646653294563293
    2. ' !=' → logprob: -2.2614665031433105
    3. '<' → logprob: -3.7614665031433105
    4. ' <' → logprob: -9.761466979980469
    5. '<len' → logprob: -11.261466979980469
    6. '<int' → logprob: -11.886466979980469
    7. '!=(' → logprob: -12.011466979980469
    8. ' ' → logprob: -12.011466979980469
    9. '<n' → logprob: -12.386466979980469
    10. '!==' → logprob: -12.511466979980469

Token 1023: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.5491004129871726e-05
    2. ' N' → logprob: -10.000045776367188
    3. ' ' → logprob: -20.750045776367188
    4. '1' → logprob: -21.375045776367188
    5. '	N' → logprob: -21.375045776367188
    6. '   ' → logprob: -21.625045776367188
    7. 'n' → logprob: -22.500045776367188
    8. '  ' → logprob: -22.875045776367188
    9. '```' → logprob: -25.250045776367188
    10. ' ' → logprob: -25.625045776367188

Token 1024: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28753170371055603
    2. 's' → logprob: -1.7875317335128784
    3. ' s' → logprob: -3.162531614303589
    4. '   ' → logprob: -3.412531614303589
    5. ')' → logprob: -5.912531852722168
    6. '       ' → logprob: -6.537531852722168
    7. ':
' → logprob: -7.162531852722168
    8. '<|end|>' → logprob: -7.662531852722168
    9. '    ' → logprob: -7.912531852722168
    10. '):' → logprob: -8.662531852722168

Token 1025: '       ' (ID: 309)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06733774393796921
    2. '   ' → logprob: -3.31733775138855
    3. ' s' → logprob: -3.56733775138855
    4. '	s' → logprob: -7.817337512969971
    5. '       ' → logprob: -8.692337989807129
    6. '    ' → logprob: -10.817337989807129
    7. ' ' → logprob: -11.067337989807129
    8. '  ' → logprob: -11.317337989807129
    9. '<|end|>' → logprob: -11.942337989807129
    10. '    
' → logprob: -12.317337989807129

Token 1026: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.0005530327325686812
    2. ' s' → logprob: -7.500553131103516
    3. '	s' → logprob: -17.500553131103516
    4. '   ' → logprob: -18.000553131103516
    5. '_s' → logprob: -20.500553131103516
    6. '`s' → logprob: -20.750553131103516
    7. '       ' → logprob: -21.125553131103516
    8. '    ' → logprob: -21.500553131103516
    9. ' 
' → logprob: -21.500553131103516
    10. ' ' → logprob: -21.500553131103516

Token 1027: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0006192696164362133
    2. ' +=' → logprob: -8.250618934631348
    3. '+='' → logprob: -8.500618934631348
    4. '+="' → logprob: -9.000618934631348
    5. '+' → logprob: -10.375618934631348
    6. '+=(' → logprob: -16.375619888305664
    7. ']+=' → logprob: -17.000619888305664
    8. 's' → logprob: -18.375619888305664
    9. ' +' → logprob: -18.625619888305664
    10. '=' → logprob: -19.500619888305664

Token 1028: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03806157782673836
    2. ''' → logprob: -3.2880616188049316
    3. ' "' → logprob: -10.913061141967773
    4. ' '' → logprob: -13.288061141967773
    5. '`' → logprob: -15.788061141967773
    6. ' ' → logprob: -16.788061141967773
    7. ' ' → logprob: -17.538061141967773
    8. 'space' → logprob: -18.038061141967773
    9. '32' → logprob: -18.788061141967773
    10. '"""' → logprob: -18.913061141967773

Token 1029: ' "

' (ID: 35373)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.2085036337375641
    2. ' ")' → logprob: -1.9585036039352417
    3. ' ' → logprob: -3.5835037231445312
    4. '"' → logprob: -4.333503723144531
    5. ' ">' → logprob: -6.458503723144531
    6. '<|end|>' → logprob: -6.583503723144531
    7. ' "}' → logprob: -6.708503723144531
    8. ' )' → logprob: -7.458503723144531
    9. ' """' → logprob: -7.833503723144531
    10. ' ' → logprob: -7.958503723144531

Token 1030: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.088346359931165e-07
    2. '
' → logprob: -14.250000953674316
    3. ' print' → logprob: -15.500000953674316
    4. ')
' → logprob: -20.0
    5. '```' → logprob: -20.125
    6. '(print' → logprob: -20.25
    7. '#print' → logprob: -20.75
    8. ')' → logprob: -21.25
    9. '    
' → logprob: -22.5
    10. '.print' → logprob: -22.625

Token 1031: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -23.75
    3. '
' → logprob: -27.375
    4. '#print' → logprob: -27.75
    5. '```' → logprob: -29.375
    6. '#' → logprob: -29.5
    7. 'printf' → logprob: -29.625
    8. 'prints' → logprob: -30.5
    9. 'Print' → logprob: -30.625
    10. 'println' → logprob: -30.875

Token 1032: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0005679258611053228
    2. 'iche' → logprob: -7.62556791305542
    3. 'ich' → logprob: -10.375568389892578
    4. 'cher' → logprob: -10.375568389892578
    5. 'print' → logprob: -11.375568389892578
    6. 'ic' → logprob: -13.000568389892578
    7. '#' → logprob: -13.250568389892578
    8. 'ichage' → logprob: -13.625568389892578
    9. 'ichier' → logprob: -16.000568389892578
    10. 'er' → logprob: -16.250568389892578

Token 1033: ' la' (ID: 557)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.8206473871250637e-05
    2. 's' → logprob: -10.500028610229492
    3. '(' → logprob: -14.500028610229492
    4. 'print' → logprob: -16.875028610229492
    5. ' (' → logprob: -19.125028610229492
    6. '(print' → logprob: -20.000028610229492
    7. ' s' → logprob: -22.125028610229492
    8. '(
' → logprob: -22.375028610229492
    9. '(S' → logprob: -22.750028610229492
    10. '(str' → logprob: -23.125028610229492

Token 1034: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029833335429430008
    2. '(s' → logprob: -3.5298333168029785
    3. 'print' → logprob: -9.654833793640137
    4. '(' → logprob: -11.029833793640137
    5. ' s' → logprob: -13.029833793640137
    6. 'final' → logprob: -15.529833793640137
    7. 'result' → logprob: -16.40483283996582
    8. 'string' → logprob: -17.02983283996582
    9. 't' → logprob: -17.27983283996582
    10. ' (' → logprob: -17.90483283996582

Token 1035: ' s' (ID: 265)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.049245771020650864
    2. 'print' → logprob: -3.049245834350586
    3. 's' → logprob: -7.424245834350586
    4. '(' → logprob: -10.299245834350586
    5. '(print' → logprob: -10.549245834350586
    6. '```' → logprob: -14.549245834350586
    7. ' (' → logprob: -14.924245834350586
    8. ' print' → logprob: -15.299245834350586
    9. '()' → logprob: -15.549245834350586
    10. 'println' → logprob: -15.799245834350586

Token 1036: ' qui' (ID: 2780)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02339094504714012
    2. ')' → logprob: -3.773391008377075
    3. '(print' → logprob: -9.648390769958496
    4. ')
' → logprob: -10.273390769958496
    5. '()' → logprob: -11.023390769958496
    6. '.print' → logprob: -11.398390769958496
    7. '```' → logprob: -12.523390769958496
    8. ' print' → logprob: -13.023390769958496
    9. '#print' → logprob: -13.148390769958496
    10. '<|end|>' → logprob: -13.148390769958496

Token 1037: ' contient' (ID: 89067)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00474601099267602
    2. 'prints' → logprob: -5.629745960235596
    3. 'contains' → logprob: -7.504745960235596
    4. ' print' → logprob: -8.254746437072754
    5. ' contains' → logprob: -9.379746437072754
    6. '#' → logprob: -9.879746437072754
    7. 'aff' → logprob: -10.254746437072754
    8. ' prints' → logprob: -10.504746437072754
    9. 'rep' → logprob: -10.879746437072754
    10. 'continue' → logprob: -11.254746437072754

Token 1038: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.312203049659729
    2. 'l' → logprob: -2.0622029304504395
    3. 'ans' → logprob: -2.9372029304504395
    4. 's' → logprob: -3.4372029304504395
    5. 'la' → logprob: -3.6872029304504395
    6. 't' → logprob: -4.1872029304504395
    7. 'the' → logprob: -4.8122029304504395
    8. ' les' → logprob: -5.6872029304504395
    9. 'le' → logprob: -6.3122029304504395
    10. 'all' → logprob: -6.6872029304504395

Token 1039: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.011313535273075104
    2. 'assign' → logprob: -4.511313438415527
    3. 'values' → logprob: -8.636313438415527
    4. 'rés' → logprob: -10.636313438415527
    5. ' valeurs' → logprob: -10.886313438415527
    6. 'ans' → logprob: -11.386313438415527
    7. 'vals' → logprob: -11.636313438415527
    8. 'valu' → logprob: -11.761313438415527
    9. 'aff' → logprob: -12.261313438415527
    10. 'indices' → logprob: -12.761313438415527

Token 1040: ' attrib' (ID: 72186)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2233183042553719e-05
    2. ')' → logprob: -11.500012397766113
    3. '
' → logprob: -13.875012397766113
    4. '.print' → logprob: -15.000012397766113
    5. ' print' → logprob: -15.625012397766113
    6. '(print' → logprob: -15.625012397766113
    7. ')
' → logprob: -15.875012397766113
    8. '```' → logprob: -16.000011444091797
    9. '#print' → logprob: -16.250011444091797
    10. ',' → logprob: -17.625011444091797

Token 1041: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -7.226628895296017e-06
    2. 'ué' → logprob: -12.375007629394531
    3. 'uée' → logprob: -12.750007629394531
    4. '[u' → logprob: -17.87500762939453
    5. ' u' → logprob: -18.50000762939453
    6. 'ues' → logprob: -18.75000762939453
    7. '```' → logprob: -19.25000762939453
    8. '_u' → logprob: -19.37500762939453
    9. '(u' → logprob: -19.50000762939453
    10. '<u' → logprob: -19.75000762939453

Token 1042: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0006265374249778688
    2. 'é' → logprob: -7.625626564025879
    3. 'és' → logprob: -9.625626564025879
    4. 'es' → logprob: -9.750626564025879
    5. 'ée' → logprob: -11.750626564025879
    6. 'ees' → logprob: -12.625626564025879
    7. 'e' → logprob: -13.625626564025879
    8. '#' → logprob: -14.125626564025879
    9. '   ' → logprob: -14.375626564025879
    10. '```' → logprob: -15.750626564025879

Token 1043: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -13.000003814697266
    3. '(print' → logprob: -14.500003814697266
    4. ')' → logprob: -14.875003814697266
    5. '
' → logprob: -15.625003814697266
    6. ' print' → logprob: -16.875003814697266
    7. '```' → logprob: -18.375003814697266
    8. '.print' → logprob: -18.875003814697266
    9. '()
' → logprob: -19.250003814697266
    10. '(' → logprob: -19.625003814697266

Token 1044: ' chaque' (ID: 21194)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.021551355719566345
    2. 'l' → logprob: -4.521551132202148
    3. 'cha' → logprob: -4.771551132202148
    4. ' tous' → logprob: -7.146551132202148
    5. 'ch' → logprob: -7.771551132202148
    6. ' chaque' → logprob: -8.646551132202148
    7. 'les' → logprob: -8.771551132202148
    8. 'tout' → logprob: -8.771551132202148
    9. 'la' → logprob: -9.396551132202148
    10. 'aux' → logprob: -9.896551132202148

Token 1045: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0015180727932602167
    2. 'no' → logprob: -6.501518249511719
    3. 'node' → logprob: -11.626518249511719
    4. '```' → logprob: -12.876518249511719
    5. ' n' → logprob: -13.876518249511719
    6. 'nod' → logprob: -14.001518249511719
    7. ' noe' → logprob: -14.001518249511719
    8. 'No' → logprob: -14.751518249511719
    9. '#' → logprob: -15.251518249511719
    10. '_n' → logprob: -16.25151824951172

Token 1046: 'œ' (ID: 15335)
  Prédit: 'œ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'œ' → logprob: -0.0001363168703392148
    2. 'oe' → logprob: -9.250136375427246
    3. '\xc2' → logprob: -10.875136375427246
    4. 'o' → logprob: -12.000136375427246
    5. 'e' → logprob: -12.250136375427246
    6. 'ø' → logprob: -13.375136375427246
    7. '_' → logprob: -13.500136375427246
    8. ''œ' → logprob: -13.625136375427246
    9. 'ud' → logprob: -13.875136375427246
    10. '\' → logprob: -13.875136375427246

Token 1047: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.11393153667449951
    2. 'œ' → logprob: -2.238931655883789
    3. 'e' → logprob: -7.488931655883789
    4. '\xc2' → logprob: -8.113931655883789
    5. 'd' → logprob: -10.113931655883789
    6. 'ø' → logprob: -10.488931655883789
    7. 'uds' → logprob: -10.488931655883789
    8. '\' → logprob: -10.863931655883789
    9. 'u' → logprob: -11.113931655883789
    10. '#' → logprob: -11.363931655883789

Token 1048: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.4849443838757e-06
    2. ')
' → logprob: -12.875004768371582
    3. '
' → logprob: -13.750004768371582
    4. ' print' → logprob: -14.750004768371582
    5. ')' → logprob: -15.250004768371582
    6. '(print' → logprob: -16.000003814697266
    7. '```' → logprob: -17.125003814697266
    8. '.print' → logprob: -18.500003814697266
    9. '   ' → logprob: -19.500003814697266
    10. '#print' → logprob: -20.750003814697266

Token 1049: ' sépar' (ID: 97160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04869500920176506
    2. 'end' → logprob: -3.0486950874328613
    3. 'sep' → logprob: -9.548694610595703
    4. ')' → logprob: -10.798694610595703
    5. ' print' → logprob: -11.923694610595703
    6. 's' → logprob: -12.423694610595703
    7. ' end' → logprob: -12.923694610595703
    8. 'flush' → logprob: -13.173694610595703
    9. ')
' → logprob: -15.423694610595703
    10. '#print' → logprob: -15.923694610595703

Token 1050: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.19308485090732574
    2. 'é' → logprob: -2.693084955215454
    3. 'ée' → logprob: -2.943084955215454
    4. 'es' → logprob: -3.443084955215454
    5. 'és' → logprob: -4.818084716796875
    6. 'e' → logprob: -5.068084716796875
    7. 'er' → logprob: -5.318084716796875
    8. ' par' → logprob: -5.943084716796875
    9. '"' → logprob: -8.443084716796875
    10. ' espace' → logprob: -9.443084716796875

Token 1051: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.08125832676887512
    2. ' par' → logprob: -3.2062582969665527
    3. 'by' → logprob: -3.3312582969665527
    4. '"' → logprob: -7.206258296966553
    5. ' by' → logprob: -7.206258296966553
    6. '<|end|>' → logprob: -9.706258773803711
    7. '(par' → logprob: -10.081258773803711
    8. 'b' → logprob: -10.206258773803711
    9. 'space' → logprob: -10.581258773803711
    10. '"""' → logprob: -11.206258773803711

Token 1052: ' des' (ID: 731)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6814522743225098
    2. 'des' → logprob: -1.5564522743225098
    3. 'es' → logprob: -2.1814522743225098
    4. 'esp' → logprob: -2.4314522743225098
    5. ''' → logprob: -3.0564522743225098
    6. ' des' → logprob: -5.05645227432251
    7. 'spaces' → logprob: -5.18145227432251
    8. 'a' → logprob: -5.43145227432251
    9. ''espace' → logprob: -5.43145227432251
    10. ' espaces' → logprob: -5.55645227432251

Token 1053: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.04613875970244408
    2. 'es' → logprob: -3.5461387634277344
    3. 'spaces' → logprob: -4.546138763427734
    4. ' espaces' → logprob: -5.421138763427734
    5. ''esp' → logprob: -7.296138763427734
    6. 'space' → logprob: -8.046138763427734
    7. '"' → logprob: -9.046138763427734
    8. ''espace' → logprob: -9.546138763427734
    9. '’esp' → logprob: -11.546138763427734
    10. '’espace' → logprob: -12.296138763427734

Token 1054: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. '
' → logprob: -15.000000953674316
    3. '```' → logprob: -17.125
    4. ')
' → logprob: -17.25
    5. ' print' → logprob: -17.75
    6. '(print' → logprob: -19.5
    7. ')' → logprob: -20.875
    8. '``' → logprob: -21.75
    9. '#print' → logprob: -22.25
    10. '.print' → logprob: -22.25

Token 1055: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -20.5
    3. ' print' → logprob: -22.5
    4. '
' → logprob: -25.875
    5. '``' → logprob: -26.125
    6. 'println' → logprob: -26.625
    7. '#print' → logprob: -27.25
    8. 'prints' → logprob: -27.75
    9. '`' → logprob: -28.125
    10. 'printf' → logprob: -28.25

Token 1056: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -5.5577775128767826e-06
    2. 's' → logprob: -12.750005722045898
    3. '(' → logprob: -12.875005722045898
    4. ' (' → logprob: -16.8750057220459
    5. '()' → logprob: -19.8750057220459
    6. '(
' → logprob: -20.3750057220459
    7. ' ' → logprob: -22.6250057220459
    8. '('' → logprob: -22.8750057220459
    9. '(u' → logprob: -23.0000057220459
    10. '((' → logprob: -23.5000057220459

Token 1057: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.676292231422849e-05
    2. ')
' → logprob: -11.375017166137695
    3. ' )' → logprob: -12.500017166137695
    4. '())' → logprob: -13.750017166137695
    5. '()' → logprob: -15.125017166137695
    6. '))' → logprob: -16.500017166137695
    7. '")' → logprob: -16.625017166137695
    8. '```' → logprob: -17.375017166137695
    9. '`)' → logprob: -17.375017166137695
    10. ')`' → logprob: -17.625017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1055
Tokens correctement prédits (1ère position, stricte): 235
Tokens correctement prédits (1ère position, avec adaptation): 247
Tokens correctement prédits (top 10): 582
Précision stricte (1ère position): 22.27%
Précision adaptée (1ère position): 23.41%
Précision (top 10): 55.17%
================================================================================
