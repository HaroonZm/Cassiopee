================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())

if n % 2 == 0:
    even = n
    odd = n - 1
else:
    even = n - 1
    odd = n

even_2 = even // 2

result = even_2 * odd

print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.7530574849806726e-05
    2. ''' → logprob: -10.750057220458984
    3. '('' → logprob: -11.125057220458984
    4. '(
' → logprob: -11.750057220458984
    5. '(n' → logprob: -13.000057220458984
    6. '```' → logprob: -13.125057220458984
    7. '("("' → logprob: -13.125057220458984
    8. '()' → logprob: -13.500057220458984
    9. '`' → logprob: -13.500057220458984
    10. '[' → logprob: -14.125057220458984

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03871168941259384
    2. ')' → logprob: -3.5387117862701416
    3. '()' → logprob: -4.9137115478515625
    4. '())' → logprob: -7.1637115478515625
    5. '(
' → logprob: -8.663711547851562
    6. '```' → logprob: -9.163711547851562
    7. '(()' → logprob: -9.413711547851562
    8. '("("' → logprob: -9.663711547851562
    9. '('' → logprob: -9.913711547851562
    10. '`' → logprob: -10.163711547851562

Token 5: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6357110142707825
    2. 'i' → logprob: -1.3857109546661377
    3. 'for' → logprob: -1.6357109546661377
    4. 's' → logprob: -4.510711193084717
    5. 'f' → logprob: -5.760711193084717
    6. 'x' → logprob: -5.885711193084717
    7. ' if' → logprob: -6.385711193084717
    8. '*' → logprob: -6.760711193084717
    9. ')' → logprob: -7.135711193084717
    10. ' for' → logprob: -7.260711193084717

Token 6: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5779812932014465
    2. ' ' → logprob: -0.8279812932014465
    3. 'n' → logprob: -6.202981472015381
    4. ' ' → logprob: -11.577980995178223
    5. ' not' → logprob: -12.827980995178223
    6. '  ' → logprob: -13.202980995178223
    7. ' )' → logprob: -14.952980995178223
    8. '(n' → logprob: -15.202980995178223
    9. ' (' → logprob: -15.327980995178223
    10. ' a' → logprob: -15.327980995178223

Token 7: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04111463576555252
    2. ' <' → logprob: -4.166114807128906
    3. '>' → logprob: -4.666114807128906
    4. ' ' → logprob: -4.666114807128906
    5. ' ==' → logprob: -6.166114807128906
    6. ' >=' → logprob: -6.416114807128906
    7. ' %' → logprob: -6.666114807128906
    8. ' <=' → logprob: -8.041114807128906
    9. '  ' → logprob: -8.541114807128906
    10. '<' → logprob: -9.166114807128906

Token 8: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20147229731082916
    2. '2' → logprob: -1.701472282409668
    3. '3' → logprob: -10.076472282409668
    4. '4' → logprob: -11.576472282409668
    5. '```' → logprob: -12.576472282409668
    6. '1' → logprob: -13.951472282409668
    7. ' ```' → logprob: -14.326472282409668
    8. '10' → logprob: -14.326472282409668
    9. '5' → logprob: -14.826472282409668
    10. '==' → logprob: -14.951472282409668

Token 9: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0014286901568993926
    2. '3' → logprob: -7.001428604125977
    3. ' ' → logprob: -7.751428604125977
    4. '4' → logprob: -10.376428604125977
    5. '5' → logprob: -10.626428604125977
    6. '1' → logprob: -11.251428604125977
    7. '10' → logprob: -11.251428604125977
    8. '7' → logprob: -12.876428604125977
    9. '```' → logprob: -13.751428604125977
    10. '6' → logprob: -14.751428604125977

Token 10: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03777600824832916
    2. ' !=' → logprob: -3.787775993347168
    3. '==' → logprob: -4.287775993347168
    4. ' ' → logprob: -8.162775993347168
    5. '!=' → logprob: -8.662775993347168
    6. ' =' → logprob: -9.537775993347168
    7. '=' → logprob: -9.787775993347168
    8. ':' → logprob: -9.912775993347168
    9. ')' → logprob: -10.537775993347168
    10. '```' → logprob: -12.037775993347168

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008615515194833279
    2. '0' → logprob: -4.758615493774414
    3. '1' → logprob: -14.383615493774414
    4. ' ' → logprob: -15.008615493774414
    5. '2' → logprob: -16.758615493774414
    6. '```' → logprob: -17.508615493774414
    7. '=' → logprob: -18.258615493774414
    8. ')' → logprob: -19.133615493774414
    9. ' =' → logprob: -19.383615493774414
    10. '3' → logprob: -19.508615493774414

Token 12: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004634234122931957
    2. ' ' → logprob: -5.379634380340576
    3. '1' → logprob: -11.754633903503418
    4. '2' → logprob: -12.004633903503418
    5. '```' → logprob: -18.129634857177734
    6. '==' → logprob: -19.754634857177734
    7. '4' → logprob: -19.754634857177734
    8. '3' → logprob: -19.879634857177734
    9. ')' → logprob: -19.879634857177734
    10. ' ' → logprob: -19.942134857177734

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.511406809295295e-06
    2. ':**' → logprob: -12.875006675720215
    3. ' :' → logprob: -13.000006675720215
    4. '):' → logprob: -14.750006675720215
    5. '':'' → logprob: -14.750006675720215
    6. '':' → logprob: -14.875006675720215
    7. ':
' → logprob: -16.0000057220459
    8. '>:' → logprob: -16.2500057220459
    9. '":"' → logprob: -16.2500057220459
    10. '":' → logprob: -16.7500057220459

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016063697636127472
    2. ' print' → logprob: -4.516063690185547
    3. 'print' → logprob: -5.641063690185547
    4. '\n' → logprob: -6.891063690185547
    5. '    
' → logprob: -9.016063690185547
    6. '\' → logprob: -9.016063690185547
    7. '    ' → logprob: -9.516063690185547
    8. ' ' → logprob: -10.391063690185547
    9. ''' → logprob: -10.766063690185547
    10. ' \' → logprob: -11.266063690185547

Token 15: ' even' (ID: 1952)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6475024223327637
    2. ' print' → logprob: -1.0225024223327637
    3. 'print' → logprob: -2.1475024223327637
    4. '```' → logprob: -9.397502899169922
    5. '\n' → logprob: -10.647502899169922
    6. '       ' → logprob: -11.147502899169922
    7. '\' → logprob: -11.272502899169922
    8. '    
' → logprob: -11.397502899169922
    9. ' ' → logprob: -11.647502899169922
    10. '    ' → logprob: -12.022502899169922

Token 16: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7114976644515991
    2. '_' → logprob: -0.7114976644515991
    3. '   ' → logprob: -4.961497783660889
    4. ' ' → logprob: -5.711497783660889
    5. ' =' → logprob: -6.711497783660889
    6. '()' → logprob: -6.711497783660889
    7. '_n' → logprob: -7.211497783660889
    8. '=' → logprob: -7.461497783660889
    9. '_space' → logprob: -7.836497783660889
    10. ' _' → logprob: -7.961497783660889

Token 17: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2702507972717285
    2. 'n' → logprob: -2.0202507972717285
    3. '"' → logprob: -3.0202507972717285
    4. ' ' → logprob: -4.2702507972717285
    5. ' "' → logprob: -4.2702507972717285
    6. ' True' → logprob: -4.2702507972717285
    7. '0' → logprob: -4.7702507972717285
    8. 'True' → logprob: -6.3952507972717285
    9. ' '' → logprob: -6.5202507972717285
    10. ''' → logprob: -6.8952507972717285

Token 18: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.554999828338623
    2. ' else' → logprob: -2.179999828338623
    3. '+' → logprob: -2.304999828338623
    4. '   ' → logprob: -2.429999828338623
    5. 'else' → logprob: -2.679999828338623
    6. ' *' → logprob: -3.929999828338623
    7. '*' → logprob: -4.679999828338623
    8. '
' → logprob: -4.679999828338623
    9. ' ' → logprob: -4.804999828338623
    10. '```' → logprob: -6.054999828338623

Token 19: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0837460458278656
    2. ' else' → logprob: -2.9587459564208984
    3. '   ' → logprob: -3.8337459564208984
    4. '    
' → logprob: -5.458745956420898
    5. '
' → logprob: -6.458745956420898
    6. '  
' → logprob: -8.333745956420898
    7. ' ' → logprob: -8.583745956420898
    8. 'elif' → logprob: -9.083745956420898
    9. '	else' → logprob: -9.833745956420898
    10. '```' → logprob: -9.833745956420898

Token 20: ' odd' (ID: 14210)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.062344424426555634
    2. ' else' → logprob: -3.0623443126678467
    3. '   ' → logprob: -4.937344551086426
    4. 'print' → logprob: -6.187344551086426
    5. '    
' → logprob: -6.437344551086426
    6. '
' → logprob: -6.687344551086426
    7. '\n' → logprob: -7.312344551086426
    8. 'elif' → logprob: -7.937344551086426
    9. '```' → logprob: -9.312344551086426
    10. ' ' → logprob: -9.812344551086426

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005733840633183718
    2. '=' → logprob: -5.255733966827393
    3. ' ' → logprob: -7.880733966827393
    4. '_' → logprob: -9.630733489990234
    5. ' +=' → logprob: -10.380733489990234
    6. '  ' → logprob: -12.130733489990234
    7. ' ==' → logprob: -13.005733489990234
    8. 's' → logprob: -13.005733489990234
    9. ')' → logprob: -13.130733489990234
    10. ' +' → logprob: -13.255733489990234

Token 22: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1117381602525711
    2. ' ' → logprob: -2.6117382049560547
    3. 'n' → logprob: -4.111738204956055
    4. '0' → logprob: -4.611738204956055
    5. ' None' → logprob: -5.361738204956055
    6. '1' → logprob: -7.361738204956055
    7. 'None' → logprob: -7.736738204956055
    8. '"' → logprob: -9.611738204956055
    9. ' "' → logprob: -10.361738204956055
    10. ' '' → logprob: -10.486738204956055

Token 23: ' -' (ID: 533)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3465251922607422
    2. '+' → logprob: -1.8465251922607422
    3. ' else' → logprob: -2.221525192260742
    4. ' +' → logprob: -3.721525192260742
    5. '-' → logprob: -6.471525192260742
    6. '+
' → logprob: -8.346525192260742
    7. 'elif' → logprob: -8.596525192260742
    8. '```' → logprob: -8.846525192260742
    9. ' -' → logprob: -9.346525192260742
    10. '   ' → logprob: -9.721525192260742

Token 24: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.875911712646484
    4. '  ' → logprob: -18.250911712646484
    5. '```' → logprob: -18.875911712646484
    6. ' ' → logprob: -19.500911712646484
    7. '１' → logprob: -19.750911712646484
    8. '۱' → logprob: -20.125911712646484
    9. '2' → logprob: -20.188411712646484
    10. '<|end|>' → logprob: -20.250911712646484

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '  ' → logprob: -19.00001335144043
    4. '   ' → logprob: -19.12501335144043
    5. '```' → logprob: -19.50001335144043
    6. '-' → logprob: -20.87501335144043
    7. '۱' → logprob: -21.31251335144043
    8. '１' → logprob: -21.50001335144043
    9. '3' → logprob: -21.68751335144043
    10. '<|end|>' → logprob: -22.00001335144043

Token 26: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.06323052942752838
    2. '
' → logprob: -3.688230514526367
    3. ' else' → logprob: -3.938230514526367
    4. '\n' → logprob: -4.563230514526367
    5. '<|end|>' → logprob: -5.313230514526367
    6. 'elif' → logprob: -7.313230514526367
    7. '```' → logprob: -8.438230514526367
    8. '    
' → logprob: -8.813230514526367
    9. ' 
' → logprob: -9.563230514526367
    10. '  
' → logprob: -9.688230514526367

Token 27: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.040884193032979965
    2. '<|end|>' → logprob: -4.040884017944336
    3. ' else' → logprob: -4.540884017944336
    4. '
' → logprob: -4.790884017944336
    5. '\n' → logprob: -6.540884017944336
    6. 'elif' → logprob: -6.540884017944336
    7. '```' → logprob: -7.915884017944336
    8. '<|end|>' → logprob: -9.540884017944336
    9. '\' → logprob: -10.290884017944336
    10. '    
' → logprob: -10.540884017944336

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.20734242349863e-05
    2. ':
' → logprob: -9.625072479248047
    3. '   ' → logprob: -12.250072479248047
    4. ' :' → logprob: -14.000072479248047
    5. ':\' → logprob: -16.250072479248047
    6. '):' → logprob: -17.000072479248047
    7. ':

' → logprob: -17.125072479248047
    8. ':return' → logprob: -17.375072479248047
    9. '<|end|>' → logprob: -17.500072479248047
    10. '```' → logprob: -17.750072479248047

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001261845463886857
    2. 'odd' → logprob: -10.000125885009766
    3. ' odd' → logprob: -10.750125885009766
    4. '    
' → logprob: -10.875125885009766
    5. '```' → logprob: -11.125125885009766
    6. '    ' → logprob: -11.375125885009766
    7. '  ' → logprob: -12.625125885009766
    8. ' ' → logprob: -13.000125885009766
    9. '       ' → logprob: -13.125125885009766
    10. '
' → logprob: -13.500125885009766

Token 30: ' even' (ID: 1952)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.7768012881278992
    2. ' odd' → logprob: -1.276801347732544
    3. '   ' → logprob: -1.401801347732544
    4. 'even' (adapté à ' even') → logprob: -4.526801109313965
    5. ' even' → logprob: -5.651801109313965
    6. '    
' → logprob: -8.276801109313965
    7. ' ' → logprob: -8.401801109313965
    8. 'n' → logprob: -9.651801109313965
    9. '```' → logprob: -10.151801109313965
    10. 'od' → logprob: -10.651801109313965

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009774506092071533
    2. '=' → logprob: -4.634774684906006
    3. ' ' → logprob: -11.384774208068848
    4. ' +=' → logprob: -11.884774208068848
    5. ')' → logprob: -16.009775161743164
    6. '_' → logprob: -16.634775161743164
    7. ' =)' → logprob: -17.259775161743164
    8. '+=' → logprob: -17.509775161743164
    9. '```' → logprob: -17.509775161743164
    10. ' ==' → logprob: -17.634775161743164

Token 32: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3871220052242279
    2. ' n' → logprob: -1.1371220350265503
    3. '   ' → logprob: -8.76212215423584
    4. '0' → logprob: -9.63712215423584
    5. ' ' → logprob: -11.01212215423584
    6. '	n' → logprob: -12.26212215423584
    7. '(n' → logprob: -13.13712215423584
    8. ' ' → logprob: -13.63712215423584
    9. '  ' → logprob: -13.76212215423584
    10. '1' → logprob: -14.01212215423584

Token 33: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6577271223068237
    2. ' -' → logprob: -0.7827271223068237
    3. ' +' → logprob: -4.532727241516113
    4. '+' → logprob: -4.657727241516113
    5. '   ' → logprob: -5.907727241516113
    6. ' ' → logprob: -6.907727241516113
    7. '```' → logprob: -8.282727241516113
    8. 'else' → logprob: -8.657727241516113
    9. '
' → logprob: -8.782727241516113
    10. '       ' → logprob: -10.032727241516113

Token 34: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033593899570405483
    2. ' ' → logprob: -8.000335693359375
    3. '2' → logprob: -15.125335693359375
    4. '0' → logprob: -16.625335693359375
    5. '   ' → logprob: -17.250335693359375
    6. '  ' → logprob: -18.000335693359375
    7. '```' → logprob: -18.250335693359375
    8. '１' → logprob: -19.875335693359375
    9. '`' → logprob: -19.937835693359375
    10. '۱' → logprob: -20.250335693359375

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.375004768371582
    3. '2' → logprob: -15.000004768371582
    4. '```' → logprob: -17.000003814697266
    5. '0' → logprob: -17.875003814697266
    6. '   ' → logprob: -18.937503814697266
    7. '  ' → logprob: -19.812503814697266
    8. '۱' → logprob: -20.000003814697266
    9. '１' → logprob: -20.125003814697266
    10. '-' → logprob: -20.125003814697266

Token 36: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004144648555666208
    2. 'odd' → logprob: -8.125414848327637
    3. '
' → logprob: -9.750414848327637
    4. '    
' → logprob: -10.125414848327637
    5. '```' → logprob: -11.125414848327637
    6. ' odd' → logprob: -13.250414848327637
    7. '``' → logprob: -14.000414848327637
    8. '  ' → logprob: -14.250414848327637
    9. ' ' → logprob: -14.500414848327637
    10. 'od' → logprob: -15.000414848327637

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012158327735960484
    2. '
' → logprob: -8.001215934753418
    3. 'odd' → logprob: -8.001215934753418
    4. '```' → logprob: -8.126215934753418
    5. '    
' → logprob: -8.501215934753418
    6. '``' → logprob: -11.001215934753418
    7. '`' → logprob: -11.626215934753418
    8. '  ' → logprob: -11.876215934753418
    9. '    ' → logprob: -12.876215934753418
    10. ' odd' → logprob: -13.126215934753418

Token 38: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' (adapté à ' odd') → logprob: -0.0025694756768643856
    2. ' odd' → logprob: -6.002569675445557
    3. '   ' → logprob: -9.502569198608398
    4. 'od' → logprob: -11.377569198608398
    5. ' ' → logprob: -12.752569198608398
    6. '```' → logprob: -13.252569198608398
    7. 'even' → logprob: -14.002569198608398
    8. 'o' → logprob: -14.252569198608398
    9. '`' → logprob: -15.252569198608398
    10. '  ' → logprob: -15.377569198608398

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020558586344122887
    2. '=' → logprob: -3.8955585956573486
    3. ' ' → logprob: -11.27055835723877
    4. ' +=' → logprob: -12.89555835723877
    5. ' ==' → logprob: -14.27055835723877
    6. ')' → logprob: -15.52055835723877
    7. '<|end|>' → logprob: -15.77055835723877
    8. ' =
' → logprob: -16.020559310913086
    9. '```' → logprob: -16.145559310913086
    10. '_' → logprob: -16.770559310913086

Token 40: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20141586661338806
    2. ' n' → logprob: -1.7014158964157104
    3. '	n' → logprob: -13.201416015625
    4. ' ' → logprob: -14.326416015625
    5. ' ' → logprob: -16.201416015625
    6. '```' → logprob: -17.326416015625
    7. '   ' → logprob: -17.451416015625
    8. '_n' → logprob: -17.451416015625
    9. ' 
' → logprob: -17.951416015625
    10. '<|end|>' → logprob: -18.076416015625

Token 41: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8784851431846619
    2. '\n' → logprob: -1.1284852027893066
    3. '```' → logprob: -2.1284852027893066
    4. '<|end|>' → logprob: -3.0034852027893066
    5. 'print' → logprob: -3.1284852027893066
    6. '#' → logprob: -4.378485202789307
    7. '\' → logprob: -4.878485202789307
    8. '  
' → logprob: -5.628485202789307
    9. 'newline' → logprob: -5.878485202789307
    10. 'n' → logprob: -6.003485202789307

Token 42: 'even' (ID: 28689)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9624539613723755
    2. '
' → logprob: -1.3374539613723755
    3. '+' → logprob: -2.462453842163086
    4. 'for' → logprob: -2.712453842163086
    5. ' ' → logprob: -2.712453842163086
    6. '<|end|>' → logprob: -3.462453842163086
    7. '#' → logprob: -3.712453842163086
    8. '```' → logprob: -4.087453842163086
    9. '\n' → logprob: -4.837453842163086
    10. '  
' → logprob: -4.837453842163086

Token 43: '_' (ID: 62)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: '2' (ID: 17)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7721563577651978
    2. 's' → logprob: -1.2721563577651978
    3. 'square' → logprob: -1.8971563577651978
    4. '**' → logprob: -3.647156238555908
    5. 'print' → logprob: -3.897156238555908
    6. 'value' → logprob: -4.272156238555908
    7. '2' → logprob: -4.522156238555908
    8. 'factor' → logprob: -4.772156238555908
    9. '*' → logprob: -5.147156238555908
    10. ' ' → logprob: -5.522156238555908

Token 45: ' =' (ID: 314)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4297213554382324
    2. ' ' → logprob: -2.1797213554382324
    3. ' **' → logprob: -2.3047213554382324
    4. '*' → logprob: -2.4297213554382324
    5. ' *' → logprob: -3.9297213554382324
    6. ' =' → logprob: -4.804721355438232
    7. '_' → logprob: -5.054721355438232
    8. '2' → logprob: -5.679721355438232
    9. '0' → logprob: -6.054721355438232
    10. '=' → logprob: -6.179721355438232

Token 46: ' even' (ID: 1952)
  Prédit: ' even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' even' → logprob: -0.32536613941192627
    2. 'even' → logprob: -1.4503661394119263
    3. '2' → logprob: -3.4503660202026367
    4. ' ' → logprob: -5.075366020202637
    5. '**' → logprob: -6.075366020202637
    6. ' **' → logprob: -7.075366020202637
    7. '*' → logprob: -7.575366020202637
    8. ' *' → logprob: -7.825366020202637
    9. ' n' → logprob: -8.325366020202637
    10. 'e' → logprob: -8.325366020202637

Token 47: ' //' (ID: 602)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6835821270942688
    2. ' *' → logprob: -1.683582067489624
    3. ' **' → logprob: -1.683582067489624
    4. '*' → logprob: -2.558582067489624
    5. ' //' → logprob: -3.558582067489624
    6. ' +' → logprob: -4.808582305908203
    7. ' ' → logprob: -5.433582305908203
    8. '//' → logprob: -6.558582305908203
    9. '+' → logprob: -6.933582305908203
    10. ' -' → logprob: -7.308582305908203

Token 48: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '4' → logprob: -16.62509536743164
    4. '  ' → logprob: -17.75009536743164
    5. '   ' → logprob: -18.37509536743164
    6. '```' → logprob: -18.68759536743164
    7. ' ' → logprob: -19.25009536743164
    8. '۲' → logprob: -19.31259536743164
    9. '1' → logprob: -19.37509536743164
    10. '22' → logprob: -19.37509536743164

Token 49: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.682846287731081e-05
    2. ' ' → logprob: -9.625066757202148
    3. '4' → logprob: -14.750066757202148
    4. '  ' → logprob: -16.81256675720215
    5. '   ' → logprob: -17.18756675720215
    6. '10' → logprob: -17.68756675720215
    7. '22' → logprob: -17.87506675720215
    8. '```' → logprob: -17.93756675720215
    9. '3' → logprob: -18.18756675720215
    10. '1' → logprob: -18.31256675720215

Token 50: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0929709672927856
    2. '<|end|>' → logprob: -1.2179709672927856
    3. '*' → logprob: -1.8429709672927856
    4. '
' → logprob: -2.717970848083496
    5. 'if' → logprob: -2.717970848083496
    6. ' *' → logprob: -4.092970848083496
    7. ' +' → logprob: -4.342970848083496
    8. ' ' → logprob: -4.842970848083496
    9. ' if' → logprob: -4.967970848083496
    10. ')' → logprob: -5.342970848083496

Token 51: 'result' (ID: 2521)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.3496943712234497
    2. '+' → logprob: -1.3496943712234497
    3. 'if' → logprob: -1.4746943712234497
    4. 'sum' → logprob: -2.84969425201416
    5. 'result' → logprob: -2.97469425201416
    6. 'print' → logprob: -3.22469425201416
    7. 'factor' → logprob: -3.97469425201416
    8. '
' → logprob: -4.22469425201416
    9. 'even' → logprob: -4.22469425201416
    10. 'n' → logprob: -5.22469425201416

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13000139594078064
    2. '=' → logprob: -2.1300013065338135
    3. 's' → logprob: -6.755001544952393
    4. ' ' → logprob: -7.005001544952393
    5. '_' → logprob: -7.130001544952393
    6. ',' → logprob: -10.505001068115234
    7. ' +=' → logprob: -10.505001068115234
    8. ')' → logprob: -10.630001068115234
    9. ' =
' → logprob: -11.130001068115234
    10. 'space' → logprob: -11.255001068115234

Token 53: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.04379911720752716
    2. ' even' → logprob: -3.2937991619110107
    3. 'odd' → logprob: -5.918798923492432
    4. '(' → logprob: -6.668798923492432
    5. '(e' → logprob: -7.543798923492432
    6. ' (' → logprob: -7.918798923492432
    7. ' odd' → logprob: -8.29379940032959
    8. 'ev' → logprob: -9.16879940032959
    9. '2' → logprob: -9.41879940032959
    10. ' ' → logprob: -9.79379940032959

Token 54: '_' (ID: 62)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10177506506443024
    2. '*' → logprob: -3.3517751693725586
    3. ' +' → logprob: -3.4767751693725586
    4. '_' → logprob: -3.6017751693725586
    5. '+' → logprob: -6.101775169372559
    6. ' ' → logprob: -7.601775169372559
    7. ' _' → logprob: -7.726775169372559
    8. '2' → logprob: -9.726775169372559
    9. ' **' → logprob: -9.726775169372559
    10. '**' → logprob: -10.226775169372559

Token 55: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008943438529968262
    2. '*' → logprob: -4.758943557739258
    3. '0' → logprob: -9.383943557739258
    4. '1' → logprob: -9.758943557739258
    5. '//' → logprob: -10.133943557739258
    6. '_' → logprob: -10.508943557739258
    7. 'even' → logprob: -11.008943557739258
    8. '*(' → logprob: -11.383943557739258
    9. 'times' → logprob: -11.508943557739258
    10. '+' → logprob: -11.508943557739258

Token 56: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5251162648200989
    2. ' *' → logprob: -0.9001162648200989
    3. '**' → logprob: -7.025116443634033
    4. '*(' → logprob: -7.525116443634033
    5. '+' → logprob: -7.775116443634033
    6. ' +' → logprob: -9.275115966796875
    7. ' **' → logprob: -10.900115966796875
    8. '***' → logprob: -12.150115966796875
    9. ' ' → logprob: -12.400115966796875
    10. ' ' → logprob: -12.650115966796875

Token 57: ' odd' (ID: 14210)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13491173088550568
    2. '(e' → logprob: -2.2599117755889893
    3. ' (' → logprob: -4.63491153717041
    4. 'even' → logprob: -4.88491153717041
    5. '(n' → logprob: -6.13491153717041
    6. 'odd' → logprob: -6.25991153717041
    7. '   ' → logprob: -9.38491153717041
    8. '(ev' → logprob: -9.38491153717041
    9. '2' → logprob: -9.88491153717041
    10. ' odd' → logprob: -10.13491153717041

Token 58: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018569298088550568
    2. '%' → logprob: -4.893569469451904
    3. '*' → logprob: -4.893569469451904
    4. 'print' → logprob: -6.893569469451904
    5. '<|end|>' → logprob: -7.018569469451904
    6. '
' → logprob: -7.893569469451904
    7. ' +' → logprob: -8.018568992614746
    8. '**' → logprob: -8.768568992614746
    9. ')' → logprob: -9.143568992614746
    10. '#' → logprob: -9.143568992614746

Token 59: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10250092297792435
    2. '<|end|>' → logprob: -3.1025009155273438
    3. '
' → logprob: -3.4775009155273438
    4. 'print' → logprob: -4.102500915527344
    5. '*' → logprob: -6.352500915527344
    6. '\n' → logprob: -7.477500915527344
    7. ' +' → logprob: -7.727500915527344
    8. ')' → logprob: -7.977500915527344
    9. '```' → logprob: -8.102500915527344
    10. ' ' → logprob: -8.102500915527344

Token 60: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00022237090161070228
    2. '(result' → logprob: -8.500222206115723
    3. '("("' → logprob: -11.375222206115723
    4. '('' → logprob: -12.125222206115723
    5. '()' → logprob: -14.250222206115723
    6. '(
' → logprob: -14.750222206115723
    7. '(

' → logprob: -14.875222206115723
    8. '((' → logprob: -15.750222206115723
    9. ' (' → logprob: -16.12522315979004
    10. '(`' → logprob: -16.37522315979004

Token 61: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6405310816480778e-05
    2. '+' → logprob: -11.500016212463379
    3. ' )' → logprob: -12.375016212463379
    4. '*' → logprob: -13.875016212463379
    5. '))' → logprob: -14.750016212463379
    6. ')
' → logprob: -15.625016212463379
    7. '+)' → logprob: -16.250017166137695
    8. '**' → logprob: -16.250017166137695
    9. ')`' → logprob: -16.375017166137695
    10. '#' → logprob: -17.125017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 59
Tokens correctement prédits (1ère position, stricte): 23
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 50
Précision stricte (1ère position): 38.98%
Précision adaptée (1ère position): 40.68%
Précision (top 10): 84.75%
================================================================================
