================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def calc():
    N_and_x = input().split()
    N = int(N_and_x[0])
    x = int(N_and_x[1])
    a = [int(e) for e in input().split()]
    result = 0
    def add(c):
        nonlocal result
        result = result + c
    a.sort()
    i = 0
    while i < N:
        x -= a[i]
        add(1)
        if x < 0:
            result -= 1
            break
        i += 1
    print(result if x <= 0 else result - 1)
calc()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' calc' (ID: 25691)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4374593198299408
    2. '\' → logprob: -1.4374593496322632
    3. '   ' → logprob: -3.0624592304229736
    4. '(' → logprob: -3.9374592304229736
    5. '    
' → logprob: -4.437459468841553
    6. '```' → logprob: -4.437459468841553
    7. ' 
' → logprob: -4.812459468841553
    8. ' ' → logprob: -5.187459468841553
    9. ''' → logprob: -6.187459468841553
    10. '    ' → logprob: -6.312459468841553

Token 4: ' N' (ID: 478)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.27002885937690735
    2. '   ' → logprob: -2.770028829574585
    3. ' ' → logprob: -2.770028829574585
    4. 'a' → logprob: -3.020028829574585
    5. 'return' → logprob: -3.645028829574585
    6. 'x' → logprob: -4.895029067993164
    7. '    ' → logprob: -5.145029067993164
    8. '(' → logprob: -5.645029067993164
    9. '#' → logprob: -5.645029067993164
    10. 't' → logprob: -6.145029067993164

Token 5: '_and' (ID: 18645)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6309816241264343
    2. '=' → logprob: -1.380981683731079
    3. ' =' → logprob: -2.880981683731079
    4. '+' → logprob: -3.255981683731079
    5. 'u' → logprob: -3.505981683731079
    6. '   ' → logprob: -3.880981683731079
    7. ',' → logprob: -4.6309814453125
    8. ' ' → logprob: -4.7559814453125
    9. 'a' → logprob: -4.8809814453125
    10. '-' → logprob: -5.1309814453125

Token 6: '_x' (ID: 7054)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2294689416885376
    2. '_' → logprob: -1.6044689416885376
    3. '_values' → logprob: -2.354468822479248
    4. '_value' → logprob: -3.229468822479248
    5. '_input' → logprob: -3.354468822479248
    6. ' =' → logprob: -3.729468822479248
    7. ' M' → logprob: -3.854468822479248
    8. 'input' → logprob: -3.854468822479248
    9. 'data' → logprob: -3.979468822479248
    10. ' N' → logprob: -4.104468822479248

Token 7: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4128327965736389
    2. '=' → logprob: -1.2878327369689941
    3. '[' → logprob: -3.287832736968994
    4. '_' → logprob: -4.412832736968994
    5. 's' → logprob: -5.787832736968994
    6. ',' → logprob: -5.912832736968994
    7. '.' → logprob: -6.037832736968994
    8. ')' → logprob: -6.412832736968994
    9. ' ' → logprob: -6.912832736968994
    10. 'space' → logprob: -7.412832736968994

Token 8: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5829370617866516
    2. ' input' → logprob: -0.8329370617866516
    3. ' []' → logprob: -6.207937240600586
    4. '[]' → logprob: -6.207937240600586
    5. ' list' → logprob: -7.332937240600586
    6. 'int' → logprob: -7.582937240600586
    7. ' [' → logprob: -7.957937240600586
    8. 'list' → logprob: -7.957937240600586
    9. ' int' → logprob: -8.207937240600586
    10. '[' → logprob: -8.332937240600586

Token 9: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003282286459580064
    2. '('' → logprob: -6.378282070159912
    3. '("("' → logprob: -6.628282070159912
    4. '()' → logprob: -10.00328254699707
    5. ''' → logprob: -10.12828254699707
    6. '"' → logprob: -10.12828254699707
    7. '(
' → logprob: -10.50328254699707
    8. '("")' → logprob: -11.25328254699707
    9. '(

' → logprob: -11.50328254699707
    10. ' ' → logprob: -11.62828254699707

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0031847211066633463
    2. 'strip' → logprob: -5.753184795379639
    3. 'rstrip' → logprob: -12.12818431854248
    4. ' split' → logprob: -14.00318431854248
    5. 'replace' → logprob: -14.37818431854248
    6. 'spl' → logprob: -16.253185272216797
    7. 'startswith' → logprob: -17.003185272216797
    8. 'read' → logprob: -17.003185272216797
    9. 's' → logprob: -17.253185272216797
    10. 'rs' → logprob: -18.128185272216797

Token 11: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18820106983184814
    2. '('' → logprob: -1.9382010698318481
    3. '()' → logprob: -4.188200950622559
    4. '("("' → logprob: -4.438200950622559
    5. '(`' → logprob: -7.938200950622559
    6. '("' → logprob: -9.938200950622559
    7. '```' → logprob: -10.438200950622559
    8. ''' → logprob: -10.563200950622559
    9. '`' → logprob: -10.688200950622559
    10. '(
' → logprob: -10.813200950622559

Token 12: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5893818736076355
    2. '   ' → logprob: -1.7143819332122803
    3. 'x' → logprob: -2.5893819332122803
    4. '`' → logprob: -3.3393819332122803
    5. 'if' → logprob: -3.4643819332122803
    6. 'n' → logprob: -3.5893819332122803
    7. '```' → logprob: -4.089381694793701
    8. ' if' → logprob: -4.464381694793701
    9. ' ' → logprob: -4.839381694793701
    10. 'i' → logprob: -4.839381694793701

Token 13: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.6434109210968018
    2. 'n' → logprob: -1.5184109210968018
    3. 'x' → logprob: -1.7684109210968018
    4. 'i' → logprob: -3.5184109210968018
    5. '   ' → logprob: -4.393410682678223
    6. ' N' → logprob: -4.768410682678223
    7. ' if' → logprob: -5.018410682678223
    8. '[' → logprob: -5.768410682678223
    9. ' x' → logprob: -5.768410682678223
    10. 'a' → logprob: -5.893410682678223

Token 14: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06610260158777237
    2. '_' → logprob: -2.8161025047302246
    3. ',' → logprob: -7.066102504730225
    4. ')' → logprob: -7.566102504730225
    5. '[]' → logprob: -7.691102504730225
    6. '[:]' → logprob: -7.816102504730225
    7. '<|end|>' → logprob: -8.066102981567383
    8. '=' → logprob: -8.191102981567383
    9. '.' → logprob: -8.316102981567383
    10. '_space' → logprob: -9.066102981567383

Token 15: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05661090090870857
    2. 'int' → logprob: -2.9316108226776123
    3. ' N' → logprob: -6.431611061096191
    4. ' ' → logprob: -9.306611061096191
    5. 'N' → logprob: -10.931611061096191
    6. '(int' → logprob: -13.056611061096191
    7. '  ' → logprob: -13.931611061096191
    8. '=int' → logprob: -14.181611061096191
    9. ' float' → logprob: -14.306611061096191
    10. '   ' → logprob: -14.306611061096191

Token 16: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09018971771001816
    2. '(N' → logprob: -2.4651896953582764
    3. '('' → logprob: -6.7151899337768555
    4. '(
' → logprob: -11.340189933776855
    5. '("' → logprob: -11.840189933776855
    6. '("("' → logprob: -12.215189933776855
    7. '(

' → logprob: -12.590189933776855
    8. ''' → logprob: -12.840189933776855
    9. '()' → logprob: -13.215189933776855
    10. ' ' → logprob: -14.340189933776855

Token 17: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.0013254800578579307
    2. '[' → logprob: -6.751325607299805
    3. '[_' → logprob: -9.751325607299805
    4. ')' → logprob: -9.751325607299805
    5. '[N' → logprob: -11.126325607299805
    6. '_AND' → logprob: -12.001325607299805
    7. ')_' → logprob: -12.876325607299805
    8. '_or' → logprob: -12.876325607299805
    9. '_)' → logprob: -13.251325607299805
    10. '(' → logprob: -13.376325607299805

Token 18: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0002919638354796916
    2. '_' → logprob: -8.25029182434082
    3. 'x' → logprob: -10.75029182434082
    4. '_)' → logprob: -13.12529182434082
    5. ')_' → logprob: -13.75029182434082
    6. '_a' → logprob: -14.37529182434082
    7. '__' → logprob: -14.37529182434082
    8. ''_' → logprob: -14.50029182434082
    9. ' _' → logprob: -14.87529182434082
    10. '_and' → logprob: -15.00029182434082

Token 19: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. ')' → logprob: -14.250001907348633
    3. ' [' → logprob: -14.500001907348633
    4. '[-' → logprob: -14.875001907348633
    5. '\[' → logprob: -16.125001907348633
    6. '[len' → logprob: -16.750001907348633
    7. '[
' → logprob: -17.375001907348633
    8. '   ' → logprob: -17.875001907348633
    9. '```' → logprob: -18.000001907348633
    10. '[N' → logprob: -18.250001907348633

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025219188537448645
    2. '1' → logprob: -6.002521991729736
    3. ' ' → logprob: -10.002521514892578
    4. ')' → logprob: -15.002521514892578
    5. '   ' → logprob: -15.627521514892578
    6. '2' → logprob: -15.752521514892578
    7. ']' → logprob: -17.127521514892578
    8. '  ' → logprob: -17.315021514892578
    9. '-' → logprob: -17.440021514892578
    10. '۰' → logprob: -17.440021514892578

Token 21: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.431712806224823
    2. '])' → logprob: -1.0567128658294678
    3. ']' → logprob: -5.931712627410889
    4. ' ])' → logprob: -9.806713104248047
    5. ')])' → logprob: -9.806713104248047
    6. ')
' → logprob: -10.181713104248047
    7. ')]' → logprob: -10.181713104248047
    8. ''])' → logprob: -10.306713104248047
    9. '[' → logprob: -10.306713104248047
    10. ' )' → logprob: -10.806713104248047

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8538881540298462
    2. '<|end|>' → logprob: -1.8538881540298462
    3. ')' → logprob: -2.1038880348205566
    4. ' ' → logprob: -2.3538880348205566
    5. '  ' → logprob: -2.4788880348205566
    6. ''' → logprob: -3.3538880348205566
    7. '    ' → logprob: -3.3538880348205566
    8. '    
' → logprob: -4.853888034820557
    9. '[' → logprob: -5.103888034820557
    10. ' )' → logprob: -5.228888034820557

Token 23: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.959725022315979
    2. 'x' (adapté à ' x') → logprob: -1.084725022315979
    3. '    ' → logprob: -1.959725022315979
    4. ' x' → logprob: -2.7097249031066895
    5. '_' → logprob: -3.9597249031066895
    6. '   ' → logprob: -3.9597249031066895
    7. ''' → logprob: -4.9597249031066895
    8. ' ,' → logprob: -5.3347249031066895
    9. '     
' → logprob: -5.5847249031066895
    10. 'i' → logprob: -6.4597249031066895

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2067883014678955
    2. '_' → logprob: -2.0817883014678955
    3. '=' → logprob: -2.8317883014678955
    4. ')' → logprob: -6.706788063049316
    5. ',' → logprob: -7.081788063049316
    6. '_space' → logprob: -7.831788063049316
    7. ' ' → logprob: -8.706788063049316
    8. '[' → logprob: -9.331788063049316
    9. '_=' → logprob: -9.331788063049316
    10. ' _' → logprob: -9.456788063049316

Token 25: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6382272243499756
    2. 'int' → logprob: -0.7632272243499756
    3. ' float' → logprob: -5.638227462768555
    4. 'float' → logprob: -6.263227462768555
    5. ' ' → logprob: -9.638227462768555
    6. ' N' → logprob: -10.013227462768555
    7. '0' → logprob: -11.138227462768555
    8. '(int' → logprob: -12.138227462768555
    9. 'N' → logprob: -12.388227462768555
    10. '  ' → logprob: -12.888227462768555

Token 26: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.57643723487854
    2. '(' → logprob: -0.82643723487854
    3. '(x' → logprob: -7.951436996459961
    4. '('' → logprob: -9.951436996459961
    5. '()' → logprob: -10.701436996459961
    6. ' (' → logprob: -11.326436996459961
    7. ' ' → logprob: -11.576436996459961
    8. '```' → logprob: -11.951436996459961
    9. ''' → logprob: -12.326436996459961
    10. '`' → logprob: -12.451436996459961

Token 27: '_and' (ID: 18645)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6420308947563171
    2. '_and' → logprob: -0.7670308947563171
    3. ')' → logprob: -5.017030715942383
    4. '-' → logprob: -7.017030715942383
    5. '+' → logprob: -7.142030715942383
    6. 'and' → logprob: -8.267030715942383
    7. ' ' → logprob: -8.642030715942383
    8. '_' → logprob: -9.142030715942383
    9. ' -' → logprob: -9.267030715942383
    10. '[-' → logprob: -9.767030715942383

Token 28: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0017342021455988288
    2. 'x' → logprob: -6.626734256744385
    3. '_' → logprob: -8.626733779907227
    4. '_and' → logprob: -9.001733779907227
    5. '_a' → logprob: -9.501733779907227
    6. '_w' → logprob: -12.126733779907227
    7. ' _' → logprob: -12.501733779907227
    8. 'and' → logprob: -12.751733779907227
    9. ' ' → logprob: -12.751733779907227
    10. '[' → logprob: -12.876733779907227

Token 29: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.749814019713085e-06
    2. ' [' → logprob: -12.750006675720215
    3. ')' → logprob: -13.375006675720215
    4. '   ' → logprob: -14.625006675720215
    5. '][' → logprob: -15.000006675720215
    6. ')[' → logprob: -15.000006675720215
    7. '1' → logprob: -15.250006675720215
    8. '```' → logprob: -15.375006675720215
    9. '])' → logprob: -15.750006675720215
    10. ']' → logprob: -16.12500762939453

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. '])' → logprob: -12.375006675720215
    3. ' ' → logprob: -13.375006675720215
    4. '0' → logprob: -14.750006675720215
    5. '   ' → logprob: -15.375006675720215
    6. ']' → logprob: -16.12500762939453
    7. '2' → logprob: -16.50000762939453
    8. ')' → logprob: -16.56250762939453
    9. '-' → logprob: -16.68750762939453
    10. '```' → logprob: -17.43750762939453

Token 31: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '))' → logprob: -15.875000953674316
    3. ')
' → logprob: -16.0
    4. ' )' → logprob: -16.25
    5. '')' → logprob: -16.375
    6. '）' → logprob: -16.875
    7. '}' → logprob: -17.0
    8. ']' → logprob: -17.125
    9. '`)' → logprob: -17.5
    10. '),' → logprob: -17.75

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7571520805358887
    2. '\n' → logprob: -1.7571520805358887
    3. '```' → logprob: -2.2571520805358887
    4. '    
' → logprob: -2.5071520805358887
    5. '
' → logprob: -3.5071520805358887
    6. '`' → logprob: -3.8821520805358887
    7. '' → logprob: -4.007152080535889
    8. 'i' → logprob: -4.507152080535889
    9. '\' → logprob: -4.507152080535889
    10. 'n' → logprob: -4.632152080535889

Token 33: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -1.4475531578063965
    2. 'i' → logprob: -1.4475531578063965
    3. 'r' → logprob: -1.5725531578063965
    4. '   ' → logprob: -2.6975531578063965
    5. 's' → logprob: -3.1975531578063965
    6. 'n' → logprob: -3.3225531578063965
    7. '`' → logprob: -3.6975531578063965
    8. 'for' → logprob: -3.6975531578063965
    9. 'c' → logprob: -4.0725531578063965
    10. 'd' → logprob: -4.0725531578063965

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9916719198226929
    2. '=' → logprob: -1.3666719198226929
    3. 's' → logprob: -1.3666719198226929
    4. '[' → logprob: -2.3666720390319824
    5. ' ' → logprob: -4.741672039031982
    6. '_' → logprob: -4.866672039031982
    7. '[i' → logprob: -6.366672039031982
    8. '[:]' → logprob: -6.491672039031982
    9. '.' → logprob: -6.616672039031982
    10. 'r' → logprob: -6.866672039031982

Token 35: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4060588777065277
    2. ' list' → logprob: -1.15605890750885
    3. '[]' → logprob: -4.5310587882995605
    4. ' []' → logprob: -6.0310587882995605
    5. 'input' → logprob: -6.1560587882995605
    6. ' [' → logprob: -6.7810587882995605
    7. '[' → logprob: -6.9060587882995605
    8. '[list' → logprob: -7.0310587882995605
    9. '[input' → logprob: -8.156059265136719
    10. ' input' → logprob: -8.156059265136719

Token 36: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00017040544480551034
    2. ' int' → logprob: -9.000170707702637
    3. '0' → logprob: -10.125170707702637
    4. ']int' → logprob: -12.500170707702637
    5. '(int' → logprob: -13.375170707702637
    6. '*' → logprob: -14.250170707702637
    7. '[int' → logprob: -14.875170707702637
    8. ']' → logprob: -15.500170707702637
    9. 'i' → logprob: -15.875170707702637
    10. '<int' → logprob: -16.12516975402832

Token 37: '(e' (ID: 3454)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.236017107963562
    2. '(' → logprob: -1.736017107963562
    3. '(x' → logprob: -3.6110172271728516
    4. '(input' → logprob: -5.111017227172852
    5. '(s' → logprob: -7.861017227172852
    6. '(a' → logprob: -8.611017227172852
    7. '(n' → logprob: -9.111017227172852
    8. '(item' → logprob: -9.861017227172852
    9. '(y' → logprob: -10.486017227172852
    10. '(token' → logprob: -10.736017227172852

Token 38: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08588399738073349
    2. '(' → logprob: -2.5858840942382812
    3. '())' → logprob: -6.085884094238281
    4. ' )' → logprob: -6.335884094238281
    5. '(x' → logprob: -6.960884094238281
    6. '(i' → logprob: -7.585884094238281
    7. '()' → logprob: -7.835884094238281
    8. 'a' → logprob: -8.335884094238281
    9. '(a' → logprob: -8.835884094238281
    10. '(e' → logprob: -8.960884094238281

Token 39: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8494116067886353
    2. 'for' → logprob: -0.8494116067886353
    3. ' for' → logprob: -3.0994114875793457
    4. '(x' → logprob: -3.3494114875793457
    5. ')' → logprob: -3.8494114875793457
    6. '(i' → logprob: -3.9744114875793457
    7. '(input' → logprob: -4.099411487579346
    8. ']' → logprob: -5.724411487579346
    9. '(e' → logprob: -6.224411487579346
    10. 'input' → logprob: -7.724411487579346

Token 40: ' e' (ID: 319)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.014317459426820278
    2. 'input' → logprob: -4.514317512512207
    3. ' ' → logprob: -5.764317512512207
    4. '(input' → logprob: -9.889317512512207
    5. '_input' → logprob: -11.014317512512207
    6. ' range' → logprob: -11.514317512512207
    7. '=input' → logprob: -12.014317512512207
    8. '	input' → logprob: -12.264317512512207
    9. '<|end|>' → logprob: -12.264317512512207
    10. ' (' → logprob: -12.389317512512207

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00038455575122497976
    2. 'in' → logprob: -8.000384330749512
    3. ' ' → logprob: -10.250384330749512
    4. ' e' → logprob: -11.500384330749512
    5. 'e' → logprob: -13.375384330749512
    6. '(' → logprob: -14.750384330749512
    7. 'a' → logprob: -14.875384330749512
    8. '(e' → logprob: -15.000384330749512
    9. '  ' → logprob: -15.500384330749512
    10. '<|end|>' → logprob: -16.125385284423828

Token 42: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5231301784515381
    2. 'input' → logprob: -0.8981301784515381
    3. '(input' → logprob: -12.648130416870117
    4. ' ' → logprob: -13.773130416870117
    5. 'range' → logprob: -14.648130416870117
    6. ' range' → logprob: -14.898130416870117
    7. 'x' → logprob: -15.273130416870117
    8. ' x' → logprob: -15.398130416870117
    9. '	input' → logprob: -15.523130416870117
    10. '<input' → logprob: -15.648130416870117

Token 43: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.3806116580963135
    2. '()' → logprob: -1.6306116580963135
    3. '().' → logprob: -2.1306116580963135
    4. '())' → logprob: -6.505611419677734
    5. '()].' → logprob: -8.255611419677734
    6. '(' → logprob: -9.130611419677734
    7. '()][' → logprob: -10.130611419677734
    8. '()`' → logprob: -11.505611419677734
    9. ']()' → logprob: -11.505611419677734
    10. '()],' → logprob: -11.630611419677734

Token 44: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0683535037969705e-05
    2. 'strip' → logprob: -11.75001049041748
    3. ' split' → logprob: -13.00001049041748
    4. 'rstrip' → logprob: -14.75001049041748
    5. 'spl' → logprob: -16.500011444091797
    6. '(split' → logprob: -16.500011444091797
    7. ')' → logprob: -19.875011444091797
    8. 's' → logprob: -19.875011444091797
    9. 'sp' → logprob: -20.625011444091797
    10. '.split' → logprob: -21.250011444091797

Token 45: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.004024852998554707
    2. '(' → logprob: -6.254024982452393
    3. '()' → logprob: -6.254024982452393
    4. '())' → logprob: -9.004024505615234
    5. ']' → logprob: -10.754024505615234
    6. '('' → logprob: -11.129024505615234
    7. ')]' → logprob: -12.379024505615234
    8. '()][' → logprob: -13.004024505615234
    9. '()]
' → logprob: -13.504024505615234
    10. '()],' → logprob: -14.004024505615234

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.364176869392395
    2. '
' → logprob: -1.489176869392395
    3. 'i' → logprob: -2.4891767501831055
    4. 'a' → logprob: -2.7391767501831055
    5. '[' → logprob: -2.9891767501831055
    6. 'n' → logprob: -3.1141767501831055
    7. '\n' → logprob: -3.1141767501831055
    8. ')' → logprob: -3.7391767501831055
    9. 'for' → logprob: -4.1141767501831055
    10. 'r' → logprob: -4.1141767501831055

Token 47: ' result' (ID: 1534)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6018786430358887
    2. 's' → logprob: -1.6018786430358887
    3. 'c' → logprob: -2.3518786430358887
    4. 'i' → logprob: -3.4768786430358887
    5. 'result' (adapté à ' result') → logprob: -3.4768786430358887
    6. '_' → logprob: -4.476878643035889
    7. 'for' → logprob: -4.476878643035889
    8. 'a' → logprob: -4.601878643035889
    9. 'd' → logprob: -4.726878643035889
    10. 'b' → logprob: -4.726878643035889

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45814764499664307
    2. '=' → logprob: -1.833147644996643
    3. '.' → logprob: -1.958147644996643
    4. '_' → logprob: -3.5831475257873535
    5. '[' → logprob: -3.9581475257873535
    6. '.append' → logprob: -4.8331475257873535
    7. '[:]' → logprob: -5.5831475257873535
    8. 's' → logprob: -6.2081475257873535
    9. '(' → logprob: -6.5831475257873535
    10. ' ' → logprob: -7.0831475257873535

Token 49: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.236175537109375
    2. ' ' → logprob: -2.236175537109375
    3. ' []' → logprob: -2.986175537109375
    4. '[]' → logprob: -4.111175537109375
    5. 'sum' → logprob: -4.736175537109375
    6. 'a' → logprob: -5.236175537109375
    7. ' [' → logprob: -5.236175537109375
    8. '[' → logprob: -5.361175537109375
    9. ' sum' → logprob: -5.486175537109375
    10. ' a' → logprob: -5.861175537109375

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.784558892250061
    2. 'sum' → logprob: -1.409558892250061
    3. '[]' → logprob: -1.534558892250061
    4. '[' → logprob: -3.1595587730407715
    5. 'abs' → logprob: -4.5345587730407715
    6. 'a' → logprob: -4.5345587730407715
    7. '[a' → logprob: -5.0345587730407715
    8. 'max' → logprob: -5.6595587730407715
    9. '[x' → logprob: -5.9095587730407715
    10. 'x' → logprob: -6.4095587730407715

Token 51: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8087411522865295
    2. ' for' → logprob: -1.6837410926818848
    3. '\n' → logprob: -1.8087410926818848
    4. 'for' → logprob: -2.4337410926818848
    5. '   ' → logprob: -2.9337410926818848
    6. ' ' → logprob: -4.183741092681885
    7. '\' → logprob: -4.433741092681885
    8. ' 
' → logprob: -4.433741092681885
    9. '<|end|>' → logprob: -4.433741092681885
    10. '' → logprob: -5.808741092681885

Token 52: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7457994818687439
    2. '   ' → logprob: -1.9957995414733887
    3. ' ' → logprob: -2.1207995414733887
    4. ' for' → logprob: -2.4957995414733887
    5. '\n' → logprob: -2.7457995414733887
    6. ' 
' → logprob: -2.9957995414733887
    7. 'for' → logprob: -3.4957995414733887
    8. '<|end|>' → logprob: -3.6207995414733887
    9. '    
' → logprob: -5.245799541473389
    10. '\' → logprob: -6.495799541473389

Token 53: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49084484577178955
    2. '\n' → logprob: -1.6158448457717896
    3. ' for' → logprob: -1.9908448457717896
    4. '\' → logprob: -3.7408447265625
    5. ' ' → logprob: -4.4908447265625
    6. '
' → logprob: -5.2408447265625
    7. '<|end|>' → logprob: -5.7408447265625
    8. '   ' → logprob: -5.8658447265625
    9. ' \' → logprob: -7.1158447265625
    10. 'n' → logprob: -7.7408447265625

Token 54: ' add' (ID: 1147)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -1.0724581480026245
    2. ' calculate' → logprob: -2.197458267211914
    3. ' ' → logprob: -2.447458267211914
    4. ' calc' → logprob: -2.447458267211914
    5. ' check' → logprob: -2.947458267211914
    6. ' helper' → logprob: -3.072458267211914
    7. ' solve' → logprob: -3.322458267211914
    8. ' dp' → logprob: -3.947458267211914
    9. ' factorial' → logprob: -3.947458267211914
    10. ' add' → logprob: -4.197458267211914

Token 55: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5159938931465149
    2. '_' → logprob: -1.0159938335418701
    3. '(a' → logprob: -3.76599383354187
    4. ' (' → logprob: -4.640994071960449
    5. '(x' → logprob: -6.640994071960449
    6. '_result' → logprob: -6.765994071960449
    7. '_parent' → logprob: -7.265994071960449
    8. '(i' → logprob: -7.515994071960449
    9. '_value' → logprob: -7.640994071960449
    10. '_element' → logprob: -7.765994071960449

Token 56: '):
' (ID: 1883)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.9003464579582214
    2. '):' → logprob: -0.9003464579582214
    3. 'o' → logprob: -3.275346517562866
    4. 'ounter' → logprob: -3.650346517562866
    5. 'on' → logprob: -3.900346517562866
    6. ',' → logprob: -3.900346517562866
    7. ' ):' → logprob: -3.900346517562866
    8. 'h' → logprob: -4.400346279144287
    9. ')' → logprob: -4.775346279144287
    10. '   ' → logprob: -5.400346279144287

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8765056729316711
    2. '    ' → logprob: -1.1265056133270264
    3. '   ' → logprob: -2.1265056133270264
    4. ' ' → logprob: -3.1265056133270264
    5. 'result' → logprob: -3.7515056133270264
    6. '(' → logprob: -3.8765056133270264
    7. ' (' → logprob: -4.5015058517456055
    8. ' result' → logprob: -4.5015058517456055
    9. ' 
' → logprob: -5.1265058517456055
    10. '        ' → logprob: -5.2515058517456055

Token 58: ' non' (ID: 2893)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5695473551750183
    2. ' result' → logprob: -1.819547414779663
    3. '    ' → logprob: -2.444547414779663
    4. ' ' → logprob: -2.444547414779663
    5. '       ' → logprob: -3.819547414779663
    6. 'c' → logprob: -4.069547176361084
    7. '   ' → logprob: -4.444547176361084
    8. ' c' → logprob: -4.569547176361084
    9. 'a' → logprob: -4.694547176361084
    10. ' a' → logprob: -5.194547176361084

Token 59: 'local' (ID: 5818)
  Prédit: 'local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.0017486036522313952
    2. 'l' → logprob: -6.376748561859131
    3. ' local' → logprob: -10.751749038696289
    4. 'e' → logprob: -11.626749038696289
    5. '_local' → logprob: -11.751749038696289
    6. 'locals' → logprob: -12.501749038696289
    7. '-local' → logprob: -13.251749038696289
    8. 'space' → logprob: -13.501749038696289
    9. '   ' → logprob: -15.126749038696289
    10. 'lo' → logprob: -15.376749038696289

Token 60: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.02980511076748371
    2. 'result' → logprob: -3.5298051834106445
    3. ' ' → logprob: -9.904805183410645
    4. ' c' → logprob: -13.529805183410645
    5. '	result' → logprob: -13.779805183410645
    6. ' x' → logprob: -14.404805183410645
    7. '_result' → logprob: -15.029805183410645
    8. '   ' → logprob: -15.404805183410645
    9. 'x' → logprob: -15.529805183410645
    10. '  ' → logprob: -15.529805183410645

Token 61: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.642484188079834
    2. '
' → logprob: -1.017484188079834
    3. '<|end|>' → logprob: -2.517484188079834
    4. ':' → logprob: -5.267484188079834
    5. '   ' → logprob: -5.392484188079834
    6. '<|end|>' → logprob: -5.642484188079834
    7. '           ' → logprob: -6.017484188079834
    8. ' 
' → logprob: -6.142484188079834
    9. ',' → logprob: -6.142484188079834
    10. ' ' → logprob: -6.517484188079834

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07694105058908463
    2. 'result' → logprob: -4.076941013336182
    3. ' ' → logprob: -4.326941013336182
    4. '
' → logprob: -4.826941013336182
    5. '<|end|>' → logprob: -4.826941013336182
    6. '   ' → logprob: -4.951941013336182
    7. ' 
' → logprob: -5.451941013336182
    8. '        ' → logprob: -5.951941013336182
    9. '        
' → logprob: -5.951941013336182
    10. '    ' → logprob: -6.201941013336182

Token 63: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.20546680688858032
    2. 'result' (adapté à ' result') → logprob: -1.7054667472839355
    3. ' if' → logprob: -6.5804667472839355
    4. '       ' → logprob: -7.3304667472839355
    5. '    ' → logprob: -7.5804667472839355
    6. '	result' → logprob: -7.7054667472839355
    7. ' ' → logprob: -7.9554667472839355
    8. '   ' → logprob: -8.330467224121094
    9. '        ' → logprob: -8.705467224121094
    10. '<|end|>' → logprob: -9.955467224121094

Token 64: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1606391966342926
    2. '+=' → logprob: -1.9106391668319702
    3. '+' → logprob: -7.91063928604126
    4. ' +' → logprob: -10.660638809204102
    5. ' =' → logprob: -12.035638809204102
    6. '=' → logprob: -12.160638809204102
    7. '+=(' → logprob: -12.535638809204102
    8. ' |=' → logprob: -12.660638809204102
    9. ' ^=' → logprob: -13.660638809204102
    10. ' ' → logprob: -13.785638809204102

Token 65: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.0774972066283226
    2. 'result' → logprob: -2.9524972438812256
    3. ' max' → logprob: -4.3274970054626465
    4. ' c' → logprob: -5.2024970054626465
    5. ' (' → logprob: -6.5774970054626465
    6. ' ' → logprob: -7.0774970054626465
    7. '(result' → logprob: -7.8274970054626465
    8. 'max' → logprob: -7.9524970054626465
    9. 'c' → logprob: -7.9524970054626465
    10. ' min' → logprob: -8.827497482299805

Token 66: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06431787461042404
    2. ' +' → logprob: -2.8143179416656494
    3. '+c' → logprob: -6.06431770324707
    4. ' plus' → logprob: -12.56431770324707
    5. '|' → logprob: -12.68931770324707
    6. '+a' → logprob: -12.68931770324707
    7. ' ' → logprob: -12.81431770324707
    8. '+C' → logprob: -13.06431770324707
    9. ' |' → logprob: -13.43931770324707
    10. '+x' → logprob: -13.68931770324707

Token 67: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.22551365196704865
    2. ' c' → logprob: -1.6005136966705322
    3. ' ' → logprob: -10.475513458251953
    4. 'a' → logprob: -10.600513458251953
    5. 'x' → logprob: -11.100513458251953
    6. '1' → logprob: -11.600513458251953
    7. ' x' → logprob: -12.350513458251953
    8. '   ' → logprob: -12.600513458251953
    9. ' a' → logprob: -12.725513458251953
    10. '(c' → logprob: -13.288013458251953

Token 68: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05377421900629997
    2. '<|end|>' → logprob: -3.178774118423462
    3. '   ' → logprob: -4.928774356842041
    4. '<|end|>' → logprob: -6.803774356842041
    5. ')' → logprob: -7.928774356842041
    6. 'return' → logprob: -8.053773880004883
    7. '    
' → logprob: -8.178773880004883
    8. '
' → logprob: -8.178773880004883
    9. ' return' → logprob: -8.428773880004883
    10. ' ' → logprob: -8.553773880004883

Token 69: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5071238875389099
    2. '   ' → logprob: -1.1321239471435547
    3. '       ' → logprob: -3.6321239471435547
    4. '<|end|>' → logprob: -4.257123947143555
    5. '    
' → logprob: -4.382123947143555
    6. ')' → logprob: -4.757123947143555
    7. '\n' → logprob: -5.007123947143555
    8. ' 
' → logprob: -6.007123947143555
    9. '' → logprob: -6.757123947143555
    10. '
' → logprob: -7.882123947143555

Token 70: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5604060888290405
    2. '
' → logprob: -0.9354060888290405
    3. '    
' → logprob: -4.43540620803833
    4. ' ' → logprob: -5.43540620803833
    5. ' for' → logprob: -5.81040620803833
    6. '<|end|>' → logprob: -5.81040620803833
    7. 'a' (adapté à ' a') → logprob: -6.18540620803833
    8. ' 
' → logprob: -6.56040620803833
    9. '  
' → logprob: -6.68540620803833
    10. '\n' → logprob: -6.93540620803833

Token 71: '.sort' (ID: 19551)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4677303433418274
    2. '[' → logprob: -1.0927302837371826
    3. '.count' → logprob: -4.342730522155762
    4. '[:]' → logprob: -4.467730522155762
    5. '<|end|>' → logprob: -5.342730522155762
    6. '.sort' → logprob: -5.967730522155762
    7. ' .' → logprob: -6.217730522155762
    8. '.index' → logprob: -6.592730522155762
    9. '.pop' → logprob: -7.967730522155762
    10. ':' → logprob: -7.967730522155762

Token 72: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011079294607043266
    2. '(' → logprob: -4.51107931137085
    3. '()
' → logprob: -10.761078834533691
    4. '()

' → logprob: -13.011078834533691
    5. '(a' → logprob: -13.761078834533691
    6. '();' → logprob: -14.011078834533691
    7. '(reverse' → logprob: -14.511078834533691
    8. '()`' → logprob: -14.511078834533691
    9. '(()' → logprob: -14.636078834533691
    10. ' ()' → logprob: -14.761078834533691

Token 73: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11864401400089264
    2. 'i' (adapté à ' i') → logprob: -3.2436439990997314
    3. ' for' → logprob: -3.3686439990997314
    4. 'if' → logprob: -4.3686442375183105
    5. '   ' → logprob: -5.1186442375183105
    6. 'a' → logprob: -5.2436442375183105
    7. 'result' → logprob: -5.8686442375183105
    8. 'l' → logprob: -5.9936442375183105
    9. '```' → logprob: -7.1186442375183105
    10. 'add' → logprob: -7.2436442375183105

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04750744625926018
    2. ' ' → logprob: -3.4225075244903564
    3. '=' → logprob: -4.422507286071777
    4. ',' → logprob: -6.922507286071777
    5. ' +=' → logprob: -7.797507286071777
    6. ' ,' → logprob: -8.922507286071777
    7. 'n' → logprob: -9.547507286071777
    8. ' =
' → logprob: -10.047507286071777
    9. '<|end|>' → logprob: -10.672507286071777
    10. '  ' → logprob: -11.172507286071777

Token 76: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03806960582733154
    2. ' ' → logprob: -3.288069725036621
    3. '1' → logprob: -11.163069725036621
    4. 'N' → logprob: -12.038069725036621
    5. '-' → logprob: -12.913069725036621
    6. ' N' → logprob: -13.038069725036621
    7. ' -' → logprob: -14.038069725036621
    8. 'len' → logprob: -14.350569725036621
    9. '[' → logprob: -15.100569725036621
    10. 'x' → logprob: -15.288069725036621

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020404639653861523
    2. ' ' → logprob: -6.752040386199951
    3. '1' → logprob: -7.627040386199951
    4. 'N' → logprob: -8.12704086303711
    5. '-' → logprob: -9.75204086303711
    6. 'len' → logprob: -11.12704086303711
    7. ' N' → logprob: -12.87704086303711
    8. 'x' → logprob: -13.00204086303711
    9. '2' → logprob: -13.25204086303711
    10. ' -' → logprob: -13.75204086303711

Token 78: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4333873689174652
    2. 'while' (adapté à ' while') → logprob: -1.9333873987197876
    3. '<|end|>' → logprob: -2.933387279510498
    4. ' while' → logprob: -3.308387279510498
    5. '
' → logprob: -3.308387279510498
    6. ' 
' → logprob: -3.808387279510498
    7. '```' → logprob: -4.433387279510498
    8. '1' → logprob: -4.808387279510498
    9. 'j' → logprob: -4.808387279510498
    10. 'n' → logprob: -5.183387279510498

Token 81: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005365494638681412
    2. 'i' → logprob: -5.255365371704102
    3. ' ' → logprob: -9.380365371704102
    4. '(i' → logprob: -10.880365371704102
    5. ' N' → logprob: -12.255365371704102
    6. ' (' → logprob: -12.255365371704102
    7. ' True' → logprob: -12.505365371704102
    8. 'N' → logprob: -12.755365371704102
    9. '  ' → logprob: -13.130365371704102
    10. '    ' → logprob: -13.255365371704102

Token 82: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.009607452899217606
    2. '<' → logprob: -4.759607315063477
    3. ' ' → logprob: -7.134607315063477
    4. ' <=' → logprob: -8.759607315063477
    5. '<len' → logprob: -10.634607315063477
    6. '<n' → logprob: -12.134607315063477
    7. '<=' → logprob: -12.509607315063477
    8. '  ' → logprob: -13.634607315063477
    9. ' <
' → logprob: -14.134607315063477
    10. '[' → logprob: -14.634607315063477

Token 83: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.22766003012657166
    2. 'N' → logprob: -1.602660059928894
    3. ' ' → logprob: -6.477660179138184
    4. ' len' → logprob: -7.477660179138184
    5. 'len' → logprob: -9.227660179138184
    6. 'n' → logprob: -11.227660179138184
    7. ' n' → logprob: -11.352660179138184
    8. '  ' → logprob: -12.352660179138184
    9. ' a' → logprob: -12.602660179138184
    10. 'a' → logprob: -13.227660179138184

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007508906535804272
    2. ' and' → logprob: -5.382508754730225
    3. ' :' → logprob: -6.507508754730225
    4. ':
' → logprob: -6.757508754730225
    5. 'and' → logprob: -9.132509231567383
    6. '   ' → logprob: -9.757509231567383
    7. ' ' → logprob: -10.632509231567383
    8. ' :
' → logprob: -11.382509231567383
    9. ':**' → logprob: -12.507509231567383
    10. '+' → logprob: -13.007509231567383

Token 85: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3960995376110077
    2. ' 
' → logprob: -2.52109956741333
    3. '       ' → logprob: -2.52109956741333
    4. '    ' → logprob: -2.77109956741333
    5. '   ' → logprob: -3.39609956741333
    6. '     
' → logprob: -4.27109956741333
    7. '<|end|>' → logprob: -4.52109956741333
    8. '
' → logprob: -4.77109956741333
    9. '    
' → logprob: -4.77109956741333
    10. ':' → logprob: -5.27109956741333

Token 86: ' x' (ID: 1215)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6212413311004639
    2. ' ' → logprob: -1.8712413311004639
    3. 'if' → logprob: -2.371241331100464
    4. '    ' → logprob: -2.621241331100464
    5. ' add' → logprob: -3.371241331100464
    6. ' 
' → logprob: -3.621241331100464
    7. 'add' → logprob: -3.621241331100464
    8. '   ' → logprob: -4.246241569519043
    9. '     
' → logprob: -4.746241569519043
    10. 'a' → logprob: -5.246241569519043

Token 87: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.5437999367713928
    2. ' -' → logprob: -1.543799877166748
    3. ' >=' → logprob: -2.793799877166748
    4. '-' → logprob: -3.168799877166748
    5. ' >' → logprob: -3.293799877166748
    6. '>' → logprob: -3.418799877166748
    7. '>=' → logprob: -4.668799877166748
    8. '=' → logprob: -5.168799877166748
    9. ' =' → logprob: -5.293799877166748
    10. '-=' → logprob: -5.668799877166748

Token 88: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0032404589001089334
    2. ' a' → logprob: -5.753240585327148
    3. '1' → logprob: -9.878240585327148
    4. '   ' → logprob: -12.128240585327148
    5. ' ' → logprob: -12.753240585327148
    6. '	a' → logprob: -13.878240585327148
    7. '2' → logprob: -14.628240585327148
    8. '    ' → logprob: -15.128240585327148
    9. '(a' → logprob: -15.128240585327148
    10. '  ' → logprob: -15.253240585327148

Token 89: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002624086628202349
    2. '[' → logprob: -8.250262260437012
    3. 'i' → logprob: -15.625262260437012
    4. '[I' → logprob: -15.625262260437012
    5. '[x' → logprob: -15.625262260437012
    6. ' [' → logprob: -16.250263214111328
    7. '[j' → logprob: -16.625263214111328
    8. '[index' → logprob: -16.875263214111328
    9. ' ' → logprob: -17.250263214111328
    10. '[u' → logprob: -17.250263214111328

Token 90: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021812662482261658
    2. ']
' → logprob: -4.021812438964844
    3. ')' → logprob: -7.021812438964844
    4. ' ]' → logprob: -7.521812438964844
    5. '])' → logprob: -7.521812438964844
    6. '[' → logprob: -7.896812438964844
    7. ']
' → logprob: -7.896812438964844
    8. ']+' → logprob: -8.896812438964844
    9. ']

' → logprob: -9.021812438964844
    10. ']*' → logprob: -9.271812438964844

Token 91: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018113775178790092
    2. 'if' → logprob: -5.518113613128662
    3. ' if' → logprob: -5.768113613128662
    4. ' 
' → logprob: -6.268113613128662
    5. ' ' → logprob: -6.393113613128662
    6. '\n' → logprob: -6.643113613128662
    7. '    
' → logprob: -6.893113613128662
    8. '
' → logprob: -6.893113613128662
    9. 'i' → logprob: -7.393113613128662
    10. '   ' → logprob: -7.393113613128662

Token 92: ' add' (ID: 1147)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9812126755714417
    2. 'add' (adapté à ' add') → logprob: -1.2312126159667969
    3. 'i' → logprob: -2.106212615966797
    4. ' if' → logprob: -2.481212615966797
    5. ' add' → logprob: -2.731212615966797
    6. '1' → logprob: -3.356212615966797
    7. ' i' → logprob: -3.731212615966797
    8. '   ' → logprob: -5.981212615966797
    9. 'result' → logprob: -7.356212615966797
    10. ' ' → logprob: -8.606212615966797

Token 93: '(' (ID: 7)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.31789857149124146
    2. '(' → logprob: -1.3178985118865967
    3. '(x' → logprob: -5.442898750305176
    4. '(i' → logprob: -8.942898750305176
    5. '((' → logprob: -9.317898750305176
    6. ' (' → logprob: -10.942898750305176
    7. '(max' → logprob: -11.442898750305176
    8. '(
' → logprob: -11.692898750305176
    9. '(+' → logprob: -11.817898750305176
    10. '()' → logprob: -12.567898750305176

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1511053740978241
    2. 'a' → logprob: -2.0261054039001465
    3. ' ' → logprob: -5.2761054039001465
    4. 'x' → logprob: -6.6511054039001465
    5. ' a' → logprob: -6.9011054039001465
    6. '10' → logprob: -8.151104927062988
    7. '(a' → logprob: -9.026104927062988
    8. '   ' → logprob: -9.151104927062988
    9. '100' → logprob: -9.276104927062988
    10. 'i' → logprob: -9.776104927062988

Token 95: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03893369436264038
    2. ')' → logprob: -3.288933753967285
    3. ')
' → logprob: -7.038933753967285
    4. ')

' → logprob: -12.038933753967285
    5. '       ' → logprob: -12.413933753967285
    6. ' )
' → logprob: -12.913933753967285
    7. '   ' → logprob: -13.663933753967285
    8. ')`
' → logprob: -14.538933753967285
    9. ' )' → logprob: -16.03893280029297
    10. '
' → logprob: -16.53893280029297

Token 96: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40150967240333557
    2. '       ' → logprob: -1.1515096426010132
    3. '   ' → logprob: -5.026509761810303
    4. ' ' → logprob: -6.401509761810303
    5. '        
' → logprob: -6.401509761810303
    6. '<|end|>' → logprob: -6.776509761810303
    7. ' if' → logprob: -7.026509761810303
    8. '  
' → logprob: -7.151509761810303
    9. ' 
' → logprob: -7.901509761810303
    10. '    
' → logprob: -7.901509761810303

Token 97: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038083940744400024
    2. ' if' → logprob: -4.038084030151367
    3. '   ' → logprob: -4.163084030151367
    4. 'if' (adapté à ' if') → logprob: -5.663084030151367
    5. ' ' → logprob: -7.913084030151367
    6. ' i' → logprob: -9.163084030151367
    7. '```' → logprob: -9.913084030151367
    8. 'i' → logprob: -10.038084030151367
    9. '        
' → logprob: -10.163084030151367
    10. '
' → logprob: -10.288084030151367

Token 98: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07065825164318085
    2. 'x' → logprob: -2.6956582069396973
    3. ' ' → logprob: -7.320658206939697
    4. '  ' → logprob: -10.820658683776855
    5. ' i' → logprob: -11.320658683776855
    6. ' a' → logprob: -11.820658683776855
    7. '   ' → logprob: -11.945658683776855
    8. ' ' → logprob: -12.695658683776855
    9. '	x' → logprob: -13.070658683776855
    10. 'i' → logprob: -13.633158683776855

Token 99: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.25211650133132935
    2. '<' → logprob: -1.5021164417266846
    3. ' >=' → logprob: -9.877116203308105
    4. ' <=' → logprob: -10.127116203308105
    5. ' ' → logprob: -10.252116203308105
    6. '>=' → logprob: -10.627116203308105
    7. '<=' → logprob: -11.002116203308105
    8. ' ==' → logprob: -13.127116203308105
    9. '<m' → logprob: -13.314616203308105
    10. '<n' → logprob: -13.689616203308105

Token 100: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16024799644947052
    2. ' ' → logprob: -1.910248041152954
    3. 'a' → logprob: -11.285247802734375
    4. '   ' → logprob: -12.535247802734375
    5. '  ' → logprob: -13.285247802734375
    6. ' a' → logprob: -13.347747802734375
    7. '1' → logprob: -14.160247802734375
    8. ' ' → logprob: -14.285247802734375
    9. '    ' → logprob: -14.785247802734375
    10. '00' → logprob: -15.472747802734375

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016179943457245827
    2. ' ' → logprob: -4.141180038452148
    3. 'a' → logprob: -9.016180038452148
    4. '   ' → logprob: -12.016180038452148
    5. '  ' → logprob: -12.516180038452148
    6. '-' → logprob: -13.078680038452148
    7. '1' → logprob: -13.391180038452148
    8. '100' → logprob: -13.766180038452148
    9. '000' → logprob: -14.016180038452148
    10. '    ' → logprob: -14.141180038452148

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00697276322171092
    2. ':
' → logprob: -5.631972789764404
    3. '           ' → logprob: -6.006972789764404
    4. '       ' → logprob: -7.506972789764404
    5. ' or' → logprob: -8.131972312927246
    6. ' :' → logprob: -10.381972312927246
    7. ' and' → logprob: -11.381972312927246
    8. '   ' → logprob: -12.256972312927246
    9. '.' → logprob: -12.756972312927246
    10. ',' → logprob: -13.131972312927246

Token 103: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021664367523044348
    2. '       ' → logprob: -6.252166271209717
    3. 'break' → logprob: -9.377166748046875
    4. '   ' → logprob: -10.127166748046875
    5. ' break' → logprob: -10.752166748046875
    6. ' ' → logprob: -10.752166748046875
    7. '```' → logprob: -11.127166748046875
    8. ':' → logprob: -11.627166748046875
    9. '	break' → logprob: -12.127166748046875
    10. '<|end|>' → logprob: -12.377166748046875

Token 104: ' result' (ID: 1534)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0007669925689697
    2. ' break' → logprob: -1.0007669925689697
    3. 'break' → logprob: -1.3757669925689697
    4. '       ' → logprob: -4.750766754150391
    5. 'return' → logprob: -6.250766754150391
    6. ' return' → logprob: -7.125766754150391
    7. '   ' → logprob: -8.25076675415039
    8. '	break' → logprob: -8.50076675415039
    9. 'print' → logprob: -9.62576675415039
    10. ' ' → logprob: -9.62576675415039

Token 105: ' -=' (ID: 12583)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9880337119102478
    2. ' -=' → logprob: -0.9880337119102478
    3. '-=' → logprob: -1.6130337715148926
    4. '=' → logprob: -3.4880337715148926
    5. ' -' → logprob: -4.738033771514893
    6. ' =' → logprob: -4.738033771514893
    7. '   ' → logprob: -5.988033771514893
    8. ' ' → logprob: -6.113033771514893
    9. 'break' → logprob: -6.863033771514893
    10. 'print' → logprob: -7.363033771514893

Token 106: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002191779436543584
    2. ' ' → logprob: -6.127191543579102
    3. '0' → logprob: -12.627191543579102
    4. '2' → logprob: -13.752191543579102
    5. 'a' → logprob: -13.877191543579102
    6. '   ' → logprob: -14.377191543579102
    7. 'add' → logprob: -15.564691543579102
    8. '       ' → logprob: -16.0021915435791
    9. '  ' → logprob: -16.0646915435791
    10. '3' → logprob: -17.0021915435791

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024739265791140497
    2. ' ' → logprob: -8.37524700164795
    3. 'a' → logprob: -11.87524700164795
    4. '0' → logprob: -12.62524700164795
    5. 'add' → logprob: -12.75024700164795
    6. '2' → logprob: -13.12524700164795
    7. '   ' → logprob: -14.37524700164795
    8. '3' → logprob: -16.375247955322266
    9. '       ' → logprob: -16.437747955322266
    10. '  ' → logprob: -16.500247955322266

Token 108: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.457669562427327e-05
    2. '       ' → logprob: -9.75007438659668
    3. 'break' → logprob: -11.62507438659668
    4. '   ' → logprob: -12.87507438659668
    5. ' break' → logprob: -13.12507438659668
    6. '               ' → logprob: -14.12507438659668
    7. '          ' → logprob: -15.00007438659668
    8. '
' → logprob: -15.25007438659668
    9. '            
' → logprob: -15.25007438659668
    10. '```' → logprob: -15.75007438659668

Token 109: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.028536492725834e-05
    2. '       ' → logprob: -10.000070571899414
    3. 'break' → logprob: -11.125070571899414
    4. ' break' → logprob: -12.375070571899414
    5. '   ' → logprob: -12.750070571899414
    6. '
' → logprob: -14.000070571899414
    7. '               ' → logprob: -14.625070571899414
    8. '            
' → logprob: -14.625070571899414
    9. ' ' → logprob: -15.000070571899414
    10. '        
' → logprob: -15.125070571899414

Token 110: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08734382688999176
    2. 'break' (adapté à ' break') → logprob: -2.58734393119812
    3. ' break' → logprob: -4.837343692779541
    4. 'return' → logprob: -8.0873441696167
    5. '       ' → logprob: -9.2123441696167
    6. 'print' → logprob: -10.0873441696167
    7. '	break' → logprob: -11.4623441696167
    8. '   ' → logprob: -11.8373441696167
    9. ' return' → logprob: -12.2123441696167
    10. '
' → logprob: -12.2123441696167

Token 111: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11382826417684555
    2. '
' → logprob: -2.238828182220459
    3. '   ' → logprob: -7.238828182220459
    4. '<|end|>' → logprob: -8.988828659057617
    5. '        
' → logprob: -9.238828659057617
    6. '
' → logprob: -11.363828659057617
    7. '<|end|>' → logprob: -11.863828659057617
    8. 'i' → logprob: -12.238828659057617
    9. '    
' → logprob: -12.238828659057617
    10. '```' → logprob: -12.238828659057617

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016356686130166054
    2. '   ' → logprob: -4.141356468200684
    3. '
' → logprob: -8.141356468200684
    4. '<|end|>' → logprob: -12.141356468200684
    5. '        
' → logprob: -12.266356468200684
    6. '    
' → logprob: -12.391356468200684
    7. 'i' → logprob: -12.516356468200684
    8. '    ' → logprob: -13.391356468200684
    9. '      ' → logprob: -13.391356468200684
    10. ' i' → logprob: -13.641356468200684

Token 113: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3163568675518036
    2. '       ' → logprob: -1.316356897354126
    3. 'i' (adapté à ' i') → logprob: -5.941356658935547
    4. '
' → logprob: -8.191356658935547
    5. ' i' → logprob: -9.191356658935547
    6. '    
' → logprob: -10.316356658935547
    7. '    ' → logprob: -11.191356658935547
    8. ' ' → logprob: -11.566356658935547
    9. '  ' → logprob: -11.816356658935547
    10. '        
' → logprob: -12.066356658935547

Token 114: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3533994257450104
    2. '+=' → logprob: -1.603399395942688
    3. ' +=' → logprob: -2.3533995151519775
    4. ' +' → logprob: -6.603399276733398
    5. '=' → logprob: -9.478399276733398
    6. '++' → logprob: -12.228399276733398
    7. ' =' → logprob: -13.103399276733398
    8. '+='' → logprob: -13.478399276733398
    9. ' ' → logprob: -13.728399276733398
    10. '+="' → logprob: -13.978399276733398

Token 115: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.875040054321289
    4. '  ' → logprob: -19.25004005432129
    5. '```' → logprob: -19.25004005432129
    6. '１' → logprob: -19.87504005432129
    7. '2' → logprob: -20.62504005432129
    8. '       ' → logprob: -20.75004005432129
    9. '    ' → logprob: -20.87504005432129
    10. '
' → logprob: -21.12504005432129

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.62500762939453
    4. '```' → logprob: -18.37500762939453
    5. '  ' → logprob: -18.75000762939453
    6. '１' → logprob: -18.81250762939453
    7. '2' → logprob: -18.87500762939453
    8. '<|end|>' → logprob: -19.68750762939453
    9. '۱' → logprob: -19.87500762939453
    10. '       ' → logprob: -20.31250762939453

Token 117: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1652754545211792
    2. '<|end|>' → logprob: -2.4152755737304688
    3. '
' → logprob: -3.0402755737304688
    4. ' ' → logprob: -5.415275573730469
    5. '    
' → logprob: -5.915275573730469
    6. '\n' → logprob: -6.165275573730469
    7. '  
' → logprob: -7.040275573730469
    8. ' 
' → logprob: -7.165275573730469
    9. '  ' → logprob: -7.165275573730469
    10. '    ' → logprob: -7.290275573730469

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00789584405720234
    2. '<|end|>' → logprob: -5.2578959465026855
    3. ' ' → logprob: -7.3828959465026855
    4. '    
' → logprob: -7.5078959465026855
    5. '    ' → logprob: -8.007895469665527
    6. '
' → logprob: -8.132895469665527
    7. '\n' → logprob: -9.007895469665527
    8. ')' → logprob: -9.007895469665527
    9. ' 
' → logprob: -9.132895469665527
    10. '  ' → logprob: -9.257895469665527

Token 119: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021487422287464142
    2. 'return' → logprob: -4.146487236022949
    3. 'print' (adapté à ' print') → logprob: -5.521487236022949
    4. '<|end|>' → logprob: -8.02148723602295
    5. ' return' → logprob: -8.27148723602295
    6. '    ' → logprob: -8.39648723602295
    7. ' ' → logprob: -8.64648723602295
    8. '  ' → logprob: -9.02148723602295
    9. '    
' → logprob: -9.64648723602295
    10. '	return' → logprob: -9.77148723602295

Token 120: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.16028627753257751
    2. '(' → logprob: -1.9102863073349
    3. '()' → logprob: -10.035285949707031
    4. 'result' → logprob: -11.285285949707031
    5. '(
' → logprob: -13.035285949707031
    6. '(results' → logprob: -13.785285949707031
    7. ' (' → logprob: -14.160285949707031
    8. '('' → logprob: -14.785285949707031
    9. '(res' → logprob: -15.035285949707031
    10. '((' → logprob: -15.285285949707031

Token 121: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -16.125
    4. ')`' → logprob: -18.0
    5. '   ' → logprob: -18.75
    6. '(' → logprob: -19.125
    7. '))' → logprob: -19.25
    8. '')' → logprob: -19.5
    9. '()' → logprob: -19.75
    10. ')}' → logprob: -20.125

Token 122: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.46520566940307617
    2. ' x' → logprob: -1.3402056694030762
    3. 'result' → logprob: -2.465205669403076
    4. ' result' → logprob: -3.840205669403076
    5. ' i' → logprob: -6.465205669403076
    6. 'i' → logprob: -6.465205669403076
    7. ' ' → logprob: -8.590206146240234
    8. '0' → logprob: -8.840206146240234
    9. 'N' → logprob: -9.465206146240234
    10. ' N' → logprob: -9.715206146240234

Token 123: ' <=' (ID: 5017)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.023702295497059822
    2. ' >=' → logprob: -3.898702383041382
    3. '>' → logprob: -5.773702144622803
    4. ' >' → logprob: -10.773702621459961
    5. '==' → logprob: -11.648702621459961
    6. '<' → logprob: -12.148702621459961
    7. '!=' → logprob: -12.273702621459961
    8. ' ' → logprob: -13.023702621459961
    9. ')' → logprob: -13.273702621459961
    10. '<=' → logprob: -13.898702621459961

Token 124: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4740898013114929
    2. ' ' → logprob: -0.9740898013114929
    3. '   ' → logprob: -12.599089622497559
    4. '  ' → logprob: -13.224089622497559
    5. '
' → logprob: -14.036589622497559
    6. '1' → logprob: -14.349089622497559
    7. '    ' → logprob: -14.411589622497559
    8. '100' → logprob: -14.411589622497559
    9. '-' → logprob: -14.599089622497559
    10. ' -' → logprob: -14.849089622497559

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010462664067745209
    2. ' ' → logprob: -6.876046180725098
    3. '-' → logprob: -12.751046180725098
    4. '100' → logprob: -13.376046180725098
    5. '1' → logprob: -13.501046180725098
    6. '
' → logprob: -13.626046180725098
    7. '   ' → logprob: -13.626046180725098
    8. '5' → logprob: -14.751046180725098
    9. '

' → logprob: -14.876046180725098
    10. '4' → logprob: -14.938546180725098

Token 126: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3132767081260681
    2. 'else' → logprob: -1.313276767730713
    3. ')' → logprob: -11.563276290893555
    4. '   ' → logprob: -13.063276290893555
    5. '	else' → logprob: -13.563276290893555
    6. ' )' → logprob: -14.063276290893555
    7. ' ' → logprob: -14.188276290893555
    8. '    ' → logprob: -15.313276290893555
    9. '_else' → logprob: -16.813276290893555
    10. ',' → logprob: -16.938276290893555

Token 127: ' result' (ID: 1534)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7289667129516602
    2. 'result' → logprob: -0.7289667129516602
    3. ' ' → logprob: -4.35396671295166
    4. '-' → logprob: -4.35396671295166
    5. ' result' → logprob: -4.85396671295166
    6. ' -' → logprob: -8.10396671295166
    7. '"' → logprob: -8.10396671295166
    8. 'i' → logprob: -8.22896671295166
    9. ' i' → logprob: -8.85396671295166
    10. '   ' → logprob: -9.10396671295166

Token 128: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007678911089897156
    2. ' )' → logprob: -4.882678985595703
    3. '+' → logprob: -10.257678985595703
    4. '-' → logprob: -11.132678985595703
    5. '())' → logprob: -11.507678985595703
    6. '))' → logprob: -12.507678985595703
    7. '   ' → logprob: -12.882678985595703
    8. '-)' → logprob: -13.757678985595703
    9. '+)' → logprob: -14.007678985595703
    10. ' +' → logprob: -14.132678985595703

Token 129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02055356837809086
    2. ' ' → logprob: -3.8955535888671875
    3. '0' → logprob: -12.020553588867188
    4. '   ' → logprob: -12.270553588867188
    5. '2' → logprob: -14.270553588867188
    6. '  ' → logprob: -15.520553588867188
    7. '    ' → logprob: -16.583053588867188
    8. ' one' → logprob: -17.208053588867188
    9. '(' → logprob: -17.458053588867188
    10. ' ' → logprob: -17.770553588867188

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009148012613877654
    2. ' ' → logprob: -7.000914573669434
    3. '0' → logprob: -13.250914573669434
    4. '2' → logprob: -14.000914573669434
    5. '   ' → logprob: -14.500914573669434
    6. '  ' → logprob: -16.50091552734375
    7. '(' → logprob: -16.93841552734375
    8. 'a' → logprob: -17.06341552734375
    9. 'i' → logprob: -17.68841552734375
    10. '100' → logprob: -18.37591552734375

Token 131: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -13.625001907348633
    3. ')
' → logprob: -14.875001907348633
    4. ')`' → logprob: -16.750001907348633
    5. '   ' → logprob: -16.875001907348633
    6. '))' → logprob: -17.625001907348633
    7. '`)' → logprob: -18.750001907348633
    8. ')}' → logprob: -19.000001907348633
    9. ')#' → logprob: -19.125001907348633
    10. '),' → logprob: -19.750001907348633

Token 132: 'calc' (ID: 49633)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12212356179952621
    2. '#' → logprob: -3.2471234798431396
    3. '<|end|>' → logprob: -3.2471234798431396
    4. '(' → logprob: -3.9971234798431396
    5. '
' → logprob: -4.872123718261719
    6. ':' → logprob: -5.747123718261719
    7. '\n' → logprob: -6.122123718261719
    8. '\' → logprob: -6.372123718261719
    9. ' ' → logprob: -7.122123718261719
    10. '```' → logprob: -7.122123718261719

Token 133: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018165862187743187
    2. '(' → logprob: -4.0181660652160645
    3. '()
' → logprob: -12.768165588378906
    4. '();' → logprob: -12.893165588378906
    5. '()`' → logprob: -13.268165588378906
    6. '().' → logprob: -13.643165588378906
    7. ' ()' → logprob: -13.893165588378906
    8. '(
' → logprob: -13.893165588378906
    9. '()

' → logprob: -14.143165588378906
    10. '()<' → logprob: -14.393165588378906


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 131
Tokens correctement prédits (1ère position, stricte): 55
Tokens correctement prédits (1ère position, avec adaptation): 57
Tokens correctement prédits (top 10): 107
Précision stricte (1ère position): 41.98%
Précision adaptée (1ère position): 43.51%
Précision (top 10): 81.68%
================================================================================
