================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# On est des originaux ici !
try:
    n = eval(input())
except:
    raise SystemExit("Entrée non valide.")

A = [int(x)-1 for x in input().split()]

P = [None for _ in range(n)]
for ix, val in enumerate(A):
    P[val] = ix

R = [[n]*2 for _ in [0]*n]

from collections import deque
pq = []
import heapq as hq

for i in range(n):
    snap = []
    while pq and pq[0][0] < A[i]:
        v, j = hq.heappop(pq)
        R[v][j] = i
        if not j:
            snap += [(v, j+1)]
    hq.heappush(pq, (A[i], 0))
    pq += snap

L = [[-1 if not j else -1 for j in range(2)] for _ in range(n)]

pq = []
hq.heapify(pq)
for i in range(n-1, -1, -1):
    eureka = []
    while pq and pq[0][0] < A[i]:
        v, j = hq.heappop(pq)
        L[v][j] = i
        if not j:
            eureka += [(v, j+1)]
    hq.heappush(pq, (A[i], 0))
    for el in eureka:
        hq.heappush(pq, el)

total = 0
for i in range(n-1):
    meat = P[i]
    l1, l2 = L[i]
    r1, r2 = R[i]
    mul = (l1-l2)*(r1-meat)+(r2-r1)*(meat-l1)
    total += mul*(i+1)
print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' On' (ID: 2160)
  → Token d'amorce (pas de prédiction)

Token 2: ' est' (ID: 893)
  → Token d'amorce (pas de prédiction)

Token 3: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03878440707921982
    2. 'l' → logprob: -4.538784503936768
    3. ' #' → logprob: -5.288784503936768
    4. '```' → logprob: -5.663784503936768
    5. 'dans' → logprob: -5.788784503936768
    6. ' ' → logprob: -5.913784503936768
    7. '#' → logprob: -6.288784503936768
    8. ' dans' → logprob: -6.788784503936768
    9. '_' → logprob: -6.788784503936768
    10. '=' → logprob: -7.038784503936768

Token 4: ' origin' (ID: 12839)
  Prédit: ' développe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' développe' → logprob: -0.8444608449935913
    2. '#' → logprob: -1.5944608449935913
    3. ' dev' → logprob: -2.594460964202881
    4. 'dé' → logprob: -3.094460964202881
    5. 'dev' → logprob: -3.219460964202881
    6. 'd' → logprob: -3.469460964202881
    7. ' humains' → logprob: -3.469460964202881
    8. '```' → logprob: -3.969460964202881
    9. ' #' → logprob: -4.219460964202881
    10. ' d' → logprob: -4.469460964202881

Token 5: 'aux' (ID: 5454)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17360763251781464
    2. 'al' → logprob: -2.423607587814331
    3. 'aux' → logprob: -3.298607587814331
    4. '```' → logprob: -4.42360782623291
    5. 'aires' → logprob: -5.17360782623291
    6. ' a' → logprob: -5.42360782623291
    7. 'es' → logprob: -6.42360782623291
    8. '#' → logprob: -6.79860782623291
    9. '\a' → logprob: -6.92360782623291
    10. '\' → logprob: -6.92360782623291

Token 6: ' ici' (ID: 27994)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6038452386856079
    2. '!' → logprob: -1.353845238685608
    3. '\' → logprob: -2.6038451194763184
    4. '#' → logprob: -2.6038451194763184
    5. ':' → logprob: -4.853845119476318
    6. '.' → logprob: -4.853845119476318
    7. ' ' → logprob: -4.978845119476318
    8. '```' → logprob: -5.103845119476318
    9. '\u' → logprob: -5.728845119476318
    10. ',' → logprob: -5.728845119476318

Token 7: ' !
' (ID: 27498)
  Prédit: '!'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!' → logprob: -1.1361689567565918
    2. '\' → logprob: -1.1361689567565918
    3. '\n' → logprob: -1.5111689567565918
    4. '#' → logprob: -3.011168956756592
    5. '.' → logprob: -3.136168956756592
    6. ',' → logprob: -4.511168956756592
    7. ':' → logprob: -4.636168956756592
    8. '```' → logprob: -4.761168956756592
    9. '
' → logprob: -5.886168956756592
    10. '_' → logprob: -6.136168956756592

Token 8: 'try' (ID: 1806)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.034180156886577606
    2. '\n' → logprob: -3.534180164337158
    3. '\' → logprob: -6.534180164337158
    4. '```' → logprob: -7.284180164337158
    5. 'print' → logprob: -7.409180164337158
    6. ' ' → logprob: -7.534180164337158
    7. ' #' → logprob: -8.0341796875
    8. '/' → logprob: -9.1591796875
    9. '#print' → logprob: -9.5341796875
    10. '!' → logprob: -9.6591796875

Token 9: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04863971471786499
    2. ' :' → logprob: -3.0486397743225098
    3. ':
' → logprob: -10.673639297485352
    4. ' ' → logprob: -11.423639297485352
    5. ' :
' → logprob: -11.923639297485352
    6. '{' → logprob: -12.673639297485352
    7. '[' → logprob: -13.298639297485352
    8. '   ' → logprob: -13.798639297485352
    9. ' except' → logprob: -14.298639297485352
    10. ':**' → logprob: -14.298639297485352

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.062116589397192
    2. ' :' → logprob: -2.8121166229248047
    3. ':
' → logprob: -9.437116622924805
    4. ' :
' → logprob: -10.562116622924805
    5. ' ' → logprob: -10.937116622924805
    6. '   ' → logprob: -11.062116622924805
    7. '    ' → logprob: -13.687116622924805
    8. ' except' → logprob: -13.812116622924805
    9. ' ' → logprob: -13.812116622924805
    10. ' (' → logprob: -14.312116622924805

Token 11: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10675927251577377
    2. ' :' → logprob: -2.8567593097686768
    3. '   ' → logprob: -3.6067593097686768
    4. ' ' → logprob: -4.981759071350098
    5. 'print' → logprob: -5.731759071350098
    6. '    ' → logprob: -6.731759071350098
    7. ':
' → logprob: -6.856759071350098
    8. 'except' → logprob: -7.231759071350098
    9. 'open' → logprob: -7.856759071350098
    10. '  ' → logprob: -7.981759071350098

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2396361827850342
    2. ' ' → logprob: -1.6146361827850342
    3. 'umber' → logprob: -1.6146361827850342
    4. '=' → logprob: -1.7396361827850342
    5. '   ' → logprob: -3.614636182785034
    6. 'um' → logprob: -4.114636421203613
    7. 'u' → logprob: -4.114636421203613
    8. 'o' → logprob: -4.614636421203613
    9. '.' → logprob: -4.614636421203613
    10. 'e' → logprob: -4.739636421203613

Token 13: ' eval' (ID: 29383)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.03416275978088379
    2. 'int' → logprob: -3.409162759780884
    3. ' ' → logprob: -8.159162521362305
    4. '   ' → logprob: -8.909162521362305
    5. ' input' → logprob: -10.659162521362305
    6. '1' → logprob: -11.159162521362305
    7. '10' → logprob: -11.409162521362305
    8. '  ' → logprob: -11.784162521362305
    9. '=int' → logprob: -12.034162521362305
    10. ' eval' → logprob: -12.159162521362305

Token 14: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021206190809607506
    2. '(input' → logprob: -3.8962061405181885
    3. '('' → logprob: -7.896206378936768
    4. '("("' → logprob: -8.52120590209961
    5. '(
' → logprob: -10.02120590209961
    6. 'input' → logprob: -11.52120590209961
    7. ''' → logprob: -11.77120590209961
    8. ' (' → logprob: -12.39620590209961
    9. '(eval' → logprob: -12.52120590209961
    10. '(

' → logprob: -13.02120590209961

Token 15: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007047702558338642
    2. '("("' → logprob: -5.507047653198242
    3. '('' → logprob: -6.007047653198242
    4. '(
' → logprob: -8.257047653198242
    5. ')' → logprob: -9.507047653198242
    6. ''' → logprob: -10.507047653198242
    7. ' ' → logprob: -10.632047653198242
    8. '(

' → logprob: -10.632047653198242
    9. '(""))' → logprob: -10.882047653198242
    10. '()' → logprob: -11.007047653198242

Token 16: 'except' (ID: 25035)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012439132668077946
    2. '(' → logprob: -5.512439250946045
    3. '#' → logprob: -6.762439250946045
    4. '\' → logprob: -6.762439250946045
    5. '+' → logprob: -6.762439250946045
    6. ' ' → logprob: -7.137439250946045
    7. '*' → logprob: -7.512439250946045
    8. '\n' → logprob: -7.512439250946045
    9. ')
' → logprob: -7.637439250946045
    10. '```' → logprob: -7.887439250946045

Token 17: ':
' (ID: 734)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3770621716976166
    2. ' Exception' → logprob: -1.377062201499939
    3. ' Name' → logprob: -3.6270620822906494
    4. ' ' → logprob: -4.3770623207092285
    5. ' EOF' → logprob: -4.5020623207092285
    6. '  ' → logprob: -5.6270623207092285
    7. ' (' → logprob: -6.1270623207092285
    8. ':' → logprob: -6.6270623207092285
    9. ' :' → logprob: -6.7520623207092285
    10. ' Value' → logprob: -7.1270623207092285

Token 18: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.2286224365234375
    2. '   ' → logprob: -2.1036224365234375
    3. ' ' → logprob: -2.9786224365234375
    4. ' pass' → logprob: -3.7286224365234375
    5. '    
' → logprob: -6.8536224365234375
    6. 'pass' → logprob: -6.8536224365234375
    7. ' 
' → logprob: -7.1036224365234375
    8. ':' → logprob: -7.3536224365234375
    9. '  ' → logprob: -7.6036224365234375
    10. ' ' → logprob: -7.7286224365234375

Token 19: ' raise' (ID: 9338)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.16659137606620789
    2. '    ' → logprob: -2.4165914058685303
    3. '   ' → logprob: -3.6665914058685303
    4. ' ' → logprob: -4.041591167449951
    5. ' n' → logprob: -4.666591167449951
    6. 'pass' → logprob: -5.416591167449951
    7. '0' → logprob: -6.166591167449951
    8. ' None' → logprob: -6.541591167449951
    9. ' print' → logprob: -7.166591167449951
    10. 'n' → logprob: -7.291591167449951

Token 20: ' System' (ID: 1219)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 21: 'Exit' (ID: 23779)
  Prédit: 'Exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Exit' → logprob: -0.006723891478031874
    2. 'Error' → logprob: -5.006723880767822
    3. 'Ex' → logprob: -12.25672435760498
    4. 'E' → logprob: -12.63172435760498
    5. 'Err' → logprob: -16.131723403930664
    6. 'Er' → logprob: -16.381723403930664
    7. 'exit' → logprob: -16.381723403930664
    8. '.exit' → logprob: -16.506723403930664
    9. 'Exception' → logprob: -16.631723403930664
    10. '.Exit' → logprob: -17.256723403930664

Token 22: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6435837745666504
    2. '
' → logprob: -2.3935837745666504
    3. ')' → logprob: -2.6435837745666504
    4. '<|end|>' → logprob: -2.7685837745666504
    5. '()' → logprob: -3.1435837745666504
    6. '.' → logprob: -3.1435837745666504
    7. ':' → logprob: -3.2685837745666504
    8. '#' → logprob: -3.5185837745666504
    9. '(
' → logprob: -3.7685837745666504
    10. '\n' → logprob: -4.14358377456665

Token 23: 'Entr' (ID: 46869)
  Prédit: 'invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'invalid' → logprob: -0.78498375415802
    2. 'Invalid' → logprob: -1.90998375415802
    3. ' invalid' → logprob: -2.6599836349487305
    4. 'input' → logprob: -2.7849836349487305
    5. 'Input' → logprob: -3.7849836349487305
    6. '"' → logprob: -3.9099836349487305
    7. 'Erreur' → logprob: -3.9099836349487305
    8. '")' → logprob: -4.0349836349487305
    9. ' input' → logprob: -4.0349836349487305
    10. ''' → logprob: -4.0349836349487305

Token 24: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0005743592046201229
    2. 'é' → logprob: -8.250574111938477
    3. 'er' → logprob: -8.500574111938477
    4. 'ee' → logprob: -9.375574111938477
    5. 'ées' → logprob: -11.125574111938477
    6. 'rée' → logprob: -13.000574111938477
    7. '�' → logprob: -13.625574111938477
    8. 'ant' → logprob: -13.875574111938477
    9. '\xe' → logprob: -13.875574111938477
    10. 'ez' → logprob: -14.250574111938477

Token 25: ' non' (ID: 2893)
  Prédit: ' inval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inval' → logprob: -0.4865707457065582
    2. ' non' → logprob: -1.3615707159042358
    3. ' incorrect' → logprob: -2.1115708351135254
    4. ' invalid' → logprob: -5.986570835113525
    5. ' vide' → logprob: -6.486570835113525
    6. 'non' → logprob: -6.611570835113525
    7. 'incorrect' → logprob: -7.361570835113525
    8. ' ' → logprob: -7.361570835113525
    9. ' invál' → logprob: -8.611570358276367
    10. 'Incorrect' → logprob: -8.986570358276367

Token 26: ' valide' (ID: 137323)
  Prédit: ' valide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valide' → logprob: -0.4234313368797302
    2. 'val' → logprob: -1.173431396484375
    3. ' valable' → logprob: -4.048431396484375
    4. 'valid' → logprob: -4.923431396484375
    5. ' numérique' → logprob: -6.173431396484375
    6. ' conforme' → logprob: -6.798431396484375
    7. 'int' → logprob: -6.798431396484375
    8. ' ' → logprob: -6.798431396484375
    9. 'ent' → logprob: -6.923431396484375
    10. '   ' → logprob: -7.548431396484375

Token 27: '.")

' (ID: 79197)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0033793572802096605
    2. ')' → logprob: -6.0033793449401855
    3. '"' → logprob: -8.003379821777344
    4. ')")' → logprob: -8.128379821777344
    5. '!")' → logprob: -8.878379821777344
    6. '')' → logprob: -10.503379821777344
    7. '.")' → logprob: -10.753379821777344
    8. ':' → logprob: -11.003379821777344
    9. '")
' → logprob: -11.003379821777344
    10. ' ")' → logprob: -11.253379821777344

Token 28: 'A' (ID: 32)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6855504512786865
    2. ')' → logprob: -1.9355504512786865
    3. '#' → logprob: -2.1855504512786865
    4. '<|end|>' → logprob: -2.8105504512786865
    5. '
' → logprob: -3.5605504512786865
    6. '(' → logprob: -3.6855504512786865
    7. '.' → logprob: -3.8105504512786865
    8. ' ' → logprob: -4.185550689697266
    9. '\n' → logprob: -4.435550689697266
    10. '[' → logprob: -4.810550689697266

Token 29: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4928522109985352
    2. '=' → logprob: -1.8678522109985352
    3. 'ns' → logprob: -2.242852210998535
    4. 'rray' → logprob: -2.367852210998535
    5. ' =' → logprob: -2.492852210998535
    6. 'bs' → logprob: -3.117852210998535
    7. 'if' → logprob: -3.492852210998535
    8. 'ss' → logprob: -3.617852210998535
    9. 'b' → logprob: -3.617852210998535
    10. '+' → logprob: -3.742852210998535

Token 30: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6470685601234436
    2. ' [' → logprob: -1.3970685005187988
    3. '[]' → logprob: -1.6470685005187988
    4. '[' → logprob: -3.772068500518799
    5. '[n' → logprob: -4.772068500518799
    6. 'n' → logprob: -6.272068500518799
    7. '[int' → logprob: -6.772068500518799
    8. ' n' → logprob: -7.147068500518799
    9. 'eval' → logprob: -8.647068977355957
    10. 'list' → logprob: -8.772068977355957

Token 31: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17081318795681
    2. 'n' → logprob: -1.9208132028579712
    3. ' n' → logprob: -5.545813083648682
    4. 'int' → logprob: -5.670813083648682
    5. ']' → logprob: -6.545813083648682
    6. ' ' → logprob: -6.920813083648682
    7. ' ]' → logprob: -8.42081356048584
    8. 'i' → logprob: -9.54581356048584
    9. ')' → logprob: -9.67081356048584
    10. '1' → logprob: -9.67081356048584

Token 32: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20622190833091736
    2. '(x' → logprob: -2.33122181892395
    3. '(input' → logprob: -2.83122181892395
    4. '(i' → logprob: -3.58122181892395
    5. '(n' → logprob: -6.331222057342529
    6. '(
' → logprob: -8.831221580505371
    7. ']' → logprob: -9.206221580505371
    8. '(eval' → logprob: -9.456221580505371
    9. '(s' → logprob: -9.581221580505371
    10. '(a' → logprob: -9.706221580505371

Token 33: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.351697033504024e-05
    2. '(input' → logprob: -10.625083923339844
    3. '(' → logprob: -11.000083923339844
    4. ' )' → logprob: -11.375083923339844
    5. '(x' → logprob: -11.500083923339844
    6. 'for' → logprob: -12.375083923339844
    7. '')' → logprob: -12.750083923339844
    8. 'input' → logprob: -12.875083923339844
    9. ' for' → logprob: -13.750083923339844
    10. '))' → logprob: -13.750083923339844

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04010985419154167
    2. ' ' → logprob: -3.290109872817993
    3. 'n' → logprob: -7.290109634399414
    4. '2' → logprob: -7.540109634399414
    5. ' n' → logprob: -7.540109634399414
    6. '3' → logprob: -9.165109634399414
    7. '0' → logprob: -10.040109634399414
    8. '4' → logprob: -10.415109634399414
    9. '10' → logprob: -10.665109634399414
    10. '5' → logprob: -10.665109634399414

Token 35: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.029955044388771057
    2. 'for' → logprob: -3.5299551486968994
    3. ')' → logprob: -8.90495491027832
    4. ' ' → logprob: -10.15495491027832
    5. ']' → logprob: -11.40495491027832
    6. '	for' → logprob: -11.40495491027832
    7. '<|end|>' → logprob: -12.77995491027832
    8. ' ]' → logprob: -13.77995491027832
    9. ',' → logprob: -14.02995491027832
    10. ' ' → logprob: -14.27995491027832

Token 36: ' x' (ID: 1215)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.13319218158721924
    2. ' input' → logprob: -2.2581920623779297
    3. ' x' → logprob: -4.25819206237793
    4. 'range' → logprob: -5.25819206237793
    5. 'input' → logprob: -7.75819206237793
    6. ' ' → logprob: -8.88319206237793
    7. 'x' → logprob: -9.13319206237793
    8. ' xrange' → logprob: -9.38319206237793
    9. ' _' → logprob: -10.63319206237793
    10. '_' → logprob: -11.75819206237793

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012608423829078674
    2. 'in' → logprob: -4.387608528137207
    3. 's' → logprob: -10.387608528137207
    4. 'input' → logprob: -10.637608528137207
    5. ' ' → logprob: -11.637608528137207
    6. 'n' → logprob: -12.262608528137207
    7. '  ' → logprob: -12.387608528137207
    8. '<|end|>' → logprob: -12.762608528137207
    9. '	in' → logprob: -13.012608528137207
    10. 'a' → logprob: -13.075108528137207

Token 38: ' input' (ID: 3422)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08340984582901001
    2. 'range' → logprob: -2.7084097862243652
    3. ' input' → logprob: -4.458409786224365
    4. 'input' → logprob: -6.333409786224365
    5. ' ' → logprob: -11.583410263061523
    6. '(range' → logprob: -13.208410263061523
    7. ' ' → logprob: -13.333410263061523
    8. '[' → logprob: -13.458410263061523
    9. ' ran' → logprob: -13.458410263061523
    10. ' n' → logprob: -13.708410263061523

Token 39: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.07009093463420868
    2. '()' → logprob: -2.8200910091400146
    3. '()]' → logprob: -4.8200907707214355
    4. '()].' → logprob: -11.570091247558594
    5. '(' → logprob: -12.320091247558594
    6. '())' → logprob: -12.320091247558594
    7. '()`' → logprob: -13.695091247558594
    8. '()][' → logprob: -14.445091247558594
    9. '().__' → logprob: -14.570091247558594
    10. '()
' → logprob: -14.945091247558594

Token 40: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011113020591437817
    2. 'strip' → logprob: -4.511113166809082
    3. 'rstrip' → logprob: -9.886113166809082
    4. ' split' → logprob: -11.261113166809082
    5. 'replace' → logprob: -14.636113166809082
    6. '(split' → logprob: -14.886113166809082
    7. 'spl' → logprob: -15.136113166809082
    8. 's' → logprob: -15.511113166809082
    9. ' strip' → logprob: -16.386112213134766
    10. ')' → logprob: -17.886112213134766

Token 41: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0018913877429440618
    2. '(' → logprob: -6.501891613006592
    3. '()' → logprob: -8.126891136169434
    4. '())' → logprob: -9.501891136169434
    5. ']' → logprob: -11.376891136169434
    6. '('' → logprob: -12.751891136169434
    7. ')]' → logprob: -12.751891136169434
    8. '()]
' → logprob: -15.126891136169434
    9. '()],' → logprob: -15.126891136169434
    10. '(

' → logprob: -15.751891136169434

Token 42: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000836312014143914
    2. ' ]' → logprob: -7.750836372375488
    3. ')]' → logprob: -8.000836372375488
    4. ')' → logprob: -10.125836372375488
    5. '])' → logprob: -10.750836372375488
    6. '()]' → logprob: -11.875836372375488
    7. ' ' → logprob: -15.000836372375488
    8. '']' → logprob: -15.375836372375488
    9. ']
' → logprob: -15.375836372375488
    10. '`]' → logprob: -15.500836372375488

Token 43: 'P' (ID: 47)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21354065835475922
    2. '=' → logprob: -1.7135406732559204
    3. '[' → logprob: -5.213540554046631
    4. 'erm' → logprob: -6.588540554046631
    5. 'ermut' → logprob: -7.088540554046631
    6. '[:]' → logprob: -7.088540554046631
    7. 'r' → logprob: -7.213540554046631
    8. 'A' → logprob: -7.713540554046631
    9. '.' → logprob: -7.713540554046631
    10. '_' → logprob: -8.338541030883789

Token 45: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3755798935890198
    2. ' [' → logprob: -2.250579833984375
    3. '[A' → logprob: -2.750579833984375
    4. '[int' → logprob: -3.000579833984375
    5. '[n' → logprob: -3.250579833984375
    6. '[]' → logprob: -3.500579833984375
    7. '[len' → logprob: -4.375579833984375
    8. 'list' → logprob: -5.500579833984375
    9. 'A' → logprob: -5.875579833984375
    10. '[list' → logprob: -6.875579833984375

Token 46: 'None' (ID: 8505)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0027942995075136423
    2. '0' → logprob: -6.50279426574707
    3. '(int' → logprob: -8.37779426574707
    4. 'i' → logprob: -8.75279426574707
    5. '1' → logprob: -9.00279426574707
    6. ' int' → logprob: -9.12779426574707
    7. 'input' → logprob: -9.50279426574707
    8. 'float' → logprob: -9.50279426574707
    9. '[int' → logprob: -9.62779426574707
    10. 'A' → logprob: -10.00279426574707

Token 47: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7130048871040344
    2. ' for' → logprob: -0.8380048871040344
    3. ']*' → logprob: -2.8380048274993896
    4. 'for' → logprob: -4.338005065917969
    5. ']*(' → logprob: -5.713005065917969
    6. ' ]' → logprob: -6.963005065917969
    7. '()]' → logprob: -7.588005065917969
    8. '()' → logprob: -7.838005065917969
    9. ')' → logprob: -9.213005065917969
    10. ']+' → logprob: -9.463005065917969

Token 48: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011782419867813587
    2. 'range' → logprob: -4.761782646179199
    3. ' range' → logprob: -6.636782646179199
    4. 'x' → logprob: -7.386782646179199
    5. ' _' → logprob: -8.2617826461792
    6. 'i' → logprob: -8.3867826461792
    7. '(' → logprob: -8.5117826461792
    8. '_range' → logprob: -8.6367826461792
    9. '_x' → logprob: -8.7617826461792
    10. '(range' → logprob: -10.1367826461792

Token 49: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04198969528079033
    2. ' range' → logprob: -3.291989803314209
    3. 'A' → logprob: -5.791989803314209
    4. 'in' → logprob: -7.666989803314209
    5. ' in' → logprob: -8.04198932647705
    6. '(range' → logprob: -9.79198932647705
    7. ' A' → logprob: -10.91698932647705
    8. 'P' → logprob: -11.41698932647705
    9. '_' → logprob: -12.04198932647705
    10. ' ' → logprob: -13.41698932647705

Token 50: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00541233504191041
    2. ' range' → logprob: -5.2554121017456055
    3. 'A' → logprob: -8.755412101745605
    4. 'rang' → logprob: -11.630412101745605
    5. 'ran' → logprob: -12.130412101745605
    6. 'r' → logprob: -13.130412101745605
    7. 'P' → logprob: -14.005412101745605
    8. ' A' → logprob: -14.130412101745605
    9. '(range' → logprob: -14.255412101745605
    10. '	range' → logprob: -15.130412101745605

Token 51: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00033999193692579865
    2. '(' → logprob: -8.000340461730957
    3. ' (' → logprob: -12.875340461730957
    4. '(len' → logprob: -14.125340461730957
    5. 'n' → logprob: -14.375340461730957
    6. '(
' → logprob: -15.250340461730957
    7. '(N' → logprob: -15.500340461730957
    8. '((' → logprob: -16.62533950805664
    9. '(int' → logprob: -17.62533950805664
    10. '(s' → logprob: -17.87533950805664

Token 52: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.251091377227567e-05
    2. ' )' → logprob: -10.625042915344238
    3. ')]
' → logprob: -11.750042915344238
    4. ')' → logprob: -12.000042915344238
    5. ']' → logprob: -13.375042915344238
    6. ')]
' → logprob: -14.125042915344238
    7. ')]

' → logprob: -14.250042915344238
    8. ' ]' → logprob: -14.750042915344238
    9. ')])' → logprob: -15.875042915344238
    10. '+' → logprob: -16.375041961669922

Token 53: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6435303688049316
    2. ' for' → logprob: -0.7685303688049316
    3. '
' → logprob: -5.768530368804932
    4. ' 
' → logprob: -6.018530368804932
    5. '<|end|>' → logprob: -6.143530368804932
    6. ' ' → logprob: -6.643530368804932
    7. 'i' → logprob: -7.018530368804932
    8. ' i' → logprob: -8.518529891967773
    9. '[' → logprob: -8.893529891967773
    10. 'P' → logprob: -9.518529891967773

Token 54: ' ix' (ID: 44402)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005585429724305868
    2. 'i' → logprob: -5.380585193634033
    3. ' _' → logprob: -7.255585193634033
    4. '_' → logprob: -9.130585670471191
    5. ' ' → logprob: -10.380585670471191
    6. ' x' → logprob: -10.755585670471191
    7. ' a' → logprob: -10.880585670471191
    8. '_i' → logprob: -10.880585670471191
    9. ' ' → logprob: -11.505585670471191
    10. '	i' → logprob: -11.630585670471191

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7032468914985657
    2. ' in' → logprob: -0.8282468914985657
    3. 'in' → logprob: -2.703246831893921
    4. ' ' → logprob: -7.7032470703125
    5. ' ,' → logprob: -7.8282470703125
    6. 'n' → logprob: -9.3282470703125
    7. ',n' → logprob: -9.5782470703125
    8. ',in' → logprob: -10.2032470703125
    9. 'i' → logprob: -10.5782470703125
    10. '_' → logprob: -10.5782470703125

Token 56: ' val' (ID: 1459)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3220039904117584
    2. 'x' → logprob: -2.3220040798187256
    3. 'v' → logprob: -2.5720040798187256
    4. 'p' → logprob: -3.3220040798187256
    5. ' a' → logprob: -3.9470040798187256
    6. 'val' → logprob: -4.4470038414001465
    7. 'ai' → logprob: -5.3220038414001465
    8. ' v' → logprob: -5.5720038414001465
    9. ' p' → logprob: -5.6970038414001465
    10. 'i' → logprob: -5.8220038414001465

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023331431671977043
    2. 'in' → logprob: -3.7733314037323
    3. ' ' → logprob: -10.523331642150879
    4. 's' → logprob: -11.523331642150879
    5. '<|end|>' → logprob: -11.648331642150879
    6. ',' → logprob: -12.273331642150879
    7. 'er' → logprob: -13.210831642150879
    8. '<|end|>' → logprob: -13.273331642150879
    9. ')' → logprob: -13.398331642150879
    10. 'inth' → logprob: -13.398331642150879

Token 58: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.000841907283756882
    2. 'enumer' → logprob: -7.125842094421387
    3. ' zip' → logprob: -10.875842094421387
    4. '(en' → logprob: -11.500842094421387
    5. ' en' → logprob: -12.875842094421387
    6. ' ' → logprob: -13.000842094421387
    7. ' enumer' → logprob: -13.500842094421387
    8. '.enumer' → logprob: -14.875842094421387
    9. '```' → logprob: -14.875842094421387
    10. 'Enumer' → logprob: -15.625842094421387

Token 59: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -3.726595241460018e-05
    2. '(' → logprob: -10.25003719329834
    3. '(s' → logprob: -14.87503719329834
    4. 'A' → logprob: -14.87503719329834
    5. ' (' → logprob: -15.37503719329834
    6. '(a' → logprob: -15.50003719329834
    7. '(range' → logprob: -15.75003719329834
    8. '(x' → logprob: -16.250038146972656
    9. '(B' → logprob: -16.250038146972656
    10. '((' → logprob: -16.500038146972656

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001358328852802515
    2. '):
' → logprob: -6.751358509063721
    3. ':' → logprob: -9.001358032226562
    4. ')' → logprob: -10.001358032226562
    5. ' ):' → logprob: -11.376358032226562
    6. ']:' → logprob: -12.626358032226562
    7. '):
' → logprob: -13.126358032226562
    8. '():' → logprob: -13.751358032226562
    9. '[]):' → logprob: -15.501358032226562
    10. '[' → logprob: -15.626358032226562

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07332726567983627
    2. ':' → logprob: -2.8233273029327393
    3. ':
' → logprob: -5.19832706451416
    4. ' P' → logprob: -6.07332706451416
    5. 'P' → logprob: -6.19832706451416
    6. '    
' → logprob: -7.82332706451416
    7. ',' → logprob: -8.57332706451416
    8. '):
' → logprob: -8.69832706451416
    9. ' if' → logprob: -9.32332706451416
    10. '):' → logprob: -9.44832706451416

Token 62: ' P' (ID: 398)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4511560797691345
    2. ' P' → logprob: -1.7011561393737793
    3. 'P' (adapté à ' P') → logprob: -1.8261561393737793
    4. ' if' → logprob: -4.201156139373779
    5. 'if' → logprob: -5.701156139373779
    6. '    
' → logprob: -8.201155662536621
    7. ':' → logprob: -8.576155662536621
    8. '	P' → logprob: -9.201155662536621
    9. ' ' → logprob: -9.326155662536621
    10. '
' → logprob: -9.326155662536621

Token 63: '[val' (ID: 162482)
  Prédit: '[val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[val' → logprob: -0.0005943780997768044
    2. '[' → logprob: -8.250594139099121
    3. '[ix' → logprob: -8.375594139099121
    4. '[P' → logprob: -9.250594139099121
    5. '[A' → logprob: -12.375594139099121
    6. '[int' → logprob: -14.500594139099121
    7. '[x' → logprob: -15.000594139099121
    8. '[i' → logprob: -15.750594139099121
    9. '```' → logprob: -15.750594139099121
    10. '[...]' → logprob: -16.125595092773438

Token 64: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001156770158559084
    2. ' ]' → logprob: -6.876156806945801
    3. ']=' → logprob: -9.1261568069458
    4. ')' → logprob: -12.0011568069458
    5. '=' → logprob: -12.6261568069458
    6. ' =' → logprob: -12.8761568069458
    7. ')]' → logprob: -13.8761568069458
    8. ' ' → logprob: -14.3761568069458
    9. '`]' → logprob: -14.6261568069458
    10. '[' → logprob: -15.0011568069458

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22546124458312988
    2. '=' → logprob: -1.6004612445831299
    3. ' ' → logprob: -10.10046100616455
    4. '<|end|>' → logprob: -12.97546100616455
    5. ')' → logprob: -13.72546100616455
    6. ' =
' → logprob: -13.97546100616455
    7. ']' → logprob: -14.22546100616455
    8. '[' → logprob: -14.35046100616455
    9. 's' → logprob: -15.10046100616455
    10. ',' → logprob: -15.35046100616455

Token 66: ' ix' (ID: 44402)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.012661856599152088
    2. ' ix' → logprob: -4.387661933898926
    3. '[ix' → logprob: -9.762661933898926
    4. '_ix' → logprob: -10.012661933898926
    5. '(ix' → logprob: -10.512661933898926
    6. 'ixi' → logprob: -12.262661933898926
    7. 'x' → logprob: -12.262661933898926
    8. 'Ix' → logprob: -13.262661933898926
    9. 'ixo' → logprob: -13.637661933898926
    10. 'iz' → logprob: -13.762661933898926

Token 67: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: 'R' (ID: 49)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8122450113296509
    2. '#' → logprob: -1.5622450113296509
    3. 'for' → logprob: -2.0622448921203613
    4. 'n' → logprob: -2.5622448921203613
    5. '[' → logprob: -3.1872448921203613
    6. ')' → logprob: -3.6872448921203613
    7. 'p' → logprob: -4.312244892120361
    8. '(' → logprob: -4.437244892120361
    9. 'P' → logprob: -4.937244892120361
    10. '_' → logprob: -5.062244892120361

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6834754943847656
    2. '=' → logprob: -1.0584754943847656
    3. '_' → logprob: -3.0584754943847656
    4. ' ' → logprob: -3.6834754943847656
    5. '[' → logprob: -4.058475494384766
    6. 'ange' → logprob: -4.683475494384766
    7. 'e' → logprob: -4.933475494384766
    8. '.' → logprob: -5.308475494384766
    9. 'a' → logprob: -5.308475494384766
    10. 'eturn' → logprob: -5.308475494384766

Token 70: ' [[' (ID: 9237)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.2654980421066284
    2. '[' → logprob: -1.6404980421066284
    3. ' [' → logprob: -1.6404980421066284
    4. '[P' → logprob: -2.265498161315918
    5. 'P' → logprob: -2.390498161315918
    6. ' P' → logprob: -3.015498161315918
    7. '[len' → logprob: -3.390498161315918
    8. 'list' → logprob: -4.640498161315918
    9. '[list' → logprob: -5.015498161315918
    10. '[int' → logprob: -5.015498161315918

Token 71: 'n' (ID: 77)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05761374905705452
    2. 'False' → logprob: -3.1826138496398926
    3. 'None' → logprob: -5.182613849639893
    4. '-' → logprob: -6.307613849639893
    5. 'n' → logprob: -6.432613849639893
    6. 'int' → logprob: -6.932613849639893
    7. '1' → logprob: -7.182613849639893
    8. 'float' → logprob: -7.182613849639893
    9. '(' → logprob: -7.432613849639893
    10. ' ' → logprob: -8.182613372802734

Token 72: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5092161297798157
    2. 'for' → logprob: -1.134216070175171
    3. ']' → logprob: -3.134216070175171
    4. '+' → logprob: -4.50921630859375
    5. '-' → logprob: -4.88421630859375
    6. ' ' → logprob: -5.25921630859375
    7. ')' → logprob: -5.63421630859375
    8. '   ' → logprob: -6.38421630859375
    9. ')]' → logprob: -7.25921630859375
    10. ']*' → logprob: -7.38421630859375

Token 73: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00408647395670414
    2. '(n' → logprob: -6.004086494445801
    3. '2' → logprob: -8.0040864944458
    4. '(' → logprob: -8.7540864944458
    5. '3' → logprob: -9.0040864944458
    6. '10' → logprob: -9.1290864944458
    7. 'j' → logprob: -9.2540864944458
    8. 'i' → logprob: -9.3790864944458
    9. '4' → logprob: -9.3790864944458
    10. '9' → logprob: -9.5040864944458

Token 74: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04925337806344032
    2. 'for' → logprob: -3.174253463745117
    3. ']' → logprob: -5.174253463745117
    4. ',' → logprob: -8.674253463745117
    5. ' ' → logprob: -8.674253463745117
    6. ' ]' → logprob: -9.049253463745117
    7. ')' → logprob: -10.174253463745117
    8. '0' → logprob: -10.924253463745117
    9. '   ' → logprob: -11.549253463745117
    10. '  ' → logprob: -11.924253463745117

Token 75: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.038201119750738144
    2. 'range' → logprob: -3.288201093673706
    3. '_' → logprob: -8.788201332092285
    4. ' _' → logprob: -12.788201332092285
    5. '_range' → logprob: -12.913201332092285
    6. '(range' → logprob: -13.913201332092285
    7. '	range' → logprob: -14.288201332092285
    8. ' xrange' → logprob: -16.16320037841797
    9. ' ' → logprob: -16.41320037841797
    10. ' rang' → logprob: -17.41320037841797

Token 76: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012878654524683952
    2. ' range' → logprob: -4.51287841796875
    3. '(range' → logprob: -6.63787841796875
    4. 'in' → logprob: -8.01287841796875
    5. ' in' → logprob: -9.01287841796875
    6. 'ange' → logprob: -10.51287841796875
    7. '_' → logprob: -11.51287841796875
    8. '(' → logprob: -11.63787841796875
    9. 'n' → logprob: -12.26287841796875
    10. '	range' → logprob: -12.63787841796875

Token 77: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22544002532958984
    2. ' range' → logprob: -1.6004400253295898
    3. 'A' → logprob: -11.60044002532959
    4. '(range' → logprob: -11.72544002532959
    5. 'P' → logprob: -12.72544002532959
    6. 'rang' → logprob: -13.47544002532959
    7. '	range' → logprob: -13.72544002532959
    8. ' A' → logprob: -14.22544002532959
    9. ' ' → logprob: -14.47544002532959
    10. ' rang' → logprob: -14.72544002532959

Token 78: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01816246658563614
    2. '0' → logprob: -4.393162250518799
    3. ' range' → logprob: -5.268162250518799
    4. '_' → logprob: -8.143162727355957
    5. 'None' → logprob: -8.768162727355957
    6. 'A' → logprob: -11.143162727355957
    7. ' ' → logprob: -12.393162727355957
    8. '	range' → logprob: -12.393162727355957
    9. '(range' → logprob: -12.643162727355957
    10. 'P' → logprob: -12.768162727355957

Token 79: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.17035071551799774
    2. ']' → logprob: -1.9203506708145142
    3. '(n' → logprob: -4.920350551605225
    4. ']*(' → logprob: -7.045350551605225
    5. 'range' → logprob: -7.295350551605225
    6. '<n' → logprob: -7.420350551605225
    7. ' ]' → logprob: -8.670351028442383
    8. ']+' → logprob: -8.795351028442383
    9. ',n' → logprob: -9.545351028442383
    10. '   ' → logprob: -9.795351028442383

Token 80: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005893715424463153
    2. '(n' → logprob: -7.875589370727539
    3. ' n' → logprob: -8.625589370727539
    4. '2' → logprob: -10.875589370727539
    5. '(' → logprob: -12.125589370727539
    6. ' (' → logprob: -13.750589370727539
    7. '   ' → logprob: -13.875589370727539
    8. ' ' → logprob: -14.500589370727539
    9. '	n' → logprob: -15.250589370727539
    10. '3' → logprob: -15.250589370727539

Token 81: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00013727048644796014
    2. ']
' → logprob: -9.625137329101562
    3. ' ]' → logprob: -10.000137329101562
    4. ')]' → logprob: -11.375137329101562
    5. ']

' → logprob: -11.750137329101562
    6. ']
' → logprob: -12.375137329101562
    7. ']

' → logprob: -14.000137329101562
    8. '()]' → logprob: -14.625137329101562
    9. ']]' → logprob: -15.000137329101562
    10. '`]' → logprob: -15.875137329101562

Token 82: 'from' (ID: 2845)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004104404244571924
    2. ' for' → logprob: -5.5041046142578125
    3. '```' → logprob: -12.379104614257812
    4. 'i' → logprob: -12.629104614257812
    5. 'n' → logprob: -12.754104614257812
    6. ')' → logprob: -13.129104614257812
    7. '<|end|>' → logprob: -13.129104614257812
    8. 's' → logprob: -13.504104614257812
    9. '#' → logprob: -13.504104614257812
    10. '
' → logprob: -14.379104614257812

Token 83: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.08965615183115005
    2. ' itertools' → logprob: -2.964656114578247
    3. 'collections' → logprob: -3.589656114578247
    4. '_' → logprob: -5.714656352996826
    5. ' math' → logprob: -6.464656352996826
    6. ' sys' → logprob: -6.714656352996826
    7. 'sys' → logprob: -9.214655876159668
    8. ' copy' → logprob: -9.464655876159668
    9. ' heap' → logprob: -9.714655876159668
    10. '_col' → logprob: -9.964655876159668

Token 84: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.01873018406331539
    2. ' import' → logprob: -4.393730163574219
    3. 'port' → logprob: -5.393730163574219
    4. 'default' → logprob: -7.518730163574219
    5. 'ort' → logprob: -7.893730163574219
    6. 'r' → logprob: -8.393730163574219
    7. 'rt' → logprob: -9.393730163574219
    8. '```' → logprob: -9.393730163574219
    9. 'er' → logprob: -9.893730163574219
    10. 'orted' → logprob: -10.393730163574219

Token 85: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.01675145886838436
    2. 'deque' → logprob: -4.141751289367676
    3. ' defaultdict' → logprob: -7.266751289367676
    4. ' de' → logprob: -11.516751289367676
    5. ' ' → logprob: -12.766751289367676
    6. 'de' → logprob: -13.016751289367676
    7. 'default' → logprob: -13.766751289367676
    8. ' dequeue' → logprob: -14.141751289367676
    9. ' collections' → logprob: -14.516751289367676
    10. ' counter' → logprob: -15.266751289367676

Token 86: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9248787760734558
    2. 'for' → logprob: -1.4248788356781006
    3. ' 
' → logprob: -2.1748788356781006
    4. 'queue' → logprob: -2.5498788356781006
    5. 'q' → logprob: -2.9248788356781006
    6. '  
' → logprob: -3.7998788356781006
    7. ' for' → logprob: -3.7998788356781006
    8. 'b' → logprob: -4.0498785972595215
    9. 'deque' → logprob: -4.7998785972595215
    10. 'd' → logprob: -4.9248785972595215

Token 87: 'pq' (ID: 124147)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.943011999130249
    2. 'queue' → logprob: -2.318011999130249
    3. ' 
' → logprob: -2.443011999130249
    4. 'd' → logprob: -2.443011999130249
    5. '
' → logprob: -2.568011999130249
    6. 'b' → logprob: -2.568011999130249
    7. 'for' → logprob: -3.068011999130249
    8. 'n' → logprob: -3.318011999130249
    9. 'Q' → logprob: -3.693011999130249
    10. '  
' → logprob: -4.443012237548828

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03398221731185913
    2. '=' → logprob: -3.408982276916504
    3. 'ue' → logprob: -8.533982276916504
    4. 'u' → logprob: -9.533982276916504
    5. ' ' → logprob: -10.283982276916504
    6. 'uer' → logprob: -11.158982276916504
    7. 'ues' → logprob: -12.658982276916504
    8. ',' → logprob: -12.783982276916504
    9. '.' → logprob: -13.158982276916504
    10. '_' → logprob: -13.408982276916504

Token 89: ' []
' (ID: 8911)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.1269386112689972
    2. ' deque' → logprob: -2.126938581466675
    3. 'de' → logprob: -11.876938819885254
    4. 'Deque' → logprob: -13.376938819885254
    5. '[]' → logprob: -14.876938819885254
    6. ' ' → logprob: -14.876938819885254
    7. 'collections' → logprob: -15.126938819885254
    8. '	de' → logprob: -15.501938819885254
    9. '   ' → logprob: -15.626938819885254
    10. ' de' → logprob: -15.751938819885254

Token 90: 'import' (ID: 561)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33249780535697937
    2. 'import' → logprob: -2.0824978351593018
    3. 'deque' → logprob: -3.3324978351593018
    4. 'from' → logprob: -3.7074978351593018
    5. 'q' → logprob: -3.8324978351593018
    6. ' for' → logprob: -4.082497596740723
    7. 'queue' → logprob: -4.707497596740723
    8. 'while' → logprob: -4.957497596740723
    9. '<|end|>' → logprob: -5.207497596740723
    10. ')' → logprob: -5.332497596740723

Token 91: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.0004944138927385211
    2. 'heap' → logprob: -8.000494003295898
    3. ' sys' → logprob: -9.500494003295898
    4. ' itertools' → logprob: -10.875494003295898
    5. ' ' → logprob: -11.000494003295898
    6. ' he' → logprob: -11.125494003295898
    7. ' ' → logprob: -12.125494003295898
    8. '```' → logprob: -12.125494003295898
    9. '_' → logprob: -12.250494003295898
    10. '_heap' → logprob: -12.375494003295898

Token 92: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00026264708139933646
    2. 'queue' → logprob: -8.250262260437012
    3. ' queue' → logprob: -14.875262260437012
    4. 'que' → logprob: -15.125262260437012
    5. 'import' → logprob: -15.750262260437012
    6. 'lib' → logprob: -16.000263214111328
    7. '<|end|>' → logprob: -16.125263214111328
    8. 'qt' → logprob: -16.875263214111328
    9. 'ql' → logprob: -17.125263214111328
    10. 'op' → logprob: -17.125263214111328

Token 93: ' as' (ID: 472)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29749518632888794
    2. '<|end|>' → logprob: -2.297495126724243
    3. 'heap' → logprob: -2.922495126724243
    4. '#' → logprob: -3.797495126724243
    5. ' for' → logprob: -3.797495126724243
    6. 'def' → logprob: -4.922495365142822
    7. '```' → logprob: -5.172495365142822
    8. '
' → logprob: -5.172495365142822
    9. ')' → logprob: -5.297495365142822
    10. 'i' → logprob: -5.422495365142822

Token 94: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.4040593206882477
    2. 'hq' → logprob: -1.5290592908859253
    3. ' heap' → logprob: -2.779059410095215
    4. ' hp' → logprob: -3.779059410095215
    5. 'heap' → logprob: -3.904059410095215
    6. 'h' → logprob: -5.529059410095215
    7. 'hp' → logprob: -5.529059410095215
    8. ' ' → logprob: -6.529059410095215
    9. '	h' → logprob: -8.154059410095215
    10. ' he' → logprob: -8.279059410095215

Token 95: 'q' (ID: 80)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0008042682893574238
    2. 'q' → logprob: -7.250804424285889
    3. 'eep' → logprob: -10.00080394744873
    4. 'p' → logprob: -10.50080394744873
    5. 'ea' → logprob: -12.12580394744873
    6. 'eat' → logprob: -12.50080394744873
    7. 'heap' → logprob: -13.12580394744873
    8. 'ep' → logprob: -13.50080394744873
    9. 'elp' → logprob: -13.62580394744873
    10. 'op' → logprob: -13.62580394744873

Token 96: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10071253031492233
    2. '<|end|>' → logprob: -3.225712537765503
    3. 'for' → logprob: -3.475712537765503
    4. ' 
' → logprob: -5.225712299346924
    5. 'hq' → logprob: -5.350712299346924
    6. ' for' → logprob: -5.475712299346924
    7. '

' → logprob: -5.475712299346924
    8. ' ' → logprob: -6.725712299346924
    9. 'def' → logprob: -6.725712299346924
    10. 'h' → logprob: -7.225712299346924

Token 97: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04922239109873772
    2. '<|end|>' → logprob: -4.174222469329834
    3. 'i' → logprob: -5.049222469329834
    4. ' for' → logprob: -5.174222469329834
    5. ')' → logprob: -5.174222469329834
    6. 'while' → logprob: -5.299222469329834
    7. 'n' → logprob: -5.799222469329834
    8. '#' → logprob: -6.549222469329834
    9. 'def' → logprob: -7.174222469329834
    10. 'hq' → logprob: -7.424222469329834

Token 98: ' i' (ID: 575)
  Prédit: ' ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ix' → logprob: -0.3892001807689667
    2. ' val' → logprob: -1.264200210571289
    3. ' i' → logprob: -3.389200210571289
    4. ' p' → logprob: -6.889200210571289
    5. ' _' → logprob: -7.139200210571289
    6. ' x' → logprob: -7.264200210571289
    7. ' idx' → logprob: -7.264200210571289
    8. ' v' → logprob: -7.264200210571289
    9. ' range' → logprob: -8.014200210571289
    10. ' (' → logprob: -8.389200210571289

Token 99: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.045689500868320465
    2. 'in' → logprob: -3.170689582824707
    3. ',' → logprob: -6.045689582824707
    4. ' ' → logprob: -8.545689582824707
    5. 'n' → logprob: -9.670689582824707
    6. ' ,' → logprob: -10.295689582824707
    7. 'range' → logprob: -12.170689582824707
    8. ',n' → logprob: -12.420689582824707
    9. 's' → logprob: -12.670689582824707
    10. 'd' → logprob: -13.545689582824707

Token 100: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47414371371269226
    2. ' range' → logprob: -0.9741437435150146
    3. 'P' → logprob: -10.474143981933594
    4. 'A' → logprob: -11.224143981933594
    5. ' P' → logprob: -12.349143981933594
    6. ' ' → logprob: -12.474143981933594
    7. ' A' → logprob: -12.724143981933594
    8. '(range' → logprob: -12.974143981933594
    9. 'r' → logprob: -13.724143981933594
    10. '	range' → logprob: -13.724143981933594

Token 101: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0034286505542695522
    2. '(' → logprob: -5.7534284591674805
    3. 'n' → logprob: -8.62842845916748
    4. ' n' → logprob: -10.00342845916748
    5. '(len' → logprob: -11.37842845916748
    6. ' (' → logprob: -11.37842845916748
    7. '(s' → logprob: -14.12842845916748
    8. '(p' → logprob: -14.50342845916748
    9. '1' → logprob: -15.00342845916748
    10. ' ' → logprob: -15.12842845916748

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02607373148202896
    2. '):
' → logprob: -3.901073694229126
    3. '-' → logprob: -5.526073932647705
    4. '+' → logprob: -7.276073932647705
    5. ')' → logprob: -8.026073455810547
    6. ' ):' → logprob: -8.526073455810547
    7. ' -' → logprob: -9.276073455810547
    8. '):
' → logprob: -9.276073455810547
    9. ' ' → logprob: -9.526073455810547
    10. '   ' → logprob: -10.651073455810547

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7743322253227234
    2. ' h' → logprob: -1.2743322849273682
    3. ' if' → logprob: -1.3993322849273682
    4. 'hq' → logprob: -5.274332046508789
    5. 'if' → logprob: -6.024332046508789
    6. 'h' → logprob: -6.274332046508789
    7. ' for' → logprob: -6.774332046508789
    8. ' pass' → logprob: -7.774332046508789
    9. ' ' → logprob: -7.899332046508789
    10. '	h' → logprob: -8.586832046508789

Token 104: ' snap' (ID: 17567)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -1.0049161911010742
    2. 'hq' → logprob: -1.0049161911010742
    3. ' if' → logprob: -2.004916191101074
    4. 'if' → logprob: -2.504916191101074
    5. 'h' → logprob: -3.629916191101074
    6. '   ' → logprob: -4.879916191101074
    7. ' for' → logprob: -5.379916191101074
    8. 'for' → logprob: -5.629916191101074
    9. ' pass' → logprob: -6.629916191101074
    10. ' R' → logprob: -7.129916191101074

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5798869729042053
    2. 'shots' → logprob: -1.4548869132995605
    3. '=' → logprob: -2.3298869132995605
    4. 'shot' → logprob: -2.9548869132995605
    5. 's' → logprob: -3.7048869132995605
    6. '=s' → logprob: -5.2048869132995605
    7. '=i' → logprob: -5.2048869132995605
    8. '=int' → logprob: -5.3298869132995605
    9. 'sh' → logprob: -6.0798869132995605
    10. '=(' → logprob: -6.2048869132995605

Token 106: ' []
' (ID: 8911)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6813676357269287
    2. '(i' → logprob: -1.6813676357269287
    3. 'P' → logprob: -1.8063676357269287
    4. '(P' → logprob: -2.3063676357269287
    5. '0' → logprob: -2.8063676357269287
    6. 'i' → logprob: -3.1813676357269287
    7. '(n' → logprob: -3.3063676357269287
    8. '(' → logprob: -3.3063676357269287
    9. 'n' → logprob: -3.9313676357269287
    10. '[P' → logprob: -3.9313676357269287

Token 107: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4254913330078125
    2. 'for' → logprob: -1.1754913330078125
    3. '   ' → logprob: -4.3004913330078125
    4. ' if' → logprob: -4.5504913330078125
    5. ' while' → logprob: -5.4254913330078125
    6. 'if' → logprob: -5.6754913330078125
    7. 'hq' → logprob: -6.3004913330078125
    8. 'while' → logprob: -6.4254913330078125
    9. ' h' → logprob: -7.5504913330078125
    10. ')' → logprob: -7.8004913330078125

Token 108: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.082218237221241
    2. 'while' (adapté à ' while') → logprob: -3.4572181701660156
    3. 'j' → logprob: -4.207218170166016
    4. 'hq' → logprob: -4.207218170166016
    5. 'pos' → logprob: -5.957218170166016
    6. 'h' → logprob: -6.082218170166016
    7. 'if' → logprob: -6.332218170166016
    8. ' for' → logprob: -6.457218170166016
    9. 'cur' → logprob: -6.957218170166016
    10. 'snap' → logprob: -7.207218170166016

Token 109: ' pq' (ID: 65424)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.0012928548967465758
    2. ' pq' → logprob: -7.376292705535889
    3. 'len' → logprob: -7.501292705535889
    4. 'hq' → logprob: -9.751293182373047
    5. '   ' → logprob: -11.376293182373047
    6. 'p' → logprob: -12.126293182373047
    7. 'h' → logprob: -12.251293182373047
    8. 'i' → logprob: -12.501293182373047
    9. 'A' → logprob: -12.501293182373047
    10. 'True' → logprob: -12.626293182373047

Token 110: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5759430527687073
    2. ' and' → logprob: -0.8259430527687073
    3. '	and' → logprob: -13.575942993164062
    4. '   ' → logprob: -13.950942993164062
    5. ' и' → logprob: -14.950942993164062
    6. '[' → logprob: -14.950942993164062
    7. '```' → logprob: -16.075942993164062
    8. ' ' → logprob: -16.200942993164062
    9. '  ' → logprob: -17.075942993164062
    10. '&&' → logprob: -17.200942993164062

Token 111: ' pq' (ID: 65424)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.47828400135040283
    2. ' pq' → logprob: -0.9782840013504028
    3. 'hq' → logprob: -5.603283882141113
    4. '   ' → logprob: -9.103283882141113
    5. 'P' → logprob: -9.478283882141113
    6. ' A' → logprob: -9.603283882141113
    7. ' P' → logprob: -9.728283882141113
    8. 'A' → logprob: -10.103283882141113
    9. 'p' → logprob: -10.478283882141113
    10. ' ' → logprob: -10.603283882141113

Token 112: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.281485836254433e-05
    2. ' and' → logprob: -9.375092506408691
    3. 'and' → logprob: -12.375092506408691
    4. ' [' → logprob: -13.250092506408691
    5. '[-' → logprob: -14.125092506408691
    6. '```' → logprob: -14.750092506408691
    7. '0' → logprob: -15.125092506408691
    8. ' ' → logprob: -16.125093460083008
    9. '>' → logprob: -16.500093460083008
    10. '[
' → logprob: -16.500093460083008

Token 113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10047116875648499
    2. '[' → logprob: -2.350471258163452
    3. ' ' → logprob: -9.100471496582031
    4. '][' → logprob: -10.225471496582031
    5. ' [' → logprob: -10.350471496582031
    6. '
' → logprob: -10.600471496582031
    7. '```' → logprob: -11.600471496582031
    8. '   ' → logprob: -11.975471496582031
    9. 'and' → logprob: -12.225471496582031
    10. 'top' → logprob: -12.350471496582031

Token 114: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18191218376159668
    2. '][' → logprob: -1.8069121837615967
    3. '()[' → logprob: -6.431912422180176
    4. '>[' → logprob: -8.806912422180176
    5. ' [' → logprob: -9.181912422180176
    6. ')[' → logprob: -9.681912422180176
    7. '<' → logprob: -9.806912422180176
    8. ''][' → logprob: -10.556912422180176
    9. ']' → logprob: -10.931912422180176
    10. '()][' → logprob: -11.056912422180176

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00019066639652010053
    2. '1' → logprob: -9.375190734863281
    3. '[' → logprob: -9.500190734863281
    4. ' ' → logprob: -10.625190734863281
    5. '][' → logprob: -13.125190734863281
    6. '(' → logprob: -13.562690734863281
    7. '
' → logprob: -14.312690734863281
    8. '   ' → logprob: -14.812690734863281
    9. '#' → logprob: -15.062690734863281
    10. '```' → logprob: -15.187690734863281

Token 116: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04753006622195244
    2. ']<=' → logprob: -3.547530174255371
    3. '][' → logprob: -4.922530174255371
    4. ']<' → logprob: -5.172530174255371
    5. '[' → logprob: -6.047530174255371
    6. ']==' → logprob: -7.047530174255371
    7. '<=' → logprob: -7.297530174255371
    8. ' ]' → logprob: -8.047530174255371
    9. ' <=' → logprob: -8.422530174255371
    10. ']>=' → logprob: -9.672530174255371

Token 117: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3507736027240753
    2. ' <=' → logprob: -1.225773572921753
    3. '<' → logprob: -7.350773811340332
    4. '==' → logprob: -7.475773811340332
    5. '[' → logprob: -7.475773811340332
    6. ' <' → logprob: -8.225773811340332
    7. ' ==' → logprob: -8.350773811340332
    8. ' ' → logprob: -11.225773811340332
    9. '<int' → logprob: -12.225773811340332
    10. ']<=' → logprob: -12.225773811340332

Token 118: ' A' (ID: 355)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09185447543859482
    2. ' i' → logprob: -2.8418545722961426
    3. 'P' → logprob: -3.8418545722961426
    4. ' P' → logprob: -5.716854572296143
    5. 'A' → logprob: -5.966854572296143
    6. 'n' → logprob: -7.091854572296143
    7. ' A' → logprob: -7.841854572296143
    8. 'R' → logprob: -8.466854095458984
    9. ' n' → logprob: -8.716854095458984
    10. '(i' → logprob: -9.341854095458984

Token 119: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.77627644513268e-06
    2. '[' → logprob: -11.875008583068848
    3. 'i' → logprob: -14.875008583068848
    4. '[ix' → logprob: -14.875008583068848
    5. '[s' → logprob: -15.125008583068848
    6. '[p' → logprob: -15.875008583068848
    7. ' [' → logprob: -15.875008583068848
    8. '[h' → logprob: -16.000009536743164
    9. '[P' → logprob: -16.500009536743164
    10. '[q' → logprob: -16.500009536743164

Token 120: ']:
' (ID: 22152)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.034592388459714e-06
    2. '[' → logprob: -13.000005722045898
    3. 'i' → logprob: -13.500005722045898
    4. ']' → logprob: -13.750005722045898
    5. '][' → logprob: -14.875005722045898
    6. '[ix' → logprob: -14.875005722045898
    7. '])' → logprob: -15.625005722045898
    8. '(i' → logprob: -16.1250057220459
    9. '[j' → logprob: -17.5000057220459
    10. '[I' → logprob: -17.8750057220459

Token 121: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3790147006511688
    2. ':
' → logprob: -1.6290147304534912
    3. '[' → logprob: -2.379014730453491
    4. '):' → logprob: -4.754014492034912
    5. '   ' → logprob: -4.879014492034912
    6. ',' → logprob: -5.379014492034912
    7. '):
' → logprob: -6.379014492034912
    8. ')' → logprob: -7.504014492034912
    9. 'h' → logprob: -7.629014492034912
    10. '       ' → logprob: -7.629014492034912

Token 122: ' v' (ID: 323)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1603729724884033
    2. '_,' → logprob: -1.5353729724884033
    3. 'v' (adapté à ' v') → logprob: -2.2853729724884033
    4. ' d' → logprob: -2.6603729724884033
    5. 'h' → logprob: -2.9103729724884033
    6. 't' → logprob: -3.6603729724884033
    7. ' dist' → logprob: -3.6603729724884033
    8. ' v' → logprob: -3.7853729724884033
    9. 'dist' → logprob: -3.7853729724884033
    10. 'x' → logprob: -3.9103729724884033

Token 123: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15626074373722076
    2. ' =' → logprob: -2.6562607288360596
    3. 'alue' → logprob: -3.2812607288360596
    4. 'al' → logprob: -3.5312607288360596
    5. ',' → logprob: -5.531260967254639
    6. '=h' → logprob: -8.03126049041748
    7. '=v' → logprob: -8.03126049041748
    8. 'alent' → logprob: -8.28126049041748
    9. ',val' → logprob: -8.53126049041748
    10. 'ale' → logprob: -8.53126049041748

Token 124: ' j' (ID: 441)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.4100534915924072
    2. ' idx' → logprob: -1.4100534915924072
    3. 'j' → logprob: -1.7850534915924072
    4. 'pos' → logprob: -2.6600534915924072
    5. ' j' → logprob: -2.6600534915924072
    6. 'p' → logprob: -3.1600534915924072
    7. 'u' → logprob: -3.4100534915924072
    8. 'x' → logprob: -3.6600534915924072
    9. ' p' → logprob: -4.035053253173828
    10. ' pos' → logprob: -4.285053253173828

Token 125: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16045372188091278
    2. ' =' → logprob: -1.9104536771774292
    3. '=h' → logprob: -8.410453796386719
    4. '   ' → logprob: -13.160453796386719
    5. 'h' → logprob: -13.910453796386719
    6. ')' → logprob: -14.160453796386719
    7. 'hq' → logprob: -14.785453796386719
    8. ' ' → logprob: -14.785453796386719
    9. ')=' → logprob: -15.035453796386719
    10. '=j' → logprob: -15.160453796386719

Token 126: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.2257116287946701
    2. ' h' → logprob: -1.6007115840911865
    3. 'h' → logprob: -8.225711822509766
    4. '   ' → logprob: -11.600711822509766
    5. '(h' → logprob: -11.725711822509766
    6. '	h' → logprob: -12.100711822509766
    7. ',h' → logprob: -13.600711822509766
    8. '_h' → logprob: -13.725711822509766
    9. '=h' → logprob: -14.225711822509766
    10. '[h' → logprob: -14.225711822509766

Token 127: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00016945181414484978
    2. 'app' → logprob: -9.50016975402832
    3. 'ap' → logprob: -10.12516975402832
    4. '[' → logprob: -10.50016975402832
    5. 'p' → logprob: -10.75016975402832
    6. 'qp' → logprob: -13.25016975402832
    7. 'aq' → logprob: -13.37516975402832
    8. 'qq' → logprob: -13.87516975402832
    9. 'pq' → logprob: -15.12516975402832
    10. 'x' → logprob: -15.50016975402832

Token 128: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.002478985348716378
    2. 'he' → logprob: -6.002479076385498
    3. 'q' → logprob: -13.75247859954834
    4. '.heap' → logprob: -14.12747859954834
    5. 'pop' → logprob: -14.87747859954834
    6. ' he' → logprob: -15.00247859954834
    7. 'op' → logprob: -15.00247859954834
    8. '.' → logprob: -15.62747859954834
    9. '.pop' → logprob: -15.87747859954834
    10. 'hq' → logprob: -16.127479553222656

Token 129: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00010533124441280961
    2. 'pp' → logprob: -9.250104904174805
    3. 'ap' → logprob: -11.875104904174805
    4. '[' → logprob: -13.625104904174805
    5. 'pop' → logprob: -15.500104904174805
    6. 'p' → logprob: -15.500104904174805
    7. '```' → logprob: -15.625104904174805
    8. 'a' → logprob: -15.750104904174805
    9. 'q' → logprob: -16.125104904174805
    10. '...' → logprob: -17.250104904174805

Token 130: 'op' (ID: 467)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6170108914375305
    2. 'op' → logprob: -1.2420108318328857
    3. 'ush' → logprob: -2.3670108318328857
    4. 'app' → logprob: -2.9920108318328857
    5. 'pp' → logprob: -4.242011070251465
    6. 'ap' → logprob: -4.492011070251465
    7. 'q' → logprob: -6.617011070251465
    8. 'push' → logprob: -9.242011070251465
    9. 'pop' → logprob: -9.242011070251465
    10. 'l' → logprob: -9.492011070251465

Token 131: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.87501049041748
    3. 'p' → logprob: -13.50001049041748
    4. '(q' → logprob: -13.75001049041748
    5. ' (' → logprob: -14.25001049041748
    6. 'pq' → logprob: -16.500009536743164
    7. '(
' → logprob: -16.875009536743164
    8. 's' → logprob: -17.000009536743164
    9. '(s' → logprob: -17.250009536743164
    10. ')' → logprob: -18.000009536743164

Token 132: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.816093228830141e-06
    2. ')' → logprob: -13.87500286102295
    3. '(q' → logprob: -14.87500286102295
    4. '[q' → logprob: -14.87500286102295
    5. '[' → logprob: -15.50000286102295
    6. ')
' → logprob: -16.375001907348633
    7. '	q' → logprob: -16.500001907348633
    8. 'Q' → logprob: -16.625001907348633
    9. 'w' → logprob: -16.750001907348633
    10. 'y' → logprob: -16.750001907348633

Token 133: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5760342478752136
    2. ')
' → logprob: -0.8260342478752136
    3. ')
' → logprob: -9.451034545898438
    4. '       ' → logprob: -11.576034545898438
    5. '   ' → logprob: -12.951034545898438
    6. ')

' → logprob: -13.326034545898438
    7. ')v' → logprob: -13.701034545898438
    8. '[' → logprob: -14.951034545898438
    9. ',' → logprob: -15.451034545898438
    10. ')`
' → logprob: -15.701034545898438

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018067917553707957
    2. ',' → logprob: -6.751806735992432
    3. ')' → logprob: -8.50180721282959
    4. '   ' → logprob: -9.00180721282959
    5. '[' → logprob: -10.00180721282959
    6. '
' → logprob: -10.12680721282959
    7. '        
' → logprob: -10.37680721282959
    8. '           ' → logprob: -11.00180721282959
    9. 's' → logprob: -11.37680721282959
    10. 'R' → logprob: -11.37680721282959

Token 135: ' R' (ID: 460)
  Prédit: 'snap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'snap' → logprob: -0.4476306140422821
    2. '       ' → logprob: -1.5726306438446045
    3. '   ' → logprob: -2.0726306438446045
    4. 'if' → logprob: -4.322630405426025
    5. ' snap' → logprob: -5.072630405426025
    6. ' if' → logprob: -6.072630405426025
    7. 'R' (adapté à ' R') → logprob: -6.697630405426025
    8. '           ' → logprob: -7.447630405426025
    9. 'for' → logprob: -7.572630405426025
    10. 'v' → logprob: -7.697630405426025

Token 136: '[v' (ID: 36561)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.03835392743349075
    2. '[v' → logprob: -3.28835391998291
    3. '[val' → logprob: -8.28835391998291
    4. '[P' → logprob: -10.66335391998291
    5. '[' → logprob: -10.78835391998291
    6. '[i' → logprob: -12.03835391998291
    7. 'v' → logprob: -13.03835391998291
    8. 'j' → logprob: -13.03835391998291
    9. '[u' → logprob: -13.66335391998291
    10. '[R' → logprob: -14.03835391998291

Token 137: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005006398074328899
    2. '[' → logprob: -5.505006313323975
    3. ']' → logprob: -7.505006313323975
    4. ' ][' → logprob: -8.130006790161133
    5. '=' → logprob: -10.630006790161133
    6. '[j' → logprob: -11.005006790161133
    7. '   ' → logprob: -11.880006790161133
    8. '[i' → logprob: -12.255006790161133
    9. '-' → logprob: -12.755006790161133
    10. 'j' → logprob: -13.067506790161133

Token 138: 'j' (ID: 73)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003622404532507062
    2. '0' → logprob: -5.628622531890869
    3. ' ' → logprob: -10.753622055053711
    4. '   ' → logprob: -15.316122055053711
    5. 'j' → logprob: -15.503622055053711
    6. 'v' → logprob: -16.69112205505371
    7. '-' → logprob: -16.69112205505371
    8. '```' → logprob: -16.94112205505371
    9. '
' → logprob: -17.31612205505371
    10. 'i' → logprob: -17.44112205505371

Token 139: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006311862962320447
    2. ' ]' → logprob: -7.875631332397461
    3. ']=' → logprob: -8.625631332397461
    4. '+' → logprob: -10.125631332397461
    5. ']+=' → logprob: -11.875631332397461
    6. '-' → logprob: -12.125631332397461
    7. '1' → logprob: -12.625631332397461
    8. '[' → logprob: -13.125631332397461
    9. '2' → logprob: -13.375631332397461
    10. ' +' → logprob: -13.500631332397461

Token 140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34857606887817383
    2. ' =' → logprob: -1.2235760688781738
    3. ']' → logprob: -9.598575592041016
    4. ')' → logprob: -10.473575592041016
    5. '[' → logprob: -11.223575592041016
    6. '+=' → logprob: -12.473575592041016
    7. ' +=' → logprob: -12.598575592041016
    8. ']=' → logprob: -12.973575592041016
    9. ' ' → logprob: -13.098575592041016
    10. '   ' → logprob: -13.598575592041016

Token 141: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009573166607879102
    2. 'ix' → logprob: -8.000957489013672
    3. ' i' → logprob: -8.125957489013672
    4. 'A' → logprob: -8.500957489013672
    5. 'n' → logprob: -10.250957489013672
    6. 'P' → logprob: -10.875957489013672
    7. 'j' → logprob: -11.125957489013672
    8. 'min' → logprob: -11.500957489013672
    9. 'iq' → logprob: -11.750957489013672
    10. 'max' → logprob: -11.875957489013672

Token 142: '
' (ID: 198)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.3289796710014343
    2. '   ' → logprob: -2.328979730606079
    3. ')' → logprob: -2.578979730606079
    4. '       ' → logprob: -2.703979730606079
    5. '           ' → logprob: -4.9539794921875
    6. '[' → logprob: -4.9539794921875
    7. ' )' → logprob: -5.7039794921875
    8. ',' → logprob: -5.8289794921875
    9. ' ' → logprob: -6.2039794921875
    10. '    ' → logprob: -6.3289794921875

Token 143: '       ' (ID: 309)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.1696842461824417
    2. '   ' → logprob: -1.9196842908859253
    3. ' h' → logprob: -5.044684410095215
    4. '       ' → logprob: -6.544684410095215
    5. 'h' → logprob: -8.294684410095215
    6. ' if' → logprob: -8.544684410095215
    7. '
' → logprob: -8.919684410095215
    8. '           ' → logprob: -9.044684410095215
    9. ' ' → logprob: -9.419684410095215
    10. 'if' → logprob: -9.544684410095215

Token 144: ' if' (ID: 538)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.1186736524105072
    2. '   ' → logprob: -3.49367356300354
    3. 'if' (adapté à ' if') → logprob: -3.49367356300354
    4. 'h' → logprob: -4.993673801422119
    5. '0' → logprob: -4.993673801422119
    6. 'for' → logprob: -5.243673801422119
    7. ' h' → logprob: -5.493673801422119
    8. ' if' → logprob: -5.493673801422119
    9. '       ' → logprob: -5.868673801422119
    10. 'i' → logprob: -6.118673801422119

Token 145: ' not' (ID: 625)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4781588017940521
    2. ' j' → logprob: -0.9781588315963745
    3. 'R' → logprob: -6.228158950805664
    4. ' R' → logprob: -6.478158950805664
    5. '(j' → logprob: -8.728158950805664
    6. ' not' → logprob: -9.103158950805664
    7. '	j' → logprob: -10.103158950805664
    8. ' ' → logprob: -10.103158950805664
    9. '(R' → logprob: -10.603158950805664
    10. 'v' → logprob: -10.728158950805664

Token 146: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.0003528594970703
    2. ' R' → logprob: -1.3753528594970703
    3. 'R' → logprob: -1.6253528594970703
    4. 'j' → logprob: -1.7503528594970703
    5. ' v' → logprob: -6.37535285949707
    6. ' pq' → logprob: -6.62535285949707
    7. ' (' → logprob: -7.00035285949707
    8. '(j' → logprob: -7.00035285949707
    9. 'v' → logprob: -7.25035285949707
    10. '(' → logprob: -7.87535285949707

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.036341242492198944
    2. ':
' → logprob: -3.4113411903381348
    3. '+' → logprob: -7.036341190338135
    4. '==' → logprob: -7.286341190338135
    5. '   ' → logprob: -8.536341667175293
    6. '0' → logprob: -8.786341667175293
    7. 'else' → logprob: -9.036341667175293
    8. ' and' → logprob: -9.286341667175293
    9. ' :' → logprob: -9.411341667175293
    10. '=' → logprob: -9.536341667175293

Token 148: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6359099745750427
    2. ':
' → logprob: -0.7609099745750427
    3. ' and' → logprob: -6.2609100341796875
    4. '           ' → logprob: -7.6359100341796875
    5. '   ' → logprob: -8.010910034179688
    6. ':
' → logprob: -8.760910034179688
    7. 'and' → logprob: -9.385910034179688
    8. ':

' → logprob: -9.385910034179688
    9. '       ' → logprob: -9.510910034179688
    10. '+' → logprob: -10.510910034179688

Token 149: ' snap' (ID: 17567)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.0371839664876461
    2. 'h' → logprob: -3.912184000015259
    3. ' h' → logprob: -4.16218376159668
    4. 'j' → logprob: -8.66218376159668
    5. ' j' → logprob: -8.78718376159668
    6. 'jq' → logprob: -9.16218376159668
    7. '   ' → logprob: -9.16218376159668
    8. 'hj' → logprob: -9.66218376159668
    9. ' R' → logprob: -10.03718376159668
    10. ' v' → logprob: -10.16218376159668

Token 150: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8088986873626709
    2. ' =' → logprob: -1.058898687362671
    3. '.append' → logprob: -2.058898687362671
    4. ',' → logprob: -2.808898687362671
    5. '[' → logprob: -5.05889892578125
    6. ' +=' → logprob: -5.18389892578125
    7. '+=' → logprob: -6.05889892578125
    8. ' ,' → logprob: -6.93389892578125
    9. ':' → logprob: -6.93389892578125
    10. ' ' → logprob: -7.18389892578125

Token 151: ' [(' (ID: 43900)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5029051899909973
    2. '[(' → logprob: -1.1279051303863525
    3. '[v' → logprob: -3.2529051303863525
    4. '[i' → logprob: -3.7529051303863525
    5. '[j' → logprob: -5.252905368804932
    6. ' [' → logprob: -6.502905368804932
    7. '[p' → logprob: -7.127905368804932
    8. ' [(' → logprob: -7.252905368804932
    9. '[P' → logprob: -8.377904891967773
    10. '[val' → logprob: -8.502904891967773

Token 152: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3064156174659729
    2. '1' → logprob: -1.9314155578613281
    3. 'i' → logprob: -3.056415557861328
    4. '0' → logprob: -3.681415557861328
    5. 'R' → logprob: -4.431415557861328
    6. ' v' → logprob: -4.931415557861328
    7. '(' → logprob: -5.181415557861328
    8. 'j' → logprob: -5.556415557861328
    9. '(v' → logprob: -5.556415557861328
    10. '(i' → logprob: -5.806415557861328

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006548931705765426
    2. ' ,' → logprob: -7.750654697418213
    3. ',j' → logprob: -9.125655174255371
    4. '+' → logprob: -10.125655174255371
    5. ',i' → logprob: -10.375655174255371
    6. ' +' → logprob: -10.875655174255371
    7. '-' → logprob: -12.750655174255371
    8. ' ' → logprob: -12.750655174255371
    9. '1' → logprob: -13.250655174255371
    10. ',n' → logprob: -13.250655174255371

Token 154: ' j' (ID: 441)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010673186741769314
    2. ' ' → logprob: -5.0106730461120605
    3. 'j' → logprob: -5.8856730461120605
    4. '0' → logprob: -7.0106730461120605
    5. ' j' → logprob: -8.510673522949219
    6. '   ' → logprob: -10.260673522949219
    7. 'v' → logprob: -11.885673522949219
    8. '  ' → logprob: -12.573173522949219
    9. ')' → logprob: -12.823173522949219
    10. '    ' → logprob: -13.135673522949219

Token 155: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04293592646718025
    2. ' +' → logprob: -3.792935848236084
    3. ')]' → logprob: -4.042935848236084
    4. '1' → logprob: -7.042935848236084
    5. ' ^' → logprob: -7.917935848236084
    6. '^' → logprob: -8.167936325073242
    7. '),' → logprob: -8.917936325073242
    8. '-' → logprob: -9.292936325073242
    9. ',' → logprob: -9.417936325073242
    10. ')' → logprob: -10.542936325073242

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004258138593286276
    2. ')]' → logprob: -5.629258155822754
    3. ')' → logprob: -7.879258155822754
    4. '0' → logprob: -8.379258155822754
    5. ' ' → logprob: -10.254258155822754
    6. ')])' → logprob: -12.254258155822754
    7. ')]
' → logprob: -12.879258155822754
    8. '')]' → logprob: -13.379258155822754
    9. ')],' → logprob: -13.504258155822754
    10. ' )' → logprob: -13.504258155822754

Token 157: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0013909504050388932
    2. ' )' → logprob: -6.8763909339904785
    3. ')]
' → logprob: -8.126391410827637
    4. '),' → logprob: -10.876391410827637
    5. ',' → logprob: -11.251391410827637
    6. '   ' → logprob: -11.626391410827637
    7. '       ' → logprob: -12.126391410827637
    8. ')' → logprob: -12.751391410827637
    9. ' ' → logprob: -13.251391410827637
    10. '           ' → logprob: -13.376391410827637

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.54533451795578
    2. ' for' → logprob: -0.92033451795578
    3. '       ' → logprob: -4.545334339141846
    4. 'hq' → logprob: -5.170334339141846
    5. ' h' → logprob: -6.295334339141846
    6. 'for' → logprob: -6.545334339141846
    7. '
' → logprob: -6.545334339141846
    8. ' while' → logprob: -8.545334815979004
    9. '    
' → logprob: -8.670334815979004
    10. '           ' → logprob: -8.670334815979004

Token 159: ' h' (ID: 312)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8572593927383423
    2. 'for' → logprob: -0.9822593927383423
    3. '   ' → logprob: -1.6072593927383423
    4. 'hq' → logprob: -8.482259750366211
    5. '       ' → logprob: -8.732259750366211
    6. ' ' → logprob: -9.607259750366211
    7. 'if' → logprob: -9.732259750366211
    8. 'pq' → logprob: -9.857259750366211
    9. ' if' → logprob: -10.107259750366211
    10. ' pq' → logprob: -10.107259750366211

Token 160: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00025108797126449645
    2. 'for' → logprob: -8.375250816345215
    3. 'Q' → logprob: -12.000250816345215
    4. ' for' → logprob: -12.500250816345215
    5. '.extend' → logprob: -13.250250816345215
    6. 'elif' → logprob: -13.375250816345215
    7. '       ' → logprob: -13.625250816345215
    8. '.for' → logprob: -14.000250816345215
    9. '   ' → logprob: -14.250250816345215
    10. '[' → logprob: -14.375250816345215

Token 161: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.019927402958273888
    2. '.heap' → logprob: -4.269927501678467
    3. 'ush' → logprob: -6.394927501678467
    4. 'push' → logprob: -6.644927501678467
    5. 'he' → logprob: -6.769927501678467
    6. 'p' → logprob: -7.519927501678467
    7. 'q' → logprob: -8.019927024841309
    8. 'heap' → logprob: -8.019927024841309
    9. '.' → logprob: -8.769927024841309
    10. 'e' → logprob: -9.394927024841309

Token 162: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.696889623621246e-06
    2. 'pp' → logprob: -13.00000286102295
    3. 'ap' → logprob: -15.00000286102295
    4. 'q' → logprob: -18.125001907348633
    5. ' app' → logprob: -18.250001907348633
    6. 'a' → logprob: -18.500001907348633
    7. '(app' → logprob: -18.625001907348633
    8. '_app' → logprob: -18.750001907348633
    9. 'appen' → logprob: -18.875001907348633
    10. 'p' → logprob: -19.875001907348633

Token 163: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.575995147228241
    2. 'op' → logprob: -0.825995147228241
    3. 'push' → logprob: -10.700995445251465
    4. 'p' → logprob: -11.575995445251465
    5. 'app' → logprob: -11.700995445251465
    6. 'pop' → logprob: -12.200995445251465
    7. 'ap' → logprob: -13.075995445251465
    8. '```' → logprob: -13.325995445251465
    9. 'e' → logprob: -13.825995445251465
    10. 'q' → logprob: -13.950995445251465

Token 164: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.1008713702030946e-06
    2. 'pq' → logprob: -13.750001907348633
    3. '(' → logprob: -13.875001907348633
    4. ' (' → logprob: -16.750001907348633
    5. 'p' → logprob: -17.250001907348633
    6. ' pq' → logprob: -18.375001907348633
    7. '(q' → logprob: -18.375001907348633
    8. '```' → logprob: -19.250001907348633
    9. ' ' → logprob: -19.625001907348633
    10. '(
' → logprob: -19.875001907348633

Token 165: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0008251105318777263
    2. '(p' → logprob: -7.250824928283691
    3. '(q' → logprob: -9.625824928283691
    4. 'pq' → logprob: -11.500824928283691
    5. 'p' → logprob: -11.750824928283691
    6. 'aq' → logprob: -12.375824928283691
    7. '(' → logprob: -13.000824928283691
    8. 'o' → logprob: -13.188324928283691
    9. 'y' → logprob: -13.375824928283691
    10. 'i' → logprob: -13.500824928283691

Token 166: ',' (ID: 11)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.6480510234832764
    2. '(A' → logprob: -1.1480510234832764
    3. '(' → logprob: -1.8980510234832764
    4. '(p' → logprob: -4.8980512619018555
    5. '([' → logprob: -6.2730512619018555
    6. '(P' → logprob: -8.648051261901855
    7. ' (' → logprob: -9.773051261901855
    8. ',' → logprob: -9.898051261901855
    9. '(n' → logprob: -9.898051261901855
    10. '(a' → logprob: -10.773051261901855

Token 167: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.008270340971648693
    2. '(' → logprob: -5.133270263671875
    3. ' (' → logprob: -6.133270263671875
    4. '(i' → logprob: -9.883270263671875
    5. '(a' → logprob: -9.883270263671875
    6. '(n' → logprob: -10.383270263671875
    7. '((' → logprob: -11.508270263671875
    8. '[A' → logprob: -11.883270263671875
    9. '(x' → logprob: -12.633270263671875
    10. '   ' → logprob: -12.633270263671875

Token 168: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00040421701851300895
    2. ' A' → logprob: -7.875404357910156
    3. 'i' → logprob: -11.500404357910156
    4. 'n' → logprob: -12.250404357910156
    5. 'P' → logprob: -12.375404357910156
    6. '0' → logprob: -13.500404357910156
    7. '(A' → logprob: -13.625404357910156
    8. '   ' → logprob: -14.000404357910156
    9. ')' → logprob: -14.875404357910156
    10. ' ' → logprob: -15.000404357910156

Token 169: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -14.375001907348633
    3. ')' → logprob: -14.625001907348633
    4. 'i' → logprob: -15.500001907348633
    5. '[I' → logprob: -15.625001907348633
    6. '[
' → logprob: -16.625001907348633
    7. ')[' → logprob: -17.000001907348633
    8. ' [' → logprob: -17.500001907348633
    9. '(i' → logprob: -18.125001907348633
    10. ')i' → logprob: -18.375001907348633

Token 170: '],' (ID: 2155)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03896121308207512
    2. ',' → logprob: -3.288961172103882
    3. '],' → logprob: -8.038961410522461
    4. '[' → logprob: -8.163961410522461
    5. ',i' → logprob: -8.288961410522461
    6. ' ,' → logprob: -10.538961410522461
    7. '][' → logprob: -11.288961410522461
    8. 'i' → logprob: -11.538961410522461
    9. '),' → logprob: -12.788961410522461
    10. '[
' → logprob: -13.538961410522461

Token 171: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2560056746006012
    2. '1' → logprob: -1.5060056447982788
    3. ' ' → logprob: -5.506005764007568
    4. '   ' → logprob: -12.63100528717041
    5. '  ' → logprob: -14.75600528717041
    6. ')' → logprob: -15.38100528717041
    7. '    ' → logprob: -15.44350528717041
    8. ' ' → logprob: -15.44350528717041
    9. '[' → logprob: -15.50600528717041
    10. '(' → logprob: -15.50600528717041

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013130230829119682
    2. '1' → logprob: -4.388130187988281
    3. ' ' → logprob: -7.388130187988281
    4. '   ' → logprob: -13.763130187988281
    5. '  ' → logprob: -15.763130187988281
    6. 'int' → logprob: -16.63813018798828
    7. 'not' → logprob: -16.76313018798828
    8. '    ' → logprob: -16.88813018798828
    9. '01' → logprob: -16.95063018798828
    10. '(' → logprob: -16.95063018798828

Token 173: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.009924777783453465
    2. ')' → logprob: -4.63492488861084
    3. '))
' → logprob: -8.75992488861084
    4. ' ))' → logprob: -12.00992488861084
    5. ')
' → logprob: -12.88492488861084
    6. ')))' → logprob: -13.13492488861084
    7. ' )' → logprob: -15.00992488861084
    8. '))

' → logprob: -15.25992488861084
    9. '));' → logprob: -15.38492488861084
    10. '),' → logprob: -15.75992488861084

Token 174: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9570773243904114
    2. ' for' → logprob: -1.2070772647857666
    3. '<|end|>' → logprob: -1.8320772647857666
    4. ')' → logprob: -1.9570772647857666
    5. ' while' → logprob: -5.207077503204346
    6. 'while' → logprob: -5.832077503204346
    7. '   ' → logprob: -6.082077503204346
    8. ' )' → logprob: -7.332077503204346
    9. ']' → logprob: -7.457077503204346
    10. ' ' → logprob: -7.457077503204346

Token 175: ' pq' (ID: 65424)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013100019423291087
    2. ' for' → logprob: -6.751309871673584
    3. '   ' → logprob: -9.251310348510742
    4. 'while' → logprob: -10.126310348510742
    5. '
' → logprob: -13.751310348510742
    6. '	for' → logprob: -14.001310348510742
    7. '    
' → logprob: -14.876310348510742
    8. 'if' → logprob: -15.001310348510742
    9. 'hq' → logprob: -15.126310348510742
    10. ' while' → logprob: -16.001310348510742

Token 176: ' +=' (ID: 2757)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.43360358476638794
    2. '.append' → logprob: -1.1836035251617432
    3. ' +=' → logprob: -3.683603525161743
    4. '+=' → logprob: -4.308603763580322
    5. '+' → logprob: -5.808603763580322
    6. '[-' → logprob: -6.308603763580322
    7. '.' → logprob: -7.308603763580322
    8. '=' → logprob: -7.558603763580322
    9. '.sort' → logprob: -8.308603286743164
    10. '.pop' → logprob: -9.058603286743164

Token 177: ' snap' (ID: 17567)
  Prédit: 'snap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'snap' → logprob: -0.6332771182060242
    2. ' snap' → logprob: -0.7582771182060242
    3. '[s' → logprob: -8.13327693939209
    4. '[(' → logprob: -8.38327693939209
    5. ' [(' → logprob: -9.38327693939209
    6. '(s' → logprob: -10.50827693939209
    7. ' ' → logprob: -11.63327693939209
    8. '[' → logprob: -11.63327693939209
    9. 'sn' → logprob: -12.13327693939209
    10. ' [' → logprob: -12.25827693939209

Token 178: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 179: 'L' (ID: 43)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3761763870716095
    2. '=' → logprob: -1.376176357269287
    3. '.append' → logprob: -4.501176357269287
    4. '[:]' → logprob: -4.626176357269287
    5. '[i' → logprob: -5.251176357269287
    6. '[' → logprob: -5.251176357269287
    7. '.' → logprob: -5.501176357269287
    8. 'AST' → logprob: -5.751176357269287
    9. '=[]' → logprob: -6.001176357269287
    10. 'eft' → logprob: -6.001176357269287

Token 181: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5256478190422058
    2. '[n' → logprob: -1.2756478786468506
    3. ' [' → logprob: -3.0256478786468506
    4. '[-' → logprob: -3.9006478786468506
    5. '[P' → logprob: -3.9006478786468506
    6. '0' → logprob: -4.1506476402282715
    7. '[A' → logprob: -4.5256476402282715
    8. 'n' → logprob: -5.4006476402282715
    9. '[i' → logprob: -6.0256476402282715
    10. '[]' → logprob: -6.5256476402282715

Token 182: '-' (ID: 12)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.032913271337747574
    2. '0' → logprob: -3.9079132080078125
    3. 'None' → logprob: -5.1579132080078125
    4. 'i' → logprob: -6.6579132080078125
    5. '[n' → logprob: -6.6579132080078125
    6. '-' → logprob: -6.7829132080078125
    7. '[i' → logprob: -7.1579132080078125
    8. '[' → logprob: -7.6579132080078125
    9. ' n' → logprob: -7.6579132080078125
    10. 'False' → logprob: -8.532913208007812

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038447652012109756
    2. 'n' → logprob: -3.288447618484497
    3. '(n' → logprob: -8.913447380065918
    4. '(' → logprob: -9.288447380065918
    5. '2' → logprob: -10.413447380065918
    6. '[n' → logprob: -10.663447380065918
    7. '[' → logprob: -10.788447380065918
    8. 'A' → logprob: -11.038447380065918
    9. ' ' → logprob: -11.163447380065918
    10. ' n' → logprob: -11.538447380065918

Token 184: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0402943380177021
    2. 'for' → logprob: -3.9152944087982178
    3. ' for' → logprob: -4.290294170379639
    4. ',-' → logprob: -5.790294170379639
    5. ']*' → logprob: -6.665294170379639
    6. ']' → logprob: -7.165294170379639
    7. ',n' → logprob: -7.415294170379639
    8. ' ,' → logprob: -9.915294647216797
    9. '-' → logprob: -10.915294647216797
    10. '	for' → logprob: -11.165294647216797

Token 185: ' not' (ID: 625)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3724709451198578
    2. 'j' → logprob: -1.9974709749221802
    3. '_' → logprob: -2.1224708557128906
    4. 'i' → logprob: -3.9974708557128906
    5. 'val' → logprob: -5.247470855712891
    6. 'A' → logprob: -5.372470855712891
    7. 'not' → logprob: -5.497470855712891
    8. 'a' → logprob: -5.872470855712891
    9. 'v' → logprob: -5.997470855712891
    10. 'c' → logprob: -5.997470855712891

Token 186: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4177125096321106
    2. 'x' → logprob: -1.9177124500274658
    3. 'i' → logprob: -2.542712450027466
    4. ' j' → logprob: -2.792712450027466
    5. 'R' → logprob: -4.542712688446045
    6. 'A' → logprob: -4.917712688446045
    7. 'P' → logprob: -5.042712688446045
    8. ' x' → logprob: -5.167712688446045
    9. ' i' → logprob: -5.542712688446045
    10. 'val' → logprob: -5.917712688446045

Token 187: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.47432178258895874
    2. 'else' → logprob: -0.9743217825889587
    3. '==' → logprob: -8.849321365356445
    4. ' ' → logprob: -10.224321365356445
    5. '   ' → logprob: -11.224321365356445
    6. 'in' → logprob: -11.724321365356445
    7. 'for' → logprob: -12.099321365356445
    8. '  ' → logprob: -12.224321365356445
    9. '    ' → logprob: -12.224321365356445
    10. '        ' → logprob: -12.349321365356445

Token 188: ' -' (ID: 533)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6334285140037537
    2. '0' → logprob: -1.7584285736083984
    3. 'i' → logprob: -2.6334285736083984
    4. '-' → logprob: -2.7584285736083984
    5. ' n' → logprob: -2.7584285736083984
    6. 'R' → logprob: -3.3834285736083984
    7. ' ' → logprob: -4.633428573608398
    8. 'v' → logprob: -4.758428573608398
    9. ' i' → logprob: -5.133428573608398
    10. 'A' → logprob: -5.258428573608398

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028108324855566025
    2. 'n' → logprob: -3.9031083583831787
    3. 'R' → logprob: -6.1531081199646
    4. '(n' → logprob: -6.4031081199646
    5. '(' → logprob: -6.9031081199646
    6. 'i' → logprob: -7.5281081199646
    7. 'A' → logprob: -7.9031081199646
    8. '(R' → logprob: -8.153108596801758
    9. '(P' → logprob: -8.403108596801758
    10. '(i' → logprob: -8.403108596801758

Token 190: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.202654629945755
    2. ' for' → logprob: -1.7026546001434326
    3. '[i' → logprob: -8.077654838562012
    4. 'if' → logprob: -8.327654838562012
    5. ' ' → logprob: -8.702654838562012
    6. ']' → logprob: -8.827654838562012
    7. '   ' → logprob: -8.827654838562012
    8. '[' → logprob: -9.577654838562012
    9. '-' → logprob: -9.827654838562012
    10. '  ' → logprob: -10.952654838562012

Token 191: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0036412477493286
    2. 'range' → logprob: -1.2536412477493286
    3. 'i' → logprob: -2.003641128540039
    4. ' range' → logprob: -2.128641128540039
    5. ' j' → logprob: -3.003641128540039
    6. '_' → logprob: -4.003641128540039
    7. ' i' → logprob: -4.628641128540039
    8. ' _' → logprob: -5.128641128540039
    9. '_j' → logprob: -5.503641128540039
    10. '_i' → logprob: -5.878641128540039

Token 192: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31894028186798096
    2. 'in' → logprob: -1.318940281867981
    3. 'range' → logprob: -5.318940162658691
    4. ' range' → logprob: -7.193940162658691
    5. ' ' → logprob: -12.443940162658691
    6. ',' → logprob: -12.693940162658691
    7. '[' → logprob: -13.318940162658691
    8. ']' → logprob: -13.568940162658691
    9. '   ' → logprob: -14.818940162658691
    10. '0' → logprob: -15.318940162658691

Token 193: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10023859143257141
    2. ' range' → logprob: -2.350238561630249
    3. '[' → logprob: -10.475238800048828
    4. 'row' → logprob: -13.975238800048828
    5. 'r' → logprob: -13.975238800048828
    6. 'R' → logprob: -14.350238800048828
    7. 'A' → logprob: -14.725238800048828
    8. ' ' → logprob: -15.725238800048828
    9. '(range' → logprob: -15.725238800048828
    10. ' [' → logprob: -15.975238800048828

Token 194: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0060540554113686085
    2. '(n' → logprob: -5.256053924560547
    3. '2' → logprob: -7.131053924560547
    4. '(len' → logprob: -11.256053924560547
    5. 'n' → logprob: -12.256053924560547
    6. ' (' → logprob: -14.131053924560547
    7. '((' → logprob: -14.756053924560547
    8. 'len' → logprob: -15.756053924560547
    9. '(
' → logprob: -15.756053924560547
    10. '   ' → logprob: -16.131053924560547

Token 195: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -11.500021934509277
    3. '   ' → logprob: -12.625021934509277
    4. '1' → logprob: -12.875021934509277
    5. 'n' → logprob: -13.000021934509277
    6. '3' → logprob: -13.875021934509277
    7. '(n' → logprob: -14.125021934509277
    8. '(' → logprob: -14.250021934509277
    9. 'len' → logprob: -15.250021934509277
    10. '0' → logprob: -15.500021934509277

Token 196: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3179042935371399
    2. ']' → logprob: -1.3179042339324951
    3. ']]' → logprob: -5.442904472351074
    4. ')' → logprob: -8.567904472351074
    5. ' ]' → logprob: -9.442904472351074
    6. ']]]' → logprob: -11.442904472351074
    7. '}]' → logprob: -12.192904472351074
    8. ' ]]' → logprob: -12.317904472351074
    9. '])]' → logprob: -12.442904472351074
    10. '])' → logprob: -12.567904472351074

Token 197: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.061997491866350174
    2. 'for' → logprob: -2.811997413635254
    3. '   ' → logprob: -10.686997413635254
    4. ']' → logprob: -12.561997413635254
    5. '	for' → logprob: -13.436997413635254
    6. ' ' → logprob: -14.186997413635254
    7. '    ' → logprob: -14.686997413635254
    8. ' in' → logprob: -14.936997413635254
    9. '  ' → logprob: -15.436997413635254
    10. ')' → logprob: -16.06199836730957

Token 198: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1724185347557068
    2. 'range' → logprob: -1.9224185943603516
    3. '_' → logprob: -4.422418594360352
    4. ' _' → logprob: -9.547418594360352
    5. '_range' → logprob: -10.922418594360352
    6. 'i' → logprob: -11.047418594360352
    7. 'n' → logprob: -12.297418594360352
    8. ' i' → logprob: -13.422418594360352
    9. ' in' → logprob: -14.297418594360352
    10. 'in' → logprob: -14.672418594360352

Token 199: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08395268023014069
    2. 'in' → logprob: -3.0839526653289795
    3. ' range' → logprob: -3.8339526653289795
    4. ' in' → logprob: -4.333952903747559
    5. '(range' → logprob: -12.583952903747559
    6. ' ' → logprob: -13.708952903747559
    7. '_' → logprob: -13.833952903747559
    8. 'n' → logprob: -14.583952903747559
    9. '[' → logprob: -14.708952903747559
    10. 'ange' → logprob: -14.833952903747559

Token 200: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141470432281494
    2. ' range' → logprob: -1.701414704322815
    3. ' ' → logprob: -14.576415061950684
    4. '(range' → logprob: -14.826415061950684
    5. '   ' → logprob: -15.951415061950684
    6. '_' → logprob: -16.076414108276367
    7. '[' → logprob: -16.451414108276367
    8. ' ' → logprob: -16.826414108276367
    9. '  ' → logprob: -16.951414108276367
    10. 'r' → logprob: -17.576414108276367

Token 201: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.019356384873390198
    2. 'n' → logprob: -4.0193562507629395
    3. ' n' → logprob: -6.7693562507629395
    4. '(' → logprob: -9.894356727600098
    5. ' (' → logprob: -12.144356727600098
    6. 'range' → logprob: -14.644356727600098
    7. ' range' → logprob: -15.019356727600098
    8. '	n' → logprob: -15.769356727600098
    9. ')n' → logprob: -15.894356727600098
    10. ',n' → logprob: -16.01935577392578

Token 202: ')]

' (ID: 56882)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.576002299785614
    2. ')]' → logprob: -0.826002299785614
    3. ')' → logprob: -10.07600212097168
    4. ']
' → logprob: -11.57600212097168
    5. '])' → logprob: -12.70100212097168
    6. ' ]' → logprob: -12.82600212097168
    7. '}]' → logprob: -13.45100212097168
    8. ']]' → logprob: -13.70100212097168
    9. ')]
' → logprob: -13.95100212097168
    10. '])]' → logprob: -14.20100212097168

Token 203: 'pq' (ID: 124147)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003459540894255042
    2. 'last' → logprob: -6.753459453582764
    3. 'stack' → logprob: -7.253459453582764
    4. 'pq' → logprob: -7.503459453582764
    5. 'prev' → logprob: -8.003459930419922
    6. 'pos' → logprob: -8.753459930419922
    7. 'import' → logprob: -9.128459930419922
    8. 'from' → logprob: -10.003459930419922
    9. 'rev' → logprob: -10.003459930419922
    10. '#' → logprob: -10.003459930419922

Token 204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09426945447921753
    2. '=' → logprob: -2.8442695140838623
    3. '=[]' → logprob: -3.5942695140838623
    4. '.clear' → logprob: -5.594269275665283
    5. '=[]
' → logprob: -7.719269275665283
    6. '[:]' → logprob: -9.719269752502441
    7. '.reverse' → logprob: -11.469269752502441
    8. '.sort' → logprob: -11.719269752502441
    9. '=[' → logprob: -11.719269752502441
    10. '[::-' → logprob: -11.969269752502441

Token 205: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.20164896547794342
    2. '[]
' → logprob: -1.7016489505767822
    3. '[-' → logprob: -9.451648712158203
    4. ' []' → logprob: -9.451648712158203
    5. '[(' → logprob: -10.326648712158203
    6. '[' → logprob: -10.826648712158203
    7. ' []
' → logprob: -11.326648712158203
    8. '[]

' → logprob: -11.576648712158203
    9. 'deque' → logprob: -13.451648712158203
    10. '[
' → logprob: -13.451648712158203

Token 206: 'hq' (ID: 156668)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011291609145700932
    2. 'import' → logprob: -4.51129150390625
    3. ' for' → logprob: -9.13629150390625
    4. 'from' → logprob: -10.26129150390625
    5. '[' → logprob: -10.51129150390625
    6. '[-' → logprob: -10.88629150390625
    7. '[]' → logprob: -11.01129150390625
    8. '[
' → logprob: -11.38629150390625
    9. '[::-' → logprob: -11.51129150390625
    10. '[(' → logprob: -12.76129150390625

Token 207: '.heap' (ID: 177287)
  Prédit: '.he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0019756227266043425
    2. 'he' → logprob: -7.0019755363464355
    3. '.heap' → logprob: -7.0019755363464355
    4. 'heap' → logprob: -9.501976013183594
    5. 'import' → logprob: -9.626976013183594
    6. '```' → logprob: -12.751976013183594
    7. '.' → logprob: -12.876976013183594
    8. ' .' → logprob: -13.126976013183594
    9. '_he' → logprob: -13.751976013183594
    10. '=' → logprob: -14.001976013183594

Token 208: 'ify' (ID: 1985)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.38854682445526123
    2. 'ify' → logprob: -1.1385468244552612
    3. 'q' → logprob: -7.263546943664551
    4. 'ush' → logprob: -7.388546943664551
    5. 'replace' → logprob: -8.51354694366455
    6. 'p' → logprob: -9.63854694366455
    7. '_push' → logprob: -10.76354694366455
    8. 'lify' → logprob: -11.13854694366455
    9. 'fy' → logprob: -11.63854694366455
    10. '```' → logprob: -12.01354694366455

Token 209: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.3782830137643032e-05
    2. '(' → logprob: -11.25001335144043
    3. ' (' → logprob: -15.50001335144043
    4. 'p' → logprob: -16.25001335144043
    5. '(q' → logprob: -16.25001335144043
    6. '([]' → logprob: -16.25001335144043
    7. 's' → logprob: -17.25001335144043
    8. '()' → logprob: -17.37501335144043
    9. '(
' → logprob: -17.87501335144043
    10. 'pq' → logprob: -18.00001335144043

Token 210: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -15.750000953674316
    3. '(q' → logprob: -16.375
    4. 'pq' → logprob: -16.5
    5. 'Q' → logprob: -16.625
    6. '	q' → logprob: -17.125
    7. ' q' → logprob: -17.25
    8. 'sq' → logprob: -17.25
    9. '[q' → logprob: -17.5
    10. 'p' → logprob: -17.625

Token 211: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7274516820907593
    2. ')' → logprob: -0.9774516820907593
    3. 'for' → logprob: -1.9774516820907593
    4. ')

' → logprob: -6.352451801300049
    5. '
' → logprob: -8.22745132446289
    6. ' for' → logprob: -8.85245132446289
    7. ')L' → logprob: -12.22745132446289
    8. 'while' → logprob: -12.85245132446289
    9. ' )
' → logprob: -12.85245132446289
    10. ')
' → logprob: -13.22745132446289

Token 212: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.610702363715973e-06
    2. ' for' → logprob: -12.125009536743164
    3. '#' → logprob: -12.750009536743164
    4. ')' → logprob: -15.125009536743164
    5. 'import' → logprob: -15.250009536743164
    6. 'from' → logprob: -15.625009536743164
    7. '<|end|>' → logprob: -16.000009536743164
    8. '```' → logprob: -16.375009536743164
    9. 'For' → logprob: -16.875009536743164
    10. '[::-' → logprob: -17.000009536743164

Token 213: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14384499192237854
    2. ' i' → logprob: -2.0188450813293457
    3. 'range' → logprob: -7.643845081329346
    4. ' range' → logprob: -8.018844604492188
    5. 're' → logprob: -9.393844604492188
    6. ' reversed' → logprob: -9.643844604492188
    7. '(i' → logprob: -9.768844604492188
    8. 'n' → logprob: -10.143844604492188
    9. 'rev' → logprob: -10.518844604492188
    10. 'j' → logprob: -10.893844604492188

Token 214: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5233976244926453
    2. ' in' → logprob: -0.8983976244926453
    3. ',' → logprob: -8.898397445678711
    4. 'n' → logprob: -9.398397445678711
    5. '   ' → logprob: -11.023397445678711
    6. '(n' → logprob: -11.273397445678711
    7. ',n' → logprob: -11.773397445678711
    8. 'range' → logprob: -12.148397445678711
    9. ' ' → logprob: -12.648397445678711
    10. 'import' → logprob: -13.773397445678711

Token 215: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03315708786249161
    2. ' range' → logprob: -3.5331571102142334
    3. 're' → logprob: -5.783156871795654
    4. 'P' → logprob: -8.283157348632812
    5. 'n' → logprob: -10.283157348632812
    6. ' reversed' → logprob: -11.283157348632812
    7. '(range' → logprob: -12.408157348632812
    8. ' P' → logprob: -12.533157348632812
    9. 'reverse' → logprob: -12.783157348632812
    10. 'A' → logprob: -12.908157348632812

Token 216: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.012324919924139977
    2. '(range' → logprob: -4.512324810028076
    3. 'range' → logprob: -7.387324810028076
    4. 'n' → logprob: -8.012325286865234
    5. '(re' → logprob: -8.637325286865234
    6. '(' → logprob: -9.137325286865234
    7. '(P' → logprob: -11.012325286865234
    8. '((' → logprob: -12.512325286865234
    9. ' range' → logprob: -12.512325286865234
    10. 're' → logprob: -12.512325286865234

Token 217: '-' (ID: 12)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.529735267162323
    2. '-' → logprob: -0.904735267162323
    3. '):' → logprob: -5.904735088348389
    4. ' -' → logprob: -6.029735088348389
    5. '):
' → logprob: -6.654735088348389
    6. '   ' → logprob: -9.904735565185547
    7. ',' → logprob: -10.154735565185547
    8. ')' → logprob: -10.779735565185547
    9. ' ):
' → logprob: -11.279735565185547
    10. 'n' → logprob: -11.904735565185547

Token 218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002678920282050967
    2. '2' → logprob: -8.62526798248291
    3. ' ' → logprob: -9.37526798248291
    4. '-' → logprob: -12.87526798248291
    5. ' -' → logprob: -15.12526798248291
    6. '   ' → logprob: -15.37526798248291
    7. '
' → logprob: -16.125267028808594
    8. ',' → logprob: -16.187767028808594
    9. '0' → logprob: -16.937767028808594
    10. '  ' → logprob: -17.000267028808594

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013644045684486628
    2. ',-' → logprob: -6.626364231109619
    3. ' ,' → logprob: -10.251364707946777
    4. '-' → logprob: -13.501364707946777
    5. ' ,-' → logprob: -13.876364707946777
    6. '   ' → logprob: -15.001364707946777
    7. ' -' → logprob: -15.876364707946777
    8. ',
' → logprob: -16.50136375427246
    9. '```' → logprob: -17.12636375427246
    10. ',n' → logprob: -17.62636375427246

Token 220: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.53050296427682e-05
    2. ' -' → logprob: -9.37508487701416
    3. '   ' → logprob: -15.00008487701416
    4. ' ' → logprob: -17.375085830688477
    5. '  ' → logprob: -18.375085830688477
    6. '0' → logprob: -19.375085830688477
    7. '-i' → logprob: -20.125085830688477
    8. '    ' → logprob: -20.500085830688477
    9. '
' → logprob: -20.750085830688477
    10. '```' → logprob: -21.125085830688477

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.250000953674316
    3. '2' → logprob: -16.0
    4. '-' → logprob: -16.9375
    5. '   ' → logprob: -17.25
    6. '```' → logprob: -17.75
    7. 'i' → logprob: -18.0625
    8. '
' → logprob: -18.25
    9. '１' → logprob: -19.125
    10. '3' → logprob: -19.125

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2256910800933838
    2. '-' → logprob: -1.6006910800933838
    3. ',-' → logprob: -8.600690841674805
    4. ' -' → logprob: -9.975690841674805
    5. ' ,' → logprob: -10.350690841674805
    6. '1' → logprob: -11.975690841674805
    7. '   ' → logprob: -12.475690841674805
    8. '```' → logprob: -13.225690841674805
    9. '-,' → logprob: -13.475690841674805
    10. '0' → logprob: -13.725690841674805

Token 223: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001238004770129919
    2. ' -' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.500123977661133
    4. ' ' → logprob: -15.875123977661133
    5. '```' → logprob: -16.875123977661133
    6. '  ' → logprob: -18.125123977661133
    7. '	' → logprob: -20.125123977661133
    8. ')' → logprob: -20.125123977661133
    9. '-i' → logprob: -20.375123977661133
    10. '−' → logprob: -20.625123977661133

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -17.125001907348633
    4. '2' → logprob: -18.125001907348633
    5. ')' → logprob: -19.125001907348633
    6. '
' → logprob: -20.125001907348633
    7. '  ' → logprob: -20.125001907348633
    8. 'i' → logprob: -20.437501907348633
    9. ',' → logprob: -20.500001907348633
    10. '0' → logprob: -20.562501907348633

Token 225: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4033382534980774
    2. '):' → logprob: -1.1533381938934326
    3. '-' → logprob: -4.153338432312012
    4. '):
' → logprob: -7.653338432312012
    5. ':' → logprob: -9.653338432312012
    6. ')' → logprob: -11.528338432312012
    7. ' -' → logprob: -11.778338432312012
    8. '   ' → logprob: -11.903338432312012
    9. '):

' → logprob: -12.028338432312012
    10. '```' → logprob: -12.028338432312012

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0445127372804563e-05
    2. 'snap' → logprob: -12.00001049041748
    3. ' snap' → logprob: -13.25001049041748
    4. '	s' → logprob: -13.87501049041748
    5. '       ' → logprob: -14.37501049041748
    6. 's' → logprob: -15.50001049041748
    7. '    ' → logprob: -15.62501049041748
    8. '   ' → logprob: -16.000009536743164
    9. '    
' → logprob: -16.250009536743164
    10. '  ' → logprob: -16.250009536743164

Token 227: ' e' (ID: 319)
  Prédit: 'snap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'snap' → logprob: -0.1021968275308609
    2. '   ' → logprob: -2.9771969318389893
    3. 'while' → logprob: -3.1021969318389893
    4. ' snap' → logprob: -7.47719669342041
    5. ' while' → logprob: -8.47719669342041
    6. 'v' → logprob: -8.60219669342041
    7. 'snapshot' → logprob: -9.22719669342041
    8. 'sn' → logprob: -10.22719669342041
    9. 'val' → logprob: -10.47719669342041
    10. 'for' → logprob: -11.10219669342041

Token 228: 'ureka' (ID: 86120)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11847037076950073
    2. '=' → logprob: -2.4934704303741455
    3. '=A' → logprob: -3.7434704303741455
    4. 'l' → logprob: -7.618470191955566
    5. 'val' → logprob: -7.743470191955566
    6. 'for' → logprob: -7.743470191955566
    7. 'A' → logprob: -7.743470191955566
    8. 'while' → logprob: -7.868470191955566
    9. '=P' → logprob: -7.868470191955566
    10. '   ' → logprob: -7.993470191955566

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04673505946993828
    2. '=' → logprob: -3.1717350482940674
    3. 'for' → logprob: -7.1717352867126465
    4. '=A' → logprob: -7.1717352867126465
    5. '   ' → logprob: -7.4217352867126465
    6. 'A' → logprob: -8.296734809875488
    7. ':' → logprob: -8.796734809875488
    8. 'while' → logprob: -8.921734809875488
    9. 'snap' → logprob: -9.046734809875488
    10. ' for' → logprob: -9.046734809875488

Token 230: ' []
' (ID: 8911)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.110521912574768
    2. 'A' → logprob: -1.360521912574768
    3. '(A' → logprob: -2.4855217933654785
    4. '(P' → logprob: -3.2355217933654785
    5. 'True' → logprob: -3.3605217933654785
    6. 'False' → logprob: -3.3605217933654785
    7. '[A' → logprob: -3.4855217933654785
    8. '(i' → logprob: -3.8605217933654785
    9. '[i' → logprob: -4.1105217933654785
    10. '[]' → logprob: -4.1105217933654785

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3591015040874481
    2. 'while' → logprob: -1.3591015338897705
    3. ' while' → logprob: -3.1091015338897705
    4. '	while' → logprob: -9.609101295471191
    5. '       ' → logprob: -10.484101295471191
    6. 'hq' → logprob: -10.734101295471191
    7. 'for' → logprob: -11.484101295471191
    8. 'While' → logprob: -11.734101295471191
    9. '```' → logprob: -12.234101295471191
    10. '    
' → logprob: -12.484101295471191

Token 232: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.001106755924411118
    2. ' while' → logprob: -7.2511067390441895
    3. '   ' → logprob: -7.8761067390441895
    4. 'for' → logprob: -11.876107215881348
    5. 'import' → logprob: -12.751107215881348
    6. 'v' → logprob: -12.751107215881348
    7. 'hq' → logprob: -13.751107215881348
    8. '	while' → logprob: -14.251107215881348
    9. 'val' → logprob: -14.376107215881348
    10. 'While' → logprob: -14.876107215881348

Token 233: ' pq' (ID: 65424)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.06197698414325714
    2. ' pq' → logprob: -2.811976909637451
    3. 'p' → logprob: -12.31197738647461
    4. 'len' → logprob: -13.18697738647461
    5. 'hq' → logprob: -14.06197738647461
    6. '(p' → logprob: -14.68697738647461
    7. ' len' → logprob: -14.93697738647461
    8. ' ' → logprob: -15.18697738647461
    9. '[p' → logprob: -15.31197738647461
    10. 'PQ' → logprob: -15.43697738647461

Token 234: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.07889232039451599
    2. ' and' → logprob: -2.578892230987549
    3. '[' → logprob: -13.578892707824707
    4. 'pq' → logprob: -14.578892707824707
    5. 'a' → logprob: -14.953892707824707
    6. ' ' → logprob: -16.32889175415039
    7. 'p' → logprob: -16.45389175415039
    8. ' и' → logprob: -17.07889175415039
    9. ' ' → logprob: -17.07889175415039
    10. '&&' → logprob: -17.32889175415039

Token 235: ' pq' (ID: 65424)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.04792966693639755
    2. '-p' → logprob: -3.2979297637939453
    3. ' pq' → logprob: -5.422929763793945
    4. 'hq' → logprob: -5.547929763793945
    5. '(-' → logprob: -7.547929763793945
    6. ' -' → logprob: -7.797929763793945
    7. 'p' → logprob: -8.547929763793945
    8. '(p' → logprob: -8.922929763793945
    9. '-(' → logprob: -9.297929763793945
    10. '-' → logprob: -10.047929763793945

Token 236: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.034592388459714e-06
    2. '[-' → logprob: -12.500005722045898
    3. 'and' → logprob: -13.375005722045898
    4. ' and' → logprob: -15.375005722045898
    5. '```' → logprob: -15.875005722045898
    6. 'pq' → logprob: -16.2500057220459
    7. ' [' → logprob: -16.3750057220459
    8. '0' → logprob: -17.1250057220459
    9. 'h' → logprob: -17.7500057220459
    10. 'hq' → logprob: -18.2500057220459

Token 237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011188228614628315
    2. '[' → logprob: -4.51118803024292
    3. '-' → logprob: -9.511188507080078
    4. '][' → logprob: -11.261188507080078
    5. '[-' → logprob: -11.261188507080078
    6. ' ' → logprob: -11.636188507080078
    7. '
' → logprob: -11.761188507080078
    8. '```' → logprob: -12.261188507080078
    9. 'hq' → logprob: -12.386188507080078
    10. ']' → logprob: -13.136188507080078

Token 238: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00686952518299222
    2. '][' → logprob: -5.006869316101074
    3. '()[' → logprob: -10.131869316101074
    4. ' [' → logprob: -10.381869316101074
    5. '```' → logprob: -10.631869316101074
    6. 'and' → logprob: -10.756869316101074
    7. '0' → logprob: -11.756869316101074
    8. '[][' → logprob: -11.881869316101074
    9. '>[' → logprob: -12.756869316101074
    10. ' ][' → logprob: -12.756869316101074

Token 239: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.32654589228332e-05
    2. '1' → logprob: -9.625073432922363
    3. '[' → logprob: -12.250073432922363
    4. '
' → logprob: -14.000073432922363
    5. '(' → logprob: -15.000073432922363
    6. '-' → logprob: -15.500073432922363
    7. '```' → logprob: -15.625073432922363
    8. ' ' → logprob: -15.750073432922363
    9. 'val' → logprob: -15.875073432922363
    10. '][' → logprob: -16.000072479248047

Token 240: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.19426310062408447
    2. '[' → logprob: -2.694262981414795
    3. '<' → logprob: -2.944262981414795
    4. ' >' → logprob: -3.069262981414795
    5. ' <' → logprob: -5.444262981414795
    6. '<=' → logprob: -5.694262981414795
    7. ']' → logprob: -6.569262981414795
    8. ' <=' → logprob: -8.069263458251953
    9. '>=' → logprob: -8.944263458251953
    10. '][' → logprob: -8.944263458251953

Token 241: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.19579464197158813
    2. '<' → logprob: -1.8207945823669434
    3. '<=' → logprob: -4.570794582366943
    4. '[' → logprob: -6.070794582366943
    5. ' >' → logprob: -6.195794582366943
    6. '>=' → logprob: -7.070794582366943
    7. ' <' → logprob: -8.195795059204102
    8. ' <=' → logprob: -10.320795059204102
    9. '>A' → logprob: -10.945795059204102
    10. '<A' → logprob: -11.820795059204102

Token 242: ' A' (ID: 355)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.059617068618535995
    2. 'A' → logprob: -3.184617042541504
    3. ' P' → logprob: -4.684617042541504
    4. '-P' → logprob: -6.059617042541504
    5. '-' → logprob: -6.434617042541504
    6. ' -' → logprob: -6.809617042541504
    7. ' A' → logprob: -7.059617042541504
    8. 'n' → logprob: -8.309617042541504
    9. '-A' → logprob: -8.434617042541504
    10. 'i' → logprob: -8.559617042541504

Token 243: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.127333340875339e-06
    2. '[P' → logprob: -12.750003814697266
    3. '[' → logprob: -14.750003814697266
    4. 'i' → logprob: -14.875003814697266
    5. '[j' → logprob: -15.500003814697266
    6. '[e' → logprob: -16.250003814697266
    7. '[I' → logprob: -16.750003814697266
    8. '[n' → logprob: -16.875003814697266
    9. '[A' → logprob: -17.000003814697266
    10. '(i' → logprob: -17.750003814697266

Token 244: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.19153684377670288
    2. '[' → logprob: -1.9415369033813477
    3. '):
' → logprob: -4.316536903381348
    4. ':
' → logprob: -4.441536903381348
    5. '   ' → logprob: -6.191536903381348
    6. ':' → logprob: -6.191536903381348
    7. '][' → logprob: -7.316536903381348
    8. ']:' → logprob: -7.441536903381348
    9. '():
' → logprob: -9.441536903381348
    10. '       ' → logprob: -10.066536903381348

Token 245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31218457221984863
    2. 'v' → logprob: -1.9371845722198486
    3. ' v' → logprob: -2.3121845722198486
    4. '   ' → logprob: -3.8121845722198486
    5. ',' → logprob: -6.6871843338012695
    6. '```' → logprob: -7.1871843338012695
    7. ',v' → logprob: -7.6871843338012695
    8. '	v' → logprob: -9.18718433380127
    9. ' ,' → logprob: -9.81218433380127
    10. '
' → logprob: -9.81218433380127

Token 246: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.001706247916445136
    2. ' v' → logprob: -6.376706123352051
    3. 'u' → logprob: -13.75170612335205
    4. '   ' → logprob: -13.87670612335205
    5. '       ' → logprob: -14.25170612335205
    6. 'vq' → logprob: -14.75170612335205
    7. '
' → logprob: -15.37670612335205
    8. '	v' → logprob: -15.75170612335205
    9. 'w' → logprob: -16.376707077026367
    10. ')v' → logprob: -16.501707077026367

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.840432565193623e-05
    2. ',j' → logprob: -9.750088691711426
    3. ' ,' → logprob: -10.625088691711426
    4. ',h' → logprob: -12.500088691711426
    5. '=' → logprob: -13.750088691711426
    6. 'h' → logprob: -15.375088691711426
    7. ',i' → logprob: -15.750088691711426
    8. ',q' → logprob: -16.25008773803711
    9. ',
' → logprob: -16.75008773803711
    10. ',v' → logprob: -16.87508773803711

Token 248: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.033655498176813126
    2. ' j' → logprob: -3.4086554050445557
    3. '   ' → logprob: -12.408655166625977
    4. ' ' → logprob: -12.908655166625977
    5. '  ' → logprob: -14.033655166625977
    6. '0' → logprob: -14.533655166625977
    7. '    ' → logprob: -14.658655166625977
    8. ' ' → logprob: -14.908655166625977
    9. 'i' → logprob: -15.033655166625977
    10. '	j' → logprob: -15.971155166625977

Token 249: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10023804754018784
    2. ' =' → logprob: -2.350238084793091
    3. '=h' → logprob: -10.600237846374512
    4. 'hq' → logprob: -12.600237846374512
    5. 'h' → logprob: -12.850237846374512
    6. ')' → logprob: -16.100238800048828
    7. '=q' → logprob: -16.850238800048828
    8. '   ' → logprob: -17.100238800048828
    9. '﻿' → logprob: -17.350238800048828
    10. ',h' → logprob: -17.725238800048828

Token 250: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -3.79811754100956e-05
    2. ' h' → logprob: -10.250038146972656
    3. 'h' → logprob: -13.250038146972656
    4. '   ' → logprob: -14.625038146972656
    5. 'jq' → logprob: -16.750038146972656
    6. 'hj' → logprob: -17.125038146972656
    7. 'vq' → logprob: -17.375038146972656
    8. '
' → logprob: -17.500038146972656
    9. 'hp' → logprob: -17.625038146972656
    10. 'qh' → logprob: -17.875038146972656

Token 251: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0009905342012643814
    2. 'p' → logprob: -7.250990390777588
    3. 'op' → logprob: -8.500990867614746
    4. 'e' → logprob: -10.125990867614746
    5. 'he' → logprob: -11.750990867614746
    6. '.he' → logprob: -11.875990867614746
    7. 'qp' → logprob: -12.250990867614746
    8. 'app' → logprob: -12.375990867614746
    9. 'h' → logprob: -12.500990867614746
    10. '[' → logprob: -12.875990867614746

Token 252: '.he' (ID: 67786)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.31327199935913086
    2. '.he' → logprob: -1.3132719993591309
    3. '_he' → logprob: -11.938272476196289
    4. ' he' → logprob: -13.188272476196289
    5. '```' → logprob: -14.313272476196289
    6. 'heap' → logprob: -15.563272476196289
    7. '..' → logprob: -15.938272476196289
    8. 'h' → logprob: -15.938272476196289
    9. '   ' → logprob: -16.06327247619629
    10. 'hev' → logprob: -16.18827247619629

Token 253: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.7697225252486533e-06
    2. 'pp' → logprob: -13.250003814697266
    3. 'ap' → logprob: -13.625003814697266
    4. 'q' → logprob: -15.500003814697266
    5. 'p' → logprob: -15.875003814697266
    6. '_app' → logprob: -16.625003814697266
    7. 'a' → logprob: -16.750003814697266
    8. 'opp' → logprob: -16.875003814697266
    9. 'appe' → logprob: -17.375003814697266
    10. 'appt' → logprob: -17.500003814697266

Token 254: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0001487140398239717
    2. 'app' → logprob: -9.25014877319336
    3. 'opp' → logprob: -10.37514877319336
    4. 'pop' → logprob: -11.37514877319336
    5. 'p' → logprob: -12.25014877319336
    6. 'pp' → logprob: -13.62514877319336
    7. 'ap' → logprob: -13.62514877319336
    8. 'opf' → logprob: -13.87514877319336
    9. 'q' → logprob: -14.25014877319336
    10. 'o' → logprob: -14.75014877319336

Token 255: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.8624639324116288e-06
    2. 'p' → logprob: -13.875001907348633
    3. '(' → logprob: -14.500001907348633
    4. 'pq' → logprob: -16.000001907348633
    5. '```' → logprob: -16.375001907348633
    6. '<|end|>' → logprob: -17.000001907348633
    7. '[p' → logprob: -17.750001907348633
    8. '(
' → logprob: -18.250001907348633
    9. '<p' → logprob: -18.375001907348633
    10. 'The' → logprob: -18.875001907348633

Token 256: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.7491250875755213e-05
    2. '(p' → logprob: -11.500027656555176
    3. 'pq' → logprob: -11.750027656555176
    4. 'p' → logprob: -11.875027656555176
    5. ')' → logprob: -14.125027656555176
    6. 'qp' → logprob: -15.250027656555176
    7. 'v' → logprob: -15.375027656555176
    8. '(q' → logprob: -15.375027656555176
    9. '(' → logprob: -15.625027656555176
    10. 'A' → logprob: -15.750027656555176

Token 257: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.00982444453984499
    2. ')' → logprob: -4.884824275970459
    3. '       ' → logprob: -6.134824275970459
    4. ')
' → logprob: -10.009824752807617
    5. '   ' → logprob: -13.009824752807617
    6. ' )
' → logprob: -14.009824752807617
    7. '           ' → logprob: -14.509824752807617
    8. '[' → logprob: -14.884824752807617
    9. ')

' → logprob: -15.759824752807617
    10. '):
' → logprob: -15.759824752807617

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003231878508813679
    2. '   ' → logprob: -8.500323295593262
    3. 'L' → logprob: -9.750323295593262
    4. 'R' → logprob: -9.875323295593262
    5. ' R' → logprob: -13.250323295593262
    6. '<|end|>' → logprob: -13.250323295593262
    7. 'Q' → logprob: -13.625323295593262
    8. ' L' → logprob: -13.750323295593262
    9. '           ' → logprob: -13.875323295593262
    10. 'v' → logprob: -14.000323295593262

Token 259: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.0003372502396814525
    2. '   ' → logprob: -8.625337600708008
    3. ' L' → logprob: -8.875337600708008
    4. '       ' → logprob: -11.125337600708008
    5. 'R' → logprob: -13.500337600708008
    6. '           ' → logprob: -14.375337600708008
    7. '	L' → logprob: -15.625337600708008
    8. '<|end|>' → logprob: -15.750337600708008
    9. '#' → logprob: -15.875337600708008
    10. '...' → logprob: -15.875337600708008

Token 260: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.6100132496794686e-05
    2. '[val' → logprob: -9.875056266784668
    3. 'v' → logprob: -13.500056266784668
    4. '[' → logprob: -14.000056266784668
    5. '[e' → logprob: -14.625056266784668
    6. ' [' → logprob: -15.125056266784668
    7. '[A' → logprob: -15.125056266784668
    8. '[u' → logprob: -15.375056266784668
    9. '[P' → logprob: -15.375056266784668
    10. '[j' → logprob: -15.625056266784668

Token 261: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005464801797643304
    2. '[j' → logprob: -8.2505464553833
    3. ']' → logprob: -9.2505464553833
    4. '[v' → logprob: -9.6255464553833
    5. '[' → logprob: -9.7505464553833
    6. ' ][' → logprob: -10.6255464553833
    7. '[i' → logprob: -11.2505464553833
    8. '   ' → logprob: -11.6255464553833
    9. '[val' → logprob: -13.6255464553833
    10. ' ' → logprob: -13.6880464553833

Token 262: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.796184723294573e-06
    2. ' j' → logprob: -12.875005722045898
    3. '   ' → logprob: -13.750005722045898
    4. 'i' → logprob: -13.875005722045898
    5. '
' → logprob: -15.000005722045898
    6. ']' → logprob: -16.1250057220459
    7. ' ' → logprob: -16.1250057220459
    8. '1' → logprob: -16.1250057220459
    9. '
' → logprob: -16.3750057220459
    10. '[j' → logprob: -16.3750057220459

Token 263: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004546254931483418
    2. ']=' → logprob: -7.750454425811768
    3. '[' → logprob: -11.000454902648926
    4. '=' → logprob: -12.625454902648926
    5. ' ]' → logprob: -12.875454902648926
    6. '   ' → logprob: -15.000454902648926
    7. '][' → logprob: -15.125454902648926
    8. '[i' → logprob: -15.250454902648926
    9. ']
' → logprob: -16.37545394897461
    10. ')' → logprob: -16.75045394897461

Token 264: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06006338819861412
    2. '[' → logprob: -3.310063362121582
    3. ' =' → logprob: -4.060063362121582
    4. ']' → logprob: -5.685063362121582
    5. ']=' → logprob: -7.310063362121582
    6. '[i' → logprob: -8.060063362121582
    7. '=i' → logprob: -9.935063362121582
    8. '][' → logprob: -10.560063362121582
    9. '[j' → logprob: -10.560063362121582
    10. 'j' → logprob: -11.935063362121582

Token 265: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001517238444648683
    2. ' i' → logprob: -6.501517295837402
    3. '   ' → logprob: -11.251517295837402
    4. '	i' → logprob: -13.376517295837402
    5. '[i' → logprob: -15.751517295837402
    6. ' ' → logprob: -15.751517295837402
    7. '(i' → logprob: -17.501516342163086
    8. '<|end|>' → logprob: -17.876516342163086
    9. ')i' → logprob: -17.876516342163086
    10. '*i' → logprob: -18.001516342163086

Token 266: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1443120390176773
    2. 'if' → logprob: -2.0193121433258057
    3. ' if' → logprob: -6.769311904907227
    4. '   ' → logprob: -8.144311904907227
    5. '
' → logprob: -8.644311904907227
    6. '        
' → logprob: -11.894311904907227
    7. '```' → logprob: -12.644311904907227
    8. '     ' → logprob: -13.019311904907227
    9. '	if' → logprob: -13.394311904907227
    10. '      ' → logprob: -13.394311904907227

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0823827013373375
    2. 'if' → logprob: -2.5823826789855957
    3. '   ' → logprob: -6.207382678985596
    4. ' if' → logprob: -6.582382678985596
    5. '
' → logprob: -9.707383155822754
    6. '```' → logprob: -11.957383155822754
    7. '     ' → logprob: -12.082383155822754
    8. '        
' → logprob: -12.707383155822754
    9. '           ' → logprob: -12.832383155822754
    10. '      ' → logprob: -12.957383155822754

Token 268: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08060834556818008
    2. '       ' → logprob: -2.580608367919922
    3. ' if' → logprob: -6.580608367919922
    4. '   ' → logprob: -8.080608367919922
    5. '	if' → logprob: -12.080608367919922
    6. '
' → logprob: -12.455608367919922
    7. ' ' → logprob: -12.830608367919922
    8. '           ' → logprob: -13.080608367919922
    9. '        
' → logprob: -13.580608367919922
    10. '      ' → logprob: -13.955608367919922

Token 269: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1130228117108345
    2. 'not' → logprob: -2.238022804260254
    3. ' j' → logprob: -9.113022804260254
    4. 'j' → logprob: -9.363022804260254
    5. '(not' → logprob: -13.863022804260254
    6. '!' → logprob: -13.988022804260254
    7. '	not' → logprob: -14.238022804260254
    8. ' ' → logprob: -14.738022804260254
    9. ' ' → logprob: -14.988022804260254
    10. ' no' → logprob: -15.238022804260254

Token 270: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4287026822566986
    2. ' j' → logprob: -1.053702712059021
    3. ' ' → logprob: -14.178702354431152
    4. ' ' → logprob: -14.803702354431152
    5. '   ' → logprob: -15.178702354431152
    6. '	j' → logprob: -15.428702354431152
    7. '$j' → logprob: -16.55370330810547
    8. 'not' → logprob: -17.05370330810547
    9. '(j' → logprob: -17.11620330810547
    10. '  ' → logprob: -17.11620330810547

Token 271: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08908210694789886
    2. ':' → logprob: -2.4640820026397705
    3. '       ' → logprob: -9.464081764221191
    4. '):
' → logprob: -10.714081764221191
    5. '           ' → logprob: -11.089081764221191
    6. ' :
' → logprob: -11.839081764221191
    7. '   ' → logprob: -11.964081764221191
    8. '{
' → logprob: -12.839081764221191
    9. ':
' → logprob: -12.964081764221191
    10. ':

' → logprob: -12.964081764221191

Token 272: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01763274148106575
    2. 'e' → logprob: -4.767632961273193
    3. '       ' → logprob: -5.392632961273193
    4. '   ' → logprob: -6.392632961273193
    5. ' snap' → logprob: -6.517632961273193
    6. 'snap' → logprob: -7.017632961273193
    7. ' e' → logprob: -8.267632484436035
    8. '          ' → logprob: -10.517632484436035
    9. '	       ' → logprob: -10.642632484436035
    10. '               ' → logprob: -11.017632484436035

Token 273: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -0.21668778359889984
    2. ' e' → logprob: -2.2166876792907715
    3. ' snap' → logprob: -2.8416876792907715
    4. 'snap' → logprob: -3.7166876792907715
    5. '   ' → logprob: -5.8416876792907715
    6. '       ' → logprob: -9.09168815612793
    7. '           ' → logprob: -10.34168815612793
    8. ' ' → logprob: -10.46668815612793
    9. '	e' → logprob: -10.59168815612793
    10. 's' → logprob: -10.71668815612793

Token 274: 'ureka' (ID: 86120)
  Prédit: 'ureka'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ureka' → logprob: -4.870950215263292e-05
    2. 'ure' → logprob: -11.125048637390137
    3. '=' → logprob: -11.500048637390137
    4. 'ura' → logprob: -12.625048637390137
    5. 'urka' → logprob: -12.750048637390137
    6. 'urika' → logprob: -12.750048637390137
    7. ' +=' → logprob: -13.000048637390137
    8. ' =' → logprob: -13.125048637390137
    9. '```' → logprob: -13.625048637390137
    10. '+=' → logprob: -13.750048637390137

Token 275: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20726901292800903
    2. '+=' → logprob: -1.9572689533233643
    3. '.append' → logprob: -3.0822689533233643
    4. '.' → logprob: -10.332268714904785
    5. ' .' → logprob: -10.707268714904785
    6. '+' → logprob: -10.707268714904785
    7. '=' → logprob: -12.332268714904785
    8. 'append' → logprob: -12.457268714904785
    9. '+=(' → logprob: -12.457268714904785
    10. '   ' → logprob: -12.832268714904785

Token 276: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0001234428636962548
    2. ' [(' → logprob: -9.000123023986816
    3. '[v' → logprob: -20.125123977661133
    4. '(v' → logprob: -20.375123977661133
    5. '([(' → logprob: -21.125123977661133
    6. '[' → logprob: -21.500123977661133
    7. '((' → logprob: -22.875123977661133
    8. '[
' → logprob: -23.250123977661133
    9. '[((' → logprob: -24.500123977661133
    10. '[[' → logprob: -25.000123977661133

Token 277: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0007117166533134878
    2. '(v' → logprob: -7.250711917877197
    3. ' v' → logprob: -13.250711441040039
    4. '[v' → logprob: -17.75071144104004
    5. ')v' → logprob: -18.75071144104004
    6. '	v' → logprob: -18.87571144104004
    7. '?v' → logprob: -18.87571144104004
    8. '(' → logprob: -19.37571144104004
    9. ',v' → logprob: -19.50071144104004
    10. 'vq' → logprob: -19.75071144104004

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3795937522663735e-05
    2. ' ,' → logprob: -10.87502384185791
    3. ',j' → logprob: -12.25002384185791
    4. ',
' → logprob: -16.500022888183594
    5. '0' → logprob: -17.375022888183594
    6. ' ' → logprob: -18.250022888183594
    7. 'j' → logprob: -18.500022888183594
    8. '1' → logprob: -18.625022888183594
    9. '   ' → logprob: -19.000022888183594
    10. '2' → logprob: -19.500022888183594

Token 279: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4744724631309509
    2. ' j' → logprob: -0.9744724631309509
    3. '1' → logprob: -7.974472522735596
    4. '0' → logprob: -10.474472045898438
    5. ' ' → logprob: -10.724472045898438
    6. '	j' → logprob: -14.974472045898438
    7. '   ' → logprob: -15.724472045898438
    8. ' ' → logprob: -15.724472045898438
    9. '  ' → logprob: -16.349472045898438
    10. ',j' → logprob: -17.099472045898438

Token 280: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.607391408877447e-05
    2. ' +' → logprob: -10.250036239624023
    3. '1' → logprob: -14.375036239624023
    4. '+
' → logprob: -17.375036239624023
    5. '+)' → logprob: -18.875036239624023
    6. '+[' → logprob: -20.000036239624023
    7. '()+' → logprob: -20.125036239624023
    8. ')' → logprob: -20.250036239624023
    9. ')+' → logprob: -20.750036239624023
    10. '＋' → logprob: -20.875036239624023

Token 281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '+' → logprob: -15.250004768371582
    4. '   ' → logprob: -17.500003814697266
    5. ')' → logprob: -19.875003814697266
    6. ' +' → logprob: -19.875003814697266
    7. '  ' → logprob: -20.125003814697266
    8. '```' → logprob: -20.250003814697266
    9. '0' → logprob: -20.625003814697266
    10. '       ' → logprob: -20.875003814697266

Token 282: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06207367032766342
    2. ')]
' → logprob: -2.8120737075805664
    3. ')' → logprob: -10.312073707580566
    4. ')]
' → logprob: -10.687073707580566
    5. '       ' → logprob: -10.937073707580566
    6. '   ' → logprob: -11.062073707580566
    7. ']' → logprob: -11.562073707580566
    8. ' )' → logprob: -12.687073707580566
    9. ')]

' → logprob: -13.312073707580566
    10. ']
' → logprob: -13.562073707580566

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0166957825422287
    2. 'hq' → logprob: -4.516695976257324
    3. ' h' → logprob: -5.266695976257324
    4. '	h' → logprob: -8.766695976257324
    5. 'h' → logprob: -8.766695976257324
    6. '(h' → logprob: -10.516695976257324
    7. '       ' → logprob: -10.891695976257324
    8. ' ' → logprob: -11.141695976257324
    9. '[h' → logprob: -11.391695976257324
    10. ')' → logprob: -11.391695976257324

Token 284: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.002765882993116975
    2. ' h' → logprob: -6.127765655517578
    3. '   ' → logprob: -7.627765655517578
    4. 'h' (adapté à ' h') → logprob: -9.627765655517578
    5. '```' → logprob: -11.627765655517578
    6. ' ' → logprob: -13.002765655517578
    7. '	h' → logprob: -13.002765655517578
    8. 'vq' → logprob: -13.502765655517578
    9. '(h' → logprob: -13.627765655517578
    10. 'HQ' → logprob: -13.877765655517578

Token 285: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -14.125001907348633
    3. 'p' → logprob: -14.875001907348633
    4. 'e' → logprob: -15.375001907348633
    5. 'Q' → logprob: -16.000001907348633
    6. 'qp' → logprob: -16.250001907348633
    7. 'pq' → logprob: -16.625001907348633
    8. 'push' → logprob: -17.125001907348633
    9. '.push' → logprob: -17.250001907348633
    10. 'qq' → logprob: -18.000001907348633

Token 286: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0039759352803230286
    2. 'he' → logprob: -5.628975868225098
    3. 'ush' → logprob: -8.503975868225098
    4. '.heap' → logprob: -9.128975868225098
    5. 'push' → logprob: -10.128975868225098
    6. 'app' → logprob: -11.753975868225098
    7. 'heap' → logprob: -11.878975868225098
    8. '.' → logprob: -12.003975868225098
    9. '```' → logprob: -13.253975868225098
    10. '.push' → logprob: -13.878975868225098

Token 287: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.464347173576243e-05
    2. 'ap' → logprob: -10.37503433227539
    3. 'pp' → logprob: -12.75003433227539
    4. 'a' → logprob: -16.25003433227539
    5. 'push' → logprob: -16.25003433227539
    6. ' app' → logprob: -16.87503433227539
    7. 'appen' → logprob: -17.00003433227539
    8. '[' → logprob: -17.00003433227539
    9. 'p' → logprob: -17.37503433227539
    10. '```' → logprob: -17.62503433227539

Token 288: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0013802330940961838
    2. 'push' → logprob: -7.126380443572998
    3. 'op' → logprob: -8.00137996673584
    4. 'pp' → logprob: -9.12637996673584
    5. 'app' → logprob: -9.50137996673584
    6. 'p' → logprob: -10.25137996673584
    7. 'h' → logprob: -11.87637996673584
    8. 'q' → logprob: -12.50137996673584
    9. 'sh' → logprob: -12.50137996673584
    10. 'he' → logprob: -13.12637996673584

Token 289: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -7.896309739408025e-07
    2. 'p' → logprob: -14.500000953674316
    3. '(' → logprob: -15.500000953674316
    4. 'pq' → logprob: -16.5
    5. '(q' → logprob: -17.125
    6. '```' → logprob: -18.125
    7. ' (' → logprob: -19.125
    8. '(P' → logprob: -20.125
    9. '(n' → logprob: -20.375
    10. '(
' → logprob: -20.5

Token 290: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00010831133840838447
    2. 'pq' → logprob: -9.75010871887207
    3. '(p' → logprob: -10.12510871887207
    4. 'p' → logprob: -12.12510871887207
    5. '(q' → logprob: -13.25010871887207
    6. '[p' → logprob: -13.87510871887207
    7. 'qp' → logprob: -14.87510871887207
    8. '(' → logprob: -15.25010871887207
    9. ' pq' → logprob: -15.25010871887207
    10. '[q' → logprob: -16.25010871887207

Token 291: ',' (ID: 11)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.05249368026852608
    2. ',' → logprob: -3.0524935722351074
    3. '(' → logprob: -5.802493572235107
    4. ' (' → logprob: -7.552493572235107
    5. '(A' → logprob: -8.802494049072266
    6. '(q' → logprob: -9.052494049072266
    7. '(P' → logprob: -10.052494049072266
    8. ',(' → logprob: -10.927494049072266
    9. '   ' → logprob: -11.177494049072266
    10. '```' → logprob: -12.802494049072266

Token 292: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.008615161292254925
    2. ' (' → logprob: -4.758615016937256
    3. '(' → logprob: -14.883615493774414
    4. '   ' → logprob: -15.508615493774414
    5. ' ' → logprob: -17.258615493774414
    6. '(a' → logprob: -17.633615493774414
    7. '((' → logprob: -17.883615493774414
    8. '(P' → logprob: -18.258615493774414
    9. ')' → logprob: -18.758615493774414
    10. '(None' → logprob: -19.258615493774414

Token 293: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -4.024604277219623e-05
    2. ' A' → logprob: -10.125040054321289
    3. '(A' → logprob: -16.50004005432129
    4. '   ' → logprob: -18.50004005432129
    5. '	A' → logprob: -19.37504005432129
    6. '[A' → logprob: -20.00004005432129
    7. '>A' → logprob: -20.25004005432129
    8. ')' → logprob: -20.37504005432129
    9. '```' → logprob: -20.50004005432129
    10. '(' → logprob: -20.50004005432129

Token 294: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5776860184123507e-06
    2. 'i' → logprob: -13.12500286102295
    3. '[' → logprob: -14.50000286102295
    4. '[I' → logprob: -16.750001907348633
    5. '```' → logprob: -16.875001907348633
    6. '[
' → logprob: -18.500001907348633
    7. '(i' → logprob: -18.750001907348633
    8. '
' → logprob: -20.000001907348633
    9. '   ' → logprob: -20.125001907348633
    10. ']' → logprob: -20.250001907348633

Token 295: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4418171455617994e-05
    2. ' ,' → logprob: -10.125044822692871
    3. '],' → logprob: -12.875044822692871
    4. '),' → logprob: -13.250044822692871
    5. '   ' → logprob: -17.000043869018555
    6. ' ' → logprob: -17.875043869018555
    7. '',' → logprob: -19.000043869018555
    8. '```' → logprob: -19.125043869018555
    9. ')' → logprob: -19.250043869018555
    10. '0' → logprob: -20.000043869018555

Token 296: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014166681095957756
    2. ' ' → logprob: -4.264166831970215
    3. '1' → logprob: -13.014166831970215
    4. ' ' → logprob: -14.514166831970215
    5. ')' → logprob: -15.139166831970215
    6. '<|end|>' → logprob: -16.2641658782959
    7. '[' → logprob: -16.9516658782959
    8. ' )' → logprob: -17.1391658782959
    9. '   ' → logprob: -17.2016658782959
    10. '  ' → logprob: -17.9516658782959

Token 297: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -11.750008583068848
    3. '1' → logprob: -14.125008583068848
    4. ')' → logprob: -17.500009536743164
    5. '   ' → logprob: -18.125009536743164
    6. '<|end|>' → logprob: -19.000009536743164
    7. '  ' → logprob: -19.875009536743164
    8. '```' → logprob: -20.187509536743164
    9. ' ' → logprob: -20.375009536743164
    10. '۰' → logprob: -20.375009536743164

Token 298: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38688623905181885
    2. ')
' → logprob: -1.1368862390518188
    3. ')
' → logprob: -11.511886596679688
    4. '   ' → logprob: -12.636886596679688
    5. '))' → logprob: -14.136886596679688
    6. ' )
' → logprob: -14.636886596679688
    7. '))
' → logprob: -15.136886596679688
    8. ' )' → logprob: -15.636886596679688
    9. ')`
' → logprob: -15.636886596679688
    10. ')

' → logprob: -16.011886596679688

Token 299: '   ' (ID: 271)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.20311319828033447
    2. '   ' → logprob: -1.7031131982803345
    3. ' pq' → logprob: -6.828113079071045
    4. 'for' → logprob: -7.578113079071045
    5. 'e' → logprob: -10.453113555908203
    6. 'p' → logprob: -10.578113555908203
    7. '
' → logprob: -11.828113555908203
    8. '	p' → logprob: -11.828113555908203
    9. '    
' → logprob: -11.953113555908203
    10. ' for' → logprob: -11.953113555908203

Token 300: ' for' (ID: 395)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -3.976922744186595e-05
    2. '   ' → logprob: -10.500040054321289
    3. ' pq' → logprob: -11.375040054321289
    4. 'e' → logprob: -15.125040054321289
    5. '
' → logprob: -15.125040054321289
    6. 'p' → logprob: -16.37504005432129
    7. '    
' → logprob: -17.00004005432129
    8. 'for' (adapté à ' for') → logprob: -17.12504005432129
    9. ' ' → logprob: -17.50004005432129
    10. 'pj' → logprob: -18.62504005432129

Token 301: ' el' (ID: 650)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.013103639706969261
    2. '(v' → logprob: -4.513103485107422
    3. ' v' → logprob: -7.013103485107422
    4. 'e' → logprob: -7.263103485107422
    5. 'x' → logprob: -9.263103485107422
    6. 'vv' → logprob: -9.263103485107422
    7. '(e' → logprob: -9.513103485107422
    8. 've' → logprob: -10.513103485107422
    9. 'vx' → logprob: -11.138103485107422
    10. 'w' → logprob: -11.138103485107422

Token 302: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003341452218592167
    2. 'in' → logprob: -6.1283416748046875
    3. 't' → logprob: -7.3783416748046875
    4. 'm' → logprob: -8.128341674804688
    5. 'e' → logprob: -10.003341674804688
    6. 'em' → logprob: -10.503341674804688
    7. ' ' → logprob: -10.628341674804688
    8. ',' → logprob: -10.753341674804688
    9. 'x' → logprob: -10.878341674804688
    10. 'ment' → logprob: -11.003341674804688

Token 303: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.011055718176066875
    2. ' e' → logprob: -4.511055946350098
    3. '	e' → logprob: -12.386055946350098
    4. '   ' → logprob: -13.386055946350098
    5. ' ' → logprob: -13.636055946350098
    6. '  ' → logprob: -15.386055946350098
    7. 'snap' → logprob: -15.948555946350098
    8. '(e' → logprob: -16.32355499267578
    9. 'ｅ' → logprob: -16.38605499267578
    10. '    ' → logprob: -16.44855499267578

Token 304: 'ureka' (ID: 86120)
  Prédit: 'ureka'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ureka' → logprob: -0.022193072363734245
    2. 'e' → logprob: -4.02219295501709
    3. 'ura' → logprob: -6.27219295501709
    4. 'u' → logprob: -7.14719295501709
    5. 'r' → logprob: -8.27219295501709
    6. '(e' → logprob: -8.77219295501709
    7. 'ure' → logprob: -8.77219295501709
    8. 'urka' → logprob: -9.02219295501709
    9. 're' → logprob: -9.27219295501709
    10. 'ur' → logprob: -9.77219295501709

Token 305: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5826537013053894
    2. ':' → logprob: -0.8326537013053894
    3. '       ' → logprob: -5.207653522491455
    4. '   ' → logprob: -6.832653522491455
    5. ':
' → logprob: -10.207653999328613
    6. ' :
' → logprob: -10.207653999328613
    7. ' :' → logprob: -10.457653999328613
    8. '):
' → logprob: -12.332653999328613
    9. '	' → logprob: -12.332653999328613
    10. '):' → logprob: -12.707653999328613

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02009589597582817
    2. ' h' → logprob: -4.2700958251953125
    3. 'hq' → logprob: -5.3950958251953125
    4. '   ' → logprob: -7.1450958251953125
    5. ' pq' → logprob: -7.8950958251953125
    6. 'h' → logprob: -9.645095825195312
    7. 'pq' → logprob: -10.020095825195312
    8. '	h' → logprob: -10.770095825195312
    9. ' heap' → logprob: -11.145095825195312
    10. '    ' → logprob: -11.645095825195312

Token 307: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.08967533707618713
    2. ' h' → logprob: -2.7146754264831543
    3. '   ' → logprob: -3.9646754264831543
    4. 'h' (adapté à ' h') → logprob: -7.964675426483154
    5. '	h' → logprob: -9.089674949645996
    6. ' he' → logprob: -11.089674949645996
    7. ' heap' → logprob: -11.089674949645996
    8. '       ' → logprob: -11.339674949645996
    9. 'pq' → logprob: -11.464674949645996
    10. 'heap' → logprob: -11.589674949645996

Token 308: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.028030088171362877
    2. 'ureka' → logprob: -3.9030301570892334
    3. 'e' → logprob: -5.403029918670654
    4. '[' → logprob: -6.778029918670654
    5. 'u' → logprob: -7.278029918670654
    6. '   ' → logprob: -8.653030395507812
    7. '```' → logprob: -8.903030395507812
    8. 'w' → logprob: -9.278030395507812
    9. 'p' → logprob: -9.278030395507812
    10. '.append' → logprob: -9.903030395507812

Token 309: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00033665422233752906
    2. 'he' → logprob: -8.000336647033691
    3. '_he' → logprob: -14.500336647033691
    4. '.heap' → logprob: -14.750336647033691
    5. 'heap' → logprob: -16.500337600708008
    6. '.' → logprob: -17.125337600708008
    7. ' he' → logprob: -17.375337600708008
    8. 'ush' → logprob: -17.875337600708008
    9. 'h' → logprob: -18.375337600708008
    10. '-he' → logprob: -18.625337600708008

Token 310: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -9.662937372922897e-05
    2. 'pp' → logprob: -9.500096321105957
    3. 'push' → logprob: -10.875096321105957
    4. 'ush' → logprob: -13.000096321105957
    5. 'ap' → logprob: -15.500096321105957
    6. 'h' → logprob: -15.875096321105957
    7. 'p' → logprob: -16.375097274780273
    8. 'he' → logprob: -16.375097274780273
    9. 'append' → logprob: -16.875097274780273
    10. 'a' → logprob: -17.125097274780273

Token 311: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -1.688212614681106e-05
    2. 'push' → logprob: -11.000017166137695
    3. 'sh' → logprob: -16.625017166137695
    4. 'h' → logprob: -17.625017166137695
    5. 'app' → logprob: -17.750017166137695
    6. 'p' → logprob: -18.500017166137695
    7. 'pp' → logprob: -18.500017166137695
    8. '```' → logprob: -19.875017166137695
    9. 'uh' → logprob: -20.000017166137695
    10. 'us' → logprob: -20.000017166137695

Token 312: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0001049736310960725
    2. 'pq' → logprob: -9.250104904174805
    3. 'p' → logprob: -11.750104904174805
    4. '(' → logprob: -15.125104904174805
    5. 'PQ' → logprob: -16.375104904174805
    6. '(q' → logprob: -16.625104904174805
    7. '(
' → logprob: -16.750104904174805
    8. ' pq' → logprob: -16.875104904174805
    9. '```' → logprob: -16.875104904174805
    10. 'q' → logprob: -17.250104904174805

Token 313: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.868328920158092e-05
    2. '(p' → logprob: -11.125028610229492
    3. '(q' → logprob: -12.250028610229492
    4. '(' → logprob: -12.750028610229492
    5. 'pq' → logprob: -13.125028610229492
    6. 'p' → logprob: -13.500028610229492
    7. ')' → logprob: -14.750028610229492
    8. '(el' → logprob: -15.625028610229492
    9. 'aq' → logprob: -16.000028610229492
    10. 'o' → logprob: -16.000028610229492

Token 314: ',' (ID: 11)
  Prédit: '(el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(el' → logprob: -0.00044056313345208764
    2. '(p' → logprob: -7.75044059753418
    3. ',' → logprob: -12.50044059753418
    4. '(' → logprob: -13.50044059753418
    5. ')' → logprob: -13.62544059753418
    6. '(*' → logprob: -14.00044059753418
    7. 'el' → logprob: -14.62544059753418
    8. 'pq' → logprob: -14.75044059753418
    9. '(py' → logprob: -15.00044059753418
    10. '	el' → logprob: -15.12544059753418

Token 315: ' el' (ID: 650)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.0016259063268080354
    2. ' el' → logprob: -6.501626014709473
    3. '(el' → logprob: -9.001626014709473
    4. '	el' → logprob: -15.126626014709473
    5. ' (' → logprob: -16.751625061035156
    6. '   ' → logprob: -17.376625061035156
    7. '_el' → logprob: -18.876625061035156
    8. '(' → logprob: -19.376625061035156
    9. '/el' → logprob: -19.501625061035156
    10. 'elm' → logprob: -19.626625061035156

Token 316: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.170270353322849e-05
    2. ')
' → logprob: -10.125061988830566
    3. '   ' → logprob: -11.125061988830566
    4. '<|end|>' → logprob: -12.625061988830566
    5. ' )' → logprob: -14.125061988830566
    6. '))' → logprob: -14.500061988830566
    7. ')}' → logprob: -15.125061988830566
    8. ')return' → logprob: -15.250061988830566
    9. '())' → logprob: -15.750061988830566
    10. '`)' → logprob: -15.750061988830566

Token 317: 'total' (ID: 9577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1950433254241943
    2. 'Q' → logprob: -1.3200433254241943
    3. 'res' → logprob: -2.3200433254241943
    4. 'ans' → logprob: -2.6950433254241943
    5. 'answer' → logprob: -2.9450433254241943
    6. 'result' → logprob: -3.5700433254241943
    7. 'dp' → logprob: -3.5700433254241943
    8. 'S' → logprob: -3.9450433254241943
    9. 'print' → logprob: -3.9450433254241943
    10. 'M' → logprob: -4.070043563842773

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18703877925872803
    2. '=' → logprob: -2.3120388984680176
    3. '_' → logprob: -2.6870388984680176
    4. 's' → logprob: -7.687038898468018
    5. '_dist' → logprob: -7.687038898468018
    6. '_distance' → logprob: -7.687038898468018
    7. '_count' → logprob: -7.937038898468018
    8. '_steps' → logprob: -8.18703842163086
    9. '(' → logprob: -8.31203842163086
    10. '_length' → logprob: -9.31203842163086

Token 319: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0026922940742224455
    2. ' ' → logprob: -6.252692222595215
    3. '[' → logprob: -7.627692222595215
    4. '[n' → logprob: -9.127692222595215
    5. 'n' → logprob: -9.252692222595215
    6. 'sum' → logprob: -10.502692222595215
    7. ' [' → logprob: -11.002692222595215
    8. '[]' → logprob: -12.252692222595215
    9. ' n' → logprob: -12.252692222595215
    10. '1' → logprob: -12.377692222595215

Token 320: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0033723425585776567
    2. '[' → logprob: -6.8783721923828125
    3. '[n' → logprob: -7.0033721923828125
    4. 'n' → logprob: -7.1283721923828125
    5. 'sum' → logprob: -7.6283721923828125
    6. '1' → logprob: -10.253372192382812
    7. '[-' → logprob: -11.128372192382812
    8. '-' → logprob: -11.253372192382812
    9. '[]' → logprob: -11.253372192382812
    10. '(' → logprob: -12.003372192382812

Token 321: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008946668240241706
    2. 'i' → logprob: -7.250894546508789
    3. ' for' → logprob: -10.000894546508789
    4. '#' → logprob: -10.000894546508789
    5. ')' → logprob: -11.500894546508789
    6. 'total' → logprob: -11.500894546508789
    7. 'stack' → logprob: -11.625894546508789
    8. 'dp' → logprob: -11.750894546508789
    9. 'idx' → logprob: -12.125894546508789
    10. 'def' → logprob: -12.125894546508789

Token 322: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006818148540332913
    2. 'from' → logprob: -8.62568187713623
    3. 'stack' → logprob: -8.87568187713623
    4. 'def' → logprob: -9.50068187713623
    5. 'i' → logprob: -9.87568187713623
    6. 'import' → logprob: -10.37568187713623
    7. 'visited' → logprob: -10.75068187713623
    8. 'dp' → logprob: -11.12568187713623
    9. 'q' → logprob: -11.37568187713623
    10. 'used' → logprob: -11.50068187713623

Token 323: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.020549945533275604
    2. 'v' → logprob: -4.520549774169922
    3. 'x' → logprob: -5.770549774169922
    4. ' i' → logprob: -5.895549774169922
    5. 'start' → logprob: -7.395549774169922
    6. 'val' → logprob: -7.895549774169922
    7. 'u' → logprob: -8.020549774169922
    8. 'k' → logprob: -8.145549774169922
    9. 'j' → logprob: -8.270549774169922
    10. 'idx' → logprob: -8.395549774169922

Token 324: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023399680852890015
    2. 'in' → logprob: -3.773399591445923
    3. ',' → logprob: -9.023399353027344
    4. ' ' → logprob: -11.148399353027344
    5. 'range' → logprob: -12.523399353027344
    6. 'n' → logprob: -12.898399353027344
    7. '_' → logprob: -13.273399353027344
    8. '0' → logprob: -13.523399353027344
    9. '   ' → logprob: -13.648399353027344
    10. ')' → logprob: -13.898399353027344

Token 325: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004079589620232582
    2. ' range' → logprob: -5.504079818725586
    3. 'A' → logprob: -15.004079818725586
    4. '(range' → logprob: -15.254079818725586
    5. 'n' → logprob: -16.004079818725586
    6. 'P' → logprob: -16.004079818725586
    7. 'r' → logprob: -16.504079818725586
    8. '   ' → logprob: -16.754079818725586
    9. 'L' → logprob: -16.879079818725586
    10. ' ' → logprob: -17.004079818725586

Token 326: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06298520416021347
    2. 'n' → logprob: -2.8129851818084717
    3. '(' → logprob: -6.937985420227051
    4. '1' → logprob: -10.18798542022705
    5. '(len' → logprob: -12.81298542022705
    6. ' n' → logprob: -13.31298542022705
    7. '(
' → logprob: -13.56298542022705
    8. '   ' → logprob: -14.31298542022705
    9. '2' → logprob: -14.68798542022705
    10. ',n' → logprob: -14.68798542022705

Token 327: '-' (ID: 12)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04894307628273964
    2. '):' → logprob: -3.048943042755127
    3. '-' → logprob: -8.298943519592285
    4. '):
' → logprob: -9.673943519592285
    5. ':
' → logprob: -11.173943519592285
    6. ':' → logprob: -11.923943519592285
    7. ' -' → logprob: -12.173943519592285
    8. '   ' → logprob: -12.298943519592285
    9. '+' → logprob: -12.923943519592285
    10. ' ):
' → logprob: -13.298943519592285

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3243245482444763
    2. 'n' → logprob: -1.449324607849121
    3. '2' → logprob: -3.199324607849121
    4. '-' → logprob: -7.949324607849121
    5. '):
' → logprob: -8.324324607849121
    6. ')' → logprob: -8.574324607849121
    7. '0' → logprob: -8.824324607849121
    8. '4' → logprob: -8.949324607849121
    9. '):' → logprob: -9.074324607849121
    10. '3' → logprob: -9.574324607849121

Token 329: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5109131932258606
    2. '-' → logprob: -1.3859131336212158
    3. '):' → logprob: -2.385913133621216
    4. '+' → logprob: -3.010913133621216
    5. ' -' → logprob: -5.010913372039795
    6. '):
' → logprob: -7.510913372039795
    7. '   ' → logprob: -7.635913372039795
    8. ' +' → logprob: -7.760913372039795
    9. ' ' → logprob: -9.010912895202637
    10. ',' → logprob: -9.135912895202637

Token 330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05855509266257286
    2. 'if' → logprob: -3.3085551261901855
    3. 'for' → logprob: -5.1835551261901855
    4. ' if' → logprob: -5.5585551261901855
    5. 'l' → logprob: -5.6835551261901855
    6. 'x' → logprob: -6.5585551261901855
    7. 'left' → logprob: -6.8085551261901855
    8. 'total' → logprob: -7.1835551261901855
    9. 'a' → logprob: -7.3085551261901855
    10. ' for' → logprob: -7.3085551261901855

Token 331: ' meat' (ID: 20872)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.47616904973983765
    2. 'for' → logprob: -1.4761691093444824
    3. '   ' → logprob: -2.9761691093444824
    4. 'j' → logprob: -3.6011691093444824
    5. 'total' → logprob: -3.6011691093444824
    6. 'left' → logprob: -4.351169109344482
    7. 'l' → logprob: -4.601169109344482
    8. 'x' → logprob: -4.851169109344482
    9. 'a' → logprob: -5.601169109344482
    10. 'v' → logprob: -6.101169109344482

Token 332: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5841618776321411
    2. '=' → logprob: -0.8341618776321411
    3. '   ' → logprob: -5.459161758422852
    4. ',' → logprob: -6.709161758422852
    5. 'for' → logprob: -6.834161758422852
    6. '+=' → logprob: -7.584161758422852
    7. ' +=' → logprob: -7.709161758422852
    8. ' ' → logprob: -8.584161758422852
    9. 's' → logprob: -9.334161758422852
    10. '=i' → logprob: -9.834161758422852

Token 333: ' P' (ID: 398)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.23712362349033356
    2. 'max' → logprob: -2.237123727798462
    3. 'min' → logprob: -2.862123727798462
    4. 'P' → logprob: -3.862123727798462
    5. 'n' → logprob: -4.737123489379883
    6. 'A' → logprob: -5.237123489379883
    7. '(R' → logprob: -6.112123489379883
    8. 'i' → logprob: -6.237123489379883
    9. '(i' → logprob: -6.987123489379883
    10. 'L' → logprob: -6.987123489379883

Token 334: '[i' (ID: 1768)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.16680027544498444
    2. '[i' → logprob: -1.9168002605438232
    3. '[P' → logprob: -5.916800498962402
    4. '[L' → logprob: -6.166800498962402
    5. '[R' → logprob: -7.291800498962402
    6. '[' → logprob: -7.416800498962402
    7. 'i' → logprob: -8.791800498962402
    8. 'A' → logprob: -8.791800498962402
    9. '[I' → logprob: -10.791800498962402
    10. 'P' → logprob: -10.916800498962402

Token 335: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9425229430198669
    2. ']
' → logprob: -1.8175230026245117
    3. '][' → logprob: -1.8175230026245117
    4. ']+' → logprob: -1.8175230026245117
    5. '[' → logprob: -2.4425230026245117
    6. '+' → logprob: -3.8175230026245117
    7. '   ' → logprob: -4.442523002624512
    8. '0' → logprob: -7.567523002624512
    9. ' +' → logprob: -8.317523002624512
    10. '])' → logprob: -8.317523002624512

Token 336: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9500988125801086
    2. 'if' → logprob: -1.3250987529754639
    3. '   ' → logprob: -2.075098752975464
    4. 'j' → logprob: -2.700098752975464
    5. 'l' → logprob: -3.325098752975464
    6. 'left' → logprob: -3.575098752975464
    7. 'r' → logprob: -3.575098752975464
    8. 'a' → logprob: -4.575098991394043
    9. 'x' → logprob: -4.575098991394043
    10. 'right' → logprob: -4.700098991394043

Token 337: ' l' (ID: 305)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9590155482292175
    2. 'if' → logprob: -1.0840156078338623
    3. 'j' → logprob: -2.7090156078338623
    4. 'left' → logprob: -3.3340156078338623
    5. 'right' → logprob: -3.3340156078338623
    6. 'r' → logprob: -3.4590156078338623
    7. 'x' → logprob: -4.084015369415283
    8. 'next' → logprob: -4.334015369415283
    9. 'l' (adapté à ' l') → logprob: -4.459015369415283
    10. 'total' → logprob: -4.584015369415283

Token 338: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5448850393295288
    2. 'eft' → logprob: -1.5448850393295288
    3. ' =' → logprob: -1.6698850393295288
    4. '=' → logprob: -4.419885158538818
    5. 'ft' → logprob: -5.919885158538818
    6. ' ,' → logprob: -7.294885158538818
    7. ',r' → logprob: -7.419885158538818
    8. 'bound' → logprob: -8.04488468170166
    9. 'ower' → logprob: -8.41988468170166
    10. '_bound' → logprob: -8.66988468170166

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6610414385795593
    2. ' =' → logprob: -0.9110414385795593
    3. '=' → logprob: -2.536041498184204
    4. ',r' → logprob: -6.911041259765625
    5. ' ,' → logprob: -7.036041259765625
    6. '   ' → logprob: -8.536041259765625
    7. ',l' → logprob: -9.161041259765625
    8. 'eft' → logprob: -10.036041259765625
    9. ',right' → logprob: -10.661041259765625
    10. ' ' → logprob: -10.911041259765625

Token 340: ' l' (ID: 305)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08561495691537857
    2. 'l' → logprob: -2.5856149196624756
    3. '0' → logprob: -5.335615158081055
    4. ' r' → logprob: -6.960615158081055
    5. ' l' → logprob: -8.460615158081055
    6. '=' → logprob: -8.835615158081055
    7. '_,' → logprob: -9.460615158081055
    8. '_=' → logprob: -9.585615158081055
    9. ' =' → logprob: -10.085615158081055
    10. 't' → logprob: -10.210615158081055

Token 341: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.46080920100212097
    2. ',' → logprob: -1.5858092308044434
    3. '0' → logprob: -1.8358092308044434
    4. '=' → logprob: -5.960809230804443
    5. '2' → logprob: -6.835809230804443
    6. 'l' → logprob: -8.085808753967285
    7. ' =' → logprob: -8.085808753967285
    8. 'eft' → logprob: -8.210808753967285
    9. ',r' → logprob: -8.960808753967285
    10. ',l' → logprob: -9.335808753967285

Token 342: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4782709777355194
    2. '=' → logprob: -0.9782710075378418
    3. ',' → logprob: -5.478271007537842
    4. ',l' → logprob: -12.603270530700684
    5. '=l' → logprob: -13.103270530700684
    6. '   ' → logprob: -13.728270530700684
    7. ' ,' → logprob: -14.603270530700684
    8. '1' → logprob: -14.728270530700684
    9. 'l' → logprob: -14.853270530700684
    10. ' ' → logprob: -15.353270530700684

Token 343: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0006347587914206088
    2. ' L' → logprob: -7.375634670257568
    3. 'R' → logprob: -12.375635147094727
    4. '   ' → logprob: -12.875635147094727
    5. '(L' → logprob: -14.250635147094727
    6. '[L' → logprob: -14.875635147094727
    7. ' ' → logprob: -16.250635147094727
    8. '	L' → logprob: -16.375635147094727
    9. '  ' → logprob: -17.000635147094727
    10. '
' → logprob: -17.125635147094727

Token 344: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004665441811084747
    2. 'me' → logprob: -5.379665374755859
    3. '(me' → logprob: -11.00466537475586
    4. ' me' → logprob: -12.25466537475586
    5. 'Me' → logprob: -12.62966537475586
    6. ' meat' → logprob: -12.62966537475586
    7. '[m' → logprob: -13.00466537475586
    8. '   ' → logprob: -13.12966537475586
    9. '[i' → logprob: -13.12966537475586
    10. ' [' → logprob: -13.12966537475586

Token 345: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4916233420372009
    2. '[' → logprob: -1.3666234016418457
    3. ']' → logprob: -2.2416234016418457
    4. 'me' → logprob: -4.241623401641846
    5. ']
' → logprob: -4.866623401641846
    6. '   ' → logprob: -5.991623401641846
    7. '(me' → logprob: -6.741623401641846
    8. ',' → logprob: -7.741623401641846
    9. '[i' → logprob: -8.991622924804688
    10. ' ' → logprob: -8.991622924804688

Token 346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30777209997177124
    2. 'r' → logprob: -1.432772159576416
    3. ' r' → logprob: -3.932772159576416
    4. ',' → logprob: -5.057772159576416
    5. ',r' → logprob: -8.682771682739258
    6. ',
' → logprob: -10.057771682739258
    7. ' ' → logprob: -10.307771682739258
    8. '
' → logprob: -11.307771682739258
    9. ' ,' → logprob: -11.307771682739258
    10. '    
' → logprob: -11.432771682739258

Token 347: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.00918396282941103
    2. '   ' → logprob: -5.384183883666992
    3. ' r' → logprob: -5.509183883666992
    4. 'if' → logprob: -8.009183883666992
    5. 'l' → logprob: -9.759183883666992
    6. ',' → logprob: -10.884183883666992
    7. 'for' → logprob: -11.134183883666992
    8. '       ' → logprob: -11.259183883666992
    9. ' ' → logprob: -11.509183883666992
    10. '  ' → logprob: -11.759183883666992

Token 348: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.039209987968206406
    2. ',' → logprob: -3.914210081100464
    3. ' =' → logprob: -4.664209842681885
    4. 'ight' → logprob: -5.414209842681885
    5. '=' → logprob: -5.664209842681885
    6. '2' → logprob: -7.664209842681885
    7. 'i' → logprob: -8.414210319519043
    8. '0' → logprob: -9.039210319519043
    9. 'r' → logprob: -9.914210319519043
    10. ' ,' → logprob: -10.414210319519043

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002185118617489934
    2. '=' → logprob: -6.377185344696045
    3. ',r' → logprob: -8.377184867858887
    4. ' =' → logprob: -8.502184867858887
    5. ' ,' → logprob: -10.002184867858887
    6. ',l' → logprob: -13.502184867858887
    7. 'r' → logprob: -14.752184867858887
    8. '1' → logprob: -15.002184867858887
    9. '   ' → logprob: -15.127184867858887
    10. ',n' → logprob: -15.252184867858887

Token 350: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014127307571470737
    2. ' r' → logprob: -4.389127254486084
    3. 'R' → logprob: -6.514127254486084
    4. ' R' → logprob: -9.889127731323242
    5. '=' → logprob: -10.139127731323242
    6. ' =' → logprob: -10.639127731323242
    7. '   ' → logprob: -11.139127731323242
    8. '=r' → logprob: -13.139127731323242
    9. ' ' → logprob: -14.264127731323242
    10. 'total' → logprob: -14.764127731323242

Token 351: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003741767955943942
    2. '1' → logprob: -5.75374174118042
    3. 'i' → logprob: -8.253742218017578
    4. '[' → logprob: -9.003742218017578
    5. ']' → logprob: -9.378742218017578
    6. '[i' → logprob: -9.753742218017578
    7. '=' → logprob: -10.378742218017578
    8. ']=' → logprob: -13.253742218017578
    9. '=i' → logprob: -14.003742218017578
    10. '(i' → logprob: -14.128742218017578

Token 352: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143917202949524
    2. ' =' → logprob: -1.7014391422271729
    3. ',' → logprob: -10.701438903808594
    4. ' ' → logprob: -13.326438903808594
    5. '   ' → logprob: -13.326438903808594
    6. '  ' → logprob: -16.701438903808594
    7. '1' → logprob: -17.951438903808594
    8. '=P' → logprob: -18.451438903808594
    9. '=

' → logprob: -18.701438903808594
    10. '＝' → logprob: -19.076438903808594

Token 353: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.006752905435860157
    2. ' R' → logprob: -5.006752967834473
    3. '   ' → logprob: -10.256752967834473
    4. '  ' → logprob: -14.256752967834473
    5. ' ' → logprob: -14.506752967834473
    6. '       ' → logprob: -15.006752967834473
    7. '    ' → logprob: -15.131752967834473
    8. '     ' → logprob: -15.256752967834473
    9. '           ' → logprob: -16.506752014160156
    10. '[R' → logprob: -16.631752014160156

Token 354: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1875571544806007e-05
    2. '[' → logprob: -12.125011444091797
    3. '[P' → logprob: -12.875011444091797
    4. 'i' → logprob: -13.250011444091797
    5. 'P' → logprob: -14.375011444091797
    6. '   ' → logprob: -14.875011444091797
    7. 'me' → logprob: -15.750011444091797
    8. '```' → logprob: -16.000011444091797
    9. '(i' → logprob: -16.250011444091797
    10. '[I' → logprob: -16.250011444091797

Token 355: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017745461082085967
    2. ']
' → logprob: -6.376774311065674
    3. ']

' → logprob: -9.876774787902832
    4. '1' → logprob: -12.376774787902832
    5. ' ]' → logprob: -12.376774787902832
    6. ')' → logprob: -12.751774787902832
    7. '   ' → logprob: -12.876774787902832
    8. ']
' → logprob: -13.001774787902832
    9. '][' → logprob: -13.876774787902832
    10. '[' → logprob: -14.126774787902832

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002227691002190113
    2. 'total' → logprob: -6.877227783203125
    3. 'if' → logprob: -7.877227783203125
    4. '    
' → logprob: -8.002227783203125
    5. '
' → logprob: -8.502227783203125
    6. ' if' → logprob: -8.877227783203125
    7. ' total' → logprob: -9.502227783203125
    8. '```' → logprob: -10.752227783203125
    9. '   
' → logprob: -12.377227783203125
    10. 'for' → logprob: -12.377227783203125

Token 357: ' mul' (ID: 9975)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2518884241580963
    2. 'total' → logprob: -1.751888394355774
    3. 'for' → logprob: -4.126888275146484
    4. '   ' → logprob: -4.251888275146484
    5. ' if' → logprob: -5.001888275146484
    6. 'length' → logprob: -5.501888275146484
    7. 'step' → logprob: -6.376888275146484
    8. 'count' → logprob: -6.501888275146484
    9. ' total' → logprob: -7.001888275146484
    10. 'steps' → logprob: -7.251888275146484

Token 358: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2899293601512909
    2. '=' → logprob: -1.6649293899536133
    3. 't' → logprob: -3.4149293899536133
    4. '   ' → logprob: -4.289929389953613
    5. 'tip' → logprob: -5.039929389953613
    6. 'total' → logprob: -5.789929389953613
    7. 'iplier' → logprob: -5.789929389953613
    8. 'ip' → logprob: -6.664929389953613
    9. ' ' → logprob: -7.414929389953613
    10. '  ' → logprob: -7.539929389953613

Token 359: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.74852454662323
    2. '(r' → logprob: -1.24852454662323
    3. ' (' → logprob: -2.3735246658325195
    4. '(max' → logprob: -2.3735246658325195
    5. '(m' → logprob: -3.6235246658325195
    6. '(me' → logprob: -3.8735246658325195
    7. 'max' → logprob: -6.1235246658325195
    8. '   ' → logprob: -6.6235246658325195
    9. ' max' → logprob: -7.1235246658325195
    10. '(' → logprob: -7.3735246658325195

Token 360: 'l' (ID: 75)
  Prédit: '(me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(me' → logprob: -0.5064384937286377
    2. 'me' → logprob: -1.0064384937286377
    3. '(m' → logprob: -4.256438255310059
    4. '(l' → logprob: -5.506438255310059
    5. ' meat' → logprob: -5.506438255310059
    6. '(r' → logprob: -5.756438255310059
    7. '(P' → logprob: -6.256438255310059
    8. 'l' → logprob: -6.756438255310059
    9. 'P' → logprob: -7.131438255310059
    10. '(max' → logprob: -7.756438255310059

Token 361: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14271122217178345
    2. '2' → logprob: -2.0177111625671387
    3. '0' → logprob: -10.892711639404297
    4. '[' → logprob: -11.767711639404297
    5. '   ' → logprob: -13.455211639404297
    6. '```' → logprob: -13.517711639404297
    7. ' ' → logprob: -13.580211639404297
    8. '
' → logprob: -13.580211639404297
    9. ']' → logprob: -14.080211639404297
    10. '][' → logprob: -14.705211639404297

Token 362: '-l' (ID: 2887)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4845863878726959
    2. '-' → logprob: -1.4845863580703735
    3. '+' → logprob: -1.9845863580703735
    4. ' +' → logprob: -3.984586477279663
    5. 'me' → logprob: -7.734586238861084
    6. '-me' → logprob: -8.859586715698242
    7. ')' → logprob: -9.109586715698242
    8. '-m' → logprob: -9.359586715698242
    9. ' ' → logprob: -9.359586715698242
    10. '   ' → logprob: -9.859586715698242

Token 363: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017457617446780205
    2. 'l' → logprob: -5.142457485198975
    3. '+' → logprob: -5.267457485198975
    4. '(-' → logprob: -6.017457485198975
    5. '-' → logprob: -6.142457485198975
    6. '(' → logprob: -8.392457962036133
    7. 'r' → logprob: -8.392457962036133
    8. ')' → logprob: -8.642457962036133
    9. '```' → logprob: -8.892457962036133
    10. ' l' → logprob: -9.017457962036133

Token 364: ')*(' (ID: 44406)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.57194584608078
    2. ')' → logprob: -1.0719459056854248
    3. ' +' → logprob: -3.071945905685425
    4. ')*(' → logprob: -3.696945905685425
    5. ' if' → logprob: -4.696945667266846
    6. '-' → logprob: -5.321945667266846
    7. ')*' → logprob: -5.821945667266846
    8. ' -' → logprob: -6.321945667266846
    9. 'if' → logprob: -6.571945667266846
    10. ' )' → logprob: -7.196945667266846

Token 365: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06659723073244095
    2. 'l' → logprob: -3.8165972232818604
    3. 'me' → logprob: -3.8165972232818604
    4. '(r' → logprob: -4.4415974617004395
    5. 'i' → logprob: -6.6915974617004395
    6. '(m' → logprob: -6.9415974617004395
    7. '(l' → logprob: -6.9415974617004395
    8. '-' → logprob: -7.1915974617004395
    9. '(me' → logprob: -7.3165974617004395
    10. 'm' → logprob: -7.4415974617004395

Token 366: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07906867563724518
    2. '1' → logprob: -2.579068660736084
    3. '```' → logprob: -9.454069137573242
    4. '[' → logprob: -10.329069137573242
    5. 'r' → logprob: -10.329069137573242
    6. 's' → logprob: -12.641569137573242
    7. '``' → logprob: -12.829069137573242
    8. '   ' → logprob: -13.016569137573242
    9. '+' → logprob: -13.204069137573242
    10. '-' → logprob: -13.266569137573242

Token 367: '-me' (ID: 25323)
  Prédit: '-r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.4980432391166687
    2. '-l' → logprob: -1.7480432987213135
    3. ' -' → logprob: -1.9980432987213135
    4. '-' → logprob: -2.4980432987213135
    5. '-
' → logprob: -9.498043060302734
    6. '+' → logprob: -10.623043060302734
    7. '-s' → logprob: -10.748043060302734
    8. '2' → logprob: -10.748043060302734
    9. '-m' → logprob: -10.748043060302734
    10. '-p' → logprob: -11.123043060302734

Token 368: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.005754937417805195
    2. 'l' → logprob: -6.5057549476623535
    3. 'a' → logprob: -6.6307549476623535
    4. 'r' → logprob: -7.1307549476623535
    5. 't' → logprob: -7.7557549476623535
    6. 's' → logprob: -8.505754470825195
    7. 'n' → logprob: -8.505754470825195
    8. 'al' → logprob: -8.693254470825195
    9. '1' → logprob: -8.818254470825195
    10. '-' → logprob: -8.880754470825195

Token 369: ')+(' (ID: 104644)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004307634197175503
    2. ')*' → logprob: -6.629307746887207
    3. ' )' → logprob: -6.754307746887207
    4. ')*(' → logprob: -7.379307746887207
    5. '1' → logprob: -8.129307746887207
    6. '2' → logprob: -8.629307746887207
    7. '*)' → logprob: -9.004307746887207
    8. '+' → logprob: -9.254307746887207
    9. ')-(' → logprob: -9.254307746887207
    10. '*' → logprob: -9.504307746887207

Token 370: 'r' (ID: 81)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5294968485832214
    2. 'me' → logprob: -1.7794969081878662
    3. '(me' → logprob: -2.154496908187866
    4. 'r' → logprob: -2.779496908187866
    5. '(l' → logprob: -3.279496908187866
    6. '(r' → logprob: -4.654496669769287
    7. '1' → logprob: -5.154496669769287
    8. '(m' → logprob: -5.529496669769287
    9. '   ' → logprob: -6.404496669769287
    10. '(' → logprob: -6.404496669769287

Token 371: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002886425703763962
    2. '1' → logprob: -5.8778862953186035
    3. 'e' → logprob: -9.752886772155762
    4. 'et' → logprob: -12.252886772155762
    5. 'eat' → logprob: -13.002886772155762
    6. '```' → logprob: -13.127886772155762
    7. '_' → logprob: -13.377886772155762
    8. 'ul' → logprob: -13.690386772155762
    9. 'r' → logprob: -13.877886772155762
    10. 'l' → logprob: -14.065386772155762

Token 372: '-r' (ID: 6335)
  Prédit: '-me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-me' → logprob: -0.04100319370627403
    2. ' -' → logprob: -3.2910032272338867
    3. '-' → logprob: -6.166003227233887
    4. '-m' → logprob: -7.416003227233887
    5. '-l' → logprob: -9.416003227233887
    6. '-r' → logprob: -9.541003227233887
    7. '-mo' → logprob: -11.041003227233887
    8. '-Me' → logprob: -11.166003227233887
    9. '-p' → logprob: -11.166003227233887
    10. '-total' → logprob: -12.041003227233887

Token 373: '1' (ID: 16)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.8683105111122131
    2. 'at' → logprob: -0.9933105111122131
    3. '2' → logprob: -1.6183104515075684
    4. 'e' → logprob: -4.868310451507568
    5. 'me' → logprob: -6.368310451507568
    6. 'ath' → logprob: -7.743310451507568
    7. '-' → logprob: -7.743310451507568
    8. 'et' → logprob: -7.993310451507568
    9. '1' → logprob: -8.243310928344727
    10. '-e' → logprob: -8.368310928344727

Token 374: ')*(' (ID: 44406)
  Prédit: ')*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.06237723305821419
    2. ')*' → logprob: -2.8123772144317627
    3. ')' → logprob: -8.562376976013184
    4. ' )' → logprob: -9.062376976013184
    5. '-' → logprob: -10.437376976013184
    6. '*(' → logprob: -10.812376976013184
    7. '   ' → logprob: -11.312376976013184
    8. '*' → logprob: -11.937376976013184
    9. ')-(' → logprob: -11.937376976013184
    10. ' -' → logprob: -12.062376976013184

Token 375: 'me' (ID: 1047)
  Prédit: '(me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(me' → logprob: -0.008312313817441463
    2. '(m' → logprob: -5.633312225341797
    3. 'me' → logprob: -6.008312225341797
    4. '(l' → logprob: -6.258312225341797
    5. '(' → logprob: -9.008312225341797
    6. '(r' → logprob: -10.008312225341797
    7. '(i' → logprob: -10.133312225341797
    8. ' (' → logprob: -10.258312225341797
    9. ' meat' → logprob: -11.008312225341797
    10. 'l' → logprob: -11.258312225341797

Token 376: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -2.816093228830141e-06
    2. 't' → logprob: -14.37500286102295
    3. 'ат' → logprob: -14.37500286102295
    4. ' meat' → logprob: -14.62500286102295
    5. 'a' → logprob: -15.25000286102295
    6. ' at' → logprob: -15.62500286102295
    7. '
' → logprob: -16.000001907348633
    8. '+' → logprob: -16.125001907348633
    9. '	at' → logprob: -16.375001907348633
    10. '_at' → logprob: -16.500001907348633

Token 377: '-l' (ID: 2887)
  Prédit: '-l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.11709778755903244
    2. '-' → logprob: -2.617097854614258
    3. ' -' → logprob: -3.742097854614258
    4. '-r' → logprob: -4.492097854614258
    5. '-)' → logprob: -6.617097854614258
    6. ')' → logprob: -7.492097854614258
    7. '-m' → logprob: -8.367097854614258
    8. '+' → logprob: -8.992097854614258
    9. ')-(' → logprob: -9.617097854614258
    10. '-L' → logprob: -9.867097854614258

Token 378: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0034078743774443865
    2. '1' → logprob: -6.003407955169678
    3. 'l' → logprob: -7.003407955169678
    4. 'i' → logprob: -12.37840747833252
    5. 'e' → logprob: -12.75340747833252
    6. '(l' → logprob: -13.25340747833252
    7. 'ax' → logprob: -13.62840747833252
    8. '_l' → logprob: -13.87840747833252
    9. '```' → logprob: -14.00340747833252
    10. '(' → logprob: -14.12840747833252

Token 379: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014751063426956534
    2. ')
' → logprob: -7.3764753341674805
    3. ' )' → logprob: -7.7514753341674805
    4. '   ' → logprob: -9.00147533416748
    5. '-' → logprob: -9.25147533416748
    6. ')*' → logprob: -10.12647533416748
    7. ')-(' → logprob: -10.25147533416748
    8. ')*(' → logprob: -10.37647533416748
    9. ' -' → logprob: -10.87647533416748
    10. '+' → logprob: -11.00147533416748

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10775098204612732
    2. ')' → logprob: -3.10775089263916
    3. '<|end|>' → logprob: -3.23275089263916
    4. '+' → logprob: -5.35775089263916
    5. '*' → logprob: -5.35775089263916
    6. '  ' → logprob: -6.10775089263916
    7. 'total' → logprob: -6.35775089263916
    8. ' ' → logprob: -6.35775089263916
    9. '(total' → logprob: -7.60775089263916
    10. ')*' → logprob: -7.98275089263916

Token 381: ' total' (ID: 3609)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7605271339416504
    2. ')' → logprob: -1.2605271339416504
    3. 'total' (adapté à ' total') → logprob: -1.8855271339416504
    4. ' total' → logprob: -2.7605271339416504
    5. ' ' → logprob: -4.51052713394165
    6. '+
' → logprob: -5.13552713394165
    7. '*' → logprob: -6.01052713394165
    8. '=' → logprob: -6.13552713394165
    9. '(total' → logprob: -6.13552713394165
    10. ')
' → logprob: -6.26052713394165

Token 382: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.08909028768539429
    2. '+=' → logprob: -2.464090347290039
    3. '   ' → logprob: -9.714090347290039
    4. '+' → logprob: -9.964090347290039
    5. ']+=' → logprob: -11.089090347290039
    6. ' ' → logprob: -11.714090347290039
    7. '=' → logprob: -12.339090347290039
    8. '  ' → logprob: -12.714090347290039
    9. '    ' → logprob: -12.714090347290039
    10. ' -=' → logprob: -13.464090347290039

Token 383: ' mul' (ID: 9975)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.03366021811962128
    2. ' mul' → logprob: -3.4086601734161377
    3. 'multip' → logprob: -12.033659934997559
    4. 'mult' → logprob: -13.033659934997559
    5. ' ' → logprob: -13.533659934997559
    6. 'max' → logprob: -14.283659934997559
    7. 'mu' → logprob: -14.533659934997559
    8. '```' → logprob: -14.846159934997559
    9. '_mul' → logprob: -14.908659934997559
    10. '   ' → logprob: -14.971159934997559

Token 384: '*(' (ID: 14793)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02624630555510521
    2. '
' → logprob: -3.7762463092803955
    3. '<|end|>' → logprob: -6.151246070861816
    4. ' print' → logprob: -8.401246070861816
    5. '+' → logprob: -8.651246070861816
    6. ')' → logprob: -9.026246070861816
    7. '```' → logprob: -9.276246070861816
    8. '  
' → logprob: -10.401246070861816
    9. '   ' → logprob: -10.526246070861816
    10. ' ' → logprob: -10.651246070861816

Token 385: 'i' (ID: 72)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7559168338775635
    2. 'i' → logprob: -0.8809168338775635
    3. '1' → logprob: -2.7559168338775635
    4. 'P' → logprob: -3.7559168338775635
    5. 'n' → logprob: -4.255916595458984
    6. '2' → logprob: -5.005916595458984
    7. '-' → logprob: -6.255916595458984
    8. '(i' → logprob: -6.505916595458984
    9. 'me' → logprob: -7.005916595458984
    10. 'l' → logprob: -7.380916595458984

Token 386: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15390533208847046
    2. ')' → logprob: -2.2789053916931152
    3. ' +' → logprob: -3.2789053916931152
    4. ' )' → logprob: -6.153905391693115
    5. '+)' → logprob: -8.278904914855957
    6. ')
' → logprob: -9.403904914855957
    7. '+
' → logprob: -9.653904914855957
    8. ' +
' → logprob: -11.278904914855957
    9. '+i' → logprob: -11.278904914855957
    10. ')+' → logprob: -11.653904914855957

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019579214858822525
    2. '2' → logprob: -9.125195503234863
    3. ' ' → logprob: -9.375195503234863
    4. '3' → logprob: -14.750195503234863
    5. '```' → logprob: -15.250195503234863
    6. '   ' → logprob: -15.375195503234863
    7. '11' → logprob: -16.25019645690918
    8. '
' → logprob: -16.31269645690918
    9. '...' → logprob: -16.50019645690918
    10. '+' → logprob: -16.62519645690918

Token 388: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00042745075188577175
    2. '+' → logprob: -8.50042724609375
    3. ')
' → logprob: -8.50042724609375
    4. ' )' → logprob: -11.00042724609375
    5. '+)' → logprob: -13.25042724609375
    6. '))' → logprob: -14.75042724609375
    7. ' +' → logprob: -15.00042724609375
    8. ')

' → logprob: -15.25042724609375
    9. '   ' → logprob: -15.50042724609375
    10. ')`' → logprob: -15.62542724609375

Token 389: 'print' (ID: 1598)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3521084785461426
    2. 'print' → logprob: -1.6021084785461426
    3. '<|end|>' → logprob: -2.7271084785461426
    4. ')' → logprob: -4.102108478546143
    5. '\n' → logprob: -4.977108478546143
    6. '```' → logprob: -6.352108478546143
    7. '+' → logprob: -6.602108478546143
    8. '[' → logprob: -7.227108478546143
    9. '+
' → logprob: -7.977108478546143
    10. ' ' → logprob: -8.102108001708984

Token 390: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.0002205828350270167
    2. '(' → logprob: -8.50022029876709
    3. 'total' → logprob: -11.00022029876709
    4. '()' → logprob: -16.000221252441406
    5. '(
' → logprob: -16.125221252441406
    6. ' (' → logprob: -16.750221252441406
    7. ' total' → logprob: -17.500221252441406
    8. ',total' → logprob: -17.625221252441406
    9. '(t' → logprob: -17.875221252441406
    10. '(final' → logprob: -18.375221252441406

Token 391: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.12127808178775e-05
    2. ' )' → logprob: -10.500051498413086
    3. '+' → logprob: -10.875051498413086
    4. ')
' → logprob: -12.625051498413086
    5. '))' → logprob: -14.750051498413086
    6. '+)' → logprob: -15.000051498413086
    7. ')`' → logprob: -15.250051498413086
    8. ')#' → logprob: -16.375051498413086
    9. '())' → logprob: -16.500051498413086
    10. ' +' → logprob: -16.750051498413086


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 389
Tokens correctement prédits (1ère position, stricte): 168
Tokens correctement prédits (1ère position, avec adaptation): 174
Tokens correctement prédits (top 10): 329
Précision stricte (1ère position): 43.19%
Précision adaptée (1ère position): 44.73%
Précision (top 10): 84.58%
================================================================================
