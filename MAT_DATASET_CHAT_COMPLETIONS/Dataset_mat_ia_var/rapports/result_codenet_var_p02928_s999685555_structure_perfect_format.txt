================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import collections as cl
import bisect as bs

sys.setrecursionlimit(100000)
mod = 10 ** 9 + 7
Max = sys.maxsize

def l():
    return list(map(int, input().split()))

def m():
    return map(int, input().split())

def onem():
    return int(input())

def s(x):
    a = []
    aa = x[0]
    su = 1
    for i in range(len(x) - 1):
        if aa != x[i + 1]:
            a.append([aa, su])
            aa = x[i + 1]
            su = 1
        else:
            su += 1
    a.append([aa, su])
    return a

def jo(x):
    return " ".join(map(str, x))

def max2(x):
    return max(map(max, x))

n, k = m()
a = l()
aaa = [0 for _ in range(n)]
co = [0 for _ in range(2002)]

for i in range(n - 1, -1, -1):
    aaa[i] = co[a[i]]
    for j in range(a[i] + 1, 2002):
        co[j] += 1

su = 0

for i in range(n - 1, -1, -1):
    su += k * aaa[i]
    su %= mod
    su += ((k * (k - 1)) // 2) * co[a[i]]
    su %= mod

print(su)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -7.755678961984813e-05
    2. 'os' → logprob: -9.500077247619629
    3. ' math' → logprob: -13.625077247619629
    4. ' re' → logprob: -14.500077247619629
    5. ' json' → logprob: -15.125077247619629
    6. '"os' → logprob: -15.375077247619629
    7. '_os' → logprob: -16.125078201293945
    8. ' io' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.375078201293945
    10. '	os' → logprob: -17.000078201293945

Token 5: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.044599298387765884
    2. 'import' → logprob: -4.669599533081055
    3. '\' → logprob: -4.794599533081055
    4. '

' → logprob: -5.044599533081055
    5. '
' → logprob: -5.169599533081055
    6. '\n' → logprob: -5.419599533081055
    7. 'newline' → logprob: -5.669599533081055
    8. ',' → logprob: -6.169599533081055
    9. '```' → logprob: -7.044599533081055
    10. '' → logprob: -7.544599533081055

Token 6: ' cl' (ID: 567)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8217805624008179
    2. 'col' → logprob: -1.3217805624008179
    3. ' col' → logprob: -1.8217805624008179
    4. ' cole' → logprob: -2.3217806816101074
    5. ' co' → logprob: -4.696780681610107
    6. 'collections' → logprob: -5.196780681610107
    7. '  ' → logprob: -5.321780681610107
    8. ' coll' → logprob: -5.696780681610107
    9. ' colle' → logprob: -6.071780681610107
    10. '    ' → logprob: -6.571780681610107

Token 7: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05610273405909538
    2. '_' → logprob: -3.806102752685547
    3. '\' → logprob: -4.681102752685547
    4. '\n' → logprob: -5.306102752685547
    5. 'n' → logprob: -5.431102752685547
    6. 'newline' → logprob: -5.681102752685547
    7. '' → logprob: -5.931102752685547
    8. '
' → logprob: -7.056102752685547
    9. 'a' → logprob: -7.056102752685547
    10. ',' → logprob: -7.806102752685547

Token 8: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2694569528102875
    2. '\n' → logprob: -2.3944568634033203
    3. '
' → logprob: -2.6444568634033203
    4. '\' → logprob: -4.01945686340332
    5. '

' → logprob: -4.14445686340332
    6. 'newline' → logprob: -4.89445686340332
    7. '' → logprob: -5.01945686340332
    8. 'import' → logprob: -5.01945686340332
    9. '.
' → logprob: -5.26945686340332
    10. ',' → logprob: -5.89445686340332

Token 9: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.017470037564635277
    2. 'os' → logprob: -5.392469882965088
    3. ' itertools' → logprob: -5.392469882965088
    4. ' re' → logprob: -5.517469882965088
    5. ' math' → logprob: -6.392469882965088
    6. ' typing' → logprob: -6.767469882965088
    7. ' numpy' → logprob: -7.767469882965088
    8. ' json' → logprob: -8.017470359802246
    9. ' functools' → logprob: -9.267470359802246
    10. ' pathlib' → logprob: -9.392470359802246

Token 10: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -8.506661833962426e-05
    2. 'e' → logprob: -10.12508487701416
    3. 't' → logprob: -10.50008487701416
    4. 'ec' → logprob: -11.37508487701416
    5. 'ected' → logprob: -12.87508487701416
    6. 'ection' → logprob: -13.75008487701416
    7. 'ectl' → logprob: -14.12508487701416
    8. '```' → logprob: -14.75008487701416
    9. 'ector' → logprob: -15.87508487701416
    10. 'ectin' → logprob: -16.375085830688477

Token 11: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.018127942457795143
    2. '
' → logprob: -5.393127918243408
    3. '' → logprob: -5.893127918243408
    4. '\' → logprob: -6.268127918243408
    5. 'import' → logprob: -6.643127918243408
    6. 'newline' → logprob: -7.018127918243408
    7. '_' → logprob: -7.143127918243408
    8. '```' → logprob: -7.268127918243408
    9. '.
' → logprob: -7.393127918243408
    10. '\n' → logprob: -7.393127918243408

Token 12: ' bs' (ID: 35414)
  Prédit: ' bs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bs' → logprob: -0.25160592794418335
    2. 'bs' → logprob: -2.001605987548828
    3. ' bis' → logprob: -3.626605987548828
    4. ' bi' → logprob: -3.751605987548828
    5. 'b' → logprob: -4.376605987548828
    6. 'bis' → logprob: -4.626605987548828
    7. ' b' → logprob: -4.751605987548828
    8. 'bi' → logprob: -6.001605987548828
    9. ' ' → logprob: -6.251605987548828
    10. '_bs' → logprob: -6.501605987548828

Token 13: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07026807218790054
    2. '\n' → logprob: -4.070268154144287
    3. 'newline' → logprob: -4.445268154144287
    4. '\' → logprob: -4.945268154144287
    5. '
' → logprob: -5.070268154144287
    6. '```' → logprob: -5.070268154144287
    7. 'import' → logprob: -5.570268154144287
    8. '' → logprob: -5.695268154144287
    9. '#' → logprob: -6.195268154144287
    10. '[' → logprob: -6.445268154144287

Token 14: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.48894038796424866
    2. 'def' → logprob: -1.9889403581619263
    3. '#' → logprob: -2.363940477371216
    4. 'import' → logprob: -3.738940477371216
    5. ',' → logprob: -3.863940477371216
    6. '\' → logprob: -3.863940477371216
    7. 'class' → logprob: -4.363940238952637
    8. '_' → logprob: -4.488940238952637
    9. 'from' → logprob: -4.488940238952637
    10. 'data' → logprob: -5.113940238952637

Token 15: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.081584716506768e-05
    2. ' .' → logprob: -11.750020980834961
    3. '.`' → logprob: -13.375020980834961
    4. '.exit' → logprob: -13.500020980834961
    5. '.​' → logprob: -13.500020980834961
    6. '.stdout' → logprob: -13.625020980834961
    7. '."""' → logprob: -14.000020980834961
    8. '.user' → logprob: -14.250020980834961
    9. '.readline' → logprob: -14.500020980834961
    10. '.stdin' → logprob: -14.625020980834961

Token 16: 'rec' (ID: 9285)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.6157343983650208
    2. 'rec' → logprob: -1.740734338760376
    3. '_' → logprob: -2.365734338760376
    4. '_version' → logprob: -2.865734338760376
    5. 'limit' → logprob: -3.490734338760376
    6. '_trace' → logprob: -3.740734338760376
    7. '_rec' → logprob: -4.740734577178955
    8. '_int' → logprob: -5.240734577178955
    9. '_ip' → logprob: -5.615734577178955
    10. '_exc' → logprob: -5.615734577178955

Token 17: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.016088804230093956
    2. 'ur' → logprob: -4.266088962554932
    3. 'urs' → logprob: -6.641088962554932
    4. 'ursive' → logprob: -8.141088485717773
    5. 'ursor' → logprob: -8.641088485717773
    6. 'urf' → logprob: -9.891088485717773
    7. 'limit' → logprob: -9.891088485717773
    8. 'urst' → logprob: -11.516088485717773
    9. 'urse' → logprob: -11.891088485717773
    10. '_' → logprob: -12.641088485717773

Token 18: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0007114782347343862
    2. '_limit' → logprob: -7.250711441040039
    3. ' limit' → logprob: -14.250711441040039
    4. 'Limit' → logprob: -15.375711441040039
    5. '-limit' → logprob: -15.500711441040039
    6. 'lim' → logprob: -15.625711441040039
    7. 'depth' → logprob: -15.625711441040039
    8. '.limit' → logprob: -16.25071144104004
    9. '_LIMIT' → logprob: -17.12571144104004
    10. '_depth' → logprob: -17.37571144104004

Token 19: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.981667537620524e-06
    2. ' (' → logprob: -13.625001907348633
    3. '(
' → logprob: -15.375001907348633
    4. '((' → logprob: -15.625001907348633
    5. '()' → logprob: -16.500001907348633
    6. '(

' → logprob: -16.500001907348633
    7. '("("' → logprob: -16.875001907348633
    8. '('' → logprob: -17.875001907348633
    9. '(int' → logprob: -18.250001907348633
    10. ')' → logprob: -18.500001907348633

Token 20: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0022119891364127398
    2. '100' → logprob: -6.127212047576904
    3. ' ' → logprob: -11.377211570739746
    4. '300' → logprob: -12.002211570739746
    5. '200' → logprob: -12.502211570739746
    6. '250' → logprob: -13.252211570739746
    7. '500' → logprob: -13.377211570739746
    8. '1' → logprob: -13.752211570739746
    9. '150' → logprob: -14.877211570739746
    10. '400' → logprob: -15.627211570739746

Token 21: '000' (ID: 1302)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.4760569632053375
    2. '000' → logprob: -0.9760569334030151
    3. '0' → logprob: -6.226057052612305
    4. ')' → logprob: -15.601057052612305
    5. '_' → logprob: -16.101057052612305
    6. '50' → logprob: -16.226057052612305
    7. '050' → logprob: -16.226057052612305
    8. ' ' → logprob: -16.726057052612305
    9. '001' → logprob: -17.101057052612305
    10. '003' → logprob: -17.101057052612305

Token 22: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005937686190009117
    2. '0' → logprob: -5.130937576293945
    3. ' )' → logprob: -12.255937576293945
    4. '1' → logprob: -13.380937576293945
    5. '))' → logprob: -13.380937576293945
    6. '+' → logprob: -14.630937576293945
    7. ' ' → logprob: -16.130937576293945
    8. '`)' → logprob: -16.505937576293945
    9. ')
' → logprob: -16.630937576293945
    10. '```' → logprob: -16.630937576293945

Token 23: 'mod' (ID: 4847)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19055943191051483
    2. '
' → logprob: -1.9405593872070312
    3. '

' → logprob: -4.690559387207031
    4. 'n' → logprob: -5.315559387207031
    5. 'class' → logprob: -5.440559387207031
    6. '```' → logprob: -5.940559387207031
    7. '\' → logprob: -6.065559387207031
    8. '\n' → logprob: -6.190559387207031
    9. '#' → logprob: -6.315559387207031
    10. '
' → logprob: -7.315559387207031

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2523689568042755
    2. ' =' → logprob: -1.5023689270019531
    3. ' ' → logprob: -8.877368927001953
    4. '_' → logprob: -9.002368927001953
    5. ' ' → logprob: -10.252368927001953
    6. ',' → logprob: -11.002368927001953
    7. '1' → logprob: -11.252368927001953
    8. '.' → logprob: -11.252368927001953
    9. 'ulus' → logprob: -11.877368927001953
    10. '=

' → logprob: -11.877368927001953

Token 25: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16030505299568176
    2. '10' → logprob: -1.9103050231933594
    3. '100' → logprob: -9.53530502319336
    4. 'int' → logprob: -12.66030502319336
    5. ' ' → logprob: -13.03530502319336
    6. ' int' → logprob: -13.41030502319336
    7. '1' → logprob: -13.78530502319336
    8. '998' → logprob: -16.16030502319336
    9. ' 
' → logprob: -16.28530502319336
    10. '0' → logprob: -16.41030502319336

Token 26: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0031871015671640635
    2. '100' → logprob: -5.75318717956543
    3. ' ' → logprob: -12.50318717956543
    4. '998' → logprob: -12.87818717956543
    5. 'int' → logprob: -13.12818717956543
    6. '1' → logprob: -13.87818717956543
    7. '(' → logprob: -16.50318717956543
    8. '`' → logprob: -17.75318717956543
    9. 'pow' → logprob: -17.75318717956543
    10. '2' → logprob: -18.12818717956543

Token 27: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.007859057746827602
    2. '**' → logprob: -5.257859230041504
    3. '09' → logprob: -6.007859230041504
    4. '7' → logprob: -9.882859230041504
    5. '000' → logprob: -9.882859230041504
    6. '07' → logprob: -10.507859230041504
    7. '0' → logprob: -11.007859230041504
    8. '```' → logprob: -12.007859230041504
    9. '00' → logprob: -12.382859230041504
    10. '009' → logprob: -12.757859230041504

Token 28: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.8624639324116288e-06
    2. '09' → logprob: -13.250001907348633
    3. '+' → logprob: -18.125001907348633
    4. '```' → logprob: -18.875001907348633
    5. ' ' → logprob: -19.375001907348633
    6. '10' → logprob: -20.750001907348633
    7. '９' → logprob: -21.750001907348633
    8. '18' → logprob: -22.125001907348633
    9. '009' → logprob: -22.250001907348633
    10. '``' → logprob: -22.625001907348633

Token 29: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -18.125
    3. '+' → logprob: -19.375
    4. '```' → logprob: -21.75
    5. '10' → logprob: -22.5
    6. ' ' → logprob: -23.125
    7. '９' → logprob: -23.25
    8. '18' → logprob: -23.5
    9. '19' → logprob: -24.625
    10. '15' → logprob: -24.875

Token 30: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0037405795883387327
    2. ' +' → logprob: -5.6287407875061035
    3. '7' → logprob: -8.878740310668945
    4. '＋' → logprob: -15.003740310668945
    5. '+
' → logprob: -15.503740310668945
    6. ' ' → logprob: -15.628740310668945
    7. ' plus' → logprob: -15.628740310668945
    8. '+

' → logprob: -16.003740310668945
    9. 'plus' → logprob: -17.128740310668945
    10. ' ' → logprob: -17.253740310668945

Token 31: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.0
    3. '+' → logprob: -16.375
    4. '```' → logprob: -19.25
    5. '9' → logprob: -19.5
    6. '

' → logprob: -19.625
    7. '07' → logprob: -19.625
    8. '   ' → logprob: -19.75
    9. '  ' → logprob: -20.8125
    10. '７' → logprob: -21.5

Token 32: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -19.25
    3. '+' → logprob: -19.5
    4. '```' → logprob: -19.625
    5. '

' → logprob: -21.25
    6. '７' → logprob: -21.75
    7. '   ' → logprob: -22.125
    8. '07' → logprob: -22.75
    9. '``' → logprob: -22.875
    10. '9' → logprob: -22.875

Token 33: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8355727195739746
    2. '
' → logprob: -1.4605727195739746
    3. '

' → logprob: -1.4605727195739746
    4. '\' → logprob: -3.2105727195739746
    5. '' → logprob: -3.7105727195739746
    6. '\n' → logprob: -3.9605727195739746
    7. '
' → logprob: -4.710572719573975
    8. 'n' → logprob: -5.960572719573975
    9. '#' → logprob: -6.585572719573975
    10. '```' → logprob: -6.710572719573975

Token 34: 'Max' (ID: 6499)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34981656074523926
    2. 'n' → logprob: -1.8498165607452393
    3. '
' → logprob: -2.5998165607452393
    4. '\' → logprob: -4.34981632232666
    5. '' → logprob: -4.34981632232666
    6. '

' → logprob: -4.47481632232666
    7. 'd' → logprob: -4.59981632232666
    8. 'class' → logprob: -5.22481632232666
    9. '#' → logprob: -5.34981632232666
    10. '\n' → logprob: -6.34981632232666

Token 35: ' =' (ID: 314)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06134216859936714
    2. 'n' → logprob: -4.186342239379883
    3. '_n' → logprob: -4.936342239379883
    4. '_len' → logprob: -5.186342239379883
    5. '_val' → logprob: -5.561342239379883
    6. 'Val' → logprob: -5.561342239379883
    7. 'Len' → logprob: -5.561342239379883
    8. '_N' → logprob: -5.686342239379883
    9. ' =' → logprob: -5.811342239379883
    10. 'Depth' → logprob: -6.061342239379883

Token 36: ' sys' (ID: 12228)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.24989300966262817
    2. ' ' → logprob: -1.9998929500579834
    3. '100' → logprob: -2.4998929500579834
    4. '200' → logprob: -6.7498931884765625
    5. '1' → logprob: -7.1248931884765625
    6. '2' → logprob: -7.7498931884765625
    7. 'int' → logprob: -7.8748931884765625
    8. '500' → logprob: -8.124893188476562
    9. '400' → logprob: -9.124893188476562
    10. '999' → logprob: -9.749893188476562

Token 37: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.020821787416934967
    2. '.' → logprob: -5.520821571350098
    3. '.set' → logprob: -5.520821571350098
    4. '._' → logprob: -5.520821571350098
    5. '.argv' → logprob: -5.645821571350098
    6. 'max' → logprob: -6.395821571350098
    7. '.Max' → logprob: -7.645821571350098
    8. '.stdin' → logprob: -7.645821571350098
    9. ' .' → logprob: -7.770821571350098
    10. '.exit' → logprob: -8.020821571350098

Token 38: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0009454108658246696
    2. 'int' → logprob: -7.000945568084717
    3. 'ize' → logprob: -10.625945091247559
    4. 'max' → logprob: -11.875945091247559
    5. 'siz' → logprob: -13.625945091247559
    6. ' size' → logprob: -14.000945091247559
    7. 'imax' → logprob: -15.250945091247559
    8. 'sizeof' → logprob: -16.625946044921875
    9. 'sizei' → logprob: -17.250946044921875
    10. 'unicode' → logprob: -17.250946044921875

Token 39: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40502452850341797
    2. '

' → logprob: -2.155024528503418
    3. 'def' → logprob: -2.280024528503418
    4. 'n' → logprob: -3.155024528503418
    5. 'class' → logprob: -3.780024528503418
    6. '' → logprob: -3.905024528503418
    7. '
' → logprob: -4.530024528503418
    8. ' 

' → logprob: -5.405024528503418
    9. '\n' → logprob: -5.905024528503418
    10. ' 
' → logprob: -6.155024528503418

Token 40: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6912686824798584
    2. 'def' → logprob: -0.9412686824798584
    3. 'class' → logprob: -2.5662686824798584
    4. '
' → logprob: -3.9412686824798584
    5. 'N' → logprob: -5.8162689208984375
    6. 'd' → logprob: -6.1912689208984375
    7. '

' → logprob: -6.3162689208984375
    8. 'a' → logprob: -6.4412689208984375
    9. '#' → logprob: -6.6912689208984375
    10. '' → logprob: -6.8162689208984375

Token 41: ' l' (ID: 305)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.16647228598594666
    2. ' dfs' → logprob: -1.916472315788269
    3. ' solve' → logprob: -5.916472434997559
    4. ' ' → logprob: -6.541472434997559
    5. ' dp' → logprob: -7.166472434997559
    6. ' a' → logprob: -8.916472434997559
    7. ' DFS' → logprob: -9.041472434997559
    8. '_' → logprob: -9.166472434997559
    9. ' factorial' → logprob: -9.166472434997559
    10. ' factor' → logprob: -9.416472434997559

Token 42: '():
' (ID: 8595)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.10567101091146469
    2. 'eft' → logprob: -2.605670928955078
    3. 'e' → logprob: -4.480670928955078
    4. 'ength' → logprob: -4.855670928955078
    5. 'ist' → logprob: -6.230670928955078
    6. 'cm' → logprob: -6.230670928955078
    7. 'is' → logprob: -6.605670928955078
    8. 'og' → logprob: -7.355670928955078
    9. 'eg' → logprob: -8.730670928955078
    10. 'ast' → logprob: -8.855670928955078

Token 43: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2373470515012741
    2. 'return' → logprob: -1.6123470067977905
    3. '   ' → logprob: -4.73734712600708
    4. 'eturn' → logprob: -6.98734712600708
    5. 'int' → logprob: -7.11234712600708
    6. ' ' → logprob: -7.36234712600708
    7. ' list' → logprob: -8.737346649169922
    8. ' int' → logprob: -9.112346649169922
    9. '    ' → logprob: -9.112346649169922
    10. '	return' → logprob: -9.612346649169922

Token 44: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11984819918870926
    2. 'int' → logprob: -2.6198482513427734
    3. 'list' → logprob: -3.8698482513427734
    4. 'input' → logprob: -4.869848251342773
    5. 'map' → logprob: -4.994848251342773
    6. 'sys' → logprob: -5.994848251342773
    7. ' return' → logprob: -6.494848251342773
    8. '[]' → logprob: -7.744848251342773
    9. '[int' → logprob: -9.369848251342773
    10. ' list' → logprob: -9.494848251342773

Token 45: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9982466101646423
    2. 'list' → logprob: -1.123246669769287
    3. ' list' → logprob: -1.373246669769287
    4. ' int' → logprob: -3.248246669769287
    5. '[]' → logprob: -5.123246669769287
    6. ' map' → logprob: -5.748246669769287
    7. '[int' → logprob: -6.498246669769287
    8. 'map' → logprob: -6.623246669769287
    9. ' []' → logprob: -7.498246669769287
    10. 'input' → logprob: -7.873246669769287

Token 46: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.010248956270515919
    2. '(' → logprob: -4.635249137878418
    3. '()' → logprob: -7.760249137878418
    4. '(int' → logprob: -9.885249137878418
    5. '(input' → logprob: -11.510249137878418
    6. 'map' → logprob: -13.135249137878418
    7. ' map' → logprob: -13.635249137878418
    8. '(
' → logprob: -14.760249137878418
    9. '(range' → logprob: -14.760249137878418
    10. '(eval' → logprob: -14.885249137878418

Token 47: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.636475493200123e-05
    2. '(' → logprob: -9.750076293945312
    3. '<|end|>' → logprob: -12.125076293945312
    4. 'int' → logprob: -12.250076293945312
    5. '<int' → logprob: -13.125076293945312
    6. '[int' → logprob: -13.250076293945312
    7. '(str' → logprob: -13.750076293945312
    8. '=int' → logprob: -13.875076293945312
    9. ',int' → logprob: -14.250076293945312
    10. '(
' → logprob: -14.625076293945312

Token 48: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.018747027963399887
    2. 'input' → logprob: -4.768746852874756
    3. '(' → logprob: -4.893746852874756
    4. '(sys' → logprob: -6.643746852874756
    5. ',input' → logprob: -6.768746852874756
    6. ' input' → logprob: -9.893747329711914
    7. ')' → logprob: -10.518747329711914
    8. ' (' → logprob: -10.768747329711914
    9. '(
' → logprob: -11.268747329711914
    10. 'sys' → logprob: -12.143747329711914

Token 49: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04314899817109108
    2. ' input' → logprob: -3.168148994445801
    3. 'sys' → logprob: -9.2931489944458
    4. ' sys' → logprob: -10.2931489944458
    5. ',input' → logprob: -12.0431489944458
    6. ')' → logprob: -12.5431489944458
    7. '	input' → logprob: -12.5431489944458
    8. '=input' → logprob: -12.6681489944458
    9. '(input' → logprob: -12.7931489944458
    10. ' ' → logprob: -13.1681489944458

Token 50: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.5822400857578032e-05
    2. '()' → logprob: -11.125025749206543
    3. '()))' → logprob: -11.625025749206543
    4. ' ().' → logprob: -14.375025749206543
    5. '())' → logprob: -14.750025749206543
    6. '(' → logprob: -14.875025749206543
    7. '()));' → logprob: -15.125025749206543
    8. '())))' → logprob: -15.875025749206543
    9. '()
' → logprob: -16.00002670288086
    10. '))' → logprob: -17.00002670288086

Token 51: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000726252153981477
    2. 'strip' → logprob: -7.250726222991943
    3. 'rstrip' → logprob: -11.625726699829102
    4. ' split' → logprob: -11.875726699829102
    5. '(split' → logprob: -15.625726699829102
    6. 'read' → logprob: -15.750726699829102
    7. 'spl' → logprob: -16.0007266998291
    8. ' strip' → logprob: -17.6257266998291
    9. ')' → logprob: -19.0007266998291
    10. '_split' → logprob: -19.1257266998291

Token 52: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.17029130458831787
    2. '()))' → logprob: -1.9202913045883179
    3. ')))' → logprob: -5.545291423797607
    4. '()' → logprob: -5.670291423797607
    5. ')' → logprob: -6.545291423797607
    6. '(' → logprob: -7.420291423797607
    7. '())' → logprob: -7.545291423797607
    8. '())))' → logprob: -9.42029094696045
    9. ' ))' → logprob: -11.42029094696045
    10. ' ' → logprob: -13.29529094696045

Token 53: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11111868172883987
    2. 'n' → logprob: -2.611118793487549
    3. 'd' → logprob: -3.611118793487549
    4. '\' → logprob: -5.861118793487549
    5. 'class' → logprob: -6.486118793487549
    6. '\n' → logprob: -9.73611831665039
    7. '```' → logprob: -10.11111831665039
    8. 'de' → logprob: -10.11111831665039
    9. 'N' → logprob: -10.23611831665039
    10. 's' → logprob: -10.48611831665039

Token 54: ' m' (ID: 284)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.812655508518219
    2. 's' → logprob: -1.5626554489135742
    3. ' s' → logprob: -2.062655448913574
    4. ' r' → logprob: -2.062655448913574
    5. 'i' → logprob: -3.562655448913574
    6. ' i' → logprob: -4.187655448913574
    7. 'n' → logprob: -4.187655448913574
    8. ' main' → logprob: -4.812655448913574
    9. 'd' → logprob: -5.062655448913574
    10. ' n' → logprob: -5.187655448913574

Token 55: '():
' (ID: 8595)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.005317362025380135
    2. 'a' → logprob: -6.005317211151123
    3. 'ax' → logprob: -6.630317211151123
    4. 'ain' → logprob: -7.130317211151123
    5. 'ult' → logprob: -8.255317687988281
    6. 'ean' → logprob: -9.630317687988281
    7. 'od' → logprob: -9.755317687988281
    8. 'i' → logprob: -10.255317687988281
    9. 'e' → logprob: -10.505317687988281
    10. 'in' → logprob: -10.505317687988281

Token 56: '   ' (ID: 271)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3576706647872925
    2. 'return' → logprob: -1.3576706647872925
    3. 'map' → logprob: -3.607670783996582
    4. ' return' → logprob: -4.982670783996582
    5. '(int' → logprob: -5.857670783996582
    6. ' map' → logprob: -6.357670783996582
    7. '   ' → logprob: -6.357670783996582
    8. ' int' → logprob: -6.857670783996582
    9. 'list' → logprob: -7.107670783996582
    10. '[int' → logprob: -7.607670783996582

Token 57: ' return' (ID: 622)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16719236969947815
    2. 'map' → logprob: -2.1671924591064453
    3. 'return' (adapté à ' return') → logprob: -3.2921924591064453
    4. 'list' → logprob: -6.792192459106445
    5. '(int' → logprob: -7.417192459106445
    6. '[int' → logprob: -8.792192459106445
    7. ' map' → logprob: -9.292192459106445
    8. 'input' → logprob: -9.667192459106445
    9. '[]' → logprob: -10.042192459106445
    10. '()' → logprob: -10.292192459106445

Token 58: ' map' (ID: 4014)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3083477318286896
    2. 'map' → logprob: -1.6833477020263672
    3. ' map' → logprob: -2.808347702026367
    4. ' int' → logprob: -4.308347702026367
    5. 'input' → logprob: -5.933347702026367
    6. 'list' → logprob: -6.183347702026367
    7. ' list' → logprob: -7.683347702026367
    8. ' input' → logprob: -8.308347702026367
    9. 'tuple' → logprob: -8.933347702026367
    10. 'str' → logprob: -9.433347702026367

Token 59: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00038598617538809776
    2. 'int' → logprob: -7.875385761260986
    3. '(' → logprob: -12.375386238098145
    4. '<int' → logprob: -14.000386238098145
    5. '[int' → logprob: -15.625386238098145
    6. '(str' → logprob: -15.750386238098145
    7. '=int' → logprob: -16.000385284423828
    8. ',int' → logprob: -16.250385284423828
    9. ']int' → logprob: -16.250385284423828
    10. '<|end|>' → logprob: -17.000385284423828

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009942247532308102
    2. ',input' → logprob: -5.009942054748535
    3. '(input' → logprob: -6.009942054748535
    4. '(' → logprob: -7.384942054748535
    5. ' ,' → logprob: -9.509942054748535
    6. '(),' → logprob: -9.884942054748535
    7. ')' → logprob: -12.009942054748535
    8. 'input' → logprob: -12.009942054748535
    9. ' (' → logprob: -12.134942054748535
    10. ',int' → logprob: -13.384942054748535

Token 61: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931495666503906
    2. ' input' → logprob: -0.6931495666503906
    3. ' ' → logprob: -13.81814956665039
    4. ',input' → logprob: -14.56814956665039
    5. '=input' → logprob: -15.19314956665039
    6. '(input' → logprob: -15.44314956665039
    7. '	input' → logprob: -15.69314956665039
    8. ')' → logprob: -16.44314956665039
    9. '<input' → logprob: -17.44314956665039
    10. '_input' → logprob: -17.69314956665039

Token 62: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003790760529227555
    2. '()' → logprob: -8.000378608703613
    3. '(' → logprob: -10.375378608703613
    4. ' ().' → logprob: -12.000378608703613
    5. '()).' → logprob: -13.250378608703613
    6. '())' → logprob: -13.500378608703613
    7. '.' → logprob: -13.875378608703613
    8. ')' → logprob: -14.375378608703613
    9. '().__' → logprob: -14.500378608703613
    10. '（）' → logprob: -15.125378608703613

Token 63: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.41866585687967e-06
    2. ')' → logprob: -12.750008583068848
    3. 'strip' → logprob: -12.875008583068848
    4. ' split' → logprob: -13.125008583068848
    5. 'spl' → logprob: -14.875008583068848
    6. '(split' → logprob: -15.125008583068848
    7. ').' → logprob: -15.875008583068848
    8. 'plit' → logprob: -16.50000762939453
    9. 's' → logprob: -16.62500762939453
    10. '.split' → logprob: -17.62500762939453

Token 64: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1861589103937149
    2. ')' → logprob: -1.9361588954925537
    3. '()' → logprob: -3.6861588954925537
    4. '()))' → logprob: -8.061159133911133
    5. '))' → logprob: -8.561159133911133
    6. '())
' → logprob: -11.561159133911133
    7. ' ())' → logprob: -12.186159133911133
    8. '(' → logprob: -12.561159133911133
    9. '();)' → logprob: -13.186159133911133
    10. '()
' → logprob: -13.936159133911133

Token 65: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08729542791843414
    2. 'n' → logprob: -2.7122955322265625
    3. 'class' → logprob: -4.3372955322265625
    4. 'd' → logprob: -5.5872955322265625
    5. '\' → logprob: -8.212295532226562
    6. 'N' → logprob: -10.337295532226562
    7. 'ndef' → logprob: -10.712295532226562
    8. 'a' → logprob: -11.212295532226562
    9. '\n' → logprob: -11.337295532226562
    10. 's' → logprob: -11.462295532226562

Token 66: ' on' (ID: 402)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3583732545375824
    2. 'n' → logprob: -2.8583731651306152
    3. ' n' → logprob: -2.9833731651306152
    4. 'main' → logprob: -2.9833731651306152
    5. 'i' → logprob: -3.6083731651306152
    6. 's' → logprob: -3.7333731651306152
    7. ' s' → logprob: -3.7333731651306152
    8. ' i' → logprob: -3.9833731651306152
    9. 'r' → logprob: -4.608373165130615
    10. 'd' → logprob: -4.983373165130615

Token 67: 'em' (ID: 347)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0003716854262165725
    2. 'ce' → logprob: -8.375371932983398
    3. 'es' → logprob: -10.000371932983398
    4. 'ly' → logprob: -10.750371932983398
    5. 'eil' → logprob: -10.875371932983398
    6. 'eline' → logprob: -11.125371932983398
    7. 'line' → logprob: -11.750371932983398
    8. 'ext' → logprob: -11.875371932983398
    9. 'el' → logprob: -12.000371932983398
    10. 'ee' → logprob: -12.250371932983398

Token 68: '():
' (ID: 8595)
  Prédit: 'ore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ore' → logprob: -0.2722265422344208
    2. 'e' → logprob: -1.6472265720367432
    3. 'ax' → logprob: -3.522226572036743
    4. 'line' → logprob: -5.522226333618164
    5. 'ine' → logprob: -5.897226333618164
    6. '_time' → logprob: -6.647226333618164
    7. 'y' → logprob: -7.022226333618164
    8. 'time' → logprob: -7.147226333618164
    9. 'um' → logprob: -7.522226333618164
    10. 't' → logprob: -7.647226333618164

Token 69: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.101863980293274
    2. 'int' → logprob: -1.601863980293274
    3. ' int' → logprob: -1.726863980293274
    4. ' map' → logprob: -2.4768638610839844
    5. '   ' → logprob: -2.9768638610839844
    6. 'return' → logprob: -3.7268638610839844
    7. ' list' → logprob: -3.7268638610839844
    8. '    ' → logprob: -3.8518638610839844
    9. ' range' → logprob: -4.226863861083984
    10. ' =' → logprob: -4.601863861083984

Token 70: ' return' (ID: 622)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7891387343406677
    2. ' return' → logprob: -1.2891387939453125
    3. ' int' → logprob: -2.0391387939453125
    4. 'return' (adapté à ' return') → logprob: -2.0391387939453125
    5. ' map' → logprob: -5.4141387939453125
    6. '   ' → logprob: -6.4141387939453125
    7. '(int' → logprob: -6.6641387939453125
    8. 'map' → logprob: -7.1641387939453125
    9. 'n' → logprob: -7.7891387939453125
    10. ' ' → logprob: -8.789138793945312

Token 71: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.22449666261672974
    2. 'int' → logprob: -1.724496603012085
    3. ' map' → logprob: -4.724496841430664
    4. ' next' → logprob: -5.349496841430664
    5. '1' → logprob: -5.724496841430664
    6. ' ' → logprob: -6.349496841430664
    7. ' m' → logprob: -6.474496841430664
    8. 'map' → logprob: -6.974496841430664
    9. 'm' → logprob: -7.099496841430664
    10. 'next' → logprob: -8.474496841430664

Token 72: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0011734402505680919
    2. '(' → logprob: -6.751173496246338
    3. 'input' → logprob: -12.87617301940918
    4. ' (' → logprob: -15.37617301940918
    5. '(int' → logprob: -15.75117301940918
    6. '(sys' → logprob: -16.87617301940918
    7. '(in' → logprob: -17.12617301940918
    8. '(inp' → logprob: -17.37617301940918
    9. ' input' → logprob: -17.75117301940918
    10. '(
' → logprob: -17.75117301940918

Token 73: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008698954246938229
    2. '()' → logprob: -4.7586989402771
    3. '()))' → logprob: -10.508699417114258
    4. '().' → logprob: -10.633699417114258
    5. ' ())' → logprob: -11.258699417114258
    6. ')' → logprob: -11.383699417114258
    7. '();)' → logprob: -12.758699417114258
    8. '(' → logprob: -13.258699417114258
    9. '()]' → logprob: -13.633699417114258
    10. '())
' → logprob: -14.008699417114258

Token 74: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.032396964728832245
    2. 'n' → logprob: -3.7823970317840576
    3. 'd' → logprob: -5.1573967933654785
    4. 'class' → logprob: -5.7823967933654785
    5. '\' → logprob: -8.657397270202637
    6. 'for' → logprob: -10.032397270202637
    7. '#' → logprob: -11.407397270202637
    8. 't' → logprob: -11.532397270202637
    9. 'ndef' → logprob: -12.032397270202637
    10. 'N' → logprob: -12.407397270202637

Token 75: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5930496454238892
    2. ' s' → logprob: -2.2180495262145996
    3. 'two' → logprob: -2.9680495262145996
    4. 'n' → logprob: -3.0930495262145996
    5. 'main' → logprob: -3.0930495262145996
    6. ' main' → logprob: -3.3430495262145996
    7. ' two' → logprob: -3.5930495262145996
    8. 't' → logprob: -4.3430495262146
    9. 'on' → logprob: -4.4680495262146
    10. 'tw' → logprob: -4.5930495262146

Token 76: '(x' (ID: 4061)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.5024162530899048
    2. 'trip' → logprob: -1.8774162530899048
    3. '():' → logprob: -2.1274161338806152
    4. 'tring' → logprob: -2.7524161338806152
    5. 'plit' → logprob: -3.1274161338806152
    6. '()' → logprob: -5.002416133880615
    7. 'tri' → logprob: -6.127416133880615
    8. 'canf' → logprob: -6.377416133880615
    9. 't' → logprob: -6.877416133880615
    10. 'olve' → logprob: -7.377416133880615

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012985693756490946
    2. ')' → logprob: -6.751298427581787
    3. '):
' → logprob: -9.251298904418945
    4. ' ):' → logprob: -10.751298904418945
    5. ':' → logprob: -11.751298904418945
    6. ')：' → logprob: -14.876298904418945
    7. ')):' → logprob: -14.876298904418945
    8. '():' → logprob: -15.001298904418945
    9. '):
' → logprob: -15.251298904418945
    10. ':str' → logprob: -15.376298904418945

Token 78: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.42545026540756226
    2. ' return' → logprob: -1.550450325012207
    3. '   ' → logprob: -2.050450325012207
    4. 'x' → logprob: -5.675450325012207
    5. 'set' → logprob: -7.050450325012207
    6. ' x' → logprob: -7.175450325012207
    7. '	return' → logprob: -8.175450325012207
    8. 'len' → logprob: -9.925450325012207
    9. ' set' → logprob: -10.050450325012207
    10. 'sorted' → logprob: -10.175450325012207

Token 79: ' a' (ID: 261)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4798021912574768
    2. ' return' → logprob: -0.9798021912574768
    3. '   ' → logprob: -5.229802131652832
    4. 'x' → logprob: -8.854802131652832
    5. '	return' → logprob: -9.854802131652832
    6. 'eturn' → logprob: -10.229802131652832
    7. ' x' → logprob: -10.604802131652832
    8. 's' → logprob: -10.979802131652832
    9. 'for' → logprob: -11.229802131652832
    10. 'print' → logprob: -11.229802131652832

Token 80: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43387290835380554
    2. ' =' → logprob: -1.058872938156128
    3. 'rg' → logprob: -7.183872699737549
    4. 's' → logprob: -7.308872699737549
    5. '=input' → logprob: -7.308872699737549
    6. '=b' → logprob: -7.683872699737549
    7. '=int' → logprob: -7.933872699737549
    8. '=x' → logprob: -8.183873176574707
    9. '=len' → logprob: -8.183873176574707
    10. '=s' → logprob: -8.308873176574707

Token 81: ' []
' (ID: 8911)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.925613284111023
    2. 'list' → logprob: -1.050613284111023
    3. ' x' → logprob: -2.6756134033203125
    4. ' list' → logprob: -2.6756134033203125
    5. '[]' → logprob: -3.1756134033203125
    6. 'sorted' → logprob: -3.9256134033203125
    7. 'set' → logprob: -4.1756134033203125
    8. '[x' → logprob: -4.3006134033203125
    9. 'str' → logprob: -4.9256134033203125
    10. ' []' → logprob: -4.9256134033203125

Token 82: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3905206322669983
    2. ' for' → logprob: -1.2655205726623535
    3. '   ' → logprob: -3.8905205726623535
    4. ' ' → logprob: -5.0155205726623535
    5. '	for' → logprob: -5.0155205726623535
    6. 'n' → logprob: -6.0155205726623535
    7. 'i' → logprob: -6.6405205726623535
    8. 'x' → logprob: -7.6405205726623535
    9. 'd' → logprob: -7.6405205726623535
    10. '
' → logprob: -7.7655205726623535

Token 83: ' aa' (ID: 40260)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35853153467178345
    2. ' for' → logprob: -1.2335314750671387
    3. '   ' → logprob: -5.983531475067139
    4. 'i' → logprob: -6.233531475067139
    5. 'n' → logprob: -6.233531475067139
    6. 'x' → logprob: -7.108531475067139
    7. 'c' → logprob: -7.858531475067139
    8. ' stack' → logprob: -7.983531475067139
    9. ' i' → logprob: -8.233531951904297
    10. ' n' → logprob: -8.233531951904297

Token 84: ' =' (ID: 314)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.008367881178855896
    2. ' =' → logprob: -5.883368015289307
    3. '=' → logprob: -6.008368015289307
    4. 'p' → logprob: -6.133368015289307
    5. '.append' → logprob: -7.508368015289307
    6. 'ppy' → logprob: -10.258367538452148
    7. 'px' → logprob: -10.508367538452148
    8. '+=' → logprob: -10.508367538452148
    9. 'append' → logprob: -10.633367538452148
    10. 'dd' → logprob: -10.758367538452148

Token 85: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6875683069229126
    2. 'sorted' → logprob: -2.312568187713623
    3. 'list' → logprob: -2.437568187713623
    4. '[]' → logprob: -2.687568187713623
    5. ' x' → logprob: -2.812568187713623
    6. 'set' → logprob: -2.937568187713623
    7. ' list' → logprob: -3.562568187713623
    8. 's' → logprob: -4.187568187713623
    9. ' []' → logprob: -4.312568187713623
    10. '[' → logprob: -4.437568187713623

Token 86: '[' (ID: 58)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.765134334564209
    2. '[:]' → logprob: -0.765134334564209
    3. '[' → logprob: -3.890134334564209
    4. '[:' → logprob: -4.265134334564209
    5. '.lower' → logprob: -4.765134334564209
    6. '[::-' → logprob: -4.765134334564209
    7. '.' → logprob: -4.765134334564209
    8. '.count' → logprob: -5.265134334564209
    9. '+' → logprob: -6.640134334564209
    10. '.copy' → logprob: -6.890134334564209

Token 87: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10059266537427902
    2. ':' → logprob: -3.225592613220215
    3. ':]' → logprob: -3.600592613220215
    4. '-' → logprob: -4.350592613220215
    5. '::-' → logprob: -5.100592613220215
    6. '::' → logprob: -5.475592613220215
    7. '1' → logprob: -6.100592613220215
    8. 'i' → logprob: -7.350592613220215
    9. ':i' → logprob: -7.600592613220215
    10. ':-' → logprob: -8.100592613220215

Token 88: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04139168560504913
    2. ']
' → logprob: -3.291391611099243
    3. ']+' → logprob: -6.291391849517822
    4. '].' → logprob: -8.416391372680664
    5. ':' → logprob: -8.541391372680664
    6. ':]' → logprob: -8.666391372680664
    7. ']-' → logprob: -8.666391372680664
    8. ' ]' → logprob: -8.916391372680664
    9. '][' → logprob: -9.041391372680664
    10. ']==' → logprob: -9.791391372680664

Token 89: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5877005457878113
    2. 'for' → logprob: -0.9627005457878113
    3. '   ' → logprob: -2.837700605392456
    4. ' ' → logprob: -6.462700366973877
    5. '	for' → logprob: -7.712700366973877
    6. ',' → logprob: -7.712700366973877
    7. 's' → logprob: -8.587700843811035
    8. 'a' → logprob: -8.712700843811035
    9. '
' → logprob: -9.087700843811035
    10. ':' → logprob: -9.212700843811035

Token 90: ' su' (ID: 593)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5210400223731995
    2. ' for' → logprob: -1.5210399627685547
    3. 'cnt' → logprob: -2.5210399627685547
    4. 'count' → logprob: -3.3960399627685547
    5. 'a' → logprob: -3.5210399627685547
    6. 'c' → logprob: -3.6460399627685547
    7. '   ' → logprob: -5.021039962768555
    8. ' cnt' → logprob: -5.646039962768555
    9. ' a' → logprob: -6.021039962768555
    10. ' count' → logprob: -6.396039962768555

Token 91: ' =' (ID: 314)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.020385969430208206
    2. '=' → logprob: -4.0203857421875
    3. 'mm' → logprob: -6.2703857421875
    4. ' =' → logprob: -8.6453857421875
    5. 'ms' → logprob: -9.5203857421875
    6. 'mma' → logprob: -10.8953857421875
    7. '+=' → logprob: -10.8953857421875
    8. '   ' → logprob: -10.8953857421875
    9. 'b' → logprob: -12.0203857421875
    10. '=m' → logprob: -12.0203857421875

Token 92: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0693163275718689
    2. '1' → logprob: -3.0693163871765137
    3. 'aa' → logprob: -4.319316387176514
    4. ' ' → logprob: -5.319316387176514
    5. 'x' → logprob: -6.694316387176514
    6. ' aa' → logprob: -7.069316387176514
    7. 'a' → logprob: -9.569315910339355
    8. 'len' → logprob: -9.819315910339355
    9. ' x' → logprob: -10.319315910339355
    10. 'int' → logprob: -11.194315910339355

Token 93: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12391185015439987
    2. '1' → logprob: -2.2489118576049805
    3. 'aa' → logprob: -4.6239118576049805
    4. 'len' → logprob: -8.12391185760498
    5. 'x' → logprob: -8.24891185760498
    6. 'ord' → logprob: -8.24891185760498
    7. 'int' → logprob: -8.74891185760498
    8. 'a' → logprob: -9.74891185760498
    9. ' ' → logprob: -10.12391185760498
    10. '[' → logprob: -10.24891185760498

Token 94: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20831267535686493
    2. 'for' (adapté à ' for') → logprob: -2.083312749862671
    3. ' ' → logprob: -2.833312749862671
    4. '<|end|>' → logprob: -6.333312511444092
    5. '	for' → logprob: -6.583312511444092
    6. '   ' → logprob: -7.208312511444092
    7. '\t' → logprob: -8.70831298828125
    8. ' i' → logprob: -9.08331298828125
    9. ' 
' → logprob: -9.20831298828125
    10. '  ' → logprob: -9.45831298828125

Token 97: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34899166226387024
    2. ' i' → logprob: -1.2239916324615479
    3. 'c' → logprob: -7.973991870880127
    4. ' c' → logprob: -9.223991394042969
    5. 'e' → logprob: -10.973991394042969
    6. 'j' → logprob: -11.098991394042969
    7. ' ' → logprob: -11.473991394042969
    8. '	i' → logprob: -11.848991394042969
    9. '_i' → logprob: -12.098991394042969
    10. 'ii' → logprob: -12.098991394042969

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14275678992271423
    2. 'in' → logprob: -2.017756700515747
    3. ' ' → logprob: -10.267756462097168
    4. ',' → logprob: -10.392756462097168
    5. '	in' → logprob: -11.767756462097168
    6. '  ' → logprob: -12.767756462097168
    7. '   ' → logprob: -13.142756462097168
    8. 'range' → logprob: -14.017756462097168
    9. 'n' → logprob: -14.642756462097168
    10. ',in' → logprob: -14.642756462097168

Token 99: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0034081125631928444
    2. ' range' → logprob: -5.753407955169678
    3. 'x' → logprob: -8.378408432006836
    4. ' x' → logprob: -15.503408432006836
    5. ' ' → logprob: -15.628408432006836
    6. '   ' → logprob: -15.878408432006836
    7. 'a' → logprob: -16.628408432006836
    8. '	range' → logprob: -17.003408432006836
    9. '  ' → logprob: -17.628408432006836
    10. 'r' → logprob: -18.003408432006836

Token 100: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010163593105971813
    2. '(len' → logprob: -9.250102043151855
    3. '1' → logprob: -12.500102043151855
    4. 'len' → logprob: -13.500102043151855
    5. ' (' → logprob: -15.000102043151855
    6. '   ' → logprob: -16.37510108947754
    7. ' ' → logprob: -18.50010108947754
    8. '(
' → logprob: -18.75010108947754
    9. ' len' → logprob: -18.87510108947754
    10. '	' → logprob: -19.25010108947754

Token 101: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00020270596724003553
    2. 'x' → logprob: -8.875203132629395
    3. '(' → logprob: -9.875203132629395
    4. '(a' → logprob: -12.125203132629395
    5. 'a' → logprob: -12.375203132629395
    6. ' x' → logprob: -14.000203132629395
    7. '(s' → logprob: -15.000203132629395
    8. ')' → logprob: -15.875203132629395
    9. ' (' → logprob: -16.125202178955078
    10. '	x' → logprob: -16.250202178955078

Token 102: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25361311435699463
    2. ')-' → logprob: -1.6286131143569946
    3. ')):' → logprob: -4.128612995147705
    4. ')):
' → logprob: -5.253612995147705
    5. '):' → logprob: -5.503612995147705
    6. '-' → logprob: -7.003612995147705
    7. ' )' → logprob: -7.253612995147705
    8. ' -' → logprob: -8.628613471984863
    9. '):
' → logprob: -8.753613471984863
    10. ' ' → logprob: -8.753613471984863

Token 103: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3304970860481262
    2. '):' → logprob: -1.7054970264434814
    3. ' -' → logprob: -2.8304970264434814
    4. '):
' → logprob: -3.3304970264434814
    5. ' ' → logprob: -5.9554972648620605
    6. ')' → logprob: -6.9554972648620605
    7. '1' → logprob: -8.080496788024902
    8. '[' → logprob: -8.330496788024902
    9. '   ' → logprob: -8.455496788024902
    10. ' ):' → logprob: -8.580496788024902

Token 104: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013266648165881634
    2. ' ' → logprob: -6.626326560974121
    3. '   ' → logprob: -14.376326560974121
    4. '2' → logprob: -16.876327514648438
    5. '0' → logprob: -17.001327514648438
    6. '  ' → logprob: -17.251327514648438
    7. '```' → logprob: -17.251327514648438
    8. '１' → logprob: -18.063827514648438
    9. '' → logprob: -18.126327514648438
    10. '	' → logprob: -18.251327514648438

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.000045776367188
    4. '```' → logprob: -16.687545776367188
    5. '2' → logprob: -17.312545776367188
    6. '１' → logprob: -17.937545776367188
    7. '  ' → logprob: -18.125045776367188
    8. '-' → logprob: -19.125045776367188
    9. '' → logprob: -19.125045776367188
    10. '۱' → logprob: -19.312545776367188

Token 106: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08178386837244034
    2. '):
' → logprob: -2.5817837715148926
    3. ' ):' → logprob: -5.956783771514893
    4. ' ):
' → logprob: -8.33178424835205
    5. '):
' → logprob: -10.08178424835205
    6. ')' → logprob: -11.83178424835205
    7. '   ' → logprob: -12.83178424835205
    8. '):

' → logprob: -13.20678424835205
    9. '():' → logprob: -13.45678424835205
    10. ':' → logprob: -13.45678424835205

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012941972352564335
    2. '   ' → logprob: -5.387941837310791
    3. ' ' → logprob: -5.762941837310791
    4. '    ' → logprob: -6.512941837310791
    5. '<|end|>' → logprob: -7.137941837310791
    6. '        
' → logprob: -7.387941837310791
    7. ',' → logprob: -7.762941837310791
    8. '	' → logprob: -8.01294231414795
    9. ' if' → logprob: -8.51294231414795
    10. '    
' → logprob: -8.51294231414795

Token 108: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22003093361854553
    2. '       ' → logprob: -1.8450309038162231
    3. ' ' → logprob: -3.7200310230255127
    4. 'if' (adapté à ' if') → logprob: -5.220030784606934
    5. '   ' → logprob: -5.345030784606934
    6. '    ' → logprob: -6.095030784606934
    7. '	if' → logprob: -6.970030784606934
    8. '
' → logprob: -7.595030784606934
    9. '```' → logprob: -8.095030784606934
    10. '	' → logprob: -8.220030784606934

Token 109: ' aa' (ID: 40260)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.634463369846344
    2. 'x' → logprob: -0.759463369846344
    3. ' aa' → logprob: -6.384463310241699
    4. 'aa' → logprob: -8.7594633102417
    5. '(x' → logprob: -12.5094633102417
    6. '	x' → logprob: -12.5094633102417
    7. '   ' → logprob: -12.7594633102417
    8. ' ' → logprob: -13.2594633102417
    9. ' xx' → logprob: -13.3844633102417
    10. 'xaa' → logprob: -13.7594633102417

Token 110: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0053505669347941875
    2. ' ==' → logprob: -5.255350589752197
    3. '!=' → logprob: -9.380350112915039
    4. '=' → logprob: -10.880350112915039
    5. '==
' → logprob: -11.505350112915039
    6. ' ' → logprob: -14.130350112915039
    7. ' !=' → logprob: -14.380350112915039
    8. '[' → logprob: -14.630350112915039
    9. '<' → logprob: -14.880350112915039
    10. ']==' → logprob: -15.130350112915039

Token 111: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10021109133958817
    2. ' x' → logprob: -2.3502111434936523
    3. '	x' → logprob: -12.850211143493652
    4. ' ' → logprob: -14.100211143493652
    5. '(x' → logprob: -14.850211143493652
    6. '   ' → logprob: -14.975211143493652
    7. ')x' → logprob: -16.350210189819336
    8. ''x' → logprob: -16.850210189819336
    9. ' ' → logprob: -16.975210189819336
    10. '$x' → logprob: -17.100210189819336

Token 112: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.045823566731997e-05
    2. ' [' → logprob: -11.250020027160645
    3. '[' → logprob: -12.000020027160645
    4. 'i' → logprob: -14.375020027160645
    5. '   ' → logprob: -15.750020027160645
    6. '[I' → logprob: -16.00002098083496
    7. ' ' → logprob: -16.87502098083496
    8. ' i' → logprob: -17.00002098083496
    9. '(i' → logprob: -17.25002098083496
    10. '[
' → logprob: -17.25002098083496

Token 113: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0057016038335859776
    2. ' +' → logprob: -5.630701541900635
    3. ']:' → logprob: -6.880701541900635
    4. ']:
' → logprob: -7.505701541900635
    5. ']' → logprob: -7.630701541900635
    6. '   ' → logprob: -11.630702018737793
    7. ']+' → logprob: -11.755702018737793
    8. '+i' → logprob: -11.880702018737793
    9. ':' → logprob: -12.880702018737793
    10. '[i' → logprob: -13.130702018737793

Token 114: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012737659562844783
    2. ' ' → logprob: -9.000127792358398
    3. '   ' → logprob: -13.937627792358398
    4. 'i' → logprob: -14.187627792358398
    5. '```' → logprob: -14.625127792358398
    6. '' → logprob: -15.750127792358398
    7. '
' → logprob: -16.0001277923584
    8. '2' → logprob: -16.0626277923584
    9. '0' → logprob: -16.0626277923584
    10. '１' → logprob: -16.3126277923584

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.963691804325208e-05
    2. ' ' → logprob: -10.500029563903809
    3. 'i' → logprob: -14.125029563903809
    4. '
' → logprob: -15.312529563903809
    5. '   ' → logprob: -15.312529563903809
    6. '```' → logprob: -15.500029563903809
    7. '2' → logprob: -16.125030517578125
    8. '0' → logprob: -16.500030517578125
    9. ']' → logprob: -17.187530517578125
    10. '])' → logprob: -17.500030517578125

Token 116: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6948361396789551
    2. '):
' → logprob: -0.9448361396789551
    3. ':' → logprob: -2.319836139678955
    4. '):' → logprob: -4.319836139678955
    5. '       ' → logprob: -9.069835662841797
    6. ' :
' → logprob: -9.319835662841797
    7. ']:
' → logprob: -9.569835662841797
    8. '           ' → logprob: -9.694835662841797
    9. '():
' → logprob: -10.069835662841797
    10. ')' → logprob: -10.569835662841797

Token 117: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19905127584934235
    2. ':
' → logprob: -2.1990513801574707
    3. ':' → logprob: -2.8240513801574707
    4. '       ' → logprob: -5.199051380157471
    5. ' and' → logprob: -7.074051380157471
    6. ',' → logprob: -7.324051380157471
    7. '```' → logprob: -7.574051380157471
    8. '<|end|>' → logprob: -7.949051380157471
    9. '):
' → logprob: -8.074050903320312
    10. '               ' → logprob: -8.074050903320312

Token 118: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.04066971689462662
    2. '       ' → logprob: -3.6656696796417236
    3. ' a' → logprob: -4.290669918060303
    4. '
' → logprob: -8.540669441223145
    5. '```' → logprob: -8.790669441223145
    6. '   ' → logprob: -9.040669441223145
    7. '           ' → logprob: -9.665669441223145
    8. '	a' → logprob: -11.665669441223145
    9. ' ' → logprob: -12.040669441223145
    10. 's' → logprob: -12.415669441223145

Token 119: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00672566844150424
    2. '.' → logprob: -5.006725788116455
    3. 'append' → logprob: -12.256725311279297
    4. '.extend' → logprob: -12.381725311279297
    5. '.app' → logprob: -14.381725311279297
    6. '.ap' → logprob: -14.756725311279297
    7. ' .' → logprob: -15.881725311279297
    8. '.Append' → logprob: -16.131725311279297
    9. '.
' → logprob: -17.506725311279297
    10. '+=' → logprob: -17.506725311279297

Token 120: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.20570556819438934
    2. '(s' → logprob: -1.7057055234909058
    3. '(' → logprob: -5.705705642700195
    4. '([' → logprob: -6.955705642700195
    5. '(a' → logprob: -14.330705642700195
    6. '(str' → logprob: -14.580705642700195
    7. '(([' → logprob: -15.080705642700195
    8. 'su' → logprob: -15.330705642700195
    9. 's' → logprob: -15.330705642700195
    10. '[' → logprob: -15.705705642700195

Token 121: 'aa' (ID: 3545)
  Prédit: 'aa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -5.371605948312208e-05
    2. 'su' → logprob: -10.500053405761719
    3. ' aa' → logprob: -10.625053405761719
    4. ' ' → logprob: -14.750053405761719
    5. '   ' → logprob: -15.000053405761719
    6. 'aaa' → logprob: -15.000053405761719
    7. '#aa' → logprob: -15.250053405761719
    8. '(' → logprob: -15.375053405761719
    9. '  ' → logprob: -15.750053405761719
    10. 'a' → logprob: -17.00005340576172

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022261450067162514
    2. ',s' → logprob: -6.12722635269165
    3. ' ,' → logprob: -10.127225875854492
    4. ',
' → logprob: -14.502225875854492
    5. '```' → logprob: -15.627225875854492
    6. '           ' → logprob: -15.877225875854492
    7. ',n' → logprob: -17.002225875854492
    8. '               ' → logprob: -17.252225875854492
    9. ',d' → logprob: -17.627225875854492
    10. ',t' → logprob: -18.002225875854492

Token 123: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.0036237118765711784
    2. ' su' → logprob: -5.6286234855651855
    3. '           ' → logprob: -11.378623962402344
    4. ' ' → logprob: -12.378623962402344
    5. '   ' → logprob: -12.753623962402344
    6. '       ' → logprob: -14.003623962402344
    7. '               ' → logprob: -14.128623962402344
    8. '         ' → logprob: -14.503623962402344
    9. ' ' → logprob: -14.628623962402344
    10. '          ' → logprob: -14.753623962402344

Token 124: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.4753810167312622
    2. '])' → logprob: -0.9753810167312622
    3. ',' → logprob: -6.850380897521973
    4. ')
' → logprob: -9.475380897521973
    5. ' ])
' → logprob: -9.600380897521973
    6. ' ])' → logprob: -10.600380897521973
    7. '])
' → logprob: -10.725380897521973
    8. ')' → logprob: -11.225380897521973
    9. '       ' → logprob: -11.600380897521973
    10. ',
' → logprob: -12.225380897521973

Token 125: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06246268004179001
    2. '       ' → logprob: -3.062462568283081
    3. 'su' → logprob: -5.43746280670166
    4. '		' → logprob: -6.18746280670166
    5. '               ' → logprob: -6.31246280670166
    6. '            
' → logprob: -6.43746280670166
    7. '
' → logprob: -6.56246280670166
    8. '        
' → logprob: -7.81246280670166
    9. 'else' → logprob: -8.06246280670166
    10. 's' → logprob: -8.18746280670166

Token 126: ' aa' (ID: 40260)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.09865619987249374
    2. '           ' → logprob: -3.098656177520752
    3. 'aa' (adapté à ' aa') → logprob: -3.098656177520752
    4. '   ' → logprob: -5.973656177520752
    5. '       ' → logprob: -7.098656177520752
    6. '               ' → logprob: -8.59865665435791
    7. '  ' → logprob: -10.47365665435791
    8. '          ' → logprob: -10.47365665435791
    9. ' su' → logprob: -11.09865665435791
    10. 'aaa' → logprob: -11.34865665435791

Token 127: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06993865221738815
    2. ' =' → logprob: -2.6949386596679688
    3. ',' → logprob: -13.569938659667969
    4. '+=' → logprob: -15.694938659667969
    5. '!=' → logprob: -15.819938659667969
    6. ' ' → logprob: -16.19493865966797
    7. '=

' → logprob: -16.31993865966797
    8. ')' → logprob: -16.69493865966797
    9. ' +=' → logprob: -16.81993865966797
    10. '＝' → logprob: -16.81993865966797

Token 128: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006715370807796717
    2. ' x' → logprob: -5.006715297698975
    3. '	x' → logprob: -17.881715774536133
    4. '(x' → logprob: -18.381715774536133
    5. ' ' → logprob: -18.881715774536133
    6. '"x' → logprob: -20.381715774536133
    7. '   ' → logprob: -20.381715774536133
    8. '$x' → logprob: -20.756715774536133
    9. ''x' → logprob: -20.881715774536133
    10. ')x' → logprob: -21.006715774536133

Token 129: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.625001907348633
    3. 'i' → logprob: -15.375001907348633
    4. ' [' → logprob: -17.250001907348633
    5. '[I' → logprob: -18.000001907348633
    6. '```' → logprob: -18.500001907348633
    7. '{i' → logprob: -19.875001907348633
    8. '(i' → logprob: -19.875001907348633
    9. '[
' → logprob: -20.000001907348633
    10. '`' → logprob: -20.250001907348633

Token 130: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003611355321481824
    2. ' +' → logprob: -5.6286115646362305
    3. '1' → logprob: -11.62861156463623
    4. ']' → logprob: -13.37861156463623
    5. '+
' → logprob: -15.37861156463623
    6. ']+' → logprob: -15.37861156463623
    7. ' ' → logprob: -15.62861156463623
    8. '   ' → logprob: -15.62861156463623
    9. ' plus' → logprob: -17.878610610961914
    10. '+]' → logprob: -18.128610610961914

Token 131: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -16.125015258789062
    4. '0' → logprob: -16.687515258789062
    5. '   ' → logprob: -16.937515258789062
    6. '
' → logprob: -17.500015258789062
    7. '`' → logprob: -17.875015258789062
    8. '１' → logprob: -17.875015258789062
    9. '+' → logprob: -17.875015258789062
    10. '[' → logprob: -17.937515258789062

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7954958821064793e-05
    2. ' ' → logprob: -11.000018119812012
    3. '```' → logprob: -15.625018119812012
    4. '   ' → logprob: -15.687518119812012
    5. '
' → logprob: -16.000017166137695
    6. '2' → logprob: -16.250017166137695
    7. '+' → logprob: -16.687517166137695
    8. 'i' → logprob: -17.062517166137695
    9. '`' → logprob: -17.562517166137695
    10. '' → logprob: -17.562517166137695

Token 133: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6472445726394653
    2. ']' → logprob: -1.5222445726394653
    3. '       ' → logprob: -1.8972445726394653
    4. ']
' → logprob: -2.897244453430176
    5. ')' → logprob: -4.147244453430176
    6. ')
' → logprob: -4.272244453430176
    7. '
' → logprob: -4.772244453430176
    8. ',' → logprob: -5.272244453430176
    9. '               ' → logprob: -5.272244453430176
    10. '<|end|>' → logprob: -6.397244453430176

Token 134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03842402249574661
    2. '       ' → logprob: -3.288424015045166
    3. '   ' → logprob: -8.663424491882324
    4. 'su' → logprob: -8.788424491882324
    5. '               ' → logprob: -11.163424491882324
    6. '```' → logprob: -11.413424491882324
    7. '          ' → logprob: -12.163424491882324
    8. '<|end|>' → logprob: -12.163424491882324
    9. ',' → logprob: -12.288424491882324
    10. ' ' → logprob: -13.038424491882324

Token 135: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' (adapté à ' su') → logprob: -7.584239938296378e-06
    2. '           ' → logprob: -12.125007629394531
    3. ' su' → logprob: -13.500007629394531
    4. '   ' → logprob: -15.250007629394531
    5. '       ' → logprob: -15.500007629394531
    6. '
' → logprob: -16.25000762939453
    7. '1' → logprob: -16.87500762939453
    8. '0' → logprob: -17.25000762939453
    9. '```' → logprob: -17.75000762939453
    10. ' ' → logprob: -17.75000762939453

Token 136: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.029004205018281937
    2. '=' → logprob: -4.029004096984863
    3. ' +=' → logprob: -4.529004096984863
    4. ' =' → logprob: -12.779004096984863
    5. '+' → logprob: -13.654004096984863
    6. ']+=' → logprob: -16.40400505065918
    7. '*=' → logprob: -17.77900505065918
    8. '+='' → logprob: -19.02900505065918
    9. '.=' → logprob: -19.52900505065918
    10. '-=' → logprob: -19.65400505065918

Token 137: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -17.00020408630371
    4. '0' → logprob: -17.00020408630371
    5. '2' → logprob: -17.87520408630371
    6. '  ' → logprob: -18.50020408630371
    7. '```' → logprob: -18.50020408630371
    8. 'su' → logprob: -19.37520408630371
    9. '
' → logprob: -19.93770408630371
    10. '' → logprob: -20.50020408630371

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.5
    3. '0' → logprob: -16.0
    4. '
' → logprob: -19.0
    5. '```' → logprob: -19.375
    6. '   ' → logprob: -20.625
    7. 'su' → logprob: -21.125
    8. '' → logprob: -21.4375
    9. 's' → logprob: -21.875
    10. '2' → logprob: -21.9375

Token 139: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014949827454984188
    2. 'else' → logprob: -4.264949798583984
    3. ' else' → logprob: -7.389949798583984
    4. '	' → logprob: -9.139949798583984
    5. '	else' → logprob: -11.139949798583984
    6. '   ' → logprob: -11.264949798583984
    7. '```' → logprob: -11.514949798583984
    8. '<|end|>' → logprob: -11.889949798583984
    9. '           ' → logprob: -12.139949798583984
    10. '​' → logprob: -12.889949798583984

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048839882016181946
    2. 'else' → logprob: -3.048839807510376
    3. ' else' → logprob: -8.798839569091797
    4. '   ' → logprob: -9.798839569091797
    5. '```' → logprob: -11.048839569091797
    6. '	' → logprob: -11.423839569091797
    7. '	else' → logprob: -12.173839569091797
    8. '_else' → logprob: -12.798839569091797
    9. '<|end|>' → logprob: -12.798839569091797
    10. '           ' → logprob: -12.923839569091797

Token 141: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48201483488082886
    2. 'else' (adapté à ' else') → logprob: -0.9820148348808289
    3. ' else' → logprob: -5.1070146560668945
    4. '   ' → logprob: -6.7320146560668945
    5. '	' → logprob: -7.6070146560668945
    6. '	else' → logprob: -8.982014656066895
    7. '           ' → logprob: -11.357014656066895
    8. '```' → logprob: -12.107014656066895
    9. '	   ' → logprob: -12.482014656066895
    10. '	       ' → logprob: -12.732014656066895

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.834980309009552
    2. ':
' → logprob: -0.959980309009552
    3. '           ' → logprob: -1.7099802494049072
    4. '               ' → logprob: -6.834980487823486
    5. '       ' → logprob: -7.459980487823486
    6. '          ' → logprob: -8.459980010986328
    7. ' :
' → logprob: -8.834980010986328
    8. '   ' → logprob: -9.834980010986328
    9. '         ' → logprob: -9.959980010986328
    10. '            ' → logprob: -10.584980010986328

Token 143: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1409008502960205
    2. 'su' → logprob: -2.2659008502960205
    3. ' su' → logprob: -3.6409008502960205
    4. '               ' → logprob: -7.390900611877441
    5. '       ' → logprob: -7.765900611877441
    6. ' ' → logprob: -9.140900611877441
    7. '   ' → logprob: -9.265900611877441
    8. '            ' → logprob: -9.765900611877441
    9. '          ' → logprob: -9.890900611877441
    10. ' ' → logprob: -10.140900611877441

Token 144: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' (adapté à ' su') → logprob: -0.00033546582562848926
    2. ' su' → logprob: -8.000335693359375
    3. '           ' → logprob: -18.000335693359375
    4. '               ' → logprob: -19.875335693359375
    5. '   ' → logprob: -20.125335693359375
    6. ' ' → logprob: -20.125335693359375
    7. ' ' → logprob: -20.750335693359375
    8. '       ' → logprob: -21.250335693359375
    9. '
' → logprob: -21.500335693359375
    10. '  ' → logprob: -21.875335693359375

Token 145: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0019293478690087795
    2. ' +=' → logprob: -6.25192928314209
    3. '=' → logprob: -14.25192928314209
    4. ']+=' → logprob: -17.001930236816406
    5. '+' → logprob: -17.126930236816406
    6. '+='' → logprob: -18.751930236816406
    7. '+=(' → logprob: -19.376930236816406
    8. '+="' → logprob: -19.876930236816406
    9. '*=' → logprob: -21.126930236816406
    10. '-=' → logprob: -21.251930236816406

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -22.625003814697266
    4. '１' → logprob: -23.375003814697266
    5. '۱' → logprob: -23.875003814697266
    6. ' ' → logprob: -24.000003814697266
    7. '<|end|>' → logprob: -24.125003814697266
    8. '   ' → logprob: -24.312503814697266
    9. '१' → logprob: -24.812503814697266
    10. '0' → logprob: -24.875003814697266

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -21.875
    4. '１' → logprob: -23.25
    5. '
' → logprob: -23.5
    6. '   ' → logprob: -23.75
    7. 'a' → logprob: -23.875
    8. '0' → logprob: -24.375
    9. '۱' → logprob: -24.375
    10. '-' → logprob: -24.5625

Token 148: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022993752732872963
    2. '
' → logprob: -4.772993564605713
    3. 'a' → logprob: -4.897993564605713
    4. ' a' → logprob: -6.022993564605713
    5. ' return' → logprob: -6.147993564605713
    6. '	return' → logprob: -7.647993564605713
    7. 'return' → logprob: -7.772993564605713
    8. ')' → logprob: -8.272994041442871
    9. ' ' → logprob: -8.272994041442871
    10. '<|end|>' → logprob: -8.647994041442871

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019449690356850624
    2. 'a' → logprob: -4.269449710845947
    3. ' a' → logprob: -5.519449710845947
    4. ' return' → logprob: -7.144449710845947
    5. '
' → logprob: -8.519449234008789
    6. 'return' → logprob: -8.769449234008789
    7. '	a' → logprob: -10.769449234008789
    8. '  ' → logprob: -10.769449234008789
    9. '	return' → logprob: -11.019449234008789
    10. ' ' → logprob: -11.269449234008789

Token 150: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.001359997782856226
    2. '   ' → logprob: -7.376359939575195
    3. ' a' → logprob: -7.376359939575195
    4. 'return' → logprob: -9.501359939575195
    5. '
' → logprob: -11.376359939575195
    6. 'if' → logprob: -12.376359939575195
    7. '```' → logprob: -12.376359939575195
    8. ' return' → logprob: -12.501359939575195
    9. 'for' → logprob: -13.001359939575195
    10. ' ' → logprob: -13.126359939575195

Token 151: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007559045334346592
    2. '.' → logprob: -7.250755786895752
    3. '.extend' → logprob: -10.12575626373291
    4. '.app' → logprob: -12.87575626373291
    5. 'append' → logprob: -12.87575626373291
    6. ' .' → logprob: -15.50075626373291
    7. '.setdefault' → logprob: -16.250755310058594
    8. '.reverse' → logprob: -16.375755310058594
    9. '.ap' → logprob: -16.375755310058594
    10. '.pop' → logprob: -16.500755310058594

Token 152: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -8.840432565193623e-05
    2. '[' → logprob: -9.375088691711426
    3. '(' → logprob: -12.750088691711426
    4. '((' → logprob: -14.500088691711426
    5. '(([' → logprob: -17.00008773803711
    6. '([
' → logprob: -18.75008773803711
    7. '(
' → logprob: -18.87508773803711
    8. ' ([' → logprob: -19.62508773803711
    9. '```' → logprob: -19.62508773803711
    10. '([...' → logprob: -19.87508773803711

Token 153: 'aa' (ID: 3545)
  Prédit: 'aa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -1.1472419600977446e-06
    2. ' aa' → logprob: -13.750000953674316
    3. '#aa' → logprob: -18.000001907348633
    4. '(' → logprob: -19.250001907348633
    5. 'aaa' → logprob: -19.625001907348633
    6. 'xaa' → logprob: -19.750001907348633
    7. 'x' → logprob: -20.250001907348633
    8. 'a' → logprob: -20.250001907348633
    9. 'xx' → logprob: -20.375001907348633
    10. '
' → logprob: -21.000001907348633

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.935296834039036e-06
    2. ',s' → logprob: -13.75000286102295
    3. ' ,' → logprob: -13.87500286102295
    4. ',
' → logprob: -14.00000286102295
    5. '
' → logprob: -19.375003814697266
    6. '```' → logprob: -19.875003814697266
    7. 's' → logprob: -20.000003814697266
    8. '，' → logprob: -20.250003814697266
    9. '‌,' → logprob: -20.500003814697266
    10. ',n' → logprob: -20.875003814697266

Token 155: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.011048054322600365
    2. ' su' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.01104736328125
    4. 's' → logprob: -16.63604736328125
    5. ' ' → logprob: -18.01104736328125
    6. 'Su' → logprob: -18.13604736328125
    7. '
' → logprob: -18.13604736328125
    8. '-su' → logprob: -19.13604736328125
    9. ' sus' → logprob: -19.63604736328125
    10. 'si' → logprob: -19.76104736328125

Token 156: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.42644202709198
    2. ')' → logprob: -1.42644202709198
    3. '])' → logprob: -2.5514421463012695
    4. '])
' → logprob: -3.5514421463012695
    5. ']' → logprob: -9.17644214630127
    6. ')
' → logprob: -9.30144214630127
    7. ']
' → logprob: -9.67644214630127
    8. ')return' → logprob: -9.92644214630127
    9. '   ' → logprob: -10.67644214630127
    10. '])
' → logprob: -11.80144214630127

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005649457452818751
    2. 'return' → logprob: -7.500565052032471
    3. ' return' → logprob: -12.625564575195312
    4. '	return' → logprob: -12.750564575195312
    5. 'def' → logprob: -12.750564575195312
    6. '<|end|>' → logprob: -13.250564575195312
    7. '```' → logprob: -15.250564575195312
    8. '
' → logprob: -15.375564575195312
    9. '       ' → logprob: -15.875564575195312
    10. ' ' → logprob: -16.125564575195312

Token 158: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002538086613640189
    2. ' return' → logprob: -6.002538204193115
    3. '   ' → logprob: -9.752537727355957
    4. '	return' → logprob: -12.502537727355957
    5. ' ' → logprob: -15.502537727355957
    6. '
' → logprob: -15.502537727355957
    7. '```' → logprob: -16.752538681030273
    8. ':return' → logprob: -17.002538681030273
    9. '{return' → logprob: -17.252538681030273
    10. 'ret' → logprob: -17.377538681030273

Token 159: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.493430894101039e-05
    2. ' a' → logprob: -9.500075340270996
    3. '[a' → logprob: -19.00007438659668
    4. '(a' → logprob: -19.62507438659668
    5. '	a' → logprob: -22.00007438659668
    6. ''a' → logprob: -22.12507438659668
    7. ' ' → logprob: -22.62507438659668
    8. '_a' → logprob: -23.12507438659668
    9. '#a' → logprob: -23.37507438659668
    10. '[' → logprob: -24.00007438659668

Token 160: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17153704166412354
    2. '<|end|>' → logprob: -2.046536922454834
    3. '
' → logprob: -4.171536922454834
    4. '(
' → logprob: -5.796536922454834
    5. '(' → logprob: -6.296536922454834
    6. '[' → logprob: -6.546536922454834
    7. '#' → logprob: -6.796536922454834
    8. ')' → logprob: -6.921536922454834
    9. '<|end|>' → logprob: -7.546536922454834
    10. ' 
' → logprob: -7.796536922454834

Token 161: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006595384911634028
    2. 'd' → logprob: -8.625659942626953
    3. 'n' → logprob: -8.625659942626953
    4. 'class' → logprob: -9.375659942626953
    5. '#' → logprob: -9.500659942626953
    6. 'from' → logprob: -10.125659942626953
    7. 'a' → logprob: -10.750659942626953
    8. 'import' → logprob: -11.125659942626953
    9. 'de' → logprob: -11.375659942626953
    10. 'N' → logprob: -11.750659942626953

Token 162: ' jo' (ID: 8483)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.05462158843874931
    2. ' solve' → logprob: -3.554621696472168
    3. 'main' → logprob: -5.554621696472168
    4. ' f' → logprob: -6.054621696472168
    5. ' t' → logprob: -6.304621696472168
    6. ' reverse' → logprob: -6.679621696472168
    7. ' on' → logprob: -6.679621696472168
    8. ' max' → logprob: -6.929621696472168
    9. ' dfs' → logprob: -7.054621696472168
    10. ' count' → logprob: -7.179621696472168

Token 163: '(x' (ID: 4061)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.030329803004860878
    2. '(in' → logprob: -5.405329704284668
    3. '(a' → logprob: -5.530329704284668
    4. '(x' → logprob: -5.655329704284668
    5. '(' → logprob: -6.030329704284668
    6. '(b' → logprob: -6.280329704284668
    7. 'i' → logprob: -6.530329704284668
    8. 'b' → logprob: -6.655329704284668
    9. '(i' → logprob: -6.655329704284668
    10. '```' → logprob: -6.905329704284668

Token 164: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3594267964363098
    2. '):
' → logprob: -1.859426736831665
    3. ',' → logprob: -1.984426736831665
    4. ')' → logprob: -4.859426975250244
    5. ',x' → logprob: -8.609426498413086
    6. ' ):' → logprob: -8.984426498413086
    7. ' ,' → logprob: -9.734426498413086
    8. '"):' → logprob: -9.734426498413086
    9. '):
' → logprob: -9.984426498413086
    10. '):

' → logprob: -10.234426498413086

Token 165: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9973106980323792
    2. '   ' → logprob: -1.2473106384277344
    3. 'a' → logprob: -1.8723106384277344
    4. ' r' → logprob: -2.8723106384277344
    5. ' a' → logprob: -3.7473106384277344
    6. ' return' → logprob: -3.9973106384277344
    7. 'return' → logprob: -4.122310638427734
    8. '[]' → logprob: -4.122310638427734
    9. ' res' → logprob: -4.747310638427734
    10. 'res' → logprob: -4.872310638427734

Token 166: ' return' (ID: 622)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9973331093788147
    2. 'a' → logprob: -1.37233304977417
    3. 'res' → logprob: -1.49733304977417
    4. 'ret' → logprob: -3.12233304977417
    5. 're' → logprob: -3.99733304977417
    6. 's' → logprob: -4.12233304977417
    7. 'ans' → logprob: -4.24733304977417
    8. 'z' → logprob: -4.49733304977417
    9. 'y' → logprob: -4.62233304977417
    10. 'b' → logprob: -4.62233304977417

Token 167: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.48738616704940796
    2. '''.' → logprob: -0.987386167049408
    3. ' "".' → logprob: -5.237386226654053
    4. ''' → logprob: -5.612386226654053
    5. ' ''.' → logprob: -6.112386226654053
    6. '""' → logprob: -6.487386226654053
    7. '''' → logprob: -8.362385749816895
    8. '"x' → logprob: -8.612385749816895
    9. '",".' → logprob: -10.737385749816895
    10. '"",' → logprob: -11.237385749816895

Token 168: ' ".' (ID: 11730)
  Prédit: '".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.008672957308590412
    2. '"' → logprob: -4.758673191070557
    3. ' ".' → logprob: -10.133672714233398
    4. '"+' → logprob: -11.383672714233398
    5. ' "' → logprob: -13.383672714233398
    6. '""' → logprob: -13.883672714233398
    7. '\n' → logprob: -14.008672714233398
    8. '"+"' → logprob: -14.008672714233398
    9. ''.' → logprob: -14.383672714233398
    10. ' "".' → logprob: -14.383672714233398

Token 169: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -7.707997428951785e-05
    2. '.' → logprob: -10.000077247619629
    3. 'j' → logprob: -11.125077247619629
    4. '.join' → logprob: -11.250077247619629
    5. ' join' → logprob: -13.250077247619629
    6. 'jo' → logprob: -14.250077247619629
    7. '```' → logprob: -14.500077247619629
    8. '".' → logprob: -15.375077247619629
    9. ''.' → logprob: -15.875077247619629
    10. '(join' → logprob: -16.125076293945312

Token 170: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.008712195791304111
    2. 'map' → logprob: -5.258712291717529
    3. '(str' → logprob: -5.758712291717529
    4. '(list' → logprob: -8.258711814880371
    5. '(x' → logprob: -10.758711814880371
    6. 'list' → logprob: -10.883711814880371
    7. 'str' → logprob: -11.758711814880371
    8. '([' → logprob: -12.383711814880371
    9. '(' → logprob: -12.508711814880371
    10. ' map' → logprob: -13.758711814880371

Token 171: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.029753385111689568
    2. 'str' → logprob: -3.5297534465789795
    3. ' str' → logprob: -14.029753684997559
    4. '=str' → logprob: -14.279753684997559
    5. '[str' → logprob: -15.154753684997559
    6. '(' → logprob: -15.154753684997559
    7. '	str' → logprob: -15.279753684997559
    8. ')' → logprob: -15.404753684997559
    9. '```' → logprob: -15.779753684997559
    10. ',str' → logprob: -16.154752731323242

Token 172: ',' (ID: 11)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.18236258625984192
    2. ',' → logprob: -2.1823625564575195
    3. ',x' → logprob: -2.9323625564575195
    4. '(' → logprob: -7.9323625564575195
    5. 'x' → logprob: -8.80736255645752
    6. ' ,' → logprob: -9.55736255645752
    7. ' (' → logprob: -10.05736255645752
    8. ',(' → logprob: -11.68236255645752
    9. ' x' → logprob: -11.80736255645752
    10. ')' → logprob: -12.18236255645752

Token 173: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018150413408875465
    2. ' x' → logprob: -4.018150329589844
    3. '(x' → logprob: -15.018150329589844
    4. '[x' → logprob: -16.143150329589844
    5. '   ' → logprob: -16.518150329589844
    6. ' ' → logprob: -16.893150329589844
    7. ')x' → logprob: -17.018150329589844
    8. '
' → logprob: -18.018150329589844
    9. '	x' → logprob: -18.268150329589844
    10. '[' → logprob: -18.768150329589844

Token 174: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005129986093379557
    2. '()))' → logprob: -7.625513076782227
    3. ')' → logprob: -10.750513076782227
    4. '()' → logprob: -13.750513076782227
    5. ')))' → logprob: -14.000513076782227
    6. ' ))' → logprob: -14.000513076782227
    7. '))
' → logprob: -15.125513076782227
    8. '())' → logprob: -15.125513076782227
    9. '[]' → logprob: -16.625513076782227
    10. ' ' → logprob: -17.250513076782227

Token 175: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002790935104712844
    2. '#' → logprob: -9.125279426574707
    3. '<|end|>' → logprob: -9.250279426574707
    4. '
' → logprob: -10.125279426574707
    5. 'd' → logprob: -12.125279426574707
    6. '[' → logprob: -12.500279426574707
    7. 'n' → logprob: -12.750279426574707
    8. ' 
' → logprob: -13.000279426574707
    9. '  
' → logprob: -13.000279426574707
    10. '\' → logprob: -13.000279426574707

Token 176: ' max' (ID: 2999)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.19072149693965912
    2. 'main' → logprob: -1.8157215118408203
    3. ' solve' → logprob: -4.81572151184082
    4. 'solve' → logprob: -7.06572151184082
    5. ' ma' → logprob: -7.19072151184082
    6. 'pow' → logprob: -9.56572151184082
    7. 'ma' → logprob: -9.81572151184082
    8. ' ' → logprob: -9.81572151184082
    9. 'm' → logprob: -9.94072151184082
    10. ' so' → logprob: -10.06572151184082

Token 177: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2621161639690399
    2. '(max' → logprob: -2.1371161937713623
    3. '(x' → logprob: -3.2621161937713623
    4. '(a' → logprob: -3.6371161937713623
    5. '(
' → logprob: -3.8871161937713623
    6. 'def' → logprob: -4.637115955352783
    7. '_' → logprob: -5.387115955352783
    8. ')' → logprob: -5.762115955352783
    9. '_max' → logprob: -6.137115955352783
    10. 'max' → logprob: -6.137115955352783

Token 178: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3219987154006958
    2. '(x' → logprob: -1.5719987154006958
    3. '(' → logprob: -2.6969985961914062
    4. '(lst' → logprob: -9.821998596191406
    5. '(_' → logprob: -10.196998596191406
    6. '():' → logprob: -10.946998596191406
    7. '(l' → logprob: -10.946998596191406
    8. '(A' → logprob: -11.071998596191406
    9. '_(' → logprob: -11.071998596191406
    10. '(
' → logprob: -11.196998596191406

Token 179: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4147215187549591
    2. ',' → logprob: -1.4147214889526367
    3. ' ):' → logprob: -3.0397214889526367
    4. '):
' → logprob: -3.4147214889526367
    5. ',x' → logprob: -4.414721488952637
    6. ' ,' → logprob: -6.789721488952637
    7. ' ):
' → logprob: -7.164721488952637
    8. ')' → logprob: -7.289721488952637
    9. '(x' → logprob: -7.664721488952637
    10. ')):' → logprob: -9.164721488952637

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7017655372619629
    2. '(a' → logprob: -0.9517655372619629
    3. '(x' → logprob: -2.201765537261963
    4. 'a' → logprob: -5.951765537261963
    5. 'return' → logprob: -6.326765537261963
    6. ' return' → logprob: -6.826765537261963
    7. ':
' → logprob: -7.576765537261963
    8. '(' → logprob: -7.826765537261963
    9. ':' → logprob: -8.076765060424805
    10. ' ' → logprob: -8.576765060424805

Token 181: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3152090609073639
    2. 'max' → logprob: -1.3152090311050415
    3. ' return' → logprob: -7.190208911895752
    4. ' max' → logprob: -7.690208911895752
    5. 'x' → logprob: -8.19020938873291
    6. 'a' → logprob: -8.44020938873291
    7. 'def' → logprob: -9.06520938873291
    8. '   ' → logprob: -9.81520938873291
    9. 'sorted' → logprob: -9.94020938873291
    10. 'ans' → logprob: -12.19020938873291

Token 182: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12753786146640778
    2. ' max' → logprob: -2.127537965774536
    3. 'x' → logprob: -7.752537727355957
    4. 'sorted' → logprob: -9.502537727355957
    5. ' x' → logprob: -10.252537727355957
    6. '(max' → logprob: -10.627537727355957
    7. 'float' → logprob: -11.127537727355957
    8. '0' → logprob: -11.752537727355957
    9. ' sorted' → logprob: -12.127537727355957
    10. '-' → logprob: -12.252537727355957

Token 183: '(map' (ID: 16946)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00024048985505942255
    2. '(' → logprob: -8.375240325927734
    3. '(
' → logprob: -12.750240325927734
    4. 'x' → logprob: -13.250240325927734
    5. '(list' → logprob: -13.375240325927734
    6. '(map' → logprob: -13.750240325927734
    7. '(len' → logprob: -14.000240325927734
    8. '(range' → logprob: -14.125240325927734
    9. '2' → logprob: -15.250240325927734
    10. '((' → logprob: -15.250240325927734

Token 184: '(max' (ID: 17178)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.385667085647583
    2. '(lambda' → logprob: -1.760667085647583
    3. '(len' → logprob: -2.135667085647583
    4. '(abs' → logprob: -4.510666847229004
    5. '(ord' → logprob: -5.135666847229004
    6. 'len' → logprob: -5.260666847229004
    7. 'int' → logprob: -6.260666847229004
    8. 'lambda' → logprob: -6.385666847229004
    9. '(max' → logprob: -7.010666847229004
    10. 'abs' → logprob: -7.135666847229004

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1668408215045929
    2. ',x' → logprob: -2.4168407917022705
    3. '(x' → logprob: -2.7918407917022705
    4. ' ,' → logprob: -6.04184103012085
    5. '2' → logprob: -7.91684103012085
    6. 'x' → logprob: -8.291840553283691
    7. '),' → logprob: -9.416840553283691
    8. '))' → logprob: -11.041840553283691
    9. ')' → logprob: -11.041840553283691
    10. '(' → logprob: -11.166840553283691

Token 186: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25193148851394653
    2. ' x' → logprob: -1.5019314289093018
    3. '(x' → logprob: -14.251931190490723
    4. '   ' → logprob: -14.251931190490723
    5. ')x' → logprob: -14.626931190490723
    6. ' ' → logprob: -15.001931190490723
    7. '	x' → logprob: -16.00193214416504
    8. ')' → logprob: -16.12693214416504
    9. '[x' → logprob: -16.50193214416504
    10. '  ' → logprob: -16.87693214416504

Token 187: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008700100006535649
    2. '()))' → logprob: -7.125870227813721
    3. ')))' → logprob: -10.750869750976562
    4. ' ))' → logprob: -11.000869750976562
    5. ')' → logprob: -11.250869750976562
    6. '))
' → logprob: -11.375869750976562
    7. '(' → logprob: -13.875869750976562
    8. ' ' → logprob: -14.000869750976562
    9. '()' → logprob: -14.875869750976562
    10. '())' → logprob: -15.000869750976562

Token 188: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14019599556922913
    2. '<|end|>' → logprob: -2.1401960849761963
    3. '
' → logprob: -4.640195846557617
    4. '#' → logprob: -6.390195846557617
    5. '<|end|>' → logprob: -7.140195846557617
    6. ')' → logprob: -7.390195846557617
    7. '[' → logprob: -9.640195846557617
    8. '

' → logprob: -9.640195846557617
    9. ' def' → logprob: -10.140195846557617
    10. '[]' → logprob: -10.265195846557617

Token 189: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35391759872436523
    2. '=' → logprob: -1.2289175987243652
    3. ',' → logprob: -5.228917598724365
    4. ' ,' → logprob: -10.228918075561523
    5. '=int' → logprob: -10.603918075561523
    6. ' ' → logprob: -10.978918075561523
    7. ')' → logprob: -11.728918075561523
    8. ' =
' → logprob: -12.353918075561523
    9. '=input' → logprob: -12.978918075561523
    10. ' =)' → logprob: -14.103918075561523

Token 190: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.591936469078064
    2. 'm' → logprob: -0.841936469078064
    3. ' k' → logprob: -5.3419365882873535
    4. ' m' → logprob: -5.5919365882873535
    5. 'q' → logprob: -5.8419365882873535
    6. 'a' → logprob: -6.0919365882873535
    7. 'x' → logprob: -7.3419365882873535
    8. 'K' → logprob: -7.7169365882873535
    9. 'd' → logprob: -7.9669365882873535
    10. 'w' → logprob: -8.966936111450195

Token 191: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009157438762485981
    2. ' =' → logprob: -7.00091552734375
    3. '=k' → logprob: -13.00091552734375
    4. '=m' → logprob: -13.37591552734375
    5. '=n' → logprob: -15.62591552734375
    6. ',' → logprob: -15.87591552734375
    7. ')' → logprob: -17.00091552734375
    8. ')=' → logprob: -17.25091552734375
    9. '=s' → logprob: -17.37591552734375
    10. '=

' → logprob: -17.50091552734375

Token 192: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03902530297636986
    2. ' m' → logprob: -3.28902530670166
    3. 'map' → logprob: -7.28902530670166
    4. ' map' → logprob: -8.66402530670166
    5. ' on' → logprob: -9.53902530670166
    6. 'on' → logprob: -10.16402530670166
    7. 'l' → logprob: -11.78902530670166
    8. ' ' → logprob: -12.03902530670166
    9. ' l' → logprob: -13.28902530670166
    10. 'list' → logprob: -14.16402530670166

Token 193: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.696889623621246e-06
    2. '()
' → logprob: -13.00000286102295
    3. ' ()' → logprob: -16.250001907348633
    4. '()`' → logprob: -16.500001907348633
    5. '();' → logprob: -16.625001907348633
    6. '())' → logprob: -16.875001907348633
    7. '()]' → logprob: -17.125001907348633
    8. '(' → logprob: -17.375001907348633
    9. '()

' → logprob: -17.750001907348633
    10. '()
' → logprob: -18.125001907348633

Token 194: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.45431435108184814
    2. 'x' → logprob: -1.0793143510818481
    3. 'arr' → logprob: -4.829314231872559
    4. 'd' → logprob: -5.079314231872559
    5. 'A' → logprob: -5.829314231872559
    6. 'h' → logprob: -6.079314231872559
    7. 'v' → logprob: -6.829314231872559
    8. 's' → logprob: -6.954314231872559
    9. 'p' → logprob: -7.579314231872559
    10. 'l' → logprob: -7.829314231872559

Token 195: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022777557373047
    2. ' =' → logprob: -1.9102277755737305
    3. ',' → logprob: -13.28522777557373
    4. ' ' → logprob: -14.16022777557373
    5. '[' → logprob: -15.66022777557373
    6. '=list' → logprob: -15.91022777557373
    7. '=
' → logprob: -16.035228729248047
    8. ')' → logprob: -16.160228729248047
    9. '=[]' → logprob: -16.285228729248047
    10. 'a' → logprob: -16.285228729248047

Token 196: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03631606698036194
    2. ' l' → logprob: -3.411316156387329
    3. 's' → logprob: -6.41131591796875
    4. 'on' → logprob: -7.53631591796875
    5. ' on' → logprob: -8.53631591796875
    6. '[l' → logprob: -9.28631591796875
    7. 'list' → logprob: -9.41131591796875
    8. ' s' → logprob: -10.16131591796875
    9. '[]' → logprob: -10.41131591796875
    10. ' list' → logprob: -11.28631591796875

Token 197: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.4849443838757e-06
    2. '()
' → logprob: -13.125004768371582
    3. ' ()' → logprob: -13.625004768371582
    4. '().' → logprob: -15.000004768371582
    5. '())' → logprob: -15.000004768371582
    6. '(' → logprob: -15.000004768371582
    7. '()]' → logprob: -15.625004768371582
    8. '()

' → logprob: -17.000003814697266
    9. '();' → logprob: -17.250003814697266
    10. '()<' → logprob: -17.500003814697266

Token 198: 'aaa' (ID: 55894)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4078129231929779
    2. 'dp' → logprob: -1.9078129529953003
    3. 'c' → logprob: -3.1578128337860107
    4. 'd' → logprob: -3.1578128337860107
    5. 'b' → logprob: -3.6578128337860107
    6. 'cnt' → logprob: -4.28281307220459
    7. 'ans' → logprob: -4.40781307220459
    8. 'f' → logprob: -5.15781307220459
    9. 'from' → logprob: -5.28281307220459
    10. 'q' → logprob: -5.65781307220459

Token 199: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4744865298271179
    2. ' =' → logprob: -0.9744865298271179
    3. 'a' → logprob: -8.349486351013184
    4. '=a' → logprob: -9.099486351013184
    5. '=[' → logprob: -11.099486351013184
    6. 's' → logprob: -11.349486351013184
    7. '=s' → logprob: -11.724486351013184
    8. '=[]' → logprob: -11.849486351013184
    9. '=[]
' → logprob: -12.974486351013184
    10. '=list' → logprob: -13.224486351013184

Token 200: ' [' (ID: 723)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8937168717384338
    2. 'on' → logprob: -1.018716812133789
    3. '[]' → logprob: -1.643716812133789
    4. '[' → logprob: -3.893716812133789
    5. 'a' → logprob: -5.268716812133789
    6. '[s' → logprob: -5.768716812133789
    7. 'sorted' → logprob: -5.768716812133789
    8. '[]
' → logprob: -6.268716812133789
    9. '0' → logprob: -7.518716812133789
    10. '[a' → logprob: -7.768716812133789

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5220245122909546
    2. 'a' → logprob: -1.1470245122909546
    3. '[a' → logprob: -2.897024631500244
    4. '1' → logprob: -4.897024631500244
    5. '[' → logprob: -5.147024631500244
    6. ']' → logprob: -5.522024631500244
    7. '(' → logprob: -5.522024631500244
    8. '(a' → logprob: -5.772024631500244
    9. '[]' → logprob: -6.147024631500244
    10. 'x' → logprob: -6.897024631500244

Token 202: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03399650380015373
    2. ']*(' → logprob: -3.65899658203125
    3. ']*' → logprob: -4.90899658203125
    4. ']+' → logprob: -8.90899658203125
    5. ']
' → logprob: -9.40899658203125
    6. ' ]' → logprob: -10.90899658203125
    7. ',' → logprob: -10.90899658203125
    8. 'for' → logprob: -11.40899658203125
    9. ' for' → logprob: -11.65899658203125
    10. '0' → logprob: -12.53399658203125

Token 203: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10186625272035599
    2. ' _' → logprob: -2.6018662452697754
    3. ' in' → logprob: -4.601866245269775
    4. ' i' → logprob: -4.726866245269775
    5. 'i' → logprob: -5.851866245269775
    6. '_i' → logprob: -7.976866245269775
    7. ' range' → logprob: -8.226866722106934
    8. ' ' → logprob: -8.976866722106934
    9. 'in' → logprob: -8.976866722106934
    10. '_in' → logprob: -9.976866722106934

Token 204: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011430453509092331
    2. ' range' → logprob: -4.511430263519287
    3. 'in' → logprob: -8.011430740356445
    4. 'a' → logprob: -10.136430740356445
    5. ' in' → logprob: -11.761430740356445
    6. '_' → logprob: -13.136430740356445
    7. ' ' → logprob: -13.886430740356445
    8. '  ' → logprob: -15.511430740356445
    9. '_range' → logprob: -15.886430740356445
    10. '   ' → logprob: -16.511430740356445

Token 205: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015348586020991206
    2. ' range' → logprob: -6.501534938812256
    3. 'a' → logprob: -10.376534461975098
    4. 'r' → logprob: -14.501534461975098
    5. ' ' → logprob: -15.126534461975098
    6. 'ran' → logprob: -15.626534461975098
    7. '  ' → logprob: -16.376535415649414
    8. ' a' → logprob: -16.626535415649414
    9. 'ra' → logprob: -16.751535415649414
    10. '   ' → logprob: -16.876535415649414

Token 206: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5390581488609314
    2. '(k' → logprob: -1.1640582084655762
    3. 'n' → logprob: -3.289058208465576
    4. 'k' → logprob: -3.289058208465576
    5. '(' → logprob: -3.539058208465576
    6. '100' → logprob: -8.414057731628418
    7. ' (' → logprob: -9.039057731628418
    8. '((' → logprob: -9.164057731628418
    9. '10' → logprob: -10.164057731628418
    10. '   ' → logprob: -10.164057731628418

Token 207: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.009898455813527107
    2. '+' → logprob: -4.634898662567139
    3. ' +' → logprob: -9.75989818572998
    4. ' )' → logprob: -9.75989818572998
    5. ')]
' → logprob: -10.88489818572998
    6. ')' → logprob: -12.25989818572998
    7. ']' → logprob: -13.88489818572998
    8. ' ]' → logprob: -14.50989818572998
    9. ')])' → logprob: -14.63489818572998
    10. '-' → logprob: -15.13489818572998

Token 208: 'co' (ID: 1191)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04508552700281143
    2. 'count' → logprob: -4.795085430145264
    3. 'cnt' → logprob: -4.795085430145264
    4. 'max' → logprob: -5.670085430145264
    5. 'stack' → logprob: -6.170085430145264
    6. 'cur' → logprob: -6.170085430145264
    7. 'dp' → logprob: -6.170085430145264
    8. 'a' → logprob: -6.295085430145264
    9. 'c' → logprob: -6.295085430145264
    10. ' for' → logprob: -6.545085430145264

Token 209: ' =' (ID: 314)
  Prédit: 'unt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unt' → logprob: -0.08259323984384537
    2. ' =' → logprob: -3.3325932025909424
    3. '=' → logprob: -3.7075932025909424
    4. 'unts' → logprob: -4.0825934410095215
    5. 'unter' → logprob: -6.9575934410095215
    6. 'u' → logprob: -7.3325934410095215
    7. 'un' → logprob: -8.957592964172363
    8. '   ' → logprob: -9.457592964172363
    9. 'ut' → logprob: -9.457592964172363
    10. 'unting' → logprob: -9.707592964172363

Token 210: ' [' (ID: 723)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.849705696105957
    2. '[' → logprob: -1.349705696105957
    3. '0' → logprob: -1.599705696105957
    4. 'collections' → logprob: -2.974705696105957
    5. ' cl' → logprob: -3.224705696105957
    6. '{}' → logprob: -4.099705696105957
    7. '{' → logprob: -6.599705696105957
    8. ' [' → logprob: -6.849705696105957
    9. ' collections' → logprob: -7.474705696105957
    10. ' ' → logprob: -8.099705696105957

Token 211: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.73446003627032e-05
    2. '[' → logprob: -10.000097274780273
    3. ' ' → logprob: -10.750097274780273
    4. '{}' → logprob: -10.875097274780273
    5. ']' → logprob: -12.250097274780273
    6. '[]' → logprob: -12.500097274780273
    7. ' [' → logprob: -14.000097274780273
    8. 'False' → logprob: -14.000097274780273
    9. '1' → logprob: -15.000097274780273
    10. '{' → logprob: -15.000097274780273

Token 212: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6771851181983948
    2. ' for' → logprob: -0.9271851181983948
    3. ']*(' → logprob: -2.92718505859375
    4. ']' → logprob: -3.17718505859375
    5. ']*' → logprob: -6.92718505859375
    6. '	for' → logprob: -10.30218505859375
    7. '*(' → logprob: -11.80218505859375
    8. ' ' → logprob: -12.42718505859375
    9. ' ]' → logprob: -12.67718505859375
    10. '   ' → logprob: -13.30218505859375

Token 213: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00565620232373476
    2. ' range' → logprob: -5.5056562423706055
    3. 'range' → logprob: -6.8806562423706055
    4. ' _' → logprob: -7.8806562423706055
    5. '_range' → logprob: -8.755656242370605
    6. '(range' → logprob: -11.505656242370605
    7. '(' → logprob: -13.630656242370605
    8. ' in' → logprob: -13.755656242370605
    9. 'for' → logprob: -15.005656242370605
    10. '_n' → logprob: -15.255656242370605

Token 214: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06282759457826614
    2. ' range' → logprob: -2.8128275871276855
    3. 'in' → logprob: -7.4378275871276855
    4. '_range' → logprob: -9.312828063964844
    5. 'n' → logprob: -9.562828063964844
    6. '_' → logprob: -9.687828063964844
    7. ' in' → logprob: -10.187828063964844
    8. '(range' → logprob: -11.812828063964844
    9. '(n' → logprob: -13.562828063964844
    10. '	range' → logprob: -14.562828063964844

Token 215: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889176905155182
    2. ' range' → logprob: -2.5788917541503906
    3. '(range' → logprob: -13.20389175415039
    4. 'n' → logprob: -17.45389175415039
    5. '	range' → logprob: -17.82889175415039
    6. '(n' → logprob: -18.20389175415039
    7. '   ' → logprob: -18.32889175415039
    8. '_range' → logprob: -18.32889175415039
    9. 'k' → logprob: -19.32889175415039
    10. '_' → logprob: -19.57889175415039

Token 216: '(' (ID: 7)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.7214773297309875
    2. '(' → logprob: -1.0964772701263428
    3. 'k' → logprob: -2.7214772701263428
    4. '(n' → logprob: -2.9714772701263428
    5. 'range' → logprob: -3.2214772701263428
    6. '(range' → logprob: -4.846477508544922
    7. 'n' → logprob: -5.221477508544922
    8. '(a' → logprob: -5.721477508544922
    9. '26' → logprob: -6.471477508544922
    10. '(max' → logprob: -6.596477508544922

Token 217: '200' (ID: 1179)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1952192336320877
    2. 'n' → logprob: -2.8202192783355713
    3. '(' → logprob: -3.9452192783355713
    4. '200' → logprob: -3.9452192783355713
    5. 'max' → logprob: -4.195219039916992
    6. '(n' → logprob: -4.320219039916992
    7. '(k' → logprob: -4.320219039916992
    8. '100' → logprob: -4.445219039916992
    9. '10' → logprob: -5.320219039916992
    10. '20' → logprob: -5.695219039916992

Token 218: '2' (ID: 17)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.146657332777977
    2. '005' → logprob: -2.8966572284698486
    3. '001' → logprob: -3.3966572284698486
    4. '010' → logprob: -3.6466572284698486
    5. '002' → logprob: -4.646657466888428
    6. '1' → logprob: -5.521657466888428
    7. '000' → logprob: -5.896657466888428
    8. '])' → logprob: -6.771657466888428
    9. '_' → logprob: -7.271657466888428
    10. '0' → logprob: -7.646657466888428

Token 219: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.5941604690160602e-05
    2. ']' → logprob: -11.250025749206543
    3. '])' → logprob: -12.250025749206543
    4. ')' → logprob: -12.250025749206543
    5. '])]' → logprob: -13.250025749206543
    6. ')])' → logprob: -14.500025749206543
    7. ')]
' → logprob: -14.625025749206543
    8. '0' → logprob: -15.625025749206543
    9. ']]' → logprob: -16.50002670288086
    10. '+' → logprob: -16.50002670288086

Token 220: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8564159870147705
    2. 'l' → logprob: -1.6064159870147705
    3. 'ans' → logprob: -1.8564159870147705
    4. 'res' → logprob: -2.7314159870147705
    5. 'r' → logprob: -2.9814159870147705
    6. 'left' → logprob: -3.2314159870147705
    7. 'i' → logprob: -3.4814159870147705
    8. 'j' → logprob: -4.731415748596191
    9. 'answer' → logprob: -5.481415748596191
    10. 'result' → logprob: -5.731415748596191

Token 221: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4439608156681061
    2. 'i' → logprob: -1.0689607858657837
    3. 'x' → logprob: -5.443960666656494
    4. ' x' → logprob: -5.568960666656494
    5. 'ai' → logprob: -6.193960666656494
    6. ' ai' → logprob: -6.443960666656494
    7. ' num' → logprob: -6.818960666656494
    8. 'num' → logprob: -7.318960666656494
    9. 'v' → logprob: -7.818960666656494
    10. ' aa' → logprob: -7.818960666656494

Token 222: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22543707489967346
    2. 'in' → logprob: -1.600437045097351
    3. ' ' → logprob: -11.35043716430664
    4. '	in' → logprob: -12.85043716430664
    5. 'range' → logprob: -12.97543716430664
    6. 'n' → logprob: -13.47543716430664
    7. ',' → logprob: -13.72543716430664
    8. 'import' → logprob: -13.85043716430664
    9. '_in' → logprob: -14.10043716430664
    10. '  ' → logprob: -14.22543716430664

Token 223: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004103335086256266
    2. ' range' → logprob: -5.504103183746338
    3. 'a' → logprob: -10.629103660583496
    4. ' ' → logprob: -16.00410270690918
    5. '   ' → logprob: -16.12910270690918
    6. 'r' → logprob: -16.25410270690918
    7. 'in' → logprob: -16.37910270690918
    8. ' a' → logprob: -16.50410270690918
    9. 'ra' → logprob: -16.75410270690918
    10. '(range' → logprob: -16.87910270690918

Token 224: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003374719060957432
    2. '(k' → logprob: -5.8783745765686035
    3. '(' → logprob: -7.5033745765686035
    4. 'n' → logprob: -11.003375053405762
    5. 'k' → logprob: -14.503375053405762
    6. '(a' → logprob: -14.878375053405762
    7. '(len' → logprob: -14.878375053405762
    8. '(i' → logprob: -15.378375053405762
    9. ' (' → logprob: -15.753375053405762
    10. ' n' → logprob: -16.128374099731445

Token 225: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02691737748682499
    2. '):
' → logprob: -3.6519174575805664
    3. '+' → logprob: -7.526917457580566
    4. ':' → logprob: -11.151917457580566
    5. ']:' → logprob: -11.151917457580566
    6. ')' → logprob: -11.276917457580566
    7. '   ' → logprob: -11.276917457580566
    8. ' ):' → logprob: -11.401917457580566
    9. '-' → logprob: -12.276917457580566
    10. ' ' → logprob: -13.026917457580566

Token 226: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013416734291240573
    2. 'k' → logprob: -6.626341819763184
    3. ' ' → logprob: -11.251341819763184
    4. '2' → logprob: -13.376341819763184
    5. ' k' → logprob: -14.376341819763184
    6. '-' → logprob: -15.501341819763184
    7. '(k' → logprob: -15.501341819763184
    8. '(' → logprob: -16.126340866088867
    9. '   ' → logprob: -17.876340866088867
    10. '
' → logprob: -18.376340866088867

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006295174825936556
    2. 'k' → logprob: -7.375629425048828
    3. '2' → logprob: -13.375629425048828
    4. '-' → logprob: -13.750629425048828
    5. ' ' → logprob: -16.250629425048828
    6. '(k' → logprob: -16.625629425048828
    7. '(' → logprob: -17.000629425048828
    8. '+' → logprob: -18.125629425048828
    9. ' k' → logprob: -18.250629425048828
    10. '0' → logprob: -18.250629425048828

Token 228: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13206665217876434
    2. ',' → logprob: -3.0070667266845703
    3. '):
' → logprob: -3.0070667266845703
    4. '+' → logprob: -4.00706672668457
    5. ' ):' → logprob: -5.50706672668457
    6. ' +' → logprob: -7.13206672668457
    7. ',-' → logprob: -7.38206672668457
    8. ' ,' → logprob: -7.63206672668457
    9. ')' → logprob: -8.38206672668457
    10. '):
' → logprob: -8.63206672668457

Token 229: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002614550176076591
    2. ' -' → logprob: -8.250261306762695
    3. '0' → logprob: -15.750261306762695
    4. ' ' → logprob: -17.375261306762695
    5. '   ' → logprob: -18.875261306762695
    6. '-i' → logprob: -19.250261306762695
    7. '
' → logprob: -19.750261306762695
    8. '	' → logprob: -20.500261306762695
    9. '-
' → logprob: -20.750261306762695
    10. '  ' → logprob: -21.000261306762695

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '-' → logprob: -16.75
    4. ' -' → logprob: -18.75
    5. '   ' → logprob: -19.0
    6. '
' → logprob: -19.5
    7. '```' → logprob: -20.125
    8. '2' → logprob: -20.375
    9. 'i' → logprob: -20.5
    10. ',' → logprob: -20.625

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.394135612528771e-05
    2. ',-' → logprob: -10.750043869018555
    3. '-' → logprob: -10.875043869018555
    4. ' ,' → logprob: -12.625043869018555
    5. ' -' → logprob: -16.875043869018555
    6. ',
' → logprob: -16.875043869018555
    7. '1' → logprob: -17.000043869018555
    8. '-,' → logprob: -17.375043869018555
    9. ' ,-' → logprob: -17.500043869018555
    10. '_,' → logprob: -18.500043869018555

Token 232: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0011703446507453918
    2. ' -' → logprob: -6.7511701583862305
    3. '0' → logprob: -16.501171112060547
    4. '-i' → logprob: -18.126171112060547
    5. ')' → logprob: -18.751171112060547
    6. '   ' → logprob: -19.126171112060547
    7. ' ' → logprob: -19.126171112060547
    8. '−' → logprob: -20.376171112060547
    9. 'i' → logprob: -21.001171112060547
    10. '1' → logprob: -21.126171112060547

Token 233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '
' → logprob: -17.125
    4. '```' → logprob: -17.25
    5. '   ' → logprob: -18.25
    6. '-' → logprob: -18.625
    7. '2' → logprob: -19.4375
    8. ')' → logprob: -19.6875
    9. '0' → logprob: -19.875
    10. '``' → logprob: -20.0

Token 234: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0037720545660704374
    2. '):
' → logprob: -5.628772258758545
    3. ':' → logprob: -9.003771781921387
    4. ' ):' → logprob: -11.128771781921387
    5. '-' → logprob: -11.503771781921387
    6. ']:' → logprob: -11.628771781921387
    7. ',' → logprob: -11.878771781921387
    8. '}:' → logprob: -12.628771781921387
    9. '):
' → logprob: -13.378771781921387
    10. ')' → logprob: -13.628771781921387

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015086272731423378
    2. 'co' → logprob: -4.3900861740112305
    3. ' co' → logprob: -6.7650861740112305
    4. ':' → logprob: -7.6400861740112305
    5. 'if' → logprob: -8.01508617401123
    6. ' if' → logprob: -8.89008617401123
    7. '   ' → logprob: -9.39008617401123
    8. '):
' → logprob: -9.64008617401123
    9. ' ' → logprob: -9.89008617401123
    10. '    
' → logprob: -10.14008617401123

Token 236: ' aaa' (ID: 170080)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.3168717622756958
    2. '   ' → logprob: -1.3168717622756958
    3. 'if' → logprob: -6.191871643066406
    4. ' co' → logprob: -6.941871643066406
    5. 'for' → logprob: -7.941871643066406
    6. 'c' → logprob: -10.191871643066406
    7. ' ' → logprob: -10.816871643066406
    8. 'aa' → logprob: -10.816871643066406
    9. 'cc' → logprob: -11.066871643066406
    10. 'su' → logprob: -11.066871643066406

Token 237: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03724094107747078
    2. ']' → logprob: -3.912240982055664
    3. '=' → logprob: -5.162240982055664
    4. '[' → logprob: -5.287240982055664
    5. '[a' → logprob: -5.412240982055664
    6. ' =' → logprob: -7.287240982055664
    7. ']=' → logprob: -8.037240982055664
    8. '[n' → logprob: -10.162240982055664
    9. '][' → logprob: -10.162240982055664
    10. 'a' → logprob: -10.287240982055664

Token 238: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01329822838306427
    2. ']=' → logprob: -4.388298034667969
    3. '=' → logprob: -7.388298034667969
    4. ']+=' → logprob: -8.763298034667969
    5. 'a' → logprob: -11.888298034667969
    6. '+' → logprob: -13.638298034667969
    7. '=a' → logprob: -13.638298034667969
    8. '+=' → logprob: -13.888298034667969
    9. ' =' → logprob: -14.138298034667969
    10. '[' → logprob: -14.763298034667969

Token 239: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007106767036020756
    2. ' =' → logprob: -5.382106781005859
    3. '+=' → logprob: -6.007106781005859
    4. ' +=' → logprob: -10.88210678100586
    5. '=a' → logprob: -13.25710678100586
    6. '=len' → logprob: -14.88210678100586
    7. '=int' → logprob: -15.25710678100586
    8. '=max' → logprob: -15.25710678100586
    9. '=i' → logprob: -15.63210678100586
    10. '=k' → logprob: -15.75710678100586

Token 240: ' co' (ID: 1407)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.23975515365600586
    2. 'aaa' → logprob: -1.6147551536560059
    3. 'a' → logprob: -4.739755153656006
    4. '1' → logprob: -6.364755153656006
    5. 'aa' → logprob: -6.364755153656006
    6. ' co' → logprob: -7.239755153656006
    7. 'bs' → logprob: -8.239755630493164
    8. 'k' → logprob: -8.489755630493164
    9. 'aaaa' → logprob: -8.864755630493164
    10. ' aaa' → logprob: -8.989755630493164

Token 241: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.006728991866111755
    2. 'a' → logprob: -5.0067291259765625
    3. '[' → logprob: -11.256729125976562
    4. ' a' → logprob: -15.256729125976562
    5. '   ' → logprob: -16.256729125976562
    6. '[i' → logprob: -16.631729125976562
    7. ' [' → logprob: -16.756729125976562
    8. '[k' → logprob: -17.131729125976562
    9. '1' → logprob: -17.756729125976562
    10. '[
' → logprob: -17.756729125976562

Token 242: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. 'a' → logprob: -14.750000953674316
    3. '[' → logprob: -14.875000953674316
    4. '[a' → logprob: -14.875000953674316
    5. 'i' → logprob: -16.625001907348633
    6. '[
' → logprob: -16.750001907348633
    7. ' [' → logprob: -17.625001907348633
    8. '```' → logprob: -17.750001907348633
    9. '
' → logprob: -18.125001907348633
    10. '[n' → logprob: -19.250001907348633

Token 243: ']]
' (ID: 29446)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00023810577113181353
    2. ']]' → logprob: -8.500238418579102
    3. ']' → logprob: -11.125238418579102
    4. ']+' → logprob: -11.625238418579102
    5. 'i' → logprob: -11.875238418579102
    6. '[' → logprob: -13.125238418579102
    7. 'a' → logprob: -14.375238418579102
    8. '(i' → logprob: -15.125238418579102
    9. ']][' → logprob: -15.375238418579102
    10. ']])' → logprob: -16.0002384185791

Token 244: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9584580659866333
    2. '   ' → logprob: -1.0834580659866333
    3. 'a' → logprob: -1.7084580659866333
    4. 'co' → logprob: -2.4584579467773438
    5. '+' → logprob: -4.708457946777344
    6. '[a' → logprob: -7.583457946777344
    7. '+a' → logprob: -8.208457946777344
    8. '[' → logprob: -8.333457946777344
    9. '++
' → logprob: -8.583457946777344
    10. '+=' → logprob: -8.708457946777344

Token 245: ' for' (ID: 395)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -2.057743949990254e-05
    2. ' co' → logprob: -11.250020980834961
    3. '   ' → logprob: -12.750020980834961
    4. 'a' → logprob: -12.875020980834961
    5. 'for' (adapté à ' for') → logprob: -13.875020980834961
    6. '
' → logprob: -15.000020980834961
    7. 'i' → logprob: -16.00002098083496
    8. 'if' → logprob: -16.37502098083496
    9. '1' → logprob: -16.37502098083496
    10. '++' → logprob: -16.50002098083496

Token 246: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.21435010433197021
    2. ' j' → logprob: -2.9643502235412598
    3. 'a' → logprob: -3.2143502235412598
    4. 'x' → logprob: -3.4643502235412598
    5. 'co' → logprob: -4.46435022354126
    6. 'v' → logprob: -4.83935022354126
    7. 'ii' → logprob: -4.83935022354126
    8. 'k' → logprob: -5.46435022354126
    9. 'c' → logprob: -5.46435022354126
    10. 'i' → logprob: -5.46435022354126

Token 247: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5763676762580872
    2. ' in' → logprob: -0.8263676762580872
    3. 'range' → logprob: -8.076367378234863
    4. 'a' → logprob: -9.326367378234863
    5. '[a' → logprob: -12.201367378234863
    6. 'n' → logprob: -12.451367378234863
    7. ' ' → logprob: -12.951367378234863
    8. ' range' → logprob: -13.451367378234863
    9. '[' → logprob: -13.451367378234863
    10. 'j' → logprob: -13.701367378234863

Token 248: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006181544158607721
    2. ' range' → logprob: -5.131181716918945
    3. 'a' → logprob: -8.756181716918945
    4. 'co' → logprob: -9.881181716918945
    5. '(range' → logprob: -10.881181716918945
    6. 'ra' → logprob: -12.006181716918945
    7. '[a' → logprob: -12.006181716918945
    8. '[' → logprob: -12.381181716918945
    9. 're' → logprob: -13.506181716918945
    10. 'r' → logprob: -13.756181716918945

Token 249: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6527994275093079
    2. '(a' → logprob: -0.9027994275093079
    3. '(k' → logprob: -3.277799367904663
    4. '(i' → logprob: -4.277799606323242
    5. '(max' → logprob: -4.902799606323242
    6. '(n' → logprob: -5.527799606323242
    7. '(len' → logprob: -6.027799606323242
    8. 'a' → logprob: -6.152799606323242
    9. '(co' → logprob: -6.402799606323242
    10. '(range' → logprob: -6.402799606323242

Token 250: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -13.000004768371582
    3. '[j' → logprob: -13.875004768371582
    4. ']' → logprob: -14.625004768371582
    5. 'i' → logprob: -14.875004768371582
    6. ' [' → logprob: -15.875004768371582
    7. '(i' → logprob: -16.0000057220459
    8. '```' → logprob: -16.0000057220459
    9. '   ' → logprob: -16.1250057220459
    10. 'a' → logprob: -16.2500057220459

Token 251: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.147740689106286e-05
    2. '(i' → logprob: -10.50007152557373
    3. ']+' → logprob: -11.25007152557373
    4. ']' → logprob: -11.50007152557373
    5. 'i' → logprob: -11.50007152557373
    6. '-' → logprob: -12.25007152557373
    7. '],' → logprob: -13.62507152557373
    8. '[' → logprob: -13.87507152557373
    9. ']-' → logprob: -14.12507152557373
    10. '   ' → logprob: -14.50007152557373

Token 252: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6155393123626709
    2. '+' → logprob: -1.990539312362671
    3. '[i' → logprob: -2.115539312362671
    4. ']+' → logprob: -2.615539312362671
    5. ']:' → logprob: -3.490539312362671
    6. ' ,' → logprob: -3.865539312362671
    7. ']' → logprob: -3.865539312362671
    8. ' +' → logprob: -3.865539312362671
    9. ']+=' → logprob: -4.99053955078125
    10. ':' → logprob: -5.11553955078125

Token 253: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033903829171322286
    2. ' ' → logprob: -8.00033950805664
    3. '2' → logprob: -12.87533950805664
    4. '   ' → logprob: -14.37533950805664
    5. '
' → logprob: -15.25033950805664
    6. '200' → logprob: -16.12533950805664
    7. '100' → logprob: -17.50033950805664
    8. '```' → logprob: -17.50033950805664
    9. '0' → logprob: -17.87533950805664
    10. '  ' → logprob: -17.87533950805664

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. '2' → logprob: -12.000015258789062
    3. ' ' → logprob: -12.250015258789062
    4. '200' → logprob: -13.250015258789062
    5. '0' → logprob: -15.125015258789062
    6. '
' → logprob: -15.125015258789062
    7. 'i' → logprob: -15.250015258789062
    8. 'a' → logprob: -15.375015258789062
    9. '   ' → logprob: -15.625015258789062
    10. 'n' → logprob: -15.750015258789062

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033951509976759553
    2. '200' → logprob: -8.62533950805664
    3. ' ,' → logprob: -9.00033950805664
    4. '):' → logprob: -10.87533950805664
    5. ']:' → logprob: -12.25033950805664
    6. ' ' → logprob: -12.50033950805664
    7. '):
' → logprob: -13.50033950805664
    8. ',n' → logprob: -13.50033950805664
    9. ']' → logprob: -14.00033950805664
    10. '2' → logprob: -14.12533950805664

Token 256: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.0032782447524368763
    2. 'k' → logprob: -6.2532782554626465
    3. ' ' → logprob: -7.2532782554626465
    4. 'len' → logprob: -8.378277778625488
    5. '100' → logprob: -8.628277778625488
    6. 'max' → logprob: -9.003277778625488
    7. 'a' → logprob: -10.378277778625488
    8. '2' → logprob: -10.878277778625488
    9. '
' → logprob: -11.128277778625488
    10. 'min' → logprob: -11.378277778625488

Token 257: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.003011099761351943
    2. 'k' → logprob: -6.753011226654053
    3. 'len' → logprob: -6.753011226654053
    4. '100' → logprob: -7.878011226654053
    5. 'max' → logprob: -9.378010749816895
    6. 'min' → logprob: -9.753010749816895
    7. 'n' → logprob: -10.003010749816895
    8. ' ' → logprob: -10.003010749816895
    9. 'a' → logprob: -10.628010749816895
    10. '201' → logprob: -12.003010749816895

Token 258: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016086915275081992
    2. '3' → logprob: -9.000161170959473
    3. '1' → logprob: -10.625161170959473
    4. '0' → logprob: -11.375161170959473
    5. ' ' → logprob: -14.375161170959473
    6. '   ' → logprob: -15.250161170959473
    7. '
' → logprob: -15.437661170959473
    8. '```' → logprob: -15.937661170959473
    9. ')' → logprob: -16.250160217285156
    10. ',' → logprob: -16.687660217285156

Token 259: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011049585416913033
    2. '):' → logprob: -4.511049747467041
    3. ']:
' → logprob: -14.636049270629883
    4. '):
' → logprob: -14.761049270629883
    5. '   ' → logprob: -14.886049270629883
    6. ':
' → logprob: -15.511049270629883
    7. ' ):
' → logprob: -15.761049270629883
    8. ':' → logprob: -16.136049270629883
    9. '():
' → logprob: -16.511049270629883
    10. ']:' → logprob: -17.011049270629883

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08003299683332443
    2. 'co' → logprob: -2.58003306388855
    3. '   ' → logprob: -6.830032825469971
    4. ' co' → logprob: -9.955033302307129
    5. 'if' → logprob: -11.830033302307129
    6. '	' → logprob: -13.330033302307129
    7. '           ' → logprob: -13.580033302307129
    8. ':
' → logprob: -14.330033302307129
    9. '_co' → logprob: -14.455033302307129
    10. ':' → logprob: -14.580033302307129

Token 261: ' co' (ID: 1407)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' (adapté à ' co') → logprob: -0.006658180616796017
    2. 'if' → logprob: -5.38165807723999
    3. '       ' → logprob: -6.75665807723999
    4. '   ' → logprob: -8.006658554077148
    5. ' co' → logprob: -8.006658554077148
    6. '           ' → logprob: -8.756658554077148
    7. ' if' → logprob: -10.131658554077148
    8. '               ' → logprob: -11.881658554077148
    9. '_co' → logprob: -14.881658554077148
    10. '  ' → logprob: -15.131658554077148

Token 262: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0002529952325858176
    2. '[' → logprob: -8.375252723693848
    3. '[i' → logprob: -11.375252723693848
    4. 'j' → logprob: -12.000252723693848
    5. '```' → logprob: -13.750252723693848
    6. '[a' → logprob: -14.000252723693848
    7. '   ' → logprob: -14.500252723693848
    8. ' [' → logprob: -14.875252723693848
    9. '][' → logprob: -15.125252723693848
    10. '
' → logprob: -15.250252723693848

Token 263: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16294659674167633
    2. ']+=' → logprob: -1.9129465818405151
    3. ']=' → logprob: -5.912946701049805
    4. ']+' → logprob: -11.537946701049805
    5. ' ]' → logprob: -14.162946701049805
    6. ']-' → logprob: -14.162946701049805
    7. ')' → logprob: -14.287946701049805
    8. ']=(' → logprob: -14.287946701049805
    9. ']++;
' → logprob: -15.037946701049805
    10. ']
' → logprob: -15.162946701049805

Token 264: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1627618372440338
    2. '=' → logprob: -1.9127618074417114
    3. '-=' → logprob: -6.412761688232422
    4. ' +=' → logprob: -7.537761688232422
    5. '=max' → logprob: -8.787761688232422
    6. ']+=' → logprob: -9.037761688232422
    7. ' =' → logprob: -9.787761688232422
    8. '>' → logprob: -11.037761688232422
    9. '%=' → logprob: -11.787761688232422
    10. '+' → logprob: -12.787761688232422

Token 265: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2271299511194229
    2. 'co' → logprob: -1.6021299362182617
    3. 'aaa' → logprob: -7.352129936218262
    4. ' ' → logprob: -7.602129936218262
    5. ' co' → logprob: -7.602129936218262
    6. '   ' → logprob: -10.727129936218262
    7. 'a' → logprob: -11.352129936218262
    8. '100' → logprob: -12.352129936218262
    9. '0' → logprob: -12.352129936218262
    10. '(co' → logprob: -12.477129936218262

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13139760494232178
    2. 'co' → logprob: -2.2563977241516113
    3. 'aaa' → logprob: -4.006397724151611
    4. ' ' → logprob: -9.631397247314453
    5. ' co' → logprob: -10.506397247314453
    6. 'aa' → logprob: -10.506397247314453
    7. 'a' → logprob: -11.006397247314453
    8. '111' → logprob: -11.506397247314453
    9. '100' → logprob: -11.756397247314453
    10. 'aaaa' → logprob: -12.006397247314453

Token 267: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 268: 'su' (ID: 20634)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9915412068367004
    2. '<|end|>' → logprob: -1.2415411472320557
    3. 'for' → logprob: -1.3665411472320557
    4. '#' → logprob: -3.2415411472320557
    5. 'print' → logprob: -5.116541385650635
    6. ']' → logprob: -5.241541385650635
    7. 'i' → logprob: -5.491541385650635
    8. 'k' → logprob: -5.491541385650635
    9. 'if' → logprob: -5.616541385650635
    10. 'max' → logprob: -5.616541385650635

Token 269: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6940127015113831
    2. ' =' → logprob: -0.6940127015113831
    3. ' +=' → logprob: -7.319012641906738
    4. '+=' → logprob: -8.944012641906738
    5. 'r' → logprob: -10.444012641906738
    6. ',' → logprob: -10.569012641906738
    7. ' ' → logprob: -12.069012641906738
    8. 'p' → logprob: -12.194012641906738
    9. '=sum' → logprob: -13.319012641906738
    10. 'm' → logprob: -14.194012641906738

Token 270: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014481737278401852
    2. ' ' → logprob: -4.264481544494629
    3. 'k' → logprob: -9.889481544494629
    4. 'aaa' → logprob: -10.139481544494629
    5. 'sum' → logprob: -10.139481544494629
    6. ' k' → logprob: -10.389481544494629
    7. '1' → logprob: -10.639481544494629
    8. 'n' → logprob: -10.889481544494629
    9. 'a' → logprob: -11.014481544494629
    10. ' sum' → logprob: -11.264481544494629

Token 271: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014579739654436707
    2. 'sum' → logprob: -7.876458168029785
    3. 'aaa' → logprob: -8.126458168029785
    4. '[' → logprob: -8.626458168029785
    5. 'max' → logprob: -8.876458168029785
    6. 'n' → logprob: -9.251458168029785
    7. 'k' → logprob: -9.376458168029785
    8. 'a' → logprob: -9.501458168029785
    9. ' ' → logprob: -9.876458168029785
    10. '1' → logprob: -10.626458168029785

Token 272: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023160692304372787
    2. 'dp' → logprob: -4.148160457611084
    3. 'ans' → logprob: -6.273160457611084
    4. 'i' → logprob: -6.648160457611084
    5. 'res' → logprob: -6.648160457611084
    6. 'cnt' → logprob: -7.273160457611084
    7. 'count' → logprob: -8.273160934448242
    8. 'result' → logprob: -8.398160934448242
    9. 'stack' → logprob: -8.398160934448242
    10. 'answer' → logprob: -8.523160934448242

Token 273: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00963496696203947
    2. 'dp' → logprob: -5.009634971618652
    3. 'left' → logprob: -7.259634971618652
    4. 'ans' → logprob: -7.884634971618652
    5. 'res' → logprob: -8.384634971618652
    6. 'l' → logprob: -8.384634971618652
    7. 'stack' → logprob: -9.009634971618652
    8. 'q' → logprob: -9.134634971618652
    9. 'print' → logprob: -9.134634971618652
    10. 'i' → logprob: -9.259634971618652

Token 274: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15488062798976898
    2. ' i' → logprob: -2.0298805236816406
    3. ' range' → logprob: -5.154880523681641
    4. 'range' → logprob: -5.279880523681641
    5. 'a' → logprob: -7.779880523681641
    6. '_' → logprob: -8.40488052368164
    7. '_i' → logprob: -9.40488052368164
    8. 'aaa' → logprob: -9.52988052368164
    9. 'x' → logprob: -9.77988052368164
    10. 'aa' → logprob: -9.90488052368164

Token 275: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25221821665763855
    2. 'in' → logprob: -1.502218246459961
    3. 'range' → logprob: -8.502218246459961
    4. ' ' → logprob: -10.752218246459961
    5. ',' → logprob: -10.877218246459961
    6. 'n' → logprob: -11.877218246459961
    7. 'import' → logprob: -12.002218246459961
    8. '(' → logprob: -12.252218246459961
    9. '_' → logprob: -12.502218246459961
    10. ')' → logprob: -12.877218246459961

Token 276: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015235526952892542
    2. ' range' → logprob: -6.501523494720459
    3. 'a' → logprob: -11.376523971557617
    4. 'aaa' → logprob: -12.126523971557617
    5. 'ra' → logprob: -13.251523971557617
    6. 'ran' → logprob: -14.876523971557617
    7. ' aaa' → logprob: -14.876523971557617
    8. '(range' → logprob: -15.001523971557617
    9. 'r' → logprob: -15.251523971557617
    10. 'n' → logprob: -15.626523971557617

Token 277: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002120046177878976
    2. '(' → logprob: -6.502120018005371
    3. 'range' → logprob: -8.377120018005371
    4. '(range' → logprob: -8.627120018005371
    5. 'n' → logprob: -8.752120018005371
    6. '(k' → logprob: -10.627120018005371
    7. '(len' → logprob: -11.877120018005371
    8. '(a' → logprob: -12.127120018005371
    9. ' range' → logprob: -12.252120018005371
    10. '(s' → logprob: -12.752120018005371

Token 278: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7706528306007385
    2. '):' → logprob: -1.2706527709960938
    3. '):
' → logprob: -1.3956527709960938
    4. ' -' → logprob: -4.770652770996094
    5. ')' → logprob: -8.770652770996094
    6. '   ' → logprob: -8.770652770996094
    7. '-n' → logprob: -10.270652770996094
    8. ' ):' → logprob: -10.395652770996094
    9. '
' → logprob: -10.645652770996094
    10. ' ' → logprob: -11.020652770996094

Token 279: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010388894006609917
    2. 'k' → logprob: -4.7603888511657715
    3. 'n' → logprob: -6.5103888511657715
    4. ' ' → logprob: -8.63538932800293
    5. '2' → logprob: -10.13538932800293
    6. ' k' → logprob: -10.63538932800293
    7. '(' → logprob: -11.38538932800293
    8. ' n' → logprob: -11.88538932800293
    9. '   ' → logprob: -12.13538932800293
    10. '(k' → logprob: -12.76038932800293

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35083478689193726
    2. 'n' → logprob: -1.225834846496582
    3. '-' → logprob: -7.100834846496582
    4. 'k' → logprob: -7.600834846496582
    5. '(n' → logprob: -7.975834846496582
    6. '2' → logprob: -8.225834846496582
    7. '(' → logprob: -8.725834846496582
    8. 'aaa' → logprob: -8.975834846496582
    9. ' ' → logprob: -10.350834846496582
    10. ' n' → logprob: -10.600834846496582

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022082533687353134
    2. '-' → logprob: -5.022082328796387
    3. '):' → logprob: -5.022082328796387
    4. '):
' → logprob: -5.897082328796387
    5. ' -' → logprob: -5.897082328796387
    6. '+' → logprob: -6.522082328796387
    7. ',-' → logprob: -6.647082328796387
    8. ' ,' → logprob: -8.647082328796387
    9. ' +' → logprob: -9.397082328796387
    10. '   ' → logprob: -10.272082328796387

Token 282: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02347012795507908
    2. ' -' → logprob: -3.773470163345337
    3. '0' → logprob: -8.523469924926758
    4. ' ' → logprob: -11.523469924926758
    5. 'k' → logprob: -11.898469924926758
    6. '-k' → logprob: -13.023469924926758
    7. 'n' → logprob: -13.273469924926758
    8. '1' → logprob: -13.648469924926758
    9. '
' → logprob: -13.898469924926758
    10. ' k' → logprob: -14.398469924926758

Token 283: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018360643880441785
    2. '-' → logprob: -6.37683629989624
    3. ' -' → logprob: -9.376835823059082
    4. '0' → logprob: -11.001835823059082
    5. ' ' → logprob: -11.126835823059082
    6. '2' → logprob: -11.751835823059082
    7. ',' → logprob: -13.564335823059082
    8. '(-' → logprob: -13.689335823059082
    9. ',-' → logprob: -13.939335823059082
    10. '```' → logprob: -14.064335823059082

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020254701375961304
    2. '-' → logprob: -6.502025604248047
    3. ',-' → logprob: -8.002025604248047
    4. ' -' → logprob: -8.877025604248047
    5. ' ,' → logprob: -10.752025604248047
    6. '):
' → logprob: -11.127025604248047
    7. '   ' → logprob: -12.252025604248047
    8. '+' → logprob: -12.752025604248047
    9. '):' → logprob: -13.252025604248047
    10. ' ,-' → logprob: -13.752025604248047

Token 285: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011174913495779037
    2. ' -' → logprob: -4.51117467880249
    3. '0' → logprob: -9.011175155639648
    4. ' ' → logprob: -13.011175155639648
    5. '   ' → logprob: -13.886175155639648
    6. '-i' → logprob: -14.886175155639648
    7. ',' → logprob: -15.011175155639648
    8. '1' → logprob: -15.386175155639648
    9. '
' → logprob: -15.886175155639648
    10. 'range' → logprob: -16.01117515563965

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.522638169466518e-05
    2. '-' → logprob: -11.375024795532227
    3. ' ' → logprob: -12.125024795532227
    4. '0' → logprob: -12.875024795532227
    5. '2' → logprob: -13.250024795532227
    6. '```' → logprob: -13.500024795532227
    7. '   ' → logprob: -14.250024795532227
    8. ' -' → logprob: -14.375024795532227
    9. '
' → logprob: -15.000024795532227
    10. ')' → logprob: -15.125024795532227

Token 287: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47423824667930603
    2. '):' → logprob: -0.9742382764816284
    3. ':' → logprob: -8.974238395690918
    4. '   ' → logprob: -11.349238395690918
    5. '):
' → logprob: -11.849238395690918
    6. ':
' → logprob: -11.974238395690918
    7. '-' → logprob: -12.724238395690918
    8. '():
' → logprob: -13.474238395690918
    9. '):

' → logprob: -13.724238395690918
    10. ')' → logprob: -14.099238395690918

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003457136917859316
    2. ' if' → logprob: -8.500346183776855
    3. 'if' → logprob: -9.500346183776855
    4. '    
' → logprob: -11.375346183776855
    5. '	if' → logprob: -11.500346183776855
    6. 'su' → logprob: -11.625346183776855
    7. '```' → logprob: -11.750346183776855
    8. '  ' → logprob: -11.875346183776855
    9. '       ' → logprob: -12.500346183776855
    10. '   ' → logprob: -12.500346183776855

Token 289: ' su' (ID: 593)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4848140478134155
    2. 'if' → logprob: -1.2348140478134155
    3. 'su' (adapté à ' su') → logprob: -2.859814167022705
    4. 'for' → logprob: -3.984814167022705
    5. 'co' → logprob: -4.234814167022705
    6. ' if' → logprob: -6.234814167022705
    7. 'j' → logprob: -8.859813690185547
    8. ' su' → logprob: -8.859813690185547
    9. '	if' → logprob: -9.109813690185547
    10. ' for' → logprob: -9.484813690185547

Token 290: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3869292736053467
    2. ' +=' → logprob: -1.1369292736053467
    3. '=' → logprob: -10.261929512023926
    4. ' =' → logprob: -11.761929512023926
    5. '+=(' → logprob: -12.386929512023926
    6. ']+=' → logprob: -12.636929512023926
    7. '+' → logprob: -12.761929512023926
    8. ' -=' → logprob: -13.261929512023926
    9. ' ^=' → logprob: -13.636929512023926
    10. '-=' → logprob: -13.761929512023926

Token 291: ' k' (ID: 372)
  Prédit: 'aaa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aaa' → logprob: -0.0017656205454841256
    2. 'co' → logprob: -7.251765727996826
    3. 'a' → logprob: -8.376765251159668
    4. '(' → logprob: -8.376765251159668
    5. 'k' → logprob: -8.501765251159668
    6. 'max' → logprob: -8.626765251159668
    7. '1' → logprob: -9.626765251159668
    8. 'bs' → logprob: -10.251765251159668
    9. 'aa' → logprob: -10.501765251159668
    10. 'mod' → logprob: -11.126765251159668

Token 292: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5829429030418396
    2. ' *' → logprob: -1.7079429626464844
    3. '**' → logprob: -1.8329429626464844
    4. ' -' → logprob: -3.0829429626464844
    5. '-' → logprob: -3.7079429626464844
    6. 'aaa' → logprob: -3.9579429626464844
    7. ' **' → logprob: -5.832942962646484
    8. '***' → logprob: -5.832942962646484
    9. '*(' → logprob: -6.207942962646484
    10. '[' → logprob: -7.082942962646484

Token 293: ' aaa' (ID: 170080)
  Prédit: 'aaa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aaa' → logprob: -0.007655727211385965
    2. '(' → logprob: -5.132655620574951
    3. 'su' → logprob: -7.632655620574951
    4. 'co' → logprob: -8.00765609741211
    5. 'a' → logprob: -8.38265609741211
    6. ' aaa' → logprob: -8.50765609741211
    7. 'aa' → logprob: -8.75765609741211
    8. 'aaaa' → logprob: -9.25765609741211
    9. 'k' → logprob: -9.50765609741211
    10. '(k' → logprob: -10.75765609741211

Token 294: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004015945305582136
    2. '[a' → logprob: -8.500401496887207
    3. '[' → logprob: -8.750401496887207
    4. 'i' → logprob: -11.000401496887207
    5. 'a' → logprob: -12.000401496887207
    6. '[n' → logprob: -12.375401496887207
    7. '[
' → logprob: -12.875401496887207
    8. ' [' → logprob: -13.250401496887207
    9. '[j' → logprob: -13.250401496887207
    10. '[k' → logprob: -13.500401496887207

Token 295: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6808100342750549
    2. '<|end|>' → logprob: -0.9308100342750549
    3. '+' → logprob: -2.93080997467041
    4. ']' → logprob: -4.18080997467041
    5. ' ' → logprob: -4.68080997467041
    6. '
' → logprob: -5.43080997467041
    7. '%' → logprob: -5.43080997467041
    8. '**' → logprob: -5.68080997467041
    9. ' +' → logprob: -5.68080997467041
    10. '-' → logprob: -6.93080997467041

Token 296: '   ' (ID: 271)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.016032254323363304
    2. '   ' → logprob: -5.0160322189331055
    3. ' k' → logprob: -5.7660322189331055
    4. 'su' → logprob: -6.3910322189331055
    5. '<|end|>' → logprob: -6.7660322189331055
    6. 'print' → logprob: -7.0160322189331055
    7. '	k' → logprob: -7.8910322189331055
    8. '+' → logprob: -8.016032218933105
    9. '
' → logprob: -8.266032218933105
    10. '  ' → logprob: -8.391032218933105

Token 297: ' su' (ID: 593)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07896755635738373
    2. 'print' → logprob: -2.703967571258545
    3. 'su' (adapté à ' su') → logprob: -5.703967571258545
    4. 'co' → logprob: -6.328967571258545
    5. ' k' → logprob: -6.453967571258545
    6. 'if' → logprob: -7.203967571258545
    7. 'for' → logprob: -7.578967571258545
    8. '   ' → logprob: -7.953967571258545
    9. ' print' → logprob: -8.578967094421387
    10. '  ' → logprob: -9.828967094421387

Token 298: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.738908052444458
    2. ' %=' → logprob: -1.488908052444458
    3. '%' → logprob: -1.613908052444458
    4. 'print' → logprob: -2.613908052444458
    5. '+=' → logprob: -4.613907814025879
    6. ')' → logprob: -5.488907814025879
    7. '=' → logprob: -5.613907814025879
    8. ' %' → logprob: -6.113907814025879
    9. ',' → logprob: -6.988907814025879
    10. ' +=' → logprob: -7.738907814025879

Token 299: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.1472419600977446e-06
    2. ' mod' → logprob: -13.750000953674316
    3. '(mod' → logprob: -19.125001907348633
    4. '	mod' → logprob: -22.625001907348633
    5. '10' → logprob: -22.875001907348633
    6. '100' → logprob: -23.125001907348633
    7. 'moder' → logprob: -23.875001907348633
    8. 'MOD' → logprob: -24.375001907348633
    9. ' ' → logprob: -25.375001907348633
    10. '.mod' → logprob: -25.875001907348633

Token 300: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 301: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0034695174545049667
    2. 'for' → logprob: -5.753469467163086
    3. '   ' → logprob: -8.878469467163086
    4. 'su' → logprob: -9.253469467163086
    5. '<|end|>' → logprob: -11.003469467163086
    6. ' print' → logprob: -11.503469467163086
    7. '#' → logprob: -11.628469467163086
    8. ')' → logprob: -12.378469467163086
    9. '```' → logprob: -12.378469467163086
    10. ' for' → logprob: -13.128469467163086

Token 302: ' su' (ID: 593)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07921098172664642
    2. 'print' → logprob: -2.5792109966278076
    3. 'su' (adapté à ' su') → logprob: -8.579211235046387
    4. 'for' → logprob: -10.204211235046387
    5. '```' → logprob: -10.829211235046387
    6. ' k' → logprob: -10.954211235046387
    7. '   ' → logprob: -11.079211235046387
    8. 'if' → logprob: -11.954211235046387
    9. 'mod' → logprob: -12.204211235046387
    10. ' print' → logprob: -12.329211235046387

Token 303: ' +=' (ID: 2757)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6279230713844299
    2. '+=' → logprob: -1.0029230117797852
    3. '=' → logprob: -3.127923011779785
    4. ' +=' → logprob: -3.377923011779785
    5. '*=' → logprob: -5.377923011779785
    6. '%=' → logprob: -5.502923011779785
    7. '```' → logprob: -6.502923011779785
    8. '**' → logprob: -6.627923011779785
    9. '-=' → logprob: -6.627923011779785
    10. '//=' → logprob: -6.877923011779785

Token 304: ' ((' (ID: 3536)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07234151661396027
    2. ' a' → logprob: -3.3223414421081543
    3. '1' → logprob: -4.322341442108154
    4. 'k' → logprob: -4.697341442108154
    5. 'co' → logprob: -5.447341442108154
    6. '(a' → logprob: -6.072341442108154
    7. '(' → logprob: -6.322341442108154
    8. ' (' → logprob: -7.572341442108154
    9. ' k' → logprob: -7.697341442108154
    10. ' ' → logprob: -7.697341442108154

Token 305: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.20379990339279175
    2. 'a' → logprob: -2.3287999629974365
    3. 'co' → logprob: -3.5787999629974365
    4. 'n' → logprob: -3.7037999629974365
    5. 'aaa' → logprob: -4.578799724578857
    6. '(k' → logprob: -5.203799724578857
    7. 'su' → logprob: -5.578799724578857
    8. 'i' → logprob: -5.578799724578857
    9. '(' → logprob: -5.703799724578857
    10. '1' → logprob: -5.828799724578857

Token 306: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7394676804542542
    2. '*' → logprob: -1.4894676208496094
    3. ' -' → logprob: -1.8644676208496094
    4. '-' → logprob: -2.1144676208496094
    5. '*(' → logprob: -4.239467620849609
    6. '+' → logprob: -5.614467620849609
    7. ')' → logprob: -6.239467620849609
    8. ' +' → logprob: -7.239467620849609
    9. '**' → logprob: -8.23946762084961
    10. ' ' → logprob: -8.48946762084961

Token 307: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0192413330078125
    2. '*' → logprob: -4.5192413330078125
    3. '*(' → logprob: -5.5192413330078125
    4. '(' → logprob: -6.1442413330078125
    5. 'k' → logprob: -7.3942413330078125
    6. ' (' → logprob: -7.3942413330078125
    7. ')' → logprob: -8.394241333007812
    8. ' *' → logprob: -8.644241333007812
    9. '(i' → logprob: -9.019241333007812
    10. '*k' → logprob: -9.769241333007812

Token 308: 'k' (ID: 74)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.01273271907120943
    2. 'k' → logprob: -4.51273250579834
    3. '(a' → logprob: -6.88773250579834
    4. '(' → logprob: -7.76273250579834
    5. 'a' → logprob: -9.63773250579834
    6. 'aaa' → logprob: -9.88773250579834
    7. ' (' → logprob: -10.63773250579834
    8. '(n' → logprob: -11.01273250579834
    9. '(i' → logprob: -11.13773250579834
    10. '((' → logprob: -11.26273250579834

Token 309: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16154159605503082
    2. '+' → logprob: -2.036541700363159
    3. ' -' → logprob: -4.03654146194458
    4. ' +' → logprob: -6.91154146194458
    5. '1' → logprob: -10.661541938781738
    6. ')' → logprob: -12.661541938781738
    7. '```' → logprob: -13.036541938781738
    8. ' ' → logprob: -13.536541938781738
    9. '   ' → logprob: -13.536541938781738
    10. '
' → logprob: -13.786541938781738

Token 310: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018983196059707552
    2. ' ' → logprob: -8.750189781188965
    3. ')' → logprob: -11.375189781188965
    4. '   ' → logprob: -11.375189781188965
    5. '+' → logprob: -12.750189781188965
    6. '```' → logprob: -13.750189781188965
    7. '    ' → logprob: -14.125189781188965
    8. '
' → logprob: -14.250189781188965
    9. '  ' → logprob: -14.812689781188965
    10. '...' → logprob: -14.937689781188965

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.898723561083898e-05
    2. '   ' → logprob: -10.125079154968262
    3. ' ' → logprob: -10.625079154968262
    4. '+' → logprob: -12.125079154968262
    5. ')' → logprob: -12.250079154968262
    6. '    ' → logprob: -13.750079154968262
    7. '
' → logprob: -13.875079154968262
    8. '```' → logprob: -14.375079154968262
    9. '  ' → logprob: -14.625079154968262
    10. ' +' → logprob: -15.125079154968262

Token 312: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07216884195804596
    2. ')//' → logprob: -2.6971688270568848
    3. ' )' → logprob: -6.572168827056885
    4. ' //' → logprob: -7.697168827056885
    5. '//' → logprob: -7.947168827056885
    6. ')>>' → logprob: -11.447169303894043
    7. '))' → logprob: -12.197169303894043
    8. ')
' → logprob: -13.447169303894043
    9. ' ' → logprob: -13.572169303894043
    10. '   ' → logprob: -13.822169303894043

Token 313: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.026242241263389587
    2. '//' → logprob: -3.901242256164551
    3. ')//' → logprob: -5.901242256164551
    4. ')' → logprob: -6.026242256164551
    5. ' *' → logprob: -7.901242256164551
    6. ' ' → logprob: -9.52624225616455
    7. ' )' → logprob: -10.90124225616455
    8. ' %' → logprob: -11.15124225616455
    9. '```' → logprob: -11.15124225616455
    10. ' ' → logprob: -12.02624225616455

Token 314: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001645644661039114
    2. ' ' → logprob: -8.750164985656738
    3. '1' → logprob: -12.500164985656738
    4. '4' → logprob: -13.625164985656738
    5. 'mod' → logprob: -14.375164985656738
    6. '3' → logprob: -16.250164031982422
    7. '(' → logprob: -16.250164031982422
    8. '%' → logprob: -16.625164031982422
    9. '6' → logprob: -16.625164031982422
    10. '200' → logprob: -16.750164031982422

Token 315: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.546478935983032e-05
    2. ' ' → logprob: -10.875025749206543
    3. 'mod' → logprob: -12.750025749206543
    4. '1' → logprob: -13.250025749206543
    5. '4' → logprob: -15.000025749206543
    6. '
' → logprob: -15.125025749206543
    7. '%' → logprob: -15.375025749206543
    8. '(' → logprob: -15.625025749206543
    9. '```' → logprob: -15.937525749206543
    10. '3' → logprob: -16.187524795532227

Token 316: ')' (ID: 8)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08356480300426483
    2. '*' → logprob: -2.7085647583007812
    3. ')' → logprob: -4.333564758300781
    4. ')*' → logprob: -8.458564758300781
    5. ' ' → logprob: -9.458564758300781
    6. ' )' → logprob: -9.833564758300781
    7. '   ' → logprob: -10.208564758300781
    8. '%' → logprob: -11.583564758300781
    9. '    ' → logprob: -12.583564758300781
    10. '  ' → logprob: -12.583564758300781

Token 317: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2015274614095688
    2. '*' → logprob: -1.70152747631073
    3. '%' → logprob: -10.45152759552002
    4. ' ' → logprob: -10.70152759552002
    5. '*(' → logprob: -11.20152759552002
    6. '   ' → logprob: -11.45152759552002
    7. ' ' → logprob: -11.82652759552002
    8. ')' → logprob: -11.95152759552002
    9. '
' → logprob: -12.70152759552002
    10. ' 
' → logprob: -12.95152759552002

Token 318: ' co' (ID: 1407)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.059573944658041
    2. 'co' → logprob: -3.8095738887786865
    3. ' a' → logprob: -4.059574127197266
    4. 'aaa' → logprob: -4.934574127197266
    5. '(a' → logprob: -5.684574127197266
    6. '(' → logprob: -6.309574127197266
    7. '1' → logprob: -6.434574127197266
    8. 'k' → logprob: -6.684574127197266
    9. '(co' → logprob: -7.559574127197266
    10. ' (' → logprob: -7.934574127197266

Token 319: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0002647927321959287
    2. 'a' → logprob: -9.000265121459961
    3. '[i' → logprob: -10.000265121459961
    4. '[' → logprob: -10.000265121459961
    5. '[j' → logprob: -10.000265121459961
    6. '(a' → logprob: -13.625265121459961
    7. '[
' → logprob: -14.625265121459961
    8. ' [' → logprob: -14.875265121459961
    9. '[k' → logprob: -14.875265121459961
    10. '[:' → logprob: -15.250265121459961

Token 320: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.868328920158092e-05
    2. '[a' → logprob: -10.625028610229492
    3. '[' → logprob: -13.375028610229492
    4. 'a' → logprob: -13.875028610229492
    5. 'i' → logprob: -14.250028610229492
    6. '[
' → logprob: -14.875028610229492
    7. ' [' → logprob: -15.500028610229492
    8. ']' → logprob: -16.125028610229492
    9. '[I' → logprob: -16.500028610229492
    10. '(i' → logprob: -16.750028610229492

Token 321: ']]
' (ID: 29446)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.314625690924004e-05
    2. '[a' → logprob: -9.875073432922363
    3. ']' → logprob: -11.125073432922363
    4. 'a' → logprob: -12.750073432922363
    5. '])' → logprob: -13.625073432922363
    6. 'i' → logprob: -13.750073432922363
    7. '[' → logprob: -14.000073432922363
    8. '(i' → logprob: -14.500073432922363
    9. '][' → logprob: -16.125072479248047
    10. ' [' → logprob: -16.375072479248047

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00411959970369935
    2. 'su' → logprob: -5.754119396209717
    3. '%' → logprob: -7.129119396209717
    4. ' su' → logprob: -10.254119873046875
    5. ' %=' → logprob: -10.754119873046875
    6. '    
' → logprob: -10.879119873046875
    7. '
' → logprob: -11.129119873046875
    8. ')' → logprob: -11.754119873046875
    9. '[' → logprob: -11.879119873046875
    10. '<|end|>' → logprob: -11.879119873046875

Token 323: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' (adapté à ' su') → logprob: -0.0001468067930545658
    2. ' su' → logprob: -8.875146865844727
    3. ' %=' → logprob: -12.750146865844727
    4. '%' → logprob: -13.125146865844727
    5. '   ' → logprob: -14.125146865844727
    6. 'Su' → logprob: -14.750146865844727
    7. 's' → logprob: -15.000146865844727
    8. '```' → logprob: -15.750146865844727
    9. 'i' → logprob: -15.875146865844727
    10. '=' → logprob: -16.125146865844727

Token 324: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.0007837798330001533
    2. ' %=' → logprob: -7.500783920288086
    3. '%' → logprob: -8.375783920288086
    4. '=' → logprob: -15.875783920288086
    5. '+=' → logprob: -16.250783920288086
    6. ' ' → logprob: -17.625783920288086
    7. '%
' → logprob: -17.750783920288086
    8. ' %' → logprob: -18.250783920288086
    9. ')%' → logprob: -18.250783920288086
    10. '
' → logprob: -18.500783920288086

Token 325: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -6.749814019713085e-06
    2. '(mod' → logprob: -12.500006675720215
    3. ' mod' → logprob: -12.750006675720215
    4. '	mod' → logprob: -17.87500762939453
    5. 'm' → logprob: -19.50000762939453
    6. '200' → logprob: -19.75000762939453
    7. 'max' → logprob: -20.12500762939453
    8. 'MOD' → logprob: -20.37500762939453
    9. '100' → logprob: -21.37500762939453
    10. 'moder' → logprob: -21.62500762939453

Token 326: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.816591434879228e-05
    2. '   ' → logprob: -10.50008773803711
    3. 'su' → logprob: -10.50008773803711
    4. 'pr' → logprob: -11.12508773803711
    5. 'for' → logprob: -11.75008773803711
    6. '```' → logprob: -12.37508773803711
    7. ' print' → logprob: -12.50008773803711
    8. '
' → logprob: -14.25008773803711
    9. 'pri' → logprob: -14.37508773803711
    10. '    
' → logprob: -15.00008773803711

Token 327: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.3676733690081164e-05
    2. ' print' → logprob: -11.37502384185791
    3. 'pr' → logprob: -12.12502384185791
    4. 'su' → logprob: -13.00002384185791
    5. '   ' → logprob: -13.87502384185791
    6. 'for' → logprob: -13.87502384185791
    7. 'return' → logprob: -14.25002384185791
    8. ')' → logprob: -14.37502384185791
    9. '```' → logprob: -14.75002384185791
    10. '<|end|>' → logprob: -15.37502384185791

Token 328: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -11.875006675720215
    3. 's' → logprob: -17.37500762939453
    4. '(n' → logprob: -18.12500762939453
    5. '(u' → logprob: -18.50000762939453
    6. '(S' → logprob: -18.87500762939453
    7. '()' → logprob: -19.12500762939453
    8. '(
' → logprob: -19.75000762939453
    9. '(sum' → logprob: -19.87500762939453
    10. '(x' → logprob: -20.12500762939453

Token 329: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.5332478142227046e-05
    2. ')' → logprob: -11.750015258789062
    3. '[u' → logprob: -12.625015258789062
    4. 'у' → logprob: -13.875015258789062
    5. '[' → logprob: -14.125015258789062
    6. '(u' → logprob: -14.125015258789062
    7. '	u' → logprob: -14.500015258789062
    8. ''u' → logprob: -14.750015258789062
    9. '_u' → logprob: -15.125015258789062
    10. ' u' → logprob: -16.500015258789062

Token 330: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ' )' → logprob: -12.750003814697266
    3. ')
' → logprob: -14.875003814697266
    4. '))' → logprob: -16.375003814697266
    5. ')`' → logprob: -17.250003814697266
    6. ')#' → logprob: -17.375003814697266
    7. '+' → logprob: -17.500003814697266
    8. '```' → logprob: -18.500003814697266
    9. '`)' → logprob: -18.750003814697266
    10. '**' → logprob: -19.250003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 328
Tokens correctement prédits (1ère position, stricte): 112
Tokens correctement prédits (1ère position, avec adaptation): 121
Tokens correctement prédits (top 10): 270
Précision stricte (1ère position): 34.15%
Précision adaptée (1ère position): 36.89%
Précision (top 10): 82.32%
================================================================================
