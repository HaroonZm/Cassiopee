================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:29:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin

def main():

    number_of_prices_input = input()
    price_list = [int(price_string) for price_string in stdin.readline().rstrip().split()]

    current_minimum_price = price_list[0]
    num_prices_at_or_below_min = 0

    for price in price_list:

        if price <= current_minimum_price:

            num_prices_at_or_below_min += 1
            current_minimum_price = price

        else:

            pass

    print(num_prices_at_or_below_min)

if __name__ == "__main__":

    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.16417361795902252
    2. ' argv' → logprob: -2.2891736030578613
    3. 'exit' → logprob: -3.5391736030578613
    4. ' exit' → logprob: -4.039173603057861
    5. 'import' → logprob: -6.789173603057861
    6. 'stdout' → logprob: -6.789173603057861
    7. 'path' → logprob: -7.914173603057861
    8. 'stdin' → logprob: -8.16417407989502
    9. ' import' → logprob: -8.91417407989502
    10. '.argv' → logprob: -9.28917407989502

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0341087281703949
    2. '.readline' → logprob: -3.6591086387634277
    3. '\n' → logprob: -5.659108638763428
    4. '.read' → logprob: -6.909108638763428
    5. 'newline' → logprob: -7.159108638763428
    6. '\' → logprob: -7.409108638763428
    7. '```' → logprob: -7.534108638763428
    8. ',' → logprob: -8.159109115600586
    9. 'import' → logprob: -8.284109115600586
    10. 'for' → logprob: -8.784109115600586

Token 5: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03538239002227783
    2. '.readline' → logprob: -3.5353822708129883
    3. '\n' → logprob: -6.035382270812988
    4. '.
' → logprob: -7.410382270812988
    5. '.read' → logprob: -7.660382270812988
    6. ',' → logprob: -7.660382270812988
    7. '```' → logprob: -7.910382270812988
    8. '
' → logprob: -7.910382270812988
    9. 'print' → logprob: -8.160382270812988
    10. 'for' → logprob: -8.660382270812988

Token 6: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.047279614955186844
    2. ' read' → logprob: -3.4222795963287354
    3. ' process' → logprob: -4.7972798347473145
    4. ' parse' → logprob: -6.9222798347473145
    5. ' space' → logprob: -7.1722798347473145
    6. ' main' → logprob: -7.1722798347473145
    7. '_read' → logprob: -7.5472798347473145
    8. ' ' → logprob: -7.5472798347473145
    9. ' readline' → logprob: -8.172279357910156
    10. 'read' → logprob: -8.672279357910156

Token 7: '():

' (ID: 101746)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5837025046348572
    2. '(' → logprob: -0.9587025046348572
    3. ':' → logprob: -3.083702564239502
    4. '(:' → logprob: -4.458702564239502
    5. '```' → logprob: -7.708702564239502
    6. '):' → logprob: -8.458702087402344
    7. '(":' → logprob: -8.583702087402344
    8. ' ():' → logprob: -8.708702087402344
    9. '(
' → logprob: -9.458702087402344
    10. ' (' → logprob: -9.708702087402344

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024758970830589533
    2. '    
' → logprob: -7.127475738525391
    3. ' ' → logprob: -8.12747573852539
    4. '   ' → logprob: -8.37747573852539
    5. 'x' → logprob: -8.62747573852539
    6. 'input' → logprob: -8.75247573852539
    7. '```' → logprob: -8.87747573852539
    8. 'print' → logprob: -9.37747573852539
    9. '    ' → logprob: -9.37747573852539
    10. 'for' → logprob: -10.00247573852539

Token 9: ' number' (ID: 2086)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5736746191978455
    2. 'data' → logprob: -1.1986746788024902
    3. 'line' → logprob: -2.8236746788024902
    4. 'n' → logprob: -3.0736746788024902
    5. '   ' → logprob: -4.19867467880249
    6. 'input' → logprob: -5.19867467880249
    7. 'lines' → logprob: -5.94867467880249
    8. ' for' → logprob: -6.69867467880249
    9. 'user' → logprob: -7.19867467880249
    10. 'l' → logprob: -7.44867467880249

Token 10: '_of' (ID: 8023)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24676786363124847
    2. '=' → logprob: -1.9967678785324097
    3. '_' → logprob: -3.12176775932312
    4. 's' → logprob: -3.74676775932312
    5. ')' → logprob: -4.996767997741699
    6. ' ' → logprob: -5.746767997741699
    7. '.' → logprob: -6.246767997741699
    8. '_input' → logprob: -6.746767997741699
    9. '   ' → logprob: -7.496767997741699
    10. '  ' → logprob: -7.871767997741699

Token 11: '_prices' (ID: 172132)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.6159894466400146
    2. ' ' → logprob: -1.8659894466400146
    3. '_items' → logprob: -1.9909894466400146
    4. '_' → logprob: -1.9909894466400146
    5. '_spaces' → logprob: -2.1159894466400146
    6. '_students' → logprob: -2.6159894466400146
    7. '_inputs' → logprob: -3.4909894466400146
    8. '_users' → logprob: -3.9909894466400146
    9. '_entries' → logprob: -4.115989685058594
    10. '_elements' → logprob: -4.115989685058594

Token 12: '_input' (ID: 12507)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12732061743736267
    2. '=' → logprob: -2.1273205280303955
    3. ' ' → logprob: -8.377320289611816
    4. '_' → logprob: -9.252320289611816
    5. '  ' → logprob: -11.002320289611816
    6. ')' → logprob: -11.002320289611816
    7. '.' → logprob: -11.627320289611816
    8. '   ' → logprob: -11.877320289611816
    9. ',' → logprob: -12.502320289611816
    10. ' +=' → logprob: -12.877320289611816

Token 13: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6359922885894775
    2. ' =' → logprob: -0.8859922885894775
    3. '.' → logprob: -4.385992050170898
    4. '(' → logprob: -4.635992050170898
    5. '_' → logprob: -4.635992050170898
    6. '[:]' → logprob: -4.885992050170898
    7. 's' → logprob: -5.135992050170898
    8. '[' → logprob: -5.510992050170898
    9. '('' → logprob: -6.510992050170898
    10. ''' → logprob: -6.760992050170898

Token 14: ' input' (ID: 3422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.34191614389419556
    2. 'int' → logprob: -1.9669160842895508
    3. ' stdin' → logprob: -2.216916084289551
    4. 'stdin' → logprob: -3.466916084289551
    5. ' input' → logprob: -5.216916084289551
    6. 'input' → logprob: -5.841916084289551
    7. ' ' → logprob: -8.09191608428955
    8. ' len' → logprob: -8.09191608428955
    9. ' float' → logprob: -8.84191608428955
    10. '(stdin' → logprob: -8.96691608428955

Token 15: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018082220340147614
    2. '('' → logprob: -6.626808166503906
    3. ''' → logprob: -8.626808166503906
    4. '(
' → logprob: -9.626808166503906
    5. '"' → logprob: -10.376808166503906
    6. '[' → logprob: -10.376808166503906
    7. '("("' → logprob: -10.376808166503906
    8. '()' → logprob: -10.501808166503906
    9. '```' → logprob: -11.001808166503906
    10. ' ' → logprob: -11.376808166503906

Token 16: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.780022382736206
    2. '()' → logprob: -1.530022382736206
    3. '_' → logprob: -2.905022382736206
    4. ')' → logprob: -2.905022382736206
    5. '```' → logprob: -2.905022382736206
    6. '=' → logprob: -3.280022382736206
    7. '\' → logprob: -3.280022382736206
    8. ' ' → logprob: -4.655022621154785
    9. ' =' → logprob: -4.655022621154785
    10. '   ' → logprob: -4.780022621154785

Token 17: ' price' (ID: 3911)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1107325553894043
    2. '.' → logprob: -1.2357325553894043
    3. ' ' → logprob: -2.6107325553894043
    4. '()' → logprob: -2.9857325553894043
    5. '_' → logprob: -2.9857325553894043
    6. '=' → logprob: -3.3607325553894043
    7. '(' → logprob: -3.6107325553894043
    8. ''' → logprob: -3.9857325553894043
    9. '```' → logprob: -4.110732555389404
    10. '\' → logprob: -4.235732555389404

Token 18: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.023169299587607384
    2. '_s' → logprob: -4.02316951751709
    3. ' =' → logprob: -6.14816951751709
    4. '_' → logprob: -6.39816951751709
    5. '_of' → logprob: -7.77316951751709
    6. '_list' → logprob: -8.14816951751709
    7. '_input' → logprob: -9.02316951751709
    8. '=' → logprob: -9.27316951751709
    9. ' s' → logprob: -9.52316951751709
    10. '_prices' → logprob: -9.64816951751709

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313844233751297
    2. '=' → logprob: -1.3138442039489746
    3. '_' → logprob: -8.313844680786133
    4. 's' → logprob: -8.813844680786133
    5. '.' → logprob: -10.188844680786133
    6. '[' → logprob: -10.313844680786133
    7. '[:]' → logprob: -10.313844680786133
    8. '=[]' → logprob: -10.438844680786133
    9. ' ' → logprob: -10.688844680786133
    10. '  ' → logprob: -12.063844680786133

Token 20: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6945645213127136
    2. ' list' → logprob: -1.4445645809173584
    3. ' [' → logprob: -1.9445645809173584
    4. '[]' → logprob: -2.8195645809173584
    5. 'list' → logprob: -2.9445645809173584
    6. '[' → logprob: -5.194564342498779
    7. '[list' → logprob: -6.444564342498779
    8. ' stdin' → logprob: -7.069564342498779
    9. ' ' → logprob: -7.819564342498779
    10. 'stdin' → logprob: -8.069564819335938

Token 21: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1596386730670929
    2. 'float' → logprob: -2.4096386432647705
    3. ' int' → logprob: -3.1596386432647705
    4. ' float' → logprob: -4.28463888168335
    5. '   ' → logprob: -7.53463888168335
    6. '0' → logprob: -8.409638404846191
    7. ']' → logprob: -8.659638404846191
    8. ' ]' → logprob: -8.909638404846191
    9. ']int' → logprob: -9.409638404846191
    10. ' ' → logprob: -9.534638404846191

Token 22: '(price' (ID: 81279)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1849839687347412
    2. '(' → logprob: -2.309983968734741
    3. '(i' → logprob: -3.809983968734741
    4. '(stdin' → logprob: -3.809983968734741
    5. '(price' → logprob: -4.80998420715332
    6. '(input' → logprob: -4.93498420715332
    7. '(token' → logprob: -5.30998420715332
    8. '()]' → logprob: -6.30998420715332
    9. '(item' → logprob: -6.80998420715332
    10. '(value' → logprob: -7.68498420715332

Token 23: '_string' (ID: 8609)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009386162855662405
    2. ' )' → logprob: -8.250938415527344
    3. '())' → logprob: -8.500938415527344
    4. ' for' → logprob: -8.875938415527344
    5. ')]' → logprob: -9.375938415527344
    6. 'for' → logprob: -9.500938415527344
    7. '()' → logprob: -9.750938415527344
    8. '(' → logprob: -10.375938415527344
    9. '),' → logprob: -10.625938415527344
    10. '   ' → logprob: -11.000938415527344

Token 24: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002096197713399306
    2. ')]' → logprob: -9.37520980834961
    3. ' )' → logprob: -10.12520980834961
    4. '())' → logprob: -11.00020980834961
    5. '),' → logprob: -11.62520980834961
    6. '(' → logprob: -11.62520980834961
    7. 'for' → logprob: -11.62520980834961
    8. '(token' → logprob: -11.62520980834961
    9. ')])' → logprob: -12.37520980834961
    10. ' for' → logprob: -12.37520980834961

Token 25: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18919171392917633
    2. 'for' → logprob: -2.3141918182373047
    3. ')' → logprob: -2.6891918182373047
    4. ' )' → logprob: -5.939191818237305
    5. ')]' → logprob: -7.314191818237305
    6. '<|end|>' → logprob: -7.814191818237305
    7. ' ' → logprob: -7.939191818237305
    8. 'from' → logprob: -8.189191818237305
    9. '   ' → logprob: -8.439191818237305
    10. ',' → logprob: -8.814191818237305

Token 26: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.12335193902254105
    2. 'price' → logprob: -2.49835205078125
    3. ' ' → logprob: -3.49835205078125
    4. '	price' → logprob: -6.24835205078125
    5. '  ' → logprob: -6.74835205078125
    6. '_price' → logprob: -9.12335205078125
    7. '<|end|>' → logprob: -9.24835205078125
    8. ' _' → logprob: -9.99835205078125
    9. '_' → logprob: -10.12335205078125
    10. '<|end|>' → logprob: -10.37335205078125

Token 27: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.015405138954520226
    2. '_' → logprob: -4.265405178070068
    3. '_in' → logprob: -7.265405178070068
    4. ' in' → logprob: -7.890405178070068
    5. '_strings' → logprob: -9.64040470123291
    6. '_list' → logprob: -10.51540470123291
    7. '_price' → logprob: -10.89040470123291
    8. '_str' → logprob: -11.64040470123291
    9. '_token' → logprob: -12.01540470123291
    10. 'in' → logprob: -12.14040470123291

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011079652234911919
    2. 'in' → logprob: -4.511079788208008
    3. '<|end|>' → logprob: -11.261079788208008
    4. ' ' → logprob: -11.386079788208008
    5. '	in' → logprob: -13.136079788208008
    6. 'to' → logprob: -13.886079788208008
    7. 'import' → logprob: -14.386079788208008
    8. '<|end|>' → logprob: -14.511079788208008
    9. '...' → logprob: -14.761079788208008
    10. ')' → logprob: -15.011079788208008

Token 29: ' stdin' (ID: 75143)
  Prédit: ' stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.204853817820549
    2. 'stdin' → logprob: -1.7048537731170654
    3. '(stdin' → logprob: -5.8298540115356445
    4. ' number' → logprob: -8.954854011535645
    5. ' input' → logprob: -9.329854011535645
    6. '.stdin' → logprob: -9.329854011535645
    7. 'input' → logprob: -9.954854011535645
    8. ' range' → logprob: -9.954854011535645
    9. 'number' → logprob: -9.954854011535645
    10. ' ' → logprob: -11.767354011535645

Token 30: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.26515495777130127
    2. ']' → logprob: -1.5151549577713013
    3. '.readlines' → logprob: -4.390154838562012
    4. '()]' → logprob: -7.890154838562012
    5. '.read' → logprob: -9.015154838562012
    6. ' readline' → logprob: -9.015154838562012
    7. 'read' → logprob: -10.640154838562012
    8. ' ]' → logprob: -10.640154838562012
    9. ')]' → logprob: -10.765154838562012
    10. '.' → logprob: -11.015154838562012

Token 31: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.007751556113362312
    2. '()' → logprob: -5.50775146484375
    3. '())' → logprob: -5.75775146484375
    4. '().' → logprob: -7.63275146484375
    5. ' ()' → logprob: -11.88275146484375
    6. '()].' → logprob: -12.00775146484375
    7. '()]
' → logprob: -12.25775146484375
    8. '()][' → logprob: -13.63275146484375
    9. ')]' → logprob: -14.00775146484375
    10. ']' → logprob: -14.13275146484375

Token 32: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.1394740343093872
    2. 'split' → logprob: -2.1394739151000977
    3. 'rstrip' → logprob: -4.389473915100098
    4. ' strip' → logprob: -10.389473915100098
    5. ' split' → logprob: -10.889473915100098
    6. ')' → logprob: -13.014473915100098
    7. ' ' → logprob: -13.139473915100098
    8. '(split' → logprob: -13.389473915100098
    9. '(strip' → logprob: -13.514473915100098
    10. '())' → logprob: -13.514473915100098

Token 33: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0625903606414795
    2. '())' → logprob: -1.1875903606414795
    3. '()]' → logprob: -1.4375903606414795
    4. '().' → logprob: -3.1875903606414795
    5. '('' → logprob: -3.4375903606414795
    6. '('\' → logprob: -3.8125903606414795
    7. '()\' → logprob: -4.562590599060059
    8. '(' → logprob: -5.812590599060059
    9. '(),' → logprob: -7.312590599060059
    10. '("' → logprob: -7.562590599060059

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.610702363715973e-06
    2. 'rstrip' → logprob: -12.125009536743164
    3. 'strip' → logprob: -12.750009536743164
    4. ' split' → logprob: -13.875009536743164
    5. 'spl' → logprob: -15.250009536743164
    6. '(split' → logprob: -16.500009536743164
    7. '```' → logprob: -18.625009536743164
    8. ' ' → logprob: -18.750009536743164
    9. 'plit' → logprob: -19.500009536743164
    10. 'sp' → logprob: -19.625009536743164

Token 35: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.015095554292201996
    2. '('' → logprob: -4.2650957107543945
    3. '()' → logprob: -7.5150957107543945
    4. '(' → logprob: -8.640095710754395
    5. '("' → logprob: -8.890095710754395
    6. '())' → logprob: -9.640095710754395
    7. '()]
' → logprob: -12.390095710754395
    8. '(',' → logprob: -14.390095710754395
    9. '("("' → logprob: -14.640095710754395
    10. '()],' → logprob: -14.640095710754395

Token 36: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006635913625359535
    2. ')' → logprob: -5.756636142730713
    3. ')]' → logprob: -5.756636142730713
    4. '])' → logprob: -8.506635665893555
    5. ' ]' → logprob: -9.631635665893555
    6. ']
' → logprob: -11.881635665893555
    7. '   ' → logprob: -12.381635665893555
    8. '])]' → logprob: -12.631635665893555
    9. ')])' → logprob: -13.131635665893555
    10. '`]' → logprob: -13.506635665893555

Token 37: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' current' (ID: 2208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0281119346618652
    2. 'if' → logprob: -1.5281119346618652
    3. 'price' → logprob: -2.5281119346618652
    4. 'n' → logprob: -2.7781119346618652
    5. '<|end|>' → logprob: -2.9031119346618652
    6. '   ' → logprob: -3.5281119346618652
    7. 'i' → logprob: -3.5281119346618652
    8. '#' → logprob: -3.6531119346618652
    9. 'total' → logprob: -3.6531119346618652
    10. ' for' → logprob: -3.7781119346618652

Token 39: '_min' (ID: 15950)
  Prédit: '_price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.3692145049571991
    2. '_' → logprob: -1.2442145347595215
    3. '_index' → logprob: -5.2442145347595215
    4. '_value' → logprob: -6.1192145347595215
    5. '_sum' → logprob: -6.6192145347595215
    6. '_max' → logprob: -6.6192145347595215
    7. '_prices' → logprob: -6.6192145347595215
    8. '_total' → logprob: -6.9942145347595215
    9. '_number' → logprob: -6.9942145347595215
    10. '_count' → logprob: -7.1192145347595215

Token 40: 'imum' (ID: 4556)
  Prédit: '_price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.8177810907363892
    2. ' =' → logprob: -1.3177810907363892
    3. '_' → logprob: -1.9427810907363892
    4. '=' → logprob: -2.0677809715270996
    5. 'imum' → logprob: -3.9427809715270996
    6. '_value' → logprob: -7.8177809715271
    7. 'Price' → logprob: -7.9427809715271
    8. '_prices' → logprob: -8.317781448364258
    9. '_val' → logprob: -8.692781448364258
    10. 'price' → logprob: -9.442781448364258

Token 41: '_price' (ID: 18814)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02136315405368805
    2. '=' → logprob: -3.8963632583618164
    3. '_price' → logprob: -7.521363258361816
    4. '_' → logprob: -9.271363258361816
    5. ' ' → logprob: -9.396363258361816
    6. ',' → logprob: -9.646363258361816
    7. 'Price' → logprob: -11.021363258361816
    8. 'price' → logprob: -12.396363258361816
    9. ' _' → logprob: -12.521363258361816
    10. '  ' → logprob: -13.021363258361816

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003215857082977891
    2. '=' → logprob: -5.753215789794922
    3. ' ' → logprob: -10.628215789794922
    4. ',' → logprob: -11.503215789794922
    5. '_' → logprob: -13.128215789794922
    6. '  ' → logprob: -14.253215789794922
    7. ' _' → logprob: -15.378215789794922
    8. ' =
' → logprob: -15.503215789794922
    9. ' ,' → logprob: -15.628215789794922
    10. '   ' → logprob: -15.628215789794922

Token 43: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.6044652462005615
    2. 'price' → logprob: -1.2294652462005615
    3. ' float' → logprob: -2.7294652462005615
    4. 'float' → logprob: -2.8544652462005615
    5. '10' → logprob: -3.7294652462005615
    6. ' ' → logprob: -5.104465484619141
    7. '100' → logprob: -5.354465484619141
    8. '999' → logprob: -7.104465484619141
    9. ' None' → logprob: -7.604465484619141
    10. ' max' → logprob: -7.604465484619141

Token 44: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.013961104676127434
    2. 's' → logprob: -4.388961315155029
    3. '_' → logprob: -6.763961315155029
    4. '_s' → logprob: -8.763960838317871
    5. '[' → logprob: -10.013960838317871
    6. 'List' → logprob: -10.263960838317871
    7. ' _' → logprob: -10.638960838317871
    8. '_array' → logprob: -12.388960838317871
    9. '_string' → logprob: -12.763960838317871
    10. '_List' → logprob: -12.888960838317871

Token 45: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.900034299585968e-05
    2. ' [' → logprob: -10.125088691711426
    3. '[:]' → logprob: -10.125088691711426
    4. '[-' → logprob: -12.375088691711426
    5. '0' → logprob: -13.750088691711426
    6. '[
' → logprob: -13.875088691711426
    7. '[:' → logprob: -13.875088691711426
    8. '```' → logprob: -14.375088691711426
    9. '   ' → logprob: -15.125088691711426
    10. ' ' → logprob: -15.875088691711426

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.375123977661133
    3. '-' → logprob: -10.500123977661133
    4. '1' → logprob: -12.625123977661133
    5. ']' → logprob: -13.625123977661133
    6. '])' → logprob: -13.937623977661133
    7. ')' → logprob: -14.062623977661133
    8. '[' → logprob: -14.312623977661133
    9. '   ' → logprob: -14.687623977661133
    10. ':' → logprob: -14.750123977661133

Token 47: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07644277811050415
    2. ')' → logprob: -2.7014427185058594
    3. ')]' → logprob: -6.076442718505859
    4. ']
' → logprob: -6.451442718505859
    5. ' ]' → logprob: -6.451442718505859
    6. ' )' → logprob: -8.07644271850586
    7. '   ' → logprob: -8.57644271850586
    8. '])' → logprob: -8.70144271850586
    9. ')
' → logprob: -8.95144271850586
    10. ' ' → logprob: -9.57644271850586

Token 48: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.658766508102417
    2. '<|end|>' → logprob: -1.283766508102417
    3. '   ' → logprob: -1.908766508102417
    4. '    
' → logprob: -3.908766508102417
    5. '```' → logprob: -4.783766746520996
    6. '<|end|>' → logprob: -4.908766746520996
    7. '  
' → logprob: -5.658766746520996
    8. ' 
' → logprob: -5.658766746520996
    9. ',' → logprob: -5.658766746520996
    10. '\n' → logprob: -5.783766746520996

Token 49: ' num' (ID: 2269)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21694374084472656
    2. ' for' → logprob: -2.8419437408447266
    3. 'for' → logprob: -2.9669437408447266
    4. '   ' → logprob: -3.3419437408447266
    5. '\n' → logprob: -4.341943740844727
    6. '    
' → logprob: -4.341943740844727
    7. ' 
' → logprob: -4.966943740844727
    8. '  
' → logprob: -5.466943740844727
    9. '```' → logprob: -5.841943740844727
    10. '<|end|>' → logprob: -5.841943740844727

Token 50: '_prices' (ID: 172132)
  Prédit: 'ber'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ber' → logprob: -0.3220631778240204
    2. '_of' → logprob: -2.0720632076263428
    3. '_s' → logprob: -3.1970632076263428
    4. '_' → logprob: -3.6970632076263428
    5. '_sh' → logprob: -4.572062969207764
    6. '_re' → logprob: -4.697062969207764
    7. '_p' → logprob: -4.822062969207764
    8. '_items' → logprob: -4.822062969207764
    9. '_c' → logprob: -5.322062969207764
    10. '_days' → logprob: -5.822062969207764

Token 51: '_at' (ID: 8254)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8571192026138306
    2. '_' → logprob: -0.9821192026138306
    3. '=' → logprob: -2.607119083404541
    4. '_s' → logprob: -2.857119083404541
    5. '_to' → logprob: -3.732119083404541
    6. '_b' → logprob: -5.232119083404541
    7. ' ' → logprob: -5.732119083404541
    8. '_less' → logprob: -5.732119083404541
    9. '<|end|>' → logprob: -5.732119083404541
    10. '_for' → logprob: -5.857119083404541

Token 52: '_or' (ID: 15400)
  Prédit: '_current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_current' → logprob: -0.17021115124225616
    2. '_le' → logprob: -3.04521107673645
    3. 'current' → logprob: -3.42021107673645
    4. '_' → logprob: -3.54521107673645
    5. '_min' → logprob: -4.295211315155029
    6. ' ' → logprob: -4.420211315155029
    7. '_price' → logprob: -5.545211315155029
    8. ' current' → logprob: -6.170211315155029
    9. ' _' → logprob: -6.295211315155029
    10. '_index' → logprob: -6.295211315155029

Token 53: '_b' (ID: 1535)
  Prédit: 'below'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'below' → logprob: -0.18411388993263245
    2. 'above' → logprob: -2.4341139793395996
    3. 'under' → logprob: -3.9341139793395996
    4. '_ab' → logprob: -4.3091139793396
    5. '_under' → logprob: -4.3091139793396
    6. '_less' → logprob: -4.4341139793396
    7. 'less' → logprob: -4.6841139793396
    8. '_b' → logprob: -5.1841139793396
    9. '<' → logprob: -6.8091139793396
    10. ' ' → logprob: -6.9341139793396

Token 54: 'elow' (ID: 119405)
  Prédit: 'elow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elow' → logprob: -0.00010509284038562328
    2. 'ellow' → logprob: -10.000104904174805
    3. 'el' → logprob: -11.125104904174805
    4. 'elo' → logprob: -11.500104904174805
    5. '```' → logprob: -11.625104904174805
    6. 'ene' → logprob: -11.625104904174805
    7. 'e' → logprob: -12.125104904174805
    8. 'eh' → logprob: -12.750104904174805
    9. 'efore' → logprob: -12.875104904174805
    10. 'ottom' → logprob: -14.125104904174805

Token 55: '_min' (ID: 15950)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3177941143512726
    2. 'current' → logprob: -2.44279408454895
    3. ' current' → logprob: -2.56779408454895
    4. '_current' → logprob: -2.94279408454895
    5. '=' → logprob: -3.69279408454895
    6. '_' → logprob: -4.192794322967529
    7. ' ' → logprob: -4.817794322967529
    8. '=current' → logprob: -5.442794322967529
    9. '_price' → logprob: -6.692794322967529
    10. '[current' → logprob: -7.192794322967529

Token 56: ' =' (ID: 314)
  Prédit: 'imum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.0003305784775875509
    2. '=' → logprob: -9.125330924987793
    3. '_price' → logprob: -9.375330924987793
    4. ' =' → logprob: -9.750330924987793
    5. 'um' → logprob: -10.375330924987793
    6. '_' → logprob: -10.875330924987793
    7. 'im' → logprob: -11.750330924987793
    8. 'ium' → logprob: -12.500330924987793
    9. '```' → logprob: -12.500330924987793
    10. '__' → logprob: -13.000330924987793

Token 57: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5239279270172119
    2. '1' → logprob: -1.148927927017212
    3. '0' → logprob: -2.398927927017212
    4. '   ' → logprob: -12.023927688598633
    5. ' ' → logprob: -12.273927688598633
    6. '  ' → logprob: -13.523927688598633
    7. '`' → logprob: -13.961427688598633
    8. '```' → logprob: -14.086427688598633
    9. 'price' → logprob: -14.273927688598633
    10. 'int' → logprob: -14.898927688598633

Token 58: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3138802647590637
    2. '0' → logprob: -1.313880205154419
    3. ' ' → logprob: -7.438880443572998
    4. 'price' → logprob: -11.31387996673584
    5. '```' → logprob: -12.81387996673584
    6. '`' → logprob: -12.87637996673584
    7. 'int' → logprob: -13.12637996673584
    8. 'len' → logprob: -13.12637996673584
    9. '   ' → logprob: -13.62637996673584
    10. 'current' → logprob: -13.68887996673584

Token 59: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.026309354230761528
    2. '   ' → logprob: -4.276309490203857
    3. '<|end|>' → logprob: -4.651309490203857
    4. '    
' → logprob: -7.026309490203857
    5. ' 
' → logprob: -7.651309490203857
    6. '\n' → logprob: -7.901309490203857
    7. '  
' → logprob: -8.4013090133667
    8. '' → logprob: -9.1513090133667
    9. '
' → logprob: -9.4013090133667
    10. '   
' → logprob: -9.6513090133667

Token 60: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008867585100233555
    2. '   ' → logprob: -5.7588677406311035
    3. '\n' → logprob: -6.1338677406311035
    4. ' 
' → logprob: -7.1338677406311035
    5. '' → logprob: -7.3838677406311035
    6. '
' → logprob: -7.6338677406311035
    7. '<|end|>' → logprob: -8.133867263793945
    8. 'for' → logprob: -8.258867263793945
    9. '    
' → logprob: -8.258867263793945
    10. ' for' → logprob: -8.383867263793945

Token 61: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0393122434616089
    2. 'for' (adapté à ' for') → logprob: -1.2893122434616089
    3. ' for' → logprob: -1.2893122434616089
    4. '   ' → logprob: -2.4143123626708984
    5. '\n' → logprob: -6.039312362670898
    6. '```' → logprob: -6.914312362670898
    7. '    
' → logprob: -7.039312362670898
    8. ' 
' → logprob: -7.289312362670898
    9. '' → logprob: -8.539312362670898
    10. ' ' → logprob: -8.664312362670898

Token 62: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.019001228734850883
    2. ' i' → logprob: -4.644001007080078
    3. 'price' → logprob: -5.144001007080078
    4. ' current' → logprob: -6.394001007080078
    5. ' ' → logprob: -7.394001007080078
    6. ' index' → logprob: -8.019001007080078
    7. 'i' → logprob: -8.644001007080078
    8. '	price' → logprob: -9.019001007080078
    9. ' p' → logprob: -9.456501007080078
    10. ' _' → logprob: -10.269001007080078

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04295226186513901
    2. '_' → logprob: -4.167952060699463
    3. '_in' → logprob: -4.167952060699463
    4. 'in' → logprob: -4.792952060699463
    5. ' ' → logprob: -6.292952060699463
    6. ' _' → logprob: -8.292952537536621
    7. '_string' → logprob: -8.542952537536621
    8. '	in' → logprob: -9.042952537536621
    9. 's' → logprob: -9.917952537536621
    10. ',' → logprob: -10.042952537536621

Token 64: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.016182873398065567
    2. 'price' → logprob: -4.141182899475098
    3. ' ' → logprob: -9.391182899475098
    4. '	price' → logprob: -10.266182899475098
    5. ' ' → logprob: -11.516182899475098
    6. '(price' → logprob: -11.766182899475098
    7. '    ' → logprob: -13.266182899475098
    8. 'Price' → logprob: -13.391182899475098
    9. '_price' → logprob: -13.391182899475098
    10. ' ,' → logprob: -13.516182899475098

Token 65: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.003014430170878768
    2. 's' → logprob: -5.87801456451416
    3. '_' → logprob: -8.87801456451416
    4. ':' → logprob: -10.50301456451416
    5. 'List' → logprob: -11.75301456451416
    6. '_:' → logprob: -11.87801456451416
    7. 'in' → logprob: -12.25301456451416
    8. 'list' → logprob: -12.25301456451416
    9. '_LIST' → logprob: -13.12801456451416
    10. '  ' → logprob: -13.12801456451416

Token 66: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003147280658595264
    2. ':
' → logprob: -8.125314712524414
    3. '   ' → logprob: -11.500314712524414
    4. ':**' → logprob: -13.250314712524414
    5. '<|end|>' → logprob: -13.375314712524414
    6. ' :' → logprob: -13.875314712524414
    7. ',' → logprob: -14.000314712524414
    8. '):' → logprob: -14.375314712524414
    9. ':

' → logprob: -14.375314712524414
    10. '>' → logprob: -14.500314712524414

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07061026245355606
    2. ' 
' → logprob: -3.820610284805298
    3. '    
' → logprob: -4.070610046386719
    4. '    ' → logprob: -4.820610046386719
    5. '        
' → logprob: -4.945610046386719
    6. '   ' → logprob: -5.570610046386719
    7. '<|end|>' → logprob: -6.070610046386719
    8. ' ' → logprob: -6.195610046386719
    9. '     
' → logprob: -6.570610046386719
    10. '\n' → logprob: -6.695610046386719

Token 68: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8788955211639404
    2. ' 
' → logprob: -1.6288955211639404
    3. ' if' → logprob: -2.0038955211639404
    4. '       ' → logprob: -2.1288955211639404
    5. '    
' → logprob: -3.3788955211639404
    6. '    ' → logprob: -3.6288955211639404
    7. '<|end|>' → logprob: -3.6288955211639404
    8. ' ' → logprob: -4.0038957595825195
    9. '```' → logprob: -4.6288957595825195
    10. '
' → logprob: -5.0038957595825195

Token 69: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -5.633853652398102e-05
    2. 'price' → logprob: -9.875056266784668
    3. ' ' → logprob: -13.125056266784668
    4. ' ' → logprob: -13.375056266784668
    5. '	price' → logprob: -14.125056266784668
    6. '(price' → logprob: -15.125056266784668
    7. ' current' → logprob: -15.875056266784668
    8. ' (' → logprob: -17.000057220458984
    9. '    ' → logprob: -17.375057220458984
    10. ' number' → logprob: -18.375057220458984

Token 70: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.24385279417037964
    2. ' <' → logprob: -1.7438528537750244
    3. '<=' → logprob: -3.6188528537750244
    4. '<' → logprob: -4.243852615356445
    5. ' ' → logprob: -8.243852615356445
    6. ' ==' → logprob: -10.493852615356445
    7. '   ' → logprob: -10.493852615356445
    8. ' >=' → logprob: -11.118852615356445
    9. ' ' → logprob: -11.368852615356445
    10. '  ' → logprob: -11.743852615356445

Token 71: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.029791107401251793
    2. 'current' → logprob: -3.5297911167144775
    3. ' ' → logprob: -10.404790878295898
    4. '	current' → logprob: -12.529790878295898
    5. '_current' → logprob: -12.904790878295898
    6. ' ' → logprob: -12.904790878295898
    7. ' price' → logprob: -15.279790878295898
    8. '_' → logprob: -15.654790878295898
    9. ',current' → logprob: -15.654790878295898
    10. ' _' → logprob: -15.779790878295898

Token 72: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -3.173704271830502e-06
    2. '_price' → logprob: -13.75000286102295
    3. 'minimum' → logprob: -14.12500286102295
    4. '_' → logprob: -14.62500286102295
    5. '_max' → logprob: -14.62500286102295
    6. '_low' → logprob: -16.125003814697266
    7. 'Minimum' → logprob: -16.250003814697266
    8. '_m' → logprob: -16.500003814697266
    9. ' _' → logprob: -16.750003814697266
    10. '_current' → logprob: -17.000003814697266

Token 73: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.0067550367675721645
    2. 'um' → logprob: -5.0067548751831055
    3. 'im' → logprob: -11.381754875183105
    4. '_' → logprob: -11.381754875183105
    5. 'ium' → logprob: -12.006754875183105
    6. '__' → logprob: -12.756754875183105
    7. '```' → logprob: -12.881754875183105
    8. 'inum' → logprob: -13.631754875183105
    9. '   ' → logprob: -13.881754875183105
    10. 'mum' → logprob: -14.131754875183105

Token 74: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -4.723352049040841e-06
    2. 'price' → logprob: -13.125004768371582
    3. '_' → logprob: -13.750004768371582
    4. '_pr' → logprob: -14.125004768371582
    5. '_prices' → logprob: -15.250004768371582
    6. ' _' → logprob: -15.750004768371582
    7. '_p' → logprob: -16.000003814697266
    8. '```' → logprob: -16.250003814697266
    9. 'Price' → logprob: -17.125003814697266
    10. '_cost' → logprob: -17.500003814697266

Token 75: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005967899691313505
    2. ':
' → logprob: -5.13096809387207
    3. ':

' → logprob: -11.00596809387207
    4. ' :' → logprob: -11.88096809387207
    5. '       ' → logprob: -12.38096809387207
    6. ':
' → logprob: -12.63096809387207
    7. '<|end|>' → logprob: -13.13096809387207
    8. '):' → logprob: -13.63096809387207
    9. '<|end|>' → logprob: -13.88096809387207
    10. ',' → logprob: -14.13096809387207

Token 76: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8530710339546204
    2. '\n' → logprob: -1.3530709743499756
    3. '       ' → logprob: -2.4780709743499756
    4. '        
' → logprob: -3.1030709743499756
    5. '<|end|>' → logprob: -3.4780709743499756
    6. '            
' → logprob: -3.6030709743499756
    7. ' 
' → logprob: -3.8530709743499756
    8. '
' → logprob: -3.8530709743499756
    9. ':
' → logprob: -3.9780709743499756
    10. ':' → logprob: -4.228071212768555

Token 77: ' num' (ID: 2269)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.423539638519287
    2. ' current' → logprob: -1.548539638519287
    3. '               ' → logprob: -1.798539638519287
    4. 'num' (adapté à ' num') → logprob: -2.423539638519287
    5. '           ' → logprob: -2.673539638519287
    6. '
' → logprob: -2.798539638519287
    7. '       ' → logprob: -3.173539638519287
    8. ' num' → logprob: -3.673539638519287
    9. '```' → logprob: -3.923539638519287
    10. '\n' → logprob: -4.173539638519287

Token 78: '_prices' (ID: 172132)
  Prédit: '_prices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prices' → logprob: -0.0007636455120518804
    2. '_' → logprob: -7.250763416290283
    3. '_price' → logprob: -10.125763893127441
    4. '_p' → logprob: -12.500763893127441
    5. '_
' → logprob: -13.000763893127441
    6. ' _' → logprob: -13.125763893127441
    7. '_pr' → logprob: -13.625763893127441
    8. '_at' → logprob: -14.125763893127441
    9. '_pres' → logprob: -14.625763893127441
    10. '```' → logprob: -14.875763893127441

Token 79: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.006002979353070259
    2. '+=' → logprob: -5.756002902984619
    3. '_' → logprob: -6.131002902984619
    4. ' +=' → logprob: -7.506002902984619
    5. '+' → logprob: -10.381003379821777
    6. '=' → logprob: -10.756003379821777
    7. '_a' → logprob: -11.381003379821777
    8. '   ' → logprob: -11.881003379821777
    9. '	at' → logprob: -11.881003379821777
    10. '_=' → logprob: -13.131003379821777

Token 80: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -0.0016406656941398978
    2. 'or' → logprob: -6.751640796661377
    3. '_o' → logprob: -8.501640319824219
    4. ' or' → logprob: -9.126640319824219
    5. '_' → logprob: -9.626640319824219
    6. ' _' → logprob: -10.251640319824219
    7. '_at' → logprob: -10.626640319824219
    8. ' ' → logprob: -12.001640319824219
    9. 'o' → logprob: -12.376640319824219
    10. '```' → logprob: -13.001640319824219

Token 81: '_b' (ID: 1535)
  Prédit: 'below'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'below' → logprob: -0.06676017493009567
    2. 'or' → logprob: -3.5667600631713867
    3. '_b' → logprob: -3.9417600631713867
    4. 'b' → logprob: -4.441760063171387
    5. 'elow' → logprob: -5.816760063171387
    6. '_or' → logprob: -7.441760063171387
    7. '```' → logprob: -7.566760063171387
    8. '0' → logprob: -9.191760063171387
    9. ' or' → logprob: -9.441760063171387
    10. 'at' → logprob: -9.566760063171387

Token 82: 'elow' (ID: 119405)
  Prédit: 'elow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elow' → logprob: -0.014968736097216606
    2. 'el' → logprob: -4.2649688720703125
    3. 'e' → logprob: -7.7649688720703125
    4. 'elo' → logprob: -8.639968872070312
    5. 'ellow' → logprob: -9.264968872070312
    6. 'else' → logprob: -10.014968872070312
    7. 'elif' → logprob: -10.639968872070312
    8. '```' → logprob: -11.139968872070312
    9. 'low' → logprob: -11.764968872070312
    10. 'below' → logprob: -12.014968872070312

Token 83: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -6.754368223482743e-05
    2. '_' → logprob: -10.000067710876465
    3. '_m' → logprob: -11.750067710876465
    4. 'min' → logprob: -11.875067710876465
    5. '_num' → logprob: -12.250067710876465
    6. '_current' → logprob: -14.000067710876465
    7. '```' → logprob: -14.625067710876465
    8. '_max' → logprob: -15.125067710876465
    9. '_price' → logprob: -15.250067710876465
    10. ' _' → logprob: -15.875067710876465

Token 84: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.001614961656741798
    2. '+=' → logprob: -6.501615047454834
    3. ' =' → logprob: -9.251614570617676
    4. ' +' → logprob: -11.751614570617676
    5. ' ' → logprob: -12.251614570617676
    6. ' ' → logprob: -13.626614570617676
    7. '+' → logprob: -13.626614570617676
    8. '=' → logprob: -14.251614570617676
    9. '    ' → logprob: -15.376614570617676
    10. '<|end|>' → logprob: -15.751614570617676

Token 85: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078997299075127
    2. ' ' → logprob: -5.5040788650512695
    3. '   ' → logprob: -16.129079818725586
    4. ' ' → logprob: -16.129079818725586
    5. '+' → logprob: -16.316579818725586
    6. '  ' → logprob: -17.379079818725586
    7. '```' → logprob: -17.379079818725586
    8. 'price' → logprob: -17.504079818725586
    9. '
' → logprob: -17.566579818725586
    10. 'current' → logprob: -17.941579818725586

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.000009536743164
    4. 'price' → logprob: -18.000009536743164
    5. '+' → logprob: -18.125009536743164
    6. '  ' → logprob: -19.562509536743164
    7. '```' → logprob: -19.625009536743164
    8. '<|end|>' → logprob: -19.750009536743164
    9. '0' → logprob: -19.937509536743164
    10. 'current' → logprob: -20.375009536743164

Token 87: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013859639875590801
    2. '           ' → logprob: -4.888859748840332
    3. '\n' → logprob: -6.388859748840332
    4. 'current' → logprob: -6.388859748840332
    5. '
' → logprob: -7.013859748840332
    6. ' current' → logprob: -7.513859748840332
    7. '       ' → logprob: -7.638859748840332
    8. '<|end|>' → logprob: -8.513859748840332
    9. ' 
' → logprob: -8.888859748840332
    10. '            
' → logprob: -9.263859748840332

Token 88: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0010069658746942878
    2. '           ' → logprob: -7.626007080078125
    3. '\n' → logprob: -8.751007080078125
    4. '
' → logprob: -9.001007080078125
    5. '<|end|>' → logprob: -9.751007080078125
    6. '       ' → logprob: -10.001007080078125
    7. ' 
' → logprob: -10.251007080078125
    8. 'current' → logprob: -10.626007080078125
    9. '

' → logprob: -11.001007080078125
    10. '  
' → logprob: -11.251007080078125

Token 89: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.03849697858095169
    2. ' current' → logprob: -3.288496971130371
    3. '           ' → logprob: -8.538496971130371
    4. '
' → logprob: -8.663496971130371
    5. 'price' → logprob: -10.288496971130371
    6. '   ' → logprob: -10.913496971130371
    7. '	current' → logprob: -11.788496971130371
    8. '[current' → logprob: -12.538496971130371
    9. '       ' → logprob: -12.663496971130371
    10. ' ' → logprob: -12.913496971130371

Token 90: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.01828935742378235
    2. '_' → logprob: -4.018289566040039
    3. 'Minimum' → logprob: -10.018289566040039
    4. '_price' → logprob: -11.018289566040039
    5. '_max' → logprob: -11.018289566040039
    6. 'minimum' → logprob: -11.143289566040039
    7. '_low' → logprob: -11.518289566040039
    8. ' _' → logprob: -11.643289566040039
    9. '_m' → logprob: -11.768289566040039
    10. '_
' → logprob: -11.893289566040039

Token 91: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.0038053072057664394
    2. 'um' → logprob: -5.628805160522461
    3. 'im' → logprob: -10.003805160522461
    4. '```' → logprob: -10.128805160522461
    5. '_price' → logprob: -10.503805160522461
    6. 'ium' → logprob: -10.628805160522461
    7. '__' → logprob: -10.753805160522461
    8. '_' → logprob: -10.753805160522461
    9. 'inum' → logprob: -12.753805160522461
    10. '   ' → logprob: -12.878805160522461

Token 92: '_price' (ID: 18814)
  Prédit: '_price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.00021879478299524635
    2. '_' → logprob: -8.625218391418457
    3. 'price' → logprob: -11.000218391418457
    4. '_prices' → logprob: -11.375218391418457
    5. ' _' → logprob: -12.625218391418457
    6. 'Price' → logprob: -12.875218391418457
    7. '_score' → logprob: -13.625218391418457
    8. '_p' → logprob: -14.250218391418457
    9. '_cost' → logprob: -14.250218391418457
    10. '_value' → logprob: -15.250218391418457

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059335362166166306
    2. '=' → logprob: -5.13093376159668
    3. ' =
' → logprob: -12.25593376159668
    4. ' ' → logprob: -17.25593376159668
    5. ' =)' → logprob: -17.25593376159668
    6. ' ==' → logprob: -17.50593376159668
    7. 'space' → logprob: -17.50593376159668
    8. ' ' → logprob: -17.50593376159668
    9. '<|end|>' → logprob: -18.13093376159668
    10. ' =
' → logprob: -18.13093376159668

Token 94: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.014174791052937508
    2. 'price' → logprob: -4.264174938201904
    3. ' ' → logprob: -11.514174461364746
    4. '	price' → logprob: -14.389174461364746
    5. ' ' → logprob: -14.514174461364746
    6. '(price' → logprob: -16.264175415039062
    7. ' 
' → logprob: -16.639175415039062
    8. ' pric' → logprob: -17.639175415039062
    9. ' p' → logprob: -17.764175415039062
    10. 'p' → logprob: -18.389175415039062

Token 95: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11747529357671738
    2. '<|end|>' → logprob: -2.3674752712249756
    3. '\n' → logprob: -4.742475509643555
    4. '   ' → logprob: -5.367475509643555
    5. '```' → logprob: -6.742475509643555
    6. '    
' → logprob: -7.367475509643555
    7. '' → logprob: -7.867475509643555
    8. '  
' → logprob: -8.117475509643555
    9. 'newline' → logprob: -8.367475509643555
    10. ' 
' → logprob: -8.492475509643555

Token 96: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8022914528846741
    2. '<|end|>' → logprob: -0.9272914528846741
    3. '   ' → logprob: -2.4272913932800293
    4. '\n' → logprob: -3.4272913932800293
    5. 'if' → logprob: -3.8022913932800293
    6. '```' → logprob: -5.052291393280029
    7. '    
' → logprob: -6.927291393280029
    8. 'print' → logprob: -7.052291393280029
    9. '' → logprob: -7.052291393280029
    10. ')' → logprob: -7.302291393280029

Token 97: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5047998428344727
    2. '
' → logprob: -1.3797998428344727
    3. '<|end|>' → logprob: -2.3797998428344727
    4. 'print' → logprob: -3.8797998428344727
    5. 'return' → logprob: -4.254799842834473
    6. 'if' → logprob: -5.254799842834473
    7. '\n' → logprob: -5.754799842834473
    8. ')' → logprob: -6.254799842834473
    9. '    
' → logprob: -6.504799842834473
    10. '```' → logprob: -6.754799842834473

Token 98: ':

' (ID: 1402)
  Prédit: ':

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':

' → logprob: -0.6099196076393127
    2. ':
' → logprob: -1.359919548034668
    3. ':' → logprob: -1.734919548034668
    4. '           ' → logprob: -4.609919548034668
    5. '
' → logprob: -4.734919548034668
    6. '       ' → logprob: -6.484919548034668
    7. '```' → logprob: -6.484919548034668
    8. '\n' → logprob: -8.359919548034668
    9. '<|end|>' → logprob: -8.484919548034668
    10. '   ' → logprob: -8.859919548034668

Token 99: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43943920731544495
    2. 'num' → logprob: -1.4394391775131226
    3. '       ' → logprob: -2.814439296722412
    4. ' num' → logprob: -3.439439296722412
    5. '   ' → logprob: -4.564439296722412
    6. '               ' → logprob: -5.064439296722412
    7. 'print' → logprob: -5.189439296722412
    8. 'pass' → logprob: -6.689439296722412
    9. '```' → logprob: -6.814439296722412
    10. ' print' → logprob: -8.064438819885254

Token 100: ' pass' (ID: 1853)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.1376330703496933
    2. 'print' → logprob: -2.7626330852508545
    3. 'pass' (adapté à ' pass') → logprob: -3.2626330852508545
    4. '0' → logprob: -4.762632846832275
    5. ' num' → logprob: -5.012632846832275
    6. 'current' → logprob: -5.387632846832275
    7. 'break' → logprob: -6.012632846832275
    8. 'continue' → logprob: -6.387632846832275
    9. ' pass' → logprob: -6.762632846832275
    10. '   ' → logprob: -7.137632846832275

Token 101: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17327898740768433
    2. '<|end|>' → logprob: -2.673279047012329
    3. '
' → logprob: -2.923279047012329
    4. '\n' → logprob: -3.548279047012329
    5. '    
' → logprob: -6.67327880859375
    6. '```' → logprob: -6.92327880859375
    7. 'if' → logprob: -7.17327880859375
    8. ' ' → logprob: -7.29827880859375
    9. '' → logprob: -7.42327880859375
    10. ')' → logprob: -7.67327880859375

Token 103: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1191321611404419
    2. 'print' (adapté à ' print') → logprob: -2.6191320419311523
    3. 'if' → logprob: -3.6191320419311523
    4. 'return' → logprob: -4.494132041931152
    5. '
' → logprob: -7.619132041931152
    6. '    
' → logprob: -7.869132041931152
    7. '\n' → logprob: -8.619132041931152
    8. '<|end|>' → logprob: -9.369132041931152
    9. ' if' → logprob: -9.494132041931152
    10. '```' → logprob: -10.369132041931152

Token 104: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16063077747821808
    2. '(num' → logprob: -1.9106308221817017
    3. '("("' → logprob: -8.78563117980957
    4. '('' → logprob: -8.91063117980957
    5. '(len' → logprob: -10.28563117980957
    6. '()' → logprob: -10.41063117980957
    7. ' (' → logprob: -10.78563117980957
    8. '(
' → logprob: -11.78563117980957
    9. '("' → logprob: -12.03563117980957
    10. '(n' → logprob: -12.53563117980957

Token 105: '_prices' (ID: 172132)
  Prédit: '_prices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prices' → logprob: -0.0010004170471802354
    2. '_' → logprob: -7.00100040435791
    3. '_pr' → logprob: -9.87600040435791
    4. '_p' → logprob: -10.62600040435791
    5. '_r' → logprob: -12.62600040435791
    6. '_price' → logprob: -12.75100040435791
    7. '_b' → logprob: -13.50100040435791
    8. '_scores' → logprob: -14.12600040435791
    9. ' _' → logprob: -14.12600040435791
    10. 'prices' → logprob: -14.37600040435791

Token 106: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -8.232493564719334e-05
    2. '_prices' → logprob: -10.125082015991211
    3. '_of' → logprob: -11.000082015991211
    4. '_t' → logprob: -11.125082015991211
    5. ')_' → logprob: -12.750082015991211
    6. 'at' → logprob: -12.875082015991211
    7. '_' → logprob: -13.625082015991211
    8. 't' → logprob: -13.875082015991211
    9. '_a' → logprob: -14.000082015991211
    10. ' _' → logprob: -14.875082015991211

Token 107: '_or' (ID: 15400)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.03476683422923088
    2. '_or' → logprob: -3.409766912460327
    3. 'orb' → logprob: -7.409766674041748
    4. 'in' → logprob: -8.784767150878906
    5. 'o' → logprob: -9.034767150878906
    6. 'ost' → logprob: -9.659767150878906
    7. '```' → logprob: -11.034767150878906
    8. 'orp' → logprob: -11.159767150878906
    9. 'orl' → logprob: -11.284767150878906
    10. '_at' → logprob: -11.409767150878906

Token 108: '_b' (ID: 1535)
  Prédit: 'below'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'below' → logprob: -0.751578688621521
    2. '_b' → logprob: -1.251578688621521
    3. 'b' → logprob: -1.876578688621521
    4. 'low' → logprob: -3.0015788078308105
    5. 'elow' → logprob: -3.5015788078308105
    6. 'v' → logprob: -7.0015788078308105
    7. '_low' → logprob: -7.1265788078308105
    8. 'least' → logprob: -7.2515788078308105
    9. 'min' → logprob: -7.2515788078308105
    10. 'ow' → logprob: -7.6265788078308105

Token 109: 'elow' (ID: 119405)
  Prédit: 'elow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elow' → logprob: -0.11402344703674316
    2. 'low' → logprob: -2.239023447036743
    3. 'el' → logprob: -7.114023208618164
    4. 'ow' → logprob: -8.989023208618164
    5. 'elo' → logprob: -9.364023208618164
    6. 'l' → logprob: -10.114023208618164
    7. '_low' → logprob: -10.364023208618164
    8. 't' → logprob: -10.989023208618164
    9. 'lo' → logprob: -11.114023208618164
    10. 'ellow' → logprob: -11.489023208618164

Token 110: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -7.791440293658525e-05
    2. 'min' → logprob: -10.125078201293945
    3. '_m' → logprob: -10.625078201293945
    4. '_' → logprob: -11.500078201293945
    5. ')' → logprob: -13.125078201293945
    6. '_)' → logprob: -14.875078201293945
    7. '_max' → logprob: -15.000078201293945
    8. 'm' → logprob: -15.750078201293945
    9. '_num' → logprob: -15.750078201293945
    10. ' _' → logprob: -17.000078201293945

Token 111: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.375000953674316
    3. ')
' → logprob: -14.875000953674316
    4. ')`' → logprob: -18.875001907348633
    5. '')' → logprob: -19.000001907348633
    6. '   ' → logprob: -20.250001907348633
    7. ' ' → logprob: -20.250001907348633
    8. '))' → logprob: -20.375001907348633
    9. '")' → logprob: -20.375001907348633
    10. '()' → logprob: -20.625001907348633

Token 112: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8586376309394836
    2. '<|end|>' → logprob: -0.9836376309394836
    3. '\n' → logprob: -1.7336375713348389
    4. '' → logprob: -5.233637809753418
    5. ')' → logprob: -5.483637809753418
    6. 'if' → logprob: -5.858637809753418
    7. '```' → logprob: -5.858637809753418
    8. 'newline' → logprob: -5.983637809753418
    9. '\' → logprob: -6.358637809753418
    10. '#' → logprob: -6.483637809753418

Token 113: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0023127419408410788
    2. '__' → logprob: -6.877312660217285
    3. ' ' → logprob: -6.877312660217285
    4. '_' → logprob: -9.627312660217285
    5. ' ' → logprob: -9.752312660217285
    6. ' main' → logprob: -9.877312660217285
    7. ' _' → logprob: -10.127312660217285
    8. '  ' → logprob: -11.627312660217285
    9. ' ​' → logprob: -12.002312660217285
    10. ' ‌' → logprob: -12.127312660217285

Token 114: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2615359425544739
    2. ' ==' → logprob: -1.636535882949829
    3. '==' → logprob: -3.511535882949829
    4. ' __' → logprob: -5.636536121368408
    5. '_' → logprob: -6.761536121368408
    6. '=="' → logprob: -8.38653564453125
    7. '.__' → logprob: -8.76153564453125
    8. '.' → logprob: -9.76153564453125
    9. '[' → logprob: -9.88653564453125
    10. ' _' → logprob: -10.01153564453125

Token 115: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0009521945030428469
    2. '__.__' → logprob: -7.000952243804932
    3. '__.' → logprob: -11.250951766967773
    4. '__
' → logprob: -11.875951766967773
    5. '__["' → logprob: -12.125951766967773
    6. '==' → logprob: -12.125951766967773
    7. '___' → logprob: -12.625951766967773
    8. '```' → logprob: -13.250951766967773
    9. '_' → logprob: -13.750951766967773
    10. '__[' → logprob: -13.750951766967773

Token 116: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03975144773721695
    2. '==' → logprob: -4.0397515296936035
    3. '__' → logprob: -4.0397515296936035
    4. '=="' → logprob: -6.7897515296936035
    5. '_' → logprob: -6.9147515296936035
    6. '.' → logprob: -7.9147515296936035
    7. '[' → logprob: -7.9147515296936035
    8. '=='' → logprob: -8.664751052856445
    9. '.__' → logprob: -9.039751052856445
    10. ' =="' → logprob: -9.289751052856445

Token 117: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2015925496816635
    2. ''' → logprob: -1.7015925645828247
    3. ' "__' → logprob: -8.701592445373535
    4. ' '__' → logprob: -12.076592445373535
    5. '__' → logprob: -12.826592445373535
    6. '"user' → logprob: -13.201592445373535
    7. ' "' → logprob: -14.201592445373535
    8. '"name' → logprob: -14.326592445373535
    9. ''"' → logprob: -14.951592445373535
    10. '"_' → logprob: -15.451592445373535

Token 118: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.822646693966817e-06
    2. '_main' → logprob: -12.500007629394531
    3. 'name' → logprob: -13.125007629394531
    4. '__' → logprob: -13.250007629394531
    5. 'ma' → logprob: -15.750007629394531
    6. ' main' → logprob: -16.00000762939453
    7. '_' → logprob: -18.25000762939453
    8. 'maine' → logprob: -18.25000762939453
    9. '	main' → logprob: -18.37500762939453
    10. '"' → logprob: -18.37500762939453

Token 119: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31329065561294556
    2. '__":
' → logprob: -1.3132905960083008
    3. '"' → logprob: -11.3132905960083
    4. '_' → logprob: -11.6882905960083
    5. '__["' → logprob: -12.4382905960083
    6. '__':
' → logprob: -13.0632905960083
    7. '__:' → logprob: -13.9382905960083
    8. '_"' → logprob: -15.1882905960083
    9. '__("' → logprob: -15.3132905960083
    10. '```' → logprob: -15.4382905960083

Token 120: '":

' (ID: 107064)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008100789040327072
    2. ':
' → logprob: -4.883100986480713
    3. '__":
' → logprob: -8.633100509643555
    4. ' :' → logprob: -9.883100509643555
    5. '__' → logprob: -10.383100509643555
    6. '==' → logprob: -10.508100509643555
    7. '():
' → logprob: -10.508100509643555
    8. ':

' → logprob: -10.758100509643555
    9. '):' → logprob: -10.883100509643555
    10. ' ==' → logprob: -10.883100509643555

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49683213233947754
    2. '	main' → logprob: -1.1218321323394775
    3. ' main' → logprob: -3.2468321323394775
    4. 'main' → logprob: -3.6218321323394775
    5. '   ' → logprob: -8.871831893920898
    6. '    
' → logprob: -10.246831893920898
    7. '(main' → logprob: -11.621831893920898
    8. '\t' → logprob: -11.871831893920898
    9. '_main' → logprob: -11.996831893920898
    10. ' ' → logprob: -12.121831893920898

Token 122: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0003919463779311627
    2. ' main' → logprob: -7.875391960144043
    3. '	main' → logprob: -11.750391960144043
    4. '   ' → logprob: -13.125391960144043
    5. 'm' → logprob: -14.125391960144043
    6. 'ma' → logprob: -15.000391960144043
    7. '    
' → logprob: -15.250391960144043
    8. '(main' → logprob: -15.750391960144043
    9. '
' → logprob: -16.250391006469727
    10. 'mai' → logprob: -16.375391006469727

Token 123: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0020703254267573357
    2. '(' → logprob: -6.502070426940918
    3. '()
' → logprob: -7.502070426940918
    4. '(
' → logprob: -11.627070426940918
    5. '()

' → logprob: -13.252070426940918
    6. '()\' → logprob: -13.502070426940918
    7. '
' → logprob: -14.002070426940918
    8. ' ()' → logprob: -14.252070426940918
    9. '```' → logprob: -14.627070426940918
    10. '()`' → logprob: -14.752070426940918


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 121
Tokens correctement prédits (1ère position, stricte): 57
Tokens correctement prédits (1ère position, avec adaptation): 59
Tokens correctement prédits (top 10): 93
Précision stricte (1ère position): 47.11%
Précision adaptée (1ère position): 48.76%
Précision (top 10): 76.86%
================================================================================
