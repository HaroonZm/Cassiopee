================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import os
import sys

if os.getenv("LOCAL"):
    sys.stdin = open("_in.txt", "r")

sys.setrecursionlimit(10 ** 9)
CONST_FLOAT_INF = float("inf")
CONST_INT_INF = 10 ** 18
CONST_MOD = 10 ** 9 + 7
# CONST_MOD = 998244353

class DisjointSetUnion:
    def __init__(self, dsu_size=None, dsu_nodes=None):
        assert dsu_size is not None or dsu_nodes is not None
        if dsu_size is not None:
            self.parent_arr = [i for i in range(dsu_size)]
            self.rank_arr = [0 for _ in range(dsu_size)]
            self.size_arr = [1 for _ in range(dsu_size)]
        else:
            self.parent_dict = {k: k for k in dsu_nodes}
            self.rank_dict = {k: 0 for k in dsu_nodes}
            self.size_dict = {k: 1 for k in dsu_nodes}

    def find(self, id_x):
        if hasattr(self, "parent_arr"):
            if self.parent_arr[id_x] == id_x:
                return id_x
            self.parent_arr[id_x] = self.find(self.parent_arr[id_x])
            return self.parent_arr[id_x]
        else:
            if self.parent_dict[id_x] == id_x:
                return id_x
            self.parent_dict[id_x] = self.find(self.parent_dict[id_x])
            return self.parent_dict[id_x]

    def unite(self, id_x, id_y):
        x_root = self.find(id_x)
        y_root = self.find(id_y)
        if x_root == y_root:
            return
        if hasattr(self, "parent_arr"):
            if self.rank_arr[x_root] > self.rank_arr[y_root]:
                self.parent_arr[y_root] = x_root
                self.size_arr[x_root] += self.size_arr[y_root]
            else:
                self.parent_arr[x_root] = y_root
                self.size_arr[y_root] += self.size_arr[x_root]
                if self.rank_arr[x_root] == self.rank_arr[y_root]:
                    self.rank_arr[y_root] += 1
        else:
            if self.rank_dict[x_root] > self.rank_dict[y_root]:
                self.parent_dict[y_root] = x_root
                self.size_dict[x_root] += self.size_dict[y_root]
            else:
                self.parent_dict[x_root] = y_root
                self.size_dict[y_root] += self.size_dict[x_root]
                if self.rank_dict[x_root] == self.rank_dict[y_root]:
                    self.rank_dict[y_root] += 1

    def component_size(self, id_x):
        if hasattr(self, "size_arr"):
            return self.size_arr[self.find(id_x)]
        else:
            return self.size_dict[self.find(id_x)]

def get_argsort(seq, key_func=None, is_reverse=False):
    return [
        i for _, i in sorted(
            ((a, i) for i, a in enumerate(seq)),
            key=(lambda t: key_func(t[0])) if key_func else None,
            reverse=is_reverse
        )
    ]

vertex_count, edge_count = list(map(int, sys.stdin.buffer.readline().split()))
columns_a, columns_b = list(zip(*[map(int, sys.stdin.buffer.readline().split()) for _ in range(vertex_count)]))
edge_list = [list(map(int, sys.stdin.buffer.readline().split())) for _ in range(edge_count)]

adjacency_list = [[] for _ in range(vertex_count)]
for node_u, node_v in edge_list:
    node_u -= 1
    node_v -= 1
    adjacency_list[node_u].append(node_v)
    adjacency_list[node_v].append(node_u)

requirement_arr = [max(a, b) for a, b in zip(columns_a, columns_b)]
used_arr = list(columns_b)

sort_indices = get_argsort([a - b for a, b in zip(columns_a, columns_b)])
dsu = DisjointSetUnion(dsu_size=vertex_count)
visited_arr = [False] * vertex_count
answer_arr = [CONST_FLOAT_INF] * vertex_count
for idx_v in sort_indices:
    visited_arr[idx_v] = True
    root_set = set()
    for adj_node in adjacency_list[idx_v]:
        if not visited_arr[adj_node]:
            continue
        root_set.add(dsu.find(adj_node))
    used_total = used_arr[idx_v]
    for component_root in root_set:
        used_total += used_arr[component_root]

    requirement_v = requirement_arr[idx_v] + used_total - used_arr[idx_v]
    for component_root in root_set:
        requirement_v = min(
            requirement_v,
            max(requirement_arr[component_root], requirement_arr[idx_v] - used_arr[idx_v]) + used_total - used_arr[component_root]
        )

    for component_root in root_set:
        dsu.unite(idx_v, component_root)
    parent_root = dsu.find(idx_v)
    requirement_arr[parent_root] = requirement_v
    used_arr[parent_root] = used_total
final_answer = requirement_arr[dsu.find(0)]
print(final_answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' os' (ID: 1994)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7575867772102356
    2. '\n' → logprob: -0.7575867772102356
    3. '<|end|>' → logprob: -3.507586717605591
    4. 'import' → logprob: -4.50758695602417
    5. '
' → logprob: -5.00758695602417
    6. '\' → logprob: -5.38258695602417
    7. '```' → logprob: -5.38258695602417
    8. '<|end|>' → logprob: -6.75758695602417
    9. 'newline' → logprob: -6.88258695602417
    10. ' .' → logprob: -7.25758695602417

Token 4: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.02324768900871277
    2. 'sys' → logprob: -3.773247718811035
    3. '_sys' → logprob: -14.523247718811035
    4. ' ' → logprob: -14.648247718811035
    5. ' shutil' → logprob: -14.773247718811035
    6. '	sys' → logprob: -15.523247718811035
    7. ' subprocess' → logprob: -15.773247718811035
    8. ' re' → logprob: -16.14824676513672
    9. ' system' → logprob: -16.39824676513672
    10. '=sys' → logprob: -16.52324676513672

Token 5: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4900774657726288
    2. '<|end|>' → logprob: -1.8650774955749512
    3. '\n' → logprob: -2.115077495574951
    4. '

' → logprob: -2.615077495574951
    5. 'import' → logprob: -4.615077495574951
    6. '<|end|>' → logprob: -4.740077495574951
    7. 'newline' → logprob: -4.990077495574951
    8. '```' → logprob: -5.240077495574951
    9. '.' → logprob: -5.865077495574951
    10. '\' → logprob: -6.740077495574951

Token 6: 'if' (ID: 366)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6024872064590454
    2. 'import' → logprob: -0.9774872064590454
    3. '\' → logprob: -3.477487087249756
    4. '#' → logprob: -3.602487087249756
    5. '```' → logprob: -5.477487087249756
    6. '.' → logprob: -6.102487087249756
    7. 'os' → logprob: -6.102487087249756
    8. '
' → logprob: -6.227487087249756
    9. 'from' → logprob: -6.602487087249756
    10. 'def' → logprob: -6.852487087249756

Token 7: ' os' (ID: 1994)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14877024292945862
    2. ' os' → logprob: -2.023770332336426
    3. '  ' → logprob: -5.648770332336426
    4. ' __' → logprob: -7.148770332336426
    5. ' ' → logprob: -7.523770332336426
    6. 'os' → logprob: -7.773770332336426
    7. ' sys' → logprob: -8.398770332336426
    8. ''' → logprob: -9.023770332336426
    9. '"' → logprob: -9.273770332336426
    10. '_' → logprob: -9.273770332336426

Token 8: '.getenv' (ID: 105382)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00201595202088356
    2. ' .' → logprob: -6.502016067504883
    3. '.path' → logprob: -7.627016067504883
    4. '.getcwd' → logprob: -12.127016067504883
    5. '.listdir' → logprob: -12.252016067504883
    6. '.name' → logprob: -13.252016067504883
    7. '.chdir' → logprob: -13.252016067504883
    8. ' ' → logprob: -13.752016067504883
    9. '.Path' → logprob: -13.877016067504883
    10. '.environ' → logprob: -13.877016067504883

Token 9: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07064270228147507
    2. '('' → logprob: -2.6956427097320557
    3. '("("' → logprob: -7.820642471313477
    4. '("' → logprob: -8.195642471313477
    5. '(
' → logprob: -11.195642471313477
    6. ' (' → logprob: -12.570642471313477
    7. '()' → logprob: -13.070642471313477
    8. '(

' → logprob: -13.070642471313477
    9. '(`' → logprob: -13.695642471313477
    10. ''' → logprob: -14.070642471313477

Token 10: 'LOCAL' (ID: 90515)
  Prédit: 'USER'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'USER' → logprob: -0.6902826428413391
    2. 'HOME' → logprob: -0.8152826428413391
    3. 'PATH' → logprob: -3.0652825832366943
    4. 'PY' → logprob: -6.065282821655273
    5. 'DJ' → logprob: -6.065282821655273
    6. 'USERNAME' → logprob: -7.065282821655273
    7. 'MY' → logprob: -7.190282821655273
    8. 'ENV' → logprob: -7.315282821655273
    9. 'DEBUG' → logprob: -7.440282821655273
    10. 'V' → logprob: -8.065282821655273

Token 11: '"):
' (ID: 33645)
  Prédit: '"):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"):' → logprob: -0.6338230967521667
    2. '")' → logprob: -1.5088231563568115
    3. '_ENV' → logprob: -2.7588231563568115
    4. '_DEV' → logprob: -3.1338231563568115
    5. '_' → logprob: -3.2588231563568115
    6. '_TEST' → logprob: -4.133822917938232
    7. '_DEBUG' → logprob: -4.258822917938232
    8. '"):
' → logprob: -4.258822917938232
    9. '_RUN' → logprob: -4.883822917938232
    10. '"):
' → logprob: -5.008822917938232

Token 12: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.2983287274837494
    2. '   ' → logprob: -1.6733287572860718
    3. ' print' → logprob: -3.0483286380767822
    4. ' os' → logprob: -4.423328876495361
    5. '     
' → logprob: -5.798328876495361
    6. ' sys' → logprob: -6.298328876495361
    7. '    
' → logprob: -6.298328876495361
    8. '```' → logprob: -6.798328876495361
    9. '\' → logprob: -7.298328876495361
    10. ' ' → logprob: -7.423328876495361

Token 13: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3206639587879181
    2. ' print' → logprob: -1.4456639289855957
    3. ' sys' → logprob: -3.8206639289855957
    4. ' os' → logprob: -4.820663928985596
    5. 'print' → logprob: -5.320663928985596
    6. '    ' → logprob: -6.570663928985596
    7. '```' → logprob: -6.945663928985596
    8. ' pass' → logprob: -7.570663928985596
    9. ' ' → logprob: -9.195664405822754
    10. '       ' → logprob: -9.320664405822754

Token 14: '.stdin' (ID: 93480)
  Prédit: '.exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.13447727262973785
    2. '.' → logprob: -2.634477376937866
    3. '.stdout' → logprob: -3.009477376937866
    4. '.stderr' → logprob: -6.384477138519287
    5. '.path' → logprob: -6.634477138519287
    6. '.argv' → logprob: -7.009477138519287
    7. '.stdin' → logprob: -7.259477138519287
    8. '.ex' → logprob: -9.759477615356445
    9. ' .' → logprob: -10.384477615356445
    10. '.setdefault' → logprob: -11.634477615356445

Token 15: ' =' (ID: 314)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.7662770748138428
    2. '.' → logprob: -1.0162770748138428
    3. '.read' → logprob: -1.7662770748138428
    4. '.write' → logprob: -6.266277313232422
    5. '.readlines' → logprob: -8.641277313232422
    6. ' readline' → logprob: -9.391277313232422
    7. ' .' → logprob: -9.766277313232422
    8. '.Read' → logprob: -10.141277313232422
    9. '.READ' → logprob: -11.141277313232422
    10. '.seek' → logprob: -11.391277313232422

Token 16: ' open' (ID: 2494)
  Prédit: ' open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.011058318428695202
    2. 'open' → logprob: -4.511058330535889
    3. ' sys' → logprob: -11.63605785369873
    4. 'sys' → logprob: -13.76105785369873
    5. '	open' → logprob: -14.51105785369873
    6. '=open' → logprob: -15.63605785369873
    7. '(open' → logprob: -17.636058807373047
    8. ' ' → logprob: -18.136058807373047
    9. '```' → logprob: -18.511058807373047
    10. ' os' → logprob: -18.636058807373047

Token 17: '("_' (ID: 35483)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48766112327575684
    2. '('' → logprob: -1.1126611232757568
    3. '("' → logprob: -3.112661123275757
    4. '("("' → logprob: -4.487661361694336
    5. '(os' → logprob: -7.612661361694336
    6. '<|end|>' → logprob: -8.987661361694336
    7. '("./' → logprob: -9.112661361694336
    8. '('./' → logprob: -9.237661361694336
    9. '```' → logprob: -9.237661361694336
    10. '(`' → logprob: -9.612661361694336

Token 18: 'in' (ID: 258)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03506038710474968
    2. 'local' → logprob: -3.660060405731201
    3. '.input' → logprob: -6.660060405731201
    4. 'stdin' → logprob: -6.660060405731201
    5. '_input' → logprob: -7.035060405731201
    6. 'in' → logprob: -7.035060405731201
    7. 'dev' → logprob: -7.285060405731201
    8. '_local' → logprob: -7.285060405731201
    9. 'main' → logprob: -7.410060405731201
    10. 'output' → logprob: -8.035059928894043

Token 19: '.txt' (ID: 7186)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.009748417884111404
    2. 'puts' → logprob: -4.759748458862305
    3. '.txt' → logprob: -7.509748458862305
    4. 'p' → logprob: -7.759748458862305
    5. '.' → logprob: -8.884748458862305
    6. '.py' → logprob: -12.134748458862305
    7. '_put' → logprob: -12.384748458862305
    8. 'pu' → logprob: -13.259748458862305
    9. '.put' → logprob: -13.509748458862305
    10. 'PUT' → logprob: -13.759748458862305

Token 20: '",' (ID: 672)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.20907306671142578
    2. '",' → logprob: -1.7090730667114258
    3. '","' → logprob: -4.959073066711426
    4. '"' → logprob: -7.459073066711426
    5. ')' → logprob: -11.334073066711426
    6. '")
' → logprob: -11.459073066711426
    7. '",'' → logprob: -12.084073066711426
    8. '",
' → logprob: -13.959073066711426
    9. ',"' → logprob: -13.959073066711426
    10. '```' → logprob: -14.209073066711426

Token 21: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1096317246556282
    2. ' "' → logprob: -2.7346317768096924
    3. ''r' → logprob: -3.3596317768096924
    4. ''' → logprob: -5.984631538391113
    5. ' '' → logprob: -7.484631538391113
    6. 'r' → logprob: -7.609631538391113
    7. '"text' → logprob: -9.234631538391113
    8. '"encoding' → logprob: -9.359631538391113
    9. ''t' → logprob: -9.359631538391113
    10. '"os' → logprob: -9.609631538391113

Token 22: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.1424973713001236e-05
    2. 'rt' → logprob: -10.375031471252441
    3. 'read' → logprob: -15.750031471252441
    4. 'w' → logprob: -18.625030517578125
    5. 'rb' → logprob: -18.625030517578125
    6. '```' → logprob: -19.125030517578125
    7. ' r' → logprob: -19.500030517578125
    8. 't' → logprob: -19.750030517578125
    9. '")' → logprob: -20.750030517578125
    10. '"' → logprob: -20.750030517578125

Token 23: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.06199346110224724
    2. ')' → logprob: -2.811993360519409
    3. '')' → logprob: -11.561993598937988
    4. '"' → logprob: -11.811993598937988
    5. ')")' → logprob: -11.936993598937988
    6. '")
' → logprob: -14.061993598937988
    7. ' )' → logprob: -14.186993598937988
    8. ' ")' → logprob: -15.686993598937988
    9. '`)' → logprob: -16.311992645263672
    10. 't' → logprob: -16.311992645263672

Token 24: 'sys' (ID: 17324)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5271567702293396
    2. 'print' → logprob: -1.1521568298339844
    3. '#' → logprob: -3.0271568298339844
    4. 'input' → logprob: -4.027156829833984
    5. 'data' → logprob: -4.527156829833984
    6. 'n' → logprob: -5.277156829833984
    7. 'import' → logprob: -5.777156829833984
    8. 'output' → logprob: -6.527156829833984
    9. '    
' → logprob: -6.777156829833984
    10. '```' → logprob: -6.902156829833984

Token 25: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03374309465289116
    2. '.stdin' → logprob: -3.783743143081665
    3. '.stdout' → logprob: -4.908742904663086
    4. '.exit' → logprob: -6.158742904663086
    5. '.readline' → logprob: -7.908742904663086
    6. '.stderr' → logprob: -8.033742904663086
    7. '.argv' → logprob: -8.908742904663086
    8. '.write' → logprob: -10.408742904663086
    9. ' .' → logprob: -11.283742904663086
    10. '.std' → logprob: -11.533742904663086

Token 26: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trace' → logprob: -1.4662539958953857
    2. 'encoding' → logprob: -1.5912539958953857
    3. 'up' → logprob: -2.7162539958953857
    4. 'rec' → logprob: -2.8412539958953857
    5. '_encoding' → logprob: -2.8412539958953857
    6. 'default' → logprob: -2.9662539958953857
    7. 'attr' → logprob: -3.0912539958953857
    8. '_trace' → logprob: -3.3412539958953857
    9. '_' → logprob: -3.3412539958953857
    10. 'set' → logprob: -3.5912539958953857

Token 27: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0016711341449990869
    2. 'urs' → logprob: -7.376671314239502
    3. 'ur' → logprob: -8.126670837402344
    4. 'urf' → logprob: -8.251670837402344
    5. 'limit' → logprob: -8.626670837402344
    6. 'utf' → logprob: -8.876670837402344
    7. 'ursive' → logprob: -9.876670837402344
    8. 'ursor' → logprob: -10.376670837402344
    9. '_limit' → logprob: -10.751670837402344
    10. 't' → logprob: -11.126670837402344

Token 28: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -4.644463479053229e-05
    2. '_limit' → logprob: -10.000046730041504
    3. ' limit' → logprob: -14.125046730041504
    4. 'lim' → logprob: -15.750046730041504
    5. '-limit' → logprob: -17.375045776367188
    6. 'depth' → logprob: -18.250045776367188
    7. 'Limit' → logprob: -18.375045776367188
    8. '.limit' → logprob: -19.625045776367188
    9. '(limit' → logprob: -19.625045776367188
    10. 'l' → logprob: -20.250045776367188

Token 29: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. '(
' → logprob: -14.375000953674316
    3. ' (' → logprob: -15.875000953674316
    4. '(

' → logprob: -16.25
    5. '()' → logprob: -17.5
    6. '((' → logprob: -17.625
    7. '100' → logprob: -18.875
    8. '40' → logprob: -18.875
    9. '(int' → logprob: -19.25
    10. ')' → logprob: -19.25

Token 30: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.002212346764281392
    2. '100' → logprob: -6.1272125244140625
    3. ' ' → logprob: -10.627212524414062
    4. '1' → logprob: -13.377212524414062
    5. '200' → logprob: -14.627212524414062
    6. '500' → logprob: -15.002212524414062
    7. '300' → logprob: -15.627212524414062
    8. 'int' → logprob: -16.002212524414062
    9. '999' → logprob: -16.252212524414062
    10. '250' → logprob: -16.377212524414062

Token 31: ' **' (ID: 6240)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.5152144432067871
    2. '0' → logprob: -1.640214443206787
    3. '**' → logprob: -2.765214443206787
    4. '6' → logprob: -2.890214443206787
    5. '5' → logprob: -3.390214443206787
    6. '00' → logprob: -3.515214443206787
    7. '7' → logprob: -3.640214443206787
    8. '4' → logprob: -8.140214920043945
    9. '8' → logprob: -9.515214920043945
    10. '```' → logprob: -10.640214920043945

Token 32: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.018197467550635338
    2. '9' → logprob: -4.018197536468506
    3. '8' → logprob: -10.143197059631348
    4. '6' → logprob: -11.893197059631348
    5. '**' → logprob: -14.268197059631348
    6. '```' → logprob: -15.518197059631348
    7. '

' → logprob: -15.643197059631348
    8. '+' → logprob: -16.018198013305664
    9. ' ' → logprob: -16.643198013305664
    10. '  ' → logprob: -16.643198013305664

Token 33: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.03374793753027916
    2. '9' → logprob: -3.408747911453247
    3. '8' → logprob: -9.783747673034668
    4. '6' → logprob: -10.033747673034668
    5. '**' → logprob: -13.908747673034668
    6. '+' → logprob: -14.908747673034668
    7. '```' → logprob: -15.908747673034668
    8. '

' → logprob: -16.033748626708984
    9. '``' → logprob: -16.033748626708984
    10. '10' → logprob: -16.533748626708984

Token 34: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.500000953674316
    3. ')
' → logprob: -14.750000953674316
    4. '))' → logprob: -15.500000953674316
    5. ')

' → logprob: -18.000001907348633
    6. '0' → logprob: -18.625001907348633
    7. '6' → logprob: -19.250001907348633
    8. ')`' → logprob: -19.500001907348633
    9. ')
' → logprob: -19.875001907348633
    10. '),' → logprob: -20.250001907348633

Token 35: 'CONST' (ID: 168319)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7181257605552673
    2. '
' → logprob: -0.9681257605552673
    3. 'n' → logprob: -2.968125820159912
    4. '

' → logprob: -2.968125820159912
    5. '\' → logprob: -4.968125820159912
    6. '\n' → logprob: -4.968125820159912
    7. '' → logprob: -5.343125820159912
    8. '```' → logprob: -6.218125820159912
    9. '#' → logprob: -6.343125820159912
    10. '
' → logprob: -6.593125820159912

Token 36: '_FLOAT' (ID: 53417)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05056288093328476
    2. ' =' → logprob: -4.425562858581543
    3. 'ANT' → logprob: -4.425562858581543
    4. 'S' → logprob: -5.175562858581543
    5. '_MAX' → logprob: -5.175562858581543
    6. 'T' → logprob: -5.300562858581543
    7. '=' → logprob: -6.425562858581543
    8. 'ANTS' → logprob: -7.050562858581543
    9. '_SPACE' → logprob: -7.050562858581543
    10. ' _' → logprob: -7.675562858581543

Token 37: '_INF' (ID: 173649)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23013582825660706
    2. 'S' → logprob: -1.9801357984542847
    3. ' =' → logprob: -3.605135917663574
    4. '=' → logprob: -4.230135917663574
    5. '_S' → logprob: -4.605135917663574
    6. '_VAL' → logprob: -5.355135917663574
    7. '_VALUE' → logprob: -5.605135917663574
    8. '_MAX' → logprob: -6.230135917663574
    9. ' _' → logprob: -7.105135917663574
    10. '_VALUES' → logprob: -7.230135917663574

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3055616617202759
    2. 'IN' → logprob: -1.3055616617202759
    3. '```' → logprob: -1.9305616617202759
    4. '=' → logprob: -2.1805615425109863
    5. '_' → logprob: -3.1805615425109863
    6. '   ' → logprob: -3.4305615425109863
    7. 'ITY' → logprob: -3.6805615425109863
    8. '=_' → logprob: -4.055561542510986
    9. 'inity' → logprob: -4.430561542510986
    10. 'I' → logprob: -4.430561542510986

Token 39: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.3888416290283203
    2. ' float' → logprob: -1.1388416290283203
    3. '1' → logprob: -6.63884162902832
    4. '10' → logprob: -7.76384162902832
    5. ' ' → logprob: -9.51384162902832
    6. 'inf' → logprob: -10.26384162902832
    7. '3' → logprob: -10.38884162902832
    8. '100' → logprob: -10.76384162902832
    9. '	float' → logprob: -10.88884162902832
    10. ' inf' → logprob: -11.26384162902832

Token 40: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0006957544246688485
    2. '("' → logprob: -7.625695705413818
    3. '(' → logprob: -8.625696182250977
    4. '('+' → logprob: -11.250696182250977
    5. '("("' → logprob: -11.750696182250977
    6. '('(' → logprob: -12.750696182250977
    7. ''' → logprob: -13.875696182250977
    8. '('-' → logprob: -14.625696182250977
    9. '```' → logprob: -14.625696182250977
    10. '('.')' → logprob: -14.625696182250977

Token 41: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.001581162796355784
    2. ''in' → logprob: -6.501581192016602
    3. ''' → logprob: -10.376581192016602
    4. '-inf' → logprob: -11.001581192016602
    5. 'in' → logprob: -11.251581192016602
    6. ' inf' → logprob: -12.751581192016602
    7. '('' → logprob: -13.001581192016602
    8. 'INF' → logprob: -13.001581192016602
    9. 'Inf' → logprob: -13.251581192016602
    10. '"' → logprob: -13.376581192016602

Token 42: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00016229959146585315
    2. ')' → logprob: -9.125162124633789
    3. ')")' → logprob: -10.000162124633789
    4. '"' → logprob: -12.250162124633789
    5. '")
' → logprob: -13.125162124633789
    6. '")
' → logprob: -15.250162124633789
    7. ' ")' → logprob: -15.375162124633789
    8. '}")' → logprob: -16.00016212463379
    9. ')"' → logprob: -16.25016212463379
    10. '");' → logprob: -16.50016212463379

Token 43: 'CONST' (ID: 168319)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09296981990337372
    2. 'n' → logprob: -3.8429698944091797
    3. 'class' → logprob: -3.8429698944091797
    4. '
' → logprob: -4.34296989440918
    5. 'a' → logprob: -4.59296989440918
    6. '#' → logprob: -5.09296989440918
    7. '\n' → logprob: -5.84296989440918
    8. '\' → logprob: -6.09296989440918
    9. '

' → logprob: -6.09296989440918
    10. '```' → logprob: -6.59296989440918

Token 44: '_INT' (ID: 20388)
  Prédit: '_INT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INT' → logprob: -0.596919596195221
    2. '_FLOAT' → logprob: -0.846919596195221
    3. '_INTEGER' → logprob: -4.596919536590576
    4. '_' → logprob: -5.096919536590576
    5. '_UINT' → logprob: -6.846919536590576
    6. '_INF' → logprob: -7.346919536590576
    7. '_INFINITY' → logprob: -7.471919536590576
    8. '_CONST' → logprob: -8.221920013427734
    9. '_IN' → logprob: -8.346920013427734
    10. '_MAX' → logprob: -8.471920013427734

Token 45: '_INF' (ID: 173649)
  Prédit: '_INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INF' → logprob: -0.1269325166940689
    2. '_MAX' → logprob: -2.2519326210021973
    3. '_INFINITY' → logprob: -4.751932621002197
    4. ' _' → logprob: -6.626932621002197
    5. '_INT' → logprob: -7.626932621002197
    6. '_inf' → logprob: -7.626932621002197
    7. '_IN' → logprob: -8.001932144165039
    8. '_' → logprob: -8.376932144165039
    9. '_MIN' → logprob: -8.501932144165039
    10. '_FATAL' → logprob: -8.751932144165039

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00975739024579525
    2. '=' → logprob: -4.6347575187683105
    3. ' ' → logprob: -13.634757041931152
    4. '_' → logprob: -16.75975799560547
    5. '=int' → logprob: -17.38475799560547
    6. '=float' → logprob: -17.63475799560547
    7. ' =)' → logprob: -18.00975799560547
    8. ' ' → logprob: -18.13475799560547
    9. ')' → logprob: -18.25975799560547
    10. ',' → logprob: -18.38475799560547

Token 47: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6399505734443665
    2. '10' → logprob: -0.7649505734443665
    3. 'float' → logprob: -5.639950752258301
    4. 'int' → logprob: -6.389950752258301
    5. ' float' → logprob: -7.139950752258301
    6. '1' → logprob: -7.264950752258301
    7. '100' → logprob: -8.7649507522583
    8. ' int' → logprob: -9.2649507522583
    9. '999' → logprob: -9.2649507522583
    10. '922' → logprob: -9.6399507522583

Token 48: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.016655920073390007
    2. 'int' → logprob: -4.766655921936035
    3. 'float' → logprob: -5.141655921936035
    4. '1' → logprob: -7.141655921936035
    5. '999' → logprob: -7.641655921936035
    6. '100' → logprob: -7.766655921936035
    7. '922' → logprob: -8.891655921936035
    8. ' ' → logprob: -9.266655921936035
    9. '9' → logprob: -9.766655921936035
    10. '(' → logprob: -9.766655921936035

Token 49: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.1671074479818344
    2. '**' → logprob: -2.292107343673706
    3. '18' → logprob: -3.167107343673706
    4. '10' → logprob: -5.542107582092285
    5. '12' → logprob: -6.042107582092285
    6. '15' → logprob: -6.667107582092285
    7. '8' → logprob: -6.792107582092285
    8. '09' → logprob: -7.042107582092285
    9. '000' → logprob: -8.042107582092285
    10. '7' → logprob: -8.042107582092285

Token 50: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.7003995776176453
    2. '9' → logprob: -0.8253995776176453
    3. '15' → logprob: -3.32539963722229
    4. '10' → logprob: -3.95039963722229
    5. '20' → logprob: -5.075399398803711
    6. '16' → logprob: -6.450399398803711
    7. '12' → logprob: -6.575399398803711
    8. '19' → logprob: -7.825399398803711
    9. '17' → logprob: -8.200399398803711
    10. '14' → logprob: -8.700399398803711

Token 51: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.6948072910308838
    2. '9' → logprob: -1.1948072910308838
    3. '15' → logprob: -2.069807291030884
    4. '10' → logprob: -2.944807291030884
    5. '20' → logprob: -4.444807052612305
    6. '12' → logprob: -5.819807052612305
    7. '16' → logprob: -5.944807052612305
    8. '14' → logprob: -7.569807052612305
    9. '19' → logprob: -7.819807052612305
    10. '17' → logprob: -7.819807052612305

Token 52: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5114298462867737
    2. 'def' → logprob: -1.636429786682129
    3. '

' → logprob: -1.886429786682129
    4. '#' → logprob: -3.886429786682129
    5. '\n' → logprob: -4.636429786682129
    6. 'n' → logprob: -5.136429786682129
    7. '' → logprob: -5.386429786682129
    8. 'import' → logprob: -6.011429786682129
    9. '\' → logprob: -6.386429786682129
    10. 'class' → logprob: -6.511429786682129

Token 53: 'CONST' (ID: 168319)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06718482822179794
    2. '
' → logprob: -2.9421849250793457
    3. 'class' → logprob: -6.192184925079346
    4. 'n' → logprob: -6.192184925079346
    5. '\' → logprob: -6.317184925079346
    6. '\n' → logprob: -6.317184925079346
    7. '

' → logprob: -6.567184925079346
    8. '#' → logprob: -6.942184925079346
    9. 'from' → logprob: -7.442184925079346
    10. 'import' → logprob: -7.692184925079346

Token 54: '_MOD' (ID: 45275)
  Prédit: '_INT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_INT' → logprob: -0.2987830638885498
    2. '_FLOAT' → logprob: -1.4237830638885498
    3. '_' → logprob: -4.548783302307129
    4. '_UINT' → logprob: -5.548783302307129
    5. '_STRING' → logprob: -7.548783302307129
    6. '_S' → logprob: -7.548783302307129
    7. '_UN' → logprob: -8.298783302307129
    8. '_CONST' → logprob: -8.423783302307129
    9. ' _' → logprob: -8.548783302307129
    10. '_NUM' → logprob: -8.798783302307129

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014735719189047813
    2. '=' → logprob: -4.264735698699951
    3. '_' → logprob: -7.514735698699951
    4. ' ' → logprob: -11.63973617553711
    5. '1' → logprob: -12.88973617553711
    6. '  ' → logprob: -13.01473617553711
    7. '_=' → logprob: -13.26473617553711
    8. ',' → logprob: -13.63973617553711
    9. ' =
' → logprob: -13.63973617553711
    10. ' =)' → logprob: -14.01473617553711

Token 56: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3989511728286743
    2. ' ' → logprob: -1.3989511728286743
    3. '998' → logprob: -3.0239510536193848
    4. '100' → logprob: -3.3989510536193848
    5. '1' → logprob: -9.398951530456543
    6. '(' → logprob: -12.148951530456543
    7. '999' → logprob: -12.273951530456543
    8. 'int' → logprob: -12.523951530456543
    9. ' (' → logprob: -12.773951530456543
    10. ' int' → logprob: -13.898951530456543

Token 57: '10' (ID: 702)
  Prédit: '998'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '998' → logprob: -0.47511741518974304
    2. '10' → logprob: -1.2251174449920654
    3. '100' → logprob: -2.4751174449920654
    4. '1' → logprob: -8.600117683410645
    5. ' ' → logprob: -9.850117683410645
    6. '(' → logprob: -9.850117683410645
    7. 'int' → logprob: -11.100117683410645
    8. '999' → logprob: -12.975117683410645
    9. '(int' → logprob: -13.725117683410645
    10. '```' → logprob: -13.725117683410645

Token 58: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.006142322905361652
    2. '**' → logprob: -5.1311421394348145
    3. '09' → logprob: -8.506142616271973
    4. '7' → logprob: -12.631142616271973
    5. ' ' → logprob: -12.881142616271973
    6. '```' → logprob: -12.881142616271973
    7. '+' → logprob: -13.631142616271973
    8. '009' → logprob: -14.256142616271973
    9. ' **' → logprob: -14.506142616271973
    10. '_' → logprob: -14.756142616271973

Token 59: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.125
    3. ' ' → logprob: -17.125
    4. '10' → logprob: -18.75
    5. '+' → logprob: -19.125
    6. '18' → logprob: -19.75
    7. '```' → logprob: -20.125
    8. '19' → logprob: -20.5
    9. '4' → logprob: -21.625
    10. '009' → logprob: -22.0

Token 60: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -15.75
    3. '```' → logprob: -19.0
    4. '18' → logprob: -19.625
    5. '10' → logprob: -19.875
    6. ' ' → logprob: -20.375
    7. '+' → logprob: -20.625
    8. '19' → logprob: -21.5
    9. '９' → logprob: -21.75
    10. '8' → logprob: -21.875

Token 61: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006345203728415072
    2. ' +' → logprob: -7.750634670257568
    3. '7' → logprob: -8.50063419342041
    4. '+
' → logprob: -15.25063419342041
    5. '＋' → logprob: -15.37563419342041
    6. '9' → logprob: -17.125635147094727
    7. ' ' → logprob: -17.250635147094727
    8. 'plus' → logprob: -18.375635147094727
    9. ' plus' → logprob: -18.375635147094727
    10. '```' → logprob: -18.500635147094727

Token 62: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. '+' → logprob: -16.5
    3. ' ' → logprob: -17.0
    4. '```' → logprob: -19.25
    5. '   ' → logprob: -20.125
    6. '07' → logprob: -20.75
    7. '７' → logprob: -21.1875
    8. '  ' → logprob: -21.4375
    9. '۷' → logprob: -21.9375
    10. '' → logprob: -22.0

Token 63: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -20.75
    3. '７' → logprob: -21.0
    4. '```' → logprob: -21.5
    5. '+' → logprob: -22.375
    6. '   ' → logprob: -22.75
    7. '07' → logprob: -22.875
    8. '۷' → logprob: -23.25
    9. '७' → logprob: -23.75
    10. '৭' → logprob: -24.0

Token 64: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3407255709171295
    2. '

' → logprob: -1.9657255411148071
    3. 'def' → logprob: -2.0907256603240967
    4. '\n' → logprob: -4.465725421905518
    5. '' → logprob: -5.840725421905518
    6. '#' → logprob: -5.840725421905518
    7. 'n' → logprob: -6.340725421905518
    8. '\' → logprob: -6.590725421905518
    9. 'import' → logprob: -6.965725421905518
    10. '```' → logprob: -6.965725421905518

Token 65: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10344158858060837
    2. '
' → logprob: -3.3534414768218994
    3. 'n' → logprob: -3.4784414768218994
    4. '\n' → logprob: -3.9784414768218994
    5. '\' → logprob: -4.6034417152404785
    6. 'class' → logprob: -7.1034417152404785
    7. '#' → logprob: -7.2284417152404785
    8. '

' → logprob: -7.6034417152404785
    9. '```' → logprob: -7.7284417152404785
    10. '<|end|>' → logprob: -8.47844123840332

Token 66: ' CONST' (ID: 116101)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3070845305919647
    2. ' ' → logprob: -2.307084560394287
    3. '#' → logprob: -2.682084560394287
    4. 'n' → logprob: -3.432084560394287
    5. ' 
' → logprob: -3.432084560394287
    6. 'd' → logprob: -4.307084560394287
    7. '\' → logprob: -5.307084560394287
    8. ' def' → logprob: -5.807084560394287
    9. ' 

' → logprob: -6.057084560394287
    10. 'a' → logprob: -6.182084560394287

Token 67: '_MOD' (ID: 45275)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7329176068305969
    2. '_MOD' → logprob: -1.3579175472259521
    3. '_SET' → logprob: -2.857917547225952
    4. '_MAX' → logprob: -3.357917547225952
    5. '_ARRAY' → logprob: -3.482917547225952
    6. '_INT' → logprob: -3.482917547225952
    7. ' =' → logprob: -4.357917785644531
    8. 'MOD' → logprob: -4.357917785644531
    9. '_LONG' → logprob: -5.482917785644531
    10. '_FLOAT' → logprob: -5.607917785644531

Token 68: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6696817278862
    2. ' =' → logprob: -1.2946817874908447
    3. ' ' → logprob: -1.9196817874908447
    4. '<|end|>' → logprob: -2.9196817874908447
    5. '#' → logprob: -5.169681549072266
    6. '<|end|>' → logprob: -5.794681549072266
    7. ')' → logprob: -5.919681549072266
    8. ' 
' → logprob: -8.044681549072266
    9. '\n' → logprob: -8.419681549072266
    10. '' → logprob: -8.669681549072266

Token 69: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05573783814907074
    2. '998' → logprob: -2.9307377338409424
    3. '2' → logprob: -7.5557379722595215
    4. '10' → logprob: -8.805737495422363
    5. ' (' → logprob: -10.305737495422363
    6. '100' → logprob: -10.555737495422363
    7. '1' → logprob: -10.805737495422363
    8. '0' → logprob: -10.805737495422363
    9. '987' → logprob: -10.930737495422363
    10. '123' → logprob: -11.680737495422363

Token 70: '998' (ID: 34589)
  Prédit: '998'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '998' → logprob: -0.0015742563409730792
    2. '2' → logprob: -6.7515740394592285
    3. '10' → logprob: -8.501574516296387
    4. ' ' → logprob: -9.501574516296387
    5. '(' → logprob: -10.376574516296387
    6. '1' → logprob: -10.376574516296387
    7. '100' → logprob: -10.876574516296387
    8. 'int' → logprob: -11.876574516296387
    9. '214' → logprob: -11.876574516296387
    10. '9' → logprob: -12.126574516296387

Token 71: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -15.875
    3. '444' → logprob: -18.25
    4. '243' → logprob: -18.875
    5. '245' → logprob: -19.125
    6. '247' → logprob: -19.25
    7. '{' → logprob: -19.5
    8. '344' → logprob: -19.625
    9. '242' → logprob: -20.0
    10. '744' → logprob: -20.375

Token 72: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.00016337241686414927
    2. '853' → logprob: -8.750163078308105
    3. '3' → logprob: -12.750163078308105
    4. '357' → logprob: -14.125163078308105
    5. '857' → logprob: -14.750163078308105
    6. '```' → logprob: -15.375163078308105
    7. '35' → logprob: -15.750163078308105
    8. '7' → logprob: -15.750163078308105
    9. '753' → logprob: -15.750163078308105
    10. '53' → logprob: -16.375164031982422

Token 73: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4278726875782013
    2. 'def' → logprob: -1.677872657775879
    3. '\n' → logprob: -2.677872657775879
    4. '

' → logprob: -3.427872657775879
    5. 'n' → logprob: -3.677872657775879
    6. '\' → logprob: -4.677872657775879
    7. '#' → logprob: -4.927872657775879
    8. 'import' → logprob: -5.177872657775879
    9. '' → logprob: -5.302872657775879
    10. '
' → logprob: -5.927872657775879

Token 74: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015969032421708107
    2. 'n' → logprob: -4.2659687995910645
    3. 'class' → logprob: -7.0159687995910645
    4. 'from' → logprob: -7.6409687995910645
    5. 'N' → logprob: -8.390969276428223
    6. 'input' → logprob: -9.390969276428223
    7. 'a' → logprob: -9.765969276428223
    8. 'import' → logprob: -10.390969276428223
    9. '#' → logprob: -11.390969276428223
    10. 'print' → logprob: -12.515969276428223

Token 75: ' Dis' (ID: 3946)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43775802850723267
    2. ' Solution' → logprob: -1.937757968902588
    3. ' Solver' → logprob: -2.437757968902588
    4. ' My' → logprob: -3.312757968902588
    5. ' Segment' → logprob: -3.812757968902588
    6. ' Factor' → logprob: -4.062757968902588
    7. ' `' → logprob: -4.937757968902588
    8. ' Python' → logprob: -5.062757968902588
    9. ' Counter' → logprob: -5.437757968902588
    10. ' Object' → logprob: -5.812757968902588

Token 76: 'joint' (ID: 69164)
  Prédit: 'joint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'joint' → logprob: -0.02072896808385849
    2. 't' → logprob: -3.8957290649414062
    3. 'Joint' → logprob: -10.020729064941406
    4. 'crete' → logprob: -10.145729064941406
    5. 'tant' → logprob: -10.270729064941406
    6. 'join' → logprob: -10.895729064941406
    7. 'jo' → logprob: -11.270729064941406
    8. 'tributed' → logprob: -11.645729064941406
    9. 'tan' → logprob: -12.270729064941406
    10. 'ts' → logprob: -12.770729064941406

Token 77: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -9.088346359931165e-07
    2. '-set' → logprob: -15.250000953674316
    3. 'set' → logprob: -15.500000953674316
    4. ' Set' → logprob: -15.750000953674316
    5. 'Sets' → logprob: -15.750000953674316
    6. '_set' → logprob: -16.375
    7. '_Set' → logprob: -16.875
    8. 'Union' → logprob: -17.5
    9. 'S' → logprob: -18.0
    10. ' set' → logprob: -19.5

Token 78: 'Union' (ID: 39222)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017305433750152588
    2. '():' → logprob: -4.142305374145508
    3. '(' → logprob: -7.642305374145508
    4. ' :' → logprob: -8.017305374145508
    5. 'Union' → logprob: -8.767305374145508
    6. '):' → logprob: -9.267305374145508
    7. ':
' → logprob: -9.892305374145508
    8. '{' → logprob: -9.892305374145508
    9. '<|end|>' → logprob: -10.517305374145508
    10. ' ():' → logprob: -11.767305374145508

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000725656165741384
    2. '(' → logprob: -8.000725746154785
    3. ' :' → logprob: -8.250725746154785
    4. '():' → logprob: -9.500725746154785
    5. '):' → logprob: -10.500725746154785
    6. '(object' → logprob: -11.250725746154785
    7. ':**' → logprob: -12.250725746154785
    8. '<|end|>' → logprob: -13.125725746154785
    9. '(":' → logprob: -14.250725746154785
    10. ' (' → logprob: -14.250725746154785

Token 80: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030723391100764275
    2. '   ' → logprob: -4.530723571777344
    3. ':
' → logprob: -4.905723571777344
    4. '(object' → logprob: -5.780723571777344
    5. '<|end|>' → logprob: -5.780723571777344
    6. ' ' → logprob: -7.030723571777344
    7. '  
' → logprob: -7.030723571777344
    8. '(' → logprob: -7.280723571777344
    9. '   
' → logprob: -7.780723571777344
    10. '  ' → logprob: -7.780723571777344

Token 81: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.016469137743115425
    2. 'def' (adapté à ' def') → logprob: -4.5164690017700195
    3. '   ' → logprob: -5.2664690017700195
    4. '    ' → logprob: -9.26646900177002
    5. '	def' → logprob: -9.76646900177002
    6. '    
' → logprob: -10.14146900177002
    7. ' 
' → logprob: -10.39146900177002
    8. ' ' → logprob: -11.14146900177002
    9. '
' → logprob: -12.39146900177002
    10. ':def' → logprob: -14.26646900177002

Token 82: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.012107767164707184
    2. '__' → logprob: -4.887107849121094
    3. 'init' → logprob: -6.512107849121094
    4. 'nit' → logprob: -6.637107849121094
    5. ' init' → logprob: -7.387107849121094
    6. '_init' → logprob: -7.637107849121094
    7. ' _' → logprob: -8.637107849121094
    8. ' ' → logprob: -8.637107849121094
    9. 'n' → logprob: -9.262107849121094
    10. ' nit' → logprob: -9.387107849121094

Token 83: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.6240566083070007e-06
    2. ' init' → logprob: -13.500001907348633
    3. 'ini' → logprob: -15.875001907348633
    4. 'i' → logprob: -19.375001907348633
    5. '_init' → logprob: -19.625001907348633
    6. 'inite' → logprob: -19.625001907348633
    7. 'in' → logprob: -19.875001907348633
    8. 'int' → logprob: -20.000001907348633
    9. '	init' → logprob: -20.000001907348633
    10. 'innit' → logprob: -20.875001907348633

Token 84: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.04450831562280655
    2. '(self' → logprob: -3.169508218765259
    3. '(' → logprob: -6.919508457183838
    4. '__' → logprob: -7.794508457183838
    5. '_(' → logprob: -10.04450798034668
    6. ' (' → logprob: -10.66950798034668
    7. '__(
' → logprob: -10.91950798034668
    8. '__((' → logprob: -12.16950798034668
    9. '<>(' → logprob: -12.54450798034668
    10. ')(' → logprob: -12.79450798034668

Token 85: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00043591417488642037
    2. ' self' → logprob: -7.750435829162598
    3. ')' → logprob: -12.625435829162598
    4. '   ' → logprob: -14.750435829162598
    5. ' ' → logprob: -15.000435829162598
    6. 'n' → logprob: -15.125435829162598
    7. '	self' → logprob: -15.375435829162598
    8. ',' → logprob: -15.625435829162598
    9. 'parent' → logprob: -15.875435829162598
    10. ',self' → logprob: -16.250436782836914

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008757446892559528
    2. ' ,' → logprob: -4.758757591247559
    3. ',n' → logprob: -9.633757591247559
    4. 'self' → logprob: -9.633757591247559
    5. ',self' → logprob: -12.383757591247559
    6. ',size' → logprob: -12.508757591247559
    7. ',num' → logprob: -14.008757591247559
    8. '(n' → logprob: -14.508757591247559
    9. '   ' → logprob: -14.633757591247559
    10. '):' → logprob: -15.133757591247559

Token 87: ' d' (ID: 272)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06866754591464996
    2. ' n' → logprob: -2.8186676502227783
    3. 'self' → logprob: -5.068667411804199
    4. ' self' → logprob: -7.943667411804199
    5. 'size' → logprob: -11.4436674118042
    6. '   ' → logprob: -11.9436674118042
    7. '	n' → logprob: -12.0686674118042
    8. ' ' → logprob: -12.6936674118042
    9. ' size' → logprob: -12.8186674118042
    10. '```' → logprob: -14.1936674118042

Token 88: 'su' (ID: 20634)
  Prédit: 'ata'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ata' → logprob: -0.030045978724956512
    2. ')' → logprob: -5.030045986175537
    3. 'is' → logprob: -5.030045986175537
    4. 'at' → logprob: -5.780045986175537
    5. 'size' → logprob: -6.155045986175537
    6. 'atas' → logprob: -6.530045986175537
    7. 'su' → logprob: -6.655045986175537
    8. 'ict' → logprob: -6.780045986175537
    9. '):' → logprob: -7.030045986175537
    10. '):
' → logprob: -7.155045986175537

Token 89: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.03017633967101574
    2. 'size' → logprob: -4.655176162719727
    3. '):' → logprob: -5.030176162719727
    4. '_count' → logprob: -6.030176162719727
    5. '   ' → logprob: -6.155176162719727
    6. 'ata' → logprob: -6.405176162719727
    7. '_sizes' → logprob: -6.780176162719727
    8. ',' → logprob: -7.405176162719727
    9. '_parent' → logprob: -7.405176162719727
    10. 's' → logprob: -7.780176162719727

Token 90: '=None' (ID: 12783)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04369380697607994
    2. ':' → logprob: -3.168693780899048
    3. ')' → logprob: -8.168693542480469
    4. ':int' → logprob: -8.668693542480469
    5. ' ):' → logprob: -9.043693542480469
    6. '):
' → logprob: -9.918693542480469
    7. '=' → logprob: -10.043693542480469
    8. ' :' → logprob: -11.418693542480469
    9. ',' → logprob: -12.418693542480469
    10. '   ' → logprob: -12.418693542480469

Token 91: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12724347412586212
    2. ',' → logprob: -2.1272435188293457
    3. ')' → logprob: -8.627243041992188
    4. ' ):' → logprob: -9.252243041992188
    5. ':' → logprob: -10.877243041992188
    6. '   ' → logprob: -11.502243041992188
    7. '):
' → logprob: -12.877243041992188
    8. ' ,' → logprob: -13.002243041992188
    9. ' ' → logprob: -13.877243041992188
    10. '=None' → logprob: -14.127243041992188

Token 92: ' d' (ID: 272)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.6128921508789062
    2. ' parent' → logprob: -1.9878921508789062
    3. ' arr' → logprob: -2.8628921508789062
    4. ' d' → logprob: -2.8628921508789062
    5. ' parents' → logprob: -2.8628921508789062
    6. ' default' → logprob: -3.1128921508789062
    7. 'n' → logprob: -3.3628921508789062
    8. ' elements' → logprob: -3.4878921508789062
    9. 'arr' → logprob: -3.4878921508789062
    10. 'parent' → logprob: -3.7378921508789062

Token 93: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.12845592200756073
    2. 'ata' → logprob: -2.378455877304077
    3. '=None' → logprob: -5.128456115722656
    4. 'is' → logprob: -5.253456115722656
    5. 'size' → logprob: -5.628456115722656
    6. 's' → logprob: -6.003456115722656
    7. 'ef' → logprob: -6.128456115722656
    8. 'at' → logprob: -6.128456115722656
    9. 'type' → logprob: -7.503456115722656
    10. '=' → logprob: -7.940956115722656

Token 94: '_nodes' (ID: 34593)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.4393705427646637
    2. '_list' → logprob: -1.8143705129623413
    3. '_data' → logprob: -3.064370632171631
    4. '_array' → logprob: -3.814370632171631
    5. '_parent' → logprob: -4.064370632171631
    6. 'size' → logprob: -4.564370632171631
    7. '_sizes' → logprob: -4.814370632171631
    8. '_init' → logprob: -4.814370632171631
    9. 's' → logprob: -5.189370632171631
    10. '_values' → logprob: -5.314370632171631

Token 95: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.0047415029257535934
    2. '=' → logprob: -5.379741668701172
    3. '=[]' → logprob: -9.754741668701172
    4. '_size' → logprob: -10.754741668701172
    5. '_count' → logprob: -11.254741668701172
    6. ' =' → logprob: -11.504741668701172
    7. 'None' → logprob: -12.379741668701172
    8. '):' → logprob: -12.504741668701172
    9. ':' → logprob: -12.504741668701172
    10. ')' → logprob: -13.754741668701172

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008520359406247735
    2. ',' → logprob: -7.125852108001709
    3. ')' → logprob: -10.75085163116455
    4. ' ):' → logprob: -11.12585163116455
    5. '):
' → logprob: -11.87585163116455
    6. ':' → logprob: -12.75085163116455
    7. '   ' → logprob: -13.87585163116455
    8. '):
' → logprob: -15.37585163116455
    9. '=None' → logprob: -16.000852584838867
    10. '       ' → logprob: -16.875852584838867

Token 97: '       ' (ID: 309)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3536924719810486
    2. '       ' → logprob: -1.3536925315856934
    3. '):
' → logprob: -4.103692531585693
    4. ':' → logprob: -4.478692531585693
    5. ',' → logprob: -4.603692531585693
    6. ')' → logprob: -7.353692531585693
    7. '   ' → logprob: -7.478692531585693
    8. 'self' → logprob: -8.103692054748535
    9. '():' → logprob: -9.853692054748535
    10. '):
' → logprob: -10.728692054748535

Token 98: ' assert' (ID: 3696)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.542317807674408
    2. '       ' → logprob: -1.2923178672790527
    3. ' self' → logprob: -2.4173178672790527
    4. 'if' → logprob: -3.2923178672790527
    5. 'self' → logprob: -4.167317867279053
    6. ' super' → logprob: -6.417317867279053
    7. 'super' → logprob: -7.667317867279053
    8. ' ' → logprob: -11.417317390441895
    9. '   ' → logprob: -11.542317390441895
    10. 'If' → logprob: -12.667317390441895

Token 99: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.19948816299438477
    2. '(d' → logprob: -2.5744881629943848
    3. ' (' → logprob: -3.0744881629943848
    4. 'd' → logprob: -3.0744881629943848
    5. '(' → logprob: -5.449488162994385
    6. ' not' → logprob: -5.824488162994385
    7. ' isinstance' → logprob: -6.199488162994385
    8. 'ds' → logprob: -6.699488162994385
    9. '(not' → logprob: -6.949488162994385
    10. 'not' → logprob: -8.199487686157227

Token 100: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.00030841029365547
    2. 'is' → logprob: -9.2503080368042
    3. '(s' → logprob: -9.5003080368042
    4. ' is' → logprob: -10.6253080368042
    5. 'size' → logprob: -10.7503080368042
    6. '(' → logprob: -11.1253080368042
    7. 'len' → logprob: -11.3753080368042
    8. 'ds' → logprob: -11.7503080368042
    9. '(d' → logprob: -11.7503080368042
    10. 'sup' → logprob: -12.3753080368042

Token 101: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -6.153795766294934e-06
    2. '_' → logprob: -12.875005722045898
    3. 'size' → logprob: -13.125005722045898
    4. '_nodes' → logprob: -13.750005722045898
    5. '_sizes' → logprob: -15.500005722045898
    6. '_s' → logprob: -17.1250057220459
    7. '__' → logprob: -17.3750057220459
    8. 's' → logprob: -17.7500057220459
    9. '_type' → logprob: -17.8750057220459
    10. '

' → logprob: -18.2500057220459

Token 102: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07856595516204834
    2. '>' → logprob: -2.828566074371338
    3. ' >' → logprob: -4.453566074371338
    4. '>=' → logprob: -5.828566074371338
    5. 'is' → logprob: -6.703566074371338
    6. ' >=' → logprob: -7.578566074371338
    7. '!=' → logprob: -10.20356559753418
    8. ')' → logprob: -10.82856559753418
    9. '<|end|>' → logprob: -11.07856559753418
    10. ' and' → logprob: -11.07856559753418

Token 103: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.1356843262910843
    2. ' not' → logprob: -2.1356842517852783
    3. 'None' → logprob: -4.885684490203857
    4. ' None' → logprob: -6.760684490203857
    5. 'Not' → logprob: -13.1356840133667
    6. ' ' → logprob: -14.2606840133667
    7. '	not' → logprob: -14.3856840133667
    8. '   ' → logprob: -14.5106840133667
    9. '(not' → logprob: -14.5106840133667
    10. '(None' → logprob: -14.8856840133667

Token 104: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01106126606464386
    2. ' None' → logprob: -4.511061191558838
    3. 'int' → logprob: -11.636061668395996
    4. 'not' → logprob: -12.386061668395996
    5. '_None' → logprob: -15.761061668395996
    6. '(None' → logprob: -16.26106071472168
    7. 'none' → logprob: -16.26106071472168
    8. '   ' → logprob: -16.63606071472168
    9. ' not' → logprob: -17.13606071472168
    10. '  ' → logprob: -18.01106071472168

Token 105: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.47783419489860535
    2. '       ' → logprob: -1.1028342247009277
    3. ' and' → logprob: -3.6028342247009277
    4. ',' → logprob: -3.9778342247009277
    5. '<|end|>' → logprob: -6.977834224700928
    6. 'and' → logprob: -8.22783374786377
    7. 'or' → logprob: -8.72783374786377
    8. '
' → logprob: -8.97783374786377
    9. '<|end|>' → logprob: -9.47783374786377
    10. ':' → logprob: -9.60283374786377

Token 106: ' d' (ID: 272)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.38690194487571716
    2. ' d' → logprob: -1.1369019746780396
    3. 'dsn' → logprob: -11.38690185546875
    4. ' ds' → logprob: -12.01190185546875
    5. 'not' → logprob: -12.13690185546875
    6. 'dsl' → logprob: -12.51190185546875
    7. 'd' → logprob: -12.63690185546875
    8. '(d' → logprob: -14.76190185546875
    9. 'DS' → logprob: -15.63690185546875
    10. '   ' → logprob: -16.38690185546875

Token 107: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -1.5451681974809617e-05
    2. '```' → logprob: -12.750015258789062
    3. 'sus' → logprob: -12.750015258789062
    4. 'ds' → logprob: -13.250015258789062
    5. 's' → logprob: -13.875015258789062
    6. 'су' → logprob: -14.000015258789062
    7. 'sup' → logprob: -14.250015258789062
    8. '   ' → logprob: -14.500015258789062
    9. ' su' → logprob: -14.625015258789062
    10. 'sv' → logprob: -14.625015258789062

Token 108: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -2.816093228830141e-06
    2. '_size' → logprob: -13.87500286102295
    3. 'nodes' → logprob: -14.25000286102295
    4. '_n' → logprob: -14.62500286102295
    5. '_node' → logprob: -15.50000286102295
    6. '_' → logprob: -15.75000286102295
    7. 's' → logprob: -16.250001907348633
    8. '_tokens' → logprob: -17.125001907348633
    9. 'size' → logprob: -17.500001907348633
    10. 'd' → logprob: -17.625001907348633

Token 109: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.007693456020206213
    2. 'is' → logprob: -4.882693290710449
    3. ')' → logprob: -10.63269329071045
    4. '<|end|>' → logprob: -10.63269329071045
    5. ' ' → logprob: -10.88269329071045
    6. ',' → logprob: -11.25769329071045
    7. '<|end|>' → logprob: -13.75769329071045
    8. '!=' → logprob: -14.13269329071045
    9. 'not' → logprob: -14.38269329071045
    10. '  ' → logprob: -14.38269329071045

Token 110: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.027004174888134003
    2. ' not' → logprob: -3.6520042419433594
    3. 'None' → logprob: -7.277004241943359
    4. 'Not' → logprob: -12.27700424194336
    5. ' None' → logprob: -13.02700424194336
    6. '[' → logprob: -14.27700424194336
    7. '   ' → logprob: -14.27700424194336
    8. '_not' → logprob: -14.27700424194336
    9. '...' → logprob: -14.40200424194336
    10. 'list' → logprob: -15.02700424194336

Token 111: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0019293478690087795
    2. ' None' → logprob: -6.25192928314209
    3. '_None' → logprob: -15.25192928314209
    4. '   ' → logprob: -15.62692928314209
    5. '(None' → logprob: -16.001930236816406
    6. '=None' → logprob: -16.251930236816406
    7. 'not' → logprob: -17.126930236816406
    8. 'none' → logprob: -17.626930236816406
    9. '_none' → logprob: -17.751930236816406
    10. ' ' → logprob: -17.876930236816406

Token 112: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21174117922782898
    2. ',' → logprob: -1.8367412090301514
    3. '
' → logprob: -3.9617412090301514
    4. '<|end|>' → logprob: -4.586740970611572
    5. '<|end|>' → logprob: -6.961740970611572
    6. ')' → logprob: -7.961740970611572
    7. ':' → logprob: -8.71174144744873
    8. 'def' → logprob: -8.96174144744873
    9. ' and' → logprob: -8.96174144744873
    10. '        
' → logprob: -8.96174144744873

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017029602080583572
    2. '
' → logprob: -5.142029762268066
    3. ',' → logprob: -5.267029762268066
    4. '<|end|>' → logprob: -6.017029762268066
    5. ':' → logprob: -6.267029762268066
    6. '<|end|>' → logprob: -7.392029762268066
    7. ',
' → logprob: -8.392029762268066
    8. ':
' → logprob: -8.392029762268066
    9. '        
' → logprob: -8.767029762268066
    10. ')' → logprob: -9.642029762268066

Token 114: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036004818975925446
    2. ' if' → logprob: -4.036005020141602
    3. 'if' (adapté à ' if') → logprob: -4.286005020141602
    4. 'self' → logprob: -6.036005020141602
    5. ':' → logprob: -6.786005020141602
    6. ' self' → logprob: -8.661005020141602
    7. ',' → logprob: -9.286005020141602
    8. ':
' → logprob: -9.786005020141602
    9. '   ' → logprob: -11.036005020141602
    10. 'super' → logprob: -11.286005020141602

Token 115: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0025080014020204544
    2. 'd' → logprob: -6.002508163452148
    3. 'ds' → logprob: -11.002508163452148
    4. ' ' → logprob: -11.627508163452148
    5. ' not' → logprob: -12.752508163452148
    6. 'dsl' → logprob: -13.877508163452148
    7. 'not' → logprob: -14.127508163452148
    8. '   ' → logprob: -14.127508163452148
    9. '	d' → logprob: -14.627508163452148
    10. 'dsn' → logprob: -14.877508163452148

Token 116: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.0018893759697675705
    2. 'size' → logprob: -6.501889228820801
    3. '_size' → logprob: -8.0018892288208
    4. 's' → logprob: -11.3768892288208
    5. 'sz' → logprob: -11.3768892288208
    6. 'sup' → logprob: -12.1268892288208
    7. '_s' → logprob: -12.6268892288208
    8. '_nodes' → logprob: -12.6268892288208
    9. '_' → logprob: -12.8768892288208
    10. 'sv' → logprob: -13.2518892288208

Token 117: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.016084108501672745
    2. '_nodes' → logprob: -4.14108419418335
    3. '_' → logprob: -10.516083717346191
    4. 'size' → logprob: -11.016083717346191
    5. '_sizes' → logprob: -12.641083717346191
    6. 'nodes' → logprob: -14.516083717346191
    7. '_node' → logprob: -15.016083717346191
    8. '__' → logprob: -15.516083717346191
    9. '_s' → logprob: -15.641083717346191
    10. ' size' → logprob: -15.766083717346191

Token 118: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0004170873435214162
    2. 'is' → logprob: -7.875417232513428
    3. ':' → logprob: -10.37541675567627
    4. ' ' → logprob: -12.25041675567627
    5. ' :' → logprob: -15.00041675567627
    6. '>' → logprob: -15.62541675567627
    7. '	is' → logprob: -15.87541675567627
    8. ' not' → logprob: -16.000417709350586
    9. '  ' → logprob: -16.625417709350586
    10. '    ' → logprob: -16.625417709350586

Token 119: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.14716286957263947
    2. ' None' → logprob: -2.647162914276123
    3. 'not' → logprob: -3.147162914276123
    4. 'None' → logprob: -3.772162914276123
    5. ' ' → logprob: -11.772162437438965
    6. '=None' → logprob: -13.022162437438965
    7. '    ' → logprob: -13.022162437438965
    8. '   ' → logprob: -13.522162437438965
    9. 'Not' → logprob: -13.772162437438965
    10. '_None' → logprob: -13.772162437438965

Token 120: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.005234356038272381
    2. ' None' → logprob: -5.255234241485596
    3. '_None' → logprob: -15.255234718322754
    4. 'none' → logprob: -15.755234718322754
    5. '=None' → logprob: -16.380233764648438
    6. '   ' → logprob: -17.380233764648438
    7. ' ' → logprob: -17.630233764648438
    8. '(None' → logprob: -17.880233764648438
    9. '       ' → logprob: -18.130233764648438
    10. '0' → logprob: -18.255233764648438

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008629118092358112
    2. ':
' → logprob: -4.758629322052002
    3. '       ' → logprob: -12.008628845214844
    4. ' :' → logprob: -12.258628845214844
    5. '):' → logprob: -13.633628845214844
    6. ':
' → logprob: -15.008628845214844
    7. ' and' → logprob: -15.008628845214844
    8. ':

' → logprob: -15.008628845214844
    9. '):
' → logprob: -15.133628845214844
    10. '           ' → logprob: -15.258628845214844

Token 122: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03429063782095909
    2. ':
' → logprob: -3.4092905521392822
    3. '       ' → logprob: -7.409290790557861
    4. '           ' → logprob: -11.159290313720703
    5. ' and' → logprob: -11.159290313720703
    6. ',' → logprob: -12.784290313720703
    7. ' :' → logprob: -13.284290313720703
    8. ':

' → logprob: -13.784290313720703
    9. '):' → logprob: -13.909290313720703
    10. '):
' → logprob: -13.909290313720703

Token 123: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00837332010269165
    2. ' self' → logprob: -5.383373260498047
    3. '       ' → logprob: -5.633373260498047
    4. '           ' → logprob: -8.758373260498047
    5. '	self' → logprob: -12.508373260498047
    6. '(self' → logprob: -13.008373260498047
    7. '   ' → logprob: -13.008373260498047
    8. 'super' → logprob: -14.008373260498047
    9. 's' → logprob: -14.508373260498047
    10. 'def' → logprob: -14.758373260498047

Token 124: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.6975319981575012
    2. '.n' → logprob: -1.0725319385528564
    3. '.parents' → logprob: -2.4475319385528564
    4. '.size' → logprob: -2.9475319385528564
    5. '._' → logprob: -4.4475321769714355
    6. '.data' → logprob: -6.5725321769714355
    7. '.nodes' → logprob: -6.6975321769714355
    8. '.d' → logprob: -6.6975321769714355
    9. '.rank' → logprob: -6.9475321769714355
    10. '.ds' → logprob: -7.5725321769714355

Token 125: '_arr' (ID: 25121)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868734836578369
    2. ' =' → logprob: -1.136873483657837
    3. '=[' → logprob: -14.261873245239258
    4. 's' → logprob: -14.761873245239258
    5. '[' → logprob: -14.886873245239258
    6. '=list' → logprob: -15.386873245239258
    7. '=self' → logprob: -15.511873245239258
    8. '=[]' → logprob: -16.011873245239258
    9. ' ' → logprob: -16.136873245239258
    10. ',' → logprob: -16.386873245239258

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300399497151375
    2. '=' → logprob: -3.168004035949707
    3. '=[' → logprob: -12.668004035949707
    4. ' =[' → logprob: -14.168004035949707
    5. '=[]' → logprob: -14.918004035949707
    6. '   ' → logprob: -15.168004035949707
    7. ',' → logprob: -15.793004035949707
    8. ':' → logprob: -17.04300308227539
    9. '=list' → logprob: -17.16800308227539
    10. '＝' → logprob: -17.54300308227539

Token 127: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10586920380592346
    2. '[list' → logprob: -2.8558692932128906
    3. ' list' → logprob: -3.6058692932128906
    4. '[' → logprob: -4.605869293212891
    5. '[-' → logprob: -5.480869293212891
    6. ' [' → logprob: -6.480869293212891
    7. ' [-' → logprob: -9.73086929321289
    8. '[parent' → logprob: -10.85586929321289
    9. '[node' → logprob: -12.73086929321289
    10. '[List' → logprob: -13.23086929321289

Token 128: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00012190054985694587
    2. '-' → logprob: -9.2501220703125
    3. ' i' → logprob: -11.0001220703125
    4. '-i' → logprob: -12.2501220703125
    5. 'x' → logprob: -13.5001220703125
    6. '(i' → logprob: -14.2501220703125
    7. '*' → logprob: -14.3751220703125
    8. '*i' → logprob: -14.5001220703125
    9. '_i' → logprob: -15.1251220703125
    10. '_' → logprob: -15.3751220703125

Token 129: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28118428587913513
    2. 'for' → logprob: -1.4061843156814575
    3. '   ' → logprob: -10.906184196472168
    4. ' ' → logprob: -12.156184196472168
    5. '	for' → logprob: -12.781184196472168
    6. ']' → logprob: -14.156184196472168
    7. 'or' → logprob: -14.281184196472168
    8. '    ' → logprob: -14.281184196472168
    9. '           ' → logprob: -14.656184196472168
    10. '  ' → logprob: -14.781184196472168

Token 130: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.694386899471283
    2. 'range' → logprob: -0.694386899471283
    3. 'i' → logprob: -6.819386959075928
    4. ' i' → logprob: -9.06938648223877
    5. '(range' → logprob: -10.69438648223877
    6. 'in' → logprob: -12.56938648223877
    7. '_range' → logprob: -13.19438648223877
    8. ' in' → logprob: -13.69438648223877
    9. '	range' → logprob: -13.69438648223877
    10. '_' → logprob: -14.81938648223877

Token 131: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24550649523735046
    2. 'in' → logprob: -1.6205065250396729
    3. 'range' → logprob: -4.120506286621094
    4. ' range' → logprob: -5.620506286621094
    5. ' ' → logprob: -11.120506286621094
    6. '  ' → logprob: -11.870506286621094
    7. 'ange' → logprob: -12.245506286621094
    8. '   ' → logprob: -13.620506286621094
    9. '_range' → logprob: -13.995506286621094
    10. ',' → logprob: -14.120506286621094

Token 132: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015023599844425917
    2. ' range' → logprob: -6.501502513885498
    3. '(range' → logprob: -16.751502990722656
    4. '	range' → logprob: -17.001502990722656
    5. '_range' → logprob: -20.126502990722656
    6. '   ' → logprob: -20.251502990722656
    7. ' ' → logprob: -21.251502990722656
    8. '0' → logprob: -21.251502990722656
    9. '  ' → logprob: -21.626502990722656
    10. '.range' → logprob: -22.251502990722656

Token 133: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -5.1689596148207784e-05
    2. '(' → logprob: -10.125051498413086
    3. '(ds' → logprob: -11.500051498413086
    4. 'ds' → logprob: -14.000051498413086
    5. ' (' → logprob: -15.000051498413086
    6. 'd' → logprob: -15.375051498413086
    7. ' d' → logprob: -16.375051498413086
    8. '   ' → logprob: -17.875051498413086
    9. '(
' → logprob: -19.375051498413086
    10. '	d' → logprob: -19.500051498413086

Token 134: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.00012023169983876869
    2. '   ' → logprob: -10.375120162963867
    3. 's' → logprob: -10.500120162963867
    4. ')' → logprob: -11.250120162963867
    5. '(' → logprob: -11.500120162963867
    6. 'sus' → logprob: -11.625120162963867
    7. ' su' → logprob: -12.500120162963867
    8. 'sv' → logprob: -12.875120162963867
    9. '(s' → logprob: -13.125120162963867
    10. '[' → logprob: -13.250120162963867

Token 135: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -1.9027791495318525e-05
    2. 'size' → logprob: -11.000019073486328
    3. '_s' → logprob: -14.500019073486328
    4. '_' → logprob: -14.875019073486328
    5. 's' → logprob: -15.250019073486328
    6. ' _' → logprob: -15.625019073486328
    7. ' size' → logprob: -15.750019073486328
    8. '   ' → logprob: -15.750019073486328
    9. ')' → logprob: -16.250019073486328
    10. '_sizes' → logprob: -16.250019073486328

Token 136: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.123899558791891e-05
    2. ')]
' → logprob: -9.62507152557373
    3. ' )' → logprob: -13.00007152557373
    4. ']' → logprob: -14.00007152557373
    5. '       ' → logprob: -14.50007152557373
    6. ')]

' → logprob: -14.75007152557373
    7. ' ]' → logprob: -15.00007152557373
    8. ')' → logprob: -15.37507152557373
    9. '           ' → logprob: -16.250070571899414
    10. ')]
' → logprob: -16.250070571899414

Token 137: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11654847860336304
    2. '<|end|>' → logprob: -2.741548538208008
    3. '           ' → logprob: -3.991548538208008
    4. '
' → logprob: -4.116548538208008
    5. 'elif' → logprob: -6.366548538208008
    6. '   ' → logprob: -6.491548538208008
    7. '<|end|>' → logprob: -6.491548538208008
    8. 'else' → logprob: -6.741548538208008
    9. '    
' → logprob: -7.116548538208008
    10. ' 
' → logprob: -7.491548538208008

Token 138: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0025963459629565477
    2. '           ' → logprob: -6.127596378326416
    3. ' self' → logprob: -7.877596378326416
    4. '       ' → logprob: -10.502595901489258
    5. '   ' → logprob: -13.752595901489258
    6. '	self' → logprob: -13.877595901489258
    7. ' ' → logprob: -14.627595901489258
    8. 'elif' → logprob: -15.127595901489258
    9. '[self' → logprob: -15.127595901489258
    10. 's' → logprob: -15.752595901489258

Token 139: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.35388949513435364
    2. '.size' → logprob: -1.2288894653320312
    3. '.parent' → logprob: -6.103889465332031
    4. '.sz' → logprob: -6.103889465332031
    5. '.s' → logprob: -7.603889465332031
    6. '.r' → logprob: -8.853889465332031
    7. '.count' → logprob: -9.478889465332031
    8. '.parents' → logprob: -10.478889465332031
    9. '.' → logprob: -10.728889465332031
    10. '.children' → logprob: -10.853889465332031

Token 140: '_arr' (ID: 25121)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11747158318758011
    2. '_arr' → logprob: -2.242471694946289
    3. '=' → logprob: -6.117471694946289
    4. '   ' → logprob: -6.242471694946289
    5. 's' → logprob: -8.617471694946289
    6. '=[]' → logprob: -8.992471694946289
    7. '_' → logprob: -9.992471694946289
    8. '    ' → logprob: -10.492471694946289
    9. ' ' → logprob: -10.867471694946289
    10. ' =[' → logprob: -10.867471694946289

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01417702715843916
    2. '=' → logprob: -4.264176845550537
    3. '   ' → logprob: -11.764177322387695
    4. ' ' → logprob: -12.389177322387695
    5. ' =[' → logprob: -14.389177322387695
    6. '  ' → logprob: -15.139177322387695
    7. '[' → logprob: -15.389177322387695
    8. '    ' → logprob: -15.639177322387695
    9. '=[' → logprob: -16.014177322387695
    10. '=[]' → logprob: -16.639177322387695

Token 142: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014164921827614307
    2. ' [' → logprob: -4.264164924621582
    3. '   ' → logprob: -13.639164924621582
    4. ' ' → logprob: -15.139164924621582
    5. '[i' → logprob: -17.389163970947266
    6. '0' → logprob: -18.139163970947266
    7. '[len' → logprob: -18.389163970947266
    8. '  ' → logprob: -18.639163970947266
    9. '[-' → logprob: -18.764163970947266
    10. '[int' → logprob: -19.264163970947266

Token 143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018065694894175977
    2. ' ' → logprob: -8.6251802444458
    3. '1' → logprob: -14.0001802444458
    4. '   ' → logprob: -15.5001802444458
    5. '(' → logprob: -16.875181198120117
    6. '  ' → logprob: -18.250181198120117
    7. '-' → logprob: -18.312681198120117
    8. '۰' → logprob: -18.562681198120117
    9. '           ' → logprob: -18.687681198120117
    10. '         ' → logprob: -18.750181198120117

Token 144: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03682117536664009
    2. ' for' → logprob: -4.036821365356445
    3. ']*' → logprob: -4.036821365356445
    4. ' ]' → logprob: -7.786821365356445
    5. 'for' → logprob: -7.911821365356445
    6. ']*(' → logprob: -10.161821365356445
    7. ',' → logprob: -11.911821365356445
    8. ' ' → logprob: -12.036821365356445
    9. '   ' → logprob: -12.411821365356445
    10. ')' → logprob: -12.536821365356445

Token 145: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00302869058214128
    2. 'i' → logprob: -6.378028869628906
    3. ' _' → logprob: -7.378028869628906
    4. ' i' → logprob: -7.503028869628906
    5. '_i' → logprob: -9.128028869628906
    6. ' in' → logprob: -10.753028869628906
    7. ' range' → logprob: -11.503028869628906
    8. 'range' → logprob: -12.253028869628906
    9. ' ' → logprob: -13.253028869628906
    10. '(i' → logprob: -13.628028869628906

Token 146: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09972816705703735
    2. ' in' → logprob: -2.5997281074523926
    3. ' range' → logprob: -3.9747281074523926
    4. 'in' → logprob: -6.349728107452393
    5. ' ' → logprob: -10.09972858428955
    6. '  ' → logprob: -10.97472858428955
    7. '(range' → logprob: -10.97472858428955
    8. 'i' → logprob: -12.22472858428955
    9. '   ' → logprob: -12.34972858428955
    10. ' _' → logprob: -13.09972858428955

Token 147: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001234428636962548
    2. ' range' → logprob: -9.000123023986816
    3. '(range' → logprob: -18.125123977661133
    4. '	range' → logprob: -18.500123977661133
    5. '_' → logprob: -20.875123977661133
    6. '_range' → logprob: -21.375123977661133
    7. ' ' → logprob: -21.375123977661133
    8. '   ' → logprob: -21.875123977661133
    9. 'i' → logprob: -22.125123977661133
    10. 'rang' → logprob: -22.250123977661133

Token 148: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -4.811348480870947e-05
    2. '(ds' → logprob: -10.75004768371582
    3. 'ds' → logprob: -11.25004768371582
    4. '(' → logprob: -11.37504768371582
    5. 'd' → logprob: -13.37504768371582
    6. ' (' → logprob: -15.37504768371582
    7. ' d' → logprob: -15.50004768371582
    8. '   ' → logprob: -17.25004768371582
    9. 'dsl' → logprob: -17.75004768371582
    10. '	d' → logprob: -18.00004768371582

Token 149: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.0019012707052752376
    2. 'size' → logprob: -6.376901149749756
    3. '_size' → logprob: -9.251901626586914
    4. '   ' → logprob: -11.001901626586914
    5. 'sz' → logprob: -11.376901626586914
    6. 'sv' → logprob: -12.001901626586914
    7. ')' → logprob: -12.126901626586914
    8. 'ds' → logprob: -12.251901626586914
    9. 'sus' → logprob: -12.251901626586914
    10. ' su' → logprob: -12.376901626586914

Token 150: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.0004556983185466379
    2. 'size' → logprob: -7.875455856323242
    3. ')' → logprob: -10.250455856323242
    4. '   ' → logprob: -11.500455856323242
    5. '_' → logprob: -12.000455856323242
    6. '_arr' → logprob: -12.000455856323242
    7. 'arr' → logprob: -12.375455856323242
    8. '])' → logprob: -12.875455856323242
    9. ' ' → logprob: -13.625455856323242
    10. '_s' → logprob: -14.000455856323242

Token 151: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0025529502891004086
    2. ']' → logprob: -6.0025529861450195
    3. ')' → logprob: -10.00255298614502
    4. '       ' → logprob: -11.12755298614502
    5. '])' → logprob: -12.12755298614502
    6. ')]
' → logprob: -12.50255298614502
    7. '])]' → logprob: -13.37755298614502
    8. ')],' → logprob: -13.50255298614502
    9. ']
' → logprob: -13.75255298614502
    10. '   ' → logprob: -13.87755298614502

Token 152: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011893275193870068
    2. '<|end|>' → logprob: -4.511893272399902
    3. '<|end|>' → logprob: -8.011893272399902
    4. '           ' → logprob: -8.136893272399902
    5. 'else' → logprob: -9.636893272399902
    6. ')' → logprob: -10.011893272399902
    7. 'elif' → logprob: -10.136893272399902
    8. ' else' → logprob: -10.136893272399902
    9. ' elif' → logprob: -11.886893272399902
    10. '   ' → logprob: -12.011893272399902

Token 153: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.029915833845734596
    2. '           ' → logprob: -3.9049158096313477
    3. '       ' → logprob: -5.154915809631348
    4. 'else' → logprob: -5.779915809631348
    5. ' self' → logprob: -7.904915809631348
    6. 'elif' → logprob: -10.029915809631348
    7. 'if' → logprob: -10.154915809631348
    8. '
' → logprob: -12.154915809631348
    9. ' else' → logprob: -12.529915809631348
    10. '   ' → logprob: -12.529915809631348

Token 154: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.04115832969546318
    2. '.count' → logprob: -3.291158437728882
    3. '.rank' → logprob: -7.041158199310303
    4. '.sz' → logprob: -7.166158199310303
    5. '.parent' → logprob: -7.541158199310303
    6. '.num' → logprob: -8.541158676147461
    7. '.s' → logprob: -8.666158676147461
    8. '.data' → logprob: -9.791158676147461
    9. '.n' → logprob: -10.041158676147461
    10. '.union' → logprob: -10.166158676147461

Token 155: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0024936108384281397
    2. 's' → logprob: -6.377493381500244
    3. ' =' → logprob: -7.377493381500244
    4. '=' → logprob: -9.752493858337402
    5. 'arr' → logprob: -9.877493858337402
    6. '[' → logprob: -11.127493858337402
    7. '_s' → logprob: -11.252493858337402
    8. '   ' → logprob: -11.502493858337402
    9. '=_' → logprob: -13.002493858337402
    10. 'Arr' → logprob: -13.127493858337402

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132680654525757
    2. '=' → logprob: -1.3132680654525757
    3. '[' → logprob: -12.563267707824707
    4. '=[' → logprob: -13.688267707824707
    5. ' ' → logprob: -14.688267707824707
    6. ' =[' → logprob: -15.063267707824707
    7. '[:]' → logprob: -15.313267707824707
    8. '   ' → logprob: -15.438267707824707
    9. '=[]' → logprob: -15.563267707824707
    10. ')' → logprob: -15.813267707824707

Token 157: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023266442120075226
    2. ' [' → logprob: -3.773266553878784
    3. '[d' → logprob: -11.273266792297363
    4. '   ' → logprob: -12.898266792297363
    5. ' ' → logprob: -13.148266792297363
    6. '[i' → logprob: -13.398266792297363
    7. '[df' → logprob: -13.648266792297363
    8. 'ds' → logprob: -15.773266792297363
    9. '[-' → logprob: -16.148265838623047
    10. '1' → logprob: -16.273265838623047

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.214019307051785e-05
    2. ' ' → logprob: -10.500032424926758
    3. '   ' → logprob: -12.375032424926758
    4. '  ' → logprob: -15.625032424926758
    5. '0' → logprob: -15.875032424926758
    6. '
' → logprob: -17.625032424926758
    7. '```' → logprob: -17.875032424926758
    8. '(' → logprob: -18.437532424926758
    9. '     ' → logprob: -18.625032424926758
    10. ']' → logprob: -18.687532424926758

Token 159: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1605207324028015
    2. 'for' → logprob: -1.9105207920074463
    3. ']' → logprob: -8.285520553588867
    4. ')' → logprob: -10.785520553588867
    5. ' ' → logprob: -11.035520553588867
    6. ',' → logprob: -12.660520553588867
    7. '	for' → logprob: -13.035520553588867
    8. '}' → logprob: -14.660520553588867
    9. '   ' → logprob: -14.785520553588867
    10. ' if' → logprob: -15.660520553588867

Token 160: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1943511664867401
    2. ' range' → logprob: -2.0693511962890625
    3. ' _' → logprob: -3.5693511962890625
    4. ' in' → logprob: -3.9443511962890625
    5. 'range' → logprob: -6.9443511962890625
    6. ' i' → logprob: -7.1943511962890625
    7. '_range' → logprob: -7.3193511962890625
    8. '(range' → logprob: -8.319351196289062
    9. ' (' → logprob: -9.194351196289062
    10. '(i' → logprob: -9.569351196289062

Token 161: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014051388017833233
    2. ' range' → logprob: -4.51405143737793
    3. ' in' → logprob: -6.13905143737793
    4. 'in' → logprob: -7.38905143737793
    5. '_' → logprob: -8.63905143737793
    6. '_range' → logprob: -10.38905143737793
    7. '(range' → logprob: -11.13905143737793
    8. '	range' → logprob: -14.13905143737793
    9. 'i' → logprob: -14.76405143737793
    10. ' _' → logprob: -15.26405143737793

Token 162: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015035520773380995
    2. ' range' → logprob: -6.5015034675598145
    3. '(range' → logprob: -13.626503944396973
    4. '	range' → logprob: -18.376502990722656
    5. ' ' → logprob: -18.876502990722656
    6. '   ' → logprob: -18.876502990722656
    7. 'ds' → logprob: -19.001502990722656
    8. 'd' → logprob: -20.126502990722656
    9. '
' → logprob: -20.376502990722656
    10. 'rang' → logprob: -20.751502990722656

Token 163: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.014822747558355331
    2. 'range' → logprob: -4.514822959899902
    3. ' range' → logprob: -6.139822959899902
    4. '(range' → logprob: -6.514822959899902
    5. 'd' → logprob: -9.389822959899902
    6. '(' → logprob: -10.264822959899902
    7. ' d' → logprob: -11.764822959899902
    8. ' (' → logprob: -13.014822959899902
    9. '(ds' → logprob: -13.514822959899902
    10. '_range' → logprob: -14.889822959899902

Token 164: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -7.278864359250292e-05
    2. '_size' → logprob: -11.375072479248047
    3. '_s' → logprob: -11.375072479248047
    4. '_' → logprob: -11.625072479248047
    5. 'size' → logprob: -11.875072479248047
    6. '   ' → logprob: -12.125072479248047
    7. '[' → logprob: -12.375072479248047
    8. ' su' → logprob: -12.500072479248047
    9. ')' → logprob: -12.750072479248047
    10. 'sus' → logprob: -13.125072479248047

Token 165: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.000676096766255796
    2. 'size' → logprob: -7.625676155090332
    3. ')' → logprob: -9.750676155090332
    4. '_nodes' → logprob: -10.000676155090332
    5. '])' → logprob: -10.375676155090332
    6. 'arr' → logprob: -11.125676155090332
    7. '   ' → logprob: -12.125676155090332
    8. '_' → logprob: -12.500676155090332
    9. '_arr' → logprob: -12.625676155090332
    10. ')])' → logprob: -13.125676155090332

Token 166: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.019270798191428185
    2. ']' → logprob: -4.019270896911621
    3. ')' → logprob: -7.019270896911621
    4. '       ' → logprob: -9.519270896911621
    5. ')]
' → logprob: -9.769270896911621
    6. '])' → logprob: -10.269270896911621
    7. ']
' → logprob: -10.269270896911621
    8. '           ' → logprob: -11.519270896911621
    9. '])]' → logprob: -12.394270896911621
    10. '   ' → logprob: -12.894270896911621

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06400338560342789
    2. '<|end|>' → logprob: -2.8140034675598145
    3. '<|end|>' → logprob: -6.5640034675598145
    4. ')' → logprob: -8.814002990722656
    5. 'else' → logprob: -8.814002990722656
    6. 'elif' → logprob: -9.064002990722656
    7. ' else' → logprob: -9.439002990722656
    8. '           ' → logprob: -10.189002990722656
    9. ',' → logprob: -10.689002990722656
    10. '   ' → logprob: -11.439002990722656

Token 168: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7193797826766968
    2. 'else' (adapté à ' else') → logprob: -0.7193797826766968
    3. ' else' → logprob: -3.7193799018859863
    4. 'elif' → logprob: -6.469379901885986
    5. ' elif' → logprob: -9.594379425048828
    6. '```' → logprob: -12.094379425048828
    7. 'self' → logprob: -12.219379425048828
    8. 'if' → logprob: -12.594379425048828
    9. '   ' → logprob: -12.969379425048828
    10. '	else' → logprob: -13.219379425048828

Token 169: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.38761112093925476
    2. ':' → logprob: -1.1376111507415771
    3. '       ' → logprob: -7.387610912322998
    4. '           ' → logprob: -10.012611389160156
    5. ' :
' → logprob: -10.387611389160156
    6. ' :' → logprob: -11.137611389160156
    7. ',' → logprob: -11.887611389160156
    8. '   ' → logprob: -12.012611389160156
    9. ':

' → logprob: -12.262611389160156
    10. ':
' → logprob: -12.887611389160156

Token 170: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15475450456142426
    2. '           ' → logprob: -2.654754400253296
    3. 'self' → logprob: -2.904754400253296
    4. ' self' → logprob: -4.029754638671875
    5. 'assert' → logprob: -8.029754638671875
    6. ' assert' → logprob: -9.404754638671875
    7. '   ' → logprob: -9.904754638671875
    8. '	       ' → logprob: -11.029754638671875
    9. ':' → logprob: -11.654754638671875
    10. ' ' → logprob: -12.279754638671875

Token 171: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.019399994984269142
    2. 'n' → logprob: -4.269400119781494
    3. '       ' → logprob: -6.269400119781494
    4. 'size' → logprob: -6.394400119781494
    5. 'sz' → logprob: -7.269400119781494
    6. 'assert' → logprob: -7.519400119781494
    7. 'ds' → logprob: -8.519399642944336
    8. '           ' → logprob: -9.269399642944336
    9. 'node' → logprob: -10.394399642944336
    10. ' self' → logprob: -10.769399642944336

Token 172: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.004109153989702463
    2. 'parent' → logprob: -5.5041093826293945
    3. '.size' → logprob: -11.379109382629395
    4. '._' → logprob: -12.629109382629395
    5. 'size' → logprob: -12.629109382629395
    6. '.rank' → logprob: -12.879109382629395
    7. '_parent' → logprob: -13.379109382629395
    8. ' .' → logprob: -13.379109382629395
    9. '.' → logprob: -13.754109382629395
    10. '.nodes' → logprob: -13.879109382629395

Token 173: '_dict' (ID: 11295)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_arr' → logprob: -9.281485836254433e-05
    2. '_nodes' → logprob: -10.250092506408691
    3. ' =' → logprob: -10.625092506408691
    4. 'arr' → logprob: -11.125092506408691
    5. '=' → logprob: -12.250092506408691
    6. 's' → logprob: -12.375092506408691
    7. '=_' → logprob: -12.625092506408691
    8. '_array' → logprob: -13.000092506408691
    9. 'Arr' → logprob: -13.875092506408691
    10. '_map' → logprob: -14.250092506408691

Token 174: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014143168926239
    2. ' =' → logprob: -1.7014143466949463
    3. '={}' → logprob: -14.701414108276367
    4. '=d' → logprob: -15.201414108276367
    5. '={' → logprob: -15.826414108276367
    6. ')' → logprob: -16.326414108276367
    7. ' ' → logprob: -16.951414108276367
    8. ':' → logprob: -17.326414108276367
    9. '=dict' → logprob: -17.326414108276367
    10. ' ={' → logprob: -17.326414108276367

Token 175: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.031236570328474045
    2. '{}' → logprob: -3.7812366485595703
    3. 'dict' → logprob: -5.03123664855957
    4. ' {' → logprob: -7.40623664855957
    5. 'd' → logprob: -7.90623664855957
    6. 'ds' → logprob: -8.03123664855957
    7. ' dict' → logprob: -10.15623664855957
    8. '{}
' → logprob: -10.78123664855957
    9. '{}

' → logprob: -10.90623664855957
    10. ' d' → logprob: -11.03123664855957

Token 176: 'k' (ID: 74)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.08470125496387482
    2. 'x' → logprob: -2.9597012996673584
    3. 'k' → logprob: -3.9597012996673584
    4. 'i' → logprob: -5.209701061248779
    5. 'v' → logprob: -6.334701061248779
    6. ' node' → logprob: -6.834701061248779
    7. 'n' → logprob: -7.209701061248779
    8. 'u' → logprob: -7.334701061248779
    9. 'key' → logprob: -8.334701538085938
    10. '(node' → logprob: -9.709701538085938

Token 177: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06275717169046402
    2. ':k' → logprob: -2.8127572536468506
    3. ' :' → logprob: -7.3127570152282715
    4. ':v' → logprob: -9.18775749206543
    5. 'for' → logprob: -12.06275749206543
    6. ':i' → logprob: -12.43775749206543
    7. ':d' → logprob: -12.68775749206543
    8. ' for' → logprob: -13.81275749206543
    9. '   ' → logprob: -13.93775749206543
    10. ':key' → logprob: -14.31275749206543

Token 178: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00016086915275081992
    2. 'v' → logprob: -8.750161170959473
    3. ' k' → logprob: -14.250161170959473
    4. 'i' → logprob: -14.875161170959473
    5. '{k' → logprob: -14.875161170959473
    6. 'd' → logprob: -15.250161170959473
    7. '(k' → logprob: -16.250160217285156
    8. 'for' → logprob: -16.250160217285156
    9. '
' → logprob: -16.750160217285156
    10. ' ' → logprob: -16.875160217285156

Token 179: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2519698739051819
    2. ' for' → logprob: -1.501969814300537
    3. '           ' → logprob: -10.626970291137695
    4. '	for' → logprob: -12.376970291137695
    5. '       ' → logprob: -12.626970291137695
    6. ',' → logprob: -13.126970291137695
    7. '   ' → logprob: -13.376970291137695
    8. '               ' → logprob: -14.001970291137695
    9. '         ' → logprob: -14.126970291137695
    10. '          ' → logprob: -14.501970291137695

Token 180: ' k' (ID: 372)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7897034883499146
    2. ' d' → logprob: -0.7897034883499146
    3. 'ds' → logprob: -2.539703369140625
    4. 'k' → logprob: -4.414703369140625
    5. ' k' → logprob: -7.039703369140625
    6. 'dsn' → logprob: -9.164703369140625
    7. 'dsl' → logprob: -10.289703369140625
    8. 'ks' → logprob: -10.539703369140625
    9. ' ds' → logprob: -12.914703369140625
    10. '	d' → logprob: -13.164703369140625

Token 181: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.40090855956077576
    2. ' in' → logprob: -1.1509085893630981
    3. 'k' → logprob: -4.275908470153809
    4. ' k' → logprob: -10.275908470153809
    5. ' ' → logprob: -13.775908470153809
    6. ',k' → logprob: -13.900908470153809
    7. ',' → logprob: -14.400908470153809
    8. '}' → logprob: -14.525908470153809
    9. '
' → logprob: -15.275908470153809
    10. '  ' → logprob: -15.775908470153809

Token 182: ' d' (ID: 272)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.009184551425278187
    2. ' d' → logprob: -4.75918436050415
    3. 'd' → logprob: -7.50918436050415
    4. ' ds' → logprob: -11.509184837341309
    5. 'dsl' → logprob: -11.634184837341309
    6. 'dsn' → logprob: -12.884184837341309
    7. ' ' → logprob: -16.259183883666992
    8. '(d' → logprob: -16.509183883666992
    9. '
' → logprob: -16.634183883666992
    10. '   ' → logprob: -16.759183883666992

Token 183: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.00020330198458395898
    2. '(s' → logprob: -9.875203132629395
    3. '(' → logprob: -10.500203132629395
    4. 'sup' → logprob: -10.625203132629395
    5. '(d' → logprob: -10.750203132629395
    6. 's' → logprob: -10.875203132629395
    7. 'sum' → logprob: -11.750203132629395
    8. 'ds' → logprob: -12.000203132629395
    9. '```' → logprob: -12.250203132629395
    10. '

' → logprob: -12.500203132629395

Token 184: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -5.5577775128767826e-06
    2. 'nodes' → logprob: -12.750005722045898
    3. 'dict' → logprob: -14.000005722045898
    4. '_keys' → logprob: -14.375005722045898
    5. '_dict' → logprob: -14.875005722045898
    6. '_node' → logprob: -15.875005722045898
    7. '_' → logprob: -16.0000057220459
    8. 's' → logprob: -16.8750057220459
    9. 'Nodes' → logprob: -16.8750057220459
    10. 'd' → logprob: -17.0000057220459

Token 185: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.001974192215129733
    2. '       ' → logprob: -6.251974105834961
    3. ' }' → logprob: -10.876974105834961
    4. '}
' → logprob: -11.001974105834961
    5. '           ' → logprob: -12.126974105834961
    6. '<|end|>' → logprob: -13.126974105834961
    7. ',' → logprob: -14.626974105834961
    8. '   ' → logprob: -14.626974105834961
    9. '               ' → logprob: -15.001974105834961
    10. '}

' → logprob: -15.126974105834961

Token 186: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10814745724201202
    2. '       ' → logprob: -2.483147382736206
    3. '<|end|>' → logprob: -3.983147382736206
    4. '<|end|>' → logprob: -9.108147621154785
    5. '   ' → logprob: -9.233147621154785
    6. 'def' → logprob: -9.608147621154785
    7. 'self' → logprob: -9.733147621154785
    8. '```' → logprob: -10.858147621154785
    9. '	       ' → logprob: -11.733147621154785
    10. ' self' → logprob: -12.233147621154785

Token 187: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.009920408017933369
    2. '           ' → logprob: -4.634920597076416
    3. ' self' → logprob: -8.759920120239258
    4. '       ' → logprob: -12.509920120239258
    5. '   ' → logprob: -13.384920120239258
    6. ' ' → logprob: -14.259920120239258
    7. 'from' → logprob: -14.759920120239258
    8. '	self' → logprob: -14.884920120239258
    9. '          ' → logprob: -16.134920120239258
    10. 'import' → logprob: -16.259920120239258

Token 188: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.0010168524459004402
    2. 'rank' → logprob: -7.376016616821289
    3. '.size' → logprob: -8.126016616821289
    4. '.parent' → logprob: -10.126016616821289
    5. '_rank' → logprob: -10.751016616821289
    6. 'size' → logprob: -11.376016616821289
    7. ' rank' → logprob: -12.251016616821289
    8. '.r' → logprob: -12.251016616821289
    9. ' .' → logprob: -12.501016616821289
    10. '.' → logprob: -12.876016616821289

Token 189: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.633895754814148
    2. '_arr' → logprob: -0.758895754814148
    3. ' _' → logprob: -8.383895874023438
    4. '}_' → logprob: -8.508895874023438
    5. '_' → logprob: -8.633895874023438
    6. 's' → logprob: -8.883895874023438
    7. 'arr' → logprob: -9.133895874023438
    8. '_d' → logprob: -9.258895874023438
    9. '{}_' → logprob: -9.758895874023438
    10. ''_' → logprob: -10.133895874023438

Token 190: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038043782114982605
    2. ' =' → logprob: -3.288043737411499
    3. ':' → logprob: -13.538043975830078
    4. '={' → logprob: -14.663043975830078
    5. ' ' → logprob: -16.038043975830078
    6. '   ' → logprob: -16.163043975830078
    7. '{' → logprob: -16.163043975830078
    8. ' ={' → logprob: -16.288043975830078
    9. '={}' → logprob: -16.913043975830078
    10. ')' → logprob: -17.163043975830078

Token 191: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3490346670150757
    2. '{k' → logprob: -1.3490346670150757
    3. ' {' → logprob: -3.3490347862243652
    4. '{i' → logprob: -10.974034309387207
    5. '{x' → logprob: -12.974034309387207
    6. '{}' → logprob: -14.224034309387207
    7. '{id' → logprob: -14.349034309387207
    8. 'default' → logprob: -14.974034309387207
    9. '   ' → logprob: -15.224034309387207
    10. ' defaultdict' → logprob: -15.349034309387207

Token 192: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.690834273584187e-05
    2. ' k' → logprob: -10.50003719329834
    3. '   ' → logprob: -12.25003719329834
    4. '       ' → logprob: -14.00003719329834
    5. '           ' → logprob: -14.25003719329834
    6. '(k' → logprob: -14.25003719329834
    7. '
' → logprob: -14.37503719329834
    8. ' ' → logprob: -15.00003719329834
    9. 'node' → logprob: -15.25003719329834
    10. '{k' → logprob: -15.50003719329834

Token 193: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.070975071750581e-05
    2. ' :' → logprob: -10.625030517578125
    3. '0' → logprob: -12.500030517578125
    4. ':k' → logprob: -14.500030517578125
    5. ' ' → logprob: -14.875030517578125
    6. 'k' → logprob: -14.875030517578125
    7. '1' → logprob: -15.000030517578125
    8. '   ' → logprob: -15.375030517578125
    9. '=' → logprob: -16.500030517578125
    10. '(' → logprob: -16.812530517578125

Token 194: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.908022285439074e-05
    2. ' ' → logprob: -9.750059127807617
    3. 'k' → logprob: -14.375059127807617
    4. '   ' → logprob: -17.000059127807617
    5. 'for' → logprob: -17.500059127807617
    6. '1' → logprob: -17.937559127807617
    7. '
' → logprob: -18.000059127807617
    8. '           ' → logprob: -18.625059127807617
    9. '۰' → logprob: -18.750059127807617
    10. '}' → logprob: -18.750059127807617

Token 195: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.85366350505501e-05
    2. ' ' → logprob: -9.25009822845459
    3. 'k' → logprob: -13.12509822845459
    4. '   ' → logprob: -16.375099182128906
    5. '
' → logprob: -17.125099182128906
    6. 'for' → logprob: -17.312599182128906
    7. 'v' → logprob: -17.437599182128906
    8. '

' → logprob: -18.000099182128906
    9. 'd' → logprob: -18.000099182128906
    10. '  ' → logprob: -18.062599182128906

Token 196: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6931641101837158
    2. 'for' → logprob: -0.6931641101837158
    3. '           ' → logprob: -12.068163871765137
    4. '       ' → logprob: -12.818163871765137
    5. '        ' → logprob: -12.943163871765137
    6. ',' → logprob: -13.568163871765137
    7. '         ' → logprob: -13.818163871765137
    8. ' ' → logprob: -14.068163871765137
    9. '            ' → logprob: -14.443163871765137
    10. '          ' → logprob: -14.443163871765137

Token 197: ' k' (ID: 372)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.10806293785572052
    2. ' d' → logprob: -2.608062982559204
    3. 'd' → logprob: -3.983062982559204
    4. ' ds' → logprob: -4.608062744140625
    5. 'dsn' → logprob: -9.858062744140625
    6. 'dsl' → logprob: -10.358062744140625
    7. 'k' → logprob: -10.483062744140625
    8. ' k' → logprob: -10.483062744140625
    9. ' ' → logprob: -12.358062744140625
    10. '_ds' → logprob: -13.233062744140625

Token 198: ' in' (ID: 306)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.02010839805006981
    2. ' ds' → logprob: -4.020108222961426
    3. ' in' → logprob: -6.645108222961426
    4. ' d' → logprob: -7.645108222961426
    5. 'in' → logprob: -9.020108222961426
    6. ' k' → logprob: -10.520108222961426
    7. 'd' → logprob: -11.895108222961426
    8. 'dsl' → logprob: -12.145108222961426
    9. 'dsn' → logprob: -12.145108222961426
    10. ' ' → logprob: -12.395108222961426

Token 199: ' d' (ID: 272)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.0394982248544693
    2. ' d' → logprob: -3.2894983291625977
    3. 'd' → logprob: -6.789498329162598
    4. ' ds' → logprob: -8.039498329162598
    5. 'dsn' → logprob: -12.539498329162598
    6. 'dsl' → logprob: -12.914498329162598
    7. ' ' → logprob: -14.039498329162598
    8. '   ' → logprob: -15.289498329162598
    9. '	d' → logprob: -15.789498329162598
    10. '  ' → logprob: -16.16449737548828

Token 200: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -3.953082341467962e-05
    2. 'sv' → logprob: -11.125039100646973
    3. '

' → logprob: -12.625039100646973
    4. 'sup' → logprob: -12.625039100646973
    5. ' su' → logprob: -13.062539100646973
    6. 'су' → logprob: -13.562539100646973
    7. 'sus' → logprob: -13.562539100646973
    8. 'us' → logprob: -13.687539100646973
    9. '_nodes' → logprob: -14.000039100646973
    10. '
' → logprob: -14.000039100646973

Token 201: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -1.759734732331708e-05
    2. '_dict' → logprob: -11.750017166137695
    3. 'nodes' → logprob: -11.875017166137695
    4. 'dict' → logprob: -13.875017166137695
    5. '_' → logprob: -14.875017166137695
    6. '_items' → logprob: -15.750017166137695
    7. '_keys' → logprob: -15.750017166137695
    8. 'arr' → logprob: -15.750017166137695
    9. '_arr' → logprob: -16.125017166137695
    10. '_tokens' → logprob: -16.125017166137695

Token 202: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0038300100713968277
    2. '}
' → logprob: -6.0038299560546875
    3. '       ' → logprob: -7.0038299560546875
    4. '           ' → logprob: -7.7538299560546875
    5. ' }' → logprob: -11.378829956054688
    6. '   ' → logprob: -13.878829956054688
    7. ',' → logprob: -14.003829956054688
    8. '               ' → logprob: -14.378829956054688
    9. '}

' → logprob: -14.503829956054688
    10. ')' → logprob: -14.628829956054688

Token 203: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.630610641877865e-06
    2. 'self' → logprob: -12.625006675720215
    3. '       ' → logprob: -13.500006675720215
    4. '<|end|>' → logprob: -14.000006675720215
    5. '          ' → logprob: -14.875006675720215
    6. '   ' → logprob: -15.625006675720215
    7. '               ' → logprob: -16.2500057220459
    8. '	       ' → logprob: -16.3750057220459
    9. '<|end|>' → logprob: -16.5000057220459
    10. ' and' → logprob: -16.7500057220459

Token 204: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004345379304140806
    2. '           ' → logprob: -5.504345417022705
    3. ' self' → logprob: -8.254344940185547
    4. '       ' → logprob: -12.879344940185547
    5. '   ' → logprob: -13.379344940185547
    6. '	self' → logprob: -13.879344940185547
    7. ' ' → logprob: -14.254344940185547
    8. '(self' → logprob: -15.504344940185547
    9. '  ' → logprob: -15.879344940185547
    10. '          ' → logprob: -15.879344940185547

Token 205: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.002507762983441353
    2. 'size' → logprob: -6.00250768661499
    3. '.parent' → logprob: -11.377508163452148
    4. '.' → logprob: -11.877508163452148
    5. ' size' → logprob: -12.127508163452148
    6. ' .' → logprob: -13.252508163452148
    7. '.s' → logprob: -13.377508163452148
    8. '_size' → logprob: -13.877508163452148
    9. '.length' → logprob: -14.002508163452148
    10. '.user' → logprob: -14.627508163452148

Token 206: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.00041982904076576233
    2. '_arr' → logprob: -7.875419616699219
    3. '_d' → logprob: -11.250419616699219
    4. '}_' → logprob: -12.000419616699219
    5. '_' → logprob: -12.125419616699219
    6. 'arr' → logprob: -12.875419616699219
    7. '_dic' → logprob: -13.500419616699219
    8. '{' → logprob: -13.750419616699219
    9. 'dict' → logprob: -13.750419616699219
    10. 's' → logprob: -13.875419616699219

Token 207: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021713376045227
    2. ' =' → logprob: -2.35021710395813
    3. '{' → logprob: -12.47521686553955
    4. '={' → logprob: -12.72521686553955
    5. ' ={' → logprob: -13.72521686553955
    6. ' ' → logprob: -13.97521686553955
    7. '   ' → logprob: -14.22521686553955
    8. '[' → logprob: -14.97521686553955
    9. ':' → logprob: -15.22521686553955
    10. '[k' → logprob: -15.60021686553955

Token 208: ' {' (ID: 354)
  Prédit: '{k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{k' → logprob: -0.05247445032000542
    2. '{' → logprob: -3.0524744987487793
    3. ' {' → logprob: -5.552474498748779
    4. '{i' → logprob: -13.427474021911621
    5. '{x' → logprob: -16.677474975585938
    6. '{s' → logprob: -16.927474975585938
    7. '{id' → logprob: -17.052474975585938
    8. '   ' → logprob: -18.177474975585938
    9. '{
' → logprob: -18.552474975585938
    10. '{return' → logprob: -18.677474975585938

Token 209: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.5776860184123507e-06
    2. ' k' → logprob: -13.50000286102295
    3. '{k' → logprob: -15.00000286102295
    4. '   ' → logprob: -15.12500286102295
    5. ' ' → logprob: -16.125001907348633
    6. '
' → logprob: -16.250001907348633
    7. '1' → logprob: -16.500001907348633
    8. '(k' → logprob: -16.500001907348633
    9. '```' → logprob: -17.125001907348633
    10. '0' → logprob: -17.375001907348633

Token 210: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.939851037808694e-05
    2. ' :' → logprob: -10.625029563903809
    3. ':k' → logprob: -13.000029563903809
    4. '1' → logprob: -13.875029563903809
    5. 'k' → logprob: -14.125029563903809
    6. '[' → logprob: -15.125029563903809
    7. 'for' → logprob: -15.125029563903809
    8. '0' → logprob: -15.625029563903809
    9. ' ' → logprob: -16.250028610229492
    10. ' for' → logprob: -16.625028610229492

Token 211: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013270224444568157
    2. ' ' → logprob: -6.626327037811279
    3. '   ' → logprob: -14.126326560974121
    4. '
' → logprob: -15.751326560974121
    5. '  ' → logprob: -16.626327514648438
    6. '0' → logprob: -17.251327514648438
    7. '```' → logprob: -17.438827514648438
    8. '{' → logprob: -17.751327514648438
    9. '     ' → logprob: -17.938827514648438
    10. '           ' → logprob: -18.376327514648438

Token 212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.674858301877975e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.000096321105957
    4. '
' → logprob: -16.000097274780273
    5. 'for' → logprob: -16.875097274780273
    6. '```' → logprob: -17.500097274780273
    7. '0' → logprob: -17.812597274780273
    8. '{' → logprob: -18.250097274780273
    9. '  ' → logprob: -18.437597274780273
    10. '=' → logprob: -18.875097274780273

Token 213: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4740859866142273
    2. ' for' → logprob: -0.9740859866142273
    3. '           ' → logprob: -12.099085807800293
    4. '       ' → logprob: -13.974085807800293
    5. '        ' → logprob: -14.099085807800293
    6. '         ' → logprob: -14.599085807800293
    7. '            ' → logprob: -15.474085807800293
    8. '          ' → logprob: -15.474085807800293
    9. ' ' → logprob: -15.849085807800293
    10. '}' → logprob: -15.974085807800293

Token 214: ' k' (ID: 372)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.020098581910133362
    2. ' d' → logprob: -4.020098686218262
    3. 'd' → logprob: -6.395098686218262
    4. 'k' → logprob: -8.770098686218262
    5. ' ds' → logprob: -9.645098686218262
    6. ' k' → logprob: -10.145098686218262
    7. 'dsl' → logprob: -11.895098686218262
    8. 'dsn' → logprob: -12.145098686218262
    9. 'ks' → logprob: -12.895098686218262
    10. 'dk' → logprob: -13.895098686218262

Token 215: ' in' (ID: 306)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.15743112564086914
    2. ' in' → logprob: -2.157431125640869
    3. ' k' → logprob: -4.032431125640869
    4. 'in' → logprob: -4.532431125640869
    5. '_k' → logprob: -6.907431125640869
    6. 'ds' → logprob: -7.782431125640869
    7. 'd' → logprob: -10.032430648803711
    8. '_' → logprob: -10.407430648803711
    9. ' ' → logprob: -10.907430648803711
    10. ' ' → logprob: -11.907430648803711

Token 216: ' d' (ID: 272)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.017811806872487068
    2. ' d' → logprob: -4.5178117752075195
    3. 'd' → logprob: -5.0178117752075195
    4. 'dsl' → logprob: -9.64281177520752
    5. 'dsn' → logprob: -9.89281177520752
    6. ' ds' → logprob: -12.64281177520752
    7. '
' → logprob: -14.26781177520752
    8. 'dm' → logprob: -14.64281177520752
    9. '   ' → logprob: -14.76781177520752
    10. ' ' → logprob: -14.76781177520752

Token 217: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -1.843177233240567e-05
    2. 'sup' → logprob: -12.250018119812012
    3. '_nodes' → logprob: -13.250018119812012
    4. 'sv' → logprob: -13.250018119812012
    5. 'sus' → logprob: -13.375018119812012
    6. 'ds' → logprob: -13.625018119812012
    7. 'nodes' → logprob: -13.750018119812012
    8. 'sum' → logprob: -13.875018119812012
    9. 'су' → logprob: -14.250018119812012
    10. '

' → logprob: -14.625018119812012

Token 218: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -1.2233183042553719e-05
    2. 'nodes' → logprob: -11.375012397766113
    3. '_tokens' → logprob: -15.375012397766113
    4. 'dict' → logprob: -15.875012397766113
    5. 'user' → logprob: -16.875011444091797
    6. 's' → logprob: -17.125011444091797
    7. 'Nodes' → logprob: -17.125011444091797
    8. 'd' → logprob: -17.250011444091797
    9. 'arr' → logprob: -17.375011444091797
    10. '_' → logprob: -17.625011444091797

Token 219: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0003682285314425826
    2. '       ' → logprob: -8.000368118286133
    3. '}
' → logprob: -10.500368118286133
    4. ' }' → logprob: -12.750368118286133
    5. '   ' → logprob: -13.625368118286133
    6. '           ' → logprob: -14.750368118286133
    7. '}

' → logprob: -14.875368118286133
    8. '})' → logprob: -16.125368118286133
    9. '}\' → logprob: -17.125368118286133
    10. '},' → logprob: -17.250368118286133

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2338184118270874
    2. 'def' → logprob: -1.8588184118270874
    3. '<|end|>' → logprob: -3.483818531036377
    4. ' def' → logprob: -3.983818531036377
    5. '    
' → logprob: -6.858818531036377
    6. ' ' → logprob: -7.108818531036377
    7. '	def' → logprob: -7.983818531036377
    8. ')' → logprob: -8.233818054199219
    9. ' 
' → logprob: -8.733818054199219
    10. '  ' → logprob: -8.858818054199219

Token 221: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.30642756819725037
    2. ' def' → logprob: -1.8064275979995728
    3. '   ' → logprob: -2.306427478790283
    4. '	def' → logprob: -10.306427955627441
    5. '    
' → logprob: -11.306427955627441
    6. ' ' → logprob: -11.556427955627441
    7. ' 
' → logprob: -12.056427955627441
    8. '  ' → logprob: -12.556427955627441
    9. '    ' → logprob: -12.556427955627441
    10. '
' → logprob: -14.056427955627441

Token 222: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.011979508213698864
    2. 'find' → logprob: -4.511979579925537
    3. '_find' → logprob: -7.511979579925537
    4. ' _' → logprob: -8.761979103088379
    5. ' get' → logprob: -9.636979103088379
    6. ' ' → logprob: -10.136979103088379
    7. ' parent' → logprob: -10.511979103088379
    8. ' union' → logprob: -10.761979103088379
    9. '	find' → logprob: -10.886979103088379
    10. '.find' → logprob: -11.761979103088379

Token 223: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.19555819034576416
    2. '(' → logprob: -2.0705580711364746
    3. '_parent' → logprob: -3.0705580711364746
    4. '_' → logprob: -5.570558071136475
    5. '_(' → logprob: -7.820558071136475
    6. '_root' → logprob: -8.070558547973633
    7. 'self' → logprob: -8.195558547973633
    8. 'parent' → logprob: -9.820558547973633
    9. '_self' → logprob: -10.070558547973633
    10. '(parent' → logprob: -10.195558547973633

Token 224: ',' (ID: 11)
  Prédit: '_parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -0.7255013585090637
    2. ')' → logprob: -1.725501298904419
    3. '(self' → logprob: -2.475501298904419
    4. '(' → logprob: -2.475501298904419
    5. '_' → logprob: -2.850501298904419
    6. 'self' → logprob: -3.600501298904419
    7. ',' → logprob: -3.725501298904419
    8. '_set' → logprob: -4.600501537322998
    9. '_token' → logprob: -4.725501537322998
    10. ')_' → logprob: -4.975501537322998

Token 225: ' id' (ID: 1211)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007918667048215866
    2. 'v' → logprob: -6.007918834686279
    3. ' x' → logprob: -6.132918834686279
    4. 'self' → logprob: -6.882918834686279
    5. 'node' → logprob: -7.007918834686279
    6. 'a' → logprob: -7.132918834686279
    7. 'u' → logprob: -8.007918357849121
    8. ' v' → logprob: -9.632918357849121
    9. 'item' → logprob: -10.382918357849121
    10. 'k' → logprob: -10.507918357849121

Token 226: '_x' (ID: 7054)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03701166808605194
    2. '_' → logprob: -3.5370116233825684
    3. '):
' → logprob: -5.037011623382568
    4. ')' → logprob: -7.287011623382568
    5. 'self' → logprob: -10.662012100219727
    6. '_:' → logprob: -11.787012100219727
    7. ' ):' → logprob: -12.287012100219727
    8. '):
' → logprob: -12.537012100219727
    9. '(self' → logprob: -12.537012100219727
    10. '_self' → logprob: -13.412012100219727

Token 227: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2522173225879669
    2. '):
' → logprob: -1.5022172927856445
    3. ')' → logprob: -8.502217292785645
    4. '):
' → logprob: -9.752217292785645
    5. ' ):' → logprob: -11.377217292785645
    6. '):

' → logprob: -12.502217292785645
    7. '   ' → logprob: -12.627217292785645
    8. 'self' → logprob: -12.877217292785645
    9. ':' → logprob: -13.252217292785645
    10. ' ):
' → logprob: -13.252217292785645

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10600032657384872
    2. ':' → logprob: -2.3560004234313965
    3. ':
' → logprob: -5.8560004234313965
    4. '
' → logprob: -6.7310004234313965
    5. ' if' → logprob: -8.230999946594238
    6. '        
' → logprob: -8.355999946594238
    7. '):
' → logprob: -8.480999946594238
    8. '   ' → logprob: -8.980999946594238
    9. '):' → logprob: -9.230999946594238
    10. '<|end|>' → logprob: -9.230999946594238

Token 229: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03424650803208351
    2. '       ' → logprob: -3.7842464447021484
    3. ' if' → logprob: -4.534246444702148
    4. 'while' → logprob: -8.534246444702148
    5. '   ' → logprob: -12.284246444702148
    6. ' while' → logprob: -13.284246444702148
    7. 'parent' → logprob: -13.784246444702148
    8. 'return' → logprob: -14.409246444702148
    9. 'try' → logprob: -15.534246444702148
    10. '           ' → logprob: -15.534246444702148

Token 230: ' hasattr' (ID: 75562)
  Prédit: ' hasattr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hasattr' → logprob: -0.3902716636657715
    2. ' isinstance' → logprob: -1.2652716636657715
    3. ' id' → logprob: -4.1402716636657715
    4. 'id' → logprob: -4.6402716636657715
    5. ' self' → logprob: -5.3902716636657715
    6. ' (' → logprob: -5.5152716636657715
    7. ' type' → logprob: -5.7652716636657715
    8. 'self' → logprob: -6.3902716636657715
    9. 'type' → logprob: -6.8902716636657715
    10. ' getattr' → logprob: -8.01527214050293

Token 231: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.038235992193222046
    2. 'self' → logprob: -3.288235902786255
    3. '(' → logprob: -8.663235664367676
    4. ' self' → logprob: -11.163235664367676
    5. '(id' → logprob: -12.913235664367676
    6. ' (' → logprob: -13.663235664367676
    7. '	self' → logprob: -13.913235664367676
    8. ',' → logprob: -14.663235664367676
    9. ',self' → logprob: -14.663235664367676
    10. 'id' → logprob: -14.913235664367676

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.954393079970032e-05
    2. 'self' → logprob: -10.000049591064453
    3. ',"' → logprob: -13.750049591064453
    4. '_,' → logprob: -14.125049591064453
    5. ' ,' → logprob: -14.250049591064453
    6. 'parent' → logprob: -14.500049591064453
    7. ',parent' → logprob: -14.625049591064453
    8. ',self' → logprob: -15.375049591064453
    9. '   ' → logprob: -16.625049591064453
    10. '_parent' → logprob: -17.125049591064453

Token 233: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5773661732673645
    2. '"' → logprob: -0.8273661732673645
    3. ''s' → logprob: -6.827366352081299
    4. ''post' → logprob: -9.82736587524414
    5. ''user' → logprob: -10.07736587524414
    6. '"user' → logprob: -10.20236587524414
    7. ' '' → logprob: -10.20236587524414
    8. ''name' → logprob: -10.57736587524414
    9. ' "' → logprob: -10.70236587524414
    10. ''f' → logprob: -10.82736587524414

Token 234: 'parent' (ID: 4903)
  Prédit: 'parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.00013154871703591198
    2. '_parent' → logprob: -9.000131607055664
    3. ' parent' → logprob: -12.250131607055664
    4. '"_' → logprob: -14.750131607055664
    5. '	parent' → logprob: -15.000131607055664
    6. '(parent' → logprob: -15.000131607055664
    7. '"' → logprob: -15.125131607055664
    8. '.parent' → logprob: -15.250131607055664
    9. 'rank' → logprob: -15.500131607055664
    10. '   ' → logprob: -15.500131607055664

Token 235: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0026137058157473803
    2. '_dict' → logprob: -6.002613544464111
    3. '"_' → logprob: -9.00261402130127
    4. '_' → logprob: -11.75261402130127
    5. '")' → logprob: -13.00261402130127
    6. 'arr' → logprob: -13.25261402130127
    7. '"' → logprob: -14.37761402130127
    8. '_"' → logprob: -14.87761402130127
    9. ' _' → logprob: -15.00261402130127
    10. '_array' → logprob: -15.25261402130127

Token 236: '"):
' (ID: 33645)
  Prédit: '"):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"):
' → logprob: -0.6468572020530701
    2. '")' → logprob: -0.7718572020530701
    3. '):
' → logprob: -5.271857261657715
    4. ')' → logprob: -5.271857261657715
    5. '"):' → logprob: -5.646857261657715
    6. '   ' → logprob: -9.146857261657715
    7. '"):
' → logprob: -9.271857261657715
    8. '"' → logprob: -9.771857261657715
    9. ' ' → logprob: -10.646857261657715
    10. '):' → logprob: -11.146857261657715

Token 237: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35788682103157043
    2. ' and' → logprob: -1.607886791229248
    3. '       ' → logprob: -2.607886791229248
    4. ':' → logprob: -3.982886791229248
    5. ':
' → logprob: -5.857886791229248
    6. ' if' → logprob: -6.482886791229248
    7. '<|end|>' → logprob: -6.607886791229248
    8. ',' → logprob: -7.732886791229248
    9. '<|end|>' → logprob: -8.232887268066406
    10. 'and' → logprob: -8.357887268066406

Token 238: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.702876091003418
    2. ' if' → logprob: -1.077876091003418
    3. '       ' → logprob: -2.827876091003418
    4. 'while' → logprob: -2.827876091003418
    5. ' while' → logprob: -3.077876091003418
    6. '           ' → logprob: -9.077876091003418
    7. 'parent' → logprob: -10.577876091003418
    8. 'return' → logprob: -11.452876091003418
    9. '   ' → logprob: -11.577876091003418
    10. '
' → logprob: -12.327876091003418

Token 239: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00409371592104435
    2. ' self' → logprob: -5.504093647003174
    3. 'id' → logprob: -11.254094123840332
    4. '   ' → logprob: -13.629094123840332
    5. '           ' → logprob: -14.379094123840332
    6. ' id' → logprob: -15.504094123840332
    7. ' ' → logprob: -15.879094123840332
    8. '(self' → logprob: -16.504093170166016
    9. '
' → logprob: -16.754093170166016
    10. '	self' → logprob: -17.504093170166016

Token 240: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -1.3663626305060461e-05
    2. 'parent' → logprob: -11.25001335144043
    3. '.' → logprob: -14.87501335144043
    4. ' .' → logprob: -15.37501335144043
    5. '[parent' → logprob: -17.12501335144043
    6. ',parent' → logprob: -17.75001335144043
    7. ' parent' → logprob: -18.25001335144043
    8. '	parent' → logprob: -18.37501335144043
    9. '_parent' → logprob: -18.75001335144043
    10. 'Parent' → logprob: -19.75001335144043

Token 241: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.4617256056226324e-05
    2. 'arr' → logprob: -11.375014305114746
    3. '[_' → logprob: -13.000014305114746
    4. '	arr' → logprob: -15.750014305114746
    5. '[' → logprob: -15.875014305114746
    6. '[arr' → logprob: -16.000015258789062
    7. 'Arr' → logprob: -16.125015258789062
    8. '_id' → logprob: -16.375015258789062
    9. '[x' → logprob: -17.250015258789062
    10. '_array' → logprob: -17.500015258789062

Token 242: '[id' (ID: 29109)
  Prédit: '[id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[id' → logprob: -4.36574100604048e-06
    2. '[' → logprob: -12.875004768371582
    3. ' [' → logprob: -13.750004768371582
    4. '[self' → logprob: -14.750004768371582
    5. 'id' → logprob: -15.625004768371582
    6. '[
' → logprob: -17.125003814697266
    7. '   ' → logprob: -17.625003814697266
    8. '[int' → logprob: -18.875003814697266
    9. ' ' → logprob: -19.125003814697266
    10. '

' → logprob: -19.375003814697266

Token 243: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -3.650518920039758e-06
    2. 'x' → logprob: -13.000003814697266
    3. '_' → logprob: -13.875003814697266
    4. '_]' → logprob: -16.250003814697266
    5. ']' → logprob: -16.625003814697266
    6. '[x' → logprob: -16.750003814697266
    7. ']_' → logprob: -17.125003814697266
    8. '_
' → logprob: -17.500003814697266
    9. ' _' → logprob: -17.625003814697266
    10. '[' → logprob: -17.625003814697266

Token 244: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002644025720655918
    2. ']!=' → logprob: -6.002644062042236
    3. '!=' → logprob: -8.877643585205078
    4. ' !=' → logprob: -11.252643585205078
    5. ']==' → logprob: -11.752643585205078
    6. '[id' → logprob: -12.127643585205078
    7. ' ]' → logprob: -13.127643585205078
    8. '==' → logprob: -15.377643585205078
    9. '"]' → logprob: -16.127643585205078
    10. 'id' → logprob: -16.377643585205078

Token 245: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.04990340396761894
    2. ' !=' → logprob: -3.049903392791748
    3. '==' → logprob: -6.674903392791748
    4. ' ==' → logprob: -10.174903869628906
    5. ']!=' → logprob: -11.799903869628906
    6. ')!=' → logprob: -12.549903869628906
    7. '!==' → logprob: -13.799903869628906
    8. '()!=' → logprob: -13.924903869628906
    9. '!=-' → logprob: -14.924903869628906
    10. '=' → logprob: -15.049903869628906

Token 246: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.029750952497124672
    2. ' id' → logprob: -3.5297510623931885
    3. '	id' → logprob: -14.77975082397461
    4. 'self' → logprob: -17.40475082397461
    5. ' ' → logprob: -17.77975082397461
    6. '   ' → logprob: -18.27975082397461
    7. '(id' → logprob: -18.40475082397461
    8. '_id' → logprob: -19.02975082397461
    9. '    ' → logprob: -19.15475082397461
    10. '"id' → logprob: -19.15475082397461

Token 247: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.375
    3. 'x' → logprob: -16.5
    4. '```' → logprob: -18.625
    5. '_id' → logprob: -18.875
    6. '_
' → logprob: -19.25
    7. '[' → logprob: -19.5
    8. '   ' → logprob: -19.75
    9. 'arr' → logprob: -19.8125
    10. 'self' → logprob: -19.875

Token 248: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16425950825214386
    2. ':
' → logprob: -1.9142595529556274
    3. ':return' → logprob: -6.164259433746338
    4. '):' → logprob: -7.539259433746338
    5. '               ' → logprob: -7.664259433746338
    6. '           ' → logprob: -7.789259433746338
    7. '):
' → logprob: -8.289259910583496
    8. ')' → logprob: -8.789259910583496
    9. '       ' → logprob: -9.789259910583496
    10. ':
' → logprob: -11.289259910583496

Token 249: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15701784193515778
    2. ' return' → logprob: -2.907017946243286
    3. ':' → logprob: -3.032017946243286
    4. '           ' → logprob: -3.657017946243286
    5. ':return' → logprob: -4.282017707824707
    6. 'return' → logprob: -6.907017707824707
    7. ':
' → logprob: -7.282017707824707
    8. ' :' → logprob: -7.907017707824707
    9. ')' → logprob: -8.907017707824707
    10. '       ' → logprob: -9.032017707824707

Token 250: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.408552885055542
    2. 'return' (adapté à ' return') → logprob: -1.158552885055542
    3. '               ' → logprob: -4.408553123474121
    4. '                   ' → logprob: -5.283553123474121
    5. '           ' → logprob: -5.658553123474121
    6. ':return' → logprob: -7.408553123474121
    7. '   ' → logprob: -10.533553123474121
    8. ':' → logprob: -11.408553123474121
    9. ' id' → logprob: -11.783553123474121
    10. '	return' → logprob: -11.783553123474121

Token 251: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.03806880861520767
    2. ' id' → logprob: -3.2880687713623047
    3. 'self' → logprob: -10.538068771362305
    4. ' self' → logprob: -14.413068771362305
    5. ' ' → logprob: -16.288068771362305
    6. '	id' → logprob: -16.288068771362305
    7. '_id' → logprob: -16.913068771362305
    8. '   ' → logprob: -17.538068771362305
    9. '(id' → logprob: -17.788068771362305
    10. '0' → logprob: -18.538068771362305

Token 252: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -9.610702363715973e-06
    2. 'x' → logprob: -12.125009536743164
    3. '_' → logprob: -12.875009536743164
    4. '_id' → logprob: -14.000009536743164
    5. '[id' → logprob: -16.000009536743164
    6. '[' → logprob: -16.250009536743164
    7. 'id' → logprob: -16.500009536743164
    8. ' ' → logprob: -16.750009536743164
    9. '   ' → logprob: -16.750009536743164
    10. '_
' → logprob: -17.125009536743164

Token 253: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8719208836555481
    2. '           ' → logprob: -0.9969208836555481
    3. ' 
' → logprob: -2.1219208240509033
    4. '            
' → logprob: -3.3719208240509033
    5. ' else' → logprob: -3.3719208240509033
    6. '       ' → logprob: -4.496921062469482
    7. '    
' → logprob: -5.246921062469482
    8. '        
' → logprob: -5.371921062469482
    9. '  
' → logprob: -7.246921062469482
    10. '\n' → logprob: -7.371921062469482

Token 254: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0706958994269371
    2. '
' → logprob: -3.5706958770751953
    3. '       ' → logprob: -3.9456958770751953
    4. '            
' → logprob: -4.695695877075195
    5. '    
' → logprob: -5.320695877075195
    6. ' 
' → logprob: -5.570695877075195
    7. '        
' → logprob: -5.945695877075195
    8. '  
' → logprob: -9.570695877075195
    9. ' else' → logprob: -9.945695877075195
    10. '\n' → logprob: -9.945695877075195

Token 255: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5188935995101929
    2. 'self' (adapté à ' self') → logprob: -1.3938935995101929
    3. ' self' → logprob: -2.3938937187194824
    4. '       ' → logprob: -2.7688937187194824
    5. 'return' → logprob: -6.768893718719482
    6. '
' → logprob: -6.893893718719482
    7. 'else' → logprob: -8.893893241882324
    8. '   ' → logprob: -9.143893241882324
    9. '            
' → logprob: -9.268893241882324
    10. ' return' → logprob: -9.768893241882324

Token 256: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0005152635276317596
    2. '.' → logprob: -7.625515460968018
    3. 'parent' → logprob: -11.12551498413086
    4. ' .' → logprob: -11.50051498413086
    5. '[parent' → logprob: -14.00051498413086
    6. '_parent' → logprob: -15.12551498413086
    7. '._' → logprob: -15.50051498413086
    8. '	parent' → logprob: -15.62551498413086
    9. '.Parent' → logprob: -15.87551498413086
    10. '           ' → logprob: -15.87551498413086

Token 257: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -2.5776860184123507e-06
    2. 'arr' → logprob: -13.00000286102295
    3. '	arr' → logprob: -16.375001907348633
    4. '[_' → logprob: -16.875001907348633
    5. '[arr' → logprob: -17.500001907348633
    6. '_array' → logprob: -18.375001907348633
    7. '[' → logprob: -18.875001907348633
    8. 'Arr' → logprob: -19.000001907348633
    9. '$arr' → logprob: -19.125001907348633
    10. '```' → logprob: -19.250001907348633

Token 258: '[id' (ID: 29109)
  Prédit: '[id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[id' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.625003814697266
    3. 'id' → logprob: -14.875003814697266
    4. '=id' → logprob: -15.125003814697266
    5. '(id' → logprob: -17.375003814697266
    6. '[self' → logprob: -17.625003814697266
    7. '{id' → logprob: -17.750003814697266
    8. '[
' → logprob: -18.125003814697266
    9. '   ' → logprob: -18.250003814697266
    10. ' [' → logprob: -18.250003814697266

Token 259: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -2.5776860184123507e-06
    2. '_id' → logprob: -13.87500286102295
    3. '[id' → logprob: -13.87500286102295
    4. '[x' → logprob: -15.12500286102295
    5. '_arr' → logprob: -16.750001907348633
    6. 'x' → logprob: -17.000001907348633
    7. '[' → logprob: -17.000001907348633
    8. '   ' → logprob: -17.125001907348633
    9. '```' → logprob: -17.125001907348633
    10. 'arr' → logprob: -17.250001907348633

Token 260: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6936110854148865
    2. ' =' → logprob: -0.6936110854148865
    3. ']' → logprob: -7.943611145019531
    4. ')' → logprob: -9.443611145019531
    5. ']=' → logprob: -10.818611145019531
    6. ')=' → logprob: -12.693611145019531
    7. '[' → logprob: -12.818611145019531
    8. ' ' → logprob: -14.193611145019531
    9. ' ]' → logprob: -14.193611145019531
    10. ' )' → logprob: -14.318611145019531

Token 261: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192907452583313
    2. ' =' → logprob: -1.5019290447235107
    3. ' ' → logprob: -18.501928329467773
    4. '＝' → logprob: -18.501928329467773
    5. '=
' → logprob: -19.001928329467773
    6. '=find' → logprob: -19.126928329467773
    7. '.=' → logprob: -19.501928329467773
    8. ' =
' → logprob: -19.751928329467773
    9. '   ' → logprob: -20.001928329467773
    10. '=

' → logprob: -20.001928329467773

Token 262: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1269282102584839
    2. ' self' → logprob: -2.1269283294677734
    3. '(self' → logprob: -17.251928329467773
    4. '	self' → logprob: -18.126928329467773
    5. ' ' → logprob: -18.876928329467773
    6. '[self' → logprob: -19.126928329467773
    7. 'elf' → logprob: -20.001928329467773
    8. '
' → logprob: -20.001928329467773
    9. '=self' → logprob: -20.501928329467773
    10. '   ' → logprob: -20.751928329467773

Token 263: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0001427538663847372
    2. 'find' → logprob: -8.875143051147461
    3. '.' → logprob: -12.875143051147461
    4. ' .' → logprob: -15.250143051147461
    5. '.parent' → logprob: -16.87514305114746
    6. '=find' → logprob: -17.50014305114746
    7. ' find' → logprob: -17.87514305114746
    8. '	find' → logprob: -18.37514305114746
    9. ').' → logprob: -18.62514305114746
    10. 'parent' → logprob: -18.87514305114746

Token 264: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20142056047916412
    2. '(' → logprob: -1.701420545578003
    3. '(
' → logprob: -12.326420783996582
    4. 'self' → logprob: -13.951420783996582
    5. ' (' → logprob: -14.076420783996582
    6. '('' → logprob: -15.076420783996582
    7. '(parent' → logprob: -15.201420783996582
    8. '(

' → logprob: -15.451420783996582
    9. ' self' → logprob: -15.951420783996582
    10. '(this' → logprob: -16.576419830322266

Token 265: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -8.876193169271573e-05
    2. 'parent' → logprob: -9.375088691711426
    3. '.' → logprob: -12.750088691711426
    4. ' parent' → logprob: -14.375088691711426
    5. ' .' → logprob: -15.625088691711426
    6. '_parent' → logprob: -15.750088691711426
    7. '(parent' → logprob: -16.250089645385742
    8. '	parent' → logprob: -17.250089645385742
    9. '[parent' → logprob: -18.000089645385742
    10. ',parent' → logprob: -18.250089645385742

Token 266: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0004374638374429196
    2. 'arr' → logprob: -7.750437259674072
    3. 'self' → logprob: -13.00043773651123
    4. 'parent' → logprob: -13.25043773651123
    5. 'Arr' → logprob: -14.62543773651123
    6. '_parent' → logprob: -14.75043773651123
    7. '[arr' → logprob: -14.75043773651123
    8. '	arr' → logprob: -15.25043773651123
    9. 'x' → logprob: -15.37543773651123
    10. '(arr' → logprob: -15.75043773651123

Token 267: '[id' (ID: 29109)
  Prédit: '[id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[id' → logprob: -1.9743012671824545e-05
    2. '[self' → logprob: -11.250020027160645
    3. '[' → logprob: -12.000020027160645
    4. '(id' → logprob: -15.500020027160645
    5. '[
' → logprob: -16.000019073486328
    6. 'id' → logprob: -16.000019073486328
    7. ' [' → logprob: -16.625019073486328
    8. 'self' → logprob: -17.625019073486328
    9. '[parent' → logprob: -19.125019073486328
    10. '[class' → logprob: -19.500019073486328

Token 268: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0006660910439677536
    2. '[id' → logprob: -7.37566614151001
    3. '[x' → logprob: -10.875665664672852
    4. '_id' → logprob: -11.875665664672852
    5. '[self' → logprob: -12.250665664672852
    6. '_arr' → logprob: -12.500665664672852
    7. 'self' → logprob: -13.250665664672852
    8. '[arr' → logprob: -13.875665664672852
    9. 'id' → logprob: -14.250665664672852
    10. 'arr' → logprob: -14.375665664672852

Token 269: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2828555703163147
    2. '[id' → logprob: -1.40785551071167
    3. '(id' → logprob: -7.65785551071167
    4. 'id' → logprob: -8.032855987548828
    5. ')
' → logprob: -8.282855987548828
    6. ' )' → logprob: -8.282855987548828
    7. '           ' → logprob: -8.907855987548828
    8. '       ' → logprob: -9.282855987548828
    9. '   ' → logprob: -9.657855987548828
    10. ' id' → logprob: -10.282855987548828

Token 270: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4505236744880676
    2. '           ' → logprob: -1.0755236148834229
    3. ' return' → logprob: -4.450523853302002
    4. 'return' → logprob: -4.950523853302002
    5. '	return' → logprob: -6.450523853302002
    6. '   ' → logprob: -7.700523853302002
    7. '	' → logprob: -7.825523853302002
    8. '	       ' → logprob: -9.325523376464844
    9. '	   ' → logprob: -9.450523376464844
    10. '		' → logprob: -9.575523376464844

Token 271: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04493863135576248
    2. ' return' → logprob: -3.294938564300537
    3. '       ' → logprob: -5.044938564300537
    4. '           ' → logprob: -7.794938564300537
    5. '   ' → logprob: -11.794939041137695
    6. '	return' → logprob: -12.169939041137695
    7. ':return' → logprob: -12.419939041137695
    8. '
' → logprob: -13.294939041137695
    9. ')return' → logprob: -14.669939041137695
    10. '_return' → logprob: -15.419939041137695

Token 272: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25192928314208984
    2. ' self' → logprob: -1.5019292831420898
    3. '	self' → logprob: -15.87692928314209
    4. '(self' → logprob: -17.126930236816406
    5. ' ' → logprob: -17.501930236816406
    6. ' ' → logprob: -18.126930236816406
    7. '_self' → logprob: -18.626930236816406
    8. '[self' → logprob: -19.751930236816406
    9. 'Self' → logprob: -19.876930236816406
    10. '   ' → logprob: -20.001930236816406

Token 273: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.00010485442908247933
    2. 'parent' → logprob: -9.250104904174805
    3. '.' → logprob: -11.750104904174805
    4. ' parent' → logprob: -15.375104904174805
    5. '_parent' → logprob: -15.375104904174805
    6. ' .' → logprob: -15.500104904174805
    7. '	parent' → logprob: -16.250104904174805
    8. '[parent' → logprob: -16.250104904174805
    9. ',parent' → logprob: -16.750104904174805
    10. '.parents' → logprob: -17.750104904174805

Token 274: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.00026264708139933646
    2. 'arr' → logprob: -8.250262260437012
    3. '	arr' → logprob: -14.750262260437012
    4. '[arr' → logprob: -14.750262260437012
    5. 'Arr' → logprob: -15.375262260437012
    6. '-arr' → logprob: -16.375263214111328
    7. '.arr' → logprob: -16.500263214111328
    8. '_id' → logprob: -17.375263214111328
    9. '_parent' → logprob: -17.500263214111328
    10. '$arr' → logprob: -17.500263214111328

Token 275: '[id' (ID: 29109)
  Prédit: '[id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[id' → logprob: -0.007707773242145777
    2. '_arr' → logprob: -4.882707595825195
    3. '[self' → logprob: -9.382707595825195
    4. '[arr' → logprob: -11.882707595825195
    5. 'arr' → logprob: -12.632707595825195
    6. '_id' → logprob: -13.257707595825195
    7. '[' → logprob: -13.382707595825195
    8. '_[' → logprob: -14.132707595825195
    9. '[_' → logprob: -14.132707595825195
    10. '[parent' → logprob: -14.257707595825195

Token 276: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -7.896309739408025e-07
    2. ']' → logprob: -15.625000953674316
    3. '_id' → logprob: -15.750000953674316
    4. 'arr' → logprob: -15.750000953674316
    5. 'x' → logprob: -16.125
    6. '_]' → logprob: -16.875
    7. ']_' → logprob: -17.375
    8. '_arr' → logprob: -17.625
    9. '[' → logprob: -18.125
    10. '```' → logprob: -18.125

Token 277: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018806851003319025
    2. '<|end|>' → logprob: -6.501880645751953
    3. ')
' → logprob: -8.876880645751953
    4. '}' → logprob: -8.876880645751953
    5. '       ' → logprob: -10.501880645751953
    6. ']' → logprob: -10.501880645751953
    7. ' )' → logprob: -10.751880645751953
    8. '<|end|>' → logprob: -11.876880645751953
    9. ')return' → logprob: -12.001880645751953
    10. '
' → logprob: -13.001880645751953

Token 278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7071157693862915
    2. '<|end|>' → logprob: -0.7071157693862915
    3. '	' → logprob: -5.207115650177002
    4. '<|end|>' → logprob: -6.207115650177002
    5. 'else' → logprob: -6.582115650177002
    6. ' else' → logprob: -6.832115650177002
    7. '
' → logprob: -6.957115650177002
    8. '   ' → logprob: -7.082115650177002
    9. ')' → logprob: -7.832115650177002
    10. '        
' → logprob: -8.20711612701416

Token 279: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5290408730506897
    2. 'if' → logprob: -1.279040813446045
    3. '       ' → logprob: -2.029040813446045
    4. 'elif' → logprob: -7.404040813446045
    5. '
' → logprob: -8.154041290283203
    6. '   ' → logprob: -9.404041290283203
    7. '        
' → logprob: -10.404041290283203
    8. ' else' → logprob: -10.529041290283203
    9. 'self' → logprob: -11.654041290283203
    10. ' if' → logprob: -12.154041290283203

Token 280: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31893080472946167
    2. '           ' → logprob: -2.0689308643341064
    3. ':
' → logprob: -2.5689308643341064
    4. ':' → logprob: -2.9439308643341064
    5. ' if' → logprob: -4.568930625915527
    6. 'if' → logprob: -5.068930625915527
    7. '   ' → logprob: -7.568930625915527
    8. ',' → logprob: -9.818930625915527
    9. 'def' → logprob: -9.818930625915527
    10. '        ' → logprob: -10.318930625915527

Token 281: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18291354179382324
    2. '       ' → logprob: -1.9329135417938232
    3. ' if' → logprob: -3.9329135417938232
    4. 'return' → logprob: -5.932913780212402
    5. '           ' → logprob: -9.182913780212402
    6. '   ' → logprob: -10.182913780212402
    7. ' return' → logprob: -10.682913780212402
    8. 'self' → logprob: -10.807913780212402
    9. '	if' → logprob: -12.432913780212402
    10. '```' → logprob: -12.432913780212402

Token 282: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005536287208087742
    2. 'parent' → logprob: -7.625553607940674
    3. ' if' → logprob: -10.250554084777832
    4. 'self' → logprob: -11.250554084777832
    5. '       ' → logprob: -12.125554084777832
    6. 'root' → logprob: -12.375554084777832
    7. 'p' → logprob: -13.375554084777832
    8. 'return' → logprob: -13.500554084777832
    9. '   ' → logprob: -13.875554084777832
    10. '           ' → logprob: -13.875554084777832

Token 283: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0012021353468298912
    2. ' self' → logprob: -6.75120210647583
    3. 'id' → logprob: -10.376202583312988
    4. 'not' → logprob: -14.501202583312988
    5. ' id' → logprob: -15.876202583312988
    6. ' not' → logprob: -15.876202583312988
    7. ' ' → logprob: -17.376201629638672
    8. '	self' → logprob: -17.376201629638672
    9. '(self' → logprob: -18.251201629638672
    10. '  ' → logprob: -18.626201629638672

Token 284: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.1002560630440712
    2. 'parent' → logprob: -2.3502559661865234
    3. '.rank' → logprob: -10.100255966186523
    4. 'rank' → logprob: -11.850255966186523
    5. ' parent' → logprob: -13.975255966186523
    6. '_parent' → logprob: -16.475255966186523
    7. 'find' → logprob: -16.850255966186523
    8. 'not' → logprob: -16.975255966186523
    9. '.find' → logprob: -16.975255966186523
    10. '	parent' → logprob: -17.475255966186523

Token 285: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -8.65707261255011e-06
    2. 'dict' → logprob: -11.750008583068848
    3. '_arr' → logprob: -15.250008583068848
    4. '_dic' → logprob: -16.125009536743164
    5. '_DICT' → logprob: -16.750009536743164
    6. 'id' → logprob: -17.250009536743164
    7. '[' → logprob: -17.375009536743164
    8. '_' → logprob: -17.625009536743164
    9. '_d' → logprob: -17.875009536743164
    10. 'arr' → logprob: -17.875009536743164

Token 286: '[id' (ID: 29109)
  Prédit: '[id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[id' → logprob: -1.9361264946837764e-07
    2. 'id' → logprob: -16.25
    3. '[' → logprob: -18.0
    4. ' [' → logprob: -19.375
    5. '.get' → logprob: -19.875
    6. '(id' → logprob: -20.625
    7. '

' → logprob: -21.0
    8. '{id' → logprob: -21.125
    9. '   ' → logprob: -21.25
    10. '[self' → logprob: -21.75

Token 287: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -8.77627644513268e-06
    2. 'x' → logprob: -11.875008583068848
    3. 'dict' → logprob: -14.375008583068848
    4. '_dict' → logprob: -14.625008583068848
    5. '   ' → logprob: -16.125009536743164
    6. '_' → logprob: -16.125009536743164
    7. ']' → logprob: -16.687509536743164
    8. '_y' → logprob: -17.062509536743164
    9. 'Dict' → logprob: -17.312509536743164
    10. '```' → logprob: -17.312509536743164

Token 288: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.444796085357666
    2. ' ==' → logprob: -1.569796085357666
    3. ']' → logprob: -2.319796085357666
    4. ']==' → logprob: -2.944796085357666
    5. ')' → logprob: -10.694795608520508
    6. ')==' → logprob: -11.944795608520508
    7. ' ' → logprob: -12.319795608520508
    8. '!=' → logprob: -12.944795608520508
    9. '[id' → logprob: -13.069795608520508
    10. '==
' → logprob: -13.319795608520508

Token 289: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25193631649017334
    2. ' ==' → logprob: -1.5019363164901733
    3. '!=' → logprob: -12.626935958862305
    4. ')==' → logprob: -13.626935958862305
    5. ']==' → logprob: -13.751935958862305
    6. ' !=' → logprob: -14.751935958862305
    7. ')' → logprob: -15.376935958862305
    8. '[id' → logprob: -15.626935958862305
    9. '==-' → logprob: -15.751935958862305
    10. '==
' → logprob: -15.876935958862305

Token 290: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -2.7610454708337784e-05
    2. ' id' → logprob: -10.500027656555176
    3. '	id' → logprob: -19.75002670288086
    4. ' ' → logprob: -20.87502670288086
    5. '_id' → logprob: -21.25002670288086
    6. '[id' → logprob: -21.87502670288086
    7. '   ' → logprob: -22.00002670288086
    8. 'idf' → logprob: -22.12502670288086
    9. '(id' → logprob: -22.75002670288086
    10. '"id' → logprob: -22.75002670288086

Token 291: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0018272652523592114
    2. 'x' → logprob: -7.001827239990234
    3. 'id' → logprob: -7.126827239990234
    4. '_dict' → logprob: -9.501827239990234
    5. '_id' → logprob: -11.251827239990234
    6. '[id' → logprob: -11.376827239990234
    7. 'dict' → logprob: -11.751827239990234
    8. 'Dict' → logprob: -13.251827239990234
    9. ' id' → logprob: -13.501827239990234
    10. '[x' → logprob: -15.001827239990234

Token 292: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07311111688613892
    2. ':' → logprob: -3.198111057281494
    3. '               ' → logprob: -3.698111057281494
    4. ':return' → logprob: -5.823111057281494
    5. '           ' → logprob: -6.698111057281494
    6. '):
' → logprob: -7.698111057281494
    7. '       ' → logprob: -9.073111534118652
    8. 'return' → logprob: -9.698111534118652
    9. ':

' → logprob: -10.573111534118652
    10. ':
' → logprob: -11.823111534118652

Token 293: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18972375988960266
    2. ' return' → logprob: -1.9397237300872803
    3. 'return' → logprob: -4.189723968505859
    4. '           ' → logprob: -4.314723968505859
    5. '       ' → logprob: -7.939723968505859
    6. '   ' → logprob: -8.93972396850586
    7. '
' → logprob: -10.31472396850586
    8. ':return' → logprob: -11.68972396850586
    9. '{return' → logprob: -12.68972396850586
    10. '	return' → logprob: -12.81472396850586

Token 294: ' return' (ID: 622)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.04888074845075607
    2. 'return' (adapté à ' return') → logprob: -3.0488808155059814
    3. ' id' → logprob: -8.548880577087402
    4. ' return' → logprob: -9.548880577087402
    5. '           ' → logprob: -10.673880577087402
    6. '               ' → logprob: -12.173880577087402
    7. '                   ' → logprob: -17.42388153076172
    8. '   ' → logprob: -17.79888153076172
    9. ' ' → logprob: -18.42388153076172
    10. '            ' → logprob: -18.92388153076172

Token 295: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0015023599844425917
    2. ' id' → logprob: -6.501502513885498
    3. ' ' → logprob: -20.001502990722656
    4. '	id' → logprob: -20.751502990722656
    5. '   ' → logprob: -21.501502990722656
    6. '_id' → logprob: -22.501502990722656
    7. '           ' → logprob: -22.626502990722656
    8. 'x' → logprob: -22.876502990722656
    9. 'idf' → logprob: -22.876502990722656
    10. '(id' → logprob: -23.001502990722656

Token 296: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0022937096655368805
    2. 'id' → logprob: -6.252293586730957
    3. 'x' → logprob: -8.002293586730957
    4. '_id' → logprob: -10.752293586730957
    5. ' id' → logprob: -12.752293586730957
    6. 'dict' → logprob: -13.127293586730957
    7. '_dict' → logprob: -13.377293586730957
    8. '[id' → logprob: -13.877293586730957
    9. '_' → logprob: -15.502293586730957
    10. '(id' → logprob: -15.627293586730957

Token 297: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00030709904967807233
    2. 'self' → logprob: -8.750307083129883
    3. '
' → logprob: -9.375307083129883
    4. '       ' → logprob: -10.375307083129883
    5. '            
' → logprob: -11.125307083129883
    6. ' self' → logprob: -11.375307083129883
    7. '               ' → logprob: -13.375307083129883
    8. '   ' → logprob: -13.375307083129883
    9. 'else' → logprob: -14.500307083129883
    10. '          ' → logprob: -14.625307083129883

Token 298: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003261679667048156
    2. 'self' → logprob: -8.625326156616211
    3. '
' → logprob: -9.125326156616211
    4. '       ' → logprob: -10.375326156616211
    5. ' self' → logprob: -12.500326156616211
    6. '            
' → logprob: -13.250326156616211
    7. '   ' → logprob: -14.500326156616211
    8. '               ' → logprob: -16.12532615661621
    9. '          ' → logprob: -16.62532615661621
    10. '
' → logprob: -17.12532615661621

Token 299: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0016435228753834963
    2. ' self' → logprob: -7.126643657684326
    3. '           ' → logprob: -7.251643657684326
    4. 'parent' → logprob: -9.001643180847168
    5. 'root' → logprob: -12.876643180847168
    6. '   ' → logprob: -12.876643180847168
    7. '       ' → logprob: -14.626643180847168
    8. '	self' → logprob: -15.376643180847168
    9. 'found' → logprob: -15.626643180847168
    10. ' ' → logprob: -16.126644134521484

Token 300: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0007115975022315979
    2. 'parent' → logprob: -7.250711441040039
    3. ' parent' → logprob: -13.875711441040039
    4. '.' → logprob: -14.500711441040039
    5. ' .' → logprob: -16.12571144104004
    6. '	parent' → logprob: -17.00071144104004
    7. '_parent' → logprob: -17.37571144104004
    8. ',parent' → logprob: -17.75071144104004
    9. 'Parent' → logprob: -18.62571144104004
    10. '[parent' → logprob: -19.12571144104004

Token 301: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -1.2664456789934775e-06
    2. 'dict' → logprob: -14.250000953674316
    3. 'Dict' → logprob: -15.500000953674316
    4. '[' → logprob: -16.750001907348633
    5. '_DICT' → logprob: -17.375001907348633
    6. '_arr' → logprob: -18.000001907348633
    7. 'self' → logprob: -18.000001907348633
    8. '_d' → logprob: -18.000001907348633
    9. '_dic' → logprob: -18.125001907348633
    10. '_' → logprob: -18.125001907348633

Token 302: '[id' (ID: 29109)
  Prédit: '[id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[id' → logprob: -5.512236498361744e-07
    2. 'id' → logprob: -14.875000953674316
    3. '[' → logprob: -15.875000953674316
    4. ' [' → logprob: -18.75
    5. '[
' → logprob: -20.5
    6. '[self' → logprob: -20.875
    7. '[i' → logprob: -21.125
    8. '{id' → logprob: -21.25
    9. '(id' → logprob: -21.375
    10. '
' → logprob: -21.75

Token 303: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -5.598092684522271e-05
    2. '_dict' → logprob: -10.125056266784668
    3. 'x' → logprob: -11.250056266784668
    4. 'dict' → logprob: -14.125056266784668
    5. '_id' → logprob: -14.500056266784668
    6. 'Dict' → logprob: -14.625056266784668
    7. '[x' → logprob: -15.125056266784668
    8. '[id' → logprob: -15.250056266784668
    9. '[' → logprob: -15.500056266784668
    10. 'id' → logprob: -16.12505531311035

Token 304: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17804433405399323
    2. ']' → logprob: -1.928044319152832
    3. ']=' → logprob: -4.678044319152832
    4. ' =' → logprob: -4.803044319152832
    5. '[id' → logprob: -9.428044319152832
    6. ')' → logprob: -9.678044319152832
    7. ')=' → logprob: -11.553044319152832
    8. '[' → logprob: -12.678044319152832
    9. '=id' → logprob: -12.678044319152832
    10. '[self' → logprob: -14.803044319152832

Token 305: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019286326132714748
    2. ' =' → logprob: -6.251928806304932
    3. '＝' → logprob: -19.626928329467773
    4. '=self' → logprob: -19.751928329467773
    5. '=
' → logprob: -20.626928329467773
    6. '=

' → logprob: -20.626928329467773
    7. ')' → logprob: -20.876928329467773
    8. ')=' → logprob: -21.126928329467773
    9. ']=' → logprob: -21.251928329467773
    10. '.=' → logprob: -21.751928329467773

Token 306: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001170460251159966
    2. ' self' → logprob: -6.751170635223389
    3. '(self' → logprob: -15.62617015838623
    4. '[self' → logprob: -16.626171112060547
    5. '           ' → logprob: -18.876171112060547
    6. '	self' → logprob: -18.876171112060547
    7. '=self' → logprob: -19.251171112060547
    8. '```' → logprob: -20.126171112060547
    9. ' ' → logprob: -20.876171112060547
    10. '       ' → logprob: -21.251171112060547

Token 307: '.find' (ID: 4231)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.029809851199388504
    2. 'self' → logprob: -3.5298099517822266
    3. ' self' → logprob: -10.654809951782227
    4. '.find' → logprob: -10.904809951782227
    5. ' find' → logprob: -11.029809951782227
    6. '[self' → logprob: -14.529809951782227
    7. '(self' → logprob: -14.779809951782227
    8. 'def' → logprob: -16.279809951782227
    9. '(find' → logprob: -16.529809951782227
    10. ')find' → logprob: -17.029809951782227

Token 308: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003368926409166306
    2. '(' → logprob: -8.000336647033691
    3. 'self' → logprob: -13.750336647033691
    4. '(
' → logprob: -15.000336647033691
    5. ' (' → logprob: -18.000337600708008
    6. '[self' → logprob: -18.375337600708008
    7. ' self' → logprob: -19.125337600708008
    8. '(

' → logprob: -19.250337600708008
    9. '```' → logprob: -20.000337600708008
    10. '((' → logprob: -20.500337600708008

Token 309: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0008208265644498169
    2. 'parent' → logprob: -7.125820636749268
    3. 'self' → logprob: -11.625821113586426
    4. '_parent' → logprob: -12.750821113586426
    5. '(parent' → logprob: -13.375821113586426
    6. ' parent' → logprob: -13.375821113586426
    7. '(self' → logprob: -14.250821113586426
    8. '.self' → logprob: -14.875821113586426
    9. '[parent' → logprob: -16.37582015991211
    10. '.' → logprob: -16.50082015991211

Token 310: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -6.73052782076411e-05
    2. 'Dict' → logprob: -9.875067710876465
    3. 'dict' → logprob: -11.375067710876465
    4. 'self' → logprob: -13.000067710876465
    5. '[self' → logprob: -14.000067710876465
    6. '_arr' → logprob: -14.625067710876465
    7. '_DICT' → logprob: -15.625067710876465
    8. 'arr' → logprob: -15.875067710876465
    9. 'id' → logprob: -16.75006675720215
    10. '_id' → logprob: -17.00006675720215

Token 311: '[id' (ID: 29109)
  Prédit: '[id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[id' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.500000953674316
    3. '(id' → logprob: -15.250000953674316
    4. ' [' → logprob: -17.75
    5. 'id' → logprob: -18.75
    6. '[self' → logprob: -18.875
    7. '[
' → logprob: -19.625
    8. '```' → logprob: -20.125
    9. '{id' → logprob: -20.5
    10. ' ' → logprob: -21.25

Token 312: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.006315531209111214
    2. '_dict' → logprob: -5.1313157081604
    3. '[id' → logprob: -9.006315231323242
    4. 'x' → logprob: -9.131315231323242
    5. 'id' → logprob: -9.631315231323242
    6. 'dict' → logprob: -10.256315231323242
    7. '_id' → logprob: -10.756315231323242
    8. '[x' → logprob: -10.756315231323242
    9. 'Dict' → logprob: -12.006315231323242
    10. '[' → logprob: -13.756315231323242

Token 313: '])
' (ID: 5169)
  Prédit: '[id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[id' → logprob: -1.0206720617134124e-05
    2. '[' → logprob: -11.62501049041748
    3. '(id' → logprob: -14.87501049041748
    4. 'id' → logprob: -15.00001049041748
    5. '   ' → logprob: -15.37501049041748
    6. ']' → logprob: -16.000009536743164
    7. ' [' → logprob: -16.125009536743164
    8. '][' → logprob: -16.750009536743164
    9. '])' → logprob: -17.125009536743164
    10. '```' → logprob: -17.250009536743164

Token 314: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26482415199279785
    2. '       ' → logprob: -2.389824151992798
    3. 'return' → logprob: -2.889824151992798
    4. ' return' → logprob: -3.139824151992798
    5. '   ' → logprob: -3.264824151992798
    6. '	return' → logprob: -5.889823913574219
    7. '(self' → logprob: -7.889823913574219
    8. '(' → logprob: -8.514823913574219
    9. '               ' → logprob: -9.014823913574219
    10. '	   ' → logprob: -9.389823913574219

Token 315: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014494773931801319
    2. ' return' → logprob: -4.264494895935059
    3. '           ' → logprob: -8.014494895935059
    4. '       ' → logprob: -14.764494895935059
    5. '   ' → logprob: -16.264493942260742
    6. '	return' → logprob: -16.889493942260742
    7. 'self' → logprob: -19.014493942260742
    8. '               ' → logprob: -19.264493942260742
    9. '          ' → logprob: -19.264493942260742
    10. '```' → logprob: -19.514493942260742

Token 316: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0380416102707386
    2. ' self' → logprob: -3.288041591644287
    3. '(self' → logprob: -16.038042068481445
    4. '[self' → logprob: -17.538042068481445
    5. '	self' → logprob: -18.038042068481445
    6. '           ' → logprob: -19.288042068481445
    7. ' ' → logprob: -19.913042068481445
    8. 's' → logprob: -20.038042068481445
    9. ' ' → logprob: -20.038042068481445
    10. 'Self' → logprob: -20.788042068481445

Token 317: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0001234428636962548
    2. 'parent' → logprob: -9.000123023986816
    3. '_parent' → logprob: -17.250123977661133
    4. '[parent' → logprob: -18.375123977661133
    5. ' parent' → logprob: -18.750123977661133
    6. '	parent' → logprob: -19.000123977661133
    7. ',parent' → logprob: -19.375123977661133
    8. '.' → logprob: -19.625123977661133
    9. '.Parent' → logprob: -20.000123977661133
    10. 'Parent' → logprob: -20.250123977661133

Token 318: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -9.710618905955926e-05
    2. 'dict' → logprob: -9.250097274780273
    3. 'Dict' → logprob: -14.250097274780273
    4. 'id' → logprob: -15.250097274780273
    5. '_id' → logprob: -17.750097274780273
    6. '_DICT' → logprob: -17.750097274780273
    7. 'arr' → logprob: -18.750097274780273
    8. '[' → logprob: -19.375097274780273
    9. '```' → logprob: -19.500097274780273
    10. '[id' → logprob: -19.625097274780273

Token 319: '[id' (ID: 29109)
  Prédit: '[id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[id' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -14.875
    3. 'id' → logprob: -18.375
    4. '{id' → logprob: -18.75
    5. '[self' → logprob: -18.875
    6. '(id' → logprob: -19.625
    7. '[idx' → logprob: -20.0
    8. '```' → logprob: -20.25
    9. '[key' → logprob: -20.75
    10. '[
' → logprob: -21.0

Token 320: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00014168102643452585
    2. 'x' → logprob: -9.250142097473145
    3. '_dict' → logprob: -10.250142097473145
    4. 'dict' → logprob: -12.625142097473145
    5. '_id' → logprob: -13.625142097473145
    6. '[id' → logprob: -13.750142097473145
    7. '[x' → logprob: -14.000142097473145
    8. '[' → logprob: -14.125142097473145
    9. 'Dict' → logprob: -14.375142097473145
    10. 'id' → logprob: -14.375142097473145

Token 321: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06707480549812317
    2. ']' → logprob: -2.817074775695801
    3. '}' → logprob: -5.817074775695801
    4. '<|end|>' → logprob: -6.192074775695801
    5. '       ' → logprob: -9.9420747756958
    6. '   ' → logprob: -12.1920747756958
    7. ' ' → logprob: -12.8170747756958
    8. '[' → logprob: -12.9420747756958
    9. '<|end|>' → logprob: -13.1920747756958
    10. ' )' → logprob: -13.1920747756958

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39224427938461304
    2. '<|end|>' → logprob: -1.1422443389892578
    3. '    
' → logprob: -6.517244338989258
    4. '<|end|>' → logprob: -6.642244338989258
    5. '
' → logprob: -7.392244338989258
    6. 'def' → logprob: -7.892244338989258
    7. ' 
' → logprob: -8.017244338989258
    8. '```' → logprob: -8.142244338989258
    9. '  
' → logprob: -8.392244338989258
    10. ')' → logprob: -8.517244338989258

Token 323: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.13950876891613007
    2. '   ' → logprob: -2.3895087242126465
    3. ' def' → logprob: -3.2645087242126465
    4. '    
' → logprob: -8.639509201049805
    5. '	def' → logprob: -9.639509201049805
    6. '
' → logprob: -10.514509201049805
    7. ' 
' → logprob: -10.889509201049805
    8. ' ' → logprob: -11.639509201049805
    9. '  ' → logprob: -12.139509201049805
    10. '  
' → logprob: -12.264509201049805

Token 324: ' unite' (ID: 96146)
  Prédit: ' union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.14406311511993408
    2. 'union' → logprob: -2.1440629959106445
    3. ' unite' → logprob: -4.1440629959106445
    4. '_union' → logprob: -7.2690629959106445
    5. 'un' → logprob: -8.269062995910645
    6. ' merge' → logprob: -9.144062995910645
    7. 'merge' → logprob: -10.019062995910645
    8. ' unify' → logprob: -11.394062995910645
    9. ' un' → logprob: -12.019062995910645
    10. ' join' → logprob: -13.769062995910645

Token 325: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.1756367712223437e-05
    2. '(' → logprob: -11.375011444091797
    3. '(s' → logprob: -16.500011444091797
    4. ' (' → logprob: -17.375011444091797
    5. '(
' → logprob: -18.000011444091797
    6. 'self' → logprob: -18.375011444091797
    7. '(this' → logprob: -18.625011444091797
    8. '(sel' → logprob: -19.250011444091797
    9. '(Self' → logprob: -19.625011444091797
    10. '   ' → logprob: -20.125011444091797

Token 326: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5761996507644653
    2. ',' → logprob: -0.8261996507644653
    3. ',self' → logprob: -8.701199531555176
    4. 'self' → logprob: -10.451199531555176
    5. ')' → logprob: -10.576199531555176
    6. ')(' → logprob: -11.076199531555176
    7. '(' → logprob: -11.826199531555176
    8. '       ' → logprob: -11.951199531555176
    9. ' (' → logprob: -13.201199531555176
    10. ',
' → logprob: -13.451199531555176

Token 327: ' id' (ID: 1211)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5518825650215149
    2. ' x' → logprob: -1.4268825054168701
    3. 'self' → logprob: -2.67688250541687
    4. 'id' → logprob: -2.80188250541687
    5. 'a' → logprob: -4.176882743835449
    6. ' id' → logprob: -4.301882743835449
    7. ' self' → logprob: -4.426882743835449
    8. 'u' → logprob: -4.926882743835449
    9. ' u' → logprob: -5.426882743835449
    10. ' a' → logprob: -6.426882743835449

Token 328: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0003063838230445981
    2. '_a' → logprob: -8.375306129455566
    3. 'x' → logprob: -10.375306129455566
    4. '1' → logprob: -11.125306129455566
    5. 'a' → logprob: -11.500306129455566
    6. '_' → logprob: -11.625306129455566
    7. 'self' → logprob: -12.875306129455566
    8. '_,' → logprob: -13.625306129455566
    9. '_y' → logprob: -13.625306129455566
    10. ',' → logprob: -14.000306129455566

Token 329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8624639324116288e-06
    2. ' ,' → logprob: -13.375001907348633
    3. ',
' → logprob: -16.375001907348633
    4. ',id' → logprob: -16.375001907348633
    5. '   ' → logprob: -18.625001907348633
    6. '_,' → logprob: -19.125001907348633
    7. '),' → logprob: -19.125001907348633
    8. ',

' → logprob: -19.625001907348633
    9. '1' → logprob: -20.000001907348633
    10. '‌,' → logprob: -20.500001907348633

Token 330: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.6931517124176025
    2. ' id' → logprob: -0.6931517124176025
    3. '   ' → logprob: -13.568151473999023
    4. '_id' → logprob: -13.693151473999023
    5. '<|end|>' → logprob: -14.068151473999023
    6. ' ' → logprob: -14.568151473999023
    7. '	id' → logprob: -14.943151473999023
    8. '    ' → logprob: -15.943151473999023
    9. '  ' → logprob: -16.568151473999023
    10. '"id' → logprob: -16.818151473999023

Token 331: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -1.8193366486229934e-05
    2. 'y' → logprob: -11.125018119812012
    3. '_' → logprob: -13.500018119812012
    4. '_x' → logprob: -13.625018119812012
    5. ')' → logprob: -15.125018119812012
    6. '   ' → logprob: -15.250018119812012
    7. '```' → logprob: -16.250019073486328
    8. ' ' → logprob: -17.250019073486328
    9. '	y' → logprob: -17.375019073486328
    10. ' _' → logprob: -17.750019073486328

Token 332: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31340181827545166
    2. '):
' → logprob: -1.3134018182754517
    3. '):
' → logprob: -9.43840217590332
    4. ')' → logprob: -9.81340217590332
    5. '):

' → logprob: -12.56340217590332
    6. ' ):' → logprob: -14.06340217590332
    7. '   ' → logprob: -14.68840217590332
    8. ':' → logprob: -15.18840217590332
    9. ' ):
' → logprob: -15.56340217590332
    10. '"):' → logprob: -16.06340217590332

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04116222262382507
    2. ':' → logprob: -3.5411622524261475
    3. '):' → logprob: -5.041162014007568
    4. '<|end|>' → logprob: -6.041162014007568
    5. ')' → logprob: -7.166162014007568
    6. ',' → logprob: -7.291162014007568
    7. '):
' → logprob: -7.291162014007568
    8. '   ' → logprob: -8.666162490844727
    9. ':
' → logprob: -9.791162490844727
    10. '<|end|>' → logprob: -10.416162490844727

Token 334: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0032859710045158863
    2. 'rx' → logprob: -6.128285884857178
    3. 'root' → logprob: -7.628285884857178
    4. 'px' → logprob: -7.878285884857178
    5. 'id' → logprob: -8.753286361694336
    6. 'if' → logprob: -10.878286361694336
    7. 'xr' → logprob: -11.253286361694336
    8. '   ' → logprob: -11.378286361694336
    9. '       ' → logprob: -11.378286361694336
    10. 'fx' → logprob: -12.128286361694336

Token 335: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.09237013757228851
    2. 'root' → logprob: -2.59237003326416
    3. ' =' → logprob: -4.46737003326416
    4. 'r' → logprob: -7.21737003326416
    5. '=' → logprob: -7.59237003326416
    6. '_parent' → logprob: -7.84237003326416
    7. '_x' → logprob: -9.71737003326416
    8. 'x' → logprob: -10.09237003326416
    9. 'Root' → logprob: -10.21737003326416
    10. '_r' → logprob: -10.46737003326416

Token 336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16025926172733307
    2. '=' → logprob: -1.9102592468261719
    3. ',' → logprob: -11.035259246826172
    4. '=self' → logprob: -11.535259246826172
    5. '=find' → logprob: -12.285259246826172
    6. '=root' → logprob: -12.660259246826172
    7. '_root' → logprob: -14.535259246826172
    8. 'root' → logprob: -14.535259246826172
    9. ' ' → logprob: -15.285259246826172
    10. '=

' → logprob: -16.910259246826172

Token 337: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008616108447313309
    2. ' self' → logprob: -4.758615970611572
    3. '       ' → logprob: -13.75861644744873
    4. '(self' → logprob: -14.75861644744873
    5. '	self' → logprob: -16.883615493774414
    6. '   ' → logprob: -17.383615493774414
    7. '<|end|>' → logprob: -17.508615493774414
    8. '[self' → logprob: -18.383615493774414
    9. '        ' → logprob: -18.883615493774414
    10. '=self' → logprob: -19.133615493774414

Token 338: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -1.6405310816480778e-05
    2. '.' → logprob: -11.375016212463379
    3. 'find' → logprob: -12.250016212463379
    4. '.findall' → logprob: -15.875016212463379
    5. '=find' → logprob: -16.875017166137695
    6. '	find' → logprob: -17.750017166137695
    7. ' .' → logprob: -17.875017166137695
    8. '_find' → logprob: -19.125017166137695
    9. ')find' → logprob: -19.500017166137695
    10. ' find' → logprob: -19.750017166137695

Token 339: '(id' (ID: 6589)
  Prédit: '(id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -4.60414821645827e-06
    2. '(' → logprob: -12.500004768371582
    3. '(x' → logprob: -14.625004768371582
    4. 'id' → logprob: -15.000004768371582
    5. '(
' → logprob: -19.125003814697266
    6. ' (' → logprob: -19.375003814697266
    7. '=id' → logprob: -19.375003814697266
    8. ',id' → logprob: -19.500003814697266
    9. '[id' → logprob: -20.000003814697266
    10. ' id' → logprob: -20.000003814697266

Token 340: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -5.061676347395405e-05
    2. '_y' → logprob: -10.00005054473877
    3. '_' → logprob: -12.87505054473877
    4. 'x' → logprob: -13.62505054473877
    5. '(x' → logprob: -14.25005054473877
    6. '_)' → logprob: -15.25005054473877
    7. ')_' → logprob: -15.62505054473877
    8. ')' → logprob: -15.87505054473877
    9. '(' → logprob: -17.625051498413086
    10. '(_' → logprob: -18.000051498413086

Token 341: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001931970240548253
    2. ')
' → logprob: -6.251932144165039
    3. ' )' → logprob: -12.876932144165039
    4. ')
' → logprob: -14.376932144165039
    5. ' )
' → logprob: -16.62693214416504
    6. ')

' → logprob: -17.00193214416504
    7. ')#' → logprob: -19.00193214416504
    8. '),' → logprob: -19.25193214416504
    9. '   ' → logprob: -19.25193214416504
    10. ' ' → logprob: -19.62693214416504

Token 342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13205693662166595
    2. '<|end|>' → logprob: -2.132056951522827
    3. ')' → logprob: -5.757056713104248
    4. '<|end|>' → logprob: -8.132057189941406
    5. '        
' → logprob: -8.257057189941406
    6. ',' → logprob: -8.257057189941406
    7. ' ' → logprob: -8.382057189941406
    8. '#' → logprob: -8.507057189941406
    9. ' if' → logprob: -9.132057189941406
    10. '```' → logprob: -9.257057189941406

Token 343: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.023252464830875397
    2. ' y' → logprob: -3.773252487182617
    3. '       ' → logprob: -11.898252487182617
    4. '   ' → logprob: -16.398252487182617
    5. '	y' → logprob: -16.648252487182617
    6. 'x' → logprob: -19.398252487182617
    7. ' ' → logprob: -20.398252487182617
    8. '        ' → logprob: -21.148252487182617
    9. '           ' → logprob: -21.148252487182617
    10. '_y' → logprob: -21.273252487182617

Token 344: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -1.4736459888808895e-05
    2. 'root' → logprob: -11.250014305114746
    3. '_' → logprob: -14.750014305114746
    4. ' root' → logprob: -15.125014305114746
    5. 'Root' → logprob: -15.125014305114746
    6. '_ROOT' → logprob: -15.625014305114746
    7. ')_' → logprob: -15.750014305114746
    8. '_y' → logprob: -15.750014305114746
    9. '_ro' → logprob: -16.375015258789062
    10. '_user' → logprob: -17.000015258789062

Token 345: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016145335510373116
    2. '=' → logprob: -4.1411452293396
    3. ')' → logprob: -9.266145706176758
    4. '=self' → logprob: -12.141145706176758
    5. ' =
' → logprob: -12.641145706176758
    6. ' ' → logprob: -12.766145706176758
    7. '<|end|>' → logprob: -13.516145706176758
    8. '       ' → logprob: -13.766145706176758
    9. 'self' → logprob: -14.766145706176758
    10. ',' → logprob: -15.016145706176758

Token 346: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.033721547573804855
    2. ' self' → logprob: -3.408721446990967
    3. '(self' → logprob: -9.658721923828125
    4. '<|end|>' → logprob: -12.158721923828125
    5. '       ' → logprob: -13.158721923828125
    6. '[self' → logprob: -13.283721923828125
    7. '	self' → logprob: -14.033721923828125
    8. '=self' → logprob: -14.283721923828125
    9. ' ' → logprob: -14.658721923828125
    10. 's' → logprob: -14.783721923828125

Token 347: '.find' (ID: 4231)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.57597416639328
    2. '.find' → logprob: -0.82597416639328
    3. '_find' → logprob: -11.950974464416504
    4. '.findall' → logprob: -12.075974464416504
    5. '.' → logprob: -12.200974464416504
    6. '	find' → logprob: -12.325974464416504
    7. '(find' → logprob: -12.575974464416504
    8. '=find' → logprob: -12.700974464416504
    9. '```' → logprob: -13.325974464416504
    10. ' find' → logprob: -13.325974464416504

Token 348: '(id' (ID: 6589)
  Prédit: '(id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -0.0015116469003260136
    2. 'id' → logprob: -6.501511573791504
    3. '[id' → logprob: -12.001511573791504
    4. ' id' → logprob: -13.251511573791504
    5. '=id' → logprob: -14.751511573791504
    6. '{id' → logprob: -15.251511573791504
    7. '	id' → logprob: -15.626511573791504
    8. '(' → logprob: -15.876511573791504
    9. ',id' → logprob: -16.12651252746582
    10. ')' → logprob: -16.25151252746582

Token 349: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0010392407421022654
    2. 'y' → logprob: -6.876039028167725
    3. '_x' → logprob: -13.126039505004883
    4. ')' → logprob: -13.126039505004883
    5. '_' → logprob: -14.251039505004883
    6. '```' → logprob: -14.626039505004883
    7. 'Y' → logprob: -14.876039505004883
    8. 'root' → logprob: -15.251039505004883
    9. ' y' → logprob: -16.126039505004883
    10. '	y' → logprob: -16.501039505004883

Token 350: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008617527782917023
    2. ')
' → logprob: -4.758617401123047
    3. '       ' → logprob: -13.008617401123047
    4. ')
' → logprob: -15.133617401123047
    5. ' )' → logprob: -15.133617401123047
    6. ')

' → logprob: -16.133617401123047
    7. '   ' → logprob: -16.633617401123047
    8. '),' → logprob: -17.883617401123047
    9. '):
' → logprob: -18.008617401123047
    10. ' )
' → logprob: -18.258617401123047

Token 351: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 352: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5271247029304504
    2. ' if' → logprob: -1.1521246433258057
    3. '
' → logprob: -3.1521246433258057
    4. 'if' (adapté à ' if') → logprob: -3.5271246433258057
    5. '	if' → logprob: -4.527124881744385
    6. '<|end|>' → logprob: -5.527124881744385
    7. ' 
' → logprob: -6.652124881744385
    8. '   ' → logprob: -6.777124881744385
    9. '        
' → logprob: -6.902124881744385
    10. '        ' → logprob: -7.277124881744385

Token 353: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.47407785058021545
    2. 'x' → logprob: -0.9740778207778931
    3. ' ' → logprob: -14.849078178405762
    4. '	x' → logprob: -15.099078178405762
    5. '   ' → logprob: -16.349077224731445
    6. '(x' → logprob: -16.599077224731445
    7. ' ' → logprob: -18.099077224731445
    8. '"x' → logprob: -18.474077224731445
    9. '(' → logprob: -18.974077224731445
    10. 'xref' → logprob: -19.099077224731445

Token 354: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -2.6776029699249193e-05
    2. 'root' → logprob: -10.62502670288086
    3. '_ro' → logprob: -13.87502670288086
    4. '_' → logprob: -14.25002670288086
    5. 'Root' → logprob: -15.25002670288086
    6. '_ROOT' → logprob: -16.12502670288086
    7. ' root' → logprob: -16.37502670288086
    8. '-root' → logprob: -16.62502670288086
    9. '```' → logprob: -16.62502670288086
    10. '__' → logprob: -16.87502670288086

Token 355: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759458541870117
    2. ' ==' → logprob: -0.8259458541870117
    3. '=' → logprob: -12.950945854187012
    4. '==
' → logprob: -13.950945854187012
    5. '!=' → logprob: -13.950945854187012
    6. ' !=' → logprob: -14.325945854187012
    7. ')==' → logprob: -14.575945854187012
    8. ']==' → logprob: -14.700945854187012
    9. '===' → logprob: -14.825945854187012
    10. ' ' → logprob: -16.450946807861328

Token 356: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03804149478673935
    2. ' y' → logprob: -3.288041591644287
    3. '	y' → logprob: -16.788042068481445
    4. ' ' → logprob: -18.038042068481445
    5. '   ' → logprob: -18.413042068481445
    6. ''y' → logprob: -20.163042068481445
    7. '    ' → logprob: -20.288042068481445
    8. '       ' → logprob: -20.913042068481445
    9. '  ' → logprob: -20.913042068481445
    10. ' ' → logprob: -21.413042068481445

Token 357: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -2.2723104848410003e-05
    2. 'root' → logprob: -10.750022888183594
    3. '_ro' → logprob: -14.375022888183594
    4. '_' → logprob: -15.250022888183594
    5. ' root' → logprob: -16.000022888183594
    6. 'oot' → logprob: -16.375022888183594
    7. 'Root' → logprob: -17.250022888183594
    8. '_ROOT' → logprob: -17.750022888183594
    9. '_y' → logprob: -17.875022888183594
    10. '_r' → logprob: -18.625022888183594

Token 358: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024398474022746086
    2. ':
' → logprob: -3.7743985652923584
    3. ':return' → logprob: -6.774398326873779
    4. ' :' → logprob: -12.649398803710938
    5. '   ' → logprob: -12.774398803710938
    6. '       ' → logprob: -13.024398803710938
    7. ' :
' → logprob: -15.024398803710938
    8. ' return' → logprob: -15.399398803710938
    9. 'return' → logprob: -15.649398803710938
    10. '           ' → logprob: -15.774398803710938

Token 359: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015106932260096073
    2. ':' → logprob: -7.6265106201171875
    3. ':
' → logprob: -8.001510620117188
    4. ' return' → logprob: -8.376510620117188
    5. ':return' → logprob: -8.376510620117188
    6. '       ' → logprob: -9.251510620117188
    7. 'return' → logprob: -9.501510620117188
    8. '
' → logprob: -10.376510620117188
    9. '   ' → logprob: -11.251510620117188
    10. ',' → logprob: -13.251510620117188

Token 360: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13643011450767517
    2. ' return' → logprob: -2.636430025100708
    3. '           ' → logprob: -2.886430025100708
    4. '
' → logprob: -9.136429786682129
    5. '               ' → logprob: -11.136429786682129
    6. '	return' → logprob: -11.136429786682129
    7. '       ' → logprob: -13.511429786682129
    8. ':return' → logprob: -13.761429786682129
    9. '{return' → logprob: -14.386429786682129
    10. '   ' → logprob: -14.386429786682129

Token 361: '
' (ID: 198)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.9415287971496582
    2. '
' → logprob: -1.1915287971496582
    3. 'False' → logprob: -1.1915287971496582
    4. '       ' → logprob: -7.316528797149658
    5. ' None' → logprob: -7.566528797149658
    6. ' True' → logprob: -7.566528797149658
    7. '        
' → logprob: -8.1915283203125
    8. 'True' → logprob: -8.9415283203125
    9. ' 
' → logprob: -8.9415283203125
    10. 'None' → logprob: -9.0665283203125

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43285199999809265
    2. '
' → logprob: -1.057852029800415
    3. '        
' → logprob: -5.682851791381836
    4. '   ' → logprob: -8.682851791381836
    5. '  
' → logprob: -8.807851791381836
    6. ' if' → logprob: -9.182851791381836
    7. ' 
' → logprob: -9.432851791381836
    8. '    
' → logprob: -9.432851791381836
    9. '```' → logprob: -9.807851791381836
    10. 'if' → logprob: -9.932851791381836

Token 363: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13155773282051086
    2. '       ' → logprob: -2.1315577030181885
    3. ' if' → logprob: -5.381557941436768
    4. '```' → logprob: -12.25655746459961
    5. '   ' → logprob: -12.38155746459961
    6. '	if' → logprob: -12.50655746459961
    7. '        
' → logprob: -12.50655746459961
    8. '#' → logprob: -14.13155746459961
    9. '
' → logprob: -14.50655746459961
    10. 'If' → logprob: -14.88155746459961

Token 364: ' hasattr' (ID: 75562)
  Prédit: '(has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(has' → logprob: -0.04794466495513916
    2. ' hasattr' → logprob: -3.7979445457458496
    3. 'has' → logprob: -4.04794454574585
    4. ' (' → logprob: -5.04794454574585
    5. '(self' → logprob: -8.547945022583008
    6. '   ' → logprob: -9.797945022583008
    7. '((' → logprob: -9.797945022583008
    8. ' has' → logprob: -10.297945022583008
    9. ' getattr' → logprob: -10.297945022583008
    10. 'self' → logprob: -10.422945022583008

Token 365: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07891898602247238
    2. 'self' → logprob: -2.578918933868408
    3. ' self' → logprob: -10.953919410705566
    4. 's' → logprob: -12.703919410705566
    5. '=self' → logprob: -13.078919410705566
    6. '[self' → logprob: -13.203919410705566
    7. '	self' → logprob: -13.828919410705566
    8. '   ' → logprob: -14.203919410705566
    9. '
' → logprob: -14.453919410705566
    10. 't' → logprob: -14.453919410705566

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.700132997939363e-05
    2. 'self' → logprob: -11.000017166137695
    3. ' ,' → logprob: -16.375017166137695
    4. ',self' → logprob: -17.000017166137695
    5. 'class' → logprob: -17.375017166137695
    6. 'parent' → logprob: -17.750017166137695
    7. ' self' → logprob: -18.250017166137695
    8. 's' → logprob: -18.250017166137695
    9. 'object' → logprob: -18.875017166137695
    10. ',parent' → logprob: -18.875017166137695

Token 367: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0007130279554985464
    2. ' "' → logprob: -7.250712871551514
    3. ' ' → logprob: -13.875713348388672
    4. '"user' → logprob: -14.500713348388672
    5. '"name' → logprob: -14.750713348388672
    6. '   ' → logprob: -14.875713348388672
    7. '"class' → logprob: -15.375713348388672
    8. '"value' → logprob: -15.625713348388672
    9. '"group' → logprob: -16.500713348388672
    10. ''' → logprob: -17.000713348388672

Token 368: 'parent' (ID: 4903)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.0003192578151356429
    2. ' rank' → logprob: -8.625319480895996
    3. 'parent' → logprob: -9.375319480895996
    4. 'size' → logprob: -9.875319480895996
    5. ' ' → logprob: -13.500319480895996
    6. '   ' → logprob: -14.625319480895996
    7. '_rank' → logprob: -14.750319480895996
    8. '(rank' → logprob: -15.125319480895996
    9. '.rank' → logprob: -15.750319480895996
    10. '
' → logprob: -15.750319480895996

Token 369: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -5.438573680294212e-06
    2. '_' → logprob: -13.125005722045898
    3. 'arr' → logprob: -13.250005722045898
    4. '_dict' → logprob: -13.875005722045898
    5. '_rank' → logprob: -14.875005722045898
    6. '_array' → logprob: -15.750005722045898
    7. '_vec' → logprob: -18.5000057220459
    8. '##_' → logprob: -18.5000057220459
    9. '"_' → logprob: -18.5000057220459
    10. '	arr' → logprob: -18.7500057220459

Token 370: '"):
' (ID: 33645)
  Prédit: '"):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"):
' → logprob: -0.7328366637229919
    2. '):
' → logprob: -0.8578366637229919
    3. '")' → logprob: -2.8578367233276367
    4. ')' → logprob: -3.4828367233276367
    5. '"):' → logprob: -5.232836723327637
    6. '):' → logprob: -6.607836723327637
    7. '"):
' → logprob: -8.857836723327637
    8. ''):
' → logprob: -8.982836723327637
    9. '):
' → logprob: -9.107836723327637
    10. '"' → logprob: -9.982836723327637

Token 371: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014760497026145458
    2. ' if' → logprob: -4.389760494232178
    3. 'if' → logprob: -6.264760494232178
    4. '           ' → logprob: -8.139760971069336
    5. '   ' → logprob: -10.639760971069336
    6. '```' → logprob: -11.889760971069336
    7. '        
' → logprob: -11.889760971069336
    8. ',' → logprob: -12.014760971069336
    9. '
' → logprob: -12.264760971069336
    10. ' ' → logprob: -13.389760971069336

Token 372: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00016671013145241886
    2. '       ' → logprob: -9.500166893005371
    3. ' if' → logprob: -9.500166893005371
    4. '           ' → logprob: -11.750166893005371
    5. 'rank' → logprob: -11.750166893005371
    6. '#' → logprob: -14.375166893005371
    7. '   ' → logprob: -14.875166893005371
    8. '```' → logprob: -16.250165939331055
    9. 'x' → logprob: -17.000165939331055
    10. '	if' → logprob: -17.000165939331055

Token 373: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0431138351559639
    2. ' self' → logprob: -3.168113946914673
    3. '   ' → logprob: -9.918113708496094
    4. '           ' → logprob: -10.418113708496094
    5. '(self' → logprob: -10.793113708496094
    6. '	self' → logprob: -12.043113708496094
    7. '       ' → logprob: -12.793113708496094
    8. '[self' → logprob: -13.418113708496094
    9. ' ' → logprob: -13.543113708496094
    10. '  ' → logprob: -14.168113708496094

Token 374: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -6.392202976712724e-06
    2. 'rank' → logprob: -12.000006675720215
    3. '_rank' → logprob: -16.0000057220459
    4. ' rank' → logprob: -17.1250057220459
    5. '.r' → logprob: -17.8750057220459
    6. 'Rank' → logprob: -18.8750057220459
    7. '.size' → logprob: -19.2500057220459
    8. ' .' → logprob: -19.3750057220459
    9. '.' → logprob: -19.5000057220459
    10. '(rank' → logprob: -20.2500057220459

Token 375: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -4.4849443838757e-06
    2. 'arr' → logprob: -12.750004768371582
    3. '[x' → logprob: -13.750004768371582
    4. '[arr' → logprob: -15.125004768371582
    5. '[_' → logprob: -16.500003814697266
    6. '	arr' → logprob: -16.750003814697266
    7. '_ar' → logprob: -18.250003814697266
    8. 'Arr' → logprob: -18.500003814697266
    9. '_' → logprob: -18.625003814697266
    10. ' arr' → logprob: -19.500003814697266

Token 376: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.320199877838604e-07
    2. 'x' → logprob: -15.875
    3. ' x' → logprob: -16.0
    4. '[' → logprob: -16.375
    5. ' [' → logprob: -16.75
    6. '[self' → logprob: -18.625
    7. '(x' → logprob: -19.625
    8. '   ' → logprob: -20.5
    9. '[id' → logprob: -20.625
    10. '[y' → logprob: -20.625

Token 377: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -5.157039049663581e-05
    2. 'root' → logprob: -10.000051498413086
    3. '[root' → logprob: -12.375051498413086
    4. '_arr' → logprob: -14.875051498413086
    5. ' root' → logprob: -15.000051498413086
    6. '_x' → logprob: -15.000051498413086
    7. 'Root' → logprob: -15.250051498413086
    8. '_ro' → logprob: -15.750051498413086
    9. '_' → logprob: -15.875051498413086
    10. '_ROOT' → logprob: -16.000051498413086

Token 378: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.47764211893081665
    2. ']' → logprob: -1.2276420593261719
    3. ' <' → logprob: -2.977642059326172
    4. ']<' → logprob: -3.352642059326172
    5. '>' → logprob: -8.477642059326172
    6. ' ' → logprob: -8.602642059326172
    7. '[' → logprob: -8.602642059326172
    8. ')' → logprob: -9.102642059326172
    9. ' ]' → logprob: -9.727642059326172
    10. ')<' → logprob: -9.727642059326172

Token 379: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.25195345282554626
    2. ' <' → logprob: -1.5019534826278687
    3. '>' → logprob: -11.376953125
    4. ' ' → logprob: -11.626953125
    5. '   ' → logprob: -14.126953125
    6. ' >' → logprob: -14.126953125
    7. '<class' → logprob: -14.751953125
    8. '[' → logprob: -14.751953125
    9. '<int' → logprob: -15.876953125
    10. '<size' → logprob: -15.876953125

Token 380: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07892294228076935
    2. ' self' → logprob: -2.578922986984253
    3. '=self' → logprob: -11.328923225402832
    4. '           ' → logprob: -11.828923225402832
    5. '	self' → logprob: -12.328923225402832
    6. '[self' → logprob: -12.828923225402832
    7. '(self' → logprob: -12.953923225402832
    8. '=' → logprob: -13.703923225402832
    9. ' ' → logprob: -13.953923225402832
    10. '   ' → logprob: -13.953923225402832

Token 381: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.20178323984146118
    2. 'rank' → logprob: -1.7017831802368164
    3. ' rank' → logprob: -7.951783180236816
    4. '_rank' → logprob: -11.576783180236816
    5. '(rank' → logprob: -12.451783180236816
    6. 'Rank' → logprob: -13.701783180236816
    7. '
' → logprob: -13.826783180236816
    8. '.' → logprob: -14.201783180236816
    9. 'ank' → logprob: -15.201783180236816
    10. ' ' → logprob: -15.326783180236816

Token 382: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.9361264946837764e-07
    2. 'arr' → logprob: -16.0
    3. '[arr' → logprob: -16.875
    4. '	arr' → logprob: -17.75
    5. 'Arr' → logprob: -18.375
    6. ' arr' → logprob: -21.0
    7. '$arr' → logprob: -21.0
    8. '-arr' → logprob: -21.375
    9. '[x' → logprob: -21.625
    10. '_array' → logprob: -21.75

Token 383: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.00027682865038514137
    2. 'y' → logprob: -8.250276565551758
    3. ' y' → logprob: -11.875276565551758
    4. '[' → logprob: -12.125276565551758
    5. '[x' → logprob: -14.625276565551758
    6. '   ' → logprob: -14.625276565551758
    7. '           ' → logprob: -15.000276565551758
    8. '```' → logprob: -15.000276565551758
    9. '[root' → logprob: -15.125276565551758
    10. ' [' → logprob: -15.125276565551758

Token 384: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.0004350797680672258
    2. 'root' → logprob: -7.750434875488281
    3. '[root' → logprob: -13.000434875488281
    4. ' root' → logprob: -14.375434875488281
    5. '```' → logprob: -15.000434875488281
    6. 'Root' → logprob: -15.125434875488281
    7. '_ro' → logprob: -15.125434875488281
    8. '_ROOT' → logprob: -15.500434875488281
    9. '	root' → logprob: -16.75043487548828
    10. ']_' → logprob: -16.87543487548828

Token 385: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.027863968163728714
    2. ']:
' → logprob: -4.1528639793396
    3. ':' → logprob: -4.6528639793396
    4. '):' → logprob: -6.7778639793396
    5. '<|end|>' → logprob: -8.402863502502441
    6. '       ' → logprob: -9.027863502502441
    7. ']' → logprob: -9.152863502502441
    8. ':
' → logprob: -9.152863502502441
    9. '):
' → logprob: -9.277863502502441
    10. '}:' → logprob: -9.652863502502441

Token 386: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21369239687919617
    2. '<|end|>' → logprob: -2.3386924266815186
    3. '           ' → logprob: -2.7136924266815186
    4. 'self' → logprob: -4.4636921882629395
    5. ' self' → logprob: -4.5886921882629395
    6. ',' → logprob: -6.2136921882629395
    7. ':' → logprob: -6.3386921882629395
    8. ':
' → logprob: -7.2136921882629395
    9. ')' → logprob: -7.3386921882629395
    10. '):
' → logprob: -7.4636921882629395

Token 387: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.010478673502802849
    2. '               ' → logprob: -4.885478496551514
    3. ' self' → logprob: -6.135478496551514
    4. '           ' → logprob: -7.510478496551514
    5. '
' → logprob: -9.010478973388672
    6. '[self' → logprob: -11.760478973388672
    7. '                   ' → logprob: -12.385478973388672
    8. '	self' → logprob: -12.510478973388672
    9. '   ' → logprob: -12.760478973388672
    10. 'x' → logprob: -12.885478973388672

Token 388: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.10028894245624542
    2. 'parent' → logprob: -2.3502888679504395
    3. ' parent' → logprob: -9.850289344787598
    4. '_parent' → logprob: -10.850289344787598
    5. '	parent' → logprob: -12.600289344787598
    6. ',parent' → logprob: -12.850289344787598
    7. '.' → logprob: -13.350289344787598
    8. '[parent' → logprob: -13.600289344787598
    9. ' .' → logprob: -14.600289344787598
    10. 'Parent' → logprob: -15.225289344787598

Token 389: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -2.1008713702030946e-06
    2. 'arr' → logprob: -13.500001907348633
    3. '_' → logprob: -15.000001907348633
    4. '[_' → logprob: -16.250001907348633
    5. '"_' → logprob: -16.625001907348633
    6. '_array' → logprob: -17.125001907348633
    7. '	arr' → logprob: -17.375001907348633
    8. '[' → logprob: -17.750001907348633
    9. '[arr' → logprob: -17.875001907348633
    10. '_dict' → logprob: -18.000001907348633

Token 390: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.0802738870552275e-05
    2. '[x' → logprob: -11.87501049041748
    3. '[' → logprob: -12.87501049041748
    4. 'y' → logprob: -14.00001049041748
    5. '[self' → logprob: -16.125011444091797
    6. ' [' → logprob: -16.500011444091797
    7. '][' → logprob: -16.500011444091797
    8. '```' → logprob: -17.125011444091797
    9. '   ' → logprob: -18.250011444091797
    10. ')[' → logprob: -18.625011444091797

Token 391: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -2.7848862373502925e-05
    2. 'root' → logprob: -10.500027656555176
    3. '[root' → logprob: -16.500028610229492
    4. '_ROOT' → logprob: -17.250028610229492
    5. 'Root' → logprob: -17.625028610229492
    6. '_ro' → logprob: -17.750028610229492
    7. ' root' → logprob: -17.750028610229492
    8. '_' → logprob: -18.000028610229492
    9. '	root' → logprob: -19.375028610229492
    10. '```' → logprob: -20.000028610229492

Token 392: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11684433370828629
    2. ' =' → logprob: -3.241844415664673
    3. '[x' → logprob: -3.491844415664673
    4. '=' → logprob: -3.866844415664673
    5. '[y' → logprob: -4.991844177246094
    6. '[' → logprob: -5.116844177246094
    7. ']=' → logprob: -5.116844177246094
    8. ' ]' → logprob: -7.616844177246094
    9. '][' → logprob: -8.241844177246094
    10. ' ' → logprob: -9.866844177246094

Token 393: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759573578834534
    2. ' =' → logprob: -0.8259573578834534
    3. '[' → logprob: -11.825957298278809
    4. ']' → logprob: -12.950957298278809
    5. '[x' → logprob: -13.200957298278809
    6. '[y' → logprob: -13.200957298278809
    7. '=y' → logprob: -13.200957298278809
    8. '=x' → logprob: -13.950957298278809
    9. ']=' → logprob: -13.950957298278809
    10. ')' → logprob: -15.200957298278809

Token 394: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0031777136027812958
    2. ' x' → logprob: -5.753177642822266
    3. '	x' → logprob: -18.878177642822266
    4. ' ' → logprob: -22.253177642822266
    5. '(x' → logprob: -22.503177642822266
    6. '
' → logprob: -23.253177642822266
    7. '[x' → logprob: -23.378177642822266
    8. '   ' → logprob: -23.878177642822266
    9. ')x' → logprob: -24.003177642822266
    10. '"x' → logprob: -24.003177642822266

Token 395: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -8.2994620242971e-06
    2. 'root' → logprob: -11.750008583068848
    3. '_ro' → logprob: -15.250008583068848
    4. '_' → logprob: -16.75000762939453
    5. '[root' → logprob: -17.37500762939453
    6. ' _' → logprob: -17.62500762939453
    7. ' root' → logprob: -17.87500762939453
    8. '_parent' → logprob: -18.62500762939453
    9. '_ROOT' → logprob: -18.75000762939453
    10. '_r' → logprob: -18.75000762939453

Token 396: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11316749453544617
    2. '           ' → logprob: -2.2381675243377686
    3. 'else' → logprob: -8.988167762756348
    4. '       ' → logprob: -9.363167762756348
    5. '<|end|>' → logprob: -9.988167762756348
    6. '
' → logprob: -10.738167762756348
    7. ',' → logprob: -11.363167762756348
    8. ';' → logprob: -11.613167762756348
    9. ' else' → logprob: -11.863167762756348
    10. '                
' → logprob: -11.988167762756348

Token 397: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3879512548446655
    2. '               ' → logprob: -1.1379512548446655
    3. 'else' → logprob: -7.137951374053955
    4. '       ' → logprob: -9.012950897216797
    5. ' else' → logprob: -9.637950897216797
    6. 'elif' → logprob: -10.262950897216797
    7. '<|end|>' → logprob: -11.387950897216797
    8. '
' → logprob: -11.512950897216797
    9. '                
' → logprob: -11.762950897216797
    10. '	       ' → logprob: -11.887950897216797

Token 398: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0064549436792731285
    2. ' self' → logprob: -5.631454944610596
    3. '               ' → logprob: -5.881454944610596
    4. '           ' → logprob: -9.756454467773438
    5. '	self' → logprob: -14.006454467773438
    6. '                   ' → logprob: -15.006454467773438
    7. '   ' → logprob: -15.506454467773438
    8. '
' → logprob: -16.131454467773438
    9. '       ' → logprob: -16.131454467773438
    10. ' ' → logprob: -16.256454467773438

Token 399: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.002806656062602997
    2. 'size' → logprob: -5.877806663513184
    3. ' size' → logprob: -13.627806663513184
    4. '	size' → logprob: -15.377806663513184
    5. '_size' → logprob: -15.627806663513184
    6. '[size' → logprob: -16.627805709838867
    7. '<size' → logprob: -16.627805709838867
    8. ':size' → logprob: -17.002805709838867
    9. '=size' → logprob: -17.127805709838867
    10. '.' → logprob: -17.252805709838867

Token 400: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -7.822646693966817e-06
    2. 'arr' → logprob: -12.000007629394531
    3. '[_' → logprob: -13.875007629394531
    4. '[arr' → logprob: -15.500007629394531
    5. '	arr' → logprob: -16.25000762939453
    6. 'Arr' → logprob: -16.50000762939453
    7. '[' → logprob: -17.00000762939453
    8. '_ar' → logprob: -17.25000762939453
    9. '_array' → logprob: -17.37500762939453
    10. '[x' → logprob: -17.50000762939453

Token 401: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.750000953674316
    3. ' [' → logprob: -16.875
    4. 'x' → logprob: -18.125
    5. '(x' → logprob: -19.75
    6. '[
' → logprob: -20.75
    7. '   ' → logprob: -21.125
    8. '```' → logprob: -21.25
    9. '[y' → logprob: -22.25
    10. ' x' → logprob: -22.375

Token 402: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -9.253090865968261e-06
    2. 'root' → logprob: -11.625009536743164
    3. '_ro' → logprob: -16.250009536743164
    4. '_' → logprob: -16.500009536743164
    5. '[root' → logprob: -16.875009536743164
    6. '_x' → logprob: -17.875009536743164
    7. '_ROOT' → logprob: -17.875009536743164
    8. 'Root' → logprob: -18.125009536743164
    9. ' root' → logprob: -18.625009536743164
    10. '_size' → logprob: -19.500009536743164

Token 403: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014165391214191914
    2. ']+=' → logprob: -4.26416540145874
    3. ' ]' → logprob: -13.639164924621582
    4. ']+' → logprob: -14.639164924621582
    5. ')' → logprob: -15.889164924621582
    6. '```' → logprob: -17.1391658782959
    7. '+=' → logprob: -17.2641658782959
    8. '   ' → logprob: -18.2641658782959
    9. '']' → logprob: -18.8891658782959
    10. '"]' → logprob: -19.0141658782959

Token 404: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018175223842263222
    2. ' +=' → logprob: -4.01817512512207
    3. ']+=' → logprob: -10.64317512512207
    4. '+' → logprob: -14.39317512512207
    5. '+=(' → logprob: -14.89317512512207
    6. '[' → logprob: -15.14317512512207
    7. '   ' → logprob: -16.26817512512207
    8. '=' → logprob: -16.76817512512207
    9. ' ' → logprob: -17.89317512512207
    10. '	' → logprob: -18.14317512512207

Token 405: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004078997299075127
    2. ' self' → logprob: -5.5040788650512695
    3. '           ' → logprob: -15.25407886505127
    4. '	self' → logprob: -15.62907886505127
    5. '(self' → logprob: -16.379079818725586
    6. '               ' → logprob: -16.879079818725586
    7. '       ' → logprob: -17.004079818725586
    8. ' ' → logprob: -17.379079818725586
    9. '   ' → logprob: -17.504079818725586
    10. '=self' → logprob: -18.254079818725586

Token 406: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.0017055326607078314
    2. 'size' → logprob: -6.376705646514893
    3. '	size' → logprob: -13.626705169677734
    4. '.' → logprob: -13.876705169677734
    5. ' size' → logprob: -14.251705169677734
    6. '<size' → logprob: -15.126705169677734
    7. '[size' → logprob: -15.501705169677734
    8. ' .' → logprob: -16.376705169677734
    9. '=size' → logprob: -17.501705169677734
    10. 's' → logprob: -17.626705169677734

Token 407: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -3.7697225252486533e-06
    2. 'arr' → logprob: -12.500003814697266
    3. '[arr' → logprob: -17.750003814697266
    4. 'Arr' → logprob: -17.875003814697266
    5. '[_' → logprob: -18.000003814697266
    6. '	arr' → logprob: -18.125003814697266
    7. '$arr' → logprob: -19.375003814697266
    8. '_ar' → logprob: -19.875003814697266
    9. '[x' → logprob: -20.500003814697266
    10. 'self' → logprob: -21.250003814697266

Token 408: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -3.128163257315464e-07
    2. 'y' → logprob: -16.0
    3. '[' → logprob: -16.125
    4. ' [' → logprob: -19.5
    5. '   ' → logprob: -20.375
    6. '[x' → logprob: -21.875
    7. '(y' → logprob: -22.0
    8. '	y' → logprob: -22.0
    9. ' ' → logprob: -22.25
    10. '[
' → logprob: -22.375

Token 409: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.002476135268807411
    2. 'root' → logprob: -6.002476215362549
    3. 'Root' → logprob: -15.75247573852539
    4. '_' → logprob: -16.75247573852539
    5. 'roo' → logprob: -16.87747573852539
    6. ' root' → logprob: -17.12747573852539
    7. '_ROOT' → logprob: -17.12747573852539
    8. '_ro' → logprob: -17.37747573852539
    9. '[root' → logprob: -18.00247573852539
    10. '```' → logprob: -18.12747573852539

Token 410: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 411: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00031282080453820527
    2. 'else' → logprob: -8.500312805175781
    3. '               ' → logprob: -10.125312805175781
    4. 'elif' → logprob: -10.250312805175781
    5. ' else' → logprob: -10.500312805175781
    6. ' elif' → logprob: -12.750312805175781
    7. '       ' → logprob: -13.125312805175781
    8. '	       ' → logprob: -14.500312805175781
    9. '```' → logprob: -15.250312805175781
    10. '<|end|>' → logprob: -15.625312805175781

Token 412: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.38861584663391113
    2. ' else' → logprob: -1.6386158466339111
    3. '       ' → logprob: -2.888615846633911
    4. '           ' → logprob: -3.263615846633911
    5. 'elif' → logprob: -3.638615846633911
    6. ' elif' → logprob: -4.888615608215332
    7. '   ' → logprob: -11.638615608215332
    8. '               ' → logprob: -11.763615608215332
    9. '        ' → logprob: -12.138615608215332
    10. '	else' → logprob: -13.513615608215332

Token 413: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.048854295164346695
    2. ':' → logprob: -3.048854351043701
    3. '               ' → logprob: -9.298853874206543
    4. ' :
' → logprob: -9.423853874206543
    5. '           ' → logprob: -10.048853874206543
    6. ':
' → logprob: -10.798853874206543
    7. '{
' → logprob: -11.548853874206543
    8. ':

' → logprob: -12.173853874206543
    9. ' :' → logprob: -12.298853874206543
    10. ' if' → logprob: -12.548853874206543

Token 414: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00041947141289711
    2. '{' → logprob: -8.625419616699219
    3. ':' → logprob: -9.125419616699219
    4. '{
' → logprob: -10.375419616699219
    5. '```' → logprob: -10.375419616699219
    6. ':
' → logprob: -10.500419616699219
    7. '           ' → logprob: -11.125419616699219
    8. '              ' → logprob: -11.875419616699219
    9. '       ' → logprob: -12.875419616699219
    10. '   ' → logprob: -13.000419616699219

Token 415: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4974331855773926
    2. '               ' → logprob: -1.3724331855773926
    3. 'self' (adapté à ' self') → logprob: -1.9974331855773926
    4. '                   ' → logprob: -6.247433185577393
    5. '	self' → logprob: -7.997433185577393
    6. '           ' → logprob: -8.497432708740234
    7. '   ' → logprob: -9.247432708740234
    8. '                ' → logprob: -9.872432708740234
    9. '{
' → logprob: -10.372432708740234
    10. ' ' → logprob: -10.747432708740234

Token 416: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.00020616286201402545
    2. 'parent' → logprob: -8.500205993652344
    3. '.' → logprob: -13.250205993652344
    4. '	parent' → logprob: -15.000205993652344
    5. ' parent' → logprob: -15.625205993652344
    6. '[parent' → logprob: -15.625205993652344
    7. ' .' → logprob: -15.875205993652344
    8. '_parent' → logprob: -16.250205993652344
    9. '.rank' → logprob: -17.125205993652344
    10. 'Parent' → logprob: -17.875205993652344

Token 417: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -3.6789137084269896e-05
    2. 'arr' → logprob: -10.25003719329834
    3. '_dict' → logprob: -14.00003719329834
    4. '	arr' → logprob: -15.00003719329834
    5. '[arr' → logprob: -16.500036239624023
    6. 'Arr' → logprob: -17.250036239624023
    7. ' arr' → logprob: -17.625036239624023
    8. '   ' → logprob: -18.500036239624023
    9. '_' → logprob: -18.625036239624023
    10. '[_' → logprob: -18.750036239624023

Token 418: '[x' (ID: 17295)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.250000953674316
    3. 'y' → logprob: -16.625
    4. ' [' → logprob: -17.125
    5. '[x' → logprob: -17.375
    6. '   ' → logprob: -18.75
    7. '[
' → logprob: -19.25
    8. '       ' → logprob: -19.5
    9. '[self' → logprob: -19.625
    10. '```' → logprob: -19.625

Token 419: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.0032239374704658985
    2. '_y' → logprob: -6.003223896026611
    3. 'root' → logprob: -7.253223896026611
    4. '[root' → logprob: -10.62822437286377
    5. 'Root' → logprob: -12.25322437286377
    6. '[y' → logprob: -12.75322437286377
    7. '_arr' → logprob: -12.87822437286377
    8. 'arr' → logprob: -13.37822437286377
    9. 'y' → logprob: -13.62822437286377
    10. '_x' → logprob: -14.00322437286377

Token 420: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7007558941841125
    2. '=' → logprob: -1.3257558345794678
    3. ' =' → logprob: -1.4507558345794678
    4. ']=' → logprob: -5.700756072998047
    5. ')' → logprob: -7.950756072998047
    6. ' ]' → logprob: -9.575756072998047
    7. '=y' → logprob: -10.825756072998047
    8. ')=' → logprob: -12.700756072998047
    9. '[' → logprob: -13.325756072998047
    10. ' ' → logprob: -13.700756072998047

Token 421: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132629990577698
    2. ' =' → logprob: -1.313262939453125
    3. '=y' → logprob: -14.063262939453125
    4. ')' → logprob: -16.188262939453125
    5. '=user' → logprob: -16.438262939453125
    6. ']' → logprob: -16.938262939453125
    7. '＝' → logprob: -17.063262939453125
    8. ']=' → logprob: -17.313262939453125
    9. '=s' → logprob: -17.563262939453125
    10. '=self' → logprob: -18.063262939453125

Token 422: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011048054322600365
    2. ' y' → logprob: -4.511047840118408
    3. '	y' → logprob: -15.386048316955566
    4. '           ' → logprob: -17.63604736328125
    5. '   ' → logprob: -17.63604736328125
    6. ' ' → logprob: -18.13604736328125
    7. '       ' → logprob: -18.63604736328125
    8. '(y' → logprob: -19.01104736328125
    9. '[y' → logprob: -19.13604736328125
    10. '               ' → logprob: -19.38604736328125

Token 423: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -7.703443770878948e-06
    2. 'root' → logprob: -11.875007629394531
    3. '_' → logprob: -14.250007629394531
    4. 'Root' → logprob: -16.12500762939453
    5. '_right' → logprob: -17.00000762939453
    6. '_ROOT' → logprob: -18.50000762939453
    7. '_ro' → logprob: -18.75000762939453
    8. '[root' → logprob: -19.25000762939453
    9. '_parent' → logprob: -19.37500762939453
    10. ' root' → logprob: -19.87500762939453

Token 424: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.810037742368877e-05
    2. '           ' → logprob: -11.000038146972656
    3. ' if' → logprob: -11.625038146972656
    4. 'if' → logprob: -11.750038146972656
    5. ',' → logprob: -13.625038146972656
    6. '       ' → logprob: -14.125038146972656
    7. '              ' → logprob: -14.625038146972656
    8. '                   ' → logprob: -14.750038146972656
    9. '<|end|>' → logprob: -14.750038146972656
    10. '		       ' → logprob: -15.500038146972656

Token 425: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00031186718842945993
    2. 'if' → logprob: -8.750311851501465
    3. ' if' → logprob: -9.625311851501465
    4. '           ' → logprob: -9.625311851501465
    5. '```' → logprob: -12.500311851501465
    6. '<|end|>' → logprob: -12.500311851501465
    7. '       ' → logprob: -13.000311851501465
    8. 'and' → logprob: -13.000311851501465
    9. ' ' → logprob: -13.375311851501465
    10. '                
' → logprob: -13.625311851501465

Token 426: ' self' (ID: 1051)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005712636047974229
    2. ' if' → logprob: -8.000571250915527
    3. '               ' → logprob: -8.375571250915527
    4. '                   ' → logprob: -12.875571250915527
    5. '           ' → logprob: -13.625571250915527
    6. 'self' (adapté à ' self') → logprob: -13.750571250915527
    7. '```' → logprob: -15.000571250915527
    8. '	if' → logprob: -16.750572204589844
    9. '       ' → logprob: -17.250572204589844
    10. '                
' → logprob: -17.375572204589844

Token 427: '.size' (ID: 4463)
  Prédit: '.rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.25702378153800964
    2. 'rank' → logprob: -1.882023811340332
    3. 'size' → logprob: -2.882023811340332
    4. '.size' → logprob: -4.507023811340332
    5. 'if' → logprob: -5.007023811340332
    6. '_rank' → logprob: -8.007023811340332
    7. ' if' → logprob: -9.007023811340332
    8. ' rank' → logprob: -9.382023811340332
    9. ':' → logprob: -10.757023811340332
    10. ' size' → logprob: -11.257023811340332

Token 428: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -3.173704271830502e-06
    2. 'arr' → logprob: -12.75000286102295
    3. '	arr' → logprob: -16.375003814697266
    4. '[_' → logprob: -16.375003814697266
    5. '_' → logprob: -17.250003814697266
    6. '[arr' → logprob: -17.875003814697266
    7. '"_' → logprob: -17.875003814697266
    8. '_array' → logprob: -18.625003814697266
    9. '[' → logprob: -18.625003814697266
    10. '```' → logprob: -18.750003814697266

Token 429: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.375000953674316
    3. 'y' → logprob: -18.25
    4. ' [' → logprob: -19.0
    5. '_arr' → logprob: -19.125
    6. '[x' → logprob: -19.5
    7. '[arr' → logprob: -20.125
    8. '```' → logprob: -20.25
    9. 'arr' → logprob: -20.5
    10. '[z' → logprob: -21.125

Token 430: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.0004319804720580578
    2. 'root' → logprob: -7.750432014465332
    3. 'Root' → logprob: -14.500432014465332
    4. '[root' → logprob: -14.625432014465332
    5. ' root' → logprob: -16.625431060791016
    6. '_ROOT' → logprob: -16.750431060791016
    7. 'y' → logprob: -17.000431060791016
    8. '_ro' → logprob: -17.000431060791016
    9. '_' → logprob: -17.750431060791016
    10. '	root' → logprob: -17.875431060791016

Token 431: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6993935704231262
    2. ']+=' → logprob: -1.4493935108184814
    3. '+=' → logprob: -2.0743935108184814
    4. '[' → logprob: -2.5743935108184814
    5. ' +=' → logprob: -2.8243935108184814
    6. '+' → logprob: -6.0743937492370605
    7. '[x' → logprob: -6.0743937492370605
    8. ']+' → logprob: -6.3243937492370605
    9. ' ]' → logprob: -8.449393272399902
    10. '[y' → logprob: -8.699393272399902

Token 432: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005500191822648048
    2. ' +=' → logprob: -5.630500316619873
    3. '[' → logprob: -7.005500316619873
    4. '+' → logprob: -8.130499839782715
    5. ']+=' → logprob: -8.130499839782715
    6. '[y' → logprob: -8.255499839782715
    7. '[x' → logprob: -9.755499839782715
    8. '```' → logprob: -9.880499839782715
    9. '[
' → logprob: -11.130499839782715
    10. '[user' → logprob: -12.255499839782715

Token 433: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007101670489646494
    2. ' self' → logprob: -7.2507100105285645
    3. '(self' → logprob: -16.000709533691406
    4. '[self' → logprob: -16.375709533691406
    5. '	self' → logprob: -17.250709533691406
    6. '           ' → logprob: -19.250709533691406
    7. '1' → logprob: -19.500709533691406
    8. ' ' → logprob: -19.625709533691406
    9. '   ' → logprob: -19.750709533691406
    10. '       ' → logprob: -20.000709533691406

Token 434: '.size' (ID: 4463)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.014197471551597118
    2. '.size' → logprob: -4.26419734954834
    3. ' size' → logprob: -11.01419734954834
    4. '_size' → logprob: -11.13919734954834
    5. '[size' → logprob: -13.01419734954834
    6. 'siz' → logprob: -15.13919734954834
    7. '	size' → logprob: -15.38919734954834
    8. 'self' → logprob: -16.139198303222656
    9. '<size' → logprob: -16.889198303222656
    10. 's' → logprob: -17.139198303222656

Token 435: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -4.961759259458631e-06
    2. 'self' → logprob: -13.250004768371582
    3. '[y' → logprob: -13.375004768371582
    4. '[x' → logprob: -13.875004768371582
    5. 'arr' → logprob: -14.500004768371582
    6. 'Arr' → logprob: -16.5000057220459
    7. '[self' → logprob: -17.3750057220459
    8. '[' → logprob: -17.8750057220459
    9. '   ' → logprob: -18.0000057220459
    10. '```' → logprob: -18.2500057220459

Token 436: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -14.125001907348633
    3. ' [' → logprob: -14.500001907348633
    4. 'x' → logprob: -15.000001907348633
    5. '```' → logprob: -17.000001907348633
    6. '[
' → logprob: -17.625001907348633
    7. '   ' → logprob: -18.250001907348633
    8. ' x' → logprob: -18.875001907348633
    9. '(x' → logprob: -19.125001907348633
    10. ' ' → logprob: -19.125001907348633

Token 437: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.004079589620232582
    2. 'root' → logprob: -5.504079818725586
    3. 'Root' → logprob: -14.629079818725586
    4. '[root' → logprob: -14.879079818725586
    5. 'x' → logprob: -16.129079818725586
    6. 'ROOT' → logprob: -16.254079818725586
    7. '_ROOT' → logprob: -16.254079818725586
    8. 'y' → logprob: -16.379079818725586
    9. '_x' → logprob: -17.004079818725586
    10. ' root' → logprob: -17.129079818725586

Token 438: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6965245604515076
    2. '               ' → logprob: -0.6965245604515076
    3. '       ' → logprob: -6.071524620056152
    4. '[' → logprob: -8.321524620056152
    5. '
' → logprob: -8.321524620056152
    6. 'if' → logprob: -8.821524620056152
    7. '<|end|>' → logprob: -9.446524620056152
    8. ' if' → logprob: -9.821524620056152
    9. '                   ' → logprob: -10.196524620056152
    10. ',' → logprob: -10.196524620056152

Token 439: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016873201820999384
    2. '           ' → logprob: -7.001687526702881
    3. '       ' → logprob: -8.251687049865723
    4. '```' → logprob: -8.626687049865723
    5. '                
' → logprob: -8.751687049865723
    6. '<|end|>' → logprob: -10.251687049865723
    7. 'if' → logprob: -10.376687049865723
    8. '   ' → logprob: -10.751687049865723
    9. ' if' → logprob: -11.001687049865723
    10. '  
' → logprob: -11.251687049865723

Token 440: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.000765552744269371
    2. ' if' → logprob: -7.750765323638916
    3. '               ' → logprob: -8.125765800476074
    4. '           ' → logprob: -10.500765800476074
    5. '```' → logprob: -11.500765800476074
    6. '       ' → logprob: -14.875765800476074
    7. '
' → logprob: -15.000765800476074
    8. '	if' → logprob: -15.250765800476074
    9. '   ' → logprob: -15.875765800476074
    10. '                   ' → logprob: -16.000764846801758

Token 441: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018164457753300667
    2. ' self' → logprob: -4.01816463470459
    3. '(self' → logprob: -11.39316463470459
    4. '   ' → logprob: -13.26816463470459
    5. 's' → logprob: -14.64316463470459
    6. '	self' → logprob: -14.89316463470459
    7. '           ' → logprob: -15.39316463470459
    8. '    ' → logprob: -15.64316463470459
    9. '[self' → logprob: -16.143163681030273
    10. ' ' → logprob: -16.268163681030273

Token 442: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -3.7697225252486533e-06
    2. 'rank' → logprob: -12.500003814697266
    3. '.r' → logprob: -18.375003814697266
    4. '.' → logprob: -18.375003814697266
    5. ' rank' → logprob: -18.375003814697266
    6. '_rank' → logprob: -19.000003814697266
    7. '(rank' → logprob: -19.875003814697266
    8. '.has' → logprob: -21.250003814697266
    9. 'Rank' → logprob: -21.875003814697266
    10. ' .' → logprob: -23.125003814697266

Token 443: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -2.45848218582978e-06
    2. 'arr' → logprob: -13.12500286102295
    3. '[arr' → logprob: -15.50000286102295
    4. '	arr' → logprob: -16.000001907348633
    5. '[_' → logprob: -17.250001907348633
    6. '[y' → logprob: -17.750001907348633
    7. '[x' → logprob: -18.500001907348633
    8. '_' → logprob: -18.625001907348633
    9. '_ar' → logprob: -18.875001907348633
    10. '$arr' → logprob: -19.000001907348633

Token 444: '[x' (ID: 17295)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -3.607391408877447e-05
    2. '[x' → logprob: -10.875036239624023
    3. '[' → logprob: -11.625036239624023
    4. '[self' → logprob: -12.000036239624023
    5. 'y' → logprob: -13.250036239624023
    6. '[id' → logprob: -15.625036239624023
    7. '[user' → logprob: -17.875036239624023
    8. '[
' → logprob: -18.000036239624023
    9. ' y' → logprob: -18.375036239624023
    10. 'self' → logprob: -18.375036239624023

Token 445: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.00029828163678757846
    2. 'root' → logprob: -8.125298500061035
    3. '[root' → logprob: -13.625298500061035
    4. 'Root' → logprob: -14.000298500061035
    5. ' root' → logprob: -15.875298500061035
    6. '_ROOT' → logprob: -17.37529754638672
    7. '-root' → logprob: -17.87529754638672
    8. '	root' → logprob: -18.00029754638672
    9. 'y' → logprob: -18.37529754638672
    10. 'x' → logprob: -18.37529754638672

Token 446: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06684759259223938
    2. '[' → logprob: -3.691847562789917
    3. ' ==' → logprob: -3.691847562789917
    4. ']==' → logprob: -4.566847801208496
    5. ']' → logprob: -5.441847801208496
    6. '==
' → logprob: -9.691847801208496
    7. '=' → logprob: -12.566847801208496
    8. '===' → logprob: -12.691847801208496
    9. ')==' → logprob: -12.691847801208496
    10. '[
' → logprob: -12.691847801208496

Token 447: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0009234884637407959
    2. ' ==' → logprob: -7.5009236335754395
    3. '=' → logprob: -8.500923156738281
    4. '[' → logprob: -8.750923156738281
    5. '==
' → logprob: -12.375923156738281
    6. ']==' → logprob: -12.750923156738281
    7. '===' → logprob: -13.500923156738281
    8. ')==' → logprob: -16.37592315673828
    9. ']' → logprob: -16.75092315673828
    10. '>=' → logprob: -17.00092315673828

Token 448: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004107727203518152
    2. ' self' → logprob: -5.50410795211792
    3. '[self' → logprob: -10.879107475280762
    4. 'y' → logprob: -12.129107475280762
    5. '(self' → logprob: -13.379107475280762
    6. '   ' → logprob: -13.379107475280762
    7. '	self' → logprob: -14.129107475280762
    8. '       ' → logprob: -15.004107475280762
    9. '=self' → logprob: -15.379107475280762
    10. '
' → logprob: -15.504107475280762

Token 449: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -1.3663626305060461e-05
    2. 'rank' → logprob: -11.25001335144043
    3. '_rank' → logprob: -14.62501335144043
    4. ' rank' → logprob: -16.25001335144043
    5. 'Rank' → logprob: -19.25001335144043
    6. '(rank' → logprob: -19.75001335144043
    7. '.' → logprob: -20.00001335144043
    8. '
' → logprob: -22.00001335144043
    9. 'ank' → logprob: -22.62501335144043
    10. ' .' → logprob: -22.87501335144043

Token 450: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.5048530030981055e-06
    2. 'arr' → logprob: -13.625001907348633
    3. '[y' → logprob: -15.625001907348633
    4. '[arr' → logprob: -17.125001907348633
    5. '	arr' → logprob: -17.750001907348633
    6. 'Arr' → logprob: -19.000001907348633
    7. '[x' → logprob: -20.125001907348633
    8. '$arr' → logprob: -20.375001907348633
    9. ' arr' → logprob: -20.500001907348633
    10. '[root' → logprob: -20.750001907348633

Token 451: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -5.860340752406046e-05
    2. 'y' → logprob: -9.7500581741333
    3. '[' → logprob: -16.125059127807617
    4. '   ' → logprob: -17.625059127807617
    5. '[x' → logprob: -17.625059127807617
    6. '(y' → logprob: -18.375059127807617
    7. ' y' → logprob: -18.875059127807617
    8. ' ' → logprob: -19.125059127807617
    9. '	y' → logprob: -19.125059127807617
    10. '[
' → logprob: -19.250059127807617

Token 452: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.00015860427811276168
    2. 'root' → logprob: -8.750158309936523
    3. 'Root' → logprob: -15.875158309936523
    4. 'y' → logprob: -17.375158309936523
    5. '[root' → logprob: -17.750158309936523
    6. '_ROOT' → logprob: -19.250158309936523
    7. '[y' → logprob: -20.500158309936523
    8. '_right' → logprob: -20.750158309936523
    9. '```' → logprob: -21.000158309936523
    10. ' root' → logprob: -21.250158309936523

Token 453: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.41219669580459595
    2. ':' → logprob: -2.037196636199951
    3. ':
' → logprob: -2.162196636199951
    4. ']:' → logprob: -2.412196636199951
    5. ']' → logprob: -6.412196636199951
    6. '):
' → logprob: -7.662196636199951
    7. ']:
' → logprob: -8.78719711303711
    8. ']:

' → logprob: -9.41219711303711
    9. '[y' → logprob: -9.53719711303711
    10. '[x' → logprob: -10.16219711303711

Token 454: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004467150662094355
    2. '               ' → logprob: -5.879467010498047
    3. '   ' → logprob: -7.129467010498047
    4. ' self' → logprob: -8.129467010498047
    5. 'self' → logprob: -8.629467010498047
    6. '                       ' → logprob: -8.629467010498047
    7. '           ' → logprob: -9.004467010498047
    8. '```' → logprob: -10.629467010498047
    9. '                  ' → logprob: -11.629467010498047
    10. ' ' → logprob: -11.629467010498047

Token 455: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0020966108422726393
    2. ' self' → logprob: -6.252096652984619
    3. '                   ' → logprob: -8.752096176147461
    4. '                       ' → logprob: -12.002096176147461
    5. '               ' → logprob: -13.377096176147461
    6. '   ' → logprob: -13.752096176147461
    7. '	self' → logprob: -15.127096176147461
    8. '[self' → logprob: -15.252096176147461
    9. '           ' → logprob: -15.377096176147461
    10. '       ' → logprob: -15.877096176147461

Token 456: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -3.128163257315464e-07
    2. 'rank' → logprob: -15.125
    3. '.' → logprob: -16.875
    4. ' rank' → logprob: -19.5
    5. '.r' → logprob: -19.5
    6. ' .' → logprob: -20.125
    7. '_rank' → logprob: -20.375
    8. '(rank' → logprob: -21.375
    9. 'Rank' → logprob: -22.0
    10. '.
' → logprob: -22.625

Token 457: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.9361264946837764e-07
    2. 'arr' → logprob: -16.125
    3. '[arr' → logprob: -17.75
    4. '	arr' → logprob: -18.375
    5. '[_' → logprob: -18.5
    6. '_ar' → logprob: -20.0
    7. '_' → logprob: -20.125
    8. '$arr' → logprob: -20.75
    9. '_array' → logprob: -21.0
    10. 'Arr' → logprob: -21.0

Token 458: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.500000953674316
    3. 'y' → logprob: -16.875
    4. '[x' → logprob: -18.25
    5. '

' → logprob: -20.5
    6. '[
' → logprob: -20.625
    7. '   ' → logprob: -20.875
    8. ' [' → logprob: -20.875
    9. '	y' → logprob: -21.25
    10. '```' → logprob: -21.875

Token 459: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.0023932484909892082
    2. '[x' → logprob: -6.8773932456970215
    3. 'root' → logprob: -7.5023932456970215
    4. '[root' → logprob: -7.6273932456970215
    5. '[y' → logprob: -8.62739372253418
    6. '_x' → logprob: -10.00239372253418
    7. '_y' → logprob: -10.50239372253418
    8. 'y' → logprob: -10.62739372253418
    9. 'x' → logprob: -10.87739372253418
    10. '_arr' → logprob: -11.00239372253418

Token 460: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12727287411689758
    2. ' +=' → logprob: -2.127272844314575
    3. ']+=' → logprob: -8.002272605895996
    4. '[' → logprob: -11.752272605895996
    5. '+' → logprob: -13.752272605895996
    6. '   ' → logprob: -14.002272605895996
    7. ']' → logprob: -16.127273559570312
    8. '    ' → logprob: -16.752273559570312
    9. '+='' → logprob: -17.002273559570312
    10. '+="' → logprob: -17.377273559570312

Token 461: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.003199108177796006
    2. ' +=' → logprob: -5.753199100494385
    3. ']+=' → logprob: -10.753199577331543
    4. '+='' → logprob: -17.378198623657227
    5. '+="' → logprob: -18.003198623657227
    6. '+=(' → logprob: -19.003198623657227
    7. '+' → logprob: -19.128198623657227
    8. '   ' → logprob: -19.503198623657227
    9. '=' → logprob: -20.253198623657227
    10. '[' → logprob: -20.253198623657227

Token 462: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010926496179308742
    2. ' ' → logprob: -9.125109672546387
    3. '   ' → logprob: -15.500109672546387
    4. '```' → logprob: -19.75010871887207
    5. '+' → logprob: -20.00010871887207
    6. '  ' → logprob: -20.00010871887207
    7. '[' → logprob: -20.12510871887207
    8. '<|end|>' → logprob: -20.43760871887207
    9. '
' → logprob: -20.50010871887207
    10. '                   ' → logprob: -20.62510871887207

Token 463: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -16.875
    4. '```' → logprob: -19.375
    5. '
' → logprob: -20.75
    6. '[' → logprob: -20.875
    7. '       ' → logprob: -21.8125
    8. '' → logprob: -21.875
    9. '  ' → logprob: -22.0625
    10. '۱' → logprob: -22.125

Token 464: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 466: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 467: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43198564648628235
    2. ':
' → logprob: -1.05698561668396
    3. '       ' → logprob: -6.431985855102539
    4. '           ' → logprob: -6.431985855102539
    5. ' :
' → logprob: -10.931985855102539
    6. ' :' → logprob: -11.056985855102539
    7. '):
' → logprob: -11.556985855102539
    8. ',' → logprob: -12.056985855102539
    9. '   ' → logprob: -12.806985855102539
    10. ':
' → logprob: -12.931985855102539

Token 468: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3158780634403229
    2. '       ' → logprob: -1.3158780336380005
    3. 'if' → logprob: -6.065877914428711
    4. ' if' → logprob: -8.190877914428711
    5. '   ' → logprob: -11.440877914428711
    6. '               ' → logprob: -13.190877914428711
    7. '```' → logprob: -14.065877914428711
    8. '        ' → logprob: -15.065877914428711
    9. '          ' → logprob: -15.190877914428711
    10. '	if' → logprob: -15.315877914428711

Token 469: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -6.32523515378125e-05
    2. ' if' → logprob: -9.750062942504883
    3. '           ' → logprob: -12.250062942504883
    4. 'x' → logprob: -16.125062942504883
    5. '       ' → logprob: -17.000062942504883
    6. '   ' → logprob: -18.000062942504883
    7. '#' → logprob: -18.875062942504883
    8. '            
' → logprob: -19.875062942504883
    9. '
' → logprob: -20.125062942504883
    10. '	if' → logprob: -20.375062942504883

Token 470: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007614439819008112
    2. ' self' → logprob: -4.882614612579346
    3. '(self' → logprob: -11.882614135742188
    4. '[self' → logprob: -13.882614135742188
    5. '	self' → logprob: -16.132614135742188
    6. '           ' → logprob: -16.382614135742188
    7. '   ' → logprob: -16.757614135742188
    8. ' ' → logprob: -16.882614135742188
    9. '
' → logprob: -17.382614135742188
    10. '=self' → logprob: -18.007614135742188

Token 471: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -5.848420551046729e-05
    2. 'rank' → logprob: -9.7500581741333
    3. ' rank' → logprob: -15.6250581741333
    4. '.' → logprob: -18.750059127807617
    5. ' .' → logprob: -19.125059127807617
    6. '_rank' → logprob: -19.375059127807617
    7. '(rank' → logprob: -19.375059127807617
    8. 'Rank' → logprob: -19.875059127807617
    9. '.r' → logprob: -20.250059127807617
    10. '.rate' → logprob: -21.250059127807617

Token 472: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -1.5048530030981055e-06
    2. 'dict' → logprob: -14.250001907348633
    3. '_arr' → logprob: -15.125001907348633
    4. 'Dict' → logprob: -15.375001907348633
    5. '_dic' → logprob: -16.750001907348633
    6. '_DICT' → logprob: -17.000001907348633
    7. '[' → logprob: -17.125001907348633
    8. '[_' → logprob: -17.750001907348633
    9. 'arr' → logprob: -18.125001907348633
    10. '_' → logprob: -18.500001907348633

Token 473: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -9.491498531133402e-06
    2. '[' → logprob: -12.375009536743164
    3. '[y' → logprob: -13.125009536743164
    4. '[id' → logprob: -13.250009536743164
    5. 'x' → logprob: -14.125009536743164
    6. ' [' → logprob: -14.625009536743164
    7. '(x' → logprob: -16.750009536743164
    8. '.get' → logprob: -17.000009536743164
    9. '[self' → logprob: -17.750009536743164
    10. '[
' → logprob: -17.875009536743164

Token 474: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.00027063372544944286
    2. 'root' → logprob: -8.25027084350586
    3. '[root' → logprob: -12.12527084350586
    4. ' root' → logprob: -13.25027084350586
    5. '_dict' → logprob: -13.50027084350586
    6. 'Root' → logprob: -14.37527084350586
    7. '-root' → logprob: -16.62527084350586
    8. '	root' → logprob: -17.37527084350586
    9. '_ROOT' → logprob: -17.50027084350586
    10. '_ro' → logprob: -18.37527084350586

Token 475: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001159623614512384
    2. ']>' → logprob: -6.87615966796875
    3. '>' → logprob: -9.37615966796875
    4. ' ]' → logprob: -10.12615966796875
    5. ' >' → logprob: -14.12615966796875
    6. '>]' → logprob: -15.00115966796875
    7. '"]' → logprob: -15.50115966796875
    8. '[' → logprob: -15.62615966796875
    9. '[y' → logprob: -15.75115966796875
    10. '[x' → logprob: -16.00115966796875

Token 476: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6932626962661743
    2. ' >' → logprob: -0.6932626962661743
    3. '[y' → logprob: -9.568263053894043
    4. '>x' → logprob: -10.568263053894043
    5. '[x' → logprob: -11.693263053894043
    6. '[' → logprob: -11.818263053894043
    7. ' ' → logprob: -13.568263053894043
    8. '>[' → logprob: -13.693263053894043
    9. 'y' → logprob: -14.943263053894043
    10. ']>' → logprob: -15.318263053894043

Token 477: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10021260380744934
    2. ' self' → logprob: -2.350212574005127
    3. '(self' → logprob: -12.475213050842285
    4. '[self' → logprob: -13.600213050842285
    5. '=self' → logprob: -14.600213050842285
    6. '	self' → logprob: -15.475213050842285
    7. '           ' → logprob: -17.10021209716797
    8. 'y' → logprob: -17.35021209716797
    9. '```' → logprob: -17.85021209716797
    10. ' ' → logprob: -18.22521209716797

Token 478: '.rank' (ID: 96793)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.0009172935388050973
    2. '_rank' → logprob: -7.500917434692383
    3. ' rank' → logprob: -8.000917434692383
    4. '.rank' → logprob: -10.500917434692383
    5. '(rank' → logprob: -14.000917434692383
    6. 'self' → logprob: -14.250917434692383
    7. 'Rank' → logprob: -16.375917434692383
    8. 'y' → logprob: -18.625917434692383
    9. 'rang' → logprob: -19.500917434692383
    10. 'root' → logprob: -19.750917434692383

Token 479: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.00021105022460687906
    2. 'dict' → logprob: -8.500210762023926
    3. '[y' → logprob: -11.875210762023926
    4. 'Dict' → logprob: -14.625210762023926
    5. '[x' → logprob: -16.750211715698242
    6. '_DICT' → logprob: -17.500211715698242
    7. 'y' → logprob: -17.625211715698242
    8. '```' → logprob: -19.125211715698242
    9. '_y' → logprob: -19.375211715698242
    10. '[_' → logprob: -19.500211715698242

Token 480: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -2.45848218582978e-06
    2. 'y' → logprob: -13.75000286102295
    3. '[' → logprob: -14.12500286102295
    4. '[x' → logprob: -14.37500286102295
    5. ' [' → logprob: -17.000001907348633
    6. '   ' → logprob: -18.125001907348633
    7. '```' → logprob: -18.500001907348633
    8. ' y' → logprob: -18.625001907348633
    9. ' ' → logprob: -19.125001907348633
    10. '       ' → logprob: -19.375001907348633

Token 481: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.0005533903022296727
    2. 'root' → logprob: -7.500553607940674
    3. 'Root' → logprob: -15.750553131103516
    4. '_ro' → logprob: -16.125553131103516
    5. '_' → logprob: -17.000553131103516
    6. ' root' → logprob: -17.375553131103516
    7. '_ROOT' → logprob: -17.500553131103516
    8. '[root' → logprob: -17.625553131103516
    9. '_r' → logprob: -18.875553131103516
    10. '	root' → logprob: -19.375553131103516

Token 482: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46513283252716064
    2. ':
' → logprob: -1.0901328325271606
    3. ']:
' → logprob: -3.590132713317871
    4. '):
' → logprob: -5.090132713317871
    5. ']:' → logprob: -6.840132713317871
    6. '           ' → logprob: -7.965132713317871
    7. '               ' → logprob: -8.590132713317871
    8. '):' → logprob: -8.965132713317871
    9. '       ' → logprob: -9.465132713317871
    10. ':

' → logprob: -10.465132713317871

Token 483: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018080640584230423
    2. '           ' → logprob: -4.143080711364746
    3. 'self' → logprob: -7.643080711364746
    4. ' self' → logprob: -7.768080711364746
    5. '```' → logprob: -8.143080711364746
    6. ':' → logprob: -8.393080711364746
    7. '):
' → logprob: -9.018080711364746
    8. '(self' → logprob: -9.393080711364746
    9. ':
' → logprob: -9.393080711364746
    10. '              ' → logprob: -10.018080711364746

Token 484: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06511994451284409
    2. ' self' → logprob: -2.815119981765747
    3. '               ' → logprob: -5.815119743347168
    4. '           ' → logprob: -8.815119743347168
    5. '[self' → logprob: -12.190119743347168
    6. '                   ' → logprob: -12.565119743347168
    7. '```' → logprob: -12.815119743347168
    8. '	self' → logprob: -12.940119743347168
    9. '(self' → logprob: -13.940119743347168
    10. '   ' → logprob: -13.940119743347168

Token 485: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0009128939709626138
    2. 'parent' → logprob: -7.000912666320801
    3. ' .' → logprob: -14.7509126663208
    4. ' parent' → logprob: -15.1259126663208
    5. '.rank' → logprob: -15.7509126663208
    6. '[parent' → logprob: -16.375913619995117
    7. '	parent' → logprob: -16.500913619995117
    8. ',parent' → logprob: -16.625913619995117
    9. '_parent' → logprob: -16.875913619995117
    10. '.' → logprob: -16.875913619995117

Token 486: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -2.2200749754119897e-06
    2. '_arr' → logprob: -14.125001907348633
    3. 'Dict' → logprob: -14.250001907348633
    4. 'dict' → logprob: -15.000001907348633
    5. '_' → logprob: -16.625001907348633
    6. '[_' → logprob: -16.875001907348633
    7. '_dic' → logprob: -17.125001907348633
    8. '_DICT' → logprob: -17.250001907348633
    9. '._' → logprob: -17.375001907348633
    10. '"_' → logprob: -17.500001907348633

Token 487: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -3.9888433093437925e-05
    2. 'y' → logprob: -10.250040054321289
    3. '[' → logprob: -12.750040054321289
    4. '[x' → logprob: -14.250040054321289
    5. ' y' → logprob: -15.250040054321289
    6. '(y' → logprob: -15.750040054321289
    7. ' [' → logprob: -15.875040054321289
    8. '

' → logprob: -16.50004005432129
    9. '[root' → logprob: -16.75004005432129
    10. '```' → logprob: -16.87504005432129

Token 488: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.0004309076175559312
    2. 'root' → logprob: -7.750431060791016
    3. 'Root' → logprob: -15.875431060791016
    4. '[root' → logprob: -16.125431060791016
    5. '_ROOT' → logprob: -17.250431060791016
    6. ' root' → logprob: -17.375431060791016
    7. '_ro' → logprob: -17.500431060791016
    8. '_' → logprob: -18.750431060791016
    9. '-root' → logprob: -20.000431060791016
    10. '	root' → logprob: -20.000431060791016

Token 489: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0031111687421798706
    2. ']=' → logprob: -6.503111362457275
    3. '=' → logprob: -6.753111362457275
    4. ' =' → logprob: -7.878111362457275
    5. ' ]' → logprob: -9.753110885620117
    6. ')' → logprob: -13.003110885620117
    7. '           ' → logprob: -14.503110885620117
    8. '        ' → logprob: -16.378110885620117
    9. '         ' → logprob: -16.753110885620117
    10. '       ' → logprob: -16.878110885620117

Token 490: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868747651576996
    2. '=' → logprob: -1.136874794960022
    3. ']' → logprob: -13.13687515258789
    4. ')' → logprob: -14.01187515258789
    5. ']=' → logprob: -14.63687515258789
    6. '=x' → logprob: -15.26187515258789
    7. '=y' → logprob: -16.63687515258789
    8. ')=' → logprob: -16.88687515258789
    9. '=k' → logprob: -17.13687515258789
    10. ' =
' → logprob: -17.13687515258789

Token 491: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03804149478673935
    2. ' x' → logprob: -3.288041591644287
    3. '	x' → logprob: -17.663042068481445
    4. '(x' → logprob: -19.538042068481445
    5. '"x' → logprob: -20.288042068481445
    6. '[x' → logprob: -20.538042068481445
    7. '{x' → logprob: -21.163042068481445
    8. ''x' → logprob: -21.163042068481445
    9. '```' → logprob: -21.288042068481445
    10. '<x' → logprob: -21.288042068481445

Token 492: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -7.703443770878948e-06
    2. 'root' → logprob: -11.875007629394531
    3. '_x' → logprob: -15.000007629394531
    4. '_' → logprob: -16.37500762939453
    5. '[root' → logprob: -16.37500762939453
    6. 'x' → logprob: -16.50000762939453
    7. 'Root' → logprob: -17.37500762939453
    8. '[x' → logprob: -18.12500762939453
    9. '_ro' → logprob: -18.37500762939453
    10. '_ROOT' → logprob: -19.12500762939453

Token 493: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00013357517309486866
    2. '
' → logprob: -9.250133514404297
    3. 'self' → logprob: -10.875133514404297
    4. '           ' → logprob: -11.625133514404297
    5. '              ' → logprob: -13.125133514404297
    6. '                
' → logprob: -13.500133514404297
    7. '<|end|>' → logprob: -13.625133514404297
    8. '                   ' → logprob: -13.625133514404297
    9. 'else' → logprob: -14.000133514404297
    10. '       ' → logprob: -14.000133514404297

Token 494: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.897412822581828e-05
    2. '           ' → logprob: -10.625068664550781
    3. 'else' → logprob: -10.625068664550781
    4. 'self' → logprob: -11.500068664550781
    5. '```' → logprob: -13.125068664550781
    6. '       ' → logprob: -13.500068664550781
    7. '<|end|>' → logprob: -13.500068664550781
    8. '                
' → logprob: -13.625068664550781
    9. '
' → logprob: -13.750068664550781
    10. '                   ' → logprob: -13.875068664550781

Token 495: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007053387816995382
    2. ' self' → logprob: -5.007053375244141
    3. '               ' → logprob: -8.00705337524414
    4. '           ' → logprob: -12.38205337524414
    5. '                   ' → logprob: -14.63205337524414
    6. '	self' → logprob: -17.13205337524414
    7. '[self' → logprob: -17.25705337524414
    8. '   ' → logprob: -18.00705337524414
    9. '(self' → logprob: -18.00705337524414
    10. ' ' → logprob: -18.75705337524414

Token 496: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.0005536287208087742
    2. 'size' → logprob: -7.500553607940674
    3. ' size' → logprob: -14.750554084777832
    4. ' .' → logprob: -16.500553131103516
    5. '.' → logprob: -16.875553131103516
    6. '<size' → logprob: -17.500553131103516
    7. ':size' → logprob: -18.125553131103516
    8. '	size' → logprob: -18.250553131103516
    9. '[size' → logprob: -18.500553131103516
    10. '=size' → logprob: -19.000553131103516

Token 497: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -4.320199877838604e-07
    2. 'dict' → logprob: -14.75
    3. 'Dict' → logprob: -17.5
    4. '```' → logprob: -17.5
    5. '_DICT' → logprob: -17.625
    6. '_dic' → logprob: -17.875
    7. '_arr' → logprob: -18.25
    8. '_' → logprob: -18.75
    9. '_d' → logprob: -19.75
    10. '_size' → logprob: -19.875

Token 498: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.320199877838604e-07
    2. 'x' → logprob: -15.25
    3. '[' → logprob: -16.0
    4. '```' → logprob: -18.375
    5. ' [' → logprob: -18.5
    6. '[y' → logprob: -19.75
    7. '(x' → logprob: -20.5
    8. '   ' → logprob: -20.875
    9. '{x' → logprob: -21.0
    10. ' x' → logprob: -21.5

Token 499: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.0008837147615849972
    2. 'root' → logprob: -7.12588357925415
    3. 'x' → logprob: -10.250884056091309
    4. '_x' → logprob: -11.000884056091309
    5. '_dict' → logprob: -11.000884056091309
    6. '[root' → logprob: -12.000884056091309
    7. '[x' → logprob: -12.750884056091309
    8. 'Root' → logprob: -14.375884056091309
    9. '_y' → logprob: -15.500884056091309
    10. 'dict' → logprob: -15.875884056091309

Token 500: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015040287980809808
    2. ']+=' → logprob: -6.501503944396973
    3. ' ]' → logprob: -14.251503944396973
    4. ']+' → logprob: -14.751503944396973
    5. '"]' → logprob: -14.751503944396973
    6. '']' → logprob: -16.12650489807129
    7. '+=' → logprob: -16.87650489807129
    8. '`]' → logprob: -17.75150489807129
    9. '           ' → logprob: -18.00150489807129
    10. '+]' → logprob: -18.25150489807129

Token 501: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3000043034553528
    2. ' +=' → logprob: -2.300004243850708
    3. ']+=' → logprob: -2.425004243850708
    4. ']' → logprob: -2.675004243850708
    5. '[y' → logprob: -7.175004482269287
    6. '[' → logprob: -8.175004005432129
    7. '[x' → logprob: -9.175004005432129
    8. ']+' → logprob: -9.550004005432129
    9. '           ' → logprob: -9.550004005432129
    10. '+' → logprob: -10.050004005432129

Token 502: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0160358939319849
    2. ' self' → logprob: -4.141036033630371
    3. '(self' → logprob: -14.516036033630371
    4. '[self' → logprob: -14.891036033630371
    5. '	self' → logprob: -14.891036033630371
    6. '=self' → logprob: -15.641036033630371
    7. ' ' → logprob: -17.016035079956055
    8. '           ' → logprob: -17.016035079956055
    9. '       ' → logprob: -17.016035079956055
    10. '1' → logprob: -17.891035079956055

Token 503: '.size' (ID: 4463)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.003228456014767289
    2. 'self' → logprob: -5.753228664398193
    3. ' size' → logprob: -10.378228187561035
    4. '.size' → logprob: -11.128228187561035
    5. '[size' → logprob: -12.753228187561035
    6. '_size' → logprob: -13.878228187561035
    7. 'y' → logprob: -15.003228187561035
    8. '[self' → logprob: -15.378228187561035
    9. '	size' → logprob: -15.628228187561035
    10. '
' → logprob: -16.12822914123535

Token 504: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -7.183501293184236e-05
    2. 'dict' → logprob: -10.50007152557373
    3. 'Dict' → logprob: -10.87507152557373
    4. 'arr' → logprob: -11.50007152557373
    5. '_arr' → logprob: -11.75007152557373
    6. 'size' → logprob: -12.12507152557373
    7. '_DICT' → logprob: -14.37507152557373
    8. 'id' → logprob: -14.62507152557373
    9. '[y' → logprob: -15.25007152557373
    10. 'o' → logprob: -16.750072479248047

Token 505: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -9.088346359931165e-07
    2. 'y' → logprob: -14.250000953674316
    3. '[' → logprob: -15.625000953674316
    4. ' [' → logprob: -17.875
    5. '```' → logprob: -18.375
    6. '(y' → logprob: -18.375
    7. '[
' → logprob: -19.875
    8. '   ' → logprob: -20.0
    9. '	y' → logprob: -20.0
    10. '[root' → logprob: -20.125

Token 506: '_root' (ID: 29989)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.029958050698041916
    2. '[y' → logprob: -4.029958248138428
    3. '_root' → logprob: -5.029958248138428
    4. 'root' → logprob: -5.404958248138428
    5. '_y' → logprob: -7.404958248138428
    6. '[root' → logprob: -9.52995777130127
    7. '(y' → logprob: -11.15495777130127
    8. 'x' → logprob: -13.02995777130127
    9. '```' → logprob: -13.40495777130127
    10. ' y' → logprob: -13.65495777130127

Token 507: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 508: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030261928215622902
    2. 'else' → logprob: -3.530261993408203
    3. ' else' → logprob: -7.905261993408203
    4. '```' → logprob: -9.405261993408203
    5. '               ' → logprob: -9.780261993408203
    6. '       ' → logprob: -12.905261993408203
    7. '          ' → logprob: -15.280261993408203
    8. 'elif' → logprob: -15.780261993408203
    9. '#else' → logprob: -16.030261993408203
    10. '<|end|>' → logprob: -16.155261993408203

Token 509: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.060450032353401184
    2. ' else' → logprob: -3.3104500770568848
    3. '           ' → logprob: -3.8104500770568848
    4. '               ' → logprob: -11.435449600219727
    5. '       ' → logprob: -12.560449600219727
    6. '```' → logprob: -12.685449600219727
    7. '	else' → logprob: -13.310449600219727
    8. 'elif' → logprob: -14.685449600219727
    9. '_else' → logprob: -14.810449600219727
    10. '          ' → logprob: -15.185449600219727

Token 510: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.752704918384552
    2. ':
' → logprob: -0.752704918384552
    3. '               ' → logprob: -2.8777048587799072
    4. '           ' → logprob: -7.377705097198486
    5. '{' → logprob: -7.627705097198486
    6. '{
' → logprob: -8.752704620361328
    7. '):
' → logprob: -9.502704620361328
    8. '```' → logprob: -10.502704620361328
    9. ':self' → logprob: -10.502704620361328
    10. '              ' → logprob: -10.752704620361328

Token 511: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005072805215604603
    2. '           ' → logprob: -8.375507354736328
    3. ' self' → logprob: -8.375507354736328
    4. 'self' → logprob: -10.250507354736328
    5. '              ' → logprob: -12.375507354736328
    6. '```' → logprob: -12.625507354736328
    7. '                   ' → logprob: -14.000507354736328
    8. '       ' → logprob: -14.125507354736328
    9. '                ' → logprob: -14.250507354736328
    10. '   ' → logprob: -14.500507354736328

Token 512: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0031893588602542877
    2. ' self' → logprob: -5.753189563751221
    3. '               ' → logprob: -11.628189086914062
    4. '           ' → logprob: -13.628189086914062
    5. '	self' → logprob: -14.253189086914062
    6. '[self' → logprob: -14.878189086914062
    7. '                   ' → logprob: -15.003189086914062
    8. '   ' → logprob: -16.253189086914062
    9. '(self' → logprob: -16.878189086914062
    10. '```' → logprob: -17.503189086914062

Token 513: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.16024424135684967
    2. 'parent' → logprob: -1.9102442264556885
    3. ' parent' → logprob: -11.16024398803711
    4. '	parent' → logprob: -13.66024398803711
    5. '_parent' → logprob: -13.78524398803711
    6. '.' → logprob: -14.03524398803711
    7. '
' → logprob: -14.03524398803711
    8. '[parent' → logprob: -14.03524398803711
    9. ',parent' → logprob: -14.78524398803711
    10. 'Parent' → logprob: -15.41024398803711

Token 514: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.00011605957115534693
    2. 'dict' → logprob: -9.125116348266602
    3. 'Dict' → logprob: -11.875116348266602
    4. '_DICT' → logprob: -16.7501163482666
    5. ' dict' → logprob: -17.6251163482666
    6. '
' → logprob: -18.2501163482666
    7. '_arr' → logprob: -18.3751163482666
    8. 'arr' → logprob: -18.6251163482666
    9. '```' → logprob: -18.7501163482666
    10. '_dic' → logprob: -19.1251163482666

Token 515: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.246537173457909e-06
    2. '[y' → logprob: -13.125003814697266
    3. 'x' → logprob: -13.750003814697266
    4. '[' → logprob: -13.875003814697266
    5. '```' → logprob: -16.625003814697266
    6. '

' → logprob: -16.875003814697266
    7. ' [' → logprob: -16.875003814697266
    8. '   ' → logprob: -17.625003814697266
    9. '[id' → logprob: -17.750003814697266
    10. '{x' → logprob: -18.000003814697266

Token 516: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.009768722578883171
    2. 'root' → logprob: -4.759768486022949
    3. '[root' → logprob: -7.884768486022949
    4. '_dict' → logprob: -8.13476848602295
    5. '[x' → logprob: -8.25976848602295
    6. '_x' → logprob: -9.13476848602295
    7. 'x' → logprob: -9.25976848602295
    8. 'dict' → logprob: -11.25976848602295
    9. ' root' → logprob: -13.00976848602295
    10. 'Root' → logprob: -13.38476848602295

Token 517: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11082421243190765
    2. ']' → logprob: -2.7358241081237793
    3. ' =' → logprob: -3.2358241081237793
    4. ']=' → logprob: -7.235824108123779
    5. ')' → logprob: -11.485824584960938
    6. ' ]' → logprob: -12.485824584960938
    7. ' ' → logprob: -15.110824584960938
    8. '[' → logprob: -15.610824584960938
    9. ')=' → logprob: -15.860824584960938
    10. '<|end|>' → logprob: -16.360824584960938

Token 518: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038042064756155014
    2. ' =' → logprob: -3.2880420684814453
    3. ')' → logprob: -14.913042068481445
    4. ']' → logprob: -15.288042068481445
    5. ']=' → logprob: -17.663042068481445
    6. ' ' → logprob: -18.163042068481445
    7. '=user' → logprob: -18.288042068481445
    8. '=y' → logprob: -18.538042068481445
    9. ')=' → logprob: -19.413042068481445
    10. '[' → logprob: -19.663042068481445

Token 519: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.47407716512680054
    2. ' y' → logprob: -0.9740771651268005
    3. '	y' → logprob: -16.224077224731445
    4. ' ' → logprob: -18.099077224731445
    5. '   ' → logprob: -18.224077224731445
    6. '_y' → logprob: -18.599077224731445
    7. '(y' → logprob: -19.099077224731445
    8. '           ' → logprob: -19.349077224731445
    9. '```' → logprob: -19.474077224731445
    10. ''y' → logprob: -19.974077224731445

Token 520: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.20309725403785706
    2. 'y' → logprob: -1.7030972242355347
    3. 'root' → logprob: -6.578097343444824
    4. '_y' → logprob: -8.203097343444824
    5. ' y' → logprob: -11.703097343444824
    6. '_' → logprob: -12.203097343444824
    7. '_right' → logprob: -12.703097343444824
    8. 'x' → logprob: -14.328097343444824
    9. '[y' → logprob: -15.203097343444824
    10. '(y' → logprob: -15.703097343444824

Token 521: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007376811117865145
    2. '
' → logprob: -8.250738143920898
    3. '           ' → logprob: -8.500738143920898
    4. '<|end|>' → logprob: -8.750738143920898
    5. '                   ' → logprob: -9.875738143920898
    6. '       ' → logprob: -10.875738143920898
    7. '              ' → logprob: -11.375738143920898
    8. '                ' → logprob: -11.750738143920898
    9. '                
' → logprob: -12.000738143920898
    10. '```' → logprob: -12.000738143920898

Token 522: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008834764012135565
    2. '           ' → logprob: -7.25088357925415
    3. '                   ' → logprob: -9.625883102416992
    4. '<|end|>' → logprob: -10.000883102416992
    5. '       ' → logprob: -10.625883102416992
    6. '              ' → logprob: -11.500883102416992
    7. '```' → logprob: -11.750883102416992
    8. '                ' → logprob: -12.250883102416992
    9. '   ' → logprob: -12.625883102416992
    10. '                
' → logprob: -13.250883102416992

Token 523: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008640455082058907
    2. ' self' → logprob: -4.758640289306641
    3. '               ' → logprob: -10.63364028930664
    4. '                   ' → logprob: -13.50864028930664
    5. '           ' → logprob: -15.75864028930664
    6. '[self' → logprob: -16.00864028930664
    7. '(self' → logprob: -17.38364028930664
    8. ' ' → logprob: -17.75864028930664
    9. '```' → logprob: -18.25864028930664
    10. '                ' → logprob: -18.25864028930664

Token 524: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.038042984902858734
    2. 'size' → logprob: -3.2880430221557617
    3. ' size' → logprob: -13.663043022155762
    4. 'siz' → logprob: -16.288042068481445
    5. '	size' → logprob: -16.413042068481445
    6. '.' → logprob: -16.663042068481445
    7. ' .' → logprob: -16.913042068481445
    8. '<size' → logprob: -16.913042068481445
    9. '[size' → logprob: -17.788042068481445
    10. ':size' → logprob: -18.538042068481445

Token 525: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -1.3856492842023727e-06
    2. 'dict' → logprob: -13.750000953674316
    3. 'Dict' → logprob: -15.625000953674316
    4. '_DICT' → logprob: -17.125001907348633
    5. '_size' → logprob: -18.125001907348633
    6. '```' → logprob: -18.625001907348633
    7. 'size' → logprob: -19.125001907348633
    8. '"_' → logprob: -19.875001907348633
    9. '\' → logprob: -20.000001907348633
    10. '   ' → logprob: -20.125001907348633

Token 526: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -5.080963092041202e-06
    2. 'y' → logprob: -12.875004768371582
    3. '[' → logprob: -13.000004768371582
    4. ' [' → logprob: -16.7500057220459
    5. '```' → logprob: -17.1250057220459
    6. '   ' → logprob: -17.7500057220459
    7. '	y' → logprob: -18.0000057220459
    8. '[root' → logprob: -18.3750057220459
    9. '[
' → logprob: -18.6250057220459
    10. '       ' → logprob: -19.3750057220459

Token 527: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -1.688212614681106e-05
    2. 'root' → logprob: -11.125017166137695
    3. '_right' → logprob: -13.750017166137695
    4. '_dict' → logprob: -14.875017166137695
    5. '_y' → logprob: -15.250017166137695
    6. '[root' → logprob: -15.250017166137695
    7. 'Root' → logprob: -16.125017166137695
    8. '_ROOT' → logprob: -17.500017166137695
    9. '_ro' → logprob: -18.125017166137695
    10. 'y' → logprob: -18.250017166137695

Token 528: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7627843618392944
    2. ']+=' → logprob: -1.2627843618392944
    3. '+=' → logprob: -1.6377843618392944
    4. ' +=' → logprob: -2.887784481048584
    5. ']+' → logprob: -7.762784481048584
    6. ' ]' → logprob: -9.637784004211426
    7. '[' → logprob: -9.762784004211426
    8. '+' → logprob: -9.762784004211426
    9. ')' → logprob: -11.387784004211426
    10. '           ' → logprob: -12.262784004211426

Token 529: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3871275782585144
    2. ' +=' → logprob: -1.1371276378631592
    3. ']+=' → logprob: -8.762127876281738
    4. '+' → logprob: -10.262127876281738
    5. '[' → logprob: -10.887127876281738
    6. '          ' → logprob: -11.137127876281738
    7. '        ' → logprob: -11.762127876281738
    8. '       ' → logprob: -11.887127876281738
    9. '           ' → logprob: -12.262127876281738
    10. '         ' → logprob: -13.012127876281738

Token 530: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010353106772527099
    2. ' self' → logprob: -6.876035213470459
    3. '(self' → logprob: -13.376035690307617
    4. '[self' → logprob: -14.376035690307617
    5. '	self' → logprob: -15.751035690307617
    6. '=self' → logprob: -16.751035690307617
    7. '           ' → logprob: -17.501035690307617
    8. '       ' → logprob: -17.626035690307617
    9. '               ' → logprob: -17.751035690307617
    10. '```' → logprob: -18.001035690307617

Token 531: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.12798447906970978
    2. 'size' → logprob: -2.1279845237731934
    3. 'self' → logprob: -6.877984523773193
    4. '_size' → logprob: -11.002984046936035
    5. ' size' → logprob: -12.252984046936035
    6. '[size' → logprob: -13.377984046936035
    7. 's' → logprob: -14.377984046936035
    8. '	size' → logprob: -14.627984046936035
    9. '       ' → logprob: -15.127984046936035
    10. 'sizes' → logprob: -15.752984046936035

Token 532: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -2.546478935983032e-05
    2. 'dict' → logprob: -11.250025749206543
    3. 'size' → logprob: -11.625025749206543
    4. 'Dict' → logprob: -13.000025749206543
    5. '_arr' → logprob: -14.500025749206543
    6. 'self' → logprob: -15.875025749206543
    7. 'arr' → logprob: -15.875025749206543
    8. '[size' → logprob: -16.125024795532227
    9. '_DICT' → logprob: -16.250024795532227
    10. '_size' → logprob: -16.750024795532227

Token 533: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -7.465036105713807e-06
    2. '[' → logprob: -13.000007629394531
    3. 'x' → logprob: -13.000007629394531
    4. '(x' → logprob: -13.625007629394531
    5. '```' → logprob: -14.250007629394531
    6. 'dict' → logprob: -15.000007629394531
    7. '{x' → logprob: -15.375007629394531
    8. '[y' → logprob: -15.875007629394531
    9. ' [' → logprob: -16.25000762939453
    10. ' x' → logprob: -16.37500762939453

Token 534: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.08968253433704376
    2. 'root' → logprob: -2.4646825790405273
    3. '_x' → logprob: -7.339682579040527
    4. 'x' → logprob: -10.214682579040527
    5. '[root' → logprob: -10.339682579040527
    6. '[x' → logprob: -11.214682579040527
    7. 'Root' → logprob: -12.339682579040527
    8. ' root' → logprob: -13.339682579040527
    9. '```' → logprob: -13.589682579040527
    10. 'ROOT' → logprob: -14.714682579040527

Token 535: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016340387985110283
    2. '           ' → logprob: -4.141340255737305
    3. '       ' → logprob: -8.516340255737305
    4. ')
' → logprob: -10.016340255737305
    5. '```' → logprob: -11.391340255737305
    6. ']
' → logprob: -11.516340255737305
    7. '   ' → logprob: -11.891340255737305
    8. '                   ' → logprob: -12.391340255737305
    9. '              ' → logprob: -12.516340255737305
    10. 'if' → logprob: -12.516340255737305

Token 536: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.703443770878948e-06
    2. '           ' → logprob: -12.375007629394531
    3. '       ' → logprob: -13.625007629394531
    4. '```' → logprob: -13.625007629394531
    5. '              ' → logprob: -14.625007629394531
    6. '<|end|>' → logprob: -15.125007629394531
    7. '                   ' → logprob: -15.875007629394531
    8. '                ' → logprob: -16.62500762939453
    9. '		       ' → logprob: -17.12500762939453
    10. '			' → logprob: -17.25000762939453

Token 537: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1429494321346283
    2. '               ' → logprob: -2.142949342727661
    3. ' if' → logprob: -4.14294958114624
    4. '           ' → logprob: -11.642949104309082
    5. '```' → logprob: -12.142949104309082
    6. '                   ' → logprob: -13.517949104309082
    7. '   ' → logprob: -13.767949104309082
    8. ' ' → logprob: -14.517949104309082
    9. '       ' → logprob: -15.017949104309082
    10. '	if' → logprob: -15.517949104309082

Token 538: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6326172351837158
    2. ' self' → logprob: -0.7576172351837158
    3. '(self' → logprob: -11.257616996765137
    4. '   ' → logprob: -13.507616996765137
    5. '	self' → logprob: -13.507616996765137
    6. '[self' → logprob: -13.632616996765137
    7. ' ' → logprob: -14.507616996765137
    8. '           ' → logprob: -16.132617950439453
    9. '```' → logprob: -16.132617950439453
    10. '
' → logprob: -16.382617950439453

Token 539: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -5.3358446166384965e-05
    2. 'rank' → logprob: -9.875053405761719
    3. '_rank' → logprob: -13.875053405761719
    4. ' rank' → logprob: -14.375053405761719
    5. 'ank' → logprob: -16.00005340576172
    6. '(rank' → logprob: -16.25005340576172
    7. 'Rank' → logprob: -16.75005340576172
    8. ' .' → logprob: -17.00005340576172
    9. '.' → logprob: -19.00005340576172
    10. '
' → logprob: -20.00005340576172

Token 540: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -3.2378600735682994e-05
    2. 'dict' → logprob: -10.375032424926758
    3. 'Dict' → logprob: -14.375032424926758
    4. '[x' → logprob: -16.125032424926758
    5. '_DICT' → logprob: -16.125032424926758
    6. '[y' → logprob: -16.250032424926758
    7. '[' → logprob: -16.250032424926758
    8. 'self' → logprob: -17.875032424926758
    9. '[self' → logprob: -18.250032424926758
    10. '[_' → logprob: -19.125032424926758

Token 541: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00034809779026545584
    2. '[y' → logprob: -8.000348091125488
    3. '[' → logprob: -11.500348091125488
    4. ' [' → logprob: -13.625348091125488
    5. '[root' → logprob: -14.000348091125488
    6. '[
' → logprob: -16.125349044799805
    7. 'x' → logprob: -16.375349044799805
    8. '   ' → logprob: -17.125349044799805
    9. '(x' → logprob: -17.500349044799805
    10. '

' → logprob: -17.500349044799805

Token 542: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.0003908735525328666
    2. 'root' → logprob: -7.875391006469727
    3. '[root' → logprob: -11.625391006469727
    4. 'Root' → logprob: -13.875391006469727
    5. ' root' → logprob: -14.750391006469727
    6. '_ROOT' → logprob: -15.750391006469727
    7. '_x' → logprob: -16.500391006469727
    8. '[x' → logprob: -16.625391006469727
    9. '_ro' → logprob: -16.875391006469727
    10. '	root' → logprob: -17.375391006469727

Token 543: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5859403610229492
    2. ' ==' → logprob: -0.8359403610229492
    3. ']==' → logprob: -5.085940361022949
    4. ']' → logprob: -5.835940361022949
    5. '[y' → logprob: -8.21094036102295
    6. '[' → logprob: -8.21094036102295
    7. '[x' → logprob: -8.83594036102295
    8. '[id' → logprob: -9.21094036102295
    9. '==
' → logprob: -10.96094036102295
    10. ')==' → logprob: -11.58594036102295

Token 544: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4741012752056122
    2. ' ==' → logprob: -0.9741013050079346
    3. ']==' → logprob: -11.349101066589355
    4. '==
' → logprob: -12.099101066589355
    5. '[' → logprob: -12.224101066589355
    6. ')==' → logprob: -14.474101066589355
    7. ']' → logprob: -14.724101066589355
    8. '=' → logprob: -15.224101066589355
    9. '===' → logprob: -15.474101066589355
    10. '[y' → logprob: -15.724101066589355

Token 545: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008620012551546097
    2. ' self' → logprob: -4.758619785308838
    3. '[self' → logprob: -13.133620262145996
    4. '               ' → logprob: -13.633620262145996
    5. '(self' → logprob: -14.383620262145996
    6. '                   ' → logprob: -14.508620262145996
    7. '	self' → logprob: -15.133620262145996
    8. '=self' → logprob: -15.258620262145996
    9. '           ' → logprob: -15.758620262145996
    10. '
' → logprob: -15.883620262145996

Token 546: '.rank' (ID: 96793)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.0819861963391304
    2. '_rank' → logprob: -2.58198618888855
    3. '.rank' → logprob: -5.831986427307129
    4. ' rank' → logprob: -9.831986427307129
    5. '[y' → logprob: -10.081986427307129
    6. 'dict' → logprob: -10.331986427307129
    7. '_dict' → logprob: -11.706986427307129
    8. 'self' → logprob: -11.706986427307129
    9. 'Rank' → logprob: -11.831986427307129
    10. '
' → logprob: -12.956986427307129

Token 547: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.0005134754464961588
    2. 'dict' → logprob: -7.625513553619385
    3. '[y' → logprob: -10.875513076782227
    4. 'Dict' → logprob: -12.250513076782227
    5. '_DICT' → logprob: -13.750513076782227
    6. '```' → logprob: -15.875513076782227
    7. 'y' → logprob: -16.125513076782227
    8. '[' → logprob: -16.625513076782227
    9. '[x' → logprob: -16.750513076782227
    10. 'edict' → logprob: -17.125513076782227

Token 548: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -5.796184723294573e-06
    2. 'y' → logprob: -12.125005722045898
    3. '[' → logprob: -15.625005722045898
    4. '[root' → logprob: -16.8750057220459
    5. '```' → logprob: -17.2500057220459
    6. '	y' → logprob: -18.0000057220459
    7. ' y' → logprob: -18.8750057220459
    8. '[x' → logprob: -18.8750057220459
    9. '(y' → logprob: -19.5000057220459
    10. '[user' → logprob: -19.6250057220459

Token 549: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.4895310699939728
    2. 'y' → logprob: -1.7395310401916504
    3. 'root' → logprob: -1.7395310401916504
    4. '_y' → logprob: -3.3645310401916504
    5. '[y' → logprob: -7.23953104019165
    6. '[root' → logprob: -7.48953104019165
    7. ' y' → logprob: -12.364531517028809
    8. ' root' → logprob: -12.614531517028809
    9. 'yor' → logprob: -12.739531517028809
    10. 'Root' → logprob: -13.114531517028809

Token 550: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.08292992413043976
    2. ']:' → logprob: -3.332929849624634
    3. '[y' → logprob: -4.082930088043213
    4. ':
' → logprob: -4.832930088043213
    5. '                   ' → logprob: -4.957930088043213
    6. '               ' → logprob: -5.082930088043213
    7. ']' → logprob: -5.832930088043213
    8. ':' → logprob: -6.332930088043213
    9. 'y' → logprob: -8.082929611206055
    10. '           ' → logprob: -8.207929611206055

Token 551: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003478593716863543
    2. ' self' → logprob: -8.750348091125488
    3. '   ' → logprob: -9.750348091125488
    4. '                       ' → logprob: -9.875348091125488
    5. 'self' → logprob: -10.500348091125488
    6. '               ' → logprob: -10.625348091125488
    7. '           ' → logprob: -11.500348091125488
    8. '                  ' → logprob: -11.500348091125488
    9. '[self' → logprob: -13.375348091125488
    10. ' ' → logprob: -13.500348091125488

Token 552: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03813730552792549
    2. ' self' → logprob: -3.288137197494507
    3. '                   ' → logprob: -9.288137435913086
    4. '               ' → logprob: -13.288137435913086
    5. '                       ' → logprob: -14.538137435913086
    6. '	self' → logprob: -15.038137435913086
    7. '   ' → logprob: -15.038137435913086
    8. '           ' → logprob: -15.538137435913086
    9. '[self' → logprob: -15.663137435913086
    10. '(self' → logprob: -16.788137435913086

Token 553: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.029766106978058815
    2. 'rank' → logprob: -3.529766082763672
    3. ' rank' → logprob: -11.154766082763672
    4. '_rank' → logprob: -14.154766082763672
    5. '(rank' → logprob: -15.029766082763672
    6. 'Rank' → logprob: -15.779766082763672
    7. '.' → logprob: -16.654766082763672
    8. ' .' → logprob: -16.779766082763672
    9. '   ' → logprob: -17.529766082763672
    10. '
' → logprob: -17.654766082763672

Token 554: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -3.650518920039758e-06
    2. 'dict' → logprob: -12.625003814697266
    3. 'Dict' → logprob: -16.250003814697266
    4. '_DICT' → logprob: -16.375003814697266
    5. '[' → logprob: -17.875003814697266
    6. '_d' → logprob: -18.625003814697266
    7. '_dic' → logprob: -19.000003814697266
    8. '_' → logprob: -19.000003814697266
    9. '           ' → logprob: -19.625003814697266
    10. '<|end|>' → logprob: -19.750003814697266

Token 555: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.250001907348633
    3. 'y' → logprob: -15.000001907348633
    4. ' [' → logprob: -17.375001907348633
    5. '[x' → logprob: -18.625001907348633
    6. '[root' → logprob: -18.625001907348633
    7. '   ' → logprob: -18.750001907348633
    8. '[
' → logprob: -19.000001907348633
    9. '[self' → logprob: -19.750001907348633
    10. '	y' → logprob: -19.875001907348633

Token 556: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.001383805531077087
    2. 'root' → logprob: -7.6263837814331055
    3. '[root' → logprob: -7.7513837814331055
    4. '_y' → logprob: -8.001383781433105
    5. '[y' → logprob: -9.001383781433105
    6. 'y' → logprob: -12.251383781433105
    7. '[x' → logprob: -14.376383781433105
    8. 'Root' → logprob: -14.501383781433105
    9. ' root' → logprob: -14.751383781433105
    10. '_x' → logprob: -15.126383781433105

Token 557: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.32331621646881104
    2. ']+=' → logprob: -1.323316216468811
    3. ' +=' → logprob: -5.0733160972595215
    4. '+=' → logprob: -5.9483160972595215
    5. ' ]' → logprob: -6.8233160972595215
    6. ']+' → logprob: -10.94831657409668
    7. '']' → logprob: -11.82331657409668
    8. '```' → logprob: -11.94831657409668
    9. '"]' → logprob: -12.32331657409668
    10. '                   ' → logprob: -13.07331657409668

Token 558: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10023416578769684
    2. ' +=' → logprob: -2.350234270095825
    3. ']+=' → logprob: -10.600234031677246
    4. '=' → logprob: -12.975234031677246
    5. '+' → logprob: -15.225234031677246
    6. ' =' → logprob: -17.725234985351562
    7. '                   ' → logprob: -18.100234985351562
    8. '                    ' → logprob: -18.475234985351562
    9. '   ' → logprob: -18.600234985351562
    10. '    ' → logprob: -18.725234985351562

Token 559: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023246178403496742
    2. ' ' → logprob: -3.7732462882995605
    3. '   ' → logprob: -14.273245811462402
    4. '```' → logprob: -17.39824676513672
    5. ' ' → logprob: -17.64824676513672
    6. '  ' → logprob: -19.02324676513672
    7. '           ' → logprob: -19.27324676513672
    8. '       ' → logprob: -19.27324676513672
    9. '
' → logprob: -19.27324676513672
    10. '0' → logprob: -19.64824676513672

Token 560: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.750017166137695
    4. '```' → logprob: -19.500017166137695
    5. '  ' → logprob: -21.125017166137695
    6. '0' → logprob: -21.375017166137695
    7. '       ' → logprob: -21.500017166137695
    8. '           ' → logprob: -21.875017166137695
    9. '
' → logprob: -22.125017166137695
    10. '+' → logprob: -22.312517166137695

Token 561: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 562: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03693308308720589
    2. '<|end|>' → logprob: -3.786933183670044
    3. 'def' → logprob: -4.411932945251465
    4. '
' → logprob: -7.411932945251465
    5. '<|end|>' → logprob: -8.536932945251465
    6. '    
' → logprob: -8.911932945251465
    7. ' def' → logprob: -8.911932945251465
    8. '```' → logprob: -9.036932945251465
    9. '	def' → logprob: -9.161932945251465
    10. ' ' → logprob: -10.286932945251465

Token 563: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.7252845029579476e-05
    2. ' def' → logprob: -10.750027656555176
    3. '   ' → logprob: -12.125027656555176
    4. '	def' → logprob: -15.750027656555176
    5. ' ' → logprob: -16.37502670288086
    6. '@property' → logprob: -17.87502670288086
    7. '#' → logprob: -18.12502670288086
    8. '    
' → logprob: -18.37502670288086
    9. '  ' → logprob: -18.87502670288086
    10. 'de' → logprob: -19.00002670288086

Token 564: ' component' (ID: 6392)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.5177680253982544
    2. 'get' → logprob: -1.5177680253982544
    3. ' size' → logprob: -2.017767906188965
    4. 'size' → logprob: -3.017767906188965
    5. ' component' → logprob: -6.642767906188965
    6. 'component' → logprob: -6.767767906188965
    7. ' gets' → logprob: -8.142767906188965
    8. ' connected' → logprob: -9.392767906188965
    9. ' same' → logprob: -10.142767906188965
    10. '	get' → logprob: -10.517767906188965

Token 565: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.0022619483061134815
    2. 's' → logprob: -6.502262115478516
    3. '_sizes' → logprob: -8.002262115478516
    4. '_count' → logprob: -8.502262115478516
    5. 'size' → logprob: -8.502262115478516
    6. '_sz' → logprob: -12.127262115478516
    7. '_' → logprob: -12.502262115478516
    8. '_s' → logprob: -12.752262115478516
    9. '__' → logprob: -13.377262115478516
    10. ' size' → logprob: -13.752262115478516

Token 566: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008087906171567738
    2. '(' → logprob: -7.1258087158203125
    3. '(
' → logprob: -13.250808715820312
    4. '(s' → logprob: -13.625808715820312
    5. '(Self' → logprob: -15.250808715820312
    6. ' (' → logprob: -15.375808715820312
    7. '(this' → logprob: -15.500808715820312
    8. 'self' → logprob: -15.750808715820312
    9. '(sel' → logprob: -15.750808715820312
    10. '<|end|>' → logprob: -16.750808715820312

Token 567: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.723973582556937e-05
    2. 'self' → logprob: -11.000017166137695
    3. ' ,' → logprob: -15.250017166137695
    4. ',
' → logprob: -16.250017166137695
    5. ',self' → logprob: -16.875017166137695
    6. '   ' → logprob: -17.000017166137695
    7. '(self' → logprob: -17.125017166137695
    8. '_,' → logprob: -17.500017166137695
    9. 's' → logprob: -17.625017166137695
    10. ',id' → logprob: -17.750017166137695

Token 568: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.015113171190023422
    2. ' id' → logprob: -4.390113353729248
    3. 'x' → logprob: -6.015113353729248
    4. 'node' → logprob: -9.51511287689209
    5. ' x' → logprob: -10.01511287689209
    6. 'v' → logprob: -11.76511287689209
    7. 'component' → logprob: -11.76511287689209
    8. ' node' → logprob: -11.89011287689209
    9. 'self' → logprob: -12.64011287689209
    10. ' ' → logprob: -12.64011287689209

Token 569: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0010426939697936177
    2. '):' → logprob: -7.37604284286499
    3. '_' → logprob: -8.001042366027832
    4. ')' → logprob: -9.876042366027832
    5. '):
' → logprob: -11.876042366027832
    6. '_)' → logprob: -12.501042366027832
    7. ')_' → logprob: -12.626042366027832
    8. 'x' → logprob: -12.751042366027832
    9. '_
' → logprob: -13.126042366027832
    10. '   ' → logprob: -13.251042366027832

Token 570: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03814281150698662
    2. '):
' → logprob: -3.2881429195404053
    3. ')' → logprob: -9.288143157958984
    4. '):
' → logprob: -12.288143157958984
    5. '):

' → logprob: -13.163143157958984
    6. '   ' → logprob: -13.413143157958984
    7. '       ' → logprob: -15.288143157958984
    8. ' ):' → logprob: -15.538143157958984
    9. ':' → logprob: -15.663143157958984
    10. ' ' → logprob: -16.788143157958984

Token 571: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000318065780447796
    2. ' if' → logprob: -8.25031852722168
    3. 'if' → logprob: -9.87531852722168
    4. 'return' → logprob: -13.12531852722168
    5. ' return' → logprob: -13.50031852722168
    6. '   ' → logprob: -14.87531852722168
    7. '#' → logprob: -15.12531852722168
    8. '[' → logprob: -15.25031852722168
    9. 'size' → logprob: -15.37531852722168
    10. '
' → logprob: -16.25031852722168

Token 572: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13456052541732788
    2. '       ' → logprob: -2.1345605850219727
    3. 'return' → logprob: -5.134560585021973
    4. ' if' → logprob: -6.384560585021973
    5. '   ' → logprob: -11.009560585021973
    6. ' return' → logprob: -12.134560585021973
    7. 'size' → logprob: -12.884560585021973
    8. 'x' → logprob: -14.759560585021973
    9. '
' → logprob: -15.259560585021973
    10. '#' → logprob: -15.259560585021973

Token 573: ' hasattr' (ID: 75562)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.0025008674710989
    2. ' hasattr' → logprob: -6.002501010894775
    3. ' has' → logprob: -11.127500534057617
    4. '(has' → logprob: -12.002500534057617
    5. '.has' → logprob: -12.752500534057617
    6. '_has' → logprob: -14.252500534057617
    7. '	has' → logprob: -14.502500534057617
    8. 'have' → logprob: -15.877500534057617
    9. 'ha' → logprob: -15.877500534057617
    10. 'hat' → logprob: -17.002500534057617

Token 574: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03375024348497391
    2. 'self' → logprob: -3.408750295639038
    3. ' self' → logprob: -9.658750534057617
    4. '(' → logprob: -10.783750534057617
    5. ' (' → logprob: -12.158750534057617
    6. ' ' → logprob: -12.783750534057617
    7. 's' → logprob: -13.033750534057617
    8. '=self' → logprob: -13.033750534057617
    9. '[self' → logprob: -13.033750534057617
    10. '	self' → logprob: -13.408750534057617

Token 575: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.088346359931165e-07
    2. ',parent' → logprob: -14.625000953674316
    3. 'parent' → logprob: -15.500000953674316
    4. 'self' → logprob: -15.875000953674316
    5. ' ,' → logprob: -16.625
    6. '_parent' → logprob: -18.0
    7. ',"' → logprob: -18.25
    8. ',self' → logprob: -18.375
    9. 'import' → logprob: -18.875
    10. ',
' → logprob: -19.25

Token 576: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029786361381411552
    2. ' "' → logprob: -3.5297863483428955
    3. ' ' → logprob: -11.404786109924316
    4. '"user' → logprob: -11.904786109924316
    5. '"value' → logprob: -12.029786109924316
    6. '"class' → logprob: -12.904786109924316
    7. '   ' → logprob: -13.529786109924316
    8. 'self' → logprob: -13.654786109924316
    9. '"name' → logprob: -13.654786109924316
    10. '"s' → logprob: -14.029786109924316

Token 577: 'size' (ID: 4461)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.1875571544806007e-05
    2. ' parent' → logprob: -11.625011444091797
    3. 'size' → logprob: -13.125011444091797
    4. '.parent' → logprob: -15.625011444091797
    5. '	parent' → logprob: -15.875011444091797
    6. ' ' → logprob: -16.000011444091797
    7. '(parent' → logprob: -16.000011444091797
    8. '   ' → logprob: -16.250011444091797
    9. '_parent' → logprob: -16.250011444091797
    10. '
' → logprob: -16.375011444091797

Token 578: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -3.531315314830863e-06
    2. '_dict' → logprob: -12.750003814697266
    3. '_' → logprob: -15.375003814697266
    4. 'arr' → logprob: -15.375003814697266
    5. '"_' → logprob: -16.625003814697266
    6. '_array' → logprob: -17.250003814697266
    7. '	arr' → logprob: -19.250003814697266
    8. '_ar' → logprob: -19.750003814697266
    9. ' _' → logprob: -19.875003814697266
    10. '_dic' → logprob: -20.125003814697266

Token 579: '"):
' (ID: 33645)
  Prédit: '"):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"):
' → logprob: -0.04955007880926132
    2. '):
' → logprob: -3.0495500564575195
    3. '"):' → logprob: -7.0495500564575195
    4. ''):
' → logprob: -10.92455005645752
    5. '):' → logprob: -11.17455005645752
    6. '"' → logprob: -11.29955005645752
    7. '")' → logprob: -11.29955005645752
    8. '   ' → logprob: -11.42455005645752
    9. '"):
' → logprob: -11.79955005645752
    10. ')' → logprob: -12.67455005645752

Token 580: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031425125780515373
    2. ' if' → logprob: -8.500314712524414
    3. 'if' → logprob: -10.000314712524414
    4. 'return' → logprob: -10.375314712524414
    5. '
' → logprob: -11.125314712524414
    6. ' return' → logprob: -11.750314712524414
    7. '           ' → logprob: -12.250314712524414
    8. '   ' → logprob: -12.250314712524414
    9. '{
' → logprob: -15.000314712524414
    10. '        
' → logprob: -15.375314712524414

Token 581: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007121934904716909
    2. ' return' → logprob: -7.7507123947143555
    3. '       ' → logprob: -8.250712394714355
    4. 'root' → logprob: -11.375712394714355
    5. 'x' → logprob: -11.750712394714355
    6. 'id' → logprob: -14.125712394714355
    7. 'self' → logprob: -15.500712394714355
    8. '   ' → logprob: -16.25071144104004
    9. '	return' → logprob: -17.37571144104004
    10. 'idx' → logprob: -19.25071144104004

Token 582: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00861468818038702
    2. ' self' → logprob: -4.758614540100098
    3. '   ' → logprob: -17.008615493774414
    4. '       ' → logprob: -17.008615493774414
    5. '           ' → logprob: -17.508615493774414
    6. '(self' → logprob: -17.508615493774414
    7. '[self' → logprob: -18.383615493774414
    8. '0' → logprob: -18.883615493774414
    9. '1' → logprob: -19.258615493774414
    10. '	self' → logprob: -19.633615493774414

Token 583: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.0019575366750359535
    2. '.parent' → logprob: -6.251957416534424
    3. '.' → logprob: -11.251957893371582
    4. 'size' → logprob: -11.626957893371582
    5. ' .' → logprob: -12.501957893371582
    6. '.s' → logprob: -13.376957893371582
    7. '.component' → logprob: -14.376957893371582
    8. '.SIZE' → logprob: -15.376957893371582
    9. 'parent' → logprob: -15.626957893371582
    10. '.py' → logprob: -16.251956939697266

Token 584: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.9361264946837764e-07
    2. 'arr' → logprob: -16.125
    3. '_array' → logprob: -18.0
    4. '[_' → logprob: -19.25
    5. ' _' → logprob: -20.0
    6. '	arr' → logprob: -20.25
    7. '_' → logprob: -20.5
    8. '[arr' → logprob: -21.0
    9. '```' → logprob: -21.0
    10. '$arr' → logprob: -21.0

Token 585: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -1.8670179997570813e-05
    2. '[' → logprob: -11.125019073486328
    3. 'self' → logprob: -12.500019073486328
    4. '[
' → logprob: -16.375019073486328
    5. ' [' → logprob: -17.375019073486328
    6. ' self' → logprob: -17.750019073486328
    7. '[id' → logprob: -17.875019073486328
    8. '(self' → logprob: -18.500019073486328
    9. '[this' → logprob: -20.125019073486328
    10. '[[' → logprob: -20.875019073486328

Token 586: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.00016146517009474337
    2. 'find' → logprob: -8.750161170959473
    3. '.' → logprob: -12.750161170959473
    4. ' .' → logprob: -16.62516212463379
    5. '.parent' → logprob: -17.25016212463379
    6. ' find' → logprob: -18.12516212463379
    7. '	find' → logprob: -18.62516212463379
    8. '.
' → logprob: -19.00016212463379
    9. '=find' → logprob: -19.50016212463379
    10. 'parent' → logprob: -19.75016212463379

Token 587: '(id' (ID: 6589)
  Prédit: '(id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: -4.644463479053229e-05
    2. '(' → logprob: -10.000046730041504
    3. 'id' → logprob: -14.125046730041504
    4. '(
' → logprob: -16.125045776367188
    5. ' (' → logprob: -16.875045776367188
    6. ' id' → logprob: -18.250045776367188
    7. '[id' → logprob: -19.375045776367188
    8. ',id' → logprob: -20.125045776367188
    9. '=id' → logprob: -20.250045776367188
    10. '(

' → logprob: -20.500045776367188

Token 588: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.759734732331708e-05
    2. 'x' → logprob: -11.000017166137695
    3. '(x' → logprob: -14.625017166137695
    4. '_' → logprob: -16.000017166137695
    5. '```' → logprob: -16.875017166137695
    6. ')' → logprob: -17.250017166137695
    7. '_id' → logprob: -17.250017166137695
    8. '   ' → logprob: -17.750017166137695
    9. '(id' → logprob: -18.000017166137695
    10. '(' → logprob: -18.375017166137695

Token 589: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0013463040813803673
    2. '(id' → logprob: -6.751346111297607
    3. '(' → logprob: -9.126346588134766
    4. ')]
' → logprob: -10.376346588134766
    5. ')' → logprob: -11.626346588134766
    6. ' )' → logprob: -12.126346588134766
    7. '(x' → logprob: -12.126346588134766
    8. ')])' → logprob: -12.376346588134766
    9. '())' → logprob: -12.501346588134766
    10. '   ' → logprob: -13.126346588134766

Token 590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022606621496379375
    2. 'else' → logprob: -9.000226020812988
    3. '	' → logprob: -10.125226020812988
    4. '   ' → logprob: -10.375226020812988
    5. 'return' → logprob: -10.875226020812988
    6. '```' → logprob: -12.375226020812988
    7. ' else' → logprob: -12.875226020812988
    8. '           ' → logprob: -13.250226020812988
    9. '
' → logprob: -13.250226020812988
    10. 'elif' → logprob: -14.250226020812988

Token 591: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2551802098751068
    2. '       ' → logprob: -1.5051802396774292
    3. ' else' → logprob: -5.755180358886719
    4. '	else' → logprob: -10.130180358886719
    5. '   ' → logprob: -10.380180358886719
    6. 'return' → logprob: -12.380180358886719
    7. '```' → logprob: -13.505180358886719
    8. '	' → logprob: -13.630180358886719
    9. 'elif' → logprob: -13.880180358886719
    10. 'def' → logprob: -15.380180358886719

Token 592: ':
' (ID: 734)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.495657742023468
    2. '       ' → logprob: -2.1206576824188232
    3. '           ' → logprob: -2.1206576824188232
    4. ' return' → logprob: -2.2456576824188232
    5. ':
' → logprob: -3.3706576824188232
    6. ':' → logprob: -5.620657920837402
    7. '   ' → logprob: -5.620657920837402
    8. ':return' → logprob: -6.870657920837402
    9. '(' → logprob: -6.995657920837402
    10. '	return' → logprob: -8.120657920837402

Token 593: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05553024634718895
    2. 'return' → logprob: -3.305530309677124
    3. ' return' → logprob: -4.055530071258545
    4. '   ' → logprob: -11.555530548095703
    5. '	return' → logprob: -14.305530548095703
    6. '           ' → logprob: -15.305530548095703
    7. ' ' → logprob: -17.555530548095703
    8. '     ' → logprob: -18.055530548095703
    9. '      ' → logprob: -18.180530548095703
    10. '	' → logprob: -18.680530548095703

Token 594: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0001246348983841017
    2. ' return' → logprob: -9.00012493133545
    3. '       ' → logprob: -13.75012493133545
    4. '           ' → logprob: -16.125123977661133
    5. '   ' → logprob: -19.250123977661133
    6. '
' → logprob: -21.500123977661133
    7. '```' → logprob: -21.500123977661133
    8. '	return' → logprob: -21.750123977661133
    9. '               ' → logprob: -22.375123977661133
    10. 'eturn' → logprob: -23.500123977661133

Token 595: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009114635176956654
    2. ' self' → logprob: -7.000911235809326
    3. '(self' → logprob: -18.750911712646484
    4. '   ' → logprob: -20.000911712646484
    5. '	self' → logprob: -20.125911712646484
    6. '           ' → logprob: -20.125911712646484
    7. '[self' → logprob: -20.500911712646484
    8. '       ' → logprob: -20.875911712646484
    9. '=self' → logprob: -22.250911712646484
    10. '
' → logprob: -22.375911712646484

Token 596: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -9.639096970204264e-05
    2. 'size' → logprob: -9.250096321105957
    3. '.parent' → logprob: -15.625096321105957
    4. '.' → logprob: -17.750097274780273
    5. 'sizes' → logprob: -18.750097274780273
    6. ' .' → logprob: -18.875097274780273
    7. 'parent' → logprob: -18.875097274780273
    8. ' size' → logprob: -19.750097274780273
    9. 'siz' → logprob: -19.875097274780273
    10. '	size' → logprob: -19.875097274780273

Token 597: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -3.4121114822482923e-06
    2. 'dict' → logprob: -13.125003814697266
    3. 'size' → logprob: -13.625003814697266
    4. '_size' → logprob: -16.125003814697266
    5. 'Dict' → logprob: -16.750003814697266
    6. '_DICT' → logprob: -17.375003814697266
    7. 'arr' → logprob: -17.750003814697266
    8. '._' → logprob: -17.875003814697266
    9. '```' → logprob: -18.000003814697266
    10. '_arr' → logprob: -18.000003814697266

Token 598: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -1.318681188422488e-05
    2. 'self' → logprob: -11.25001335144043
    3. '[' → logprob: -15.75001335144043
    4. '(self' → logprob: -17.25001335144043
    5. ' self' → logprob: -18.12501335144043
    6. '[
' → logprob: -19.87501335144043
    7. '	self' → logprob: -20.12501335144043
    8. '```' → logprob: -20.50001335144043
    9. '[[' → logprob: -21.00001335144043
    10. ' [' → logprob: -21.00001335144043

Token 599: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.1269330382347107
    2. 'find' → logprob: -2.1269330978393555
    3. '.' → logprob: -12.751933097839355
    4. '(find' → logprob: -13.501933097839355
    5. '	find' → logprob: -15.626933097839355
    6. '=find' → logprob: -15.751933097839355
    7. '_find' → logprob: -15.751933097839355
    8. ' find' → logprob: -16.12693214416504
    9. '.findall' → logprob: -16.75193214416504
    10. ' .' → logprob: -17.62693214416504

Token 600: '(id' (ID: 6589)
  Prédit: '(id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(id' → logprob: 0.0
    2. '[id' → logprob: -18.75
    3. 'id' → logprob: -19.625
    4. '(' → logprob: -20.125
    5. ',id' → logprob: -20.125
    6. '?id' → logprob: -20.5
    7. ' (' → logprob: -20.875
    8. '=id' → logprob: -21.125
    9. '(x' → logprob: -21.625
    10. '(
' → logprob: -21.625

Token 601: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.01818517968058586
    2. 'x' → logprob: -4.018185138702393
    3. '(x' → logprob: -10.39318561553955
    4. 'id' → logprob: -13.26818561553955
    5. 'dict' → logprob: -14.14318561553955
    6. '[x' → logprob: -14.39318561553955
    7. ' x' → logprob: -14.51818561553955
    8. '(id' → logprob: -15.89318561553955
    9. '{x' → logprob: -16.018184661865234
    10. '_dict' → logprob: -16.268184661865234

Token 602: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.19776122272014618
    2. '[id' → logprob: -2.572761297225952
    3. 'id' → logprob: -2.822761297225952
    4. 'x' → logprob: -3.447761297225952
    5. '(id' → logprob: -4.822761058807373
    6. ']' → logprob: -6.072761058807373
    7. '[x' → logprob: -7.572761058807373
    8. ')' → logprob: -8.197761535644531
    9. '(x' → logprob: -8.197761535644531
    10. ' id' → logprob: -9.322761535644531

Token 603: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7622684836387634
    2. '<|end|>' → logprob: -0.7622684836387634
    3. '
' → logprob: -3.012268543243408
    4. '#' → logprob: -4.512268543243408
    5. '\n' → logprob: -6.387268543243408
    6. 'n' → logprob: -6.762268543243408
    7. '<|end|>' → logprob: -7.262268543243408
    8. '' → logprob: -7.512268543243408
    9. 'class' → logprob: -8.13726806640625
    10. '```' → logprob: -8.26226806640625

Token 604: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.021385319530963898
    2. ' solve' → logprob: -3.896385431289673
    3. 'main' → logprob: -8.396385192871094
    4. ' read' → logprob: -8.646385192871094
    5. '_' → logprob: -9.271385192871094
    6. ' parse' → logprob: -9.646385192871094
    7. 'solve' → logprob: -9.646385192871094
    8. ' input' → logprob: -10.271385192871094
    9. ' solution' → logprob: -10.521385192871094
    10. ' ' → logprob: -10.521385192871094

Token 605: '_args' (ID: 18810)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.1476807594299316
    2. '_connected' → logprob: -1.3976807594299316
    3. '_components' → logprob: -2.5226807594299316
    4. '_max' → logprob: -2.6476807594299316
    5. '_component' → logprob: -3.2726807594299316
    6. '_neighbors' → logprob: -3.6476807594299316
    7. '_unique' → logprob: -3.7726807594299316
    8. '_parent' → logprob: -4.022680759429932
    9. '_union' → logprob: -4.147680759429932
    10. '_div' → logprob: -4.397680759429932

Token 606: 'ort' (ID: 390)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.008456421084702015
    2. '():
' → logprob: -5.383456230163574
    3. '()' → logprob: -5.883456230163574
    4. '(line' → logprob: -8.008456230163574
    5. ' ():' → logprob: -8.508456230163574
    6. '_line' → logprob: -9.633456230163574
    7. '(' → logprob: -9.758456230163574
    8. '_' → logprob: -9.883456230163574
    9. '(argv' → logprob: -9.883456230163574
    10. '(n' → logprob: -10.383456230163574

Token 607: '(seq' (ID: 78669)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.04352181404829025
    2. '(lst' → logprob: -3.5435218811035156
    3. '(array' → logprob: -4.668521881103516
    4. '(a' → logprob: -6.043521881103516
    5. '(seq' → logprob: -7.418521881103516
    6. '(l' → logprob: -7.668521881103516
    7. '(ls' → logprob: -8.168521881103516
    8. '(' → logprob: -8.293521881103516
    9. '(sequence' → logprob: -9.543521881103516
    10. '(list' → logprob: -9.918521881103516

Token 608: ',' (ID: 11)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.027535470202565193
    2. '):' → logprob: -3.7775354385375977
    3. '(' → logprob: -5.777535438537598
    4. '(sequence' → logprob: -7.277535438537598
    5. ')' → logprob: -8.777535438537598
    6. '(lst' → logprob: -9.152535438537598
    7. '(s' → logprob: -9.277535438537598
    8. '):
' → logprob: -10.027535438537598
    9. '(arr' → logprob: -11.152535438537598
    10. '   ' → logprob: -11.277535438537598

Token 609: ' key' (ID: 2140)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.3744933307170868
    2. ' reverse' → logprob: -1.8744933605194092
    3. ' key' → logprob: -2.749493360519409
    4. 'key' → logprob: -2.999493360519409
    5. 'rev' → logprob: -3.249493360519409
    6. ' rev' → logprob: -6.49949312210083
    7. ' *,' → logprob: -7.24949312210083
    8. 'descending' → logprob: -7.99949312210083
    9. ' descending' → logprob: -8.249493598937988
    10. '*,' → logprob: -8.374493598937988

Token 610: '_func' (ID: 22252)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0626571998000145
    2. '=None' → logprob: -2.812657117843628
    3. '=' → logprob: -7.312657356262207
    4. '=len' → logprob: -10.812657356262207
    5. '=str' → logprob: -14.437657356262207
    6. '=list' → logprob: -15.187657356262207
    7. '=`' → logprob: -15.312657356262207
    8. '=index' → logprob: -15.312657356262207
    9. '=_' → logprob: -15.437657356262207
    10. '):' → logprob: -15.562657356262207

Token 611: '=None' (ID: 12783)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.17230676114559174
    2. '=None' → logprob: -1.922306776046753
    3. '=' → logprob: -4.422306537628174
    4. '=len' → logprob: -13.422307014465332
    5. '=str' → logprob: -14.797307014465332
    6. '=`' → logprob: -15.047307014465332
    7. '=list' → logprob: -15.297307014465332
    8. '=l' → logprob: -15.922307014465332
    9. '):' → logprob: -16.047306060791016
    10. '=

' → logprob: -16.297306060791016

Token 612: ',' (ID: 11)
  Prédit: '=None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.4814431369304657
    2. '):' → logprob: -0.9814431667327881
    3. '=' → logprob: -5.731442928314209
    4. '=lambda' → logprob: -5.856442928314209
    5. '):
' → logprob: -6.981442928314209
    6. ',' → logprob: -8.231443405151367
    7. ')' → logprob: -11.231443405151367
    8. '=[]' → logprob: -11.481443405151367
    9. ' ):' → logprob: -12.606443405151367
    10. ' =' → logprob: -12.731443405151367

Token 613: ' is' (ID: 382)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.043935343623161316
    2. ' reverse' → logprob: -3.1689352989196777
    3. 'rev' → logprob: -7.043935298919678
    4. 're' → logprob: -10.918935775756836
    5. 'key' → logprob: -11.293935775756836
    6. ')' → logprob: -11.918935775756836
    7. ' rev' → logprob: -12.293935775756836
    8. 'reserve' → logprob: -12.793935775756836
    9. 'r' → logprob: -13.043935775756836
    10. 'index' → logprob: -13.168935775756836

Token 614: '_reverse' (ID: 112788)
  Prédit: '_reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reverse' → logprob: -0.1360485553741455
    2. '_re' → logprob: -2.3860485553741455
    3. '_st' → logprob: -4.136048316955566
    4. '_sorted' → logprob: -5.011048316955566
    5. '_' → logprob: -5.386048316955566
    6. 'reverse' → logprob: -5.386048316955566
    7. '_rev' → logprob: -6.386048316955566
    8. '_desc' → logprob: -7.761048316955566
    9. '_sort' → logprob: -8.136048316955566
    10. '_in' → logprob: -8.136048316955566

Token 615: '=False' (ID: 12148)
  Prédit: '=False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=False' → logprob: -0.02232050523161888
    2. '=' → logprob: -4.02232027053833
    3. '=True' → logprob: -5.52232027053833
    4. '=None' → logprob: -9.147320747375488
    5. '):' → logprob: -10.022320747375488
    6. '_=' → logprob: -12.522320747375488
    7. ' =' → logprob: -12.897320747375488
    8. ')' → logprob: -13.397320747375488
    9. '=_' → logprob: -13.522320747375488
    10. ')=' → logprob: -14.022320747375488

Token 616: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002497767563909292
    2. '):
' → logprob: -8.500249862670898
    3. ')' → logprob: -10.375249862670898
    4. ',' → logprob: -11.750249862670898
    5. ' ):' → logprob: -12.125249862670898
    6. ':' → logprob: -14.250249862670898
    7. '):
' → logprob: -14.750249862670898
    8. '   ' → logprob: -15.125249862670898
    9. '=None' → logprob: -16.0002498626709
    10. '=' → logprob: -16.2502498626709

Token 617: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022534282878041267
    2. ':' → logprob: -3.8975343704223633
    3. ' :' → logprob: -7.772534370422363
    4. ',' → logprob: -8.647534370422363
    5. ' return' → logprob: -8.647534370422363
    6. ' sorted' → logprob: -8.647534370422363
    7. ' seq' → logprob: -8.772534370422363
    8. ' key' → logprob: -8.897534370422363
    9. ' indices' → logprob: -9.022534370422363
    10. ' if' → logprob: -9.272534370422363

Token 618: ' return' (ID: 622)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8812779784202576
    2. 'if' → logprob: -1.2562780380249023
    3. 'return' (adapté à ' return') → logprob: -2.2562780380249023
    4. ' return' → logprob: -3.0062780380249023
    5. 'indices' → logprob: -3.8812780380249023
    6. ' key' → logprob: -4.006278038024902
    7. ' indices' → logprob: -4.131278038024902
    8. 'idx' → logprob: -4.131278038024902
    9. 'key' → logprob: -4.256278038024902
    10. 'res' → logprob: -4.756278038024902

Token 619: ' [
' (ID: 4240)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -5.407366916188039e-05
    2. ' sorted' → logprob: -10.250054359436035
    3. '[' → logprob: -11.625054359436035
    4. 'list' → logprob: -12.125054359436035
    5. '(sorted' → logprob: -12.750054359436035
    6. 'tuple' → logprob: -13.875054359436035
    7. '   ' → logprob: -14.875054359436035
    8. ' ' → logprob: -17.12505340576172
    9. '.sorted' → logprob: -18.37505340576172
    10. '  ' → logprob: -18.62505340576172

Token 620: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018607333302497864
    2. 'i' → logprob: -4.518607139587402
    3. 't' → logprob: -5.893607139587402
    4. 'seq' → logprob: -7.018607139587402
    5. 'item' → logprob: -7.143607139587402
    6. 'k' → logprob: -7.643607139587402
    7. 'elem' → logprob: -7.643607139587402
    8. 'e' → logprob: -7.643607139587402
    9. 'v' → logprob: -7.893607139587402
    10. 'idx' → logprob: -8.268607139587402

Token 621: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01823434978723526
    2. 'i' (adapté à ' i') → logprob: -4.7682342529296875
    3. 't' → logprob: -5.8932342529296875
    4. 'e' → logprob: -6.7682342529296875
    5. 'elem' → logprob: -6.7682342529296875
    6. 'item' → logprob: -7.0182342529296875
    7. 'v' → logprob: -7.1432342529296875
    8. 'seq' → logprob: -7.3932342529296875
    9. 'idx' → logprob: -7.6432342529296875
    10. 'el' → logprob: -7.7682342529296875

Token 622: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5760499238967896
    2. 'for' → logprob: -0.8260499238967896
    3. '   ' → logprob: -9.9510498046875
    4. '[' → logprob: -10.4510498046875
    5. 'x' → logprob: -11.0760498046875
    6. '
' → logprob: -11.7010498046875
    7. ' ' → logprob: -12.4510498046875
    8. '	for' → logprob: -13.2010498046875
    9. '  ' → logprob: -13.7010498046875
    10. 'n' → logprob: -13.9510498046875

Token 623: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.6760718822479248
    2. 'i' → logprob: -0.8010718822479248
    3. ',' → logprob: -3.426071882247925
    4. '_' → logprob: -4.926072120666504
    5. ',_' → logprob: -6.551072120666504
    6. '_i' → logprob: -7.176072120666504
    7. ' _,' → logprob: -8.801072120666504
    8. ' i' → logprob: -9.551072120666504
    9. '__,' → logprob: -9.551072120666504
    10. ',i' → logprob: -9.801072120666504

Token 624: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12693031132221222
    2. ' i' → logprob: -2.1269302368164062
    3. ' ' → logprob: -13.626930236816406
    4. '	i' → logprob: -14.751930236816406
    5. '  ' → logprob: -15.501930236816406
    6. '  
' → logprob: -16.376930236816406
    7. '   ' → logprob: -16.501930236816406
    8. '_i' → logprob: -16.626930236816406
    9. '
' → logprob: -16.751930236816406
    10. ' 
' → logprob: -17.376930236816406

Token 625: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00760698551312089
    2. 'in' → logprob: -4.8826069831848145
    3. ' ' → logprob: -15.257607460021973
    4. '
' → logprob: -16.632606506347656
    5. 'import' → logprob: -16.632606506347656
    6. 'n' → logprob: -16.757606506347656
    7. 'ind' → logprob: -17.257606506347656
    8. ']' → logprob: -17.257606506347656
    9. '<|end|>' → logprob: -17.257606506347656
    10. ' 
' → logprob: -17.382606506347656

Token 626: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.008615872822701931
    2. ' sorted' → logprob: -4.758615970611572
    3. '(sorted' → logprob: -14.258615493774414
    4. '
' → logprob: -14.508615493774414
    5. '   ' → logprob: -16.883615493774414
    6. '_sorted' → logprob: -17.008615493774414
    7. 'Sorted' → logprob: -18.008615493774414
    8. 'sort' → logprob: -18.758615493774414
    9. 'reverse' → logprob: -18.883615493774414
    10. ' reversed' → logprob: -19.008615493774414

Token 627: '(
' (ID: 1607)
  Prédit: '(
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.5082658529281616
    2. '((' → logprob: -1.5082658529281616
    3. '(' → logprob: -1.8832658529281616
    4. '(((' → logprob: -4.133265972137451
    5. '(zip' → logprob: -5.383265972137451
    6. '([(' → logprob: -5.633265972137451
    7. '(en' → logprob: -7.258265972137451
    8. '([
' → logprob: -9.883265495300293
    9. '([' → logprob: -10.008265495300293
    10. '[(' → logprob: -10.633265495300293

Token 628: '           ' (ID: 352)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.7799938321113586
    2. '(
' → logprob: -0.9049938321113586
    3. '[(' → logprob: -2.529993772506714
    4. '([(' → logprob: -3.654993772506714
    5. '[
' → logprob: -5.029994010925293
    6. '(' → logprob: -5.029994010925293
    7. '(((' → logprob: -5.279994010925293
    8. 'enumer' → logprob: -5.404994010925293
    9. '[((' → logprob: -5.529994010925293
    10. '(zip' → logprob: -6.154994010925293

Token 629: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' (adapté à ' ((') → logprob: -0.7186115384101868
    2. '[(' → logprob: -0.9686115384101868
    3. '(
' → logprob: -2.218611478805542
    4. '([(' → logprob: -4.968611717224121
    5. '[
' → logprob: -5.343611717224121
    6. '[((' → logprob: -5.593611717224121
    7. '(' → logprob: -5.718611717224121
    8. '[' → logprob: -6.218611717224121
    9. '(zip' → logprob: -6.718611717224121
    10. '([' → logprob: -7.218611717224121

Token 630: 'a' (ID: 64)
  Prédit: '(key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.22680418193340302
    2. 'key' → logprob: -1.6018041372299194
    3. '0' → logprob: -7.476804256439209
    4. '(' → logprob: -8.22680377960205
    5. '((' → logprob: -8.72680377960205
    6. ' key' → logprob: -8.97680377960205
    7. '(i' → logprob: -8.97680377960205
    8. ' (' → logprob: -9.60180377960205
    9. '(seq' → logprob: -10.72680377960205
    10. '(k' → logprob: -11.60180377960205

Token 631: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5432980060577393
    2. 'if' → logprob: -1.4182980060577393
    3. ',' → logprob: -2.5432980060577393
    4. 'key' → logprob: -3.4182980060577393
    5. ',key' → logprob: -3.4182980060577393
    6. '(key' → logprob: -3.6682980060577393
    7. ' key' → logprob: -5.29329776763916
    8. '[key' → logprob: -6.66829776763916
    9. ' (' → logprob: -8.29329776763916
    10. '_key' → logprob: -8.79329776763916

Token 632: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004131472669541836
    2. ' i' → logprob: -5.754131317138672
    3. ')' → logprob: -8.379131317138672
    4. 'a' → logprob: -9.129131317138672
    5. 'index' → logprob: -9.129131317138672
    6. 'idx' → logprob: -9.379131317138672
    7. 'lambda' → logprob: -9.379131317138672
    8. '   ' → logprob: -9.504131317138672
    9. '(i' → logprob: -10.379131317138672
    10. '       ' → logprob: -10.379131317138672

Token 633: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001820958685129881
    2. ' if' → logprob: -6.626821041107178
    3. 'if' → logprob: -8.75182056427002
    4. ')
' → logprob: -9.12682056427002
    5. ' )' → logprob: -9.87682056427002
    6. ' in' → logprob: -10.62682056427002
    7. 'in' → logprob: -10.62682056427002
    8. 'index' → logprob: -10.75182056427002
    9. 'for' → logprob: -10.87682056427002
    10. ' for' → logprob: -11.25182056427002

Token 634: ' for' (ID: 395)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8628647327423096
    2. ' for' → logprob: -1.3628647327423096
    3. 'for' → logprob: -1.8628647327423096
    4. ')' → logprob: -2.2378647327423096
    5. 'in' → logprob: -2.8628647327423096
    6. '          ' → logprob: -6.9878644943237305
    7. '           ' → logprob: -7.6128644943237305
    8. '       ' → logprob: -7.6128644943237305
    9. '   ' → logprob: -8.48786449432373
    10. '         ' → logprob: -8.86286449432373

Token 635: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010260405018925667
    2. ' i' → logprob: -5.385260581970215
    3. ' (' → logprob: -5.885260581970215
    4. 'a' → logprob: -6.885260581970215
    5. '(i' → logprob: -7.010260581970215
    6. '(' → logprob: -8.010260581970215
    7. '((' → logprob: -8.885260581970215
    8. '(seq' → logprob: -8.885260581970215
    9. '(a' → logprob: -9.385260581970215
    10. 'seq' → logprob: -9.510260581970215

Token 636: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034981502685695887
    2. ' in' → logprob: -6.628498077392578
    3. 'in' → logprob: -6.753498077392578
    4. '<|end|>' → logprob: -7.128498077392578
    5. ',a' → logprob: -8.753498077392578
    6. ' ,' → logprob: -11.253498077392578
    7. 'a' → logprob: -11.753498077392578
    8. ',i' → logprob: -12.003498077392578
    9. ',
' → logprob: -12.378498077392578
    10. '<|end|>' → logprob: -12.753498077392578

Token 637: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1660633534193039
    2. ' a' → logprob: -2.5410633087158203
    3. 'enumer' → logprob: -3.0410633087158203
    4. ' in' → logprob: -4.54106330871582
    5. '<|end|>' → logprob: -4.91606330871582
    6. ',' → logprob: -6.04106330871582
    7. ' (' → logprob: -6.66606330871582
    8. '(a' → logprob: -6.66606330871582
    9. 'in' → logprob: -6.79106330871582
    10. ' enumerate' → logprob: -7.04106330871582

Token 638: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2016177922487259
    2. 'in' → logprob: -1.7016178369522095
    3. 'enumer' → logprob: -8.576618194580078
    4. ')' → logprob: -12.576618194580078
    5. ',' → logprob: -13.076618194580078
    6. 'ind' → logprob: -13.201618194580078
    7. '<|end|>' → logprob: -13.326618194580078
    8. 'import' → logprob: -13.326618194580078
    9. 'inthe' → logprob: -13.826618194580078
    10. ' enumerate' → logprob: -14.326618194580078

Token 639: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0025032442063093185
    2. ' enumerate' → logprob: -6.002503395080566
    3. 'in' → logprob: -11.377503395080566
    4. '
' → logprob: -11.627503395080566
    5. ' in' → logprob: -12.752503395080566
    6. ')' → logprob: -13.877503395080566
    7. 'enum' → logprob: -13.877503395080566
    8. ',' → logprob: -14.002503395080566
    9. 'enqueue' → logprob: -14.877503395080566
    10. 'en' → logprob: -14.877503395080566

Token 640: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.025599174201488495
    2. 'seq' → logprob: -4.150599002838135
    3. '(en' → logprob: -5.400599002838135
    4. 'enumer' → logprob: -5.400599002838135
    5. '(sequence' → logprob: -8.150599479675293
    6. '((' → logprob: -9.650599479675293
    7. '(enum' → logprob: -10.025599479675293
    8. '(zip' → logprob: -10.150599479675293
    9. '(' → logprob: -11.150599479675293
    10. ' enumerate' → logprob: -11.775599479675293

Token 641: ')),
' (ID: 13846)
  Prédit: ')),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.4425446689128876
    2. ')),
' → logprob: -1.19254469871521
    3. ')' → logprob: -3.69254469871521
    4. '))' → logprob: -3.69254469871521
    5. ')
' → logprob: -5.942544460296631
    6. '))
' → logprob: -6.817544460296631
    7. '),' → logprob: -8.817544937133789
    8. '),
' → logprob: -9.317544937133789
    9. ' ' → logprob: -9.817544937133789
    10. ')),
' → logprob: -9.942544937133789

Token 642: '           ' (ID: 352)
  Prédit: ' reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -0.616377592086792
    2. 'reverse' → logprob: -0.866377592086792
    3. ' key' → logprob: -3.616377592086792
    4. 'key' → logprob: -4.366377830505371
    5. '           ' → logprob: -10.616377830505371
    6. '   ' → logprob: -11.741377830505371
    7. '       ' → logprob: -12.241377830505371
    8. ')' → logprob: -12.491377830505371
    9. ',' → logprob: -12.741377830505371
    10. '(reverse' → logprob: -12.991377830505371

Token 643: ' key' (ID: 2140)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.36555078625679016
    2. 'key' (adapté à ' key') → logprob: -1.3655507564544678
    3. ' reverse' → logprob: -3.3655507564544678
    4. ' key' → logprob: -4.115550994873047
    5. '           ' → logprob: -9.490550994873047
    6. '               ' → logprob: -12.615550994873047
    7. '       ' → logprob: -13.365550994873047
    8. '   ' → logprob: -13.615550994873047
    9. 'Reverse' → logprob: -13.615550994873047
    10. '(reverse' → logprob: -14.115550994873047

Token 644: '=(' (ID: 9893)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.5857455134391785
    2. '=' → logprob: -0.9607455134391785
    3. '=(' → logprob: -2.9607455730438232
    4. 'key' → logprob: -5.210745334625244
    5. '(key' → logprob: -6.585745334625244
    6. 'lambda' → logprob: -7.710745334625244
    7. '(' → logprob: -7.960745334625244
    8. '(lambda' → logprob: -8.085745811462402
    9. '=
' → logprob: -8.085745811462402
    10. ' (' → logprob: -8.585745811462402

Token 645: 'lambda' (ID: 35280)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.048883818089962006
    2. 'lambda' → logprob: -3.4238839149475098
    3. '(lambda' → logprob: -5.17388391494751
    4. ' key' → logprob: -5.42388391494751
    5. '(key' → logprob: -5.67388391494751
    6. 'None' → logprob: -7.17388391494751
    7. ' lambda' → logprob: -7.92388391494751
    8. '(' → logprob: -8.173883438110352
    9. ' (' → logprob: -9.048883438110352
    10. '(None' → logprob: -10.673883438110352

Token 646: ' t' (ID: 260)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11646413803100586
    2. ' x' → logprob: -2.741464138031006
    3. 'a' → logprob: -3.116464138031006
    4. ' a' → logprob: -7.116464138031006
    5. 'e' → logprob: -8.616464614868164
    6. 'key' → logprob: -9.741464614868164
    7. 'k' → logprob: -10.491464614868164
    8. 'kv' → logprob: -10.991464614868164
    9. ' key' → logprob: -11.491464614868164
    10. 'arg' → logprob: -12.366464614868164

Token 647: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014930804027244449
    2. 't' → logprob: -7.376492977142334
    3. ':t' → logprob: -7.751492977142334
    4. ' :' → logprob: -8.751493453979492
    5. ':key' → logprob: -8.876493453979492
    6. 'key' → logprob: -9.501493453979492
    7. 'a' → logprob: -10.126493453979492
    8. ':k' → logprob: -11.626493453979492
    9. ':a' → logprob: -12.376493453979492
    10. ':(' → logprob: -12.751493453979492

Token 648: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.03246608376502991
    2. ' key' → logprob: -3.782466173171997
    3. 't' → logprob: -4.782465934753418
    4. '(key' → logprob: -7.282465934753418
    5. ' t' → logprob: -9.532465934753418
    6. '(' → logprob: -11.282465934753418
    7. '(t' → logprob: -11.407465934753418
    8. ' (' → logprob: -11.782465934753418
    9. '
' → logprob: -13.032465934753418
    10. '	key' → logprob: -13.657465934753418

Token 649: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.00027015688829123974
    2. 'func' → logprob: -8.625269889831543
    3. '(t' → logprob: -9.500269889831543
    4. 't' → logprob: -11.250269889831543
    5. '((' → logprob: -14.375269889831543
    6. 'Func' → logprob: -14.875269889831543
    7. '(' → logprob: -15.000269889831543
    8. '_FUNC' → logprob: -15.375269889831543
    9. 'f' → logprob: -15.500269889831543
    10. '
' → logprob: -15.625269889831543

Token 650: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0013423740165308118
    2. 't' → logprob: -6.626342296600342
    3. ' (' → logprob: -11.7513427734375
    4. '((' → logprob: -12.5013427734375
    5. '(' → logprob: -12.6263427734375
    6. ' t' → logprob: -14.7513427734375
    7. '(
' → logprob: -15.2513427734375
    8. ')' → logprob: -15.3763427734375
    9. 'and' → logprob: -15.8763427734375
    10. ' and' → logprob: -16.2513427734375

Token 651: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002666999935172498
    2. ')' → logprob: -8.875267028808594
    3. '))' → logprob: -9.500267028808594
    4. '(' → logprob: -11.125267028808594
    5. ' if' → logprob: -11.125267028808594
    6. ')),' → logprob: -11.625267028808594
    7. '0' → logprob: -12.125267028808594
    8. '
' → logprob: -13.000267028808594
    9. '   ' → logprob: -13.875267028808594
    10. ' [' → logprob: -14.000267028808594

Token 652: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008621077984571457
    2. '1' → logprob: -4.7586212158203125
    3. ' ' → logprob: -12.883621215820312
    4. '   ' → logprob: -13.133621215820312
    5. '
' → logprob: -14.258621215820312
    6. '-' → logprob: -14.821121215820312
    7. 'a' → logprob: -15.696121215820312
    8. '[' → logprob: -15.758621215820312
    9. ')' → logprob: -16.258621215820312
    10. '```' → logprob: -16.571121215820312

Token 653: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.34899115562438965
    2. ')' → logprob: -1.2239911556243896
    3. ' )' → logprob: -8.973991394042969
    4. ' ))' → logprob: -9.223991394042969
    5. ')),' → logprob: -9.348991394042969
    6. ')),
' → logprob: -9.473991394042969
    7. ' if' → logprob: -9.848991394042969
    8. ')))' → logprob: -9.973991394042969
    9. '))
' → logprob: -10.848991394042969
    10. ')
' → logprob: -11.348991394042969

Token 654: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032194629311561584
    2. ',
' → logprob: -3.9071946144104004
    3. ' if' → logprob: -4.5321946144104
    4. '           ' → logprob: -7.6571946144104
    5. ' ,' → logprob: -9.032195091247559
    6. 'if' → logprob: -9.157195091247559
    7. ')' → logprob: -9.407195091247559
    8. '   ' → logprob: -11.032195091247559
    9. '),' → logprob: -11.282195091247559
    10. '       ' → logprob: -12.032195091247559

Token 655: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.038049984723329544
    2. ' key' → logprob: -3.2880499362945557
    3. '(key' → logprob: -12.038049697875977
    4. ' callable' → logprob: -13.163049697875977
    5. ' ' → logprob: -15.538049697875977
    6. '   ' → logprob: -15.788049697875977
    7. 'call' → logprob: -16.288049697875977
    8. '
' → logprob: -16.288049697875977
    9. '	key' → logprob: -16.913049697875977
    10. 'not' → logprob: -17.913049697875977

Token 656: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.0014845087425783277
    2. 'func' → logprob: -6.626484394073486
    3. ' is' → logprob: -9.626484870910645
    4. '_funcs' → logprob: -10.876484870910645
    5. ' and' → logprob: -11.251484870910645
    6. '_' → logprob: -11.251484870910645
    7. 'and' → logprob: -11.376484870910645
    8. ' ' → logprob: -11.626484870910645
    9. '_FUNC' → logprob: -12.001484870910645
    10. ' func' → logprob: -12.626484870910645

Token 657: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1322483867406845
    2. ' else' → logprob: -2.1322484016418457
    3. ' is' → logprob: -5.382248401641846
    4. 'is' → logprob: -7.257248401641846
    5. ' ' → logprob: -14.257247924804688
    6. '!=' → logprob: -14.257247924804688
    7. '!==' → logprob: -15.132247924804688
    8. 'elif' → logprob: -15.132247924804688
    9. '	else' → logprob: -15.382247924804688
    10. '    ' → logprob: -15.507247924804688

Token 658: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.188411682844162
    2. 'lambda' → logprob: -1.9384117126464844
    3. '(lambda' → logprob: -3.6884117126464844
    4. '(None' → logprob: -6.813411712646484
    5. 't' → logprob: -7.188411712646484
    6. '(' → logprob: -7.188411712646484
    7. ' None' → logprob: -9.438411712646484
    8. '(
' → logprob: -9.813411712646484
    9. '   ' → logprob: -11.313411712646484
    10. ' lambda' → logprob: -11.313411712646484

Token 659: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03932460397481918
    2. ',
' → logprob: -3.5393245220184326
    3. '           ' → logprob: -4.664324760437012
    4. '       ' → logprob: -9.664324760437012
    5. '   ' → logprob: -11.414324760437012
    6. ' ,' → logprob: -11.539324760437012
    7. ',re' → logprob: -11.914324760437012
    8. '               ' → logprob: -13.039324760437012
    9. ',
' → logprob: -13.414324760437012
    10. '          ' → logprob: -13.414324760437012

Token 660: '           ' (ID: 352)
  Prédit: ' reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -0.3150242269039154
    2. 'reverse' → logprob: -1.3150242567062378
    3. '           ' → logprob: -6.565024375915527
    4. '       ' → logprob: -8.190024375915527
    5. '   ' → logprob: -9.690024375915527
    6. '_reverse' → logprob: -12.440024375915527
    7. '.reverse' → logprob: -12.940024375915527
    8. '    ' → logprob: -13.315024375915527
    9. '               ' → logprob: -13.315024375915527
    10. 'Reverse' → logprob: -13.565024375915527

Token 661: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' (adapté à ' reverse') → logprob: -0.01108248345553875
    2. ' reverse' → logprob: -4.511082649230957
    3. '           ' → logprob: -10.511082649230957
    4. '   ' → logprob: -12.261082649230957
    5. '       ' → logprob: -13.636082649230957
    6. '               ' → logprob: -14.386082649230957
    7. '.reverse' → logprob: -14.886082649230957
    8. '_reverse' → logprob: -15.386082649230957
    9. '                   ' → logprob: -15.636082649230957
    10. '(reverse' → logprob: -16.38608169555664

Token 662: '=is' (ID: 182919)
  Prédit: '=is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=is' → logprob: -0.030781464651226997
    2. 'is' → logprob: -3.5307815074920654
    3. ' is' → logprob: -7.530781269073486
    4. '=' → logprob: -8.405781745910645
    5. ')is' → logprob: -8.905781745910645
    6. '=True' → logprob: -9.030781745910645
    7. '(is' → logprob: -12.405781745910645
    8. ')' → logprob: -12.405781745910645
    9. '	is' → logprob: -12.905781745910645
    10. '_is' → logprob: -13.780781745910645

Token 663: '_reverse' (ID: 112788)
  Prédit: '_reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reverse' → logprob: -0.0003428528143558651
    2. 'reverse' → logprob: -8.000343322753906
    3. 'Reverse' → logprob: -12.875343322753906
    4. '_re' → logprob: -13.250343322753906
    5. 'True' → logprob: -14.250343322753906
    6. ' reverse' → logprob: -14.375343322753906
    7. '_true' → logprob: -14.375343322753906
    8. '_' → logprob: -14.625343322753906
    9. '=True' → logprob: -14.750343322753906
    10. '_rev' → logprob: -15.500343322753906

Token 664: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030950047075748444
    2. ')]' → logprob: -5.8780951499938965
    3. '   ' → logprob: -8.753094673156738
    4. ')
' → logprob: -10.128094673156738
    5. '),' → logprob: -10.128094673156738
    6. '       ' → logprob: -10.628094673156738
    7. '))' → logprob: -11.378094673156738
    8. ')])' → logprob: -11.503094673156738
    9. ']' → logprob: -13.628094673156738
    10. ')],' → logprob: -13.878094673156738

Token 665: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004918377846479416
    2. ')]' → logprob: -5.504918575286865
    3. '   ' → logprob: -7.629918575286865
    4. '       ' → logprob: -8.629918098449707
    5. '),' → logprob: -9.129918098449707
    6. ')])' → logprob: -10.504918098449707
    7. ')
' → logprob: -11.004918098449707
    8. '))' → logprob: -11.754918098449707
    9. ')],' → logprob: -12.379918098449707
    10. '           ' → logprob: -12.879918098449707

Token 666: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05053805932402611
    2. ')]' → logprob: -3.0505380630493164
    3. '   ' → logprob: -6.800538063049316
    4. '),' → logprob: -7.675538063049316
    5. ')
' (adapté à ' )
') → logprob: -8.675538063049316
    6. '       ' → logprob: -9.300538063049316
    7. ']' → logprob: -10.175538063049316
    8. '))' → logprob: -10.675538063049316
    9. ')])' → logprob: -10.800538063049316
    10. ')],' → logprob: -11.675538063049316

Token 667: '   ' (ID: 271)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005363515811040998
    2. '   ' → logprob: -7.6255364418029785
    3. '<|end|>' → logprob: -10.62553596496582
    4. ')' → logprob: -11.12553596496582
    5. ' ]' → logprob: -12.62553596496582
    6. ']
' → logprob: -12.62553596496582
    7. '}' → logprob: -14.00053596496582
    8. ')]' → logprob: -14.62553596496582
    9. '()]' → logprob: -14.75053596496582
    10. '       ' → logprob: -15.75053596496582

Token 668: ' ]

' (ID: 32229)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011192000471055508
    2. '<|end|>' → logprob: -4.5111918449401855
    3. '}' → logprob: -10.386192321777344
    4. ')' → logprob: -10.511192321777344
    5. ' ]' → logprob: -10.636192321777344
    6. 'def' → logprob: -10.636192321777344
    7. '<|end|>' → logprob: -11.386192321777344
    8. '```' → logprob: -11.636192321777344
    9. ']
' → logprob: -12.261192321777344
    10. '"]' → logprob: -13.011192321777344

Token 669: 'vertex' (ID: 25298)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03649423271417618
    2. '<|end|>' → logprob: -3.411494255065918
    3. '#' → logprob: -6.161494255065918
    4. 'class' → logprob: -8.036494255065918
    5. '<|end|>' → logprob: -9.286494255065918
    6. '[' → logprob: -9.536494255065918
    7. '
' → logprob: -9.661494255065918
    8. ')' → logprob: -10.411494255065918
    9. 'import' → logprob: -10.411494255065918
    10. 'from' → logprob: -10.536494255065918

Token 670: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.5465869307518005
    2. 's' → logprob: -1.5465869903564453
    3. 'es' → logprob: -2.0465869903564453
    4. '_num' → logprob: -3.7965869903564453
    5. '_' → logprob: -4.296586990356445
    6. '_list' → logprob: -4.796586990356445
    7. '_degree' → logprob: -5.046586990356445
    8. '_de' → logprob: -5.171586990356445
    9. '_cnt' → logprob: -5.421586990356445
    10. '_s' → logprob: -5.421586990356445

Token 671: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14496903121471405
    2. ',' → logprob: -2.3949689865112305
    3. '=' → logprob: -3.1449689865112305
    4. ' ,' → logprob: -7.5199689865112305
    5. ' ' → logprob: -9.01996898651123
    6. '<|end|>' → logprob: -11.51996898651123
    7. ')' → logprob: -11.89496898651123
    8. ' =
' → logprob: -12.26996898651123
    9. ':' → logprob: -13.01996898651123
    10. ' =)' → logprob: -13.14496898651123

Token 672: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.00944084394723177
    2. ' edge' → logprob: -4.884440898895264
    3. 'edges' → logprob: -7.009440898895264
    4. 'query' → logprob: -7.259440898895264
    5. 'vertex' → logprob: -8.884440422058105
    6. ' =' → logprob: -10.759440422058105
    7. '_edge' → logprob: -11.009440422058105
    8. ' edges' → logprob: -11.134440422058105
    9. '=' → logprob: -11.634440422058105
    10. '=edge' → logprob: -11.759440422058105

Token 673: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.003773835487663746
    2. 's' → logprob: -5.6287736892700195
    3. '_' → logprob: -9.25377368927002
    4. '_list' → logprob: -9.75377368927002
    5. '_s' → logprob: -11.87877368927002
    6. 'count' → logprob: -12.62877368927002
    7. ' _' → logprob: -13.00377368927002
    8. '_counts' → logprob: -13.25377368927002
    9. '_num' → logprob: -13.62877368927002
    10. '_number' → logprob: -14.25377368927002

Token 674: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31338241696357727
    2. ' =' → logprob: -1.3133823871612549
    3. '=input' → logprob: -9.063382148742676
    4. ' ' → logprob: -13.938382148742676
    5. '=sys' → logprob: -14.063382148742676
    6. '=int' → logprob: -14.313382148742676
    7. '=line' → logprob: -14.438382148742676
    8. ',' → logprob: -14.438382148742676
    9. '=list' → logprob: -14.938382148742676
    10. '=edge' → logprob: -15.313382148742676

Token 675: ' list' (ID: 1562)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.25196966528892517
    2. ' map' → logprob: -1.5019696950912476
    3. '[' → logprob: -10.251969337463379
    4. 'list' → logprob: -13.751969337463379
    5. ' [' → logprob: -13.751969337463379
    6. '(map' → logprob: -13.751969337463379
    7. '	map' → logprob: -14.126969337463379
    8. ' ' → logprob: -14.126969337463379
    9. 'm' → logprob: -15.501969337463379
    10. '
' → logprob: -16.376970291137695

Token 676: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0001358400477329269
    2. 'map' → logprob: -9.00013542175293
    3. '(' → logprob: -11.37513542175293
    4. '(
' → logprob: -14.50013542175293
    5. ' map' → logprob: -16.12513542175293
    6. '()' → logprob: -16.37513542175293
    7. '	map' → logprob: -17.75013542175293
    8. '(m' → logprob: -18.37513542175293
    9. '_map' → logprob: -18.62513542175293
    10. '.map' → logprob: -18.87513542175293

Token 677: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02331826649606228
    2. 'int' → logprob: -3.773318290710449
    3. ',int' → logprob: -10.14831829071045
    4. '   ' → logprob: -10.64831829071045
    5. '=int' → logprob: -13.14831829071045
    6. '(' → logprob: -13.39831829071045
    7. '(
' → logprob: -13.52331829071045
    8. '<int' → logprob: -13.64831829071045
    9. ' int' → logprob: -13.77331829071045
    10. '[int' → logprob: -14.02331829071045

Token 678: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.467248797416687
    2. 'input' → logprob: -1.467248797416687
    3. '(sys' → logprob: -2.7172489166259766
    4. 'sys' → logprob: -3.0922489166259766
    5. ',input' → logprob: -3.9672489166259766
    6. ',' → logprob: -4.592248916625977
    7. '(' → logprob: -6.342248916625977
    8. ' input' → logprob: -8.592248916625977
    9. '=input' → logprob: -9.467248916625977
    10. ' sys' → logprob: -9.592248916625977

Token 679: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06798404455184937
    2. 'sys' → logprob: -2.817984104156494
    3. ' input' → logprob: -5.317984104156494
    4. ' sys' → logprob: -6.817984104156494
    5. '   ' → logprob: -13.567983627319336
    6. '(sys' → logprob: -15.442983627319336
    7. '(input' → logprob: -15.942983627319336
    8. '=sys' → logprob: -16.942983627319336
    9. ' ' → logprob: -17.067983627319336
    10. '_input' → logprob: -17.692983627319336

Token 680: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0005462417611852288
    2. '.argv' → logprob: -7.625546455383301
    3. '.readline' → logprob: -9.8755464553833
    4. '.' → logprob: -12.5005464553833
    5. 'stdin' → logprob: -13.2505464553833
    6. ' .' → logprob: -14.8755464553833
    7. '.input' → logprob: -15.3755464553833
    8. '(stdin' → logprob: -15.5005464553833
    9. '.stdout' → logprob: -15.6255464553833
    10. '.next' → logprob: -16.625545501708984

Token 681: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.635164754698053e-05
    2. '().' → logprob: -9.625066757202148
    3. '.' → logprob: -15.875066757202148
    4. '.read' → logprob: -16.00006675720215
    5. '.readlines' → logprob: -18.37506675720215
    6. ' .' → logprob: -19.25006675720215
    7. ' readline' → logprob: -19.25006675720215
    8. '   ' → logprob: -19.37506675720215
    9. 'read' → logprob: -20.50006675720215
    10. '```' → logprob: -20.87506675720215

Token 682: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004079589620232582
    2. '.read' → logprob: -5.504079818725586
    3. '.readlines' → logprob: -13.754079818725586
    4. '.' → logprob: -16.629079818725586
    5. 'read' → logprob: -17.379079818725586
    6. '.buffer' → logprob: -17.879079818725586
    7. ' readline' → logprob: -18.754079818725586
    8. '.decode' → logprob: -19.004079818725586
    9. '.recv' → logprob: -19.379079818725586
    10. ' .' → logprob: -20.004079818725586

Token 683: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.173704271830502e-06
    2. '()' → logprob: -13.12500286102295
    3. '()))' → logprob: -13.87500286102295
    4. '(' → logprob: -16.875003814697266
    5. '()[' → logprob: -17.500003814697266
    6. '.readline' → logprob: -17.500003814697266
    7. '())))' → logprob: -18.250003814697266
    8. '()
' → logprob: -19.125003814697266
    9. ' ().' → logprob: -19.375003814697266
    10. '[].' → logprob: -19.875003814697266

Token 684: 'split' (ID: 13627)
  Prédit: 'decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.4585933983325958
    2. 'read' → logprob: -1.2085933685302734
    3. 'rstrip' → logprob: -3.2085933685302734
    4. 'split' → logprob: -3.7085933685302734
    5. 'strip' → logprob: -5.458593368530273
    6. ' decode' → logprob: -11.208593368530273
    7. 'raw' → logprob: -12.958593368530273
    8. ' readline' → logprob: -13.083593368530273
    9. ' split' → logprob: -13.583593368530273
    10. ' ' → logprob: -13.583593368530273

Token 685: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.009981546550989151
    2. '()' → logprob: -4.634981632232666
    3. '()))
' → logprob: -9.259981155395508
    4. '))' → logprob: -10.009981155395508
    5. 'b' → logprob: -10.384981155395508
    6. '(' → logprob: -10.759981155395508
    7. '())' → logprob: -11.384981155395508
    8. '(),' → logprob: -11.634981155395508
    9. '()));' → logprob: -12.009981155395508
    10. '())).' → logprob: -13.634981155395508

Token 686: 'columns' (ID: 26893)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.018240083009004593
    2. 'edge' → logprob: -4.393239974975586
    3. 'graph' → logprob: -5.768239974975586
    4. ' edges' → logprob: -6.643239974975586
    5. 'adj' → logprob: -7.143239974975586
    6. 'vertices' → logprob: -8.393239974975586
    7. 'vertex' → logprob: -9.268239974975586
    8. '_edges' → logprob: -9.768239974975586
    9. '
' → logprob: -10.643239974975586
    10. 'parent' → logprob: -11.018239974975586

Token 687: '_a' (ID: 10852)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01869754120707512
    2. ' =' → logprob: -4.143697738647461
    3. ',' → logprob: -6.768697738647461
    4. '=[]' → logprob: -6.768697738647461
    5. '_' → logprob: -8.893697738647461
    6. '_count' → logprob: -9.893697738647461
    7. '=
' → logprob: -9.893697738647461
    8. '=[]
' → logprob: -10.268697738647461
    9. ')' → logprob: -10.893697738647461
    10. '_=' → logprob: -11.518697738647461

Token 688: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.352887362241745
    2. '=' → logprob: -1.3528873920440674
    3. ',' → logprob: -3.3528873920440674
    4. '_count' → logprob: -6.102887153625488
    5. '_' → logprob: -8.102887153625488
    6. '=[]' → logprob: -8.102887153625488
    7. '_values' → logprob: -8.477887153625488
    8. ',_' → logprob: -8.977887153625488
    9. '_columns' → logprob: -9.352887153625488
    10. '_counts' → logprob: -9.477887153625488

Token 689: ' columns' (ID: 15697)
  Prédit: 'columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'columns' → logprob: -0.2387727051973343
    2. ' columns' → logprob: -1.6137727499008179
    3. 'list' → logprob: -5.238772869110107
    4. ' =' → logprob: -5.738772869110107
    5. ' list' → logprob: -6.113772869110107
    6. '=' → logprob: -6.363772869110107
    7. '=list' → logprob: -8.61377239227295
    8. ' [' → logprob: -8.86377239227295
    9. '[' → logprob: -9.23877239227295
    10. '_columns' → logprob: -9.36377239227295

Token 690: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0373552143573761
    2. '_a' → logprob: -3.7873551845550537
    3. ' =' → logprob: -5.287355422973633
    4. '_c' → logprob: -5.287355422973633
    5. '_count' → logprob: -6.662355422973633
    6. '=' → logprob: -6.912355422973633
    7. ',' → logprob: -7.412355422973633
    8. '_' → logprob: -8.287355422973633
    9. 'b' → logprob: -9.162355422973633
    10. '_columns' → logprob: -9.162355422973633

Token 691: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141586661338806
    2. ' =' → logprob: -1.7014158964157104
    3. ',' → logprob: -12.951416015625
    4. ' ' → logprob: -15.826416015625
    5. '=list' → logprob: -16.326416015625
    6. '=line' → logprob: -18.451416015625
    7. '=input' → logprob: -18.576416015625
    8. ')' → logprob: -18.576416015625
    9. '＝' → logprob: -18.576416015625
    10. ' ' → logprob: -18.701416015625

Token 692: ' list' (ID: 1562)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.301665335893631
    2. '[list' → logprob: -1.9266653060913086
    3. 'list' → logprob: -3.0516653060913086
    4. ' [],' → logprob: -3.4266653060913086
    5. '[' → logprob: -3.6766653060913086
    6. ' list' → logprob: -5.676665306091309
    7. ' [' → logprob: -6.301665306091309
    8. '[]' → logprob: -6.426665306091309
    9. '[
' → logprob: -7.551665306091309
    10. 'zip' → logprob: -7.801665306091309

Token 693: '(zip' (ID: 87520)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.004268458113074303
    2. '=' → logprob: -6.504268646240234
    3. 'map' → logprob: -6.629268646240234
    4. '(' → logprob: -7.379268646240234
    5. '(zip' → logprob: -7.879268646240234
    6. '(sys' → logprob: -8.629268646240234
    7. '(
' → logprob: -8.879268646240234
    8. ' =' → logprob: -10.379268646240234
    9. 'sys' → logprob: -10.504268646240234
    10. '(tuple' → logprob: -11.254268646240234

Token 694: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0067975446581840515
    2. '(*(' → logprob: -5.1317973136901855
    3. '(' → logprob: -7.2567973136901855
    4. '(
' → logprob: -9.631797790527344
    5. '(*)' → logprob: -10.006797790527344
    6. '*' → logprob: -10.131797790527344
    7. '*(' → logprob: -12.256797790527344
    8. '(

' → logprob: -13.006797790527344
    9. '(sys' → logprob: -13.256797790527344
    10. '(range' → logprob: -13.381797790527344

Token 695: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14001786708831787
    2. '[list' → logprob: -2.8900179862976074
    3. 'map' → logprob: -4.015017986297607
    4. '(map' → logprob: -4.140017986297607
    5. '(sys' → logprob: -4.515017986297607
    6. '(list' → logprob: -5.140017986297607
    7. '[
' → logprob: -5.140017986297607
    8. '[int' → logprob: -5.265017986297607
    9. '[i' → logprob: -5.265017986297607
    10. 'list' → logprob: -5.390017986297607

Token 696: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0250882338732481
    2. 'list' → logprob: -3.900088310241699
    3. '(map' → logprob: -6.150088310241699
    4. 'tuple' → logprob: -6.150088310241699
    5. '[' → logprob: -9.2750883102417
    6. '(list' → logprob: -9.9000883102417
    7. '(tuple' → logprob: -10.1500883102417
    8. '
' → logprob: -10.2750883102417
    9. 'sys' → logprob: -10.7750883102417
    10. ' map' → logprob: -11.4000883102417

Token 697: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.7954958821064793e-05
    2. 'int' → logprob: -11.125018119812012
    3. '(' → logprob: -13.500018119812012
    4. ',int' → logprob: -13.875018119812012
    5. '(
' → logprob: -15.375018119812012
    6. '(str' → logprob: -15.500018119812012
    7. '[int' → logprob: -16.375017166137695
    8. '   ' → logprob: -16.750017166137695
    9. ' (' → logprob: -16.750017166137695
    10. ']int' → logprob: -16.875017166137695

Token 698: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.101405568420887
    2. '(sys' → logprob: -2.351405620574951
    3. 'sys' → logprob: -7.101405620574951
    4. ' ,' → logprob: -8.976405143737793
    5. ',
' → logprob: -9.101405143737793
    6. '=sys' → logprob: -9.851405143737793
    7. ',s' → logprob: -10.726405143737793
    8. ' sys' → logprob: -10.851405143737793
    9. ',line' → logprob: -11.351405143737793
    10. ',(' → logprob: -11.976405143737793

Token 699: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.003604105906561017
    2. ' sys' → logprob: -5.628603935241699
    3. '(sys' → logprob: -13.1286039352417
    4. '   ' → logprob: -14.5036039352417
    5. '
' → logprob: -14.7536039352417
    6. '=sys' → logprob: -15.3786039352417
    7. ' ' → logprob: -15.5036039352417
    8. 'list' → logprob: -15.5036039352417
    9. '	sys' → logprob: -15.6286039352417
    10. ')' → logprob: -16.128604888916016

Token 700: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.000321995816193521
    2. '.buffer' → logprob: -8.125322341918945
    3. 'stdin' → logprob: -11.125322341918945
    4. '.stdout' → logprob: -12.250322341918945
    5. '.readline' → logprob: -12.750322341918945
    6. '(stdin' → logprob: -13.500322341918945
    7. '.in' → logprob: -14.375322341918945
    8. '.stderr' → logprob: -14.500322341918945
    9. '._' → logprob: -15.500322341918945
    10. '.' → logprob: -15.875322341918945

Token 701: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.015886196866631508
    2. '.stdin' → logprob: -5.390886306762695
    3. '=sys' → logprob: -5.390886306762695
    4. '(sys' → logprob: -5.890886306762695
    5. '.buffer' → logprob: -6.265886306762695
    6. '.sys' → logprob: -6.640886306762695
    7. 'sys' → logprob: -7.640886306762695
    8. '.readlines' → logprob: -9.765886306762695
    9. 'stdin' → logprob: -10.390886306762695
    10. '(stdin' → logprob: -11.015886306762695

Token 702: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.005945625249296427
    2. '(sys' → logprob: -5.755945682525635
    3. '=sys' → logprob: -6.505945682525635
    4. 'sys' → logprob: -6.880945682525635
    5. '().' → logprob: -9.130945205688477
    6. '.readlines' → logprob: -9.755945205688477
    7. ')' → logprob: -11.130945205688477
    8. '   ' → logprob: -11.255945205688477
    9. '))' → logprob: -11.630945205688477
    10. '.read' → logprob: -11.630945205688477

Token 703: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002798087371047586
    2. '()' → logprob: -8.250279426574707
    3. '()
' → logprob: -11.625279426574707
    4. ')' → logprob: -13.250279426574707
    5. ' ().' → logprob: -13.500279426574707
    6. '()).' → logprob: -13.625279426574707
    7. '()].' → logprob: -13.625279426574707
    8. '())' → logprob: -13.750279426574707
    9. '().__' → logprob: -14.750279426574707
    10. '   ' → logprob: -15.000279426574707

Token 704: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003122247871942818
    2. 'strip' → logprob: -8.375311851501465
    3. '__' → logprob: -10.625311851501465
    4. ')' → logprob: -10.750311851501465
    5. ' split' → logprob: -11.000311851501465
    6. 'rstrip' → logprob: -11.750311851501465
    7. 'read' → logprob: -12.750311851501465
    8. 'zip' → logprob: -13.250311851501465
    9. '```' → logprob: -13.875311851501465
    10. '(split' → logprob: -14.125311851501465

Token 705: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02100776694715023
    2. ')]' → logprob: -4.771007537841797
    3. ')' → logprob: -4.896007537841797
    4. '()' → logprob: -5.646007537841797
    5. ')])' → logprob: -7.396007537841797
    6. '()))' → logprob: -8.271007537841797
    7. '())
' → logprob: -8.396007537841797
    8. '()]' → logprob: -9.021007537841797
    9. '()
' → logprob: -10.521007537841797
    10. '()),' → logprob: -11.021007537841797

Token 706: ' for' (ID: 395)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.023467333987355232
    2. ']' → logprob: -5.023467540740967
    3. ' for' → logprob: -5.148467540740967
    4. ']))
' → logprob: -5.273467540740967
    5. 'for' → logprob: -5.898467540740967
    6. '()' → logprob: -6.648467540740967
    7. '   ' → logprob: -7.648467540740967
    8. '))' → logprob: -7.898467540740967
    9. '       ' → logprob: -8.273467063903809
    10. ' ]' → logprob: -9.398467063903809

Token 707: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0011860613012686372
    2. ' _' → logprob: -7.126185894012451
    3. '_edge' → logprob: -8.50118637084961
    4. '_i' → logprob: -9.00118637084961
    5. '_edges' → logprob: -11.12618637084961
    6. '_in' → logprob: -11.37618637084961
    7. '_
' → logprob: -12.50118637084961
    8. '_range' → logprob: -12.50118637084961
    9. '_vertices' → logprob: -12.50118637084961
    10. '_e' → logprob: -13.00118637084961

Token 708: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34963804483413696
    2. 'in' → logprob: -1.2246379852294922
    3. 'range' → logprob: -6.849637985229492
    4. 'i' → logprob: -9.849637985229492
    5. ' ' → logprob: -10.474637985229492
    6. '_' → logprob: -11.099637985229492
    7. ' range' → logprob: -11.349637985229492
    8. '  ' → logprob: -11.474637985229492
    9. '0' → logprob: -12.474637985229492
    10. '   ' → logprob: -13.474637985229492

Token 709: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004890497075393796
    2. ' range' → logprob: -7.625489234924316
    3. '   ' → logprob: -14.375489234924316
    4. '  ' → logprob: -16.25048828125
    5. ' ' → logprob: -16.37548828125
    6. '
' → logprob: -16.62548828125
    7. '(range' → logprob: -16.62548828125
    8. '	range' → logprob: -16.75048828125
    9. '    ' → logprob: -18.12548828125
    10. '[' → logprob: -18.37548828125

Token 710: '(vertex' (ID: 96471)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0647512897849083
    2. '(edge' → logprob: -2.814751386642456
    3. ' edge' → logprob: -5.939751148223877
    4. 'vertex' → logprob: -9.064751625061035
    5. '(vertex' → logprob: -11.689751625061035
    6. '=edge' → logprob: -11.689751625061035
    7. 'edges' → logprob: -11.814751625061035
    8. ' (' → logprob: -12.564751625061035
    9. '(' → logprob: -13.689751625061035
    10. '   ' → logprob: -14.314751625061035

Token 711: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.588793960167095e-05
    2. 'count' → logprob: -9.625076293945312
    3. 's' → logprob: -12.250076293945312
    4. ')' → logprob: -14.000076293945312
    5. '_COUNT' → logprob: -14.000076293945312
    6. ')]' → logprob: -14.250076293945312
    7. 'Count' → logprob: -14.750076293945312
    8. '_counts' → logprob: -15.250076293945312
    9. ')])' → logprob: -15.500076293945312
    10. ' count' → logprob: -15.500076293945312

Token 712: ')]' (ID: 15710)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.000885134213604033
    2. ')]' → logprob: -8.000885009765625
    3. ']))
' → logprob: -8.000885009765625
    4. ']' → logprob: -9.625885009765625
    5. '])' → logprob: -10.125885009765625
    6. ')])' → logprob: -10.250885009765625
    7. '))' → logprob: -10.250885009765625
    8. '])))' → logprob: -10.750885009765625
    9. ')))' → logprob: -12.625885009765625
    10. ']))

' → logprob: -13.000885009765625

Token 713: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00013464801304508
    2. ')' → logprob: -9.375134468078613
    3. '))
' → logprob: -10.000134468078613
    4. ')))' → logprob: -12.625134468078613
    5. ' ))' → logprob: -14.625134468078613
    6. '])' → logprob: -16.25013542175293
    7. ')),' → logprob: -16.37513542175293
    8. '));' → logprob: -16.37513542175293
    9. '()))' → logprob: -16.50013542175293
    10. ']))' → logprob: -16.75013542175293

Token 714: 'edge' (ID: 13457)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5441720485687256
    2. '
' → logprob: -2.1691720485687256
    3. 'edges' → logprob: -2.2941720485687256
    4. 'a' → logprob: -2.4191720485687256
    5. ',' → logprob: -2.5441720485687256
    6. 'vertex' → logprob: -2.6691720485687256
    7. ',
' → logprob: -3.0441720485687256
    8. 'columns' → logprob: -3.2941720485687256
    9. 'edge' → logprob: -4.044172286987305
    10. 'weights' → logprob: -4.044172286987305

Token 715: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05639336258172989
    2. '_list' → logprob: -2.9313933849334717
    3. '_s' → logprob: -7.306393146514893
    4. 'list' → logprob: -8.30639362335205
    5. '_count' → logprob: -8.80639362335205
    6. '_indices' → logprob: -9.30639362335205
    7. '_edges' → logprob: -9.55639362335205
    8. 'es' → logprob: -10.43139362335205
    9. ' =' → logprob: -10.55639362335205
    10. '_data' → logprob: -10.80639362335205

Token 716: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602785587310791
    2. ' =' → logprob: -1.910278558731079
    3. '=[]' → logprob: -10.0352783203125
    4. ',' → logprob: -11.5352783203125
    5. '=[' → logprob: -15.6602783203125
    6. '[' → logprob: -15.7852783203125
    7. '＝' → logprob: -16.4102783203125
    8. '[]' → logprob: -16.6602783203125
    9. ' =[' → logprob: -16.7852783203125
    10. '=[]
' → logprob: -16.9102783203125

Token 717: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6944832801818848
    2. '[list' → logprob: -0.6944832801818848
    3. '[List' → logprob: -7.444483280181885
    4. '[array' → logprob: -9.069482803344727
    5. '[int' → logprob: -9.194482803344727
    6. '[
' → logprob: -9.319482803344727
    7. '[]' → logprob: -9.569482803344727
    8. '[i' → logprob: -10.069482803344727
    9. '[line' → logprob: -10.069482803344727
    10. '[var' → logprob: -10.694482803344727

Token 718: 'list' (ID: 2641)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.008824095129966736
    2. 'list' → logprob: -4.758823871612549
    3. '(tuple' → logprob: -9.133824348449707
    4. ' tuple' → logprob: -9.258824348449707
    5. '(list' → logprob: -13.633824348449707
    6. '
' → logprob: -13.633824348449707
    7. '(*' → logprob: -13.758824348449707
    8. 'map' → logprob: -13.883824348449707
    9. '   ' → logprob: -13.883824348449707
    10. '*' → logprob: -14.258824348449707

Token 719: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0017688281368464231
    2. 'map' → logprob: -6.376769065856934
    3. '(sys' → logprob: -10.126769065856934
    4. '(' → logprob: -11.251769065856934
    5. ']' → logprob: -12.376769065856934
    6. '()' → logprob: -12.876769065856934
    7. '(
' → logprob: -14.001769065856934
    8. '(tuple' → logprob: -14.001769065856934
    9. ' map' → logprob: -14.251769065856934
    10. '
' → logprob: -14.251769065856934

Token 720: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003091254911851138
    2. 'int' → logprob: -8.500308990478516
    3. ',int' → logprob: -9.250308990478516
    4. ']int' → logprob: -12.625308990478516
    5. '=int' → logprob: -13.125308990478516
    6. '[int' → logprob: -13.375308990478516
    7. '(' → logprob: -14.375308990478516
    8. '<int' → logprob: -14.375308990478516
    9. ')' → logprob: -14.500308990478516
    10. ' int' → logprob: -14.625308990478516

Token 721: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006598960608243942
    2. '(sys' → logprob: -7.750659942626953
    3. 'sys' → logprob: -8.875659942626953
    4. '(),' → logprob: -9.750659942626953
    5. ' ,' → logprob: -11.250659942626953
    6. '=sys' → logprob: -11.625659942626953
    7. ',
' → logprob: -12.625659942626953
    8. ' sys' → logprob: -13.250659942626953
    9. '(' → logprob: -14.000659942626953
    10. '	sys' → logprob: -14.250659942626953

Token 722: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0008079635445028543
    2. ' sys' → logprob: -7.125807762145996
    3. ')' → logprob: -13.625807762145996
    4. ',' → logprob: -13.750807762145996
    5. '(sys' → logprob: -14.250807762145996
    6. '=sys' → logprob: -15.625807762145996
    7. '	sys' → logprob: -16.375808715820312
    8. '...' → logprob: -16.500808715820312
    9. '
' → logprob: -17.000808715820312
    10. ' ' → logprob: -17.250808715820312

Token 723: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.005603323224931955
    2. '.buffer' → logprob: -5.255603313446045
    3. 'stdin' → logprob: -8.880603790283203
    4. '.readline' → logprob: -8.880603790283203
    5. 'buffer' → logprob: -10.505603790283203
    6. '.stdout' → logprob: -10.630603790283203
    7. '=sys' → logprob: -11.380603790283203
    8. 'sys' → logprob: -11.505603790283203
    9. '.stderr' → logprob: -12.005603790283203
    10. '.sys' → logprob: -12.130603790283203

Token 724: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.016081178560853004
    2. '.readline' → logprob: -4.6410813331604
    3. '.stdin' → logprob: -5.1410813331604
    4. 'buffer' → logprob: -7.7660813331604
    5. '.' → logprob: -11.891080856323242
    6. 'stdin' → logprob: -12.016080856323242
    7. '=sys' → logprob: -12.516080856323242
    8. '(buffer' → logprob: -13.266080856323242
    9. 'sys' → logprob: -13.266080856323242
    10. ' .' → logprob: -13.391080856323242

Token 725: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.7146746763028204e-05
    2. 'buffer' → logprob: -10.87503719329834
    3. 'sys' → logprob: -11.62503719329834
    4. '.readlines' → logprob: -12.87503719329834
    5. '.buffer' → logprob: -12.87503719329834
    6. '   ' → logprob: -13.37503719329834
    7. '=sys' → logprob: -13.37503719329834
    8. 'stdin' → logprob: -15.50003719329834
    9. '.stdin' → logprob: -15.62503719329834
    10. '))' → logprob: -16.250036239624023

Token 726: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003640811424702406
    2. '.readline' → logprob: -5.628640651702881
    3. '()[' → logprob: -11.253641128540039
    4. '   ' → logprob: -11.378641128540039
    5. '.split' → logprob: -11.378641128540039
    6. '()' → logprob: -13.628641128540039
    7. '.read' → logprob: -14.503641128540039
    8. '.' → logprob: -14.503641128540039
    9. '       ' → logprob: -14.628641128540039
    10. '  ' → logprob: -14.628641128540039

Token 727: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.961759259458631e-06
    2. 'strip' → logprob: -12.625004768371582
    3. ' split' → logprob: -13.875004768371582
    4. '.split' → logprob: -15.250004768371582
    5. 'read' → logprob: -16.1250057220459
    6. 'rstrip' → logprob: -16.2500057220459
    7. '
' → logprob: -16.5000057220459
    8. '(split' → logprob: -16.8750057220459
    9. '.readline' → logprob: -17.6250057220459
    10. ')' → logprob: -18.1250057220459

Token 728: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.09159170836210251
    2. '())' → logprob: -2.5915915966033936
    3. '))' → logprob: -4.591591835021973
    4. '()' → logprob: -6.216591835021973
    5. ')' → logprob: -8.341591835021973
    6. '()))
' → logprob: -8.591591835021973
    7. ')]' → logprob: -10.716591835021973
    8. '())
' → logprob: -11.591591835021973
    9. '()]' → logprob: -11.716591835021973
    10. '()
' → logprob: -12.341591835021973

Token 729: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12719950079917908
    2. 'for' → logprob: -2.127199411392212
    3. ')' → logprob: -8.627199172973633
    4. '   ' → logprob: -9.627199172973633
    5. '	for' → logprob: -10.877199172973633
    6. '()' → logprob: -13.377199172973633
    7. '       ' → logprob: -13.752199172973633
    8. '           ' → logprob: -13.877199172973633
    9. ']' → logprob: -14.002199172973633
    10. '    ' → logprob: -14.377199172973633

Token 730: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.226084902882576
    2. ' in' → logprob: -2.4760849475860596
    3. 'range' → logprob: -3.1010849475860596
    4. ' range' → logprob: -3.2260849475860596
    5. 'in' → logprob: -4.3510847091674805
    6. '_range' → logprob: -4.4760847091674805
    7. '_edge' → logprob: -4.7260847091674805
    8. ' _' → logprob: -8.60108470916748
    9. '_edges' → logprob: -9.72608470916748
    10. '   ' → logprob: -9.85108470916748

Token 731: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011495040729641914
    2. ' range' → logprob: -4.511495113372803
    3. 'in' → logprob: -8.761494636535645
    4. 'edge' → logprob: -8.886494636535645
    5. ' in' → logprob: -9.261494636535645
    6. '(range' → logprob: -9.886494636535645
    7. '(edge' → logprob: -12.386494636535645
    8. '(' → logprob: -13.636494636535645
    9. ' edge' → logprob: -14.386494636535645
    10. ' ' → logprob: -16.01149559020996

Token 732: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00047654795343987644
    2. ' range' → logprob: -7.750476360321045
    3. 'edge' → logprob: -10.000476837158203
    4. '(range' → logprob: -14.625476837158203
    5. ' edge' → logprob: -16.750476837158203
    6. '(edge' → logprob: -17.625476837158203
    7. '
' → logprob: -18.375476837158203
    8. '   ' → logprob: -19.000476837158203
    9. ' ' → logprob: -19.250476837158203
    10. '(' → logprob: -19.250476837158203

Token 733: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.12731148302555084
    2. 'edge' → logprob: -2.1273114681243896
    3. ' edge' → logprob: -7.877311706542969
    4. '(' → logprob: -13.127311706542969
    5. '=edge' → logprob: -13.877311706542969
    6. ' (' → logprob: -14.002311706542969
    7. '_edge' → logprob: -16.50231170654297
    8. 'edges' → logprob: -16.62731170654297
    9. '   ' → logprob: -17.12731170654297
    10. 'range' → logprob: -17.25231170654297

Token 734: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.176947600673884e-05
    2. 'count' → logprob: -10.750021934509277
    3. 'Count' → logprob: -16.62502098083496
    4. '_COUNT' → logprob: -17.75002098083496
    5. '   ' → logprob: -18.12502098083496
    6. 's' → logprob: -18.12502098083496
    7. ' count' → logprob: -18.37502098083496
    8. '
' → logprob: -18.62502098083496
    9. '_' → logprob: -18.87502098083496
    10. ')' → logprob: -19.62502098083496

Token 735: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.16097557544708252
    2. ']' → logprob: -1.9109755754470825
    3. ')' → logprob: -7.410975456237793
    4. '()]' → logprob: -9.160975456237793
    5. '])' → logprob: -10.535975456237793
    6. '])]' → logprob: -11.910975456237793
    7. ')])' → logprob: -12.785975456237793
    8. ' ]' → logprob: -13.285975456237793
    9. ']
' → logprob: -13.660975456237793
    10. '}]' → logprob: -14.660975456237793

Token 736: 'adj' (ID: 57001)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -1.7884809970855713
    2. 'ds' → logprob: -2.1634809970855713
    3. 'answer' → logprob: -2.2884809970855713
    4. 'u' → logprob: -2.4134809970855713
    5. 'edges' → logprob: -2.9134809970855713
    6. 'a' → logprob: -3.4134809970855713
    7. 'result' → logprob: -3.5384809970855713
    8. 'parent' → logprob: -3.6634809970855713
    9. 'edge' → logprob: -3.6634809970855713
    10. 'color' → logprob: -3.7884809970855713

Token 737: 'acency' (ID: 118557)
  Prédit: 'acency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.7679113149642944
    2. ' =' → logprob: -1.0179113149642944
    3. '_list' → logprob: -1.7679113149642944
    4. 'list' → logprob: -6.642911434173584
    5. '=' → logprob: -6.892911434173584
    6. 'ac' → logprob: -7.267911434173584
    7. 'acent' → logprob: -7.767911434173584
    8. '=[]' → logprob: -8.267910957336426
    9. '_lists' → logprob: -9.392910957336426
    10. 'List' → logprob: -9.767910957336426

Token 738: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35434943437576294
    2. '=' → logprob: -1.8543493747711182
    3. '_list' → logprob: -1.9793493747711182
    4. '_' → logprob: -6.354349613189697
    5. '_lists' → logprob: -6.854349613189697
    6. 'List' → logprob: -8.354349136352539
    7. '_lst' → logprob: -8.479349136352539
    8. '=[]' → logprob: -9.229349136352539
    9. '_arr' → logprob: -9.979349136352539
    10. '=_' → logprob: -9.979349136352539

Token 739: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868720829486847
    2. ' =' → logprob: -1.1368720531463623
    3. '[' → logprob: -15.386872291564941
    4. '=[]' → logprob: -15.386872291564941
    5. '=[' → logprob: -15.761872291564941
    6. '＝' → logprob: -15.761872291564941
    7. ':' → logprob: -16.386871337890625
    8. ' ' → logprob: -16.761871337890625
    9. ' =[' → logprob: -16.886871337890625
    10. ',' → logprob: -17.386871337890625

Token 740: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0026834949385374784
    2. ' [[]' → logprob: -6.002683639526367
    3. '{' → logprob: -8.502683639526367
    4. '[[' → logprob: -12.377683639526367
    5. '   ' → logprob: -14.377683639526367
    6. '[
' → logprob: -17.377683639526367
    7. '{}' → logprob: -17.752683639526367
    8. 'default' → logprob: -18.252683639526367
    9. '[{' → logprob: -18.502683639526367
    10. 'collections' → logprob: -18.627683639526367

Token 741: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5760008692741394
    2. ' for' → logprob: -0.8260008692741394
    3. '   ' → logprob: -10.451001167297363
    4. ',' → logprob: -11.076001167297363
    5. '(vertex' → logprob: -11.576001167297363
    6. 'vertex' → logprob: -13.576001167297363
    7. ']' → logprob: -13.701001167297363
    8. ' ' → logprob: -14.076001167297363
    9. 'in' → logprob: -14.201001167297363
    10. '	for' → logprob: -14.326001167297363

Token 742: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009941420517861843
    2. ' range' → logprob: -5.009941577911377
    3. 'range' → logprob: -5.759941577911377
    4. ' _' → logprob: -10.134941101074219
    5. '_range' → logprob: -10.759941101074219
    6. ' in' → logprob: -12.509941101074219
    7. 'in' → logprob: -12.884941101074219
    8. '(range' → logprob: -13.884941101074219
    9. '_in' → logprob: -15.009941101074219
    10. '__' → logprob: -15.259941101074219

Token 743: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1362816095352173
    2. ' in' → logprob: -1.3862816095352173
    3. 'range' → logprob: -1.6362816095352173
    4. 'in' → logprob: -1.6362816095352173
    5. ' range' → logprob: -3.2612814903259277
    6. 'i' → logprob: -7.136281490325928
    7. '_range' → logprob: -8.636281967163086
    8. ' _' → logprob: -9.511281967163086
    9. ' ' → logprob: -9.761281967163086
    10. '(range' → logprob: -10.511281967163086

Token 744: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234121344983578
    2. ' range' → logprob: -5.255234241485596
    3. '   ' → logprob: -16.380233764648438
    4. '(range' → logprob: -16.505233764648438
    5. '_range' → logprob: -16.880233764648438
    6. 'vertex' → logprob: -17.255233764648438
    7. '
' → logprob: -18.005233764648438
    8. ' ' → logprob: -18.005233764648438
    9. '_' → logprob: -18.255233764648438
    10. 'r' → logprob: -18.380233764648438

Token 745: '(vertex' (ID: 96471)
  Prédit: '(vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertex' → logprob: -0.011066090315580368
    2. 'vertex' → logprob: -4.51106595993042
    3. ' vertex' → logprob: -11.136066436767578
    4. 'range' → logprob: -12.886066436767578
    5. '(range' → logprob: -14.386066436767578
    6. '	vertex' → logprob: -15.386066436767578
    7. '(' → logprob: -16.011066436767578
    8. '(vertices' → logprob: -16.761066436767578
    9. ' (' → logprob: -17.011066436767578
    10. '_vertex' → logprob: -17.136066436767578

Token 746: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.9424725148128346e-05
    2. 'count' → logprob: -10.125049591064453
    3. 'vertex' → logprob: -11.750049591064453
    4. ')' → logprob: -15.250049591064453
    5. '_vertex' → logprob: -15.250049591064453
    6. '_list' → logprob: -15.750049591064453
    7. '   ' → logprob: -15.875049591064453
    8. 's' → logprob: -16.125049591064453
    9. '])' → logprob: -16.375049591064453
    10. '_' → logprob: -16.500049591064453

Token 747: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002252314705401659
    2. ')]' → logprob: -6.252252101898193
    3. ']
' → logprob: -8.127252578735352
    4. ')' → logprob: -11.127252578735352
    5. ' ]' → logprob: -11.377252578735352
    6. ']
' → logprob: -14.002252578735352
    7. ']

' → logprob: -14.627252578735352
    8. '()]' → logprob: -14.627252578735352
    9. ')]
' → logprob: -16.25225257873535
    10. '>]' → logprob: -16.50225257873535

Token 748: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.60414821645827e-06
    2. ' for' → logprob: -12.500004768371582
    3. 'edge' → logprob: -15.000004768371582
    4. 'degree' → logprob: -15.750004768371582
    5. 'edges' → logprob: -16.375003814697266
    6. '
' → logprob: -16.750003814697266
    7. '#' → logprob: -18.125003814697266
    8. 'from' → logprob: -18.125003814697266
    9. '```' → logprob: -18.125003814697266
    10. 'degrees' → logprob: -18.375003814697266

Token 749: ' node' (ID: 4596)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.11752013117074966
    2. 'a' → logprob: -2.6175200939178467
    3. '(u' → logprob: -4.617520332336426
    4. 'v' → logprob: -5.492520332336426
    5. 'x' → logprob: -5.742520332336426
    6. 'src' → logprob: -5.867520332336426
    7. 'from' → logprob: -5.992520332336426
    8. 'i' → logprob: -5.992520332336426
    9. 'edge' → logprob: -5.992520332336426
    10. 'e' → logprob: -6.367520332336426

Token 750: '_u' (ID: 17063)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6991484761238098
    2. 'u' → logprob: -1.699148416519165
    3. '_u' → logprob: -1.949148416519165
    4. ' in' → logprob: -3.074148416519165
    5. '_id' → logprob: -3.574148416519165
    6. '_from' → logprob: -3.949148416519165
    7. '_idx' → logprob: -4.449148654937744
    8. '1' → logprob: -4.449148654937744
    9. 'a' → logprob: -4.699148654937744
    10. 'from' → logprob: -4.699148654937744

Token 751: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018601825460791588
    2. ',node' → logprob: -4.018601894378662
    3. ' ,' → logprob: -8.893601417541504
    4. 'in' → logprob: -9.393601417541504
    5. ',u' → logprob: -9.768601417541504
    6. ',n' → logprob: -10.143601417541504
    7. '_,' → logprob: -10.268601417541504
    8. ',_' → logprob: -11.018601417541504
    9. ',v' → logprob: -11.518601417541504
    10. ',
' → logprob: -11.643601417541504

Token 752: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.01815076172351837
    2. ' node' → logprob: -4.018150806427002
    3. '	node' → logprob: -15.518150329589844
    4. '_node' → logprob: -15.893150329589844
    5. ' ' → logprob: -16.268150329589844
    6. ',node' → logprob: -16.393150329589844
    7. 'Node' → logprob: -16.518150329589844
    8. '(node' → logprob: -16.768150329589844
    9. '[node' → logprob: -17.393150329589844
    10. 'edge' → logprob: -17.518150329589844

Token 753: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.0005847262218594551
    2. ',' → logprob: -8.375584602355957
    3. '_u' → logprob: -8.750584602355957
    4. 'v' → logprob: -9.125584602355957
    5. '_,' → logprob: -10.000584602355957
    6. ',v' → logprob: -11.000584602355957
    7. '_' → logprob: -11.625584602355957
    8. '```' → logprob: -12.000584602355957
    9. ',_' → logprob: -12.875584602355957
    10. '   ' → logprob: -13.125584602355957

Token 754: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24510392546653748
    2. ' in' → logprob: -1.9951039552688599
    3. 'in' → logprob: -2.7451038360595703
    4. ',node' → logprob: -4.24510383605957
    5. ' ,' → logprob: -6.12010383605957
    6. ',in' → logprob: -8.62010383605957
    7. ',u' → logprob: -8.99510383605957
    8. '   ' → logprob: -9.62010383605957
    9. ',n' → logprob: -9.74510383605957
    10. ',_' → logprob: -9.99510383605957

Token 755: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.2014511525630951
    2. ' edge' → logprob: -1.7014511823654175
    3. '(edge' → logprob: -10.701451301574707
    4. ' ' → logprob: -12.201451301574707
    5. '   ' → logprob: -12.576451301574707
    6. '    ' → logprob: -13.326451301574707
    7. '=edge' → logprob: -13.701451301574707
    8. '[' → logprob: -14.076451301574707
    9. 'range' → logprob: -14.451451301574707
    10. '_edge' → logprob: -14.826451301574707

Token 756: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.8624639324116288e-06
    2. 'List' → logprob: -13.750001907348633
    3. '_' → logprob: -14.875001907348633
    4. 'list' → logprob: -15.125001907348633
    5. '_LIST' → logprob: -17.250001907348633
    6. 'u' → logprob: -17.375001907348633
    7. 's' → logprob: -17.750001907348633
    8. '-list' → logprob: -18.125001907348633
    9. '_u' → logprob: -18.125001907348633
    10. ':' → logprob: -18.375001907348633

Token 757: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11431078612804413
    2. ':
' → logprob: -2.9893107414245605
    3. ',' → logprob: -3.3643107414245605
    4. ' in' → logprob: -3.9893107414245605
    5. 'in' → logprob: -5.8643107414245605
    6. '   ' → logprob: -7.2393107414245605
    7. '):' → logprob: -7.8643107414245605
    8. '):
' → logprob: -8.114311218261719
    9. ',node' → logprob: -9.239311218261719
    10. '_in' → logprob: -9.864311218261719

Token 758: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.9027791495318525e-05
    2. ' adjacency' → logprob: -11.125019073486328
    3. '    
' → logprob: -13.625019073486328
    4. '       ' → logprob: -14.125019073486328
    5. ',' → logprob: -14.375019073486328
    6. '```' → logprob: -14.500019073486328
    7. '<|end|>' → logprob: -14.875019073486328
    8. '
' → logprob: -15.500019073486328
    9. 'adj' → logprob: -15.875019073486328
    10. ' adj' → logprob: -16.375019073486328

Token 759: ' node' (ID: 4596)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.421916663646698
    2. ' adjacency' → logprob: -1.5469167232513428
    3. '   ' → logprob: -2.0469167232513428
    4. ' node' → logprob: -6.796916484832764
    5. 'node' (adapté à ' node') → logprob: -7.296916484832764
    6. ' adj' → logprob: -8.046916961669922
    7. 'u' → logprob: -10.546916961669922
    8. ' u' → logprob: -10.921916961669922
    9. ' adjacent' → logprob: -11.546916961669922
    10. '```' → logprob: -13.421916961669922

Token 760: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -2.248469718324486e-05
    2. 'u' → logprob: -12.375022888183594
    3. '_' → logprob: -12.500022888183594
    4. '   ' → logprob: -12.750022888183594
    5. '=' → logprob: -13.250022888183594
    6. '_v' → logprob: -13.375022888183594
    7. '[u' → logprob: -14.000022888183594
    8. '_uv' → logprob: -14.250022888183594
    9. '_=' → logprob: -14.375022888183594
    10. '=u' → logprob: -14.500022888183594

Token 761: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.3602713346481323
    2. '-=' → logprob: -1.2352713346481323
    3. '-' → logprob: -4.610271453857422
    4. '   ' → logprob: -6.860271453857422
    5. ',' → logprob: -7.860271453857422
    6. ' -' → logprob: -8.110271453857422
    7. ' ' → logprob: -10.610271453857422
    8. '  ' → logprob: -11.360271453857422
    9. '[' → logprob: -11.360271453857422
    10. ',node' → logprob: -11.985271453857422

Token 762: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020389800192788243
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.000204086303711
    4. '```' → logprob: -19.18770408630371
    5. '  ' → logprob: -20.12520408630371
    6. '１' → logprob: -20.68770408630371
    7. '<|end|>' → logprob: -20.81270408630371
    8. '
' → logprob: -20.93770408630371
    9. '    ' → logprob: -20.93770408630371
    10. '0' → logprob: -21.00020408630371

Token 763: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -18.87502670288086
    4. '```' → logprob: -20.25002670288086
    5. '１' → logprob: -20.62502670288086
    6. '۱' → logprob: -21.62502670288086
    7. '
' → logprob: -21.68752670288086
    8. '2' → logprob: -21.68752670288086
    9. '১' → logprob: -22.18752670288086
    10. '0' → logprob: -22.25002670288086

Token 764: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019064391031861305
    2. '
' → logprob: -4.144064426422119
    3. 'node' → logprob: -6.519064426422119
    4. ' node' → logprob: -6.769064426422119
    5. 'adj' → logprob: -8.894063949584961
    6. ' adjacency' → logprob: -9.894063949584961
    7. ' 
' → logprob: -10.019063949584961
    8. ',' → logprob: -10.144063949584961
    9. ',node' → logprob: -10.269063949584961
    10. '    
' → logprob: -10.644063949584961

Token 765: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04120981693267822
    2. ' node' → logprob: -3.7912096977233887
    3. 'node' → logprob: -4.166209697723389
    4. '
' → logprob: -6.166209697723389
    5. '[node' → logprob: -10.041210174560547
    6. '    
' → logprob: -10.166210174560547
    7. ' 
' → logprob: -10.166210174560547
    8. ',node' → logprob: -10.416210174560547
    9. ',' → logprob: -11.666210174560547
    10. ',
' → logprob: -11.791210174560547

Token 766: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.0036070786882191896
    2. ' node' → logprob: -5.753607273101807
    3. '   ' → logprob: -7.753607273101807
    4. '	node' → logprob: -18.37860679626465
    5. '
' → logprob: -18.75360679626465
    6. ' ' → logprob: -18.87860679626465
    7. '_node' → logprob: -19.62860679626465
    8. '(node' → logprob: -19.87860679626465
    9. ',node' → logprob: -20.25360679626465
    10. '    ' → logprob: -20.37860679626465

Token 767: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.0017033906187862158
    2. '_u' → logprob: -6.376703262329102
    3. '_' → logprob: -14.251703262329102
    4. 'v' → logprob: -15.126703262329102
    5. '<|end|>' → logprob: -16.7517032623291
    6. 'u' → logprob: -17.1267032623291
    7. '   ' → logprob: -17.5017032623291
    8. 's' → logprob: -17.7517032623291
    9. '_w' → logprob: -17.8767032623291
    10. 'V' → logprob: -18.1267032623291

Token 768: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.11478354036808014
    2. '-=' → logprob: -2.239783525466919
    3. '-' → logprob: -6.239783763885498
    4. ' -' → logprob: -12.61478328704834
    5. ' ' → logprob: -13.23978328704834
    6. '   ' → logprob: -13.61478328704834
    7. '=' → logprob: -13.86478328704834
    8. '[' → logprob: -14.98978328704834
    9. '<|end|>' → logprob: -15.11478328704834
    10. ',' → logprob: -15.23978328704834

Token 769: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028048718813806772
    2. ' ' → logprob: -5.877804756164551
    3. '   ' → logprob: -17.377805709838867
    4. '<|end|>' → logprob: -18.002805709838867
    5. '```' → logprob: -18.377805709838867
    6. '0' → logprob: -19.440305709838867
    7. '2' → logprob: -19.565305709838867
    8. '  ' → logprob: -20.127805709838867
    9. '
' → logprob: -20.315305709838867
    10. '۱' → logprob: -20.440305709838867

Token 770: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -19.37502098083496
    4. '   ' → logprob: -20.06252098083496
    5. '<|end|>' → logprob: -20.43752098083496
    6. '2' → logprob: -20.68752098083496
    7. '۱' → logprob: -21.50002098083496
    8. '0' → logprob: -21.68752098083496
    9. '-' → logprob: -21.68752098083496
    10. '１' → logprob: -21.81252098083496

Token 771: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020973898062948138
    2. 'adj' → logprob: -8.62520980834961
    3. ' adjacency' → logprob: -10.62520980834961
    4. '
' → logprob: -12.50020980834961
    5. '    
' → logprob: -14.12520980834961
    6. '```' → logprob: -15.00020980834961
    7. 'ad' → logprob: -15.25020980834961
    8. ' adj' → logprob: -15.37520980834961
    9. '       ' → logprob: -16.62520980834961
    10. ',' → logprob: -17.00020980834961

Token 772: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009613470174372196
    2. 'adj' → logprob: -4.884613513946533
    3. ' adjacency' → logprob: -6.259613513946533
    4. '```' → logprob: -9.884613037109375
    5. '
' → logprob: -10.634613037109375
    6. '``' → logprob: -12.259613037109375
    7. '    
' → logprob: -12.259613037109375
    8. ' adj' → logprob: -12.384613037109375
    9. 'ad' → logprob: -13.259613037109375
    10. '  ' → logprob: -14.759613037109375

Token 773: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.1472419600977446e-06
    2. ' adjacency' → logprob: -14.000000953674316
    3. '   ' → logprob: -15.250000953674316
    4. '```' → logprob: -21.125001907348633
    5. ' adj' → logprob: -21.250001907348633
    6. '    
' → logprob: -22.375001907348633
    7. '
' → logprob: -22.875001907348633
    8. 'adjust' → logprob: -23.125001907348633
    9. 'edge' → logprob: -23.625001907348633
    10. '       ' → logprob: -24.125001907348633

Token 774: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.5690089639974758e-05
    2. 'list' → logprob: -11.125015258789062
    3. 'List' → logprob: -14.625015258789062
    4. '_lists' → logprob: -15.250015258789062
    5. '[' → logprob: -16.875015258789062
    6. '_' → logprob: -17.250015258789062
    7. '[u' → logprob: -17.625015258789062
    8. 's' → logprob: -17.875015258789062
    9. '[node' → logprob: -18.125015258789062
    10. '_LIST' → logprob: -18.125015258789062

Token 775: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: 0.0
    2. '[' → logprob: -19.625
    3. 'node' → logprob: -21.375
    4. '[user' → logprob: -22.375
    5. ' [' → logprob: -22.5
    6. '
' → logprob: -22.75
    7. '[u' → logprob: -22.875
    8. '=node' → logprob: -23.125
    9. '(node' → logprob: -23.375
    10. '```' → logprob: -23.75

Token 776: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -2.2246291337069124e-05
    2. '[u' → logprob: -11.500021934509277
    3. 'u' → logprob: -11.750021934509277
    4. '_v' → logprob: -12.875021934509277
    5. '[node' → logprob: -14.250021934509277
    6. '.append' → logprob: -15.375021934509277
    7. '   ' → logprob: -15.750021934509277
    8. ']' → logprob: -16.375022888183594
    9. '	u' → logprob: -16.375022888183594
    10. '_' → logprob: -16.625022888183594

Token 777: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.009803547523915768
    2. '].' → logprob: -4.759803771972656
    3. '.' → logprob: -6.884803771972656
    4. ').' → logprob: -9.634803771972656
    5. '[node' → logprob: -9.759803771972656
    6. ' .' → logprob: -10.884803771972656
    7. '.app' → logprob: -11.259803771972656
    8. '   ' → logprob: -12.384803771972656
    9. '.node' → logprob: -13.384803771972656
    10. 'append' → logprob: -13.759803771972656

Token 778: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.1008713702030946e-06
    2. '.append' → logprob: -13.250001907348633
    3. ' append' → logprob: -15.250001907348633
    4. 'app' → logprob: -19.000001907348633
    5. '_append' → logprob: -19.250001907348633
    6. 'Append' → logprob: -21.875001907348633
    7. '	append' → logprob: -22.000001907348633
    8. 'appen' → logprob: -22.250001907348633
    9. ' Append' → logprob: -24.875001907348633
    10. 'add' → logprob: -25.125001907348633

Token 779: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0002614550176076591
    2. 'node' → logprob: -8.250261306762695
    3. ' node' → logprob: -16.000261306762695
    4. '(' → logprob: -17.875261306762695
    5. '(
' → logprob: -18.500261306762695
    6. '((' → logprob: -19.250261306762695
    7. '	node' → logprob: -20.125261306762695
    8. '[node' → logprob: -20.375261306762695
    9. ',node' → logprob: -20.500261306762695
    10. '(n' → logprob: -20.750261306762695

Token 780: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -6.749814019713085e-06
    2. '_u' → logprob: -12.000006675720215
    3. '_' → logprob: -15.500006675720215
    4. 'v' → logprob: -15.750006675720215
    5. '_
' → logprob: -17.00000762939453
    6. '_vi' → logprob: -17.25000762939453
    7. ')_' → logprob: -17.62500762939453
    8. '```' → logprob: -17.62500762939453
    9. '
' → logprob: -17.75000762939453
    10. ')' → logprob: -18.00000762939453

Token 781: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04375085234642029
    2. '   ' → logprob: -3.293750762939453
    3. ')
' → logprob: -5.168750762939453
    4. '<|end|>' → logprob: -14.543750762939453
    5. ' )' → logprob: -15.418750762939453
    6. ')
' → logprob: -15.543750762939453
    7. '),' → logprob: -15.668750762939453
    8. ',' → logprob: -16.918750762939453
    9. '<|end|>' → logprob: -16.918750762939453
    10. ')

' → logprob: -17.418750762939453

Token 782: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00030412263004109263
    2. 'adj' → logprob: -8.125304222106934
    3. ' adjacency' → logprob: -11.875304222106934
    4. '  ' → logprob: -15.250304222106934
    5. ' ' → logprob: -15.375304222106934
    6. '<|end|>' → logprob: -15.500304222106934
    7. '       ' → logprob: -15.875304222106934
    8. '```' → logprob: -16.375303268432617
    9. 'ad' → logprob: -18.000303268432617
    10. 'Adj' → logprob: -18.125303268432617

Token 783: ' adjacency' (ID: 177015)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0795464962720871
    2. 'adj' → logprob: -2.5795464515686035
    3. ' adjacency' → logprob: -7.3295464515686035
    4. '  ' → logprob: -15.329546928405762
    5. '```' → logprob: -16.079545974731445
    6. ' ' → logprob: -16.079545974731445
    7. ' adj' → logprob: -16.329545974731445
    8. '       ' → logprob: -16.579545974731445
    9. 'ad' → logprob: -16.829545974731445
    10. 'Adj' → logprob: -16.954545974731445

Token 784: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.320199877838604e-07
    2. 'List' → logprob: -15.125
    3. 'list' → logprob: -15.875
    4. 'adj' → logprob: -17.125
    5. '[' → logprob: -17.5
    6. '[_' → logprob: -17.875
    7. '_' → logprob: -18.75
    8. '_LIST' → logprob: -19.125
    9. '   ' → logprob: -20.25
    10. '_List' → logprob: -20.5

Token 785: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: 0.0
    2. '[' → logprob: -16.75
    3. '[user' → logprob: -17.625
    4. 'node' → logprob: -19.75
    5. '[u' → logprob: -19.875
    6. '[n' → logprob: -20.0
    7. '[
' → logprob: -21.625
    8. '_node' → logprob: -22.25
    9. '(node' → logprob: -22.375
    10. '[cell' → logprob: -22.625

Token 786: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.0001613459608051926
    2. '_u' → logprob: -8.750161170959473
    3. 'v' → logprob: -13.000161170959473
    4. '```' → logprob: -15.750161170959473
    5. '[node' → logprob: -16.12516212463379
    6. 'user' → logprob: -16.50016212463379
    7. '[v' → logprob: -16.87516212463379
    8. 'u' → logprob: -17.00016212463379
    9. '[' → logprob: -17.37516212463379
    10. '_' → logprob: -17.62516212463379

Token 787: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.050297532230615616
    2. '].' → logprob: -3.550297498703003
    3. ').' → logprob: -4.300297737121582
    4. '.' → logprob: -5.175297737121582
    5. ' .' → logprob: -7.050297737121582
    6. '   ' → logprob: -8.925297737121582
    7. '.app' → logprob: -9.800297737121582
    8. ')' → logprob: -11.300297737121582
    9. '<|end|>' → logprob: -11.550297737121582
    10. '.Append' → logprob: -11.800297737121582

Token 788: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -15.375
    3. ' append' → logprob: -16.875
    4. 'appen' → logprob: -17.5
    5. '	append' → logprob: -18.125
    6. 'add' → logprob: -19.875
    7. 'app' → logprob: -20.625
    8. '_append' → logprob: -20.625
    9. 'adj' → logprob: -21.0
    10. 'prepend' → logprob: -21.25

Token 789: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.5690089639974758e-05
    2. 'node' → logprob: -11.125015258789062
    3. '[node' → logprob: -14.375015258789062
    4. '(
' → logprob: -15.000015258789062
    5. '(' → logprob: -17.625015258789062
    6. '(user' → logprob: -18.375015258789062
    7. ' node' → logprob: -18.500015258789062
    8. '   ' → logprob: -18.750015258789062
    9. ',node' → logprob: -19.000015258789062
    10. ' (' → logprob: -19.625015258789062

Token 790: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -5.796184723294573e-06
    2. 'u' → logprob: -12.250005722045898
    3. '_node' → logprob: -15.000005722045898
    4. '_user' → logprob: -15.250005722045898
    5. '[u' → logprob: -16.2500057220459
    6. '_v' → logprob: -16.3750057220459
    7. '_' → logprob: -16.5000057220459
    8. ')' → logprob: -16.7500057220459
    9. '_)' → logprob: -16.7500057220459
    10. '_uv' → logprob: -17.7500057220459

Token 791: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. ')
' → logprob: -11.875007629394531
    3. '<|end|>' → logprob: -15.000007629394531
    4. '#' → logprob: -16.12500762939453
    5. ' )' → logprob: -16.37500762939453
    6. ')#' → logprob: -16.62500762939453
    7. ')

' → logprob: -16.62500762939453
    8. '),' → logprob: -16.75000762939453
    9. '   ' → logprob: -17.12500762939453
    10. '))' → logprob: -17.25000762939453

Token 792: 'require' (ID: 10014)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3407411575317383
    2. 'color' → logprob: -2.8407411575317383
    3. 'dist' → logprob: -3.0907411575317383
    4. 'from' → logprob: -3.8407411575317383
    5. 'distance' → logprob: -4.215741157531738
    6. 'dp' → logprob: -4.215741157531738
    7. 'used' → logprob: -4.215741157531738
    8. 'import' → logprob: -4.215741157531738
    9. 'def' → logprob: -4.340741157531738
    10. 'max' → logprob: -4.715741157531738

Token 793: 'ment' (ID: 508)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08112213760614395
    2. 'ments' → logprob: -2.9561221599578857
    3. 'ment' → logprob: -3.9561221599578857
    4. 's' → logprob: -5.331121921539307
    5. '_size' → logprob: -7.706121921539307
    6. '_sizes' → logprob: -8.331122398376465
    7. 'mnt' → logprob: -9.081122398376465
    8. '_' → logprob: -9.206122398376465
    9. ' =' → logprob: -9.331122398376465
    10. '_nodes' → logprob: -9.456122398376465

Token 794: '_arr' (ID: 25121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7188431024551392
    2. '_s' → logprob: -2.5938429832458496
    3. '_count' → logprob: -2.5938429832458496
    4. '_a' → logprob: -2.7188429832458496
    5. ' =' → logprob: -3.0938429832458496
    6. '_list' → logprob: -3.2188429832458496
    7. '_counts' → logprob: -3.3438429832458496
    8. '_values' → logprob: -3.4688429832458496
    9. '_set' → logprob: -3.5938429832458496
    10. '_levels' → logprob: -4.46884298324585

Token 795: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11320848017930984
    2. '=' → logprob: -2.238208532333374
    3. ',' → logprob: -8.238208770751953
    4. 's' → logprob: -9.738208770751953
    5. '_' → logprob: -10.363208770751953
    6. '[' → logprob: -11.613208770751953
    7. '=[]' → logprob: -12.238208770751953
    8. ')' → logprob: -13.113208770751953
    9. ']' → logprob: -13.613208770751953
    10. 'a' → logprob: -13.738208770751953

Token 796: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09079635888338089
    2. '[list' → logprob: -3.34079647064209
    3. '[int' → logprob: -3.59079647064209
    4. ' [' → logprob: -5.34079647064209
    5. '[column' → logprob: -5.84079647064209
    6. '[*' → logprob: -5.96579647064209
    7. 'list' → logprob: -6.09079647064209
    8. '[-' → logprob: -6.59079647064209
    9. '[(' → logprob: -6.59079647064209
    10. '[]' → logprob: -6.59079647064209

Token 797: 'max' (ID: 3228)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0563379526138306
    2. 'columns' → logprob: -1.9313379526138306
    3. 'False' → logprob: -2.806337833404541
    4. 'list' → logprob: -2.806337833404541
    5. 'int' → logprob: -3.056337833404541
    6. '[' → logprob: -3.181337833404541
    7. 'b' → logprob: -3.681337833404541
    8. '(' → logprob: -3.681337833404541
    9. '(int' → logprob: -3.806337833404541
    10. 'max' → logprob: -3.806337833404541

Token 798: '(a' (ID: 6271)
  Prédit: '(columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(columns' → logprob: -0.12645024061203003
    2. '(a' → logprob: -2.251450300216675
    3. 'columns' → logprob: -4.876450061798096
    4. 'a' → logprob: -6.126450061798096
    5. '(column' → logprob: -7.001450061798096
    6. '(' → logprob: -7.251450061798096
    7. '((' → logprob: -7.751450061798096
    8. '(col' → logprob: -7.876450061798096
    9. '([' → logprob: -7.876450061798096
    10. '(x' → logprob: -8.501450538635254

Token 799: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41828516125679016
    2. '[i' → logprob: -1.9182851314544678
    3. '_val' → logprob: -3.1682851314544678
    4. '_,' → logprob: -3.2932851314544678
    5. 'b' → logprob: -3.6682851314544678
    6. 'i' → logprob: -3.7932851314544678
    7. '_i' → logprob: -3.9182851314544678
    8. 'a' → logprob: -3.9182851314544678
    9. '_b' → logprob: -4.918285369873047
    10. 'v' → logprob: -5.043285369873047

Token 800: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00035238542477600276
    2. ' b' → logprob: -8.00035285949707
    3. '0' → logprob: -11.75035285949707
    4. '   ' → logprob: -12.37535285949707
    5. ' ' → logprob: -13.37535285949707
    6. '1' → logprob: -13.75035285949707
    7. 'a' → logprob: -14.25035285949707
    8. '  ' → logprob: -15.00035285949707
    9. '    ' → logprob: -15.37535285949707
    10. '
' → logprob: -15.50035285949707

Token 801: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007207724265754223
    2. 'for' → logprob: -8.375720977783203
    3. ' for' → logprob: -8.375720977783203
    4. '[i' → logprob: -8.750720977783203
    5. ' )' → logprob: -10.125720977783203
    6. ')
' → logprob: -10.500720977783203
    7. '   ' → logprob: -11.750720977783203
    8. ']' → logprob: -12.000720977783203
    9. ',' → logprob: -12.125720977783203
    10. '[node' → logprob: -13.000720977783203

Token 802: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31345000863075256
    2. 'for' → logprob: -1.3134499788284302
    3. '   ' → logprob: -8.81344985961914
    4. ')' → logprob: -11.43844985961914
    5. '+' → logprob: -11.81344985961914
    6. ' ' → logprob: -12.06344985961914
    7. '	for' → logprob: -12.43844985961914
    8. '  ' → logprob: -13.31344985961914
    9. '-' → logprob: -13.43844985961914
    10. ' +' → logprob: -13.56344985961914

Token 803: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.003786062356084585
    2. ' a' → logprob: -5.628786087036133
    3. '(a' → logprob: -8.628786087036133
    4. ' (' → logprob: -12.128786087036133
    5. ',' → logprob: -14.628786087036133
    6. '	a' → logprob: -14.753786087036133
    7. '(' → logprob: -15.128786087036133
    8. ',a' → logprob: -15.753786087036133
    9. ' ' → logprob: -16.003786087036133
    10. '   ' → logprob: -16.503786087036133

Token 804: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03600286692380905
    2. ',b' → logprob: -3.7860028743743896
    3. ' in' → logprob: -5.1610026359558105
    4. ',a' → logprob: -5.5360026359558105
    5. 'in' → logprob: -6.0360026359558105
    6. ',(' → logprob: -8.661003112792969
    7. ' ,' → logprob: -9.036003112792969
    8. 'a' → logprob: -9.036003112792969
    9. '(a' → logprob: -10.161003112792969
    10. '_,' → logprob: -10.286003112792969

Token 805: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4214601516723633
    2. 'a' → logprob: -1.1714601516723633
    3. 'zip' → logprob: -3.6714601516723633
    4. ' zip' → logprob: -5.296460151672363
    5. ' b' → logprob: -6.546460151672363
    6. '(a' → logprob: -7.171460151672363
    7. '(zip' → logprob: -7.421460151672363
    8. ' a' → logprob: -8.171460151672363
    9. '(b' → logprob: -9.171460151672363
    10. ' (' → logprob: -9.296460151672363

Token 806: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1797519028186798
    2. 'in' → logprob: -1.8047518730163574
    3. 'a' → logprob: -13.554752349853516
    4. '
' → logprob: -13.804752349853516
    5. ' ' → logprob: -14.304752349853516
    6. 'import' → logprob: -14.429752349853516
    7. ')' → logprob: -14.804752349853516
    8. ',' → logprob: -14.929752349853516
    9. 's' → logprob: -15.054752349853516
    10. '	in' → logprob: -15.304752349853516

Token 807: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.03018037974834442
    2. ' zip' → logprob: -3.5301804542541504
    3. 'columns' → logprob: -7.90518045425415
    4. '(zip' → logprob: -9.780179977416992
    5. ' columns' → logprob: -12.530179977416992
    6. '
' → logprob: -14.905179977416992
    7. '.zip' → logprob: -15.030179977416992
    8. 'a' → logprob: -16.655179977416992
    9. ' ' → logprob: -17.030179977416992
    10. '_zip' → logprob: -17.155179977416992

Token 808: '(columns' (ID: 85358)
  Prédit: '(columns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(columns' → logprob: -3.7697225252486533e-06
    2. 'columns' → logprob: -12.500003814697266
    3. '(column' → logprob: -17.875003814697266
    4. ' columns' → logprob: -18.625003814697266
    5. '(cols' → logprob: -19.250003814697266
    6. '(rows' → logprob: -19.750003814697266
    7. '(' → logprob: -20.500003814697266
    8. '(vertices' → logprob: -20.750003814697266
    9. '(range' → logprob: -21.500003814697266
    10. ' (' → logprob: -22.375003814697266

Token 809: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0002545448951423168
    2. 'a' → logprob: -8.37525463104248
    3. '_columns' → logprob: -10.75025463104248
    4. 'columns' → logprob: -14.12525463104248
    5. 's' → logprob: -14.37525463104248
    6. '_arrays' → logprob: -16.000253677368164
    7. ',_' → logprob: -16.250253677368164
    8. ')_' → logprob: -16.375253677368164
    9. ',a' → logprob: -16.500253677368164
    10. '_b' → logprob: -16.625253677368164

Token 810: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.133198283147067e-05
    2. ' ,' → logprob: -10.125051498413086
    3. 'columns' → logprob: -12.000051498413086
    4. ')]' → logprob: -12.875051498413086
    5. ',
' → logprob: -13.125051498413086
    6. ')' → logprob: -15.875051498413086
    7. ',b' → logprob: -16.000051498413086
    8. ')]
' → logprob: -17.125051498413086
    9. ')],' → logprob: -17.125051498413086
    10. '.columns' → logprob: -17.375051498413086

Token 811: ' columns' (ID: 15697)
  Prédit: 'columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'columns' → logprob: -0.0005536287208087742
    2. ' columns' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.625554084777832
    4. '.columns' → logprob: -15.750554084777832
    5. 'column' → logprob: -16.375553131103516
    6. '(columns' → logprob: -17.000553131103516
    7. '_columns' → logprob: -17.375553131103516
    8. ' ' → logprob: -17.625553131103516
    9. '       ' → logprob: -17.750553131103516
    10. '           ' → logprob: -17.875553131103516

Token 812: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0009825548622757196
    2. '_a' → logprob: -7.500982761383057
    3. 'arr' → logprob: -8.625982284545898
    4. '_arr' → logprob: -9.500982284545898
    5. ')]' → logprob: -9.875982284545898
    6. ',' → logprob: -10.250982284545898
    7. 'b' → logprob: -10.250982284545898
    8. '_,' → logprob: -11.125982284545898
    9. ')])' → logprob: -11.500982284545898
    10. '))' → logprob: -12.000982284545898

Token 813: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00020771251001860946
    2. ']' → logprob: -8.875207901000977
    3. ')' → logprob: -9.875207901000977
    4. ')]
' → logprob: -11.125207901000977
    5. ' )' → logprob: -15.000207901000977
    6. '   ' → logprob: -15.375207901000977
    7. '])]' → logprob: -15.375207901000977
    8. '}]' → logprob: -16.125207901000977
    9. ')]
' → logprob: -16.125207901000977
    10. ')]

' → logprob: -16.375207901000977

Token 814: 'used' (ID: 4943)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.080668330192566
    2. 'dp' → logprob: -2.2056684494018555
    3. 'answer' → logprob: -2.5806684494018555
    4. 'result' → logprob: -2.9556684494018555
    5. 'degree' → logprob: -3.2056684494018555
    6. 'depth' → logprob: -3.5806684494018555
    7. 'color' → logprob: -3.5806684494018555
    8. 'from' → logprob: -3.7056684494018555
    9. 'import' → logprob: -3.7056684494018555
    10. 'stack' → logprob: -3.8306684494018555

Token 815: '_arr' (ID: 25121)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014219917356967926
    2. '=' → logprob: -4.264219760894775
    3. ']' → logprob: -11.014220237731934
    4. '_' → logprob: -11.764220237731934
    5. '[' → logprob: -11.764220237731934
    6. '=[' → logprob: -12.014220237731934
    7. '=[]' → logprob: -12.764220237731934
    8. ' ' → logprob: -12.889220237731934
    9. '   ' → logprob: -12.889220237731934
    10. ',' → logprob: -13.514220237731934

Token 816: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575939953327179
    2. '=' → logprob: -0.825939953327179
    3. '=[' → logprob: -15.325940132141113
    4. ' =[' → logprob: -15.450940132141113
    5. '[' → logprob: -17.700939178466797
    6. ' ' → logprob: -17.950939178466797
    7. '＝' → logprob: -18.200939178466797
    8. '=[]' → logprob: -18.325939178466797
    9. ',' → logprob: -18.950939178466797
    10. '   ' → logprob: -19.700939178466797

Token 817: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016213839408010244
    2. ' [' → logprob: -6.501621246337891
    3. '[node' → logprob: -9.62662124633789
    4. '[len' → logprob: -11.25162124633789
    5. '[class' → logprob: -12.37662124633789
    6. '[value' → logprob: -12.50162124633789
    7. '[item' → logprob: -12.50162124633789
    8. '[n' → logprob: -12.75162124633789
    9. '[size' → logprob: -12.75162124633789
    10. '[a' → logprob: -13.00162124633789

Token 818: '(columns' (ID: 85358)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13582253456115723
    2. '(False' → logprob: -2.3858225345611572
    3. '(map' → logprob: -4.010822296142578
    4. '=' → logprob: -5.635822296142578
    5. '(range' → logprob: -6.010822296142578
    6. '=False' → logprob: -6.010822296142578
    7. 'of' → logprob: -6.135822296142578
    8. '(' → logprob: -6.635822296142578
    9. ' =' → logprob: -6.635822296142578
    10. 'False' → logprob: -6.760822296142578

Token 819: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.002274200553074479
    2. '_b' → logprob: -6.127274036407471
    3. 'a' → logprob: -10.002274513244629
    4. ')' → logprob: -10.877274513244629
    5. '_' → logprob: -11.877274513244629
    6. '_used' → logprob: -12.377274513244629
    7. '_)' → logprob: -12.627274513244629
    8. '_,' → logprob: -13.377274513244629
    9. 'arr' → logprob: -13.377274513244629
    10. '_=' → logprob: -13.877274513244629

Token 820: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017481597024016082
    2. ')
' → logprob: -8.875174522399902
    3. ')]' → logprob: -11.250174522399902
    4. '])' → logprob: -11.875174522399902
    5. ' )' → logprob: -11.875174522399902
    6. '))' → logprob: -13.625174522399902
    7. '())' → logprob: -14.000174522399902
    8. '[' → logprob: -14.125174522399902
    9. '[:' → logprob: -14.125174522399902
    10. ']' → logprob: -14.250174522399902

Token 821: 'sort' (ID: 13373)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.8647513389587402
    2. 'from' → logprob: -1.2397513389587402
    3. 'visited' → logprob: -2.4897513389587402
    4. 'for' → logprob: -2.8647513389587402
    5. 'import' → logprob: -2.8647513389587402
    6. 'queue' → logprob: -3.3647513389587402
    7. 'parent' → logprob: -4.23975133895874
    8. 'dist' → logprob: -5.11475133895874
    9. 'def' → logprob: -5.11475133895874
    10. 'depth' → logprob: -5.36475133895874

Token 822: '_indices' (ID: 43508)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.12245890498161316
    2. '_idx' → logprob: -2.6224589347839355
    3. '_indices' → logprob: -4.1224589347839355
    4. '_order' → logprob: -4.9974589347839355
    5. '_indexes' → logprob: -4.9974589347839355
    6. 'idx' → logprob: -5.3724589347839355
    7. '_index' → logprob: -5.6224589347839355
    8. 'order' → logprob: -6.6224589347839355
    9. 'ing' → logprob: -7.6224589347839355
    10. 'indices' → logprob: -7.7474589347839355

Token 823: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693145871162415
    2. ' =' → logprob: -2.1269314289093018
    3. ',' → logprob: -13.751931190490723
    4. '=get' → logprob: -14.751931190490723
    5. '＝' → logprob: -14.876931190490723
    6. '=require' → logprob: -15.001931190490723
    7. '=sys' → logprob: -15.126931190490723
    8. '=create' → logprob: -15.251931190490723
    9. '=list' → logprob: -16.37693214416504
    10. '_=' → logprob: -16.62693214416504

Token 824: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0005800772923976183
    2. 'sorted' → logprob: -7.875580310821533
    3. ' get' → logprob: -8.625579833984375
    4. '[get' → logprob: -11.375579833984375
    5. 'range' → logprob: -12.125579833984375
    6. 'list' → logprob: -12.875579833984375
    7. '[' → logprob: -14.375579833984375
    8. ' sorted' → logprob: -15.375579833984375
    9. '(get' → logprob: -16.125579833984375
    10. '=get' → logprob: -16.250579833984375

Token 825: '_args' (ID: 18810)
  Prédit: '_args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_args' → logprob: -0.029848605394363403
    2. 'args' → logprob: -3.529848575592041
    3. 'Args' → logprob: -9.7798490524292
    4. 'sort' → logprob: -10.1548490524292
    5. '(args' → logprob: -14.2798490524292
    6. 'range' → logprob: -14.6548490524292
    7. 'sorted' → logprob: -14.9048490524292
    8. '$args' → logprob: -15.1548490524292
    9. '```' → logprob: -15.4048490524292
    10. ' Args' → logprob: -15.9048490524292

Token 826: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -9.491498531133402e-06
    2. 'sort' → logprob: -11.625009536743164
    3. 'orts' → logprob: -14.625009536743164
    4. '```' → logprob: -17.000009536743164
    5. 'орт' → logprob: -17.500009536743164
    6. 'orted' → logprob: -17.625009536743164
    7. '[' → logprob: -17.750009536743164
    8. 'port' → logprob: -18.000009536743164
    9. 'ord' → logprob: -18.125009536743164
    10. 'art' → logprob: -18.625009536743164

Token 827: '([' (ID: 5194)
  Prédit: '(require'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(require' → logprob: -0.2020532786846161
    2. '(' → logprob: -1.7020533084869385
    3. '(range' → logprob: -7.702053070068359
    4. '(use' → logprob: -9.32705307006836
    5. '(required' → logprob: -10.45205307006836
    6. 'require' → logprob: -10.45205307006836
    7. '(columns' → logprob: -11.70205307006836
    8. '((' → logprob: -12.07705307006836
    9. '([' → logprob: -12.32705307006836
    10. '(
' → logprob: -12.32705307006836

Token 828: 'a' (ID: 64)
  Prédit: 'require'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'require' → logprob: -0.22943797707557678
    2. '-' → logprob: -2.479438066482544
    3. '(require' → logprob: -3.479438066482544
    4. '-used' → logprob: -3.604438066482544
    5. 'used' → logprob: -3.729438066482544
    6. '-re' → logprob: -4.604437828063965
    7. '(-' → logprob: -5.104437828063965
    8. 'a' → logprob: -6.104437828063965
    9. 'x' → logprob: -6.229437828063965
    10. '(' → logprob: -6.229437828063965

Token 829: ' -' (ID: 533)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5748123526573181
    2. 'for' → logprob: -1.199812412261963
    3. '+' → logprob: -2.699812412261963
    4. ' +' → logprob: -3.199812412261963
    5. '[i' → logprob: -4.324812412261963
    6. ',' → logprob: -5.199812412261963
    7. 'require' → logprob: -6.074812412261963
    8. '[' → logprob: -6.699812412261963
    9. '+a' → logprob: -6.824812412261963
    10. '-' → logprob: -7.199812412261963

Token 830: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.464347173576243e-05
    2. ' b' → logprob: -10.37503433227539
    3. '   ' → logprob: -14.12503433227539
    4. '```' → logprob: -14.37503433227539
    5. 'used' → logprob: -14.50003433227539
    6. 'require' → logprob: -15.25003433227539
    7. '(b' → logprob: -15.25003433227539
    8. 'a' → logprob: -15.25003433227539
    9. 'u' → logprob: -16.12503433227539
    10. '
' → logprob: -16.50003433227539

Token 831: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16142220795154572
    2. 'for' → logprob: -1.9114222526550293
    3. ',' → logprob: -6.786422252655029
    4. ')' → logprob: -10.786421775817871
    5. '   ' → logprob: -11.286421775817871
    6. ' ' → logprob: -11.536421775817871
    7. ' ,' → logprob: -11.911421775817871
    8. ' in' → logprob: -12.786421775817871
    9. '	for' → logprob: -12.911421775817871
    10. '
' → logprob: -12.911421775817871

Token 832: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001041382784023881
    2. ' a' → logprob: -6.876041412353516
    3. ',' → logprob: -12.626041412353516
    4. '(a' → logprob: -12.876041412353516
    5. ',a' → logprob: -13.376041412353516
    6. '_,' → logprob: -15.126041412353516
    7. '	a' → logprob: -15.251041412353516
    8. '_a' → logprob: -16.001041412353516
    9. 'used' → logprob: -16.126041412353516
    10. ' ' → logprob: -16.376041412353516

Token 833: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016288429498672485
    2. ',b' → logprob: -4.1412882804870605
    3. '_,' → logprob: -9.016288757324219
    4. ',a' → logprob: -9.891288757324219
    5. ',i' → logprob: -10.141288757324219
    6. ' ,' → logprob: -11.641288757324219
    7. 'a' → logprob: -11.641288757324219
    8. 'b' → logprob: -12.141288757324219
    9. 'i' → logprob: -12.266288757324219
    10. ',u' → logprob: -12.891288757324219

Token 834: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00033713103039190173
    2. ' b' → logprob: -8.000337600708008
    3. ',b' → logprob: -13.750337600708008
    4. ',' → logprob: -14.500337600708008
    5. '   ' → logprob: -16.875337600708008
    6. '  ' → logprob: -17.125337600708008
    7. '```' → logprob: -17.250337600708008
    8. ' ' → logprob: -17.500337600708008
    9. 'require' → logprob: -18.125337600708008
    10. 'used' → logprob: -18.125337600708008

Token 835: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10134202241897583
    2. ',b' → logprob: -2.351341962814331
    3. 'in' → logprob: -6.97634220123291
    4. 'b' → logprob: -8.85134220123291
    5. ' in' → logprob: -10.72634220123291
    6. ',
' → logprob: -10.85134220123291
    7. ' ,' → logprob: -11.85134220123291
    8. ',v' → logprob: -13.22634220123291
    9. ',_' → logprob: -13.60134220123291
    10. ',in' → logprob: -13.85134220123291

Token 836: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.002022258937358856
    2. ' zip' → logprob: -6.3770222663879395
    3. 'columns' → logprob: -8.127021789550781
    4. 'used' → logprob: -12.002021789550781
    5. '
' → logprob: -12.252021789550781
    6. ',' → logprob: -12.252021789550781
    7. '(zip' → logprob: -12.502021789550781
    8. ' columns' → logprob: -13.127021789550781
    9. '   ' → logprob: -14.877021789550781
    10. '  ' → logprob: -15.002021789550781

Token 837: '(columns' (ID: 85358)
  Prédit: '(columns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(columns' → logprob: -0.0002810007717926055
    2. '(require' → logprob: -8.62528133392334
    3. 'columns' → logprob: -9.25028133392334
    4. '(' → logprob: -13.25028133392334
    5. '(column' → logprob: -13.75028133392334
    6. '(
' → logprob: -14.75028133392334
    7. '
' → logprob: -14.87528133392334
    8. 'require' → logprob: -15.00028133392334
    9. ' (' → logprob: -15.00028133392334
    10. '(range' → logprob: -15.37528133392334

Token 838: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -3.650518920039758e-06
    2. 'a' → logprob: -13.625003814697266
    3. 'arr' → logprob: -13.625003814697266
    4. '_arr' → logprob: -13.875003814697266
    5. '   ' → logprob: -17.500003814697266
    6. '_b' → logprob: -17.625003814697266
    7. ',' → logprob: -17.750003814697266
    8. '_,' → logprob: -17.750003814697266
    9. ')' → logprob: -17.875003814697266
    10. '_' → logprob: -18.375003814697266

Token 839: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1517960956552997e-05
    2. ' ,' → logprob: -12.000011444091797
    3. ',
' → logprob: -12.625011444091797
    4. ')])' → logprob: -14.875011444091797
    5. ')],' → logprob: -15.250011444091797
    6. ',b' → logprob: -15.500011444091797
    7. 'used' → logprob: -15.875011444091797
    8. ',)' → logprob: -16.125011444091797
    9. ',

' → logprob: -16.250011444091797
    10. ',c' → logprob: -16.375011444091797

Token 840: ' columns' (ID: 15697)
  Prédit: 'columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'columns' → logprob: -0.0013860702747479081
    2. ' columns' → logprob: -6.6263861656188965
    3. 'used' → logprob: -9.876385688781738
    4. 'b' → logprob: -12.001385688781738
    5. '   ' → logprob: -14.126385688781738
    6. ' used' → logprob: -14.626385688781738
    7. ' ' → logprob: -15.251385688781738
    8. '
' → logprob: -15.501385688781738
    9. 'column' → logprob: -15.626385688781738
    10. 'require' → logprob: -16.001386642456055

Token 841: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.03462474048137665
    2. 'b' → logprob: -3.5346248149871826
    3. 'a' → logprob: -6.5346245765686035
    4. '_a' → logprob: -6.6596245765686035
    5. 'arr' → logprob: -6.9096245765686035
    6. ',' → logprob: -7.0346245765686035
    7. '_arr' → logprob: -9.659625053405762
    8. '_,' → logprob: -10.034625053405762
    9. 'used' → logprob: -10.409625053405762
    10. ',b' → logprob: -10.534625053405762

Token 842: ')])
' (ID: 66560)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -0.08897273242473602
    2. '])' → logprob: -2.463972806930542
    3. '),' → logprob: -11.213973045349121
    4. ']' → logprob: -12.338973045349121
    5. ',' → logprob: -12.588973045349121
    6. ')])' → logprob: -12.588973045349121
    7. '])
' → logprob: -12.963973045349121
    8. ' ],' → logprob: -13.713973045349121
    9. ')' → logprob: -13.963973045349121
    10. '],
' → logprob: -14.588973045349121

Token 843: 'ds' (ID: 8559)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005476363468915224
    2. 'from' → logprob: -6.880476474761963
    3. 'import' → logprob: -7.380476474761963
    4. 'ds' → logprob: -7.380476474761963
    5. 'result' → logprob: -7.505476474761963
    6. 'answer' → logprob: -7.630476474761963
    7. 'visited' → logprob: -7.880476474761963
    8. 'dp' → logprob: -8.380475997924805
    9. 'stack' → logprob: -8.505475997924805
    10. 'def' → logprob: -8.755475997924805

Token 844: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -7.896309739408025e-07
    2. '
' → logprob: -15.375000953674316
    3. 'union' → logprob: -16.125
    4. '_u' → logprob: -16.625
    5. '_union' → logprob: -16.625
    6. ' u' → logprob: -17.25
    7. ' =' → logprob: -17.375
    8. 'у' → logprob: -17.375
    9. '[u' → logprob: -17.5
    10. '

' → logprob: -17.625

Token 845: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31330040097236633
    2. '=' → logprob: -1.313300371170044
    3. '.' → logprob: -10.188300132751465
    4. ' ' → logprob: -15.063300132751465
    5. ':' → logprob: -15.438300132751465
    6. '.=' → logprob: -15.563300132751465
    7. ',' → logprob: -16.31330108642578
    8. 's' → logprob: -16.81330108642578
    9. '  ' → logprob: -16.81330108642578
    10. ')' → logprob: -17.06330108642578

Token 846: ' Dis' (ID: 3946)
  Prédit: 'Dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dis' → logprob: -0.01416350994259119
    2. ' Dis' → logprob: -4.264163494110107
    3. '_Dis' → logprob: -19.764163970947266
    4. 'Discrete' → logprob: -20.514163970947266
    5. '.Dis' → logprob: -20.889163970947266
    6. '_dis' → logprob: -21.139163970947266
    7. 'dis' → logprob: -21.764163970947266
    8. 'DIS' → logprob: -21.889163970947266
    9. ' dis' → logprob: -21.889163970947266
    10. 'DS' → logprob: -22.264163970947266

Token 847: 'joint' (ID: 69164)
  Prédit: 'joint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'joint' → logprob: -0.25399017333984375
    2. 'Joint' → logprob: -1.5039901733398438
    3. 'oint' → logprob: -6.628990173339844
    4. 'j' → logprob: -7.503990173339844
    5. 'join' → logprob: -10.753990173339844
    6. '_joint' → logprob: -10.753990173339844
    7. '```' → logprob: -11.003990173339844
    8. '[' → logprob: -11.128990173339844
    9. '_' → logprob: -11.128990173339844
    10. 'jo' → logprob: -11.128990173339844

Token 848: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -3.128163257315464e-07
    2. 'set' → logprob: -15.25
    3. '_set' → logprob: -17.25
    4. 'et' → logprob: -18.5
    5. ' Set' → logprob: -20.25
    6. 'Sets' → logprob: -20.625
    7. '_Set' → logprob: -20.75
    8. '_SET' → logprob: -21.125
    9. 'Union' → logprob: -21.375
    10. '```' → logprob: -21.375

Token 849: 'Union' (ID: 39222)
  Prédit: 'Union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.06204823777079582
    2. 'Set' → logprob: -2.8120481967926025
    3. 'union' → logprob: -9.687047958374023
    4. '_union' → logprob: -11.812047958374023
    5. ' Union' → logprob: -13.062047958374023
    6. 'ion' → logprob: -13.312047958374023
    7. '(' → logprob: -13.437047958374023
    8. 'set' → logprob: -13.562047958374023
    9. 'Un' → logprob: -13.687047958374023
    10. '_set' → logprob: -13.812047958374023

Token 850: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.6932634711265564
    2. '(vertex' → logprob: -0.6932634711265564
    3. '(v' → logprob: -9.693263053894043
    4. '(' → logprob: -11.318263053894043
    5. '(edge' → logprob: -11.568263053894043
    6. '(size' → logprob: -11.568263053894043
    7. 'vertex' → logprob: -11.818263053894043
    8. '(len' → logprob: -11.943263053894043
    9. '(
' → logprob: -12.068263053894043
    10. 'd' → logprob: -13.943263053894043

Token 851: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.015196999534964561
    2. '(vertex' → logprob: -4.515196800231934
    3. 'vertex' → logprob: -6.515196800231934
    4. 'size' → logprob: -6.765196800231934
    5. 'sv' → logprob: -6.765196800231934
    6. 's' → logprob: -9.765196800231934
    7. '(size' → logprob: -9.765196800231934
    8. '(s' → logprob: -10.265196800231934
    9. 'sus' → logprob: -10.265196800231934
    10. '(v' → logprob: -10.765196800231934

Token 852: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.00014609156642109156
    2. 'size' → logprob: -8.87514591217041
    3. '_count' → logprob: -12.75014591217041
    4. 's' → logprob: -14.25014591217041
    5. 'arr' → logprob: -14.37514591217041
    6. '=' → logprob: -14.37514591217041
    7. '```' → logprob: -15.25014591217041
    8. '_' → logprob: -15.37514591217041
    9. 'vertex' → logprob: -15.37514591217041
    10. '_arr' → logprob: -15.75014591217041

Token 853: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13691094517707825
    2. 'vertex' → logprob: -2.136910915374756
    3. '(vertex' → logprob: -4.636910915374756
    4. ' vertex' → logprob: -9.011911392211914
    5. ')' → logprob: -10.011911392211914
    6. '	vertex' → logprob: -10.136911392211914
    7. ' =' → logprob: -10.511911392211914
    8. '   ' → logprob: -12.511911392211914
    9. '=len' → logprob: -12.511911392211914
    10. '=edge' → logprob: -13.511911392211914

Token 854: 'vertex' (ID: 25298)
  Prédit: 'vertex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -1.4259644558478612e-05
    2. ' vertex' → logprob: -11.250014305114746
    3. '   ' → logprob: -14.750014305114746
    4. 'len' → logprob: -15.250014305114746
    5. '	vertex' → logprob: -15.250014305114746
    6. '(vertex' → logprob: -15.875014305114746
    7. '
' → logprob: -16.25001335144043
    8. '  ' → logprob: -16.62501335144043
    9. ' ' → logprob: -17.75001335144043
    10. '           ' → logprob: -18.75001335144043

Token 855: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.583550642360933e-05
    2. 'count' → logprob: -10.250036239624023
    3. ')' → logprob: -16.000036239624023
    4. 'Count' → logprob: -16.625036239624023
    5. 'vertex' → logprob: -16.625036239624023
    6. '_size' → logprob: -17.625036239624023
    7. '_COUNT' → logprob: -17.750036239624023
    8. '_' → logprob: -18.625036239624023
    9. 'v' → logprob: -18.875036239624023
    10. ' count' → logprob: -19.125036239624023

Token 856: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043221889063715935
    2. ')
' → logprob: -7.750432014465332
    3. ')

' → logprob: -14.000432014465332
    4. ')
' → logprob: -15.500432014465332
    5. ' )' → logprob: -15.625432014465332
    6. ')`' → logprob: -15.875432014465332
    7. '))' → logprob: -17.12543296813965
    8. '),' → logprob: -17.50043296813965
    9. '   ' → logprob: -17.50043296813965
    10. ').' → logprob: -18.25043296813965

Token 857: 'visited' (ID: 52453)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01238827034831047
    2. 'answer' → logprob: -5.012388229370117
    3. 'result' → logprob: -5.887388229370117
    4. 'changed' → logprob: -7.512388229370117
    5. 'total' → logprob: -7.637388229370117
    6. 'ans' → logprob: -8.012388229370117
    7. 'res' → logprob: -8.137388229370117
    8. 'answers' → logprob: -8.637388229370117
    9. 'output' → logprob: -9.012388229370117
    10. 'possible' → logprob: -9.387388229370117

Token 858: '_arr' (ID: 25121)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06995532661676407
    2. '=' → logprob: -2.694955348968506
    3. '[' → logprob: -11.944954872131348
    4. '_' → logprob: -12.319954872131348
    5. '=[' → logprob: -12.694954872131348
    6. '=[]' → logprob: -13.194954872131348
    7. ')' → logprob: -14.069954872131348
    8. ' =[' → logprob: -14.444954872131348
    9. ' ' → logprob: -14.819954872131348
    10. '=set' → logprob: -15.194954872131348

Token 859: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132643401622772
    2. ' =' → logprob: -1.3132643699645996
    3. '=[' → logprob: -13.438263893127441
    4. '[' → logprob: -14.063263893127441
    5. ' =[' → logprob: -16.188264846801758
    6. ')' → logprob: -16.688264846801758
    7. ']' → logprob: -17.063264846801758
    8. '=[]' → logprob: -17.063264846801758
    9. ',' → logprob: -17.313264846801758
    10. ' ' → logprob: -17.438264846801758

Token 860: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.6087021473795176e-05
    2. ' [' → logprob: -11.125045776367188
    3. '   ' → logprob: -11.250045776367188
    4. '[node' → logprob: -11.625045776367188
    5. '[len' → logprob: -13.000045776367188
    6. '[a' → logprob: -14.125045776367188
    7. '[size' → logprob: -14.250045776367188
    8. '[value' → logprob: -14.500045776367188
    9. '[class' → logprob: -14.625045776367188
    10. '[v' → logprob: -14.625045776367188

Token 861: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00022189407900441438
    2. '0' → logprob: -8.500222206115723
    3. ' False' → logprob: -11.000222206115723
    4. 'True' → logprob: -13.625222206115723
    5. '   ' → logprob: -15.000222206115723
    6. '(False' → logprob: -16.125221252441406
    7. '[' → logprob: -18.125221252441406
    8. '
' → logprob: -18.500221252441406
    9. 'F' → logprob: -19.000221252441406
    10. '=False' → logprob: -19.625221252441406

Token 862: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3625357747077942
    2. ' for' → logprob: -1.2375357151031494
    3. 'for' → logprob: -4.4875359535217285
    4. ']*' → logprob: -6.2375359535217285
    5. '   ' → logprob: -7.4875359535217285
    6. ' ]' → logprob: -9.86253547668457
    7. '	for' → logprob: -10.23753547668457
    8. ')' → logprob: -10.23753547668457
    9. '*' → logprob: -11.23753547668457
    10. '       ' → logprob: -11.61253547668457

Token 863: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5330798029899597
    2. ' for' → logprob: -1.4080798625946045
    3. '[' → logprob: -2.5330798625946045
    4. '([' → logprob: -3.5330798625946045
    5. ')' → logprob: -4.033079624176025
    6. ']' → logprob: -4.658079624176025
    7. '(' → logprob: -5.033079624176025
    8. ',' → logprob: -5.658079624176025
    9. '
' → logprob: -5.783079624176025
    10. '(vertex' → logprob: -5.783079624176025

Token 864: ' vertex' (ID: 25363)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.0001254693343071267
    2. ' vertex' → logprob: -9.250125885009766
    3. '(vertex' → logprob: -10.500125885009766
    4. '   ' → logprob: -13.875125885009766
    5. '	vertex' → logprob: -14.250125885009766
    6. ' ' → logprob: -17.250125885009766
    7. 'len' → logprob: -17.250125885009766
    8. '  ' → logprob: -17.375125885009766
    9. '```' → logprob: -17.875125885009766
    10. '
' → logprob: -18.000125885009766

Token 865: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.128163257315464e-07
    2. 'count' → logprob: -15.375
    3. '_COUNT' → logprob: -17.25
    4. '```' → logprob: -17.625
    5. '_size' → logprob: -18.0
    6. 'Count' → logprob: -18.875
    7. '_vertex' → logprob: -19.0
    8. '_' → logprob: -19.375
    9. '   ' → logprob: -19.5
    10. ' _' → logprob: -19.875

Token 866: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2180214822292328
    2. 'from' → logprob: -2.2180213928222656
    3. 'stack' → logprob: -2.7180213928222656
    4. 'import' → logprob: -4.093021392822266
    5. 'def' → logprob: -5.843021392822266
    6. 'result' → logprob: -7.968021392822266
    7. 'answer' → logprob: -8.343021392822266
    8. 'order' → logprob: -8.843021392822266
    9. 'queue' → logprob: -9.093021392822266
    10. 'while' → logprob: -9.593021392822266

Token 867: 'answer' (ID: 17021)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014878070913255215
    2. 'stack' → logprob: -4.889878273010254
    3. 'from' → logprob: -5.389878273010254
    4. 'import' → logprob: -6.514878273010254
    5. 'def' → logprob: -7.514878273010254
    6. 'result' → logprob: -9.014878273010254
    7. 'order' → logprob: -9.389878273010254
    8. 'queue' → logprob: -9.639878273010254
    9. 'changed' → logprob: -9.764878273010254
    10. 'output' → logprob: -9.889878273010254

Token 868: '_arr' (ID: 25121)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02997436188161373
    2. '=' → logprob: -3.5299744606018066
    3. '_' → logprob: -9.154973983764648
    4. '_arr' → logprob: -9.779973983764648
    5. '=[]' → logprob: -11.654973983764648
    6. '_size' → logprob: -12.154973983764648
    7. ',' → logprob: -12.279973983764648
    8. 's' → logprob: -12.529973983764648
    9. ':' → logprob: -12.529973983764648
    10. ' ' → logprob: -12.904973983764648

Token 869: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143088698387146
    2. ' =' → logprob: -1.7014309167861938
    3. '=[]' → logprob: -11.076431274414062
    4. '=[' → logprob: -13.826431274414062
    5. '[' → logprob: -15.076431274414062
    6. '[:]' → logprob: -15.201431274414062
    7. ',' → logprob: -15.826431274414062
    8. ' ' → logprob: -16.576431274414062
    9. '=[]
' → logprob: -16.701431274414062
    10. ')' → logprob: -16.951431274414062

Token 870: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011322722770273685
    2. '[]' → logprob: -5.136322498321533
    3. '[-' → logprob: -5.386322498321533
    4. '["' → logprob: -7.761322498321533
    5. ' [' → logprob: -9.636322975158691
    6. '[:]' → logprob: -9.636322975158691
    7. '['' → logprob: -10.386322975158691
    8. '[column' → logprob: -10.511322975158691
    9. '[size' → logprob: -10.761322975158691
    10. '[list' → logprob: -10.886322975158691

Token 871: 'CONST' (ID: 168319)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48998144268989563
    2. '-' → logprob: -1.8649814128875732
    3. 'CONST' → logprob: -1.8649814128875732
    4. 'False' → logprob: -3.1149814128875732
    5. 'None' → logprob: -3.7399814128875732
    6. 'float' → logprob: -5.364981651306152
    7. '[]' → logprob: -6.239981651306152
    8. '"' → logprob: -7.864981651306152
    9. '[' → logprob: -8.489981651306152
    10. 'True' → logprob: -8.614981651306152

Token 872: '_FLOAT' (ID: 53417)
  Prédit: '_INT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INT' → logprob: -0.007004136219620705
    2. '_MOD' → logprob: -5.007004261016846
    3. '_INF' → logprob: -9.007003784179688
    4. '_FLOAT' → logprob: -9.132003784179688
    5. 'INT' → logprob: -10.507003784179688
    6. '_CONST' → logprob: -11.382003784179688
    7. '_int' → logprob: -13.007003784179688
    8. '_Int' → logprob: -13.132003784179688
    9. 'MOD' → logprob: -13.132003784179688
    10. '_IN' → logprob: -13.507003784179688

Token 873: '_INF' (ID: 173649)
  Prédit: '_INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INF' → logprob: -0.0001414426224073395
    2. 'INF' → logprob: -8.875141143798828
    3. '-INF' → logprob: -14.500141143798828
    4. '_inf' → logprob: -15.125141143798828
    5. '-inf' → logprob: -15.625141143798828
    6. '_INFINITY' → logprob: -15.625141143798828
    7. 'Inf' → logprob: -16.250141143798828
    8. 'inf' → logprob: -16.625141143798828
    9. '_INV' → logprob: -17.500141143798828
    10. '`' → logprob: -17.500141143798828

Token 874: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001037815964082256
    2. ' for' → logprob: -9.750103950500488
    3. ']*' → logprob: -10.500103950500488
    4. ' ]' → logprob: -11.375103950500488
    5. 'for' → logprob: -12.125103950500488
    6. '   ' → logprob: -15.000103950500488
    7. ')' → logprob: -15.375103950500488
    8. ' ' → logprob: -16.625102996826172
    9. ']*(' → logprob: -16.625102996826172
    10. ')]' → logprob: -17.750102996826172

Token 875: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5960495471954346
    2. 'for' → logprob: -0.9710495471954346
    3. ' for' → logprob: -2.9710495471954346
    4. ')' → logprob: -5.3460493087768555
    5. ']' → logprob: -5.7210493087768555
    6. '[' → logprob: -5.9710493087768555
    7. ',' → logprob: -6.7210493087768555
    8. '*' → logprob: -6.8460493087768555
    9. '<|end|>' → logprob: -6.8460493087768555
    10. '+' → logprob: -7.0960493087768555

Token 876: ' vertex' (ID: 25363)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.0001246348983841017
    2. '(vertex' → logprob: -9.12512493133545
    3. ' vertex' → logprob: -11.12512493133545
    4. '
' → logprob: -15.00012493133545
    5. '   ' → logprob: -15.62512493133545
    6. '(' → logprob: -15.62512493133545
    7. '	vertex' → logprob: -15.87512493133545
    8. '```' → logprob: -16.500123977661133
    9. ' ' → logprob: -17.125123977661133
    10. '           ' → logprob: -17.625123977661133

Token 877: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.842555426876061e-06
    2. 'count' → logprob: -12.250004768371582
    3. 'vertex' → logprob: -18.1250057220459
    4. '_COUNT' → logprob: -18.1250057220459
    5. '
' → logprob: -19.0000057220459
    6. '```' → logprob: -19.1250057220459
    7. 'Count' → logprob: -19.2500057220459
    8. '_' → logprob: -19.7500057220459
    9. '_vertex' → logprob: -21.0000057220459
    10. '__' → logprob: -21.0000057220459

Token 878: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002721779514104128
    2. 'from' → logprob: -6.377721786499023
    3. 'stack' → logprob: -7.877721786499023
    4. 'import' → logprob: -8.002721786499023
    5. 'def' → logprob: -8.502721786499023
    6. 'while' → logprob: -10.877721786499023
    7. '
' → logprob: -10.877721786499023
    8. 'queue' → logprob: -11.252721786499023
    9. ' for' → logprob: -11.752721786499023
    10. 'i' → logprob: -11.877721786499023

Token 879: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02514706179499626
    2. 'stack' → logprob: -3.900146961212158
    3. 'from' → logprob: -5.775146961212158
    4. 'import' → logprob: -7.275146961212158
    5. 'queue' → logprob: -8.025147438049316
    6. 'def' → logprob: -8.025147438049316
    7. 'deque' → logprob: -10.275147438049316
    8. 'order' → logprob: -11.150147438049316
    9. 'to' → logprob: -11.150147438049316
    10. ' for' → logprob: -11.650147438049316

Token 880: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6874637007713318
    2. 'i' → logprob: -1.6874637603759766
    3. 'index' → logprob: -2.1874637603759766
    4. 'v' → logprob: -3.0624637603759766
    5. 'node' → logprob: -3.0624637603759766
    6. 'cur' → logprob: -4.062463760375977
    7. 'ind' → logprob: -4.437463760375977
    8. 'id' → logprob: -4.562463760375977
    9. 'vertex' → logprob: -4.687463760375977
    10. 'start' → logprob: -4.812463760375977

Token 881: '_v' (ID: 5390)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1428336799144745
    2. 'in' → logprob: -2.017833709716797
    3. ' ' → logprob: -9.892833709716797
    4. '_in' → logprob: -10.017833709716797
    5. ',' → logprob: -10.142833709716797
    6. '	in' → logprob: -11.767833709716797
    7. '_' → logprob: -12.642833709716797
    8. 's' → logprob: -13.642833709716797
    9. ' ' → logprob: -13.642833709716797
    10. 'i' → logprob: -13.830333709716797

Token 882: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3134443461894989
    2. 'in' → logprob: -1.3134443759918213
    3. ',' → logprob: -9.438444137573242
    4. ' ' → logprob: -9.563444137573242
    5. 'v' → logprob: -12.063444137573242
    6. '_in' → logprob: -12.438444137573242
    7. 'x' → logprob: -12.688444137573242
    8. '	in' → logprob: -13.063444137573242
    9. '   ' → logprob: -13.313444137573242
    10. 'i' → logprob: -13.438444137573242

Token 883: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.00032283025211654603
    2. 'range' → logprob: -8.125323295593262
    3. 'sorted' → logprob: -11.375323295593262
    4. ' sort' → logprob: -11.750323295593262
    5. '(sort' → logprob: -13.375323295593262
    6. '   ' → logprob: -13.500323295593262
    7. 're' → logprob: -13.625323295593262
    8. 'reverse' → logprob: -14.000323295593262
    9. 'get' → logprob: -14.375323295593262
    10. '[' → logprob: -14.500323295593262

Token 884: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -3.79811754100956e-05
    2. 'sort' → logprob: -10.875038146972656
    3. 'indices' → logprob: -11.500038146972656
    4. '_' → logprob: -12.375038146972656
    5. '(indices' → logprob: -13.625038146972656
    6. '_sort' → logprob: -14.375038146972656
    7. 'Indices' → logprob: -14.500038146972656
    8. '_vertices' → logprob: -14.625038146972656
    9. '_sorted' → logprob: -15.750038146972656
    10. '__' → logprob: -15.875038146972656

Token 885: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006723771803081036
    2. ':
' → logprob: -5.006723880767822
    3. ':
' → logprob: -12.256723403930664
    4. ',' → logprob: -13.006723403930664
    5. '   ' → logprob: -14.881723403930664
    6. ':

' → logprob: -15.006723403930664
    7. '):
' → logprob: -15.756723403930664
    8. ' :' → logprob: -15.881723403930664
    9. '):' → logprob: -16.381723403930664
    10. '=' → logprob: -17.006723403930664

Token 886: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029226064682006836
    2. 'visited' → logprob: -3.779226064682007
    3. 'if' → logprob: -6.029226303100586
    4. 'answer' → logprob: -6.529226303100586
    5. ' if' → logprob: -7.654226303100586
    6. ' visited' → logprob: -7.779226303100586
    7. '```' → logprob: -7.904226303100586
    8. 'for' → logprob: -8.404226303100586
    9. 'current' → logprob: -8.779226303100586
    10. 'stack' → logprob: -9.404226303100586

Token 887: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.03597583994269371
    2. 'answer' → logprob: -4.035975933074951
    3. 'for' → logprob: -4.785975933074951
    4. 'used' → logprob: -5.410975933074951
    5. 'ds' → logprob: -5.535975933074951
    6. '   ' → logprob: -7.785975933074951
    7. 'current' → logprob: -9.285975456237793
    8. 'if' → logprob: -9.410975456237793
    9. 'stack' → logprob: -9.785975456237793
    10. ' visited' → logprob: -9.910975456237793

Token 888: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.3663626305060461e-05
    2. 'arr' → logprob: -11.37501335144043
    3. '[_' → logprob: -13.62501335144043
    4. '[arr' → logprob: -15.00001335144043
    5. 'Arr' → logprob: -15.37501335144043
    6. '_idx' → logprob: -16.50001335144043
    7. '	arr' → logprob: -16.75001335144043
    8. '\' → logprob: -17.12501335144043
    9. '[' → logprob: -17.25001335144043
    10. '_' → logprob: -17.50001335144043

Token 889: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.125000953674316
    3. '[id' → logprob: -16.000001907348633
    4. 'idx' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.625001907348633
    6. '
' → logprob: -18.000001907348633
    7. '```' → logprob: -18.000001907348633
    8. ' [' → logprob: -18.500001907348633
    9. '	idx' → logprob: -18.750001907348633
    10. '[
' → logprob: -18.750001907348633

Token 890: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -9.253090865968261e-06
    2. 'v' → logprob: -12.000009536743164
    3. ']' → logprob: -13.125009536743164
    4. '   ' → logprob: -14.625009536743164
    5. 'idx' → logprob: -15.750009536743164
    6. '_' → logprob: -16.375009536743164
    7. '_]' → logprob: -16.625009536743164
    8. '+' → logprob: -16.750009536743164
    9. '```' → logprob: -16.875009536743164
    10. '=' → logprob: -16.875009536743164

Token 891: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010303005576133728
    2. '=' → logprob: -4.635303020477295
    3. ']=' → logprob: -7.760303020477295
    4. ' =' → logprob: -9.135302543640137
    5. ' ]' → logprob: -12.135302543640137
    6. '   ' → logprob: -12.385302543640137
    7. '=True' → logprob: -13.135302543640137
    8. ' ' → logprob: -14.635302543640137
    9. ')' → logprob: -15.010302543640137
    10. '  ' → logprob: -16.260303497314453

Token 892: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029756510630249977
    2. ' =' → logprob: -3.529756546020508
    3. '=True' → logprob: -12.029756546020508
    4. ']' → logprob: -18.654756546020508
    5. ']=' → logprob: -18.779756546020508
    6. ',' → logprob: -19.404756546020508
    7. ' ' → logprob: -19.404756546020508
    8. '=False' → logprob: -19.529756546020508
    9. '＝' → logprob: -19.904756546020508
    10. '=true' → logprob: -20.154756546020508

Token 893: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.320199877838604e-07
    2. ' True' → logprob: -15.0
    3. '   ' → logprob: -17.5
    4. '1' → logprob: -19.375
    5. '=True' → logprob: -21.375
    6. 'true' → logprob: -21.375
    7. ' ' → logprob: -21.625
    8. '(True' → logprob: -21.75
    9. 'False' → logprob: -22.125
    10. '       ' → logprob: -22.25

Token 894: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04480482637882233
    2. 'for' → logprob: -3.419804811477661
    3. ' for' → logprob: -4.79480504989624
    4. '
' → logprob: -6.16980504989624
    5. '    
' → logprob: -7.91980504989624
    6. '```' → logprob: -9.169804573059082
    7. 'answer' → logprob: -9.294804573059082
    8. 'd' → logprob: -9.919804573059082
    9. 'ds' → logprob: -10.669804573059082
    10. ',' → logprob: -10.669804573059082

Token 895: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8424436450004578
    2. 'answer' → logprob: -1.0924437046051025
    3. 'for' → logprob: -1.7174437046051025
    4. 'ds' → logprob: -3.0924437046051025
    5. 'if' → logprob: -5.842443466186523
    6. 'current' → logprob: -6.092443466186523
    7. 'min' → logprob: -7.217443466186523
    8. 'cur' → logprob: -7.342443466186523
    9. ' for' → logprob: -7.717443466186523
    10. 'd' → logprob: -7.842443466186523

Token 896: ' root' (ID: 6577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06584759056568146
    2. 'ds' → logprob: -3.315847635269165
    3. 'answer' → logprob: -3.690847635269165
    4. 'current' → logprob: -7.315847396850586
    5. 'stack' → logprob: -7.815847396850586
    6. 'cur' → logprob: -8.315847396850586
    7. 'if' → logprob: -8.315847396850586
    8. 'queue' → logprob: -8.940847396850586
    9. 'component' → logprob: -9.065847396850586
    10. 'parent' → logprob: -9.690847396850586

Token 897: '_set' (ID: 5451)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019393461989238858
    2. '=' → logprob: -6.501939296722412
    3. '_root' → logprob: -8.87693977355957
    4. '_parent' → logprob: -9.25193977355957
    5. '_idx' → logprob: -9.37693977355957
    6. '_' → logprob: -9.62693977355957
    7. '_id' → logprob: -11.00193977355957
    8. ')' → logprob: -11.75193977355957
    9. '_index' → logprob: -12.12693977355957
    10. 's' → logprob: -12.75193977355957

Token 898: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25210142135620117
    2. '=' → logprob: -1.5021014213562012
    3. '_idx' → logprob: -9.37710189819336
    4. '_id' → logprob: -10.00210189819336
    5. 's' → logprob: -11.62710189819336
    6. '=_' → logprob: -11.75210189819336
    7. '=root' → logprob: -12.12710189819336
    8. '_root' → logprob: -12.62710189819336
    9. '_' → logprob: -12.75210189819336
    10. 'root' → logprob: -13.25210189819336

Token 899: ' set' (ID: 920)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.0036279852502048016
    2. 'idx' → logprob: -5.628627777099609
    3. '   ' → logprob: -11.87862777709961
    4. '
' → logprob: -12.12862777709961
    5. ' ds' → logprob: -13.12862777709961
    6. 'set' → logprob: -13.25362777709961
    7. '-' → logprob: -13.37862777709961
    8. '[' → logprob: -13.50362777709961
    9. 'None' → logprob: -13.62862777709961
    10. ' d' → logprob: -14.12862777709961

Token 900: '()
' (ID: 1234)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.17790046334266663
    2. '()' → logprob: -1.9279004335403442
    3. '({' → logprob: -4.927900314331055
    4. '(d' → logprob: -5.552900314331055
    5. '(' → logprob: -6.302900314331055
    6. '([
' → logprob: -6.427900314331055
    7. '()
' → logprob: -7.052900314331055
    8. '(
' → logprob: -7.177900314331055
    9. '(ad' → logprob: -7.427900314331055
    10. '{' → logprob: -7.927900314331055

Token 901: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011390152387320995
    2. 'for' → logprob: -5.136390209197998
    3. ' for' → logprob: -5.386390209197998
    4. 'root' → logprob: -7.636390209197998
    5. '```' → logprob: -8.63638973236084
    6. '{' → logprob: -10.13638973236084
    7. 'answer' → logprob: -10.38638973236084
    8. ')' → logprob: -10.88638973236084
    9. ' root' → logprob: -11.13638973236084
    10. '.' → logprob: -11.26138973236084

Token 902: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10433417558670044
    2. 'root' → logprob: -2.3543341159820557
    3. '   ' → logprob: -5.604334354400635
    4. 'stack' → logprob: -8.354333877563477
    5. 'answer' → logprob: -8.729333877563477
    6. ' for' → logprob: -10.729333877563477
    7. '```' → logprob: -12.354333877563477
    8. 'from' → logprob: -12.854333877563477
    9. 'queue' → logprob: -13.104333877563477
    10. '
' → logprob: -13.354333877563477

Token 903: ' adj' (ID: 20251)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.4589604437351227
    2. 'adj' → logprob: -1.4589604139328003
    3. 'ne' → logprob: -3.20896053314209
    4. 'nbr' → logprob: -3.70896053314209
    5. 'next' → logprob: -4.08396053314209
    6. 'node' → logprob: -4.20896053314209
    7. 'to' → logprob: -4.83396053314209
    8. 'v' → logprob: -4.95896053314209
    9. 'nei' → logprob: -4.95896053314209
    10. 'w' → logprob: -5.58396053314209

Token 904: '_node' (ID: 11390)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.05661766231060028
    2. 'acent' → logprob: -3.6816177368164062
    3. '[' → logprob: -5.056617736816406
    4. '_node' → logprob: -5.681617736816406
    5. 'ac' → logprob: -5.681617736816406
    6. 'oint' → logprob: -5.806617736816406
    7. '   ' → logprob: -5.931617736816406
    8. '[node' → logprob: -5.931617736816406
    9. 'node' → logprob: -6.806617736816406
    10. '_' → logprob: -7.181617736816406

Token 905: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3521706759929657
    2. ' in' → logprob: -1.227170705795288
    3. '_' → logprob: -5.727170467376709
    4. '   ' → logprob: -9.102170944213867
    5. 'n' → logprob: -9.477170944213867
    6. '_in' → logprob: -9.727170944213867
    7. ' ' → logprob: -9.852170944213867
    8. '  ' → logprob: -10.727170944213867
    9. '	in' → logprob: -10.727170944213867
    10. '_idx' → logprob: -10.977170944213867

Token 906: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0022266218438744545
    2. ' adjacency' → logprob: -6.252226829528809
    3. '   ' → logprob: -8.127226829528809
    4. ' adj' → logprob: -14.252226829528809
    5. '[' → logprob: -15.002226829528809
    6. '       ' → logprob: -15.127226829528809
    7. 'visited' → logprob: -15.252226829528809
    8. 'Adj' → logprob: -15.627226829528809
    9. '(ad' → logprob: -15.752226829528809
    10. 'ad' → logprob: -15.877226829528809

Token 907: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0010590101592242718
    2. 'list' → logprob: -7.126059055328369
    3. '[idx' → logprob: -8.501058578491211
    4. 'List' → logprob: -10.751058578491211
    5. 'adj' → logprob: -11.251058578491211
    6. 'idx' → logprob: -12.626058578491211
    7. 'ist' → logprob: -12.876058578491211
    8. '[' → logprob: -13.001058578491211
    9. '   ' → logprob: -13.376058578491211
    10. 'lst' → logprob: -13.501058578491211

Token 908: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.45848218582978e-06
    2. '   ' → logprob: -13.25000286102295
    3. 'idx' → logprob: -15.25000286102295
    4. '[' → logprob: -15.37500286102295
    5. '[
' → logprob: -16.750001907348633
    6. ' idx' → logprob: -17.250001907348633
    7. '[id' → logprob: -17.250001907348633
    8. '(idx' → logprob: -17.250001907348633
    9. '	idx' → logprob: -18.250001907348633
    10. '       ' → logprob: -18.375001907348633

Token 909: '_v' (ID: 5390)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.27329543232917786
    2. '_idx' → logprob: -2.0232954025268555
    3. '_v' → logprob: -2.7732954025268555
    4. '[idx' → logprob: -3.5232954025268555
    5. 'v' → logprob: -4.2732954025268555
    6. 'x' → logprob: -7.6482954025268555
    7. '(idx' → logprob: -8.148295402526855
    8. ' idx' → logprob: -9.523295402526855
    9. '	idx' → logprob: -10.773295402526855
    10. '```' → logprob: -10.898295402526855

Token 910: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5967208743095398
    2. '   ' → logprob: -1.9717209339141846
    3. ']:' → logprob: -1.9717209339141846
    4. '       ' → logprob: -2.3467209339141846
    5. '[idx' → logprob: -2.7217209339141846
    6. ':' → logprob: -5.7217206954956055
    7. '[' → logprob: -5.8467206954956055
    8. ':
' → logprob: -7.0967206954956055
    9. 'idx' → logprob: -7.2217206954956055
    10. '):
' → logprob: -7.4717206954956055

Token 911: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008084330474957824
    2. 'if' → logprob: -7.500808238983154
    3. ' if' → logprob: -8.750808715820312
    4. '   ' → logprob: -9.875808715820312
    5. '```' → logprob: -10.875808715820312
    6. '	' → logprob: -11.750808715820312
    7. '<|end|>' → logprob: -11.750808715820312
    8. '	   ' → logprob: -12.125808715820312
    9. '	if' → logprob: -13.375808715820312
    10. '           ' → logprob: -13.875808715820312

Token 912: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6938190460205078
    2. 'if' (adapté à ' if') → logprob: -0.6938190460205078
    3. '   ' → logprob: -7.818819046020508
    4. ' if' → logprob: -8.318819046020508
    5. '	if' → logprob: -10.943819046020508
    6. '           ' → logprob: -12.068819046020508
    7. '	   ' → logprob: -13.943819046020508
    8. '```' → logprob: -14.568819046020508
    9. '	' → logprob: -15.068819046020508
    10. '     ' → logprob: -15.818819046020508

Token 913: ' not' (ID: 625)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0020339188631623983
    2. ' visited' → logprob: -6.252033710479736
    3. '   ' → logprob: -9.502034187316895
    4. 'used' → logprob: -10.502034187316895
    5. 'not' → logprob: -13.377034187316895
    6. '       ' → logprob: -15.002034187316895
    7. ' ' → logprob: -15.377034187316895
    8. '  ' → logprob: -15.627034187316895
    9. '    ' → logprob: -16.002033233642578
    10. 'vis' → logprob: -16.127033233642578

Token 914: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0017472924664616585
    2. 'used' → logprob: -6.376747131347656
    3. ' visited' → logprob: -10.376747131347656
    4. '   ' → logprob: -11.501747131347656
    5. 'not' → logprob: -13.376747131347656
    6. 'visible' → logprob: -15.001747131347656
    7. 'idx' → logprob: -15.376747131347656
    8. 'vis' → logprob: -15.501747131347656
    9. '
' → logprob: -15.626747131347656
    10. '(' → logprob: -15.626747131347656

Token 915: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -13.375003814697266
    3. '[arr' → logprob: -13.750003814697266
    4. 'Arr' → logprob: -14.750003814697266
    5. '_adj' → logprob: -15.500003814697266
    6. 'arr' → logprob: -15.750003814697266
    7. '[_' → logprob: -16.500003814697266
    8. '	arr' → logprob: -17.375003814697266
    9. '```' → logprob: -18.250003814697266
    10. '
' → logprob: -18.500003814697266

Token 916: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.226628895296017e-06
    2. '   ' → logprob: -12.875007629394531
    3. '[
' → logprob: -13.875007629394531
    4. '       ' → logprob: -14.000007629394531
    5. 'adj' → logprob: -14.125007629394531
    6. '[idx' → logprob: -14.500007629394531
    7. ' [' → logprob: -14.750007629394531
    8. '           ' → logprob: -15.250007629394531
    9. '(adj' → logprob: -15.250007629394531
    10. '```' → logprob: -15.250007629394531

Token 917: 'adj' (ID: 57001)
  Prédit: 'adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.8624639324116288e-06
    2. 'idx' → logprob: -13.375001907348633
    3. '   ' → logprob: -16.250001907348633
    4. '[' → logprob: -16.625001907348633
    5. '(adj' → logprob: -16.875001907348633
    6. ' adj' → logprob: -17.125001907348633
    7. '
' → logprob: -18.125001907348633
    8. '           ' → logprob: -18.500001907348633
    9. ' ' → logprob: -19.125001907348633
    10. 'aj' → logprob: -19.375001907348633

Token 918: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.07047805935144424
    2. 'adj' → logprob: -2.8204779624938965
    3. '_adj' → logprob: -5.6954779624938965
    4. '_idx' → logprob: -5.6954779624938965
    5. '   ' → logprob: -7.3204779624938965
    6. ' adj' → logprob: -8.320478439331055
    7. '(adj' → logprob: -8.445478439331055
    8. 'ode' → logprob: -9.070478439331055
    9. '```' → logprob: -9.320478439331055
    10. ']' → logprob: -9.695478439331055

Token 919: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -1.0674046277999878
    2. ':
' → logprob: -1.1924046277999878
    3. '           ' → logprob: -1.9424046277999878
    4. ':' → logprob: -2.5674047470092773
    5. ']:' → logprob: -2.9424047470092773
    6. '[idx' → logprob: -3.0674047470092773
    7. '[' → logprob: -4.317404747009277
    8. '       ' → logprob: -4.442404747009277
    9. ' or' → logprob: -5.942404747009277
    10. 'continue' → logprob: -6.442404747009277

Token 920: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009252701885998249
    2. ' continue' → logprob: -5.009252548217773
    3. 'continue' → logprob: -6.009252548217773
    4. ':' → logprob: -10.259252548217773
    5. ':
' → logprob: -10.884252548217773
    6. '       ' → logprob: -12.009252548217773
    7. '		' → logprob: -12.384252548217773
    8. '               ' → logprob: -12.509252548217773
    9. ',' → logprob: -13.009252548217773
    10. '	continue' → logprob: -13.134252548217773

Token 921: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1229456663131714
    2. 'continue' (adapté à ' continue') → logprob: -1.1229456663131714
    3. ' continue' → logprob: -1.7479456663131714
    4. '           ' → logprob: -1.7479456663131714
    5. '	continue' → logprob: -7.497945785522461
    6. '```' → logprob: -8.872945785522461
    7. '                   ' → logprob: -8.997945785522461
    8. '   ' → logprob: -8.997945785522461
    9. '       ' → logprob: -9.122945785522461
    10. '_continue' → logprob: -11.247945785522461

Token 922: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004524111747741699
    2. 'root' → logprob: -5.504524230957031
    3. '   ' → logprob: -8.129524230957031
    4. ' root' → logprob: -9.504524230957031
    5. '           ' → logprob: -11.004524230957031
    6. '
' → logprob: -11.129524230957031
    7. '        
' → logprob: -11.504524230957031
    8. 'continue' → logprob: -11.754524230957031
    9. ',' → logprob: -12.129524230957031
    10. '[root' → logprob: -12.504524230957031

Token 923: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6075255274772644
    2. '       ' → logprob: -1.1075255870819092
    3. 'root' → logprob: -2.107525587081909
    4. 'ds' → logprob: -6.85752534866333
    5. '           ' → logprob: -7.48252534866333
    6. ' root' → logprob: -7.73252534866333
    7. 'for' → logprob: -7.85752534866333
    8. 'if' → logprob: -8.482525825500488
    9. '
' → logprob: -8.982525825500488
    10. '```' → logprob: -9.232525825500488

Token 924: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' (adapté à ' root') → logprob: -0.004085524007678032
    2. '   ' → logprob: -6.004085540771484
    3. 'ds' → logprob: -6.504085540771484
    4. ' root' → logprob: -9.629085540771484
    5. 'd' → logprob: -11.504085540771484
    6. 'for' → logprob: -11.879085540771484
    7. '       ' → logprob: -11.879085540771484
    8. 'if' → logprob: -12.129085540771484
    9. '```' → logprob: -12.754085540771484
    10. '	root' → logprob: -13.004085540771484

Token 925: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0037789319176226854
    2. ' =' → logprob: -6.25377893447876
    3. '_root' → logprob: -7.00377893447876
    4. '   ' → logprob: -8.253778457641602
    5. '=' → logprob: -8.503778457641602
    6. '=set' → logprob: -8.753778457641602
    7. 'root' → logprob: -9.253778457641602
    8. 'set' → logprob: -9.378778457641602
    9. '_node' → logprob: -10.128778457641602
    10. '=root' → logprob: -10.253778457641602

Token 926: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -4.596781946020201e-05
    2. '.' → logprob: -10.000045776367188
    3. 'add' → logprob: -15.000045776367188
    4. ' .' → logprob: -16.750045776367188
    5. '   ' → logprob: -16.875045776367188
    6. '=' → logprob: -17.125045776367188
    7. '.append' → logprob: -17.250045776367188
    8. '.update' → logprob: -17.500045776367188
    9. ' =' → logprob: -18.125045776367188
    10. '.=' → logprob: -19.000045776367188

Token 927: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -13.12500286102295
    3. '(
' → logprob: -13.87500286102295
    4. 'd' → logprob: -17.375003814697266
    5. '((' → logprob: -17.375003814697266
    6. '(ds' → logprob: -18.625003814697266
    7. '(root' → logprob: -19.000003814697266
    8. ' (' → logprob: -19.250003814697266
    9. ' d' → logprob: -20.375003814697266
    10. '   ' → logprob: -20.750003814697266

Token 928: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.00016063073417171836
    2. 'sq' → logprob: -10.000160217285156
    3. 'sj' → logprob: -10.250160217285156
    4. 's' → logprob: -11.625160217285156
    5. 'sx' → logprob: -11.875160217285156
    6. '
' → logprob: -12.000160217285156
    7. '```' → logprob: -12.000160217285156
    8. 'sus' → logprob: -12.375160217285156
    9. '

' → logprob: -12.750160217285156
    10. '{' → logprob: -12.875160217285156

Token 929: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.00013369438238441944
    2. '.un' → logprob: -9.625133514404297
    3. '.' → logprob: -10.250133514404297
    4. ').' → logprob: -11.125133514404297
    5. '.parent' → logprob: -11.375133514404297
    6. 'find' → logprob: -12.500133514404297
    7. '.union' → logprob: -14.375133514404297
    8. '.findall' → logprob: -14.500133514404297
    9. '.root' → logprob: -15.375133514404297
    10. '}.' → logprob: -15.875133514404297

Token 930: '(adj' (ID: 141921)
  Prédit: '(adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(adj' → logprob: -0.00484910374507308
    2. '(ad' → logprob: -5.379848957061768
    3. '(' → logprob: -9.004849433898926
    4. 'adj' → logprob: -9.879849433898926
    5. '(idx' → logprob: -10.379849433898926
    6. '(
' → logprob: -11.629849433898926
    7. ')' → logprob: -11.754849433898926
    8. '(ans' → logprob: -12.254849433898926
    9. '(edge' → logprob: -14.754849433898926
    10. ' adj' → logprob: -15.129849433898926

Token 931: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.003960616886615753
    2. 'ode' → logprob: -6.003960609436035
    3. '(adj' → logprob: -7.878960609436035
    4. 'idx' → logprob: -8.003960609436035
    5. 'adj' → logprob: -8.253960609436035
    6. '_idx' → logprob: -8.628960609436035
    7. '(idx' → logprob: -9.628960609436035
    8. '[idx' → logprob: -10.003960609436035
    9. 'Node' → logprob: -10.128960609436035
    10. 'node' → logprob: -10.128960609436035

Token 932: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0318739116191864
    2. ')' → logprob: -3.531873941421509
    3. '))
' → logprob: -6.28187370300293
    4. '()))' → logprob: -9.15687370300293
    5. '   ' → logprob: -9.28187370300293
    6. ')
' → logprob: -11.53187370300293
    7. '       ' → logprob: -11.65687370300293
    8. '())' → logprob: -11.65687370300293
    9. ' ))' → logprob: -11.65687370300293
    10. ')))' → logprob: -12.03187370300293

Token 933: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003853751812130213
    2. ' for' → logprob: -5.878853797912598
    3. '```' → logprob: -7.753853797912598
    4. 'for' → logprob: -8.003853797912598
    5. ')' → logprob: -8.878853797912598
    6. '<|end|>' → logprob: -10.003853797912598
    7. 'd' → logprob: -10.128853797912598
    8. 'ds' → logprob: -11.003853797912598
    9. ' d' → logprob: -11.128853797912598
    10. '.' → logprob: -12.503853797912598

Token 934: ' used' (ID: 2061)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01166730746626854
    2. '   ' → logprob: -4.636667251586914
    3. ' for' → logprob: -7.136667251586914
    4. 'if' → logprob: -7.761667251586914
    5. 'root' → logprob: -7.886667251586914
    6. 'answer' → logprob: -8.761667251586914
    7. 'ds' → logprob: -9.511667251586914
    8. '```' → logprob: -10.386667251586914
    9. 'd' → logprob: -11.886667251586914
    10. 'min' → logprob: -12.261667251586914

Token 935: '_total' (ID: 23814)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.15249910950660706
    2. '_set' → logprob: -2.527499198913574
    3. '_root' → logprob: -3.152499198913574
    4. '_nodes' → logprob: -5.527499198913574
    5. '_ro' → logprob: -5.777499198913574
    6. 'root' → logprob: -6.277499198913574
    7. '_size' → logprob: -6.402499198913574
    8. '_sets' → logprob: -6.527499198913574
    9. 'arr' → logprob: -6.652499198913574
    10. '_sum' → logprob: -6.777499198913574

Token 936: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21777412295341492
    2. '=' → logprob: -1.7177741527557373
    3. ' +=' → logprob: -4.467773914337158
    4. '+=' → logprob: -5.467773914337158
    5. '[' → logprob: -8.342774391174316
    6. '   ' → logprob: -9.342774391174316
    7. '=sum' → logprob: -10.842774391174316
    8. '+' → logprob: -10.967774391174316
    9. '_' → logprob: -11.092774391174316
    10. '```' → logprob: -11.342774391174316

Token 937: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.038343485444784164
    2. '0' → logprob: -3.5383434295654297
    3. 'columns' → logprob: -5.03834342956543
    4. 'sum' → logprob: -7.66334342956543
    5. ' used' → logprob: -7.78834342956543
    6. 'required' → logprob: -8.41334342956543
    7. 'require' → logprob: -8.53834342956543
    8. '   ' → logprob: -9.41334342956543
    9. ' ' → logprob: -9.78834342956543
    10. 'answer' → logprob: -9.91334342956543

Token 938: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.003602798329666257
    2. '[idx' → logprob: -6.378602981567383
    3. '_total' → logprob: -6.878602981567383
    4. 'arr' → logprob: -8.128602981567383
    5. '[arr' → logprob: -8.628602981567383
    6. '_sum' → logprob: -9.378602981567383
    7. '[root' → logprob: -9.628602981567383
    8. 'total' → logprob: -9.878602981567383
    9. '=' → logprob: -10.128602981567383
    10. '_set' → logprob: -10.378602981567383

Token 939: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.10666422545909882
    2. '[' → logprob: -2.3566641807556152
    3. '[root' → logprob: -6.356664180755615
    4. '[:]' → logprob: -6.356664180755615
    5. 'idx' → logprob: -6.981664180755615
    6. '[:' → logprob: -7.106664180755615
    7. '=' → logprob: -7.981664180755615
    8. ' =' → logprob: -8.231664657592773
    9. 'sum' → logprob: -8.856664657592773
    10. 'copy' → logprob: -9.481664657592773

Token 940: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -1.109632134437561
    2. '_idx' → logprob: -1.109632134437561
    3. '[idx' → logprob: -1.359632134437561
    4. 'idx' → logprob: -2.7346320152282715
    5. 'v' → logprob: -4.1096320152282715
    6. ']' → logprob: -6.7346320152282715
    7. 'x' → logprob: -7.4846320152282715
    8. '(idx' → logprob: -8.48463249206543
    9. '[v' → logprob: -8.73463249206543
    10. ' idx' → logprob: -9.85963249206543

Token 941: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.054569318890571594
    2. ')' → logprob: -3.8045692443847656
    3. '<|end|>' → logprob: -4.679569244384766
    4. '+' → logprob: -5.054569244384766
    5. ']
' → logprob: -5.304569244384766
    6. ' +' → logprob: -5.554569244384766
    7. ']+' → logprob: -5.929569244384766
    8. '])' → logprob: -6.679569244384766
    9. '
' → logprob: -6.804569244384766
    10. '<|end|>' → logprob: -7.679569244384766

Token 942: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07796429842710495
    2. ' +' → logprob: -3.7029643058776855
    3. '+' → logprob: -3.8279643058776855
    4. '<|end|>' → logprob: -4.0779643058776855
    5. ')' → logprob: -5.5779643058776855
    6. ' for' → logprob: -6.3279643058776855
    7. 'for' → logprob: -6.4529643058776855
    8. '
' → logprob: -6.7029643058776855
    9. '    
' → logprob: -7.2029643058776855
    10. '.' → logprob: -7.8279643058776855

Token 943: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005804597865790129
    2. '   ' → logprob: -6.005804538726807
    3. ' for' → logprob: -6.255804538726807
    4. 'ds' → logprob: -7.255804538726807
    5. 'used' → logprob: -7.755804538726807
    6. '```' → logprob: -8.880805015563965
    7. 'parent' → logprob: -9.755805015563965
    8. 'answer' → logprob: -10.755805015563965
    9. 'd' → logprob: -11.005805015563965
    10. 'root' → logprob: -11.255805015563965

Token 944: ' component' (ID: 6392)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.10351413488388062
    2. 'r' → logprob: -2.9785141944885254
    3. 'comp' → logprob: -4.103514194488525
    4. 'component' → logprob: -5.353514194488525
    5. 'x' → logprob: -5.478514194488525
    6. 'adj' → logprob: -5.603514194488525
    7. 'rt' → logprob: -5.728514194488525
    8. 'other' → logprob: -5.978514194488525
    9. 'u' → logprob: -6.478514194488525
    10. 'rs' → logprob: -6.728514194488525

Token 945: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.39669835567474365
    2. ' in' → logprob: -1.1466983556747437
    3. 'root' → logprob: -5.021698474884033
    4. '_id' → logprob: -5.896698474884033
    5. 'in' → logprob: -9.271697998046875
    6. '_repr' → logprob: -9.271697998046875
    7. '_' → logprob: -9.646697998046875
    8. 'id' → logprob: -10.521697998046875
    9. 'Root' → logprob: -10.646697998046875
    10. '_idx' → logprob: -10.646697998046875

Token 946: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0889471024274826
    2. 'in' → logprob: -2.463947057723999
    3. '_in' → logprob: -12.963947296142578
    4. '	in' → logprob: -13.213947296142578
    5. ' ' → logprob: -13.838947296142578
    6. '   ' → logprob: -14.713947296142578
    7. 's' → logprob: -14.838947296142578
    8. 'root' → logprob: -14.963947296142578
    9. '  ' → logprob: -15.463947296142578
    10. ',' → logprob: -15.838947296142578

Token 947: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.02324908785521984
    2. ' root' → logprob: -3.7732491493225098
    3. '   ' → logprob: -13.273248672485352
    4. 'list' → logprob: -14.523248672485352
    5. ' ' → logprob: -14.773248672485352
    6. '	root' → logprob: -14.898248672485352
    7. '(root' → logprob: -15.523248672485352
    8. 'sorted' → logprob: -15.648248672485352
    9. '[root' → logprob: -15.773248672485352
    10. ' list' → logprob: -16.52324867248535

Token 948: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.02114572748541832
    2. 'set' → logprob: -4.021145820617676
    3. 'root' → logprob: -6.146145820617676
    4. '_root' → logprob: -7.271145820617676
    5. 's' → logprob: -9.271145820617676
    6. '```' → logprob: -10.646145820617676
    7. 'et' → logprob: -12.146145820617676
    8. '_sets' → logprob: -12.521145820617676
    9. '[root' → logprob: -12.771145820617676
    10. ')set' → logprob: -12.896145820617676

Token 949: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4311521649360657
    2. ':' → logprob: -1.056152105331421
    3. '   ' → logprob: -6.68115234375
    4. '       ' → logprob: -7.05615234375
    5. '):
' → logprob: -8.68115234375
    6. ',' → logprob: -9.55615234375
    7. '<|end|>' → logprob: -11.05615234375
    8. ':
' → logprob: -11.18115234375
    9. ' +=' → logprob: -11.55615234375
    10. '=' → logprob: -12.05615234375

Token 950: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025219714269042015
    2. 'used' → logprob: -4.025219917297363
    3. ' used' → logprob: -5.150219917297363
    4. '   ' → logprob: -6.900219917297363
    5. '```' → logprob: -9.275219917297363
    6. '
' → logprob: -9.400219917297363
    7. ',' → logprob: -11.150219917297363
    8. '        
' → logprob: -11.275219917297363
    9. 'if' → logprob: -11.525219917297363
    10. '     ' → logprob: -12.275219917297363

Token 951: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.07512012124061584
    2. 'if' → logprob: -3.075120210647583
    3. 'ds' → logprob: -3.825120210647583
    4. '   ' → logprob: -5.575119972229004
    5. 'answer' → logprob: -8.450119972229004
    6. ' used' → logprob: -8.575119972229004
    7. 'd' → logprob: -10.200119972229004
    8. ' if' → logprob: -10.200119972229004
    9. '
' → logprob: -10.575119972229004
    10. '```' → logprob: -11.325119972229004

Token 952: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -6.670925358776003e-05
    2. 'total' → logprob: -9.875066757202148
    3. '_used' → logprob: -12.125066757202148
    4. '_arr' → logprob: -12.500066757202148
    5. '_to' → logprob: -13.000066757202148
    6. '_tot' → logprob: -13.000066757202148
    7. '=' → logprob: -14.625066757202148
    8. 'Total' → logprob: -15.625066757202148
    9. '_' → logprob: -15.625066757202148
    10. 'used' → logprob: -16.00006675720215

Token 953: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03814224898815155
    2. ' +=' → logprob: -3.288142204284668
    3. '=' → logprob: -9.788142204284668
    4. '+' → logprob: -10.913142204284668
    5. '-=' → logprob: -11.913142204284668
    6. ']+=' → logprob: -12.413142204284668
    7. '+=(' → logprob: -12.788142204284668
    8. '   ' → logprob: -12.788142204284668
    9. '|' → logprob: -12.913142204284668
    10. '*=' → logprob: -13.163142204284668

Token 954: ' used' (ID: 2061)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.0022273333743214607
    2. 'used' → logprob: -6.127227306365967
    3. 'd' → logprob: -10.627227783203125
    4. ' ds' → logprob: -11.502227783203125
    5. ' d' → logprob: -12.377227783203125
    6. 'answer' → logprob: -13.752227783203125
    7. 'require' → logprob: -14.752227783203125
    8. 'dsn' → logprob: -15.127227783203125
    9. ' used' → logprob: -15.252227783203125
    10. 'use' → logprob: -15.877227783203125

Token 955: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0003805064770858735
    2. 'arr' → logprob: -8.000380516052246
    3. 'Arr' → logprob: -10.750380516052246
    4. '[' → logprob: -11.500380516052246
    5. '_ds' → logprob: -12.125380516052246
    6. 'ds' → logprob: -13.375380516052246
    7. 'd' → logprob: -13.750380516052246
    8. '[d' → logprob: -14.000380516052246
    9. 's' → logprob: -14.250380516052246
    10. '`' → logprob: -14.500380516052246

Token 956: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.062091149389743805
    2. 'component' → logprob: -2.812091112136841
    3. 'ds' → logprob: -9.562090873718262
    4. '[
' → logprob: -9.937090873718262
    5. ' component' → logprob: -13.312090873718262
    6. '```' → logprob: -14.187090873718262
    7. '   ' → logprob: -14.687090873718262
    8. '_component' → logprob: -15.062090873718262
    9. '(component' → logprob: -15.187090873718262
    10. '	component' → logprob: -15.437090873718262

Token 957: 'component' (ID: 16294)
  Prédit: 'component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.1602766215801239
    2. 'ds' → logprob: -1.9102766513824463
    3. '[' → logprob: -10.410276412963867
    4. ' component' → logprob: -11.285276412963867
    5. ' ds' → logprob: -12.035276412963867
    6. '
' → logprob: -13.660276412963867
    7. '   ' → logprob: -14.035276412963867
    8. '

' → logprob: -14.285276412963867
    9. ' ' → logprob: -15.535276412963867
    10. '[
' → logprob: -15.660276412963867

Token 958: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.1428094059228897
    2. 'root' → logprob: -2.0178093910217285
    3. '[root' → logprob: -10.392809867858887
    4. ' root' → logprob: -10.642809867858887
    5. 'component' → logprob: -10.767809867858887
    6. 'Root' → logprob: -11.017809867858887
    7. 'arr' → logprob: -11.767809867858887
    8. '_arr' → logprob: -12.142809867858887
    9. '-root' → logprob: -12.767809867858887
    10. '```' → logprob: -13.017809867858887

Token 959: ']

' (ID: 3144)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7697140574455261
    2. ']' → logprob: -1.144714117050171
    3. '   ' → logprob: -1.894714117050171
    4. ')' → logprob: -3.269714117050171
    5. ']
' → logprob: -4.019713878631592
    6. ')
' → logprob: -5.394713878631592
    7. '    
' → logprob: -5.644713878631592
    8. 'answer' → logprob: -6.519713878631592
    9. '<|end|>' → logprob: -7.394713878631592
    10. 'Answer' → logprob: -7.644713878631592

Token 960: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002286330098286271
    2. 'ds' → logprob: -6.127286434173584
    3. '```' → logprob: -9.877285957336426
    4. ' ds' → logprob: -10.877285957336426
    5. 'for' → logprob: -12.002285957336426
    6. '    
' → logprob: -12.252285957336426
    7. 'used' → logprob: -12.502285957336426
    8. 'd' → logprob: -12.877285957336426
    9. '	ds' → logprob: -12.877285957336426
    10. ')' → logprob: -13.377285957336426

Token 961: ' requirement' (ID: 23292)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4586486518383026
    2. 'if' → logprob: -1.208648681640625
    3. 'ds' → logprob: -2.833648681640625
    4. 'answer' → logprob: -4.708648681640625
    5. 'while' → logprob: -7.583648681640625
    6. 'for' → logprob: -8.083648681640625
    7. ' if' → logprob: -9.458648681640625
    8. '```' → logprob: -9.583648681640625
    9. 'used' → logprob: -9.708648681640625
    10. '#' → logprob: -10.333648681640625

Token 962: '_v' (ID: 5390)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1356305181980133
    2. '=' → logprob: -3.3856306076049805
    3. '_val' → logprob: -3.6356306076049805
    4. '_value' → logprob: -3.8856306076049805
    5. '_max' → logprob: -4.5106306076049805
    6. '_arr' → logprob: -4.5106306076049805
    7. '_current' → logprob: -4.7606306076049805
    8. '[idx' → logprob: -6.1356306076049805
    9. '_total' → logprob: -6.3856306076049805
    10. '_cur' → logprob: -6.5106306076049805

Token 963: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6327703595161438
    2. '=' → logprob: -0.7577703595161438
    3. '=max' → logprob: -10.007770538330078
    4. '>' → logprob: -10.382770538330078
    5. '_value' → logprob: -10.882770538330078
    6. '_val' → logprob: -10.882770538330078
    7. ',' → logprob: -11.382770538330078
    8. '<=' → logprob: -11.882770538330078
    9. '[idx' → logprob: -12.007770538330078
    10. '>=' → logprob: -12.007770538330078

Token 964: ' requirement' (ID: 23292)
  Prédit: 'require'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'require' → logprob: -0.002931106835603714
    2. 'max' → logprob: -5.877931118011475
    3. ' requirement' → logprob: -9.627930641174316
    4. 'requirements' → logprob: -10.752930641174316
    5. '   ' → logprob: -11.252930641174316
    6. 'used' → logprob: -12.002930641174316
    7. 'min' → logprob: -12.127930641174316
    8. 'answer' → logprob: -12.627930641174316
    9. 'required' → logprob: -12.877930641174316
    10. 'maximum' → logprob: -13.627930641174316

Token 965: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.000667044660076499
    2. '[idx' → logprob: -8.000666618347168
    3. 'arr' → logprob: -8.125666618347168
    4. 'Arr' → logprob: -11.125666618347168
    5. '=' → logprob: -11.625666618347168
    6. ' =' → logprob: -13.000666618347168
    7. 'require' → logprob: -13.250666618347168
    8. '_idx' → logprob: -13.250666618347168
    9. '[arr' → logprob: -13.250666618347168
    10. 'v' → logprob: -13.875666618347168

Token 966: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.935296834039036e-06
    2. 'idx' → logprob: -13.12500286102295
    3. '[' → logprob: -15.25000286102295
    4. ' =' → logprob: -15.87500286102295
    5. ' idx' → logprob: -16.125003814697266
    6. '(idx' → logprob: -16.750003814697266
    7. '_idx' → logprob: -17.000003814697266
    8. '=' → logprob: -17.250003814697266
    9. '```' → logprob: -17.500003814697266
    10. '	idx' → logprob: -17.625003814697266

Token 967: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.04724469780921936
    2. '_idx' → logprob: -3.6722447872161865
    3. 'v' → logprob: -3.9222447872161865
    4. '[idx' → logprob: -7.547244548797607
    5. 'idx' → logprob: -7.922244548797607
    6. '[v' → logprob: -11.297245025634766
    7. 'V' → logprob: -11.422245025634766
    8. '(idx' → logprob: -12.797245025634766
    9. '-v' → logprob: -12.922245025634766
    10. '```' → logprob: -12.922245025634766

Token 968: ']' (ID: 60)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5278929471969604
    2. '
' → logprob: -2.15289306640625
    3. ' -' → logprob: -2.27789306640625
    4. ')' → logprob: -2.27789306640625
    5. '-' → logprob: -2.52789306640625
    6. ')
' → logprob: -5.27789306640625
    7. ']' → logprob: -6.27789306640625
    8. '<|end|>' → logprob: -6.77789306640625
    9. '    
' → logprob: -8.15289306640625
    10. '<|end|>' → logprob: -8.77789306640625

Token 969: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06796610355377197
    2. ' if' → logprob: -3.3179659843444824
    3. '<|end|>' → logprob: -4.067965984344482
    4. '
' → logprob: -4.692965984344482
    5. 'if' → logprob: -6.817965984344482
    6. '    
' → logprob: -7.317965984344482
    7. '```' → logprob: -7.567965984344482
    8. ',' → logprob: -8.44296646118164
    9. ')' → logprob: -8.56796646118164
    10. '<|end|>' → logprob: -8.81796646118164

Token 970: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.05675631761550903
    2. '1' → logprob: -3.4317562580108643
    3. 'answer' → logprob: -4.931756496429443
    4. 'a' → logprob: -5.306756496429443
    5. ' used' → logprob: -5.556756496429443
    6. 'CONST' → logprob: -6.056756496429443
    7. 'require' → logprob: -6.806756496429443
    8. 'max' → logprob: -7.181756496429443
    9. '   ' → logprob: -7.681756496429443
    10. '(' → logprob: -7.806756496429443

Token 971: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.0067750499583780766
    2. '_arr' → logprob: -5.00677490234375
    3. 'total' → logprob: -10.00677490234375
    4. 'arr' → logprob: -11.38177490234375
    5. 'Total' → logprob: -13.75677490234375
    6. '_tot' → logprob: -14.13177490234375
    7. '	' → logprob: -15.25677490234375
    8. '	total' → logprob: -15.38177490234375
    9. '```' → logprob: -15.50677490234375
    10. '[arr' → logprob: -16.13177490234375

Token 972: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003270879853516817
    2. '
' → logprob: -6.503271102905273
    3. ' if' → logprob: -7.003271102905273
    4. 'if' → logprob: -7.503271102905273
    5. ')' → logprob: -9.003271102905273
    6. '    
' → logprob: -9.128271102905273
    7. '<|end|>' → logprob: -10.253271102905273
    8. ',' → logprob: -11.128271102905273
    9. '	if' → logprob: -12.003271102905273
    10. ')
' → logprob: -12.628271102905273

Token 973: ' used' (ID: 2061)
  Prédit: 'require'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'require' → logprob: -0.2527923882007599
    2. 'used' → logprob: -2.3777923583984375
    3. '1' → logprob: -2.8777923583984375
    4. 'columns' → logprob: -2.8777923583984375
    5. ' requirement' → logprob: -5.2527923583984375
    6. ' columns' → logprob: -5.8777923583984375
    7. 'max' → logprob: -6.0027923583984375
    8. 'answer' → logprob: -6.3777923583984375
    9. '(require' → logprob: -7.0027923583984375
    10. ' ' → logprob: -7.1277923583984375

Token 974: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.00041184606379829347
    2. 'arr' → logprob: -8.250411987304688
    3. '_total' → logprob: -9.000411987304688
    4. 'Arr' → logprob: -10.750411987304688
    5. 'total' → logprob: -13.625411987304688
    6. '[arr' → logprob: -13.625411987304688
    7. '	arr' → logprob: -14.000411987304688
    8. 'Total' → logprob: -14.250411987304688
    9. '```' → logprob: -14.750411987304688
    10. '_used' → logprob: -15.250411987304688

Token 975: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -12.875004768371582
    3. 'idx' → logprob: -13.375004768371582
    4. '_idx' → logprob: -15.250004768371582
    5. '   ' → logprob: -15.500004768371582
    6. '	idx' → logprob: -16.0000057220459
    7. '[id' → logprob: -16.2500057220459
    8. '[_' → logprob: -16.5000057220459
    9. '[root' → logprob: -16.5000057220459
    10. ' idx' → logprob: -17.2500057220459

Token 976: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.21604083478450775
    2. '_idx' → logprob: -1.966040849685669
    3. '[idx' → logprob: -3.341040849685669
    4. 'v' → logprob: -4.21604061126709
    5. 'idx' → logprob: -5.71604061126709
    6. '[v' → logprob: -7.34104061126709
    7. '_arr' → logprob: -9.09104061126709
    8. '(idx' → logprob: -11.34104061126709
    9. '```' → logprob: -11.46604061126709
    10. '	idx' → logprob: -11.71604061126709

Token 977: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03749897703528404
    2. '<|end|>' → logprob: -4.037498950958252
    3. '   ' → logprob: -4.412498950958252
    4. ']' → logprob: -5.412498950958252
    5. '
' → logprob: -6.412498950958252
    6. '<|end|>' → logprob: -7.412498950958252
    7. ')
' → logprob: -8.66249942779541
    8. '```' → logprob: -10.28749942779541
    9. '  ' → logprob: -10.91249942779541
    10. '    
' → logprob: -11.16249942779541

Token 978: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6437884569168091
    2. '   ' → logprob: -1.143788456916809
    3. 'for' → logprob: -3.1437883377075195
    4. 'used' → logprob: -3.1437883377075195
    5. 'ds' → logprob: -3.7687883377075195
    6. 'answer' → logprob: -3.8937883377075195
    7. ' if' → logprob: -4.5187883377075195
    8. ')' → logprob: -5.0187883377075195
    9. ' for' → logprob: -5.6437883377075195
    10. 'while' → logprob: -6.2687883377075195

Token 979: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6507130265235901
    2. 'answer' → logprob: -0.7757130265235901
    3. 'used' → logprob: -4.900712966918945
    4. 'for' (adapté à ' for') → logprob: -5.275712966918945
    5. 'ds' → logprob: -6.275712966918945
    6. 'while' → logprob: -6.900712966918945
    7. '   ' → logprob: -7.025712966918945
    8. '```' → logprob: -8.650712966918945
    9. 'current' → logprob: -8.775712966918945
    10. 'best' → logprob: -8.900712966918945

Token 980: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.033266060054302216
    2. 'adj' → logprob: -4.533266067504883
    3. ' component' → logprob: -5.033266067504883
    4. 'comp' → logprob: -5.158266067504883
    5. 'neighbor' → logprob: -5.533266067504883
    6. 'root' → logprob: -5.658266067504883
    7. 'other' → logprob: -7.158266067504883
    8. 'node' → logprob: -8.283266067504883
    9. 'u' → logprob: -9.033266067504883
    10. ' adj' → logprob: -9.158266067504883

Token 981: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -3.047134305234067e-05
    2. 'root' → logprob: -10.500030517578125
    3. '_component' → logprob: -13.625030517578125
    4. '_ro' → logprob: -14.500030517578125
    5. '_' → logprob: -15.125030517578125
    6. ' in' → logprob: -15.125030517578125
    7. 'Root' → logprob: -15.750030517578125
    8. 'in' → logprob: -16.500030517578125
    9. ' root' → logprob: -16.750030517578125
    10. '_in' → logprob: -17.125030517578125

Token 982: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023249322548508644
    2. 'in' → logprob: -3.773249387741089
    3. '   ' → logprob: -13.398249626159668
    4. '	in' → logprob: -13.898249626159668
    5. ' ' → logprob: -14.898249626159668
    6. '<|end|>' → logprob: -15.898249626159668
    7. '  ' → logprob: -16.39824867248535
    8. 'inth' → logprob: -16.52324867248535
    9. '    ' → logprob: -16.52324867248535
    10. 'n' → logprob: -16.71074867248535

Token 983: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.10026996582746506
    2. ' root' → logprob: -2.3502700328826904
    3. 'sorted' → logprob: -10.47527027130127
    4. '   ' → logprob: -10.97527027130127
    5. '(root' → logprob: -12.35027027130127
    6. 'list' → logprob: -12.60027027130127
    7. '[root' → logprob: -12.60027027130127
    8. ' sorted' → logprob: -13.22527027130127
    9. '	root' → logprob: -13.35027027130127
    10. ' list' → logprob: -13.85027027130127

Token 984: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.10666658729314804
    2. 'root' → logprob: -3.1066665649414062
    3. '_root' → logprob: -3.2316665649414062
    4. 'set' → logprob: -4.106666564941406
    5. 's' → logprob: -8.231666564941406
    6. 'et' → logprob: -9.356666564941406
    7. 'ot' → logprob: -10.481666564941406
    8. '[root' → logprob: -10.856666564941406
    9. '(root' → logprob: -11.356666564941406
    10. 't' → logprob: -11.606666564941406

Token 985: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.049564823508262634
    2. ':
' → logprob: -3.174564838409424
    3. '       ' → logprob: -5.299564838409424
    4. '   ' → logprob: -6.799564838409424
    5. '):
' → logprob: -8.799564361572266
    6. ',' → logprob: -8.924564361572266
    7. '):' → logprob: -9.049564361572266
    8. '**' → logprob: -11.924564361572266
    9. '<|end|>' → logprob: -12.174564361572266
    10. '.' → logprob: -12.924564361572266

Token 986: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002576251979917288
    2. '   ' → logprob: -6.0025763511657715
    3. 'd' → logprob: -9.627575874328613
    4. ' d' → logprob: -11.252575874328613
    5. '```' → logprob: -11.877575874328613
    6. 'ds' → logprob: -12.002575874328613
    7. '     ' → logprob: -13.252575874328613
    8. '           ' → logprob: -13.252575874328613
    9. '	d' → logprob: -13.752575874328613
    10. ' ds' → logprob: -14.127575874328613

Token 987: ' requirement' (ID: 23292)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.18415366113185883
    2. 'answer' → logprob: -2.5591535568237305
    3. 'used' → logprob: -2.9341535568237305
    4. '   ' → logprob: -4.1841535568237305
    5. 'require' → logprob: -4.1841535568237305
    6. 'if' → logprob: -5.0591535568237305
    7. 'required' → logprob: -8.30915355682373
    8. ' ds' → logprob: -9.30915355682373
    9. 'ans' → logprob: -9.55915355682373
    10. 'edge' → logprob: -9.80915355682373

Token 988: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.004760599695146084
    2. '_arr' → logprob: -6.2547607421875
    3. '-=' → logprob: -6.6297607421875
    4. ' -=' → logprob: -7.1297607421875
    5. ' =' → logprob: -8.5047607421875
    6. '=' → logprob: -8.6297607421875
    7. 'arr' → logprob: -9.3797607421875
    8. '   ' → logprob: -9.6297607421875
    9. '>' → logprob: -10.1297607421875
    10. 'v' → logprob: -10.2547607421875

Token 989: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35499995946884155
    2. '=' → logprob: -1.6050000190734863
    3. '-=' → logprob: -2.8550000190734863
    4. ' -=' → logprob: -3.2300000190734863
    5. '=max' → logprob: -7.730000019073486
    6. '+=' → logprob: -8.979999542236328
    7. '-' → logprob: -9.354999542236328
    8. '   ' → logprob: -9.729999542236328
    9. '=min' → logprob: -9.979999542236328
    10. ' +=' → logprob: -10.729999542236328

Token 990: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.12696915864944458
    2. 'max' → logprob: -2.1269690990448
    3. ' min' → logprob: -10.251969337463379
    4. ' max' → logprob: -12.501969337463379
    5. '	min' → logprob: -13.876969337463379
    6. '   ' → logprob: -14.376969337463379
    7. '(min' → logprob: -15.876969337463379
    8. 'minimum' → logprob: -16.126968383789062
    9. '	max' → logprob: -16.126968383789062
    10. '=min' → logprob: -16.376968383789062

Token 991: '(
' (ID: 1607)
  Prédit: '(require'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(require' → logprob: -0.00019698418327607214
    2. '(' → logprob: -8.750197410583496
    3. '(
' → logprob: -10.750197410583496
    4. 'require' → logprob: -11.125197410583496
    5. '(required' → logprob: -13.750197410583496
    6. '(const' → logprob: -14.750197410583496
    7. '(request' → logprob: -14.875197410583496
    8. '(re' → logprob: -15.500197410583496
    9. '(req' → logprob: -15.625197410583496
    10. '```' → logprob: -16.62519645690918

Token 992: '           ' (ID: 352)
  Prédit: 'require'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'require' → logprob: -0.0011421226663514972
    2. 'answer' → logprob: -7.5011420249938965
    3. '       ' → logprob: -8.251142501831055
    4. '   ' → logprob: -9.001142501831055
    5. '           ' → logprob: -9.126142501831055
    6. '(require' → logprob: -9.376142501831055
    7. '
' → logprob: -12.376142501831055
    8. ' requirement' → logprob: -12.626142501831055
    9. '               ' → logprob: -13.001142501831055
    10. 'requirements' → logprob: -14.626142501831055

Token 993: ' requirement' (ID: 23292)
  Prédit: 'require'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'require' → logprob: -0.0002370329457335174
    2. 'answer' → logprob: -8.875237464904785
    3. '   ' → logprob: -9.875237464904785
    4. '           ' → logprob: -10.750237464904785
    5. '
' → logprob: -11.375237464904785
    6. '       ' → logprob: -12.750237464904785
    7. 'requirements' → logprob: -12.875237464904785
    8. '               ' → logprob: -13.000237464904785
    9. '(require' → logprob: -13.750237464904785
    10. ' requirement' → logprob: -13.875237464904785

Token 994: '_v' (ID: 5390)
  Prédit: '(require'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(require' → logprob: -1.2306021451950073
    2. 'require' → logprob: -1.3556021451950073
    3. '(
' → logprob: -1.4806021451950073
    4. '(' → logprob: -2.730602264404297
    5. '_v' → logprob: -2.855602264404297
    6. 'v' → logprob: -3.105602264404297
    7. '[
' → logprob: -4.105602264404297
    8. ',' → logprob: -4.230602264404297
    9. '=require' → logprob: -4.855602264404297
    10. '[' → logprob: -4.980602264404297

Token 995: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012502350145950913
    2. ',
' → logprob: -6.876250267028809
    3. '           ' → logprob: -8.501250267028809
    4. ' ,' → logprob: -12.751250267028809
    5. '+' → logprob: -13.251250267028809
    6. '       ' → logprob: -13.501250267028809
    7. '   ' → logprob: -13.626250267028809
    8. ' +' → logprob: -13.876250267028809
    9. '[' → logprob: -14.001250267028809
    10. '               ' → logprob: -14.001250267028809

Token 996: '           ' (ID: 352)
  Prédit: 'require'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'require' → logprob: -0.11047801375389099
    2. '           ' → logprob: -2.360477924346924
    3. 'answer' → logprob: -5.485477924346924
    4. '               ' → logprob: -6.110477924346924
    5. '       ' → logprob: -7.110477924346924
    6. '   ' → logprob: -7.110477924346924
    7. 'used' → logprob: -7.485477924346924
    8. ' requirement' → logprob: -7.610477924346924
    9. 'columns' → logprob: -8.610478401184082
    10. '(require' → logprob: -9.110478401184082

Token 997: ' max' (ID: 2999)
  Prédit: 'require'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'require' → logprob: -0.031271569430828094
    2. 'answer' → logprob: -3.531271457672119
    3. '   ' → logprob: -7.656271457672119
    4. 'columns' → logprob: -8.031271934509277
    5. 'requirements' → logprob: -9.031271934509277
    6. 'ds' → logprob: -9.281271934509277
    7. ' requirement' → logprob: -9.281271934509277
    8. 'max' (adapté à ' max') → logprob: -9.281271934509277
    9. 'used' → logprob: -9.531271934509277
    10. '
' → logprob: -10.406271934509277

Token 998: '(require' (ID: 45088)
  Prédit: '(require'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(require' → logprob: -0.051142413169145584
    2. '(' → logprob: -4.05114221572876
    3. '(
' → logprob: -4.17614221572876
    4. '(columns' → logprob: -4.17614221572876
    5. '(answer' → logprob: -7.17614221572876
    6. '(const' → logprob: -7.80114221572876
    7. '(required' → logprob: -8.301142692565918
    8. 'require' → logprob: -9.301142692565918
    9. '(request' → logprob: -9.801142692565918
    10. '(use' → logprob: -10.676142692565918

Token 999: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -6.289473822107539e-05
    2. 'ation' → logprob: -10.875062942504883
    3. 'ments' → logprob: -11.000062942504883
    4. 'require' → logprob: -11.625062942504883
    5. '```' → logprob: -12.125062942504883
    6. '[' → logprob: -12.750062942504883
    7. 'm' → logprob: -12.875062942504883
    8. '[
' → logprob: -13.875062942504883
    9. 'mentation' → logprob: -14.375062942504883
    10. 'ement' → logprob: -14.625062942504883

Token 1000: '_arr' (ID: 25121)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.02387913130223751
    2. '_arr' → logprob: -4.273879051208496
    3. 'v' → logprob: -5.523879051208496
    4. 'arr' → logprob: -5.898879051208496
    5. '_root' → logprob: -7.523879051208496
    6. '[root' → logprob: -7.648879051208496
    7. '[' → logprob: -7.898879051208496
    8. '_a' → logprob: -8.023879051208496
    9. 'root' → logprob: -8.148879051208496
    10. '```' → logprob: -8.648879051208496

Token 1001: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011765359668061137
    2. 'component' → logprob: -6.876176357269287
    3. '[
' → logprob: -9.501176834106445
    4. '```' → logprob: -10.001176834106445
    5. '[root' → logprob: -11.376176834106445
    6. '(component' → logprob: -12.501176834106445
    7. '[column' → logprob: -13.251176834106445
    8. '[self' → logprob: -13.251176834106445
    9. '[parent' → logprob: -13.501176834106445
    10. '[node' → logprob: -14.001176834106445

Token 1002: 'component' (ID: 16294)
  Prédit: 'component'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.004652980249375105
    2. '[' → logprob: -5.379652976989746
    3. '(component' → logprob: -10.879652976989746
    4. '[
' → logprob: -12.504652976989746
    5. ' component' → logprob: -12.629652976989746
    6. '   ' → logprob: -13.004652976989746
    7. '[root' → logprob: -14.129652976989746
    8. '[node' → logprob: -14.629652976989746
    9. '```' → logprob: -14.629652976989746
    10. '[idx' → logprob: -14.629652976989746

Token 1003: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.11388856917619705
    2. 'root' → logprob: -2.2388885021209717
    3. 'v' → logprob: -7.488888740539551
    4. 'component' → logprob: -9.23888874053955
    5. 'idx' → logprob: -9.73888874053955
    6. '
' → logprob: -9.73888874053955
    7. 'Root' → logprob: -9.86388874053955
    8. '_idx' → logprob: -9.98888874053955
    9. '[root' → logprob: -9.98888874053955
    10. '```' → logprob: -10.61388874053955

Token 1004: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.7927635312080383
    2. ',' → logprob: -1.0427634716033936
    3. '[' → logprob: -1.7927634716033936
    4. 'component' → logprob: -3.7927634716033936
    5. '],
' → logprob: -6.292763710021973
    6. '[
' → logprob: -6.417763710021973
    7. '(component' → logprob: -7.292763710021973
    8. ',
' → logprob: -7.667763710021973
    9. '),' → logprob: -7.917763710021973
    10. '[root' → logprob: -8.292763710021973

Token 1005: ' requirement' (ID: 23292)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.014709287323057652
    2. 'require' → logprob: -4.88970947265625
    3. ' used' → logprob: -5.13970947265625
    4. '           ' → logprob: -7.88970947265625
    5. '   ' → logprob: -8.01470947265625
    6. '       ' → logprob: -8.63970947265625
    7. ' requirement' → logprob: -9.13970947265625
    8. 'answer' → logprob: -9.51470947265625
    9. '               ' → logprob: -10.38970947265625
    10. '                   ' → logprob: -11.13970947265625

Token 1006: '_arr' (ID: 25121)
  Prédit: '_root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.9380137324333191
    2. '_arr' → logprob: -1.1880137920379639
    3. '[' → logprob: -1.3130137920379639
    4. 'root' → logprob: -3.938013792037964
    5. '[root' → logprob: -5.313013553619385
    6. '```' → logprob: -5.813013553619385
    7. 'used' → logprob: -6.063013553619385
    8. '_used' → logprob: -6.313013553619385
    9. 'component' → logprob: -6.438013553619385
    10. '[
' → logprob: -7.938013553619385

Token 1007: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.001417142222635448
    2. '[' → logprob: -7.00141716003418
    3. 'idx' → logprob: -8.12641716003418
    4. '[root' → logprob: -9.25141716003418
    5. 'component' → logprob: -10.00141716003418
    6. '[
' → logprob: -10.37641716003418
    7. 'ds' → logprob: -11.87641716003418
    8. 'root' → logprob: -11.87641716003418
    9. '```' → logprob: -12.50141716003418
    10. '
' → logprob: -12.62641716003418

Token 1008: '_v' (ID: 5390)
  Prédit: '_root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.030740845948457718
    2. '_v' → logprob: -3.655740737915039
    3. 'root' → logprob: -6.280740737915039
    4. 'v' → logprob: -6.280740737915039
    5. 'component' → logprob: -7.905740737915039
    6. '_idx' → logprob: -9.905740737915039
    7. '[root' → logprob: -9.905740737915039
    8. ']' → logprob: -10.405740737915039
    9. 'idx' → logprob: -10.405740737915039
    10. 'Root' → logprob: -10.530740737915039

Token 1009: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5304988026618958
    2. '])' → logprob: -1.405498743057251
    3. ']))' → logprob: -1.905498743057251
    4. '])
' → logprob: -4.78049898147583
    5. ']+' → logprob: -5.40549898147583
    6. '],' → logprob: -6.53049898147583
    7. ']))
' → logprob: -6.78049898147583
    8. ')' → logprob: -7.78049898147583
    9. ']),
' → logprob: -8.030498504638672
    10. '+' → logprob: -8.405498504638672

Token 1010: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5178337693214417
    2. ' +' → logprob: -1.3928337097167969
    3. ')' → logprob: -2.392833709716797
    4. '))' → logprob: -3.017833709716797
    5. ')
' → logprob: -4.642833709716797
    6. '       ' → logprob: -6.767833709716797
    7. '))
' → logprob: -7.142833709716797
    8. '-' → logprob: -7.267833709716797
    9. ' -' → logprob: -7.267833709716797
    10. '           ' → logprob: -7.517833709716797

Token 1011: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.059333015233278275
    2. '(' → logprob: -2.934333086013794
    3. 'require' → logprob: -6.809332847595215
    4. ' (' → logprob: -7.184332847595215
    5. ' used' → logprob: -7.184332847595215
    6. '   ' → logprob: -7.309332847595215
    7. '(require' → logprob: -7.309332847595215
    8. '       ' → logprob: -9.684332847595215
    9. ' ' → logprob: -9.934332847595215
    10. 'required' → logprob: -10.059332847595215

Token 1012: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0003957608714699745
    2. 'arr' → logprob: -8.125395774841309
    3. '[idx' → logprob: -9.500395774841309
    4. 'Arr' → logprob: -11.500395774841309
    5. '[arr' → logprob: -12.000395774841309
    6. 'component' → logprob: -12.625395774841309
    7. '[' → logprob: -13.250395774841309
    8. '_component' → logprob: -13.750395774841309
    9. '[node' → logprob: -14.625395774841309
    10. '[_' → logprob: -14.750395774841309

Token 1013: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.14715340733528137
    2. '[' → logprob: -2.022153377532959
    3. 'component' → logprob: -5.522153377532959
    4. 'idx' → logprob: -8.772153854370117
    5. '   ' → logprob: -9.147153854370117
    6. '[
' → logprob: -10.522153854370117
    7. '[root' → logprob: -10.647153854370117
    8. ')' → logprob: -11.272153854370117
    9. '[v' → logprob: -11.397153854370117
    10. '
' → logprob: -11.397153854370117

Token 1014: '_v' (ID: 5390)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.22904564440250397
    2. '_idx' → logprob: -2.1040456295013428
    3. '_v' → logprob: -2.6040456295013428
    4. 'idx' → logprob: -5.229045867919922
    5. 'v' → logprob: -6.479045867919922
    6. '[v' → logprob: -7.479045867919922
    7. '   ' → logprob: -7.854045867919922
    8. '][' → logprob: -8.729045867919922
    9. '_[' → logprob: -8.854045867919922
    10. '```' → logprob: -9.104045867919922

Token 1015: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5894681811332703
    2. ')
' → logprob: -1.339468240737915
    3. '))' → logprob: -2.839468240737915
    4. ' +' → logprob: -3.214468240737915
    5. '])' → logprob: -3.464468240737915
    6. '+' → logprob: -4.464468002319336
    7. ')])' → logprob: -4.464468002319336
    8. '))
' → logprob: -5.339468002319336
    9. '),
' → logprob: -5.339468002319336
    10. ')))' → logprob: -5.714468002319336

Token 1016: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17634113132953644
    2. '       ' → logprob: -1.92634117603302
    3. ')
' → logprob: -5.0513410568237305
    4. '+' → logprob: -5.4263410568237305
    5. '           ' → logprob: -6.0513410568237305
    6. ' +' → logprob: -6.3013410568237305
    7. '   ' → logprob: -7.9263410568237305
    8. '```' → logprob: -8.17634105682373
    9. '-' → logprob: -9.55134105682373
    10. '               ' → logprob: -9.67634105682373

Token 1017: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0007712708320468664
    2. ' used' → logprob: -7.3757710456848145
    3. '   ' → logprob: -9.500771522521973
    4. 'max' → logprob: -10.125771522521973
    5. '
' → logprob: -11.500771522521973
    6. '       ' → logprob: -12.875771522521973
    7. '    
' → logprob: -13.250771522521973
    8. '```' → logprob: -13.250771522521973
    9. 'use' → logprob: -13.750771522521973
    10. '    ' → logprob: -13.875771522521973

Token 1018: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.06271519511938095
    2. '_arr' → logprob: -2.8127152919769287
    3. 'total' → logprob: -7.81271505355835
    4. 'arr' → logprob: -8.562715530395508
    5. '```' → logprob: -9.562715530395508
    6. '_v' → logprob: -10.437715530395508
    7. 'Total' → logprob: -11.187715530395508
    8. '[' → logprob: -11.437715530395508
    9. '[v' → logprob: -11.937715530395508
    10. '_tot' → logprob: -12.562715530395508

Token 1019: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.44989997148513794
    2. '[' → logprob: -1.4498999118804932
    3. '-' → logprob: -2.074899911880493
    4. '           ' → logprob: -7.074900150299072
    5. '       ' → logprob: -8.074899673461914
    6. '```' → logprob: -8.199899673461914
    7. '   ' → logprob: -8.324899673461914
    8. ',' → logprob: -8.574899673461914
    9. '[
' → logprob: -9.824899673461914
    10. ')' → logprob: -10.449899673461914

Token 1020: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0001462107611587271
    2. ' used' → logprob: -8.87514591217041
    3. '   ' → logprob: -12.25014591217041
    4. '
' → logprob: -14.37514591217041
    5. '       ' → logprob: -14.62514591217041
    6. '           ' → logprob: -16.500146865844727
    7. '_used' → logprob: -16.750146865844727
    8. '-used' → logprob: -16.750146865844727
    9. '```' → logprob: -16.875146865844727
    10. ' ' → logprob: -17.250146865844727

Token 1021: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0005149058997631073
    2. 'arr' → logprob: -8.25051498413086
    3. 'component' → logprob: -8.37551498413086
    4. '```' → logprob: -11.62551498413086
    5. '[' → logprob: -13.00051498413086
    6. 'Arr' → logprob: -13.12551498413086
    7. '[idx' → logprob: -13.25051498413086
    8. '_component' → logprob: -13.37551498413086
    9. '[arr' → logprob: -13.75051498413086
    10. '[root' → logprob: -13.75051498413086

Token 1022: '[' (ID: 58)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.03407486528158188
    2. '[' → logprob: -3.4090747833251953
    3. '[_' → logprob: -8.409074783325195
    4. '[v' → logprob: -9.659074783325195
    5. 'component' → logprob: -9.909074783325195
    6. '[
' → logprob: -10.784074783325195
    7. '   ' → logprob: -10.909074783325195
    8. '[id' → logprob: -11.409074783325195
    9. '_[' → logprob: -11.534074783325195
    10. '[root' → logprob: -11.909074783325195

Token 1023: 'component' (ID: 16294)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6356874108314514
    2. 'component' → logprob: -0.7606874108314514
    3. '[idx' → logprob: -5.885687351226807
    4. ' idx' → logprob: -9.135687828063965
    5. ' component' → logprob: -9.885687828063965
    6. 'root' → logprob: -10.635687828063965
    7. 'v' → logprob: -10.885687828063965
    8. '```' → logprob: -11.135687828063965
    9. '   ' → logprob: -11.385687828063965
    10. '[' → logprob: -11.635687828063965

Token 1024: '_root' (ID: 29989)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.2393307238817215
    2. '[idx' → logprob: -2.239330768585205
    3. '_v' → logprob: -2.864330768585205
    4. '_root' → logprob: -3.989330768585205
    5. 'root' → logprob: -4.489330768585205
    6. '_arr' → logprob: -4.989330768585205
    7. '[root' → logprob: -5.614330768585205
    8. 'idx' → logprob: -5.989330768585205
    9. '[v' → logprob: -6.114330768585205
    10. 'v' → logprob: -6.614330768585205

Token 1025: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0055259158834815025
    2. '       ' → logprob: -5.380526065826416
    3. '   ' → logprob: -7.380526065826416
    4. ')
' → logprob: -8.380525588989258
    5. ' )' → logprob: -11.255525588989258
    6. '           ' → logprob: -11.380525588989258
    7. '<|end|>' → logprob: -11.505525588989258
    8. '```' → logprob: -12.505525588989258
    9. '),' → logprob: -12.880525588989258
    10. '               ' → logprob: -13.505525588989258

Token 1026: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2864694595336914
    2. '       ' → logprob: -1.5364694595336914
    3. ')
' → logprob: -3.7864694595336914
    4. '   ' → logprob: -5.411469459533691
    5. '```' → logprob: -5.411469459533691
    6. '           ' → logprob: -6.161469459533691
    7. '               ' → logprob: -9.161469459533691
    8. '``' → logprob: -11.161469459533691
    9. '),' → logprob: -11.286469459533691
    10. '`)' → logprob: -11.411469459533691

Token 1027: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011770404875278473
    2. '       ' → logprob: -4.886770248413086
    3. ')
' → logprob: -6.011770248413086
    4. '```' → logprob: -6.886770248413086
    5. '   ' → logprob: -7.511770248413086
    6. '           ' → logprob: -9.761770248413086
    7. '<|end|>' → logprob: -10.511770248413086
    8. ',' → logprob: -11.511770248413086
    9. ' )' → logprob: -11.511770248413086
    10. '),' → logprob: -12.261770248413086

Token 1028: '   ' (ID: 271)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.14011548459529877
    2. '   ' → logprob: -2.76511549949646
    3. 'for' → logprob: -3.14011549949646
    4. 'answer' → logprob: -3.89011549949646
    5. ')' → logprob: -6.390115261077881
    6. 'if' → logprob: -7.140115261077881
    7. ' for' → logprob: -7.140115261077881
    8. '```' → logprob: -7.765115261077881
    9. 'used' → logprob: -8.890115737915039
    10. '    
' → logprob: -10.765115737915039

Token 1029: ' for' (ID: 395)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.3422843813896179
    2. 'for' (adapté à ' for') → logprob: -1.7172844409942627
    3. 'answer' → logprob: -2.4672844409942627
    4. 'if' → logprob: -4.342284202575684
    5. 'used' → logprob: -4.592284202575684
    6. '   ' → logprob: -6.467284202575684
    7. 'require' → logprob: -8.217284202575684
    8. '```' → logprob: -8.592284202575684
    9. '#' → logprob: -10.217284202575684
    10. ' for' → logprob: -10.342284202575684

Token 1030: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.015106706880033016
    2. 'root' → logprob: -5.515106678009033
    3. ' component' → logprob: -6.140106678009033
    4. 'neighbor' → logprob: -6.140106678009033
    5. 'adj' → logprob: -6.140106678009033
    6. 'comp' → logprob: -6.265106678009033
    7. 'node' → logprob: -7.015106678009033
    8. 'v' → logprob: -8.390107154846191
    9. 'u' → logprob: -8.640107154846191
    10. 'i' → logprob: -9.015107154846191

Token 1031: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -6.265633419388905e-05
    2. 'root' → logprob: -9.750062942504883
    3. '_' → logprob: -13.250062942504883
    4. '_ro' → logprob: -14.125062942504883
    5. 'Root' → logprob: -14.375062942504883
    6. ' in' → logprob: -14.375062942504883
    7. '
' → logprob: -16.375062942504883
    8. '_r' → logprob: -16.750062942504883
    9. '```' → logprob: -16.750062942504883
    10. '_id' → logprob: -16.750062942504883

Token 1032: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006123721599578857
    2. 'in' → logprob: -5.1311235427856445
    3. '   ' → logprob: -8.756123542785645
    4. '       ' → logprob: -10.506123542785645
    5. ':
' → logprob: -12.256123542785645
    6. '	in' → logprob: -13.256123542785645
    7. ':' → logprob: -13.756123542785645
    8. ',' → logprob: -14.131123542785645
    9. '_in' → logprob: -14.756123542785645
    10. '```' → logprob: -14.881123542785645

Token 1033: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.00761620607227087
    2. ' root' → logprob: -4.88261604309082
    3. '   ' → logprob: -11.88261604309082
    4. 'sorted' → logprob: -13.50761604309082
    5. ' ' → logprob: -14.25761604309082
    6. '(root' → logprob: -15.13261604309082
    7. '[root' → logprob: -15.13261604309082
    8. 'list' → logprob: -15.38261604309082
    9. '	root' → logprob: -15.50761604309082
    10. 'range' → logprob: -16.88261604309082

Token 1034: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.10638604313135147
    2. '_root' → logprob: -2.3563859462738037
    3. 'set' → logprob: -5.731386184692383
    4. 'root' → logprob: -5.856386184692383
    5. 's' → logprob: -10.481386184692383
    6. '[root' → logprob: -12.106386184692383
    7. '```' → logprob: -12.106386184692383
    8. '   ' → logprob: -12.856386184692383
    9. 'et' → logprob: -13.106386184692383
    10. '_ro' → logprob: -13.106386184692383

Token 1035: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6072248220443726
    2. ':' → logprob: -1.4822248220443726
    3. ':
' → logprob: -1.4822248220443726
    4. '   ' → logprob: -7.357224941253662
    5. '):
' → logprob: -9.232224464416504
    6. ',' → logprob: -9.357224464416504
    7. '=' → logprob: -12.107224464416504
    8. ' =' → logprob: -12.482224464416504
    9. '     ' → logprob: -12.607224464416504
    10. '[' → logprob: -12.732224464416504

Token 1036: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006340435356833041
    2. '```' → logprob: -7.87563419342041
    3. 'd' → logprob: -9.25063419342041
    4. ' d' → logprob: -9.37563419342041
    5. '   ' → logprob: -9.75063419342041
    6. '           ' → logprob: -12.12563419342041
    7. '     ' → logprob: -13.12563419342041
    8. '	d' → logprob: -13.37563419342041
    9. 'ds' → logprob: -13.37563419342041
    10. '``' → logprob: -14.37563419342041

Token 1037: ' d' (ID: 272)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.0619908832013607
    2. '   ' → logprob: -2.811990976333618
    3. ' ds' → logprob: -11.561990737915039
    4. '       ' → logprob: -11.561990737915039
    5. '```' → logprob: -12.811990737915039
    6. 'd' (adapté à ' d') → logprob: -14.561990737915039
    7. '	ds' → logprob: -14.811990737915039
    8. 'answer' → logprob: -15.561990737915039
    9. '           ' → logprob: -16.18699073791504
    10. '  ' → logprob: -16.68699073791504

Token 1038: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -2.816093228830141e-06
    2. 's' → logprob: -13.87500286102295
    3. '```' → logprob: -14.12500286102295
    4. 'isu' → logprob: -14.50000286102295
    5. '   ' → logprob: -15.75000286102295
    6. ' su' → logprob: -16.000001907348633
    7. 'sus' → logprob: -16.625001907348633
    8. 'is' → logprob: -17.000001907348633
    9. 'sq' → logprob: -17.250001907348633
    10. 'sur' → logprob: -17.375001907348633

Token 1039: '.un' (ID: 11508)
  Prédit: '.un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.un' → logprob: -1.0445127372804563e-05
    2. 'un' → logprob: -12.50001049041748
    3. '   ' → logprob: -12.87501049041748
    4. '.u' → logprob: -13.37501049041748
    5. '```' → logprob: -14.25001049041748
    6. '.' → logprob: -14.50001049041748
    7. '.unshift' → logprob: -15.00001049041748
    8. '.union' → logprob: -15.12501049041748
    9. '.unit' → logprob: -16.000009536743164
    10. ' .' → logprob: -16.000009536743164

Token 1040: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -2.2200749754119897e-06
    2. 'it' → logprob: -14.250001907348633
    3. '```' → logprob: -14.375001907348633
    4. 'ate' → logprob: -14.750001907348633
    5. 'ited' → logprob: -15.250001907348633
    6. 'ion' → logprob: -16.375001907348633
    7. 'ites' → logprob: -16.500001907348633
    8. '   ' → logprob: -16.625001907348633
    9. ' ite' → logprob: -17.500001907348633
    10. 'site' → logprob: -17.500001907348633

Token 1041: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.1014045923948288
    2. '(component' → logprob: -2.3514046669006348
    3. 'idx' → logprob: -7.351404666900635
    4. 'component' → logprob: -7.976404666900635
    5. '(root' → logprob: -8.976404190063477
    6. '(' → logprob: -9.726404190063477
    7. '(
' → logprob: -11.101404190063477
    8. '[idx' → logprob: -11.976404190063477
    9. ' idx' → logprob: -13.851404190063477
    10. 'root' → logprob: -13.976404190063477

Token 1042: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.000774846994318068
    2. 'v' → logprob: -7.37577486038208
    3. 'idx' → logprob: -9.250774383544922
    4. '_idx' → logprob: -10.250774383544922
    5. '```' → logprob: -12.375774383544922
    6. '_root' → logprob: -12.500774383544922
    7. '[idx' → logprob: -12.750774383544922
    8. '   ' → logprob: -13.500774383544922
    9. ')' → logprob: -14.125774383544922
    10. 'root' → logprob: -14.500774383544922

Token 1043: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6286106983898208e-05
    2. ',
' → logprob: -11.375016212463379
    3. 'component' → logprob: -12.500016212463379
    4. ' ,' → logprob: -14.250016212463379
    5. '(component' → logprob: -15.500016212463379
    6. '```' → logprob: -17.125017166137695
    7. '   ' → logprob: -17.250017166137695
    8. '           ' → logprob: -18.250017166137695
    9. ')' → logprob: -18.250017166137695
    10. '       ' → logprob: -18.375017166137695

Token 1044: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -2.45848218582978e-06
    2. ' component' → logprob: -13.00000286102295
    3. '       ' → logprob: -16.375001907348633
    4. '   ' → logprob: -17.250001907348633
    5. '           ' → logprob: -17.625001907348633
    6. '	component' → logprob: -17.750001907348633
    7. '(component' → logprob: -17.875001907348633
    8. '
' → logprob: -19.000001907348633
    9. '               ' → logprob: -21.000001907348633
    10. '.component' → logprob: -21.125001907348633

Token 1045: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.05606170743703842
    2. '_v' → logprob: -2.9310617446899414
    3. 'Root' → logprob: -7.431061744689941
    4. 'root' → logprob: -7.556061744689941
    5. 'v' → logprob: -9.806061744689941
    6. '_ROOT' → logprob: -13.056061744689941
    7. '```' → logprob: -13.556061744689941
    8. '_set' → logprob: -14.181061744689941
    9. '_ro' → logprob: -14.681061744689941
    10. ' root' → logprob: -14.806061744689941

Token 1046: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007235141238197684
    2. '<|end|>' → logprob: -7.250723361968994
    3. ')
' → logprob: -12.125723838806152
    4. '```' → logprob: -12.875723838806152
    5. '())' → logprob: -13.500723838806152
    6. '<|end|>' → logprob: -13.750723838806152
    7. '')' → logprob: -15.125723838806152
    8. '   ' → logprob: -15.125723838806152
    9. '),' → logprob: -15.250723838806152
    10. ')return' → logprob: -15.250723838806152

Token 1047: '   ' (ID: 271)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.3990379273891449
    2. 'root' → logprob: -1.1490379571914673
    3. 'ds' → logprob: -4.899037837982178
    4. 'parent' → logprob: -6.399037837982178
    5. '   ' → logprob: -6.899037837982178
    6. 'new' → logprob: -7.149037837982178
    7. 'idx' → logprob: -7.399037837982178
    8. 'answer' → logprob: -7.899037837982178
    9. 'component' → logprob: -10.024038314819336
    10. 'rep' → logprob: -10.149038314819336

Token 1048: ' parent' (ID: 5980)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.5300302505493164
    2. 'answer' → logprob: -0.9050302505493164
    3. 'root' → logprob: -6.030030250549316
    4. 'parent' (adapté à ' parent') → logprob: -6.030030250549316
    5. 'component' → logprob: -7.280030250549316
    6. 'if' → logprob: -7.905030250549316
    7. '   ' → logprob: -8.280030250549316
    8. 'require' → logprob: -8.405030250549316
    9. 'ds' → logprob: -9.530030250549316
    10. 'represent' → logprob: -9.780030250549316

Token 1049: '_root' (ID: 29989)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8013902902603149
    2. '_arr' → logprob: -0.8013902902603149
    3. '_idx' → logprob: -3.5513901710510254
    4. '_root' → logprob: -3.6763901710510254
    5. '_id' → logprob: -4.051390171051025
    6. '=' → logprob: -4.301390171051025
    7. '=_' → logprob: -5.301390171051025
    8. '```' → logprob: -5.426390171051025
    9. '_index' → logprob: -5.801390171051025
    10. 'arr' → logprob: -6.176390171051025

Token 1050: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0486162044107914
    2. '=' → logprob: -3.0486161708831787
    3. ')' → logprob: -11.423616409301758
    4. 's' → logprob: -11.923616409301758
    5. '[' → logprob: -13.173616409301758
    6. ',' → logprob: -13.923616409301758
    7. '=root' → logprob: -13.923616409301758
    8. '   ' → logprob: -14.048616409301758
    9. '```' → logprob: -14.298616409301758
    10. ']' → logprob: -14.298616409301758

Token 1051: ' d' (ID: 272)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.0069237579591572285
    2. ' d' → logprob: -5.006923675537109
    3. ' ds' → logprob: -8.88192367553711
    4. 'd' → logprob: -10.00692367553711
    5. 'dsl' → logprob: -11.38192367553711
    6. '   ' → logprob: -12.00692367553711
    7. 'dsn' → logprob: -12.13192367553711
    8. '	d' → logprob: -15.25692367553711
    9. ' ' → logprob: -15.38192367553711
    10. '  ' → logprob: -15.50692367553711

Token 1052: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -4.060365608893335e-05
    2. '```' → logprob: -10.750041007995605
    3. 's' → logprob: -12.625041007995605
    4. '`' → logprob: -13.125041007995605
    5. '``' → logprob: -13.500041007995605
    6. '   ' → logprob: -13.500041007995605
    7. '[' → logprob: -13.500041007995605
    8. '
' → logprob: -13.625041007995605
    9. 'isu' → logprob: -13.750041007995605
    10. 'sv' → logprob: -14.500041007995605

Token 1053: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.005244310479611158
    2. 'find' → logprob: -5.255244255065918
    3. '.parent' → logprob: -12.255244255065918
    4. 'parent' → logprob: -12.380244255065918
    5. '.' → logprob: -13.880244255065918
    6. '.findall' → logprob: -15.380244255065918
    7. '=find' → logprob: -15.380244255065918
    8. '```' → logprob: -16.130245208740234
    9. ' find' → logprob: -17.130245208740234
    10. '	find' → logprob: -17.630245208740234

Token 1054: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -4.572941179503687e-05
    2. 'idx' → logprob: -10.000045776367188
    3. '[idx' → logprob: -15.875045776367188
    4. ' idx' → logprob: -17.125045776367188
    5. '(
' → logprob: -17.875045776367188
    6. '(id' → logprob: -18.375045776367188
    7. '(index' → logprob: -18.625045776367188
    8. '(' → logprob: -18.750045776367188
    9. '	idx' → logprob: -19.375045776367188
    10. '_idx' → logprob: -21.750045776367188

Token 1055: '_v' (ID: 5390)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5437765121459961
    2. '_v' → logprob: -1.043776512145996
    3. 'v' → logprob: -3.418776512145996
    4. '(idx' → logprob: -3.418776512145996
    5. '_idx' → logprob: -6.543776512145996
    6. ' idx' → logprob: -8.543776512145996
    7. '[idx' → logprob: -10.168776512145996
    8. '(' → logprob: -10.293776512145996
    9. ')' → logprob: -10.293776512145996
    10. '   ' → logprob: -10.668776512145996

Token 1056: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12776051461696625
    2. ')' → logprob: -2.127760410308838
    3. '   ' → logprob: -7.127760410308838
    4. ')

' → logprob: -11.627760887145996
    5. ')
' → logprob: -12.002760887145996
    6. ']' → logprob: -12.127760887145996
    7. ']
' → logprob: -12.502760887145996
    8. '    
' → logprob: -13.877760887145996
    9. ' )
' → logprob: -14.002760887145996
    10. '
' → logprob: -14.252760887145996

Token 1057: '   ' (ID: 271)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.04738512262701988
    2. 'answer' → logprob: -3.6723852157592773
    3. '   ' → logprob: -4.422385215759277
    4. '```' → logprob: -4.797385215759277
    5. ' used' → logprob: -7.547385215759277
    6. '_used' → logprob: -10.797385215759277
    7. 'available' → logprob: -11.422385215759277
    8. 'usage' → logprob: -12.047385215759277
    9. '	answer' → logprob: -12.172385215759277
    10. '``' → logprob: -12.172385215759277

Token 1058: ' requirement' (ID: 23292)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.2570238709449768
    2. 'require' → logprob: -1.632023811340332
    3. 'answer' → logprob: -3.507023811340332
    4. '   ' → logprob: -8.132023811340332
    5. 'if' → logprob: -8.132023811340332
    6. '```' → logprob: -8.382023811340332
    7. 'required' → logprob: -8.507023811340332
    8. ' used' → logprob: -10.757023811340332
    9. 'requirements' → logprob: -10.757023811340332
    10. 'use' → logprob: -11.382023811340332

Token 1059: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.16402418911457062
    2. '_v' → logprob: -2.2890241146087646
    3. '[parent' → logprob: -3.4140241146087646
    4. 'arr' → logprob: -4.789024353027344
    5. '_parent' → logprob: -5.289024353027344
    6. '_requirement' → logprob: -6.414024353027344
    7. 'parent' → logprob: -7.414024353027344
    8. '```' → logprob: -7.414024353027344
    9. '   ' → logprob: -9.164024353027344
    10. '_req' → logprob: -9.164024353027344

Token 1060: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -5.512236498361744e-07
    2. 'parent' → logprob: -15.250000953674316
    3. '[' → logprob: -15.750000953674316
    4. '[
' → logprob: -17.375
    5. '[player' → logprob: -18.375
    6. ',parent' → logprob: -18.375
    7. '   ' → logprob: -18.875
    8. '[root' → logprob: -18.875
    9. '```' → logprob: -19.0
    10. '_parent' → logprob: -19.625

Token 1061: '_root' (ID: 29989)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.7725917100906372
    2. '_root' → logprob: -0.8975917100906372
    3. '[parent' → logprob: -2.5225915908813477
    4. 'parent' → logprob: -3.8975915908813477
    5. '_arr' → logprob: -4.147591590881348
    6. '_parent' → logprob: -5.147591590881348
    7. 'root' → logprob: -6.022591590881348
    8. 'arr' → logprob: -6.147591590881348
    9. 'v' → logprob: -6.397591590881348
    10. '   ' → logprob: -7.272591590881348

Token 1062: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003634873079136014
    2. ' =' → logprob: -5.628634929656982
    3. ')=' → logprob: -10.753634452819824
    4. ')' → logprob: -11.628634452819824
    5. ']=' → logprob: -12.753634452819824
    6. ']' → logprob: -14.628634452819824
    7. '=max' → logprob: -14.878634452819824
    8. '=min' → logprob: -15.628634452819824
    9. '=
' → logprob: -15.753634452819824
    10. '<|end|>' → logprob: -15.753634452819824

Token 1063: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019295861711725593
    2. ' =' → logprob: -6.251929759979248
    3. '=min' → logprob: -14.25192928314209
    4. '=max' → logprob: -16.251930236816406
    5. '=
' → logprob: -16.501930236816406
    6. '   ' → logprob: -16.751930236816406
    7. ')=' → logprob: -17.501930236816406
    8. '.=' → logprob: -17.876930236816406
    9. ',' → logprob: -18.126930236816406
    10. '<=' → logprob: -18.626930236816406

Token 1064: ' requirement' (ID: 23292)
  Prédit: 'require'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'require' → logprob: -0.01332093309611082
    2. 'min' → logprob: -4.5133209228515625
    3. 'max' → logprob: -6.1383209228515625
    4. '   ' → logprob: -10.013320922851562
    5. 'minimum' → logprob: -10.013320922851562
    6. ' requirement' → logprob: -12.013320922851562
    7. 'requirements' → logprob: -12.638320922851562
    8. ' min' → logprob: -12.638320922851562
    9. 'maximum' → logprob: -12.888320922851562
    10. 'req' → logprob: -13.263320922851562

Token 1065: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.01824698969721794
    2. '_arr' → logprob: -4.143247127532959
    3. 'arr' → logprob: -6.643247127532959
    4. 'v' → logprob: -7.018247127532959
    5. '[v' → logprob: -12.0182466506958
    6. '	v' → logprob: -14.0182466506958
    7. 'Arr' → logprob: -14.1432466506958
    8. '[arr' → logprob: -14.2682466506958
    9. '	arr' → logprob: -14.2682466506958
    10. '[' → logprob: -14.6432466506958

Token 1066: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06211445480585098
    2. 'used' → logprob: -2.8121144771575928
    3. ' used' → logprob: -8.937114715576172
    4. '```' → logprob: -11.812114715576172
    5. 'answer' → logprob: -12.812114715576172
    6. '
' → logprob: -13.187114715576172
    7. '    
' → logprob: -14.062114715576172
    8. '  ' → logprob: -14.312114715576172
    9. '_used' → logprob: -14.687114715576172
    10. 'usage' → logprob: -14.812114715576172

Token 1067: '   ' (ID: 271)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.006790443789213896
    2. '   ' → logprob: -5.006790637969971
    3. ' used' → logprob: -10.006790161132812
    4. '```' → logprob: -10.506790161132812
    5. 'answer' → logprob: -14.256790161132812
    6. 'usage' → logprob: -14.506790161132812
    7. '
' → logprob: -14.631790161132812
    8. '_used' → logprob: -15.131790161132812
    9. 'Used' → logprob: -15.881790161132812
    10. 'use' → logprob: -16.006790161132812

Token 1068: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.0011833232128992677
    2. '   ' → logprob: -6.75118350982666
    3. 'answer' → logprob: -11.50118350982666
    4. 'print' → logprob: -13.50118350982666
    5. ' used' → logprob: -13.62618350982666
    6. 'usage' → logprob: -16.251182556152344
    7. '
' → logprob: -16.251182556152344
    8. '```' → logprob: -17.126182556152344
    9. 'use' → logprob: -17.251182556152344
    10. 'required' → logprob: -17.626182556152344

Token 1069: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.00012833021173719317
    2. 'arr' → logprob: -9.000128746032715
    3. '[parent' → logprob: -12.625128746032715
    4. '[arr' → logprob: -14.250128746032715
    5. 'Arr' → logprob: -14.375128746032715
    6. '	arr' → logprob: -15.375128746032715
    7. '```' → logprob: -16.3751277923584
    8. '$arr' → logprob: -17.0001277923584
    9. '[root' → logprob: -17.0001277923584
    10. '_ar' → logprob: -18.1251277923584

Token 1070: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -9.088346359931165e-07
    2. 'parent' → logprob: -14.750000953674316
    3. '[
' → logprob: -15.000000953674316
    4. '[' → logprob: -15.500000953674316
    5. '```' → logprob: -18.0
    6. '[player' → logprob: -18.375
    7. ',parent' → logprob: -18.5
    8. '
' → logprob: -18.5
    9. '(parent' → logprob: -19.25
    10. '[root' → logprob: -19.25

Token 1071: '_root' (ID: 29989)
  Prédit: '[parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -0.29377177357673645
    2. '_root' → logprob: -1.793771743774414
    3. 'parent' → logprob: -2.668771743774414
    4. '_parent' → logprob: -4.293771743774414
    5. 'root' → logprob: -5.793771743774414
    6. '[root' → logprob: -6.793771743774414
    7. '(parent' → logprob: -7.793771743774414
    8. '_arr' → logprob: -8.168771743774414
    9. ',parent' → logprob: -9.043771743774414
    10. '```' → logprob: -9.168771743774414

Token 1072: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0822748988866806
    2. ' +=' → logprob: -2.582274913787842
    3. '=' → logprob: -5.707274913787842
    4. ']+=' → logprob: -10.582274436950684
    5. ' =' → logprob: -10.957274436950684
    6. '   ' → logprob: -11.332274436950684
    7. '+' → logprob: -13.957274436950684
    8. '    ' → logprob: -14.332274436950684
    9. ')' → logprob: -14.457274436950684
    10. '	' → logprob: -15.582274436950684

Token 1073: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48109301924705505
    2. '+=' → logprob: -0.9810930490493774
    3. ' +=' → logprob: -5.106092929840088
    4. ' =' → logprob: -6.981092929840088
    5. '*=' → logprob: -14.356093406677246
    6. '   ' → logprob: -14.606093406677246
    7. ']+=' → logprob: -14.856093406677246
    8. '.=' → logprob: -15.231093406677246
    9. '-=' → logprob: -15.731093406677246
    10. '[' → logprob: -16.10609245300293

Token 1074: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -6.2729995988775045e-06
    2. ' used' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.7500057220459
    4. 'use' → logprob: -18.7500057220459
    5. 'usage' → logprob: -20.7500057220459
    6. '-used' → logprob: -22.2500057220459
    7. '_used' → logprob: -22.3750057220459
    8. 'require' → logprob: -22.5000057220459
    9. 'required' → logprob: -22.5000057220459
    10. 'Used' → logprob: -22.8750057220459

Token 1075: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.0019483910873532295
    2. 'total' → logprob: -6.251948356628418
    3. 'Total' → logprob: -11.626948356628418
    4. '_arr' → logprob: -12.126948356628418
    5. 'arr' → logprob: -12.376948356628418
    6. '[' → logprob: -15.376948356628418
    7. 'used' → logprob: -15.751948356628418
    8. '[parent' → logprob: -15.876948356628418
    9. '_used' → logprob: -16.126949310302734
    10. '_parent' → logprob: -16.251949310302734

Token 1076: '
' (ID: 198)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.44205719232559204
    2. 'print' → logprob: -1.3170571327209473
    3. 'for' → logprob: -3.0670571327209473
    4. 'if' → logprob: -3.8170571327209473
    5. '<|end|>' → logprob: -4.567057132720947
    6. '   ' → logprob: -4.817057132720947
    7. 'parent' → logprob: -7.192057132720947
    8. '```' → logprob: -7.692057132720947
    9. ')' → logprob: -7.817057132720947
    10. '
' → logprob: -9.067057609558105

Token 1077: 'final' (ID: 17196)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.5958515405654907
    2. '<|end|>' → logprob: -0.8458515405654907
    3. 'if' → logprob: -5.220851421356201
    4. ')' → logprob: -5.220851421356201
    5. 'for' → logprob: -5.720851421356201
    6. 'print' → logprob: -6.345851421356201
    7. '```' → logprob: -6.720851421356201
    8. '<|end|>' → logprob: -6.720851421356201
    9. '   ' → logprob: -8.09585189819336
    10. 'parent' → logprob: -8.34585189819336

Token 1078: '_answer' (ID: 65702)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.35908642411231995
    2. '_root' → logprob: -2.234086513519287
    3. '_answer' → logprob: -2.734086513519287
    4. '_parent' → logprob: -3.484086513519287
    5. '_arr' → logprob: -3.859086513519287
    6. 'for' → logprob: -3.859086513519287
    7. '_print' → logprob: -4.484086513519287
    8. ' =' → logprob: -4.734086513519287
    9. '_' → logprob: -5.109086513519287
    10. '```' → logprob: -5.234086513519287

Token 1079: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37889862060546875
    2. '_' → logprob: -1.8788986206054688
    3. '=' → logprob: -2.1288986206054688
    4. '_arr' → logprob: -3.3788986206054688
    5. '_idx' → logprob: -5.253898620605469
    6. 's' → logprob: -6.753898620605469
    7. '_parent' → logprob: -7.253898620605469
    8. '=_' → logprob: -7.628898620605469
    9. '_root' → logprob: -7.878898620605469
    10. '_=' → logprob: -8.253898620605469

Token 1080: ' requirement' (ID: 23292)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.566174328327179
    2. 'max' → logprob: -0.941174328327179
    3. ' min' → logprob: -3.691174268722534
    4. ' max' → logprob: -5.191174507141113
    5. 'require' → logprob: -5.816174507141113
    6. 'CONST' → logprob: -6.316174507141113
    7. '[min' → logprob: -6.566174507141113
    8. 'sum' → logprob: -6.566174507141113
    9. 'answer' → logprob: -6.816174507141113
    10. '0' → logprob: -6.941174507141113

Token 1081: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.00014799882774241269
    2. 'arr' → logprob: -9.375147819519043
    3. '_v' → logprob: -10.000147819519043
    4. 'Arr' → logprob: -12.500147819519043
    5. '_' → logprob: -13.125147819519043
    6. '[' → logprob: -13.250147819519043
    7. '_val' → logprob: -13.375147819519043
    8. 'v' → logprob: -13.375147819519043
    9. '_parent' → logprob: -13.500147819519043
    10. '_ans' → logprob: -14.375147819519043

Token 1082: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1083: 'ds' (ID: 8559)
  Prédit: 'ds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ds' → logprob: -8.780830830801278e-05
    2. '[' → logprob: -9.37508773803711
    3. '0' → logprob: -13.37508773803711
    4. '   ' → logprob: -14.37508773803711
    5. ' ds' → logprob: -14.87508773803711
    6. ' ' → logprob: -15.37508773803711
    7. '  ' → logprob: -16.37508773803711
    8. '
' → logprob: -16.75008773803711
    9. '[
' → logprob: -17.37508773803711
    10. '	ds' → logprob: -18.62508773803711

Token 1084: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.1517960956552997e-05
    2. 'uf' → logprob: -12.750011444091797
    3. '[u' → logprob: -13.000011444091797
    4. 'parent' → logprob: -13.250011444091797
    5. 'U' → logprob: -13.750011444091797
    6. '_parent' → logprob: -14.125011444091797
    7. 'у' → logprob: -15.125011444091797
    8. 'root' → logprob: -15.125011444091797
    9. '[' → logprob: -15.250011444091797
    10. '[parent' → logprob: -15.250011444091797

Token 1085: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0007083826349116862
    2. 'find' → logprob: -7.37570858001709
    3. '.' → logprob: -10.25070858001709
    4. 'parent' → logprob: -10.75070858001709
    5. '.parent' → logprob: -11.87570858001709
    6. '```' → logprob: -12.50070858001709
    7. '
' → logprob: -12.62570858001709
    8. 'final' → logprob: -12.75070858001709
    9. '.findall' → logprob: -13.25070858001709
    10. ' .' → logprob: -13.87570858001709

Token 1086: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007209267932921648
    2. '0' → logprob: -5.007209300994873
    3. '(sort' → logprob: -8.257208824157715
    4. '(idx' → logprob: -8.882208824157715
    5. '(vertex' → logprob: -10.132208824157715
    6. '(final' → logprob: -10.632208824157715
    7. 'sort' → logprob: -11.757208824157715
    8. 'final' → logprob: -11.757208824157715
    9. 'idx' → logprob: -11.882208824157715
    10. 'vertex' → logprob: -12.382208824157715

Token 1087: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00025001514586620033
    2. 'vertex' → logprob: -8.875249862670898
    3. 'sort' → logprob: -9.375249862670898
    4. 'idx' → logprob: -10.875249862670898
    5. '(' → logprob: -13.125249862670898
    6. ' ' → logprob: -13.500249862670898
    7. ')' → logprob: -14.000249862670898
    8. '
' → logprob: -14.125249862670898
    9. '(sort' → logprob: -15.000249862670898
    10. 'final' → logprob: -15.125249862670898

Token 1088: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9434248208999634
    2. '])' → logprob: -1.1934248208999634
    3. ')]' → logprob: -1.1934248208999634
    4. '])]' → logprob: -6.193424701690674
    5. ')])' → logprob: -6.818424701690674
    6. ')' → logprob: -7.068424701690674
    7. ']+' → logprob: -8.818425178527832
    8. ']
' → logprob: -9.318425178527832
    9. '])
' → logprob: -9.818425178527832
    10. ']))' → logprob: -11.318425178527832

Token 1089: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.981667537620524e-06
    2. '
' → logprob: -13.875001907348633
    3. ' print' → logprob: -15.250001907348633
    4. 'if' → logprob: -15.500001907348633
    5. '```' → logprob: -15.875001907348633
    6. '<|end|>' → logprob: -16.125001907348633
    7. 'return' → logprob: -16.375001907348633
    8. 'final' → logprob: -16.500001907348633
    9. '#' → logprob: -17.125001907348633
    10. '#print' → logprob: -17.125001907348633

Token 1090: '(final' (ID: 14111)
  Prédit: '(final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -2.7372048862162046e-05
    2. 'final' → logprob: -11.000027656555176
    3. '(' → logprob: -11.500027656555176
    4. '(f' → logprob: -14.625027656555176
    5. '(
' → logprob: -17.87502670288086
    6. '(fin' → logprob: -18.50002670288086
    7. '((' → logprob: -18.75002670288086
    8. '()' → logprob: -19.37502670288086
    9. ' final' → logprob: -19.50002670288086
    10. ' (' → logprob: -20.00002670288086

Token 1091: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -2.141186450899113e-05
    2. '_' → logprob: -11.875020980834961
    3. 'answer' → logprob: -12.125020980834961
    4. '_ans' → logprob: -12.500020980834961
    5. ')' → logprob: -12.625020980834961
    6. '_answers' → logprob: -14.375020980834961
    7. 'Answer' → logprob: -14.625020980834961
    8. '_score' → logprob: -15.250020980834961
    9. '```' → logprob: -15.375020980834961
    10. ')_' → logprob: -16.00002098083496

Token 1092: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.750000953674316
    3. ')`' → logprob: -15.500000953674316
    4. '+' → logprob: -16.250001907348633
    5. ' )' → logprob: -16.500001907348633
    6. '()' → logprob: -16.750001907348633
    7. '))' → logprob: -17.000001907348633
    8. '())' → logprob: -17.375001907348633
    9. '`)' → logprob: -18.250001907348633
    10. '```' → logprob: -18.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1090
Tokens correctement prédits (1ère position, stricte): 537
Tokens correctement prédits (1ère position, avec adaptation): 584
Tokens correctement prédits (top 10): 983
Précision stricte (1ère position): 49.27%
Précision adaptée (1ère position): 53.58%
Précision (top 10): 90.18%
================================================================================
