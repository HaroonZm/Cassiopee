================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())

a = [] # je préfère stocker ces valeurs, c'est plus pratique
for _ in range(n):
    # split, map, puis liste ; un classique
    row = list(map(int, input().split()))
    a.append(row)

A = [[0]*n for _ in range(n)]
Al = [[0]*(n+1) for _ in range(n+1)]
Ar = [[0]*(n+1) for _ in range(n+1)]

for i in range(n):
    for j in range(n):
        # Je ne comprends pas trop le format original, mais bon...
        if i < j:
            A[i][j] = a[i][j-1]  # je ne sais plus s'il fallait -1, mais ça marche
        elif i > j:
            A[i][j] = a[i][j]  # ça c'est plus logique, je crois

# Pré-calculs (je suppose que c'est pour l'optimisation)
for i in range(n):
    for j in range(i+1, n):
        # je commence à compter à partir de i ? Bon allez
        Al[j][i+1] = Al[j][i] + A[j][i]
        if i > 0:
            Ar[i][j] = Ar[i-1][j] + A[i][j]
        else:
            Ar[i][j] = A[i][j]

# Initialisation du DP
dp = [[float("inf")]*(n+1) for _ in range(n+1)]
dp[0][0] = 0

# Je crois que c'est la partie principale...
for i in range(n+1):
    for j in range(i, n+1):
        if dp[i][j] == float("inf"):
            continue
        l, r = 0, 0
        for k in range(j+1, n+1):
            l += Al[k-1][i]
            # Je ne comprends pas ce Ar, mais je garde le calcul
            if j > 0:
                r += Ar[k-2][k-1] - Ar[j-1][k-1]
            else:
                r += Ar[k-2][k-1]
            tmp = dp[i][j] + l + r
            if tmp < dp[j][k]:
                dp[j][k] = tmp

# La réponse finale
x = float("inf")
for i in range(n+1):
    if dp[i][n] < x:
        x = dp[i][n]
print(x)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038134094211272895
    2. '(n' → logprob: -9.000381469726562
    3. ''' → logprob: -9.500381469726562
    4. '('' → logprob: -10.125381469726562
    5. '```' → logprob: -10.125381469726562
    6. '`' → logprob: -10.750381469726562
    7. '("("' → logprob: -10.750381469726562
    8. '()' → logprob: -11.250381469726562
    9. 'n' → logprob: -11.625381469726562
    10. ')' → logprob: -12.000381469726562

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03871168941259384
    2. ')' → logprob: -3.5387117862701416
    3. '()' → logprob: -4.9137115478515625
    4. '())' → logprob: -7.1637115478515625
    5. '(
' → logprob: -8.663711547851562
    6. '```' → logprob: -9.163711547851562
    7. '(()' → logprob: -9.413711547851562
    8. '("("' → logprob: -9.663711547851562
    9. '('' → logprob: -9.913711547851562
    10. '`' → logprob: -10.163711547851562

Token 5: 'a' (ID: 64)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8229318261146545
    2. 'if' → logprob: -0.8229318261146545
    3. 'for' → logprob: -2.6979317665100098
    4. 's' → logprob: -3.1979317665100098
    5. 'f' → logprob: -5.32293176651001
    6. 'x' → logprob: -5.69793176651001
    7. ' if' → logprob: -7.07293176651001
    8. 'total' → logprob: -7.19793176651001
    9. 'result' → logprob: -7.19793176651001
    10. ')' → logprob: -7.69793176651001

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.016671981662511826
    2. '+' → logprob: -4.766672134399414
    3. '=' → logprob: -5.891672134399414
    4. '*' → logprob: -6.891672134399414
    5. 'a' → logprob: -7.516672134399414
    6. '[i' → logprob: -7.516672134399414
    7. ' =' → logprob: -7.641672134399414
    8. ' ' → logprob: -7.891672134399414
    9. ')' → logprob: -8.016672134399414
    10. '%' → logprob: -8.141672134399414

Token 7: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.293457955121994
    2. ' []' → logprob: -1.6684579849243164
    3. 'n' → logprob: -3.5434579849243164
    4. 'list' → logprob: -4.168457984924316
    5. '0' → logprob: -4.918457984924316
    6. '[' → logprob: -5.793457984924316
    7. '[int' → logprob: -5.918457984924316
    8. ' list' → logprob: -6.043457984924316
    9. ' [' → logprob: -6.418457984924316
    10. '[n' → logprob: -6.668457984924316

Token 8: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019525213167071342
    2. ' for' → logprob: -4.894525051116943
    3. '\' → logprob: -5.644525051116943
    4. '<|end|>' → logprob: -6.144525051116943
    5. '\n' → logprob: -6.269525051116943
    6. '```' → logprob: -6.519525051116943
    7. 'n' → logprob: -7.019525051116943
    8. '[' → logprob: -7.394525051116943
    9. '
' → logprob: -7.769525051116943
    10. '' → logprob: -8.394525527954102

Token 9: ' je' (ID: 1264)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9442113041877747
    2. ' ' → logprob: -1.1942112445831299
    3. ' for' → logprob: -2.94421124458313
    4. '[]' → logprob: -3.06921124458313
    5. 'input' → logprob: -3.19421124458313
    6. '[int' → logprob: -3.44421124458313
    7. 'int' → logprob: -3.56921124458313
    8. '[' → logprob: -3.56921124458313
    9. '"' → logprob: -4.069211483001709
    10. ')' → logprob: -4.319211483001709

Token 10: ' préfère' (ID: 141784)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0683693885803223
    2. 'n' → logprob: -1.8183693885803223
    3. 'i' → logprob: -2.0683693885803223
    4. 'r' → logprob: -2.9433693885803223
    5. 'j' → logprob: -3.4433693885803223
    6. 'a' → logprob: -3.4433693885803223
    7. 'd' → logprob: -4.005869388580322
    8. 'u' → logprob: -4.193369388580322
    9. '.append' → logprob: -4.443369388580322
    10. '[]' → logprob: -4.443369388580322

Token 11: ' stock' (ID: 6546)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.8811808824539185
    2. '_' → logprob: -1.1311808824539185
    3. 'range' → logprob: -3.131180763244629
    4. 'for' → logprob: -3.256180763244629
    5. 'append' → logprob: -3.381180763244629
    6. 'a' → logprob: -3.881180763244629
    7. ' for' → logprob: -3.881180763244629
    8. ' a' → logprob: -4.256180763244629
    9. 's' → logprob: -4.381180763244629
    10. '[' → logprob: -4.381180763244629

Token 12: 'er' (ID: 259)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00300777330994606
    2. 'er' → logprob: -5.878007888793945
    3. 'ur' → logprob: -10.003007888793945
    4. '[r' → logprob: -10.253007888793945
    5. 'rer' → logprob: -10.253007888793945
    6. 'e' → logprob: -10.503007888793945
    7. 'р' → logprob: -11.628007888793945
    8. '	r' → logprob: -11.878007888793945
    9. '[]' → logprob: -11.878007888793945
    10. '```' → logprob: -12.128007888793945

Token 13: ' ces' (ID: 10532)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15083403885364532
    2. '_' → logprob: -2.275834083557129
    3. '[' → logprob: -4.275834083557129
    4. 'a' → logprob: -4.400834083557129
    5. 'for' → logprob: -5.775834083557129
    6. ',' → logprob: -6.150834083557129
    7. 's' → logprob: -6.275834083557129
    8. ' ' → logprob: -6.775834083557129
    9. '(n' → logprob: -7.900834083557129
    10. 'n' → logprob: -8.025834083557129

Token 14: ' valeurs' (ID: 73668)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7677204012870789
    2. ' ' → logprob: -0.7677204012870789
    3. ' _' → logprob: -4.0177202224731445
    4. ' éléments' → logprob: -4.2677202224731445
    5. '  ' → logprob: -4.8927202224731445
    6. 'élé' → logprob: -5.1427202224731445
    7. '[' → logprob: -5.7677202224731445
    8. ' =' → logprob: -6.0177202224731445
    9. ' elements' → logprob: -6.3927202224731445
    10. ' espaces' → logprob: -6.5177202224731445

Token 15: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1812368780374527
    2. '_' → logprob: -2.181236982345581
    3. ',' → logprob: -3.556236982345581
    4. ' for' → logprob: -4.681236743927002
    5. '.' → logprob: -5.806236743927002
    6. 'n' → logprob: -5.931236743927002
    7. '\n' → logprob: -6.306236743927002
    8. ' ' → logprob: -6.556236743927002
    9. '=' → logprob: -6.556236743927002
    10. 'a' → logprob: -7.056236743927002

Token 16: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3455941081047058
    2. ' for' → logprob: -1.3455941677093506
    3. ' ' → logprob: -3.7205941677093506
    4. '_' → logprob: -5.3455939292907715
    5. '\n' → logprob: -7.2205939292907715
    6. '
' → logprob: -8.09559440612793
    7. 'n' → logprob: -8.47059440612793
    8. ' 
' → logprob: -8.72059440612793
    9. '  
' → logprob: -8.72059440612793
    10. ')' → logprob: -8.84559440612793

Token 17: ''est' (ID: 6616)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3494621515274048
    2. ''est' → logprob: -1.4744621515274048
    3. 'ar' → logprob: -1.4744621515274048
    4. ''' → logprob: -2.2244620323181152
    5. 'ont' → logprob: -3.0994620323181152
    6. 'est' → logprob: -3.4744620323181152
    7. ''a' → logprob: -3.7244620323181152
    8. ''''' → logprob: -4.599462032318115
    9. 'n' → logprob: -4.724462032318115
    10. 'e' → logprob: -4.849462032318115

Token 18: ' plus' (ID: 2932)
  Prédit: ' toujours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' toujours' → logprob: -0.12153033912181854
    2. ' always' → logprob: -3.371530294418335
    3. ' mieux' → logprob: -3.996530294418335
    4. 'plus' → logprob: -4.371530532836914
    5. ' bien' → logprob: -4.621530532836914
    6. ' plus' → logprob: -4.746530532836914
    7. ' une' → logprob: -4.871530532836914
    8. 'bien' → logprob: -5.121530532836914
    9. 'a' → logprob: -6.246530532836914
    10. ' pratique' → logprob: -6.371530532836914

Token 19: ' pratique' (ID: 42780)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.13191372156143188
    2. 'pro' → logprob: -3.506913661956787
    3. ' sûr' → logprob: -3.756913661956787
    4. ' pratique' → logprob: -4.006913661956787
    5. 'simple' → logprob: -4.881913661956787
    6. 'comm' → logprob: -5.006913661956787
    7. 'clair' → logprob: -5.006913661956787
    8. 'fac' → logprob: -5.631913661956787
    9. ' clair' → logprob: -5.631913661956787
    10. 'safe' → logprob: -5.756913661956787

Token 20: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26478344202041626
    2. '
' → logprob: -2.1397833824157715
    3. '\n' → logprob: -2.7647833824157715
    4. ' for' → logprob: -3.7647833824157715
    5. '\' → logprob: -4.7647833824157715
    6. '  
' → logprob: -5.0147833824157715
    7. ' 
' → logprob: -5.6397833824157715
    8. '' → logprob: -5.8897833824157715
    9. '<|end|>' → logprob: -6.2647833824157715
    10. '[' → logprob: -6.5147833824157715

Token 21: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43634501099586487
    2. '
' → logprob: -1.0613449811935425
    3. ' for' → logprob: -5.061345100402832
    4. '
' → logprob: -6.811345100402832
    5. '

' → logprob: -9.436345100402832
    6. '\n' → logprob: -10.061345100402832
    7. ' 
' → logprob: -10.936345100402832
    8. '' → logprob: -11.436345100402832
    9. '```' → logprob: -11.686345100402832
    10. '  
' → logprob: -11.936345100402832

Token 22: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4958513379096985
    2. ' i' → logprob: -0.9958513379096985
    3. ' _' → logprob: -3.8708512783050537
    4. '_' → logprob: -7.495851516723633
    5. 'i' → logprob: -9.370851516723633
    6. ' ' → logprob: -10.370851516723633
    7. '  ' → logprob: -11.245851516723633
    8. ' ‌' → logprob: -11.870851516723633
    9. ' range' → logprob: -13.245851516723633
    10. ' n' → logprob: -13.620851516723633

Token 23: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028555169701576233
    2. 'in' → logprob: -5.87785530090332
    3. ' ' → logprob: -10.00285530090332
    4. '_' → logprob: -13.62785530090332
    5. 'range' → logprob: -14.00285530090332
    6. 'n' → logprob: -14.25285530090332
    7. ' _' → logprob: -14.62785530090332
    8. ' i' → logprob: -14.75285530090332
    9. ',' → logprob: -15.12785530090332
    10. '  ' → logprob: -15.50285530090332

Token 24: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868750035762787
    2. 'range' → logprob: -1.136875033378601
    3. 'rang' → logprob: -14.38687515258789
    4. ' ' → logprob: -14.38687515258789
    5. '	range' → logprob: -14.38687515258789
    6. 'in' → logprob: -14.51187515258789
    7. 'n' → logprob: -14.88687515258789
    8. '_' → logprob: -15.13687515258789
    9. '(range' → logprob: -15.13687515258789
    10. 'ran' → logprob: -15.63687515258789

Token 25: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3873460292816162
    2. '(n' → logprob: -1.1373460292816162
    3. ' (' → logprob: -7.762346267700195
    4. '(
' → logprob: -10.387346267700195
    5. ' n' → logprob: -11.387346267700195
    6. '(range' → logprob: -13.137346267700195
    7. '(

' → logprob: -13.387346267700195
    8. 'n' → logprob: -13.637346267700195
    9. '(int' → logprob: -13.762346267700195
    10. '(s' → logprob: -14.637346267700195

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1800711452960968
    2. ')' → logprob: -1.8050711154937744
    3. ' ):' → logprob: -8.430070877075195
    4. ' )' → logprob: -10.055070877075195
    5. ':' → logprob: -10.305070877075195
    6. '):
' → logprob: -10.805070877075195
    7. '+' → logprob: -12.680070877075195
    8. ')>' → logprob: -13.430070877075195
    9. ' ' → logprob: -14.180070877075195
    10. ',' → logprob: -14.180070877075195

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4021759033203125
    2. ' a' → logprob: -1.7771759033203125
    3. ' ' → logprob: -2.7771759033203125
    4. 'a' → logprob: -3.5271759033203125
    5. ' s' → logprob: -3.7771759033203125
    6. '    ' → logprob: -3.9021759033203125
    7. ' input' → logprob: -4.4021759033203125
    8. ' data' → logprob: -5.1521759033203125
    9. '    
' → logprob: -6.4021759033203125
    10. ' x' → logprob: -6.7771759033203125

Token 28: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1050081253051758
    2. ' x' → logprob: -1.3550081253051758
    3. 'a' → logprob: -1.6050081253051758
    4. ' a' → logprob: -2.855008125305176
    5. ' data' → logprob: -3.605008125305176
    6. '   ' → logprob: -3.605008125305176
    7. ' val' → logprob: -4.105008125305176
    8. 'val' → logprob: -4.355008125305176
    9. 'data' → logprob: -4.480008125305176
    10. 's' → logprob: -4.730008125305176

Token 29: ' split' (ID: 12648)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.7041975855827332
    2. ' x' → logprob: -1.579197645187378
    3. 'val' → logprob: -1.954197645187378
    4. 'x' → logprob: -2.829197645187378
    5. ' data' → logprob: -3.954197645187378
    6. '   ' → logprob: -4.204197406768799
    7. ' value' → logprob: -4.704197406768799
    8. ' values' → logprob: -4.954197406768799
    9. 'value' → logprob: -5.454197406768799
    10. 'v' → logprob: -5.704197406768799

Token 30: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13557086884975433
    2. 'input' → logprob: -2.760570764541626
    3. 's' → logprob: -3.885570764541626
    4. '(' → logprob: -4.385571002960205
    5. ')' → logprob: -5.510571002960205
    6. 'data' → logprob: -5.635571002960205
    7. 'a' → logprob: -5.635571002960205
    8. 'line' → logprob: -5.760571002960205
    9. '_' → logprob: -5.885571002960205
    10. '_input' → logprob: -6.135571002960205

Token 31: ' map' (ID: 4014)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3755074143409729
    2. 'input' → logprob: -1.6255073547363281
    3. ' data' → logprob: -4.125507354736328
    4. 'data' → logprob: -4.250507354736328
    5. 's' → logprob: -4.375507354736328
    6. ' map' → logprob: -4.625507354736328
    7. ' ' → logprob: -4.875507354736328
    8. ' strip' → logprob: -5.000507354736328
    9. '=input' → logprob: -5.375507354736328
    10. 'strip' → logprob: -5.500507354736328

Token 32: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01020589005202055
    2. 'int' → logprob: -5.3852057456970215
    3. '(str' → logprob: -5.3852057456970215
    4. '(' → logprob: -7.8852057456970215
    5. ' int' → logprob: -8.63520622253418
    6. '   ' → logprob: -9.38520622253418
    7. '[int' → logprob: -9.63520622253418
    8. '```' → logprob: -9.63520622253418
    9. 'str' → logprob: -10.13520622253418
    10. '=int' → logprob: -10.38520622253418

Token 33: ' puis' (ID: 18766)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6199754476547241
    2. 'int' → logprob: -1.3699754476547241
    3. ' str' → logprob: -1.9949754476547241
    4. 'str' → logprob: -3.3699755668640137
    5. ' input' → logprob: -3.6199755668640137
    6. 'input' → logprob: -5.119975566864014
    7. 'strip' → logprob: -6.119975566864014
    8. ' strip' → logprob: -6.869975566864014
    9. 'list' → logprob: -7.744975566864014
    10. ' list' → logprob: -7.994975566864014

Token 34: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9581727981567383
    2. ' list' → logprob: -1.2081727981567383
    3. ' int' → logprob: -1.7081727981567383
    4. 'int' → logprob: -2.0831727981567383
    5. 'append' → logprob: -4.833172798156738
    6. ' append' → logprob: -6.208172798156738
    7. 'str' → logprob: -8.333172798156738
    8. '```' → logprob: -8.458172798156738
    9. ' ' → logprob: -8.583172798156738
    10. 'strip' → logprob: -8.708172798156738

Token 35: ' ;' (ID: 4605)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1311960220336914
    2. '   ' → logprob: -1.6311960220336914
    3. 'a' → logprob: -1.8811960220336914
    4. 'input' → logprob: -2.5061960220336914
    5. ' line' → logprob: -3.0061960220336914
    6. 'data' → logprob: -3.2561960220336914
    7. 'tokens' → logprob: -3.8811960220336914
    8. 'line' → logprob: -4.006196022033691
    9. '(a' → logprob: -4.381196022033691
    10. ' =' → logprob: -4.631196022033691

Token 36: ' un' (ID: 537)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -1.65534245967865
    2. ' list' → logprob: -1.78034245967865
    3. ' line' → logprob: -2.1553425788879395
    4. ' lst' → logprob: -2.2803425788879395
    5. 'list' → logprob: -2.7803425788879395
    6. ' input' → logprob: -2.9053425788879395
    7. ' a' → logprob: -3.0303425788879395
    8. 'a' → logprob: -3.0303425788879395
    9. ' l' → logprob: -3.4053425788879395
    10. 'data' → logprob: -3.5303425788879395

Token 37: ' classique' (ID: 76895)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5125976800918579
    2. 'e' → logprob: -2.1375975608825684
    3. 'input' → logprob: -2.6375975608825684
    4. ' input' → logprob: -3.0125975608825684
    5. 'split' → logprob: -3.3875975608825684
    6. ' =' → logprob: -4.137597560882568
    7. '.append' → logprob: -4.262597560882568
    8. '[int' → logprob: -4.637597560882568
    9. 's' → logprob: -4.762597560882568
    10. 'ent' → logprob: -4.887597560882568

Token 38: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15304459631443024
    2. 'a' → logprob: -4.153044700622559
    3. '(int' → logprob: -4.153044700622559
    4. 'input' → logprob: -4.278044700622559
    5. 'tokens' → logprob: -4.403044700622559
    6. 'data' → logprob: -4.528044700622559
    7. '(
' → logprob: -4.653044700622559
    8. ' line' → logprob: -4.778044700622559
    9. '(a' → logprob: -5.153044700622559
    10. 'line' → logprob: -5.528044700622559

Token 39: '   ' (ID: 271)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.2554954290390015
    2. 'line' → logprob: -2.130495548248291
    3. ' line' → logprob: -2.130495548248291
    4. 'lst' → logprob: -2.255495548248291
    5. 'values' → logprob: -2.630495548248291
    6. 'a' → logprob: -2.630495548248291
    7. 'numbers' → logprob: -2.880495548248291
    8. ' data' → logprob: -3.255495548248291
    9. 'l' → logprob: -4.255495548248291
    10. 's' → logprob: -4.505495548248291

Token 40: ' row' (ID: 5225)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2804473638534546
    2. 'lst' → logprob: -2.780447483062744
    3. 'values' → logprob: -3.280447483062744
    4. 'l' → logprob: -3.405447483062744
    5. 'data' → logprob: -3.780447483062744
    6. ' a' → logprob: -3.780447483062744
    7. ' lst' → logprob: -4.780447483062744
    8. 'vals' → logprob: -5.030447483062744
    9. 'val' → logprob: -5.155447483062744
    10. ' data' → logprob: -5.155447483062744

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804963827133179
    2. '=' → logprob: -3.2880496978759766
    3. 's' → logprob: -12.038049697875977
    4. ' ' → logprob: -14.538049697875977
    5. '_' → logprob: -14.538049697875977
    6. '=[]' → logprob: -15.038049697875977
    7. ' =[' → logprob: -15.288049697875977
    8. '_values' → logprob: -16.163049697875977
    9. '   ' → logprob: -16.413049697875977
    10. ',' → logprob: -16.413049697875977

Token 42: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.011050296947360039
    2. ' list' → logprob: -4.511050224304199
    3. 'input' → logprob: -13.3860502243042
    4. '[list' → logprob: -15.3860502243042
    5. 'map' → logprob: -16.136051177978516
    6. '=list' → logprob: -16.136051177978516
    7. '[' → logprob: -16.386051177978516
    8. '	list' → logprob: -16.386051177978516
    9. '   ' → logprob: -16.511051177978516
    10. '(list' → logprob: -16.886051177978516

Token 43: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.023266561329364777
    2. '(' → logprob: -3.773266553878784
    3. '(int' → logprob: -11.023266792297363
    4. '(input' → logprob: -12.898266792297363
    5. '(
' → logprob: -13.398266792297363
    6. '(s' → logprob: -15.648266792297363
    7. '(

' → logprob: -15.898266792297363
    8. ' (' → logprob: -16.523265838623047
    9. '(m' → logprob: -16.773265838623047
    10. '(range' → logprob: -17.023265838623047

Token 44: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008618946187198162
    2. '(' → logprob: -4.7586188316345215
    3. '(str' → logprob: -13.75861930847168
    4. '(input' → logprob: -13.75861930847168
    5. '(
' → logprob: -14.63361930847168
    6. '<int' → logprob: -14.63361930847168
    7. '[int' → logprob: -15.13361930847168
    8. ' (' → logprob: -15.25861930847168
    9. '=int' → logprob: -15.50861930847168
    10. 'int' → logprob: -15.88361930847168

Token 45: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.7193949818611145
    2. ',input' → logprob: -0.8443949818611145
    3. ',' → logprob: -2.5943949222564697
    4. '(' → logprob: -4.844395160675049
    5. 'input' → logprob: -8.21939468383789
    6. ' ,' → logprob: -8.46939468383789
    7. ' input' → logprob: -10.46939468383789
    8. '(
' → logprob: -10.84439468383789
    9. '(),' → logprob: -11.09439468383789
    10. '=input' → logprob: -12.46939468383789

Token 46: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12694522738456726
    2. ' input' → logprob: -2.1269452571868896
    3. '(input' → logprob: -11.876945495605469
    4. ',input' → logprob: -12.376945495605469
    5. ')' → logprob: -13.376945495605469
    6. '	input' → logprob: -13.876945495605469
    7. ' ' → logprob: -14.001945495605469
    8. '<input' → logprob: -14.126945495605469
    9. '=input' → logprob: -14.251945495605469
    10. '   ' → logprob: -14.751945495605469

Token 47: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.723973582556937e-05
    2. '()' → logprob: -11.000017166137695
    3. ' ().' → logprob: -15.125017166137695
    4. '(' → logprob: -16.125017166137695
    5. ')' → logprob: -16.875017166137695
    6. '()))' → logprob: -17.875017166137695
    7. '()
' → logprob: -18.375017166137695
    8. '.' → logprob: -18.500017166137695
    9. '())' → logprob: -18.625017166137695
    10. '('').' → logprob: -18.875017166137695

Token 48: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011897491058334708
    2. 'strip' → logprob: -6.751189708709717
    3. ' split' → logprob: -11.251190185546875
    4. 'rstrip' → logprob: -12.251190185546875
    5. '(split' → logprob: -13.501190185546875
    6. 'spl' → logprob: -15.751190185546875
    7. 's' → logprob: -16.001190185546875
    8. ')' → logprob: -16.751190185546875
    9. ' ' → logprob: -17.126190185546875
    10. 'sp' → logprob: -18.376190185546875

Token 49: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0571071058511734
    2. '())' → logprob: -3.3071072101593018
    3. '()' → logprob: -4.557106971740723
    4. '))' → logprob: -4.932106971740723
    5. '(' → logprob: -7.307106971740723
    6. ')' → logprob: -8.307106971740723
    7. '())))' → logprob: -8.557106971740723
    8. '()))
' → logprob: -10.307106971740723
    9. ')))' → logprob: -11.057106971740723
    10. '()));' → logprob: -11.682106971740723

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5805840492248535
    2. 'a' → logprob: -0.8305840492248535
    3. '
' → logprob: -6.3305840492248535
    4. '<|end|>' → logprob: -6.3305840492248535
    5. ' a' → logprob: -7.9555840492248535
    6. '    
' → logprob: -8.080583572387695
    7. '```' → logprob: -9.205583572387695
    8. ')' → logprob: -9.205583572387695
    9. ' ' → logprob: -9.955583572387695
    10. '	a' → logprob: -10.330583572387695

Token 51: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.03515557199716568
    2. '   ' → logprob: -3.4101555347442627
    3. ' a' → logprob: -6.535155773162842
    4. ' ' → logprob: -10.660155296325684
    5. '<|end|>' → logprob: -11.410155296325684
    6. '    
' → logprob: -12.410155296325684
    7. '	a' → logprob: -12.410155296325684
    8. '
' → logprob: -12.410155296325684
    9. ')' → logprob: -13.285155296325684
    10. '  ' → logprob: -13.285155296325684

Token 52: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5761255621910095
    2. '.' → logprob: -0.8261255621910095
    3. '.app' → logprob: -9.201125144958496
    4. '.extend' → logprob: -9.826125144958496
    5. ' .' → logprob: -11.576125144958496
    6. '.ap' → logprob: -11.701125144958496
    7. '.push' → logprob: -12.326125144958496
    8. '.Append' → logprob: -13.326125144958496
    9. '​.' → logprob: -13.326125144958496
    10. '.p' → logprob: -13.576125144958496

Token 53: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0788913294672966
    2. '(' → logprob: -2.5788912773132324
    3. '(
' → logprob: -14.95389175415039
    4. '(rows' → logprob: -15.20389175415039
    5. '(line' → logprob: -15.32889175415039
    6. ' (' → logprob: -15.57889175415039
    7. '((' → logprob: -15.95389175415039
    8. '(a' → logprob: -15.95389175415039
    9. '(

' → logprob: -16.57889175415039
    10. '(column' → logprob: -16.70389175415039

Token 54: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023202638840302825
    2. '))' → logprob: -8.375231742858887
    3. ')
' → logprob: -14.000231742858887
    4. ' )' → logprob: -15.250231742858887
    5. ')))' → logprob: -15.500231742858887
    6. ')`' → logprob: -17.875232696533203
    7. '`)' → logprob: -18.125232696533203
    8. ')a' → logprob: -18.250232696533203
    9. '   ' → logprob: -18.875232696533203
    10. '])' → logprob: -19.125232696533203

Token 55: 'A' (ID: 32)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4773566722869873
    2. 'max' → logprob: -1.7273566722869873
    3. 'for' → logprob: -2.2273566722869873
    4. 's' → logprob: -3.4773566722869873
    5. 'sum' → logprob: -4.102356910705566
    6. 'print' → logprob: -4.727356910705566
    7. 'a' → logprob: -4.727356910705566
    8. 'b' → logprob: -5.477356910705566
    9. 'r' → logprob: -5.727356910705566
    10. '#' → logprob: -5.852356910705566

Token 56: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09590180218219757
    2. '.' → logprob: -3.0959017276763916
    3. '[i' → logprob: -4.345901966094971
    4. '[n' → logprob: -4.720901966094971
    5. '[:]' → logprob: -5.595901966094971
    6. ')' → logprob: -6.220901966094971
    7. 'verage' → logprob: -6.345901966094971
    8. '[len' → logprob: -6.470901966094971
    9. '[::-' → logprob: -6.970901966094971
    10. '[int' → logprob: -6.970901966094971

Token 57: ' [[' (ID: 9237)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.9309114813804626
    2. 'a' → logprob: -1.3059115409851074
    3. ' a' → logprob: -1.5559115409851074
    4. ' []' → logprob: -2.5559115409851074
    5. '[' → logprob: -3.8059115409851074
    6. '[]' → logprob: -4.805911540985107
    7. '[a' → logprob: -4.930911540985107
    8. ' sum' → logprob: -6.680911540985107
    9. 'sum' → logprob: -6.805911540985107
    10. ' [[' → logprob: -7.055911540985107

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00387121201492846
    2. ' ' → logprob: -6.503871440887451
    3. 'a' → logprob: -6.753871440887451
    4. 'False' → logprob: -7.878871440887451
    5. 'int' → logprob: -8.128870964050293
    6. '1' → logprob: -8.628870964050293
    7. ' a' → logprob: -9.503870964050293
    8. 'row' → logprob: -10.003870964050293
    9. ' False' → logprob: -10.628870964050293
    10. ' int' → logprob: -10.628870964050293

Token 59: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0962882861495018
    2. ']' → logprob: -2.8462882041931152
    3. 'for' → logprob: -4.096288204193115
    4. ']*' → logprob: -4.471288204193115
    5. ' ]' → logprob: -5.346288204193115
    6. ' ' → logprob: -7.471288204193115
    7. ']*(' → logprob: -9.596288681030273
    8. '	for' → logprob: -9.721288681030273
    9. ')' → logprob: -9.721288681030273
    10. ',' → logprob: -9.971288681030273

Token 60: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018476033583283424
    2. 'len' → logprob: -4.2684760093688965
    3. ' n' → logprob: -5.8934760093688965
    4. 'm' → logprob: -7.0184760093688965
    5. '(n' → logprob: -8.393476486206055
    6. ' len' → logprob: -8.893476486206055
    7. '10' → logprob: -9.518476486206055
    8. '5' → logprob: -10.143476486206055
    9. '(len' → logprob: -10.268476486206055
    10. '100' → logprob: -10.393476486206055

Token 61: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11293891072273254
    2. 'for' → logprob: -2.23793888092041
    3. ']' → logprob: -9.61293888092041
    4. ')' → logprob: -10.73793888092041
    5. ' ' → logprob: -11.73793888092041
    6. '	for' → logprob: -11.86293888092041
    7. ' ]' → logprob: -12.23793888092041
    8. '```' → logprob: -12.73793888092041
    9. '   ' → logprob: -13.48793888092041
    10. 'n' → logprob: -14.61293888092041

Token 62: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.017577918246388435
    2. '_' → logprob: -4.767578125
    3. ' _' → logprob: -5.517578125
    4. 'range' → logprob: -5.892578125
    5. ' ' → logprob: -6.392578125
    6. '<|end|>' → logprob: -8.767578125
    7. '_range' → logprob: -9.142578125
    8. ' in' → logprob: -9.642578125
    9. ' i' → logprob: -10.142578125
    10. ' n' → logprob: -10.142578125

Token 63: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004074354947078973
    2. 'in' → logprob: -8.125407218933105
    3. ' range' → logprob: -9.250407218933105
    4. '(range' → logprob: -11.875407218933105
    5. ' in' → logprob: -12.500407218933105
    6. 'a' → logprob: -12.625407218933105
    7. '	range' → logprob: -15.125407218933105
    8. 'A' → logprob: -15.375407218933105
    9. 'row' → logprob: -15.625407218933105
    10. 'n' → logprob: -15.750407218933105

Token 64: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024758970830589533
    2. ' range' → logprob: -6.002475738525391
    3. '(range' → logprob: -15.62747573852539
    4. 'a' → logprob: -17.00247573852539
    5. '	range' → logprob: -17.75247573852539
    6. 'rang' → logprob: -19.25247573852539
    7. 'n' → logprob: -19.37747573852539
    8. '[' → logprob: -19.75247573852539
    9. ' ' → logprob: -19.75247573852539
    10. ')' → logprob: -20.25247573852539

Token 65: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00012356207298580557
    2. '(' → logprob: -9.000123977661133
    3. 'n' → logprob: -16.500123977661133
    4. ' (' → logprob: -16.875123977661133
    5. '(
' → logprob: -18.625123977661133
    6. ' n' → logprob: -20.125123977661133
    7. '(len' → logprob: -20.375123977661133
    8. '(s' → logprob: -20.875123977661133
    9. '(

' → logprob: -21.000123977661133
    10. '(N' → logprob: -21.125123977661133

Token 66: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00023596010578330606
    2. ')' → logprob: -8.375235557556152
    3. ']' → logprob: -12.375235557556152
    4. ')]
' → logprob: -14.500235557556152
    5. '))' → logprob: -16.00023651123047
    6. ')])' → logprob: -16.12523651123047
    7. ')][' → logprob: -16.37523651123047
    8. ')],' → logprob: -16.37523651123047
    9. ' )' → logprob: -16.62523651123047
    10. ')]

' → logprob: -16.75023651123047

Token 67: 'Al' (ID: 2348)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00044771170360036194
    2. ' for' → logprob: -7.750447750091553
    3. '
' → logprob: -11.625447273254395
    4. '<|end|>' → logprob: -12.125447273254395
    5. '```' → logprob: -13.250447273254395
    6. 'i' → logprob: -15.125447273254395
    7. 's' → logprob: -15.125447273254395
    8. 'n' → logprob: -16.25044822692871
    9. '#' → logprob: -16.87544822692871
    10. '	for' → logprob: -17.12544822692871

Token 68: ' =' (ID: 314)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -1.4949489831924438
    2. 't' → logprob: -1.6199489831924438
    3. 'l' → logprob: -1.6199489831924438
    4. '[i' → logprob: -2.2449488639831543
    5. '=' → logprob: -2.8699488639831543
    6. 'i' → logprob: -3.2449488639831543
    7. '[' → logprob: -3.2449488639831543
    8. ' =' → logprob: -3.6199488639831543
    9. 'L' → logprob: -3.7449488639831543
    10. '[-' → logprob: -3.7449488639831543

Token 69: ' [[' (ID: 9237)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7288526892662048
    2. '[' → logprob: -1.7288527488708496
    3. '[n' → logprob: -1.8538527488708496
    4. ' [[' → logprob: -3.3538527488708496
    5. ' []' → logprob: -3.7288527488708496
    6. '[[' → logprob: -3.8538527488708496
    7. 'n' → logprob: -3.8538527488708496
    8. '[a' → logprob: -4.10385274887085
    9. '[]' → logprob: -4.22885274887085
    10. ' n' → logprob: -4.22885274887085

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002072357019642368
    2. 'False' → logprob: -8.75020694732666
    3. ' ' → logprob: -11.00020694732666
    4. 'n' → logprob: -11.50020694732666
    5. '1' → logprob: -12.00020694732666
    6. ']' → logprob: -12.37520694732666
    7. 'True' → logprob: -13.00020694732666
    8. '(' → logprob: -13.81270694732666
    9. '   ' → logprob: -14.12520694732666
    10. 'a' → logprob: -14.18770694732666

Token 71: ']*(' (ID: 92627)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.00029756641015410423
    2. ')*' → logprob: -8.875297546386719
    3. '*n' → logprob: -9.125297546386719
    4. ']' → logprob: -10.375297546386719
    5. ']*(' → logprob: -11.375297546386719
    6. '(n' → logprob: -13.250297546386719
    7. ' for' → logprob: -13.500297546386719
    8. ')]' → logprob: -14.125297546386719
    9. '*' → logprob: -14.500297546386719
    10. ' ]' → logprob: -14.750297546386719

Token 72: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009183725342154503
    2. 'i' → logprob: -4.759183883666992
    3. '(n' → logprob: -8.509183883666992
    4. 'j' → logprob: -9.509183883666992
    5. '3' → logprob: -9.634183883666992
    6. '2' → logprob: -9.759183883666992
    7. '(i' → logprob: -10.134183883666992
    8. ' n' → logprob: -10.384183883666992
    9. 'len' → logprob: -10.384183883666992
    10. '1' → logprob: -11.759183883666992

Token 73: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10751345008611679
    2. '-' → logprob: -3.232513427734375
    3. ')]' → logprob: -3.232513427734375
    4. ')' → logprob: -4.232513427734375
    5. '-n' → logprob: -5.732513427734375
    6. '//' → logprob: -6.107513427734375
    7. '*' → logprob: -6.982513427734375
    8. 'n' → logprob: -7.232513427734375
    9. '*n' → logprob: -8.107513427734375
    10. '+n' → logprob: -8.357513427734375

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005364707321859896
    2. '2' → logprob: -7.6255364418029785
    3. ' ' → logprob: -10.625536918640137
    4. '-' → logprob: -11.875536918640137
    5. 'n' → logprob: -11.875536918640137
    6. ')' → logprob: -12.250536918640137
    7. '0' → logprob: -13.000536918640137
    8. '   ' → logprob: -13.750536918640137
    9. '3' → logprob: -14.875536918640137
    10. '```' → logprob: -15.188036918640137

Token 75: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00035488870344124734
    2. ')]' → logprob: -8.125354766845703
    3. ' )' → logprob: -10.250354766845703
    4. '[' → logprob: -11.750354766845703
    5. ')[' → logprob: -13.000354766845703
    6. ')n' → logprob: -13.000354766845703
    7. ')][' → logprob: -13.250354766845703
    8. 'for' → logprob: -13.750354766845703
    9. '))' → logprob: -13.750354766845703
    10. ']' → logprob: -13.750354766845703

Token 76: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012017777189612389
    2. 'for' → logprob: -7.251201629638672
    3. ' for' → logprob: -8.501201629638672
    4. ')]' → logprob: -9.126201629638672
    5. ')[' → logprob: -9.751201629638672
    6. ' )' → logprob: -10.126201629638672
    7. '[' → logprob: -10.501201629638672
    8. ')*' → logprob: -11.126201629638672
    9. '[n' → logprob: -11.501201629638672
    10. ')n' → logprob: -11.751201629638672

Token 77: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4575307369232178
    2. '_' → logprob: -1.0825307369232178
    3. ' range' → logprob: -4.332530975341797
    4. ' in' → logprob: -4.332530975341797
    5. ' i' → logprob: -6.582530975341797
    6. 'range' → logprob: -8.082530975341797
    7. '_range' → logprob: -8.832530975341797
    8. ' ' → logprob: -8.832530975341797
    9. '<|end|>' → logprob: -9.332530975341797
    10. 'in' → logprob: -11.082530975341797

Token 78: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2035422921180725
    2. 'range' → logprob: -1.7035422325134277
    3. ' in' → logprob: -6.203542232513428
    4. '_' → logprob: -9.453542709350586
    5. '_range' → logprob: -11.203542709350586
    6. 'in' → logprob: -12.453542709350586
    7. ' _' → logprob: -12.703542709350586
    8. '(range' → logprob: -12.828542709350586
    9. '	range' → logprob: -13.203542709350586
    10. '<|end|>' → logprob: -15.203542709350586

Token 79: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008614808320999146
    2. 'range' → logprob: -4.758615016937256
    3. '(range' → logprob: -16.508615493774414
    4. '_' → logprob: -17.508615493774414
    5. '	range' → logprob: -17.883615493774414
    6. '_range' → logprob: -18.008615493774414
    7. ' rang' → logprob: -20.008615493774414
    8. ' ' → logprob: -20.508615493774414
    9. ' xrange' → logprob: -20.758615493774414
    10. '[' → logprob: -20.758615493774414

Token 80: '(n' (ID: 2406)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.16122600436210632
    2. '(n' → logprob: -2.2862260341644287
    3. 'range' → logprob: -3.7862260341644287
    4. ' range' → logprob: -3.7862260341644287
    5. '(' → logprob: -6.28622579574585
    6. '(r' → logprob: -12.036226272583008
    7. '	range' → logprob: -12.161226272583008
    8. ' (' → logprob: -12.536226272583008
    9. '_range' → logprob: -12.536226272583008
    10. 'n' → logprob: -12.911226272583008

Token 81: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.550411151489243e-05
    2. ')]' → logprob: -9.875055313110352
    3. ')' → logprob: -13.375055313110352
    4. ' +' → logprob: -13.875055313110352
    5. '+
' → logprob: -14.375055313110352
    6. 'n' → logprob: -15.875055313110352
    7. ')])' → logprob: -16.00005531311035
    8. '+n' → logprob: -16.12505531311035
    9. '+)' → logprob: -16.50005531311035
    10. '1' → logprob: -16.87505531311035

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.513339445111342e-05
    2. '2' → logprob: -10.750044822692871
    3. ' ' → logprob: -11.250044822692871
    4. '(' → logprob: -12.500044822692871
    5. '+' → logprob: -13.250044822692871
    6. '0' → logprob: -13.375044822692871
    7. ')' → logprob: -13.625044822692871
    8. '```' → logprob: -14.875044822692871
    9. ')]' → logprob: -14.875044822692871
    10. ')])' → logprob: -15.000044822692871

Token 83: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.014684110297821e-06
    2. ']' → logprob: -12.500008583068848
    3. ')' → logprob: -12.750008583068848
    4. ')]
' → logprob: -14.125008583068848
    5. ')][' → logprob: -15.000008583068848
    6. ')],' → logprob: -15.250008583068848
    7. '])]' → logprob: -15.625008583068848
    8. ')]

' → logprob: -15.875008583068848
    9. ')])' → logprob: -16.000009536743164
    10. '')]' → logprob: -16.000009536743164

Token 84: 'Ar' (ID: 2326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008535855449736118
    2. 'i' → logprob: -7.250853538513184
    3. ' for' → logprob: -9.125853538513184
    4. '```' → logprob: -12.000853538513184
    5. 'f' → logprob: -12.125853538513184
    6. 'a' → logprob: -12.125853538513184
    7. 'n' → logprob: -12.250853538513184
    8. '#' → logprob: -12.250853538513184
    9. 'A' → logprob: -12.875853538513184
    10. ']' → logprob: -14.375853538513184

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31001508235931396
    2. '=' → logprob: -1.435015082359314
    3. '[' → logprob: -4.3100152015686035
    4. '=[[' → logprob: -4.4350152015686035
    5. '[[' → logprob: -6.4350152015686035
    6. '=[' → logprob: -7.0600152015686035
    7. 'l' → logprob: -8.185014724731445
    8. '[][]' → logprob: -9.560014724731445
    9. ' [[' → logprob: -9.810014724731445
    10. '[i' → logprob: -9.935014724731445

Token 86: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0003398726985324174
    2. ' [[' → logprob: -8.00033950805664
    3. '[' → logprob: -12.50033950805664
    4. '([[' → logprob: -15.00033950805664
    5. '[n' → logprob: -15.87533950805664
    6. 'A' → logprob: -17.00033950805664
    7. 'a' → logprob: -17.37533950805664
    8. '0' → logprob: -17.37533950805664
    9. '[a' → logprob: -18.00033950805664
    10. 'Al' → logprob: -18.12533950805664

Token 87: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00716489227488637
    2. '(n' → logprob: -5.00716495513916
    3. 'n' → logprob: -7.88216495513916
    4. '(' → logprob: -10.25716495513916
    5. '[n' → logprob: -10.63216495513916
    6. ' (' → logprob: -12.00716495513916
    7. '[' → logprob: -12.75716495513916
    8. ' ' → logprob: -13.75716495513916
    9. ' n' → logprob: -14.63216495513916
    10. '
' → logprob: -14.88216495513916

Token 88: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.00711493706330657
    2. '*(' → logprob: -5.007114887237549
    3. ']*' → logprob: -8.507115364074707
    4. ']' → logprob: -8.757115364074707
    5. '(n' → logprob: -10.507115364074707
    6. '[n' → logprob: -11.632115364074707
    7. ')*(' → logprob: -13.632115364074707
    8. '](' → logprob: -13.757115364074707
    9. '*' → logprob: -14.132115364074707
    10. '][' → logprob: -15.382115364074707

Token 89: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003473825636319816
    2. '(n' → logprob: -8.000347137451172
    3. ' n' → logprob: -11.875347137451172
    4. '2' → logprob: -12.875347137451172
    5. '(' → logprob: -14.000347137451172
    6. ')n' → logprob: -14.500347137451172
    7. '1' → logprob: -14.875347137451172
    8. '[n' → logprob: -15.875347137451172
    9. '+' → logprob: -15.875347137451172
    10. '0' → logprob: -16.375347137451172

Token 90: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.15441757265944e-05
    2. '+
' → logprob: -11.000031471252441
    3. ' +' → logprob: -12.500031471252441
    4. ')' → logprob: -12.875031471252441
    5. '+n' → logprob: -13.125031471252441
    6. '+

' → logprob: -13.500031471252441
    7. 'n' → logprob: -14.125031471252441
    8. ')]' → logprob: -14.125031471252441
    9. '-' → logprob: -14.500031471252441
    10. '+)' → logprob: -14.750031471252441

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012332366895861924
    2. '2' → logprob: -9.875123023986816
    3. 'n' → logprob: -10.000123023986816
    4. ' ' → logprob: -11.500123023986816
    5. '+' → logprob: -12.375123023986816
    6. '(n' → logprob: -12.500123023986816
    7. ')' → logprob: -12.875123023986816
    8. '(' → logprob: -13.625123023986816
    9. '```' → logprob: -13.875123023986816
    10. '-' → logprob: -14.625123023986816

Token 92: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010127831774298102
    2. 'for' → logprob: -9.500101089477539
    3. ' )' → logprob: -11.500101089477539
    4. ']' → logprob: -12.750101089477539
    5. ')]' → logprob: -12.875101089477539
    6. ')[' → logprob: -13.000101089477539
    7. 'n' → logprob: -13.375101089477539
    8. ' for' → logprob: -13.375101089477539
    9. ')
' → logprob: -13.500101089477539
    10. ')(' → logprob: -13.875101089477539

Token 93: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47409558296203613
    2. ' for' → logprob: -0.9740955829620361
    3. ')' → logprob: -11.349095344543457
    4. ' ' → logprob: -13.099095344543457
    5. '[' → logprob: -13.224095344543457
    6. '	for' → logprob: -13.724095344543457
    7. '
' → logprob: -14.599095344543457
    8. '   ' → logprob: -14.974095344543457
    9. ']' → logprob: -15.099095344543457
    10. 'n' → logprob: -15.599095344543457

Token 94: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.03015759587287903
    2. '_' → logprob: -3.5301575660705566
    3. ' range' → logprob: -8.030158042907715
    4. '_range' → logprob: -10.155158042907715
    5. ' ' → logprob: -11.280158042907715
    6. '<|end|>' → logprob: -11.530158042907715
    7. 'range' → logprob: -11.655158042907715
    8. ' in' → logprob: -11.905158042907715
    9. ' (' → logprob: -13.530158042907715
    10. '(range' → logprob: -14.405158042907715

Token 95: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20152443647384644
    2. ' range' → logprob: -1.7015244960784912
    3. '(range' → logprob: -9.20152473449707
    4. ' in' → logprob: -11.95152473449707
    5. '_range' → logprob: -13.95152473449707
    6. 'in' → logprob: -13.95152473449707
    7. '	range' → logprob: -14.32652473449707
    8. 'rang' → logprob: -14.45152473449707
    9. '_' → logprob: -15.07652473449707
    10. '(' → logprob: -15.82652473449707

Token 96: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4742486774921417
    2. ' range' → logprob: -0.9742486476898193
    3. '(range' → logprob: -8.724248886108398
    4. '(n' → logprob: -11.724248886108398
    5. 'rang' → logprob: -15.099248886108398
    6. '_range' → logprob: -15.349248886108398
    7. '	range' → logprob: -15.349248886108398
    8. 'n' → logprob: -16.7242488861084
    9. '(' → logprob: -17.0992488861084
    10. '[n' → logprob: -17.2242488861084

Token 97: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.016121642664074898
    2. ' (' → logprob: -4.141121864318848
    3. 'n' → logprob: -10.391121864318848
    4. '(' → logprob: -10.516121864318848
    5. 'range' → logprob: -10.766121864318848
    6. ' range' → logprob: -12.641121864318848
    7. '(range' → logprob: -12.766121864318848
    8. ' n' → logprob: -13.641121864318848
    9. ')' → logprob: -15.391121864318848
    10. ' ' → logprob: -15.641121864318848

Token 98: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00016444525681436062
    2. ')]' → logprob: -8.875164031982422
    3. ' +' → logprob: -11.500164031982422
    4. ')' → logprob: -12.000164031982422
    5. 'n' → logprob: -13.625164031982422
    6. '+
' → logprob: -13.750164031982422
    7. ')])' → logprob: -13.750164031982422
    8. '1' → logprob: -14.125164031982422
    9. ')]
' → logprob: -14.125164031982422
    10. ')][' → logprob: -14.500164031982422

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. '+' → logprob: -11.500015258789062
    3. 'n' → logprob: -13.000015258789062
    4. ')' → logprob: -13.500015258789062
    5. ')]' → logprob: -14.875015258789062
    6. ' ' → logprob: -15.000015258789062
    7. ')])' → logprob: -15.375015258789062
    8. '(n' → logprob: -15.625015258789062
    9. '(' → logprob: -16.125015258789062
    10. '```' → logprob: -16.375015258789062

Token 100: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00022976152831688523
    2. ']' → logprob: -8.500229835510254
    3. ')' → logprob: -10.625229835510254
    4. ')],' → logprob: -14.000229835510254
    5. '])]' → logprob: -15.125229835510254
    6. ')]
' → logprob: -15.625229835510254
    7. '')]' → logprob: -15.750229835510254
    8. ')])' → logprob: -16.000228881835938
    9. ')][' → logprob: -16.125228881835938
    10. ')]

' → logprob: -16.250228881835938

Token 101: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.215330409351736e-05
    2. ' for' → logprob: -10.125041961669922
    3. 'i' → logprob: -14.125041961669922
    4. '
' → logprob: -14.875041961669922
    5. '```' → logprob: -15.000041961669922
    6. '#' → logprob: -15.375041961669922
    7. 'f' → logprob: -16.000041961669922
    8. 'n' → logprob: -16.250041961669922
    9. 'r' → logprob: -17.375041961669922
    10. 'a' → logprob: -18.000041961669922

Token 102: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.024564478546380997
    2. 'i' → logprob: -3.774564504623413
    3. ' _' → logprob: -6.899564266204834
    4. ' ' → logprob: -8.649564743041992
    5. '_' → logprob: -9.149564743041992
    6. '_i' → logprob: -11.649564743041992
    7. '	i' → logprob: -11.899564743041992
    8. ' r' → logprob: -12.274564743041992
    9. ' ' → logprob: -12.899564743041992
    10. ')' → logprob: -13.774564743041992

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008668344467878342
    2. 'in' → logprob: -4.758668422698975
    3. ' ' → logprob: -10.008667945861816
    4. 'n' → logprob: -12.133667945861816
    5. ' i' → logprob: -14.508667945861816
    6. '	in' → logprob: -14.633667945861816
    7. 'range' → logprob: -14.883667945861816
    8. 's' → logprob: -15.258667945861816
    9. '  ' → logprob: -15.508667945861816
    10. ')' → logprob: -15.633667945861816

Token 104: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.001170460251159966
    2. 'range' → logprob: -6.751170635223389
    3. ' ' → logprob: -15.87617015838623
    4. '	range' → logprob: -17.126171112060547
    5. ' in' → logprob: -18.126171112060547
    6. ' r' → logprob: -18.126171112060547
    7. ' xrange' → logprob: -18.501171112060547
    8. '(range' → logprob: -18.501171112060547
    9. ' ' → logprob: -18.876171112060547
    10. ')' → logprob: -19.251171112060547

Token 105: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011068690568208694
    2. '(' → logprob: -4.511068820953369
    3. ' (' → logprob: -10.886068344116211
    4. ' n' → logprob: -13.511068344116211
    5. '(
' → logprob: -14.261068344116211
    6. 'n' → logprob: -15.761068344116211
    7. '(s' → logprob: -17.63606834411621
    8. '(i' → logprob: -17.76106834411621
    9. '(

' → logprob: -18.13606834411621
    10. ' ' → logprob: -18.38606834411621

Token 106: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001983948517590761
    2. '):
' → logprob: -6.251984119415283
    3. ':' → logprob: -11.001983642578125
    4. ' ):' → logprob: -11.376983642578125
    5. ')' → logprob: -11.501983642578125
    6. '-' → logprob: -12.126983642578125
    7. 'n' → logprob: -12.376983642578125
    8. '+' → logprob: -12.501983642578125
    9. '):
' → logprob: -14.251983642578125
    10. '   ' → logprob: -14.376983642578125

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5566869378089905
    2. ' for' → logprob: -0.9316869378089905
    3. 'for' → logprob: -3.4316868782043457
    4. '<|end|>' → logprob: -7.806686878204346
    5. '	for' → logprob: -8.806687355041504
    6. ' range' → logprob: -10.431687355041504
    7. ' ' → logprob: -10.681687355041504
    8. '```' → logprob: -11.181687355041504
    9. 'range' → logprob: -11.681687355041504
    10. '   ' → logprob: -11.806687355041504

Token 108: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.15083013474941254
    2. ' for' → logprob: -2.025830030441284
    3. '   ' → logprob: -4.900830268859863
    4. 'range' → logprob: -7.775830268859863
    5. ' range' → logprob: -9.025830268859863
    6. 'j' → logprob: -9.775830268859863
    7. ' j' → logprob: -10.275830268859863
    8. ' ' → logprob: -10.275830268859863
    9. '	for' → logprob: -12.400830268859863
    10. '```' → logprob: -12.775830268859863

Token 109: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.025674814358353615
    2. ' j' → logprob: -4.275674819946289
    3. 'range' → logprob: -4.525674819946289
    4. 'j' → logprob: -7.400674819946289
    5. '(range' → logprob: -12.900674819946289
    6. ' ' → logprob: -13.900674819946289
    7. ' in' → logprob: -14.025674819946289
    8. '<|end|>' → logprob: -14.025674819946289
    9. ' xrange' → logprob: -14.525674819946289
    10. ' n' → logprob: -14.775674819946289

Token 110: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020631814375519753
    2. 'in' → logprob: -3.895631790161133
    3. ' ' → logprob: -9.895631790161133
    4. '(' → logprob: -11.895631790161133
    5. '   ' → logprob: -12.020631790161133
    6. '	in' → logprob: -12.520631790161133
    7. '<|end|>' → logprob: -12.895631790161133
    8. '+' → logprob: -12.895631790161133
    9. 'n' → logprob: -13.270631790161133
    10. '(n' → logprob: -13.395631790161133

Token 111: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1611216962337494
    2. 'range' → logprob: -1.9111217260360718
    3. '(range' → logprob: -7.036121845245361
    4. '(' → logprob: -11.786121368408203
    5. '(n' → logprob: -11.786121368408203
    6. '	range' → logprob: -14.036121368408203
    7. ')' → logprob: -14.286121368408203
    8. 'n' → logprob: -15.036121368408203
    9. ' (' → logprob: -15.661121368408203
    10. ' xrange' → logprob: -16.286121368408203

Token 112: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0008172504603862762
    2. '(' → logprob: -7.12581729888916
    3. '(i' → logprob: -11.62581729888916
    4. 'n' → logprob: -13.25081729888916
    5. ' (' → logprob: -14.25081729888916
    6. '(j' → logprob: -14.50081729888916
    7. '(
' → logprob: -15.37581729888916
    8. '((' → logprob: -15.37581729888916
    9. '(range' → logprob: -15.62581729888916
    10. 'range' → logprob: -16.250816345214844

Token 113: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001907693105749786
    2. '):
' → logprob: -6.376907825469971
    3. '+' → logprob: -9.001907348632812
    4. ')' → logprob: -10.376907348632812
    5. ':' → logprob: -10.626907348632812
    6. '   ' → logprob: -11.126907348632812
    7. '-' → logprob: -13.001907348632812
    8. ' ):' → logprob: -13.251907348632812
    9. '():' → logprob: -13.376907348632812
    10. 'n' → logprob: -13.501907348632812

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007365372031927109
    2. 'A' → logprob: -5.8823652267456055
    3. ' if' → logprob: -6.0073652267456055
    4. ' A' → logprob: -7.3823652267456055
    5. 'if' → logprob: -7.3823652267456055
    6. '   ' → logprob: -8.007365226745605
    7. 'a' → logprob: -8.632365226745605
    8. ' a' → logprob: -9.257365226745605
    9. ':' → logprob: -9.757365226745605
    10. '        
' → logprob: -10.882365226745605

Token 115: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.025618573650717735
    2. 'if' → logprob: -4.150618553161621
    3. '       ' → logprob: -5.275618553161621
    4. ' A' → logprob: -6.275618553161621
    5. '           ' → logprob: -6.650618553161621
    6. ' if' → logprob: -7.150618553161621
    7. 'x' → logprob: -8.900618553161621
    8. 'a' → logprob: -9.025618553161621
    9. '   ' → logprob: -9.650618553161621
    10. 'val' → logprob: -10.650618553161621

Token 116: ' Je' (ID: 4678)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.31235259771347046
    2. 'if' → logprob: -1.6873526573181152
    3. ' A' → logprob: -3.5623526573181152
    4. ' if' → logprob: -3.6873526573181152
    5. 'val' → logprob: -3.9373526573181152
    6. '       ' → logprob: -5.937352657318115
    7. 'value' → logprob: -6.437352657318115
    8. 'x' → logprob: -6.812352657318115
    9. ' val' → logprob: -6.812352657318115
    10. '   ' → logprob: -6.812352657318115

Token 117: ' ne' (ID: 453)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5279629826545715
    2. 'f' → logprob: -1.0279629230499268
    3. 'A' → logprob: -4.152963161468506
    4. ' if' → logprob: -4.277963161468506
    5. ' A' → logprob: -4.652963161468506
    6. 't' → logprob: -6.152963161468506
    7. 's' → logprob: -6.152963161468506
    8. 'continue' → logprob: -6.527963161468506
    9. 'for' → logprob: -7.027963161468506
    10. '   ' → logprob: -7.027963161468506

Token 118: ' comprends' (ID: 145804)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5398719906806946
    2. 's' → logprob: -1.2898719310760498
    3. 'veux' → logprob: -2.66487193107605
    4. '       ' → logprob: -4.789872169494629
    5. ' if' → logprob: -4.914872169494629
    6. 'voud' → logprob: -5.039872169494629
    7. ' peux' → logprob: -5.164872169494629
    8. 'continue' → logprob: -5.289872169494629
    9. 'a' → logprob: -5.414872169494629
    10. 'pas' → logprob: -5.539872169494629

Token 119: ' pas' (ID: 2173)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10000389814376831
    2. 'if' → logprob: -2.850003957748413
    3. '       ' → logprob: -4.350003719329834
    4. ' pas' → logprob: -4.975003719329834
    5. '   ' → logprob: -5.475003719329834
    6. '    ' → logprob: -6.100003719329834
    7. '           ' → logprob: -6.100003719329834
    8. 'A' → logprob: -6.600003719329834
    9. 'pas' → logprob: -6.600003719329834
    10. ' A' → logprob: -6.850003719329834

Token 120: ' trop' (ID: 14765)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4187074303627014
    2. ' if' → logprob: -1.5437073707580566
    3. 'if' → logprob: -3.0437073707580566
    4. ':' → logprob: -3.9187073707580566
    5. 'A' → logprob: -4.043707370758057
    6. '<|end|>' → logprob: -4.168707370758057
    7. ' A' → logprob: -5.168707370758057
    8. '           ' → logprob: -5.418707370758057
    9. '   ' → logprob: -5.668707370758057
    10. '#' → logprob: -6.168707370758057

Token 121: ' le' (ID: 505)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0434545278549194
    2. ' if' → logprob: -1.4184545278549194
    3. 'A' → logprob: -1.9184545278549194
    4. 'if' → logprob: -2.043454647064209
    5. ' A' → logprob: -2.543454647064209
    6. ' la' → logprob: -4.918454647064209
    7. ',' → logprob: -5.043454647064209
    8. ' what' → logprob: -5.043454647064209
    9. ' ce' → logprob: -5.168454647064209
    10. '           ' → logprob: -6.043454647064209

Token 122: ' format' (ID: 6011)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07038117945194244
    2. 'A' → logprob: -3.0703811645507812
    3. 'j' → logprob: -4.695381164550781
    4. ' a' → logprob: -5.445381164550781
    5. 'i' → logprob: -6.445381164550781
    6. 'if' → logprob: -6.695381164550781
    7. ')' → logprob: -7.445381164550781
    8. ' A' → logprob: -7.570381164550781
    9. 'n' → logprob: -7.945381164550781
    10. ' j' → logprob: -8.195381164550781

Token 123: ' original' (ID: 4756)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1266260147094727
    2. ':' → logprob: -1.2516260147094727
    3. '   ' → logprob: -1.5016260147094727
    4. 'A' → logprob: -3.6266260147094727
    5. '[' → logprob: -3.6266260147094727
    6. ' ' → logprob: -4.251626014709473
    7. ' if' → logprob: -4.251626014709473
    8. ' :' → logprob: -4.251626014709473
    9. ',' → logprob: -4.626626014709473
    10. 'a' → logprob: -4.751626014709473

Token 124: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8790013790130615
    2. ':' → logprob: -1.5040013790130615
    3. '<|end|>' → logprob: -2.6290013790130615
    4. '   ' → logprob: -2.7540013790130615
    5. ' :' → logprob: -2.7540013790130615
    6. ',' → logprob: -3.2540013790130615
    7. ' if' → logprob: -3.7540013790130615
    8. 'A' → logprob: -3.8790013790130615
    9. ' A' → logprob: -4.254001617431641
    10. ' ,' → logprob: -4.629001617431641

Token 125: ' mais' (ID: 2899)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010479258373379707
    2. '        ' → logprob: -5.13547945022583
    3. ' but' → logprob: -6.13547945022583
    4. '#' → logprob: -7.26047945022583
    5. ' mais' → logprob: -7.38547945022583
    6. '           ' → logprob: -8.135478973388672
    7. '        
' → logprob: -8.385478973388672
    8. '   ' → logprob: -9.760478973388672
    9. '    ' → logprob: -10.010478973388672
    10. 'A' → logprob: -10.010478973388672

Token 126: ' bon' (ID: 4846)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.389209121465683
    2. 'A' → logprob: -1.8892091512680054
    3. 'if' → logprob: -1.8892091512680054
    4. '       ' → logprob: -4.514209270477295
    5. ' A' → logprob: -5.139209270477295
    6. '#' → logprob: -6.764209270477295
    7. ' for' → logprob: -7.389209270477295
    8. 'for' → logprob: -7.389209270477295
    9. '        ' → logprob: -8.139208793640137
    10. 'a' → logprob: -9.264208793640137

Token 127: '...
' (ID: 4908)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4343162178993225
    2. 'A' → logprob: -2.0593161582946777
    3. '           ' → logprob: -2.1843161582946777
    4. ' if' → logprob: -2.6843161582946777
    5. 'if' → logprob: -3.4343161582946777
    6. ' A' → logprob: -4.684316158294678
    7. ' for' → logprob: -7.934316158294678
    8. 'for' → logprob: -8.309316635131836
    9. '        
' → logprob: -8.309316635131836
    10. '            
' → logprob: -8.434316635131836

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15951071679592133
    2. ' if' → logprob: -2.409510612487793
    3. 'A' → logprob: -3.784510612487793
    4. ' A' → logprob: -4.034510612487793
    5. 'if' → logprob: -4.534510612487793
    6. '           ' → logprob: -5.909510612487793
    7. '   ' → logprob: -7.034510612487793
    8. '        
' → logprob: -7.159510612487793
    9. '<|end|>' → logprob: -8.284510612487793
    10. '        ' → logprob: -8.409510612487793

Token 129: ' if' (ID: 538)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2417682260274887
    2. 'if' (adapté à ' if') → logprob: -1.74176824092865
    3. ' if' → logprob: -3.9917681217193604
    4. 'val' → logprob: -4.9917683601379395
    5. ' A' → logprob: -5.1167683601379395
    6. '       ' → logprob: -5.7417683601379395
    7. 'x' → logprob: -6.3667683601379395
    8. '           ' → logprob: -6.6167683601379395
    9. 'value' → logprob: -7.8667683601379395
    10. 'for' → logprob: -7.8667683601379395

Token 130: ' i' (ID: 575)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07294423133134842
    2. 'a' → logprob: -2.697944164276123
    3. ' i' → logprob: -6.072944164276123
    4. ' j' → logprob: -8.447944641113281
    5. 'i' → logprob: -8.947944641113281
    6. ' n' → logprob: -9.572944641113281
    7. ' ' → logprob: -9.697944641113281
    8. ' (' → logprob: -9.822944641113281
    9. 'j' → logprob: -10.447944641113281
    10. ' A' → logprob: -10.572944641113281

Token 131: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.44617554545402527
    2. '==' → logprob: -1.4461755752563477
    3. ' >' → logprob: -2.9461755752563477
    4. ' >=' → logprob: -3.3211755752563477
    5. '>' → logprob: -4.571175575256348
    6. ' <=' → logprob: -4.571175575256348
    7. '>=' → logprob: -4.571175575256348
    8. '<=' → logprob: -5.821175575256348
    9. ' <' → logprob: -7.571175575256348
    10. '+' → logprob: -7.696175575256348

Token 132: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.13041561841964722
    2. 'n' → logprob: -2.755415678024292
    3. ' j' → logprob: -3.005415678024292
    4. ' n' → logprob: -4.880415439605713
    5. '=' → logprob: -6.630415439605713
    6. '=j' → logprob: -8.755415916442871
    7. ' ' → logprob: -10.255415916442871
    8. '=n' → logprob: -11.130415916442871
    9. '	j' → logprob: -11.880415916442871
    10. ' =' → logprob: -12.067915916442871

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021009519696235657
    2. ':
' → logprob: -4.27100944519043
    3. ' and' → logprob: -5.27100944519043
    4. 'and' → logprob: -7.39600944519043
    5. ' :' → logprob: -7.52100944519043
    6. ' or' → logprob: -8.14600944519043
    7. '       ' → logprob: -9.52100944519043
    8. '           ' → logprob: -9.64600944519043
    9. '==' → logprob: -10.64600944519043
    10. '   ' → logprob: -11.27100944519043

Token 134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02295752428472042
    2. 'A' → logprob: -4.0229573249816895
    3. ' A' → logprob: -5.7729573249816895
    4. ':' → logprob: -7.8979573249816895
    5. '       ' → logprob: -8.272957801818848
    6. '               ' → logprob: -8.522957801818848
    7. '0' → logprob: -8.772957801818848
    8. ':
' → logprob: -9.147957801818848
    9. ' continue' → logprob: -9.522957801818848
    10. 'continue' → logprob: -9.647957801818848

Token 135: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.0029337219893932343
    2. ' A' → logprob: -6.252933502197266
    3. '           ' → logprob: -7.002933502197266
    4. '   ' → logprob: -10.377933502197266
    5. '               ' → logprob: -10.877933502197266
    6. 'continue' → logprob: -11.127933502197266
    7. '       ' → logprob: -11.377933502197266
    8. 'if' → logprob: -12.002933502197266
    9. ' continue' → logprob: -12.752933502197266
    10. 'a' → logprob: -13.127933502197266

Token 136: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.4192871175473556e-05
    2. '[I' → logprob: -10.750054359436035
    3. '[' → logprob: -10.875054359436035
    4. 'i' → logprob: -12.375054359436035
    5. '[j' → logprob: -12.500054359436035
    6. '][' → logprob: -13.250054359436035
    7. '[A' → logprob: -13.375054359436035
    8. '\[' → logprob: -14.500054359436035
    9. '[a' → logprob: -15.000054359436035
    10. ' [' → logprob: -15.125054359436035

Token 137: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.17119677364826202
    2. '[i' → logprob: -2.046196699142456
    3. ']' → logprob: -4.421196937561035
    4. '[' → logprob: -4.671196937561035
    5. '[j' → logprob: -5.421196937561035
    6. ' ][' → logprob: -6.171196937561035
    7. ' [' → logprob: -9.671196937561035
    8. '[
' → logprob: -10.171196937561035
    9. 'i' → logprob: -10.796196937561035
    10. '[I' → logprob: -11.046196937561035

Token 138: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00012737659562844783
    2. ' j' → logprob: -9.250127792358398
    3. 'i' → logprob: -10.750127792358398
    4. ']' → logprob: -11.875127792358398
    5. '0' → logprob: -14.250127792358398
    6. '1' → logprob: -14.375127792358398
    7. 'n' → logprob: -14.875127792358398
    8. '   ' → logprob: -15.000127792358398
    9. ' ' → logprob: -15.750127792358398
    10. 'a' → logprob: -15.875127792358398

Token 139: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019797800108790398
    2. ']=' → logprob: -4.6447978019714355
    3. '=' → logprob: -5.0197978019714355
    4. ']+=' → logprob: -5.8947978019714355
    5. ' ]' → logprob: -8.144797325134277
    6. '+=' → logprob: -9.394797325134277
    7. '[' → logprob: -9.519797325134277
    8. ' =' → logprob: -9.519797325134277
    9. '+' → logprob: -10.394797325134277
    10. '-' → logprob: -10.769797325134277

Token 140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011195066384971142
    2. ' =' → logprob: -4.511195182800293
    3. '+=' → logprob: -8.886195182800293
    4. ' +=' → logprob: -12.386195182800293
    5. '=int' → logprob: -14.011195182800293
    6. '=i' → logprob: -14.511195182800293
    7. ')' → logprob: -14.636195182800293
    8. '[' → logprob: -14.761195182800293
    9. '>' → logprob: -14.886195182800293
    10. ']' → logprob: -15.136195182800293

Token 141: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11398206651210785
    2. ' a' → logprob: -3.2389819622039795
    3. 'row' → logprob: -3.2389819622039795
    4. '1' → logprob: -4.238982200622559
    5. '0' → logprob: -5.113982200622559
    6. ' ' → logprob: -5.738982200622559
    7. ' row' → logprob: -5.863982200622559
    8. 'max' → logprob: -7.488982200622559
    9. 'abs' → logprob: -7.613982200622559
    10. '-' → logprob: -7.863982200622559

Token 142: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017752613639459014
    2. '[j' → logprob: -6.50177526473999
    3. '[' → logprob: -8.251774787902832
    4. 'i' → logprob: -12.251774787902832
    5. ' [' → logprob: -13.126774787902832
    6. '[n' → logprob: -13.876774787902832
    7. '[I' → logprob: -14.001774787902832
    8. '[
' → logprob: -14.501774787902832
    9. '```' → logprob: -14.626774787902832
    10. '[s' → logprob: -15.126774787902832

Token 143: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013498765183612704
    2. '[j' → logprob: -6.751349925994873
    3. ']' → logprob: -9.501349449157715
    4. ' ][' → logprob: -9.626349449157715
    5. '[i' → logprob: -10.876349449157715
    6. '[' → logprob: -11.251349449157715
    7. '"][' → logprob: -14.001349449157715
    8. '+' → logprob: -14.376349449157715
    9. ']][' → logprob: -14.688849449157715
    10. '][_' → logprob: -14.751349449157715

Token 144: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.9623810658231378e-05
    2. 'i' → logprob: -11.250020027160645
    3. ']' → logprob: -12.625020027160645
    4. ' j' → logprob: -14.125020027160645
    5. 'a' → logprob: -14.875020027160645
    6. '0' → logprob: -15.000020027160645
    7. '1' → logprob: -15.000020027160645
    8. 'l' → logprob: -15.000020027160645
    9. 'n' → logprob: -15.375020027160645
    10. '
' → logprob: -15.750020027160645

Token 145: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018866941332817078
    2. '+' → logprob: -4.893867015838623
    3. '<|end|>' → logprob: -5.518867015838623
    4. ']+' → logprob: -5.768867015838623
    5. '-' → logprob: -6.518867015838623
    6. ' +' → logprob: -6.893867015838623
    7. ' ]' → logprob: -7.018867015838623
    8. ' -' → logprob: -8.643866539001465
    9. ')' → logprob: -8.768866539001465
    10. ' *' → logprob: -9.893866539001465

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003047186473850161
    2. 'i' → logprob: -8.25030517578125
    3. ' ' → logprob: -10.25030517578125
    4. ' i' → logprob: -12.75030517578125
    5. '   ' → logprob: -13.00030517578125
    6. '0' → logprob: -13.37530517578125
    7. '(i' → logprob: -15.31280517578125
    8. '-' → logprob: -15.37530517578125
    9. '2' → logprob: -16.31280517578125
    10. 'j' → logprob: -16.62530517578125

Token 147: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04208581894636154
    2. '+' → logprob: -3.917085886001587
    3. ']+' → logprob: -4.042085647583008
    4. ' +' → logprob: -6.417085647583008
    5. '<|end|>' → logprob: -6.792085647583008
    6. ' ]' → logprob: -7.417085647583008
    7. ')' → logprob: -8.792085647583008
    8. '-' → logprob: -9.167085647583008
    9. ']
' → logprob: -10.667085647583008
    10. '])' → logprob: -11.167085647583008

Token 148: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9493646621704102
    2. ' else' → logprob: -1.4493646621704102
    3. '<|end|>' → logprob: -1.4493646621704102
    4. 'else' → logprob: -2.19936466217041
    5. '+' → logprob: -4.69936466217041
    6. ' elif' → logprob: -4.82436466217041
    7. ' ' → logprob: -5.44936466217041
    8. 'elif' → logprob: -5.44936466217041
    9. ')' → logprob: -6.07436466217041
    10. '        ' → logprob: -7.07436466217041

Token 149: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.47913581132888794
    2. '<|end|>' → logprob: -1.6041357517242432
    3. ' else' → logprob: -2.354135751724243
    4. 'elif' → logprob: -3.354135751724243
    5. '       ' → logprob: -3.479135751724243
    6. '+' → logprob: -4.979135990142822
    7. ')' → logprob: -5.604135990142822
    8. ' elif' → logprob: -5.729135990142822
    9. '
' → logprob: -6.729135990142822
    10. ' ' → logprob: -6.729135990142822

Token 150: ' je' (ID: 1264)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ' ne' (ID: 453)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.26928067207336426
    2. 'continue' → logprob: -1.7692806720733643
    3. '<|end|>' → logprob: -3.8942806720733643
    4. 's' → logprob: -4.519280433654785
    5. ' ' → logprob: -4.644280433654785
    6. '+' → logprob: -5.394280433654785
    7. '       ' → logprob: -6.019280433654785
    8. 'contin' → logprob: -6.144280433654785
    9. ' +=' → logprob: -6.144280433654785
    10. ' continues' → logprob: -6.519280433654785

Token 152: ' sais' (ID: 30010)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7546578049659729
    2. ' continue' → logprob: -1.8796577453613281
    3. 'pas' → logprob: -2.254657745361328
    4. ']' → logprob: -2.879657745361328
    5. 'p' → logprob: -3.004657745361328
    6. 's' → logprob: -3.254657745361328
    7. ' pense' → logprob: -3.379657745361328
    8. 'compr' → logprob: -3.629657745361328
    9. 'contin' → logprob: -4.129657745361328
    10. ' comprends' → logprob: -4.379657745361328

Token 153: ' plus' (ID: 2932)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.5777551531791687
    2. ' pas' → logprob: -0.8277551531791687
    3. '       ' → logprob: -7.702754974365234
    4. 'plus' → logprob: -7.952754974365234
    5. '   ' → logprob: -8.327754974365234
    6. ' plus' → logprob: -8.452754974365234
    7. '_pas' → logprob: -9.077754974365234
    8. '           ' → logprob: -9.452754974365234
    9. '+' → logprob: -9.952754974365234
    10. '.' → logprob: -10.202754974365234

Token 154: ' s' (ID: 265)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: ''il' (ID: 14683)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5991693139076233
    2. ''il' → logprob: -1.5991692543029785
    3. 'e' → logprob: -2.3491692543029785
    4. 'u' → logprob: -2.8491692543029785
    5. ''' → logprob: -4.2241692543029785
    6. 'j' → logprob: -4.5991692543029785
    7. '[i' → logprob: -4.7241692543029785
    8. 'ur' → logprob: -4.9741692543029785
    9. 'l' → logprob: -5.3491692543029785
    10. '```' → logprob: -5.4741692543029785

Token 156: ' fallait' (ID: 110338)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.35357990860939026
    2. ' faut' → logprob: -1.3535798788070679
    3. 's' → logprob: -3.8535799980163574
    4. 'y' → logprob: -5.103579998016357
    5. ' y' → logprob: -5.353579998016357
    6. ' fallait' → logprob: -5.728579998016357
    7. ' manque' → logprob: -7.228579998016357
    8. 'fa' → logprob: -7.603579998016357
    9. ' s' → logprob: -7.603579998016357
    10. ' f' → logprob: -7.728579998016357

Token 157: ' -' (ID: 533)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.4509248733520508
    2. 'd' → logprob: -1.5759248733520508
    3. 'mettre' → logprob: -2.200924873352051
    4. '-' → logprob: -2.450924873352051
    5. 'dé' → logprob: -2.825924873352051
    6. ' ' → logprob: -3.200924873352051
    7. 'prendre' → logprob: -3.450924873352051
    8. 'faire' → logprob: -3.575924873352051
    9. '+' → logprob: -3.700924873352051
    10. 'i' → logprob: -3.825924873352051

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011899876408278942
    2. ' ' → logprob: -6.751190185546875
    3. '```' → logprob: -12.376190185546875
    4. '<|end|>' → logprob: -12.376190185546875
    5. ' ' → logprob: -13.251190185546875
    6. 'j' → logprob: -13.376190185546875
    7. '2' → logprob: -13.751190185546875
    8. '...' → logprob: -14.001190185546875
    9. '<|end|>' → logprob: -14.126190185546875
    10. '   ' → logprob: -14.501190185546875

Token 159: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: ' mais' (ID: 2899)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10855010151863098
    2. '<|end|>' → logprob: -2.3585500717163086
    3. ' or' → logprob: -6.233550071716309
    4. ' 
' → logprob: -6.733550071716309
    5. ' else' → logprob: -6.733550071716309
    6. '<|end|>' → logprob: -6.858550071716309
    7. ')' → logprob: -7.108550071716309
    8. ' )' → logprob: -7.733550071716309
    9. '    ' → logprob: -8.108550071716309
    10. '        ' → logprob: -8.233550071716309

Token 161: ' ça' (ID: 13590)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.614227533340454
    2. ' continue' → logprob: -1.614227533340454
    3. ' ' → logprob: -1.989227533340454
    4. ')' → logprob: -2.614227533340454
    5. ' c' → logprob: -2.739227533340454
    6. 'continue' → logprob: -3.114227533340454
    7. 'j' → logprob: -3.614227533340454
    8. 'n' → logprob: -3.739227533340454
    9. '```' → logprob: -3.864227533340454
    10. ' i' → logprob: -4.114227294921875

Token 162: ' marche' (ID: 58191)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.1609388589859009
    2. '<|end|>' → logprob: -1.1609388589859009
    3. ' continue' → logprob: -1.5359388589859009
    4. ' seems' → logprob: -2.6609387397766113
    5. ' continues' → logprob: -3.5359387397766113
    6. ' semble' → logprob: -4.535938739776611
    7. 'else' → logprob: -5.035938739776611
    8. 'contin' → logprob: -5.285938739776611
    9. ' else' → logprob: -5.535938739776611
    10. '<|end|>' → logprob: -5.535938739776611

Token 163: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.29563063383102417
    2. 'elif' (adapté à ' elif') → logprob: -1.670630693435669
    3. ' else' → logprob: -2.920630693435669
    4. ' elif' → logprob: -5.04563045501709
    5. '       ' → logprob: -5.54563045501709
    6. '<|end|>' → logprob: -5.67063045501709
    7. '	elif' → logprob: -10.17063045501709
    8. '        ' → logprob: -11.04563045501709
    9. '<|end|>' → logprob: -11.04563045501709
    10. '	else' → logprob: -11.17063045501709

Token 166: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008805661462247372
    2. 'i' → logprob: -4.758805751800537
    3. ' j' → logprob: -8.883805274963379
    4. 'j' → logprob: -10.008805274963379
    5. ' ' → logprob: -12.633805274963379
    6. ' ' → logprob: -13.633805274963379
    7. '   ' → logprob: -14.008805274963379
    8. '	i' → logprob: -14.258805274963379
    9. ' True' → logprob: -14.508805274963379
    10. 'True' → logprob: -14.758805274963379

Token 167: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.11199025809764862
    2. '>' → logprob: -2.361990213394165
    3. ' ==' → logprob: -4.861990451812744
    4. '==' → logprob: -5.611990451812744
    5. ' <' → logprob: -8.611989974975586
    6. ' ' → logprob: -9.736989974975586
    7. ' ' → logprob: -9.861989974975586
    8. '<' → logprob: -10.861989974975586
    9. '=' → logprob: -13.486989974975586
    10. ' !=' → logprob: -13.986989974975586

Token 168: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2811570167541504
    2. 'j' → logprob: -1.4061570167541504
    3. ' n' → logprob: -13.531156539916992
    4. ' ' → logprob: -13.656156539916992
    5. '	j' → logprob: -13.906156539916992
    6. 'n' → logprob: -14.031156539916992
    7. '0' → logprob: -14.281156539916992
    8. ' i' → logprob: -14.531156539916992
    9. 'i' → logprob: -14.781156539916992
    10. '[j' → logprob: -15.531156539916992

Token 169: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009781353175640106
    2. ':
' → logprob: -5.009781360626221
    3. '=' → logprob: -7.384781360626221
    4. ' =' → logprob: -7.509781360626221
    5. ' :' → logprob: -7.759781360626221
    6. '<|end|>' → logprob: -7.759781360626221
    7. '           ' → logprob: -7.884781360626221
    8. '       ' → logprob: -8.259780883789062
    9. '[' → logprob: -8.884780883789062
    10. '        ' → logprob: -9.509780883789062

Token 170: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5831372141838074
    2. 'A' → logprob: -0.8331372141838074
    3. ' A' → logprob: -4.958137035369873
    4. 'a' → logprob: -10.208137512207031
    5. '       ' → logprob: -10.833137512207031
    6. '   ' → logprob: -11.083137512207031
    7. '=' → logprob: -11.458137512207031
    8. '               ' → logprob: -11.583137512207031
    9. ' ' → logprob: -11.958137512207031
    10. '[' → logprob: -12.333137512207031

Token 171: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4027342200279236
    2. 'A' (adapté à ' A') → logprob: -1.6527342796325684
    3. ' a' → logprob: -2.4027342796325684
    4. ' A' → logprob: -3.0277342796325684
    5. '           ' → logprob: -7.152734279632568
    6. '       ' → logprob: -8.77773380279541
    7. '   ' → logprob: -9.77773380279541
    8. ' ' → logprob: -10.52773380279541
    9. '               ' → logprob: -11.46523380279541
    10. '0' → logprob: -11.84023380279541

Token 172: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.248469718324486e-05
    2. '[' → logprob: -11.250022888183594
    3. '[I' → logprob: -12.750022888183594
    4. '][' → logprob: -13.000022888183594
    5. '[j' → logprob: -13.250022888183594
    6. ' [' → logprob: -13.625022888183594
    7. 'i' → logprob: -14.750022888183594
    8. '```' → logprob: -15.250022888183594
    9. '[A' → logprob: -15.375022888183594
    10. '[int' → logprob: -16.375022888183594

Token 173: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003884894831571728
    2. '[' → logprob: -9.000388145446777
    3. ']' → logprob: -9.000388145446777
    4. '[j' → logprob: -9.250388145446777
    5. '[i' → logprob: -10.500388145446777
    6. ' ][' → logprob: -11.250388145446777
    7. '>[' → logprob: -13.625388145446777
    8. '>' → logprob: -13.750388145446777
    9. ']][' → logprob: -13.875388145446777
    10. '[][' → logprob: -15.750388145446777

Token 174: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16119922697544098
    2. 'a' → logprob: -1.9111992120742798
    3. 'i' → logprob: -7.03619909286499
    4. ' j' → logprob: -10.161199569702148
    5. 'n' → logprob: -10.786199569702148
    6. ' a' → logprob: -11.411199569702148
    7. '[j' → logprob: -11.536199569702148
    8. ']' → logprob: -12.286199569702148
    9. '0' → logprob: -13.036199569702148
    10. '
' → logprob: -13.411199569702148

Token 175: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.054017070680856705
    2. '=' → logprob: -3.0540170669555664
    3. ']=' → logprob: -5.554017066955566
    4. ' =' → logprob: -6.554017066955566
    5. ' ]' → logprob: -9.179017066955566
    6. ')' → logprob: -11.679017066955566
    7. '[' → logprob: -12.304017066955566
    8. ']+=' → logprob: -14.679017066955566
    9. ')=' → logprob: -15.304017066955566
    10. '-' → logprob: -15.429017066955566

Token 176: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020893067121506
    2. ' =' → logprob: -2.3502089977264404
    3. ']' → logprob: -13.22520923614502
    4. ']=' → logprob: -15.72520923614502
    5. ' ' → logprob: -16.350208282470703
    6. '+=' → logprob: -16.725208282470703
    7. ')' → logprob: -16.850208282470703
    8. '>' → logprob: -17.225208282470703
    9. '=
' → logprob: -17.600208282470703
    10. '   ' → logprob: -17.725208282470703

Token 177: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16022981703281403
    2. ' a' → logprob: -1.9102298021316528
    3. ' ' → logprob: -12.660229682922363
    4. '0' → logprob: -13.910229682922363
    5. '	a' → logprob: -14.785229682922363
    6. ' ' → logprob: -15.535229682922363
    7. '   ' → logprob: -15.660229682922363
    8. 'ai' → logprob: -16.16023063659668
    9. '1' → logprob: -16.78523063659668
    10. '  ' → logprob: -16.91023063659668

Token 178: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04632052406668663
    2. '[j' → logprob: -3.1713204383850098
    3. 'i' → logprob: -5.79632043838501
    4. 'j' → logprob: -8.296320915222168
    5. '[' → logprob: -10.921320915222168
    6. '(i' → logprob: -12.546320915222168
    7. '[
' → logprob: -13.171320915222168
    8. ' i' → logprob: -13.921320915222168
    9. '[(' → logprob: -14.296320915222168
    10. '_i' → logprob: -14.671320915222168

Token 179: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5365501046180725
    2. '[j' → logprob: -1.1615500450134277
    3. 'j' → logprob: -2.2865500450134277
    4. '[' → logprob: -8.411550521850586
    5. '[i' → logprob: -8.786550521850586
    6. ']' → logprob: -9.536550521850586
    7. 'i' → logprob: -9.661550521850586
    8. ' j' → logprob: -10.411550521850586
    9. '][:' → logprob: -11.161550521850586
    10. '	j' → logprob: -11.536550521850586

Token 180: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00015705463010817766
    2. 'i' → logprob: -8.875157356262207
    3. ' j' → logprob: -11.125157356262207
    4. 'n' → logprob: -13.875157356262207
    5. ']' → logprob: -14.375157356262207
    6. ':j' → logprob: -15.125157356262207
    7. '
' → logprob: -15.500157356262207
    8. '	j' → logprob: -16.25015640258789
    9. ' ' → logprob: -16.50015640258789
    10. '   ' → logprob: -16.62515640258789

Token 181: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0835268571972847
    2. '+' → logprob: -2.583526849746704
    3. '<|end|>' → logprob: -5.833527088165283
    4. ')' → logprob: -7.083527088165283
    5. '])' → logprob: -7.583527088165283
    6. ']+' → logprob: -9.833526611328125
    7. ' ]' → logprob: -9.958526611328125
    8. ' +' → logprob: -10.083526611328125
    9. '<|end|>' → logprob: -10.083526611328125
    10. '0' → logprob: -10.333526611328125

Token 182: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3266257047653198
    2. '<|end|>' → logprob: -1.7016257047653198
    3. 'else' → logprob: -2.7016258239746094
    4. ' else' → logprob: -3.5766258239746094
    5. '        ' → logprob: -8.07662582397461
    6. '<|end|>' → logprob: -8.45162582397461
    7. ' ' → logprob: -8.70162582397461
    8. ')' → logprob: -9.20162582397461
    9. '[' → logprob: -9.95162582397461
    10. 'elif' → logprob: -9.95162582397461

Token 183: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2848401963710785
    2. 'else' → logprob: -1.4098402261734009
    3. ' else' → logprob: -6.034840106964111
    4. '<|end|>' → logprob: -7.534840106964111
    5. 'elif' → logprob: -7.909840106964111
    6. '   ' → logprob: -8.78484058380127
    7. 'for' → logprob: -9.28484058380127
    8. '#' → logprob: -9.53484058380127
    9. '```' → logprob: -10.53484058380127
    10. '
' → logprob: -11.53484058380127

Token 184: ' ça' (ID: 13590)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.39632469415664673
    2. '       ' → logprob: -1.521324634552002
    3. '<|end|>' → logprob: -3.021324634552002
    4. 'elif' → logprob: -3.396324634552002
    5. ' else' → logprob: -4.646324634552002
    6. ')' → logprob: -5.646324634552002
    7. ']' → logprob: -5.771324634552002
    8. '
' → logprob: -6.146324634552002
    9. 'continue' → logprob: -6.271324634552002
    10. '#' → logprob: -6.771324634552002

Token 185: ' c' (ID: 274)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6587950587272644
    2. ' continue' → logprob: -1.9087951183319092
    3. ' else' → logprob: -2.158795118331909
    4. 'continue' → logprob: -2.533795118331909
    5. '<|end|>' → logprob: -3.408795118331909
    6. '=' → logprob: -3.908795118331909
    7. 'elif' → logprob: -4.53379487991333
    8. '#' → logprob: -4.53379487991333
    9. ' semble' → logprob: -4.65879487991333
    10. ')' → logprob: -4.78379487991333

Token 186: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.011571751907467842
    2. '#' → logprob: -6.386571884155273
    3. 'omme' → logprob: -6.511571884155273
    4. '=' → logprob: -6.886571884155273
    5. ''est' → logprob: -7.011571884155273
    6. ''' → logprob: -7.511571884155273
    7. 'e' → logprob: -7.511571884155273
    8. 'ould' → logprob: -7.511571884155273
    9. 'omm' → logprob: -7.636571884155273
    10. 'on' → logprob: -7.761571884155273

Token 187: ' plus' (ID: 2932)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -0.9232736229896545
    2. ' correct' → logprob: -1.5482735633850098
    3. 'ok' → logprob: -2.6732735633850098
    4. ' ok' → logprob: -2.7982735633850098
    5. 'a' → logprob: -3.2982735633850098
    6. 'n' → logprob: -3.9232735633850098
    7. 'bon' → logprob: -4.04827356338501
    8. ' okay' → logprob: -4.17327356338501
    9. 'OK' → logprob: -4.17327356338501
    10. 'just' → logprob: -4.29827356338501

Token 188: ' logique' (ID: 115350)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.7471832036972046
    2. 'clair' → logprob: -1.2471832036972046
    3. 'simple' → logprob: -1.4971832036972046
    4. 'con' → logprob: -5.872183322906494
    5. 'pr' → logprob: -5.872183322906494
    6. 'cl' → logprob: -6.247183322906494
    7. 'fac' → logprob: -6.622183322906494
    8. 'co' → logprob: -7.122183322906494
    9. 'correct' → logprob: -7.497183322906494
    10. 'nature' → logprob: -7.497183322906494

Token 189: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 190: ' je' (ID: 1264)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2819313406944275
    2. ' else' → logprob: -2.0319314002990723
    3. 'else' → logprob: -2.7819314002990723
    4. '<|end|>' → logprob: -3.0319314002990723
    5. ')' → logprob: -7.281931400299072
    6. ' ' → logprob: -7.531931400299072
    7. '...' → logprob: -7.656931400299072
    8. '```' → logprob: -7.781931400299072
    9. 'continue' → logprob: -8.031930923461914
    10. '<|end|>' → logprob: -8.031930923461914

Token 191: ' crois' (ID: 65485)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.31915807723999023
    2. 'continue' → logprob: -1.3191580772399902
    3. 'contin' → logprob: -6.31915807723999
    4. ' pense' → logprob: -6.44415807723999
    5. 'else' → logprob: -7.69415807723999
    6. 'n' → logprob: -7.81915807723999
    7. ' suppose' → logprob: -8.194158554077148
    8. 't' → logprob: -8.569158554077148
    9. ' continues' → logprob: -8.819158554077148
    10. ' continuer' → logprob: -9.069158554077148

Token 192: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 193: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4879027009010315
    2. 'else' → logprob: -1.6129026412963867
    3. '       ' → logprob: -2.2379026412963867
    4. ' for' → logprob: -3.6129026412963867
    5. ' else' → logprob: -3.6129026412963867
    6. '<|end|>' → logprob: -3.9879026412963867
    7. 'elif' → logprob: -5.362902641296387
    8. '```' → logprob: -6.862902641296387
    9. ' elif' → logprob: -7.862902641296387
    10. '        ' → logprob: -8.112902641296387

Token 194: ' Pré' (ID: 86400)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0077661010436713696
    2. ' for' → logprob: -4.882766246795654
    3. '#' → logprob: -9.507765769958496
    4. '   ' → logprob: -10.132765769958496
    5. '       ' → logprob: -10.757765769958496
    6. '```' → logprob: -12.507765769958496
    7. 'import' → logprob: -12.632765769958496
    8. 'continue' → logprob: -12.882765769958496
    9. 'i' → logprob: -13.257765769958496
    10. 'else' → logprob: -13.257765769958496

Token 195: '-cal' (ID: 84920)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.43055805563926697
    2. 'sum' → logprob: -1.4305580854415894
    3. 'c' → logprob: -3.6805579662323
    4. 'sent' → logprob: -3.9305579662323
    5. 'paration' → logprob: -4.680558204650879
    6. 'cis' → logprob: -5.305558204650879
    7. '-cal' → logprob: -5.430558204650879
    8. 's' → logprob: -5.555558204650879
    9. 'som' → logprob: -5.805558204650879
    10. 'for' → logprob: -5.805558204650879

Token 196: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.007542734500020742
    2. 'cule' → logprob: -5.507542610168457
    3. 'culation' → logprob: -5.882542610168457
    4. 'c' → logprob: -7.882542610168457
    5. 'culated' → logprob: -8.757542610168457
    6. 'cules' → logprob: -10.007542610168457
    7. '```' → logprob: -10.757542610168457
    8. 'culus' → logprob: -10.882542610168457
    9. ' cul' → logprob: -11.507542610168457
    10. '#' → logprob: -12.257542610168457

Token 197: 's' (ID: 82)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11313395947217941
    2. ' for' → logprob: -2.2381339073181152
    3. '#' → logprob: -8.488134384155273
    4. 'i' → logprob: -10.113134384155273
    5. 's' → logprob: -10.113134384155273
    6. ' =' → logprob: -12.488134384155273
    7. 'r' → logprob: -12.863134384155273
    8. ' #' → logprob: -12.863134384155273
    9. ' i' → logprob: -12.988134384155273
    10. ':' → logprob: -13.113134384155273

Token 198: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04303595796227455
    2. ' for' → logprob: -3.1680359840393066
    3. ':' → logprob: -10.918035507202148
    4. '#' → logprob: -12.043035507202148
    5. '
' → logprob: -12.418035507202148
    6. '   ' → logprob: -12.418035507202148
    7. '<|end|>' → logprob: -14.043035507202148
    8. ':
' → logprob: -14.293035507202148
    9. 'pour' → logprob: -14.793035507202148
    10. '```' → logprob: -14.918035507202148

Token 199: 'je' (ID: 1587)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0639716312289238
    2. ' for' → logprob: -3.188971519470215
    3. ')' → logprob: -4.063971519470215
    4. 'pour' → logprob: -6.563971519470215
    5. '#' → logprob: -6.813971519470215
    6. 'i' → logprob: -8.188971519470215
    7. ' pour' → logprob: -8.688971519470215
    8. 's' → logprob: -9.813971519470215
    9. 'di' → logprob: -9.813971519470215
    10. 'prefix' → logprob: -9.938971519470215

Token 200: ' suppose' (ID: 35968)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.0970274209976196
    2. 'for' → logprob: -1.2220274209976196
    3. ' for' → logprob: -1.3470274209976196
    4. ' vais' → logprob: -3.59702730178833
    5. ')' → logprob: -3.72202730178833
    6. 's' → logprob: -4.34702730178833
    7. 'continue' → logprob: -4.72202730178833
    8. ' suppose' → logprob: -4.72202730178833
    9. 'n' → logprob: -4.84702730178833
    10. ' n' → logprob: -5.47202730178833

Token 201: ' que' (ID: 661)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6150116324424744
    2. 'for' → logprob: -0.9900116324424744
    3. ' for' → logprob: -2.615011692047119
    4. ' )' → logprob: -4.990011692047119
    5. ')
' → logprob: -5.865011692047119
    6. '):' → logprob: -6.240011692047119
    7. ' pour' → logprob: -7.615011692047119
    8. 'pour' → logprob: -7.740011692047119
    9. '   ' → logprob: -7.865011692047119
    10. '#' → logprob: -8.115011215209961

Token 202: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5441304445266724
    2. ' for' → logprob: -1.1691304445266724
    3. ')' → logprob: -2.794130325317383
    4. ' i' → logprob: -3.919130325317383
    5. 'i' → logprob: -4.794130325317383
    6. 'n' → logprob: -5.669130325317383
    7. ' the' → logprob: -6.169130325317383
    8. ' n' → logprob: -6.794130325317383
    9. 'Al' → logprob: -6.794130325317383
    10. ' la' → logprob: -6.919130325317383

Token 203: ''est' (ID: 6616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19128236174583435
    2. ' for' → logprob: -3.066282272338867
    3. 'e' → logprob: -3.316282272338867
    4. 'ont' → logprob: -4.066282272338867
    5. 'on' → logprob: -4.441282272338867
    6. '=' → logprob: -4.566282272338867
    7. 'a' → logprob: -4.691282272338867
    8. 'i' → logprob: -4.691282272338867
    9. '#' → logprob: -4.941282272338867
    10. ''est' → logprob: -5.691282272338867

Token 204: ' pour' (ID: 1930)
  Prédit: 'pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pour' → logprob: -0.40490031242370605
    2. 'for' → logprob: -1.404900312423706
    3. 'la' → logprob: -3.279900312423706
    4. 'les' → logprob: -4.029900550842285
    5. 'le' → logprob: -4.529900550842285
    6. ' for' → logprob: -4.779900550842285
    7. ' pour' → logprob: -5.404900550842285
    8. ' la' → logprob: -6.154900550842285
    9. 'à' → logprob: -7.279900550842285
    10. ')' → logprob: -7.279900550842285

Token 205: ' l' (ID: 305)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.1587955951690674
    2. 'le' → logprob: -1.7837955951690674
    3. ' faciliter' → logprob: -2.0337955951690674
    4. 'la' → logprob: -2.1587955951690674
    5. 'l' → logprob: -2.6587955951690674
    6. ' la' → logprob: -3.6587955951690674
    7. 'optim' → logprob: -3.9087955951690674
    8. ' l' → logprob: -4.033795356750488
    9. ' le' → logprob: -4.033795356750488
    10. ' les' → logprob: -4.283795356750488

Token 206: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9316175580024719
    2. 'e' → logprob: -1.5566174983978271
    3. ' range' → logprob: -1.8066174983978271
    4. 'i' → logprob: -2.181617498397827
    5. ' i' → logprob: -2.806617498397827
    6. ''' → logprob: -4.181617736816406
    7. ' a' → logprob: -4.431617736816406
    8. 'range' → logprob: -4.681617736816406
    9. 'es' → logprob: -5.431617736816406
    10. 'A' → logprob: -6.181617736816406

Token 207: 'optim' (ID: 29513)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08013544231653214
    2. 'range' → logprob: -3.4551353454589844
    3. 'a' → logprob: -3.9551353454589844
    4. ' range' → logprob: -4.330135345458984
    5. 's' → logprob: -5.830135345458984
    6. ' i' → logprob: -6.205135345458984
    7. 'A' → logprob: -6.330135345458984
    8. 'e' → logprob: -7.080135345458984
    9. 'o' → logprob: -7.955135345458984
    10. 'diag' → logprob: -7.955135345458984

Token 208: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.0027081076987087727
    2. 'isations' → logprob: -6.7527079582214355
    3. 'ation' → logprob: -7.5027079582214355
    4. 'al' → logprob: -8.502708435058594
    5. 'ization' → logprob: -8.752708435058594
    6. 'is' → logprob: -8.752708435058594
    7. 'iser' → logprob: -9.002708435058594
    8. '```' → logprob: -9.502708435058594
    9. '#' → logprob: -9.877708435058594
    10. 's' → logprob: -11.252708435058594

Token 209: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5315631628036499
    2. ')
' → logprob: -1.28156316280365
    3. ')' → logprob: -2.2815632820129395
    4. ' for' → logprob: -4.2815632820129395
    5. '):
' → logprob: -4.5315632820129395
    6. '):' → logprob: -5.5315632820129395
    7. ')

' → logprob: -6.0315632820129395
    8. '):

' → logprob: -6.9065632820129395
    9. 'pour' → logprob: -8.281562805175781
    10. '#' → logprob: -9.156562805175781

Token 210: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006062463391572237
    2. ' for' → logprob: -5.1310625076293945
    3. '   ' → logprob: -9.131062507629395
    4. '       ' → logprob: -10.881062507629395
    5. '```' → logprob: -12.506062507629395
    6. '	for' → logprob: -13.381062507629395
    7. 'Al' → logprob: -14.881062507629395
    8. '#' → logprob: -15.631062507629395
    9. 'if' → logprob: -15.881062507629395
    10. '           ' → logprob: -16.006061553955078

Token 211: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5231475234031677
    2. ' i' → logprob: -0.8981475234031677
    3. ' range' → logprob: -12.523147583007812
    4. '	i' → logprob: -12.898147583007812
    5. ' ' → logprob: -13.023147583007812
    6. '_i' → logprob: -13.023147583007812
    7. '_' → logprob: -13.023147583007812
    8. 'range' → logprob: -13.148147583007812
    9. ' j' → logprob: -13.273147583007812
    10. '   ' → logprob: -13.273147583007812

Token 212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20159831643104553
    2. 'in' → logprob: -1.7015982866287231
    3. 'range' → logprob: -9.076598167419434
    4. 'n' → logprob: -10.326598167419434
    5. ' ' → logprob: -11.451598167419434
    6. ' range' → logprob: -11.826598167419434
    7. '(n' → logprob: -12.576598167419434
    8. '1' → logprob: -12.826598167419434
    9. 'import' → logprob: -13.201598167419434
    10. '(' → logprob: -13.451598167419434

Token 213: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012596539221704006
    2. ' range' → logprob: -4.387596607208252
    3. 'in' → logprob: -9.512596130371094
    4. ' in' → logprob: -11.637596130371094
    5. 'n' → logprob: -13.262596130371094
    6. '(range' → logprob: -14.137596130371094
    7. ' ' → logprob: -14.262596130371094
    8. '   ' → logprob: -14.512596130371094
    9. '
' → logprob: -15.762596130371094
    10. 'ran' → logprob: -16.387596130371094

Token 214: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003606363432481885
    2. '(' → logprob: -5.62860631942749
    3. 'n' → logprob: -12.503606796264648
    4. '(range' → logprob: -13.628606796264648
    5. '(i' → logprob: -15.003606796264648
    6. '(
' → logprob: -15.003606796264648
    7. 'range' → logprob: -15.753606796264648
    8. ' (' → logprob: -15.878606796264648
    9. '1' → logprob: -16.37860679626465
    10. '(k' → logprob: -17.12860679626465

Token 215: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.30398431420326233
    2. '):
' → logprob: -1.92898428440094
    3. '):' → logprob: -2.1789844036102295
    4. '(n' → logprob: -6.17898416519165
    5. 'n' → logprob: -6.80398416519165
    6. ' +' → logprob: -8.428984642028809
    7. '   ' → logprob: -9.178984642028809
    8. '(' → logprob: -9.928984642028809
    9. '+n' → logprob: -10.553984642028809
    10. '):
' → logprob: -10.678984642028809

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01981065794825554
    2. 'for' → logprob: -4.019810676574707
    3. ' for' → logprob: -6.894810676574707
    4. 's' → logprob: -8.394810676574707
    5. 'sum' → logprob: -8.394810676574707
    6. '	for' → logprob: -10.519810676574707
    7. ' ' → logprob: -10.769810676574707
    8. 'cum' → logprob: -10.769810676574707
    9. 'prefix' → logprob: -10.894810676574707
    10. 'Al' → logprob: -10.894810676574707

Token 217: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12403591722249985
    2. 's' → logprob: -2.6240358352661133
    3. 'sum' → logprob: -4.624035835266113
    4. 'row' → logprob: -4.999035835266113
    5. 'acc' → logprob: -5.249035835266113
    6. '   ' → logprob: -5.249035835266113
    7. 'cum' → logprob: -5.749035835266113
    8. 'Al' → logprob: -6.124035835266113
    9. 'curr' → logprob: -6.124035835266113
    10. 'current' → logprob: -6.374035835266113

Token 218: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5761329531669617
    2. ' j' → logprob: -0.8261329531669617
    3. '   ' → logprob: -9.076132774353027
    4. ' in' → logprob: -10.451132774353027
    5. ' range' → logprob: -11.451132774353027
    6. 'range' → logprob: -11.576132774353027
    7. ' ' → logprob: -11.951132774353027
    8. '_j' → logprob: -12.451132774353027
    9. 'n' → logprob: -12.951132774353027
    10. '	j' → logprob: -13.076132774353027

Token 219: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12775516510009766
    2. 'in' → logprob: -2.2527551651000977
    3. 'range' → logprob: -5.002755165100098
    4. '(n' → logprob: -5.502755165100098
    5. ' range' → logprob: -5.877755165100098
    6. '(range' → logprob: -7.752755165100098
    7. 'n' → logprob: -8.377755165100098
    8. '(' → logprob: -8.377755165100098
    9. '   ' → logprob: -8.752755165100098
    10. '(in' → logprob: -9.252755165100098

Token 220: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.23882350325584412
    2. ' range' → logprob: -1.6138235330581665
    3. '(range' → logprob: -4.488823413848877
    4. '(n' → logprob: -6.238823413848877
    5. '(i' → logprob: -9.613823890686035
    6. 'n' → logprob: -10.488823890686035
    7. '(' → logprob: -11.488823890686035
    8. '   ' → logprob: -12.113823890686035
    9. '(r' → logprob: -12.238823890686035
    10. 'i' → logprob: -12.363823890686035

Token 221: '(i' (ID: 3649)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1434253454208374
    2. '(i' → logprob: -2.018425464630127
    3. '(' → logprob: -7.268425464630127
    4. 'n' → logprob: -10.518424987792969
    5. 'i' → logprob: -11.393424987792969
    6. '(j' → logprob: -11.893424987792969
    7. '((' → logprob: -12.268424987792969
    8. ' (' → logprob: -14.768424987792969
    9. '(m' → logprob: -15.143424987792969
    10. '(range' → logprob: -15.143424987792969

Token 222: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03166917338967323
    2. ',' → logprob: -4.0316691398620605
    3. ' +' → logprob: -4.6566691398620605
    4. ',n' → logprob: -5.9066691398620605
    5. '):
' → logprob: -7.7816691398620605
    6. ',j' → logprob: -8.656669616699219
    7. '):' → logprob: -8.906669616699219
    8. ' ,' → logprob: -9.156669616699219
    9. '   ' → logprob: -9.406669616699219
    10. ',i' → logprob: -9.406669616699219

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029708960209973156
    2. '2' → logprob: -9.000297546386719
    3. 'n' → logprob: -9.125297546386719
    4. ' ' → logprob: -9.750297546386719
    5. '(n' → logprob: -12.875297546386719
    6. ' n' → logprob: -13.750297546386719
    7. '0' → logprob: -14.250297546386719
    8. '(' → logprob: -14.625297546386719
    9. '
' → logprob: -14.625297546386719
    10. '   ' → logprob: -15.250297546386719

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1008070558309555
    2. ',n' → logprob: -2.350806951522827
    3. ' ,' → logprob: -7.850807189941406
    4. 'n' → logprob: -9.350807189941406
    5. '(n' → logprob: -9.350807189941406
    6. '):' → logprob: -10.975807189941406
    7. '1' → logprob: -11.850807189941406
    8. '):
' → logprob: -12.725807189941406
    9. ' ' → logprob: -13.225807189941406
    10. '<n' → logprob: -13.350807189941406

Token 225: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001192490803077817
    2. ' n' → logprob: -6.751192569732666
    3. '   ' → logprob: -10.876192092895508
    4. '(n' → logprob: -13.376192092895508
    5. '
' → logprob: -14.876192092895508
    6. ' ' → logprob: -15.126192092895508
    7. ')' → logprob: -15.376192092895508
    8. '	n' → logprob: -15.626192092895508
    9. '1' → logprob: -16.001192092895508
    10. 'j' → logprob: -16.126192092895508

Token 226: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06678180396556854
    2. '):
' → logprob: -2.941781759262085
    3. '+' → logprob: -4.441781997680664
    4. '   ' → logprob: -10.441781997680664
    5. ':' → logprob: -11.941781997680664
    6. '):
' → logprob: -12.316781997680664
    7. 'n' → logprob: -12.941781997680664
    8. ')' → logprob: -12.941781997680664
    9. '       ' → logprob: -13.191781997680664
    10. ' ):' → logprob: -13.441781997680664

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00593117019161582
    2. 'Al' → logprob: -5.755931377410889
    3. ' Al' → logprob: -6.130931377410889
    4. '   ' → logprob: -8.00593090057373
    5. '           ' → logprob: -9.25593090057373
    6. 'Ar' → logprob: -10.00593090057373
    7. '	   ' → logprob: -10.50593090057373
    8. '	' → logprob: -10.50593090057373
    9. '    ' → logprob: -11.75593090057373
    10. ' for' → logprob: -12.25593090057373

Token 228: ' #' (ID: 1069)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.0062617468647658825
    2. '       ' → logprob: -6.131261825561523
    3. 'Ar' → logprob: -6.256261825561523
    4. '           ' → logprob: -6.381261825561523
    5. '   ' → logprob: -8.131261825561523
    6. ' Al' → logprob: -9.006261825561523
    7. 'if' → logprob: -10.881261825561523
    8. '               ' → logprob: -12.131261825561523
    9. 'A' → logprob: -12.631261825561523
    10. 'Aj' → logprob: -13.131261825561523

Token 229: ' je' (ID: 1264)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.004980900790542364
    2. 'Ar' → logprob: -5.37998104095459
    3. ' Al' → logprob: -8.62998104095459
    4. 'if' → logprob: -9.50498104095459
    5. '   ' → logprob: -9.75498104095459
    6. '       ' → logprob: -11.25498104095459
    7. 'A' → logprob: -11.25498104095459
    8. 'AL' → logprob: -12.87998104095459
    9. 'Aj' → logprob: -13.00498104095459
    10. 'al' → logprob: -13.25498104095459

Token 230: ' commence' (ID: 44755)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05915122851729393
    2. '+=' → logprob: -3.6841511726379395
    3. 'l' → logprob: -4.9341511726379395
    4. ' =' → logprob: -5.1841511726379395
    5. '       ' → logprob: -5.3091511726379395
    6. 's' → logprob: -5.5591511726379395
    7. '#' → logprob: -6.3091511726379395
    8. 'd' → logprob: -6.6841511726379395
    9. '   ' → logprob: -7.1841511726379395
    10. '+' → logprob: -7.3091511726379395

Token 231: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12686645984649658
    2. ' by' → logprob: -3.501866340637207
    3. '       ' → logprob: -3.751866340637207
    4. '<|end|>' → logprob: -4.751866340637207
    5. ' at' → logprob: -5.001866340637207
    6. '	       ' → logprob: -5.126866340637207
    7. '   ' → logprob: -5.376866340637207
    8. ' Al' → logprob: -5.376866340637207
    9. ' =' → logprob: -5.376866340637207
    10. '        ' → logprob: -5.501866340637207

Token 232: ' compter' (ID: 81694)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.06341604888439178
    2. 'Ar' → logprob: -3.938416004180908
    3. ' Al' → logprob: -4.313416004180908
    4. 'i' → logprob: -4.813416004180908
    5. 'al' → logprob: -5.688416004180908
    6. 'penser' → logprob: -6.563416004180908
    7. '   ' → logprob: -6.688416004180908
    8. 'for' → logprob: -6.813416004180908
    9. 'range' → logprob: -7.063416004180908
    10. 'j' → logprob: -7.188416004180908

Token 233: ' à' (ID: 1221)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.28319859504699707
    2. '           ' → logprob: -2.283198595046997
    3. ' Al' → logprob: -2.408198595046997
    4. 'Ar' → logprob: -3.658198595046997
    5. '       ' → logprob: -4.533198356628418
    6. '   ' → logprob: -5.158198356628418
    7. ' Ar' → logprob: -6.158198356628418
    8. '=' → logprob: -6.533198356628418
    9. ' if' → logprob: -6.658198356628418
    10. ' =' → logprob: -6.658198356628418

Token 234: ' partir' (ID: 12100)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.723943293094635
    2. 'i' → logprob: -1.0989432334899902
    3. '1' → logprob: -1.7239432334899902
    4. '0' → logprob: -6.72394323348999
    5. ' j' → logprob: -7.22394323348999
    6. ' i' → logprob: -7.59894323348999
    7. 'l' → logprob: -8.223943710327148
    8. '2' → logprob: -8.723943710327148
    9. '   ' → logprob: -8.973943710327148
    10. 'Al' → logprob: -9.473943710327148

Token 235: ' de' (ID: 334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.27655458450317383
    2. 'j' → logprob: -1.7765545845031738
    3. ' i' → logprob: -3.401554584503174
    4. '       ' → logprob: -4.776554584503174
    5. '1' → logprob: -5.026554584503174
    6. ' j' → logprob: -5.026554584503174
    7. '0' → logprob: -5.526554584503174
    8. 'Al' → logprob: -5.526554584503174
    9. '   ' → logprob: -5.651554584503174
    10. 'A' → logprob: -6.526554584503174

Token 236: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6530723571777344
    2. 'j' → logprob: -0.9030723571777344
    3. '1' → logprob: -2.6530723571777344
    4. 'Al' → logprob: -6.903072357177734
    5. '0' → logprob: -7.028072357177734
    6. ' i' → logprob: -7.653072357177734
    7. 'l' → logprob: -8.028072357177734
    8. ' j' → logprob: -8.153072357177734
    9. '   ' → logprob: -8.278072357177734
    10. 'A' → logprob: -8.278072357177734

Token 237: ' ?' (ID: 1423)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2551213800907135
    2. '           ' → logprob: -1.6301213502883911
    3. 'Al' → logprob: -3.6301214694976807
    4. ' Al' → logprob: -6.505121231079102
    5. '   ' → logprob: -7.130121231079102
    6. 'for' → logprob: -9.005121231079102
    7. '               ' → logprob: -9.630121231079102
    8. ' for' → logprob: -9.755121231079102
    9. 'Ar' → logprob: -9.755121231079102
    10. ',' → logprob: -10.630121231079102

Token 238: ' Bon' (ID: 12658)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.8373140096664429
    2. '       ' → logprob: -1.0873140096664429
    3. '           ' → logprob: -1.7123140096664429
    4. ' Al' → logprob: -3.0873141288757324
    5. '   ' → logprob: -5.712314128875732
    6. 'Ar' → logprob: -8.212313652038574
    7. '               ' → logprob: -9.087313652038574
    8. 'if' → logprob: -10.087313652038574
    9. ' ' → logprob: -10.587313652038574
    10. ' if' → logprob: -10.712313652038574

Token 239: ' allez' (ID: 72134)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09191711992025375
    2. 'Al' → logprob: -3.216917037963867
    3. '           ' → logprob: -3.966917037963867
    4. '   ' → logprob: -4.216917037963867
    5. 'if' → logprob: -5.716917037963867
    6. ' Al' → logprob: -5.841917037963867
    7. 'sum' → logprob: -6.216917037963867
    8. ' if' → logprob: -6.591917037963867
    9. 'for' → logprob: -6.841917037963867
    10. 's' → logprob: -7.716917037963867

Token 240: '
' (ID: 198)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.3682796359062195
    2. '           ' → logprob: -1.4932796955108643
    3. '       ' → logprob: -2.9932796955108643
    4. ' Al' → logprob: -3.9932796955108643
    5. 'Ar' → logprob: -5.368279457092285
    6. '   ' → logprob: -5.368279457092285
    7. 'if' → logprob: -5.868279457092285
    8. 'for' → logprob: -6.493279457092285
    9. ' if' → logprob: -7.743279457092285
    10. '               ' → logprob: -8.368279457092285

Token 241: '       ' (ID: 309)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.39774277806282043
    2. '       ' → logprob: -1.897742748260498
    3. '           ' → logprob: -2.022742748260498
    4. ' Al' → logprob: -3.147742748260498
    5. '   ' → logprob: -6.397742748260498
    6. 'Ar' → logprob: -7.147742748260498
    7. 'if' → logprob: -8.647743225097656
    8. '               ' → logprob: -9.147743225097656
    9. ' if' → logprob: -10.147743225097656
    10. 'for' → logprob: -10.272743225097656

Token 242: ' Al' (ID: 1667)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' (adapté à ' Al') → logprob: -0.026935141533613205
    2. 'Ar' → logprob: -3.65193510055542
    3. '       ' → logprob: -8.151935577392578
    4. '   ' → logprob: -8.901935577392578
    5. '           ' → logprob: -9.776935577392578
    6. 'A' → logprob: -9.776935577392578
    7. ' Al' → logprob: -10.151935577392578
    8. 'if' → logprob: -10.526935577392578
    9. 'Aj' → logprob: -12.026935577392578
    10. '        ' → logprob: -12.901935577392578

Token 243: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012821465730667114
    2. '[j' → logprob: -4.387821674346924
    3. '][' → logprob: -8.262821197509766
    4. '[' → logprob: -10.762821197509766
    5. ' [' → logprob: -11.262821197509766
    6. '   ' → logprob: -11.762821197509766
    7. 'i' → logprob: -12.637821197509766
    8. '\[' → logprob: -13.137821197509766
    9. '       ' → logprob: -13.262821197509766
    10. '[I' → logprob: -13.637821197509766

Token 244: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0028833334799855947
    2. '[i' → logprob: -6.502883434295654
    3. '[j' → logprob: -6.877883434295654
    4. ' ][' → logprob: -8.502882957458496
    5. ']' → logprob: -9.752882957458496
    6. 'j' → logprob: -10.627882957458496
    7. 'i' → logprob: -10.877882957458496
    8. '[' → logprob: -11.752882957458496
    9. '
' → logprob: -11.752882957458496
    10. '   ' → logprob: -12.002882957458496

Token 245: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10032905638217926
    2. 'j' → logprob: -2.3503291606903076
    3. ' i' → logprob: -9.975329399108887
    4. ']' → logprob: -10.350329399108887
    5. '   ' → logprob: -11.225329399108887
    6. ' j' → logprob: -12.100329399108887
    7. '1' → logprob: -12.225329399108887
    8. '0' → logprob: -12.600329399108887
    9. '
' → logprob: -12.850329399108887
    10. ' ' → logprob: -13.350329399108887

Token 246: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003950878977775574
    2. ']+=' → logprob: -6.128951072692871
    3. '+' → logprob: -7.253951072692871
    4. ']+' → logprob: -7.753951072692871
    5. ' ]' → logprob: -7.878951072692871
    6. '-' → logprob: -9.253951072692871
    7. ']=' → logprob: -9.253951072692871
    8. '+]' → logprob: -10.878951072692871
    9. '=' → logprob: -11.628951072692871
    10. '+=' → logprob: -11.878951072692871

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001447141170501709
    2. ']' → logprob: -7.0014472007751465
    3. 'j' → logprob: -9.501446723937988
    4. ' ' → logprob: -9.626446723937988
    5. '```' → logprob: -9.751446723937988
    6. 'i' → logprob: -9.876446723937988
    7. '   ' → logprob: -10.001446723937988
    8. ']=' → logprob: -10.126446723937988
    9. '0' → logprob: -10.251446723937988
    10. '2' → logprob: -10.376446723937988

Token 248: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004675999749451876
    2. ']+=' → logprob: -5.50467586517334
    3. ']=' → logprob: -7.50467586517334
    4. ']+' → logprob: -10.62967586517334
    5. ' ]' → logprob: -10.87967586517334
    6. '=' → logprob: -13.25467586517334
    7. '-' → logprob: -15.12967586517334
    8. '+=' → logprob: -15.12967586517334
    9. '[' → logprob: -15.62967586517334
    10. 'j' → logprob: -15.62967586517334

Token 249: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.421477347612381
    2. '+=' → logprob: -1.5464773178100586
    3. ' =' → logprob: -2.6714773178100586
    4. ' +=' → logprob: -2.7964773178100586
    5. ']+=' → logprob: -7.546477317810059
    6. ']' → logprob: -8.671477317810059
    7. '+' → logprob: -11.171477317810059
    8. ']=' → logprob: -11.296477317810059
    9. '[' → logprob: -11.796477317810059
    10. '   ' → logprob: -12.421477317810059

Token 250: ' Al' (ID: 1667)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.001846413011662662
    2. ' Al' → logprob: -6.7518463134765625
    3. 'Ar' → logprob: -8.001846313476562
    4. 'A' → logprob: -8.376846313476562
    5. 'max' → logprob: -9.626846313476562
    6. 'a' → logprob: -11.126846313476562
    7. '   ' → logprob: -12.001846313476562
    8. ' max' → logprob: -12.126846313476562
    9. 'AL' → logprob: -12.626846313476562
    10. 'Max' → logprob: -13.126846313476562

Token 251: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.7146746763028204e-05
    2. 'j' → logprob: -10.37503719329834
    3. '[' → logprob: -12.25003719329834
    4. '[i' → logprob: -14.25003719329834
    5. ' j' → logprob: -16.250036239624023
    6. '[
' → logprob: -16.625036239624023
    7. ',j' → logprob: -17.375036239624023
    8. '	j' → logprob: -17.625036239624023
    9. '```' → logprob: -17.625036239624023
    10. '\[' → logprob: -18.000036239624023

Token 252: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01617196574807167
    2. '[i' → logprob: -4.641171932220459
    3. '[j' → logprob: -5.141171932220459
    4. '[' → logprob: -9.266172409057617
    5. ' ][' → logprob: -9.266172409057617
    6. '   ' → logprob: -9.641172409057617
    7. ' [' → logprob: -9.766172409057617
    8. ']' → logprob: -10.141172409057617
    9. '       ' → logprob: -10.266172409057617
    10. '-' → logprob: -10.266172409057617

Token 253: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00019328886992298067
    2. 'j' → logprob: -9.37519359588623
    3. ' i' → logprob: -9.37519359588623
    4. '   ' → logprob: -11.00019359588623
    5. ' ' → logprob: -13.00019359588623
    6. '
' → logprob: -13.75019359588623
    7. '[i' → logprob: -14.00019359588623
    8. '	i' → logprob: -14.12519359588623
    9. '```' → logprob: -14.50019359588623
    10. '       ' → logprob: -15.12519359588623

Token 254: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02080298773944378
    2. ']+' → logprob: -3.8958029747009277
    3. '+' → logprob: -8.395803451538086
    4. '[j' → logprob: -11.520803451538086
    5. '[' → logprob: -11.770803451538086
    6. ' ]' → logprob: -12.020803451538086
    7. '+]' → logprob: -12.645803451538086
    8. '][' → logprob: -13.520803451538086
    9. '-' → logprob: -13.520803451538086
    10. '[i' → logprob: -13.645803451538086

Token 255: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25610190629959106
    2. ' +' → logprob: -1.5061018466949463
    3. '+A' → logprob: -5.631102085113525
    4. '+a' → logprob: -7.506102085113525
    5. ' A' → logprob: -12.381101608276367
    6. '+j' → logprob: -12.631101608276367
    7. '+
' → logprob: -12.631101608276367
    8. ' plus' → logprob: -12.756101608276367
    9. ' ' → logprob: -12.881101608276367
    10. 'A' → logprob: -13.256101608276367

Token 256: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0016192420152947307
    2. 'a' → logprob: -6.501619338989258
    3. ' A' → logprob: -9.126619338989258
    4. ' ' → logprob: -12.876619338989258
    5. '   ' → logprob: -13.126619338989258
    6. ' a' → logprob: -14.126619338989258
    7. '  ' → logprob: -14.126619338989258
    8. '(A' → logprob: -14.501619338989258
    9. '	A' → logprob: -14.626619338989258
    10. '1' → logprob: -15.251619338989258

Token 257: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.05048705264925957
    2. '[i' → logprob: -3.4254870414733887
    3. 'j' → logprob: -4.175487041473389
    4. 'i' → logprob: -7.175487041473389
    5. '][' → logprob: -8.300487518310547
    6. '[' → logprob: -8.550487518310547
    7. ' j' → logprob: -10.675487518310547
    8. '```' → logprob: -10.675487518310547
    9. '[
' → logprob: -11.550487518310547
    10. ' [' → logprob: -11.675487518310547

Token 258: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0027847886085510254
    2. '[i' → logprob: -6.252784729003906
    3. '[' → logprob: -8.252784729003906
    4. ']' → logprob: -8.502784729003906
    5. ' ][' → logprob: -8.627784729003906
    6. '[j' → logprob: -9.127784729003906
    7. '   ' → logprob: -10.252784729003906
    8. ' [' → logprob: -11.752784729003906
    9. '-' → logprob: -11.815284729003906
    10. ' ' → logprob: -12.002784729003906

Token 259: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00013738969573751092
    2. 'j' → logprob: -9.250137329101562
    3. ' i' → logprob: -10.250137329101562
    4. '[i' → logprob: -12.500137329101562
    5. '   ' → logprob: -14.500137329101562
    6. '(i' → logprob: -14.500137329101562
    7. ' ' → logprob: -14.750137329101562
    8. '
' → logprob: -15.250137329101562
    9. ',i' → logprob: -16.000137329101562
    10. '	i' → logprob: -16.500137329101562

Token 260: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013609424233436584
    2. '-' → logprob: -4.638609409332275
    3. ' ]' → logprob: -5.638609409332275
    4. ' -' → logprob: -9.388609886169434
    5. '+' → logprob: -9.888609886169434
    6. '])' → logprob: -10.013609886169434
    7. '1' → logprob: -10.638609886169434
    8. '   ' → logprob: -11.263609886169434
    9. ')' → logprob: -11.388609886169434
    10. ']-' → logprob: -11.638609886169434

Token 261: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 262: ' if' (ID: 538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7819939851760864
    2. '<|end|>' → logprob: -1.6569939851760864
    3. '       ' → logprob: -2.406993865966797
    4. '        ' → logprob: -2.781993865966797
    5. '    ' → logprob: -3.656993865966797
    6. 'j' → logprob: -3.656993865966797
    7. 'Ar' → logprob: -3.781993865966797
    8. ')' → logprob: -3.906993865966797
    9. ' i' → logprob: -4.031993865966797
    10. 'Al' → logprob: -4.156993865966797

Token 263: ' i' (ID: 575)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1837387084960938
    2. ' A' → logprob: -1.1837387084960938
    3. ' j' → logprob: -2.4337387084960938
    4. 'j' → logprob: -2.4337387084960938
    5. 'i' → logprob: -2.6837387084960938
    6. ' i' → logprob: -2.8087387084960938
    7. 'a' → logprob: -3.3087387084960938
    8. ' a' → logprob: -3.9337387084960938
    9. 'Ar' → logprob: -4.933738708496094
    10. ' Ar' → logprob: -5.058738708496094

Token 264: ' >' (ID: 1424)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.36506062746047974
    2. ' <' → logprob: -1.490060567855835
    3. '<' → logprob: -3.490060567855835
    4. ' +' → logprob: -3.490060567855835
    5. ' ==' → logprob: -5.240060806274414
    6. '<n' → logprob: -5.490060806274414
    7. '==' → logprob: -6.240060806274414
    8. ' >' → logprob: -6.240060806274414
    9. '>' → logprob: -6.615060806274414
    10. ' >=' → logprob: -6.740060806274414

Token 265: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01727204956114292
    2. '=' → logprob: -4.892271995544434
    3. ' ' → logprob: -4.892271995544434
    4. 'j' → logprob: -6.392271995544434
    5. '1' → logprob: -7.892271995544434
    6. ' j' → logprob: -10.517271995544434
    7. 'i' → logprob: -11.017271995544434
    8. '=j' → logprob: -12.142271995544434
    9. 'n' → logprob: -12.517271995544434
    10. '-' → logprob: -13.267271995544434

Token 266: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0037498443853110075
    2. '=' → logprob: -6.253749847412109
    3. 'j' → logprob: -6.878749847412109
    4. ' ' → logprob: -7.503749847412109
    5. '1' → logprob: -8.87874984741211
    6. 'i' → logprob: -9.37874984741211
    7. 'n' → logprob: -12.62874984741211
    8. '=j' → logprob: -13.25374984741211
    9. ' j' → logprob: -13.44124984741211
    10. '
' → logprob: -13.94124984741211

Token 267: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03240607678890228
    2. '           ' → logprob: -4.157405853271484
    3. ':
' → logprob: -4.282405853271484
    4. ' and' → logprob: -6.282405853271484
    5. ' :' → logprob: -8.032405853271484
    6. 'and' → logprob: -9.532405853271484
    7. '       ' → logprob: -10.532405853271484
    8. '   ' → logprob: -10.657405853271484
    9. '               ' → logprob: -11.032405853271484
    10. ' :
' → logprob: -11.282405853271484

Token 268: '           ' (ID: 352)
  Prédit: 'Ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.6048431992530823
    2. '           ' → logprob: -0.8548431992530823
    3. ' Ar' → logprob: -4.2298431396484375
    4. '               ' → logprob: -4.8548431396484375
    5. 'Al' → logprob: -5.7298431396484375
    6. '   ' → logprob: -6.6048431396484375
    7. ' Al' → logprob: -7.2298431396484375
    8. '       ' → logprob: -7.6048431396484375
    9. ' ' → logprob: -8.604843139648438
    10. '          ' → logprob: -10.604843139648438

Token 269: ' Ar' (ID: 1754)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.48416101932525635
    2. 'Ar' (adapté à ' Ar') → logprob: -0.9841610193252563
    3. ' Al' → logprob: -4.984160900115967
    4. ' Ar' → logprob: -5.984160900115967
    5. '   ' → logprob: -8.484161376953125
    6. 'A' → logprob: -8.859161376953125
    7. '       ' → logprob: -8.859161376953125
    8. '           ' → logprob: -9.609161376953125
    9. 'Aj' → logprob: -10.109161376953125
    10. '               ' → logprob: -11.109161376953125

Token 270: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.5048530030981055e-06
    2. '[i' → logprob: -13.875001907348633
    3. '[' → logprob: -15.125001907348633
    4. ' [' → logprob: -15.375001907348633
    5. '][' → logprob: -17.250001907348633
    6. 'j' → logprob: -18.000001907348633
    7. '   ' → logprob: -19.500001907348633
    8. '```' → logprob: -20.000001907348633
    9. '\[' → logprob: -20.125001907348633
    10. ')[' → logprob: -20.500001907348633

Token 271: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002508239820599556
    2. '[j' → logprob: -6.127508163452148
    3. '[i' → logprob: -8.627508163452148
    4. ' ][' → logprob: -9.877508163452148
    5. ']' → logprob: -10.127508163452148
    6. '[' → logprob: -10.627508163452148
    7. ''][' → logprob: -11.877508163452148
    8. '   ' → logprob: -12.502508163452148
    9. '"][' → logprob: -12.752508163452148
    10. '-' → logprob: -13.002508163452148

Token 272: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00044103997061029077
    2. 'i' → logprob: -7.750441074371338
    3. ' j' → logprob: -12.12544059753418
    4. 'n' → logprob: -12.87544059753418
    5. '   ' → logprob: -14.00044059753418
    6. '	j' → logprob: -15.12544059753418
    7. '[j' → logprob: -15.12544059753418
    8. ' ' → logprob: -15.62544059753418
    9. '(j' → logprob: -15.87544059753418
    10. ']' → logprob: -16.00044059753418

Token 273: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01020777877420187
    2. ']=' → logprob: -5.135207653045654
    3. '-' → logprob: -6.135207653045654
    4. '=' → logprob: -7.135207653045654
    5. ']+=' → logprob: -7.260207653045654
    6. ' ]' → logprob: -8.010208129882812
    7. '][' → logprob: -9.010208129882812
    8. '   ' → logprob: -9.885208129882812
    9. '[j' → logprob: -10.010208129882812
    10. '+' → logprob: -11.635208129882812

Token 274: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.022022118791937828
    2. '+=' → logprob: -4.647022247314453
    3. ' =' → logprob: -4.772022247314453
    4. ']' → logprob: -6.647022247314453
    5. ' +=' → logprob: -6.772022247314453
    6. ']+=' → logprob: -7.147022247314453
    7. ']=' → logprob: -7.897022247314453
    8. '[' → logprob: -9.147022247314453
    9. '   ' → logprob: -12.272022247314453
    10. '[j' → logprob: -12.772022247314453

Token 275: ' Ar' (ID: 1754)
  Prédit: 'Ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.06202784180641174
    2. ' Ar' → logprob: -2.812027931213379
    3. '   ' → logprob: -10.562027931213379
    4. 'ar' → logprob: -10.812027931213379
    5. ' ar' → logprob: -13.062027931213379
    6. 'A' → logprob: -13.187027931213379
    7. ' ' → logprob: -13.624527931213379
    8. 'AR' → logprob: -13.874527931213379
    9. ' ' → logprob: -13.937027931213379
    10. '	' → logprob: -14.312027931213379

Token 276: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007656319532543421
    2. 'i' → logprob: -4.882656097412109
    3. '[j' → logprob: -10.88265609741211
    4. '[' → logprob: -11.75765609741211
    5. '(i' → logprob: -11.75765609741211
    6. ' [' → logprob: -12.13265609741211
    7. ' i' → logprob: -12.25765609741211
    8. '```' → logprob: -13.38265609741211
    9. '   ' → logprob: -13.50765609741211
    10. 'j' → logprob: -14.38265609741211

Token 277: '-' (ID: 12)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3145614564418793
    2. '[j' → logprob: -1.3145614862442017
    3. '[i' → logprob: -7.564561367034912
    4. '[' → logprob: -7.939561367034912
    5. '   ' → logprob: -9.31456184387207
    6. 'j' → logprob: -9.43956184387207
    7. ' ][' → logprob: -9.56456184387207
    8. ',j' → logprob: -9.68956184387207
    9. ']' → logprob: -10.18956184387207
    10. '	' → logprob: -10.93956184387207

Token 278: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00027849749312736094
    2. ' j' → logprob: -8.50027847290039
    3. '[j' → logprob: -10.12527847290039
    4. '1' → logprob: -10.87527847290039
    5. '	j' → logprob: -12.50027847290039
    6. ']' → logprob: -13.25027847290039
    7. '   ' → logprob: -13.25027847290039
    8. ',j' → logprob: -13.37527847290039
    9. '(j' → logprob: -13.50027847290039
    10. 'i' → logprob: -13.75027847290039

Token 279: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.043562110513448715
    2. '[j' → logprob: -3.168562173843384
    3. ' ][' → logprob: -8.293561935424805
    4. ']' → logprob: -9.293561935424805
    5. '[' → logprob: -9.418561935424805
    6. 'j' → logprob: -10.043561935424805
    7. '   ' → logprob: -10.543561935424805
    8. ')[' → logprob: -11.418561935424805
    9. '[i' → logprob: -11.543561935424805
    10. ' [' → logprob: -12.043561935424805

Token 280: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.3782830137643032e-05
    2. ' j' → logprob: -11.62501335144043
    3. '[j' → logprob: -12.75001335144043
    4. '   ' → logprob: -14.25001335144043
    5. '	j' → logprob: -14.75001335144043
    6. 'i' → logprob: -15.50001335144043
    7. ']' → logprob: -15.87501335144043
    8. 'Ar' → logprob: -16.00001335144043
    9. ',j' → logprob: -16.00001335144043
    10. '       ' → logprob: -16.62501335144043

Token 281: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00474102608859539
    2. ']+' → logprob: -5.379741191864014
    3. ' ]' → logprob: -9.629740715026855
    4. '+' → logprob: -9.879740715026855
    5. ']
' → logprob: -14.129740715026855
    6. '[j' → logprob: -14.129740715026855
    7. '[' → logprob: -14.754740715026855
    8. ' +' → logprob: -14.879740715026855
    9. '+j' → logprob: -15.129740715026855
    10. '+]' → logprob: -15.379740715026855

Token 282: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759987831115723
    2. '+' → logprob: -0.8259987831115723
    3. '+j' → logprob: -10.700998306274414
    4. ']' → logprob: -11.700998306274414
    5. ']+' → logprob: -11.700998306274414
    6. ')' → logprob: -12.200998306274414
    7. '[' → logprob: -12.575998306274414
    8. '+A' → logprob: -12.575998306274414
    9. ')+' → logprob: -13.200998306274414
    10. '[j' → logprob: -13.700998306274414

Token 283: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0009377855458296835
    2. ' A' → logprob: -7.0009379386901855
    3. '   ' → logprob: -11.000937461853027
    4. 'a' → logprob: -11.750937461853027
    5. ' ' → logprob: -14.500937461853027
    6. '       ' → logprob: -14.500937461853027
    7. '	A' → logprob: -14.750937461853027
    8. '  ' → logprob: -15.875937461853027
    9. '           ' → logprob: -16.250938415527344
    10. ' a' → logprob: -17.125938415527344

Token 284: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5965211391448975
    2. 'i' → logprob: -0.8465211391448975
    3. ' i' → logprob: -4.846521377563477
    4. '[j' → logprob: -4.971521377563477
    5. 'j' → logprob: -5.346521377563477
    6. ' [' → logprob: -7.971521377563477
    7. ' j' → logprob: -8.721521377563477
    8. '[' → logprob: -9.471521377563477
    9. '   ' → logprob: -9.721521377563477
    10. ' ' → logprob: -10.471521377563477

Token 285: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02848493680357933
    2. '-' → logprob: -3.77848482131958
    3. '[j' → logprob: -5.65348482131958
    4. '[i' → logprob: -7.15348482131958
    5. ' ][' → logprob: -7.65348482131958
    6. ']' → logprob: -9.153485298156738
    7. '   ' → logprob: -9.278485298156738
    8. ' -' → logprob: -9.653485298156738
    9. '[' → logprob: -9.903485298156738
    10. '1' → logprob: -10.653485298156738

Token 286: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.735893965815194e-05
    2. ' j' → logprob: -11.750017166137695
    3. '   ' → logprob: -12.125017166137695
    4. 'i' → logprob: -13.750017166137695
    5. '[j' → logprob: -13.750017166137695
    6. '
' → logprob: -14.375017166137695
    7. ' ' → logprob: -14.750017166137695
    8. '       ' → logprob: -16.125017166137695
    9. '	j' → logprob: -16.250017166137695
    10. '```' → logprob: -16.375017166137695

Token 287: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2826627790927887
    2. '-' → logprob: -1.4076627492904663
    3. ' ]' → logprob: -7.532662868499756
    4. '[i' → logprob: -7.657662868499756
    5. ' -' → logprob: -8.157662391662598
    6. '   ' → logprob: -9.782662391662598
    7. '       ' → logprob: -10.532662391662598
    8. ']
' → logprob: -10.782662391662598
    9. ')' → logprob: -10.907662391662598
    10. '[j' → logprob: -11.157662391662598

Token 288: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 289: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 290: ':
' (ID: 734)
  Prédit: ' Ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Ar' → logprob: -0.6362485885620117
    2. '           ' → logprob: -1.0112485885620117
    3. 'Ar' → logprob: -2.3862485885620117
    4. '   ' → logprob: -4.636248588562012
    5. '       ' → logprob: -6.136248588562012
    6. ':' → logprob: -6.261248588562012
    7. '               ' → logprob: -7.636248588562012
    8. ':
' → logprob: -7.886248588562012
    9. '          ' → logprob: -9.136248588562012
    10. '            ' → logprob: -9.761248588562012

Token 291: '           ' (ID: 352)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.713786244392395
    2. 'Ar' → logprob: -1.088786244392395
    3. ' Ar' → logprob: -2.3387861251831055
    4. '           ' → logprob: -2.9637861251831055
    5. 'A' → logprob: -4.3387861251831055
    6. ' ' → logprob: -5.4637861251831055
    7. '   ' → logprob: -5.5887861251831055
    8. ' A' → logprob: -6.2137861251831055
    9. '       ' → logprob: -6.3387861251831055
    10. '               ' → logprob: -7.8387861251831055

Token 292: ' Ar' (ID: 1754)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2428479939699173
    2. 'A' → logprob: -1.7428480386734009
    3. 'Ar' (adapté à ' Ar') → logprob: -3.2428479194641113
    4. ' A' → logprob: -7.242847919464111
    5. ' Ar' → logprob: -7.742847919464111
    6. ' ' → logprob: -7.992847919464111
    7. '           ' → logprob: -10.86784839630127
    8. 'AR' → logprob: -12.11784839630127
    9. '   ' → logprob: -12.24284839630127
    10. 'ar' → logprob: -12.74284839630127

Token 293: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016098834748845547
    2. '[' → logprob: -8.750161170959473
    3. '[I' → logprob: -13.750161170959473
    4. '0' → logprob: -14.750161170959473
    5. '[int' → logprob: -15.250161170959473
    6. ' [' → logprob: -15.625161170959473
    7. 'i' → logprob: -15.750161170959473
    8. '[j' → logprob: -16.125160217285156
    9. '=' → logprob: -16.500160217285156
    10. ',i' → logprob: -17.125160217285156

Token 294: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1016005128622055
    2. '[i' → logprob: -2.351600408554077
    3. ' ][' → logprob: -6.851600646972656
    4. '[' → logprob: -8.976600646972656
    5. ']' → logprob: -9.351600646972656
    6. '[j' → logprob: -10.101600646972656
    7. ' [' → logprob: -10.726600646972656
    8. '}[' → logprob: -10.976600646972656
    9. ',i' → logprob: -12.226600646972656
    10. '   ' → logprob: -12.476600646972656

Token 295: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0087516784551553e-05
    2. '0' → logprob: -12.50001049041748
    3. ' j' → logprob: -12.62501049041748
    4. '[j' → logprob: -13.87501049041748
    5. 'Ar' → logprob: -15.12501049041748
    6. '	j' → logprob: -15.25001049041748
    7. '1' → logprob: -15.37501049041748
    8. '   ' → logprob: -15.62501049041748
    9. '$j' → logprob: -16.000009536743164
    10. ',j' → logprob: -16.125009536743164

Token 296: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0232595205307007
    2. ']' → logprob: -1.0232595205307007
    3. ']=' → logprob: -1.5232595205307007
    4. '[j' → logprob: -3.3982596397399902
    5. '][' → logprob: -4.39825963973999
    6. '[i' → logprob: -4.89825963973999
    7. '[' → logprob: -5.14825963973999
    8. ' =' → logprob: -5.52325963973999
    9. ']+=' → logprob: -9.398259162902832
    10. ']==' → logprob: -11.398259162902832

Token 297: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -8.566264295950532e-05
    2. ' =' → logprob: -9.375085830688477
    3. '+=' → logprob: -14.125085830688477
    4. '=

' → logprob: -17.500085830688477
    5. ']=' → logprob: -17.750085830688477
    6. '==' → logprob: -18.500085830688477
    7. '.=' → logprob: -18.625085830688477
    8. '=
' → logprob: -18.750085830688477
    9. '=A' → logprob: -18.875085830688477
    10. ']' → logprob: -19.250085830688477

Token 298: ' A' (ID: 355)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.028763549402356148
    2. 'A' → logprob: -3.65376353263855
    3. ' ' → logprob: -6.153763771057129
    4. ' A' → logprob: -8.028763771057129
    5. '           ' → logprob: -12.278763771057129
    6. '   ' → logprob: -13.528763771057129
    7. '1' → logprob: -14.028763771057129
    8. '       ' → logprob: -15.903763771057129
    9. '            ' → logprob: -15.903763771057129
    10. 'a' → logprob: -16.028762817382812

Token 299: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000847267743665725
    2. 'i' → logprob: -7.125847339630127
    3. '[' → logprob: -10.125846862792969
    4. ' i' → logprob: -13.375846862792969
    5. '```' → logprob: -15.125846862792969
    6. ' ' → logprob: -15.750846862792969
    7. '[
' → logprob: -15.750846862792969
    8. '[j' → logprob: -16.00084686279297
    9. '	i' → logprob: -16.25084686279297
    10. '[I' → logprob: -16.50084686279297

Token 300: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004084335640072823
    2. '[i' → logprob: -5.75408411026001
    3. ' ][' → logprob: -7.62908411026001
    4. ']' → logprob: -8.379084587097168
    5. '[j' → logprob: -9.004084587097168
    6. '[' → logprob: -10.504084587097168
    7. 'i' → logprob: -10.879084587097168
    8. '	' → logprob: -12.504084587097168
    9. ',i' → logprob: -12.629084587097168
    10. '   ' → logprob: -13.004084587097168

Token 301: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.909333023941144e-05
    2. 'i' → logprob: -9.625068664550781
    3. '[j' → logprob: -13.750068664550781
    4. ' j' → logprob: -13.875068664550781
    5. '0' → logprob: -15.000068664550781
    6. '   ' → logprob: -16.12506866455078
    7. '	j' → logprob: -16.12506866455078
    8. ']' → logprob: -16.12506866455078
    9. '```' → logprob: -16.37506866455078
    10. '$j' → logprob: -16.75006866455078

Token 302: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 303: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5558944940567017
    2. 'print' → logprob: -1.0558944940567017
    3. '<|end|>' → logprob: -3.555894374847412
    4. 'sum' → logprob: -4.055894374847412
    5. '#' → logprob: -4.180894374847412
    6. ')' → logprob: -5.430894374847412
    7. 'result' → logprob: -6.180894374847412
    8. 'i' → logprob: -6.430894374847412
    9. '```' → logprob: -6.430894374847412
    10. 'total' → logprob: -6.680894374847412

Token 304: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07558932155370712
    2. ')' → logprob: -4.200589179992676
    3. 'print' → logprob: -4.450589179992676
    4. '#' → logprob: -4.575589179992676
    5. 'result' → logprob: -4.825589179992676
    6. 'n' → logprob: -4.950589179992676
    7. 'i' → logprob: -5.075589179992676
    8. '<|end|>' → logprob: -5.950589179992676
    9. ' for' → logprob: -6.075589179992676
    10. '```' → logprob: -6.200589179992676

Token 305: 'isation' (ID: 6993)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.054116129875183
    2. 'ze' → logprob: -1.179116129875183
    3. 'ize' → logprob: -2.1791162490844727
    4. 'z' → logprob: -2.1791162490844727
    5. 's' → logprob: -3.3041162490844727
    6. 'ization' → logprob: -3.4291162490844727
    7. 'isation' → logprob: -3.6791162490844727
    8. '#' → logprob: -5.179116249084473
    9. 'izing' → logprob: -5.679116249084473
    10. 'i' → logprob: -6.554116249084473

Token 306: ' du' (ID: 1462)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03880928456783295
    2. 'res' → logprob: -4.788809299468994
    3. 'DP' → logprob: -4.788809299468994
    4. 'D' → logprob: -4.913809299468994
    5. 'ans' → logprob: -6.038809299468994
    6. 'max' → logprob: -6.663809299468994
    7. 'result' → logprob: -6.913809299468994
    8. 'f' → logprob: -7.163809299468994
    9. 'best' → logprob: -7.288809299468994
    10. 'Dp' → logprob: -7.288809299468994

Token 307: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0076744151301681995
    2. 'DP' → logprob: -5.757674217224121
    3. 'res' → logprob: -6.632674217224121
    4. 'D' → logprob: -7.632674217224121
    5. 'f' → logprob: -7.632674217224121
    6. ' dp' → logprob: -8.382674217224121
    7. 'dist' → logprob: -8.382674217224121
    8. 'ans' → logprob: -8.382674217224121
    9. 'score' → logprob: -8.507674217224121
    10. 'best' → logprob: -8.507674217224121

Token 308: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018444083631038666
    2. 'DP' → logprob: -4.393444061279297
    3. 'D' → logprob: -5.643444061279297
    4. 'f' → logprob: -6.643444061279297
    5. 'F' → logprob: -7.768444061279297
    6. 'INF' → logprob: -7.893444061279297
    7. 'Dp' → logprob: -9.643444061279297
    8. 'ans' → logprob: -10.393444061279297
    9. 'inf' → logprob: -10.518444061279297
    10. 'd' → logprob: -10.643444061279297

Token 309: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.022177092730998993
    2. 'DP' → logprob: -4.397177219390869
    3. 'D' → logprob: -5.022177219390869
    4. 'f' → logprob: -6.772177219390869
    5. 'INF' → logprob: -7.272177219390869
    6. 'F' → logprob: -7.397177219390869
    7. 'import' → logprob: -8.772176742553711
    8. 'Dp' → logprob: -9.397176742553711
    9. 'inf' → logprob: -9.647176742553711
    10. 'd' → logprob: -10.147176742553711

Token 310: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0046285344287753105
    2. '=' → logprob: -5.379628658294678
    3. '=[' → logprob: -12.87962818145752
    4. ' =[' → logprob: -13.25462818145752
    5. '=[[' → logprob: -13.50462818145752
    6. '[' → logprob: -14.00462818145752
    7. ']' → logprob: -14.62962818145752
    8. ',' → logprob: -14.62962818145752
    9. ')' → logprob: -15.62962818145752
    10. '1' → logprob: -15.87962818145752

Token 311: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.4896458089351654
    2. '[' → logprob: -0.9896458387374878
    3. '[n' → logprob: -4.489645957946777
    4. ' [[' → logprob: -5.739645957946777
    5. ' [' → logprob: -6.989645957946777
    6. '[-' → logprob: -9.489645957946777
    7. '[a' → logprob: -12.114645957946777
    8. '[m' → logprob: -13.989645957946777
    9. '[s' → logprob: -13.989645957946777
    10. '[i' → logprob: -14.364645957946777

Token 312: 'float' (ID: 7829)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.256745308637619
    2. 'float' → logprob: -1.5067453384399414
    3. 'False' → logprob: -5.381745338439941
    4. '-' → logprob: -8.881745338439941
    5. '10' → logprob: -10.631745338439941
    6. ' float' → logprob: -11.256745338439941
    7. 'None' → logprob: -11.756745338439941
    8. '(' → logprob: -12.506745338439941
    9. 'int' → logprob: -12.506745338439941
    10. '1' → logprob: -12.881745338439941

Token 313: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00017588881019037217
    2. ''in' → logprob: -9.125175476074219
    3. ''' → logprob: -10.000175476074219
    4. '('-' → logprob: -11.000175476074219
    5. '(' → logprob: -12.625175476074219
    6. 'inf' → logprob: -14.875175476074219
    7. '("' → logprob: -15.500175476074219
    8. ''ex' → logprob: -15.875175476074219
    9. '   ' → logprob: -16.00017547607422
    10. ''-' → logprob: -16.00017547607422

Token 314: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.4617256056226324e-05
    2. ''in' → logprob: -11.875014305114746
    3. '-inf' → logprob: -11.875014305114746
    4. '"' → logprob: -15.250014305114746
    5. ''' → logprob: -15.500014305114746
    6. 'in' → logprob: -15.625014305114746
    7. ' inf' → logprob: -17.500015258789062
    8. '_inf' → logprob: -17.625015258789062
    9. '.inf' → logprob: -18.125015258789062
    10. 'INF' → logprob: -18.875015258789062

Token 315: '")]' (ID: 71224)
  Prédit: '")]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")]' → logprob: -0.35910916328430176
    2. ')]' → logprob: -1.6091091632843018
    3. ')' → logprob: -2.7341091632843018
    4. '")' → logprob: -3.3591091632843018
    5. ']' → logprob: -6.609108924865723
    6. '()' → logprob: -8.609108924865723
    7. '')]' → logprob: -8.859108924865723
    8. '"]' → logprob: -9.734108924865723
    9. ' "' → logprob: -10.109108924865723
    10. '"' → logprob: -10.109108924865723

Token 316: '*(' (ID: 14793)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2870085537433624
    2. ']*(' → logprob: -2.03700852394104
    3. ' for' → logprob: -2.53700852394104
    4. ']' → logprob: -3.53700852394104
    5. ']*' → logprob: -4.537008762359619
    6. '*(' → logprob: -9.787008285522461
    7. '   ' → logprob: -10.037008285522461
    8. ']+' → logprob: -10.412008285522461
    9. '	for' → logprob: -11.037008285522461
    10. '*' → logprob: -12.412008285522461

Token 317: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00012511172099038959
    2. '(n' → logprob: -9.00012493133545
    3. ' n' → logprob: -14.00012493133545
    4. '
' → logprob: -14.75012493133545
    5. '   ' → logprob: -15.25012493133545
    6. '1' → logprob: -17.125125885009766
    7. ' (' → logprob: -17.250125885009766
    8. ' ' → logprob: -17.250125885009766
    9. '(' → logprob: -17.500125885009766
    10. '	n' → logprob: -17.500125885009766

Token 318: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005542277824133635
    2. ')' → logprob: -5.255542278289795
    3. ' +' → logprob: -9.505541801452637
    4. '+
' → logprob: -9.505541801452637
    5. ')]' → logprob: -9.630541801452637
    6. '+n' → logprob: -9.755541801452637
    7. '+)' → logprob: -11.255541801452637
    8. ')n' → logprob: -12.005541801452637
    9. ')
' → logprob: -12.255541801452637
    10. 'n' → logprob: -12.755541801452637

Token 319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6405310816480778e-05
    2. '2' → logprob: -11.125016212463379
    3. ' ' → logprob: -14.375016212463379
    4. '+' → logprob: -15.000016212463379
    5. '```' → logprob: -15.125016212463379
    6. 'n' → logprob: -15.500016212463379
    7. '(n' → logprob: -15.875016212463379
    8. '   ' → logprob: -17.000017166137695
    9. '(' → logprob: -17.000017166137695
    10. ')' → logprob: -17.750017166137695

Token 320: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.771655115589965e-05
    2. ')]' → logprob: -11.250018119812012
    3. ' )' → logprob: -12.625018119812012
    4. 'for' → logprob: -14.375018119812012
    5. ']' → logprob: -14.500018119812012
    6. ')
' → logprob: -16.750017166137695
    7. ' for' → logprob: -17.000017166137695
    8. ' ' → logprob: -17.250017166137695
    9. '   ' → logprob: -17.375017166137695
    10. '))' → logprob: -17.500017166137695

Token 321: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3197135925292969
    2. 'for' → logprob: -1.5697135925292969
    3. ']' → logprob: -2.819713592529297
    4. '
' → logprob: -5.194713592529297
    5. ']
' → logprob: -9.444713592529297
    6. ' 
' → logprob: -9.444713592529297
    7. ' ]' → logprob: -9.569713592529297
    8. '\n' → logprob: -10.319713592529297
    9. '	for' → logprob: -10.319713592529297
    10. ')' → logprob: -11.194713592529297

Token 322: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.038238510489463806
    2. ' _' → logprob: -3.288238525390625
    3. '_in' → logprob: -9.663238525390625
    4. '_range' → logprob: -9.663238525390625
    5. ' range' → logprob: -10.288238525390625
    6. ' in' → logprob: -10.913238525390625
    7. '_i' → logprob: -11.413238525390625
    8. ' i' → logprob: -13.038238525390625
    9. 'range' → logprob: -13.538238525390625
    10. 'in' → logprob: -14.038238525390625

Token 323: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3954463601112366
    2. 'in' → logprob: -1.8954463005065918
    3. ' in' → logprob: -1.8954463005065918
    4. ' range' → logprob: -3.645446300506592
    5. 'n' → logprob: -12.77044677734375
    6. 'ange' → logprob: -13.39544677734375
    7. ' ' → logprob: -13.39544677734375
    8. '(range' → logprob: -13.64544677734375
    9. '_' → logprob: -14.27044677734375
    10. '	range' → logprob: -15.89544677734375

Token 324: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011047814972698689
    2. ' range' → logprob: -4.511047840118408
    3. '(range' → logprob: -16.76104736328125
    4. ' ' → logprob: -17.76104736328125
    5. '	range' → logprob: -18.01104736328125
    6. 'in' → logprob: -19.63604736328125
    7. 'n' → logprob: -19.76104736328125
    8. ' in' → logprob: -19.88604736328125
    9. '_' → logprob: -19.88604736328125
    10. 'rang' → logprob: -20.26104736328125

Token 325: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.26816847920417786
    2. ' range' → logprob: -1.5181684494018555
    3. '(n' → logprob: -4.5181684494018555
    4. '(range' → logprob: -5.2681684494018555
    5. 'n' → logprob: -10.393168449401855
    6. ' (' → logprob: -11.518168449401855
    7. ' n' → logprob: -13.393168449401855
    8. '(' → logprob: -13.768168449401855
    9. '	range' → logprob: -14.143168449401855
    10. ' in' → logprob: -14.768168449401855

Token 326: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5048530030981055e-06
    2. '+
' → logprob: -13.875001907348633
    3. ' +' → logprob: -14.875001907348633
    4. ')' → logprob: -16.875001907348633
    5. '+n' → logprob: -17.000001907348633
    6. '+)' → logprob: -17.500001907348633
    7. ')]' → logprob: -17.625001907348633
    8. '()+' → logprob: -18.250001907348633
    9. ')])' → logprob: -18.875001907348633
    10. '+"]' → logprob: -19.625001907348633

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001932205050252378
    2. '2' → logprob: -6.251932144165039
    3. 'n' → logprob: -14.314432144165039
    4. '+' → logprob: -14.439432144165039
    5. ' ' → logprob: -14.439432144165039
    6. '```' → logprob: -15.001932144165039
    7. '
' → logprob: -15.126932144165039
    8. 'range' → logprob: -15.251932144165039
    9. ')' → logprob: -15.939432144165039
    10. '(' → logprob: -16.50193214416504

Token 328: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000712074339389801
    2. ')' → logprob: -7.500711917877197
    3. ']' → logprob: -8.750712394714355
    4. '])]' → logprob: -15.250712394714355
    5. ')])' → logprob: -15.250712394714355
    6. ')],' → logprob: -15.875712394714355
    7. '])' → logprob: -16.25071144104004
    8. ')]
' → logprob: -16.75071144104004
    9. '))' → logprob: -17.25071144104004
    10. ')][' → logprob: -17.75071144104004

Token 329: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0002036595979006961
    2. 'for' → logprob: -8.500204086303711
    3. ' for' → logprob: -16.87520408630371
    4. ' dp' → logprob: -17.00020408630371
    5. '	dp' → logprob: -17.37520408630371
    6. '```' → logprob: -18.25020408630371
    7. 'dt' → logprob: -19.25020408630371
    8. '(dp' → logprob: -19.87520408630371
    9. '_dp' → logprob: -20.37520408630371
    10. '<|end|>' → logprob: -20.62520408630371

Token 330: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.392202976712724e-06
    2. '0' → logprob: -12.750006675720215
    3. '][' → logprob: -13.500006675720215
    4. '[n' → logprob: -14.000006675720215
    5. '```' → logprob: -15.500006675720215
    6. '<|end|>' → logprob: -15.500006675720215
    7. ' [' → logprob: -15.750006675720215
    8. '2' → logprob: -16.3750057220459
    9. '[
' → logprob: -16.5000057220459
    10. ' ' → logprob: -16.8750057220459

Token 331: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. '1' → logprob: -14.875000953674316
    3. 'n' → logprob: -15.500000953674316
    4. ' ' → logprob: -17.5
    5. '
' → logprob: -20.0
    6. '```' → logprob: -20.375
    7. '۰' → logprob: -20.875
    8. '][' → logprob: -21.125
    9. '-' → logprob: -22.0625
    10. 'i' → logprob: -22.0625

Token 332: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00029112942866049707
    2. ']' → logprob: -8.375290870666504
    3. '[' → logprob: -10.000290870666504
    4. ' ][' → logprob: -11.250290870666504
    5. ']=' → logprob: -14.500290870666504
    6. '"][' → logprob: -14.500290870666504
    7. ''][' → logprob: -15.000290870666504
    8. '0' → logprob: -15.750290870666504
    9. '()][' → logprob: -15.875290870666504
    10. ']][' → logprob: -16.25029182434082

Token 333: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6286106983898208e-05
    2. '1' → logprob: -11.250016212463379
    3. 'n' → logprob: -12.750016212463379
    4. ' ' → logprob: -15.187516212463379
    5. ']' → logprob: -17.000017166137695
    6. '۰' → logprob: -17.250017166137695
    7. '-' → logprob: -17.500017166137695
    8. '```' → logprob: -17.937517166137695
    9. '2' → logprob: -18.562517166137695
    10. '   ' → logprob: -18.687517166137695

Token 334: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.9981420336989686e-05
    2. ']=' → logprob: -10.875020027160645
    3. ' ]' → logprob: -13.875020027160645
    4. '=' → logprob: -16.750019073486328
    5. ']
' → logprob: -19.000019073486328
    6. '`]' → logprob: -19.250019073486328
    7. '']' → logprob: -19.875019073486328
    8. ' =' → logprob: -20.625019073486328
    9. '"]' → logprob: -20.750019073486328
    10. '0' → logprob: -21.125019073486328

Token 335: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020667314529419
    2. ' =' → logprob: -2.3502066135406494
    3. '=
' → logprob: -18.22520637512207
    4. '0' → logprob: -19.10020637512207
    5. ' ' → logprob: -19.35020637512207
    6. '.=' → logprob: -19.47520637512207
    7. '＝' → logprob: -19.60020637512207
    8. '=}' → logprob: -19.72520637512207
    9. '=

' → logprob: -19.72520637512207
    10. '=True' → logprob: -19.97520637512207

Token 336: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. ' ' → logprob: -20.125
    4. '۰' → logprob: -20.125
    5. '   ' → logprob: -20.25
    6. '00' → logprob: -20.625
    7. '  ' → logprob: -21.125
    8. '```' → logprob: -21.4375
    9. '1' → logprob: -21.5
    10. '  
' → logprob: -22.0625

Token 337: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '00' → logprob: -20.125
    4. '1' → logprob: -20.25
    5. '۰' → logprob: -21.25
    6. 'float' → logprob: -21.375
    7. '000' → logprob: -21.5625
    8. '   ' → logprob: -21.6875
    9. 'int' → logprob: -21.9375
    10. '```' → logprob: -22.0

Token 338: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.362307223957032e-05
    2. ' for' → logprob: -9.625073432922363
    3. '
' → logprob: -12.000073432922363
    4. '<|end|>' → logprob: -14.125073432922363
    5. ')' → logprob: -14.500073432922363
    6. '```' → logprob: -16.00007438659668
    7. ']' → logprob: -17.50007438659668
    8. '#' → logprob: -18.37507438659668
    9. '  
' → logprob: -18.75007438659668
    10. 'def' → logprob: -18.75007438659668

Token 339: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00020652047533076257
    2. ' for' → logprob: -8.50020694732666
    3. ')' → logprob: -13.50020694732666
    4. '<|end|>' → logprob: -13.75020694732666
    5. '```' → logprob: -15.00020694732666
    6. '
' → logprob: -15.87520694732666
    7. ']' → logprob: -16.250205993652344
    8. 'n' → logprob: -17.125205993652344
    9. '	for' → logprob: -18.000205993652344
    10. '#' → logprob: -18.000205993652344

Token 340: ' Je' (ID: 4678)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -16.75
    3. 'def' → logprob: -19.75
    4. 'from' → logprob: -20.625
    5. '#' → logprob: -22.25
    6. '
' → logprob: -22.5
    7. '	for' → logprob: -23.0
    8. '```' → logprob: -23.5
    9. '   ' → logprob: -24.125
    10. 'For' → logprob: -24.5

Token 341: ' crois' (ID: 65485)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11418627202510834
    2. ' for' → logprob: -2.2391862869262695
    3. 'or' → logprob: -6.7391862869262695
    4. ' ' → logprob: -9.36418628692627
    5. 's' → logprob: -10.61418628692627
    6. 'r' → logprob: -10.98918628692627
    7. ' =' → logprob: -11.23918628692627
    8. 'f' → logprob: -11.73918628692627
    9. 'n' → logprob: -11.73918628692627
    10. '=' → logprob: -12.23918628692627

Token 342: ' que' (ID: 661)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24262185394763947
    2. 'for' → logprob: -1.742621898651123
    3. ' i' → logprob: -3.242621898651123
    4. '   ' → logprob: -7.742621898651123
    5. 'i' → logprob: -7.867621898651123
    6. ' that' → logprob: -8.617621421813965
    7. ' n' → logprob: -9.367621421813965
    8. ' ' → logprob: -9.492621421813965
    9. ')' → logprob: -10.242621421813965
    10. ' in' → logprob: -10.992621421813965

Token 343: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007110013975761831
    2. ' for' → logprob: -7.250710964202881
    3. 'n' → logprob: -14.250711441040039
    4. 'range' → logprob: -14.875711441040039
    5. '
' → logprob: -18.37571144104004
    6. '```' → logprob: -20.25071144104004
    7. 'from' → logprob: -20.50071144104004
    8. 'in' → logprob: -20.50071144104004
    9. 's' → logprob: -20.75071144104004
    10. ')' → logprob: -20.87571144104004

Token 344: ''est' (ID: 6616)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.30627644062042236
    2. ''' → logprob: -2.306276321411133
    3. 'a' → logprob: -2.556276321411133
    4. ''est' → logprob: -3.306276321411133
    5. ''ai' → logprob: -4.181276321411133
    6. ''#' → logprob: -4.431276321411133
    7. 'est' → logprob: -5.181276321411133
    8. ''a' → logprob: -5.181276321411133
    9. ''''' → logprob: -6.056276321411133
    10. 'i' → logprob: -7.181276321411133

Token 345: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19539985060691833
    2. ' for' → logprob: -2.070399761199951
    3. 'pour' → logprob: -4.320399761199951
    4. ' la' → logprob: -4.445399761199951
    5. 'le' → logprob: -4.445399761199951
    6. 'la' → logprob: -5.570399761199951
    7. 'part' → logprob: -5.945399761199951
    8. ' pour' → logprob: -6.320399761199951
    9. 'n' → logprob: -6.320399761199951
    10. ' le' → logprob: -6.945399761199951

Token 346: ' partie' (ID: 22139)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.08907272666692734
    2. 'for' → logprob: -2.5890727043151855
    3. ' suite' → logprob: -5.3390727043151855
    4. 'fin' → logprob: -5.5890727043151855
    5. 's' → logprob: -8.089073181152344
    6. 'su' → logprob: -8.214073181152344
    7. 'part' → logprob: -8.339073181152344
    8. ' for' → logprob: -8.589073181152344
    9. 'b' → logprob: -9.214073181152344
    10. '#' → logprob: -9.214073181152344

Token 347: ' principale' (ID: 68926)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014740334590896964
    2. ' for' → logprob: -7.001473903656006
    3. 'pour' → logprob: -7.751473903656006
    4. '#' → logprob: -10.126474380493164
    5. 'du' → logprob: -10.876474380493164
    6. 'final' → logprob: -11.001474380493164
    7. '```' → logprob: -11.001474380493164
    8. '   ' → logprob: -12.126474380493164
    9. 'suite' → logprob: -12.251474380493164
    10. 'n' → logprob: -12.376474380493164

Token 348: '...
' (ID: 4908)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.860340752406046e-05
    2. ' for' → logprob: -9.7500581741333
    3. '
' → logprob: -15.7500581741333
    4. ')' → logprob: -17.000059127807617
    5. ']' → logprob: -18.250059127807617
    6. '```' → logprob: -18.375059127807617
    7. 'i' → logprob: -18.875059127807617
    8. '	for' → logprob: -20.125059127807617
    9. ',' → logprob: -21.500059127807617
    10. ':' → logprob: -21.750059127807617

Token 349: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.339278580620885e-06
    2. ' for' → logprob: -13.000001907348633
    3. '	for' → logprob: -23.000001907348633
    4. 'i' → logprob: -23.125001907348633
    5. '
' → logprob: -23.625001907348633
    6. 'k' → logprob: -23.625001907348633
    7. 'from' → logprob: -24.000001907348633
    8. 'range' → logprob: -24.375001907348633
    9. 'def' → logprob: -24.500001907348633
    10. ')' → logprob: -24.750001907348633

Token 350: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5939769148826599
    2. ' length' → logprob: -1.4689769744873047
    3. 'i' → logprob: -1.8439769744873047
    4. ' l' → logprob: -3.8439769744873047
    5. 'length' → logprob: -3.9689769744873047
    6. 'l' → logprob: -4.968976974487305
    7. ' k' → logprob: -5.468976974487305
    8. 'k' → logprob: -6.343976974487305
    9. ' j' → logprob: -7.093976974487305
    10. ' s' → logprob: -7.343976974487305

Token 351: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07005947828292847
    2. 'in' → logprob: -2.6950595378875732
    3. ' ' → logprob: -9.570059776306152
    4. '1' → logprob: -10.695059776306152
    5. '	in' → logprob: -11.820059776306152
    6. '   ' → logprob: -12.570059776306152
    7. '+' → logprob: -12.695059776306152
    8. '0' → logprob: -12.820059776306152
    9. 'n' → logprob: -12.945059776306152
    10. ',' → logprob: -13.195059776306152

Token 352: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141607522964478
    2. ' range' → logprob: -1.701416015625
    3. ' in' → logprob: -14.076416015625
    4. ' ' → logprob: -14.326416015625
    5. 'in' → logprob: -14.326416015625
    6. '(range' → logprob: -14.951416015625
    7. '   ' → logprob: -15.326416015625
    8. '	range' → logprob: -16.701416015625
    9. '```' → logprob: -17.076416015625
    10. '  ' → logprob: -17.326416015625

Token 353: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28201037645339966
    2. '(n' → logprob: -1.4070103168487549
    3. '(range' → logprob: -7.782010555267334
    4. ' (' → logprob: -8.407010078430176
    5. 'range' → logprob: -9.032010078430176
    6. ' in' → logprob: -10.657010078430176
    7. 'in' → logprob: -10.782010078430176
    8. '(in' → logprob: -11.282010078430176
    9. '1' → logprob: -11.532010078430176
    10. ' range' → logprob: -11.532010078430176

Token 354: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016943469643592834
    2. '):
' → logprob: -4.891943454742432
    3. ' +' → logprob: -5.266943454742432
    4. '):' → logprob: -5.516943454742432
    5. '   ' → logprob: -9.39194393157959
    6. '1' → logprob: -11.39194393157959
    7. ' ' → logprob: -12.51694393157959
    8. '
' → logprob: -12.76694393157959
    9. ',' → logprob: -12.89194393157959
    10. '+n' → logprob: -13.01694393157959

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.718606891809031e-05
    2. 'n' → logprob: -10.125066757202148
    3. '2' → logprob: -11.500066757202148
    4. '+' → logprob: -11.750066757202148
    5. ' ' → logprob: -12.125066757202148
    6. '(' → logprob: -13.625066757202148
    7. '):
' → logprob: -14.625066757202148
    8. 'range' → logprob: -14.625066757202148
    9. '
' → logprob: -14.875066757202148
    10. '   ' → logprob: -14.875066757202148

Token 356: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3133077025413513
    2. '):
' → logprob: -1.313307762145996
    3. '):
' → logprob: -10.688307762145996
    4. ':' → logprob: -10.938307762145996
    5. ')' → logprob: -12.813307762145996
    6. ' ):' → logprob: -14.063307762145996
    7. '):

' → logprob: -14.313307762145996
    8. ',' → logprob: -14.938307762145996
    9. '   ' → logprob: -15.063307762145996
    10. ':
' → logprob: -15.688307762145996

Token 357: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06643451005220413
    2. ' for' → logprob: -2.816434621810913
    3. 'for' → logprob: -5.441434383392334
    4. '	for' → logprob: -9.066434860229492
    5. '   ' → logprob: -11.941434860229492
    6. ' ' → logprob: -13.691434860229492
    7. '   ' → logprob: -16.316434860229492
    8. '  ' → logprob: -16.441434860229492
    9. '       ' → logprob: -16.816434860229492
    10. '    ' → logprob: -16.941434860229492

Token 358: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24623830616474152
    2. 'for' (adapté à ' for') → logprob: -1.996238350868225
    3. '   ' → logprob: -2.4962382316589355
    4. '	for' → logprob: -10.746238708496094
    5. ' ' → logprob: -13.121238708496094
    6. '   ' → logprob: -14.246238708496094
    7. '\t' → logprob: -17.121238708496094
    8. ' if' → logprob: -17.496238708496094
    9. '   ' → logprob: -17.496238708496094
    10. '  ' → logprob: -17.621238708496094

Token 359: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.038546428084373474
    2. ' j' → logprob: -3.288546323776245
    3. 'k' → logprob: -7.913546562194824
    4. '   ' → logprob: -10.413546562194824
    5. 'p' → logprob: -10.788546562194824
    6. 's' → logprob: -11.288546562194824
    7. 'l' → logprob: -11.413546562194824
    8. ' k' → logprob: -11.413546562194824
    9. 'w' → logprob: -11.913546562194824
    10. 'x' → logprob: -11.913546562194824

Token 360: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1602584570646286
    2. 'in' → logprob: -1.910258412361145
    3. '	in' → logprob: -11.160258293151855
    4. ' i' → logprob: -12.785258293151855
    5. 'range' → logprob: -12.785258293151855
    6. 'n' → logprob: -12.910258293151855
    7. ' ' → logprob: -12.910258293151855
    8. '   ' → logprob: -13.285258293151855
    9. 'i' → logprob: -14.160258293151855
    10. 'In' → logprob: -14.160258293151855

Token 361: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006721178535372019
    2. ' range' → logprob: -5.006721019744873
    3. '(range' → logprob: -12.631721496582031
    4. '   ' → logprob: -13.381721496582031
    5. ' ' → logprob: -14.256721496582031
    6. '  ' → logprob: -16.25672149658203
    7. 'rang' → logprob: -17.00672149658203
    8. 'in' → logprob: -17.63172149658203
    9. '	range' → logprob: -17.63172149658203
    10. 'ran' → logprob: -17.75672149658203

Token 362: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.000462366413557902
    2. '(n' → logprob: -8.375462532043457
    3. '(' → logprob: -9.250462532043457
    4. '(j' → logprob: -9.500462532043457
    5. '(range' → logprob: -10.000462532043457
    6. 'range' → logprob: -11.375462532043457
    7. '(in' → logprob: -13.250462532043457
    8. ' (' → logprob: -14.000462532043457
    9. 'in' → logprob: -14.875462532043457
    10. ' range' → logprob: -14.875462532043457

Token 363: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029417293146252632
    2. '):' → logprob: -3.6544172763824463
    3. '):
' → logprob: -6.279417514801025
    4. ',' → logprob: -7.029417514801025
    5. ' +' → logprob: -8.154417037963867
    6. '   ' → logprob: -11.154417037963867
    7. ',n' → logprob: -11.404417037963867
    8. ')' → logprob: -11.529417037963867
    9. '+
' → logprob: -12.154417037963867
    10. ' ):' → logprob: -12.404417037963867

Token 364: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00047630956396460533
    2. ' n' → logprob: -7.750476360321045
    3. 'i' → logprob: -10.125475883483887
    4. '   ' → logprob: -12.500475883483887
    5. ' ' → logprob: -14.750475883483887
    6. '
' → logprob: -15.250475883483887
    7. '	n' → logprob: -15.375475883483887
    8. '(n' → logprob: -15.625475883483887
    9. ' i' → logprob: -16.000476837158203
    10. 'j' → logprob: -16.125476837158203

Token 365: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.392824874026701e-05
    2. '+
' → logprob: -10.37503433227539
    3. ' +' → logprob: -13.12503433227539
    4. '):
' → logprob: -15.12503433227539
    5. '+j' → logprob: -15.37503433227539
    6. ')+' → logprob: -16.62503433227539
    7. '+:' → logprob: -17.12503433227539
    8. '1' → logprob: -17.12503433227539
    9. '):' → logprob: -17.25003433227539
    10. '   ' → logprob: -17.62503433227539

Token 366: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00103995599783957
    2. '+' → logprob: -6.876039981842041
    3. ')' → logprob: -12.626039505004883
    4. 'n' → logprob: -13.001039505004883
    5. ' ' → logprob: -14.376039505004883
    6. ')+' → logprob: -15.126039505004883
    7. 'j' → logprob: -16.001039505004883
    8. '):
' → logprob: -16.126039505004883
    9. '+)' → logprob: -16.126039505004883
    10. '+
' → logprob: -16.501039505004883

Token 367: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07106237858533859
    2. '):
' → logprob: -2.6960623264312744
    3. ':' → logprob: -6.8210625648498535
    4. ')' → logprob: -11.321062088012695
    5. '+' → logprob: -11.446062088012695
    6. '   ' → logprob: -12.071062088012695
    7. ':
' → logprob: -13.446062088012695
    8. ' ):' → logprob: -13.946062088012695
    9. '}:' → logprob: -14.071062088012695
    10. '):
' → logprob: -14.196062088012695

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01331128366291523
    2. '   ' → logprob: -5.138311386108398
    3. ' for' → logprob: -5.513311386108398
    4. ' k' → logprob: -7.013311386108398
    5. 'for' → logprob: -7.138311386108398
    6. 'k' → logprob: -7.888311386108398
    7. '	   ' → logprob: -8.388311386108398
    8. '    ' → logprob: -8.388311386108398
    9. ' if' → logprob: -8.388311386108398
    10. '	' → logprob: -8.638311386108398

Token 369: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9695687294006348
    2. 'k' → logprob: -1.0945687294006348
    3. 'for' → logprob: -1.5945687294006348
    4. '       ' → logprob: -3.4695687294006348
    5. '   ' → logprob: -3.8445687294006348
    6. ' if' → logprob: -3.9695687294006348
    7. ' for' → logprob: -4.719568729400635
    8. ' k' → logprob: -5.969568729400635
    9. '           ' → logprob: -9.469568252563477
    10. '    ' → logprob: -10.219568252563477

Token 370: ' dp' (ID: 21546)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.157289743423462
    2. ' j' → logprob: -1.282289743423462
    3. ' i' → logprob: -1.532289743423462
    4. 'i' → logprob: -1.657289743423462
    5. ' dp' → logprob: -7.282289505004883
    6. 'dp' → logprob: -7.657289505004883
    7. '   ' → logprob: -8.157289505004883
    8. ' (' → logprob: -10.532289505004883
    9. ' not' → logprob: -10.782289505004883
    10. '(i' → logprob: -10.907289505004883

Token 371: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.127333340875339e-06
    2. '[j' → logprob: -12.500003814697266
    3. '[' → logprob: -15.000003814697266
    4. 'i' → logprob: -16.500003814697266
    5. '[I' → logprob: -17.750003814697266
    6. '[
' → logprob: -18.250003814697266
    7. ' [' → logprob: -19.000003814697266
    8. '```' → logprob: -19.750003814697266
    9. '
' → logprob: -20.375003814697266
    10. '[n' → logprob: -20.875003814697266

Token 372: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.03887373208999634
    2. '][' → logprob: -3.5388736724853516
    3. '[i' → logprob: -4.788873672485352
    4. '[' → logprob: -7.413873672485352
    5. '[
' → logprob: -9.663873672485352
    6. '[n' → logprob: -10.663873672485352
    7. '
' → logprob: -11.788873672485352
    8. ']' → logprob: -11.913873672485352
    9. '[I' → logprob: -11.913873672485352
    10. '```' → logprob: -11.913873672485352

Token 373: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005903251585550606
    2. 'n' → logprob: -7.8755903244018555
    3. 'float' → logprob: -8.500590324401855
    4. 'i' → logprob: -12.500590324401855
    5. ' j' → logprob: -13.500590324401855
    6. 'inf' → logprob: -14.250590324401855
    7. '
' → logprob: -15.125590324401855
    8. '[j' → logprob: -15.250590324401855
    9. '0' → logprob: -15.500590324401855
    10. ' float' → logprob: -16.125591278076172

Token 374: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9623871445655823
    2. '==' → logprob: -1.2123870849609375
    3. ']' → logprob: -1.3373870849609375
    4. ' ==' → logprob: -4.0873870849609375
    5. '!=' → logprob: -4.0873870849609375
    6. ' <' → logprob: -4.3373870849609375
    7. '<float' → logprob: -5.5873870849609375
    8. ']==' → logprob: -5.9623870849609375
    9. ')' → logprob: -6.7123870849609375
    10. ' !=' → logprob: -6.9623870849609375

Token 375: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5625402331352234
    2. '<' → logprob: -1.1875402927398682
    3. '!=' → logprob: -2.687540292739868
    4. ' ==' → logprob: -3.687540292739868
    5. ' <' → logprob: -4.187540054321289
    6. '<float' → logprob: -4.312540054321289
    7. ' !=' → logprob: -5.687540054321289
    8. '<int' → logprob: -10.187540054321289
    9. '```' → logprob: -10.187540054321289
    10. 'float' → logprob: -10.437540054321289

Token 376: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0012377295643091202
    2. '0' → logprob: -7.126237869262695
    3. ' float' → logprob: -7.751237869262695
    4. '	float' → logprob: -13.001237869262695
    5. ' ' → logprob: -14.751237869262695
    6. '   ' → logprob: -15.751237869262695
    7. '(float' → logprob: -16.876237869262695
    8. '<float' → logprob: -16.876237869262695
    9. 'flo' → logprob: -17.001237869262695
    10. '=float' → logprob: -17.376237869262695

Token 377: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0001589618914294988
    2. '('' → logprob: -8.87515926361084
    3. '(' → logprob: -10.87515926361084
    4. '(in' → logprob: -16.500158309936523
    5. ' ("' → logprob: -16.875158309936523
    6. '("("' → logprob: -16.875158309936523
    7. '("+' → logprob: -17.000158309936523
    8. '"' → logprob: -17.875158309936523
    9. '("-' → logprob: -18.375158309936523
    10. '(
' → logprob: -20.000158309936523

Token 378: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -2.816093228830141e-06
    2. ''in' → logprob: -13.62500286102295
    3. '"' → logprob: -14.25000286102295
    4. 'in' → logprob: -14.87500286102295
    5. ' inf' → logprob: -15.12500286102295
    6. 'i' → logprob: -15.37500286102295
    7. ''' → logprob: -17.500001907348633
    8. ''i' → logprob: -18.250001907348633
    9. 'import' → logprob: -18.500001907348633
    10. ')' → logprob: -18.625001907348633

Token 379: '"):
' (ID: 33645)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013766882941126823
    2. ')' → logprob: -5.013766765594482
    3. '):
' → logprob: -5.513766765594482
    4. '"):' → logprob: -6.013766765594482
    5. ':' → logprob: -7.638766765594482
    6. '"):
' → logprob: -11.01376724243164
    7. '")' → logprob: -11.13876724243164
    8. '       ' → logprob: -11.76376724243164
    9. '":' → logprob: -11.88876724243164
    10. ' ):' → logprob: -12.13876724243164

Token 380: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7615152597427368
    2. ' continue' → logprob: -0.7615152597427368
    3. 'continue' → logprob: -3.0115151405334473
    4. '       ' → logprob: -4.511515140533447
    5. '               ' → logprob: -6.136515140533447
    6. '	continue' → logprob: -6.761515140533447
    7. '   ' → logprob: -7.011515140533447
    8. ':' → logprob: -7.261515140533447
    9. '		' → logprob: -7.761515140533447
    10. ' continues' → logprob: -8.761515617370605

Token 381: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.506483256816864
    2. ' continue' → logprob: -1.2564833164215088
    3. '       ' → logprob: -2.256483316421509
    4. '           ' → logprob: -5.13148307800293
    5. '   ' → logprob: -6.38148307800293
    6. '	continue' → logprob: -8.38148307800293
    7. '               ' → logprob: -8.75648307800293
    8. '_continue' → logprob: -11.00648307800293
    9. 'Continue' → logprob: -12.75648307800293
    10. 'contin' → logprob: -13.75648307800293

Token 382: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017717881128191948
    2. ' for' → logprob: -4.6427178382873535
    3. '   ' → logprob: -5.6427178382873535
    4. 'for' → logprob: -5.7677178382873535
    5. '<|end|>' → logprob: -7.0177178382873535
    6. '
' → logprob: -9.642718315124512
    7. ',' → logprob: -9.767718315124512
    8. '        
' → logprob: -9.767718315124512
    9. '           ' → logprob: -10.142718315124512
    10. ')' → logprob: -10.767718315124512

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3525370955467224
    2. 'for' → logprob: -1.4775371551513672
    3. ' for' → logprob: -2.852537155151367
    4. '   ' → logprob: -5.102537155151367
    5. 'k' → logprob: -5.977537155151367
    6. ' k' → logprob: -6.102537155151367
    7. '           ' → logprob: -9.102537155151367
    8. '        
' → logprob: -9.977537155151367
    9. '```' → logprob: -10.227537155151367
    10. ',k' → logprob: -10.477537155151367

Token 384: ' l' (ID: 305)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011546770110726357
    2. 'k' → logprob: -4.636546611785889
    3. ' for' → logprob: -6.886546611785889
    4. 'if' → logprob: -7.261546611785889
    5. '   ' → logprob: -10.136547088623047
    6. '       ' → logprob: -10.886547088623047
    7. ' k' → logprob: -13.386547088623047
    8. '#' → logprob: -13.386547088623047
    9. ' if' → logprob: -13.761547088623047
    10. 'm' → logprob: -13.886547088623047

Token 385: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5929304361343384
    2. ' =' → logprob: -1.3429304361343384
    3. '=' → logprob: -1.8429304361343384
    4. '   ' → logprob: -4.842930316925049
    5. 'ength' → logprob: -5.842930316925049
    6. ' for' → logprob: -6.092930316925049
    7. 'e' → logprob: -6.092930316925049
    8. 'k' → logprob: -6.217930316925049
    9. 'en' → logprob: -6.342930316925049
    10. 'f' → logprob: -6.592930316925049

Token 386: ' r' (ID: 428)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5341694355010986
    2. ' =' → logprob: -1.5341694355010986
    3. 'r' → logprob: -2.0341694355010986
    4. 'k' → logprob: -3.4091694355010986
    5. ' r' → logprob: -4.6591691970825195
    6. 'j' → logprob: -5.5341691970825195
    7. ' k' → logprob: -5.6591691970825195
    8. '=r' → logprob: -6.0341691970825195
    9. '=j' → logprob: -6.1591691970825195
    10. 's' → logprob: -6.4091691970825195

Token 387: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06202470883727074
    2. ' =' → logprob: -2.8120245933532715
    3. '=i' → logprob: -10.31202507019043
    4. '=j' → logprob: -11.18702507019043
    5. ',' → logprob: -12.56202507019043
    6. '=l' → logprob: -12.81202507019043
    7. '=r' → logprob: -13.68702507019043
    8. '=k' → logprob: -14.31202507019043
    9. '=

' → logprob: -15.06202507019043
    10. ' ' → logprob: -15.18702507019043

Token 388: ' ' (ID: 220)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11397123336791992
    2. 'i' → logprob: -2.23897123336792
    3. ' j' → logprob: -7.98897123336792
    4. 'n' → logprob: -8.113971710205078
    5. '0' → logprob: -8.238971710205078
    6. ' i' → logprob: -9.113971710205078
    7. '[j' → logprob: -10.488971710205078
    8. '   ' → logprob: -10.613971710205078
    9. 'dp' → logprob: -11.488971710205078
    10. '[i' → logprob: -11.738971710205078

Token 389: '0' (ID: 15)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.392119437456131
    2. 'i' → logprob: -1.1421194076538086
    3. 'n' → logprob: -6.142119407653809
    4. '0' → logprob: -6.392119407653809
    5. '(i' → logprob: -8.142119407653809
    6. ' j' → logprob: -8.392119407653809
    7. ' i' → logprob: -8.517119407653809
    8. 'max' → logprob: -8.517119407653809
    9. '(j' → logprob: -8.767119407653809
    10. 'dp' → logprob: -9.267119407653809

Token 390: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012972217984497547
    2. ',j' → logprob: -5.512972354888916
    3. ' =' → logprob: -5.887972354888916
    4. ' ,' → logprob: -6.387972354888916
    5. '=' → logprob: -6.887972354888916
    6. '<|end|>' → logprob: -7.262972354888916
    7. '       ' → logprob: -7.512972354888916
    8. ',
' → logprob: -7.637972354888916
    9. '   ' → logprob: -8.137971878051758
    10. ',n' → logprob: -8.262971878051758

Token 391: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4650586247444153
    2. 'i' → logprob: -1.0900585651397705
    3. 'j' → logprob: -3.9650585651397705
    4. 'min' → logprob: -5.34005880355835
    5. 'max' → logprob: -5.71505880355835
    6. ' n' → logprob: -6.09005880355835
    7. ' i' → logprob: -6.46505880355835
    8. '0' → logprob: -6.59005880355835
    9. '100' → logprob: -6.71505880355835
    10. 'len' → logprob: -7.09005880355835

Token 392: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05607691779732704
    2. 'i' → logprob: -3.181077003479004
    3. 'j' → logprob: -5.056077003479004
    4. 'len' → logprob: -5.681077003479004
    5. 'max' → logprob: -6.181077003479004
    6. 'min' → logprob: -7.681077003479004
    7. '100' → logprob: -8.056077003479004
    8. '10' → logprob: -8.931077003479004
    9. 'l' → logprob: -9.556077003479004
    10. ' n' → logprob: -10.431077003479004

Token 393: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18537317216396332
    2. '<|end|>' → logprob: -2.310373067855835
    3. 'for' → logprob: -3.310373067855835
    4. ' for' → logprob: -4.060373306274414
    5. '
' → logprob: -5.310373306274414
    6. '   ' → logprob: -5.935373306274414
    7. ' ' → logprob: -6.685373306274414
    8. '        
' → logprob: -6.685373306274414
    9. '<|end|>' → logprob: -6.685373306274414
    10. ',' → logprob: -6.810373306274414

Token 394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15872491896152496
    2. 'for' → logprob: -2.0337250232696533
    3. ' for' → logprob: -4.533724784851074
    4. '<|end|>' → logprob: -6.283724784851074
    5. 'if' → logprob: -6.658724784851074
    6. '   ' → logprob: -7.658724784851074
    7. 'while' → logprob: -8.408724784851074
    8. '	' → logprob: -8.533724784851074
    9. '
' → logprob: -8.658724784851074
    10. '	for' → logprob: -8.783724784851074

Token 395: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4890429675579071
    2. 'for' (adapté à ' for') → logprob: -0.9890429973602295
    3. 'l' → logprob: -4.98904275894165
    4. '       ' → logprob: -5.23904275894165
    5. 'i' → logprob: -7.11404275894165
    6. ' if' → logprob: -7.61404275894165
    7. 'while' → logprob: -7.86404275894165
    8. ' for' → logprob: -8.114043235778809
    9. 'k' → logprob: -8.114043235778809
    10. 'r' → logprob: -8.489043235778809

Token 396: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0024566298816353083
    2. 'x' → logprob: -7.1274566650390625
    3. 'm' → logprob: -7.5024566650390625
    4. 'p' → logprob: -8.002456665039062
    5. ' k' → logprob: -9.127456665039062
    6. 't' → logprob: -9.502456665039062
    7. 'u' → logprob: -9.627456665039062
    8. 'mid' → logprob: -9.627456665039062
    9. 'c' → logprob: -9.752456665039062
    10. 'g' → logprob: -10.252456665039062

Token 397: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008641282096505165
    2. 'in' → logprob: -4.758641242980957
    3. 'range' → logprob: -11.508641242980957
    4. ' ' → logprob: -11.633641242980957
    5. 'k' → logprob: -13.133641242980957
    6. '```' → logprob: -13.508641242980957
    7. 'd' → logprob: -14.133641242980957
    8. '
' → logprob: -14.633641242980957
    9. ' 
' → logprob: -14.883641242980957
    10. 'n' → logprob: -15.008641242980957

Token 398: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02977861277759075
    2. ' range' → logprob: -3.5297787189483643
    3. '   ' → logprob: -10.779778480529785
    4. '(range' → logprob: -13.029778480529785
    5. ' ' → logprob: -13.279778480529785
    6. '  ' → logprob: -14.029778480529785
    7. 'in' → logprob: -14.654778480529785
    8. '    ' → logprob: -14.654778480529785
    9. '
' → logprob: -14.904778480529785
    10. 're' → logprob: -15.029778480529785

Token 399: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.029425745829939842
    2. '(n' → logprob: -4.029425621032715
    3. '(i' → logprob: -4.529425621032715
    4. 'j' → logprob: -8.529425621032715
    5. '(' → logprob: -8.779425621032715
    6. '(max' → logprob: -10.779425621032715
    7. 'n' → logprob: -11.029425621032715
    8. ' (' → logprob: -11.404425621032715
    9. '(r' → logprob: -12.279425621032715
    10. '[j' → logprob: -12.279425621032715

Token 400: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07773513346910477
    2. ',n' → logprob: -3.202735185623169
    3. '+' → logprob: -3.452735185623169
    4. ' ,' → logprob: -6.95273494720459
    5. ' +' → logprob: -7.07773494720459
    6. ',j' → logprob: -7.57773494720459
    7. '+n' → logprob: -9.45273494720459
    8. '+,' → logprob: -9.70273494720459
    9. '+j' → logprob: -11.45273494720459
    10. 'n' → logprob: -11.70273494720459

Token 401: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5107177862082608e-05
    2. ' ' → logprob: -11.125024795532227
    3. '
' → logprob: -12.750024795532227
    4. '(' → logprob: -12.875024795532227
    5. 'n' → logprob: -13.375024795532227
    6. ',' → logprob: -13.875024795532227
    7. '(n' → logprob: -14.000024795532227
    8. '+' → logprob: -14.750024795532227
    9. '   ' → logprob: -15.625024795532227
    10. '0' → logprob: -15.625024795532227

Token 402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004108924185857177
    2. ',n' → logprob: -8.000411033630371
    3. ' ,' → logprob: -9.500411033630371
    4. '(n' → logprob: -15.250411033630371
    5. 'n' → logprob: -15.375411033630371
    6. ',
' → logprob: -16.875410079956055
    7. ',j' → logprob: -16.875410079956055
    8. '   ' → logprob: -17.375410079956055
    9. '```' → logprob: -18.250410079956055
    10. '<n' → logprob: -18.500410079956055

Token 403: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003544118662830442
    2. ' n' → logprob: -8.000354766845703
    3. '(n' → logprob: -11.125354766845703
    4. '
' → logprob: -12.625354766845703
    5. '   ' → logprob: -14.500354766845703
    6. '	n' → logprob: -15.875354766845703
    7. '

' → logprob: -16.625354766845703
    8. ' ' → logprob: -16.750354766845703
    9. 'min' → logprob: -16.750354766845703
    10. '[n' → logprob: -17.625354766845703

Token 404: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5213274309644476e-05
    2. ' +' → logprob: -11.125015258789062
    3. '()+' → logprob: -16.250015258789062
    4. '
' → logprob: -16.500015258789062
    5. '+
' → logprob: -16.625015258789062
    6. '):
' → logprob: -17.250015258789062
    7. ')+' → logprob: -17.875015258789062
    8. '```' → logprob: -18.750015258789062
    9. '+n' → logprob: -19.125015258789062
    10. '+k' → logprob: -19.125015258789062

Token 405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.273621405242011e-05
    2. '+' → logprob: -10.375032424926758
    3. '2' → logprob: -14.125032424926758
    4. ' ' → logprob: -14.500032424926758
    5. 'n' → logprob: -15.750032424926758
    6. '
' → logprob: -16.500032424926758
    7. '```' → logprob: -16.500032424926758
    8. '(n' → logprob: -17.500032424926758
    9. ' +' → logprob: -17.625032424926758
    10. ')' → logprob: -17.875032424926758

Token 406: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028235390782356262
    2. '):
' → logprob: -6.127823352813721
    3. ':' → logprob: -7.377823352813721
    4. '():' → logprob: -12.127823829650879
    5. '}:' → logprob: -13.127823829650879
    6. ')' → logprob: -14.002823829650879
    7. '+' → logprob: -14.127823829650879
    8. '```' → logprob: -14.127823829650879
    9. ' ):' → logprob: -14.127823829650879
    10. '):
' → logprob: -14.252823829650879

Token 407: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3457059860229492
    2. '<|end|>' → logprob: -1.3457059860229492
    3. ' ' → logprob: -3.845705986022949
    4. '<|end|>' → logprob: -6.720705986022949
    5. '            ' → logprob: -6.845705986022949
    6. '   ' → logprob: -7.095705986022949
    7. ' ' → logprob: -7.220705986022949
    8. '               ' → logprob: -7.220705986022949
    9. '	       ' → logprob: -7.345705986022949
    10. '		' → logprob: -7.595705986022949

Token 408: ' l' (ID: 305)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7961804270744324
    2. ' cost' → logprob: -2.046180486679077
    3. ' l' → logprob: -2.171180486679077
    4. 'l' (adapté à ' l') → logprob: -2.546180486679077
    5. 'cost' → logprob: -2.546180486679077
    6. ' dp' → logprob: -3.796180486679077
    7. ' ' → logprob: -4.046180248260498
    8. ' s' → logprob: -4.296180248260498
    9. 'if' → logprob: -4.421180248260498
    10. 'dp' → logprob: -4.546180248260498

Token 409: ' +=' (ID: 2757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2551674544811249
    2. '=' → logprob: -1.5051674842834473
    3. ' +=' → logprob: -6.130167484283447
    4. '+=' → logprob: -6.880167484283447
    5. ',' → logprob: -11.380167007446289
    6. '+' → logprob: -11.755167007446289
    7. '=k' → logprob: -13.255167007446289
    8. '	' → logprob: -13.630167007446289
    9. '=l' → logprob: -13.630167007446289
    10. ' ' → logprob: -13.880167007446289

Token 410: ' Al' (ID: 1667)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.05035772547125816
    2. 'Ar' → logprob: -3.0503578186035156
    3. 'A' → logprob: -6.425357818603516
    4. ' Al' → logprob: -9.300357818603516
    5. '(' → logprob: -10.800357818603516
    6. ' Ar' → logprob: -11.175357818603516
    7. 'a' → logprob: -11.300357818603516
    8. 'AL' → logprob: -13.300357818603516
    9. '(A' → logprob: -13.425357818603516
    10. ' ' → logprob: -13.675357818603516

Token 411: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.12696705758571625
    2. 'k' → logprob: -2.126966953277588
    3. '[j' → logprob: -11.001967430114746
    4. '(k' → logprob: -12.001967430114746
    5. '
' → logprob: -12.751967430114746
    6. ' k' → logprob: -13.001967430114746
    7. '[' → logprob: -13.251967430114746
    8. ',k' → logprob: -13.376967430114746
    9. '][' → logprob: -13.376967430114746
    10. '	k' → logprob: -13.876967430114746

Token 412: '-' (ID: 12)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.13217371702194214
    2. '[j' → logprob: -2.132173776626587
    3. '[k' → logprob: -5.382173538208008
    4. '[l' → logprob: -8.507173538208008
    5. '[i' → logprob: -8.882173538208008
    6. '[' → logprob: -9.132173538208008
    7. '[r' → logprob: -9.757173538208008
    8. ']' → logprob: -10.507173538208008
    9. 'j' → logprob: -10.882173538208008
    10. 'k' → logprob: -11.132173538208008

Token 413: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07562977075576782
    2. 'i' → logprob: -2.825629711151123
    3. 'k' → logprob: -4.450629711151123
    4. 'l' → logprob: -6.700629711151123
    5. ' j' → logprob: -8.575630187988281
    6. '1' → logprob: -8.825630187988281
    7. 'r' → logprob: -8.950630187988281
    8. '[j' → logprob: -9.825630187988281
    9. '[i' → logprob: -10.325630187988281
    10. ']' → logprob: -10.825630187988281

Token 414: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002121234778314829
    2. '[k' → logprob: -6.877121448516846
    3. '[j' → logprob: -7.002121448516846
    4. ' ][' → logprob: -9.377120971679688
    5. 'k' → logprob: -10.252120971679688
    6. '[i' → logprob: -10.752120971679688
    7. '[' → logprob: -11.627120971679688
    8. ']' → logprob: -12.002120971679688
    9. '[l' → logprob: -12.127120971679688
    10. 'j' → logprob: -12.502120971679688

Token 415: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.32381683588027954
    2. 'j' → logprob: -1.3238167762756348
    3. 'k' → logprob: -4.573816776275635
    4. 'l' → logprob: -9.573817253112793
    5. ' i' → logprob: -9.948817253112793
    6. 'r' → logprob: -10.573817253112793
    7. ' j' → logprob: -10.573817253112793
    8. ']' → logprob: -13.448817253112793
    9. '   ' → logprob: -14.073817253112793
    10. '```' → logprob: -14.073817253112793

Token 416: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11405524611473083
    2. ']
' → logprob: -2.2390551567077637
    3. ' ]' → logprob: -7.114055156707764
    4. ' ]
' → logprob: -8.364055633544922
    5. '-' → logprob: -9.489055633544922
    6. '+' → logprob: -9.989055633544922
    7. ']

' → logprob: -10.114055633544922
    8. 'l' → logprob: -12.114055633544922
    9. ']
' → logprob: -12.364055633544922
    10. ' -' → logprob: -12.989055633544922

Token 417: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7025020122528076
    2. 'r' → logprob: -1.0775020122528076
    3. ' r' → logprob: -2.4525020122528076
    4. ' ' → logprob: -3.2025020122528076
    5. '<|end|>' → logprob: -4.452502250671387
    6. '            
' → logprob: -4.952502250671387
    7. '
' → logprob: -5.202502250671387
    8. ' 
' → logprob: -5.202502250671387
    9. '            ' → logprob: -6.327502250671387
    10. '		' → logprob: -6.952502250671387

Token 418: ' #' (ID: 1069)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008631468750536442
    2. ' r' → logprob: -4.758631706237793
    3. '           ' → logprob: -11.008631706237793
    4. ' if' → logprob: -16.258630752563477
    5. '       ' → logprob: -16.508630752563477
    6. '            
' → logprob: -16.633630752563477
    7. '            ' → logprob: -17.133630752563477
    8. 'if' → logprob: -17.633630752563477
    9. '               ' → logprob: -17.883630752563477
    10. ' ' → logprob: -17.883630752563477

Token 419: ' Je' (ID: 4678)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008619419299066067
    2. ' r' → logprob: -4.75861930847168
    3. '           ' → logprob: -12.50861930847168
    4. ' if' → logprob: -14.38361930847168
    5. 'if' → logprob: -15.25861930847168
    6. ' ' → logprob: -16.13361930847168
    7. '       ' → logprob: -16.75861930847168
    8. '   ' → logprob: -17.13361930847168
    9. '            ' → logprob: -17.63361930847168
    10. '            
' → logprob: -17.75861930847168

Token 420: ' ne' (ID: 453)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16584926843643188
    2. 'r' → logprob: -2.290849208831787
    3. ' r' → logprob: -3.165849208831787
    4. 's' → logprob: -6.040849208831787
    5. '           ' → logprob: -6.165849208831787
    6. ' +=' → logprob: -6.290849208831787
    7. ')' → logprob: -7.790849208831787
    8. ' space' → logprob: -8.165849685668945
    9. 'space' → logprob: -8.290849685668945
    10. ' )' → logprob: -8.290849685668945

Token 421: ' comprends' (ID: 145804)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.42364004254341125
    2. 's' → logprob: -1.4236400127410889
    3. ' ' → logprob: -3.673640012741089
    4. ' r' → logprob: -3.798640012741089
    5. ' +=' → logprob: -4.673640251159668
    6. '           ' → logprob: -4.798640251159668
    7. '            
' → logprob: -5.048640251159668
    8. ' 
' → logprob: -5.173640251159668
    9. '+=' → logprob: -5.673640251159668
    10. '=' → logprob: -6.298640251159668

Token 422: ' pas' (ID: 2173)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16110576689243317
    2. ' pas' → logprob: -2.7861058712005615
    3. 'r' → logprob: -3.4111058712005615
    4. ' r' → logprob: -4.036105632781982
    5. ' l' → logprob: -4.036105632781982
    6. ' ' → logprob: -4.911105632781982
    7. ',' → logprob: -6.161105632781982
    8. ' k' → logprob: -6.286105632781982
    9. ' j' → logprob: -6.536105632781982
    10. 'pas' → logprob: -7.161105632781982

Token 423: ' ce' (ID: 2357)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1275617778301239
    2. ' r' → logprob: -2.1275618076324463
    3. ' ' → logprob: -8.002561569213867
    4. '           ' → logprob: -8.502561569213867
    5. ',' → logprob: -10.877561569213867
    6. 'space' → logprob: -11.627561569213867
    7. ',r' → logprob: -12.002561569213867
    8. '            ' → logprob: -12.127561569213867
    9. ')' → logprob: -12.252561569213867
    10. '_r' → logprob: -12.377561569213867

Token 424: ' Ar' (ID: 1754)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6366023421287537
    2. ''' → logprob: -1.5116024017333984
    3. '           ' → logprob: -2.8866024017333984
    4. ']' → logprob: -3.3866024017333984
    5. 'l' → logprob: -3.6366024017333984
    6. ' ' → logprob: -4.136602401733398
    7. '               ' → logprob: -4.261602401733398
    8. '+' → logprob: -4.636602401733398
    9. 'k' → logprob: -4.636602401733398
    10. '(' → logprob: -4.636602401733398

Token 425: ',' (ID: 11)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.015028501860797405
    2. '[j' → logprob: -4.640028476715088
    3. '[i' → logprob: -5.890028476715088
    4. '[' → logprob: -6.390028476715088
    5. '[r' → logprob: -7.890028476715088
    6. 'k' → logprob: -8.390028953552246
    7. '[l' → logprob: -9.765028953552246
    8. '][' → logprob: -9.890028953552246
    9. ']' → logprob: -10.640028953552246
    10. '[
' → logprob: -11.140028953552246

Token 426: ' mais' (ID: 2899)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.38706597685813904
    2. 'r' → logprob: -1.1370660066604614
    3. '           ' → logprob: -9.512065887451172
    4. ')' → logprob: -10.637065887451172
    5. ' ' → logprob: -11.262065887451172
    6. ' l' → logprob: -11.387065887451172
    7. ' ' → logprob: -11.512065887451172
    8. 'l' → logprob: -11.637065887451172
    9. 'k' → logprob: -11.762065887451172
    10. ']' → logprob: -12.262065887451172

Token 427: ' je' (ID: 1264)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.1799340397119522
    2. 'r' → logprob: -1.804934024810791
    3. '           ' → logprob: -8.67993450164795
    4. ' ' → logprob: -12.17993450164795
    5. '               ' → logprob: -12.55493450164795
    6. '            ' → logprob: -12.67993450164795
    7. ' if' → logprob: -12.80493450164795
    8. ' ' → logprob: -14.17993450164795
    9. '            
' → logprob: -14.67993450164795
    10. '             ' → logprob: -14.92993450164795

Token 428: ' garde' (ID: 65309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23402738571166992
    2. ']' → logprob: -2.85902738571167
    3. ' +=' → logprob: -3.10902738571167
    4. '+=' → logprob: -3.60902738571167
    5. 'r' → logprob: -3.73402738571167
    6. '[r' → logprob: -4.85902738571167
    7. ' continue' → logprob: -5.35902738571167
    8. '            ' → logprob: -5.35902738571167
    9. 's' → logprob: -5.60902738571167
    10. 'l' → logprob: -5.73402738571167

Token 429: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5088077187538147
    2. ' r' → logprob: -1.13380765914917
    3. '           ' → logprob: -2.75880765914917
    4. ' ' → logprob: -4.50880765914917
    5. '<|end|>' → logprob: -7.25880765914917
    6. '            
' → logprob: -7.88380765914917
    7. '               ' → logprob: -8.133808135986328
    8. '            ' → logprob: -8.758808135986328
    9. ',' → logprob: -9.008808135986328
    10. ')' → logprob: -9.133808135986328

Token 430: ' calcul' (ID: 7559)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.011123866774141788
    2. 'Ar' → logprob: -5.3861236572265625
    3. 'l' → logprob: -6.3861236572265625
    4. ' r' → logprob: -6.5111236572265625
    5. '+' → logprob: -6.7611236572265625
    6. 'k' → logprob: -7.2611236572265625
    7. ' code' → logprob: -7.7611236572265625
    8. '+r' → logprob: -7.7611236572265625
    9. ' Ar' → logprob: -9.011123657226562
    10. 'j' → logprob: -9.636123657226562

Token 431: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003034074034076184
    2. '       ' → logprob: -9.500303268432617
    3. ' ' → logprob: -9.750303268432617
    4. 'r' → logprob: -10.125303268432617
    5. '               ' → logprob: -10.375303268432617
    6. ' r' → logprob: -10.750303268432617
    7. '<|end|>' → logprob: -10.750303268432617
    8. '          ' → logprob: -11.125303268432617
    9. '   ' → logprob: -11.750303268432617
    10. '            ' → logprob: -12.125303268432617

Token 432: '           ' (ID: 352)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.7870204448699951
    2. 'r' → logprob: -1.0370204448699951
    3. '           ' → logprob: -1.6620204448699951
    4. ' ' → logprob: -8.412020683288574
    5. '       ' → logprob: -8.412020683288574
    6. '   ' → logprob: -10.787020683288574
    7. '               ' → logprob: -11.412020683288574
    8. '            
' → logprob: -11.537020683288574
    9. '         ' → logprob: -11.662020683288574
    10. '          ' → logprob: -11.662020683288574

Token 433: ' if' (ID: 538)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0790826678276062
    2. ' r' → logprob: -2.579082727432251
    3. '           ' → logprob: -8.579082489013672
    4. ' ' → logprob: -13.704082489013672
    5. '       ' → logprob: -14.079082489013672
    6. '   ' → logprob: -14.329082489013672
    7. '               ' → logprob: -14.579082489013672
    8. '            
' → logprob: -15.079082489013672
    9. '```' → logprob: -15.079082489013672
    10. '            ' → logprob: -15.579082489013672

Token 434: ' j' (ID: 441)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.067367434501648
    2. ' k' → logprob: -1.192367434501648
    3. ' i' → logprob: -2.4423675537109375
    4. ' j' → logprob: -2.4423675537109375
    5. 'i' → logprob: -2.9423675537109375
    6. 'j' → logprob: -3.0673675537109375
    7. ' dp' → logprob: -3.4423675537109375
    8. 'dp' → logprob: -3.6923675537109375
    9. ' l' → logprob: -4.8173675537109375
    10. 'l' → logprob: -4.9423675537109375

Token 435: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12746891379356384
    2. '<' → logprob: -3.2524688243865967
    3. '[' → logprob: -3.8774688243865967
    4. ' <=' → logprob: -4.002469062805176
    5. ' >=' → logprob: -4.627469062805176
    6. '+' → logprob: -5.002469062805176
    7. ' !=' → logprob: -5.377469062805176
    8. ' >' → logprob: -5.502469062805176
    9. '<=' → logprob: -5.502469062805176
    10. '>' → logprob: -5.877469062805176

Token 436: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07595863193273544
    2. ' ' → logprob: -3.075958728790283
    3. 'i' → logprob: -3.825958728790283
    4. ' i' → logprob: -5.950958728790283
    5. '=' → logprob: -6.200958728790283
    6. 'k' → logprob: -7.700958728790283
    7. ' k' → logprob: -10.325958251953125
    8. '1' → logprob: -10.575958251953125
    9. 'l' → logprob: -10.825958251953125
    10. '=i' → logprob: -11.950958251953125

Token 437: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05167960375547409
    2. 'i' → logprob: -3.0516796112060547
    3. '=' → logprob: -6.426679611206055
    4. ' ' → logprob: -7.301679611206055
    5. 'k' → logprob: -7.426679611206055
    6. ' i' → logprob: -9.551679611206055
    7. 'l' → logprob: -9.801679611206055
    8. '1' → logprob: -10.551679611206055
    9. '=i' → logprob: -10.676679611206055
    10. 'r' → logprob: -11.926679611206055

Token 438: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3490917384624481
    2. ' and' → logprob: -1.5990917682647705
    3. ':
' → logprob: -3.2240917682647705
    4. '           ' → logprob: -3.3490917682647705
    5. '               ' → logprob: -4.474091529846191
    6. 'and' → logprob: -5.599091529846191
    7. '<|end|>' → logprob: -7.224091529846191
    8. '            ' → logprob: -8.224091529846191
    9. ' :' → logprob: -8.224091529846191
    10. ' ' → logprob: -8.599091529846191

Token 439: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17616784572601318
    2. ' r' → logprob: -1.9261678457260132
    3. 'r' → logprob: -4.301167964935303
    4. '           ' → logprob: -6.176167964935303
    5. '   ' → logprob: -9.801167488098145
    6. '	           ' → logprob: -10.051167488098145
    7. '                   ' → logprob: -10.801167488098145
    8. ' ' → logprob: -11.551167488098145
    9. '              ' → logprob: -11.801167488098145
    10. ' ' → logprob: -11.926167488098145

Token 440: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.08956734836101532
    2. ' r' → logprob: -2.4645674228668213
    3. '               ' → logprob: -7.464567184448242
    4. '           ' → logprob: -10.964567184448242
    5. 'l' → logprob: -11.214567184448242
    6. '                   ' → logprob: -11.839567184448242
    7. ' ' → logprob: -12.464567184448242
    8. '                ' → logprob: -13.089567184448242
    9. '   ' → logprob: -13.464567184448242
    10. ' l' → logprob: -13.589567184448242

Token 441: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06220855563879013
    2. '+=' → logprob: -2.812208652496338
    3. ' =' → logprob: -9.06220817565918
    4. '=' → logprob: -9.56220817565918
    5. ']+=' → logprob: -10.93720817565918
    6. '           ' → logprob: -12.06220817565918
    7. '            ' → logprob: -12.18720817565918
    8. '        ' → logprob: -12.18720817565918
    9. ' +' → logprob: -12.31220817565918
    10. '    ' → logprob: -12.81220817565918

Token 442: ' Ar' (ID: 1754)
  Prédit: 'Ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.0015083164907991886
    2. ' Ar' → logprob: -6.5015082359313965
    3. '   ' → logprob: -12.876508712768555
    4. ' ' → logprob: -14.126508712768555
    5. 'ar' → logprob: -14.126508712768555
    6. 'Al' → logprob: -15.126508712768555
    7. 'r' → logprob: -15.626508712768555
    8. 'A' → logprob: -15.876508712768555
    9. '  ' → logprob: -15.876508712768555
    10. '	' → logprob: -16.001508712768555

Token 443: '[k' (ID: 14298)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0037712242919951677
    2. 'k' → logprob: -6.1287713050842285
    3. 'i' → logprob: -6.5037713050842285
    4. ' j' → logprob: -9.75377082824707
    5. '[j' → logprob: -10.62877082824707
    6. '(j' → logprob: -13.37877082824707
    7. '	j' → logprob: -14.25377082824707
    8. '   ' → logprob: -14.25377082824707
    9. 'r' → logprob: -14.75377082824707
    10. '[i' → logprob: -15.37877082824707

Token 444: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00030078491545282304
    2. ' -' → logprob: -8.875300407409668
    3. '1' → logprob: -9.500300407409668
    4. 'j' → logprob: -10.125300407409668
    5. '][' → logprob: -11.000300407409668
    6. '           ' → logprob: -12.000300407409668
    7. '   ' → logprob: -12.750300407409668
    8. '```' → logprob: -12.875300407409668
    9. '0' → logprob: -13.125300407409668
    10. '-j' → logprob: -13.250300407409668

Token 445: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025093089789152145
    2. '2' → logprob: -6.002509117126465
    3. ' ' → logprob: -10.502509117126465
    4. 'j' → logprob: -13.815009117126465
    5. '   ' → logprob: -13.940009117126465
    6. '-' → logprob: -14.127509117126465
    7. '
' → logprob: -14.440009117126465
    8. '11' → logprob: -14.815009117126465
    9. '```' → logprob: -14.940009117126465
    10. '0' → logprob: -15.690009117126465

Token 446: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00046630011638626456
    2. '[j' → logprob: -7.875466346740723
    3. ']' → logprob: -9.750466346740723
    4. ' ][' → logprob: -10.750466346740723
    5. '[' → logprob: -13.125466346740723
    6. '[k' → logprob: -13.375466346740723
    7. '"][' → logprob: -14.125466346740723
    8. ''][' → logprob: -14.375466346740723
    9. ')[' → logprob: -15.500466346740723
    10. ']][' → logprob: -15.500466346740723

Token 447: 'k' (ID: 74)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00012833021173719317
    2. 'k' → logprob: -9.000128746032715
    3. ' j' → logprob: -12.250128746032715
    4. '	j' → logprob: -16.1251277923584
    5. '   ' → logprob: -19.0001277923584
    6. 'jk' → logprob: -19.0001277923584
    7. 'r' → logprob: -19.1251277923584
    8. '[j' → logprob: -19.1251277923584
    9. '
' → logprob: -19.3751277923584
    10. ']' → logprob: -19.5001277923584

Token 448: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0029191148933023214
    2. ']' → logprob: -5.8779191970825195
    3. ' -' → logprob: -9.25291919708252
    4. '1' → logprob: -11.12791919708252
    5. '-j' → logprob: -14.12791919708252
    6. 'j' → logprob: -14.50291919708252
    7. '```' → logprob: -14.87791919708252
    8. '<|end|>' → logprob: -14.87791919708252
    9. ']-' → logprob: -15.12791919708252
    10. '])' → logprob: -15.12791919708252

Token 449: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '2' → logprob: -14.750000953674316
    3. ' ' → logprob: -14.875000953674316
    4. 'j' → logprob: -16.5
    5. '-' → logprob: -17.875
    6. ']' → logprob: -17.9375
    7. '１' → logprob: -18.4375
    8. '   ' → logprob: -18.6875
    9. '
' → logprob: -19.25
    10. '```' → logprob: -19.25

Token 450: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004306692280806601
    2. ' ]' → logprob: -8.250431060791016
    3. ']
' → logprob: -8.750431060791016
    4. '<|end|>' → logprob: -12.250431060791016
    5. ']+' → logprob: -13.625431060791016
    6. ']

' → logprob: -13.875431060791016
    7. ')' → logprob: -14.500431060791016
    8. '])' → logprob: -14.625431060791016
    9. ')]' → logprob: -14.875431060791016
    10. ']>' → logprob: -14.875431060791016

Token 451: ' -' (ID: 533)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14891476929187775
    2. ' else' → logprob: -2.5239148139953613
    3. 'else' → logprob: -2.8989148139953613
    4. '<|end|>' → logprob: -6.273914813995361
    5. '               ' → logprob: -7.523914813995361
    6. '+' → logprob: -8.898914337158203
    7. '            ' → logprob: -9.023914337158203
    8. '
' → logprob: -9.773914337158203
    9. '          ' → logprob: -9.898914337158203
    10. ')' → logprob: -9.898914337158203

Token 452: ' Ar' (ID: 1754)
  Prédit: 'Ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.0005675682332366705
    2. 'Al' → logprob: -8.000567436218262
    3. ' Ar' → logprob: -8.375567436218262
    4. 'ar' → logprob: -14.625567436218262
    5. '(' → logprob: -14.750567436218262
    6. '   ' → logprob: -15.375567436218262
    7. 'A' → logprob: -16.250568389892578
    8. ' Al' → logprob: -16.750568389892578
    9. ' ' → logprob: -16.875568389892578
    10. '  ' → logprob: -16.875568389892578

Token 453: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.019271621480584145
    2. 'j' → logprob: -4.0192718505859375
    3. '[i' → logprob: -6.8942718505859375
    4. '[k' → logprob: -9.644271850585938
    5. ' j' → logprob: -10.769271850585938
    6. '[' → logprob: -11.894271850585938
    7. 'i' → logprob: -12.144271850585938
    8. 'k' → logprob: -13.019271850585938
    9. '(j' → logprob: -13.144271850585938
    10. '	j' → logprob: -13.394271850585938

Token 454: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.588793960167095e-05
    2. ' -' → logprob: -9.875076293945312
    3. '][' → logprob: -10.750076293945312
    4. '1' → logprob: -14.000076293945312
    5. '[k' → logprob: -14.625076293945312
    6. 'k' → logprob: -14.750076293945312
    7. '[' → logprob: -15.000076293945312
    8. '2' → logprob: -15.625076293945312
    9. '[j' → logprob: -16.250076293945312
    10. '0' → logprob: -16.500076293945312

Token 455: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003421375877223909
    2. '2' → logprob: -8.00034236907959
    3. ' ' → logprob: -12.00034236907959
    4. '   ' → logprob: -15.81284236907959
    5. 'k' → logprob: -16.062841415405273
    6. '0' → logprob: -16.562841415405273
    7. 'r' → logprob: -17.000341415405273
    8. '```' → logprob: -17.125341415405273
    9. '
' → logprob: -17.687841415405273
    10. 'i' → logprob: -18.000341415405273

Token 456: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.016715237870812416
    2. '[k' → logprob: -4.141715049743652
    3. '[j' → logprob: -7.641715049743652
    4. ' ][' → logprob: -9.141715049743652
    5. ']' → logprob: -10.641715049743652
    6. '[' → logprob: -10.641715049743652
    7. ' [' → logprob: -11.516715049743652
    8. ')[' → logprob: -11.766715049743652
    9. '}[' → logprob: -11.766715049743652
    10. ''][' → logprob: -12.266715049743652

Token 457: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -9.13388703338569e-06
    2. ' k' → logprob: -11.750009536743164
    3. '[k' → logprob: -13.750009536743164
    4. '	k' → logprob: -15.875009536743164
    5. '
' → logprob: -18.125009536743164
    6. '   ' → logprob: -18.625009536743164
    7. ',k' → logprob: -18.875009536743164
    8. '{k' → logprob: -18.875009536743164
    9. ' ' → logprob: -19.500009536743164
    10. '][' → logprob: -19.500009536743164

Token 458: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00013560164370574057
    2. ']' → logprob: -9.87513542175293
    3. ' -' → logprob: -10.00013542175293
    4. '1' → logprob: -10.37513542175293
    5. '2' → logprob: -12.00013542175293
    6. '[' → logprob: -14.75013542175293
    7. '])' → logprob: -15.75013542175293
    8. ']-' → logprob: -15.75013542175293
    9. '-
' → logprob: -16.12513542175293
    10. '```' → logprob: -16.12513542175293

Token 459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3915141355246305e-05
    2. ' ' → logprob: -11.00002384185791
    3. '2' → logprob: -12.00002384185791
    4. '   ' → logprob: -14.56252384185791
    5. '           ' → logprob: -16.312524795532227
    6. '  ' → logprob: -16.687524795532227
    7. '```' → logprob: -17.000024795532227
    8. '     ' → logprob: -17.312524795532227
    9. '       ' → logprob: -17.375024795532227
    10. '    ' → logprob: -17.375024795532227

Token 460: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011591468937695026
    2. ' ]' → logprob: -8.126158714294434
    3. ']
' → logprob: -8.376158714294434
    4. '<|end|>' → logprob: -8.376158714294434
    5. ']+' → logprob: -9.001158714294434
    6. '           ' → logprob: -9.751158714294434
    7. ')' → logprob: -10.251158714294434
    8. '+' → logprob: -10.376158714294434
    9. '}' → logprob: -10.626158714294434
    10. '])' → logprob: -10.751158714294434

Token 461: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003557662246748805
    2. '               ' → logprob: -7.2535576820373535
    3. '<|end|>' → logprob: -7.3785576820373535
    4. ' else' → logprob: -7.5035576820373535
    5. ' if' → logprob: -7.7535576820373535
    6. ')' → logprob: -8.003557205200195
    7. ' 
' → logprob: -8.878557205200195
    8. ' ' → logprob: -9.003557205200195
    9. '            
' → logprob: -9.128557205200195
    10. 'else' → logprob: -9.628557205200195

Token 462: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0712558850646019
    2. ' if' → logprob: -3.321255922317505
    3. 'dp' → logprob: -4.446255683898926
    4. 'if' → logprob: -4.821255683898926
    5. ' dp' → logprob: -5.446255683898926
    6. ' else' → logprob: -5.571255683898926
    7. 'else' (adapté à ' else') → logprob: -5.696255683898926
    8. '       ' → logprob: -7.446255683898926
    9. '               ' → logprob: -8.196255683898926
    10. ')' → logprob: -9.071255683898926

Token 463: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001191298826597631
    2. ' r' → logprob: -7.126191139221191
    3. 'r' → logprob: -8.501191139221191
    4. ':' → logprob: -10.251191139221191
    5. '              ' → logprob: -10.251191139221191
    6. '           ' → logprob: -10.376191139221191
    7. ' continue' → logprob: -11.126191139221191
    8. ':
' → logprob: -11.376191139221191
    9. '			' → logprob: -11.626191139221191
    10. '                   ' → logprob: -11.751191139221191

Token 464: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08171214163303375
    2. ' r' → logprob: -2.831712245941162
    3. 'r' → logprob: -3.956712245941162
    4. '                ' → logprob: -8.456711769104004
    5. '              ' → logprob: -9.706711769104004
    6. '                   ' → logprob: -10.206711769104004
    7. '           ' → logprob: -10.581711769104004
    8. ' ' → logprob: -10.581711769104004
    9. ' ' → logprob: -10.581711769104004
    10. '             ' → logprob: -11.831711769104004

Token 465: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.005964938085526228
    2. ' r' → logprob: -5.130964756011963
    3. '0' → logprob: -10.255965232849121
    4. ' ' → logprob: -14.130965232849121
    5. 'pass' → logprob: -15.880965232849121
    6. '           ' → logprob: -16.255964279174805
    7. '               ' → logprob: -16.380964279174805
    8. ' pass' → logprob: -16.880964279174805
    9. 'None' → logprob: -16.880964279174805
    10. '                   ' → logprob: -17.505964279174805

Token 466: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20722995698451996
    2. '+=' → logprob: -1.7072299718856812
    3. '=' → logprob: -5.332230091094971
    4. ' =' → logprob: -6.957230091094971
    5. '+' → logprob: -12.082229614257812
    6. ' ' → logprob: -12.957229614257812
    7. ' ' → logprob: -13.332229614257812
    8. ' +' → logprob: -13.832229614257812
    9. '0' → logprob: -13.957229614257812
    10. ']+=' → logprob: -14.457229614257812

Token 467: ' Ar' (ID: 1754)
  Prédit: 'Ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.3481956124305725
    2. '0' → logprob: -1.3481955528259277
    3. ' Ar' → logprob: -3.4731955528259277
    4. ' ' → logprob: -5.723195552825928
    5. 'ar' → logprob: -11.473196029663086
    6. '-Ar' → logprob: -12.223196029663086
    7. 'A' → logprob: -12.348196029663086
    8. 'AR' → logprob: -12.848196029663086
    9. '1' → logprob: -13.098196029663086
    10. 'Al' → logprob: -13.160696029663086

Token 468: '[k' (ID: 14298)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07669100910425186
    2. '[k' → logprob: -2.701690912246704
    3. '0' → logprob: -5.451691150665283
    4. 'j' → logprob: -6.701691150665283
    5. '[j' → logprob: -7.201691150665283
    6. ' k' → logprob: -7.951691150665283
    7. '[' → logprob: -9.701690673828125
    8. '[i' → logprob: -11.201690673828125
    9. ' ' → logprob: -11.451690673828125
    10. 'i' → logprob: -11.951690673828125

Token 469: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00038443657103925943
    2. ' -' → logprob: -8.000384330749512
    3. '][' → logprob: -10.750384330749512
    4. '[' → logprob: -10.750384330749512
    5. '0' → logprob: -13.375384330749512
    6. '[-' → logprob: -13.875384330749512
    7. '1' → logprob: -14.500384330749512
    8. '
' → logprob: -14.625384330749512
    9. '<|end|>' → logprob: -14.625384330749512
    10. '−' → logprob: -15.000384330749512

Token 470: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5759649872779846
    2. '1' → logprob: -0.8259649872779846
    3. '   ' → logprob: -11.70096492767334
    4. ' ' → logprob: -12.26346492767334
    5. '0' → logprob: -12.38846492767334
    6. '-' → logprob: -13.07596492767334
    7. '3' → logprob: -13.32596492767334
    8. '```' → logprob: -13.95096492767334
    9. '  ' → logprob: -14.63846492767334
    10. '
' → logprob: -14.76346492767334

Token 471: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004889304982498288
    2. '[k' → logprob: -7.750488758087158
    3. ']' → logprob: -10.500489234924316
    4. ' ][' → logprob: -11.125489234924316
    5. '[' → logprob: -12.375489234924316
    6. ')[' → logprob: -12.750489234924316
    7. 'k' → logprob: -13.375489234924316
    8. '}[' → logprob: -13.500489234924316
    9. '[j' → logprob: -13.750489234924316
    10. '
' → logprob: -14.000489234924316

Token 472: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.951771421066951e-05
    2. 'j' → logprob: -10.625029563903809
    3. ' k' → logprob: -13.000029563903809
    4. 'n' → logprob: -13.625029563903809
    5. '0' → logprob: -14.250029563903809
    6. '
' → logprob: -14.375029563903809
    7. '[k' → logprob: -16.000028610229492
    8. '	k' → logprob: -16.625028610229492
    9. ' ' → logprob: -17.375028610229492
    10. ']' → logprob: -17.500028610229492

Token 473: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.927930654550437e-05
    2. '1' → logprob: -11.375029563903809
    3. ']' → logprob: -11.750029563903809
    4. ' -' → logprob: -12.000029563903809
    5. '[' → logprob: -13.375029563903809
    6. '2' → logprob: -14.750029563903809
    7. '```' → logprob: -15.000029563903809
    8. ']-' → logprob: -15.125029563903809
    9. '][' → logprob: -15.375029563903809
    10. '0' → logprob: -15.625029563903809

Token 474: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16023042798042297
    2. '2' → logprob: -1.9102303981781006
    3. ' ' → logprob: -13.59773063659668
    4. '```' → logprob: -13.72273063659668
    5. ']' → logprob: -13.78523063659668
    6. '   ' → logprob: -14.59773063659668
    7. 'k' → logprob: -14.97273063659668
    8. '-' → logprob: -15.16023063659668
    9. '0' → logprob: -15.34773063659668
    10. 'j' → logprob: -15.97273063659668

Token 475: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00016301481809932739
    2. ']
' → logprob: -9.625163078308105
    3. '<|end|>' → logprob: -10.250163078308105
    4. ' ]' → logprob: -10.875163078308105
    5. '}' → logprob: -11.125163078308105
    6. ']+' → logprob: -11.500163078308105
    7. ')' → logprob: -11.875163078308105
    8. '+' → logprob: -12.500163078308105
    9. ']

' → logprob: -13.375163078308105
    10. '```' → logprob: -13.625163078308105

Token 476: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00198656739667058
    2. ' if' → logprob: -7.001986503601074
    3. 'if' → logprob: -7.876986503601074
    4. '<|end|>' → logprob: -8.626986503601074
    5. 'dp' → logprob: -8.751986503601074
    6. '       ' → logprob: -9.376986503601074
    7. ' dp' → logprob: -9.626986503601074
    8. '```' → logprob: -9.626986503601074
    9. '            
' → logprob: -10.251986503601074
    10. '
' → logprob: -10.751986503601074

Token 477: ' tmp' (ID: 8919)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46733957529067993
    2. ' if' → logprob: -1.7173395156860352
    3. '           ' → logprob: -1.9673395156860352
    4. 'dp' → logprob: -2.967339515686035
    5. ' dp' → logprob: -6.592339515686035
    6. '               ' → logprob: -8.217339515686035
    7. 'token' → logprob: -8.717339515686035
    8. '```' → logprob: -8.842339515686035
    9. '       ' → logprob: -9.092339515686035
    10. '   ' → logprob: -9.342339515686035

Token 478: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026305874809622765
    2. '=' → logprob: -3.651305913925171
    3. '_cost' → logprob: -13.77630615234375
    4. '    ' → logprob: -14.15130615234375
    5. ' ' → logprob: -14.40130615234375
    6. '_' → logprob: -14.65130615234375
    7. 'cost' → logprob: -14.77630615234375
    8. ' +=' → logprob: -14.90130615234375
    9. '        ' → logprob: -15.27630615234375
    10. '_val' → logprob: -15.40130615234375

Token 479: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.737412691116333
    2. 'min' → logprob: -1.362412691116333
    3. ' min' → logprob: -1.862412691116333
    4. ' dp' → logprob: -2.237412691116333
    5. 'max' → logprob: -5.987412452697754
    6. ' max' → logprob: -6.987412452697754
    7. ' ' → logprob: -9.987412452697754
    8. '   ' → logprob: -10.737412452697754
    9. '	dp' → logprob: -10.737412452697754
    10. ' ' → logprob: -11.237412452697754

Token 480: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.017972571775317192
    2. '[j' → logprob: -4.142972469329834
    3. 'i' → logprob: -6.892972469329834
    4. '[k' → logprob: -7.017972469329834
    5. 'j' → logprob: -11.017972946166992
    6. 'k' → logprob: -12.267972946166992
    7. '[' → logprob: -13.517972946166992
    8. '[
' → logprob: -13.642972946166992
    9. ' i' → logprob: -14.267972946166992
    10. '][' → logprob: -14.892972946166992

Token 481: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -8.73314929776825e-05
    2. ']' → logprob: -10.37508773803711
    3. ' ][' → logprob: -10.50008773803711
    4. '[j' → logprob: -10.87508773803711
    5. '[k' → logprob: -13.12508773803711
    6. ',j' → logprob: -13.12508773803711
    7. ' ' → logprob: -13.87508773803711
    8. '   ' → logprob: -14.25008773803711
    9. ']][' → logprob: -14.50008773803711
    10. '           ' → logprob: -14.50008773803711

Token 482: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0015111699467524886
    2. 'k' → logprob: -6.501511096954346
    3. ' j' → logprob: -12.376511573791504
    4. '
' → logprob: -13.501511573791504
    5. '   ' → logprob: -14.251511573791504
    6. 'n' → logprob: -14.626511573791504
    7. '[j' → logprob: -15.001511573791504
    8. ' ' → logprob: -15.376511573791504
    9. ']' → logprob: -15.501511573791504
    10. '	j' → logprob: -15.501511573791504

Token 483: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030073853209614754
    2. ']+' → logprob: -3.530073881149292
    3. '[k' → logprob: -8.905074119567871
    4. ' ]' → logprob: -9.530074119567871
    5. '[' → logprob: -10.280074119567871
    6. '+k' → logprob: -10.780074119567871
    7. '+' → logprob: -10.905074119567871
    8. ' +' → logprob: -11.030074119567871
    9. 'k' → logprob: -11.280074119567871
    10. '][' → logprob: -12.155074119567871

Token 484: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1603570580482483
    2. '+' → logprob: -1.9103569984436035
    3. '+k' → logprob: -10.910357475280762
    4. ' +
' → logprob: -10.910357475280762
    5. ')' → logprob: -11.285357475280762
    6. '<|end|>' → logprob: -11.285357475280762
    7. '+l' → logprob: -11.285357475280762
    8. '+
' → logprob: -11.410357475280762
    9. '[' → logprob: -11.785357475280762
    10. ' if' → logprob: -12.535357475280762

Token 485: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.016042698174715042
    2. ' l' → logprob: -4.141042709350586
    3. 'r' → logprob: -12.891042709350586
    4. 'max' → logprob: -13.641042709350586
    5. ' ' → logprob: -13.891042709350586
    6. '	l' → logprob: -14.266042709350586
    7. ' max' → logprob: -14.891042709350586
    8. 'tmp' → logprob: -15.016042709350586
    9. '```' → logprob: -15.016042709350586
    10. '(l' → logprob: -15.266042709350586

Token 486: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38794106245040894
    2. '+' → logprob: -1.1379411220550537
    3. ' if' → logprob: -7.137940883636475
    4. '           ' → logprob: -9.387941360473633
    5. 'if' → logprob: -9.637941360473633
    6. '+
' → logprob: -9.762941360473633
    7. '
' → logprob: -10.262941360473633
    8. ' +
' → logprob: -10.637941360473633
    9. '<|end|>' → logprob: -13.262941360473633
    10. ' ' → logprob: -13.262941360473633

Token 487: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.020545274019241333
    2. ' r' → logprob: -3.895545244216919
    3. ' ' → logprob: -14.14554500579834
    4. '   ' → logprob: -14.27054500579834
    5. '
' → logprob: -15.02054500579834
    6. '+' → logprob: -15.52054500579834
    7. ' ' → logprob: -15.52054500579834
    8. ' +' → logprob: -15.64554500579834
    9. '           ' → logprob: -15.77054500579834
    10. '       ' → logprob: -16.020545959472656

Token 488: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1178935319185257
    2. '
' → logprob: -2.6178934574127197
    3. ' if' → logprob: -4.367893695831299
    4. '            
' → logprob: -4.492893695831299
    5. '<|end|>' → logprob: -5.242893695831299
    6. 'if' → logprob: -5.367893695831299
    7. '               ' → logprob: -6.867893695831299
    8. '       ' → logprob: -6.992893695831299
    9. ' 
' → logprob: -7.742893695831299
    10. '  
' → logprob: -7.992893695831299

Token 489: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.865060567855835
    2. '           ' → logprob: -1.240060567855835
    3. 'if' → logprob: -1.490060567855835
    4. ' 
' → logprob: -3.865060567855835
    5. '            
' → logprob: -4.240060806274414
    6. '<|end|>' → logprob: -4.615060806274414
    7. '
' → logprob: -4.865060806274414
    8. '       ' → logprob: -5.990060806274414
    9. '\n' → logprob: -6.490060806274414
    10. '  
' → logprob: -6.865060806274414

Token 490: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.21467891335487366
    2. ' if' → logprob: -1.9646788835525513
    3. '           ' → logprob: -2.964679002761841
    4. 'dp' → logprob: -6.964678764343262
    5. '       ' → logprob: -8.464678764343262
    6. '               ' → logprob: -9.214678764343262
    7. ' dp' → logprob: -10.339678764343262
    8. '   ' → logprob: -10.339678764343262
    9. '```' → logprob: -11.089678764343262
    10. '            
' → logprob: -11.214678764343262

Token 491: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.29570886492729187
    2. 'tmp' → logprob: -1.4207088947296143
    3. ' dp' → logprob: -4.920708656311035
    4. ' k' → logprob: -5.920708656311035
    5. 'dp' → logprob: -6.045708656311035
    6. 'k' → logprob: -6.295708656311035
    7. '           ' → logprob: -8.545708656311035
    8. '(tmp' → logprob: -11.295708656311035
    9. '               ' → logprob: -11.545708656311035
    10. '   ' → logprob: -11.545708656311035

Token 492: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.009674634784460068
    2. '<' → logprob: -4.759674549102783
    3. ' <=' → logprob: -7.759674549102783
    4. '[' → logprob: -8.009675025939941
    5. '<|end|>' → logprob: -9.134675025939941
    6. ' ' → logprob: -11.009675025939941
    7. '<int' → logprob: -11.134675025939941
    8. '<n' → logprob: -11.134675025939941
    9. ')' → logprob: -11.509675025939941
    10. '<th' → logprob: -11.634675025939941

Token 493: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00033558503491804004
    2. ' dp' → logprob: -8.000335693359375
    3. '	dp' → logprob: -17.000335693359375
    4. '           ' → logprob: -17.125335693359375
    5. '
' → logprob: -18.750335693359375
    6. '(dp' → logprob: -19.375335693359375
    7. '   ' → logprob: -19.500335693359375
    8. '               ' → logprob: -20.250335693359375
    9. '_dp' → logprob: -20.375335693359375
    10. '```' → logprob: -20.625335693359375

Token 494: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.03521392197581e-05
    2. '[j' → logprob: -11.250030517578125
    3. 'i' → logprob: -11.375030517578125
    4. '[k' → logprob: -12.125030517578125
    5. '[' → logprob: -16.000030517578125
    6. '```' → logprob: -16.375030517578125
    7. '[
' → logprob: -16.500030517578125
    8. '
' → logprob: -17.500030517578125
    9. '   ' → logprob: -18.000030517578125
    10. '][' → logprob: -18.125030517578125

Token 495: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007075159810483456
    2. '[j' → logprob: -5.382075309753418
    3. '[k' → logprob: -6.132075309753418
    4. ']' → logprob: -8.382075309753418
    5. '[' → logprob: -10.632075309753418
    6. ' ][' → logprob: -11.632075309753418
    7. '[i' → logprob: -12.382075309753418
    8. '[
' → logprob: -12.632075309753418
    9. '   ' → logprob: -12.882075309753418
    10. '"][' → logprob: -13.507075309753418

Token 496: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.128163257315464e-07
    2. ' k' → logprob: -15.625
    3. 'j' → logprob: -16.625
    4. '	k' → logprob: -19.125
    5. '
' → logprob: -19.25
    6. '   ' → logprob: -19.875
    7. '{k' → logprob: -19.875
    8. '```' → logprob: -20.125
    9. '[k' → logprob: -20.375
    10. 'к' → logprob: -20.375

Token 497: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.018291937187314034
    2. ']' → logprob: -4.39329195022583
    3. ']:
' → logprob: -5.26829195022583
    4. '[j' → logprob: -7.51829195022583
    5. '[' → logprob: -10.518291473388672
    6. ']:
' → logprob: -11.018291473388672
    7. '[k' → logprob: -11.518291473388672
    8. ':' → logprob: -12.393291473388672
    9. ']:

' → logprob: -12.768291473388672
    10. ']>' → logprob: -13.268291473388672

Token 498: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3054148852825165
    2. ' dp' → logprob: -1.9304149150848389
    3. '                               ' → logprob: -3.180414915084839
    4. '           ' → logprob: -4.30541467666626
    5. '                           ' → logprob: -4.43041467666626
    6. ' 
' → logprob: -4.43041467666626
    7. 'dp' → logprob: -4.55541467666626
    8. '[' → logprob: -4.93041467666626
    9. '                       ' → logprob: -5.93041467666626
    10. ' =' → logprob: -6.05541467666626

Token 499: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0011705794604495168
    2. ' dp' → logprob: -6.751170635223389
    3. '               ' → logprob: -15.25117015838623
    4. '	dp' → logprob: -15.75117015838623
    5. '                   ' → logprob: -16.751171112060547
    6. '           ' → logprob: -18.126171112060547
    7. '_dp' → logprob: -18.501171112060547
    8. '
' → logprob: -18.876171112060547
    9. 'dj' → logprob: -19.501171112060547
    10. '                       ' → logprob: -19.751171112060547

Token 500: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.088346359931165e-07
    2. '[i' → logprob: -14.625000953674316
    3. '[' → logprob: -16.0
    4. '][' → logprob: -16.5
    5. '[js' → logprob: -16.75
    6. '[k' → logprob: -17.375
    7. 'j' → logprob: -17.625
    8. '[
' → logprob: -18.5
    9. '```' → logprob: -19.0
    10. ' [' → logprob: -19.25

Token 501: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00021569548698607832
    2. '[k' → logprob: -9.000215530395508
    3. ']' → logprob: -10.000215530395508
    4. '[j' → logprob: -10.000215530395508
    5. '[' → logprob: -14.375215530395508
    6. ' ][' → logprob: -14.625215530395508
    7. '"][' → logprob: -16.250215530395508
    8. ''][' → logprob: -16.750215530395508
    9. '   ' → logprob: -17.000215530395508
    10. 'k' → logprob: -17.000215530395508

Token 502: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: 0.0
    2. ' k' → logprob: -18.375
    3. '{k' → logprob: -19.125
    4. '[k' → logprob: -19.5
    5. '	k' → logprob: -20.25
    6. '
' → logprob: -20.375
    7. '<|end|>' → logprob: -20.625
    8. '[' → logprob: -21.0
    9. '_k' → logprob: -21.125
    10. 'к' → logprob: -21.25

Token 503: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7022731304168701
    2. ' =' → logprob: -1.0772731304168701
    3. '=' → logprob: -1.8272731304168701
    4. ']=' → logprob: -5.827273368835449
    5. ' ]' → logprob: -8.45227336883545
    6. ')' → logprob: -12.57727336883545
    7. '[' → logprob: -14.07727336883545
    8. '<|end|>' → logprob: -14.07727336883545
    9. ' =
' → logprob: -14.45227336883545
    10. ' ' → logprob: -15.07727336883545

Token 504: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002068892121315
    2. ' =' → logprob: -2.3502068519592285
    3. '＝' → logprob: -16.47520637512207
    4. '=
' → logprob: -16.72520637512207
    5. '.=' → logprob: -17.35020637512207
    6. '=

' → logprob: -18.22520637512207
    7. ']=' → logprob: -18.60020637512207
    8. ' =
' → logprob: -18.72520637512207
    9. '=True' → logprob: -18.72520637512207
    10. '<|end|>' → logprob: -18.72520637512207

Token 505: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.00033546582562848926
    2. ' tmp' → logprob: -8.000335693359375
    3. 'temp' → logprob: -17.625335693359375
    4. '	tmp' → logprob: -18.625335693359375
    5. '(tmp' → logprob: -18.625335693359375
    6. '$tmp' → logprob: -19.750335693359375
    7. '           ' → logprob: -20.750335693359375
    8. '/tmp' → logprob: -21.000335693359375
    9. 't' → logprob: -21.125335693359375
    10. '_tmp' → logprob: -21.250335693359375

Token 506: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 507: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 508: ' La' (ID: 3038)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016485184896737337
    2. 'result' → logprob: -6.876648426055908
    3. 'min' → logprob: -8.376648902893066
    4. 'answer' → logprob: -9.001648902893066
    5. 'res' → logprob: -9.376648902893066
    6. 'ans' → logprob: -9.626648902893066
    7. ' print' → logprob: -10.251648902893066
    8. '#' → logprob: -10.501648902893066
    9. 'for' → logprob: -11.126648902893066
    10. 'm' → logprob: -11.876648902893066

Token 509: ' réponse' (ID: 50332)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12796075642108917
    2. 'ns' → logprob: -2.502960681915283
    3. '#' → logprob: -4.377960681915283
    4. 'for' → logprob: -5.002960681915283
    5. ' =' → logprob: -5.252960681915283
    6. '=' → logprob: -6.252960681915283
    7. '
' → logprob: -6.377960681915283
    8. 'rray' → logprob: -6.377960681915283
    9. 'rg' → logprob: -6.502960681915283
    10. 'r' → logprob: -7.127960681915283

Token 510: ' finale' (ID: 37759)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0087516784551553e-05
    2. '
' → logprob: -12.25001049041748
    3. ' print' → logprob: -12.37501049041748
    4. '```' → logprob: -13.87501049041748
    5. '``' → logprob: -17.375009536743164
    6. ')' → logprob: -17.500009536743164
    7. ')
' → logprob: -17.875009536743164
    8. '#print' → logprob: -18.125009536743164
    9. '
' → logprob: -18.750009536743164
    10. '(print' → logprob: -19.000009536743164

Token 511: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.438573680294212e-06
    2. '
' → logprob: -12.625005722045898
    3. ' print' → logprob: -13.625005722045898
    4. '```' → logprob: -14.125005722045898
    5. '#print' → logprob: -17.6250057220459
    6. '``' → logprob: -17.7500057220459
    7. 'result' → logprob: -18.0000057220459
    8. '
' → logprob: -19.1250057220459
    9. 'for' → logprob: -19.3750057220459
    10. '#' → logprob: -19.3750057220459

Token 512: 'x' (ID: 87)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.008129963040119e-06
    2. ' print' → logprob: -12.625003814697266
    3. 'result' → logprob: -15.250003814697266
    4. '
' → logprob: -15.625003814697266
    5. '```' → logprob: -15.625003814697266
    6. '#print' → logprob: -18.125003814697266
    7. 'answer' → logprob: -19.125003814697266
    8. '``' → logprob: -20.000003814697266
    9. 'for' → logprob: -20.125003814697266
    10. 'ans' → logprob: -20.750003814697266

Token 513: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34935665130615234
    2. '=' → logprob: -1.2243566513061523
    3. '=max' → logprob: -7.974356651306152
    4. 'print' → logprob: -9.099356651306152
    5. '=int' → logprob: -9.224356651306152
    6. ',' → logprob: -9.224356651306152
    7. '=min' → logprob: -9.974356651306152
    8. '=x' → logprob: -9.974356651306152
    9. 'r' → logprob: -10.849356651306152
    10. 'x' → logprob: -10.849356651306152

Token 514: ' float' (ID: 4428)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02650533616542816
    2. 'min' → logprob: -3.6515052318573
    3. ' dp' → logprob: -8.651505470275879
    4. ' min' → logprob: -10.776505470275879
    5. 'max' → logprob: -12.526505470275879
    6. 'float' → logprob: -12.901505470275879
    7. 'int' → logprob: -14.276505470275879
    8. 'n' → logprob: -14.651505470275879
    9. '0' → logprob: -14.776505470275879
    10. '(dp' → logprob: -14.901505470275879

Token 515: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.06239762157201767
    2. '('' → logprob: -2.8123977184295654
    3. '(' → logprob: -8.187397956848145
    4. '(in' → logprob: -9.562397956848145
    5. '("-' → logprob: -10.062397956848145
    6. ' ("' → logprob: -11.187397956848145
    7. '"' → logprob: -11.812397956848145
    8. '("+' → logprob: -11.937397956848145
    9. '('-' → logprob: -12.187397956848145
    10. 'inf' → logprob: -13.437397956848145

Token 516: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0031039228197187185
    2. ''in' → logprob: -6.378103733062744
    3. '"' → logprob: -6.628103733062744
    4. ''' → logprob: -9.753104209899902
    5. '"in' → logprob: -12.253104209899902
    6. 'in' → logprob: -12.628104209899902
    7. '-inf' → logprob: -13.378104209899902
    8. '3' → logprob: -13.628104209899902
    9. '0' → logprob: -13.878104209899902
    10. ' inf' → logprob: -14.003104209899902

Token 517: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025094281882047653
    2. ')
' → logprob: -6.002509593963623
    3. '")' → logprob: -11.127509117126465
    4. ' )' → logprob: -11.627509117126465
    5. ')

' → logprob: -12.502509117126465
    6. ')
' → logprob: -12.752509117126465
    7. '())' → logprob: -13.752509117126465
    8. '()' → logprob: -14.627509117126465
    9. '
' → logprob: -15.002509117126465
    10. ' )
' → logprob: -15.502509117126465

Token 518: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.704273118884885e-07
    2. ' for' → logprob: -14.750000953674316
    3. '
' → logprob: -16.375
    4. 'x' → logprob: -16.375
    5. '```' → logprob: -17.5
    6. '	for' → logprob: -20.125
    7. 'answer' → logprob: -20.25
    8. 'result' → logprob: -20.625
    9. 'ans' → logprob: -21.5
    10. 'print' → logprob: -21.5

Token 519: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009126431308686733
    2. 'j' → logprob: -5.134126663208008
    3. 'k' → logprob: -6.384126663208008
    4. ' i' → logprob: -7.134126663208008
    5. 'end' → logprob: -7.884126663208008
    6. 'x' → logprob: -8.509126663208008
    7. 's' → logprob: -11.009126663208008
    8. ' j' → logprob: -11.134126663208008
    9. 'final' → logprob: -11.384126663208008
    10. 'p' → logprob: -11.509126663208008

Token 520: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4742112159729004
    2. ' in' → logprob: -0.9742112159729004
    3. 'range' → logprob: -9.599210739135742
    4. '   ' → logprob: -10.724210739135742
    5. '```' → logprob: -11.724210739135742
    6. 'n' → logprob: -11.724210739135742
    7. '
' → logprob: -12.099210739135742
    8. ' ' → logprob: -12.224210739135742
    9. 'import' → logprob: -13.099210739135742
    10. '(n' → logprob: -13.599210739135742

Token 521: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019287518225610256
    2. ' range' → logprob: -6.251928806304932
    3. '(range' → logprob: -16.001928329467773
    4. '   ' → logprob: -17.251928329467773
    5. ' ' → logprob: -18.126928329467773
    6. 'in' → logprob: -18.251928329467773
    7. '
' → logprob: -18.251928329467773
    8. 'n' → logprob: -19.376928329467773
    9. '  ' → logprob: -19.376928329467773
    10. '	range' → logprob: -19.751928329467773

Token 522: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005004895501770079
    2. '(range' → logprob: -7.750500679016113
    3. '(' → logprob: -9.875500679016113
    4. 'range' → logprob: -11.000500679016113
    5. ' range' → logprob: -13.875500679016113
    6. ' (' → logprob: -15.750500679016113
    7. '[n' → logprob: -16.000499725341797
    8. '((' → logprob: -16.125499725341797
    9. '   ' → logprob: -16.375499725341797
    10. 'n' → logprob: -16.625499725341797

Token 523: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00011558275582501665
    2. '):
' → logprob: -9.250115394592285
    3. ' +' → logprob: -11.375115394592285
    4. '):' → logprob: -12.875115394592285
    5. '   ' → logprob: -13.375115394592285
    6. 'n' → logprob: -13.625115394592285
    7. '+n' → logprob: -13.750115394592285
    8. '+
' → logprob: -14.000115394592285
    9. '(n' → logprob: -15.375115394592285
    10. '
' → logprob: -16.2501163482666

Token 524: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007257753168232739
    2. '+' → logprob: -7.500725746154785
    3. 'n' → logprob: -9.250725746154785
    4. '2' → logprob: -9.750725746154785
    5. 'i' → logprob: -11.500725746154785
    6. ' ' → logprob: -12.625725746154785
    7. '(' → logprob: -13.250725746154785
    8. ')' → logprob: -13.750725746154785
    9. '(n' → logprob: -13.875725746154785
    10. '```' → logprob: -14.875725746154785

Token 525: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04865458607673645
    2. '):' → logprob: -3.048654556274414
    3. '):
' → logprob: -10.048654556274414
    4. ':' → logprob: -11.423654556274414
    5. ':
' → logprob: -12.173654556274414
    6. '   ' → logprob: -12.423654556274414
    7. '):

' → logprob: -13.798654556274414
    8. '+' → logprob: -14.298654556274414
    9. ')' → logprob: -14.548654556274414
    10. '():
' → logprob: -14.673654556274414

Token 526: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031892504543066025
    2. 'if' → logprob: -4.0318922996521
    3. ' if' → logprob: -4.4068922996521
    4. 'x' → logprob: -6.7818922996521
    5. 'for' → logprob: -8.906892776489258
    6. ' for' → logprob: -9.406892776489258
    7. ' x' → logprob: -9.906892776489258
    8. ' ' → logprob: -10.281892776489258
    9. '	if' → logprob: -11.656892776489258
    10. '  ' → logprob: -12.281892776489258

Token 527: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05527884513139725
    2. 'x' → logprob: -3.555278778076172
    3. '   ' → logprob: -4.055278778076172
    4. ' if' → logprob: -5.055278778076172
    5. 'for' → logprob: -6.555278778076172
    6. ' x' → logprob: -9.930278778076172
    7. ' for' → logprob: -10.680278778076172
    8. ' ' → logprob: -13.180278778076172
    9. '	if' → logprob: -13.680278778076172
    10. '
' → logprob: -14.180278778076172

Token 528: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0024794621858745813
    2. ' dp' → logprob: -6.002479553222656
    3. 'x' → logprob: -12.752479553222656
    4. '   ' → logprob: -15.002479553222656
    5. '(dp' → logprob: -15.502479553222656
    6. '	dp' → logprob: -15.627479553222656
    7. ' ' → logprob: -15.877479553222656
    8. ' x' → logprob: -17.377479553222656
    9. 'd' → logprob: -17.502479553222656
    10. '  ' → logprob: -18.627479553222656

Token 529: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0019381542224436998
    2. '[n' → logprob: -6.251938343048096
    3. 'i' → logprob: -12.376937866210938
    4. '[' → logprob: -13.251937866210938
    5. '[x' → logprob: -13.376937866210938
    6. 'n' → logprob: -14.126937866210938
    7. '[-' → logprob: -14.626937866210938
    8. ' [' → logprob: -15.251937866210938
    9. '   ' → logprob: -15.376937866210938
    10. '[
' → logprob: -16.626937866210938

Token 530: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00039885283331386745
    2. ']' → logprob: -8.375398635864258
    3. '[n' → logprob: -9.625398635864258
    4. '][-' → logprob: -9.750398635864258
    5. '[i' → logprob: -10.750398635864258
    6. '[' → logprob: -12.125398635864258
    7. ' ][' → logprob: -12.250398635864258
    8. ']!=' → logprob: -12.750398635864258
    9. ']==' → logprob: -13.125398635864258
    10. ']<' → logprob: -14.000398635864258

Token 531: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00091217877343297
    2. 'i' → logprob: -7.000912189483643
    3. ' n' → logprob: -14.375911712646484
    4. '
' → logprob: -16.375911712646484
    5. '[n' → logprob: -16.875911712646484
    6. '(n' → logprob: -18.000911712646484
    7. '0' → logprob: -18.375911712646484
    8. '_n' → logprob: -18.500911712646484
    9. '```' → logprob: -18.500911712646484
    10. '[i' → logprob: -18.625911712646484

Token 532: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007229181355796754
    2. ']==' → logprob: -7.500722885131836
    3. ']<' → logprob: -9.750722885131836
    4. ']>' → logprob: -9.875722885131836
    5. ']!=' → logprob: -10.250722885131836
    6. ' ]' → logprob: -11.375722885131836
    7. ']
' → logprob: -13.125722885131836
    8. '])' → logprob: -13.375722885131836
    9. 'i' → logprob: -13.375722885131836
    10. '()]' → logprob: -13.750722885131836

Token 533: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.054986655712127686
    2. ' <' → logprob: -2.9299867153167725
    3. '>' → logprob: -9.679986953735352
    4. ' >' → logprob: -10.929986953735352
    5. ']' → logprob: -11.929986953735352
    6. '[' → logprob: -12.429986953735352
    7. ')' → logprob: -12.554986953735352
    8. '<int' → logprob: -13.554986953735352
    9. ']<' → logprob: -13.929986953735352
    10. '><' → logprob: -14.054986953735352

Token 534: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004306692280806601
    2. ' x' → logprob: -7.750430583953857
    3. '   ' → logprob: -19.500431060791016
    4. '	x' → logprob: -19.625431060791016
    5. ' ' → logprob: -20.000431060791016
    6. 'float' → logprob: -22.250431060791016
    7. ' ' → logprob: -23.375431060791016
    8. '(x' → logprob: -23.625431060791016
    9. '```' → logprob: -23.750431060791016
    10. '"x' → logprob: -23.875431060791016

Token 535: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6891399621963501
    2. ':' → logprob: -0.8141399621963501
    3. '       ' → logprob: -3.0641398429870605
    4. 'x' → logprob: -5.0641398429870605
    5. '   ' → logprob: -6.6891398429870605
    6. '=' → logprob: -8.314140319824219
    7. '):
' → logprob: -9.314140319824219
    8. ' x' → logprob: -9.439140319824219
    9. ' =' → logprob: -9.814140319824219
    10. ' :
' → logprob: -9.814140319824219

Token 536: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47333604097366333
    2. 'x' → logprob: -1.0983359813690186
    3. '   ' → logprob: -3.7233359813690186
    4. ' x' → logprob: -3.9733359813690186
    5. '	x' → logprob: -7.598336219787598
    6. '	   ' → logprob: -9.348336219787598
    7. '
' → logprob: -10.098336219787598
    8. '           ' → logprob: -10.848336219787598
    9. '	' → logprob: -11.973336219787598
    10. '   ' → logprob: -12.348336219787598

Token 537: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -1.3856492842023727e-06
    2. ' x' → logprob: -13.750000953674316
    3. '
' → logprob: -16.250001907348633
    4. '   ' → logprob: -16.875001907348633
    5. '       ' → logprob: -17.375001907348633
    6. '	x' → logprob: -19.125001907348633
    7. '           ' → logprob: -20.375001907348633
    8. '```' → logprob: -21.875001907348633
    9. '
' → logprob: -22.750001907348633
    10. ' ' → logprob: -23.125001907348633

Token 538: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019299437990412116
    2. ' =' → logprob: -6.251929759979248
    3. '=
' → logprob: -13.501930236816406
    4. '=

' → logprob: -17.376930236816406
    5. ' =
' → logprob: -18.501930236816406
    6. '＝' → logprob: -18.751930236816406
    7. '=x' → logprob: -19.126930236816406
    8. '=i' → logprob: -19.876930236816406
    9. 'x' → logprob: -20.751930236816406
    10. '.=' → logprob: -21.001930236816406

Token 539: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -7.941850526549388e-06
    2. ' dp' → logprob: -11.750007629394531
    3. '	dp' → logprob: -19.50000762939453
    4. '(dp' → logprob: -20.62500762939453
    5. '   ' → logprob: -22.25000762939453
    6. 'd' → logprob: -22.50000762939453
    7. '_dp' → logprob: -23.12500762939453
    8. '
' → logprob: -23.75000762939453
    9. '.dp' → logprob: -23.75000762939453
    10. 'df' → logprob: -24.87500762939453

Token 540: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.802049756515771e-05
    2. 'i' → logprob: -10.125067710876465
    3. '[n' → logprob: -10.875067710876465
    4. '[' → logprob: -12.500067710876465
    5. 'n' → logprob: -13.000067710876465
    6. 'dp' → logprob: -13.500067710876465
    7. '   ' → logprob: -14.750067710876465
    8. '```' → logprob: -14.875067710876465
    9. ' [' → logprob: -15.875067710876465
    10. '[x' → logprob: -16.00006866455078

Token 541: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6937257647514343
    2. '][' → logprob: -0.6937257647514343
    3. '])' → logprob: -8.1937255859375
    4. '[i' → logprob: -8.5687255859375
    5. ']
' → logprob: -9.9437255859375
    6. '[n' → logprob: -10.5687255859375
    7. ']+' → logprob: -11.0687255859375
    8. '[' → logprob: -11.6937255859375
    9. ']>' → logprob: -13.1937255859375
    10. '[x' → logprob: -13.8187255859375

Token 542: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.320199877838604e-07
    2. ' n' → logprob: -15.0
    3. '
' → logprob: -19.75
    4. '	n' → logprob: -20.5
    5. ')n' → logprob: -20.875
    6. '_n' → logprob: -21.75
    7. '   ' → logprob: -21.75
    8. '```' → logprob: -22.375
    9. ']' → logprob: -22.75
    10. '[n' → logprob: -22.875

Token 543: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03678809106349945
    2. ']' → logprob: -3.411787986755371
    3. '}' → logprob: -6.661787986755371
    4. '<|end|>' → logprob: -7.411787986755371
    5. '   ' → logprob: -7.911787986755371
    6. ':' → logprob: -7.911787986755371
    7. '):' → logprob: -8.786787986755371
    8. ')
' → logprob: -9.786787986755371
    9. '       ' → logprob: -10.036787986755371
    10. ')return' → logprob: -10.161787986755371

Token 544: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '
' → logprob: -17.125
    3. '```' → logprob: -17.125
    4. ' print' → logprob: -17.625
    5. '#print' → logprob: -20.625
    6. '``' → logprob: -22.125
    7. '  
' → logprob: -22.25
    8. '    
' → logprob: -23.125
    9. 'for' → logprob: -23.875
    10. '#' → logprob: -24.0

Token 545: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -4.3226136767771095e-05
    2. '(' → logprob: -10.125042915344238
    3. '(int' → logprob: -12.875042915344238
    4. 'x' → logprob: -14.625042915344238
    5. ' (' → logprob: -16.500043869018555
    6. '(
' → logprob: -18.125043869018555
    7. 'int' → logprob: -18.250043869018555
    8. '(round' → logprob: -18.625043869018555
    9. '(f' → logprob: -19.125043869018555
    10. '()' → logprob: -20.125043869018555

Token 546: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.500000953674316
    3. '))' → logprob: -15.625000953674316
    4. '())' → logprob: -16.5
    5. ')`' → logprob: -16.875
    6. '()' → logprob: -17.25
    7. ')
' → logprob: -17.5
    8. ')}' → logprob: -19.625
    9. '})' → logprob: -20.0
    10. '(' → logprob: -20.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 544
Tokens correctement prédits (1ère position, stricte): 220
Tokens correctement prédits (1ère position, avec adaptation): 233
Tokens correctement prédits (top 10): 416
Précision stricte (1ère position): 40.44%
Précision adaptée (1ère position): 42.83%
Précision (top 10): 76.47%
================================================================================
