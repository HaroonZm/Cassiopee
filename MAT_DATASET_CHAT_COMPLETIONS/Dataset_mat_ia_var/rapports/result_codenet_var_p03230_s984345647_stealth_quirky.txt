================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce as _R
N = int(input().strip())
Z = []
_S = lambda k: _R(lambda a, _: a+1, range(k), 0)
acc = 0
[getattr(Z,'append')(acc) or setattr(globals(),'acc',acc+i+1) for i in range(N+2)]
if N not in Z:
    print('No')
else:
    K = Z.index(N)+1
    X = [[] for _ in range(K)]
    C = [0]
    def F():
        for i in range(K):
            for j in range(i+1,K):
                X[i]+=[C[0]+1]
                X[j]+=[C[0]+1]
                C[0]+=1
    list(map(lambda _:F(),[None]))
    print('Yes')
    print(K)
    for idx in range(K):
        print(K-1, *X[idx])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6123510599136353
    2. 'wrap' → logprob: -0.8623510599136353
    3. 'reduce' → logprob: -3.4873509407043457
    4. 'l' → logprob: -6.112350940704346
    5. ' wraps' → logprob: -6.362350940704346
    6. 'cached' → logprob: -7.612350940704346
    7. 'cache' → logprob: -7.987350940704346
    8. 'cmp' → logprob: -9.112351417541504
    9. '```' → logprob: -9.237351417541504
    10. ' partial' → logprob: -9.487351417541504

Token 4: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: ' _' (ID: 1175)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.05677298828959465
    2. ' reduce' → logprob: -3.0567729473114014
    3. '_reduce' → logprob: -5.0567731857299805
    4. 'red' → logprob: -7.4317731857299805
    5. 'r' → logprob: -7.5567731857299805
    6. 'redu' → logprob: -8.30677318572998
    7. 'rd' → logprob: -9.30677318572998
    8. '`' → logprob: -10.43177318572998
    9. ' ' → logprob: -10.55677318572998
    10. ' reducer' → logprob: -10.55677318572998

Token 6: 'R' (ID: 49)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.44465553760528564
    2. '_' → logprob: -1.0696555376052856
    3. '_r' → logprob: -4.694655418395996
    4. 'reduce' → logprob: -5.569655418395996
    5. '.' → logprob: -7.194655418395996
    6. 're' → logprob: -7.694655418395996
    7. '_reduce' → logprob: -7.944655418395996
    8. '._' → logprob: -8.194655418395996
    9. 'i' → logprob: -9.069655418395996
    10. 'R' → logprob: -9.444655418395996

Token 7: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4188750088214874
    2. ',' → logprob: -1.668874979019165
    3. '_' → logprob: -2.043874979019165
    4. '(
' → logprob: -5.293875217437744
    5. '.' → logprob: -5.418875217437744
    6. ' ' → logprob: -6.168875217437744
    7. ' (' → logprob: -6.418875217437744
    8. ')' → logprob: -6.418875217437744
    9. '
' → logprob: -6.418875217437744
    10. '\' → logprob: -7.043875217437744

Token 8: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21098706126213074
    2. '_' → logprob: -2.460987091064453
    3. '.' → logprob: -2.835987091064453
    4. '\n' → logprob: -4.460987091064453
    5. '\' → logprob: -4.710987091064453
    6. '(
' → logprob: -5.085987091064453
    7. ',' → logprob: -5.085987091064453
    8. 'def' → logprob: -6.210987091064453
    9. '
' → logprob: -6.210987091064453
    10. '```' → logprob: -6.460987091064453

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0297125577926636
    2. '=' → logprob: -1.1547125577926636
    3. '_' → logprob: -1.1547125577926636
    4. ',' → logprob: -4.904712677001953
    5. 'E' → logprob: -6.654712677001953
    6. 'um' → logprob: -7.654712677001953
    7. 'a' → logprob: -7.779712677001953
    8. 'A' → logprob: -7.904712677001953
    9. 'umber' → logprob: -7.904712677001953
    10. '.' → logprob: -8.029712677001953

Token 10: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17019276320934296
    2. ' []' → logprob: -3.1701927185058594
    3. '0' → logprob: -3.4201927185058594
    4. 'int' → logprob: -3.7951927185058594
    5. ' int' → logprob: -3.9201927185058594
    6. '1' → logprob: -4.295192718505859
    7. '10' → logprob: -5.045192718505859
    8. '[]' → logprob: -5.170192718505859
    9. '_' → logprob: -5.295192718505859
    10. '100' → logprob: -5.920192718505859

Token 11: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10029271990060806
    2. '(input' → logprob: -2.475292682647705
    3. '('' → logprob: -4.600292682647705
    4. 'input' → logprob: -7.725292682647705
    5. ''' → logprob: -7.975292682647705
    6. ' (' → logprob: -8.600293159484863
    7. '(
' → logprob: -9.475293159484863
    8. '("' → logprob: -9.600293159484863
    9. '()' → logprob: -10.225293159484863
    10. '"' → logprob: -11.475293159484863

Token 12: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6611579060554504
    2. ')' → logprob: -1.5361578464508057
    3. '(' → logprob: -1.6611578464508057
    4. '()' → logprob: -2.6611578464508057
    5. '))' → logprob: -5.286158084869385
    6. '()))' → logprob: -6.036158084869385
    7. '(
' → logprob: -7.911158084869385
    8. '('' → logprob: -8.286157608032227
    9. '(""))' → logprob: -8.911157608032227
    10. '(()' → logprob: -9.661157608032227

Token 13: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0048889582976698875
    2. 'split' → logprob: -5.754889011383057
    3. ')' → logprob: -6.879889011383057
    4. 'rstrip' → logprob: -7.504889011383057
    5. 'bit' → logprob: -9.629888534545898
    6. 'read' → logprob: -10.629888534545898
    7. 'replace' → logprob: -10.754888534545898
    8. '))' → logprob: -12.254888534545898
    9. ' strip' → logprob: -12.379888534545898
    10. '_strip' → logprob: -12.629888534545898

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14266687631607056
    2. '())' → logprob: -2.517666816711426
    3. '))' → logprob: -3.017666816711426
    4. '()' → logprob: -6.142666816711426
    5. '()))' → logprob: -6.767666816711426
    6. '(' → logprob: -9.767666816711426
    7. ' )' → logprob: -12.142666816711426
    8. ')))' → logprob: -12.267666816711426
    9. '`)' → logprob: -12.517666816711426
    10. '),' → logprob: -12.642666816711426

Token 15: 'Z' (ID: 57)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0531758069992065
    2. 'a' → logprob: -1.0531758069992065
    3. 'data' → logprob: -2.303175926208496
    4. 's' → logprob: -2.803175926208496
    5. 'd' → logprob: -3.678175926208496
    6. 'A' → logprob: -3.678175926208496
    7. 'result' → logprob: -3.803175926208496
    8. 'arr' → logprob: -4.553175926208496
    9. ')' → logprob: -5.053175926208496
    10. 'lst' → logprob: -5.303175926208496

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44326767325401306
    2. '=' → logprob: -1.1932677030563354
    3. '_' → logprob: -3.193267583847046
    4. ',' → logprob: -5.443267822265625
    5. 's' → logprob: -5.943267822265625
    6. ' ' → logprob: -6.068267822265625
    7. '=[]' → logprob: -7.443267822265625
    8. '_=' → logprob: -7.568267822265625
    9. 'Z' → logprob: -7.693267822265625
    10. '=[]
' → logprob: -8.193267822265625

Token 17: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.1253459453582764
    2. ' []' → logprob: -1.2503459453582764
    3. 'list' → logprob: -2.0003459453582764
    4. '_' → logprob: -2.6253459453582764
    5. ' list' → logprob: -2.6253459453582764
    6. ' [' → logprob: -3.6253459453582764
    7. '[int' → logprob: -3.7503459453582764
    8. '[' → logprob: -4.2503461837768555
    9. '[input' → logprob: -5.0003461837768555
    10. ' ' → logprob: -5.0003461837768555

Token 18: '_S' (ID: 1875)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004160145472269505
    2. '_' → logprob: -8.375415802001953
    3. ' for' → logprob: -8.750415802001953
    4. '```' → logprob: -11.625415802001953
    5. '
' → logprob: -12.625415802001953
    6. 'f' → logprob: -12.750415802001953
    7. 'd' → logprob: -13.250415802001953
    8. '_for' → logprob: -13.500415802001953
    9. '\n' → logprob: -13.750415802001953
    10. '`' → logprob: -13.875415802001953

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1587592363357544
    2. '=' → logprob: -1.5337592363357544
    3. 'Z' → logprob: -1.7837592363357544
    4. 'um' → logprob: -2.533759117126465
    5. '_' → logprob: -2.908759117126465
    6. 'E' → logprob: -3.658759117126465
    7. 'UM' → logprob: -4.033759117126465
    8. 'U' → logprob: -4.033759117126465
    9. 'R' → logprob: -4.533759117126465
    10. '_=' → logprob: -4.533759117126465

Token 20: ' lambda' (ID: 27871)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8660399913787842
    2. '_' → logprob: -1.1160399913787842
    3. 'sum' → logprob: -2.741039991378784
    4. ' ' → logprob: -3.241039991378784
    5. '[]' → logprob: -3.616039991378784
    6. 'lambda' → logprob: -3.991039991378784
    7. 'input' → logprob: -4.366040229797363
    8. 'set' → logprob: -4.741040229797363
    9. 'int' → logprob: -4.741040229797363
    10. '_S' → logprob: -5.116040229797363

Token 21: ' k' (ID: 372)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6510699987411499
    2. ' x' → logprob: -0.9010699987411499
    3. 'a' → logprob: -3.5260701179504395
    4. ' a' → logprob: -4.2760701179504395
    5. ' s' → logprob: -4.6510701179504395
    6. 's' → logprob: -4.9010701179504395
    7. 'f' → logprob: -5.6510701179504395
    8. ' f' → logprob: -6.6510701179504395
    9. 'b' → logprob: -7.0260701179504395
    10. 'n' → logprob: -7.1510701179504395

Token 22: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06257970631122589
    2. ' :' → logprob: -2.93757963180542
    3. ':k' → logprob: -5.31257963180542
    4. ',' → logprob: -6.68757963180542
    5. ' k' → logprob: -7.43757963180542
    6. ',k' → logprob: -8.687580108642578
    7. '[' → logprob: -9.562580108642578
    8. 'k' → logprob: -9.562580108642578
    9. ':n' → logprob: -9.812580108642578
    10. ':s' → logprob: -10.312580108642578

Token 23: ' _' (ID: 1175)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7690892219543457
    2. ' k' → logprob: -1.5190892219543457
    3. 'sum' → logprob: -2.5190892219543457
    4. ' sum' → logprob: -3.0190892219543457
    5. '[' → logprob: -3.6440892219543457
    6. 'int' → logprob: -3.6440892219543457
    7. ' [' → logprob: -4.144089221954346
    8. ' int' → logprob: -4.394089221954346
    9. '[k' → logprob: -4.519089221954346
    10. 'str' → logprob: -4.519089221954346

Token 24: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.03487873822450638
    2. 'S' → logprob: -3.659878730773926
    3. 'str' → logprob: -5.159878730773926
    4. 'sum' → logprob: -6.909878730773926
    5. 'pow' → logprob: -7.784878730773926
    6. ' R' → logprob: -8.659878730773926
    7. 'abs' → logprob: -8.659878730773926
    8. 's' → logprob: -8.659878730773926
    9. 'r' → logprob: -9.034878730773926
    10. 'range' → logprob: -9.534878730773926

Token 25: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.03967296704649925
    2. '(' → logprob: -3.2896728515625
    3. 'lambda' → logprob: -7.1646728515625
    4. '(operator' → logprob: -7.5396728515625
    5. '<|end|>' → logprob: -8.5396728515625
    6. ' lambda' → logprob: -10.7896728515625
    7. '(int' → logprob: -10.7896728515625
    8. ' (' → logprob: -10.9146728515625
    9. '(k' → logprob: -11.1646728515625
    10. '(pow' → logprob: -11.2896728515625

Token 26: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8098414540290833
    2. ' x' → logprob: -0.8098414540290833
    3. 'a' → logprob: -2.5598413944244385
    4. 'x' → logprob: -3.5598413944244385
    5. ' lambda' → logprob: -6.184841632843018
    6. ' acc' → logprob: -7.934841632843018
    7. ' ' → logprob: -7.934841632843018
    8. 'lambda' → logprob: -8.30984115600586
    9. ' c' → logprob: -8.43484115600586
    10. ' y' → logprob: -8.68484115600586

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06038112938404083
    2. ' ,' → logprob: -3.5603811740875244
    3. ',x' → logprob: -4.310380935668945
    4. ' x' → logprob: -4.685380935668945
    5. ',b' → logprob: -5.435380935668945
    6. 'x' → logprob: -6.560380935668945
    7. ',k' → logprob: -7.685380935668945
    8. ',a' → logprob: -7.810380935668945
    9. ',c' → logprob: -8.935380935668945
    10. ',y' → logprob: -9.060380935668945

Token 28: ' _:' (ID: 133568)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2918616831302643
    2. 'b' → logprob: -1.416861653327942
    3. ' x' → logprob: -4.916861534118652
    4. 'x' → logprob: -6.291861534118652
    5. ' ' → logprob: -7.166861534118652
    6. ' c' → logprob: -8.541861534118652
    7. 'c' → logprob: -9.291861534118652
    8. ' y' → logprob: -9.916861534118652
    9. ' s' → logprob: -9.916861534118652
    10. ' t' → logprob: -10.416861534118652

Token 29: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2139139026403427
    2. ' a' → logprob: -1.713913917541504
    3. '(a' → logprob: -4.713913917541504
    4. ' (' → logprob: -6.463913917541504
    5. '(lambda' → logprob: -7.838913917541504
    6. '(' → logprob: -8.088913917541504
    7. '[a' → logprob: -8.088913917541504
    8. 'lambda' → logprob: -8.588913917541504
    9. 'k' → logprob: -8.838913917541504
    10. ' lambda' → logprob: -9.088913917541504

Token 30: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.406002938747406
    2. '*' → logprob: -1.5310029983520508
    3. '|' → logprob: -3.156002998352051
    4. ' +' → logprob: -3.656002998352051
    5. '+k' → logprob: -3.781002998352051
    6. '<<' → logprob: -4.531002998352051
    7. ' *' → logprob: -5.781002998352051
    8. ' |' → logprob: -5.906002998352051
    9. '+a' → logprob: -5.906002998352051
    10. '+[' → logprob: -6.656002998352051

Token 31: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02108129858970642
    2. ' k' → logprob: -4.271081447601318
    3. '1' → logprob: -6.021081447601318
    4. 'len' → logprob: -6.896081447601318
    5. '(k' → logprob: -6.896081447601318
    6. 'int' → logprob: -7.271081447601318
    7. '(' → logprob: -7.646081447601318
    8. ' (' → logprob: -8.14608097076416
    9. '[k' → logprob: -8.77108097076416
    10. 'Z' → logprob: -9.14608097076416

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5296207666397095
    2. ' if' → logprob: -1.0296207666397095
    3. 'if' → logprob: -3.40462064743042
    4. ',k' → logprob: -4.15462064743042
    5. ' ,' → logprob: -6.27962064743042
    6. 'k' → logprob: -7.02962064743042
    7. '+' → logprob: -7.77962064743042
    8. ' for' → logprob: -8.404621124267578
    9. ')' → logprob: -8.529621124267578
    10. 'for' → logprob: -8.779621124267578

Token 33: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5101953148841858
    2. 'k' → logprob: -1.010195255279541
    3. ' range' → logprob: -3.885195255279541
    4. '[' → logprob: -4.760195255279541
    5. ' k' → logprob: -6.260195255279541
    6. '[k' → logprob: -6.510195255279541
    7. 'Z' → logprob: -7.635195255279541
    8. '(range' → logprob: -7.760195255279541
    9. '_' → logprob: -8.3851957321167
    10. 'filter' → logprob: -8.3851957321167

Token 34: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0011786778923124075
    2. '(' → logprob: -6.751178741455078
    3. '(n' → logprob: -12.501178741455078
    4. '(N' → logprob: -12.751178741455078
    5. '(
' → logprob: -14.626178741455078
    6. '((' → logprob: -15.126178741455078
    7. '(-' → logprob: -15.626178741455078
    8. 'k' → logprob: -15.751178741455078
    9. '(len' → logprob: -15.876178741455078
    10. '(S' → logprob: -16.001178741455078

Token 35: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.07647491991519928
    2. ')' → logprob: -3.201474905014038
    3. '))' → logprob: -3.451474905014038
    4. ',' → logprob: -8.076475143432617
    5. ')))' → logprob: -8.201475143432617
    6. '[' → logprob: -8.576475143432617
    7. '+' → logprob: -9.201475143432617
    8. ' ),' → logprob: -9.326475143432617
    9. '-' → logprob: -9.451475143432617
    10. '):' → logprob: -10.701475143432617

Token 36: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4750768840312958
    2. ' ' → logprob: -0.9750769138336182
    3. '-' → logprob: -8.100076675415039
    4. '1' → logprob: -8.225076675415039
    5. ' -' → logprob: -8.725076675415039
    6. '  ' → logprob: -9.975076675415039
    7. ' initial' → logprob: -10.350076675415039
    8. 'N' → logprob: -10.850076675415039
    9. '   ' → logprob: -10.850076675415039
    10. 'k' → logprob: -11.037576675415039

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07063882052898407
    2. ' ' → logprob: -2.69563889503479
    3. '1' → logprob: -8.070638656616211
    4. '-' → logprob: -8.695638656616211
    5. ' -' → logprob: -9.445638656616211
    6. '  ' → logprob: -10.695638656616211
    7. 'k' → logprob: -10.695638656616211
    8. 'N' → logprob: -11.570638656616211
    9. ' k' → logprob: -11.570638656616211
    10. '   ' → logprob: -11.695638656616211

Token 38: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.240481914370321e-05
    2. ' )' → logprob: -10.750052452087402
    3. ')
' → logprob: -11.625052452087402
    4. '))' → logprob: -12.375052452087402
    5. '),' → logprob: -12.625052452087402
    6. '+' → logprob: -12.625052452087402
    7. ')+' → logprob: -13.000052452087402
    8. ')))' → logprob: -13.875052452087402
    9. ' ' → logprob: -14.000052452087402
    10. ')`' → logprob: -14.250052452087402

Token 39: 'acc' (ID: 3717)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8709402084350586
    2. '[' → logprob: -1.8709402084350586
    3. 'for' → logprob: -1.9959402084350586
    4. ')' → logprob: -2.3709402084350586
    5. '_' → logprob: -2.6209402084350586
    6. ' ' → logprob: -3.3709402084350586
    7. '(
' → logprob: -4.370940208435059
    8. '\n' → logprob: -4.620940208435059
    9. ' for' → logprob: -4.745940208435059
    10. '*' → logprob: -4.870940208435059

Token 40: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.1534887552261353
    2. 'umulator' → logprob: -1.2784887552261353
    3. 'umulate' → logprob: -1.6534887552261353
    4. ' =' → logprob: -2.0284886360168457
    5. '=' → logprob: -2.7784886360168457
    6. 'umul' → logprob: -4.653488636016846
    7. '_' → logprob: -5.403488636016846
    8. 'umulative' → logprob: -6.403488636016846
    9. 'u' → logprob: -6.903488636016846
    10. 'uml' → logprob: -7.528488636016846

Token 41: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003778816433623433
    2. '[]' → logprob: -6.12877893447876
    3. ' ' → logprob: -6.75377893447876
    4. '_' → logprob: -8.878778457641602
    5. '[' → logprob: -8.878778457641602
    6. '{}' → logprob: -10.128778457641602
    7. 'lambda' → logprob: -10.253778457641602
    8. ' []' → logprob: -11.628778457641602
    9. 'N' → logprob: -11.878778457641602
    10. '1' → logprob: -12.128778457641602

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013041039928793907
    2. '[]' → logprob: -5.138041019439697
    3. '_S' → logprob: -5.513041019439697
    4. 'lambda' → logprob: -6.763041019439697
    5. '[' → logprob: -7.388041019439697
    6. ' ' → logprob: -8.263041496276855
    7. '[S' → logprob: -8.888041496276855
    8. '(lambda' → logprob: -9.138041496276855
    9. '(' → logprob: -9.263041496276855
    10. '_' → logprob: -9.388041496276855

Token 43: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16968636214733124
    2. ' for' → logprob: -2.5446863174438477
    3. '<|end|>' → logprob: -3.2946863174438477
    4. '
' → logprob: -3.7946863174438477
    5. '\n' → logprob: -4.794686317443848
    6. ':' → logprob: -5.919686317443848
    7. ' 
' → logprob: -6.169686317443848
    8. '_' → logprob: -6.669686317443848
    9. '```' → logprob: -7.419686317443848
    10. ' ' → logprob: -7.919686317443848

Token 44: '[get' (ID: 160135)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002266232157126069
    2. '
' → logprob: -7.0022664070129395
    3. '\n' → logprob: -7.2522664070129395
    4. ' for' → logprob: -7.8772664070129395
    5. '<|end|>' → logprob: -9.377265930175781
    6. 'while' → logprob: -10.127265930175781
    7. 'n' → logprob: -10.377265930175781
    8. '```' → logprob: -10.627265930175781
    9. '\' → logprob: -10.752265930175781
    10. 'i' → logprob: -12.127265930175781

Token 45: 'attr' (ID: 6035)
  Prédit: 'attr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attr' → logprob: -0.0034204511903226376
    2. 's' → logprob: -6.128420352935791
    3. 'ter' → logprob: -8.25342082977295
    4. '.append' → logprob: -8.62842082977295
    5. ']' → logprob: -9.00342082977295
    6. '_' → logprob: -9.25342082977295
    7. 'append' → logprob: -9.37842082977295
    8. 'item' → logprob: -10.12842082977295
    9. 'char' → logprob: -10.25342082977295
    10. '(attr' → logprob: -10.25342082977295

Token 46: '(Z' (ID: 55117)
  Prédit: '(Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Z' → logprob: -0.022313853725790977
    2. '(list' → logprob: -5.147314071655273
    3. '(' → logprob: -5.397314071655273
    4. '(N' → logprob: -5.772314071655273
    5. '(acc' → logprob: -6.272314071655273
    6. '(str' → logprob: -6.772314071655273
    7. '(input' → logprob: -6.897314071655273
    8. '(_' → logprob: -7.022314071655273
    9. '(S' → logprob: -7.147314071655273
    10. '(__' → logprob: -7.522314071655273

Token 47: ','' (ID: 6620)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16606992483139038
    2. ','' → logprob: -2.166069984436035
    3. 'append' → logprob: -3.916069984436035
    4. ',"' → logprob: -4.541069984436035
    5. '(),'' → logprob: -5.541069984436035
    6. '.append' → logprob: -6.291069984436035
    7. ',Z' → logprob: -7.541069984436035
    8. ',k' → logprob: -8.166069984436035
    9. '(),' → logprob: -8.916069984436035
    10. ','.' → logprob: -9.416069984436035

Token 48: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.0019181682728230953
    2. 'extend' → logprob: -6.751918315887451
    3. 'pop' → logprob: -8.251917839050293
    4. ' append' → logprob: -8.376917839050293
    5. 'appen' → logprob: -9.376917839050293
    6. 'clear' → logprob: -9.876917839050293
    7. 'insert' → logprob: -10.376917839050293
    8. 'a' → logprob: -10.626917839050293
    9. '.append' → logprob: -11.501917839050293
    10. 'ap' → logprob: -11.626917839050293

Token 49: '')(' (ID: 65372)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.6764487624168396
    2. ')(_' → logprob: -1.1764488220214844
    3. ')((' → logprob: -3.3014488220214844
    4. '(' → logprob: -3.6764488220214844
    5. '('' → logprob: -3.6764488220214844
    6. '(i' → logprob: -3.8014488220214844
    7. ')' → logprob: -4.301448822021484
    8. '(N' → logprob: -4.426448822021484
    9. '(_' → logprob: -4.426448822021484
    10. '](' → logprob: -4.801448822021484

Token 50: 'acc' (ID: 3717)
  Prédit: '_S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_S' → logprob: -0.1889883577823639
    2. 'int' → logprob: -2.313988447189331
    3. 'i' → logprob: -4.188988208770752
    4. '(int' → logprob: -4.188988208770752
    5. 'S' → logprob: -4.688988208770752
    6. '(' → logprob: -5.063988208770752
    7. '(_' → logprob: -5.188988208770752
    8. '(i' → logprob: -5.313988208770752
    9. '_' → logprob: -6.063988208770752
    10. ')' → logprob: -6.063988208770752

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01570761203765869
    2. '+' → logprob: -4.515707492828369
    3. ')]' → logprob: -5.765707492828369
    4. ' +' → logprob: -8.015707969665527
    5. ' )' → logprob: -8.265707969665527
    6. '-' → logprob: -8.765707969665527
    7. '0' → logprob: -9.015707969665527
    8. ');' → logprob: -9.140707969665527
    9. '),' → logprob: -9.265707969665527
    10. ' ' → logprob: -9.390707969665527

Token 52: ' or' (ID: 503)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.04246669262647629
    2. '(' → logprob: -3.292466640472412
    3. '()]' → logprob: -6.542466640472412
    4. ']' → logprob: -6.667466640472412
    5. '()' → logprob: -7.542466640472412
    6. 'acc' → logprob: -8.04246711730957
    7. ' for' → logprob: -8.29246711730957
    8. 'for' → logprob: -8.66746711730957
    9. ')' → logprob: -9.41746711730957
    10. '((' → logprob: -10.16746711730957

Token 53: ' setattr' (ID: 166554)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.1066356897354126
    2. '(acc' → logprob: -1.4816356897354126
    3. ' acc' → logprob: -1.6066356897354126
    4. ' (' → logprob: -2.981635570526123
    5. ' setattr' → logprob: -3.106635570526123
    6. '_S' → logprob: -3.481635570526123
    7. '(_' → logprob: -4.106635570526123
    8. '_' → logprob: -4.481635570526123
    9. ' ' → logprob: -4.731635570526123
    10. 'exec' → logprob: -4.856635570526123

Token 54: '(gl' (ID: 41099)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.27744796872138977
    2. '(Z' → logprob: -2.0274479389190674
    3. '(' → logprob: -3.2774479389190674
    4. 'acc' → logprob: -3.2774479389190674
    5. '(gl' → logprob: -4.5274481773376465
    6. '('' → logprob: -5.6524481773376465
    7. 'Z' → logprob: -6.2774481773376465
    8. '(_' → logprob: -6.5274481773376465
    9. '(S' → logprob: -6.5274481773376465
    10. 'globals' → logprob: -6.5274481773376465

Token 55: 'obals' (ID: 34107)
  Prédit: 'obals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'obals' → logprob: -0.0008611999801360071
    2. 'obal' → logprob: -7.125861167907715
    3. 'ob' → logprob: -10.500861167907715
    4. 'obs' → logprob: -10.500861167907715
    5. '_globals' → logprob: -13.875861167907715
    6. 'o' → logprob: -14.500861167907715
    7. 'als' → logprob: -16.50086212158203
    8. '_obs' → logprob: -16.75086212158203
    9. '```' → logprob: -17.25086212158203
    10. 'b' → logprob: -17.62586212158203

Token 56: '(),'' (ID: 129053)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.8342906832695007
    2. '(),'' → logprob: -1.0842907428741455
    3. ',' → logprob: -2.0842907428741455
    4. ','' → logprob: -3.3342907428741455
    5. '('',' → logprob: -4.084290504455566
    6. '(' → logprob: -4.334290504455566
    7. '('_' → logprob: -4.709290504455566
    8. '(),' → logprob: -4.834290504455566
    9. ')' → logprob: -5.584290504455566
    10. '('__' → logprob: -5.959290504455566

Token 57: 'acc' (ID: 3717)
  Prédit: ''_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''_' → logprob: -0.5885921716690063
    2. ''S' → logprob: -1.0885921716690063
    3. ''' → logprob: -2.338592052459717
    4. ''acc' → logprob: -5.713592052459717
    5. ''a' → logprob: -6.463592052459717
    6. ''f' → logprob: -6.463592052459717
    7. '"_' → logprob: -7.463592052459717
    8. ''s' → logprob: -7.463592052459717
    9. ''N' → logprob: -7.713592052459717
    10. ''A' → logprob: -7.713592052459717

Token 58: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02225648984313011
    2. ',k' → logprob: -5.147256374359131
    3. ' ,' → logprob: -5.272256374359131
    4. ',+' → logprob: -6.272256374359131
    5. ',Z' → logprob: -6.522256374359131
    6. ',int' → logprob: -6.897256374359131
    7. ','' → logprob: -7.022256374359131
    8. '_,' → logprob: -7.397256374359131
    9. ',i' → logprob: -7.397256374359131
    10. ',N' → logprob: -7.647256374359131

Token 59: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.10917330533266068
    2. '_S' → logprob: -2.85917329788208
    3. ' acc' → logprob: -3.85917329788208
    4. '0' → logprob: -4.35917329788208
    5. '_acc' → logprob: -5.35917329788208
    6. ' ' → logprob: -5.60917329788208
    7. ' _' → logprob: -6.73417329788208
    8. 'S' → logprob: -7.35917329788208
    9. '_s' → logprob: -7.60917329788208
    10. '1' → logprob: -8.359173774719238

Token 60: '+i' (ID: 49691)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.049520477652549744
    2. ' +' → logprob: -3.174520492553711
    3. '+)' → logprob: -5.424520492553711
    4. '+k' → logprob: -7.549520492553711
    5. '+i' → logprob: -8.299520492553711
    6. ')' → logprob: -8.424520492553711
    7. '+(' → logprob: -8.424520492553711
    8. '+=' → logprob: -8.799520492553711
    9. '+x' → logprob: -9.049520492553711
    10. ' )' → logprob: -9.799520492553711

Token 61: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010298519395291805
    2. ' )' → logprob: -4.635298728942871
    3. ' for' → logprob: -8.260298728942871
    4. '')' → logprob: -10.010298728942871
    5. '+' → logprob: -10.135298728942871
    6. '))' → logprob: -10.510298728942871
    7. ' ' → logprob: -10.635298728942871
    8. ',' → logprob: -10.635298728942871
    9. 'for' → logprob: -11.135298728942871
    10. '`)' → logprob: -11.385298728942871

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011905170977115631
    2. ' ' → logprob: -4.511905193328857
    3. ')' → logprob: -7.136905193328857
    4. '0' → logprob: -11.3869047164917
    5. '2' → logprob: -11.6369047164917
    6. ' )' → logprob: -12.0119047164917
    7. '_' → logprob: -12.0744047164917
    8. '  ' → logprob: -12.2619047164917
    9. '+' → logprob: -12.5744047164917
    10. '   ' → logprob: -13.4494047164917

Token 63: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016674461076036096
    2. ' )' → logprob: -6.626667499542236
    3. ',' → logprob: -9.626667022705078
    4. ' ' → logprob: -9.626667022705078
    5. '')' → logprob: -10.001667022705078
    6. '))' → logprob: -10.126667022705078
    7. ' for' → logprob: -10.376667022705078
    8. 'for' → logprob: -10.501667022705078
    9. ');' → logprob: -11.376667022705078
    10. '+' → logprob: -11.876667022705078

Token 64: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.028642844408750534
    2. 'for' → logprob: -3.7786428928375244
    3. ' ' → logprob: -5.403642654418945
    4. ' in' → logprob: -7.653642654418945
    5. ')' → logprob: -9.028642654418945
    6. ' i' → logprob: -9.278642654418945
    7. '  ' → logprob: -9.653642654418945
    8. 'in' → logprob: -10.153642654418945
    9. '   ' → logprob: -10.528642654418945
    10. ',' → logprob: -11.403642654418945

Token 65: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2506582736968994
    2. ' i' → logprob: -1.8756582736968994
    3. 'range' → logprob: -2.8756582736968994
    4. 'i' → logprob: -4.62565803527832
    5. ' ' → logprob: -6.50065803527832
    6. ' in' → logprob: -8.87565803527832
    7. '_' → logprob: -9.25065803527832
    8. ' xrange' → logprob: -9.25065803527832
    9. ' _' → logprob: -9.50065803527832
    10. ' ' → logprob: -9.50065803527832

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008747781976126134
    2. 'in' → logprob: -7.125874996185303
    3. ' range' → logprob: -10.375874519348145
    4. 'range' → logprob: -10.625874519348145
    5. '<|end|>' → logprob: -11.625874519348145
    6. ' ' → logprob: -12.625874519348145
    7. ' xrange' → logprob: -13.500874519348145
    8. '(range' → logprob: -14.875874519348145
    9. ']' → logprob: -15.625874519348145
    10. ')' → logprob: -15.625874519348145

Token 67: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2014397531747818
    2. 'range' → logprob: -1.7014397382736206
    3. '(range' → logprob: -11.45143985748291
    4. ' xrange' → logprob: -11.95143985748291
    5. '	range' → logprob: -12.57643985748291
    6. ' ' → logprob: -12.57643985748291
    7. '  ' → logprob: -14.45143985748291
    8. ')' → logprob: -14.70143985748291
    9. ' ' → logprob: -14.82643985748291
    10. ' ran' → logprob: -15.82643985748291

Token 68: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0031920899637043476
    2. '(' → logprob: -5.753191947937012
    3. '(n' → logprob: -11.628191947937012
    4. ' (' → logprob: -12.878191947937012
    5. 'N' → logprob: -13.628191947937012
    6. '(
' → logprob: -13.753191947937012
    7. '(S' → logprob: -16.003192901611328
    8. '(len' → logprob: -16.378192901611328
    9. '(

' → logprob: -16.378192901611328
    10. '()' → logprob: -17.003192901611328

Token 69: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00021188464597798884
    2. ')' → logprob: -9.125211715698242
    3. ')])' → logprob: -10.125211715698242
    4. ']' → logprob: -10.625211715698242
    5. ' )' → logprob: -11.125211715698242
    6. '+' → logprob: -12.000211715698242
    7. '])]' → logprob: -12.125211715698242
    8. ')]
' → logprob: -12.500211715698242
    9. '))' → logprob: -12.875211715698242
    10. '])' → logprob: -13.250211715698242

Token 70: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.035420019179582596
    2. ' ' → logprob: -3.4104199409484863
    3. '2' → logprob: -7.285419940948486
    4. '0' → logprob: -7.535419940948486
    5. '10' → logprob: -8.285420417785645
    6. ')' → logprob: -9.160420417785645
    7. '5' → logprob: -10.035420417785645
    8. '3' → logprob: -10.160420417785645
    9. '20' → logprob: -10.785420417785645
    10. '4' → logprob: -11.410420417785645

Token 71: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0018411792116239667
    2. ')' → logprob: -6.626841068267822
    3. ')])' → logprob: -8.00184154510498
    4. ' )' → logprob: -8.87684154510498
    5. '))' → logprob: -11.37684154510498
    6. ']' → logprob: -12.25184154510498
    7. '])]' → logprob: -12.37684154510498
    8. ')],' → logprob: -12.50184154510498
    9. '])' → logprob: -12.75184154510498
    10. '+' → logprob: -12.87684154510498

Token 72: 'if' (ID: 366)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.737323522567749
    2. ')' → logprob: -1.362323522567749
    3. '<|end|>' → logprob: -1.612323522567749
    4. '[' → logprob: -3.987323522567749
    5. ')]' → logprob: -4.487323760986328
    6. '
' → logprob: -4.612323760986328
    7. ' ' → logprob: -5.112323760986328
    8. '(' → logprob: -5.362323760986328
    9. '#' → logprob: -5.737323760986328
    10. '+' → logprob: -5.737323760986328

Token 73: ' N' (ID: 478)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.20343169569969177
    2. ' N' → logprob: -2.5784316062927246
    3. ' Z' → logprob: -3.8284316062927246
    4. 'acc' → logprob: -3.9534316062927246
    5. ' _' → logprob: -4.203431606292725
    6. ' S' → logprob: -4.328431606292725
    7. 'N' → logprob: -4.328431606292725
    8. '_S' → logprob: -5.203431606292725
    9. '_' → logprob: -5.453431606292725
    10. 'Z' → logprob: -5.578431606292725

Token 74: ' not' (ID: 625)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5136109590530396
    2. '>' → logprob: -1.7636109590530396
    3. ' ==' → logprob: -2.88861083984375
    4. '%' → logprob: -3.01361083984375
    5. '==' → logprob: -3.51361083984375
    6. ' >=' → logprob: -3.63861083984375
    7. ' %' → logprob: -3.88861083984375
    8. ' <' → logprob: -4.38861083984375
    9. '>=' → logprob: -4.76361083984375
    10. ' ' → logprob: -5.01361083984375

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05783980339765549
    2. 'in' → logprob: -2.932839870452881
    3. '<|end|>' → logprob: -6.307839870452881
    4. ' ' → logprob: -7.307839870452881
    5. 'Z' → logprob: -9.432839393615723
    6. ' Z' → logprob: -9.682839393615723
    7. '0' → logprob: -9.807839393615723
    8. ')' → logprob: -9.932839393615723
    9. '_' → logprob: -9.932839393615723
    10. '.' → logprob: -10.057839393615723

Token 76: ' Z' (ID: 1489)
  Prédit: ' Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Z' → logprob: -0.2823387086391449
    2. 'Z' → logprob: -1.4073387384414673
    3. ' ' → logprob: -8.282339096069336
    4. '[' → logprob: -8.282339096069336
    5. '_Z' → logprob: -9.157339096069336
    6. ' range' → logprob: -9.157339096069336
    7. ' [' → logprob: -9.282339096069336
    8. '	Z' → logprob: -10.032339096069336
    9. ' acc' → logprob: -10.157339096069336
    10. 'acc' → logprob: -10.282339096069336

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009775519138202071
    2. ':
' → logprob: -7.500977516174316
    3. ' :' → logprob: -8.000977516174316
    4. '[' → logprob: -10.625977516174316
    5. ' and' → logprob: -11.125977516174316
    6. '):' → logprob: -11.875977516174316
    7. ':return' → logprob: -11.875977516174316
    8. ':def' → logprob: -12.125977516174316
    9. ' or' → logprob: -12.375977516174316
    10. '.' → logprob: -12.625977516174316

Token 78: '   ' (ID: 271)
  Prédit: ' Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Z' → logprob: -0.2319559007883072
    2. '   ' → logprob: -2.4819560050964355
    3. ' print' → logprob: -3.1069560050964355
    4. ' 
' → logprob: -3.8569560050964355
    5. '    
' → logprob: -4.1069560050964355
    6. 'Z' → logprob: -4.7319560050964355
    7. ' pass' → logprob: -5.1069560050964355
    8. ' True' → logprob: -5.4819560050964355
    9. '    ' → logprob: -5.7319560050964355
    10. ' ' → logprob: -6.1069560050964355

Token 79: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.8487929105758667
    2. ' Z' → logprob: -1.0987929105758667
    3. ' pass' → logprob: -1.7237929105758667
    4. 'print' (adapté à ' print') → logprob: -3.9737930297851562
    5. 'Z' → logprob: -4.473793029785156
    6. '   ' → logprob: -5.098793029785156
    7. '    ' → logprob: -5.348793029785156
    8. ' _' → logprob: -5.348793029785156
    9. ' None' → logprob: -6.723793029785156
    10. ' 
' → logprob: -6.786293029785156

Token 80: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49962058663368225
    2. '('' → logprob: -1.4996205568313599
    3. '("' → logprob: -2.4996206760406494
    4. '(N' → logprob: -3.4996206760406494
    5. '(Z' → logprob: -3.6246206760406494
    6. '()' → logprob: -4.24962043762207
    7. '(False' → logprob: -5.37462043762207
    8. '(None' → logprob: -5.49962043762207
    9. '("")' → logprob: -6.12462043762207
    10. '("("' → logprob: -6.62462043762207

Token 81: 'No' (ID: 3160)
  Prédit: 'NO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.6775527596473694
    2. 'No' → logprob: -1.5525527000427246
    3. 'N' → logprob: -1.9275527000427246
    4. '-' → logprob: -3.9275527000427246
    5. 'Not' → logprob: -4.427552700042725
    6. '0' → logprob: -4.552552700042725
    7. 'YES' → logprob: -4.552552700042725
    8. 'False' → logprob: -4.927552700042725
    9. 'Impossible' → logprob: -4.927552700042725
    10. 'None' → logprob: -5.302552700042725

Token 82: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.3234821856021881
    2. ')' → logprob: -1.4484821557998657
    3. 't' → logprob: -4.698482036590576
    4. ' solution' → logprob: -4.698482036590576
    5. 'pe' → logprob: -5.198482036590576
    6. ' ')' → logprob: -5.948482036590576
    7. '!' → logprob: -6.698482036590576
    8. ' such' → logprob: -6.698482036590576
    9. '")' → logprob: -6.948482036590576
    10. ' data' → logprob: -6.948482036590576

Token 83: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.01256981398910284
    2. ' else' → logprob: -4.637569904327393
    3. 'elif' → logprob: -6.512569904327393
    4. '<|end|>' → logprob: -7.887569904327393
    5. 'e' → logprob: -8.012569427490234
    6. '
' → logprob: -8.512569427490234
    7. '```' → logprob: -8.762569427490234
    8. '[' → logprob: -9.637569427490234
    9. ')' → logprob: -9.762569427490234
    10. ':' → logprob: -10.762569427490234

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002062711166217923
    2. ':
' → logprob: -6.627062797546387
    3. ' :' → logprob: -7.502062797546387
    4. '   ' → logprob: -8.752062797546387
    5. ',' → logprob: -12.127062797546387
    6. ' :
' → logprob: -12.252062797546387
    7. ' print' → logprob: -12.627062797546387
    8. 'print' → logprob: -13.502062797546387
    9. '    ' → logprob: -13.752062797546387
    10. ':

' → logprob: -13.752062797546387

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00479204161092639
    2. ' print' → logprob: -5.879792213439941
    3. '    
' → logprob: -7.129792213439941
    4. 'print' → logprob: -7.379792213439941
    5. ' ' → logprob: -8.379792213439941
    6. '    ' → logprob: -9.254792213439941
    7. ' 
' → logprob: -10.379792213439941
    8. '       ' → logprob: -10.629792213439941
    9. '  ' → logprob: -10.754792213439941
    10. '<|end|>' → logprob: -11.004792213439941

Token 86: ' K' (ID: 658)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39813166856765747
    2. ' print' → logprob: -1.2731316089630127
    3. 'print' → logprob: -3.5231316089630127
    4. '    ' → logprob: -5.273131847381592
    5. ' ' → logprob: -5.773131847381592
    6. ' 
' → logprob: -6.023131847381592
    7. '    
' → logprob: -6.523131847381592
    8. ' for' → logprob: -7.273131847381592
    9. '[' → logprob: -7.398131847381592
    10. ' if' → logprob: -7.398131847381592

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11466364562511444
    2. '=' → logprob: -2.239663600921631
    3. ' ' → logprob: -7.489663600921631
    4. 'ex' → logprob: -7.614663600921631
    5. '_' → logprob: -8.364664077758789
    6. '=int' → logprob: -9.114664077758789
    7. ')' → logprob: -9.739664077758789
    8. ',' → logprob: -10.364664077758789
    9. '   ' → logprob: -10.364664077758789
    10. ' ==' → logprob: -10.677164077758789

Token 88: ' Z' (ID: 1489)
  Prédit: ' Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Z' → logprob: -0.5479317903518677
    2. 'Z' → logprob: -1.4229317903518677
    3. '_S' → logprob: -2.422931671142578
    4. ' N' → logprob: -4.047931671142578
    5. ' S' → logprob: -4.172931671142578
    6. ' _' → logprob: -4.172931671142578
    7. 'S' → logprob: -4.672931671142578
    8. '_Z' → logprob: -5.047931671142578
    9. ' ' → logprob: -5.172931671142578
    10. 'N' → logprob: -5.172931671142578

Token 89: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.10175170004367828
    2. '[N' → logprob: -2.4767518043518066
    3. '[' → logprob: -4.601751804351807
    4. '[-' → logprob: -6.601751804351807
    5. '.' → logprob: -7.601751804351807
    6. 'index' → logprob: -8.226751327514648
    7. '.find' → logprob: -9.101751327514648
    8. '.count' → logprob: -9.726751327514648
    9. 'N' → logprob: -10.101751327514648
    10. '.Index' → logprob: -10.226751327514648

Token 90: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5764428377151489
    2. '(' → logprob: -0.8264428377151489
    3. '(
' → logprob: -7.826442718505859
    4. '(

' → logprob: -10.20144271850586
    5. '('' → logprob: -10.45144271850586
    6. ' (' → logprob: -11.57644271850586
    7. '(n' → logprob: -11.82644271850586
    8. 'N' → logprob: -12.20144271850586
    9. '((' → logprob: -12.32644271850586
    10. '(K' → logprob: -12.95144271850586

Token 91: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17569094896316528
    2. ')
' → logprob: -1.9256908893585205
    3. ')+' → logprob: -4.3006911277771
    4. '+' → logprob: -6.9256911277771
    5. ')
' → logprob: -7.3006911277771
    6. ')

' → logprob: -10.550690650939941
    7. ' )' → logprob: -10.550690650939941
    8. ' )
' → logprob: -10.800690650939941
    9. ')`
' → logprob: -11.175690650939941
    10. ')`' → logprob: -12.300690650939941

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002341992687433958
    2. ' ' → logprob: -6.502342224121094
    3. '2' → logprob: -7.127342224121094
    4. '3' → logprob: -11.127342224121094
    5. '7' → logprob: -12.377342224121094
    6. '0' → logprob: -12.502342224121094
    7. '4' → logprob: -13.189842224121094
    8. '  ' → logprob: -13.564842224121094
    9. '-' → logprob: -13.814842224121094
    10. '<|end|>' → logprob: -13.877342224121094

Token 93: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32172656059265137
    2. ':' → logprob: -2.3217265605926514
    3. '<|end|>' → logprob: -2.4467265605926514
    4. '
' → logprob: -3.0717265605926514
    5. 'print' → logprob: -4.0717267990112305
    6. '(' → logprob: -5.5717267990112305
    7. ')
' → logprob: -5.8217267990112305
    8. '   ' → logprob: -5.9467267990112305
    9. ' ' → logprob: -6.0717267990112305
    10. '[' → logprob: -6.0717267990112305

Token 94: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5293883085250854
    2. '
' → logprob: -1.7793883085250854
    3. 'print' → logprob: -1.9043883085250854
    4. ')
' → logprob: -3.279388427734375
    5. '<|end|>' → logprob: -4.529388427734375
    6. ' print' → logprob: -5.029388427734375
    7. '   ' → logprob: -5.154388427734375
    8. ' ' → logprob: -5.279388427734375
    9. ':' → logprob: -5.279388427734375
    10. '#' → logprob: -5.529388427734375

Token 95: ' X' (ID: 2127)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06225212663412094
    2. 'for' → logprob: -3.8122520446777344
    3. 'if' → logprob: -4.562252044677734
    4. ' print' → logprob: -5.437252044677734
    5. 'while' → logprob: -6.062252044677734
    6. 'P' → logprob: -6.312252044677734
    7. 'p' → logprob: -6.312252044677734
    8. 'M' → logprob: -6.562252044677734
    9. 'Q' → logprob: -6.687252044677734
    10. '   ' → logprob: -6.937252044677734

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08985699713230133
    2. '=' → logprob: -2.4648571014404297
    3. ',' → logprob: -7.46485710144043
    4. ',K' → logprob: -9.83985710144043
    5. '_' → logprob: -10.21485710144043
    6. ',k' → logprob: -10.58985710144043
    7. ' ,' → logprob: -10.71485710144043
    8. ' ' → logprob: -10.71485710144043
    9. '[' → logprob: -11.08985710144043
    10. '.' → logprob: -11.08985710144043

Token 97: ' [[]' (ID: 182908)
  Prédit: '_S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_S' → logprob: -1.4072571992874146
    2. '[S' → logprob: -1.5322571992874146
    3. '[' → logprob: -1.7822571992874146
    4. '[K' → logprob: -2.907257080078125
    5. '[]' → logprob: -3.157257080078125
    6. ' [' → logprob: -3.157257080078125
    7. 'list' → logprob: -3.157257080078125
    8. '[_' → logprob: -3.657257080078125
    9. 'K' → logprob: -3.782257080078125
    10. 'Z' → logprob: -4.282257080078125

Token 98: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16064387559890747
    2. ' for' → logprob: -1.9106438159942627
    3. ']' → logprob: -8.285643577575684
    4. ')' → logprob: -8.910643577575684
    5. '
' → logprob: -11.535643577575684
    6. ',' → logprob: -12.035643577575684
    7. ']
' → logprob: -12.535643577575684
    8. ')]' → logprob: -12.660643577575684
    9. ' ' → logprob: -13.410643577575684
    10. '	for' → logprob: -13.410643577575684

Token 99: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.019084276631474495
    2. ' range' → logprob: -4.269084453582764
    3. 'range' → logprob: -5.894084453582764
    4. ' _' → logprob: -6.144084453582764
    5. '_=' → logprob: -13.269083976745605
    6. '_range' → logprob: -13.394083976745605
    7. ' in' → logprob: -13.394083976745605
    8. 'i' → logprob: -14.519083976745605
    9. '__' → logprob: -14.644083976745605
    10. ' ' → logprob: -14.644083976745605

Token 100: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018284793943166733
    2. ' range' → logprob: -4.018284797668457
    3. '_' → logprob: -9.018284797668457
    4. 'in' → logprob: -12.018284797668457
    5. ' in' → logprob: -12.268284797668457
    6. 'x' → logprob: -14.393284797668457
    7. 'X' → logprob: -14.518284797668457
    8. 'Z' → logprob: -14.768284797668457
    9. '(range' → logprob: -14.768284797668457
    10. '_range' → logprob: -15.018284797668457

Token 101: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889761030673981
    2. ' range' → logprob: -2.578897714614868
    3. '(range' → logprob: -11.828897476196289
    4. '	range' → logprob: -16.20389747619629
    5. 'rang' → logprob: -16.82889747619629
    6. 'Range' → logprob: -16.82889747619629
    7. 'Z' → logprob: -16.95389747619629
    8. ' ' → logprob: -16.95389747619629
    9. '[' → logprob: -16.95389747619629
    10. ' xrange' → logprob: -17.20389747619629

Token 102: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.0068097529001533985
    2. '(' → logprob: -5.631809711456299
    3. 'K' → logprob: -6.256809711456299
    4. '(N' → logprob: -6.756809711456299
    5. '(k' → logprob: -10.131810188293457
    6. '((' → logprob: -10.381810188293457
    7. ' (' → logprob: -10.881810188293457
    8. ' K' → logprob: -11.756810188293457
    9. 'N' → logprob: -12.631810188293457
    10. '(int' → logprob: -13.131810188293457

Token 103: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6936962604522705
    2. ')]' → logprob: -0.6936962604522705
    3. ')' → logprob: -7.818696022033691
    4. '])' → logprob: -9.443696022033691
    5. ' ]' → logprob: -10.443696022033691
    6. '])]' → logprob: -11.193696022033691
    7. ']
' → logprob: -12.068696022033691
    8. '+' → logprob: -12.318696022033691
    9. '}]' → logprob: -13.193696022033691
    10. ')])' → logprob: -13.193696022033691

Token 104: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05913807451725006
    2. ' for' → logprob: -3.434138059616089
    3. 'i' → logprob: -4.184138298034668
    4. '<|end|>' → logprob: -6.059138298034668
    5. '   ' → logprob: -6.434138298034668
    6. ')' → logprob: -6.684138298034668
    7. '[' → logprob: -6.809138298034668
    8. 'print' → logprob: -7.059138298034668
    9. ']' → logprob: -7.184138298034668
    10. '[i' → logprob: -8.059138298034668

Token 105: ' C' (ID: 363)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06596800684928894
    2. 'i' → logprob: -2.9409680366516113
    3. ' for' → logprob: -4.815968036651611
    4. '_' → logprob: -7.940968036651611
    5. 'x' → logprob: -8.065967559814453
    6. 'print' → logprob: -8.190967559814453
    7. 'j' → logprob: -8.315967559814453
    8. '   ' → logprob: -8.440967559814453
    9. 'p' → logprob: -8.565967559814453
    10. 'k' → logprob: -8.690967559814453

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23484021425247192
    2. '=' → logprob: -1.6098401546478271
    3. 'ount' → logprob: -5.859840393066406
    4. '=[]' → logprob: -5.984840393066406
    5. '=int' → logprob: -7.359840393066406
    6. 'ont' → logprob: -7.359840393066406
    7. 'for' → logprob: -7.484840393066406
    8. 'on' → logprob: -7.984840393066406
    9. '_' → logprob: -8.109840393066406
    10. ' ' → logprob: -8.109840393066406

Token 107: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29151472449302673
    2. '0' → logprob: -2.1665146350860596
    3. ' [' → logprob: -2.9165146350860596
    4. '[N' → logprob: -3.2915146350860596
    5. 'N' → logprob: -4.916514873504639
    6. '[]' → logprob: -5.041514873504639
    7. '[S' → logprob: -5.041514873504639
    8. '[K' → logprob: -5.041514873504639
    9. '[[' → logprob: -5.791514873504639
    10. ' ' → logprob: -6.041514873504639

Token 108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01085975393652916
    2. 'False' → logprob: -6.385859966278076
    3. '1' → logprob: -6.510859966278076
    4. 'N' → logprob: -6.760859966278076
    5. '[' → logprob: -6.760859966278076
    6. 'int' → logprob: -7.135859966278076
    7. '_' → logprob: -7.385859966278076
    8. '[]' → logprob: -7.385859966278076
    9. '-' → logprob: -7.510859966278076
    10. 'i' → logprob: -7.510859966278076

Token 109: ']
' (ID: 1592)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.6012805700302124
    2. ']*(' → logprob: -0.8512805700302124
    3. ']' → logprob: -3.726280689239502
    4. ' for' → logprob: -7.476280689239502
    5. 'for' → logprob: -7.976280689239502
    6. ']+' → logprob: -11.101280212402344
    7. ' ]' → logprob: -11.351280212402344
    8. '*K' → logprob: -13.226280212402344
    9. '*(' → logprob: -15.101280212402344
    10. '	for' → logprob: -15.226280212402344

Token 110: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46458664536476135
    2. ' for' → logprob: -1.964586615562439
    3. '<|end|>' → logprob: -1.964586615562439
    4. '   ' → logprob: -3.0895867347717285
    5. '+' → logprob: -3.7145867347717285
    6. ')' → logprob: -4.4645867347717285
    7. ']' → logprob: -5.5895867347717285
    8. ' +' → logprob: -7.3395867347717285
    9. '[' → logprob: -7.3395867347717285
    10. ' ' → logprob: -7.4645867347717285

Token 111: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07145091891288757
    2. ' for' → logprob: -2.94645094871521
    3. 'i' → logprob: -4.696450710296631
    4. '_' → logprob: -6.446450710296631
    5. '   ' → logprob: -6.696450710296631
    6. 'c' → logprob: -7.071450710296631
    7. 'while' → logprob: -7.571450710296631
    8. 'x' → logprob: -7.946450710296631
    9. 'idx' → logprob: -8.071451187133789
    10. 'p' → logprob: -8.321451187133789

Token 112: ' F' (ID: 454)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.19284610450267792
    2. ' f' → logprob: -2.1928460597991943
    3. ' solve' → logprob: -3.5678460597991943
    4. 'dfs' → logprob: -5.067846298217773
    5. ' check' → logprob: -5.317846298217773
    6. ' _' → logprob: -5.317846298217773
    7. ' DFS' → logprob: -5.692846298217773
    8. ' ' → logprob: -6.192846298217773
    9. ' calc' → logprob: -6.817846298217773
    10. ' back' → logprob: -6.817846298217773

Token 113: '():
' (ID: 8595)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7778105139732361
    2. '(x' → logprob: -1.5278105735778809
    3. '(k' → logprob: -1.7778105735778809
    4. '(i' → logprob: -2.902810573577881
    5. '(a' → logprob: -3.527810573577881
    6. '(' → logprob: -3.902810573577881
    7. '(p' → logprob: -4.277810573577881
    8. '(s' → logprob: -4.527810573577881
    9. '(m' → logprob: -5.152810573577881
    10. '(t' → logprob: -5.152810573577881

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9817525744438171
    2. '    ' → logprob: -1.106752634048462
    3. ' ' → logprob: -1.856752634048462
    4. '<|end|>' → logprob: -2.481752634048462
    5. '   ' → logprob: -4.231752395629883
    6. '        ' → logprob: -4.606752395629883
    7. ' for' → logprob: -4.981752395629883
    8. ' pass' → logprob: -5.231752395629883
    9. '	' → logprob: -5.731752395629883
    10. '	   ' → logprob: -6.231752395629883

Token 115: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4488059282302856
    2. ' pass' → logprob: -1.4488059282302856
    3. ' for' → logprob: -1.5738059282302856
    4. 'for' (adapté à ' for') → logprob: -2.323805809020996
    5. 'global' → logprob: -3.198805809020996
    6. '   ' → logprob: -3.448805809020996
    7. 'pass' → logprob: -3.448805809020996
    8. ' global' → logprob: -3.823805809020996
    9. ' i' → logprob: -4.323805809020996
    10. '        ' → logprob: -4.448805809020996

Token 116: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2321910709142685
    2. 'i' → logprob: -2.3571910858154297
    3. ' j' → logprob: -3.2321910858154297
    4. ' x' → logprob: -3.7321910858154297
    5. ' k' → logprob: -3.8571910858154297
    6. 'k' → logprob: -4.98219108581543
    7. 'j' → logprob: -5.23219108581543
    8. 'x' → logprob: -5.23219108581543
    9. ' _' → logprob: -5.73219108581543
    10. '_' → logprob: -6.10719108581543

Token 117: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014490538276731968
    2. 'in' → logprob: -4.264490604400635
    3. ',' → logprob: -8.514490127563477
    4. ' ' → logprob: -9.514490127563477
    5. '  ' → logprob: -11.264490127563477
    6. '   ' → logprob: -11.514490127563477
    7. '_' → logprob: -11.639490127563477
    8. 'range' → logprob: -12.514490127563477
    9. ' ,' → logprob: -12.764490127563477
    10. '	in' → logprob: -13.264490127563477

Token 118: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05491986125707626
    2. ' range' → logprob: -2.929919958114624
    3. 'X' → logprob: -11.054920196533203
    4. ' ' → logprob: -12.304920196533203
    5. 'Z' → logprob: -12.429920196533203
    6. '(range' → logprob: -12.554920196533203
    7. '  ' → logprob: -13.554920196533203
    8. ' xrange' → logprob: -13.554920196533203
    9. '	range' → logprob: -13.804920196533203
    10. '   ' → logprob: -13.804920196533203

Token 119: '(K' (ID: 28797)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6469984650611877
    2. '(K' → logprob: -0.7719984650611877
    3. '(N' → logprob: -4.646998405456543
    4. 'K' → logprob: -6.646998405456543
    5. '(len' → logprob: -6.646998405456543
    6. '1' → logprob: -6.646998405456543
    7. '(C' → logprob: -7.896998405456543
    8. '(acc' → logprob: -8.896998405456543
    9. '(X' → logprob: -10.021998405456543
    10. '(k' → logprob: -10.021998405456543

Token 120: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5195702910423279
    2. '):
' → logprob: -1.1445703506469727
    3. '-' → logprob: -2.5195703506469727
    4. '+' → logprob: -5.644570350646973
    5. ' -' → logprob: -6.519570350646973
    6. ')' → logprob: -7.769570350646973
    7. ' ):' → logprob: -7.769570350646973
    8. '   ' → logprob: -8.769570350646973
    9. ' ):
' → logprob: -8.894570350646973
    10. '):
' → logprob: -9.394570350646973

Token 121: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4873591661453247
    2. '        ' → logprob: -2.112359046936035
    3. '	       ' → logprob: -2.112359046936035
    4. '       ' → logprob: -2.487359046936035
    5. '<|end|>' → logprob: -3.862359046936035
    6. '            ' → logprob: -4.862359046936035
    7. ' ' → logprob: -5.112359046936035
    8. '   ' → logprob: -5.737359046936035
    9. '    ' → logprob: -5.737359046936035
    10. '    	' → logprob: -6.112359046936035

Token 122: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.41463661193847656
    2. '       ' → logprob: -1.9146366119384766
    3. 'for' (adapté à ' for') → logprob: -2.5396366119384766
    4. ' if' → logprob: -3.0396366119384766
    5. ' yield' → logprob: -4.164636611938477
    6. '        ' → logprob: -4.414636611938477
    7. 'if' → logprob: -4.789636611938477
    8. ' C' → logprob: -5.414636611938477
    9. 'yield' → logprob: -5.414636611938477
    10. 'C' → logprob: -5.914636611938477

Token 123: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.43773674964904785
    2. ' j' → logprob: -1.0627367496490479
    3. 'range' → logprob: -5.562736511230469
    4. ' range' → logprob: -6.062736511230469
    5. 'x' → logprob: -7.437736511230469
    6. 'k' → logprob: -7.437736511230469
    7. 'X' → logprob: -7.937736511230469
    8. '_j' → logprob: -8.312736511230469
    9. '_' → logprob: -8.687736511230469
    10. ' x' → logprob: -8.812736511230469

Token 124: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016157887876033783
    2. 'in' → logprob: -4.141158103942871
    3. '(' → logprob: -10.141158103942871
    4. ' ' → logprob: -10.516158103942871
    5. ' i' → logprob: -11.266158103942871
    6. '	in' → logprob: -11.891158103942871
    7. ',' → logprob: -12.266158103942871
    8. '(range' → logprob: -12.516158103942871
    9. 'range' → logprob: -12.641158103942871
    10. '   ' → logprob: -12.766158103942871

Token 125: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12714123725891113
    2. ' range' → logprob: -2.127141237258911
    3. '(range' → logprob: -9.127140998840332
    4. 'X' → logprob: -10.377140998840332
    5. 'Z' → logprob: -10.752140998840332
    6. 'i' → logprob: -11.877140998840332
    7. 'C' → logprob: -11.877140998840332
    8. 'K' → logprob: -12.252140998840332
    9. ' Z' → logprob: -12.502140998840332
    10. ' X' → logprob: -12.502140998840332

Token 126: '(i' (ID: 3649)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.24835769832134247
    2. '(range' → logprob: -2.2483577728271484
    3. '(i' → logprob: -2.7483577728271484
    4. ' range' → logprob: -4.123357772827148
    5. '(X' → logprob: -4.248357772827148
    6. 'range' → logprob: -4.623357772827148
    7. '(' → logprob: -5.373357772827148
    8. '(N' → logprob: -5.748357772827148
    9. '(C' → logprob: -7.748357772827148
    10. '(Z' → logprob: -7.873357772827148

Token 127: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011699944734573364
    2. ',K' → logprob: -5.13670015335083
    3. ' +' → logprob: -5.63670015335083
    4. ',' → logprob: -6.38670015335083
    5. ',N' → logprob: -8.261699676513672
    6. '):' → logprob: -8.636699676513672
    7. 'K' → logprob: -11.261699676513672
    8. ' ,' → logprob: -11.386699676513672
    9. '):
' → logprob: -11.636699676513672
    10. '   ' → logprob: -12.136699676513672

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023047674039844424
    2. ' ' → logprob: -9.00023078918457
    3. 'K' → logprob: -9.25023078918457
    4. ' K' → logprob: -12.87523078918457
    5. 'N' → logprob: -13.00023078918457
    6. '2' → logprob: -13.75023078918457
    7. '
' → logprob: -14.25023078918457
    8. '```' → logprob: -14.37523078918457
    9. ')' → logprob: -14.56273078918457
    10. '   ' → logprob: -14.81273078918457

Token 129: ',K' (ID: 107147)
  Prédit: ',K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',K' → logprob: -0.08969462662935257
    2. ',' → logprob: -2.4646947383880615
    3. '):' → logprob: -7.839694499969482
    4. ' ,' → logprob: -8.83969497680664
    5. ',k' → logprob: -9.08969497680664
    6. 'K' → logprob: -9.96469497680664
    7. ',N' → logprob: -10.33969497680664
    8. '):
' → logprob: -11.83969497680664
    9. '(),' → logprob: -13.21469497680664
    10. ',Q' → logprob: -13.33969497680664

Token 130: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004132661037147045
    2. '):
' → logprob: -5.5041327476501465
    3. ':' → logprob: -10.629132270812988
    4. '+' → logprob: -11.754132270812988
    5. '):
' → logprob: -12.379132270812988
    6. ']:' → logprob: -12.629132270812988
    7. ')' → logprob: -12.754132270812988
    8. '):

' → logprob: -12.879132270812988
    9. '       ' → logprob: -13.129132270812988
    10. '               ' → logprob: -13.629132270812988

Token 131: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017805831506848335
    2. '<|end|>' → logprob: -4.267806053161621
    3. ' ' → logprob: -6.267806053161621
    4. '                ' → logprob: -6.767806053161621
    5. '            ' → logprob: -8.892806053161621
    6. '                
' → logprob: -9.392806053161621
    7. '           ' → logprob: -9.517806053161621
    8. '              ' → logprob: -9.767806053161621
    9. ')' → logprob: -10.017806053161621
    10. ',' → logprob: -10.642806053161621

Token 132: ' X' (ID: 2127)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20366346836090088
    2. ' if' → logprob: -1.9536634683609009
    3. 'if' → logprob: -5.203663349151611
    4. ' X' → logprob: -5.328663349151611
    5. '                       ' → logprob: -5.453663349151611
    6. '                    ' → logprob: -5.578663349151611
    7. '<|end|>' → logprob: -5.703663349151611
    8. '               ' → logprob: -5.828663349151611
    9. ' C' → logprob: -5.953663349151611
    10. ' ' → logprob: -5.953663349151611

Token 133: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0019347082125023007
    2. '[j' → logprob: -6.75193452835083
    3. '][' → logprob: -7.37693452835083
    4. '[' → logprob: -9.501935005187988
    5. '[I' → logprob: -9.751935005187988
    6. ')[' → logprob: -13.751935005187988
    7. '[
' → logprob: -14.376935005187988
    8. ' [' → logprob: -14.376935005187988
    9. 'i' → logprob: -14.626935005187988
    10. '[s' → logprob: -15.251935005187988

Token 134: ']+' (ID: 15344)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.030469844117760658
    2. ']' → logprob: -4.15546989440918
    3. '].' → logprob: -4.28046989440918
    4. ']+=' → logprob: -8.53046989440918
    5. '[j' → logprob: -9.28046989440918
    6. '[i' → logprob: -10.03046989440918
    7. ']][' → logprob: -10.53046989440918
    8. ']+' → logprob: -10.65546989440918
    9. '[' → logprob: -11.15546989440918
    10. '<|end|>' → logprob: -11.15546989440918

Token 135: '=[' (ID: 13370)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.4076841175556183
    2. '=' → logprob: -1.282684087753296
    3. ' X' → logprob: -3.657684087753296
    4. '=X' → logprob: -3.782684087753296
    5. '[' → logprob: -5.282684326171875
    6. '=[' → logprob: -5.782684326171875
    7. 'Z' → logprob: -9.157684326171875
    8. '[X' → logprob: -9.282684326171875
    9. ' =' → logprob: -9.532684326171875
    10. '(X' → logprob: -9.657684326171875

Token 136: 'C' (ID: 34)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -1.078188180923462
    2. '[' → logprob: -1.828188180923462
    3. 'X' → logprob: -1.953188180923462
    4. '[k' → logprob: -2.578188180923462
    5. '[i' → logprob: -2.953188180923462
    6. 'C' → logprob: -3.078188180923462
    7. 'k' → logprob: -3.203188180923462
    8. '[C' → logprob: -3.203188180923462
    9. '[X' → logprob: -4.078187942504883
    10. ' [' → logprob: -4.328187942504883

Token 137: '[' (ID: 58)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.13479338586330414
    2. '[-' → logprob: -2.134793281555176
    3. '[i' → logprob: -4.884793281555176
    4. '[' → logprob: -9.009793281555176
    5. 'j' → logprob: -10.259793281555176
    6. ']' → logprob: -11.384793281555176
    7. '+' → logprob: -11.884793281555176
    8. '[C' → logprob: -11.947293281555176
    9. '+j' → logprob: -12.072293281555176
    10. '[k' → logprob: -12.072293281555176

Token 138: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7600477337837219
    2. 'j' → logprob: -1.0100476741790771
    3. 'i' → logprob: -2.135047674179077
    4. '-i' → logprob: -4.010047912597656
    5. '-j' → logprob: -4.135047912597656
    6. '[-' → logprob: -5.135047912597656
    7. ' -' → logprob: -6.135047912597656
    8. '0' → logprob: -6.260047912597656
    9. '[j' → logprob: -6.260047912597656
    10. ' j' → logprob: -7.385047912597656

Token 139: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.8376967906951904
    2. ']' → logprob: -1.8376967906951904
    3. ']]' → logprob: -1.8376967906951904
    4. '+j' → logprob: -2.2126967906951904
    5. '+' → logprob: -2.9626967906951904
    6. ']*' → logprob: -3.4626967906951904
    7. '+i' → logprob: -3.9626967906951904
    8. '-' → logprob: -5.4626970291137695
    9. '-j' → logprob: -5.4626970291137695
    10. ']-' → logprob: -5.5876970291137695

Token 140: '1' (ID: 16)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.7627946734428406
    2. '1' → logprob: -1.0127947330474854
    3. 'j' → logprob: -2.2627947330474854
    4. 'X' → logprob: -3.6377947330474854
    5. 'i' → logprob: -3.8877947330474854
    6. 'N' → logprob: -5.137794494628906
    7. ' Z' → logprob: -5.762794494628906
    8. 'K' → logprob: -6.512794494628906
    9. ' ' → logprob: -7.137794494628906
    10. 'C' → logprob: -7.137794494628906

Token 141: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01691381447017193
    2. ']*' → logprob: -5.141913890838623
    3. '+j' → logprob: -6.141913890838623
    4. ',' → logprob: -6.266913890838623
    5. ' ]' → logprob: -6.766913890838623
    6. ']
' → logprob: -6.766913890838623
    7. ' for' → logprob: -7.266913890838623
    8. ']+' → logprob: -7.266913890838623
    9. '+' → logprob: -7.516913890838623
    10. ']*(' → logprob: -7.641913890838623

Token 142: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015984976664185524
    2. '                   ' → logprob: -5.015985012054443
    3. '<|end|>' → logprob: -5.765985012054443
    4. '
' → logprob: -6.515985012054443
    5. '           ' → logprob: -7.140985012054443
    6. ' and' → logprob: -7.265985012054443
    7. '                       ' → logprob: -7.265985012054443
    8. '       ' → logprob: -7.765985012054443
    9. ',' → logprob: -8.140984535217285
    10. '                
' → logprob: -8.515984535217285

Token 143: ' X' (ID: 2127)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.15408693253993988
    2. ' C' → logprob: -2.0290868282318115
    3. '               ' → logprob: -4.654087066650391
    4. '                   ' → logprob: -7.029087066650391
    5. '                ' → logprob: -9.15408706665039
    6. ' ' → logprob: -9.52908706665039
    7. '+' → logprob: -9.52908706665039
    8. '           ' → logprob: -9.65408706665039
    9. '                           ' → logprob: -9.77908706665039
    10. '                       ' → logprob: -9.77908706665039

Token 144: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.07028251141309738
    2. '[i' → logprob: -2.695282459259033
    3. '[' → logprob: -8.195282936096191
    4. '][' → logprob: -9.945282936096191
    5. '```' → logprob: -11.820282936096191
    6. ' [' → logprob: -12.945282936096191
    7. '<|end|>' → logprob: -13.070282936096191
    8. '[js' → logprob: -13.445282936096191
    9. 'j' → logprob: -13.570282936096191
    10. '[I' → logprob: -13.695282936096191

Token 145: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.4497261345386505
    2. ']+=' → logprob: -1.4497261047363281
    3. '][' → logprob: -3.074726104736328
    4. ']' → logprob: -3.574726104736328
    5. '[' → logprob: -3.949726104736328
    6. '+=' → logprob: -4.824726104736328
    7. '+' → logprob: -5.074726104736328
    8. '[-' → logprob: -5.074726104736328
    9. '][-' → logprob: -5.449726104736328
    10. ']-' → logprob: -5.449726104736328

Token 146: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.004894650541245937
    2. '=' → logprob: -5.629894733428955
    3. '[' → logprob: -7.254894733428955
    4. '=C' → logprob: -7.879894733428955
    5. '[C' → logprob: -8.629894256591797
    6. '=[
' → logprob: -12.504894256591797
    7. '=['' → logprob: -12.629894256591797
    8. '+=' → logprob: -12.754894256591797
    9. '[X' → logprob: -12.879894256591797
    10. '=X' → logprob: -13.379894256591797

Token 147: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.001850939355790615
    2. '-' → logprob: -7.3768510818481445
    3. ' C' → logprob: -8.126851081848145
    4. '0' → logprob: -8.501851081848145
    5. '-C' → logprob: -8.501851081848145
    6. '1' → logprob: -9.126851081848145
    7. '_C' → logprob: -9.501851081848145
    8. '
' → logprob: -9.626851081848145
    9. 'X' → logprob: -9.876851081848145
    10. 'i' → logprob: -10.001851081848145

Token 148: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00022797346173319966
    2. '[-' → logprob: -8.500227928161621
    3. '0' → logprob: -10.875227928161621
    4. '[
' → logprob: -12.750227928161621
    5. '```' → logprob: -14.375227928161621
    6. '[i' → logprob: -14.750227928161621
    7. '-' → logprob: -15.125227928161621
    8. 'Certainly' → logprob: -15.625227928161621
    9. '	' → logprob: -16.125228881835938
    10. '[j' → logprob: -16.375228881835938

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0027507843915373087
    2. '-' → logprob: -6.627750873565674
    3. 'j' → logprob: -7.502750873565674
    4. '1' → logprob: -7.877750873565674
    5. 'i' → logprob: -7.877750873565674
    6. '[' → logprob: -10.127750396728516
    7. ' ' → logprob: -10.252750396728516
    8. '[j' → logprob: -11.877750396728516
    9. ' -' → logprob: -12.315250396728516
    10. '[i' → logprob: -12.627750396728516

Token 150: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1652059406042099
    2. ']+' → logprob: -1.915205955505371
    3. ']' → logprob: -5.915205955505371
    4. ' +' → logprob: -6.790205955505371
    5. ')+' → logprob: -8.165205955505371
    6. '-' → logprob: -8.415205955505371
    7. '])' → logprob: -8.540205955505371
    8. ']]' → logprob: -9.415205955505371
    9. ']+=' → logprob: -10.415205955505371
    10. ')]' → logprob: -10.540205955505371

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03816749155521393
    2. '-' → logprob: -4.038167476654053
    3. '2' → logprob: -4.538167476654053
    4. '0' → logprob: -5.538167476654053
    5. 'C' → logprob: -5.913167476654053
    6. ' ' → logprob: -7.413167476654053
    7. 'i' → logprob: -8.288167953491211
    8. ']' → logprob: -8.413167953491211
    9. 'K' → logprob: -8.538167953491211
    10. 'N' → logprob: -8.913167953491211

Token 152: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06382882595062256
    2. ']' → logprob: -3.188828945159912
    3. ']
' → logprob: -4.063828945159912
    4. '           ' → logprob: -6.188828945159912
    5. '                   ' → logprob: -8.063828468322754
    6. '       ' → logprob: -8.938828468322754
    7. '              ' → logprob: -9.188828468322754
    8. ',' → logprob: -9.438828468322754
    9. ']
' → logprob: -9.438828468322754
    10. '
' → logprob: -9.563828468322754

Token 153: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013610669411718845
    2. '			' → logprob: -7.376360893249512
    3. '           ' → logprob: -8.876360893249512
    4. 'C' → logprob: -9.001360893249512
    5. ' C' → logprob: -9.376360893249512
    6. '       ' → logprob: -9.501360893249512
    7. '		       ' → logprob: -9.501360893249512
    8. '	' → logprob: -10.251360893249512
    9. '	           ' → logprob: -10.251360893249512
    10. '```' → logprob: -10.501360893249512

Token 154: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.000895024451892823
    2. ' C' → logprob: -7.500895023345947
    3. '               ' → logprob: -8.000895500183105
    4. '                   ' → logprob: -12.750895500183105
    5. '           ' → logprob: -14.250895500183105
    6. '
' → logprob: -14.375895500183105
    7. '   ' → logprob: -14.625895500183105
    8. 'set' → logprob: -14.625895500183105
    9. '_C' → logprob: -15.000895500183105
    10. '	C' → logprob: -15.000895500183105

Token 155: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.318681188422488e-05
    2. '```' → logprob: -11.75001335144043
    3. '[-' → logprob: -13.62501335144043
    4. '.append' → logprob: -13.87501335144043
    5. '0' → logprob: -14.62501335144043
    6. '
' → logprob: -14.87501335144043
    7. '[
' → logprob: -15.00001335144043
    8. ' [' → logprob: -15.25001335144043
    9. '\[' → logprob: -15.56251335144043
    10. '=' → logprob: -15.75001335144043

Token 156: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.619311974034645e-05
    2. ' ' → logprob: -11.125036239624023
    3. '-' → logprob: -11.375036239624023
    4. '
' → logprob: -12.000036239624023
    5. '[' → logprob: -13.250036239624023
    6. '```' → logprob: -14.500036239624023
    7. '   ' → logprob: -15.625036239624023
    8. ' ' → logprob: -15.875036239624023
    9. 'I' → logprob: -16.187536239624023
    10. '۰' → logprob: -16.687536239624023

Token 157: ']+=' (ID: 123635)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.28529199957847595
    2. ']+=' → logprob: -1.5352920293807983
    3. ']' → logprob: -3.660291910171509
    4. ' +=' → logprob: -5.285292148590088
    5. '+' → logprob: -6.910292148590088
    6. '=' → logprob: -7.535292148590088
    7. ']+' → logprob: -7.910292148590088
    8. '+]' → logprob: -10.53529167175293
    9. ']=' → logprob: -10.78529167175293
    10. ' ]' → logprob: -11.03529167175293

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000810340337920934
    2. ' ' → logprob: -7.125810146331787
    3. '2' → logprob: -12.625810623168945
    4. '  ' → logprob: -14.500810623168945
    5. '```' → logprob: -14.500810623168945
    6. '<|end|>' → logprob: -14.750810623168945
    7. '3' → logprob: -15.000810623168945
    8. '   ' → logprob: -15.125810623168945
    9. '4' → logprob: -16.125810623168945
    10. '0' → logprob: -16.188310623168945

Token 159: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: ' list' (ID: 1562)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0035599232651293278
    2. '   ' → logprob: -6.5035600662231445
    3. '
' → logprob: -7.2535600662231445
    4. '()' → logprob: -7.5035600662231445
    5. '()
' → logprob: -7.8785600662231445
    6. ' F' → logprob: -8.753560066223145
    7. '<|end|>' → logprob: -9.128560066223145
    8. 'for' → logprob: -10.628560066223145
    9. '(F' → logprob: -10.878560066223145
    10. '    
' → logprob: -11.128560066223145

Token 162: '(map' (ID: 16946)
  Prédit: '(F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.00038586699520237744
    2. '(' → logprob: -8.125386238098145
    3. '(map' → logprob: -9.875386238098145
    4. '(f' → logprob: -10.625386238098145
    5. '(range' → logprob: -12.375386238098145
    6. '()' → logprob: -12.625386238098145
    7. '<|end|>' → logprob: -13.375386238098145
    8. '((' → logprob: -14.000386238098145
    9. '(filter' → logprob: -14.375386238098145
    10. '(()' → logprob: -14.875386238098145

Token 163: '(lambda' (ID: 43341)
  Prédit: '(F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -3.8219583075260743e-05
    2. '(lambda' → logprob: -10.250038146972656
    3. '(' → logprob: -13.000038146972656
    4. ' (' → logprob: -15.375038146972656
    5. 'F' → logprob: -16.250038146972656
    6. '((' → logprob: -16.625038146972656
    7. '(
' → logprob: -16.875038146972656
    8. ')' → logprob: -17.500038146972656
    9. ',F' → logprob: -17.500038146972656
    10. '(f' → logprob: -17.500038146972656

Token 164: ' _:' (ID: 133568)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.31853818893432617
    2. ' F' → logprob: -1.3185381889343262
    3. '(lambda' → logprob: -6.068538188934326
    4. '(F' → logprob: -6.568538188934326
    5. ' (' → logprob: -7.943538188934326
    6. ' lambda' → logprob: -8.068538665771484
    7. 'lambda' → logprob: -8.193538665771484
    8. '(' → logprob: -8.318538665771484
    9. ':' → logprob: -9.318538665771484
    10. '_' → logprob: -9.568538665771484

Token 165: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.02646040916442871
    2. ' F' → logprob: -3.6514604091644287
    3. '_' → logprob: -9.151460647583008
    4. '_F' → logprob: -10.151460647583008
    5. ' _' → logprob: -12.901460647583008
    6. ' ' → logprob: -13.151460647583008
    7. 'f' → logprob: -13.651460647583008
    8. '_(' → logprob: -13.901460647583008
    9. '_[' → logprob: -13.963960647583008
    10. '(F' → logprob: -14.088960647583008

Token 166: '(),' (ID: 2547)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.12756860256195068
    2. '(' → logprob: -2.7525687217712402
    3. '(None' → logprob: -3.2525687217712402
    4. '(_' → logprob: -5.62756872177124
    5. 'range' → logprob: -5.87756872177124
    6. ',' → logprob: -5.87756872177124
    7. '()))' → logprob: -6.00256872177124
    8. '(),' → logprob: -6.37756872177124
    9. '([' → logprob: -7.50256872177124
    10. '(N' → logprob: -7.62756872177124

Token 167: '[' (ID: 58)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.043280284851789474
    2. ' range' → logprob: -3.1682803630828857
    3. '[' → logprob: -8.543280601501465
    4. 'Z' → logprob: -10.543280601501465
    5. '_' → logprob: -11.793280601501465
    6. ' [' → logprob: -11.793280601501465
    7. '(range' → logprob: -11.918280601501465
    8. ' Z' → logprob: -12.418280601501465
    9. 'S' → logprob: -12.418280601501465
    10. ' ' → logprob: -12.793280601501465

Token 168: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3225727379322052
    2. '0' → logprob: -1.3225727081298828
    3. 'range' → logprob: -5.822572708129883
    4. '_' → logprob: -6.322572708129883
    5. ' None' → logprob: -6.572572708129883
    6. '...' → logprob: -7.072572708129883
    7. '_None' → logprob: -7.572572708129883
    8. '1' → logprob: -8.072572708129883
    9. '
' → logprob: -8.322572708129883
    10. 'N' → logprob: -8.697572708129883

Token 169: ']))
' (ID: 24801)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.6814547777175903
    2. ' for' → logprob: -1.5564547777175903
    3. ']*(' → logprob: -2.181454658508301
    4. ']))' → logprob: -2.306454658508301
    5. ']' → logprob: -3.181454658508301
    6. 'for' → logprob: -3.556454658508301
    7. ' ]' → logprob: -8.8064546585083
    8. '()' → logprob: -9.3064546585083
    9. ']+' → logprob: -9.4314546585083
    10. ',' → logprob: -9.5564546585083

Token 170: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1757548451423645
    2. 'print' → logprob: -1.9257547855377197
    3. ')' → logprob: -5.300755023956299
    4. '<|end|>' → logprob: -5.550755023956299
    5. ' for' → logprob: -5.675755023956299
    6. 'if' → logprob: -6.175755023956299
    7. '[' → logprob: -8.05075454711914
    8. 'X' → logprob: -8.80075454711914
    9. '#' → logprob: -9.30075454711914
    10. '   ' → logprob: -9.80075454711914

Token 171: ' print' (ID: 2123)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.244657501578331
    2. 'print' (adapté à ' print') → logprob: -2.244657516479492
    3. 'for' → logprob: -2.869657516479492
    4. '<|end|>' → logprob: -3.994657516479492
    5. 'X' → logprob: -4.994657516479492
    6. ']' → logprob: -5.119657516479492
    7. '[' → logprob: -5.369657516479492
    8. '#' → logprob: -5.494657516479492
    9. 'K' → logprob: -5.869657516479492
    10. '(' → logprob: -5.994657516479492

Token 172: '('' (ID: 706)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.7537572979927063
    2. '(' → logprob: -1.1287572383880615
    3. '(*' → logprob: -1.7537572383880615
    4. '('' → logprob: -3.5037572383880615
    5. '(K' → logprob: -7.253757476806641
    6. '(len' → logprob: -7.628757476806641
    7. '("' → logprob: -8.12875747680664
    8. '([' → logprob: -8.12875747680664
    9. '(
' → logprob: -8.12875747680664
    10. '(*(' → logprob: -8.87875747680664

Token 173: 'Yes' (ID: 13022)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.14432494342327118
    2. 'Yes' → logprob: -3.394325017929077
    3. ''' → logprob: -3.519325017929077
    4. 'YES' → logprob: -3.894325017929077
    5. '"' → logprob: -4.519324779510498
    6. 'X' → logprob: -4.769324779510498
    7. ''\' → logprob: -5.519324779510498
    8. 'N' → logprob: -5.519324779510498
    9. '*' → logprob: -5.894324779510498
    10. 'Y' → logprob: -6.019324779510498

Token 174: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.037306517362594604
    2. ',' → logprob: -3.787306547164917
    3. '')' → logprob: -4.912306308746338
    4. ' )' → logprob: -5.662306308746338
    5. ')
' → logprob: -6.162306308746338
    6. ',
' → logprob: -8.537306785583496
    7. '',' → logprob: -8.662306785583496
    8. ',)' → logprob: -8.787306785583496
    9. ' ,' → logprob: -9.287306785583496
    10. ',K' → logprob: -9.287306785583496

Token 175: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8772983551025391
    2. 'for' → logprob: -0.8772983551025391
    3. ')' → logprob: -2.627298355102539
    4. '<|end|>' → logprob: -3.377298355102539
    5. ' for' → logprob: -4.377298355102539
    6. 'print' → logprob: -4.502298355102539
    7. '(' → logprob: -4.752298355102539
    8. ' ' → logprob: -5.377298355102539
    9. '[
' → logprob: -5.377298355102539
    10. 'X' → logprob: -5.502298355102539

Token 176: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004725007340312004
    2. ' for' → logprob: -6.129724979400635
    3. 'print' (adapté à ' print') → logprob: -6.629724979400635
    4. '[' → logprob: -7.629724979400635
    5. ')' → logprob: -7.754724979400635
    6. '<|end|>' → logprob: -9.379725456237793
    7. '   ' → logprob: -9.754725456237793
    8. '*' → logprob: -10.504725456237793
    9. '[
' → logprob: -11.254725456237793
    10. '0' → logprob: -11.254725456237793

Token 177: '(K' (ID: 28797)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.3753010928630829
    2. '(len' → logprob: -2.0003011226654053
    3. '(' → logprob: -2.8753011226654053
    4. '('' → logprob: -3.0003011226654053
    5. '('\' → logprob: -3.1253011226654053
    6. '(K' → logprob: -3.8753011226654053
    7. '(X' → logprob: -6.125300884246826
    8. '(sum' → logprob: -6.500300884246826
    9. '(*(' → logprob: -6.500300884246826
    10. '("' → logprob: -7.500300884246826

Token 178: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008907367591746151
    2. ',' → logprob: -8.250890731811523
    3. ')
' → logprob: -8.250890731811523
    4. ' )' → logprob: -8.250890731811523
    5. ',end' → logprob: -10.375890731811523
    6. '*' → logprob: -10.875890731811523
    7. ',)' → logprob: -11.000890731811523
    8. '')' → logprob: -11.125890731811523
    9. '```' → logprob: -12.250890731811523
    10. ',len' → logprob: -12.375890731811523

Token 179: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8584712743759155
    2. '<|end|>' → logprob: -1.1084712743759155
    3. 'print' → logprob: -2.233471393585205
    4. '[' → logprob: -2.483471393585205
    5. '   ' → logprob: -3.983471393585205
    6. ' for' → logprob: -4.483471393585205
    7. ')' → logprob: -5.108471393585205
    8. '[
' → logprob: -5.108471393585205
    9. 'X' → logprob: -5.983471393585205
    10. ' ' → logprob: -6.108471393585205

Token 180: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004951290902681649
    2. 'print' → logprob: -7.750494956970215
    3. ' for' → logprob: -10.375494956970215
    4. '[' → logprob: -10.500494956970215
    5. '   ' → logprob: -14.000494956970215
    6. '_' → logprob: -14.125494956970215
    7. '[
' → logprob: -14.250494956970215
    8. 'C' → logprob: -14.625494956970215
    9. '<|end|>' → logprob: -14.750494956970215
    10. '```' → logprob: -15.000494956970215

Token 181: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.46000903844833374
    2. ' x' → logprob: -1.5850090980529785
    3. 'i' → logprob: -2.4600090980529785
    4. 'x' → logprob: -3.2100090980529785
    5. ' row' → logprob: -4.0850090980529785
    6. ' _' → logprob: -4.8350090980529785
    7. 'X' → logprob: -5.8350090980529785
    8. ' X' → logprob: -5.8350090980529785
    9. '_' → logprob: -6.8350090980529785
    10. 'row' → logprob: -7.0850090980529785

Token 182: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0900832861661911
    2. 'in' → logprob: -2.465083360671997
    3. ',' → logprob: -6.840083122253418
    4. ' ' → logprob: -10.590083122253418
    5. ' X' → logprob: -10.965083122253418
    6. ' ,' → logprob: -11.090083122253418
    7. ',in' → logprob: -12.090083122253418
    8. 'X' → logprob: -12.590083122253418
    9. ',X' → logprob: -13.215083122253418
    10. '	in' → logprob: -13.840083122253418

Token 183: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038515910506248474
    2. 'X' → logprob: -3.28851580619812
    3. ' range' → logprob: -7.663516044616699
    4. ' X' → logprob: -12.5385160446167
    5. '(range' → logprob: -15.1635160446167
    6. 'Range' → logprob: -15.5385160446167
    7. 'x' → logprob: -16.038515090942383
    8. 're' → logprob: -16.788515090942383
    9. 'r' → logprob: -16.913515090942383
    10. 'print' → logprob: -17.288515090942383

Token 184: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.0008584582828916609
    2. '(len' → logprob: -7.250858306884766
    3. '(' → logprob: -9.625858306884766
    4. 'K' → logprob: -10.000858306884766
    5. ' K' → logprob: -11.000858306884766
    6. ' (' → logprob: -11.000858306884766
    7. 'len' → logprob: -13.875858306884766
    8. '(N' → logprob: -14.000858306884766
    9. '(k' → logprob: -14.500858306884766
    10. '(
' → logprob: -14.625858306884766

Token 185: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015218253247439861
    2. '):
' → logprob: -4.265218257904053
    3. ':' → logprob: -7.140218257904053
    4. ')' → logprob: -8.640217781066895
    5. ' ):' → logprob: -10.265217781066895
    6. '+' → logprob: -11.265217781066895
    7. ',' → logprob: -11.640217781066895
    8. '):
' → logprob: -11.890217781066895
    9. ':
' → logprob: -12.015217781066895
    10. ']:' → logprob: -12.140217781066895

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004087778273969889
    2. '   ' → logprob: -5.879087924957275
    3. '<|end|>' → logprob: -7.129087924957275
    4. ' print' → logprob: -7.754087924957275
    5. '<|end|>' → logprob: -11.379087448120117
    6. ',' → logprob: -11.504087448120117
    7. 'print' → logprob: -12.129087448120117
    8. '```' → logprob: -12.254087448120117
    9. '        
' → logprob: -12.754087448120117
    10. '	print' → logprob: -13.004087448120117

Token 187: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04895136505365372
    2. ' print' → logprob: -3.0489513874053955
    3. '   ' → logprob: -8.048951148986816
    4. '       ' → logprob: -10.173951148986816
    5. '	print' → logprob: -12.298951148986816
    6. '           ' → logprob: -14.548951148986816
    7. '```' → logprob: -14.548951148986816
    8. 'for' → logprob: -14.798951148986816
    9. ' for' → logprob: -16.423952102661133
    10. '.print' → logprob: -17.048952102661133

Token 188: '(K' (ID: 28797)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.036583077162504196
    2. '(' → logprob: -4.036582946777344
    3. '(*' → logprob: -4.286582946777344
    4. '("' → logprob: -5.661582946777344
    5. '('',' → logprob: -6.911582946777344
    6. '("",' → logprob: -11.536582946777344
    7. '(len' → logprob: -11.661582946777344
    8. '()' → logprob: -11.911582946777344
    9. '*' → logprob: -12.161582946777344
    10. ''' → logprob: -12.661582946777344

Token 189: '-' (ID: 12)
  Prédit: ',end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',end' → logprob: -0.9478625655174255
    2. ')' → logprob: -1.3228626251220703
    3. ',' → logprob: -1.6978626251220703
    4. '-' → logprob: -2.8228626251220703
    5. ' ,' → logprob: -2.9478626251220703
    6. ' -' → logprob: -3.3228626251220703
    7. ' )' → logprob: -4.44786262512207
    8. ' if' → logprob: -7.07286262512207
    9. 'if' → logprob: -7.32286262512207
    10. 'end' → logprob: -7.94786262512207

Token 190: '1' (ID: 16)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.43459343910217285
    2. '1' → logprob: -1.0595934391021729
    3. ' idx' → logprob: -5.434593200683594
    4. ' ' → logprob: -7.559593200683594
    5. 'len' → logprob: -7.559593200683594
    6. 'X' → logprob: -8.809593200683594
    7. '(idx' → logprob: -8.809593200683594
    8. '-' → logprob: -10.684593200683594
    9. '
' → logprob: -10.684593200683594
    10. '(' → logprob: -10.684593200683594

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3788076937198639
    2. ',end' → logprob: -1.2538076639175415
    3. ' ,' → logprob: -4.128807544708252
    4. ')' → logprob: -4.628807544708252
    5. '-' → logprob: -6.878807544708252
    6. ' if' → logprob: -7.128807544708252
    7. 'if' → logprob: -7.253807544708252
    8. ' -' → logprob: -7.878807544708252
    9. 'end' → logprob: -8.37880802154541
    10. ' )' → logprob: -8.50380802154541

Token 192: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0031900706235319376
    2. ''' → logprob: -6.128190040588379
    3. ' *' → logprob: -7.253190040588379
    4. '"' → logprob: -8.503190040588379
    5. '*(' → logprob: -10.128190040588379
    6. ')' → logprob: -10.253190040588379
    7. ' '' → logprob: -11.753190040588379
    8. '*"' → logprob: -13.128190040588379
    9. 'end' → logprob: -13.253190040588379
    10. ''end' → logprob: -13.503190040588379

Token 193: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -6.754368223482743e-05
    2. ' X' → logprob: -9.625067710876465
    3. 'sorted' → logprob: -14.125067710876465
    4. '[X' → logprob: -15.250067710876465
    5. '   ' → logprob: -15.625067710876465
    6. '(X' → logprob: -15.750067710876465
    7. 'map' → logprob: -16.62506675720215
    8. ' ' → logprob: -17.12506675720215
    9. '	X' → logprob: -17.25006675720215
    10. '[' → logprob: -17.62506675720215

Token 194: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.842555426876061e-06
    2. '[' → logprob: -12.875004768371582
    3. 'idx' → logprob: -13.250004768371582
    4. ' idx' → logprob: -16.1250057220459
    5. ')[' → logprob: -16.7500057220459
    6. '[index' → logprob: -16.7500057220459
    7. '(idx' → logprob: -17.0000057220459
    8. ')' → logprob: -17.1250057220459
    9. ' [' → logprob: -17.2500057220459
    10. '[id' → logprob: -17.5000057220459

Token 195: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.313314952421933e-05
    2. ' )' → logprob: -9.875062942504883
    3. '))' → logprob: -11.875062942504883
    4. ')
' → logprob: -13.625062942504883
    5. '])' → logprob: -13.875062942504883
    6. '[])' → logprob: -15.125062942504883
    7. ')}' → logprob: -15.125062942504883
    8. ')])' → logprob: -15.250062942504883
    9. ')`' → logprob: -15.250062942504883
    10. '   ' → logprob: -15.500062942504883


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 193
Tokens correctement prédits (1ère position, stricte): 73
Tokens correctement prédits (1ère position, avec adaptation): 76
Tokens correctement prédits (top 10): 150
Précision stricte (1ère position): 37.82%
Précision adaptée (1ère position): 39.38%
Précision (top 10): 77.72%
================================================================================
