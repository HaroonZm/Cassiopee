================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
nx = input().split()
l = input().split()
nx = [int(x) for x in nx]
l = [int(n) for n in l]
buf = 0
count = 1
for i in range(nx[0]):
    buf = buf + l[i]
    if nx[1] >= buf:
        count += 1
print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'nx' (ID: 45103)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000665375788230449
    2. '('' → logprob: -8.375665664672852
    3. '(
' → logprob: -9.000665664672852
    4. ''' → logprob: -9.250665664672852
    5. '"' → logprob: -10.000665664672852
    6. '()' → logprob: -10.375665664672852
    7. '("("' → logprob: -10.500665664672852
    8. '.' → logprob: -10.750665664672852
    9. '[' → logprob: -10.750665664672852
    10. ' (' → logprob: -11.125665664672852

Token 4: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.32056424021720886
    2. '(' → logprob: -1.8205642700195312
    3. '+' → logprob: -2.5705642700195312
    4. '()' → logprob: -4.570564270019531
    5. '*' → logprob: -4.695564270019531
    6. ')' → logprob: -5.820564270019531
    7. ' ' → logprob: -5.945564270019531
    8. '=' → logprob: -6.445564270019531
    9. '.strip' → logprob: -6.570564270019531
    10. '_' → logprob: -6.820564270019531

Token 5: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007023910991847515
    2. '()' → logprob: -5.257023811340332
    3. '('' → logprob: -6.507023811340332
    4. ''' → logprob: -9.507023811340332
    5. '"' → logprob: -9.757023811340332
    6. '("("' → logprob: -10.007023811340332
    7. '(
' → logprob: -10.507023811340332
    8. '(`' → logprob: -10.507023811340332
    9. '`' → logprob: -10.632023811340332
    10. '```' → logprob: -11.632023811340332

Token 6: 'l' (ID: 75)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9185177087783813
    2. 'for' → logprob: -1.0435177087783813
    3. 'n' → logprob: -2.293517589569092
    4. 'a' → logprob: -3.168517589569092
    5. 'if' → logprob: -3.543517589569092
    6. 'print' → logprob: -4.043517589569092
    7. '[' → logprob: -4.043517589569092
    8. 'num' → logprob: -4.293517589569092
    9. 'nx' → logprob: -4.293517589569092
    10. '#' → logprob: -6.293517589569092

Token 7: ' =' (ID: 314)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.7869634628295898
    2. '=' → logprob: -1.0369634628295898
    3. 'et' → logprob: -2.41196346282959
    4. 'e' → logprob: -3.03696346282959
    5. ' =' → logprob: -3.66196346282959
    6. 's' → logprob: -4.78696346282959
    7. 'i' → logprob: -5.41196346282959
    8. 'ist' → logprob: -5.53696346282959
    9. '.' → logprob: -6.28696346282959
    10. '[' → logprob: -6.41196346282959

Token 8: ' input' (ID: 3422)
  Prédit: '[len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[len' → logprob: -0.793855607509613
    2. '[int' → logprob: -1.6688556671142578
    3. 'list' → logprob: -1.7938556671142578
    4. 'len' → logprob: -2.043855667114258
    5. '[]' → logprob: -3.668855667114258
    6. '[list' → logprob: -4.668855667114258
    7. 'int' → logprob: -4.793855667114258
    8. ' list' → logprob: -5.043855667114258
    9. '[n' → logprob: -5.293855667114258
    10. 'nx' → logprob: -5.793855667114258

Token 9: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4926779866218567
    2. '(' → logprob: -0.9926779866218567
    3. '().' → logprob: -4.117678165435791
    4. ')' → logprob: -7.742678165435791
    5. '.' → logprob: -7.867678165435791
    6. '('' → logprob: -8.367677688598633
    7. '("("' → logprob: -8.617677688598633
    8. '())' → logprob: -8.617677688598633
    9. '```' → logprob: -8.617677688598633
    10. '`()' → logprob: -8.992677688598633

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001521526137366891
    2. 'strip' → logprob: -6.501521587371826
    3. 'rstrip' → logprob: -11.626521110534668
    4. ' split' → logprob: -11.751521110534668
    5. 'startswith' → logprob: -14.126521110534668
    6. 'isdigit' → logprob: -14.126521110534668
    7. 'spl' → logprob: -14.751521110534668
    8. 'replace' → logprob: -14.876521110534668
    9. '(split' → logprob: -17.126522064208984
    10. '_split' → logprob: -17.251522064208984

Token 11: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01614580675959587
    2. '(' → logprob: -4.141145706176758
    3. '`()' → logprob: -10.516145706176758
    4. '()`' → logprob: -10.766145706176758
    5. '().' → logprob: -11.016145706176758
    6. ')' → logprob: -11.641145706176758
    7. '```' → logprob: -12.016145706176758
    8. '()[' → logprob: -12.016145706176758
    9. '()
' → logprob: -12.641145706176758
    10. '()(' → logprob: -12.641145706176758

Token 12: 'nx' (ID: 45103)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28728845715522766
    2. 'for' → logprob: -2.1622884273529053
    3. 'x' → logprob: -3.1622884273529053
    4. 'l' → logprob: -3.1622884273529053
    5. 'a' → logprob: -4.287288665771484
    6. 'm' → logprob: -4.787288665771484
    7. 'count' → logprob: -5.912288665771484
    8. 'k' → logprob: -6.037288665771484
    9. 'result' → logprob: -6.037288665771484
    10. 'nums' → logprob: -6.037288665771484

Token 13: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.060221318155527115
    2. '#' → logprob: -3.5602214336395264
    3. '<|end|>' → logprob: -5.060221195220947
    4. '```' → logprob: -5.185221195220947
    5. '[:]' → logprob: -5.560221195220947
    6. '+' → logprob: -5.685221195220947
    7. '.' → logprob: -5.935221195220947
    8. '[-' → logprob: -6.685221195220947
    9. '[n' → logprob: -6.810221195220947
    10. '\n' → logprob: -6.935221195220947

Token 14: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6563818454742432
    2. 'list' → logprob: -0.9063818454742432
    3. ' [' → logprob: -3.531381845474243
    4. '[' → logprob: -4.531381607055664
    5. '[list' → logprob: -4.656381607055664
    6. '[int' → logprob: -4.781381607055664
    7. 'map' → logprob: -5.656381607055664
    8. '[n' → logprob: -5.656381607055664
    9. ' nx' → logprob: -5.906381607055664
    10. 'input' → logprob: -6.406381607055664

Token 15: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.873571692267433e-05
    2. ' int' → logprob: -9.750068664550781
    3. '(int' → logprob: -11.875068664550781
    4. 'float' → logprob: -12.875068664550781
    5. '[int' → logprob: -14.375068664550781
    6. '0' → logprob: -16.37506866455078
    7. ']int' → logprob: -17.00006866455078
    8. '   ' → logprob: -17.25006866455078
    9. '```' → logprob: -17.25006866455078
    10. '<int' → logprob: -17.50006866455078

Token 16: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0742890015244484
    2. '(i' → logprob: -3.074289083480835
    3. '(nx' → logprob: -4.074288845062256
    4. '(' → logprob: -4.949288845062256
    5. '(n' → logprob: -7.074288845062256
    6. '(item' → logprob: -8.324289321899414
    7. ']' → logprob: -9.949289321899414
    8. '(s' → logprob: -10.199289321899414
    9. '(ix' → logprob: -11.199289321899414
    10. '(e' → logprob: -11.449289321899414

Token 17: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.4192871175473556e-05
    2. '(x' → logprob: -10.125054359436035
    3. '(nx' → logprob: -12.250054359436035
    4. ' )' → logprob: -12.625054359436035
    5. ')]' → logprob: -13.000054359436035
    6. ')x' → logprob: -13.875054359436035
    7. ')...' → logprob: -14.000054359436035
    8. '(n' → logprob: -14.625054359436035
    9. ' ' → logprob: -15.125054359436035
    10. ')])' → logprob: -15.500054359436035

Token 18: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1697382628917694
    2. '(x' → logprob: -1.9197382926940918
    3. ')]' → logprob: -6.044738292694092
    4. '(nx' → logprob: -6.044738292694092
    5. '(' → logprob: -6.169738292694092
    6. ']' → logprob: -6.794738292694092
    7. '(n' → logprob: -6.919738292694092
    8. ' for' → logprob: -9.294737815856934
    9. '(s' → logprob: -9.544737815856934
    10. '(i' → logprob: -10.044737815856934

Token 19: ' x' (ID: 1215)
  Prédit: ' nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.043751079589128494
    2. '(nx' → logprob: -3.2937510013580322
    3. 'nx' → logprob: -5.168751239776611
    4. ' ' → logprob: -13.793750762939453
    5. '(n' → logprob: -15.293750762939453
    6. '(x' → logprob: -15.793750762939453
    7. ' NX' → logprob: -16.543750762939453
    8. ' ny' → logprob: -17.168750762939453
    9. 'NX' → logprob: -17.418750762939453
    10. ' x' → logprob: -17.418750762939453

Token 20: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47489675879478455
    2. ' in' → logprob: -0.9748967885971069
    3. '[' → logprob: -8.474896430969238
    4. ']' → logprob: -8.849896430969238
    5. 'inx' → logprob: -9.349896430969238
    6. 's' → logprob: -9.474896430969238
    7. 'n' → logprob: -9.849896430969238
    8. ' ' → logprob: -9.974896430969238
    9. '[n' → logprob: -10.224896430969238
    10. 'x' → logprob: -10.474896430969238

Token 21: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.07905635237693787
    2. ' nx' → logprob: -2.5790562629699707
    3. '(nx' → logprob: -8.704056739807129
    4. 'n' → logprob: -15.454056739807129
    5. 'x' → logprob: -15.954056739807129
    6. ' ' → logprob: -16.329055786132812
    7. 'NX' → logprob: -16.329055786132812
    8. 'l' → logprob: -17.454055786132812
    9. 'Nx' → logprob: -17.579055786132812
    10. 'lx' → logprob: -17.704055786132812

Token 22: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020616286201402545
    2. ' ]' → logprob: -8.625205993652344
    3. ']
' → logprob: -10.750205993652344
    4. '])' → logprob: -13.375205993652344
    5. ')]' → logprob: -13.500205993652344
    6. ']+' → logprob: -15.250205993652344
    7. ']<' → logprob: -15.375205993652344
    8. ']>' → logprob: -15.500205993652344
    9. ']
' → logprob: -15.625205993652344
    10. ')' → logprob: -15.625205993652344

Token 23: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00043579499470070004
    2. 'n' → logprob: -8.875435829162598
    3. ' l' → logprob: -9.125435829162598
    4. 'a' → logprob: -9.500435829162598
    5. 'lst' → logprob: -10.375435829162598
    6. '```' → logprob: -11.250435829162598
    7. 'b' → logprob: -11.500435829162598
    8. 'x' → logprob: -11.750435829162598
    9. 'm' → logprob: -11.875435829162598
    10. 'k' → logprob: -12.000435829162598

Token 24: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6987727880477905
    2. '[int' → logprob: -0.6987727880477905
    3. '[' → logprob: -5.57377290725708
    4. '[input' → logprob: -7.07377290725708
    5. '[list' → logprob: -7.07377290725708
    6. '[i' → logprob: -9.948772430419922
    7. '[len' → logprob: -10.948772430419922
    8. '[Int' → logprob: -11.573772430419922
    9. '[x' → logprob: -11.573772430419922
    10. 'list' → logprob: -11.823772430419922

Token 26: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.173704271830502e-06
    2. ' int' → logprob: -12.75000286102295
    3. '(int' → logprob: -16.125003814697266
    4. 'float' → logprob: -17.625003814697266
    5. 'input' → logprob: -17.875003814697266
    6. '[int' → logprob: -18.000003814697266
    7. 'str' → logprob: -18.125003814697266
    8. 'x' → logprob: -18.375003814697266
    9. '<int' → logprob: -19.375003814697266
    10. ']int' → logprob: -19.500003814697266

Token 27: '(n' (ID: 2406)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00010986098641296849
    2. '(' → logprob: -9.625109672546387
    3. '(l' → logprob: -10.125109672546387
    4. '(i' → logprob: -13.250109672546387
    5. ' (' → logprob: -13.500109672546387
    6. '(y' → logprob: -15.000109672546387
    7. '(s' → logprob: -16.125110626220703
    8. '(a' → logprob: -16.250110626220703
    9. 'x' → logprob: -18.000110626220703
    10. '(t' → logprob: -18.875110626220703

Token 28: ')' (ID: 8)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7000839114189148
    2. '(x' → logprob: -0.7000839114189148
    3. 'um' → logprob: -5.5750837326049805
    4. ')' → logprob: -6.2000837326049805
    5. 'umber' → logprob: -7.5750837326049805
    6. ')x' → logprob: -7.8250837326049805
    7. ' x' → logprob: -10.07508373260498
    8. 'for' → logprob: -10.07508373260498
    9. '(l' → logprob: -10.82508373260498
    10. ' for' → logprob: -11.07508373260498

Token 29: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19076021015644073
    2. 'for' → logprob: -1.8157602548599243
    3. ')' → logprob: -5.565760135650635
    4. ' in' → logprob: -6.190760135650635
    5. '(x' → logprob: -6.315760135650635
    6. '(' → logprob: -6.565760135650635
    7. '(n' → logprob: -6.815760135650635
    8. '(l' → logprob: -7.940760135650635
    9. ' (' → logprob: -9.065760612487793
    10. ' ' → logprob: -9.315760612487793

Token 30: ' n' (ID: 297)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6966703534126282
    2. ' l' → logprob: -0.6966703534126282
    3. ' n' → logprob: -6.3216705322265625
    4. 'n' → logprob: -6.4466705322265625
    5. '(n' → logprob: -8.946670532226562
    6. '(l' → logprob: -13.446670532226562
    7. ' ' → logprob: -13.696670532226562
    8. '	l' → logprob: -14.946670532226562
    9. '(' → logprob: -15.196670532226562
    10. '_l' → logprob: -15.446670532226562

Token 31: ' in' (ID: 306)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.47205355763435364
    2. ' in' → logprob: -1.4720535278320312
    3. ' l' → logprob: -2.4720535278320312
    4. '(n' → logprob: -3.2220535278320312
    5. '(l' → logprob: -4.347053527832031
    6. 'in' → logprob: -4.972053527832031
    7. ' (' → logprob: -6.597053527832031
    8. '(' → logprob: -6.972053527832031
    9. 'n' → logprob: -8.597053527832031
    10. ' n' → logprob: -9.472053527832031

Token 32: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07889308780431747
    2. ' l' → logprob: -2.5788931846618652
    3. ' ' → logprob: -13.328892707824707
    4. 'input' → logprob: -14.453892707824707
    5. ' input' → logprob: -14.828892707824707
    6. 'x' → logprob: -15.578892707824707
    7. 'nx' → logprob: -15.703892707824707
    8. '	l' → logprob: -15.953892707824707
    9. ' nx' → logprob: -16.078893661499023
    10. 'lx' → logprob: -16.703893661499023

Token 33: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05158620700240135
    2. ')]' → logprob: -3.426586151123047
    3. ')' → logprob: -4.176586151123047
    4. '])' → logprob: -6.051586151123047
    5. '])]' → logprob: -10.426586151123047
    6. '']' → logprob: -11.051586151123047
    7. ')])' → logprob: -11.051586151123047
    8. '`]' → logprob: -12.051586151123047
    9. ' ]' → logprob: -13.051586151123047
    10. '）' → logprob: -13.676586151123047

Token 34: 'buf' (ID: 13119)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7722502946853638
    2. 'n' → logprob: -1.8972502946853638
    3. 's' → logprob: -2.147250175476074
    4. 'c' → logprob: -2.897250175476074
    5. 'd' → logprob: -2.897250175476074
    6. 'r' → logprob: -3.897250175476074
    7. 'f' → logprob: -3.897250175476074
    8. 'a' → logprob: -3.897250175476074
    9. 'x' → logprob: -3.897250175476074
    10. 'm' → logprob: -4.022250175476074

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6909772753715515
    2. 'f' → logprob: -1.8159773349761963
    3. '=' → logprob: -2.3159773349761963
    4. '[' → logprob: -2.5659773349761963
    5. '_' → logprob: -2.8159773349761963
    6. 'fer' → logprob: -3.3159773349761963
    7. '.' → logprob: -3.4409773349761963
    8. 'er' → logprob: -4.315977096557617
    9. '[:]' → logprob: -5.190977096557617
    10. ' ' → logprob: -5.815977096557617

Token 36: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2595979571342468
    2. ' []' → logprob: -1.6345980167388916
    3. '0' → logprob: -4.3845977783203125
    4. '[' → logprob: -5.0095977783203125
    5. ' ' → logprob: -5.6345977783203125
    6. '"' → logprob: -6.1345977783203125
    7. ''' → logprob: -6.1345977783203125
    8. '""' → logprob: -6.5095977783203125
    9. 'l' → logprob: -6.7595977783203125
    10. ' [' → logprob: -7.0095977783203125

Token 37: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.11837813258171082
    2. '0' → logprob: -2.743378162384033
    3. '[' → logprob: -4.118378162384033
    4. '""' → logprob: -4.368378162384033
    5. 'l' → logprob: -4.493378162384033
    6. '{}' → logprob: -6.993378162384033
    7. 'max' → logprob: -6.993378162384033
    8. '''' → logprob: -7.118378162384033
    9. 'sum' → logprob: -7.243378162384033
    10. 'set' → logprob: -7.618378162384033

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8720426559448242
    2. 'for' → logprob: -1.4970426559448242
    3. ' for' → logprob: -1.8720426559448242
    4. ' ' → logprob: -2.622042655944824
    5. '\n' → logprob: -2.872042655944824
    6. ' 
' → logprob: -3.372042655944824
    7. '<|end|>' → logprob: -4.247042655944824
    8. '' → logprob: -4.372042655944824
    9. '\' → logprob: -5.747042655944824
    10. ',' → logprob: -5.997042655944824

Token 39: 'count' (ID: 5420)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3638189136981964
    2. 'i' → logprob: -1.988818883895874
    3. 'f' → logprob: -2.363818883895874
    4. 'n' → logprob: -2.988818883895874
    5. '\n' → logprob: -4.613819122314453
    6. ' for' → logprob: -5.613819122314453
    7. '
' → logprob: -6.113819122314453
    8. '' → logprob: -6.488819122314453
    9. ':' → logprob: -6.613819122314453
    10. '```' → logprob: -7.238819122314453

Token 40: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22145435214042664
    2. '(' → logprob: -1.721454381942749
    3. '=' → logprob: -4.84645414352417
    4. ' =' → logprob: -4.97145414352417
    5. ' ' → logprob: -6.22145414352417
    6. ' +=' → logprob: -7.34645414352417
    7. '[' → logprob: -7.72145414352417
    8. 's' → logprob: -7.84645414352417
    9. ')' → logprob: -8.221454620361328
    10. 'space' → logprob: -8.846454620361328

Token 41: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.576030433177948
    2. ' ' → logprob: -0.826030433177948
    3. '1' → logprob: -9.451030731201172
    4. '<|end|>' → logprob: -12.076030731201172
    5. ' ' → logprob: -13.201030731201172
    6. '32' → logprob: -14.576030731201172
    7. ' buf' → logprob: -14.763530731201172
    8. 's' → logprob: -14.888530731201172
    9. '(' → logprob: -15.076030731201172
    10. '[' → logprob: -15.076030731201172

Token 42: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001581639633513987
    2. ' ' → logprob: -6.62658166885376
    3. '1' → logprob: -8.376581192016602
    4. 'buf' → logprob: -11.876581192016602
    5. '[]' → logprob: -12.501581192016602
    6. '-' → logprob: -13.189081192016602
    7. 'nx' → logprob: -13.314081192016602
    8. 'x' → logprob: -14.001581192016602
    9. '[' → logprob: -14.064081192016602
    10. 'l' → logprob: -14.501581192016602

Token 43: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22139158844947815
    2. ' for' → logprob: -2.3463916778564453
    3. '\n' → logprob: -3.3463916778564453
    4. '
' → logprob: -3.3463916778564453
    5. 'i' → logprob: -4.846391677856445
    6. ',' → logprob: -5.096391677856445
    7. 'n' → logprob: -5.846391677856445
    8. '+' → logprob: -6.221391677856445
    9. '\' → logprob: -6.596391677856445
    10. '' → logprob: -6.846391677856445

Token 44: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.058327846229076385
    2. ' for' → logprob: -3.1833279132843018
    3. 'i' → logprob: -4.808327674865723
    4. 'f' → logprob: -6.558327674865723
    5. ',' → logprob: -7.058327674865723
    6. ' ' → logprob: -7.183327674865723
    7. 'n' → logprob: -7.433327674865723
    8. '
' → logprob: -7.433327674865723
    9. ':' → logprob: -8.058327674865723
    10. '=' → logprob: -8.058327674865723

Token 45: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11214286834001541
    2. ' i' → logprob: -2.36214280128479
    3. '_' → logprob: -5.112143039703369
    4. ' _' → logprob: -6.112143039703369
    5. ' x' → logprob: -6.487143039703369
    6. ' n' → logprob: -6.862143039703369
    7. 'i' → logprob: -7.612143039703369
    8. '  ' → logprob: -9.237142562866211
    9. 'x' → logprob: -9.362142562866211
    10. ' nx' → logprob: -9.737142562866211

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23472343385219574
    2. ' ' → logprob: -1.734723448753357
    3. 'in' → logprob: -4.3597235679626465
    4. '[' → logprob: -4.9847235679626465
    5. '  ' → logprob: -5.1097235679626465
    6. '<|end|>' → logprob: -5.2347235679626465
    7. ' i' → logprob: -7.6097235679626465
    8. ')' → logprob: -8.484723091125488
    9. ' >' → logprob: -8.984723091125488
    10. '+' → logprob: -8.984723091125488

Token 47: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.17986105382442474
    2. 'range' → logprob: -1.804861068725586
    3. ' l' → logprob: -10.054861068725586
    4. ' nx' → logprob: -10.929861068725586
    5. 'nx' → logprob: -11.054861068725586
    6. 'l' → logprob: -11.429861068725586
    7. '(range' → logprob: -12.054861068725586
    8. ' ' → logprob: -12.054861068725586
    9. ' xrange' → logprob: -12.054861068725586
    10. '	range' → logprob: -12.554861068725586

Token 48: '(nx' (ID: 189861)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003461444517597556
    2. '(nx' → logprob: -6.3784613609313965
    3. ' (' → logprob: -6.8784613609313965
    4. '(len' → logprob: -7.2534613609313965
    5. '(buf' → logprob: -11.753461837768555
    6. '(n' → logprob: -12.003461837768555
    7. '(
' → logprob: -12.753461837768555
    8. '(count' → logprob: -13.753461837768555
    9. '(length' → logprob: -14.378461837768555
    10. ' ' → logprob: -14.878461837768555

Token 49: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.047134305234067e-05
    2. ')' → logprob: -11.000030517578125
    3. ' [' → logprob: -11.875030517578125
    4. ' ' → logprob: -12.750030517578125
    5. '1' → logprob: -13.125030517578125
    6. '-' → logprob: -14.500030517578125
    7. '0' → logprob: -15.000030517578125
    8. ' )' → logprob: -15.250030517578125
    9. '[
' → logprob: -15.375030517578125
    10. '(' → logprob: -15.625030517578125

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06922432780265808
    2. '1' → logprob: -2.8192243576049805
    3. ' ' → logprob: -5.4442243576049805
    4. '[' → logprob: -6.1942243576049805
    5. ']' → logprob: -7.9442243576049805
    6. '-' → logprob: -7.9442243576049805
    7. '])' → logprob: -9.19422435760498
    8. ')' → logprob: -10.44422435760498
    9. ' -' → logprob: -11.81922435760498
    10. '][' → logprob: -12.81922435760498

Token 51: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3635852038860321
    2. '-' → logprob: -1.9885852336883545
    3. ' -' → logprob: -2.7385852336883545
    4. ']):' → logprob: -3.2385852336883545
    5. ' ):' → logprob: -3.2385852336883545
    6. '+' → logprob: -4.238584995269775
    7. ']:' → logprob: -5.488584995269775
    8. ')' → logprob: -6.113584995269775
    9. ']' → logprob: -6.738584995269775
    10. ' ' → logprob: -7.488584995269775

Token 52: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5316138863563538
    2. '   ' → logprob: -1.156613826751709
    3. ' ' → logprob: -3.406613826751709
    4. '<|end|>' → logprob: -3.531613826751709
    5. ' if' → logprob: -4.031613826751709
    6. '    ' → logprob: -4.906613826751709
    7. 'if' → logprob: -6.156613826751709
    8. ' :' → logprob: -6.406613826751709
    9. '  ' → logprob: -7.281613826751709
    10. ' 
' → logprob: -7.406613826751709

Token 53: ' buf' (ID: 13976)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3764570355415344
    2. ' if' → logprob: -1.6264569759368896
    3. 'if' → logprob: -3.1264569759368896
    4. '    ' → logprob: -3.2514569759368896
    5. ' for' → logprob: -4.376457214355469
    6. ' buf' → logprob: -5.126457214355469
    7. 'buf' (adapté à ' buf') → logprob: -5.626457214355469
    8. ' ' → logprob: -5.751457214355469
    9. 'for' → logprob: -6.251457214355469
    10. ':' → logprob: -6.501457214355469

Token 54: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.026314932852983475
    2. '+=' → logprob: -4.151314735412598
    3. ' =' → logprob: -5.151314735412598
    4. '+' → logprob: -5.901314735412598
    5. ' +' → logprob: -7.401314735412598
    6. '=' → logprob: -7.401314735412598
    7. ' ==' → logprob: -8.401314735412598
    8. ' -=' → logprob: -9.651314735412598
    9. ' <' → logprob: -10.276314735412598
    10. ' ' → logprob: -10.401314735412598

Token 55: ' buf' (ID: 13976)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.22831177711486816
    2. ' l' → logprob: -1.7283117771148682
    3. 'buf' → logprob: -3.978311777114868
    4. ' buf' → logprob: -5.978311538696289
    5. 'max' → logprob: -6.478311538696289
    6. 'i' → logprob: -6.978311538696289
    7. ' max' → logprob: -7.353311538696289
    8. '0' → logprob: -7.853311538696289
    9. ' i' → logprob: -7.853311538696289
    10. '+' → logprob: -7.978311538696289

Token 56: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.049042392522096634
    2. ' +' → logprob: -3.0490424633026123
    3. '+l' → logprob: -7.924042224884033
    4. '+n' → logprob: -10.174042701721191
    5. '+i' → logprob: -10.799042701721191
    6. '-' → logprob: -12.174042701721191
    7. '+
' → logprob: -12.549042701721191
    8. ' ^' → logprob: -12.799042701721191
    9. '^' → logprob: -13.049042701721191
    10. '+x' → logprob: -13.174042701721191

Token 57: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02990240603685379
    2. ' l' → logprob: -3.529902458190918
    3. '1' → logprob: -9.779902458190918
    4. ' ' → logprob: -10.779902458190918
    5. 'int' → logprob: -10.779902458190918
    6. 'i' → logprob: -11.154902458190918
    7. '   ' → logprob: -11.404902458190918
    8. '(l' → logprob: -12.654902458190918
    9. ' i' → logprob: -12.904902458190918
    10. '	l' → logprob: -12.904902458190918

Token 58: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012516011483967304
    2. '[' → logprob: -4.387516021728516
    3. '\[' → logprob: -13.012516021728516
    4. 'i' → logprob: -14.262516021728516
    5. '[count' → logprob: -14.512516021728516
    6. '[x' → logprob: -15.137516021728516
    7. '[
' → logprob: -15.262516021728516
    8. '[u' → logprob: -15.387516021728516
    9. '[n' → logprob: -15.512516021728516
    10. '[l' → logprob: -15.637516021728516

Token 59: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32432979345321655
    2. ']' → logprob: -1.3243298530578613
    3. ' )' → logprob: -5.449329853057861
    4. '])' → logprob: -5.449329853057861
    5. ' ]' → logprob: -7.324329853057861
    6. '+' → logprob: -7.449329853057861
    7. '   ' → logprob: -7.699329853057861
    8. ' ' → logprob: -8.824329376220703
    9. '[' → logprob: -9.824329376220703
    10. ')]' → logprob: -9.824329376220703

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9265900254249573
    2. ' ' → logprob: -1.5515899658203125
    3. ' if' → logprob: -2.1765899658203125
    4. '
' → logprob: -2.8015899658203125
    5. '<|end|>' → logprob: -2.8015899658203125
    6. '+' → logprob: -3.3015899658203125
    7. '    ' → logprob: -3.5515899658203125
    8. '  ' → logprob: -3.6765899658203125
    9. ' 
' → logprob: -3.8015899658203125
    10. '    
' → logprob: -4.0515899658203125

Token 61: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0693578720092773
    2. ' if' → logprob: -1.4443578720092773
    3. 'if' (adapté à ' if') → logprob: -1.9443578720092773
    4. '   ' → logprob: -2.3193578720092773
    5. '\n' → logprob: -2.4443578720092773
    6. '    ' → logprob: -3.8193578720092773
    7. '<|end|>' → logprob: -4.194357872009277
    8. '>' → logprob: -4.444357872009277
    9. '\' → logprob: -4.944357872009277
    10. ' 
' → logprob: -4.944357872009277

Token 62: ' nx' (ID: 50118)
  Prédit: ' buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' buf' → logprob: -0.0023676820565015078
    2. 'buf' → logprob: -7.0023674964904785
    3. ' l' → logprob: -7.7523674964904785
    4. '(buf' → logprob: -8.127367973327637
    5. ' ' → logprob: -8.502367973327637
    6. ' (' → logprob: -8.627367973327637
    7. ' len' → logprob: -9.502367973327637
    8. ' i' → logprob: -9.627367973327637
    9. ' bu' → logprob: -10.252367973327637
    10. ' ' → logprob: -10.377367973327637

Token 63: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9385402993066236e-05
    2. '[
' → logprob: -12.625019073486328
    3. '[i' → logprob: -12.625019073486328
    4. '```' → logprob: -12.875019073486328
    5. '\[' → logprob: -13.250019073486328
    6. ' [' → logprob: -13.375019073486328
    7. ' ' → logprob: -14.312519073486328
    8. '[-' → logprob: -14.375019073486328
    9. '   ' → logprob: -14.500019073486328
    10. '>' → logprob: -14.625019073486328

Token 64: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6333006620407104
    2. '1' → logprob: -0.7583006620407104
    3. '[' → logprob: -7.50830078125
    4. ' ' → logprob: -9.63330078125
    5. '(' → logprob: -10.75830078125
    6. ']' → logprob: -11.00830078125
    7. '   ' → logprob: -11.38330078125
    8. '-' → logprob: -11.44580078125
    9. '```' → logprob: -12.57080078125
    10. '][' → logprob: -12.88330078125

Token 65: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1115570217370987
    2. '>' → logprob: -3.3615570068359375
    3. ' >=' → logprob: -3.3615570068359375
    4. ' <=' → logprob: -3.6115570068359375
    5. ' ' → logprob: -5.7365570068359375
    6. ' <' → logprob: -6.3615570068359375
    7. ' ==' → logprob: -6.4865570068359375
    8. '>=' → logprob: -6.8615570068359375
    9. ')' → logprob: -7.2365570068359375
    10. '<=' → logprob: -7.8615570068359375

Token 66: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.9533716440200806
    2. '>' → logprob: -1.4533716440200806
    3. ' >=' → logprob: -1.7033716440200806
    4. ' <=' → logprob: -2.328371524810791
    5. '>=' → logprob: -2.703371524810791
    6. '<=' → logprob: -4.203371524810791
    7. ' <' → logprob: -4.828371524810791
    8. '<' → logprob: -5.328371524810791
    9. ' ==' → logprob: -5.703371524810791
    10. '==' → logprob: -6.078371524810791

Token 67: ' buf' (ID: 13976)
  Prédit: 'buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buf' → logprob: -0.04887450486421585
    2. ' buf' → logprob: -3.048874616622925
    3. ' l' → logprob: -8.798874855041504
    4. 'l' → logprob: -9.548874855041504
    5. ' ' → logprob: -10.423874855041504
    6. '	buf' → logprob: -11.673874855041504
    7. 'buff' → logprob: -12.048874855041504
    8. '(buf' → logprob: -12.173874855041504
    9. '  ' → logprob: -12.423874855041504
    10. '   ' → logprob: -12.673874855041504

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004185602068901062
    2. ' :' → logprob: -5.504185676574707
    3. ' and' → logprob: -9.629185676574707
    4. ':
' → logprob: -11.129185676574707
    5. 'and' → logprob: -11.629185676574707
    6. '   ' → logprob: -12.129185676574707
    7. '.' → logprob: -13.379185676574707
    8. '):' → logprob: -13.504185676574707
    9. '+' → logprob: -13.629185676574707
    10. ' ' → logprob: -13.629185676574707

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5564908385276794
    2. ':' → logprob: -1.8064908981323242
    3. '   ' → logprob: -1.9314908981323242
    4. ' ' → logprob: -2.806490898132324
    5. '    ' → logprob: -3.306490898132324
    6. ' :' → logprob: -4.681490898132324
    7. '     ' → logprob: -6.056490898132324
    8. '	' → logprob: -6.681490898132324
    9. '\t' → logprob: -6.806490898132324
    10. '  ' → logprob: -6.931490898132324

Token 70: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.011222416535019875
    2. ' count' → logprob: -4.5112223625183105
    3. '       ' → logprob: -9.136222839355469
    4. '   ' → logprob: -10.386222839355469
    5. '	count' → logprob: -10.761222839355469
    6. 'print' → logprob: -12.261222839355469
    7. ' ' → logprob: -13.011222839355469
    8. '<count' → logprob: -13.261222839355469
    9. '$count' → logprob: -13.386222839355469
    10. '    ' → logprob: -13.636222839355469

Token 71: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.026163384318351746
    2. '+=' → logprob: -3.776163339614868
    3. ' =' → logprob: -6.651163578033447
    4. '+' → logprob: -7.276163578033447
    5. '=' → logprob: -7.276163578033447
    6. ' ' → logprob: -8.651163101196289
    7. ' +' → logprob: -9.776163101196289
    8. '++' → logprob: -13.526163101196289
    9. '+='' → logprob: -14.401163101196289
    10. '<|end|>' → logprob: -14.526163101196289

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0263022743165493
    2. ' ' → logprob: -3.6513023376464844
    3. 'l' → logprob: -14.963802337646484
    4. 'i' → logprob: -15.276302337646484
    5. '   ' → logprob: -15.276302337646484
    6. '0' → logprob: -15.588802337646484
    7. ' i' → logprob: -15.776302337646484
    8. ' l' → logprob: -15.963802337646484
    9. '+' → logprob: -16.151302337646484
    10. ' ' → logprob: -16.401302337646484

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8206473871250637e-05
    2. ' ' → logprob: -10.500028610229492
    3. 'l' → logprob: -14.625028610229492
    4. '0' → logprob: -16.750028610229492
    5. '   ' → logprob: -17.250028610229492
    6. 'i' → logprob: -17.750028610229492
    7. 'int' → logprob: -18.312528610229492
    8. 'len' → logprob: -18.375028610229492
    9. '2' → logprob: -18.500028610229492
    10. '+' → logprob: -18.875028610229492

Token 74: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6365205645561218
    2. '<|end|>' → logprob: -1.3865206241607666
    3. ' else' → logprob: -1.7615206241607666
    4. 'print' → logprob: -3.3865206241607666
    5. '```' → logprob: -5.6365203857421875
    6. ' ' → logprob: -5.8865203857421875
    7. '\n' → logprob: -5.8865203857421875
    8. 'elif' → logprob: -6.1365203857421875
    9. ')' → logprob: -7.0115203857421875
    10. '   ' → logprob: -7.8865203857421875

Token 75: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06255967170000076
    2. '(count' → logprob: -2.8125596046447754
    3. '('' → logprob: -7.937559604644775
    4. '("' → logprob: -9.187560081481934
    5. '("("' → logprob: -9.687560081481934
    6. '((' → logprob: -10.687560081481934
    7. '()' → logprob: -11.187560081481934
    8. '(buf' → logprob: -11.687560081481934
    9. '(len' → logprob: -11.687560081481934
    10. '(`' → logprob: -12.687560081481934

Token 77: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.000000953674316
    3. ')
' → logprob: -17.000001907348633
    4. '))' → logprob: -17.625001907348633
    5. ')`' → logprob: -18.000001907348633
    6. '(' → logprob: -18.250001907348633
    7. '')' → logprob: -18.875001907348633
    8. '`)' → logprob: -19.625001907348633
    9. '#' → logprob: -19.625001907348633
    10. '[' → logprob: -19.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 75
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 57
Précision stricte (1ère position): 29.33%
Précision adaptée (1ère position): 30.67%
Précision (top 10): 76.00%
================================================================================
