================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin

def count_dates(m: int, d: int) -> int:
    return sum(
        1
        for month in range(1, m + 1)
        for i in range(2, 10)
        if month % i == 0 and 1 < (div := month // i) < 10 and i * 10 + div <= d
    )

if __name__ == "__main__":
    m, d = map(int, stdin.readline().split())
    print(count_dates(m, d))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.08520080149173737
    2. ' argv' → logprob: -2.710200786590576
    3. 'exit' → logprob: -4.585200786590576
    4. ' exit' → logprob: -5.835200786590576
    5. 'stdout' → logprob: -6.960200786590576
    6. 'path' → logprob: -7.710200786590576
    7. 'stdin' → logprob: -8.210201263427734
    8. 'version' → logprob: -9.085201263427734
    9. 'import' → logprob: -9.460201263427734
    10. ' path' → logprob: -10.085201263427734

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10843159258365631
    2. '.readline' → logprob: -2.608431577682495
    3. '\n' → logprob: -3.983431577682495
    4. '.read' → logprob: -5.983431816101074
    5. 'import' → logprob: -6.233431816101074
    6. 'newline' → logprob: -6.233431816101074
    7. '```' → logprob: -6.858431816101074
    8. '\' → logprob: -7.233431816101074
    9. '
' → logprob: -7.483431816101074
    10. '' → logprob: -7.858431816101074

Token 5: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1980258822441101
    2. 'for' → logprob: -2.073025941848755
    3. '.readline' → logprob: -3.823025941848755
    4. 'import' → logprob: -4.323025703430176
    5. '\n' → logprob: -5.073025703430176
    6. 'print' → logprob: -5.948025703430176
    7. 'read' → logprob: -6.448025703430176
    8. '.read' → logprob: -6.448025703430176
    9. '```' → logprob: -6.573025703430176
    10. '\' → logprob: -7.073025703430176

Token 6: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0345781035721302
    2. ' read' → logprob: -3.5345780849456787
    3. ' process' → logprob: -6.034578323364258
    4. ' main' → logprob: -7.659578323364258
    5. ' space' → logprob: -7.909578323364258
    6. ' ' → logprob: -8.034578323364258
    7. '_read' → logprob: -8.284578323364258
    8. ' parse' → logprob: -8.784578323364258
    9. ' readline' → logprob: -8.909578323364258
    10. '_' → logprob: -9.659578323364258

Token 7: '_dates' (ID: 118283)
  Prédit: '_words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.5673635601997375
    2. '_' → logprob: -1.0673635005950928
    3. '_tokens' → logprob: -3.1923635005950928
    4. '_lines' → logprob: -3.5673635005950928
    5. '_occ' → logprob: -5.442363739013672
    6. '_chars' → logprob: -5.942363739013672
    7. '_items' → logprob: -6.442363739013672
    8. '_char' → logprob: -6.692363739013672
    9. '_letters' → logprob: -6.817363739013672
    10. '_elements' → logprob: -6.817363739013672

Token 8: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021526420023292303
    2. '_' → logprob: -6.752152442932129
    3. '():' → logprob: -8.252152442932129
    4. '_dates' → logprob: -9.377152442932129
    5. '("("' → logprob: -9.627152442932129
    6. ':' → logprob: -10.002152442932129
    7. '```' → logprob: -10.127152442932129
    8. '_list' → logprob: -10.502152442932129
    9. '(
' → logprob: -10.502152442932129
    10. '<|end|>' → logprob: -10.627152442932129

Token 9: ':' (ID: 25)
  Prédit: 'onth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'onth' → logprob: -0.2182789146900177
    2. 'e' → logprob: -2.0932788848876953
    3. '):' → logprob: -2.9682788848876953
    4. 'a' → logprob: -4.843278884887695
    5. 'on' → logprob: -5.218278884887695
    6. '=' → logprob: -6.343278884887695
    7. 'ean' → logprob: -6.468278884887695
    8. ',' → logprob: -6.718278884887695
    9. 'o' → logprob: -7.093278884887695
    10. 'atches' → logprob: -7.718278884887695

Token 10: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02124926634132862
    2. ' int' → logprob: -4.146249294281006
    3. 'str' → logprob: -5.646249294281006
    4. ' str' → logprob: -7.146249294281006
    5. 'dict' → logprob: -8.146248817443848
    6. 'List' → logprob: -8.771248817443848
    7. ')' → logprob: -9.146248817443848
    8. 'list' → logprob: -9.396248817443848
    9. ':int' → logprob: -9.646248817443848
    10. 'onth' → logprob: -10.396248817443848

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036994852125644684
    2. ')' → logprob: -5.62869930267334
    3. ' ,' → logprob: -9.50369930267334
    4. '):' → logprob: -11.12869930267334
    5. ',int' → logprob: -13.50369930267334
    6. ',
' → logprob: -13.75369930267334
    7. ' ' → logprob: -14.12869930267334
    8. ',m' → logprob: -14.12869930267334
    9. ',)' → logprob: -14.25369930267334
    10. ',a' → logprob: -14.37869930267334

Token 12: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.18271735310554504
    2. 'd' → logprob: -1.8077173233032227
    3. ' n' → logprob: -6.807717323303223
    4. ' y' → logprob: -6.932717323303223
    5. 'y' → logprob: -7.807717323303223
    6. 'n' → logprob: -8.057717323303223
    7. ' ' → logprob: -9.432717323303223
    8. 'a' → logprob: -11.307717323303223
    9. '	d' → logprob: -11.995217323303223
    10. ' a' → logprob: -12.057717323303223

Token 13: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7935295104980469
    2. '):' → logprob: -0.9185295104980469
    3. ':' → logprob: -1.9185295104980469
    4. ',' → logprob: -6.793529510498047
    5. 'ay' → logprob: -8.918529510498047
    6. '):
' → logprob: -9.168529510498047
    7. ' ):' → logprob: -9.293529510498047
    8. ':int' → logprob: -9.918529510498047
    9. ' )' → logprob: -10.043529510498047
    10. 'ays' → logprob: -10.293529510498047

Token 14: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01254084799438715
    2. ' int' → logprob: -4.387540817260742
    3. ')' → logprob: -11.137540817260742
    4. '[int' → logprob: -11.762540817260742
    5. ':int' → logprob: -12.887540817260742
    6. '(int' → logprob: -13.262540817260742
    7. 'List' → logprob: -13.637540817260742
    8. 'str' → logprob: -13.637540817260742
    9. 'nt' → logprob: -14.762540817260742
    10. ']int' → logprob: -15.137540817260742

Token 15: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1274188607931137
    2. '):' → logprob: -2.1274187564849854
    3. ',' → logprob: -8.127418518066406
    4. ')->' → logprob: -9.127418518066406
    5. '):
' → logprob: -10.127418518066406
    6. '`)' → logprob: -11.377418518066406
    7. ':' → logprob: -12.002418518066406
    8. '<|end|>' → logprob: -12.627418518066406
    9. '```' → logprob: -12.627418518066406
    10. '   ' → logprob: -12.752418518066406

Token 16: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -4.0484450437361374e-05
    2. '):' → logprob: -11.375040054321289
    3. ':return' → logprob: -11.500040054321289
    4. '':' → logprob: -12.250040054321289
    5. '():' → logprob: -12.875040054321289
    6. ':**' → logprob: -12.875040054321289
    7. ':
' → logprob: -13.625040054321289
    8. ' :' → logprob: -13.750040054321289
    9. '`:' → logprob: -13.750040054321289
    10. '':'' → logprob: -14.000040054321289

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12894970178604126
    2. ' int' → logprob: -2.1289496421813965
    3. ' None' → logprob: -7.2539496421813965
    4. 'bool' → logprob: -7.3789496421813965
    5. 'None' → logprob: -8.128950119018555
    6. ' bool' → logprob: -8.503950119018555
    7. ' str' → logprob: -9.878950119018555
    8. 'str' → logprob: -10.003950119018555
    9. ' list' → logprob: -10.378950119018555
    10. 'list' → logprob: -10.628950119018555

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0802738870552275e-05
    2. ':
' → logprob: -12.12501049041748
    3. ':return' → logprob: -13.50001049041748
    4. '':' → logprob: -13.62501049041748
    5. '):' → logprob: -14.37501049041748
    6. '():' → logprob: -14.50001049041748
    7. ':**' → logprob: -14.75001049041748
    8. ' :' → logprob: -14.87501049041748
    9. '`:' → logprob: -15.62501049041748
    10. '   ' → logprob: -15.75001049041748

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46668189764022827
    2. ':' → logprob: -1.466681957244873
    3. '\n' → logprob: -2.216681957244873
    4. '\' → logprob: -4.966681957244873
    5. ':
' → logprob: -5.216681957244873
    6. '```' → logprob: -5.466681957244873
    7. ' ' → logprob: -5.841681957244873
    8. '
' → logprob: -5.966681957244873
    9. '    ' → logprob: -6.091681957244873
    10. ' 
' → logprob: -6.216681957244873

Token 20: ' return' (ID: 622)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.490103155374527
    2. ' days' → logprob: -1.3651031255722046
    3. ' count' → logprob: -3.990103244781494
    4. ' if' → logprob: -4.115103244781494
    5. ' max' → logprob: -4.240103244781494
    6. 'days' → logprob: -4.240103244781494
    7. '   ' → logprob: -4.365103244781494
    8. 'valid' → logprob: -4.490103244781494
    9. ' 
' → logprob: -4.615103244781494
    10. ' possible' → logprob: -5.115103244781494

Token 21: ' sum' (ID: 4215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.042258504778146744
    2. ' (' → logprob: -4.2922587394714355
    3. ' m' → logprob: -4.7922587394714355
    4. '1' → logprob: -5.0422587394714355
    5. ' d' → logprob: -5.9172587394714355
    6. '0' → logprob: -6.1672587394714355
    7. ' sum' → logprob: -6.4172587394714355
    8. ' len' → logprob: -6.6672587394714355
    9. '32' → logprob: -7.2922587394714355
    10. 'sum' → logprob: -7.5422587394714355

Token 22: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008745286613702774
    2. '((' → logprob: -5.758745193481445
    3. '(d' → logprob: -7.133745193481445
    4. '1' → logprob: -7.133745193481445
    5. '(date' → logprob: -7.383745193481445
    6. '(day' → logprob: -7.508745193481445
    7. '([' → logprob: -7.883745193481445
    8. '(i' → logprob: -7.883745193481445
    9. '(
' → logprob: -8.258745193481445
    10. '(m' → logprob: -8.258745193481445

Token 23: '       ' (ID: 309)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0912327989935875
    2. '   ' → logprob: -3.3412327766418457
    3. ' ' → logprob: -4.091232776641846
    4. '(' → logprob: -4.341232776641846
    5. 'd' → logprob: -5.216232776641846
    6. 'int' → logprob: -6.091232776641846
    7. '(day' → logprob: -6.091232776641846
    8. ' d' → logprob: -6.591232776641846
    9. ' day' → logprob: -7.091232776641846
    10. 'day' → logprob: -7.091232776641846

Token 24: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10211750119924545
    2. '   ' → logprob: -2.6021175384521484
    3. ' ' → logprob: -4.227117538452148
    4. '(' → logprob: -5.602117538452148
    5. 'd' → logprob: -6.727117538452148
    6. 'm' → logprob: -7.352117538452148
    7. 'int' → logprob: -7.602117538452148
    8. '       ' → logprob: -7.602117538452148
    9. '  ' → logprob: -8.352117538452148
    10. '(m' → logprob: -8.477117538452148

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.060495808720588684
    2. '   ' → logprob: -3.3104958534240723
    3. ' ' → logprob: -4.310495853424072
    4. '(' → logprob: -5.310495853424072
    5. 'd' → logprob: -7.185495853424072
    6. 'int' → logprob: -7.185495853424072
    7. 'm' → logprob: -7.810495853424072
    8. '(m' → logprob: -8.310495376586914
    9. '(d' → logprob: -8.560495376586914
    10. '       ' → logprob: -8.685495376586914

Token 26: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02207799255847931
    2. 'for' → logprob: -3.897078037261963
    3. ' if' → logprob: -6.772078037261963
    4. '+' → logprob: -8.897077560424805
    5. ' ' → logprob: -8.897077560424805
    6. ' +' → logprob: -10.022077560424805
    7. 'if' → logprob: -10.397077560424805
    8. ' f' → logprob: -11.397077560424805
    9. '
' → logprob: -11.772077560424805
    10. ')' → logprob: -12.147077560424805

Token 27: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20163464546203613
    2. 'for' → logprob: -1.7016346454620361
    3. '       ' → logprob: -9.576634407043457
    4. '   ' → logprob: -10.076634407043457
    5. ' if' → logprob: -10.076634407043457
    6. '           ' → logprob: -11.201634407043457
    7. 'if' → logprob: -11.451634407043457
    8. '    ' → logprob: -11.451634407043457
    9. '        ' → logprob: -11.576634407043457
    10. ' ' → logprob: -11.576634407043457

Token 28: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28162628412246704
    2. 'for' (adapté à ' for') → logprob: -1.4066262245178223
    3. '       ' → logprob: -8.15662670135498
    4. ' if' → logprob: -10.03162670135498
    5. '        ' → logprob: -10.28162670135498
    6. '           ' → logprob: -10.53162670135498
    7. 'if' → logprob: -10.65662670135498
    8. '   ' → logprob: -10.78162670135498
    9. '
' → logprob: -11.65662670135498
    10. '+' → logprob: -11.78162670135498

Token 29: ' month' (ID: 2944)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48006340861320496
    2. 'month' → logprob: -1.7300634384155273
    3. ' month' → logprob: -2.3550634384155273
    4. ' _' → logprob: -2.9800634384155273
    5. 'day' → logprob: -4.355063438415527
    6. 'm' → logprob: -4.355063438415527
    7. ' day' → logprob: -4.480063438415527
    8. 'year' → logprob: -5.730063438415527
    9. '_month' → logprob: -5.980063438415527
    10. 'y' → logprob: -5.980063438415527

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016311300918459892
    2. ',' → logprob: -4.516311168670654
    3. 'in' → logprob: -5.266311168670654
    4. ',in' → logprob: -11.016311645507812
    5. '_in' → logprob: -11.266311645507812
    6. ' ,' → logprob: -11.391311645507812
    7. 'range' → logprob: -11.641311645507812
    8. ' ' → logprob: -11.766311645507812
    9. 's' → logprob: -11.891311645507812
    10. '	in' → logprob: -12.391311645507812

Token 31: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2811751961708069
    2. 'range' → logprob: -1.406175136566162
    3. ' ' → logprob: -11.28117561340332
    4. '	range' → logprob: -12.28117561340332
    5. '   ' → logprob: -12.78117561340332
    6. '  ' → logprob: -13.28117561340332
    7. '[' → logprob: -13.65617561340332
    8. '(range' → logprob: -14.28117561340332
    9. '```' → logprob: -15.40617561340332
    10. '_range' → logprob: -15.65617561340332

Token 32: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4855663721391466e-05
    2. '1' → logprob: -11.250015258789062
    3. '(m' → logprob: -14.500015258789062
    4. '(
' → logprob: -14.875015258789062
    5. ' ' → logprob: -15.000015258789062
    6. ' (' → logprob: -15.125015258789062
    7. ',' → logprob: -15.500015258789062
    8. ')' → logprob: -16.500015258789062
    9. '   ' → logprob: -17.250015258789062
    10. 's' → logprob: -17.875015258789062

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0037732396740466356
    2. 'm' → logprob: -5.753773212432861
    3. '12' → logprob: -7.628773212432861
    4. ' ' → logprob: -9.62877368927002
    5. '6' → logprob: -11.87877368927002
    6. '3' → logprob: -12.25377368927002
    7. '11' → logprob: -12.50377368927002
    8. '7' → logprob: -12.50377368927002
    9. '4' → logprob: -12.62877368927002
    10. '10' → logprob: -12.75377368927002

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009662496158853173
    2. ' ,' → logprob: -7.0009660720825195
    3. '6' → logprob: -10.87596607208252
    4. ',m' → logprob: -10.87596607208252
    5. '1' → logprob: -12.75096607208252
    6. '2' → logprob: -12.75096607208252
    7. '3' → logprob: -12.87596607208252
    8. 'm' → logprob: -13.25096607208252
    9. '0' → logprob: -13.37596607208252
    10. '36' → logprob: -13.75096607208252

Token 35: ' m' (ID: 284)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.15956833958625793
    2. ' ' → logprob: -2.5345683097839355
    3. 'm' → logprob: -3.0345683097839355
    4. ' m' → logprob: -3.9095683097839355
    5. '1' → logprob: -11.409568786621094
    6. '   ' → logprob: -11.909568786621094
    7. 'month' → logprob: -11.909568786621094
    8. '10' → logprob: -12.034568786621094
    9. '12' → logprob: -12.159568786621094
    10. '14' → logprob: -13.159568786621094

Token 36: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2813396751880646
    2. ' +' → logprob: -1.4063396453857422
    3. ')' → logprob: -8.656339645385742
    4. ' )' → logprob: -12.531339645385742
    5. '2' → logprob: -13.156339645385742
    6. '):' → logprob: -13.156339645385742
    7. '1' → logprob: -13.281339645385742
    8. '+)' → logprob: -13.656339645385742
    9. '):
' → logprob: -13.906339645385742
    10. ')+' → logprob: -13.906339645385742

Token 37: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011048408225178719
    2. ' ' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.386048316955566
    4. ' ' → logprob: -15.886048316955566
    5. '2' → logprob: -16.136049270629883
    6. ')' → logprob: -16.761049270629883
    7. '```' → logprob: -17.073549270629883
    8. '  ' → logprob: -17.261049270629883
    9. '

' → logprob: -18.323549270629883
    10. '0' → logprob: -18.386049270629883

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '2' → logprob: -17.000024795532227
    4. '   ' → logprob: -17.250024795532227
    5. ')' → logprob: -17.750024795532227
    6. '۱' → logprob: -18.375024795532227
    7. '  ' → logprob: -18.687524795532227
    8. '```' → logprob: -18.812524795532227
    9. '0' → logprob: -19.187524795532227
    10. '１' → logprob: -19.375024795532227

Token 39: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06721090525388718
    2. '):' → logprob: -3.0672109127044678
    3. '):
' → logprob: -4.442210674285889
    4. ')
' → logprob: -5.692210674285889
    5. '       ' → logprob: -6.817210674285889
    6. ' )' → logprob: -7.192210674285889
    7. '   ' → logprob: -7.442210674285889
    8. ',' → logprob: -8.067211151123047
    9. '+' → logprob: -8.567211151123047
    10. ' if' → logprob: -9.067211151123047

Token 40: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6355319023132324
    2. ':' → logprob: -2.1355319023132324
    3. '       ' → logprob: -2.1355319023132324
    4. '):' → logprob: -2.2605319023132324
    5. '   ' → logprob: -2.7605319023132324
    6. '):
' → logprob: -3.5105319023132324
    7. '<|end|>' → logprob: -4.135531902313232
    8. ',' → logprob: -5.010531902313232
    9. ':
' → logprob: -5.635531902313232
    10. ' for' → logprob: -6.510531902313232

Token 41: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8924745917320251
    2. '):' → logprob: -1.26747465133667
    3. '       ' → logprob: -2.51747465133667
    4. ':' → logprob: -2.51747465133667
    5. '):
' → logprob: -2.51747465133667
    6. '   ' → logprob: -3.01747465133667
    7. ')
' → logprob: -6.01747465133667
    8. ',' → logprob: -6.14247465133667
    9. 'for' (adapté à ' for') → logprob: -6.26747465133667
    10. ' for' → logprob: -6.39247465133667

Token 42: ' i' (ID: 575)
  Prédit: ' day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.16038203239440918
    2. 'day' → logprob: -1.9103820323944092
    3. 'date' → logprob: -10.160382270812988
    4. ' date' → logprob: -10.285382270812988
    5. ' days' → logprob: -11.160382270812988
    6. 'days' → logprob: -11.285382270812988
    7. 'd' → logprob: -11.535382270812988
    8. '_day' → logprob: -11.660382270812988
    9. ' ' → logprob: -11.785382270812988
    10. 'month' → logprob: -12.285382270812988

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009324637241661549
    2. 'n' → logprob: -5.509324550628662
    3. 'in' → logprob: -5.634324550628662
    4. ',' → logprob: -7.384324550628662
    5. 'd' → logprob: -7.634324550628662
    6. '1' → logprob: -9.25932502746582
    7. '   ' → logprob: -9.25932502746582
    8. ' ' → logprob: -9.38432502746582
    9. 'range' → logprob: -9.50932502746582
    10. 'nd' → logprob: -10.25932502746582

Token 44: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06996655464172363
    2. 'range' → logprob: -2.6949665546417236
    3. ' ' → logprob: -11.569966316223145
    4. '	range' → logprob: -12.069966316223145
    5. '(range' → logprob: -12.319966316223145
    6. '[' → logprob: -12.819966316223145
    7. '  ' → logprob: -12.944966316223145
    8. '   ' → logprob: -13.319966316223145
    9. ' ' → logprob: -13.694966316223145
    10. ' [' → logprob: -14.319966316223145

Token 45: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000685391016304493
    2. '(d' → logprob: -7.875685214996338
    3. '1' → logprob: -8.375685691833496
    4. ' (' → logprob: -9.750685691833496
    5. ' ' → logprob: -11.875685691833496
    6. 'd' → logprob: -12.500685691833496
    7. '(
' → logprob: -13.500685691833496
    8. '(days' → logprob: -13.500685691833496
    9. ' d' → logprob: -13.875685691833496
    10. ',' → logprob: -14.750685691833496

Token 46: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05323374271392822
    2. 'd' → logprob: -3.0532336235046387
    3. '31' → logprob: -5.928233623504639
    4. '32' → logprob: -6.928233623504639
    5. '(' → logprob: -8.053234100341797
    6. ' ' → logprob: -8.678234100341797
    7. '30' → logprob: -8.803234100341797
    8. '28' → logprob: -9.053234100341797
    9. '29' → logprob: -9.678234100341797
    10. '(d' → logprob: -10.053234100341797

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07672248035669327
    2. '8' → logprob: -3.7017223834991455
    3. '9' → logprob: -3.9517223834991455
    4. ' ,' → logprob: -4.826722621917725
    5. ',d' → logprob: -4.826722621917725
    6. '1' → logprob: -5.326722621917725
    7. '0' → logprob: -5.576722621917725
    8. '5' → logprob: -6.201722621917725
    9. '7' → logprob: -7.451722621917725
    10. '6' → logprob: -7.451722621917725

Token 48: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05419403314590454
    2. ' d' → logprob: -3.4291939735412598
    3. '32' → logprob: -4.42919397354126
    4. '31' → logprob: -6.05419397354126
    5. '29' → logprob: -6.17919397354126
    6. 'm' → logprob: -6.67919397354126
    7. '30' → logprob: -7.67919397354126
    8. ' m' → logprob: -7.92919397354126
    9. ' ' → logprob: -8.054194450378418
    10. 'month' → logprob: -8.429194450378418

Token 49: '10' (ID: 702)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05346282944083214
    2. '32' → logprob: -3.8034627437591553
    3. '9' → logprob: -4.928462982177734
    4. '8' → logprob: -5.303462982177734
    5. ' d' → logprob: -5.553462982177734
    6. '31' → logprob: -5.803462982177734
    7. 'm' → logprob: -5.928462982177734
    8. '29' → logprob: -6.053462982177734
    9. 'month' → logprob: -6.428462982177734
    10. '30' → logprob: -7.178462982177734

Token 50: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014096158556640148
    2. '):' → logprob: -4.639096260070801
    3. '):
' → logprob: -5.764096260070801
    4. '0' → logprob: -7.764096260070801
    5. ' )' → logprob: -8.0140962600708
    6. '):
' → logprob: -8.5140962600708
    7. ')
' → logprob: -9.0140962600708
    8. '+' → logprob: -10.3890962600708
    9. '))' → logprob: -10.7640962600708
    10. '1' → logprob: -11.5140962600708

Token 51: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7090628147125244
    2. ')' → logprob: -1.4590628147125244
    3. ' if' → logprob: -2.0840628147125244
    4. '       ' → logprob: -2.3340628147125244
    5. ':
' → logprob: -4.334062576293945
    6. '):' → logprob: -4.459062576293945
    7. '   ' → logprob: -4.709062576293945
    8. 'if' → logprob: -5.084062576293945
    9. '+' → logprob: -5.459062576293945
    10. '):
' → logprob: -6.334062576293945

Token 52: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5498020648956299
    2. ')' → logprob: -1.7998020648956299
    3. ':
' → logprob: -2.29980206489563
    4. ' if' → logprob: -2.79980206489563
    5. '       ' → logprob: -3.67480206489563
    6. 'if' (adapté à ' if') → logprob: -3.79980206489563
    7. '):' → logprob: -4.424801826477051
    8. ')
' → logprob: -4.924801826477051
    9. '   ' → logprob: -5.049801826477051
    10. '0' → logprob: -5.299801826477051

Token 53: ' month' (ID: 2944)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.4706624746322632
    2. ' i' → logprob: -1.7206624746322632
    3. ' d' → logprob: -1.8456624746322632
    4. 'd' → logprob: -1.9706624746322632
    5. ' str' → logprob: -2.2206625938415527
    6. ' int' → logprob: -3.3456625938415527
    7. 'i' → logprob: -3.3456625938415527
    8. '(i' → logprob: -3.5956625938415527
    9. 'str' → logprob: -3.8456625938415527
    10. '(str' → logprob: -3.9706625938415527

Token 54: ' %' (ID: 1851)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6592233777046204
    2. ' ==' → logprob: -0.9092233777046204
    3. '%' → logprob: -3.5342233180999756
    4. '*' → logprob: -3.7842233180999756
    5. ' %' → logprob: -4.409223556518555
    6. ' *' → logprob: -5.034223556518555
    7. '<=' → logprob: -5.909223556518555
    8. ' <=' → logprob: -6.909223556518555
    9. '*i' → logprob: -6.909223556518555
    10. '=' → logprob: -7.409223556518555

Token 55: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1136116310954094
    2. ' i' → logprob: -2.2386116981506348
    3. '2' → logprob: -7.488611698150635
    4. ' ' → logprob: -9.488611221313477
    5. '3' → logprob: -10.363611221313477
    6. '10' → logprob: -10.738611221313477
    7. '6' → logprob: -10.738611221313477
    8. 'd' → logprob: -10.863611221313477
    9. '7' → logprob: -11.113611221313477
    10. '1' → logprob: -11.613611221313477

Token 56: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07946083694696426
    2. ' ==' → logprob: -2.579460859298706
    3. '=' → logprob: -8.079461097717285
    4. '!=' → logprob: -9.204461097717285
    5. ')' → logprob: -9.704461097717285
    6. ' !=' → logprob: -10.579461097717285
    7. ')==' → logprob: -11.079461097717285
    8. ' ' → logprob: -11.454461097717285
    9. '===' → logprob: -11.454461097717285
    10. '0' → logprob: -11.579461097717285

Token 57: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6040753722190857
    2. '0' → logprob: -0.8540753722190857
    3. ' ' → logprob: -4.2290754318237305
    4. ' d' → logprob: -4.4790754318237305
    5. 'i' → logprob: -6.9790754318237305
    6. '1' → logprob: -7.4790754318237305
    7. ' i' → logprob: -8.85407543182373
    8. '2' → logprob: -9.35407543182373
    9. '3' → logprob: -10.60407543182373
    10. 'm' → logprob: -11.60407543182373

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5783971548080444
    2. 'd' → logprob: -0.8283971548080444
    3. ' ' → logprob: -7.078397274017334
    4. 'i' → logprob: -7.078397274017334
    5. ' d' → logprob: -7.953397274017334
    6. '1' → logprob: -8.078396797180176
    7. '2' → logprob: -10.328396797180176
    8. '3' → logprob: -10.953396797180176
    9. 'm' → logprob: -11.640896797180176
    10. ' i' → logprob: -12.265896797180176

Token 59: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06719609349966049
    2. ')' → logprob: -3.5671961307525635
    3. 'and' → logprob: -3.5671961307525635
    4. '       ' → logprob: -4.942195892333984
    5. ' or' → logprob: -7.317195892333984
    6. '   ' → logprob: -8.067195892333984
    7. ' )' → logprob: -9.192195892333984
    8. '           ' → logprob: -10.067195892333984
    9. '        ' → logprob: -10.192195892333984
    10. '),' → logprob: -10.192195892333984

Token 60: ' ' (ID: 220)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1568034589290619
    2. 'd' → logprob: -2.0318033695220947
    3. ' i' → logprob: -4.781803607940674
    4. ' (' → logprob: -6.031803607940674
    5. 'i' → logprob: -7.031803607940674
    6. ' day' → logprob: -7.281803607940674
    7. ' month' → logprob: -7.906803607940674
    8. '(d' → logprob: -7.906803607940674
    9. '       ' → logprob: -8.531803131103516
    10. ' ' → logprob: -8.906803131103516

Token 61: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13529528677463531
    2. ' d' → logprob: -2.2602953910827637
    3. 'i' → logprob: -4.885295391082764
    4. ' i' → logprob: -4.885295391082764
    5. '(d' → logprob: -6.135295391082764
    6. ' (' → logprob: -6.385295391082764
    7. '(i' → logprob: -6.510295391082764
    8. ' day' → logprob: -8.010294914245605
    9. 'month' → logprob: -8.135294914245605
    10. '   ' → logprob: -8.510294914245605

Token 62: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2866058647632599
    2. '<=' → logprob: -1.4116058349609375
    3. '0' → logprob: -6.0366058349609375
    4. ' ' → logprob: -7.0366058349609375
    5. '==' → logprob: -7.5366058349609375
    6. ' ==' → logprob: -8.286605834960938
    7. ' <' → logprob: -8.411605834960938
    8. '<' → logprob: -8.911605834960938
    9. ')' → logprob: -9.036605834960938
    10. '1' → logprob: -9.036605834960938

Token 63: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1379234939813614
    2. '=' → logprob: -2.3879234790802
    3. ' d' → logprob: -3.5129234790802
    4. '=d' → logprob: -5.262923717498779
    5. 'i' → logprob: -7.012923717498779
    6. ' i' → logprob: -7.637923717498779
    7. '=i' → logprob: -8.512923240661621
    8. ' =' → logprob: -8.762923240661621
    9. 'month' → logprob: -9.887923240661621
    10. ' ' → logprob: -10.137923240661621

Token 64: 'div' (ID: 862)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.013292583636939526
    2. ' d' → logprob: -4.3882927894592285
    3. 'i' → logprob: -8.01329231262207
    4. ' i' → logprob: -9.01329231262207
    5. 'month' → logprob: -9.51329231262207
    6. 'day' → logprob: -9.76329231262207
    7. ' ' → logprob: -9.88829231262207
    8. '=' → logprob: -10.26329231262207
    9. '
' → logprob: -10.88829231262207
    10. '   ' → logprob: -11.51329231262207

Token 65: ' :=' (ID: 3405)
  Prédit: 'isor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.21934160590171814
    2. 's' → logprob: -2.219341516494751
    3. 'd' → logprob: -3.719341516494751
    4. 'm' → logprob: -4.59434175491333
    5. 'month' → logprob: -4.71934175491333
    6. 'is' → logprob: -5.21934175491333
    7. 'idend' → logprob: -5.21934175491333
    8. 'ision' → logprob: -5.46934175491333
    9. 'mod' → logprob: -5.46934175491333
    10. 'isible' → logprob: -5.59434175491333

Token 66: ' month' (ID: 2944)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5380217432975769
    2. 'd' → logprob: -0.9130217432975769
    3. ' month' → logprob: -5.538021564483643
    4. 'month' → logprob: -5.538021564483643
    5. ' m' → logprob: -6.038021564483643
    6. 'm' → logprob: -6.413021564483643
    7. ' ' → logprob: -7.288021564483643
    8. ' day' → logprob: -7.538021564483643
    9. ' i' → logprob: -7.538021564483643
    10. ' (' → logprob: -7.663021564483643

Token 67: ' //' (ID: 602)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.22050072252750397
    2. '%' → logprob: -1.8455007076263428
    3. '%d' → logprob: -3.5955007076263428
    4. ')' → logprob: -5.720500946044922
    5. ' //' → logprob: -5.845500946044922
    6. ' ' → logprob: -6.095500946044922
    7. '%i' → logprob: -6.970500946044922
    8. 'd' → logprob: -7.345500946044922
    9. 'div' → logprob: -7.595500946044922
    10. ' ' → logprob: -7.970500946044922

Token 68: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002966127940453589
    2. 'd' → logprob: -8.625296592712402
    3. ' i' → logprob: -9.125296592712402
    4. ' ' → logprob: -13.125296592712402
    5. '   ' → logprob: -13.125296592712402
    6. '2' → logprob: -13.625296592712402
    7. 'div' → logprob: -13.875296592712402
    8. '  ' → logprob: -14.000296592712402
    9. '	i' → logprob: -16.12529754638672
    10. '```' → logprob: -16.37529754638672

Token 69: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007344419602304697
    2. ' )' → logprob: -5.0073442459106445
    3. '       ' → logprob: -8.882344245910645
    4. ' and' → logprob: -9.007344245910645
    5. '   ' → logprob: -9.507344245910645
    6. ')
' → logprob: -10.257344245910645
    7. 'and' → logprob: -10.382344245910645
    8. ')d' → logprob: -10.757344245910645
    9. ')<=' → logprob: -11.007344245910645
    10. ' ' → logprob: -11.007344245910645

Token 70: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.44675928354263306
    2. '<=' → logprob: -1.4467592239379883
    3. ' and' → logprob: -2.5717592239379883
    4. ')' → logprob: -3.5717592239379883
    5. 'and' → logprob: -5.071759223937988
    6. '==' → logprob: -5.196759223937988
    7. ' ==' → logprob: -5.196759223937988
    8. ')<=' → logprob: -6.321759223937988
    9. ' ' → logprob: -7.571759223937988
    10. '<|end|>' → logprob: -8.446759223937988

Token 71: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20636942982673645
    2. 'd' → logprob: -1.831369400024414
    3. '=d' → logprob: -4.081369400024414
    4. ' d' → logprob: -5.081369400024414
    5. ' =' → logprob: -7.331369400024414
    6. '10' → logprob: -7.456369400024414
    7. '=m' → logprob: -7.581369400024414
    8. 'm' → logprob: -7.581369400024414
    9. '31' → logprob: -9.081369400024414
    10. '13' → logprob: -9.456369400024414

Token 72: '10' (ID: 702)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3601553440093994
    2. '=' → logprob: -1.2351553440093994
    3. '10' → logprob: -4.86015510559082
    4. 'm' → logprob: -6.86015510559082
    5. '13' → logprob: -7.11015510559082
    6. '=d' → logprob: -7.23515510559082
    7. ' d' → logprob: -8.11015510559082
    8. '31' → logprob: -8.48515510559082
    9. '32' → logprob: -8.86015510559082
    10. ' ' → logprob: -9.11015510559082

Token 73: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.29284611344337463
    2. '       ' → logprob: -2.042846202850342
    3. 'and' → logprob: -2.792846202850342
    4. ')' → logprob: -2.792846202850342
    5. '   ' → logprob: -7.417846202850342
    6. ' )' → logprob: -8.042845726013184
    7. '):' → logprob: -8.667845726013184
    8. '           ' → logprob: -8.917845726013184
    9. ')
' → logprob: -9.542845726013184
    10. '<|end|>' → logprob: -9.667845726013184

Token 74: ' i' (ID: 575)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.15751901268959045
    2. 'd' → logprob: -2.1575191020965576
    3. 'i' → logprob: -4.4075188636779785
    4. '           ' → logprob: -4.9075188636779785
    5. ' div' → logprob: -5.0325188636779785
    6. '       ' → logprob: -6.7825188636779785
    7. ' i' → logprob: -7.0325188636779785
    8. ' d' → logprob: -7.2825188636779785
    9. '   ' → logprob: -8.157519340515137
    10. '(div' → logprob: -8.657519340515137

Token 75: ' *' (ID: 425)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3375746011734009
    2. '==' → logprob: -1.4625746011734009
    3. ' *' → logprob: -3.5875744819641113
    4. '*' → logprob: -3.7125744819641113
    5. ' <=' → logprob: -6.962574481964111
    6. '<=' → logprob: -7.337574481964111
    7. ' ' → logprob: -8.46257495880127
    8. ' and' → logprob: -8.58757495880127
    9. '+' → logprob: -8.83757495880127
    10. '=' → logprob: -9.08757495880127

Token 76: ' ' (ID: 220)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.6415541172027588
    2. 'd' → logprob: -0.7665541172027588
    3. '10' → logprob: -5.39155387878418
    4. '==' → logprob: -6.26655387878418
    5. '=' → logprob: -7.01655387878418
    6. ' div' → logprob: -7.39155387878418
    7. ' d' → logprob: -8.26655387878418
    8. ' ==' → logprob: -8.64155387878418
    9. '9' → logprob: -8.76655387878418
    10. '100' → logprob: -9.39155387878418

Token 77: '10' (ID: 702)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0008665603818371892
    2. 'd' → logprob: -7.500866413116455
    3. '10' → logprob: -8.875866889953613
    4. ' div' → logprob: -9.000866889953613
    5. '(div' → logprob: -10.500866889953613
    6. '	div' → logprob: -11.625866889953613
    7. '9' → logprob: -12.375866889953613
    8. '<div' → logprob: -13.250866889953613
    9. '   ' → logprob: -13.625866889953613
    10. 'month' → logprob: -13.625866889953613

Token 78: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5807743668556213
    2. '+' → logprob: -0.8307743668556213
    3. '<=' → logprob: -5.955774307250977
    4. ' <=' → logprob: -6.205774307250977
    5. '+d' → logprob: -8.955774307250977
    6. 'd' → logprob: -10.830774307250977
    7. '==' → logprob: -11.205774307250977
    8. '+i' → logprob: -11.455774307250977
    9. 'div' → logprob: -11.955774307250977
    10. ' ==' → logprob: -12.080774307250977

Token 79: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.00010986098641296849
    2. ' div' → logprob: -9.125109672546387
    3. '	div' → logprob: -14.625109672546387
    4. '(div' → logprob: -15.000109672546387
    5. '<div' → logprob: -16.125110626220703
    6. '           ' → logprob: -18.625110626220703
    7. '   ' → logprob: -18.625110626220703
    8. 'd' → logprob: -18.625110626220703
    9. '```' → logprob: -19.625110626220703
    10. '       ' → logprob: -19.750110626220703

Token 80: ' <=' (ID: 5017)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3881569802761078
    2. ' ==' → logprob: -1.6381570100784302
    3. '<=' → logprob: -2.6381568908691406
    4. ' <=' → logprob: -2.8881568908691406
    5. '=' → logprob: -9.51315689086914
    6. ' ' → logprob: -9.88815689086914
    7. '==
' → logprob: -11.63815689086914
    8. ')' → logprob: -11.88815689086914
    9. '()==' → logprob: -12.01315689086914
    10. '===' → logprob: -12.38815689086914

Token 81: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003765166737139225
    2. ' d' → logprob: -5.628765106201172
    3. 'm' → logprob: -9.753765106201172
    4. '30' → logprob: -10.503765106201172
    5. '31' → logprob: -10.628765106201172
    6. '	d' → logprob: -11.378765106201172
    7. '   ' → logprob: -11.628765106201172
    8. ' ' → logprob: -11.878765106201172
    9. '10' → logprob: -12.128765106201172
    10. '100' → logprob: -13.128765106201172

Token 82: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005127022974193096
    2. '       ' → logprob: -5.880126953125
    3. '   ' → logprob: -6.130126953125
    4. ')
' → logprob: -9.380126953125
    5. ' )' → logprob: -10.505126953125
    6. '      ' → logprob: -12.505126953125
    7. '  ' → logprob: -12.630126953125
    8. '),' → logprob: -12.755126953125
    9. '           ' → logprob: -12.880126953125
    10. '    ' → logprob: -13.380126953125

Token 83: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005855606868863106
    2. '   ' → logprob: -7.625585556030273
    3. '       ' → logprob: -9.625585556030273
    4. ')
' → logprob: -10.750585556030273
    5. ' )' → logprob: -12.500585556030273
    6. '),' → logprob: -13.125585556030273
    7. ')

' → logprob: -14.125585556030273
    8. '))' → logprob: -14.625585556030273
    9. ')return' → logprob: -14.625585556030273
    10. ')`' → logprob: -14.750585556030273

Token 84: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.0126840758603066e-05
    2. '   ' → logprob: -10.875040054321289
    3. ' )' → logprob: -11.375040054321289
    4. ')
' → logprob: -12.000040054321289
    5. ')return' → logprob: -13.750040054321289
    6. '       ' → logprob: -14.000040054321289
    7. ')

' (adapté à ' )

') → logprob: -15.000040054321289
    8. ')`' → logprob: -15.500040054321289
    9. '))' → logprob: -15.750040054321289
    10. '<|end|>' → logprob: -16.00004005432129

Token 85: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10022544115781784
    2. '__' → logprob: -2.3502254486083984
    3. 'name' → logprob: -12.100225448608398
    4. ' ' → logprob: -12.600225448608398
    5. '_name' → logprob: -12.725225448608398
    6. '_' → logprob: -12.725225448608398
    7. ' ' → logprob: -12.850225448608398
    8. '___' → logprob: -14.975225448608398
    9. ' name' → logprob: -15.100225448608398
    10. '/__' → logprob: -15.975225448608398

Token 87: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.21639806032180786
    2. '==' → logprob: -2.466398000717163
    3. ' ==' → logprob: -2.591398000717163
    4. 'name' → logprob: -3.591398000717163
    5. ' __' → logprob: -5.966398239135742
    6. '.__' → logprob: -6.341398239135742
    7. '.name' → logprob: -7.091398239135742
    8. '=="' → logprob: -7.591398239135742
    9. '__.__' → logprob: -7.841398239135742
    10. '_' → logprob: -8.466398239135742

Token 88: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0001490716531407088
    2. '__.__' → logprob: -9.12514877319336
    3. '==' → logprob: -11.62514877319336
    4. '__["' → logprob: -11.87514877319336
    5. '_' → logprob: -12.00014877319336
    6. ' ==' → logprob: -12.62514877319336
    7. '___' → logprob: -13.00014877319336
    8. '=="' → logprob: -13.25014877319336
    9. '__.' → logprob: -13.25014877319336
    10. '__('' → logprob: -13.62514877319336

Token 89: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07490557432174683
    2. '==' → logprob: -3.3249056339263916
    3. '__' → logprob: -3.3249056339263916
    4. '=="' → logprob: -8.824905395507812
    5. ' =' → logprob: -11.324905395507812
    6. ' ' → logprob: -11.324905395507812
    7. '_' → logprob: -11.574905395507812
    8. '=='' → logprob: -11.574905395507812
    9. ' =="' → logprob: -11.949905395507812
    10. '=' → logprob: -12.324905395507812

Token 90: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0457422249019146
    2. ''' → logprob: -3.1707422733306885
    3. ' "__' → logprob: -5.920742034912109
    4. '__' → logprob: -10.42074203491211
    5. ' '__' → logprob: -11.04574203491211
    6. ' "' → logprob: -12.04574203491211
    7. '"_' → logprob: -13.79574203491211
    8. '"name' → logprob: -14.29574203491211
    9. ' ' → logprob: -14.54574203491211
    10. '"user' → logprob: -15.04574203491211

Token 91: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0001415618316968903
    2. '_main' → logprob: -9.625141143798828
    3. '__' → logprob: -9.750141143798828
    4. 'm' → logprob: -11.625141143798828
    5. ' main' → logprob: -12.750141143798828
    6. 'name' → logprob: -13.125141143798828
    7. 'py' → logprob: -14.500141143798828
    8. '```' → logprob: -14.750141143798828
    9. '	main' → logprob: -15.125141143798828
    10. 'built' → logprob: -15.500141143798828

Token 92: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.12697115540504456
    2. '__' → logprob: -2.1269712448120117
    3. '__':
' → logprob: -10.251971244812012
    4. '__:' → logprob: -12.376971244812012
    5. '_' → logprob: -12.626971244812012
    6. '__["' → logprob: -15.876971244812012
    7. '__
' → logprob: -17.126970291137695
    8. '__",' → logprob: -17.126970291137695
    9. '___' → logprob: -17.251970291137695
    10. '__("' → logprob: -17.626970291137695

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5182220339775085
    2. '<|end|>' → logprob: -1.1432220935821533
    3. '(stdin' → logprob: -3.1432220935821533
    4. ' stdin' → logprob: -4.393221855163574
    5. '    
' → logprob: -5.393221855163574
    6. 'stdin' → logprob: -5.518221855163574
    7. '<|end|>' → logprob: -5.768221855163574
    8. '```' → logprob: -5.893221855163574
    9. ' 
' → logprob: -6.393221855163574
    10. ' input' → logprob: -6.393221855163574

Token 94: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.030871164053678513
    2. ' m' → logprob: -3.5308711528778076
    3. 'import' → logprob: -7.530871391296387
    4. '   ' → logprob: -8.280871391296387
    5. 'n' → logprob: -9.405871391296387
    6. 'print' → logprob: -9.530871391296387
    7. ' import' → logprob: -10.780871391296387
    8. 'M' → logprob: -11.030871391296387
    9. 'input' → logprob: -11.280871391296387
    10. ' n' → logprob: -11.280871391296387

Token 95: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23757107555866241
    2. ',' → logprob: -1.612571120262146
    3. '=' → logprob: -4.8625712394714355
    4. ' ,' → logprob: -5.4875712394714355
    5. ' ' → logprob: -8.612570762634277
    6. '  ' → logprob: -11.737570762634277
    7. 's' → logprob: -12.362570762634277
    8. '.' → logprob: -12.737570762634277
    9. '=int' → logprob: -12.862570762634277
    10. ',s' → logprob: -13.487570762634277

Token 96: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5759807229042053
    2. ' d' → logprob: -0.8259807229042053
    3. ' ' → logprob: -10.450981140136719
    4. '  ' → logprob: -12.700981140136719
    5. '*d' → logprob: -12.950981140136719
    6. '_d' → logprob: -13.200981140136719
    7. '	d' → logprob: -13.575981140136719
    8. ' ' → logprob: -13.950981140136719
    9. '    ' → logprob: -14.325981140136719
    10. '   ' → logprob: -14.950981140136719

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197709962725639
    2. '=' → logprob: -2.8119771480560303
    3. ',' → logprob: -12.43697738647461
    4. ' ' → logprob: -12.56197738647461
    5. '<|end|>' → logprob: -14.81197738647461
    6. ' =
' → logprob: -15.06197738647461
    7. '=input' → logprob: -15.56197738647461
    8. ' ' → logprob: -15.68697738647461
    9. '=

' → logprob: -15.93697738647461
    10. ' =
' → logprob: -16.06197738647461

Token 98: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4742608666419983
    2. ' map' → logprob: -0.9742608666419983
    3. '   ' → logprob: -8.724261283874512
    4. '[' → logprob: -12.099261283874512
    5. ' ' → logprob: -12.474261283874512
    6. '(map' → logprob: -12.474261283874512
    7. '  ' → logprob: -12.849261283874512
    8. '	map' → logprob: -13.349261283874512
    9. '    ' → logprob: -13.974261283874512
    10. 'int' → logprob: -13.974261283874512

Token 99: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0014858200447633862
    2. '(' → logprob: -7.126485824584961
    3. '(stdin' → logprob: -7.376485824584961
    4. 'int' → logprob: -11.251485824584961
    5. '(str' → logprob: -11.376485824584961
    6. '<int' → logprob: -11.501485824584961
    7. '(list' → logprob: -11.626485824584961
    8. '(map' → logprob: -12.501485824584961
    9. '[int' → logprob: -13.251485824584961
    10. '(lambda' → logprob: -13.501485824584961

Token 100: ',' (ID: 11)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.0003594184236135334
    2. 'stdin' → logprob: -8.375359535217285
    3. ',' → logprob: -9.125359535217285
    4. '(' → logprob: -11.625359535217285
    5. ')' → logprob: -12.750359535217285
    6. '(std' → logprob: -13.000359535217285
    7. ' stdin' → logprob: -13.625359535217285
    8. '.stdin' → logprob: -14.000359535217285
    9. ')(' → logprob: -14.125359535217285
    10. '(st' → logprob: -14.750359535217285

Token 101: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.22663265466690063
    2. ' stdin' → logprob: -1.6016325950622559
    3. '(stdin' → logprob: -6.851632595062256
    4. ')' → logprob: -9.726633071899414
    5. '.stdin' → logprob: -9.851633071899414
    6. '   ' → logprob: -10.226633071899414
    7. 'st' → logprob: -13.226633071899414
    8. '    ' → logprob: -13.226633071899414
    9. 'std' → logprob: -13.351633071899414
    10. ' ' → logprob: -13.476633071899414

Token 102: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.01820426434278488
    2. '().' → logprob: -4.018204212188721
    3. '.read' → logprob: -10.393204689025879
    4. '.' → logprob: -10.768204689025879
    5. '.readlines' → logprob: -13.768204689025879
    6. ' .' → logprob: -14.268204689025879
    7. '()' → logprob: -15.143204689025879
    8. ' readline' → logprob: -15.518204689025879
    9. ').' → logprob: -15.768204689025879
    10. 'read' → logprob: -16.018203735351562

Token 103: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003554847207851708
    2. '())' → logprob: -8.37535572052002
    3. '()' → logprob: -9.00035572052002
    4. ' ().' → logprob: -14.00035572052002
    5. ')' → logprob: -15.12535572052002
    6. '(' → logprob: -15.50035572052002
    7. '()[' → logprob: -16.000354766845703
    8. ' ())' → logprob: -17.500354766845703
    9. '()
' → logprob: -17.625354766845703
    10. ' ()' → logprob: -17.625354766845703

Token 104: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.4742099940776825
    2. 'split' → logprob: -0.9742100238800049
    3. 'rstrip' → logprob: -8.974209785461426
    4. 'read' → logprob: -12.474209785461426
    5. ' split' → logprob: -13.974209785461426
    6. '(split' → logprob: -14.349209785461426
    7. ' strip' → logprob: -14.724209785461426
    8. '().' → logprob: -15.599209785461426
    9. '(strip' → logprob: -15.724209785461426
    10. '```' → logprob: -16.599210739135742

Token 105: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01824921742081642
    2. '()' → logprob: -4.143249034881592
    3. ')' → logprob: -6.143249034881592
    4. '()))' → logprob: -10.64324951171875
    5. '())
' → logprob: -11.01824951171875
    6. ' ())' → logprob: -11.64324951171875
    7. '(' → logprob: -12.14324951171875
    8. '(),' → logprob: -13.14324951171875
    9. '()]' → logprob: -13.39324951171875
    10. '('' → logprob: -13.76824951171875

Token 106: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.313949316740036
    2. '   ' → logprob: -1.3139493465423584
    3. ' print' → logprob: -7.938949108123779
    4. '<|end|>' → logprob: -8.313949584960938
    5. '	print' → logprob: -9.813949584960938
    6. '(print' → logprob: -11.563949584960938
    7. '    
' → logprob: -12.188949584960938
    8. '```' → logprob: -12.438949584960938
    9. '
' → logprob: -12.563949584960938
    10. '#print' → logprob: -12.813949584960938

Token 107: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -15.5
    3. ' print' → logprob: -16.625
    4. '```' → logprob: -20.5
    5. 'result' → logprob: -21.0
    6. 'pr' → logprob: -21.375
    7. 'prin' → logprob: -21.5
    8. '
' → logprob: -21.75
    9. 'printf' → logprob: -21.875
    10. '    
' → logprob: -21.875

Token 108: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.004084216430783272
    2. '(' → logprob: -5.50408411026001
    3. '(
' → logprob: -12.129084587097168
    4. 'count' → logprob: -15.254084587097168
    5. '(

' → logprob: -16.62908363342285
    6. '((' → logprob: -16.62908363342285
    7. '=count' → logprob: -17.12908363342285
    8. '(f' → logprob: -17.62908363342285
    9. '<count' → logprob: -17.75408363342285
    10. '(call' → logprob: -17.75408363342285

Token 109: '_dates' (ID: 118283)
  Prédit: '_dates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dates' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.000000953674316
    3. '_days' → logprob: -16.000001907348633
    4. ' _' → logprob: -16.250001907348633
    5. ')_' → logprob: -17.000001907348633
    6. '_prices' → logprob: -17.500001907348633
    7. '_date' → logprob: -17.625001907348633
    8. '_codes' → logprob: -18.125001907348633
    9. 'dates' → logprob: -18.375001907348633
    10. '_ranges' → logprob: -18.500001907348633

Token 110: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -5.204720582696609e-05
    2. '(' → logprob: -10.125052452087402
    3. ' (' → logprob: -11.750052452087402
    4. ')' → logprob: -13.000052452087402
    5. ')(' → logprob: -13.625052452087402
    6. '(
' → logprob: -14.875052452087402
    7. '((' → logprob: -16.375051498413086
    8. ')m' → logprob: -16.875051498413086
    9. ' ' → logprob: -18.375051498413086
    10. '   ' → logprob: -18.375051498413086

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009217040496878326
    2. ',d' → logprob: -7.625921726226807
    3. ' ,' → logprob: -7.750921726226807
    4. 'd' → logprob: -13.250921249389648
    5. '   ' → logprob: -14.500921249389648
    6. ' ' → logprob: -14.750921249389648
    7. ',
' → logprob: -15.500921249389648
    8. ' d' → logprob: -16.62592124938965
    9. '`,' → logprob: -17.00092124938965
    10. '',' → logprob: -17.12592124938965

Token 112: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5759417414665222
    2. 'd' → logprob: -0.8259417414665222
    3. ' ' → logprob: -13.825942039489746
    4. ' ' → logprob: -14.950942039489746
    5. ')d' → logprob: -15.200942039489746
    6. '   ' → logprob: -15.575942039489746
    7. '	d' → logprob: -15.575942039489746
    8. '    ' → logprob: -16.07594108581543
    9. ')' → logprob: -16.32594108581543
    10. '  ' → logprob: -17.07594108581543

Token 113: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02975442260503769
    2. ')' → logprob: -3.529754400253296
    3. '))
' → logprob: -12.904754638671875
    4. ')))' → logprob: -14.404754638671875
    5. '()))' → logprob: -15.279754638671875
    6. '())' → logprob: -15.404754638671875
    7. ')
' → logprob: -15.779754638671875
    8. ' ))' → logprob: -15.904754638671875
    9. '()' → logprob: -16.529754638671875
    10. '})' → logprob: -17.154754638671875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 111
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 88
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 35.14%
Précision (top 10): 79.28%
================================================================================
