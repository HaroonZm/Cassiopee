================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:15:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
from itertools import product

x = int(stdin.readline())

powers = {i: i**5 for i in range(-1000, 1000)}
pow_inv = {v: i for i, v in powers.items()}

for a in range(-1000, 1000):
    b5 = a**5 - x
    if b5 in pow_inv:
        print(a, pow_inv[b5])
        break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.4016507863998413
    2. 'exit' → logprob: -1.7766507863998413
    3. ' exit' → logprob: -2.401650905609131
    4. ' argv' → logprob: -2.901650905609131
    5. 'import' → logprob: -4.526650905609131
    6. 'stdout' → logprob: -5.901650905609131
    7. 'path' → logprob: -7.026650905609131
    8. ' import' → logprob: -7.401650905609131
    9. 'stdin' → logprob: -7.776650905609131
    10. 'version' → logprob: -8.526650428771973

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002954404568299651
    2. '\n' → logprob: -6.752954483032227
    3. '.readline' → logprob: -6.752954483032227
    4. '.read' → logprob: -9.002954483032227
    5. 'import' → logprob: -9.127954483032227
    6. '\' → logprob: -9.627954483032227
    7. '.
' → logprob: -9.752954483032227
    8. '
' → logprob: -9.877954483032227
    9. '```' → logprob: -10.002954483032227
    10. 'newline' → logprob: -10.502954483032227

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20828577876091003
    2. '.readline' → logprob: -2.2082858085632324
    3. '\n' → logprob: -3.2082858085632324
    4. 'newline' → logprob: -4.583285808563232
    5. '
' → logprob: -4.708285808563232
    6. 'import' → logprob: -5.708285808563232
    7. '.read' → logprob: -5.833285808563232
    8. 'print' → logprob: -5.958285808563232
    9. '```' → logprob: -5.958285808563232
    10. '\' → logprob: -6.583285808563232

Token 6: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.033909738063812256
    2. ' sys' → logprob: -3.783909797668457
    3. ' io' → logprob: -4.783909797668457
    4. ' math' → logprob: -7.283909797668457
    5. ' typing' → logprob: -7.658909797668457
    6. 'os' → logprob: -7.908909797668457
    7. ' stdout' → logprob: -9.033909797668457
    8. ' itertools' → logprob: -9.033909797668457
    9. ' subprocess' → logprob: -9.283909797668457
    10. ' space' → logprob: -9.408909797668457

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.016087982803583145
    2. 'import' → logprob: -4.141088008880615
    3. '	import' → logprob: -10.766087532043457
    4. ' ' → logprob: -11.016087532043457
    5. '_import' → logprob: -11.891087532043457
    6. '<|end|>' → logprob: -13.141087532043457
    7. ' itertools' → logprob: -13.641087532043457
    8. '.' → logprob: -13.766087532043457
    9. '.import' → logprob: -14.141087532043457
    10. ' im' → logprob: -14.766087532043457

Token 8: ' product' (ID: 1888)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6359982490539551
    2. 'count' → logprob: -1.885998249053955
    3. 'per' → logprob: -2.010998249053955
    4. 'product' → logprob: -3.010998249053955
    5. 'group' → logprob: -3.385998249053955
    6. ' permutations' → logprob: -3.510998249053955
    7. 'chain' → logprob: -3.885998249053955
    8. 'import' → logprob: -4.385998249053955
    9. 'cycle' → logprob: -4.385998249053955
    10. 'com' → logprob: -4.510998249053955

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1307665854692459
    2. '\n' → logprob: -3.0057666301727295
    3. '(
' → logprob: -3.2557666301727295
    4. 'newline' → logprob: -4.25576639175415
    5. 'for' → logprob: -5.13076639175415
    6. '.' → logprob: -5.50576639175415
    7. '\' → logprob: -6.00576639175415
    8. '(

' → logprob: -6.50576639175415
    9. '
' → logprob: -6.50576639175415
    10. '\(' → logprob: -6.75576639175415

Token 10: 'x' (ID: 87)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22011157870292664
    2. 'for' → logprob: -1.845111608505249
    3. 'a' → logprob: -4.97011137008667
    4. '.' → logprob: -4.97011137008667
    5. '(
' → logprob: -5.47011137008667
    6. '\' → logprob: -5.72011137008667
    7. '`' → logprob: -6.34511137008667
    8. '\n' → logprob: -6.47011137008667
    9. 'def' → logprob: -6.59511137008667
    10. '\(' → logprob: -6.59511137008667

Token 11: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8437211513519287
    2. ' =' → logprob: -0.8437211513519287
    3. '=' → logprob: -2.4687211513519287
    4. ',' → logprob: -3.4687211513519287
    5. ' ' → logprob: -4.468721389770508
    6. 's' → logprob: -5.468721389770508
    7. '.' → logprob: -6.093721389770508
    8. 'y' → logprob: -6.593721389770508
    9. '1' → logprob: -7.593721389770508
    10. '  ' → logprob: -7.593721389770508

Token 12: ' int' (ID: 677)
  Prédit: ' stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -1.296321988105774
    2. ' int' → logprob: -1.671321988105774
    3. ' []' → logprob: -1.921321988105774
    4. ' list' → logprob: -2.2963218688964844
    5. ' map' → logprob: -2.5463218688964844
    6. ' [' → logprob: -2.5463218688964844
    7. ' ' → logprob: -3.4213218688964844
    8. 'stdin' → logprob: -3.7963218688964844
    9. 'int' → logprob: -3.9213218688964844
    10. ' ['' → logprob: -4.046321868896484

Token 13: '(stdin' (ID: 176594)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027987999841570854
    2. '(stdin' → logprob: -3.6529879570007324
    3. '(x' → logprob: -6.652987957000732
    4. ' (' → logprob: -8.90298843383789
    5. '(input' → logprob: -9.40298843383789
    6. '('' → logprob: -9.40298843383789
    7. '(st' → logprob: -10.02798843383789
    8. ''' → logprob: -12.27798843383789
    9. '(open' → logprob: -12.40298843383789
    10. '(read' → logprob: -12.52798843383789

Token 14: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.28270840644836426
    2. '.read' → logprob: -1.4077084064483643
    3. '.' → logprob: -6.907708168029785
    4. ')' → logprob: -7.782708168029785
    5. '.Read' → logprob: -10.157708168029785
    6. '.readlines' → logprob: -10.532708168029785
    7. 'read' → logprob: -10.907708168029785
    8. '.write' → logprob: -11.282708168029785
    9. '[' → logprob: -11.407708168029785
    10. ' .' → logprob: -11.657708168029785

Token 15: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16089865565299988
    2. '()' → logprob: -2.0358986854553223
    3. ')' → logprob: -4.160898685455322
    4. '().' → logprob: -6.535898685455322
    5. '(' → logprob: -7.535898685455322
    6. '()[' → logprob: -8.410898208618164
    7. ' ())' → logprob: -9.410898208618164
    8. '()))' → logprob: -10.160898208618164
    9. '();)' → logprob: -10.910898208618164
    10. '`)' → logprob: -11.410898208618164

Token 16: 'powers' (ID: 172083)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2208525389432907
    2. 'n' → logprob: -2.8458526134490967
    3. ' for' → logprob: -3.3458526134490967
    4. 'a' → logprob: -3.8458526134490967
    5. '\n' → logprob: -3.9708526134490967
    6. ')' → logprob: -4.345852375030518
    7. '*' → logprob: -4.470852375030518
    8. ' ' → logprob: -4.595852375030518
    9. 's' → logprob: -5.095852375030518
    10. ''' → logprob: -5.345852375030518

Token 17: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011693910928443074
    2. ' (' → logprob: -8.001169204711914
    3. '_of' → logprob: -8.376169204711914
    4. '_' → logprob: -8.501169204711914
    5. 'of' → logprob: -9.626169204711914
    6. '(x' → logprob: -9.626169204711914
    7. '('' → logprob: -10.251169204711914
    8. ' =' → logprob: -10.251169204711914
    9. '=' → logprob: -10.626169204711914
    10. '(`' → logprob: -10.876169204711914

Token 18: ' {' (ID: 354)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25714415311813354
    2. ' [' → logprob: -1.5071442127227783
    3. ' list' → logprob: -6.632143974304199
    4. '[list' → logprob: -7.007143974304199
    5. '(' → logprob: -7.507143974304199
    6. '2' → logprob: -7.632143974304199
    7. 'list' → logprob: -8.0071439743042
    8. ' ' → logprob: -8.0071439743042
    9. '(range' → logprob: -8.0071439743042
    10. '[p' → logprob: -8.2571439743042

Token 19: 'i' (ID: 72)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.42791542410850525
    2. 'i' → logprob: -1.8029154539108276
    3. '0' → logprob: -2.177915334701538
    4. '   ' → logprob: -4.052915573120117
    5. '1' → logprob: -4.302915573120117
    6. 'k' → logprob: -4.427915573120117
    7. ' ' → logprob: -4.427915573120117
    8. ' i' → logprob: -4.802915573120117
    9. 'n' → logprob: -6.052915573120117
    10. '}' → logprob: -6.677915573120117

Token 20: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14420080184936523
    2. '**' → logprob: -2.0192008018493652
    3. ':**' → logprob: -6.894200801849365
    4. ':i' → logprob: -8.144201278686523
    5. ' :' → logprob: -8.894201278686523
    6. ' **' → logprob: -9.519201278686523
    7. ':x' → logprob: -13.519201278686523
    8. ':j' → logprob: -13.519201278686523
    9. ':p' → logprob: -13.894201278686523
    10. '*i' → logprob: -14.144201278686523

Token 21: ' i' (ID: 575)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8720653653144836
    2. ' ' → logprob: -1.1220653057098389
    3. ' i' → logprob: -2.372065305709839
    4. 'i' → logprob: -2.372065305709839
    5. '1' → logprob: -3.372065305709839
    6. 'pow' → logprob: -4.997065544128418
    7. ' [' → logprob: -5.122065544128418
    8. ' []' → logprob: -5.497065544128418
    9. 'x' → logprob: -5.747065544128418
    10. 'set' → logprob: -6.122065544128418

Token 22: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.11292091012001038
    2. ' **' → logprob: -2.2379209995269775
    3. '*' → logprob: -10.362920761108398
    4. ' ' → logprob: -10.362920761108398
    5. '*i' → logprob: -11.987920761108398
    6. ' for' → logprob: -12.112920761108398
    7. '}' → logprob: -12.237920761108398
    8. ':' → logprob: -12.362920761108398
    9. ' *' → logprob: -12.737920761108398
    10. ':**' → logprob: -13.237920761108398

Token 23: '5' (ID: 20)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5353694558143616
    2. 'x' → logprob: -0.9103694558143616
    3. '5' → logprob: -4.910369396209717
    4. '3' → logprob: -5.660369396209717
    5. 'i' → logprob: -7.410369396209717
    6. '4' → logprob: -7.910369396209717
    7. '(' → logprob: -9.410369873046875
    8. 'p' → logprob: -10.035369873046875
    9. ' ' → logprob: -10.285369873046875
    10. '0' → logprob: -10.410369873046875

Token 24: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.009334435686469078
    2. ' ' → logprob: -4.884334564208984
    3. 'for' → logprob: -6.384334564208984
    4. '}' → logprob: -10.884334564208984
    5. ' }' → logprob: -11.634334564208984
    6. '	for' → logprob: -12.134334564208984
    7. ',' → logprob: -13.009334564208984
    8. '  ' → logprob: -13.509334564208984
    9. '   ' → logprob: -14.259334564208984
    10. ' ' → logprob: -14.384334564208984

Token 25: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3505559265613556
    2. ' i' → logprob: -1.2255558967590332
    3. 'range' → logprob: -6.600555896759033
    4. 'i' → logprob: -7.475555896759033
    5. ' ' → logprob: -8.725556373596191
    6. '  ' → logprob: -12.350556373596191
    7. '	range' → logprob: -12.350556373596191
    8. '```' → logprob: -12.850556373596191
    9. '	i' → logprob: -12.975556373596191
    10. '(range' → logprob: -13.100556373596191

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020695218816399574
    2. 'in' → logprob: -3.895695209503174
    3. ' ' → logprob: -9.645695686340332
    4. 'range' → logprob: -9.645695686340332
    5. ' range' → logprob: -11.020695686340332
    6. '<|end|>' → logprob: -12.395695686340332
    7. '  ' → logprob: -14.645695686340332
    8. '<|end|>' → logprob: -14.895695686340332
    9. ' i' → logprob: -15.270695686340332
    10. 's' → logprob: -15.395695686340332

Token 27: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.28116375207901
    2. 'range' → logprob: -1.4061636924743652
    3. ' ' → logprob: -12.781164169311523
    4. 'x' → logprob: -12.906164169311523
    5. '(range' → logprob: -13.281164169311523
    6. '	range' → logprob: -13.281164169311523
    7. ' xrange' → logprob: -13.531164169311523
    8. ' x' → logprob: -14.406164169311523
    9. '-' → logprob: -14.843664169311523
    10. '}' → logprob: -14.968664169311523

Token 28: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.07890840619802475
    2. '(' → logprob: -2.5789084434509277
    3. '(x' → logprob: -11.20390796661377
    4. ' (-' → logprob: -12.70390796661377
    5. '((-' → logprob: -15.32890796661377
    6. ' ' → logprob: -15.45390796661377
    7. '(-(' → logprob: -15.82890796661377
    8. '(+' → logprob: -15.82890796661377
    9. ' (' → logprob: -15.95390796661377
    10. '((' → logprob: -15.95390796661377

Token 29: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.72218918800354
    2. '50' → logprob: -1.97218918800354
    3. '250' → logprob: -1.97218918800354
    4. '55' → logprob: -2.34718918800354
    5. '10' → logprob: -2.72218918800354
    6. '230' → logprob: -2.84718918800354
    7. '21' → logprob: -2.97218918800354
    8. '150' → logprob: -3.47218918800354
    9. '51' → logprob: -3.59718918800354
    10. '231' → logprob: -3.59718918800354

Token 30: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16084150969982147
    2. ' ,' → logprob: -1.910841464996338
    3. '100' → logprob: -7.660841464996338
    4. ' ' → logprob: -9.160841941833496
    5. '1' → logprob: -11.285841941833496
    6. '0' → logprob: -11.535841941833496
    7. '101' → logprob: -11.660841941833496
    8. '10' → logprob: -12.660841941833496
    9. '20' → logprob: -14.160841941833496
    10. '2' → logprob: -14.535841941833496

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014199234545230865
    2. ' ,' → logprob: -4.264199256896973
    3. ' ' → logprob: -11.139199256896973
    4. '1' → logprob: -11.514199256896973
    5. '100' → logprob: -11.764199256896973
    6. '```' → logprob: -14.639199256896973
    7. '0' → logprob: -15.014199256896973
    8. '3' → logprob: -15.264199256896973
    9. '

' → logprob: -15.264199256896973
    10. '2' → logprob: -15.264199256896973

Token 32: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.02065785974264145
    2. ' ' → logprob: -3.895657777786255
    3. '101' → logprob: -9.520657539367676
    4. 'x' → logprob: -11.770657539367676
    5. '1' → logprob: -11.895657539367676
    6. '11' → logprob: -12.520657539367676
    7. 'i' → logprob: -12.520657539367676
    8. '  ' → logprob: -12.520657539367676
    9. '10' → logprob: -12.770657539367676
    10. '110' → logprob: -13.458157539367676

Token 33: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0011268829694017768
    2. ' ' → logprob: -7.001126766204834
    3. '101' → logprob: -9.251127243041992
    4. '1' → logprob: -9.876127243041992
    5. '10' → logprob: -11.251127243041992
    6. '

' → logprob: -11.251127243041992
    7. 'x' → logprob: -11.376127243041992
    8. '2' → logprob: -12.126127243041992
    9. '  ' → logprob: -12.376127243041992
    10. '200' → logprob: -12.688627243041992

Token 34: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006045162212103605
    2. '0' → logprob: -5.131045341491699
    3. ' ' → logprob: -10.0060453414917
    4. '2' → logprob: -10.7560453414917
    5. ',' → logprob: -11.6310453414917
    6. '00' → logprob: -11.7560453414917
    7. ' -' → logprob: -12.0060453414917
    8. '01' → logprob: -12.1310453414917
    9. '   ' → logprob: -12.2560453414917
    10. '5' → logprob: -12.5060453414917

Token 35: ')}
' (ID: 19324)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11932378262281418
    2. ')}' → logprob: -2.24432373046875
    3. ')' → logprob: -5.49432373046875
    4. ' +' → logprob: -6.11932373046875
    5. '}' → logprob: -9.36932373046875
    6. '})' → logprob: -10.74432373046875
    7. '1' → logprob: -11.11932373046875
    8. '+)' → logprob: -11.24432373046875
    9. ' )' → logprob: -11.36932373046875
    10. ',' → logprob: -11.61932373046875

Token 36: 'pow' (ID: 30304)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7546464204788208
    2. 'a' → logprob: -1.6296464204788208
    3. '
' → logprob: -2.2546463012695312
    4. 'n' → logprob: -2.8796463012695312
    5. '\n' → logprob: -3.0046463012695312
    6. 'result' → logprob: -3.1296463012695312
    7. 's' → logprob: -4.504646301269531
    8. 'newline' → logprob: -4.629646301269531
    9. ' for' → logprob: -4.754646301269531
    10. 'x' → logprob: -4.879646301269531

Token 37: '_inv' (ID: 53427)
  Prédit: 'ers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ers' → logprob: -0.20272569358348846
    2. 's' → logprob: -1.7027256488800049
    3. 'rs' → logprob: -7.202725887298584
    4. '(' → logprob: -8.827725410461426
    5. '2' → logprob: -9.202725410461426
    6. '```' → logprob: -9.452725410461426
    7. 'sers' → logprob: -10.827725410461426
    8. '6' → logprob: -10.952725410461426
    9. '   ' → logprob: -11.077725410461426
    10. '[' → logprob: -11.077725410461426

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1896953582763672
    2. 's' → logprob: -2.564695358276367
    3. '=' → logprob: -3.064695358276367
    4. 'erse' → logprob: -3.814695358276367
    5. 'ers' → logprob: -4.314695358276367
    6. 'er' → logprob: -4.564695358276367
    7. '```' → logprob: -6.689695358276367
    8. 'ert' → logprob: -7.939695358276367
    9. 'erts' → logprob: -8.064695358276367
    10. 'ersion' → logprob: -8.314695358276367

Token 39: ' {' (ID: 354)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.2022588551044464
    2. '{' → logprob: -1.702258825302124
    3. ' {}' → logprob: -7.577259063720703
    4. '{i' → logprob: -8.952259063720703
    5. ' {' → logprob: -9.202259063720703
    6. '{x' → logprob: -9.952259063720703
    7. 'dict' → logprob: -11.202259063720703
    8. '{}

' → logprob: -11.452259063720703
    9. '{})' → logprob: -12.202259063720703
    10. '{s' → logprob: -12.327259063720703

Token 40: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.003235228592529893
    2. 'i' → logprob: -6.753235340118408
    3. ' v' → logprob: -7.628235340118408
    4. 'value' → logprob: -7.878235340118408
    5. '}' → logprob: -8.37823486328125
    6. 'val' → logprob: -8.37823486328125
    7. '0' → logprob: -8.50323486328125
    8. 'p' → logprob: -8.62823486328125
    9. 'pow' → logprob: -9.25323486328125
    10. 'powers' → logprob: -9.50323486328125

Token 41: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01290866732597351
    2. ':i' → logprob: -4.512908458709717
    3. ':k' → logprob: -6.887908458709717
    4. ' :' → logprob: -7.262908458709717
    5. ':p' → logprob: -9.387908935546875
    6. ':v' → logprob: -10.262908935546875
    7. ':x' → logprob: -12.512908935546875
    8. ':index' → logprob: -13.012908935546875
    9. ':key' → logprob: -13.512908935546875
    10. ':w' → logprob: -13.637908935546875

Token 42: ' i' (ID: 575)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03416864201426506
    2. ' k' → logprob: -3.4091687202453613
    3. 'i' → logprob: -7.784168720245361
    4. ' i' → logprob: -9.909168243408203
    5. '    ' → logprob: -11.409168243408203
    6. '[]' → logprob: -11.534168243408203
    7. ' ' → logprob: -11.784168243408203
    8. '	k' → logprob: -11.784168243408203
    9. '   ' → logprob: -11.909168243408203
    10. 'v' → logprob: -12.909168243408203

Token 43: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016981529770419002
    2. ':i' → logprob: -7.251698017120361
    3. ' for' → logprob: -7.376698017120361
    4. 'for' → logprob: -8.62669849395752
    5. ':v' → logprob: -9.37669849395752
    6. ' :' → logprob: -9.87669849395752
    7. ':p' → logprob: -11.50169849395752
    8. ':k' → logprob: -11.87669849395752
    9. ':j' → logprob: -12.37669849395752
    10. ' ' → logprob: -12.62669849395752

Token 44: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06234016641974449
    2. 'i' → logprob: -2.812340259552002
    3. ' k' → logprob: -8.937339782714844
    4. ',' → logprob: -9.312339782714844
    5. ',i' → logprob: -10.312339782714844
    6. ' v' → logprob: -10.312339782714844
    7. 'k' → logprob: -10.562339782714844
    8. ' powers' → logprob: -11.312339782714844
    9. 'v' → logprob: -11.562339782714844
    10. 'powers' → logprob: -11.812339782714844

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1512138992547989
    2. ' in' → logprob: -2.4012138843536377
    3. 'in' → logprob: -3.4012138843536377
    4. ',v' → logprob: -4.401214122772217
    5. ' ,' → logprob: -6.276214122772217
    6. 'n' → logprob: -7.151214122772217
    7. 'v' → logprob: -7.776214122772217
    8. 'i' → logprob: -8.026213645935059
    9. '<|end|>' → logprob: -8.651213645935059
    10. ',n' → logprob: -9.151213645935059

Token 46: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07162857800722122
    2. 'in' → logprob: -2.6966285705566406
    3. ' in' → logprob: -6.571628570556641
    4. ' v' → logprob: -8.82162857055664
    5. 'pow' → logprob: -10.32162857055664
    6. 'p' → logprob: -10.94662857055664
    7. '<|end|>' → logprob: -10.94662857055664
    8. 'powers' → logprob: -11.19662857055664
    9. '```' → logprob: -11.57162857055664
    10. 'i' → logprob: -11.69662857055664

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42873308062553406
    2. 'in' → logprob: -1.0537331104278564
    3. 'n' → logprob: -11.553732872009277
    4. ' ' → logprob: -12.428732872009277
    5. '<|end|>' → logprob: -12.428732872009277
    6. 's' → logprob: -13.053732872009277
    7. ',' → logprob: -13.303732872009277
    8. 'ine' → logprob: -13.553732872009277
    9. '<|end|>' → logprob: -13.803732872009277
    10. 'on' → logprob: -14.303732872009277

Token 48: ' powers' (ID: 27742)
  Prédit: 'powers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'powers' → logprob: -0.0004324573092162609
    2. ' powers' → logprob: -7.75043249130249
    3. 'pow' → logprob: -13.250432014465332
    4. 'power' → logprob: -16.87543296813965
    5. ' poderes' → logprob: -20.62543296813965
    6. '{' → logprob: -20.62543296813965
    7. 'pot' → logprob: -20.87543296813965
    8. 'p' → logprob: -20.87543296813965
    9. 'powered' → logprob: -20.87543296813965
    10. '```' → logprob: -21.37543296813965

Token 49: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.0008758509648032486
    2. '.iteritems' → logprob: -7.500875949859619
    3. 'items' → logprob: -8.500875473022461
    4. '.' → logprob: -9.125875473022461
    5. 'in' → logprob: -12.250875473022461
    6. '.values' → logprob: -13.375875473022461
    7. '.Items' → logprob: -13.875875473022461
    8. '.pkl' → logprob: -14.250875473022461
    9. ' .' → logprob: -14.250875473022461
    10. '.setdefault' → logprob: -14.875875473022461

Token 50: '()' (ID: 416)
  Prédit: '()}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()}' → logprob: -0.004134087823331356
    2. '()' → logprob: -5.504134178161621
    3. '}' → logprob: -10.129134178161621
    4. '().' → logprob: -12.129134178161621
    5. ' ()' → logprob: -12.629134178161621
    6. '()}
' → logprob: -12.879134178161621
    7. '():' → logprob: -13.629134178161621
    8. '()]' → logprob: -14.254134178161621
    9. '()},' → logprob: -14.379134178161621
    10. '())' → logprob: -14.504134178161621

Token 51: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -1.8789383830153383e-05
    2. '})' → logprob: -11.375019073486328
    3. ' }' → logprob: -12.375019073486328
    4. ')}' → logprob: -13.375019073486328
    5. ')' → logprob: -14.000019073486328
    6. '}
' → logprob: -15.625019073486328
    7. '`}' → logprob: -15.625019073486328
    8. '}")' → logprob: -16.250019073486328
    9. '}}' → logprob: -17.000019073486328
    10. '```' → logprob: -17.250019073486328

Token 52: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02856522798538208
    2. 'result' → logprob: -4.528565406799316
    3. ' for' → logprob: -5.153565406799316
    4. 'answer' → logprob: -6.278565406799316
    5. '\n' → logprob: -6.278565406799316
    6. 'found' → logprob: -6.403565406799316
    7. 'ans' → logprob: -6.653565406799316
    8. '\' → logprob: -6.778565406799316
    9. 'a' → logprob: -6.903565406799316
    10. 'res' → logprob: -7.403565406799316

Token 53: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.41672366857528687
    2. 'a' → logprob: -1.1667237281799316
    3. ' i' → logprob: -4.166723728179932
    4. 'i' → logprob: -5.291723728179932
    5. ' ' → logprob: -6.416723728179932
    6. ' A' → logprob: -6.416723728179932
    7. 'A' → logprob: -6.916723728179932
    8. '_' → logprob: -7.166723728179932
    9. ' c' → logprob: -7.541723728179932
    10. '_a' → logprob: -7.541723728179932

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009433876723051071
    2. 'in' → logprob: -4.884433746337891
    3. ',' → logprob: -6.759433746337891
    4. ' ' → logprob: -7.759433746337891
    5. 'a' → logprob: -9.13443374633789
    6. ' ,' → logprob: -9.63443374633789
    7. ' i' → logprob: -11.00943374633789
    8. 's' → logprob: -11.63443374633789
    9. ' a' → logprob: -12.00943374633789
    10. 'b' → logprob: -12.25943374633789

Token 55: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.35007166862487793
    2. ' range' → logprob: -1.225071668624878
    3. 'product' → logprob: -6.725071907043457
    4. ' product' → logprob: -8.100071907043457
    5. '-' → logprob: -10.600071907043457
    6. 'powers' → logprob: -10.975071907043457
    7. '	range' → logprob: -11.350071907043457
    8. ' ' → logprob: -11.600071907043457
    9. '  ' → logprob: -11.850071907043457
    10. 'pow' → logprob: -12.100071907043457

Token 56: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.009460567496716976
    2. '(' → logprob: -4.75946044921875
    3. '(x' → logprob: -7.63446044921875
    4. '-' → logprob: -8.25946044921875
    5. ' (-' → logprob: -10.13446044921875
    6. ' -' → logprob: -11.00946044921875
    7. 'x' → logprob: -11.25946044921875
    8. '100' → logprob: -11.25946044921875
    9. '(a' → logprob: -12.88446044921875
    10. ' ' → logprob: -12.88446044921875

Token 57: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.007119903340935707
    2. 'x' → logprob: -5.007120132446289
    3. '999' → logprob: -9.257120132446289
    4. ' x' → logprob: -9.757120132446289
    5. '

' → logprob: -9.882120132446289
    6. '101' → logprob: -10.257120132446289
    7. '1' → logprob: -10.757120132446289
    8. '200' → logprob: -10.882120132446289
    9. ' ' → logprob: -10.882120132446289
    10. '500' → logprob: -11.132120132446289

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005665206350386143
    2. '1' → logprob: -5.255665302276611
    3. ',' → logprob: -8.255664825439453
    4. ' ' → logprob: -8.755664825439453
    5. '    ' → logprob: -13.755664825439453
    6. '2' → logprob: -13.755664825439453
    7. '   ' → logprob: -13.818164825439453
    8. '<|end|>' → logprob: -13.818164825439453
    9. '۰' → logprob: -13.818164825439453
    10. ' to' → logprob: -14.068164825439453

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021874953527003527
    2. ' ,' → logprob: -6.127187728881836
    3. ' ' → logprob: -13.877187728881836
    4. '100' → logprob: -14.252187728881836
    5. '+' → logprob: -15.502187728881836
    6. '1' → logprob: -15.627187728881836
    7. '+,' → logprob: -16.377187728881836
    8. '_,' → logprob: -16.752187728881836
    9. ' +' → logprob: -17.127187728881836
    10. '0' → logprob: -17.252187728881836

Token 60: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.012693996541202068
    2. ' ' → logprob: -4.387693881988525
    3. '1' → logprob: -9.137694358825684
    4. 'a' → logprob: -10.512694358825684
    5. '10' → logprob: -11.012694358825684
    6. '101' → logprob: -11.825194358825684
    7. '  ' → logprob: -12.325194358825684
    8. ')' → logprob: -12.450194358825684
    9. '11' → logprob: -13.137694358825684
    10. '0' → logprob: -13.512694358825684

Token 61: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0014464260311797261
    2. ' ' → logprob: -6.62644624710083
    3. 'a' → logprob: -9.876446723937988
    4. '1' → logprob: -10.376446723937988
    5. '101' → logprob: -11.376446723937988
    6. '999' → logprob: -12.063946723937988
    7. '0' → logprob: -12.563946723937988
    8. 'x' → logprob: -12.876446723937988
    9. '  ' → logprob: -13.251446723937988
    10. '```' → logprob: -13.313946723937988

Token 62: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005239445250481367
    2. '0' → logprob: -5.255239486694336
    3. ' ' → logprob: -12.630239486694336
    4. '```' → logprob: -14.630239486694336
    5. '   ' → logprob: -14.942739486694336
    6. ',' → logprob: -14.942739486694336
    7. ')' → logprob: -15.442739486694336
    8. '2' → logprob: -16.067739486694336
    9. '01' → logprob: -16.442739486694336
    10. '１' → logprob: -16.755239486694336

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09833644330501556
    2. '+' → logprob: -2.4733364582061768
    3. ')' → logprob: -5.473336219787598
    4. '):
' → logprob: -5.723336219787598
    5. ' +' → logprob: -6.598336219787598
    6. ' ):' → logprob: -8.348336219787598
    7. ':' → logprob: -9.223336219787598
    8. ',' → logprob: -9.348336219787598
    9. '+:' → logprob: -10.348336219787598
    10. '):
' → logprob: -10.598336219787598

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038806185126304626
    2. '<|end|>' → logprob: -4.038805961608887
    3. ' for' → logprob: -4.288805961608887
    4. '	for' → logprob: -6.163805961608887
    5. 'for' → logprob: -7.038805961608887
    6. ' ' → logprob: -7.663805961608887
    7. '```' → logprob: -7.663805961608887
    8. '    ' → logprob: -7.663805961608887
    9. ',' → logprob: -7.788805961608887
    10. '<|end|>' → logprob: -7.913805961608887

Token 65: ' b' (ID: 287)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4834643304347992
    2. 'for' → logprob: -1.4834643602371216
    3. '   ' → logprob: -1.8584643602371216
    4. ' ' → logprob: -8.608464241027832
    5. '	for' → logprob: -8.983464241027832
    6. 'b' (adapté à ' b') → logprob: -9.858464241027832
    7. '```' → logprob: -10.233464241027832
    8. '    ' → logprob: -10.420964241027832
    9. ' a' → logprob: -10.420964241027832
    10. '   ' → logprob: -10.608464241027832

Token 66: '5' (ID: 20)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7235579490661621
    2. ' in' → logprob: -1.098557949066162
    3. '=' → logprob: -1.973557949066162
    4. ' for' → logprob: -3.598557949066162
    5. ' ' → logprob: -5.223557949066162
    6. 'for' → logprob: -5.598557949066162
    7. 'in' → logprob: -5.723557949066162
    8. ')' → logprob: -7.098557949066162
    9. ',' → logprob: -7.598557949066162
    10. 's' → logprob: -7.723557949066162

Token 67: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6327365636825562
    2. ' =' → logprob: -0.7577365636825562
    3. ' ' → logprob: -9.882736206054688
    4. '5' → logprob: -9.882736206054688
    5. ')' → logprob: -11.382736206054688
    6. '+' → logprob: -11.882736206054688
    7. '   ' → logprob: -12.632736206054688
    8. '  ' → logprob: -12.882736206054688
    9. ']' → logprob: -13.132736206054688
    10. ' +' → logprob: -13.507736206054688

Token 68: ' a' (ID: 261)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7051974534988403
    2. 'x' → logprob: -1.0801974534988403
    3. 'powers' → logprob: -2.330197334289551
    4. ' powers' → logprob: -2.705197334289551
    5. 'pow' → logprob: -7.080197334289551
    6. 'a' → logprob: -7.705197334289551
    7. ' ' → logprob: -8.20519733428955
    8. ' a' → logprob: -8.33019733428955
    9. '   ' → logprob: -8.70519733428955
    10. '    ' → logprob: -8.95519733428955

Token 69: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0825752317905426
    2. '5' → logprob: -2.5825753211975098
    3. ' ' → logprob: -6.58257532119751
    4. ' **' → logprob: -6.70757532119751
    5. '```' → logprob: -7.45757532119751
    6. ']' → logprob: -9.082574844360352
    7. '`' → logprob: -9.332574844360352
    8. ')' → logprob: -9.582574844360352
    9. ')**' → logprob: -9.832574844360352
    10. '
' → logprob: -10.457574844360352

Token 70: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -15.250003814697266
    4. '```' → logprob: -16.375003814697266
    5. '    ' → logprob: -16.875003814697266
    6. '  ' → logprob: -17.500003814697266
    7. '۵' → logprob: -18.000003814697266
    8. '٥' → logprob: -18.250003814697266
    9. '৫' → logprob: -18.312503814697266
    10. '५' → logprob: -18.375003814697266

Token 71: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9070884585380554
    2. '<|end|>' → logprob: -1.0320885181427002
    3. ' +' → logprob: -1.7820885181427002
    4. ' -' → logprob: -3.2820885181427
    5. '-' → logprob: -3.5320885181427
    6. ' ' → logprob: -6.282088279724121
    7. '<|end|>' → logprob: -6.407088279724121
    8. ')' → logprob: -7.657088279724121
    9. '   ' → logprob: -8.157088279724121
    10. '    ' → logprob: -8.407088279724121

Token 72: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.931863051955588e-05
    2. ' x' → logprob: -9.750059127807617
    3. 'powers' → logprob: -14.625059127807617
    4. '<|end|>' → logprob: -15.000059127807617
    5. ')x' → logprob: -17.250059127807617
    6. '$x' → logprob: -17.375059127807617
    7. '	x' → logprob: -18.125059127807617
    8. '"x' → logprob: -18.125059127807617
    9. '<|end|>' → logprob: -18.125059127807617
    10. '(x' → logprob: -18.125059127807617

Token 73: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.10041272640228271
    2. 'b' → logprob: -2.3504128456115723
    3. ' ' → logprob: -9.350412368774414
    4. ' a' → logprob: -10.225412368774414
    5. ' -' → logprob: -10.975412368774414
    6. '-' → logprob: -11.475412368774414
    7. 'pow' → logprob: -11.537912368774414
    8. 'a' → logprob: -11.662912368774414
    9. '-b' → logprob: -11.975412368774414
    10. '   ' → logprob: -12.412912368774414

Token 77: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0021697706542909145
    2. ' in' → logprob: -7.127169609069824
    3. '```' → logprob: -8.189669609069824
    4. '-' → logprob: -8.502169609069824
    5. '_' → logprob: -8.564669609069824
    6. ' ' → logprob: -8.877169609069824
    7. '**' → logprob: -9.314669609069824
    8. 'in' → logprob: -9.877169609069824
    9. '   ' → logprob: -10.002169609069824
    10. ' b' → logprob: -10.502169609069824

Token 78: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0025638877414166927
    2. 'in' → logprob: -6.002563953399658
    3. ' ' → logprob: -9.6275634765625
    4. ' not' → logprob: -11.7525634765625
    5. '<|end|>' → logprob: -12.2525634765625
    6. ' i' → logprob: -12.5025634765625
    7. '5' → logprob: -12.6275634765625
    8. '  ' → logprob: -15.3150634765625
    9. '6' → logprob: -15.3775634765625
    10. '0' → logprob: -15.3775634765625

Token 79: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.004116869065910578
    2. ' pow' → logprob: -5.629117012023926
    3. 'powers' → logprob: -7.629117012023926
    4. ' powers' → logprob: -11.129117012023926
    5. '   ' → logprob: -12.004117012023926
    6. 'p' → logprob: -12.629117012023926
    7. '_pow' → logprob: -13.254117012023926
    8. '(pow' → logprob: -13.879117012023926
    9. ' ' → logprob: -14.129117012023926
    10. '.pow' → logprob: -14.129117012023926

Token 80: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -8.2994620242971e-06
    2. '_in' → logprob: -13.250008583068848
    3. 'inv' → logprob: -13.250008583068848
    4. '_pow' → logprob: -13.500008583068848
    5. '_INV' → logprob: -13.750008583068848
    6. 's' → logprob: -14.125008583068848
    7. '_inverse' → logprob: -15.000008583068848
    8. '_' → logprob: -15.750008583068848
    9. '_iv' → logprob: -15.875008583068848
    10. '_ans' → logprob: -16.75000762939453

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005464801797643304
    2. ' :' → logprob: -7.875546455383301
    3. '):' → logprob: -9.1255464553833
    4. '}:' → logprob: -10.8755464553833
    5. ':
' → logprob: -11.2505464553833
    6. '>:' → logprob: -11.6255464553833
    7. ']:' → logprob: -11.8755464553833
    8. ':**' → logprob: -12.8755464553833
    9. ' and' → logprob: -13.5005464553833
    10. '<|end|>' → logprob: -14.0005464553833

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005046132951974869
    2. '   ' → logprob: -5.880046367645264
    3. ' print' → logprob: -7.380046367645264
    4. 'print' → logprob: -7.755046367645264
    5. '<|end|>' → logprob: -7.755046367645264
    6. '    ' → logprob: -8.005045890808105
    7. '        
' → logprob: -9.755045890808105
    8. ',' → logprob: -10.005045890808105
    9. ' ' → logprob: -10.005045890808105
    10. '     ' → logprob: -10.380045890808105

Token 83: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4182315766811371
    2. '   ' → logprob: -1.6682316064834595
    3. 'print' (adapté à ' print') → logprob: -1.9182316064834595
    4. '       ' → logprob: -5.16823148727417
    5. '    ' → logprob: -8.918231964111328
    6. '	print' → logprob: -8.918231964111328
    7. ' b' → logprob: -9.418231964111328
    8. ' ' → logprob: -10.043231964111328
    9. ' a' → logprob: -10.168231964111328
    10. '```' → logprob: -10.293231964111328

Token 84: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.02369135059416294
    2. '(pow' → logprob: -4.273691177368164
    3. '(f' → logprob: -4.898691177368164
    4. '(' → logprob: -6.648691177368164
    5. 'a' → logprob: -7.773691177368164
    6. 'pow' → logprob: -8.523691177368164
    7. '(b' → logprob: -10.648691177368164
    8. '(p' → logprob: -10.773691177368164
    9. 'f' → logprob: -10.773691177368164
    10. '(-' → logprob: -11.398691177368164

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27793246507644653
    2. ' ,' → logprob: -1.5279324054718018
    3. ',b' → logprob: -4.027932643890381
    4. ')' → logprob: -5.527932643890381
    5. ' )' → logprob: -6.527932643890381
    6. ' ' → logprob: -6.652932643890381
    7. ' b' → logprob: -7.027932643890381
    8. ',end' → logprob: -9.402932167053223
    9. ',
' → logprob: -9.902932167053223
    10. ' ,
' → logprob: -10.402932167053223

Token 86: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.34855976700782776
    2. ' pow' → logprob: -1.2235597372055054
    3. '(pow' → logprob: -9.848559379577637
    4. ')' → logprob: -10.598559379577637
    5. 'b' → logprob: -11.098559379577637
    6. ' -' → logprob: -12.473559379577637
    7. ' ' → logprob: -12.598559379577637
    8. '.pow' → logprob: -12.848559379577637
    9. 'p' → logprob: -13.223559379577637
    10. '-' → logprob: -13.348559379577637

Token 87: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -3.762356209335849e-05
    2. 'inv' → logprob: -10.62503719329834
    3. '_in' → logprob: -12.50003719329834
    4. '_INV' → logprob: -13.75003719329834
    5. ' _' → logprob: -13.87503719329834
    6. '_i' → logprob: -13.87503719329834
    7. '_iv' → logprob: -14.00003719329834
    8. '_' → logprob: -14.37503719329834
    9. 'v' → logprob: -14.62503719329834
    10. 'i' → logprob: -14.75003719329834

Token 88: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -9.014684110297821e-06
    2. '[' → logprob: -12.125008583068848
    3. ')[' → logprob: -13.250008583068848
    4. ')' → logprob: -14.500008583068848
    5. 'b' → logprob: -14.750008583068848
    6. '[a' → logprob: -15.375008583068848
    7. '[c' → logprob: -16.000009536743164
    8. '][' → logprob: -16.000009536743164
    9. ']' → logprob: -16.125009536743164
    10. '[v' → logprob: -16.500009536743164

Token 89: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.478889215737581e-05
    2. '])' → logprob: -10.500054359436035
    3. ')' → logprob: -11.375054359436035
    4. ']' → logprob: -11.750054359436035
    5. ')]' → logprob: -12.375054359436035
    6. ')])' → logprob: -13.625054359436035
    7. '])]' → logprob: -13.875054359436035
    8. ']])' → logprob: -15.000054359436035
    9. ' ' → logprob: -16.00005531311035
    10. ']}' → logprob: -16.00005531311035

Token 90: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4272752852994017e-05
    2. '})' → logprob: -11.37502384185791
    3. '))' → logprob: -12.00002384185791
    4. ')
' → logprob: -13.25002384185791
    5. '}' → logprob: -13.62502384185791
    6. '`)' → logprob: -13.75002384185791
    7. ')}' → logprob: -13.75002384185791
    8. ' )' → logprob: -14.25002384185791
    9. ')")' → logprob: -15.25002384185791
    10. '')' → logprob: -16.125024795532227

Token 91: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' break' (ID: 2338)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 90
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 71
Précision stricte (1ère position): 44.44%
Précision adaptée (1ère position): 44.44%
Précision (top 10): 78.89%
================================================================================
