================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import bisect
import heapq
import math
import random
import sys
from collections import Counter, defaultdict
from decimal import ROUND_CEILING, ROUND_HALF_UP, Decimal
from functools import lru_cache, reduce
from itertools import combinations, combinations_with_replacement, product

def read_int():
    return int(input())

def read_int_n():
    return list(map(int, input().split()))

def read_float():
    return float(input())

def read_float_n():
    return list(map(float, input().split()))

def read_str():
    return input()

def read_str_n():
    return list(map(str, input().split()))

def mt(f):
    import time
    def wrap(*args, **kwargs):
        s = time.time()
        ret = f(*args, **kwargs)
        e = time.time()
        print(e - s, 'sec', file=sys.stderr)
        return ret
    return wrap

@mt
def slv(N, P):
    Q = [-1] * N
    for i, p in enumerate(P):
        Q[p - 1] = i
    p = -1
    mc = 0
    c = 0
    for q in Q:
        if q > p:
            c += 1
        else:
            c = 1
        mc = max(mc, c)
        p = q
    return N - mc

def main():
    N = read_int()
    P = [read_int() for _ in range(N)]
    print(slv(N, P))

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0004019521293230355
    2. '(' → logprob: -8.000401496887207
    3. '\' → logprob: -11.125401496887207
    4. '\n' → logprob: -11.500401496887207
    5. '```' → logprob: -12.375401496887207
    6. '.
' → logprob: -12.500401496887207
    7. '.\' → logprob: -12.625401496887207
    8. '.

' → logprob: -12.625401496887207
    9. '.b' → logprob: -12.625401496887207
    10. '

' → logprob: -12.625401496887207

Token 4: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00028529210248962045
    2. '(' → logprob: -8.750285148620605
    3. '.

' → logprob: -10.750285148620605
    4. '.
' → logprob: -10.750285148620605
    5. '

' → logprob: -11.375285148620605
    6. '.b' → logprob: -11.625285148620605
    7. '\' → logprob: -11.625285148620605
    8. ',' → logprob: -11.750285148620605
    9. '' → logprob: -11.875285148620605
    10. '\n' → logprob: -12.000285148620605

Token 5: ' heap' (ID: 37237)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.18434125185012817
    2. ' math' → logprob: -1.9343411922454834
    3. 'sys' → logprob: -4.9343414306640625
    4. ' heap' → logprob: -5.0593414306640625
    5. ' collections' → logprob: -5.0593414306640625
    6. 'math' → logprob: -6.9343414306640625
    7. 'collections' → logprob: -7.0593414306640625
    8. ' itertools' → logprob: -7.0593414306640625
    9. ' os' → logprob: -7.4343414306640625
    10. 'heap' → logprob: -7.6843414306640625

Token 6: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.5941604690160602e-05
    2. '.' → logprob: -11.000025749206543
    3. '#' → logprob: -12.250025749206543
    4. 't' → logprob: -13.625025749206543
    5. 'i' → logprob: -14.125025749206543
    6. '=' → logprob: -14.875025749206543
    7. '>' → logprob: -15.000025749206543
    8. 's' → logprob: -15.625025749206543
    9. 'p' → logprob: -15.625025749206543
    10. 'queue' → logprob: -15.625025749206543

Token 7: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.028760073706507683
    2. '\' → logprob: -4.653759956359863
    3. '\n' → logprob: -5.278759956359863
    4. '
' → logprob: -5.403759956359863
    5. 'import' → logprob: -6.278759956359863
    6. '(' → logprob: -6.528759956359863
    7. '#' → logprob: -6.778759956359863
    8. ',' → logprob: -7.028759956359863
    9. '<|end|>' → logprob: -7.153759956359863
    10. '

' → logprob: -7.653759956359863

Token 8: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4654291868209839
    2. '\' → logprob: -1.4654291868209839
    3. '
' → logprob: -1.9654291868209839
    4. 'def' → logprob: -2.2154293060302734
    5. '

' → logprob: -2.4654293060302734
    6. '\n' → logprob: -2.5904293060302734
    7. '' → logprob: -2.7154293060302734
    8. '#' → logprob: -4.090429306030273
    9. '```' → logprob: -4.840429306030273
    10. 'import' → logprob: -5.090429306030273

Token 9: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.27235856652259827
    2. ' itertools' → logprob: -1.8973585367202759
    3. ' collections' → logprob: -2.7723586559295654
    4. ' sys' → logprob: -4.147358417510986
    5. 'math' → logprob: -5.272358417510986
    6. 'collections' → logprob: -5.772358417510986
    7. ' os' → logprob: -6.897358417510986
    8. ' threading' → logprob: -8.022358894348145
    9. ' random' → logprob: -8.022358894348145
    10. ' time' → logprob: -10.147358894348145

Token 10: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5016767382621765
    2. '\' → logprob: -2.1266767978668213
    3. '
' → logprob: -2.5016767978668213
    4. '```' → logprob: -3.0016767978668213
    5. '\n' → logprob: -3.5016767978668213
    6. '

' → logprob: -3.6266767978668213
    7. ',' → logprob: -3.7516767978668213
    8. 'def' → logprob: -4.001676559448242
    9. 'import' → logprob: -4.376676559448242
    10. '[' → logprob: -5.376676559448242

Token 11: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7633292078971863
    2. '\' → logprob: -1.888329267501831
    3. 'import' → logprob: -2.138329267501831
    4. '.' → logprob: -2.638329267501831
    5. ',' → logprob: -3.513329267501831
    6. '
' → logprob: -3.513329267501831
    7. 'from' → logprob: -3.513329267501831
    8. '\n' → logprob: -3.638329267501831
    9. '```' → logprob: -3.638329267501831
    10. '

' → logprob: -4.138329029083252

Token 12: ' random' (ID: 7526)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.616644561290741
    2. ' random' → logprob: -1.7416446208953857
    3. 'collections' → logprob: -2.1166446208953857
    4. ' sys' → logprob: -2.7416446208953857
    5. ' collections' → logprob: -2.8666446208953857
    6. 'sys' → logprob: -3.8666446208953857
    7. ' itertools' → logprob: -4.366644382476807
    8. 'operator' → logprob: -5.866644382476807
    9. ' operator' → logprob: -6.116644382476807
    10. ' os' → logprob: -6.616644382476807

Token 13: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.93739253282547
    2. '\n' → logprob: -1.4373924732208252
    3. '
' → logprob: -2.187392473220825
    4. 'import' → logprob: -2.687392473220825
    5. '```' → logprob: -2.937392473220825
    6. '#' → logprob: -3.437392473220825
    7. '

' → logprob: -3.562392473220825
    8. '<|end|>' → logprob: -3.937392473220825
    9. ',' → logprob: -4.187392711639404
    10. '' → logprob: -4.687392711639404

Token 14: 'import' (ID: 561)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.4198578596115112
    2. '
' → logprob: -1.9198578596115112
    3. 'def' → logprob: -2.044857978820801
    4. '#' → logprob: -2.294857978820801
    5. 'import' → logprob: -2.294857978820801
    6. '

' → logprob: -2.419857978820801
    7. '\n' → logprob: -3.044857978820801
    8. '```' → logprob: -3.544857978820801
    9. ',' → logprob: -3.794857978820801
    10. 'from' → logprob: -3.794857978820801

Token 15: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.3229665756225586
    2. 're' → logprob: -1.4479665756225586
    3. 'time' → logprob: -2.0729665756225586
    4. ' sys' → logprob: -2.0729665756225586
    5. 'string' → logprob: -2.5729665756225586
    6. ' re' → logprob: -2.8229665756225586
    7. 'statistics' → logprob: -3.3229665756225586
    8. 'collections' → logprob: -3.4479665756225586
    9. ' time' → logprob: -4.322966575622559
    10. ' statistics' → logprob: -4.447966575622559

Token 16: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49400952458381653
    2. '\n' → logprob: -1.7440094947814941
    3. '

' → logprob: -2.494009494781494
    4. 'import' → logprob: -3.119009494781494
    5. '#' → logprob: -3.494009494781494
    6. '\' → logprob: -3.869009494781494
    7. '```' → logprob: -4.119009494781494
    8. '<|end|>' → logprob: -5.119009494781494
    9. '' → logprob: -5.369009494781494
    10. '.' → logprob: -6.119009494781494

Token 17: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9391404986381531
    2. '\n' → logprob: -1.1891405582427979
    3. '

' → logprob: -1.9391405582427979
    4. '```' → logprob: -3.189140558242798
    5. 'import' → logprob: -3.564140558242798
    6. 'from' → logprob: -3.939140558242798
    7. '\' → logprob: -4.189140319824219
    8. '<|end|>' → logprob: -4.189140319824219
    9. 'def' → logprob: -4.439140319824219
    10. ',' → logprob: -4.939140319824219

Token 18: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.7319402694702148
    2. 'collections' → logprob: -0.7319402694702148
    3. ' typing' → logprob: -3.731940269470215
    4. ' itertools' → logprob: -5.231940269470215
    5. 'typing' → logprob: -5.231940269470215
    6. ' ' → logprob: -7.106940269470215
    7. '_' → logprob: -7.481940269470215
    8. ' functools' → logprob: -7.606940269470215
    9. 'os' → logprob: -7.856940269470215
    10. ' os' → logprob: -8.231940269470215

Token 19: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.1129443347454071
    2. 'import' → logprob: -2.2379443645477295
    3. '<|end|>' → logprob: -10.237944602966309
    4. '	import' → logprob: -10.612944602966309
    5. '```' → logprob: -10.987944602966309
    6. ' ' → logprob: -11.237944602966309
    7. '.' → logprob: -12.112944602966309
    8. ' defaultdict' → logprob: -12.362944602966309
    9. ' ' → logprob: -12.987944602966309
    10. '_import' → logprob: -13.237944602966309

Token 20: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.14491324126720428
    2. ' deque' → logprob: -2.1449131965637207
    3. ' abc' → logprob: -4.519913196563721
    4. 'deque' → logprob: -5.019913196563721
    5. ' collections' → logprob: -9.019913673400879
    6. ' itertools' → logprob: -9.769913673400879
    7. ' functools' → logprob: -10.144913673400879
    8. '_' → logprob: -10.644913673400879
    9. 'abc' → logprob: -11.019913673400879
    10. ' ' → logprob: -11.394913673400879

Token 21: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.873748779296875
    2. '

' → logprob: -1.373748779296875
    3. 'import' → logprob: -1.998748779296875
    4. '<|end|>' → logprob: -2.623748779296875
    5. '\n' → logprob: -2.998748779296875
    6. ',' → logprob: -3.123748779296875
    7. 'def' → logprob: -5.248748779296875
    8. '#' → logprob: -5.498748779296875
    9. '```' → logprob: -5.748748779296875
    10. '<|end|>' → logprob: -5.998748779296875

Token 22: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.44093334674835205
    2. 'deque' → logprob: -1.315933346748352
    3. ' deque' → logprob: -2.8159332275390625
    4. 'default' → logprob: -3.5659332275390625
    5. 'named' → logprob: -8.940933227539062
    6. ' named' → logprob: -10.440933227539062
    7. 'de' → logprob: -11.315933227539062
    8. 'Ordered' → logprob: -11.315933227539062
    9. 'abc' → logprob: -11.815933227539062
    10. ' Ordered' → logprob: -12.315933227539062

Token 23: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6170551180839539
    2. '
' → logprob: -0.9920551180839539
    3. 'import' → logprob: -2.8670551776885986
    4. ',' → logprob: -4.7420549392700195
    5. '\n' → logprob: -5.2420549392700195
    6. 'def' → logprob: -5.7420549392700195
    7. '<|end|>' → logprob: -5.7420549392700195
    8. '' → logprob: -5.8670549392700195
    9. '#' → logprob: -6.1170549392700195
    10. '```' → logprob: -6.3670549392700195

Token 24: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38373327255249023
    2. '

' → logprob: -1.7587332725524902
    3. 'def' → logprob: -3.0087332725524902
    4. 'd' → logprob: -3.8837332725524902
    5. 'import' → logprob: -4.25873327255249
    6. '' → logprob: -4.38373327255249
    7. '#' → logprob: -4.50873327255249
    8. '\' → logprob: -4.88373327255249
    9. '\n' → logprob: -5.00873327255249
    10. 'n' → logprob: -5.38373327255249

Token 25: ' decimal' (ID: 26964)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.26126620173454285
    2. ' typing' → logprob: -1.5112662315368652
    3. 'typing' → logprob: -5.136266231536865
    4. ' functools' → logprob: -6.136266231536865
    5. ' operator' → logprob: -8.136265754699707
    6. ' dat' → logprob: -8.386265754699707
    7. ' heap' → logprob: -8.511265754699707
    8. 'it' → logprob: -8.761265754699707
    9. ' io' → logprob: -9.136265754699707
    10. ' ' → logprob: -9.761265754699707

Token 26: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0027542340103536844
    2. 'import' → logprob: -6.127754211425781
    3. ' ' → logprob: -8.002754211425781
    4. '<|end|>' → logprob: -8.877754211425781
    5. '	import' → logprob: -10.002754211425781
    6. '.' → logprob: -10.502754211425781
    7. ' ' → logprob: -12.502754211425781
    8. ' ```' → logprob: -12.627754211425781
    9. '```' → logprob: -12.627754211425781
    10. '<|end|>' → logprob: -12.627754211425781

Token 27: ' ROUND' (ID: 168858)
  Prédit: ' Decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.04870784282684326
    2. 'Decimal' → logprob: -3.048707962036133
    3. '.Decimal' → logprob: -10.548707962036133
    4. 'decimal' → logprob: -10.673707962036133
    5. ' local' → logprob: -10.923707962036133
    6. 'local' → logprob: -11.048707962036133
    7. '```' → logprob: -11.548707962036133
    8. ' ' → logprob: -12.048707962036133
    9. 'import' → logprob: -12.048707962036133
    10. ' decimal' → logprob: -12.173707962036133

Token 28: '_C' (ID: 1720)
  Prédit: '_HALF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_HALF' → logprob: -0.006247292272746563
    2. '_DOWN' → logprob: -5.506247520446777
    3. '_' → logprob: -6.506247520446777
    4. '_UP' → logprob: -8.006247520446777
    5. '_C' → logprob: -8.131247520446777
    6. 'ING' → logprob: -10.881247520446777
    7. '_F' → logprob: -11.256247520446777
    8. 'Half' → logprob: -13.006247520446777
    9. 'DOWN' → logprob: -13.131247520446777
    10. '_half' → logprob: -13.506247520446777

Token 29: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0009124171338044107
    2. 'EP' → logprob: -7.625912189483643
    3. 'EL' → logprob: -8.3759126663208
    4. 'EPT' → logprob: -10.2509126663208
    5. 'EAN' → logprob: -10.7509126663208
    6. 'HAL' → logprob: -10.8759126663208
    7. 'ON' → logprob: -11.2509126663208
    8. 'ONT' → logprob: -11.3759126663208
    9. 'EF' → logprob: -11.6259126663208
    10. 'EEP' → logprob: -11.7509126663208

Token 30: 'ILING' (ID: 63201)
  Prédit: 'IL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.38728395104408264
    2. 'ILING' → logprob: -1.1372839212417603
    3. 'LING' → logprob: -7.887283802032471
    4. 'L' → logprob: -11.262284278869629
    5. 'I' → logprob: -11.512284278869629
    6. 'ILED' → logprob: -12.262284278869629
    7. 'ILL' → logprob: -13.012284278869629
    8. 'ILER' → logprob: -13.137284278869629
    9. 'İ' → logprob: -14.262284278869629
    10. 'ILE' → logprob: -14.512284278869629

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6382266283035278
    2. 'from' → logprob: -0.7632266283035278
    3. 'import' → logprob: -5.888226509094238
    4. ' from' → logprob: -6.513226509094238
    5. ',
' → logprob: -7.888226509094238
    6. '```' → logprob: -8.138226509094238
    7. 'ROUND' → logprob: -8.638226509094238
    8. ' ,' → logprob: -9.638226509094238
    9. '`' → logprob: -9.638226509094238
    10. ')' → logprob: -10.013226509094238

Token 32: ' ROUND' (ID: 168858)
  Prédit: 'Decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Decimal' → logprob: -0.4405355751514435
    2. 'ROUND' → logprob: -1.690535545349121
    3. ' Decimal' → logprob: -1.815535545349121
    4. ' ROUND' → logprob: -4.940535545349121
    5. ' ' → logprob: -7.690535545349121
    6. 'Context' → logprob: -8.065535545349121
    7. 'decimal' → logprob: -8.690535545349121
    8. ' decimal' → logprob: -8.940535545349121
    9. 'DEC' → logprob: -9.065535545349121
    10. 'Division' → logprob: -9.315535545349121

Token 33: '_HALF' (ID: 175765)
  Prédit: '_DOWN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_DOWN' → logprob: -0.35588768124580383
    2. '_F' → logprob: -1.3558876514434814
    3. '_HALF' → logprob: -3.8558876514434814
    4. 'DOWN' → logprob: -4.2308878898620605
    5. 'F' → logprob: -5.2308878898620605
    6. '_UP' → logprob: -7.3558878898620605
    7. '_' → logprob: -11.230887413024902
    8. 'ING' → logprob: -11.355887413024902
    9. '	F' → logprob: -12.355887413024902
    10. ' DOWN' → logprob: -12.480887413024902

Token 34: '_UP' (ID: 29902)
  Prédit: '_UP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_UP' → logprob: -0.04835284873843193
    2. '_E' → logprob: -3.1733529567718506
    3. '_DOWN' → logprob: -5.5483527183532715
    4. 'UP' → logprob: -6.6733527183532715
    5. 'EV' → logprob: -9.29835319519043
    6. 'DOWN' → logprob: -9.54835319519043
    7. '_A' → logprob: -11.67335319519043
    8. 'Even' → logprob: -12.67335319519043
    9. '_EV' → logprob: -13.42335319519043
    10. ' UP' → logprob: -13.42335319519043

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5126189589500427
    2. 'from' → logprob: -1.5126190185546875
    3. '
' → logprob: -2.3876190185546875
    4. 'import' → logprob: -2.8876190185546875
    5. ',
' → logprob: -4.1376190185546875
    6. '```' → logprob: -4.7626190185546875
    7. '

' → logprob: -5.6376190185546875
    8. '
' → logprob: -6.7626190185546875
    9. '' → logprob: -6.8876190185546875
    10. ' from' → logprob: -7.1376190185546875

Token 36: ' Decimal' (ID: 56874)
  Prédit: 'ROUND'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ROUND' → logprob: -0.8274334669113159
    2. ' Decimal' → logprob: -1.327433466911316
    3. ' ROUND' → logprob: -1.702433466911316
    4. 'Decimal' → logprob: -2.2024335861206055
    5. ' ' → logprob: -5.9524335861206055
    6. ' decimal' → logprob: -7.4524335861206055
    7. ' get' → logprob: -8.202433586120605
    8. 'decimal' → logprob: -8.577433586120605
    9. '```' → logprob: -8.702433586120605
    10. '   ' → logprob: -8.827433586120605

Token 37: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.25916406512260437
    2. '
' → logprob: -1.5091640949249268
    3. '' → logprob: -6.259163856506348
    4. '


' → logprob: -6.509163856506348
    5. 'import' → logprob: -7.259163856506348
    6. ',' → logprob: -7.384163856506348
    7. '```' → logprob: -7.759163856506348
    8. '\n' → logprob: -7.884163856506348
    9. ' 

' → logprob: -8.259163856506348
    10. '<|end|>' → logprob: -8.509163856506348

Token 38: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4687320590019226
    2. '

' → logprob: -1.0937321186065674
    3. 'import' → logprob: -4.718731880187988
    4. '' → logprob: -4.718731880187988
    5. 'class' → logprob: -5.343731880187988
    6. '#' → logprob: -5.468731880187988
    7. 'def' → logprob: -6.218731880187988
    8. '\n' → logprob: -6.218731880187988
    9. '\' → logprob: -6.968731880187988
    10. 'd' → logprob: -7.093731880187988

Token 39: ' functools' (ID: 142636)
  Prédit: 'fra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fra' → logprob: -0.1499970257282257
    2. ' fractions' → logprob: -2.0249969959259033
    3. ' functools' → logprob: -5.524997234344482
    4. ' itertools' → logprob: -6.774997234344482
    5. ' typing' → logprob: -7.524997234344482
    6. 'fun' → logprob: -7.899997234344482
    7. 'io' → logprob: -8.399996757507324
    8. ' ' → logprob: -8.524996757507324
    9. 'typing' → logprob: -8.649996757507324
    10. 'datetime' → logprob: -9.149996757507324

Token 40: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.22672531008720398
    2. 'import' → logprob: -1.6017253398895264
    3. '_import' → logprob: -6.976725101470947
    4. ' ' → logprob: -8.851725578308105
    5. '<|end|>' → logprob: -9.226725578308105
    6. '	import' → logprob: -9.726725578308105
    7. '_' → logprob: -9.976725578308105
    8. ' ' → logprob: -12.226725578308105
    9. '<|end|>' → logprob: -12.601725578308105
    10. ' imports' → logprob: -12.851725578308105

Token 41: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.05392468720674515
    2. 'l' → logprob: -3.053924798965454
    3. 'reduce' → logprob: -6.678924560546875
    4. ' reduce' → logprob: -6.928924560546875
    5. ' partial' → logprob: -7.178924560546875
    6. ' wraps' → logprob: -7.178924560546875
    7. ' cmp' → logprob: -7.553924560546875
    8. 'cmp' → logprob: -7.553924560546875
    9. 'wrap' → logprob: -8.678924560546875
    10. 'partial' → logprob: -8.803924560546875

Token 42: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -4.727905979962088e-05
    2. 'r' → logprob: -10.00004768371582
    3. 'ruz' → logprob: -14.37504768371582
    4. '_ru' → logprob: -15.37504768371582
    5. 'rum' → logprob: -15.87504768371582
    6. 'ruh' → logprob: -16.12504768371582
    7. 'rup' → logprob: -16.12504768371582
    8. 'ruff' → logprob: -16.37504768371582
    9. 'RU' → logprob: -16.62504768371582
    10. 'fu' → logprob: -16.75004768371582

Token 43: '_cache' (ID: 27045)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.256145179271698
    2. '_cache' → logprob: -1.5061452388763428
    3. 't' → logprob: -6.381145000457764
    4. 'ut' → logprob: -6.881145000457764
    5. 'ac' → logprob: -7.881145000457764
    6. 'c' → logprob: -8.131145477294922
    7. 'est' → logprob: -8.506145477294922
    8. 'ru' → logprob: -8.631145477294922
    9. 'import' → logprob: -8.881145477294922
    10. '```' → logprob: -10.131145477294922

Token 44: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7950538992881775
    2. ',' → logprob: -1.0450539588928223
    3. 'from' → logprob: -2.2950539588928223
    4. '
' → logprob: -2.5450539588928223
    5. ',
' → logprob: -4.545053958892822
    6. '\n' → logprob: -6.420053958892822
    7. 'def' → logprob: -6.545053958892822
    8. '<|end|>' → logprob: -6.545053958892822
    9. '

' → logprob: -7.420053958892822
    10. '```' → logprob: -8.045053482055664

Token 45: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.6017552018165588
    2. ' wraps' → logprob: -1.976755142211914
    3. 'partial' → logprob: -2.226755142211914
    4. 'wrap' → logprob: -2.351755142211914
    5. 'total' → logprob: -2.976755142211914
    6. ' reduce' → logprob: -3.351755142211914
    7. ' total' → logprob: -4.601755142211914
    8. ' partial' → logprob: -4.851755142211914
    9. 'cmp' → logprob: -5.351755142211914
    10. ' cmp' → logprob: -7.226755142211914

Token 46: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17155170440673828
    2. ',' → logprob: -2.7965517044067383
    3. 'import' → logprob: -3.0465517044067383
    4. 'from' → logprob: -3.4215517044067383
    5. ',
' → logprob: -4.921551704406738
    6. '<|end|>' → logprob: -5.921551704406738
    7. '

' → logprob: -6.296551704406738
    8. 'def' → logprob: -7.171551704406738
    9. ' 
' → logprob: -7.296551704406738
    10. '
' → logprob: -7.296551704406738

Token 47: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7926064133644104
    2. 'import' → logprob: -1.4176063537597656
    3. '

' → logprob: -1.7926063537597656
    4. ',' → logprob: -2.5426063537597656
    5. 'from' → logprob: -3.6676063537597656
    6. 'def' → logprob: -4.417606353759766
    7. '<|end|>' → logprob: -5.292606353759766
    8. ',
' → logprob: -5.542606353759766
    9. '\n' → logprob: -6.042606353759766
    10. '
' → logprob: -6.542606353759766

Token 48: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.19530385732650757
    2. ' operator' → logprob: -1.8203039169311523
    3. 'operator' → logprob: -4.695303916931152
    4. ' typing' → logprob: -6.320303916931152
    5. ' ' → logprob: -6.945303916931152
    6. ' math' → logprob: -7.195303916931152
    7. ' heap' → logprob: -7.320303916931152
    8. ' fractions' → logprob: -7.320303916931152
    9. ' io' → logprob: -7.820303916931152
    10. 'it' → logprob: -8.070303916931152

Token 49: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.011404648423194885
    2. 'import' → logprob: -4.511404514312744
    3. '.' → logprob: -8.386404991149902
    4. ' .' → logprob: -9.636404991149902
    5. ' ' → logprob: -10.511404991149902
    6. '.import' → logprob: -11.011404991149902
    7. '	import' → logprob: -11.386404991149902
    8. ' itertools' → logprob: -13.011404991149902
    9. '_import' → logprob: -13.261404991149902
    10. '<|end|>' → logprob: -14.386404991149902

Token 50: ' combinations' (ID: 43835)
  Prédit: ' accumulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accumulate' → logprob: -0.11906316876411438
    2. ' combinations' → logprob: -3.619063138961792
    3. ' chain' → logprob: -3.994063138961792
    4. ' ' → logprob: -4.119063377380371
    5. ' product' → logprob: -4.119063377380371
    6. ' group' → logprob: -4.244063377380371
    7. ' permutations' → logprob: -4.619063377380371
    8. 'acc' → logprob: -5.619063377380371
    9. 'com' → logprob: -5.869063377380371
    10. ' cycle' → logprob: -6.119063377380371

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002651751972734928
    2. ',
' → logprob: -6.377651691436768
    3. 'import' → logprob: -7.752651691436768
    4. '<|end|>' → logprob: -8.002652168273926
    5. ' ,' → logprob: -9.127652168273926
    6. 'from' → logprob: -10.627652168273926
    7. '<|end|>' → logprob: -11.627652168273926
    8. ',

' → logprob: -11.627652168273926
    9. ' ' → logprob: -12.627652168273926
    10. '```' → logprob: -12.627652168273926

Token 52: ' combinations' (ID: 43835)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.43886297941207886
    2. 'per' → logprob: -1.4388630390167236
    3. 'com' → logprob: -3.3138630390167236
    4. 'group' → logprob: -3.5638630390167236
    5. 'product' → logprob: -4.1888628005981445
    6. 'count' → logprob: -4.5638628005981445
    7. 'cycle' → logprob: -5.0638628005981445
    8. ' group' → logprob: -5.3138628005981445
    9. ' product' → logprob: -5.4388628005981445
    10. 'chain' → logprob: -5.5638628005981445

Token 53: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.00469807256013155
    2. 'with' → logprob: -5.879698276519775
    3. 'import' → logprob: -7.129698276519775
    4. '_without' → logprob: -8.254697799682617
    5. 'With' → logprob: -9.254697799682617
    6. 'from' → logprob: -9.254697799682617
    7. '_per' → logprob: -9.254697799682617
    8. '_from' → logprob: -9.379697799682617
    9. '_until' → logprob: -9.754697799682617
    10. '<|end|>' → logprob: -10.004697799682617

Token 54: '_re' (ID: 3067)
  Prédit: 'replacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'replacement' → logprob: -0.0009680375806055963
    2. ' replacement' → logprob: -7.250967979431152
    3. '_re' → logprob: -8.375967979431152
    4. 're' → logprob: -11.375967979431152
    5. 'replace' → logprob: -11.875967979431152
    6. '-re' → logprob: -12.875967979431152
    7. 'Replacement' → logprob: -13.000967979431152
    8. 'rep' → logprob: -13.125967979431152
    9. 'r' → logprob: -13.750967979431152
    10. ' replacements' → logprob: -13.875967979431152

Token 55: 'placement' (ID: 17947)
  Prédit: 'placement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -0.0031836593989282846
    2. 'place' → logprob: -6.628183841705322
    3. 'peat' → logprob: -7.003183841705322
    4. 'p' → logprob: -7.628183841705322
    5. 'placements' → logprob: -7.878183841705322
    6. 'pl' → logprob: -10.378183364868164
    7. 'pe' → logprob: -11.253183364868164
    8. 's' → logprob: -11.378183364868164
    9. 'plac' → logprob: -11.628183364868164
    10. 'm' → logprob: -12.253183364868164

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008497710223309696
    2. ',
' → logprob: -7.875849723815918
    3. 'import' → logprob: -8.750849723815918
    4. ' ,' → logprob: -8.875849723815918
    5. 'from' → logprob: -9.125849723815918
    6. '<|end|>' → logprob: -10.750849723815918
    7. ',n' → logprob: -12.000849723815918
    8. ',b' → logprob: -12.750849723815918
    9. ',s' → logprob: -12.875849723815918
    10. ',\
' → logprob: -13.000849723815918

Token 57: ' product' (ID: 1888)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -1.2462565898895264
    2. 'per' → logprob: -1.4962565898895264
    3. 'count' → logprob: -1.8712565898895264
    4. 'cycle' → logprob: -2.2462565898895264
    5. 'compress' → logprob: -2.7462565898895264
    6. 'product' → logprob: -2.7462565898895264
    7. 'group' → logprob: -3.3712565898895264
    8. 'chain' → logprob: -3.8712565898895264
    9. ' product' → logprob: -4.7462568283081055
    10. ' compress' → logprob: -4.7462568283081055

Token 58: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007703753653913736
    2. '<|end|>' → logprob: -5.25770378112793
    3. ',
' → logprob: -6.38270378112793
    4. 'import' → logprob: -8.00770378112793
    5. 'from' → logprob: -9.00770378112793
    6. '
' → logprob: -9.75770378112793
    7. '<|end|>' → logprob: -10.00770378112793
    8. ' ,' → logprob: -10.00770378112793
    9. '\n' → logprob: -10.38270378112793
    10. ',n' → logprob: -10.75770378112793

Token 59: 'def' (ID: 1314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035451311618089676
    2. 'import' → logprob: -4.035451412200928
    3. 'from' → logprob: -4.535451412200928
    4. '<|end|>' → logprob: -5.660451412200928
    5. ',
' → logprob: -6.660451412200928
    6. '
' → logprob: -8.16045093536377
    7. ' ,' → logprob: -8.16045093536377
    8. 'def' → logprob: -8.28545093536377
    9. '<|end|>' → logprob: -8.78545093536377
    10. '\n' → logprob: -9.16045093536377

Token 60: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4500741958618164
    2. '_' → logprob: -2.0750741958618164
    3. ' main' → logprob: -2.8250741958618164
    4. ' _' → logprob: -4.325074195861816
    5. ' solve' → logprob: -4.450074195861816
    6. ' space' → logprob: -4.575074195861816
    7. ' dfs' → logprob: -4.575074195861816
    8. ' factorial' → logprob: -4.575074195861816
    9. ' sorted' → logprob: -4.825074195861816
    10. ' calculate' → logprob: -4.825074195861816

Token 61: '_int' (ID: 12285)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.24798817932605743
    2. '(' → logprob: -2.497988224029541
    3. '_' → logprob: -2.872988224029541
    4. '()' → logprob: -2.997988224029541
    5. '():' → logprob: -3.872988224029541
    6. 'line' → logprob: -5.622988224029541
    7. '_input' → logprob: -5.747988224029541
    8. '_token' → logprob: -6.872988224029541
    9. '_string' → logprob: -8.622987747192383
    10. '```' → logprob: -8.622987747192383

Token 62: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.22814124822616577
    2. '()' → logprob: -2.2281413078308105
    3. 's' → logprob: -2.3531413078308105
    4. '():
' → logprob: -7.6031413078308105
    5. ' ()' → logprob: -9.103140830993652
    6. '()*' → logprob: -9.478140830993652
    7. ' ():' → logprob: -9.728140830993652
    8. '()>' → logprob: -9.728140830993652
    9. '`()' → logprob: -10.103140830993652
    10. '```' → logprob: -10.228140830993652

Token 63: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3877682685852051
    2. '()' → logprob: -1.137768268585205
    3. '():
' → logprob: -7.637768268585205
    4. ' ()' → logprob: -8.637767791748047
    5. ' ():' → logprob: -9.137767791748047
    6. 'return' → logprob: -10.512767791748047
    7. '()*' → logprob: -10.512767791748047
    8. 's' → logprob: -11.012767791748047
    9. ':return' → logprob: -11.637767791748047
    10. ':' → logprob: -11.887767791748047

Token 64: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.11442264914512634
    2. 'return' (adapté à ' return') → logprob: -2.364422559738159
    3. 'int' → logprob: -4.864422798156738
    4. ' int' → logprob: -6.114422798156738
    5. '    ' → logprob: -6.239422798156738
    6. '   ' → logprob: -6.614422798156738
    7. ' ' → logprob: -7.614422798156738
    8. '()' → logprob: -8.864422798156738
    9. '	return' → logprob: -9.864422798156738
    10. ' n' → logprob: -10.114422798156738

Token 65: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0005781737272627652
    2. 'int' → logprob: -7.5005784034729
    3. '(int' → logprob: -10.750577926635742
    4. ' ' → logprob: -13.375577926635742
    5. ' map' → logprob: -14.250577926635742
    6. '[int' → logprob: -14.875577926635742
    7. ' in' → logprob: -15.000577926635742
    8. '	int' → logprob: -15.125577926635742
    9. '<int' → logprob: -15.625577926635742
    10. '   ' → logprob: -16.625577926635742

Token 66: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3944889307022095
    2. '(' → logprob: -1.1444889307022095
    3. '(sys' → logprob: -4.89448881149292
    4. 'input' → logprob: -9.394489288330078
    5. '(open' → logprob: -12.519489288330078
    6. '(stdin' → logprob: -12.644489288330078
    7. '(
' → logprob: -12.894489288330078
    8. ' (' → logprob: -13.019489288330078
    9. '()' → logprob: -13.769489288330078
    10. '(raw' → logprob: -14.019489288330078

Token 67: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0041188886389136314
    2. '()' → logprob: -5.504118919372559
    3. '().' → logprob: -10.504118919372559
    4. '()))' → logprob: -12.254118919372559
    5. ' ())' → logprob: -12.504118919372559
    6. ')' → logprob: -13.754118919372559
    7. '();)' → logprob: -13.754118919372559
    8. '(' → logprob: -14.379118919372559
    9. '()]' → logprob: -14.629118919372559
    10. '());' → logprob: -14.879118919372559

Token 68: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006509594968520105
    2. ' def' → logprob: -8.250651359558105
    3. '()' → logprob: -8.500651359558105
    4. '
' → logprob: -10.000651359558105
    5. '\' → logprob: -10.250651359558105
    6. '

' → logprob: -11.125651359558105
    7. '_def' → logprob: -11.250651359558105
    8. '(def' → logprob: -11.500651359558105
    9. '<|end|>' → logprob: -11.500651359558105
    10. ')' → logprob: -11.750651359558105

Token 69: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.029412666335701942
    2. '_' → logprob: -3.9044127464294434
    3. '_read' → logprob: -5.154412746429443
    4. 'read' → logprob: -5.904412746429443
    5. ' ' → logprob: -9.029412269592285
    6. ' _' → logprob: -9.529412269592285
    7. '	read' → logprob: -10.529412269592285
    8. ' readline' → logprob: -10.779412269592285
    9. ' main' → logprob: -11.404412269592285
    10. '_list' → logprob: -11.529412269592285

Token 70: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34430187940597534
    2. '_line' → logprob: -1.3443019390106201
    3. '_str' → logprob: -3.96930193901062
    4. '_list' → logprob: -5.594301700592041
    5. '_int' → logprob: -6.469301700592041
    6. '_string' → logprob: -6.969301700592041
    7. '_s' → logprob: -7.219301700592041
    8. '()' → logprob: -7.219301700592041
    9. '_array' → logprob: -7.219301700592041
    10. 's' → logprob: -7.594301700592041

Token 71: '_n' (ID: 2170)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0008999044075608253
    2. '()' → logprob: -7.500899791717529
    3. '_list' → logprob: -8.875900268554688
    4. '_line' → logprob: -9.000900268554688
    5. '_array' → logprob: -9.625900268554688
    6. '_s' → logprob: -11.750900268554688
    7. '_' → logprob: -12.500900268554688
    8. 'line' → logprob: -12.750900268554688
    9. '_vector' → logprob: -14.125900268554688
    10. 'list' → logprob: -14.750900268554688

Token 72: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.019589388743042946
    2. '`()' → logprob: -5.769589424133301
    3. 'umbers' → logprob: -5.769589424133301
    4. 'list' → logprob: -5.894589424133301
    5. '_list' → logprob: -6.269589424133301
    6. 'um' → logprob: -6.894589424133301
    7. 's' → logprob: -7.019589424133301
    8. 'umber' → logprob: -7.269589424133301
    9. '()]' → logprob: -7.269589424133301
    10. '()">' → logprob: -7.644589424133301

Token 73: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02320762164890766
    2. '():' → logprob: -4.648207664489746
    3. '().' → logprob: -5.023207664489746
    4. '()[' → logprob: -6.273207664489746
    5. '():
' → logprob: -6.398207664489746
    6. '()*' → logprob: -7.273207664489746
    7. 's' → logprob: -7.273207664489746
    8. 'list' → logprob: -8.398207664489746
    9. '(' → logprob: -8.648207664489746
    10. '()>' → logprob: -8.773207664489746

Token 74: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.270993173122406
    2. 'map' → logprob: -1.7709932327270508
    3. 'return' (adapté à ' return') → logprob: -3.020993232727051
    4. ' list' → logprob: -4.520993232727051
    5. ' map' → logprob: -5.395993232727051
    6. ' return' → logprob: -6.020993232727051
    7. '()' → logprob: -8.14599323272705
    8. 's' → logprob: -9.52099323272705
    9. '():' → logprob: -9.89599323272705
    10. '_list' → logprob: -10.77099323272705

Token 75: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.019811592996120453
    2. '(list' → logprob: -4.644811630249023
    3. ' list' → logprob: -4.769811630249023
    4. 'map' → logprob: -6.894811630249023
    5. '(map' → logprob: -8.019811630249023
    6. '[list' → logprob: -10.019811630249023
    7. '[' → logprob: -10.269811630249023
    8. '	list' → logprob: -10.644811630249023
    9. 'tuple' → logprob: -10.769811630249023
    10. 'List' → logprob: -11.019811630249023

Token 76: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.000561373308300972
    2. '(' → logprob: -7.500561237335205
    3. '(int' → logprob: -12.125561714172363
    4. '(input' → logprob: -13.625561714172363
    5. '(list' → logprob: -13.750561714172363
    6. '(eval' → logprob: -14.875561714172363
    7. ' map' → logprob: -16.375560760498047
    8. 'map' → logprob: -16.375560760498047
    9. ' (' → logprob: -17.125560760498047
    10. '	map' → logprob: -17.375560760498047

Token 77: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004074354947078973
    2. '(' → logprob: -8.000407218933105
    3. 'int' → logprob: -9.875407218933105
    4. '<int' → logprob: -11.250407218933105
    5. '=int' → logprob: -12.625407218933105
    6. '[int' → logprob: -13.125407218933105
    7. ',int' → logprob: -14.375407218933105
    8. '(
' → logprob: -14.750407218933105
    9. ' int' → logprob: -15.125407218933105
    10. ']int' → logprob: -15.250407218933105

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10023795068264008
    2. ',input' → logprob: -2.3502378463745117
    3. 'input' → logprob: -11.475237846374512
    4. ' ,' → logprob: -11.600237846374512
    5. '(input' → logprob: -11.975237846374512
    6. '，' → logprob: -12.725237846374512
    7. '(' → logprob: -14.225237846374512
    8. ',int' → logprob: -14.225237846374512
    9. ',(' → logprob: -15.225237846374512
    10. '(),' → logprob: -15.725237846374512

Token 79: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0010505540994927287
    2. ' input' → logprob: -6.8760504722595215
    3. '(input' → logprob: -11.50105094909668
    4. ',input' → logprob: -12.25105094909668
    5. ')' → logprob: -13.87605094909668
    6. ' ' → logprob: -14.37605094909668
    7. '=input' → logprob: -14.62605094909668
    8. '	input' → logprob: -14.87605094909668
    9. '   ' → logprob: -15.62605094909668
    10. '<input' → logprob: -15.75105094909668

Token 80: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.613945101387799e-05
    2. '()' → logprob: -10.000085830688477
    3. '.' → logprob: -11.375085830688477
    4. ')' → logprob: -11.625085830688477
    5. '.split' → logprob: -11.750085830688477
    6. ' ().' → logprob: -12.375085830688477
    7. 'split' → logprob: -12.500085830688477
    8. '(' → logprob: -13.125085830688477
    9. ' .' → logprob: -14.125085830688477
    10. '))' → logprob: -14.625085830688477

Token 81: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015081972815096378
    2. 'strip' → logprob: -6.5015082359313965
    3. 'rstrip' → logprob: -12.376507759094238
    4. '(split' → logprob: -14.251507759094238
    5. ')' → logprob: -14.376507759094238
    6. ' split' → logprob: -15.626507759094238
    7. 's' → logprob: -15.876507759094238
    8. 'spl' → logprob: -16.251508712768555
    9. 'read' → logprob: -17.876508712768555
    10. '_split' → logprob: -18.751508712768555

Token 82: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.043827176094055176
    2. '))' → logprob: -3.6688270568847656
    3. '()' → logprob: -4.168827056884766
    4. '())' → logprob: -6.668827056884766
    5. '(' → logprob: -7.543827056884766
    6. ')' → logprob: -9.918827056884766
    7. '()))
' → logprob: -10.418827056884766
    8. '()));' → logprob: -11.543827056884766
    9. '())))' → logprob: -11.918827056884766
    10. ')))' → logprob: -13.168827056884766

Token 83: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3344220221042633
    2. '
' → logprob: -1.459421992301941
    3. '\' → logprob: -3.9594221115112305
    4. '#' → logprob: -4.7094221115112305
    5. '

' → logprob: -5.0844221115112305
    6. '```' → logprob: -5.0844221115112305
    7. '\n' → logprob: -5.5844221115112305
    8. 'd' → logprob: -5.7094221115112305
    9. '
' → logprob: -6.8344221115112305
    10. '' → logprob: -7.2094221115112305

Token 84: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.16042904555797577
    2. 'read' → logprob: -1.9104290008544922
    3. '_read' → logprob: -8.910429000854492
    4. ' readline' → logprob: -10.410429000854492
    5. ' main' → logprob: -11.660429000854492
    6. '_' → logprob: -11.910429000854492
    7. ' write' → logprob: -12.035429000854492
    8. '	read' → logprob: -12.410429000854492
    9. 'write' → logprob: -12.660429000854492
    10. 'str' → logprob: -13.035429000854492

Token 85: '_float' (ID: 44505)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9707552194595337
    2. '_str' → logprob: -1.3457552194595337
    3. '_line' → logprob: -1.3457552194595337
    4. '_n' → logprob: -3.220755100250244
    5. '_list' → logprob: -3.970755100250244
    6. '_string' → logprob: -4.095755100250244
    7. '_s' → logprob: -5.220755100250244
    8. '()' → logprob: -5.470755100250244
    9. '_int' → logprob: -5.595755100250244
    10. 's' → logprob: -6.345755100250244

Token 86: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0016609008889645338
    2. '():' → logprob: -7.1266608238220215
    3. '(' → logprob: -7.7516608238220215
    4. '()>' → logprob: -8.37666130065918
    5. '()">' → logprob: -9.62666130065918
    6. ' ()' → logprob: -11.00166130065918
    7. '(){' → logprob: -11.25166130065918
    8. '_' → logprob: -11.37666130065918
    9. '().' → logprob: -11.50166130065918
    10. '()?>' → logprob: -11.62666130065918

Token 87: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2849254906177521
    2. '()' → logprob: -1.4099254608154297
    3. '():
' → logprob: -6.03492546081543
    4. '(' → logprob: -7.15992546081543
    5. ' ()' → logprob: -8.15992546081543
    6. ' ():' → logprob: -9.15992546081543
    7. '()>' → logprob: -10.03492546081543
    8. '():

' → logprob: -10.53492546081543
    9. '()
' → logprob: -10.90992546081543
    10. '()`' → logprob: -11.15992546081543

Token 88: ' return' (ID: 622)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.12762001156806946
    2. ' float' → logprob: -2.127619981765747
    3. 'return' (adapté à ' return') → logprob: -7.627620220184326
    4. ' return' → logprob: -9.252619743347168
    5. '(float' → logprob: -9.627619743347168
    6. '   ' → logprob: -10.627619743347168
    7. '=float' → logprob: -11.252619743347168
    8. ' ' → logprob: -13.002619743347168
    9. '    ' → logprob: -14.002619743347168
    10. '  ' → logprob: -14.627619743347168

Token 89: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.3868747651576996
    2. ' float' → logprob: -1.136874794960022
    3. '(float' → logprob: -13.01187515258789
    4. ' ' → logprob: -14.26187515258789
    5. '=float' → logprob: -15.13687515258789
    6. '	float' → logprob: -15.88687515258789
    7. '<float' → logprob: -16.01187515258789
    8. 'f' → logprob: -16.26187515258789
    9. 'flo' → logprob: -16.51187515258789
    10. ',float' → logprob: -17.38687515258789

Token 90: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16030333936214447
    2. '(input' → logprob: -1.9103033542633057
    3. ' (' → logprob: -9.910303115844727
    4. '()' → logprob: -11.410303115844727
    5. 'input' → logprob: -12.535303115844727
    6. '(

' → logprob: -12.535303115844727
    7. '(
' → logprob: -12.785303115844727
    8. '(int' → logprob: -13.410303115844727
    9. '("("' → logprob: -13.660303115844727
    10. '(open' → logprob: -13.660303115844727

Token 91: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002358286874368787
    2. '()' → logprob: -6.377358436584473
    3. ')' → logprob: -7.377358436584473
    4. '()))' → logprob: -11.002358436584473
    5. ' ())' → logprob: -11.627358436584473
    6. '())
' → logprob: -13.502358436584473
    7. '(' → logprob: -13.877358436584473
    8. '())

' → logprob: -14.127358436584473
    9. '();)' → logprob: -14.127358436584473
    10. '))' → logprob: -15.127358436584473

Token 92: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.049676451832056046
    2. '()' → logprob: -3.2996764183044434
    3. '<|end|>' → logprob: -5.549676418304443
    4. '\n' → logprob: -6.174676418304443
    5. '\' → logprob: -6.424676418304443
    6. '```' → logprob: -7.049676418304443
    7. ' def' → logprob: -7.424676418304443
    8. '(' → logprob: -7.799676418304443
    9. '()

' → logprob: -8.174676895141602
    10. '#' → logprob: -8.299676895141602

Token 93: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.06224193051457405
    2. 'read' → logprob: -2.812242031097412
    3. '_read' → logprob: -8.812241554260254
    4. ' ' → logprob: -10.062241554260254
    5. ' float' → logprob: -10.562241554260254
    6. '_' → logprob: -10.812241554260254
    7. ' readline' → logprob: -11.312241554260254
    8. '_float' → logprob: -11.937241554260254
    9. 'float' → logprob: -12.437241554260254
    10. ' input' → logprob: -12.562241554260254

Token 94: '_float' (ID: 44505)
  Prédit: '_float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_float' → logprob: -0.7333932518959045
    2. '_' → logprob: -1.1083931922912598
    3. '_int' → logprob: -2.3583931922912598
    4. '_n' → logprob: -3.1083931922912598
    5. '_line' → logprob: -3.6083931922912598
    6. '_string' → logprob: -4.60839319229126
    7. '_str' → logprob: -4.73339319229126
    8. '__' → logprob: -7.35839319229126
    9. '_s' → logprob: -7.98339319229126
    10. '_list' → logprob: -8.108393669128418

Token 95: '_n' (ID: 2170)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7154586315155029
    2. '_n' → logprob: -0.7154586315155029
    3. '_' → logprob: -3.840458631515503
    4. 'n' → logprob: -8.215458869934082
    5. 's' → logprob: -9.090458869934082
    6. '(' → logprob: -9.340458869934082
    7. '()>' → logprob: -10.590458869934082
    8. '_s' → logprob: -11.215458869934082
    9. ' ()' → logprob: -11.465458869934082
    10. '()">' → logprob: -11.965458869934082

Token 96: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003308062208816409
    2. '(' → logprob: -6.128308296203613
    3. '<|end|>' → logprob: -8.253308296203613
    4. '()>' → logprob: -8.628308296203613
    5. '()">' → logprob: -8.628308296203613
    6. '():' → logprob: -8.878308296203613
    7. '()?>' → logprob: -9.378308296203613
    8. '(){' → logprob: -10.378308296203613
    9. '())' → logprob: -10.378308296203613
    10. '():
' → logprob: -10.503308296203613

Token 97: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5249019265174866
    2. '()' → logprob: -0.8999019265174866
    3. '():
' → logprob: -6.649901866912842
    4. ' ()' → logprob: -9.64990234375
    5. '())' → logprob: -9.77490234375
    6. '()>' → logprob: -10.02490234375
    7. ')' → logprob: -10.02490234375
    8. '()
' → logprob: -10.02490234375
    9. '):' → logprob: -10.27490234375
    10. '()">' → logprob: -10.52490234375

Token 98: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.061182841658592224
    2. ' list' → logprob: -3.061182737350464
    3. 'return' (adapté à ' return') → logprob: -4.561182975769043
    4. ' return' → logprob: -6.186182975769043
    5. ')' → logprob: -12.311182975769043
    6. '=list' → logprob: -13.186182975769043
    7. ' ' → logprob: -13.936182975769043
    8. 'List' → logprob: -15.061182975769043
    9. '(list' → logprob: -15.311182975769043
    10. 'map' → logprob: -15.561182975769043

Token 99: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.061990540474653244
    2. ' list' → logprob: -2.81199049949646
    3. '[' → logprob: -11.436990737915039
    4. 'float' → logprob: -11.686990737915039
    5. 'map' → logprob: -13.686990737915039
    6. '[list' → logprob: -14.061990737915039
    7. ' ' → logprob: -14.686990737915039
    8. ' [' → logprob: -14.936990737915039
    9. '(list' → logprob: -14.936990737915039
    10. 'List' → logprob: -16.06199073791504

Token 100: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2533484101295471
    2. '(map' → logprob: -1.5033483505249023
    3. '(float' → logprob: -6.628348350524902
    4. ' (' → logprob: -11.003348350524902
    5. '(

' → logprob: -11.128348350524902
    6. '(f' → logprob: -11.503348350524902
    7. '("("' → logprob: -11.503348350524902
    8. '(list' → logprob: -11.878348350524902
    9. '(
' → logprob: -11.878348350524902
    10. '(eval' → logprob: -12.503348350524902

Token 101: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.016373341903090477
    2. '(' → logprob: -4.141373157501221
    3. '(lambda' → logprob: -8.516373634338379
    4. '(int' → logprob: -9.641373634338379
    5. 'float' → logprob: -10.516373634338379
    6. '<float' → logprob: -11.266373634338379
    7. ',float' → logprob: -11.516373634338379
    8. '(
' → logprob: -12.391373634338379
    9. '=float' → logprob: -12.516373634338379
    10. ' (' → logprob: -13.016373634338379

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1533222794532776
    2. ',input' → logprob: -2.028322219848633
    3. '(input' → logprob: -4.653322219848633
    4. ' ,' → logprob: -7.653322219848633
    5. '(' → logprob: -8.153322219848633
    6. 'input' → logprob: -8.778322219848633
    7. ')' → logprob: -9.528322219848633
    8. '=input' → logprob: -10.778322219848633
    9. ' (' → logprob: -11.653322219848633
    10. '[input' → logprob: -12.153322219848633

Token 103: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5760900378227234
    2. 'input' → logprob: -0.8260900378227234
    3. '(input' → logprob: -8.826089859008789
    4. ',input' → logprob: -13.076089859008789
    5. '=input' → logprob: -14.326089859008789
    6. ')' → logprob: -15.076089859008789
    7. '	input' → logprob: -15.451089859008789
    8. ' ' → logprob: -15.576089859008789
    9. '<input' → logprob: -15.576089859008789
    10. '_input' → logprob: -16.07608985900879

Token 104: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.2961512513575144e-05
    2. '()' → logprob: -11.000022888183594
    3. ' ().' → logprob: -12.875022888183594
    4. ')' → logprob: -13.375022888183594
    5. '.' → logprob: -13.875022888183594
    6. '(' → logprob: -14.875022888183594
    7. ',' → logprob: -15.375022888183594
    8. ' .' → logprob: -15.750022888183594
    9. '))' → logprob: -15.875022888183594
    10. ' ' → logprob: -16.375022888183594

Token 105: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.0339031834737398e-05
    2. ')' → logprob: -11.125020027160645
    3. ' split' → logprob: -13.125020027160645
    4. 'strip' → logprob: -13.625020027160645
    5. '(split' → logprob: -13.750020027160645
    6. '.split' → logprob: -14.500020027160645
    7. 'spl' → logprob: -14.875020027160645
    8. '().' → logprob: -15.375020027160645
    9. '))' → logprob: -16.00002098083496
    10. 'read' → logprob: -16.50002098083496

Token 106: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.31848037242889404
    2. '()))' → logprob: -1.318480372428894
    3. '()' → logprob: -5.318480491638184
    4. '())' → logprob: -8.568480491638184
    5. ')' → logprob: -9.193480491638184
    6. '(' → logprob: -12.068480491638184
    7. '()))
' → logprob: -12.693480491638184
    8. ' ))' → logprob: -13.943480491638184
    9. '()));' → logprob: -14.193480491638184
    10. '))
' → logprob: -14.443480491638184

Token 107: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00012916464766021818
    2. '\' → logprob: -10.000128746032715
    3. 'd' → logprob: -10.250128746032715
    4. '```' → logprob: -10.875128746032715
    5. '#' → logprob: -11.250128746032715
    6. 'class' → logprob: -11.625128746032715
    7. 'de' → logprob: -13.375128746032715
    8. '
' → logprob: -13.500128746032715
    9. '``' → logprob: -14.625128746032715
    10. '\n' → logprob: -14.750128746032715

Token 108: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.31410616636276245
    2. 'read' → logprob: -1.3141062259674072
    3. '_read' → logprob: -7.189105987548828
    4. 'str' → logprob: -10.564105987548828
    5. '_' → logprob: -11.064105987548828
    6. '_str' → logprob: -11.314105987548828
    7. ' readline' → logprob: -11.814105987548828
    8. ' main' → logprob: -12.314105987548828
    9. 'write' → logprob: -12.439105987548828
    10. '	read' → logprob: -12.439105987548828

Token 109: '_str' (ID: 6182)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.4930793046951294
    2. '_str' → logprob: -1.3680793046951294
    3. '_string' → logprob: -2.24307918548584
    4. '_' → logprob: -3.74307918548584
    5. '_char' → logprob: -6.61807918548584
    6. '_text' → logprob: -6.86807918548584
    7. '_raw' → logprob: -7.36807918548584
    8. '_list' → logprob: -8.24307918548584
    9. '__' → logprob: -8.36807918548584
    10. '_input' → logprob: -8.61807918548584

Token 110: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0007679368136450648
    2. '()' → logprob: -7.250767707824707
    3. '():
' → logprob: -9.875767707824707
    4. '():

' → logprob: -13.500767707824707
    5. ' ():' → logprob: -13.500767707824707
    6. '()>' → logprob: -14.000767707824707
    7. '_n' → logprob: -14.000767707824707
    8. '():
' → logprob: -14.375767707824707
    9. '()">' → logprob: -14.375767707824707
    10. '_' → logprob: -15.250767707824707

Token 111: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.25928646326065063
    2. '()' → logprob: -1.5092864036560059
    3. '():
' → logprob: -5.009286403656006
    4. '   ' → logprob: -7.759286403656006
    5. ' ()' → logprob: -9.884286880493164
    6. ' ():' → logprob: -10.384286880493164
    7. '()
' → logprob: -10.384286880493164
    8. 'return' → logprob: -10.884286880493164
    9. '()>' → logprob: -11.259286880493164
    10. '().' → logprob: -11.509286880493164

Token 112: ' return' (ID: 622)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47418370842933655
    2. 'return' (adapté à ' return') → logprob: -0.9741836786270142
    3. ' return' → logprob: -9.599184036254883
    4. ' input' → logprob: -10.349184036254883
    5. '   ' → logprob: -11.974184036254883
    6. '(input' → logprob: -15.099184036254883
    7. 'str' → logprob: -15.974184036254883
    8. 'def' → logprob: -16.724184036254883
    9. 's' → logprob: -17.099184036254883
    10. '_input' → logprob: -17.724184036254883

Token 113: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1269282102584839
    2. ' input' → logprob: -2.1269283294677734
    3. '(input' → logprob: -15.501928329467773
    4. 'str' → logprob: -17.751928329467773
    5. '=input' → logprob: -18.126928329467773
    6. ' ' → logprob: -19.376928329467773
    7. '<input' → logprob: -19.626928329467773
    8. '	input' → logprob: -19.876928329467773
    9. ',input' → logprob: -20.501928329467773
    10. 's' → logprob: -21.126928329467773

Token 114: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00017529279284644872
    2. '().' → logprob: -8.750175476074219
    3. '()
' → logprob: -12.500175476074219
    4. '(' → logprob: -12.750175476074219
    5. '())' → logprob: -12.750175476074219
    6. '()]' → logprob: -13.125175476074219
    7. ' ()' → logprob: -13.250175476074219
    8. '()

' → logprob: -13.750175476074219
    9. '()`' → logprob: -14.250175476074219
    10. '();' → logprob: -15.000175476074219

Token 115: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009686299599707127
    2. '
' → logprob: -8.125968933105469
    3. '<|end|>' → logprob: -8.250968933105469
    4. '

' → logprob: -9.250968933105469
    5. 'class' → logprob: -9.375968933105469
    6. '#' → logprob: -9.500968933105469
    7. '\' → logprob: -10.000968933105469
    8. '<|end|>' → logprob: -10.250968933105469
    9. '\n' → logprob: -10.500968933105469
    10. '```' → logprob: -10.875968933105469

Token 116: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.0538189560174942
    2. 'read' → logprob: -3.803818941116333
    3. '_read' → logprob: -3.803818941116333
    4. ' write' → logprob: -6.053819179534912
    5. '_' → logprob: -6.678819179534912
    6. '_list' → logprob: -6.803819179534912
    7. '_write' → logprob: -6.803819179534912
    8. '_str' → logprob: -6.803819179534912
    9. '_print' → logprob: -8.678818702697754
    10. 'write' → logprob: -9.053818702697754

Token 117: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.29658961296081543
    2. '_line' → logprob: -1.6715896129608154
    3. '_' → logprob: -2.9215896129608154
    4. '_n' → logprob: -5.0465898513793945
    5. '_s' → logprob: -6.0465898513793945
    6. '_string' → logprob: -6.2965898513793945
    7. '_raw' → logprob: -6.6715898513793945
    8. '__' → logprob: -7.0465898513793945
    9. '_list' → logprob: -7.6715898513793945
    10. '_lines' → logprob: -8.171589851379395

Token 118: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0008263026247732341
    2. '_' → logprob: -7.250826358795166
    3. '()' → logprob: -9.250825881958008
    4. 'n' → logprob: -11.375825881958008
    5. 's' → logprob: -12.625825881958008
    6. '_line' → logprob: -12.750825881958008
    7. ' _' → logprob: -14.250825881958008
    8. '_s' → logprob: -14.625825881958008
    9. '_l' → logprob: -14.750825881958008
    10. 'line' → logprob: -15.250825881958008

Token 119: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01849370263516903
    2. '()' → logprob: -4.01849365234375
    3. '():
' → logprob: -8.76849365234375
    4. '()>' → logprob: -9.14349365234375
    5. '()">' → logprob: -10.76849365234375
    6. ' ()' → logprob: -11.51849365234375
    7. ' ():' → logprob: -11.89349365234375
    8. '():

' → logprob: -11.89349365234375
    9. '().' → logprob: -12.26849365234375
    10. '(' → logprob: -12.39349365234375

Token 120: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03527583181858063
    2. '()' → logprob: -3.410275936126709
    3. '():
' → logprob: -6.660275936126709
    4. '().' → logprob: -8.66027545928955
    5. '()[' → logprob: -9.53527545928955
    6. ' ()' → logprob: -10.41027545928955
    7. ' ():' → logprob: -11.16027545928955
    8. '   ' → logprob: -11.41027545928955
    9. ' =' → logprob: -11.66027545928955
    10. '(' → logprob: -11.78527545928955

Token 121: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024492591619491577
    2. ' return' → logprob: -3.7744925022125244
    3. '   ' → logprob: -7.5244927406311035
    4. '()' → logprob: -8.399492263793945
    5. ')' → logprob: -8.774492263793945
    6. 'split' → logprob: -9.899492263793945
    7. ' ' → logprob: -10.149492263793945
    8. '):
' → logprob: -10.399492263793945
    9. 'list' → logprob: -10.399492263793945
    10. 'def' → logprob: -10.524492263793945

Token 122: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.42075544595718384
    2. 'list' → logprob: -1.420755386352539
    3. ' input' → logprob: -2.670755386352539
    4. ' list' → logprob: -3.420755386352539
    5. '[input' → logprob: -10.920755386352539
    6. 'read' → logprob: -12.170755386352539
    7. '(input' → logprob: -13.045755386352539
    8. '   ' → logprob: -13.670755386352539
    9. ' ' → logprob: -13.795755386352539
    10. 's' → logprob: -14.670755386352539

Token 123: '(map' (ID: 16946)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.9481676816940308
    2. '(map' → logprob: -0.9481676816940308
    3. '(str' → logprob: -1.6981676816940308
    4. '(' → logprob: -3.1981678009033203
    5. '(read' → logprob: -6.82316780090332
    6. ' (' → logprob: -10.44816780090332
    7. '(strip' → logprob: -10.44816780090332
    8. 'map' → logprob: -11.19816780090332
    9. 'input' → logprob: -11.57316780090332
    10. '(split' → logprob: -11.57316780090332

Token 124: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00011534435179783031
    2. '(' → logprob: -9.250115394592285
    3. 'str' → logprob: -10.875115394592285
    4. '(
' → logprob: -15.375115394592285
    5. '(input' → logprob: -16.75011444091797
    6. '	str' → logprob: -16.87511444091797
    7. ' str' → logprob: -17.37511444091797
    8. ',str' → logprob: -17.62511444091797
    9. '(

' → logprob: -18.00011444091797
    10. ')' → logprob: -18.62511444091797

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025219188537448645
    2. ',input' → logprob: -6.002521991729736
    3. '(),' → logprob: -10.502521514892578
    4. '(input' → logprob: -11.752521514892578
    5. ' ,' → logprob: -12.002521514892578
    6. '(' → logprob: -12.502521514892578
    7. 'input' → logprob: -14.252521514892578
    8. ',
' → logprob: -17.002521514892578
    9. ',(' → logprob: -17.377521514892578
    10. ',int' → logprob: -17.377521514892578

Token 126: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.061975862830877304
    2. ' input' → logprob: -2.8119759559631348
    3. '(input' → logprob: -12.311975479125977
    4. ',input' → logprob: -12.686975479125977
    5. '=input' → logprob: -15.436975479125977
    6. '   ' → logprob: -15.811975479125977
    7. '<input' → logprob: -16.561975479125977
    8. '	input' → logprob: -16.561975479125977
    9. '_input' → logprob: -16.936975479125977
    10. '[input' → logprob: -17.436975479125977

Token 127: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.896309739408025e-07
    2. '()' → logprob: -14.750000953674316
    3. '.' → logprob: -15.375000953674316
    4. ' ().' → logprob: -16.0
    5. ' .' → logprob: -17.875
    6. '(' → logprob: -18.125
    7. '.split' → logprob: -18.75
    8. ')' → logprob: -19.0
    9. '))' → logprob: -19.125
    10. ',' → logprob: -20.5

Token 128: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5094070477061905e-05
    2. 'strip' → logprob: -11.250015258789062
    3. ' split' → logprob: -13.500015258789062
    4. ')' → logprob: -14.750015258789062
    5. '(split' → logprob: -16.375015258789062
    6. 'rstrip' → logprob: -16.375015258789062
    7. 'spl' → logprob: -17.750015258789062
    8. '.split' → logprob: -18.250015258789062
    9. '))' → logprob: -18.375015258789062
    10. '().' → logprob: -18.750015258789062

Token 129: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.47532176971435547
    2. '))' → logprob: -0.9753217697143555
    3. '()' → logprob: -6.9753217697143555
    4. '())' → logprob: -8.225321769714355
    5. ')' → logprob: -10.850321769714355
    6. '()))
' → logprob: -11.225321769714355
    7. '(' → logprob: -12.725321769714355
    8. '()));' → logprob: -12.975321769714355
    9. ' ))' → logprob: -14.350321769714355
    10. '))
' → logprob: -14.600321769714355

Token 130: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09248881787061691
    2. 'd' → logprob: -2.4674887657165527
    3. '#' → logprob: -6.467488765716553
    4. '\' → logprob: -6.967488765716553
    5. 'class' → logprob: -7.342488765716553
    6. '
' → logprob: -8.592489242553711
    7. 'de' → logprob: -9.717489242553711
    8. '```' → logprob: -10.467489242553711
    9. '\n' → logprob: -10.592489242553711
    10. '' → logprob: -10.717489242553711

Token 131: ' mt' (ID: 16170)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.7147514224052429
    2. ' main' → logprob: -0.8397514224052429
    3. 'read' → logprob: -3.5897514820098877
    4. 'main' → logprob: -3.8397514820098877
    5. ' solve' → logprob: -4.839751243591309
    6. ' write' → logprob: -5.089751243591309
    7. ' print' → logprob: -6.339751243591309
    8. ' readline' → logprob: -6.464751243591309
    9. ' str' → logprob: -6.839751243591309
    10. ' input' → logprob: -6.839751243591309

Token 132: '(f' (ID: 1526)
  Prédit: '199'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '199' → logprob: -0.258941113948822
    2. '()' → logprob: -2.508941173553467
    3. 'def' → logprob: -3.258941173553467
    4. 'imes' → logprob: -4.383941173553467
    5. 'l' → logprob: -4.633941173553467
    6. 'cars' → logprob: -4.758941173553467
    7. 'a' → logprob: -5.008941173553467
    8. '_def' → logprob: -5.133941173553467
    9. '202' → logprob: -5.258941173553467
    10. 'f' → logprob: -5.383941173553467

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11450217664241791
    2. 'def' → logprob: -2.864502191543579
    3. 'o' → logprob: -4.114501953125
    4. '):
' → logprob: -4.864501953125
    5. 'unc' → logprob: -5.989501953125
    6. '*' → logprob: -6.114501953125
    7. ',' → logprob: -6.114501953125
    8. 'unction' → logprob: -6.364501953125
    9. ')):' → logprob: -6.364501953125
    10. '_' → logprob: -6.489501953125

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22736740112304688
    2. 'def' → logprob: -1.8523674011230469
    3. 'return' → logprob: -4.102367401123047
    4. ' ' → logprob: -5.102367401123047
    5. ' return' → logprob: -5.102367401123047
    6. ')' → logprob: -5.602367401123047
    7. '@' → logprob: -5.977367401123047
    8. ' def' → logprob: -6.227367401123047
    9. '(lambda' → logprob: -6.352367401123047
    10. '    
' → logprob: -6.977367401123047

Token 135: ' import' (ID: 1588)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1823628842830658
    2. 'f' → logprob: -2.4323627948760986
    3. '   ' → logprob: -3.3073627948760986
    4. 'return' → logprob: -4.057363033294678
    5. ' def' → logprob: -4.432363033294678
    6. ' f' → logprob: -5.432363033294678
    7. '@' → logprob: -6.057363033294678
    8. 'fun' → logprob: -6.307363033294678
    9. ' ' → logprob: -6.682363033294678
    10. '
' → logprob: -6.682363033294678

Token 136: ' time' (ID: 1058)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.4542160928249359
    2. ' math' → logprob: -1.0792161226272583
    3. ' threading' → logprob: -4.579216003417969
    4. 'math' → logprob: -4.829216003417969
    5. ' time' → logprob: -5.704216003417969
    6. 'time' → logprob: -6.954216003417969
    7. ' sys' → logprob: -7.704216003417969
    8. 'fun' → logprob: -7.829216003417969
    9. ' traceback' → logprob: -8.079216003417969
    10. ' numpy' → logprob: -8.079216003417969

Token 137: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1556645780801773
    2. ' def' → logprob: -3.4056646823883057
    3. '    
' → logprob: -3.5306646823883057
    4. 'def' → logprob: -3.6556646823883057
    5. '
' → logprob: -4.030664443969727
    6. '	def' → logprob: -4.780664443969727
    7. '    ' → logprob: -4.905664443969727
    8. ' ' → logprob: -5.155664443969727
    9. '       ' → logprob: -5.905664443969727
    10. '  
' → logprob: -6.030664443969727

Token 138: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9195724129676819
    2. '   ' → logprob: -1.419572353363037
    3. '    
' → logprob: -2.169572353363037
    4. '	
' → logprob: -3.044572353363037
    5. ' def' → logprob: -3.294572353363037
    6. 'def' → logprob: -3.669572353363037
    7. ' ' → logprob: -3.669572353363037
    8. '    ' → logprob: -4.044572353363037
    9. '  
' → logprob: -4.419572353363037
    10. '	def' → logprob: -4.419572353363037

Token 139: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.21692252159118652
    2. 'def' (adapté à ' def') → logprob: -2.0919225215911865
    3. '   ' → logprob: -2.7169225215911865
    4. ' return' → logprob: -5.966922760009766
    5. ' start' → logprob: -6.716922760009766
    6. 'return' → logprob: -7.716922760009766
    7. 'start' → logprob: -7.716922760009766
    8. 'import' → logprob: -8.091922760009766
    9. '	def' → logprob: -8.716922760009766
    10. ' import' → logprob: -9.716922760009766

Token 140: ' wrap' (ID: 20404)
  Prédit: ' wrapper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wrapper' → logprob: -0.009639922529459
    2. 'wrapper' → logprob: -5.134639739990234
    3. ' inner' → logprob: -6.884639739990234
    4. ' wrapped' → logprob: -7.009639739990234
    5. '_wrapper' → logprob: -7.009639739990234
    6. ' _' → logprob: -8.134639739990234
    7. '_wrap' → logprob: -8.509639739990234
    8. ' wrap' → logprob: -8.634639739990234
    9. ' decorated' → logprob: -9.759639739990234
    10. ' g' → logprob: -10.259639739990234

Token 141: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2653060257434845
    2. '(f' → logprob: -1.515305995941162
    3. '(*' → logprob: -4.640305995941162
    4. '(func' → logprob: -6.140305995941162
    5. 'per' → logprob: -8.01530647277832
    6. '(fn' → logprob: -8.64030647277832
    7. '(s' → logprob: -9.26530647277832
    8. '(
' → logprob: -9.51530647277832
    9. '(function' → logprob: -9.64030647277832
    10. '(p' → logprob: -9.89030647277832

Token 142: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.00022821188031230122
    2. 'a' → logprob: -8.500227928161621
    3. 'argv' → logprob: -11.875227928161621
    4. 'f' → logprob: -12.250227928161621
    5. ' args' → logprob: -12.375227928161621
    6. 'arg' → logprob: -13.000227928161621
    7. '   ' → logprob: -13.500227928161621
    8. 'ar' → logprob: -13.750227928161621
    9. '	args' → logprob: -14.000227928161621
    10. 'argc' → logprob: -14.500227928161621

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018149138486478478
    2. '):' → logprob: -8.625181198120117
    3. ' ,' → logprob: -13.750181198120117
    4. ',
' → logprob: -14.875181198120117
    5. ')' → logprob: -15.625181198120117
    6. '   ' → logprob: -16.000181198120117
    7. ',*' → logprob: -16.750181198120117
    8. '):
' → logprob: -17.125181198120117
    9. ' ' → logprob: -17.500181198120117
    10. ':' → logprob: -17.750181198120117

Token 144: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.08905604481697083
    2. ' **' → logprob: -2.4640560150146484
    3. '**)' → logprob: -9.464056015014648
    4. ')' → logprob: -11.089056015014648
    5. ' **)' → logprob: -11.839056015014648
    6. 'kwargs' → logprob: -12.214056015014648
    7. ' ' → logprob: -12.589056015014648
    8. ' kwargs' → logprob: -12.964056015014648
    9. '*' → logprob: -12.964056015014648
    10. '**,' → logprob: -14.089056015014648

Token 145: 'kwargs' (ID: 19200)
  Prédit: 'kwargs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kwargs' → logprob: -0.006322166882455349
    2. 'args' → logprob: -5.381322383880615
    3. 'kw' → logprob: -6.506322383880615
    4. 'k' → logprob: -9.381321907043457
    5. ' kwargs' → logprob: -10.631321907043457
    6. '_kwargs' → logprob: -10.631321907043457
    7. 'argv' → logprob: -11.006321907043457
    8. '**' → logprob: -11.756321907043457
    9. 'r' → logprob: -12.131321907043457
    10. ')' → logprob: -12.131321907043457

Token 146: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013472576392814517
    2. '):
' → logprob: -6.626347064971924
    3. ')' → logprob: -11.626347541809082
    4. ':' → logprob: -11.876347541809082
    5. '   ' → logprob: -13.001347541809082
    6. ' ):' → logprob: -13.376347541809082
    7. ' ' → logprob: -14.251347541809082
    8. '):
' → logprob: -15.001347541809082
    9. '():' → logprob: -15.376347541809082
    10. ',' → logprob: -15.376347541809082

Token 147: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002470186213031411
    2. '
' → logprob: -7.127470016479492
    3. 'return' → logprob: -8.002470016479492
    4. '\n' → logprob: -8.002470016479492
    5. '        
' → logprob: -8.502470016479492
    6. '   ' → logprob: -8.752470016479492
    7. '<|end|>' → logprob: -9.002470016479492
    8. ' return' → logprob: -9.127470016479492
    9. ' 
' → logprob: -9.877470016479492
    10. 'import' → logprob: -10.002470016479492

Token 148: ' s' (ID: 265)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.033193301409482956
    2. ' start' → logprob: -3.908193349838257
    3. 'return' → logprob: -5.658193111419678
    4. '       ' → logprob: -5.783193111419678
    5. 'import' → logprob: -6.158193111419678
    6. 's' (adapté à ' s') → logprob: -6.533193111419678
    7. 'res' → logprob: -7.283193111419678
    8. 't' → logprob: -7.533193111419678
    9. 'result' → logprob: -7.783193111419678
    10. 'ret' → logprob: -8.158193588256836

Token 149: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0037720545660704374
    2. '=' → logprob: -6.253772258758545
    3. ' =' → logprob: -6.503772258758545
    4. '=time' → logprob: -9.378771781921387
    5. '_time' → logprob: -9.628771781921387
    6. '   ' → logprob: -9.753771781921387
    7. 'time' → logprob: -10.253771781921387
    8. '_' → logprob: -10.378771781921387
    9. '	t' → logprob: -11.878771781921387
    10. ' ' → logprob: -12.003771781921387

Token 150: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.31327521800994873
    2. 'time' → logprob: -1.3132752180099487
    3. ' f' → logprob: -11.563275337219238
    4. 'f' → logprob: -13.563275337219238
    5. ' ' → logprob: -13.563275337219238
    6. '	time' → logprob: -14.188275337219238
    7. '   ' → logprob: -14.563275337219238
    8. '  ' → logprob: -16.563274383544922
    9. '=time' → logprob: -16.688274383544922
    10. 't' → logprob: -17.188274383544922

Token 151: '.time' (ID: 11486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6929795145988464
    2. '.time' → logprob: -0.8179795145988464
    3. '()' → logprob: -3.442979574203491
    4. '.per' → logprob: -3.817979574203491
    5. '.clock' → logprob: -6.817979335784912
    6. '.sleep' → logprob: -6.942979335784912
    7. '.process' → logprob: -7.067979335784912
    8. ' .' → logprob: -7.317979335784912
    9. '.now' → logprob: -7.692979335784912
    10. '().' → logprob: -8.31797981262207

Token 152: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.1557283111615106e-05
    2. '()
' → logprob: -10.250041961669922
    3. '()*' → logprob: -12.375041961669922
    4. '();' → logprob: -14.500041961669922
    5. ' ()' → logprob: -15.000041961669922
    6. '()

' → logprob: -15.000041961669922
    7. '()>' → logprob: -15.250041961669922
    8. '()-' → logprob: -16.250041961669922
    9. '(' → logprob: -16.375041961669922
    10. '()]' → logprob: -16.500041961669922

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00244711572304368
    2. '<|end|>' → logprob: -7.002447128295898
    3. '
' → logprob: -7.627447128295898
    4. '   ' → logprob: -8.377447128295898
    5. '<|end|>' → logprob: -8.752447128295898
    6. '        
' → logprob: -8.877447128295898
    7. ')' → logprob: -9.127447128295898
    8. '()' → logprob: -9.627447128295898
    9. '	' → logprob: -9.877447128295898
    10. '    
' → logprob: -10.002447128295898

Token 154: ' ret' (ID: 2881)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.42446446418762207
    2. ' result' → logprob: -2.049464464187622
    3. 'result' → logprob: -2.674464464187622
    4. 'res' → logprob: -2.674464464187622
    5. ' ret' → logprob: -3.174464464187622
    6. 'ret' (adapté à ' ret') → logprob: -3.799464464187622
    7. ' r' → logprob: -4.549464225769043
    8. 'r' → logprob: -6.049464225769043
    9. '       ' → logprob: -6.924464225769043
    10. ' retval' → logprob: -7.674464225769043

Token 155: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06999868899583817
    2. ' =' → logprob: -2.6949987411499023
    3. 'urn' → logprob: -10.694998741149902
    4. 'ur' → logprob: -11.069998741149902
    5. '=
' → logprob: -12.069998741149902
    6. 'val' → logprob: -12.319998741149902
    7. ' ' → logprob: -12.569998741149902
    8. '	' → logprob: -13.444998741149902
    9. '_val' → logprob: -13.444998741149902
    10. ' =
' → logprob: -13.444998741149902

Token 156: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.008614808320999146
    2. 'f' → logprob: -4.758615016937256
    3. '	f' → logprob: -15.758614540100098
    4. ' ' → logprob: -16.508615493774414
    5. ' ' → logprob: -17.133615493774414
    6. '[f' → logprob: -20.508615493774414
    7. '​' → logprob: -21.008615493774414
    8. '(f' → logprob: -21.508615493774414
    9. '‌' → logprob: -21.633615493774414
    10. '$f' → logprob: -21.633615493774414

Token 157: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -3.583550642360933e-05
    2. '(' → logprob: -10.250036239624023
    3. '(*)' → logprob: -15.125036239624023
    4. '(
' → logprob: -16.375036239624023
    5. ' (*' → logprob: -18.000036239624023
    6. '*' → logprob: -18.625036239624023
    7. '()' → logprob: -19.000036239624023
    8. '((*' → logprob: -19.250036239624023
    9. '(**' → logprob: -20.250036239624023
    10. '(*(' → logprob: -20.375036239624023

Token 158: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -2.339278580620885e-06
    2. ' args' → logprob: -13.125001907348633
    3. '(args' → logprob: -15.625001907348633
    4. '	args' → logprob: -16.000001907348633
    5. '$args' → logprob: -17.875001907348633
    6. 'argv' → logprob: -18.750001907348633
    7. ',args' → logprob: -18.750001907348633
    8. '_args' → logprob: -19.500001907348633
    9. '.args' → logprob: -19.625001907348633
    10. 'arg' → logprob: -19.625001907348633

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7848862373502925e-05
    2. ',args' → logprob: -11.500027656555176
    3. ' ,' → logprob: -11.750027656555176
    4. ')' → logprob: -11.750027656555176
    5. ',*' → logprob: -14.250027656555176
    6. ',
' → logprob: -14.250027656555176
    7. ' ' → logprob: -15.875027656555176
    8. 'args' → logprob: -16.250028610229492
    9. ',)' → logprob: -16.500028610229492
    10. '**' → logprob: -16.750028610229492

Token 160: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0450107716023922
    2. 'kwargs' → logprob: -3.295010805130005
    3. 'args' → logprob: -5.420010566711426
    4. ' **' → logprob: -6.420010566711426
    5. ' kwargs' → logprob: -7.170010566711426
    6. ' args' → logprob: -10.170010566711426
    7. '**)' → logprob: -10.295010566711426
    8. ' ' → logprob: -10.545010566711426
    9. ')' → logprob: -11.795010566711426
    10. 'argv' → logprob: -12.295010566711426

Token 161: 'kwargs' (ID: 19200)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.0013654737267643213
    2. 'kwargs' → logprob: -6.626365661621094
    3. ' args' → logprob: -10.376365661621094
    4. 'argv' → logprob: -12.376365661621094
    5. ')' → logprob: -14.376365661621094
    6. ' ' → logprob: -14.501365661621094
    7. '(args' → logprob: -14.501365661621094
    8. ',args' → logprob: -14.501365661621094
    9. '	args' → logprob: -14.501365661621094
    10. ',' → logprob: -14.626365661621094

Token 162: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30109938979148865
    2. '       ' → logprob: -1.926099419593811
    3. ')
' → logprob: -2.1760993003845215
    4. '
' → logprob: -8.05109977722168
    5. '   ' → logprob: -8.42609977722168
    6. '<|end|>' → logprob: -9.55109977722168
    7. ')return' → logprob: -9.67609977722168
    8. ')
' → logprob: -10.30109977722168
    9. '<|end|>' → logprob: -10.67609977722168
    10. ',' → logprob: -10.92609977722168

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006787192542105913
    2. '
' → logprob: -7.500678539276123
    3. '<|end|>' → logprob: -9.625679016113281
    4. '        
' → logprob: -10.125679016113281
    5. '<|end|>' → logprob: -12.625679016113281
    6. '   ' → logprob: -12.625679016113281
    7. '    
' → logprob: -12.875679016113281
    8. '
' → logprob: -13.500679016113281
    9. ' return' → logprob: -13.625679016113281
    10. '  
' → logprob: -13.750679016113281

Token 164: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.14124912023544312
    2. ' print' → logprob: -2.391249179840088
    3. 'e' (adapté à ' e') → logprob: -4.141249179840088
    4. ' t' → logprob: -4.266249179840088
    5. 'print' → logprob: -4.891249179840088
    6. '   ' → logprob: -6.141249179840088
    7. 't' → logprob: -8.14124870300293
    8. '       ' → logprob: -8.51624870300293
    9. ' d' → logprob: -10.14124870300293
    10. ' s' → logprob: -11.64124870300293

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024433076381683
    2. '=' → logprob: -1.910244345664978
    3. ' ' → logprob: -11.91024398803711
    4. '=time' → logprob: -12.78524398803711
    5. '-' → logprob: -13.28524398803711
    6. ',' → logprob: -13.28524398803711
    7. '   ' → logprob: -13.41024398803711
    8. 's' → logprob: -13.66024398803711
    9. ' -' → logprob: -13.78524398803711
    10. ' s' → logprob: -14.41024398803711

Token 166: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.038079943507909775
    2. 'time' → logprob: -3.2880799770355225
    3. 's' → logprob: -10.913080215454102
    4. ' s' → logprob: -11.038080215454102
    5. 'e' → logprob: -13.788080215454102
    6. '	time' → logprob: -14.038080215454102
    7. ' ' → logprob: -14.163080215454102
    8. '(time' → logprob: -14.538080215454102
    9. '"time' → logprob: -15.538080215454102
    10. '=time' → logprob: -16.1630802154541

Token 167: '.time' (ID: 11486)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3031710386276245
    2. '.' → logprob: -1.9281710386276245
    3. '.time' → logprob: -2.178171157836914
    4. '().' → logprob: -6.178171157836914
    5. '()
' → logprob: -7.678171157836914
    6. '()-' → logprob: -10.053171157836914
    7. '.s' → logprob: -10.178171157836914
    8. ' .' → logprob: -10.303171157836914
    9. ')' → logprob: -10.428171157836914
    10. '.now' → logprob: -10.553171157836914

Token 168: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.030058935284614563
    2. '()
' → logprob: -3.5300588607788086
    3. ')' → logprob: -8.155058860778809
    4. '()
' → logprob: -12.155058860778809
    5. ')
' → logprob: -12.405058860778809
    6. '())' → logprob: -12.530058860778809
    7. '()

' → logprob: -12.655058860778809
    8. '(' → logprob: -13.655058860778809
    9. ' ()' → logprob: -14.030058860778809
    10. '<|end|>' → logprob: -14.155058860778809

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005191935342736542
    2. '
' → logprob: -8.000518798828125
    3. '        
' → logprob: -9.875518798828125
    4. 'return' → logprob: -10.125518798828125
    5. '<|end|>' → logprob: -10.375518798828125
    6. ' return' → logprob: -10.625518798828125
    7. '   ' → logprob: -11.250518798828125
    8. ',' → logprob: -12.250518798828125
    9. '  
' → logprob: -12.875518798828125
    10. '	' → logprob: -13.000518798828125

Token 170: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07046984136104584
    2. 'print' (adapté à ' print') → logprob: -3.320469856262207
    3. ' print' → logprob: -3.570469856262207
    4. '
' → logprob: -5.945469856262207
    5. '   ' → logprob: -8.445469856262207
    6. '        
' → logprob: -8.570469856262207
    7. ' return' → logprob: -8.570469856262207
    8. 'return' → logprob: -9.195469856262207
    9. ' ' → logprob: -9.320469856262207
    10. ',' → logprob: -9.320469856262207

Token 171: '(e' (ID: 3454)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.005816452670842409
    2. '(' → logprob: -5.880816459655762
    3. '('' → logprob: -6.130816459655762
    4. '("' → logprob: -7.255816459655762
    5. '((' → logprob: -9.755816459655762
    6. '(s' → logprob: -10.005816459655762
    7. '("("' → logprob: -11.380816459655762
    8. '()' → logprob: -12.880816459655762
    9. '('',' → logprob: -13.130816459655762
    10. '('(' → logprob: -13.380816459655762

Token 172: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4745255410671234
    2. '-' → logprob: -0.9745255708694458
    3. '-s' → logprob: -7.724525451660156
    4. ',' → logprob: -13.224525451660156
    5. ' ' → logprob: -13.224525451660156
    6. ')' → logprob: -13.849525451660156
    7. '   ' → logprob: -14.974525451660156
    8. 's' → logprob: -14.974525451660156
    9. ' s' → logprob: -15.099525451660156
    10. ' ,' → logprob: -15.349525451660156

Token 173: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16022484004497528
    2. ' s' → logprob: -1.9102247953414917
    3. ' ' → logprob: -15.035224914550781
    4. '   ' → logprob: -16.03522491455078
    5. '	s' → logprob: -16.41022491455078
    6. '    ' → logprob: -16.91022491455078
    7. '       ' → logprob: -17.41022491455078
    8. '  ' → logprob: -17.66022491455078
    9. ' ' → logprob: -18.03522491455078
    10. '(s' → logprob: -18.16022491455078

Token 174: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026141826529055834
    2. ')
' → logprob: -6.1276140213012695
    3. ',' → logprob: -7.8776140213012695
    4. ' )' → logprob: -10.25261402130127
    5. ')

' → logprob: -12.25261402130127
    6. ')return' → logprob: -13.00261402130127
    7. ')
' → logprob: -13.50261402130127
    8. ' ' → logprob: -13.50261402130127
    9. ' )
' → logprob: -13.87761402130127
    10. ',end' → logprob: -14.12761402130127

Token 175: ' '' (ID: 461)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.7243312001228333
    2. '"' → logprob: -0.8493312001228333
    3. ' file' → logprob: -3.3493311405181885
    4. ''' → logprob: -3.8493311405181885
    5. ')' → logprob: -4.099331378936768
    6. ' "' → logprob: -4.349331378936768
    7. ' '' → logprob: -7.724331378936768
    8. ' ' → logprob: -8.22433090209961
    9. ')
' → logprob: -8.34933090209961
    10. ''s' → logprob: -8.84933090209961

Token 176: 'sec' (ID: 13711)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4616377353668213
    2. 'sec' → logprob: -1.0866377353668213
    3. 'seconds' → logprob: -4.086637496948242
    4. '秒' → logprob: -4.461637496948242
    5. 'ms' → logprob: -6.211637496948242
    6. '')' → logprob: -6.961637496948242
    7. 'secs' → logprob: -7.586637496948242
    8. ' s' → logprob: -8.461637496948242
    9. ' sec' → logprob: -8.836637496948242
    10. ' seconds' → logprob: -10.086637496948242

Token 177: '',' (ID: 787)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.732129693031311
    2. 'onds' → logprob: -0.732129693031311
    3. '')
' → logprob: -3.6071295738220215
    4. 's' → logprob: -4.7321295738220215
    5. ')' → logprob: -6.2321295738220215
    6. 'ond' → logprob: -9.35713005065918
    7. 'conds' → logprob: -9.73213005065918
    8. '')
' → logprob: -10.48213005065918
    9. '.')' → logprob: -10.60713005065918
    10. '')

' → logprob: -10.73213005065918

Token 178: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.5251418352127075
    2. ' file' → logprob: -0.9001418352127075
    3. 'flush' → logprob: -7.400141716003418
    4. ')
' → logprob: -7.650141716003418
    5. ' flush' → logprob: -7.650141716003418
    6. ')' → logprob: -8.400141716003418
    7. '   ' → logprob: -9.400141716003418
    8. '       ' → logprob: -9.775141716003418
    9. ' ' → logprob: -10.525141716003418
    10. ' f' → logprob: -11.025141716003418

Token 179: '=sys' (ID: 149200)
  Prédit: '=sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sys' → logprob: -0.0015031944494694471
    2. '=' → logprob: -6.501502990722656
    3. 'sys' → logprob: -14.751502990722656
    4. ' =' → logprob: -15.626502990722656
    5. '=file' → logprob: -15.751502990722656
    6. ')' → logprob: -16.501502990722656
    7. '=open' → logprob: -17.251502990722656
    8. '=subprocess' → logprob: -17.626502990722656
    9. ' sys' → logprob: -17.751502990722656
    10. '=
' → logprob: -18.876502990722656

Token 180: '.stderr' (ID: 87058)
  Prédit: '.stderr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stderr' → logprob: -0.0005532711511477828
    2. '.stdout' → logprob: -7.625553131103516
    3. '.' → logprob: -10.250553131103516
    4. 'stderr' → logprob: -11.250553131103516
    5. ')' → logprob: -11.375553131103516
    6. '.stdin' → logprob: -13.000553131103516
    7. '(stderr' → logprob: -13.625553131103516
    8. '.argv' → logprob: -14.750553131103516
    9. '.std' → logprob: -14.750553131103516
    10. ' .' → logprob: -15.250553131103516

Token 181: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.160257026553154
    2. ')
' → logprob: -1.9102569818496704
    3. ')
' → logprob: -10.410257339477539
    4. ')

' → logprob: -13.660257339477539
    5. '   ' → logprob: -14.535257339477539
    6. ')`
' → logprob: -14.660257339477539
    7. ' )' → logprob: -15.660257339477539
    8. ' )
' → logprob: -15.785257339477539
    9. ')return' → logprob: -16.28525733947754
    10. ')`' → logprob: -16.41025733947754

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009463872760534286
    2. '
' → logprob: -4.759463787078857
    3. 'return' → logprob: -7.634463787078857
    4. '   ' → logprob: -9.509464263916016
    5. '
' → logprob: -9.509464263916016
    6. '	' → logprob: -9.509464263916016
    7. ' return' → logprob: -10.134464263916016
    8. ')' → logprob: -11.134464263916016
    9. '        
' → logprob: -11.134464263916016
    10. '' → logprob: -11.259464263916016

Token 183: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011712903156876564
    2. 'return' (adapté à ' return') → logprob: -4.636713027954102
    3. ' return' → logprob: -6.261713027954102
    4. '   ' → logprob: -10.636713027954102
    5. '	return' → logprob: -11.136713027954102
    6. '	' → logprob: -12.886713027954102
    7. '
' → logprob: -12.886713027954102
    8. ' ' → logprob: -13.886713027954102
    9. ',' → logprob: -14.886713027954102
    10. ')return' → logprob: -15.011713027954102

Token 184: ' ret' (ID: 2881)
  Prédit: ' ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ret' → logprob: -0.16022473573684692
    2. 'ret' → logprob: -1.9102246761322021
    3. '	ret' → logprob: -15.035224914550781
    4. '(ret' → logprob: -15.535224914550781
    5. '$ret' → logprob: -17.03522491455078
    6. 'rets' → logprob: -18.78522491455078
    7. ' ' → logprob: -18.91022491455078
    8. ' ' → logprob: -19.28522491455078
    9. ' retval' → logprob: -19.28522491455078
    10. '.ret' → logprob: -19.66022491455078

Token 185: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004130522720515728
    2. '
' → logprob: -5.8791303634643555
    3. ')' → logprob: -7.2541303634643555
    4. '    
' → logprob: -8.629130363464355
    5. '<|end|>' → logprob: -8.629130363464355
    6. '	return' → logprob: -9.254130363464355
    7. 'return' → logprob: -9.504130363464355
    8. ' return' → logprob: -10.129130363464355
    9. '<|end|>' → logprob: -11.629130363464355
    10. '	' → logprob: -12.004130363464355

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004535526386462152
    2. '
' → logprob: -8.37545394897461
    3. 'return' → logprob: -8.62545394897461
    4. '    
' → logprob: -10.87545394897461
    5. ' return' → logprob: -12.00045394897461
    6. '<|end|>' → logprob: -12.12545394897461
    7. '	return' → logprob: -12.50045394897461
    8. ' ' → logprob: -12.62545394897461
    9. '  ' → logprob: -12.75045394897461
    10. '   ' → logprob: -14.00045394897461

Token 187: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025524688884615898
    2. 'return' (adapté à ' return') → logprob: -4.275524616241455
    3. ' return' → logprob: -4.525524616241455
    4. ' ' → logprob: -8.525525093078613
    5. '
' → logprob: -8.900525093078613
    6. '	return' → logprob: -9.275525093078613
    7. '    
' → logprob: -10.650525093078613
    8. '  ' → logprob: -12.275525093078613
    9. '' → logprob: -13.275525093078613
    10. '<|end|>' → logprob: -13.525525093078613

Token 188: ' wrap' (ID: 20404)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.0005530327325686812
    2. ' wrap' → logprob: -7.500553131103516
    3. 'warp' → logprob: -17.125553131103516
    4. '.wrap' → logprob: -18.000553131103516
    5. 'wrapper' → logprob: -18.375553131103516
    6. 'w' → logprob: -18.625553131103516
    7. 'wr' → logprob: -19.000553131103516
    8. 'wrapped' → logprob: -19.000553131103516
    9. '_wrap' → logprob: -19.375553131103516
    10. '-wrap' → logprob: -20.125553131103516

Token 189: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0590382814407349
    2. '@' → logprob: -1.1840382814407349
    3. '<|end|>' → logprob: -1.3090382814407349
    4. 'def' → logprob: -3.4340381622314453
    5. '\n' → logprob: -3.8090381622314453
    6. '<|end|>' → logprob: -4.934038162231445
    7. '

' → logprob: -5.184038162231445
    8. '@return' → logprob: -6.059038162231445
    9. '@example' → logprob: -6.809038162231445
    10. '@login' → logprob: -6.809038162231445

Token 190: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0033072312362492085
    2. 'def' → logprob: -6.003307342529297
    3. 'class' → logprob: -7.503307342529297
    4. '@n' → logprob: -8.878307342529297
    5. '@class' → logprob: -9.878307342529297
    6. '#' → logprob: -11.128307342529297
    7. '@m' → logprob: -11.128307342529297
    8. 'from' → logprob: -11.628307342529297
    9. '@test' → logprob: -12.003307342529297
    10. '@dat' → logprob: -12.128307342529297

Token 191: 'mt' (ID: 3586)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6931537985801697
    2. 'mt' → logprob: -0.6931537985801697
    3. 'lt' → logprob: -12.193153381347656
    4. 'staticmethod' → logprob: -14.943153381347656
    5. 'dat' → logprob: -14.943153381347656
    6. 'wrap' → logprob: -14.943153381347656
    7. '_mt' → logprob: -15.693153381347656
    8. 'main' → logprob: -16.443153381347656
    9. 'MT' → logprob: -16.818153381347656
    10. 'ml' → logprob: -17.193153381347656

Token 192: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006752548273652792
    2. '
' → logprob: -5.0067524909973145
    3. ' def' → logprob: -11.131752967834473
    4. '()' → logprob: -11.756752967834473
    5. '(' → logprob: -13.006752967834473
    6. '(def' → logprob: -13.006752967834473
    7. '\' → logprob: -13.131752967834473
    8. '  
' → logprob: -13.256752967834473
    9. 'de' → logprob: -13.881752967834473
    10. '()
' → logprob: -14.131752967834473

Token 193: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2664456789934775e-06
    2. 'main' → logprob: -13.625000953674316
    3. ' def' → logprob: -18.250001907348633
    4. '__' → logprob: -19.750001907348633
    5. 'de' → logprob: -20.625001907348633
    6. 'class' → logprob: -20.625001907348633
    7. '
' → logprob: -21.000001907348633
    8. 'd' → logprob: -21.375001907348633
    9. 'async' → logprob: -21.375001907348633
    10. '#' → logprob: -21.500001907348633

Token 194: ' sl' (ID: 1925)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.15882347524166107
    2. 'main' → logprob: -2.0338234901428223
    3. ' solve' → logprob: -4.658823490142822
    4. 'solve' → logprob: -5.033823490142822
    5. '	main' → logprob: -11.408823013305664
    6. 'solution' → logprob: -13.408823013305664
    7. 'process' → logprob: -13.533823013305664
    8. ' solution' → logprob: -13.658823013305664
    9. 'solver' → logprob: -13.658823013305664
    10. 'resolve' → logprob: -13.908823013305664

Token 195: 'v' (ID: 85)
  Prédit: 'eep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eep' → logprob: -0.2537422180175781
    2. 'ove' → logprob: -2.128742218017578
    3. 'ow' → logprob: -3.753742218017578
    4. 'iding' → logprob: -4.003742218017578
    5. 'e' → logprob: -4.253742218017578
    6. 'ice' → logprob: -4.253742218017578
    7. '():
' → logprob: -5.253742218017578
    8. '()' → logprob: -5.378742218017578
    9. 'alom' → logprob: -5.628742218017578
    10. 'ee' → logprob: -5.628742218017578

Token 196: '(N' (ID: 10564)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0006198656628839672
    2. '():
' → logprob: -7.625619888305664
    3. '()' → logprob: -10.375619888305664
    4. '(' → logprob: -10.375619888305664
    5. 'a' → logprob: -11.000619888305664
    6. '(a' → logprob: -11.125619888305664
    7. ' ():' → logprob: -11.625619888305664
    8. 'ar' → logprob: -11.625619888305664
    9. 'e' → logprob: -12.125619888305664
    10. '(*' → logprob: -12.250619888305664

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015256877057254314
    2. '):' → logprob: -4.265256881713867
    3. ' ,' → logprob: -7.015256881713867
    4. ' ):' → logprob: -8.890256881713867
    5. ':' → logprob: -10.390256881713867
    6. ',
' → logprob: -12.140256881713867
    7. ')' → logprob: -12.515256881713867
    8. ' :' → logprob: -12.515256881713867
    9. ',n' → logprob: -12.765256881713867
    10. ',:' → logprob: -13.015256881713867

Token 198: ' P' (ID: 398)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3082923889160156
    2. 'K' → logprob: -1.9332923889160156
    3. 'M' → logprob: -2.6832923889160156
    4. 'arr' → logprob: -3.6832923889160156
    5. 'X' → logprob: -5.183292388916016
    6. 'S' → logprob: -5.558292388916016
    7. 'Q' → logprob: -5.808292388916016
    8. ' A' → logprob: -5.808292388916016
    9. 'L' → logprob: -5.933292388916016
    10. 'a' → logprob: -6.308292388916016

Token 199: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6330158114433289
    2. ',' → logprob: -0.7580158114433289
    3. '):
' → logprob: -8.633015632629395
    4. ')' → logprob: -9.508015632629395
    5. ' ):' → logprob: -10.008015632629395
    6. ':' → logprob: -10.133015632629395
    7. ' ,' → logprob: -11.133015632629395
    8. 's' → logprob: -11.383015632629395
    9. '):
' → logprob: -12.008015632629395
    10. '_list' → logprob: -12.383015632629395

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08437436819076538
    2. ':' → logprob: -2.58437442779541
    3. '[' → logprob: -6.70937442779541
    4. '(' → logprob: -6.83437442779541
    5. ',' → logprob: -7.33437442779541
    6. ' ' → logprob: -7.45937442779541
    7. ')' → logprob: -8.20937442779541
    8. ':
' → logprob: -8.20937442779541
    9. '    ' → logprob: -8.45937442779541
    10. 'n' → logprob: -8.45937442779541

Token 201: ' Q' (ID: 1486)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2650579512119293
    2. ' dp' → logprob: -2.2650580406188965
    3. 'a' → logprob: -3.7650580406188965
    4. '   ' → logprob: -4.1400580406188965
    5. 'r' → logprob: -4.8900580406188965
    6. 'q' → logprob: -4.8900580406188965
    7. 'd' → logprob: -4.8900580406188965
    8. 'p' → logprob: -5.0150580406188965
    9. 'res' → logprob: -5.1400580406188965
    10. 's' → logprob: -5.5150580406188965

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10581310838460922
    2. '=' → logprob: -2.3558130264282227
    3. ',' → logprob: -5.480813026428223
    4. '   ' → logprob: -7.730813026428223
    5. '=[]' → logprob: -7.980813026428223
    6. ' ' → logprob: -8.105813026428223
    7. 'u' → logprob: -9.855813026428223
    8. '  ' → logprob: -9.855813026428223
    9. '.' → logprob: -10.105813026428223
    10. ')' → logprob: -10.355813026428223

Token 203: ' [-' (ID: 20191)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5815966129302979
    2. '[' → logprob: -1.3315966129302979
    3. '[P' → logprob: -2.706596612930298
    4. '[N' → logprob: -3.081596612930298
    5. 'P' → logprob: -3.956596612930298
    6. '[(' → logprob: -4.081596374511719
    7. 'default' → logprob: -5.331596374511719
    8. 'deque' → logprob: -5.456596374511719
    9. 'list' → logprob: -5.956596374511719
    10. '[max' → logprob: -5.956596374511719

Token 204: '1' (ID: 16)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14773952960968018
    2. 'P' → logprob: -2.5227394104003906
    3. 'x' → logprob: -2.8977394104003906
    4. '1' → logprob: -8.02273941040039
    5. 'heap' → logprob: -8.02273941040039
    6. 'q' → logprob: -8.39773941040039
    7. '(' → logprob: -8.89773941040039
    8. '(x' → logprob: -9.02273941040039
    9. 'N' → logprob: -9.14773941040039
    10. 'float' → logprob: -9.27273941040039

Token 205: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.26765504479408264
    2. ']' → logprob: -2.14265513420105
    3. '*' → logprob: -2.26765513420105
    4. ',' → logprob: -4.642654895782471
    5. '0' → logprob: -7.017654895782471
    6. 'P' → logprob: -7.517654895782471
    7. '00' → logprob: -7.642654895782471
    8. '000' → logprob: -8.017655372619629
    9. '5' → logprob: -8.142655372619629
    10. ')' → logprob: -8.392655372619629

Token 206: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3802003562450409
    2. ']' → logprob: -1.5052003860473633
    3. '*' → logprob: -3.3802003860473633
    4. '0' → logprob: -4.130200386047363
    5. '000' → logprob: -4.130200386047363
    6. ' for' → logprob: -5.380200386047363
    7. '00' → logprob: -5.505200386047363
    8. '7' → logprob: -5.505200386047363
    9. 'for' → logprob: -5.880200386047363
    10. ',' → logprob: -6.005200386047363

Token 207: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3721550405025482
    2. '(N' → logprob: -1.3721550703048706
    3. '(' → logprob: -2.997154951095581
    4. 'P' → logprob: -5.87215518951416
    5. '(P' → logprob: -5.99715518951416
    6. '100' → logprob: -7.74715518951416
    7. '10' → logprob: -8.37215518951416
    8. '101' → logprob: -8.49715518951416
    9. ' (' → logprob: -8.99715518951416
    10. '((' → logprob: -9.24715518951416

Token 208: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0627640038728714
    2. '   ' → logprob: -3.3127639293670654
    3. '<|end|>' → logprob: -4.0627641677856445
    4. '    
' → logprob: -5.9377641677856445
    5. '  
' → logprob: -7.0627641677856445
    6. ',' → logprob: -7.5627641677856445
    7. ' 
' → logprob: -7.6877641677856445
    8. '
' → logprob: -7.8127641677856445
    9. ' ' → logprob: -7.9377641677856445
    10. ')' → logprob: -8.062764167785645

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08357083052396774
    2. '<|end|>' → logprob: -3.583570718765259
    3. '
' → logprob: -3.833570718765259
    4. '    
' → logprob: -4.458570957183838
    5. ' for' → logprob: -5.208570957183838
    6. ' ' → logprob: -5.583570957183838
    7. ' 
' → logprob: -6.208570957183838
    8. ',' → logprob: -6.708570957183838
    9. '  
' → logprob: -6.708570957183838
    10. ')' → logprob: -6.958570957183838

Token 210: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.47081005573272705
    2. 'q' → logprob: -2.8458099365234375
    3. 'p' → logprob: -3.0958099365234375
    4. 'dp' → logprob: -3.0958099365234375
    5. '   ' → logprob: -3.2208099365234375
    6. ' for' → logprob: -3.9708099365234375
    7. 'heap' → logprob: -3.9708099365234375
    8. 'pq' → logprob: -3.9708099365234375
    9. 'i' → logprob: -4.0958099365234375
    10. 'Q' → logprob: -4.4708099365234375

Token 211: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10051116347312927
    2. 'i' → logprob: -2.350511074066162
    3. ' p' → logprob: -9.35051155090332
    4. 'p' → logprob: -9.97551155090332
    5. '_' → logprob: -10.60051155090332
    6. 'x' → logprob: -10.85051155090332
    7. '(i' → logprob: -10.85051155090332
    8. ' x' → logprob: -11.10051155090332
    9. '_i' → logprob: -11.35051155090332
    10. 'k' → logprob: -11.85051155090332

Token 212: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030800074338912964
    2. 'in' → logprob: -3.5308001041412354
    3. ',' → logprob: -7.030799865722656
    4. ' ' → logprob: -9.030799865722656
    5. ' ,' → logprob: -10.780799865722656
    6. 'range' → logprob: -12.655799865722656
    7. 'n' → logprob: -13.155799865722656
    8. 'import' → logprob: -13.280799865722656
    9. '	in' → logprob: -13.280799865722656
    10. '0' → logprob: -13.405799865722656

Token 213: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.09164021164178848
    2. ' p' → logprob: -2.4666402339935303
    3. 'v' → logprob: -7.466639995574951
    4. 'x' → logprob: -7.466639995574951
    5. 'q' → logprob: -8.09164047241211
    6. 'a' → logprob: -8.21664047241211
    7. 'P' → logprob: -8.71664047241211
    8. '(p' → logprob: -9.21664047241211
    9. '_p' → logprob: -9.65414047241211
    10. 'val' → logprob: -9.65414047241211

Token 214: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1004539206624031
    2. 'in' → logprob: -2.3504538536071777
    3. 'n' → logprob: -8.600454330444336
    4. ' ' → logprob: -10.850454330444336
    5. ')' → logprob: -11.350454330444336
    6. ',' → logprob: -11.725454330444336
    7. 'p' → logprob: -12.850454330444336
    8. ']' → logprob: -13.475454330444336
    9. 'air' → logprob: -13.600454330444336
    10. 'range' → logprob: -13.725454330444336

Token 215: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0052342405542731285
    2. ' enumerate' → logprob: -5.255234241485596
    3. '
' → logprob: -15.755233764648438
    4. 'enum' → logprob: -16.380233764648438
    5. 'en' → logprob: -16.380233764648438
    6. '(en' → logprob: -16.505233764648438
    7. 'sorted' → logprob: -18.255233764648438
    8. 'P' → logprob: -18.505233764648438
    9. 'zip' → logprob: -18.505233764648438
    10. '   ' → logprob: -18.505233764648438

Token 216: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.002262305933982134
    2. '(en' → logprob: -6.752262115478516
    3. 'enumer' → logprob: -7.502262115478516
    4. 'P' → logprob: -8.127262115478516
    5. '(range' → logprob: -8.627262115478516
    6. '(zip' → logprob: -10.877262115478516
    7. '(sorted' → logprob: -10.877262115478516
    8. '(p' → logprob: -11.502262115478516
    9. '((' → logprob: -11.877262115478516
    10. ' enumerate' → logprob: -12.377262115478516

Token 217: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004104642663151026
    2. '):
' → logprob: -5.5041046142578125
    3. ':' → logprob: -11.254104614257812
    4. ')' → logprob: -13.004104614257812
    5. ',' → logprob: -13.129104614257812
    6. ']:' → logprob: -13.129104614257812
    7. ' ):' → logprob: -13.504104614257812
    8. '):
' → logprob: -13.504104614257812
    9. '():' → logprob: -14.004104614257812
    10. '   ' → logprob: -14.004104614257812

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09578342735767365
    2. ':' → logprob: -2.4707834720611572
    3. ',' → logprob: -5.470783233642578
    4. ':
' → logprob: -7.845783233642578
    5. '):' → logprob: -7.845783233642578
    6. '<|end|>' → logprob: -8.095783233642578
    7. '   ' → logprob: -8.220783233642578
    8. '        
' → logprob: -8.345783233642578
    9. ' if' → logprob: -8.595783233642578
    10. '    ' → logprob: -8.720783233642578

Token 219: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -0.05673222243785858
    2. ' Q' → logprob: -2.931732177734375
    3. 'if' → logprob: -6.931732177734375
    4. '   ' → logprob: -7.931732177734375
    5. ' if' → logprob: -8.306732177734375
    6. 'q' → logprob: -8.931732177734375
    7. '       ' → logprob: -10.056732177734375
    8. 'for' → logprob: -11.056732177734375
    9. '	Q' → logprob: -11.306732177734375
    10. 'heap' → logprob: -11.306732177734375

Token 220: '[p' (ID: 23234)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.21623174846172333
    2. '[p' → logprob: -1.7162317037582397
    3. '[' → logprob: -4.341231822967529
    4. '[q' → logprob: -7.466231822967529
    5. ' =' → logprob: -7.716231822967529
    6. '=' → logprob: -8.216231346130371
    7. '[P' → logprob: -9.466231346130371
    8. ' [' → logprob: -9.591231346130371
    9. '[s' → logprob: -10.341231346130371
    10. 'p' → logprob: -10.341231346130371

Token 221: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009432812221348286
    2. ']=' → logprob: -4.759432792663574
    3. '[i' → logprob: -8.259432792663574
    4. ' ]' → logprob: -8.509432792663574
    5. '-' → logprob: -8.759432792663574
    6. '=' → logprob: -9.509432792663574
    7. '=i' → logprob: -10.384432792663574
    8. ' =' → logprob: -10.509432792663574
    9. '[' → logprob: -10.759432792663574
    10. '(i' → logprob: -12.009432792663574

Token 222: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001628956088097766
    2. ' ' → logprob: -8.750163078308105
    3. '<|end|>' → logprob: -13.125163078308105
    4. '2' → logprob: -15.000163078308105
    5. ',' → logprob: -15.375163078308105
    6. 'i' → logprob: -15.562663078308105
    7. '=' → logprob: -15.687663078308105
    8. '0' → logprob: -15.750163078308105
    9. '   ' → logprob: -15.750163078308105
    10. ')' → logprob: -15.750163078308105

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5690089639974758e-05
    2. ' ' → logprob: -11.125015258789062
    3. 'i' → logprob: -15.125015258789062
    4. '2' → logprob: -15.125015258789062
    5. '   ' → logprob: -16.812515258789062
    6. '<|end|>' → logprob: -16.812515258789062
    7. '```' → logprob: -17.500015258789062
    8. '
' → logprob: -17.937515258789062
    9. ']' → logprob: -17.937515258789062
    10. ',' → logprob: -18.000015258789062

Token 224: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013854742283001542
    2. ']=' → logprob: -6.626385688781738
    3. ' ]' → logprob: -10.001385688781738
    4. '=' → logprob: -11.376385688781738
    5. ' =' → logprob: -13.376385688781738
    6. ')' → logprob: -15.126385688781738
    7. '=i' → logprob: -15.876385688781738
    8. ']
' → logprob: -15.876385688781738
    9. '],' → logprob: -16.376384735107422
    10. ']+=' → logprob: -16.376384735107422

Token 225: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007012190297245979
    2. ' =' → logprob: -5.007012367248535
    3. '=i' → logprob: -8.132012367248535
    4. '=
' → logprob: -14.257012367248535
    5. '=int' → logprob: -14.882012367248535
    6. '=index' → logprob: -15.007012367248535
    7. '=q' → logprob: -15.132012367248535
    8. '=n' → logprob: -15.257012367248535
    9. '=s' → logprob: -15.257012367248535
    10. '=p' → logprob: -16.00701141357422

Token 226: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004311460361350328
    2. ' i' → logprob: -7.750431060791016
    3. '{i' → logprob: -16.125431060791016
    4. 'str' → logprob: -16.500431060791016
    5. '(i' → logprob: -16.750431060791016
    6. '   ' → logprob: -17.250431060791016
    7. '	i' → logprob: -17.500431060791016
    8. '[i' → logprob: -18.000431060791016
    9. ')i' → logprob: -18.500431060791016
    10. ' ' → logprob: -19.375431060791016

Token 227: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2175579071044922
    2. '
' → logprob: -2.092557907104492
    3. '<|end|>' → logprob: -2.967557907104492
    4. '    
' → logprob: -4.217557907104492
    5. '  
' → logprob: -6.842557907104492
    6. ' for' → logprob: -7.092557907104492
    7. ' 
' → logprob: -7.592557907104492
    8. ',' → logprob: -7.842557907104492
    9. '\n' → logprob: -7.967557907104492
    10. ')' → logprob: -8.092557907104492

Token 228: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 229: ' p' (ID: 275)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.7613849639892578
    2. 'dp' → logprob: -2.386384963989258
    3. 'for' → logprob: -2.386384963989258
    4. 'res' → logprob: -2.636384963989258
    5. 'ans' → logprob: -2.761384963989258
    6. 'i' → logprob: -2.886384963989258
    7. '   ' → logprob: -3.261384963989258
    8. 'l' → logprob: -3.511384963989258
    9. 'x' → logprob: -3.636384963989258
    10. 's' → logprob: -3.636384963989258

Token 230: ' =' (ID: 314)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.647346556186676
    2. 'r' → logprob: -1.8973464965820312
    3. ' =' → logprob: -1.8973464965820312
    4. 'os' → logprob: -2.2723464965820312
    5. '=' → logprob: -3.8973464965820312
    6. 'i' → logprob: -4.272346496582031
    7. 'v' → logprob: -4.397346496582031
    8. 're' → logprob: -5.022346496582031
    9. 'l' → logprob: -6.147346496582031
    10. 'rv' → logprob: -6.272346496582031

Token 231: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.036125559359788895
    2. '-' → logprob: -3.536125659942627
    3. ' ' → logprob: -6.161125659942627
    4. 'Q' → logprob: -6.536125659942627
    5. 'N' → logprob: -6.661125659942627
    6. ' -' → logprob: -6.786125659942627
    7. '-N' → logprob: -9.786125183105469
    8. '[-' → logprob: -9.786125183105469
    9. '-Q' → logprob: -10.036125183105469
    10. '1' → logprob: -10.036125183105469

Token 232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1782583391759545e-05
    2. '2' → logprob: -11.375031471252441
    3. '-' → logprob: -11.875031471252441
    4. 'N' → logprob: -11.875031471252441
    5. ' ' → logprob: -12.500031471252441
    6. '10' → logprob: -14.500031471252441
    7. 'p' → logprob: -15.312531471252441
    8. 'float' → logprob: -15.500031471252441
    9. 'Q' → logprob: -15.562531471252441
    10. '100' → logprob: -15.687531471252441

Token 233: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1728777438402176
    2. '<|end|>' → logprob: -2.422877788543701
    3. '   ' → logprob: -2.922877788543701
    4. ' for' → logprob: -5.672877788543701
    5. ' ' → logprob: -5.797877788543701
    6. '  
' → logprob: -5.922877788543701
    7. '    
' → logprob: -6.422877788543701
    8. ' 
' → logprob: -6.547877788543701
    9. '<|end|>' → logprob: -6.672877788543701
    10. ',' → logprob: -6.922877788543701

Token 234: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2189246267080307
    2. '   ' → logprob: -1.968924641609192
    3. ' for' → logprob: -3.3439245223999023
    4. '  
' → logprob: -5.343924522399902
    5. 'for' → logprob: -5.593924522399902
    6. ' 
' → logprob: -5.593924522399902
    7. '    
' → logprob: -5.593924522399902
    8. ' ' → logprob: -6.343924522399902
    9. '<|end|>' → logprob: -6.593924522399902
    10. '\n' → logprob: -7.093924522399902

Token 235: ' mc' (ID: 36958)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8882715106010437
    2. 'r' → logprob: -1.5132715702056885
    3. 'res' → logprob: -2.1382715702056885
    4. ' for' → logprob: -2.2632715702056885
    5. 'ans' → logprob: -3.2632715702056885
    6. 'cnt' → logprob: -4.138271331787109
    7. ' ans' → logprob: -4.388271331787109
    8. ' res' → logprob: -4.513271331787109
    9. ' r' → logprob: -4.638271331787109
    10. 'c' → logprob: -4.638271331787109

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5369572043418884
    2. '=' → logprob: -0.9119572043418884
    3. 'ount' → logprob: -5.036957263946533
    4. 'ax' → logprob: -5.536957263946533
    5. 'v' → logprob: -7.286957263946533
    6. 'x' → logprob: -7.411957263946533
    7. '   ' → logprob: -7.786957263946533
    8. 'nt' → logprob: -8.286956787109375
    9. 'a' → logprob: -8.661956787109375
    10. 'p' → logprob: -8.661956787109375

Token 237: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3658200800418854
    2. ' ' → logprob: -1.615820050239563
    3. '1' → logprob: -2.2408201694488525
    4. '-' → logprob: -8.365819931030273
    5. ' math' → logprob: -8.365819931030273
    6. 'math' → logprob: -8.740819931030273
    7. ' N' → logprob: -8.865819931030273
    8. 'N' → logprob: -9.240819931030273
    9. ' -' → logprob: -9.615819931030273
    10. 'float' → logprob: -9.740819931030273

Token 238: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0657433420419693
    2. '1' → logprob: -2.8157434463500977
    3. '-' → logprob: -6.065743446350098
    4. 'math' → logprob: -7.565743446350098
    5. 'N' → logprob: -7.815743446350098
    6. 'float' → logprob: -8.190743446350098
    7. ' ' → logprob: -9.565743446350098
    8. '10' → logprob: -10.065743446350098
    9. 'len' → logprob: -10.440743446350098
    10. '[' → logprob: -10.690743446350098

Token 239: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5281447172164917
    2. '   ' → logprob: -0.9031447172164917
    3. '    
' → logprob: -5.778144836425781
    4. '  
' → logprob: -7.278144836425781
    5. ' for' → logprob: -7.528144836425781
    6. '   
' → logprob: -8.778144836425781
    7. 'for' → logprob: -9.028144836425781
    8. ' 
' → logprob: -9.278144836425781
    9. '<|end|>' → logprob: -9.778144836425781
    10. ',' → logprob: -9.903144836425781

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18101638555526733
    2. '
' → logprob: -1.931016445159912
    3. ' for' → logprob: -4.056016445159912
    4. '    
' → logprob: -6.931016445159912
    5. 'for' → logprob: -6.931016445159912
    6. '  
' → logprob: -7.931016445159912
    7. '<|end|>' → logprob: -8.306015968322754
    8. ' ' → logprob: -8.806015968322754
    9. '	for' → logprob: -8.931015968322754
    10. ' 
' → logprob: -9.181015968322754

Token 241: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003193516517058015
    2. ' for' → logprob: -6.003193378448486
    3. '   ' → logprob: -7.253193378448486
    4. '
' → logprob: -12.128193855285645
    5. '	for' → logprob: -13.003193855285645
    6. ' ' → logprob: -14.003193855285645
    7. 'or' → logprob: -15.378193855285645
    8. '  ' → logprob: -16.003192901611328
    9. 'max' → logprob: -16.003192901611328
    10. '    
' → logprob: -16.253192901611328

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6140120625495911
    2. '=' → logprob: -0.8640120625495911
    3. 'ount' → logprob: -4.364012241363525
    4. 'urrent' → logprob: -4.489012241363525
    5. 'ont' → logprob: -4.989012241363525
    6. 'nt' → logprob: -6.364012241363525
    7. '   ' → logprob: -6.614012241363525
    8. 'ur' → logprob: -6.739012241363525
    9. 'for' → logprob: -7.364012241363525
    10. 'ounter' → logprob: -8.114011764526367

Token 243: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06535904854536057
    2. ' ' → logprob: -2.815359115600586
    3. '1' → logprob: -5.690359115600586
    4. ' -' → logprob: -13.690359115600586
    5. '   ' → logprob: -13.815359115600586
    6. '  ' → logprob: -14.065359115600586
    7. '-' → logprob: -14.065359115600586
    8. '<|end|>' → logprob: -14.565359115600586
    9. '2' → logprob: -14.690359115600586
    10. '=' → logprob: -14.690359115600586

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07892316579818726
    2. '1' → logprob: -2.578923225402832
    3. ' ' → logprob: -10.453923225402832
    4. '-' → logprob: -13.328923225402832
    5. '2' → logprob: -13.953923225402832
    6. '   ' → logprob: -15.641423225402832
    7. '[' → logprob: -15.703923225402832
    8. '=' → logprob: -15.766423225402832
    9. 'default' → logprob: -16.266422271728516
    10. '{}' → logprob: -16.266422271728516

Token 245: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001756456564180553
    2. 'for' → logprob: -7.12675666809082
    3. ' for' → logprob: -7.12675666809082
    4. '
' → logprob: -8.87675666809082
    5. '    
' → logprob: -12.25175666809082
    6. '	for' → logprob: -13.12675666809082
    7. ',' → logprob: -14.12675666809082
    8. ' ' → logprob: -15.37675666809082
    9. '  ' → logprob: -15.62675666809082
    10. '<|end|>' → logprob: -15.75175666809082

Token 246: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8391164541244507
    2. ' for' → logprob: -1.2141164541244507
    3. '   ' → logprob: -1.8391164541244507
    4. '
' → logprob: -2.2141165733337402
    5. ' 
' → logprob: -6.83911657333374
    6. '    
' → logprob: -7.58911657333374
    7. '	for' → logprob: -7.83911657333374
    8. '\n' → logprob: -8.714116096496582
    9. ' ' → logprob: -8.839116096496582
    10. ',' → logprob: -9.214116096496582

Token 247: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.0325924449716695e-05
    2. '   ' → logprob: -11.87501049041748
    3. ' for' → logprob: -12.62501049041748
    4. '
' → logprob: -17.750009536743164
    5. '	for' → logprob: -18.500009536743164
    6. 'i' → logprob: -19.875009536743164
    7. 'while' → logprob: -19.875009536743164
    8. '    
' → logprob: -20.625009536743164
    9. 'f' → logprob: -20.625009536743164
    10. '```' → logprob: -21.125009536743164

Token 248: ' q' (ID: 2335)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1702968329191208
    2. 'x' → logprob: -2.0452969074249268
    3. ' i' → logprob: -4.545296669006348
    4. 'q' → logprob: -4.670296669006348
    5. 'v' → logprob: -5.420296669006348
    6. ' x' → logprob: -7.295296669006348
    7. 'p' → logprob: -7.920296669006348
    8. 'j' → logprob: -8.170296669006348
    9. 'a' → logprob: -8.295296669006348
    10. 'qi' → logprob: -8.545296669006348

Token 249: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11326425522565842
    2. 'in' → logprob: -2.238264322280884
    3. ' ' → logprob: -7.988264083862305
    4. ',' → logprob: -10.238264083862305
    5. '   ' → logprob: -10.988264083862305
    6. 'n' → logprob: -11.488264083862305
    7. 'i' → logprob: -11.863264083862305
    8. '	in' → logprob: -11.863264083862305
    9. ')' → logprob: -12.363264083862305
    10. '_in' → logprob: -12.488264083862305

Token 250: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0005803157109767199
    2. 'range' → logprob: -7.625580310821533
    3. ' Q' → logprob: -9.500580787658691
    4. ' range' → logprob: -11.625580787658691
    5. '(Q' → logprob: -11.875580787658691
    6. '   ' → logprob: -15.125580787658691
    7. ')' → logprob: -15.250580787658691
    8. '[' → logprob: -15.750580787658691
    9. ' ' → logprob: -15.750580787658691
    10. 'q' → logprob: -15.875580787658691

Token 251: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003990184981375933
    2. ':
' → logprob: -6.253990173339844
    3. ' in' → logprob: -6.753990173339844
    4. 'in' → logprob: -7.378990173339844
    5. ' :' → logprob: -8.628990173339844
    6. '):' → logprob: -9.628990173339844
    7. '   ' → logprob: -11.878990173339844
    8. '       ' → logprob: -13.128990173339844
    9. ',' → logprob: -13.253990173339844
    10. '=' → logprob: -13.378990173339844

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015407956205308437
    2. ' if' → logprob: -4.765408039093018
    3. '   ' → logprob: -5.765408039093018
    4. '+' → logprob: -6.765408039093018
    5. '
' → logprob: -7.140408039093018
    6. ',' → logprob: -7.390408039093018
    7. '<|end|>' → logprob: -8.26540756225586
    8. '    ' → logprob: -8.76540756225586
    9. 'if' → logprob: -8.76540756225586
    10. ' +' → logprob: -9.26540756225586

Token 253: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0068147084675729275
    2. ' if' → logprob: -5.006814479827881
    3. '       ' → logprob: -9.631814956665039
    4. '   ' → logprob: -10.381814956665039
    5. '
' → logprob: -13.131814956665039
    6. '	if' → logprob: -15.381814956665039
    7. ' ' → logprob: -16.13181495666504
    8. '```' → logprob: -16.50681495666504
    9. '           ' → logprob: -16.63181495666504
    10. '    ' → logprob: -16.88181495666504

Token 254: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.08997205644845963
    2. 'q' → logprob: -2.4649720191955566
    3. ' p' → logprob: -7.089972019195557
    4. 'p' → logprob: -9.214972496032715
    5. '   ' → logprob: -10.214972496032715
    6. ' ' → logprob: -10.339972496032715
    7. '	q' → logprob: -11.589972496032715
    8. ' c' → logprob: -11.964972496032715
    9. '  ' → logprob: -12.464972496032715
    10. '>' → logprob: -12.964972496032715

Token 255: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16027377545833588
    2. ' >' → logprob: -1.910273790359497
    3. ' ' → logprob: -10.910273551940918
    4. '<' → logprob: -11.785273551940918
    5. '==' → logprob: -11.785273551940918
    6. ' <' → logprob: -12.785273551940918
    7. '>
' → logprob: -12.910273551940918
    8. '>=' → logprob: -13.285273551940918
    9. ' ==' → logprob: -13.285273551940918
    10. '   ' → logprob: -13.660273551940918

Token 256: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0017030329909175634
    2. ' p' → logprob: -6.376703262329102
    3. '<p' → logprob: -15.501703262329102
    4. ' ' → logprob: -15.751703262329102
    5. '
' → logprob: -16.0017032623291
    6. '   ' → logprob: -16.6267032623291
    7. 'q' → logprob: -16.6267032623291
    8. '	p' → logprob: -17.2517032623291
    9. '_p' → logprob: -17.6267032623291
    10. 'c' → logprob: -17.7517032623291

Token 257: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5309382081031799
    2. ':
' → logprob: -1.1559381484985352
    3. '           ' → logprob: -2.780938148498535
    4. ' and' → logprob: -3.405938148498535
    5. '+' → logprob: -7.655938148498535
    6. '       ' → logprob: -7.905938148498535
    7. ' :' → logprob: -8.030938148498535
    8. 'and' → logprob: -8.155938148498535
    9. '        ' → logprob: -9.030938148498535
    10. ' +' → logprob: -9.280938148498535

Token 258: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017532380297780037
    2. '       ' → logprob: -6.876753330230713
    3. ' p' → logprob: -8.501752853393555
    4. ' c' → logprob: -8.501752853393555
    5. ':' → logprob: -9.376752853393555
    6. ',' → logprob: -10.251752853393555
    7. ' :' → logprob: -10.876752853393555
    8. ':
' → logprob: -11.001752853393555
    9. '```' → logprob: -11.001752853393555
    10. '               ' → logprob: -11.126752853393555

Token 259: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.7306726574897766
    2. 'c' (adapté à ' c') → logprob: -1.2306725978851318
    3. '           ' → logprob: -1.6056725978851318
    4. ' p' → logprob: -4.105672836303711
    5. 'p' → logprob: -4.730672836303711
    6. '               ' → logprob: -8.980672836303711
    7. '
' → logprob: -10.355672836303711
    8. '       ' → logprob: -10.355672836303711
    9. '            ' → logprob: -10.605672836303711
    10. '```' → logprob: -11.730672836303711

Token 260: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2521110475063324
    2. ' +=' → logprob: -1.5021110773086548
    3. '=' → logprob: -8.752111434936523
    4. ' =' → logprob: -11.127111434936523
    5. ']+=' → logprob: -12.752111434936523
    6. '           ' → logprob: -12.877111434936523
    7. '   ' → logprob: -13.752111434936523
    8. '+' → logprob: -13.752111434936523
    9. '            ' → logprob: -15.002111434936523
    10. '       ' → logprob: -15.502111434936523

Token 261: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '<|end|>' → logprob: -19.00002098083496
    4. '   ' → logprob: -20.12502098083496
    5. '0' → logprob: -20.50002098083496
    6. '```' → logprob: -20.75002098083496
    7. '
' → logprob: -21.87502098083496
    8. ' ' → logprob: -22.37502098083496
    9. '+' → logprob: -22.62502098083496
    10. '۱' → logprob: -22.87502098083496

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '<|end|>' → logprob: -19.375001907348633
    4. '0' → logprob: -20.625001907348633
    5. '```' → logprob: -21.000001907348633
    6. '   ' → logprob: -21.250001907348633
    7. '۱' → logprob: -21.625001907348633
    8. '
' → logprob: -21.875001907348633
    9. '+' → logprob: -22.062501907348633
    10. '-' → logprob: -22.125001907348633

Token 263: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11789301037788391
    2. '       ' → logprob: -2.4928929805755615
    3. '<|end|>' → logprob: -4.367893218994141
    4. '
' → logprob: -4.867893218994141
    5. ' p' → logprob: -5.867893218994141
    6. ' else' → logprob: -6.617893218994141
    7. ' 
' → logprob: -6.742893218994141
    8. '   ' → logprob: -7.492893218994141
    9. ' ' → logprob: -7.992893218994141
    10. 'else' → logprob: -8.24289321899414

Token 264: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3271392285823822
    2. '       ' → logprob: -1.3271392583847046
    3. ' p' → logprob: -5.077139377593994
    4. 'p' → logprob: -5.702139377593994
    5. 'else' → logprob: -5.952139377593994
    6. ' else' → logprob: -6.952139377593994
    7. '   ' → logprob: -8.702138900756836
    8. ',p' → logprob: -8.827138900756836
    9. '<|end|>' → logprob: -8.827138900756836
    10. '```' → logprob: -9.952138900756836

Token 265: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6211862564086914
    2. '       ' → logprob: -0.9961862564086914
    3. ' else' → logprob: -2.3711862564086914
    4. '	else' → logprob: -11.371186256408691
    5. 'elif' → logprob: -11.371186256408691
    6. '```' → logprob: -12.621186256408691
    7. '   ' → logprob: -12.871186256408691
    8. '           ' → logprob: -13.121186256408691
    9. 'p' → logprob: -13.621186256408691
    10. '<|end|>' → logprob: -13.996186256408691

Token 266: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29960107803344727
    2. ':
' → logprob: -1.4246010780334473
    3. '       ' → logprob: -4.799601078033447
    4. '           ' → logprob: -5.049601078033447
    5. ' c' → logprob: -6.174601078033447
    6. '   ' → logprob: -7.174601078033447
    7. ':c' → logprob: -8.049600601196289
    8. ' :' → logprob: -8.549600601196289
    9. ' :
' → logprob: -8.924600601196289
    10. ',' → logprob: -10.049600601196289

Token 267: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23998801410198212
    2. 'c' → logprob: -2.114988088607788
    3. '       ' → logprob: -2.489988088607788
    4. 'mc' → logprob: -5.114987850189209
    5. ' c' → logprob: -5.864987850189209
    6. ' mc' → logprob: -7.989987850189209
    7. '```' → logprob: -8.239988327026367
    8. '   ' → logprob: -8.989988327026367
    9. '               ' → logprob: -9.489988327026367
    10. '
' → logprob: -10.239988327026367

Token 268: ' c' (ID: 274)
  Prédit: 'mc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mc' → logprob: -0.051682546734809875
    2. '           ' → logprob: -4.176682472229004
    3. ' mc' → logprob: -4.551682472229004
    4. 'if' → logprob: -4.551682472229004
    5. 'c' (adapté à ' c') → logprob: -5.176682472229004
    6. '   ' → logprob: -5.551682472229004
    7. '       ' → logprob: -5.676682472229004
    8. ' if' → logprob: -7.676682472229004
    9. 'max' → logprob: -8.176682472229004
    10. '```' → logprob: -10.676682472229004

Token 269: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002978048287332058
    2. ' =' → logprob: -8.125297546386719
    3. '>' → logprob: -13.875297546386719
    4. '=max' → logprob: -14.625297546386719
    5. '=
' → logprob: -15.750297546386719
    6. 'max' → logprob: -16.50029754638672
    7. '=int' → logprob: -17.75029754638672
    8. '=c' → logprob: -18.12529754638672
    9. ',' → logprob: -18.25029754638672
    10. '==' → logprob: -18.50029754638672

Token 270: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000431861262768507
    2. ' ' → logprob: -7.750432014465332
    3. '0' → logprob: -14.375432014465332
    4. '   ' → logprob: -14.500432014465332
    5. '```' → logprob: -18.312931060791016
    6. '  ' → logprob: -18.375431060791016
    7. '
' → logprob: -19.375431060791016
    8. '[' → logprob: -19.500431060791016
    9. 'c' → logprob: -19.500431060791016
    10. ')' → logprob: -19.562931060791016

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '0' → logprob: -16.250003814697266
    4. '   ' → logprob: -18.000003814697266
    5. 'c' → logprob: -19.375003814697266
    6. '```' → logprob: -20.812503814697266
    7. '' → logprob: -20.937503814697266
    8. '۱' → logprob: -21.312503814697266
    9. '１' → logprob: -21.375003814697266
    10. '  ' → logprob: -21.437503814697266

Token 272: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003132976416964084
    2. '
' → logprob: -8.875313758850098
    3. ' p' → logprob: -9.875313758850098
    4. '   ' → logprob: -9.875313758850098
    5. 'p' → logprob: -10.375313758850098
    6. ',p' → logprob: -11.125313758850098
    7. '<|end|>' → logprob: -11.375313758850098
    8. ',' → logprob: -12.500313758850098
    9. '           ' → logprob: -12.875313758850098
    10. '[p' → logprob: -13.750313758850098

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008656067657284439
    2. '   ' → logprob: -7.250865459442139
    3. 'p' → logprob: -8.875865936279297
    4. ' p' → logprob: -11.500865936279297
    5. '           ' → logprob: -12.250865936279297
    6. '
' → logprob: -15.125865936279297
    7. ',p' → logprob: -15.375865936279297
    8. '      ' → logprob: -15.625865936279297
    9. '     ' → logprob: -16.500865936279297
    10. '	p' → logprob: -16.625865936279297

Token 274: ' mc' (ID: 36958)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004638503771275282
    2. '   ' → logprob: -5.754638671875
    3. ' p' → logprob: -6.879638671875
    4. '       ' → logprob: -7.754638671875
    5. '	p' → logprob: -13.879638671875
    6. '           ' → logprob: -14.754638671875
    7. '
' → logprob: -14.879638671875
    8. '    ' → logprob: -15.004638671875
    9. 'if' → logprob: -15.754638671875
    10. '  ' → logprob: -15.754638671875

Token 275: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31337863206863403
    2. ' =' → logprob: -1.3133785724639893
    3. '=max' → logprob: -9.06337833404541
    4. 'max' → logprob: -14.18837833404541
    5. '   ' → logprob: -15.43837833404541
    6. ' max' → logprob: -15.81337833404541
    7. '	' → logprob: -17.813379287719727
    8. '＝' → logprob: -17.938379287719727
    9. '.=' → logprob: -18.188379287719727
    10. '    ' → logprob: -18.188379287719727

Token 276: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.16022443771362305
    2. ' max' → logprob: -1.910224437713623
    3. '	max' → logprob: -16.28522491455078
    4. 'c' → logprob: -16.41022491455078
    5. '(max' → logprob: -16.78522491455078
    6. '   ' → logprob: -17.41022491455078
    7. ' c' → logprob: -17.53522491455078
    8. '[max' → logprob: -18.41022491455078
    9. ' ' → logprob: -18.78522491455078
    10. '       ' → logprob: -18.78522491455078

Token 277: '(mc' (ID: 153812)
  Prédit: '(mc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mc' → logprob: -3.9292415749514475e-05
    2. '(c' → logprob: -10.250039100646973
    3. '(' → logprob: -12.625039100646973
    4. 'mc' → logprob: -15.000039100646973
    5. '_mc' → logprob: -15.750039100646973
    6. 'c' → logprob: -16.12504005432129
    7. '(mac' → logprob: -18.37504005432129
    8. '(tc' → logprob: -18.62504005432129
    9. '(ma' → logprob: -18.87504005432129
    10. ' mc' → logprob: -18.87504005432129

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016134900972247124
    2. ',c' → logprob: -4.141134738922119
    3. 'c' → logprob: -9.766135215759277
    4. ',
' → logprob: -10.766135215759277
    5. ' ,' → logprob: -11.141135215759277
    6. 'mc' → logprob: -12.891135215759277
    7. '(mc' → logprob: -13.141135215759277
    8. '(c' → logprob: -13.891135215759277
    9. ',m' → logprob: -14.141135215759277
    10. ',

' → logprob: -14.266135215759277

Token 279: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.31326231360435486
    2. ' c' → logprob: -1.3132623434066772
    3. ')c' → logprob: -14.563261985778809
    4. '	c' → logprob: -16.438262939453125
    5. '$c' → logprob: -18.313262939453125
    6. '   ' → logprob: -19.063262939453125
    7. '```' → logprob: -19.688262939453125
    8. '<c' → logprob: -19.813262939453125
    9. ')' → logprob: -20.313262939453125
    10. '%c' → logprob: -20.563262939453125

Token 280: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4518319368362427
    2. ')
' → logprob: -1.3268319368362427
    3. '       ' → logprob: -2.326831817626953
    4. ' )
' → logprob: -8.326831817626953
    5. '   ' → logprob: -8.701831817626953
    6. ' )' → logprob: -9.576831817626953
    7. ')
' → logprob: -10.576831817626953
    8. '
' → logprob: -10.576831817626953
    9. ',' → logprob: -11.076831817626953
    10. ')p' → logprob: -11.076831817626953

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011013166047632694
    2. '   ' → logprob: -4.636013031005859
    3. 'p' → logprob: -6.761013031005859
    4. ' p' → logprob: -9.63601303100586
    5. '           ' → logprob: -11.26101303100586
    6. '```' → logprob: -12.26101303100586
    7. '>' → logprob: -12.63601303100586
    8. '<|end|>' → logprob: -13.38601303100586
    9. '0' → logprob: -13.51101303100586
    10. '=' → logprob: -13.88601303100586

Token 282: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -5.919942486798391e-05
    2. ' p' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.125059127807617
    4. '       ' → logprob: -16.875059127807617
    5. '	p' → logprob: -18.250059127807617
    6. '_p' → logprob: -18.625059127807617
    7. '<p' → logprob: -19.750059127807617
    8. '
' → logprob: -19.875059127807617
    9. '        
' → logprob: -21.500059127807617
    10. '           ' → logprob: -21.500059127807617

Token 283: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192973017692566
    2. ' =' → logprob: -1.501929759979248
    3. '=q' → logprob: -14.50192928314209
    4. ',' → logprob: -16.126930236816406
    5. '=
' → logprob: -17.876930236816406
    6. '＝' → logprob: -18.251930236816406
    7. ' =
' → logprob: -18.626930236816406
    8. '=

' → logprob: -19.001930236816406
    9. '=s' → logprob: -19.126930236816406
    10. ' ' → logprob: -19.501930236816406

Token 284: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.7697225252486533e-06
    2. ' q' → logprob: -12.500003814697266
    3. '	q' → logprob: -22.250003814697266
    4. '$q' → logprob: -23.375003814697266
    5. '[q' → logprob: -25.000003814697266
    6. '*q' → logprob: -25.375003814697266
    7. '?q' → logprob: -26.000003814697266
    8. '   ' → logprob: -26.125003814697266
    9. '_q' → logprob: -26.250003814697266
    10. 'qx' → logprob: -26.375003814697266

Token 285: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11543876677751541
    2. '
' → logprob: -2.49043869972229
    3. '<|end|>' → logprob: -3.74043869972229
    4. '    
' → logprob: -6.615438938140869
    5. '\n' → logprob: -7.740438938140869
    6. ' return' → logprob: -9.240438461303711
    7. 'return' → logprob: -9.365438461303711
    8. '  
' → logprob: -9.490438461303711
    9. ')' → logprob: -9.740438461303711
    10. '<|end|>' → logprob: -9.990438461303711

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003062676405534148
    2. '
' → logprob: -6.753062725067139
    3. 'return' → logprob: -7.128062725067139
    4. ' return' → logprob: -7.378062725067139
    5. '    
' → logprob: -8.25306224822998
    6. '<|end|>' → logprob: -9.12806224822998
    7. '	return' → logprob: -10.50306224822998
    8. ')' → logprob: -11.00306224822998
    9. ' 
' → logprob: -11.62806224822998
    10. ',' → logprob: -11.62806224822998

Token 287: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6649538278579712
    2. 'return' (adapté à ' return') → logprob: -0.7899538278579712
    3. ' return' → logprob: -4.164953708648682
    4. 'print' → logprob: -4.289953708648682
    5. 'if' → logprob: -6.289953708648682
    6. ' if' → logprob: -8.41495418548584
    7. '
' → logprob: -8.66495418548584
    8. ' print' → logprob: -9.16495418548584
    9. '    
' → logprob: -9.28995418548584
    10. '#' → logprob: -10.66495418548584

Token 288: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005077573587186635
    2. ' N' → logprob: -8.000507354736328
    3. ' ' → logprob: -9.375507354736328
    4. 'len' → logprob: -9.750507354736328
    5. 'mc' → logprob: -10.750507354736328
    6. '(N' → logprob: -12.375507354736328
    7. '   ' → logprob: -14.000507354736328
    8. 'n' → logprob: -14.375507354736328
    9. '(' → logprob: -14.500507354736328
    10. '
' → logprob: -15.000507354736328

Token 289: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08739177137613297
    2. '-' → logprob: -2.7123918533325195
    3. ' ' → logprob: -4.4623918533325195
    4. '<|end|>' → logprob: -5.4623918533325195
    5. '-m' → logprob: -7.8373918533325195
    6. ' mc' → logprob: -8.21239185333252
    7. ' ' → logprob: -8.33739185333252
    8. '(mc' → logprob: -8.96239185333252
    9. '-N' → logprob: -9.58739185333252
    10. '(N' → logprob: -10.21239185333252

Token 290: ' mc' (ID: 36958)
  Prédit: 'mc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mc' → logprob: -0.003178071230649948
    2. ' mc' → logprob: -5.753178119659424
    3. '(mc' → logprob: -14.878177642822266
    4. '_mc' → logprob: -17.503177642822266
    5. '
' → logprob: -20.503177642822266
    6. '.mc' → logprob: -21.503177642822266
    7. 'MC' → logprob: -21.503177642822266
    8. 'm' → logprob: -21.503177642822266
    9. 'mvc' → logprob: -21.878177642822266
    10. ' ' → logprob: -22.003177642822266

Token 291: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32617998123168945
    2. 'if' → logprob: -1.7011799812316895
    3. 'n' → logprob: -2.7011799812316895
    4. 'print' → logprob: -3.8261799812316895
    5. 'N' → logprob: -5.9511799812316895
    6. '
' → logprob: -6.9511799812316895
    7. '#' → logprob: -7.4511799812316895
    8. '\n' → logprob: -7.5761799812316895
    9. '```' → logprob: -7.7011799812316895
    10. 'for' → logprob: -7.9511799812316895

Token 292: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: ' main' (ID: 2758)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12299728393554688
    2. ' read' → logprob: -2.622997283935547
    3. ' sl' → logprob: -4.497997283935547
    4. ' ' → logprob: -4.497997283935547
    5. ' main' → logprob: -4.622997283935547
    6. '__' → logprob: -4.997997283935547
    7. '_' → logprob: -6.372997283935547
    8. ' _' → logprob: -6.747997283935547
    9. ' ' → logprob: -8.122997283935547
    10. ' int' → logprob: -8.372997283935547

Token 294: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.759734732331708e-05
    2. ' ():' → logprob: -11.500017166137695
    3. '():
' → logprob: -12.125017166137695
    4. '()' → logprob: -13.250017166137695
    5. '(' → logprob: -16.500017166137695
    6. '():
' → logprob: -17.250017166137695
    7. '()>' → logprob: -18.000017166137695
    8. '_' → logprob: -18.125017166137695
    9. '().' → logprob: -18.250017166137695
    10. '(":' → logprob: -18.875017166137695

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02557406947016716
    2. '()' → logprob: -4.525574207305908
    3. '(' → logprob: -4.775574207305908
    4. '    
' → logprob: -6.275574207305908
    5. '
' → logprob: -6.650574207305908
    6. '```' → logprob: -6.775574207305908
    7. '(N' → logprob: -7.900574207305908
    8. '(
' → logprob: -8.40057373046875
    9. 'n' → logprob: -8.40057373046875
    10. '(n' → logprob: -8.77557373046875

Token 296: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.002601341577246785
    2. 'n' → logprob: -6.002601146697998
    3. '   ' → logprob: -9.002601623535156
    4. ' N' → logprob: -12.877601623535156
    5. '	N' → logprob: -17.127601623535156
    6. '    
' → logprob: -18.377601623535156
    7. ' n' → logprob: -18.627601623535156
    8. 'import' → logprob: -18.877601623535156
    9. '	n' → logprob: -19.127601623535156
    10. ' ' → logprob: -19.627601623535156

Token 297: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3164859712123871
    2. '=' → logprob: -1.6914860010147095
    3. ' =' → logprob: -2.44148588180542
    4. '=int' → logprob: -11.816486358642578
    5. ',P' → logprob: -12.066486358642578
    6. ' ,' → logprob: -13.691486358642578
    7. '=P' → logprob: -14.066486358642578
    8. ',N' → logprob: -14.191486358642578
    9. '   ' → logprob: -14.816486358642578
    10. '=N' → logprob: -15.066486358642578

Token 298: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.12725470960140228
    2. 'read' → logprob: -2.1272547245025635
    3. ' int' → logprob: -8.502254486083984
    4. 'int' → logprob: -9.002254486083984
    5. '	read' → logprob: -15.252254486083984
    6. ' ' → logprob: -16.252254486083984
    7. '  ' → logprob: -17.002254486083984
    8. '   ' → logprob: -17.502254486083984
    9. '(read' → logprob: -18.127254486083984
    10. '    ' → logprob: -18.377254486083984

Token 299: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -1.0802738870552275e-05
    2. 'int' → logprob: -11.50001049041748
    3. '_str' → logprob: -15.37501049041748
    4. '_' → logprob: -15.87501049041748
    5. '_line' → logprob: -17.250011444091797
    6. '```' → logprob: -17.500011444091797
    7. '_uint' → logprob: -17.625011444091797
    8. '()' → logprob: -17.750011444091797
    9. '_in' → logprob: -18.000011444091797
    10. 'Int' → logprob: -18.125011444091797

Token 300: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00038336371653713286
    2. '()
' → logprob: -7.875383377075195
    3. '())' → logprob: -13.500383377075195
    4. ' ()' → logprob: -14.625383377075195
    5. '()\' → logprob: -14.875383377075195
    6. '()
' → logprob: -15.125383377075195
    7. ')' → logprob: -15.250383377075195
    8. '()

' → logprob: -15.375383377075195
    9. '(' → logprob: -16.000383377075195
    10. '()<' → logprob: -16.875383377075195

Token 301: '   ' (ID: 271)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.023253049701452255
    2. '   ' → logprob: -3.7732529640197754
    3. ' P' → logprob: -11.898253440856934
    4. '```' → logprob: -14.898253440856934
    5. '	P' → logprob: -15.648253440856934
    6. '  ' → logprob: -15.648253440856934
    7. ' ' → logprob: -16.898252487182617
    8. '    
' → logprob: -17.273252487182617
    9. '
' → logprob: -18.023252487182617
    10. ',P' → logprob: -18.773252487182617

Token 302: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' (adapté à ' P') → logprob: -2.696889623621246e-06
    2. '   ' → logprob: -13.12500286102295
    3. ' P' → logprob: -14.25000286102295
    4. '    
' → logprob: -17.750001907348633
    5. '
' → logprob: -17.875001907348633
    6. '```' → logprob: -19.125001907348633
    7. '	P' → logprob: -19.375001907348633
    8. 'p' → logprob: -19.875001907348633
    9. '       ' → logprob: -20.375001907348633
    10. '  ' → logprob: -21.000001907348633

Token 303: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0485873706638813
    2. ' =' → logprob: -3.0485873222351074
    3. '=[]' → logprob: -18.423587799072266
    4. '_' → logprob: -18.673587799072266
    5. '＝' → logprob: -18.798587799072266
    6. '_=' → logprob: -18.923587799072266
    7. ' ' → logprob: -19.048587799072266
    8. '=
' → logprob: -19.173587799072266
    9. '   ' → logprob: -19.298587799072266
    10. '=create' → logprob: -19.548587799072266

Token 304: ' [' (ID: 723)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.31326186656951904
    2. ' read' → logprob: -1.313261866569519
    3. '	read' → logprob: -16.563261032104492
    4. '(read' → logprob: -18.188261032104492
    5. '.read' → logprob: -19.938261032104492
    6. '_read' → logprob: -20.063261032104492
    7. ' ' → logprob: -20.563261032104492
    8. '   ' → logprob: -21.313261032104492
    9. '[' → logprob: -21.438261032104492
    10. '  ' → logprob: -21.563261032104492

Token 305: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0003473825636319816
    2. 'int' → logprob: -8.000347137451172
    3. ' read' → logprob: -11.750347137451172
    4. '*' → logprob: -13.000347137451172
    5. '
' → logprob: -14.000347137451172
    6. ']' → logprob: -14.250347137451172
    7. '```' → logprob: -16.375347137451172
    8. '	read' → logprob: -16.875347137451172
    9. '   ' → logprob: -17.500347137451172
    10. '(read' → logprob: -17.500347137451172

Token 306: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.000492268183734268
    2. 'int' → logprob: -7.625492095947266
    3. '(int' → logprob: -13.250492095947266
    4. ' int' → logprob: -13.875492095947266
    5. '<int' → logprob: -15.625492095947266
    6. 'Int' → logprob: -15.750492095947266
    7. '[int' → logprob: -15.750492095947266
    8. '_' → logprob: -16.000492095947266
    9. ']int' → logprob: -16.000492095947266
    10. '
' → logprob: -16.000492095947266

Token 307: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019460106268525124
    2. '()]' → logprob: -6.251945972442627
    3. '()
' → logprob: -12.001946449279785
    4. ' ()' → logprob: -12.376946449279785
    5. '_n' → logprob: -13.251946449279785
    6. ']()' → logprob: -14.001946449279785
    7. '()]
' → logprob: -14.001946449279785
    8. 'for' → logprob: -14.251946449279785
    9. '()],' → logprob: -14.751946449279785
    10. '（）' → logprob: -14.876946449279785

Token 308: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004940562648698688
    2. 'for' → logprob: -7.750494003295898
    3. ' for' → logprob: -10.125494003295898
    4. '(' → logprob: -11.875494003295898
    5. '()]' → logprob: -11.875494003295898
    6. ' ()' → logprob: -12.375494003295898
    7. ')' → logprob: -13.125494003295898
    8. '()
' → logprob: -13.625494003295898
    9. '_' → logprob: -14.375494003295898
    10. ']' → logprob: -15.000494003295898

Token 309: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0006597769097425044
    2. ' range' → logprob: -8.000659942626953
    3. ' _' → logprob: -8.250659942626953
    4. '_range' → logprob: -10.375659942626953
    5. 'range' → logprob: -10.875659942626953
    6. ' in' → logprob: -11.625659942626953
    7. '_in' → logprob: -13.375659942626953
    8. 'in' → logprob: -13.875659942626953
    9. '_=' → logprob: -14.500659942626953
    10. '_i' → logprob: -15.500659942626953

Token 310: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2169843316078186
    2. ' range' → logprob: -1.8419842720031738
    3. '_' → logprob: -3.341984272003174
    4. 'in' → logprob: -7.466984272003174
    5. ' in' → logprob: -7.966984272003174
    6. '_range' → logprob: -9.341984748840332
    7. '	range' → logprob: -9.341984748840332
    8. ' ' → logprob: -10.216984748840332
    9. 'i' → logprob: -10.841984748840332
    10. '  ' → logprob: -11.841984748840332

Token 311: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01815146580338478
    2. ' range' → logprob: -4.01815128326416
    3. '_' → logprob: -13.76815128326416
    4. '	range' → logprob: -14.76815128326416
    5. '(range' → logprob: -16.768152236938477
    6. '_range' → logprob: -17.018152236938477
    7. ' ' → logprob: -17.268152236938477
    8. 'rang' → logprob: -18.268152236938477
    9. '  ' → logprob: -18.393152236938477
    10. '   ' → logprob: -19.268152236938477

Token 312: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.27099974633893e-05
    2. 'N' → logprob: -11.500012397766113
    3. '(' → logprob: -13.000012397766113
    4. '(n' → logprob: -15.750012397766113
    5. '(
' → logprob: -16.25001335144043
    6. '	N' → logprob: -16.37501335144043
    7. '   ' → logprob: -17.75001335144043
    8. ' (' → logprob: -17.87501335144043
    9. ' N' → logprob: -18.12501335144043
    10. '
' → logprob: -18.75001335144043

Token 313: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008042841218411922
    2. ']' → logprob: -4.883042812347412
    3. ')' → logprob: -7.758042812347412
    4. '])' → logprob: -12.88304328918457
    5. '()]' → logprob: -13.63304328918457
    6. ')]
' → logprob: -13.75804328918457
    7. ']
' → logprob: -13.88304328918457
    8. '])]' → logprob: -13.88304328918457
    9. '   ' → logprob: -14.00804328918457
    10. ' ]' → logprob: -14.50804328918457

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004768191836774349
    2. '
' → logprob: -5.629768371582031
    3. '    
' → logprob: -6.879768371582031
    4. 'print' → logprob: -9.504768371582031
    5. 'result' → logprob: -10.379768371582031
    6. '<|end|>' → logprob: -12.129768371582031
    7. '```' → logprob: -12.504768371582031
    8. 'rest' → logprob: -12.504768371582031
    9. '  
' → logprob: -13.004768371582031
    10. 'sl' → logprob: -13.254768371582031

Token 315: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0022004556376487017
    2. 'res' → logprob: -6.627200603485107
    3. 'r' → logprob: -8.00220012664795
    4. '   ' → logprob: -8.12720012664795
    5. 'result' → logprob: -9.12720012664795
    6. 'ans' → logprob: -9.25220012664795
    7. ' print' → logprob: -11.12720012664795
    8. 'ret' → logprob: -11.37720012664795
    9. 'answer' → logprob: -12.62720012664795
    10. 'k' → logprob: -12.75220012664795

Token 316: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0021885682363063097
    2. '(' → logprob: -6.127188682556152
    3. '((' → logprob: -13.877188682556152
    4. '(
' → logprob: -13.877188682556152
    5. '(len' → logprob: -14.627188682556152
    6. '(S' → logprob: -14.752188682556152
    7. '(sl' → logprob: -15.627188682556152
    8. '(l' → logprob: -15.877188682556152
    9. '()' → logprob: -16.502187728881836
    10. '('' → logprob: -16.627187728881836

Token 317: 'lv' (ID: 33940)
  Prédit: 'lv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lv' → logprob: -2.1888679839321412e-05
    2. 'l' → logprob: -10.750021934509277
    3. '1' → logprob: -16.12502098083496
    4. 'vl' → logprob: -16.37502098083496
    5. ' lv' → logprob: -16.50002098083496
    6. '(l' → logprob: -16.75002098083496
    7. '(' → logprob: -18.50002098083496
    8. '{' → logprob: -18.62502098083496
    9. '_lv' → logprob: -18.62502098083496
    10. '
' → logprob: -19.12502098083496

Token 318: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0004985823179595172
    2. '(' → logprob: -7.6254987716674805
    3. ' (' → logprob: -12.12549877166748
    4. ')' → logprob: -12.50049877166748
    5. ')(' → logprob: -14.37549877166748
    6. '(
' → logprob: -15.00049877166748
    7. ',N' → logprob: -15.75049877166748
    8. ',' → logprob: -15.75049877166748
    9. '(P' → logprob: -16.250497817993164
    10. '```' → logprob: -16.500497817993164

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019357812125235796
    2. ',P' → logprob: -6.251935958862305
    3. ' ,' → logprob: -12.626935958862305
    4. ',
' → logprob: -12.626935958862305
    5. '(P' → logprob: -14.876935958862305
    6. '   ' → logprob: -15.376935958862305
    7. ',Q' → logprob: -17.251935958862305
    8. 'P' → logprob: -17.501935958862305
    9. ',p' → logprob: -17.751935958862305
    10. ')' → logprob: -18.251935958862305

Token 320: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.008615161292254925
    2. ' P' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.133615493774414
    4. '(P' → logprob: -15.508615493774414
    5. ' ' → logprob: -15.883615493774414
    6. '[P' → logprob: -17.133615493774414
    7. '	P' → logprob: -17.633615493774414
    8. ',P' → logprob: -17.883615493774414
    9. '<P' → logprob: -18.258615493774414
    10. ')' → logprob: -18.383615493774414

Token 321: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00407923199236393
    2. ')' → logprob: -5.504079341888428
    3. '))
' → logprob: -14.12907886505127
    4. ')))' → logprob: -16.879079818725586
    5. ')
' → logprob: -17.129079818725586
    6. ' ))' → logprob: -17.379079818725586
    7. '),' → logprob: -18.004079818725586
    8. '));' → logprob: -19.254079818725586
    9. '])' → logprob: -19.379079818725586
    10. '()))' → logprob: -19.504079818725586

Token 322: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0001431114797014743
    2. 'main' → logprob: -10.250143051147461
    3. '<|end|>' → logprob: -10.250143051147461
    4. '
' → logprob: -10.875143051147461
    5. ' if' → logprob: -11.000143051147461
    6. '```' → logprob: -11.125143051147461
    7. '\n' → logprob: -11.375143051147461
    8. '    
' → logprob: -12.750143051147461
    9. '\' → logprob: -13.125143051147461
    10. '  
' → logprob: -13.250143051147461

Token 323: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.018186349421739578
    2. '__' → logprob: -4.018186569213867
    3. '_name' → logprob: -11.268186569213867
    4. ' ' → logprob: -11.518186569213867
    5. '_' → logprob: -11.768186569213867
    6. 'name' → logprob: -12.268186569213867
    7. ' _' → logprob: -15.018186569213867
    8. ' ' → logprob: -15.393186569213867
    9. '___' → logprob: -15.643186569213867
    10. ' ' → logprob: -15.768186569213867

Token 324: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08557896316051483
    2. ' ==' → logprob: -3.2105789184570312
    3. ' __' → logprob: -3.2105789184570312
    4. '==' → logprob: -6.710578918457031
    5. '_' → logprob: -9.460578918457031
    6. 'name' → logprob: -10.585578918457031
    7. '=="' → logprob: -12.710578918457031
    8. '_name' → logprob: -12.710578918457031
    9. '=' → logprob: -12.835578918457031
    10. ' _' → logprob: -12.960578918457031

Token 325: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.2200749754119897e-06
    2. '__.__' → logprob: -13.375001907348633
    3. '__
' → logprob: -15.250001907348633
    4. '__.' → logprob: -16.125001907348633
    5. '____' → logprob: -16.500001907348633
    6. '___' → logprob: -16.500001907348633
    7. '==' → logprob: -16.750001907348633
    8. '_' → logprob: -17.250001907348633
    9. '__

' → logprob: -18.625001907348633
    10. ' __' → logprob: -18.625001907348633

Token 326: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7129667401313782
    2. '==' → logprob: -0.9629667401313782
    3. '__' → logprob: -2.0879666805267334
    4. '=="' → logprob: -5.5879669189453125
    5. '=='' → logprob: -8.212966918945312
    6. '==
' → logprob: -10.337966918945312
    7. '_' → logprob: -10.462966918945312
    8. '=' → logprob: -11.337966918945312
    9. '.__' → logprob: -12.212966918945312
    10. ' =="' → logprob: -12.337966918945312

Token 327: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16024038195610046
    2. ''' → logprob: -1.9102404117584229
    3. '__' → logprob: -11.535240173339844
    4. ' "__' → logprob: -12.285240173339844
    5. ' '__' → logprob: -14.035240173339844
    6. '   ' → logprob: -15.410240173339844
    7. ''"' → logprob: -15.660240173339844
    8. ' ' → logprob: -15.785240173339844
    9. '"user' → logprob: -16.285240173339844
    10. '"name' → logprob: -17.035240173339844

Token 328: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -9.088346359931165e-07
    2. 'name' → logprob: -14.000000953674316
    3. '__' → logprob: -18.375
    4. 'm' → logprob: -19.25
    5. '_main' → logprob: -20.25
    6. ' main' → logprob: -20.5
    7. 'ma' → logprob: -20.875
    8. '	main' → logprob: -22.75
    9. '(main' → logprob: -23.75
    10. '-main' → logprob: -24.375

Token 329: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.10025282949209213
    2. '__' → logprob: -2.350252866744995
    3. '__":
' → logprob: -10.475253105163574
    4. '__:' → logprob: -11.100253105163574
    5. '_' → logprob: -13.850253105163574
    6. '__.' → logprob: -14.225253105163574
    7. '':' → logprob: -14.225253105163574
    8. '___' → logprob: -15.600253105163574
    9. '__
' → logprob: -16.100252151489258
    10. '__.__' → logprob: -16.350252151489258

Token 330: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.005667106248438358
    2. ' main' → logprob: -5.505667209625244
    3. '   ' → logprob: -6.880667209625244
    4. '	main' → logprob: -7.505667209625244
    5. '_main' → logprob: -12.255666732788086
    6. '    
' → logprob: -13.005666732788086
    7. '(main' → logprob: -14.380666732788086
    8. ' ' → logprob: -14.380666732788086
    9. '__' → logprob: -14.505666732788086
    10. '
' → logprob: -14.755666732788086

Token 331: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -5.512236498361744e-07
    2. ' main' → logprob: -14.500000953674316
    3. '	main' → logprob: -19.375
    4. 'import' → logprob: -21.5
    5. '(main' → logprob: -23.25
    6. '_main' → logprob: -23.375
    7. '.main' → logprob: -24.25
    8. '   ' → logprob: -24.625
    9. '```' → logprob: -26.875
    10. 'Main' → logprob: -26.875

Token 332: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 330
Tokens correctement prédits (1ère position, stricte): 129
Tokens correctement prédits (1ère position, avec adaptation): 140
Tokens correctement prédits (top 10): 283
Précision stricte (1ère position): 39.09%
Précision adaptée (1ère position): 42.42%
Précision (top 10): 85.76%
================================================================================
