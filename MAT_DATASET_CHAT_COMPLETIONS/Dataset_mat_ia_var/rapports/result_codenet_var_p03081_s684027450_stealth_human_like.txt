================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, Q = map(int, input().split())
S = input()
TD = []
for i in range(Q):
    temp = input().split()
    TD.append((temp[0], temp[1]))

def isDead(idx):
    cur = idx
    for t, d in TD:
        if S[cur] == t:
            if d == 'L':
                cur -= 1
                if cur < 0:
                    return -1
            else:
                cur += 1
                if cur >= N:
                    return 1 # survived right
    return 0

lft = -1
rgt = N

# for left boundary... kinda binary search?
while rgt - lft > 1:
    mid = (lft + rgt) // 2
    res = isDead(mid)
    if res == -1:
        lft = mid
    else:
        rgt = mid

leftSave = rgt

ll = -1
rr = N
while rr - ll > 1:
    mid = (ll + rr) // 2
    res = isDead(mid)
    if res == 1:
        rr = mid
    else:
        ll = mid

rightSave = ll

# print("INTERVAL", leftSave, rightSave)
result = (rightSave - leftSave + 1)
print(result)

#for check
#for i in range(N):
#    print(i, isDead(i))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' Q' (ID: 1486)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00661056861281395
    2. ' =' → logprob: -5.63161039352417
    3. ',' → logprob: -5.88161039352417
    4. '[' → logprob: -9.631610870361328
    5. '.' → logprob: -10.131610870361328
    6. ';' → logprob: -11.006610870361328
    7. '```' → logprob: -11.131610870361328
    8. ')' → logprob: -11.256610870361328
    9. ' ' → logprob: -11.381610870361328
    10. '_' → logprob: -11.506610870361328

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.11672542244195938
    2. 'map' → logprob: -2.366725444793701
    3. ' ' → logprob: -4.741725444793701
    4. 'input' → logprob: -6.366725444793701
    5. '10' → logprob: -6.366725444793701
    6. ' int' → logprob: -6.616725444793701
    7. ' input' → logprob: -6.741725444793701
    8. ' list' → logprob: -7.366725444793701
    9. 'int' → logprob: -7.616725444793701
    10. 'list' → logprob: -8.491724967956543

Token 5: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.23597736656665802
    2. '(' → logprob: -1.7359774112701416
    3. '(lambda' → logprob: -3.9859774112701416
    4. '(str' → logprob: -4.4859771728515625
    5. '<|end|>' → logprob: -5.9859771728515625
    6. '[int' → logprob: -8.110977172851562
    7. 'int' → logprob: -8.360977172851562
    8. '(input' → logprob: -8.360977172851562
    9. '<int' → logprob: -8.485977172851562
    10. '```' → logprob: -9.235977172851562

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.13659745454788208
    2. ')' → logprob: -3.0115973949432373
    3. ',' → logprob: -3.2615973949432373
    4. ',input' → logprob: -3.8865973949432373
    5. '(' → logprob: -4.886597633361816
    6. 'input' → logprob: -5.261597633361816
    7. '(int' → logprob: -5.761597633361816
    8. '```' → logprob: -6.636597633361816
    9. '`' → logprob: -7.386597633361816
    10. '<input' → logprob: -8.011597633361816

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06197575107216835
    2. ' input' → logprob: -2.8119757175445557
    3. ')' → logprob: -12.186975479125977
    4. '(input' → logprob: -13.061975479125977
    5. ',input' → logprob: -14.186975479125977
    6. ' ' → logprob: -15.811975479125977
    7. '	input' → logprob: -16.561975479125977
    8. '=input' → logprob: -17.186975479125977
    9. '```' → logprob: -17.436975479125977
    10. '<input' → logprob: -17.686975479125977

Token 8: '().' (ID: 1454)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.7212679982185364
    2. '()' → logprob: -0.8462679982185364
    3. '())' → logprob: -3.3462679386138916
    4. '("' → logprob: -3.9712679386138916
    5. '("("' → logprob: -4.346268177032471
    6. '(' → logprob: -4.471268177032471
    7. '(""))' → logprob: -6.221268177032471
    8. '("")' → logprob: -6.721268177032471
    9. '().' → logprob: -7.096268177032471
    10. ')' → logprob: -7.721268177032471

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0087230633944273
    2. 'strip' → logprob: -4.758723258972168
    3. ')' → logprob: -9.508723258972168
    4. 'rstrip' → logprob: -11.008723258972168
    5. 'read' → logprob: -11.133723258972168
    6. ' split' → logprob: -13.133723258972168
    7. 'replace' → logprob: -14.383723258972168
    8. 'decode' → logprob: -16.13372230529785
    9. 'spl' → logprob: -16.50872230529785
    10. ' readline' → logprob: -16.50872230529785

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07142249494791031
    2. '())' → logprob: -2.946422576904297
    3. '))' → logprob: -4.196422576904297
    4. '()' → logprob: -7.071422576904297
    5. '()))' → logprob: -8.321422576904297
    6. '`)' → logprob: -9.446422576904297
    7. '(' → logprob: -9.446422576904297
    8. '('' → logprob: -10.821422576904297
    9. '```' → logprob: -11.321422576904297
    10. ')`' → logprob: -11.821422576904297

Token 11: 'S' (ID: 50)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5816687345504761
    2. 'for' → logprob: -1.081668734550476
    3. 'a' → logprob: -3.0816688537597656
    4. '\' → logprob: -4.206668853759766
    5. 'x' → logprob: -5.081668853759766
    6. '
' → logprob: -5.206668853759766
    7. '```' → logprob: -5.206668853759766
    8. '[' → logprob: -5.456668853759766
    9. '#' → logprob: -5.956668853759766
    10. 's' → logprob: -6.331668853759766

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.830668032169342
    2. '=' → logprob: -1.0806679725646973
    3. '.' → logprob: -2.2056679725646973
    4. ' =' → logprob: -2.3306679725646973
    5. '_' → logprob: -5.205667972564697
    6. '[:]' → logprob: -5.330667972564697
    7. '[i' → logprob: -6.580667972564697
    8. '[]' → logprob: -6.955667972564697
    9. '[:' → logprob: -7.080667972564697
    10. ')' → logprob: -7.830667972564697

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6326425671577454
    2. ' input' → logprob: -0.7576425671577454
    3. 'list' → logprob: -10.88264274597168
    4. ' list' → logprob: -11.13264274597168
    5. '=input' → logprob: -13.25764274597168
    6. '[input' → logprob: -13.63264274597168
    7. 'str' → logprob: -13.75764274597168
    8. '(input' → logprob: -13.88264274597168
    9. '<input' → logprob: -14.00764274597168
    10. '""' → logprob: -14.13264274597168

Token 14: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.431154727935791
    2. '()' → logprob: -1.056154727935791
    3. ')' → logprob: -6.931154727935791
    4. '('' → logprob: -7.681154727935791
    5. ''' → logprob: -8.181154251098633
    6. '.' → logprob: -8.806154251098633
    7. '().' → logprob: -9.181154251098633
    8. '```' → logprob: -9.181154251098633
    9. '[' → logprob: -9.931154251098633
    10. '"' → logprob: -10.056154251098633

Token 15: 'TD' (ID: 25299)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4644243121147156
    2. 'queries' → logprob: -1.5894243717193604
    3. 'result' → logprob: -2.3394243717193604
    4. 'results' → logprob: -3.5894243717193604
    5. 'answers' → logprob: -4.464424133300781
    6. 'query' → logprob: -4.464424133300781
    7. 'ans' → logprob: -5.339424133300781
    8. 'd' → logprob: -5.964424133300781
    9. 'answer' → logprob: -5.964424133300781
    10. 'counts' → logprob: -6.339424133300781

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3040584921836853
    2. '=' → logprob: -1.42905855178833
    3. ' ' → logprob: -4.67905855178833
    4. '[]' → logprob: -5.92905855178833
    5. '=[]' → logprob: -6.05405855178833
    6. '[i' → logprob: -6.30405855178833
    7. ',' → logprob: -6.80405855178833
    8. 'E' → logprob: -7.05405855178833
    9. '  ' → logprob: -7.05405855178833
    10. 'I' → logprob: -7.17905855178833

Token 17: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10632537305355072
    2. ' [' → logprob: -3.106325387954712
    3. '[int' → logprob: -3.106325387954712
    4. '[list' → logprob: -5.106325149536133
    5. ' []' → logprob: -6.356325149536133
    6. '[]' → logprob: -6.356325149536133
    7. '[input' → logprob: -6.481325149536133
    8. '[List' → logprob: -9.856325149536133
    9. '[i' → logprob: -10.106325149536133
    10. '[t' → logprob: -10.856325149536133

Token 18: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010081745684146881
    2. ' for' → logprob: -5.260081768035889
    3. '[' → logprob: -5.385081768035889
    4. '[
' → logprob: -8.63508129119873
    5. '.for' → logprob: -11.13508129119873
    6. '<|end|>' → logprob: -11.38508129119873
    7. '[]' → logprob: -11.63508129119873
    8. '```' → logprob: -12.26008129119873
    9. '[i' → logprob: -12.38508129119873
    10. '.' → logprob: -12.63508129119873

Token 19: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.21316160261631012
    2. ' ' → logprob: -1.838161587715149
    3. ' _' → logprob: -3.5881617069244385
    4. '_' → logprob: -5.338161468505859
    5. ' ‌' → logprob: -8.71316146850586
    6. 'i' → logprob: -9.21316146850586
    7. ' ' → logprob: -9.58816146850586
    8. '  ' → logprob: -10.46316146850586
    9. ' ​' → logprob: -11.21316146850586
    10. ' I' → logprob: -11.21316146850586

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04054552689194679
    2. 'in' → logprob: -3.4155454635620117
    3. 'n' → logprob: -5.165545463562012
    4. ' ' → logprob: -7.415545463562012
    5. ' n' → logprob: -7.665545463562012
    6. '_' → logprob: -10.290545463562012
    7. '  ' → logprob: -10.915545463562012
    8. ',' → logprob: -11.290545463562012
    9. '	in' → logprob: -12.290545463562012
    10. 'nt' → logprob: -12.665545463562012

Token 21: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47410210967063904
    2. 'range' → logprob: -0.9741021394729614
    3. ' ' → logprob: -10.849102020263672
    4. '  ' → logprob: -13.474102020263672
    5. ' ran' → logprob: -14.099102020263672
    6. 'ran' → logprob: -14.349102020263672
    7. '	range' → logprob: -14.474102020263672
    8. 'r' → logprob: -14.849102020263672
    9. 'ra' → logprob: -15.099102020263672
    10. '   ' → logprob: -15.224102020263672

Token 22: '(Q' (ID: 14437)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13082902133464813
    2. '(Q' → logprob: -2.380829095840454
    3. '(N' → logprob: -3.505829095840454
    4. '(n' → logprob: -9.880828857421875
    5. ' (' → logprob: -10.005828857421875
    6. '(len' → logprob: -11.130828857421875
    7. '(int' → logprob: -11.880828857421875
    8. '(T' → logprob: -12.630828857421875
    9. '()' → logprob: -12.755828857421875
    10. ' ' → logprob: -13.380828857421875

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02713412418961525
    2. ')' → logprob: -3.7771341800689697
    3. ' ):' → logprob: -5.652133941650391
    4. ':' → logprob: -8.65213394165039
    5. '):
' → logprob: -9.65213394165039
    6. ' )' → logprob: -9.77713394165039
    7. ',' → logprob: -10.02713394165039
    8. ' ' → logprob: -11.77713394165039
    9. '+' → logprob: -12.02713394165039
    10. '),' → logprob: -13.02713394165039

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47166284918785095
    2. ' ' → logprob: -1.5966628789901733
    3. '    ' → logprob: -3.221662759780884
    4. '```' → logprob: -3.346662759780884
    5. '     
' → logprob: -3.596662759780884
    6. ' 
' → logprob: -3.596662759780884
    7. ' ```' → logprob: -4.721662998199463
    8. ' \' → logprob: -4.721662998199463
    9. '    
' → logprob: -5.221662998199463
    10. ' TD' → logprob: -6.221662998199463

Token 25: ' temp' (ID: 5484)
  Prédit: ' TD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' TD' → logprob: -0.049911681562662125
    2. ' T' → logprob: -3.9249117374420166
    3. 'TD' → logprob: -4.2999114990234375
    4. ' ' → logprob: -5.4249114990234375
    5. ' t' → logprob: -5.6749114990234375
    6. 'T' → logprob: -5.7999114990234375
    7. ' td' → logprob: -6.7999114990234375
    8. 'td' → logprob: -6.9249114990234375
    9. ' line' → logprob: -7.0499114990234375
    10. 't' → logprob: -8.174911499023438

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05063235014677048
    2. '=' → logprob: -3.0506322383880615
    3. '_' → logprob: -6.300632476806641
    4. ' ' → logprob: -8.92563247680664
    5. '_input' → logprob: -11.30063247680664
    6. 'data' → logprob: -11.42563247680664
    7. '_data' → logprob: -11.55063247680664
    8. 'D' → logprob: -11.67563247680664
    9. '_=' → logprob: -12.05063247680664
    10. 's' → logprob: -12.17563247680664

Token 27: ' input' (ID: 3422)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07967057079076767
    2. ' list' → logprob: -2.5796706676483154
    3. 'tuple' → logprob: -8.079670906066895
    4. 'input' → logprob: -8.329670906066895
    5. ' tuple' → logprob: -8.579670906066895
    6. ' input' → logprob: -10.954670906066895
    7. 'map' → logprob: -11.204670906066895
    8. ' ' → logprob: -12.954670906066895
    9. 'li' → logprob: -13.454670906066895
    10. '=list' → logprob: -13.704670906066895

Token 28: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00039254239527508616
    2. '().' → logprob: -8.25039291381836
    3. '(' → logprob: -10.00039291381836
    4. '())' → logprob: -10.37539291381836
    5. ')' → logprob: -12.00039291381836
    6. '("")' → logprob: -12.00039291381836
    7. '`()' → logprob: -12.00039291381836
    8. ' ()' → logprob: -12.12539291381836
    9. '()>' → logprob: -12.50039291381836
    10. '()`' → logprob: -12.62539291381836

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003675133048091084
    2. 'strip' → logprob: -8.000367164611816
    3. 'rstrip' → logprob: -10.375367164611816
    4. ' split' → logprob: -14.375367164611816
    5. 'spl' → logprob: -15.625367164611816
    6. 'replace' → logprob: -16.875368118286133
    7. '(split' → logprob: -17.375368118286133
    8. 'startswith' → logprob: -18.125368118286133
    9. '.split' → logprob: -18.250368118286133
    10. 'rs' → logprob: -18.375368118286133

Token 30: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12047368288040161
    2. '(' → logprob: -2.370473623275757
    3. '('' → logprob: -3.995473623275757
    4. '("("' → logprob: -6.870473861694336
    5. '`()' → logprob: -8.995473861694336
    6. '("' → logprob: -9.370473861694336
    7. '(`' → logprob: -9.495473861694336
    8. '())' → logprob: -9.620473861694336
    9. '```' → logprob: -9.620473861694336
    10. '()`' → logprob: -10.370473861694336

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9336833953857422
    2. '[' → logprob: -1.1836833953857422
    3. '<|end|>' → logprob: -1.9336833953857422
    4. ' ' → logprob: -2.433683395385742
    5. ' 
' → logprob: -4.433683395385742
    6. ' TD' → logprob: -4.558683395385742
    7. '    ' → logprob: -4.808683395385742
    8. '    
' → logprob: -4.808683395385742
    9. 'TD' → logprob: -5.558683395385742
    10. '  ' → logprob: -5.683683395385742

Token 32: ' TD' (ID: 52067)
  Prédit: 'TD'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TD' (adapté à ' TD') → logprob: -0.11656408756971359
    2. 'T' → logprob: -3.2415640354156494
    3. ' TD' → logprob: -3.2415640354156494
    4. '   ' → logprob: -3.7415640354156494
    5. ' T' → logprob: -5.3665642738342285
    6. ' 
' → logprob: -7.2415642738342285
    7. ' ' → logprob: -7.6165642738342285
    8. '    
' → logprob: -7.9915642738342285
    9. '[' → logprob: -7.9915642738342285
    10. '	T' → logprob: -8.61656379699707

Token 33: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002283241832628846
    2. '.' → logprob: -6.127283096313477
    3. '[' → logprob: -10.377283096313477
    4. '.ap' → logprob: -10.877283096313477
    5. '.app' → logprob: -11.127283096313477
    6. '.extend' → logprob: -11.502283096313477
    7. '[i' → logprob: -12.127283096313477
    8. '.Append' → logprob: -12.252283096313477
    9. 'append' → logprob: -12.252283096313477
    10. ' .' → logprob: -13.252283096313477

Token 34: '((' (ID: 2054)
  Prédit: '(temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.626648485660553
    2. '(' → logprob: -1.7516484260559082
    3. '(tuple' → logprob: -2.001648426055908
    4. '((' → logprob: -2.376648426055908
    5. '(list' → logprob: -2.751648426055908
    6. '(int' → logprob: -9.001648902893066
    7. '([' → logprob: -9.876648902893066
    8. '(T' → logprob: -10.376648902893066
    9. 'temp' → logprob: -10.876648902893066
    10. '(t' → logprob: -10.876648902893066

Token 35: 'temp' (ID: 7340)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31434229016304016
    2. 'temp' → logprob: -1.3143422603607178
    3. ' int' → logprob: -7.189342498779297
    4. ' temp' → logprob: -8.189342498779297
    5. '(int' → logprob: -11.689342498779297
    6. '   ' → logprob: -11.814342498779297
    7. 'td' → logprob: -12.314342498779297
    8. 't' → logprob: -12.439342498779297
    9. 'T' → logprob: -12.439342498779297
    10. 'str' → logprob: -12.689342498779297

Token 36: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16047576069831848
    2. '0' → logprob: -2.285475730895996
    3. '))' → logprob: -3.410475730895996
    4. ')' → logprob: -4.410475730895996
    5. '(' → logprob: -7.785475730895996
    6. 'int' → logprob: -8.910475730895996
    7. '])' → logprob: -9.035475730895996
    8. ')]' → logprob: -9.160475730895996
    9. '[int' → logprob: -9.160475730895996
    10. ')])' → logprob: -9.535475730895996

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.0590548703912646e-05
    2. ' ' → logprob: -10.625030517578125
    3. '1' → logprob: -12.125030517578125
    4. '-' → logprob: -14.750030517578125
    5. '   ' → logprob: -16.062530517578125
    6. '  ' → logprob: -17.000030517578125
    7. ']' → logprob: -17.625030517578125
    8. ')' → logprob: -17.625030517578125
    9. ' -' → logprob: -17.687530517578125
    10. '])' → logprob: -18.062530517578125

Token 38: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44797056913375854
    2. '],' → logprob: -1.0729706287384033
    3. ',T' → logprob: -5.197970390319824
    4. '],[' → logprob: -5.447970390319824
    5. ' ,' → logprob: -5.572970390319824
    6. ',int' → logprob: -5.822970390319824
    7. ']' → logprob: -6.947970390319824
    8. '),' → logprob: -7.697970390319824
    9. ',t' → logprob: -7.947970390319824
    10. ''],' → logprob: -9.197970390319824

Token 39: ' temp' (ID: 5484)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.38689956068992615
    2. 'int' → logprob: -1.1368995904922485
    3. ' temp' → logprob: -11.511899948120117
    4. ' ' → logprob: -12.136899948120117
    5. 'temp' → logprob: -12.886899948120117
    6. '[int' → logprob: -12.886899948120117
    7. '(int' → logprob: -13.011899948120117
    8. '<int' → logprob: -13.636899948120117
    9. ',int' → logprob: -14.261899948120117
    10. '	int' → logprob: -14.386899948120117

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004004024958703667
    2. '][' → logprob: -8.37540054321289
    3. '1' → logprob: -8.75040054321289
    4. ']' → logprob: -12.25040054321289
    5. '-' → logprob: -13.00040054321289
    6. ' [' → logprob: -13.50040054321289
    7. '])' → logprob: -14.87540054321289
    8. '[-' → logprob: -14.87540054321289
    9. '```' → logprob: -14.87540054321289
    10. '2' → logprob: -15.00040054321289

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.625004768371582
    3. '-' → logprob: -15.250004768371582
    4. ']' → logprob: -15.500004768371582
    5. '])' → logprob: -15.500004768371582
    6. '2' → logprob: -15.750004768371582
    7. '   ' → logprob: -15.812504768371582
    8. '0' → logprob: -17.187503814697266
    9. '  ' → logprob: -17.625003814697266
    10. '```' → logprob: -17.750003814697266

Token 42: ']))

' (ID: 92947)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.004625937435775995
    2. '],' → logprob: -5.8796257972717285
    3. ']' → logprob: -6.6296257972717285
    4. '])' → logprob: -9.004626274108887
    5. '))' → logprob: -9.129626274108887
    6. ')))' → logprob: -9.504626274108887
    7. '),' → logprob: -9.879626274108887
    8. ']))
' → logprob: -10.379626274108887
    9. ')' → logprob: -10.629626274108887
    10. '']))' → logprob: -10.754626274108887

Token 43: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3901972472667694
    2. 'for' → logprob: -1.2651972770690918
    3. '#' → logprob: -4.890197277069092
    4. '<|end|>' → logprob: -4.890197277069092
    5. 'result' → logprob: -5.640197277069092
    6. ' for' → logprob: -5.890197277069092
    7. '
' → logprob: -5.890197277069092
    8. '[' → logprob: -5.890197277069092
    9. '```' → logprob: -6.140197277069092
    10. 's' → logprob: -6.390197277069092

Token 44: ' is' (ID: 382)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.213467001914978
    2. ' process' → logprob: -1.588467001914978
    3. ' main' → logprob: -1.963467001914978
    4. ' ' → logprob: -2.0884671211242676
    5. ' count' → logprob: -3.3384671211242676
    6. ' solution' → logprob: -3.7134671211242676
    7. ' f' → logprob: -3.7134671211242676
    8. ' transform' → logprob: -3.8384671211242676
    9. ' find' → logprob: -4.588467121124268
    10. ' is' → logprob: -4.713467121124268

Token 45: 'Dead' (ID: 38857)
  Prédit: '_pal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pal' → logprob: -0.11722034960985184
    2. '_sub' → logprob: -3.867220401763916
    3. '_valid' → logprob: -3.992220401763916
    4. '_sorted' → logprob: -4.617220401763916
    5. '_bal' → logprob: -4.867220401763916
    6. '_good' → logprob: -5.367220401763916
    7. '_correct' → logprob: -5.492220401763916
    8. '_k' → logprob: -5.617220401763916
    9. '_possible' → logprob: -5.617220401763916
    10. '_prime' → logprob: -5.867220401763916

Token 46: '(idx' (ID: 42793)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018623570213094354
    2. '()' → logprob: -8.001862525939941
    3. ')' → logprob: -8.376862525939941
    4. '(t' → logprob: -8.626862525939941
    5. '(T' → logprob: -8.876862525939941
    6. '(x' → logprob: -9.001862525939941
    7. '(a' → logprob: -9.501862525939941
    8. '(i' → logprob: -9.501862525939941
    9. '('' → logprob: -9.626862525939941
    10. '((' → logprob: -9.876862525939941

Token 47: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49990183115005493
    2. '):' → logprob: -1.3749017715454102
    3. ')' → logprob: -1.9999017715454102
    4. ' ,' → logprob: -6.12490177154541
    5. ' ):' → logprob: -7.24990177154541
    6. '   ' → logprob: -8.24990177154541
    7. '+' → logprob: -8.37490177154541
    8. ' )' → logprob: -8.37490177154541
    9. ')>' → logprob: -8.87490177154541
    10. '_' → logprob: -8.87490177154541

Token 48: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3204166889190674
    2. '   ' → logprob: -1.4454166889190674
    3. '():' → logprob: -3.8204166889190674
    4. '(' → logprob: -4.695416450500488
    5. '):' → logprob: -5.695416450500488
    6. ' :' → logprob: -6.445416450500488
    7. ')' → logprob: -7.570416450500488
    8. ' (' → logprob: -8.320416450500488
    9. '<|end|>' → logprob: -8.320416450500488
    10. ' ' → logprob: -8.570416450500488

Token 49: ' cur' (ID: 4396)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5013728141784668
    2. 'if' → logprob: -1.8763728141784668
    3. '   ' → logprob: -2.626372814178467
    4. ')' → logprob: -3.251372814178467
    5. ' ' → logprob: -3.501372814178467
    6. 'i' → logprob: -3.626372814178467
    7. ' i' → logprob: -4.001372814178467
    8. '<|end|>' → logprob: -4.126372814178467
    9. 's' → logprob: -4.751372814178467
    10. ' return' → logprob: -5.126372814178467

Token 50: ' =' (ID: 314)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.7425498366355896
    2. 'Char' → logprob: -2.2425498962402344
    3. 'd' → logprob: -2.3675498962402344
    4. ' =' → logprob: -2.7425498962402344
    5. ')' → logprob: -3.2425498962402344
    6. 'nt' → logprob: -3.3675498962402344
    7. '=' → logprob: -3.9925498962402344
    8. '_idx' → logprob: -4.367549896240234
    9. 'r' → logprob: -4.742549896240234
    10. 'x' → logprob: -4.742549896240234

Token 51: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4965355694293976
    2. 'S' → logprob: -0.9965355396270752
    3. ' idx' → logprob: -4.496535778045654
    4. ' S' → logprob: -5.371535778045654
    5. '0' → logprob: -5.621535778045654
    6. 'TD' → logprob: -6.871535778045654
    7. ''S' → logprob: -7.746535778045654
    8. '(idx' → logprob: -8.121535301208496
    9. '[idx' → logprob: -9.246535301208496
    10. ' ' → logprob: -9.371535301208496

Token 52: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29266810417175293
    2. '<|end|>' → logprob: -1.917668104171753
    3. ' +' → logprob: -3.417668104171753
    4. ')' → logprob: -3.542668104171753
    5. ']' → logprob: -4.667668342590332
    6. '%' → logprob: -4.792668342590332
    7. '   ' → logprob: -5.167668342590332
    8. ' ' → logprob: -5.167668342590332
    9. '<|end|>' → logprob: -5.667668342590332
    10. '[' → logprob: -6.042668342590332

Token 53: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.13848869502544403
    2. ' while' → logprob: -2.88848876953125
    3. '+' → logprob: -3.51348876953125
    4. 'if' → logprob: -4.51348876953125
    5. 'for' (adapté à ' for') → logprob: -4.76348876953125
    6. 'cur' → logprob: -5.01348876953125
    7. ')' → logprob: -5.88848876953125
    8. '<|end|>' → logprob: -5.88848876953125
    9. 's' → logprob: -6.26348876953125
    10. ' ' → logprob: -6.38848876953125

Token 55: ' t' (ID: 260)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6421805024147034
    2. 'i' → logprob: -1.5171804428100586
    3. ' t' → logprob: -2.2671804428100586
    4. ' _' → logprob: -3.2671804428100586
    5. '_' → logprob: -3.5171804428100586
    6. 't' → logprob: -3.7671804428100586
    7. 'd' → logprob: -4.017180442810059
    8. ' d' → logprob: -4.642180442810059
    9. ' c' → logprob: -5.267180442810059
    10. ' direction' → logprob: -5.767180442810059

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28728988766670227
    2. 'ype' → logprob: -1.6622898578643799
    3. ' in' → logprob: -3.16228985786438
    4. 'd' → logprob: -4.537290096282959
    5. ',d' → logprob: -5.537290096282959
    6. 'ime' → logprob: -6.787290096282959
    7. 'oken' → logprob: -7.662290096282959
    8. ' ,' → logprob: -8.6622896194458
    9. 'D' → logprob: -8.9122896194458
    10. '_,' → logprob: -9.0372896194458

Token 57: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02695591375231743
    2. ' d' → logprob: -3.6519558429718018
    3. '_' → logprob: -8.776955604553223
    4. '_d' → logprob: -9.526955604553223
    5. '```' → logprob: -9.901955604553223
    6. 'c' → logprob: -10.464455604553223
    7. 'x' → logprob: -10.464455604553223
    8. ' ' → logprob: -10.589455604553223
    9. 'direction' → logprob: -10.776955604553223
    10. 's' → logprob: -10.776955604553223

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01560246292501688
    2. 'in' → logprob: -4.8906025886535645
    3. 'x' → logprob: -5.0156025886535645
    4. 'ex' → logprob: -7.2656025886535645
    5. 'ef' → logprob: -8.890602111816406
    6. 'ead' → logprob: -9.015602111816406
    7. 'e' → logprob: -9.140602111816406
    8. ' ' → logprob: -10.140602111816406
    9. ',' → logprob: -10.640602111816406
    10. ')' → logprob: -10.640602111816406

Token 59: ' TD' (ID: 52067)
  Prédit: ' TD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' TD' → logprob: -0.18020683526992798
    2. 'TD' → logprob: -1.8052067756652832
    3. ' ' → logprob: -8.305207252502441
    4. ' range' → logprob: -9.180207252502441
    5. ' T' → logprob: -10.680207252502441
    6. 'range' → logprob: -11.055207252502441
    7. ' reversed' → logprob: -11.555207252502441
    8. 'T' → logprob: -11.555207252502441
    9. ' ' → logprob: -11.805207252502441
    10. '  ' → logprob: -11.930207252502441

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036851167678833008
    2. '):' → logprob: -5.628684997558594
    3. ' :' → logprob: -10.378684997558594
    4. ':
' → logprob: -10.878684997558594
    5. '():' → logprob: -11.628684997558594
    6. '>:' → logprob: -11.753684997558594
    7. ':**' → logprob: -12.253684997558594
    8. ')' → logprob: -12.878684997558594
    9. 's' → logprob: -13.003684997558594
    10. '[' → logprob: -13.128684997558594

Token 61: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8844059705734253
    2. '       ' → logprob: -1.2594059705734253
    3. '<|end|>' → logprob: -1.2594059705734253
    4. '[' → logprob: -5.259406089782715
    5. '<|end|>' → logprob: -5.759406089782715
    6. ' :' → logprob: -6.134406089782715
    7. '   ' → logprob: -6.509406089782715
    8. '        
' → logprob: -6.634406089782715
    9. '    ' → logprob: -7.134406089782715
    10. ' ' → logprob: -7.134406089782715

Token 62: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1685293912887573
    2. '
' → logprob: -1.2935293912887573
    3. '       ' → logprob: -1.9185293912887573
    4. ' ' → logprob: -2.043529510498047
    5. '<|end|>' → logprob: -3.043529510498047
    6. 'if' (adapté à ' if') → logprob: -3.168529510498047
    7. '```' → logprob: -4.043529510498047
    8. ' 
' → logprob: -4.418529510498047
    9. '        ' → logprob: -5.793529510498047
    10. '[' → logprob: -5.793529510498047

Token 63: ' S' (ID: 336)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.12106098234653473
    2. 't' → logprob: -2.996061086654663
    3. ' cur' → logprob: -3.121061086654663
    4. 'cur' → logprob: -4.621060848236084
    5. ' d' → logprob: -4.746060848236084
    6. 'd' → logprob: -6.996060848236084
    7. ' ' → logprob: -8.496061325073242
    8. ' s' → logprob: -10.246061325073242
    9. '   ' → logprob: -10.496061325073242
    10. '(cur' → logprob: -10.683561325073242

Token 64: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -7.433829159708694e-05
    2. 'cur' → logprob: -9.75007438659668
    3. '[' → logprob: -12.12507438659668
    4. '[idx' → logprob: -12.75007438659668
    5. '[d' → logprob: -13.12507438659668
    6. '```' → logprob: -14.00007438659668
    7. 'd' → logprob: -14.50007438659668
    8. '[c' → logprob: -14.62507438659668
    9. '(cur' → logprob: -14.62507438659668
    10. '	cur' → logprob: -14.62507438659668

Token 65: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0275222510099411
    2. ']==' → logprob: -3.777522325515747
    3. ' ]' → logprob: -5.777522087097168
    4. ' ==' → logprob: -7.902522087097168
    5. '==' → logprob: -8.027522087097168
    6. '[' → logprob: -8.527522087097168
    7. ':]' → logprob: -9.777522087097168
    8. '']' → logprob: -10.402522087097168
    9. ']!=' → logprob: -10.402522087097168
    10. '+' → logprob: -10.527522087097168

Token 66: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12710008025169373
    2. ' ==' → logprob: -2.3770999908447266
    3. '!=' → logprob: -4.002099990844727
    4. '[' → logprob: -5.752099990844727
    5. ' !=' → logprob: -6.127099990844727
    6. ' in' → logprob: -6.377099990844727
    7. ']==' → logprob: -7.877099990844727
    8. '=' → logprob: -8.627099990844727
    9. ' not' → logprob: -9.252099990844727
    10. '<' → logprob: -9.377099990844727

Token 67: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08505037426948547
    2. ' t' → logprob: -2.835050344467163
    3. 'd' → logprob: -3.960050344467163
    4. ' d' → logprob: -5.835050582885742
    5. ''' → logprob: -7.835050582885742
    6. ''t' → logprob: -8.710050582885742
    7. ' '' → logprob: -8.835050582885742
    8. ' ' → logprob: -10.085050582885742
    9. 's' → logprob: -11.460050582885742
    10. '   ' → logprob: -11.835050582885742

Token 68: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.22779400646686554
    2. ':' → logprob: -1.9777940511703491
    3. 'and' → logprob: -2.8527939319610596
    4. ':
' → logprob: -4.977794170379639
    5. ' :' → logprob: -8.10279369354248
    6. '):' → logprob: -9.22779369354248
    7. ' or' → logprob: -9.72779369354248
    8. ':return' → logprob: -10.10279369354248
    9. '':' → logprob: -10.22779369354248
    10. ')' → logprob: -10.22779369354248

Token 69: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1651984602212906
    2. 'and' → logprob: -2.665198564529419
    3. ':' → logprob: -3.165198564529419
    4. ':
' → logprob: -3.540198564529419
    5. 'd' → logprob: -5.66519832611084
    6. ' ' → logprob: -6.66519832611084
    7. '1' → logprob: -7.04019832611084
    8. ''' → logprob: -7.16519832611084
    9. '
' → logprob: -7.29019832611084
    10. ' d' → logprob: -7.79019832611084

Token 70: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09597145020961761
    2. '               ' → logprob: -2.7209713459014893
    3. '           ' → logprob: -4.345971584320068
    4. 'if' (adapté à ' if') → logprob: -5.095971584320068
    5. ' cur' → logprob: -5.345971584320068
    6. '       ' → logprob: -8.22097110748291
    7. ' ' → logprob: -8.72097110748291
    8. ',' → logprob: -8.72097110748291
    9. '                   ' → logprob: -8.97097110748291
    10. ' and' → logprob: -9.34597110748291

Token 71: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.043005939573049545
    2. 'd' → logprob: -3.16800594329834
    3. ' ' → logprob: -13.04300594329834
    4. '   ' → logprob: -13.98050594329834
    5. ' (' → logprob: -14.60550594329834
    6. '(d' → logprob: -14.60550594329834
    7. '           ' → logprob: -15.29300594329834
    8. '>d' → logprob: -15.35550594329834
    9. 's' → logprob: -15.54300594329834
    10. '	d' → logprob: -15.66800594329834

Token 72: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00561352726072073
    2. ' ==' → logprob: -5.255613327026367
    3. '=' → logprob: -8.505613327026367
    4. '=='' → logprob: -8.880613327026367
    5. '=="' → logprob: -10.755613327026367
    6. '==
' → logprob: -11.380613327026367
    7. '===' → logprob: -13.755613327026367
    8. '[' → logprob: -13.880613327026367
    9. 'a' → logprob: -14.380613327026367
    10. '>' → logprob: -14.505613327026367

Token 73: ' '' (ID: 461)
  Prédit: '"L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"L' → logprob: -0.4315418004989624
    2. ''L' → logprob: -1.3065418004989624
    3. ''' → logprob: -2.681541919708252
    4. '"' → logprob: -5.056541919708252
    5. 'L' → logprob: -5.431541919708252
    6. 'R' → logprob: -8.181541442871094
    7. ''D' → logprob: -10.181541442871094
    8. ''U' → logprob: -10.306541442871094
    9. '	L' → logprob: -10.431541442871094
    10. '```' → logprob: -11.056541442871094

Token 74: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.13276053965091705
    2. 'R' → logprob: -2.132760524749756
    3. ''L' → logprob: -5.507760524749756
    4. ''' → logprob: -6.382760524749756
    5. '"L' → logprob: -9.882761001586914
    6. ' L' → logprob: -12.132761001586914
    7. '"' → logprob: -12.882761001586914
    8. ''>' → logprob: -13.007761001586914
    9. '<L' → logprob: -13.132761001586914
    10. '>L' → logprob: -13.382761001586914

Token 75: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.19762036204338074
    2. '':
' → logprob: -1.9476203918457031
    3. '':' → logprob: -3.322620391845703
    4. '':
' → logprob: -7.572620391845703
    5. '':

' → logprob: -9.447620391845703
    6. ' and' → logprob: -11.072620391845703
    7. ''):
' → logprob: -11.697620391845703
    8. ':' → logprob: -11.947620391845703
    9. ' '' → logprob: -12.697620391845703
    10. ':
' → logprob: -12.947620391845703

Token 76: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9584820866584778
    2. ' and' → logprob: -1.458482027053833
    3. ':
' → logprob: -1.583482027053833
    4. '               ' → logprob: -1.958482027053833
    5. 'and' → logprob: -3.708482027053833
    6. 'cur' → logprob: -5.833482265472412
    7. ' cur' → logprob: -6.083482265472412
    8. ' :' → logprob: -6.833482265472412
    9. '=' → logprob: -6.958482265472412
    10. ' ' → logprob: -7.333482265472412

Token 77: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.009538374841213226
    2. ' cur' → logprob: -5.134538173675537
    3. '                   ' → logprob: -5.759538173675537
    4. '               ' → logprob: -8.259538650512695
    5. 'if' → logprob: -8.759538650512695
    6. '                       ' → logprob: -11.884538650512695
    7. '[cur' → logprob: -12.009538650512695
    8. ' if' → logprob: -12.384538650512695
    9. '	cur' → logprob: -12.884538650512695
    10. '   ' → logprob: -13.009538650512695

Token 78: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.39183399081230164
    2. ' -=' → logprob: -1.141834020614624
    3. '-' → logprob: -5.391833782196045
    4. '=' → logprob: -8.016834259033203
    5. '+=' → logprob: -10.641834259033203
    6. ' =' → logprob: -10.766834259033203
    7. ' -' → logprob: -11.516834259033203
    8. ' ' → logprob: -12.266834259033203
    9. ' +=' → logprob: -12.766834259033203
    10. '>' → logprob: -13.516834259033203

Token 79: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017994173686020076
    2. ' ' → logprob: -8.6251802444458
    3. '<|end|>' → logprob: -15.6251802444458
    4. '   ' → logprob: -16.750179290771484
    5. '2' → logprob: -17.000179290771484
    6. '0' → logprob: -17.250179290771484
    7. '```' → logprob: -18.250179290771484
    8. 's' → logprob: -18.312679290771484
    9. '<|end|>' → logprob: -18.375179290771484
    10. '１' → logprob: -18.562679290771484

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.375051498413086
    4. '<|end|>' → logprob: -16.562551498413086
    5. '0' → logprob: -17.125051498413086
    6. '>' → logprob: -17.375051498413086
    7. '2' → logprob: -17.500051498413086
    8. '```' → logprob: -17.812551498413086
    9. '  ' → logprob: -18.500051498413086
    10. '<|end|>' → logprob: -18.562551498413086

Token 81: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009455366991460323
    2. '<|end|>' → logprob: -5.25945520401001
    3. '               ' → logprob: -5.75945520401001
    4. 'elif' → logprob: -8.009455680847168
    5. ' elif' → logprob: -8.634455680847168
    6. '       ' → logprob: -9.009455680847168
    7. '
' → logprob: -9.259455680847168
    8. ' else' → logprob: -9.634455680847168
    9. '<|end|>' → logprob: -10.009455680847168
    10. 'else' → logprob: -10.384455680847168

Token 82: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005273957271128893
    2. '               ' → logprob: -6.005273818969727
    3. ' else' → logprob: -7.005273818969727
    4. '<|end|>' → logprob: -7.505273818969727
    5. 'elif' → logprob: -7.755273818969727
    6. 'else' → logprob: -8.005273818969727
    7. '       ' → logprob: -8.255273818969727
    8. ' elif' → logprob: -8.505273818969727
    9. ')' → logprob: -10.505273818969727
    10. '```' → logprob: -10.755273818969727

Token 83: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.14069467782974243
    2. ' if' → logprob: -2.6406946182250977
    3. '               ' → logprob: -2.8906946182250977
    4. '           ' → logprob: -5.890694618225098
    5. '0' → logprob: -6.890694618225098
    6. 'elif' → logprob: -8.640694618225098
    7. ' ' → logprob: -9.015694618225098
    8. '                   ' → logprob: -9.015694618225098
    9. '```' → logprob: -9.640694618225098
    10. '   ' → logprob: -10.640694618225098

Token 84: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.018154505640268326
    2. ' cur' → logprob: -4.018154621124268
    3. ' ' → logprob: -12.76815414428711
    4. '   ' → logprob: -13.64315414428711
    5. '  ' → logprob: -15.51815414428711
    6. '	cur' → logprob: -15.51815414428711
    7. '(cur' → logprob: -16.51815414428711
    8. ' not' → logprob: -16.89315414428711
    9. '0' → logprob: -17.51815414428711
    10. '`' → logprob: -17.64315414428711

Token 85: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0031844829209148884
    2. ' <' → logprob: -5.7531843185424805
    3. '==' → logprob: -12.25318431854248
    4. ' ==' → logprob: -13.50318431854248
    5. '==-' → logprob: -15.00318431854248
    6. ' ' → logprob: -15.87818431854248
    7. '<size' → logprob: -16.003185272216797
    8. '<len' → logprob: -17.128185272216797
    9. '<int' → logprob: -17.628185272216797
    10. '   ' → logprob: -17.628185272216797

Token 86: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024774393532425165
    2. ' ' → logprob: -6.002477645874023
    3. '1' → logprob: -13.627477645874023
    4. '=' → logprob: -16.127477645874023
    5. '00' → logprob: -16.252477645874023
    6. 'N' → logprob: -16.564977645874023
    7. '۰' → logprob: -16.752477645874023
    8. '```' → logprob: -16.814977645874023
    9. '   ' → logprob: -16.877477645874023
    10. '>' → logprob: -17.252477645874023

Token 87: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.685467764735222e-05
    2. ' ' → logprob: -9.375086784362793
    3. '1' → logprob: -13.625086784362793
    4. 'N' → logprob: -15.875086784362793
    5. '０' → logprob: -16.18758773803711
    6. '۰' → logprob: -16.25008773803711
    7. '```' → logprob: -16.43758773803711
    8. '00' → logprob: -16.43758773803711
    9. '-' → logprob: -16.62508773803711
    10. '০' → logprob: -17.31258773803711

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27001968026161194
    2. ':
' → logprob: -1.7700196504592896
    3. '                   ' → logprob: -2.770019769668579
    4. ':return' → logprob: -6.77001953125
    5. ' or' → logprob: -7.14501953125
    6. '               ' → logprob: -7.27001953125
    7. '           ' → logprob: -7.89501953125
    8. '                       ' → logprob: -8.27001953125
    9. ':

' → logprob: -9.14501953125
    10. ':
' → logprob: -9.77001953125

Token 89: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005573217757046223
    2. ' return' → logprob: -6.255573272705078
    3. '               ' → logprob: -6.505573272705078
    4. 'return' → logprob: -7.005573272705078
    5. '           ' → logprob: -7.255573272705078
    6. '                       ' → logprob: -8.130573272705078
    7. '   ' → logprob: -10.005573272705078
    8. '       ' → logprob: -10.130573272705078
    9. '                    
' → logprob: -10.255573272705078
    10. '
' → logprob: -10.880573272705078

Token 90: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10195054858922958
    2. ' return' → logprob: -2.3519506454467773
    3. '                   ' → logprob: -6.601950645446777
    4. '                       ' → logprob: -8.976950645446777
    5. '               ' → logprob: -9.476950645446777
    6. '	return' → logprob: -9.476950645446777
    7. '   ' → logprob: -10.351950645446777
    8. '
' → logprob: -10.351950645446777
    9. ':return' → logprob: -11.226950645446777
    10. '           ' → logprob: -11.726950645446777

Token 91: ' -' (ID: 533)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.004566126503050327
    2. '1' → logprob: -6.004566192626953
    3. ' True' → logprob: -6.879566192626953
    4. 'cur' → logprob: -7.754566192626953
    5. 'idx' → logprob: -8.754566192626953
    6. 'i' → logprob: -9.254566192626953
    7. '"' → logprob: -9.504566192626953
    8. 'T' → logprob: -9.504566192626953
    9. '   ' → logprob: -10.004566192626953
    10. 'False' → logprob: -10.129566192626953

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011745095252990723
    2. '2' → logprob: -8.001174926757812
    3. 'cur' → logprob: -8.126174926757812
    4. 'idx' → logprob: -8.501174926757812
    5. '(' → logprob: -9.251174926757812
    6. ' ' → logprob: -9.501174926757812
    7. '0' → logprob: -9.626174926757812
    8. ' (' → logprob: -11.188674926757812
    9. 'S' → logprob: -11.438674926757812
    10. '(cur' → logprob: -11.501174926757812

Token 93: '
' (ID: 198)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22298188507556915
    2. 'cur' → logprob: -2.3479819297790527
    3. '           ' → logprob: -3.3479819297790527
    4. '               ' → logprob: -3.5979819297790527
    5. '0' → logprob: -3.8479819297790527
    6. '       ' → logprob: -4.847981929779053
    7. '                   ' → logprob: -4.972981929779053
    8. '   ' → logprob: -5.722981929779053
    9. ' ' → logprob: -7.347981929779053
    10. '
' → logprob: -8.097981452941895

Token 94: '           ' (ID: 352)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.875913679599762
    2. '           ' → logprob: -1.2509136199951172
    3. '               ' → logprob: -1.7509136199951172
    4. '       ' → logprob: -2.375913619995117
    5. '                   ' → logprob: -4.375913619995117
    6. '   ' → logprob: -5.000913619995117
    7. '0' → logprob: -5.500913619995117
    8. ' ' → logprob: -6.000913619995117
    9. 'return' → logprob: -7.250913619995117
    10. 'elif' → logprob: -7.250913619995117

Token 95: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.06939450651407242
    2. '           ' → logprob: -3.444394588470459
    3. '       ' → logprob: -3.569394588470459
    4. '               ' → logprob: -5.819394588470459
    5. ' elif' → logprob: -6.069394588470459
    6. 'else' (adapté à ' else') → logprob: -6.819394588470459
    7. '   ' → logprob: -8.3193941116333
    8. 'if' → logprob: -9.3193941116333
    9. '1' → logprob: -9.8193941116333
    10. '```' → logprob: -10.3193941116333

Token 96: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3453420400619507
    2. ':' → logprob: -1.4703420400619507
    3. ' cur' → logprob: -3.3453421592712402
    4. ' if' → logprob: -4.72034215927124
    5. ':
' → logprob: -4.72034215927124
    6. ' :' → logprob: -6.22034215927124
    7. 'cur' → logprob: -6.47034215927124
    8. '[cur' → logprob: -6.72034215927124
    9. '(cur' → logprob: -7.09534215927124
    10. '           ' → logprob: -7.09534215927124

Token 97: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06605628877878189
    2. ' cur' → logprob: -3.191056251525879
    3. 'cur' → logprob: -3.816056251525879
    4. '   ' → logprob: -8.691056251525879
    5. '           ' → logprob: -9.191056251525879
    6. '```' → logprob: -9.441056251525879
    7. '[cur' → logprob: -9.441056251525879
    8. ' ' → logprob: -9.566056251525879
    9. '       ' → logprob: -9.566056251525879
    10. ' if' → logprob: -9.941056251525879

Token 98: ' cur' (ID: 4396)
  Prédit: ' cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.08966956287622452
    2. 'cur' (adapté à ' cur') → logprob: -2.4646694660186768
    3. '               ' → logprob: -7.964669704437256
    4. '                   ' → logprob: -8.214669227600098
    5. ' ' → logprob: -10.589669227600098
    6. '   ' → logprob: -10.839669227600098
    7. '	cur' → logprob: -10.839669227600098
    8. '[cur' → logprob: -10.839669227600098
    9. '1' → logprob: -11.964669227600098
    10. '           ' → logprob: -12.214669227600098

Token 99: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20145291090011597
    2. '+=' → logprob: -1.7014529705047607
    3. '               ' → logprob: -10.95145320892334
    4. '                ' → logprob: -11.20145320892334
    5. '            ' → logprob: -13.45145320892334
    6. '+' → logprob: -13.45145320892334
    7. ']+=' → logprob: -14.07645320892334
    8. '                   ' → logprob: -14.07645320892334
    9. '    ' → logprob: -14.20145320892334
    10. '   ' → logprob: -14.57645320892334

Token 100: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011048054322600365
    2. ' ' → logprob: -4.511047840118408
    3. '   ' → logprob: -15.761048316955566
    4. '0' → logprob: -17.13604736328125
    5. '```' → logprob: -17.13604736328125
    6. '<|end|>' → logprob: -18.26104736328125
    7. '  ' → logprob: -18.57354736328125
    8. '+' → logprob: -18.82354736328125
    9. '>' → logprob: -18.88604736328125
    10. '	' → logprob: -19.44854736328125

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '+' → logprob: -16.750015258789062
    4. '   ' → logprob: -16.875015258789062
    5. '0' → logprob: -17.250015258789062
    6. '```' → logprob: -18.375015258789062
    7. '１' → logprob: -18.875015258789062
    8. '  ' → logprob: -19.500015258789062
    9. '2' → logprob: -20.000015258789062
    10. 'N' → logprob: -20.125015258789062

Token 102: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005898483213968575
    2. '<|end|>' → logprob: -8.625590324401855
    3. ' ' → logprob: -8.875590324401855
    4. '       ' → logprob: -9.625590324401855
    5. '                ' → logprob: -9.875590324401855
    6. ' if' → logprob: -10.000590324401855
    7. 'if' → logprob: -10.500590324401855
    8. '```' → logprob: -11.000590324401855
    9. '           ' → logprob: -11.375590324401855
    10. '              ' → logprob: -11.750590324401855

Token 103: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014808172127231956
    2. '```' → logprob: -7.876480579376221
    3. ' ' → logprob: -8.376481056213379
    4. '<|end|>' → logprob: -8.501481056213379
    5. '           ' → logprob: -8.626481056213379
    6. '       ' → logprob: -9.001481056213379
    7. ' if' → logprob: -9.001481056213379
    8. '                ' → logprob: -9.626481056213379
    9. '              ' → logprob: -10.001481056213379
    10. '1' → logprob: -10.376481056213379

Token 104: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5794205069541931
    2. 'if' (adapté à ' if') → logprob: -0.8294205069541931
    3. ' N' → logprob: -7.204420566558838
    4. '1' → logprob: -7.329420566558838
    5. '               ' → logprob: -7.329420566558838
    6. ' ' → logprob: -7.454420566558838
    7. '                   ' → logprob: -7.454420566558838
    8. 'N' → logprob: -8.57942008972168
    9. '   ' → logprob: -11.07942008972168
    10. '           ' → logprob: -11.07942008972168

Token 105: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.061967913061380386
    2. ' cur' → logprob: -2.8119678497314453
    3. '(cur' → logprob: -16.436967849731445
    4. '   ' → logprob: -16.561967849731445
    5. '	cur' → logprob: -16.686967849731445
    6. '[cur' → logprob: -17.811967849731445
    7. ' ' → logprob: -18.061967849731445
    8. '```' → logprob: -19.186967849731445
    9. 'c' → logprob: -20.061967849731445
    10. '  ' → logprob: -20.061967849731445

Token 106: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.026105783879756927
    2. ' >=' → logprob: -3.7761058807373047
    3. '==' → logprob: -6.151105880737305
    4. '>' → logprob: -7.276105880737305
    5. ' >' → logprob: -10.776105880737305
    6. ' ==' → logprob: -11.401105880737305
    7. ' ' → logprob: -15.026105880737305
    8. '   ' → logprob: -15.401105880737305
    9. '≥' → logprob: -16.151105880737305
    10. '```' → logprob: -16.276105880737305

Token 107: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.696889623621246e-06
    2. 'len' → logprob: -13.50000286102295
    3. ' N' → logprob: -13.75000286102295
    4. '   ' → logprob: -16.125001907348633
    5. ' ' → logprob: -20.000001907348633
    6. 'n' → logprob: -20.500001907348633
    7. '  ' → logprob: -20.875001907348633
    8. '	N' → logprob: -21.250001907348633
    9. '>N' → logprob: -22.375001907348633
    10. ' len' → logprob: -22.500001907348633

Token 108: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.42267024517059326
    2. ':' → logprob: -1.2976702451705933
    3. '):
' → logprob: -3.922670364379883
    4. '                   ' → logprob: -3.922670364379883
    5. ':return' → logprob: -3.922670364379883
    6. '):' → logprob: -4.672670364379883
    7. '               ' → logprob: -6.922670364379883
    8. ')' → logprob: -7.297670364379883
    9. 'return' → logprob: -7.797670364379883
    10. '           ' → logprob: -8.172670364379883

Token 109: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3717997968196869
    2. 'return' → logprob: -1.2467998266220093
    3. ' return' → logprob: -3.8717997074127197
    4. '           ' → logprob: -6.746799945831299
    5. '               ' → logprob: -7.621799945831299
    6. '   ' → logprob: -8.49679946899414
    7. '1' → logprob: -9.12179946899414
    8. '0' → logprob: -9.37179946899414
    9. ':return' → logprob: -10.12179946899414
    10. '       ' → logprob: -10.37179946899414

Token 110: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25715428590774536
    2. '1' → logprob: -1.5071542263031006
    3. ' return' → logprob: -5.38215446472168
    4. ' ' → logprob: -8.25715446472168
    5. '                   ' → logprob: -8.25715446472168
    6. '   ' → logprob: -10.50715446472168
    7. '               ' → logprob: -10.75715446472168
    8. '           ' → logprob: -11.13215446472168
    9. '+' → logprob: -11.25715446472168
    10. '-' → logprob: -11.88215446472168

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006463001482188702
    2. ' ' → logprob: -5.756463050842285
    3. 'N' → logprob: -6.256463050842285
    4. '+' → logprob: -7.381463050842285
    5. '-' → logprob: -7.881463050842285
    6. 'cur' → logprob: -8.381463050842285
    7. 'len' → logprob: -9.506463050842285
    8. ' N' → logprob: -11.256463050842285
    9. ' cur' → logprob: -11.381463050842285
    10. 'Q' → logprob: -11.756463050842285

Token 112: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.438864529132843
    2. '-' → logprob: -1.5638644695281982
    3. '1' → logprob: -1.9388644695281982
    4. 'len' → logprob: -7.313864707946777
    5. '+' → logprob: -7.938864707946777
    6. ' ' → logprob: -8.188864707946777
    7. ' N' → logprob: -8.313864707946777
    8. ' -' → logprob: -8.438864707946777
    9. 'Q' → logprob: -8.813864707946777
    10. '-N' → logprob: -10.188864707946777

Token 113: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033633122220635414
    2. '       ' → logprob: -6.003363132476807
    3. 'return' → logprob: -7.253363132476807
    4. ' return' → logprob: -9.503363609313965
    5. '           ' → logprob: -9.628363609313965
    6. ')' → logprob: -11.378363609313965
    7. '	return' → logprob: -11.753363609313965
    8. '
' → logprob: -12.003363609313965
    9. '<|end|>' → logprob: -12.378363609313965
    10. '               ' → logprob: -12.753363609313965

Token 114: ' survived' (ID: 47203)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.010489522479474545
    2. '       ' → logprob: -6.010489463806152
    3. ' None' → logprob: -6.135489463806152
    4. '-' → logprob: -6.385489463806152
    5. '               ' → logprob: -6.635489463806152
    6. '0' → logprob: -7.010489463806152
    7. '   ' → logprob: -7.385489463806152
    8. 'return' → logprob: -7.385489463806152
    9. '           ' → logprob: -7.760489463806152
    10. '                   ' → logprob: -9.510489463806152

Token 115: ' right' (ID: 1849)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24848991632461548
    2. '       ' → logprob: -1.6234898567199707
    3. '<|end|>' → logprob: -4.623489856719971
    4. '           ' → logprob: -5.248489856719971
    5. '               ' → logprob: -5.498489856719971
    6. ')' → logprob: -6.373489856719971
    7. 'return' → logprob: -7.498489856719971
    8. ' return' → logprob: -7.748489856719971
    9. '<|end|>' → logprob: -8.748490333557129
    10. '.' → logprob: -8.873490333557129

Token 116: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1605190932750702
    2. '       ' → logprob: -2.0355191230773926
    3. 'return' → logprob: -4.785519123077393
    4. '           ' → logprob: -5.285519123077393
    5. ' return' → logprob: -6.660519123077393
    6. '<|end|>' → logprob: -6.910519123077393
    7. ')' → logprob: -7.785519123077393
    8. '               ' → logprob: -8.035518646240234
    9. '
' → logprob: -8.285518646240234
    10. 'None' → logprob: -8.660518646240234

Token 118: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5355187654495239
    2. '   ' → logprob: -1.160518765449524
    3. ' return' → logprob: -3.4105186462402344
    4. ' ' → logprob: -3.6605186462402344
    5. 'None' → logprob: -3.9105186462402344
    6. '```' → logprob: -5.535518646240234
    7. ')' → logprob: -5.910518646240234
    8. '       ' → logprob: -6.035518646240234
    9. '<|end|>' → logprob: -6.035518646240234
    10. '  ' → logprob: -6.285518646240234

Token 119: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06586076319217682
    2. 'None' → logprob: -2.9408607482910156
    3. ' ' → logprob: -5.315860748291016
    4. ' None' → logprob: -5.940860748291016
    5. 'cur' → logprob: -6.190860748291016
    6. 'False' → logprob: -6.690860748291016
    7. ' cur' → logprob: -9.815860748291016
    8. ' False' → logprob: -11.440860748291016
    9. '   ' → logprob: -11.815860748291016
    10. '-' → logprob: -11.940860748291016

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001161769381724298
    2. 'cur' → logprob: -7.001161575317383
    3. ' ' → logprob: -9.126161575317383
    4. '-' → logprob: -9.251161575317383
    5. 'None' → logprob: -10.376161575317383
    6. 'False' → logprob: -12.501161575317383
    7. '   ' → logprob: -13.251161575317383
    8. '1' → logprob: -13.251161575317383
    9. ' cur' → logprob: -13.501161575317383
    10. '2' → logprob: -13.626161575317383

Token 121: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: 'l' (ID: 75)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27108216285705566
    2. '
' → logprob: -2.3960821628570557
    3. 'i' → logprob: -3.5210821628570557
    4. '#' → logprob: -3.6460821628570557
    5. 'idx' → logprob: -4.146081924438477
    6. 'n' → logprob: -4.646081924438477
    7. '<|end|>' → logprob: -4.771081924438477
    8. ')' → logprob: -4.896081924438477
    9. '_' → logprob: -5.271081924438477
    10. 'if' → logprob: -5.396081924438477

Token 123: 'ft' (ID: 826)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6457540392875671
    2. ' =' → logprob: -1.020754098892212
    3. 'eft' → logprob: -2.645754098892212
    4. '=' → logprob: -3.270754098892212
    5. 'ow' → logprob: -5.770753860473633
    6. ' ,' → logprob: -6.020753860473633
    7. 'ef' → logprob: -8.770753860473633
    8. ',r' → logprob: -8.895753860473633
    9. 'e' → logprob: -9.020753860473633
    10. 'ower' → logprob: -9.270753860473633

Token 124: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6116911172866821
    2. ' =' → logprob: -1.2366911172866821
    3. 'eft' → logprob: -2.1116909980773926
    4. '=' → logprob: -3.9866909980773926
    5. 'f' → logprob: -5.361690998077393
    6. ' ,' → logprob: -5.486690998077393
    7. '_' → logprob: -5.611690998077393
    8. 'ft' → logprob: -5.986690998077393
    9. 't' → logprob: -6.361690998077393
    10. '_idx' → logprob: -6.611690998077393

Token 125: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01821666955947876
    2. '-' → logprob: -4.268216609954834
    3. ' ' → logprob: -5.643216609954834
    4. ' -' → logprob: -7.768216609954834
    5. '-N' → logprob: -11.018217086791992
    6. '[' → logprob: -11.143217086791992
    7. '-n' → logprob: -11.393217086791992
    8. '-left' → logprob: -12.018217086791992
    9. '[-' → logprob: -12.143217086791992
    10. '-l' → logprob: -12.705717086791992

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. '10' → logprob: -12.125009536743164
    3. '2' → logprob: -13.750009536743164
    4. '-' → logprob: -13.875009536743164
    5. ' ' → logprob: -13.875009536743164
    6. 'N' → logprob: -14.750009536743164
    7. '0' → logprob: -15.625009536743164
    8. '100' → logprob: -15.625009536743164
    9. 'float' → logprob: -16.500009536743164
    10. '999' → logprob: -16.500009536743164

Token 127: '
' (ID: 198)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003277768148109317
    2. ',' → logprob: -6.378277778625488
    3. ' r' → logprob: -7.378277778625488
    4. '
' → logprob: -8.128277778625488
    5. 'mid' → logprob: -8.753277778625488
    6. ',r' → logprob: -9.628277778625488
    7. '<|end|>' → logprob: -9.628277778625488
    8. 'm' → logprob: -10.003277778625488
    9. 'rt' → logprob: -10.378277778625488
    10. ' ,' → logprob: -10.503277778625488

Token 128: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005005682818591595
    2. 'rig' → logprob: -6.130005836486816
    3. 'rt' → logprob: -6.505005836486816
    4. 'rg' → logprob: -7.005005836486816
    5. 'right' → logprob: -8.630005836486816
    6. '```' → logprob: -9.005005836486816
    7. 'rit' → logprob: -10.630005836486816
    8. '=' → logprob: -11.255005836486816
    9. 'ryt' → logprob: -11.505005836486816
    10. 'rift' → logprob: -11.880005836486816

Token 129: 'gt' (ID: 5115)
  Prédit: 'ft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ft' → logprob: -0.3886201083660126
    2. ' =' → logprob: -2.013620138168335
    3. '=' → logprob: -2.138620138168335
    4. 'f' → logprob: -3.013620138168335
    5. 'ght' → logprob: -4.888619899749756
    6. 'ight' → logprob: -5.263619899749756
    7. 'gt' → logprob: -5.763619899749756
    8. 'ift' → logprob: -6.263619899749756
    9. 't' → logprob: -7.013619899749756
    10. 'eft' → logprob: -7.263619899749756

Token 130: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759404897689819
    2. ' =' → logprob: -0.8259404897689819
    3. ',' → logprob: -14.575940132141113
    4. ' ' → logprob: -14.700940132141113
    5. '=N' → logprob: -15.825940132141113
    6. '＝' → logprob: -16.45094108581543
    7. 's' → logprob: -17.70094108581543
    8. '>' → logprob: -18.45094108581543
    9. '=

' → logprob: -18.70094108581543
    10. '=n' → logprob: -19.20094108581543

Token 131: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -8.470901229884475e-05
    2. ' N' → logprob: -9.87508487701416
    3. '-' → logprob: -10.75008487701416
    4. '1' → logprob: -12.50008487701416
    5. '   ' → logprob: -13.12508487701416
    6. 'len' → logprob: -13.50008487701416
    7. '100' → logprob: -13.62508487701416
    8. '10' → logprob: -13.75008487701416
    9. 'n' → logprob: -14.25008487701416
    10. ' -' → logprob: -15.12508487701416

Token 132: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10933467745780945
    2. '
' → logprob: -2.734334707260132
    3. ' while' → logprob: -3.859334707260132
    4. 'mid' → logprob: -4.484334468841553
    5. '```' → logprob: -6.484334468841553
    6. '<|end|>' → logprob: -6.609334468841553
    7. 'm' → logprob: -7.484334468841553
    8. 'for' → logprob: -7.609334468841553
    9. '  
' → logprob: -7.734334468841553
    10. 'def' → logprob: -7.734334468841553

Token 133: '#' (ID: 2)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0032796678133308887
    2. 'mid' → logprob: -5.753279685974121
    3. ' while' → logprob: -9.378279685974121
    4. 'for' → logprob: -11.628279685974121
    5. '
' → logprob: -12.878279685974121
    6. 'wh' → logprob: -13.128279685974121
    7. 'm' → logprob: -13.253279685974121
    8. '```' → logprob: -14.378279685974121
    9. 'While' → logprob: -15.253279685974121
    10. '	while' → logprob: -15.503279685974121

Token 134: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03692895174026489
    2. 'for' → logprob: -4.036929130554199
    3. 'left' → logprob: -4.161929130554199
    4. 'mid' → logprob: -7.036929130554199
    5. 'l' → logprob: -7.786929130554199
    6. 'import' → logprob: -7.911929130554199
    7. 'low' → logprob: -8.2869291305542
    8. 'ok' → logprob: -8.4119291305542
    9. 'from' → logprob: -8.4119291305542
    10. ' while' → logprob: -8.7869291305542

Token 135: ' left' (ID: 3561)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4397924542427063
    2. 'i' → logprob: -1.0647923946380615
    3. ' idx' → logprob: -4.814792633056641
    4. 'idx' → logprob: -6.689792633056641
    5. '_' → logprob: -7.189792633056641
    6. ' _' → logprob: -7.439792633056641
    7. '_i' → logprob: -9.56479263305664
    8. ' ' → logprob: -10.18979263305664
    9. ' l' → logprob: -10.18979263305664
    10. 'l' → logprob: -10.18979263305664

Token 136: ' boundary' (ID: 35021)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.615266740322113
    2. '=' → logprob: -1.6152667999267578
    3. 'in' → logprob: -2.615266799926758
    4. ',' → logprob: -3.240266799926758
    5. ' =' → logprob: -3.240266799926758
    6. ' in' → logprob: -3.365266799926758
    7. 'bound' → logprob: -3.740266799926758
    8. 'l' → logprob: -4.240266799926758
    9. 'mid' → logprob: -4.865266799926758
    10. 'idx' → logprob: -5.240266799926758

Token 137: '...' (ID: 1008)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.015065963380038738
    2. 'mid' → logprob: -4.640066146850586
    3. ' while' → logprob: -5.890066146850586
    4. 'for' → logprob: -6.515066146850586
    5. 'l' → logprob: -7.515066146850586
    6. '
' → logprob: -8.515066146850586
    7. 'low' → logprob: -9.265066146850586
    8. '```' → logprob: -10.265066146850586
    9. 'idx' → logprob: -10.890066146850586
    10. 'left' → logprob: -11.015066146850586

Token 138: ' kinda' (ID: 49923)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08183076977729797
    2. ' while' → logprob: -2.5818307399749756
    3. 'mid' → logprob: -6.456830978393555
    4. 'l' → logprob: -7.581830978393555
    5. '
' → logprob: -7.706830978393555
    6. '```' → logprob: -8.956830978393555
    7. 'low' → logprob: -9.206830978393555
    8. ' l' → logprob: -9.956830978393555
    9. ' mid' → logprob: -10.331830978393555
    10. 'left' → logprob: -10.706830978393555

Token 139: ' binary' (ID: 15600)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0030971430242061615
    2. ' while' → logprob: -6.378097057342529
    3. 'mid' → logprob: -7.253097057342529
    4. 'l' → logprob: -7.753097057342529
    5. 'low' → logprob: -8.878097534179688
    6. 'r' → logprob: -10.253097534179688
    7. 'left' → logprob: -10.378097534179688
    8. 'ok' → logprob: -11.128097534179688
    9. '
' → logprob: -11.253097534179688
    10. '```' → logprob: -12.003097534179688

Token 140: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.027786867693066597
    2. ' search' → logprob: -3.77778697013855
    3. '_search' → logprob: -5.402786731719971
    4. 'l' → logprob: -11.277787208557129
    5. 'earch' → logprob: -12.027787208557129
    6. '-search' → logprob: -12.902787208557129
    7. 's' → logprob: -14.027787208557129
    8. 'Search' → logprob: -14.152787208557129
    9. '```' → logprob: -14.277787208557129
    10. 'left' → logprob: -14.402787208557129

Token 141: '?
' (ID: 3901)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.012071260251104832
    2. ' while' → logprob: -4.637071132659912
    3. 'mid' → logprob: -6.387071132659912
    4. '
' → logprob: -8.01207160949707
    5. 'l' → logprob: -9.38707160949707
    6. 'wh' → logprob: -9.51207160949707
    7. 'low' → logprob: -9.76207160949707
    8. 'lo' → logprob: -11.01207160949707
    9. 'left' → logprob: -11.38707160949707
    10. ' mid' → logprob: -11.38707160949707

Token 142: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01668839529156685
    2. 'mid' → logprob: -4.766688346862793
    3. ' while' → logprob: -5.641688346862793
    4. 'l' → logprob: -6.141688346862793
    5. 'low' → logprob: -6.641688346862793
    6. 'left' → logprob: -7.391688346862793
    7. 'lo' → logprob: -8.891688346862793
    8. 'ok' → logprob: -9.141688346862793
    9. '```' → logprob: -10.391688346862793
    10. 'le' → logprob: -10.516688346862793

Token 143: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.267294317483902
    2. ' r' → logprob: -1.7672942876815796
    3. 'l' → logprob: -3.142294406890869
    4. ' l' → logprob: -3.892294406890869
    5. '(r' → logprob: -9.017293930053711
    6. '(l' → logprob: -10.767293930053711
    7. ' (' → logprob: -11.017293930053711
    8. 'abs' → logprob: -12.142293930053711
    9. ' abs' → logprob: -12.517293930053711
    10. ' ' → logprob: -13.642293930053711

Token 144: 'gt' (ID: 5115)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.15593042969703674
    2. '>' → logprob: -3.280930519104004
    3. ' >' → logprob: -3.405930519104004
    4. '-' → logprob: -3.405930519104004
    5. 'ft' → logprob: -4.030930519104004
    6. 'gt' → logprob: -4.405930519104004
    7. '-l' → logprob: -5.155930519104004
    8. 't' → logprob: -5.655930519104004
    9. 'l' → logprob: -8.030930519104004
    10. 'eft' → logprob: -8.780930519104004

Token 145: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2842792272567749
    2. ' -' → logprob: -1.784279227256775
    3. '-l' → logprob: -2.5342793464660645
    4. '-mid' → logprob: -9.034278869628906
    5. '>' → logprob: -10.659278869628906
    6. '-middle' → logprob: -10.909278869628906
    7. '=' → logprob: -11.784278869628906
    8. '-cur' → logprob: -12.034278869628906
    9. '-left' → logprob: -12.159278869628906
    10. '-t' → logprob: -12.284278869628906

Token 146: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.005338470451533794
    2. '1' → logprob: -5.255338668823242
    3. '>' → logprob: -10.005338668823242
    4. ' l' → logprob: -10.505338668823242
    5. 'r' → logprob: -10.630338668823242
    6. '   ' → logprob: -12.130338668823242
    7. ' >' → logprob: -13.505338668823242
    8. ' ' → logprob: -14.130338668823242
    9. '	l' → logprob: -15.505338668823242
    10. '-l' → logprob: -16.130338668823242

Token 147: 'ft' (ID: 826)
  Prédit: 'ft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ft' → logprob: -0.18901419639587402
    2. '>' → logprob: -1.814014196395874
    3. 'eft' → logprob: -5.564014434814453
    4. 'f' → logprob: -6.189014434814453
    5. '1' → logprob: -6.564014434814453
    6. 'gt' → logprob: -6.814014434814453
    7. 't' → logprob: -7.689014434814453
    8. ' >' → logprob: -8.689014434814453
    9. '2' → logprob: -9.314014434814453
    10. '```' → logprob: -9.939014434814453

Token 148: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1002078503370285
    2. ' >' → logprob: -2.350207805633545
    3. '1' → logprob: -14.100208282470703
    4. '()>' → logprob: -15.725208282470703
    5. ' ' → logprob: -15.975208282470703
    6. ')>' → logprob: -17.100208282470703
    7. '```' → logprob: -17.975208282470703
    8. '＞' → logprob: -18.100208282470703
    9. '">' → logprob: -18.100208282470703
    10. ')' → logprob: -18.225208282470703

Token 149: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.000001907348633
    4. '>' → logprob: -17.500001907348633
    5. '```' → logprob: -19.625001907348633
    6. ' >' → logprob: -21.250001907348633
    7. '2' → logprob: -21.500001907348633
    8. '``' → logprob: -22.000001907348633
    9. '=' → logprob: -22.125001907348633
    10. '
' → logprob: -22.375001907348633

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -18.125
    4. '>' → logprob: -18.25
    5. '   ' → logprob: -18.625
    6. '``' → logprob: -21.5
    7. '１' → logprob: -22.125
    8. '
' → logprob: -22.25
    9. '=' → logprob: -22.625
    10. '2' → logprob: -23.0

Token 151: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20438767969608307
    2. ':' → logprob: -1.7043876647949219
    3. '   ' → logprob: -5.954387664794922
    4. '):
' → logprob: -8.579387664794922
    5. ' :
' → logprob: -9.329387664794922
    6. ' mid' → logprob: -11.204387664794922
    7. ',' → logprob: -11.329387664794922
    8. ':

' → logprob: -11.329387664794922
    9. '```' → logprob: -11.704387664794922
    10. '<|end|>' → logprob: -11.704387664794922

Token 152: '   ' (ID: 271)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.20732347667217255
    2. 'mid' → logprob: -1.707323431968689
    3. '   ' → logprob: -5.2073235511779785
    4. 'm' → logprob: -8.83232307434082
    5. ' m' → logprob: -9.08232307434082
    6. '```' → logprob: -9.33232307434082
    7. ' ' → logprob: -10.45732307434082
    8. '	m' → logprob: -11.08232307434082
    9. 'md' → logprob: -11.33232307434082
    10. '[mid' → logprob: -12.95732307434082

Token 153: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.023718591779470444
    2. ' mid' → logprob: -3.7737185955047607
    3. 'm' → logprob: -8.02371883392334
    4. 'md' → logprob: -8.89871883392334
    5. '   ' → logprob: -12.89871883392334
    6. 'mi' → logprob: -13.27371883392334
    7. ' m' → logprob: -13.52371883392334
    8. 'cur' → logprob: -13.52371883392334
    9. ' md' → logprob: -14.27371883392334
    10. 'med' → logprob: -15.39871883392334

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00463078822940588
    2. '=' → logprob: -5.3796305656433105
    3. '=(' → logprob: -12.254631042480469
    4. ' =(' → logprob: -12.629631042480469
    5. '=int' → logprob: -13.254631042480469
    6. ' ' → logprob: -14.754631042480469
    7. ')' → logprob: -15.004631042480469
    8. '=len' → logprob: -17.50463104248047
    9. '＝' → logprob: -17.87963104248047
    10. '=center' → logprob: -17.87963104248047

Token 155: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.2016114592552185
    2. ' (' → logprob: -1.7016115188598633
    3. '(r' → logprob: -8.576611518859863
    4. '   ' → logprob: -12.701611518859863
    5. '(L' → logprob: -12.826611518859863
    6. '(' → logprob: -13.701611518859863
    7. '(mid' → logprob: -14.576611518859863
    8. ' ' → logprob: -14.826611518859863
    9. '(ls' → logprob: -15.201611518859863
    10. ' l' → logprob: -15.201611518859863

Token 156: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.002069371985271573
    2. 'r' → logprob: -6.252069473266602
    3. ' l' → logprob: -8.877069473266602
    4. ' r' → logprob: -14.127069473266602
    5. '	l' → logprob: -15.377069473266602
    6. '(l' → logprob: -15.627069473266602
    7. '   ' → logprob: -17.3770694732666
    8. '[l' → logprob: -18.0020694732666
    9. '(r' → logprob: -19.2520694732666
    10. 'lf' → logprob: -19.3770694732666

Token 157: 'ft' (ID: 826)
  Prédit: 'ft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ft' → logprob: -2.3676733690081164e-05
    2. 'f' → logprob: -11.25002384185791
    3. 'gt' → logprob: -11.50002384185791
    4. 't' → logprob: -14.75002384185791
    5. '```' → logprob: -17.375022888183594
    6. 'r' → logprob: -17.500022888183594
    7. '_ft' → logprob: -17.500022888183594
    8. 'фт' → logprob: -17.750022888183594
    9. '+' → logprob: -18.250022888183594
    10. 'tf' → logprob: -18.875022888183594

Token 158: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20192566514015198
    2. '+' → logprob: -1.7019256353378296
    3. '+r' → logprob: -7.576925754547119
    4. ' +
' → logprob: -17.20192527770996
    5. '＋' → logprob: -17.45192527770996
    6. '+l' → logprob: -17.82692527770996
    7. '+s' → logprob: -18.32692527770996
    8. 'r' → logprob: -18.45192527770996
    9. ' ' → logprob: -18.45192527770996
    10. '+
' → logprob: -18.82692527770996

Token 159: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0004307884373702109
    2. ' r' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.000431060791016
    4. ' ' → logprob: -18.625431060791016
    5. ')' → logprob: -19.500431060791016
    6. 'right' → logprob: -20.000431060791016
    7. '```' → logprob: -20.125431060791016
    8. '1' → logprob: -20.375431060791016
    9. '	r' → logprob: -20.750431060791016
    10. '
' → logprob: -22.125431060791016

Token 160: 'gt' (ID: 5115)
  Prédit: 'gt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gt' → logprob: -0.005372610874474049
    2. 'ft' → logprob: -5.255372524261475
    3. 't' → logprob: -9.630373001098633
    4. 'ght' → logprob: -9.630373001098633
    5. 'ht' → logprob: -13.130373001098633
    6. '1' → logprob: -13.380373001098633
    7. 'g' → logprob: -13.755373001098633
    8. ')' → logprob: -14.380373001098633
    9. ' gt' → logprob: -14.380373001098633
    10. 'ight' → logprob: -14.505373001098633

Token 161: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004023097571916878
    2. ')//' → logprob: -7.875402450561523
    3. ' )' → logprob: -10.875402450561523
    4. ')>>' → logprob: -13.000402450561523
    5. '2' → logprob: -15.125402450561523
    6. '1' → logprob: -15.375402450561523
    7. '   ' → logprob: -15.750402450561523
    8. '//' → logprob: -16.250402450561523
    9. ')
' → logprob: -16.500402450561523
    10. '0' → logprob: -16.500402450561523

Token 162: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0784742683172226
    2. '//' → logprob: -2.703474283218384
    3. ')' → logprob: -4.953474044799805
    4. '>>' → logprob: -7.453474044799805
    5. ' >>' → logprob: -8.578474044799805
    6. '#' → logprob: -8.703474044799805
    7. '   ' → logprob: -8.703474044799805
    8. '```' → logprob: -8.953474044799805
    9. '
' → logprob: -9.453474044799805
    10. ')//' → logprob: -9.703474044799805

Token 163: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -19.12500762939453
    4. '   ' → logprob: -19.25000762939453
    5. '۲' → logprob: -20.12500762939453
    6. '２' → logprob: -21.12500762939453
    7. '२' → logprob: -22.25000762939453
    8. '২' → logprob: -22.62500762939453
    9. '٢' → logprob: -22.62500762939453
    10. '  ' → logprob: -22.87500762939453

Token 164: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -20.125
    3. '２' → logprob: -22.75
    4. '۲' → logprob: -22.75
    5. '```' → logprob: -23.5
    6. '   ' → logprob: -23.875
    7. '=' → logprob: -24.625
    8. '२' → logprob: -24.625
    9. '٢' → logprob: -25.375
    10. '1' → logprob: -25.375

Token 165: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05455316975712776
    2. ' if' → logprob: -3.804553270339966
    3. 'if' → logprob: -4.054553031921387
    4. '
' → logprob: -4.679553031921387
    5. '    
' → logprob: -6.554553031921387
    6. '  
' → logprob: -7.054553031921387
    7. 'cur' → logprob: -7.429553031921387
    8. ',' → logprob: -8.679553031921387
    9. 'idx' → logprob: -8.804553031921387
    10. 'res' → logprob: -9.179553031921387

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7050104737281799
    2. ' if' → logprob: -1.0800104141235352
    3. 'if' → logprob: -2.705010414123535
    4. ' res' → logprob: -3.205010414123535
    5. ' result' → logprob: -4.205010414123535
    6. 'res' → logprob: -4.205010414123535
    7. ' status' → logprob: -4.455010414123535
    8. ' dead' → logprob: -4.705010414123535
    9. 'result' → logprob: -5.330010414123535
    10. 'status' → logprob: -6.330010414123535

Token 167: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.15052253007888794
    2. 'if' → logprob: -2.525522470474243
    3. 'result' → logprob: -3.525522470474243
    4. 'status' → logprob: -4.275522708892822
    5. 'dead' → logprob: -5.150522708892822
    6. ' res' → logprob: -5.275522708892822
    7. 'ret' → logprob: -6.025522708892822
    8. 'state' → logprob: -6.900522708892822
    9. 'ans' → logprob: -7.275522708892822
    10. ' if' → logprob: -7.775522708892822

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006717863027006388
    2. '=' → logprob: -5.006717681884766
    3. '=is' → logprob: -13.506717681884766
    4. 't' → logprob: -15.381717681884766
    5. 'ult' → logprob: -15.631717681884766
    6. ' ' → logprob: -15.631717681884766
    7. 's' → logprob: -15.881717681884766
    8. '   ' → logprob: -16.131717681884766
    9. '=res' → logprob: -16.756717681884766
    10. ')' → logprob: -16.756717681884766

Token 169: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.001170225441455841
    2. ' is' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.626171112060547
    4. '```' → logprob: -17.626171112060547
    5. '0' → logprob: -18.376171112060547
    6. '`' → logprob: -19.501171112060547
    7. '(is' → logprob: -19.501171112060547
    8. '	is' → logprob: -19.751171112060547
    9. ' ' → logprob: -20.751171112060547
    10. '1' → logprob: -20.876171112060547

Token 170: 'Dead' (ID: 38857)
  Prédit: 'Dead'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dead' → logprob: 0.0
    2. 'Death' → logprob: -17.5
    3. 'dead' → logprob: -19.875
    4. ' Dead' → logprob: -20.25
    5. 'De' → logprob: -20.375
    6. ' dead' → logprob: -21.625
    7. '_dead' → logprob: -22.0
    8. 'D' → logprob: -23.25
    9. 'Alive' → logprob: -23.625
    10. 'Deep' → logprob: -24.625

Token 171: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -1.1472419600977446e-06
    2. '(m' → logprob: -14.000000953674316
    3. '(mi' → logprob: -16.375001907348633
    4. '[mid' → logprob: -16.500001907348633
    5. '(' → logprob: -17.000001907348633
    6. '(min' → logprob: -17.750001907348633
    7. ' (' → logprob: -18.250001907348633
    8. '((' → logprob: -18.625001907348633
    9. '(M' → logprob: -18.750001907348633
    10. '(max' → logprob: -19.000001907348633

Token 172: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.048614732921123505
    2. ')' → logprob: -3.048614740371704
    3. ')
' → logprob: -11.798614501953125
    4. ' )
' → logprob: -11.798614501953125
    5. '   ' → logprob: -12.048614501953125
    6. ')

' → logprob: -12.173614501953125
    7. ' )' → logprob: -14.423614501953125
    8. ')`
' → logprob: -15.423614501953125
    9. ')==' → logprob: -15.798614501953125
    10. 'if' → logprob: -16.173614501953125

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05835337936878204
    2. ' if' → logprob: -3.4333534240722656
    3. 'if' → logprob: -4.183353424072266
    4. '
' → logprob: -5.933353424072266
    5. '<|end|>' → logprob: -6.183353424072266
    6. '```' → logprob: -6.308353424072266
    7. '==' → logprob: -6.808353424072266
    8. ')' → logprob: -8.558353424072266
    9. '>' → logprob: -8.683353424072266
    10. '1' → logprob: -8.808353424072266

Token 174: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3881978988647461
    2. '   ' → logprob: -1.138197898864746
    3. ' if' → logprob: -6.763197898864746
    4. '
' → logprob: -9.388197898864746
    5. '```' → logprob: -9.513197898864746
    6. '	if' → logprob: -12.513197898864746
    7. '``' → logprob: -13.263197898864746
    8. '  ' → logprob: -13.263197898864746
    9. 'If' → logprob: -13.263197898864746
    10. '    
' → logprob: -13.388197898864746

Token 175: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.3868720829486847
    2. 'res' → logprob: -1.1368720531463623
    3. '(res' → logprob: -14.511872291564941
    4. ' ' → logprob: -14.886872291564941
    5. '	res' → logprob: -16.136871337890625
    6. '   ' → logprob: -16.636871337890625
    7. ' ' → logprob: -18.261871337890625
    8. '  ' → logprob: -18.386871337890625
    9. '$res' → logprob: -19.136871337890625
    10. '_res' → logprob: -19.386871337890625

Token 176: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.007148433942347765
    2. '==-' → logprob: -5.507148265838623
    3. ' ==' → logprob: -6.132148265838623
    4. '!=' → logprob: -7.382148265838623
    5. '<=' → logprob: -8.257148742675781
    6. '==
' → logprob: -12.382148742675781
    7. '>=' → logprob: -12.757148742675781
    8. '!=-' → logprob: -13.257148742675781
    9. '=' → logprob: -13.882148742675781
    10. ' !=' → logprob: -14.132148742675781

Token 177: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02066555991768837
    2. '1' → logprob: -3.8956656455993652
    3. ' -' → logprob: -9.645665168762207
    4. ' ' → logprob: -9.770665168762207
    5. '0' → logprob: -13.895665168762207
    6. '   ' → logprob: -14.270665168762207
    7. '  ' → logprob: -16.145666122436523
    8. '−' → logprob: -16.270666122436523
    9. '`' → logprob: -17.145666122436523
    10. '```' → logprob: -17.333166122436523

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -19.0
    4. '<|end|>' → logprob: -19.0
    5. '   ' → logprob: -19.75
    6. '१' → logprob: -20.75
    7. '۱' → logprob: -20.75
    8. '১' → logprob: -21.1875
    9. '１' → logprob: -21.1875
    10. '2' → logprob: -21.4375

Token 179: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2017366737127304
    2. ':' → logprob: -1.7017366886138916
    3. '   ' → logprob: -8.826736450195312
    4. ' :
' → logprob: -9.701736450195312
    5. '       ' → logprob: -9.826736450195312
    6. ':l' → logprob: -10.326736450195312
    7. ':
' → logprob: -11.576736450195312
    8. '):
' → logprob: -11.951736450195312
    9. ' :' → logprob: -12.701736450195312
    10. ':r' → logprob: -12.826736450195312

Token 180: '       ' (ID: 309)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5628331899642944
    2. 'r' → logprob: -1.5628331899642944
    3. '   ' → logprob: -1.9378331899642944
    4. '       ' → logprob: -3.437833309173584
    5. ' l' → logprob: -3.687833309173584
    6. ' r' → logprob: -3.937833309173584
    7. '	l' → logprob: -8.937832832336426
    8. '	r' → logprob: -11.187832832336426
    9. '  ' → logprob: -11.812832832336426
    10. ',' → logprob: -11.937832832336426

Token 181: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.576265275478363
    2. 'r' → logprob: -0.826265275478363
    3. '   ' → logprob: -8.576265335083008
    4. ' l' → logprob: -9.326265335083008
    5. ' r' → logprob: -10.076265335083008
    6. '	l' → logprob: -12.826265335083008
    7. '       ' → logprob: -14.326265335083008
    8. '  ' → logprob: -14.701265335083008
    9. '```' → logprob: -14.701265335083008
    10. '	r' → logprob: -15.201265335083008

Token 182: 'ft' (ID: 826)
  Prédit: 'ft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ft' → logprob: -0.006034854333847761
    2. 'f' → logprob: -5.131034851074219
    3. 't' → logprob: -9.256034851074219
    4. 'gt' → logprob: -12.131034851074219
    5. '   ' → logprob: -13.381034851074219
    6. 'r' → logprob: -14.131034851074219
    7. 'eft' → logprob: -14.631034851074219
    8. 'tf' → logprob: -15.256034851074219
    9. 'ift' → logprob: -15.506034851074219
    10. '_ft' → logprob: -15.631034851074219

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740811586380005
    2. '=' → logprob: -0.9740811586380005
    3. ' ' → logprob: -12.849081039428711
    4. ')' → logprob: -14.724081039428711
    5. ',' → logprob: -14.849081039428711
    6. ' +=' → logprob: -14.974081039428711
    7. 't' → logprob: -15.974081039428711
    8. '+=' → logprob: -15.974081039428711
    9. '+' → logprob: -16.34908103942871
    10. '<|end|>' → logprob: -16.59908103942871

Token 184: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.004078401252627373
    2. ' mid' → logprob: -5.504078388214111
    3. '[mid' → logprob: -18.004077911376953
    4. '   ' → logprob: -18.129077911376953
    5. 'm' → logprob: -19.004077911376953
    6. '(mid' → logprob: -19.004077911376953
    7. 'midt' → logprob: -20.379077911376953
    8. ' ' → logprob: -21.004077911376953
    9. '_mid' → logprob: -21.504077911376953
    10. '
' → logprob: -21.504077911376953

Token 185: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00486251525580883
    2. 'else' → logprob: -5.379862308502197
    3. ' else' → logprob: -8.379862785339355
    4. 'elif' → logprob: -12.379862785339355
    5. '<|end|>' → logprob: -12.379862785339355
    6. '	else' → logprob: -13.379862785339355
    7. '
' → logprob: -14.004862785339355
    8. 'r' → logprob: -14.004862785339355
    9. '```' → logprob: -14.504862785339355
    10. '  ' → logprob: -15.629862785339355

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04909573495388031
    2. 'else' → logprob: -3.049095630645752
    3. ' else' → logprob: -7.924095630645752
    4. 'elif' → logprob: -9.54909610748291
    5. 'r' → logprob: -9.67409610748291
    6. '```' → logprob: -11.54909610748291
    7. '<|end|>' → logprob: -13.92409610748291
    8. '	else' → logprob: -14.54909610748291
    9. ' r' → logprob: -15.29909610748291
    10. '  ' → logprob: -15.29909610748291

Token 187: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0832921639084816
    2. '   ' → logprob: -2.833292245864868
    3. ' else' → logprob: -4.333292007446289
    4. 'elif' → logprob: -4.833292007446289
    5. ' elif' → logprob: -11.708292007446289
    6. '	else' → logprob: -12.833292007446289
    7. ')' → logprob: -13.833292007446289
    8. '```' → logprob: -13.958292007446289
    9. '  ' → logprob: -14.958292007446289
    10. '	elif' → logprob: -15.458292007446289

Token 188: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8444250822067261
    2. '       ' → logprob: -1.094425082206726
    3. ':' → logprob: -1.469425082206726
    4. 'r' → logprob: -5.969425201416016
    5. '   ' → logprob: -6.344425201416016
    6. ' r' → logprob: -6.969425201416016
    7. '```' → logprob: -10.469425201416016
    8. '):
' → logprob: -10.594425201416016
    9. ':

' → logprob: -10.844425201416016
    10. ':r' → logprob: -11.219425201416016

Token 189: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4572394788265228
    2. '       ' → logprob: -1.2072395086288452
    3. '   ' → logprob: -2.7072393894195557
    4. ' r' → logprob: -6.707239627838135
    5. '	r' → logprob: -12.332239151000977
    6. ' ' → logprob: -14.207239151000977
    7. '```' → logprob: -14.332239151000977
    8. '     ' → logprob: -14.832239151000977
    9. '      ' → logprob: -15.207239151000977
    10. '_r' → logprob: -15.957239151000977

Token 190: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.00035214703530073166
    2. ' r' → logprob: -8.000351905822754
    3. '   ' → logprob: -11.000351905822754
    4. '       ' → logprob: -17.62535285949707
    5. '	r' → logprob: -18.50035285949707
    6. '```' → logprob: -19.12535285949707
    7. '  ' → logprob: -21.25035285949707
    8. '
' → logprob: -21.37535285949707
    9. ' ' → logprob: -22.00035285949707
    10. '_r' → logprob: -22.25035285949707

Token 191: 'gt' (ID: 5115)
  Prédit: 'gt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gt' → logprob: -0.00010270876373397186
    2. '=' → logprob: -9.875102996826172
    3. 'g' → logprob: -10.000102996826172
    4. ' =' → logprob: -13.375102996826172
    5. '_gt' → logprob: -13.500102996826172
    6. '   ' → logprob: -13.625102996826172
    7. 'ght' → logprob: -14.250102996826172
    8. ' gt' → logprob: -14.500102996826172
    9. '```' → logprob: -15.625102996826172
    10. '       ' → logprob: -16.375102996826172

Token 192: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868710398674011
    2. ' =' → logprob: -1.136871099472046
    3. '＝' → logprob: -19.261871337890625
    4. '.=' → logprob: -20.136871337890625
    5. ')' → logprob: -20.261871337890625
    6. '   ' → logprob: -20.761871337890625
    7. '=

' → logprob: -20.761871337890625
    8. ' =
' → logprob: -21.136871337890625
    9. ' =)' → logprob: -21.261871337890625
    10. '=}' → logprob: -21.261871337890625

Token 193: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0015023599844425917
    2. ' mid' → logprob: -6.501502513885498
    3. '(mid' → logprob: -17.626502990722656
    4. '[mid' → logprob: -18.126502990722656
    5. '_mid' → logprob: -20.751502990722656
    6. 'midt' → logprob: -21.251502990722656
    7. '.mid' → logprob: -22.251502990722656
    8. ' midpoint' → logprob: -22.501502990722656
    9. 'middle' → logprob: -22.626502990722656
    10. 'm' → logprob: -23.751502990722656

Token 194: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.587483221665025e-05
    2. '#' → logprob: -10.875065803527832
    3. 'pr' → logprob: -11.250065803527832
    4. 'if' → logprob: -12.000065803527832
    5. 'r' → logprob: -12.000065803527832
    6. ' print' → logprob: -12.000065803527832
    7. '
' → logprob: -12.500065803527832
    8. 'l' → logprob: -12.625065803527832
    9. 'for' → logprob: -13.125065803527832
    10. '```' → logprob: -13.625065803527832

Token 195: 'left' (ID: 4530)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0691293254494667
    2. 'l' → logprob: -3.569129228591919
    3. 'r' → logprob: -4.069129467010498
    4. ')' → logprob: -4.069129467010498
    5. '```' → logprob: -6.319129467010498
    6. '#' → logprob: -6.444129467010498
    7. 'while' → logprob: -8.56912899017334
    8. 'n' → logprob: -8.69412899017334
    9. 'pr' → logprob: -8.81912899017334
    10. 'if' → logprob: -9.31912899017334

Token 196: 'Save' (ID: 10817)
  Prédit: '_bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.5079639554023743
    2. '_boundary' → logprob: -1.8829638957977295
    3. 'bound' → logprob: -3.0079638957977295
    4. '_dead' → logprob: -3.2579638957977295
    5. 'boundary' → logprob: -3.3829638957977295
    6. '_idx' → logprob: -4.132964134216309
    7. '_' → logprob: -4.382964134216309
    8. '=' → logprob: -4.632964134216309
    9. ' =' → logprob: -4.757964134216309
    10. '_ans' → logprob: -4.882964134216309

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9727873206138611
    2. 'd' → logprob: -1.2227873802185059
    3. '=' → logprob: -1.4727873802185059
    4. 'r' → logprob: -2.347787380218506
    5. '=r' → logprob: -7.472787380218506
    6. '_' → logprob: -7.847787380218506
    7. 's' → logprob: -7.972787380218506
    8. '_idx' → logprob: -8.222786903381348
    9. ',' → logprob: -8.722786903381348
    10. 'idx' → logprob: -8.847786903381348

Token 198: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002509070560336113
    2. ' r' → logprob: -6.627509117126465
    3. 'l' → logprob: -6.752509117126465
    4. ' l' → logprob: -11.627509117126465
    5. '0' → logprob: -12.752509117126465
    6. '(r' → logprob: -14.815009117126465
    7. '	r' → logprob: -15.127509117126465
    8. 'right' → logprob: -15.815009117126465
    9. '```' → logprob: -15.815009117126465
    10. '   ' → logprob: -15.877509117126465

Token 199: 'gt' (ID: 5115)
  Prédit: 'gt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gt' → logprob: -0.14127333462238312
    2. 'g' → logprob: -2.141273260116577
    3. 'ght' → logprob: -4.641273498535156
    4. 'r' → logprob: -6.141273498535156
    5. 'ft' → logprob: -6.891273498535156
    6. 's' → logprob: -7.016273498535156
    7. 't' → logprob: -8.891273498535156
    8. 'l' → logprob: -9.141273498535156
    9. '```' → logprob: -9.766273498535156
    10. 'ight' → logprob: -10.266273498535156

Token 200: '

' (ID: 279)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.049892179667949677
    2. 'r' → logprob: -3.2998921871185303
    3. '#' → logprob: -4.549891948699951
    4. '```' → logprob: -7.174891948699951
    5. 'while' → logprob: -8.17489242553711
    6. '
' → logprob: -9.04989242553711
    7. '``' → logprob: -11.79989242553711
    8. 'u' → logprob: -12.04989242553711
    9. '<|end|>' → logprob: -12.29989242553711
    10. ' l' → logprob: -12.67489242553711

Token 201: 'll' (ID: 680)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0016056748572736979
    2. '#' → logprob: -6.50160551071167
    3. 'r' → logprob: -10.001605987548828
    4. '```' → logprob: -10.876605987548828
    5. 'while' → logprob: -11.126605987548828
    6. '-' → logprob: -12.001605987548828
    7. 'left' → logprob: -12.001605987548828
    8. '-l' → logprob: -13.001605987548828
    9. 'print' → logprob: -13.626605987548828
    10. 'lf' → logprob: -13.626605987548828

Token 202: ' =' (ID: 314)
  Prédit: 'ft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ft' → logprob: -0.06404297053813934
    2. 'f' → logprob: -3.9390430450439453
    3. 'eft' → logprob: -3.9390430450439453
    4. '=' → logprob: -4.564043045043945
    5. ' =' → logprob: -5.439043045043945
    6. 't' → logprob: -5.564043045043945
    7. 'r' → logprob: -5.689043045043945
    8. 'ift' → logprob: -8.064043045043945
    9. ',' → logprob: -8.189043045043945
    10. '=-' → logprob: -9.689043045043945

Token 203: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23886828124523163
    2. 'left' → logprob: -2.238868236541748
    3. '-' → logprob: -2.488868236541748
    4. 'r' → logprob: -4.488868236541748
    5. 'l' → logprob: -5.113868236541748
    6. ' ' → logprob: -6.738868236541748
    7. '-r' → logprob: -6.738868236541748
    8. ' left' → logprob: -7.363868236541748
    9. '-l' → logprob: -7.363868236541748
    10. ' -' → logprob: -7.363868236541748

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. '2' → logprob: -12.000011444091797
    3. 'r' → logprob: -13.500011444091797
    4. 'l' → logprob: -13.750011444091797
    5. 'left' → logprob: -14.312511444091797
    6. '-' → logprob: -14.625011444091797
    7. ' ' → logprob: -15.125011444091797
    8. 'int' → logprob: -15.562511444091797
    9. '10' → logprob: -15.562511444091797
    10. 'N' → logprob: -15.625011444091797

Token 205: '
' (ID: 198)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.012712711468338966
    2. 'r' → logprob: -5.387712478637695
    3. ' rr' → logprob: -5.512712478637695
    4. 'lr' → logprob: -6.512712478637695
    5. 'rl' → logprob: -7.262712478637695
    6. 'rt' → logprob: -7.637712478637695
    7. 'ur' → logprob: -7.762712478637695
    8. 'l' → logprob: -8.012712478637695
    9. 'nr' → logprob: -8.762712478637695
    10. ',' → logprob: -9.387712478637695

Token 206: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.004432254936546087
    2. 'lr' → logprob: -5.504432201385498
    3. 'rl' → logprob: -8.254432678222656
    4. 'ur' → logprob: -9.629432678222656
    5. ' rr' → logprob: -11.379432678222656
    6. 'l' → logprob: -12.129432678222656
    7. 'nr' → logprob: -12.254432678222656
    8. 'rrrr' → logprob: -14.004432678222656
    9. '_rr' → logprob: -14.004432678222656
    10. '```' → logprob: -14.129432678222656

Token 207: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858884960412979
    2. ' =' → logprob: -3.048588752746582
    3. '=N' → logprob: -13.923588752746582
    4. 'r' → logprob: -15.173588752746582
    5. 'N' → logprob: -15.798588752746582
    6. ' ' → logprob: -15.923588752746582
    7. ' N' → logprob: -17.6735897064209
    8. ',' → logprob: -17.9235897064209
    9. '=

' → logprob: -18.0485897064209
    10. '   ' → logprob: -18.1735897064209

Token 208: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0007106438861228526
    2. ' N' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.125710487365723
    4. ' ' → logprob: -16.00071144104004
    5. '0' → logprob: -16.25071144104004
    6. '	N' → logprob: -16.87571144104004
    7. '=' → logprob: -17.12571144104004
    8. '=N' → logprob: -17.37571144104004
    9. '+' → logprob: -17.50071144104004
    10. 'n' → logprob: -17.62571144104004

Token 209: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.002191660227254033
    2. '
' → logprob: -6.377191543579102
    3. ' while' → logprob: -7.877191543579102
    4. '#' → logprob: -9.752191543579102
    5. '```' → logprob: -10.127191543579102
    6. 'While' → logprob: -12.377191543579102
    7. '+' → logprob: -12.877191543579102
    8. '``' → logprob: -13.877191543579102
    9. '<|end|>' → logprob: -14.127191543579102
    10. '	while' → logprob: -14.252191543579102

Token 210: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0006285638664849102
    2. '#' → logprob: -7.500628471374512
    3. ' while' → logprob: -9.750628471374512
    4. '```' → logprob: -11.250628471374512
    5. 'While' → logprob: -13.000628471374512
    6. '<|end|>' → logprob: -13.875628471374512
    7. '	while' → logprob: -14.625628471374512
    8. '
' → logprob: -15.000628471374512
    9. '``' → logprob: -16.000629425048828
    10. 'hile' → logprob: -16.375629425048828

Token 211: ' rr' (ID: 54129)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.3133377730846405
    2. ' rr' → logprob: -1.313337802886963
    3. '(rr' → logprob: -9.563337326049805
    4. 'll' → logprob: -12.813337326049805
    5. '_rr' → logprob: -13.563337326049805
    6. ' ll' → logprob: -14.563337326049805
    7. ' ' → logprob: -14.813337326049805
    8. 'r' → logprob: -15.438337326049805
    9. '   ' → logprob: -15.438337326049805
    10. ' (' → logprob: -15.938337326049805

Token 212: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014215926639735699
    2. '-' → logprob: -4.26421594619751
    3. '-r' → logprob: -10.014215469360352
    4. ' ' → logprob: -12.514215469360352
    5. '   ' → logprob: -14.014215469360352
    6. '>' → logprob: -14.389215469360352
    7. ' >' → logprob: -14.889215469360352
    8. '-l' → logprob: -14.889215469360352
    9. ' ' → logprob: -15.139215469360352
    10. '-s' → logprob: -16.13921546936035

Token 213: ' ll' (ID: 11475)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.0008204689365811646
    2. ' ll' → logprob: -7.750820636749268
    3. '1' → logprob: -8.00082015991211
    4. '	ll' → logprob: -10.12582015991211
    5. 'rl' → logprob: -12.87582015991211
    6. '_ll' → logprob: -13.00082015991211
    7. '<ll' → logprob: -13.00082015991211
    8. 'rr' → logprob: -13.37582015991211
    9. ',ll' → logprob: -13.37582015991211
    10. 'lr' → logprob: -13.87582015991211

Token 214: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1002068892121315
    2. ' >' → logprob: -2.3502068519592285
    3. ' ' → logprob: -15.600207328796387
    4. ')>' → logprob: -17.72520637512207
    5. ' ' → logprob: -18.60020637512207
    6. '()>' → logprob: -18.60020637512207
    7. '＞' → logprob: -19.60020637512207
    8. '```' → logprob: -19.97520637512207
    9. '">' → logprob: -20.10020637512207
    10. ']>' → logprob: -20.22520637512207

Token 215: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -17.875030517578125
    4. '>' → logprob: -19.875030517578125
    5. '2' → logprob: -20.875030517578125
    6. '```' → logprob: -21.000030517578125
    7. '=' → logprob: -21.250030517578125
    8. '۱' → logprob: -21.750030517578125
    9. '  ' → logprob: -21.875030517578125
    10. '
' → logprob: -21.875030517578125

Token 216: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.2500057220459
    4. '
' → logprob: -18.2500057220459
    5. '	' → logprob: -19.7500057220459
    6. '```' → logprob: -20.3750057220459
    7. '۱' → logprob: -21.0000057220459
    8. '2' → logprob: -21.0000057220459
    9. '  ' → logprob: -21.1250057220459
    10. '﻿' → logprob: -21.8125057220459

Token 217: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11293549835681915
    2. ':' → logprob: -2.2379355430603027
    3. '   ' → logprob: -9.362935066223145
    4. '):
' → logprob: -11.112935066223145
    5. ':

' → logprob: -12.112935066223145
    6. ' :
' → logprob: -12.987935066223145
    7. ':
' → logprob: -13.362935066223145
    8. '():
' → logprob: -13.862935066223145
    9. '```' → logprob: -14.487935066223145
    10. '=' → logprob: -15.112935066223145

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01772303692996502
    2. 'mid' → logprob: -4.142723083496094
    3. ' mid' → logprob: -6.392723083496094
    4. ' ' → logprob: -12.767723083496094
    5. 'mm' → logprob: -12.767723083496094
    6. '[mid' → logprob: -13.892723083496094
    7. '	m' → logprob: -14.017723083496094
    8. '       ' → logprob: -14.142723083496094
    9. 'mr' → logprob: -14.142723083496094
    10. 'm' → logprob: -14.267723083496094

Token 219: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.0005657802103087306
    2. ' mid' → logprob: -7.500566005706787
    3. '   ' → logprob: -11.500565528869629
    4. 'mm' → logprob: -13.125565528869629
    5. 'md' → logprob: -14.875565528869629
    6. 'mi' → logprob: -16.125566482543945
    7. 'm' → logprob: -16.250566482543945
    8. 'mr' → logprob: -16.875566482543945
    9. ' ' → logprob: -17.125566482543945
    10. 'med' → logprob: -18.750566482543945

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692862749099731
    2. '=' → logprob: -2.1269285678863525
    3. '=(' → logprob: -14.751928329467773
    4. ' =(' → logprob: -16.126928329467773
    5. ' ' → logprob: -17.251928329467773
    6. ',' → logprob: -17.501928329467773
    7. '```' → logprob: -18.001928329467773
    8. '(' → logprob: -18.376928329467773
    9. 's' → logprob: -18.751928329467773
    10. '＝' → logprob: -19.376928329467773

Token 221: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06200846657156944
    2. '(ll' → logprob: -2.8120083808898926
    3. '(' → logprob: -11.43700885772705
    4. '(rr' → logprob: -11.68700885772705
    5. '   ' → logprob: -12.18700885772705
    6. '(mid' → logprob: -12.31200885772705
    7. ' ' → logprob: -12.56200885772705
    8. '(ls' → logprob: -13.06200885772705
    9. '<ll' → logprob: -13.43700885772705
    10. '(int' → logprob: -13.81200885772705

Token 222: 'll' (ID: 680)
  Prédit: '(ll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ll' → logprob: -0.0033953944221138954
    2. 'll' → logprob: -5.7533955574035645
    3. ' (' → logprob: -8.628395080566406
    4. ' ll' → logprob: -11.503395080566406
    5. '(' → logprob: -11.628395080566406
    6. ',ll' → logprob: -12.003395080566406
    7. '(rr' → logprob: -12.128395080566406
    8. '<ll' → logprob: -12.753395080566406
    9. '	ll' → logprob: -13.503395080566406
    10. '   ' → logprob: -14.128395080566406

Token 223: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31326404213905334
    2. '+' → logprob: -1.313264012336731
    3. '+r' → logprob: -13.813263893127441
    4. ' ' → logprob: -14.563263893127441
    5. ' +
' → logprob: -15.438263893127441
    6. '+l' → logprob: -15.938263893127441
    7. ' ' → logprob: -16.063264846801758
    8. '+
' → logprob: -16.188264846801758
    9. ')' → logprob: -16.438264846801758
    10. '=' → logprob: -17.188264846801758

Token 224: ' rr' (ID: 54129)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.008619185537099838
    2. ' rr' → logprob: -4.75861930847168
    3. '(rr' → logprob: -12.75861930847168
    4. ' ' → logprob: -13.50861930847168
    5. '   ' → logprob: -15.50861930847168
    6. '_rr' → logprob: -16.63361930847168
    7. '  ' → logprob: -16.63361930847168
    8. '
' → logprob: -18.50861930847168
    9. 'll' → logprob: -18.63361930847168
    10. ')' → logprob: -19.13361930847168

Token 225: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029029499273747206
    2. ' )' → logprob: -8.250289916992188
    3. ')//' → logprob: -10.750289916992188
    4. '//' → logprob: -12.250289916992188
    5. ' //' → logprob: -13.000289916992188
    6. '#' → logprob: -15.625289916992188
    7. '）' → logprob: -16.500289916992188
    8. '')' → logprob: -16.875289916992188
    9. ')
' → logprob: -17.000289916992188
    10. '")' → logprob: -17.125289916992188

Token 226: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.02333364449441433
    2. '//' → logprob: -3.7733335494995117
    3. '#' → logprob: -9.648333549499512
    4. ' ' → logprob: -11.523333549499512
    5. '```' → logprob: -11.773333549499512
    6. ' #' → logprob: -12.648333549499512
    7. '   ' → logprob: -14.148333549499512
    8. ' ' → logprob: -14.398333549499512
    9. '
' → logprob: -14.648333549499512
    10. '2' → logprob: -14.898333549499512

Token 227: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '```' → logprob: -17.00006675720215
    4. '1' → logprob: -17.25006675720215
    5. '   ' → logprob: -17.50006675720215
    6. '(' → logprob: -19.75006675720215
    7. '۲' → logprob: -20.62506675720215
    8. '  ' → logprob: -20.75006675720215
    9. '`' → logprob: -20.87506675720215
    10. '``' → logprob: -21.00006675720215

Token 228: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -18.125
    4. '   ' → logprob: -19.125
    5. '۲' → logprob: -20.9375
    6. '
' → logprob: -21.0
    7. '２' → logprob: -21.0625
    8. '`' → logprob: -21.625
    9. '3' → logprob: -22.0
    10. 'two' → logprob: -22.0625

Token 229: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13473963737487793
    2. 'res' → logprob: -2.259739637374878
    3. '
' → logprob: -3.884739637374878
    4. ' res' → logprob: -7.009739875793457
    5. '  ' → logprob: -9.884739875793457
    6. '```' → logprob: -10.009739875793457
    7. '    
' → logprob: -10.134739875793457
    8. '
' → logprob: -11.134739875793457
    9. ' ' → logprob: -11.134739875793457
    10. '  
' → logprob: -11.384739875793457

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10431741923093796
    2. 'res' → logprob: -2.3543174266815186
    3. '
' → logprob: -5.6043171882629395
    4. ' res' → logprob: -8.354317665100098
    5. 'mid' → logprob: -9.354317665100098
    6. '```' → logprob: -10.604317665100098
    7. '    
' → logprob: -11.229317665100098
    8. '	res' → logprob: -11.229317665100098
    9. '  ' → logprob: -11.354317665100098
    10. ' ' → logprob: -11.854317665100098

Token 231: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -4.334533878136426e-05
    2. ' res' → logprob: -10.625042915344238
    3. '
' → logprob: -11.500042915344238
    4. '```' → logprob: -12.250042915344238
    5. '   ' → logprob: -13.125042915344238
    6. 'r' → logprob: -13.875042915344238
    7. 'mid' → logprob: -14.625042915344238
    8. '
' → logprob: -15.750042915344238
    9. 'if' → logprob: -15.875042915344238
    10. '    
' → logprob: -16.000043869018555

Token 232: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16025449335575104
    2. '=' → logprob: -1.9102544784545898
    3. '=is' → logprob: -10.53525447845459
    4. ' is' → logprob: -12.91025447845459
    5. 'is' → logprob: -14.16025447845459
    6. ' ' → logprob: -15.91025447845459
    7. ' ' → logprob: -16.035255432128906
    8. '   ' → logprob: -16.285255432128906
    9. ',' → logprob: -16.660255432128906
    10. '```' → logprob: -17.410255432128906

Token 233: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0017032715259119868
    2. ' is' → logprob: -6.376703262329102
    3. '```' → logprob: -14.126703262329102
    4. '   ' → logprob: -15.876703262329102
    5. '(is' → logprob: -16.3767032623291
    6. ' ' → logprob: -16.8767032623291
    7. '`' → logprob: -17.6267032623291
    8. 'def' → logprob: -18.1267032623291
    9. '``' → logprob: -18.2517032623291
    10. '1' → logprob: -18.3767032623291

Token 234: 'Dead' (ID: 38857)
  Prédit: 'Dead'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dead' → logprob: -3.531315314830863e-06
    2. 'is' → logprob: -12.750003814697266
    3. ' Dead' → logprob: -15.125003814697266
    4. 'dead' → logprob: -16.375003814697266
    5. '(is' → logprob: -16.750003814697266
    6. '(' → logprob: -17.000003814697266
    7. 'Alive' → logprob: -17.000003814697266
    8. 'Death' → logprob: -17.250003814697266
    9. '_dead' → logprob: -17.375003814697266
    10. '`' → logprob: -17.500003814697266

Token 235: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -7.896309739408025e-07
    2. ' (' → logprob: -15.250000953674316
    3. '(m' → logprob: -15.375000953674316
    4. '(' → logprob: -15.875000953674316
    5. '(mi' → logprob: -16.75
    6. '[mid' → logprob: -16.75
    7. 'mid' → logprob: -19.25
    8. '(min' → logprob: -19.375
    9. '(left' → logprob: -19.75
    10. '(mod' → logprob: -20.125

Token 236: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42457693815231323
    2. ')' → logprob: -1.174576997756958
    3. ')
' → logprob: -3.299576997756958
    4. 'if' → logprob: -10.299576759338379
    5. ' if' → logprob: -11.174576759338379
    6. ' )' → logprob: -11.299576759338379
    7. '```' → logprob: -11.424576759338379
    8. '
' → logprob: -11.674576759338379
    9. '  ' → logprob: -12.299576759338379
    10. ' )
' → logprob: -12.424576759338379

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.351697033504024e-05
    2. '<|end|>' → logprob: -10.750083923339844
    3. '```' → logprob: -10.750083923339844
    4. '
' → logprob: -11.000083923339844
    5. ' if' → logprob: -11.125083923339844
    6. 'if' → logprob: -12.750083923339844
    7. '=' → logprob: -13.625083923339844
    8. ',' → logprob: -13.875083923339844
    9. ')' → logprob: -14.125083923339844
    10. '<|end|>' → logprob: -14.250083923339844

Token 238: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47566306591033936
    2. 'if' (adapté à ' if') → logprob: -0.9756630659103394
    3. ' if' → logprob: -6.475663185119629
    4. '```' → logprob: -10.225663185119629
    5. '
' → logprob: -12.975663185119629
    6. '  ' → logprob: -13.475663185119629
    7. 'If' → logprob: -13.725663185119629
    8. ' ' → logprob: -13.975663185119629
    9. '	if' → logprob: -14.225663185119629
    10. '    ' → logprob: -14.600663185119629

Token 239: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.08899126946926117
    2. 'res' → logprob: -2.463991165161133
    3. '   ' → logprob: -10.463991165161133
    4. ' ' → logprob: -11.588991165161133
    5. '(res' → logprob: -12.463991165161133
    6. '  ' → logprob: -12.838991165161133
    7. '	res' → logprob: -13.463991165161133
    8. '```' → logprob: -13.838991165161133
    9. '1' → logprob: -13.963991165161133
    10. ' ' → logprob: -13.963991165161133

Token 240: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2812640964984894
    2. ' ==' → logprob: -1.406264066696167
    3. '==-' → logprob: -9.531264305114746
    4. '```' → logprob: -11.406264305114746
    5. '=' → logprob: -11.531264305114746
    6. '==
' → logprob: -12.406264305114746
    7. ' ' → logprob: -12.656264305114746
    8. '!=' → logprob: -12.906264305114746
    9. ' !=' → logprob: -13.281264305114746
    10. ')' → logprob: -13.406264305114746

Token 241: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016370641067624092
    2. ' ' → logprob: -4.14137077331543
    3. '-' → logprob: -8.64137077331543
    4. '0' → logprob: -9.51637077331543
    5. '   ' → logprob: -10.14137077331543
    6. ' -' → logprob: -10.39137077331543
    7. '  ' → logprob: -12.32887077331543
    8. '
' → logprob: -12.45387077331543
    9. '    ' → logprob: -13.70387077331543
    10. '```' → logprob: -14.01637077331543

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004855161067098379
    2. ' ' → logprob: -5.379855155944824
    3. '-' → logprob: -8.754855155944824
    4. '0' → logprob: -10.004855155944824
    5. ' -' → logprob: -11.129855155944824
    6. '   ' → logprob: -11.754855155944824
    7. '
' → logprob: -13.004855155944824
    8. '  ' → logprob: -13.067355155944824
    9. '```' → logprob: -14.067355155944824
    10. '    ' → logprob: -14.442355155944824

Token 243: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2526138126850128
    2. ':
' → logprob: -1.5026137828826904
    3. '       ' → logprob: -7.6276140213012695
    4. '):
' → logprob: -9.12761402130127
    5. '   ' → logprob: -9.75261402130127
    6. '=' → logprob: -11.75261402130127
    7. '<|end|>' → logprob: -11.75261402130127
    8. '):' → logprob: -12.75261402130127
    9. '():
' → logprob: -13.12761402130127
    10. ':

' → logprob: -13.25261402130127

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021142227575182915
    2. ' rr' → logprob: -4.52114200592041
    3. 'rr' → logprob: -4.89614200592041
    4. '   ' → logprob: -6.89614200592041
    5. ' ll' → logprob: -7.27114200592041
    6. ':' → logprob: -8.27114200592041
    7. '```' → logprob: -8.89614200592041
    8. '(rr' → logprob: -9.02114200592041
    9. 'll' → logprob: -9.14614200592041
    10. '
' → logprob: -9.64614200592041

Token 245: ' rr' (ID: 54129)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' (adapté à ' rr') → logprob: -0.0021874953527003527
    2. '   ' → logprob: -6.252187728881836
    3. ' rr' → logprob: -8.377187728881836
    4. '(rr' → logprob: -11.877187728881836
    5. '_rr' → logprob: -12.127187728881836
    6. '       ' → logprob: -12.252187728881836
    7. 'll' → logprob: -12.252187728881836
    8. '
' → logprob: -12.877187728881836
    9. 'rl' → logprob: -13.127187728881836
    10. 'r' → logprob: -14.752187728881836

Token 246: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022422909736633
    2. ' =' → logprob: -1.910224199295044
    3. ')' → logprob: -18.66022491455078
    4. '   ' → logprob: -18.78522491455078
    5. '＝' → logprob: -19.03522491455078
    6. ' ' → logprob: -19.53522491455078
    7. '<|end|>' → logprob: -19.66022491455078
    8. '=}' → logprob: -20.53522491455078
    9. '=
' → logprob: -20.66022491455078
    10. ',' → logprob: -20.78522491455078

Token 247: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.014163747429847717
    2. ' mid' → logprob: -4.264163970947266
    3. '[mid' → logprob: -16.764163970947266
    4. '   ' → logprob: -16.889163970947266
    5. ' ' → logprob: -17.014163970947266
    6. 'middle' → logprob: -17.264163970947266
    7. '(mid' → logprob: -17.389163970947266
    8. 'm' → logprob: -18.014163970947266
    9. 'midt' → logprob: -18.514163970947266
    10. '_mid' → logprob: -19.389163970947266

Token 248: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1605527102947235
    2. 'else' → logprob: -1.910552740097046
    3. ' else' → logprob: -8.410552978515625
    4. '```' → logprob: -9.410552978515625
    5. '
' → logprob: -11.910552978515625
    6. '<|end|>' → logprob: -12.035552978515625
    7. 'll' → logprob: -12.535552978515625
    8. '	else' → logprob: -12.785552978515625
    9. '``' → logprob: -14.160552978515625
    10. 'l' → logprob: -14.410552978515625

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1604226529598236
    2. 'else' → logprob: -1.910422682762146
    3. '```' → logprob: -9.035422325134277
    4. ' else' → logprob: -9.535422325134277
    5. '	else' → logprob: -13.160422325134277
    6. '
' → logprob: -13.535422325134277
    7. 'll' → logprob: -13.785422325134277
    8. '``' → logprob: -14.285422325134277
    9. '<|end|>' → logprob: -14.410422325134277
    10. 'l' → logprob: -14.910422325134277

Token 250: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0044619240798056126
    2. ' else' → logprob: -5.504461765289307
    3. '   ' → logprob: -7.879461765289307
    4. '	else' → logprob: -13.004462242126465
    5. '<|end|>' → logprob: -13.629462242126465
    6. '```' → logprob: -14.254462242126465
    7. '
' → logprob: -15.254462242126465
    8. '  ' → logprob: -15.629462242126465
    9. ' ' → logprob: -16.00446128845215
    10. '_else' → logprob: -16.25446128845215

Token 251: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040219054790213704
    2. ':' → logprob: -8.375402450561523
    3. ':
' → logprob: -9.250402450561523
    4. '   ' → logprob: -10.000402450561523
    5. ',' → logprob: -11.250402450561523
    6. '      ' → logprob: -12.000402450561523
    7. '```' → logprob: -12.750402450561523
    8. '<|end|>' → logprob: -13.625402450561523
    9. '     ' → logprob: -13.875402450561523
    10. '
' → logprob: -13.875402450561523

Token 252: '       ' (ID: 309)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.10917170345783234
    2. '   ' → logprob: -2.8591716289520264
    3. '       ' → logprob: -3.1091716289520264
    4. ' ll' → logprob: -6.6091718673706055
    5. '     ' → logprob: -10.359171867370605
    6. '	ll' → logprob: -10.484171867370605
    7. '    ' → logprob: -11.109171867370605
    8. '<ll' → logprob: -11.359171867370605
    9. 'lc' → logprob: -12.234171867370605
    10. ' ' → logprob: -12.234171867370605

Token 253: ' ll' (ID: 11475)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' (adapté à ' ll') → logprob: -8.876193169271573e-05
    2. ' ll' → logprob: -9.500088691711426
    3. '	ll' → logprob: -11.875088691711426
    4. '   ' → logprob: -12.000088691711426
    5. '
' → logprob: -15.375088691711426
    6. '_ll' → logprob: -15.625088691711426
    7. '<ll' → logprob: -16.000089645385742
    8. ',ll' → logprob: -16.250089645385742
    9. '    ' → logprob: -16.500089645385742
    10. '(ll' → logprob: -16.500089645385742

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06198684871196747
    2. '=' → logprob: -2.8119869232177734
    3. ' +=' → logprob: -10.936986923217773
    4. '+=' → logprob: -13.561986923217773
    5. ' ' → logprob: -16.936986923217773
    6. '   ' → logprob: -17.186986923217773
    7. '    ' → logprob: -18.436986923217773
    8. ' =)' → logprob: -18.436986923217773
    9. ' ' → logprob: -18.936986923217773
    10. ')' → logprob: -19.186986923217773

Token 255: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.061967797577381134
    2. ' mid' → logprob: -2.8119678497314453
    3. '[mid' → logprob: -17.311967849731445
    4. '(mid' → logprob: -17.436967849731445
    5. '   ' → logprob: -18.311967849731445
    6. ' ' → logprob: -18.686967849731445
    7. 'm' → logprob: -19.186967849731445
    8. ' midpoint' → logprob: -19.311967849731445
    9. '_mid' → logprob: -19.561967849731445
    10. 'middle' → logprob: -19.811967849731445

Token 256: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003478432074189186
    2. 'left' → logprob: -6.128478527069092
    3. 'right' → logprob: -8.003478050231934
    4. '
' → logprob: -8.128478050231934
    5. 'r' → logprob: -9.003478050231934
    6. 'answer' → logprob: -9.253478050231934
    7. 'pr' → logprob: -9.753478050231934
    8. 'dead' → logprob: -9.753478050231934
    9. 'l' → logprob: -9.878478050231934
    10. ')' → logprob: -10.003478050231934

Token 257: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0056677027605473995
    2. 'print' → logprob: -5.255667686462402
    3. 'left' → logprob: -8.380667686462402
    4. 'sur' → logprob: -9.380667686462402
    5. 'dead' → logprob: -9.880667686462402
    6. 'r' → logprob: -10.630667686462402
    7. 'rr' → logprob: -11.005667686462402
    8. 'answer' → logprob: -11.755667686462402
    9. 'ans' → logprob: -11.880667686462402
    10. 'safe' → logprob: -13.005667686462402

Token 258: 'Save' (ID: 10817)
  Prédit: 'Save'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Save' → logprob: -0.002070087008178234
    2. '_save' → logprob: -6.62706995010376
    3. '_' → logprob: -8.627070426940918
    4. ' =' → logprob: -8.627070426940918
    5. '_Save' → logprob: -9.002070426940918
    6. 'Safe' → logprob: -9.627070426940918
    7. 's' → logprob: -10.377070426940918
    8. 'S' → logprob: -10.502070426940918
    9. 'r' → logprob: -10.502070426940918
    10. '=' → logprob: -10.502070426940918

Token 259: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804286941885948
    2. '=' → logprob: -3.2880427837371826
    3. ' ' → logprob: -13.913043022155762
    4. ' =)' → logprob: -16.163042068481445
    5. ' +=' → logprob: -16.288042068481445
    6. '_' → logprob: -16.288042068481445
    7. ',' → logprob: -16.663042068481445
    8. ')' → logprob: -16.663042068481445
    9. '=r' → logprob: -17.288042068481445
    10. 'r' → logprob: -17.413042068481445

Token 260: ' ll' (ID: 11475)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.0012678514467552304
    2. ' ll' → logprob: -7.251267910003662
    3. 'rr' → logprob: -7.501267910003662
    4. 'lr' → logprob: -13.126267433166504
    5. 'rl' → logprob: -13.501267433166504
    6. 'mid' → logprob: -13.876267433166504
    7. ' rr' → logprob: -14.251267433166504
    8. '	ll' → logprob: -14.876267433166504
    9. ',ll' → logprob: -17.62626838684082
    10. 'lll' → logprob: -17.75126838684082

Token 261: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.015305552864447e-05
    2. 'pr' → logprob: -10.250060081481934
    3. ' print' → logprob: -12.500060081481934
    4. '#print' → logprob: -12.500060081481934
    5. 'prin' → logprob: -12.875060081481934
    6. 'result' → logprob: -13.000060081481934
    7. '```' → logprob: -13.125060081481934
    8. 'answer' → logprob: -13.125060081481934
    9. 'ans' → logprob: -13.375060081481934
    10. '#' → logprob: -13.500060081481934

Token 262: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.868328920158092e-05
    2. '```' → logprob: -11.125028610229492
    3. 'answer' → logprob: -11.750028610229492
    4. '
' → logprob: -13.500028610229492
    5. '#print' → logprob: -13.875028610229492
    6. '#' → logprob: -14.000028610229492
    7. '``' → logprob: -14.500028610229492
    8. 'pr' → logprob: -14.875028610229492
    9. '\' → logprob: -15.000028610229492
    10. 'result' → logprob: -15.250028610229492

Token 263: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001422770437784493
    2. 'answer' → logprob: -9.375142097473145
    3. 'ans' → logprob: -10.750142097473145
    4. 'result' → logprob: -11.000142097473145
    5. 'pr' → logprob: -11.875142097473145
    6. 'dead' → logprob: -12.750142097473145
    7. 'sur' → logprob: -13.250142097473145
    8. '#' → logprob: -13.375142097473145
    9. '#print' → logprob: -13.500142097473145
    10. ' print' → logprob: -13.500142097473145

Token 264: '("' (ID: 568)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012335049919784069
    2. 'right' → logprob: -4.637334823608398
    3. 'left' → logprob: -6.512334823608398
    4. 'r' → logprob: -7.887334823608398
    5. 'N' → logprob: -8.137334823608398
    6. '(right' → logprob: -8.387334823608398
    7. '(left' → logprob: -9.512334823608398
    8. 'abs' → logprob: -10.012334823608398
    9. '(r' → logprob: -10.512334823608398
    10. 'max' → logprob: -11.262334823608398

Token 265: 'INTER' (ID: 60309)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.07295376807451248
    2. 'left' → logprob: -3.572953701019287
    3. 'r' → logprob: -4.197953701019287
    4. '(right' → logprob: -4.697953701019287
    5. 'max' → logprob: -5.072953701019287
    6. 'N' → logprob: -5.447953701019287
    7. 'abs' → logprob: -5.822953701019287
    8. '(left' → logprob: -6.947953701019287
    9. ')' → logprob: -7.322953701019287
    10. '(r' → logprob: -7.822953701019287

Token 266: 'VAL' (ID: 12510)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5777207016944885
    2. 'VAL' → logprob: -0.8277207016944885
    3. 'vals' → logprob: -7.327720642089844
    4. '```' → logprob: -8.202720642089844
    5. '_val' → logprob: -8.952720642089844
    6. '\n' → logprob: -9.577720642089844
    7. ')' → logprob: -9.702720642089844
    8. '#' → logprob: -10.077720642089844
    9. '_' → logprob: -10.327720642089844
    10. 'section' → logprob: -10.327720642089844

Token 267: '",' (ID: 672)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2169437408447266
    2. '",' → logprob: -1.3419437408447266
    3. '")' → logprob: -1.9669437408447266
    4. ')' → logprob: -2.3419437408447266
    5. ':",' → logprob: -2.9669437408447266
    6. ' ",' → logprob: -3.3419437408447266
    7. ' ")' → logprob: -3.9669437408447266
    8. 's' → logprob: -4.091943740844727
    9. ' =' → logprob: -4.591943740844727
    10. ' ' → logprob: -4.591943740844727

Token 268: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.554110586643219
    2. 'right' → logprob: -1.3041105270385742
    3. ' left' → logprob: -2.179110527038574
    4. ' right' → logprob: -3.304110527038574
    5. 'r' → logprob: -6.304110527038574
    6. ')' → logprob: -7.054110527038574
    7. ' r' → logprob: -7.429110527038574
    8. '(left' → logprob: -7.554110527038574
    9. '(right' → logprob: -9.429110527038574
    10. 'l' → logprob: -10.304110527038574

Token 269: 'Save' (ID: 10817)
  Prédit: 'Save'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Save' → logprob: -9.05499910004437e-05
    2. ',' → logprob: -9.625090599060059
    3. '_save' → logprob: -11.500090599060059
    4. '_Save' → logprob: -11.750090599060059
    5. '_SAVE' → logprob: -13.625090599060059
    6. ')' → logprob: -13.750090599060059
    7. '_,' → logprob: -13.875090599060059
    8. ' ,' → logprob: -14.250090599060059
    9. ' Save' → logprob: -14.375090599060059
    10. '```' → logprob: -14.875090599060059

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038262063171714544
    2. ')' → logprob: -6.503826141357422
    3. '+' → logprob: -6.628826141357422
    4. ',right' → logprob: -7.753826141357422
    5. ' ,' → logprob: -8.253826141357422
    6. ',end' → logprob: -8.878826141357422
    7. ' +' → logprob: -9.128826141357422
    8. ',r' → logprob: -11.378826141357422
    9. '#' → logprob: -11.753826141357422
    10. ',#' → logprob: -12.128826141357422

Token 271: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.023249903693795204
    2. ' right' → logprob: -3.773249864578247
    3. ',' → logprob: -13.023249626159668
    4. ',right' → logprob: -13.273249626159668
    5. '(right' → logprob: -15.523249626159668
    6. ')' → logprob: -16.148250579833984
    7. 'r' → logprob: -16.273250579833984
    8. '	right' → logprob: -17.523250579833984
    9. '"' → logprob: -17.898250579833984
    10. '[right' → logprob: -18.023250579833984

Token 272: 'Save' (ID: 10817)
  Prédit: 'Save'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Save' → logprob: -0.0006265374249778688
    2. '+' → logprob: -8.500626564025879
    3. ')' → logprob: -8.875626564025879
    4. ' -' → logprob: -9.125626564025879
    5. '-' → logprob: -9.500626564025879
    6. ',' → logprob: -9.500626564025879
    7. ' +' → logprob: -11.875626564025879
    8. 'S' → logprob: -13.125626564025879
    9. 'Print' → logprob: -13.250626564025879
    10. ' )' → logprob: -13.375626564025879

Token 273: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019584128633141518
    2. ')
' → logprob: -4.2695841789245605
    3. '+' → logprob: -5.2695841789245605
    4. ' +' → logprob: -9.269583702087402
    5. ' )' → logprob: -9.644583702087402
    6. ')

' → logprob: -10.394583702087402
    7. '#' → logprob: -10.644583702087402
    8. 'if' → logprob: -11.769583702087402
    9. ',' → logprob: -11.894583702087402
    10. 'print' → logprob: -12.269583702087402

Token 274: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.676292231422849e-05
    2. 'answer' → logprob: -12.000017166137695
    3. 'pr' → logprob: -12.125017166137695
    4. 'result' → logprob: -13.875017166137695
    5. '```' → logprob: -14.375017166137695
    6. 'right' → logprob: -14.500017166137695
    7. '#' → logprob: -14.625017166137695
    8. 'max' → logprob: -14.875017166137695
    9. ' print' → logprob: -14.875017166137695
    10. 'ans' → logprob: -14.875017166137695

Token 275: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061981018632650375
    2. '=' → logprob: -2.811980962753296
    3. 's' → logprob: -11.936981201171875
    4. '_' → logprob: -12.311981201171875
    5. ' ' → logprob: -13.936981201171875
    6. '_=' → logprob: -15.436981201171875
    7. '＝' → logprob: -15.686981201171875
    8. ' ' → logprob: -15.936981201171875
    9. '  ' → logprob: -16.186981201171875
    10. '=int' → logprob: -16.311981201171875

Token 276: ' (' (ID: 350)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.07593365758657455
    2. 'max' → logprob: -2.9509336948394775
    3. ' right' → logprob: -4.075933456420898
    4. ' max' → logprob: -5.575933456420898
    5. 'N' → logprob: -10.075933456420898
    6. ' N' → logprob: -12.075933456420898
    7. 'left' → logprob: -12.325933456420898
    8. ' ' → logprob: -12.450933456420898
    9. '0' → logprob: -12.700933456420898
    10. '(right' → logprob: -12.700933456420898

Token 277: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.002323318039998412
    2. ' right' → logprob: -6.127323150634766
    3. 'N' → logprob: -9.377323150634766
    4. 'max' → logprob: -10.252323150634766
    5. 'left' → logprob: -11.252323150634766
    6. ' N' → logprob: -13.627323150634766
    7. '   ' → logprob: -13.752323150634766
    8. ' ' → logprob: -14.002323150634766
    9. ' max' → logprob: -14.752323150634766
    10. '(right' → logprob: -14.752323150634766

Token 278: 'Save' (ID: 10817)
  Prédit: 'Save'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Save' → logprob: -2.816093228830141e-06
    2. ' -' → logprob: -13.37500286102295
    3. '_save' → logprob: -14.25000286102295
    4. '-' → logprob: -14.75000286102295
    5. '_Save' → logprob: -16.125001907348633
    6. ' Save' → logprob: -17.250001907348633
    7. '_' → logprob: -18.875001907348633
    8. 'right' → logprob: -19.000001907348633
    9. ')' → logprob: -19.000001907348633
    10. '   ' → logprob: -19.125001907348633

Token 279: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10021983087062836
    2. '-' → logprob: -2.3502197265625
    3. ')' → logprob: -11.3502197265625
    4. ' ' → logprob: -14.7252197265625
    5. '+' → logprob: -15.4752197265625
    6. '-left' → logprob: -15.4752197265625
    7. ' -
' → logprob: -15.7252197265625
    8. '   ' → logprob: -15.8502197265625
    9. ')-(' → logprob: -16.4752197265625
    10. '-)' → logprob: -16.8502197265625

Token 280: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.005234356038272381
    2. ' left' → logprob: -5.255234241485596
    3. '1' → logprob: -14.755234718322754
    4. '(left' → logprob: -16.255233764648438
    5. '	left' → logprob: -17.255233764648438
    6. 'max' → logprob: -17.630233764648438
    7. '[left' → logprob: -17.630233764648438
    8. 'right' → logprob: -18.380233764648438
    9. ')' → logprob: -18.380233764648438
    10. ' ' → logprob: -19.630233764648438

Token 281: 'Save' (ID: 10817)
  Prédit: 'Save'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Save' → logprob: -1.5094070477061905e-05
    2. '_save' → logprob: -11.250015258789062
    3. ' Save' → logprob: -14.375015258789062
    4. '_Save' → logprob: -14.625015258789062
    5. ' ' → logprob: -15.000015258789062
    6. 'save' → logprob: -15.125015258789062
    7. ')' → logprob: -15.750015258789062
    8. 'S' → logprob: -16.250015258789062
    9. 's' → logprob: -16.750015258789062
    10. 'Safe' → logprob: -17.250015258789062

Token 282: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.19004644453525543
    2. ')' → logprob: -2.190046548843384
    3. '-' → logprob: -2.815046548843384
    4. ' )' → logprob: -6.690046310424805
    5. ' ' → logprob: -11.440046310424805
    6. ' if' → logprob: -12.690046310424805
    7. '>' → logprob: -13.065046310424805
    8. ')*' → logprob: -13.690046310424805
    9. '1' → logprob: -13.940046310424805
    10. ' +' → logprob: -14.315046310424805

Token 283: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43039649724960327
    2. '0' → logprob: -1.930396556854248
    3. '-' → logprob: -2.055396556854248
    4. ')' → logprob: -2.805396556854248
    5. ' ' → logprob: -4.930396556854248
    6. 'N' → logprob: -5.555396556854248
    7. ' -' → logprob: -5.680396556854248
    8. ' N' → logprob: -7.055396556854248
    9. '-N' → logprob: -7.805396556854248
    10. '
' → logprob: -9.68039608001709

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10689210891723633
    2. '0' → logprob: -2.7318921089172363
    3. 'N' → logprob: -3.9818921089172363
    4. '-' → logprob: -4.481892108917236
    5. ' ' → logprob: -5.481892108917236
    6. ')' → logprob: -7.231892108917236
    7. ' N' → logprob: -7.356892108917236
    8. ' -' → logprob: -7.731892108917236
    9. 'max' → logprob: -8.606891632080078
    10. '(N' → logprob: -10.106891632080078

Token 285: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019603055261541158
    2. ')
' → logprob: -9.25019645690918
    3. ' )' → logprob: -9.75019645690918
    4. ')*' → logprob: -11.12519645690918
    5. ' if' → logprob: -11.12519645690918
    6. 'if' → logprob: -12.00019645690918
    7. ')

' → logprob: -13.50019645690918
    8. ' -' → logprob: -13.87519645690918
    9. '-' → logprob: -14.25019645690918
    10. '))' → logprob: -14.50019645690918

Token 286: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.008129963040119e-06
    2. ' print' → logprob: -12.625003814697266
    3. '
' → logprob: -14.500003814697266
    4. '```' → logprob: -16.125003814697266
    5. '#print' → logprob: -18.875003814697266
    6. 'pr' → logprob: -19.125003814697266
    7. '-print' → logprob: -19.250003814697266
    8. '.print' → logprob: -19.250003814697266
    9. '(print' → logprob: -19.500003814697266
    10. '#' → logprob: -19.875003814697266

Token 287: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0789070799946785
    2. '(' → logprob: -2.578907012939453
    3. 'result' → logprob: -11.203907012939453
    4. '()' → logprob: -12.953907012939453
    5. '(max' → logprob: -14.703907012939453
    6. '(
' → logprob: -15.203907012939453
    7. ' (' → logprob: -15.578907012939453
    8. '((' → logprob: -15.703907012939453
    9. '(left' → logprob: -15.953907012939453
    10. '('' → logprob: -16.953907012939453

Token 288: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7848862373502925e-05
    2. ' )' → logprob: -10.500027656555176
    3. ')
' → logprob: -15.875027656555176
    4. ')`' → logprob: -17.500028610229492
    5. ')#' → logprob: -17.625028610229492
    6. '```' → logprob: -17.625028610229492
    7. '+' → logprob: -17.750028610229492
    8. '))' → logprob: -18.500028610229492
    9. '`)' → logprob: -18.625028610229492
    10. '#' → logprob: -18.875028610229492

Token 289: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 290: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 291: ' check' (ID: 2371)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8391621708869934
    2. 'i' → logprob: -1.5891621112823486
    3. ' idx' → logprob: -2.0891621112823486
    4. 'idx' → logprob: -2.3391621112823486
    5. ' i' → logprob: -2.5891621112823486
    6. ' _' → logprob: -3.3391621112823486
    7. ' ' → logprob: -5.214162349700928
    8. ')' → logprob: -5.589162349700928
    9. 's' → logprob: -5.589162349700928
    10. '_i' → logprob: -6.214162349700928

Token 292: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7761268615722656
    2. 'for' → logprob: -0.9011268615722656
    3. ' for' → logprob: -2.5261268615722656
    4. '<|end|>' → logprob: -4.026126861572266
    5. 'print' → logprob: -5.026126861572266
    6. ' #' → logprob: -5.026126861572266
    7. '```' → logprob: -5.026126861572266
    8. 'pass' → logprob: -5.151126861572266
    9. '#print' → logprob: -5.526126861572266
    10. ' ' → logprob: -6.901126861572266

Token 294: 'for' (ID: 1938)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16016866266727448
    2. 'pass' → logprob: -3.1601686477661133
    3. '<|end|>' → logprob: -3.4101686477661133
    4. '...' → logprob: -3.7851686477661133
    5. '```' → logprob: -4.285168647766113
    6. 'for' → logprob: -4.535168647766113
    7. '0' → logprob: -4.785168647766113
    8. 'print' → logprob: -5.535168647766113
    9. ' #' → logprob: -5.910168647766113
    10. ' pass' → logprob: -6.160168647766113

Token 295: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18507778644561768
    2. ' i' → logprob: -2.560077667236328
    3. 'idx' → logprob: -2.935077667236328
    4. ' idx' → logprob: -3.685077667236328
    5. '_' → logprob: -4.685077667236328
    6. 'x' → logprob: -6.810077667236328
    7. 'pos' → logprob: -7.310077667236328
    8. ' _' → logprob: -7.435077667236328
    9. 's' → logprob: -7.810077667236328
    10. '_i' → logprob: -7.935077667236328

Token 296: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14292162656784058
    2. 'in' → logprob: -2.0179216861724854
    3. ' ' → logprob: -9.267921447753906
    4. 'i' → logprob: -10.267921447753906
    5. ' i' → logprob: -10.267921447753906
    6. '  ' → logprob: -10.892921447753906
    7. 'range' → logprob: -10.892921447753906
    8. '   ' → logprob: -11.142921447753906
    9. ' range' → logprob: -11.392921447753906
    10. 'n' → logprob: -12.392921447753906

Token 297: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08896400779485703
    2. ' range' → logprob: -2.4639639854431152
    3. 'S' → logprob: -11.963964462280273
    4. ' ' → logprob: -12.213964462280273
    5. 'in' → logprob: -12.588964462280273
    6. ' in' → logprob: -13.463964462280273
    7. '0' → logprob: -13.588964462280273
    8. '  ' → logprob: -13.713964462280273
    9. '(range' → logprob: -13.713964462280273
    10. ' S' → logprob: -13.838964462280273

Token 298: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.01162725780159235
    2. 'N' → logprob: -4.636627197265625
    3. '(' → logprob: -6.636627197265625
    4. ' N' → logprob: -8.261627197265625
    5. '(n' → logprob: -9.136627197265625
    6. ' (' → logprob: -9.636627197265625
    7. '(len' → logprob: -10.386627197265625
    8. '(Q' → logprob: -10.761627197265625
    9. 'range' → logprob: -11.261627197265625
    10. '(
' → logprob: -11.886627197265625

Token 299: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.313616007566452
    2. '):
' → logprob: -1.3136160373687744
    3. ')' → logprob: -9.063615798950195
    4. '#' → logprob: -9.313615798950195
    5. '-' → logprob: -9.438615798950195
    6. '+' → logprob: -10.438615798950195
    7. '):
' → logprob: -11.813615798950195
    8. ' ):' → logprob: -11.813615798950195
    9. '):

' → logprob: -11.938615798950195
    10. '   ' → logprob: -12.563615798950195

Token 300: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45317724347114563
    2. '#' → logprob: -1.2031772136688232
    3. ' #' → logprob: -3.2031772136688232
    4. ')' → logprob: -5.203177452087402
    5. ' i' → logprob: -5.578177452087402
    6. ' if' → logprob: -5.828177452087402
    7. ' ' → logprob: -5.953177452087402
    8. 'print' → logprob: -6.328177452087402
    9. '<|end|>' → logprob: -6.328177452087402
    10. '#print' → logprob: -7.078177452087402

Token 301: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11417723447084427
    2. '#print' → logprob: -2.7391772270202637
    3. 'print' → logprob: -3.3641772270202637
    4. '   ' → logprob: -4.989177227020264
    5. ' #' → logprob: -7.114177227020264
    6. ' print' → logprob: -7.364177227020264
    7. ' ' → logprob: -8.489177703857422
    8. 'result' → logprob: -10.239177703857422
    9. '#index' → logprob: -10.239177703857422
    10. 'res' → logprob: -10.364177703857422

Token 302: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6192580461502075
    2. '#print' → logprob: -1.3692580461502075
    3. '#' → logprob: -1.6192580461502075
    4. 'res' → logprob: -5.369257926940918
    5. '   ' → logprob: -5.869257926940918
    6. ' print' → logprob: -6.869257926940918
    7. ' #' → logprob: -8.494257926940918
    8. 'pass' → logprob: -8.869257926940918
    9. ' res' → logprob: -9.244257926940918
    10. ' ' → logprob: -9.494257926940918

Token 303: '(i' (ID: 3649)
  Prédit: '(is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.5202738046646118
    2. '(i' → logprob: -1.1452738046646118
    3. 'is' → logprob: -3.0202736854553223
    4. '(' → logprob: -3.7702736854553223
    5. '("' → logprob: -4.520273685455322
    6. '('' → logprob: -5.520273685455322
    7. '()' → logprob: -8.27027416229248
    8. '((' → logprob: -8.77027416229248
    9. '(result' → logprob: -10.02027416229248
    10. 'i' → logprob: -10.14527416229248

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31655868887901306
    2. ')' → logprob: -1.3165587186813354
    3. ' ,' → logprob: -6.691558837890625
    4. ')#' → logprob: -7.191558837890625
    5. ',end' → logprob: -7.566558837890625
    6. '+' → logprob: -8.816558837890625
    7. ' )' → logprob: -8.816558837890625
    8. '#' → logprob: -9.191558837890625
    9. '   ' → logprob: -9.441558837890625
    10. ',S' → logprob: -10.316558837890625

Token 305: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7156370282173157
    2. 'is' → logprob: -0.9656370282173157
    3. '"' → logprob: -2.965636968612671
    4. '#' → logprob: -3.215636968612671
    5. ' #' → logprob: -4.46563720703125
    6. ')' → logprob: -4.84063720703125
    7. '"is' → logprob: -5.21563720703125
    8. ' "' → logprob: -5.34063720703125
    9. ',' → logprob: -6.09063720703125
    10. ''' → logprob: -6.09063720703125

Token 306: 'Dead' (ID: 38857)
  Prédit: 'Dead'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dead' → logprob: -0.013752187602221966
    2. 'i' → logprob: -4.888751983642578
    3. '(i' → logprob: -5.138751983642578
    4. 'is' → logprob: -9.263751983642578
    5. ' Dead' → logprob: -9.638751983642578
    6. ')' → logprob: -10.388751983642578
    7. ' i' → logprob: -10.513751983642578
    8. '[i' → logprob: -11.138751983642578
    9. '(' → logprob: -12.638751983642578
    10. '_dead' → logprob: -12.763751983642578

Token 307: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.480199954239652e-05
    2. ')' → logprob: -10.500064849853516
    3. '(' → logprob: -10.875064849853516
    4. ' (' → logprob: -11.375064849853516
    5. '))' → logprob: -12.375064849853516
    6. ')i' → logprob: -14.125064849853516
    7. 'i' → logprob: -14.375064849853516
    8. ' ' → logprob: -14.750064849853516
    9. ')(' → logprob: -15.125064849853516
    10. '(idx' → logprob: -16.375064849853516

Token 308: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023330148309469223
    2. ')' → logprob: -3.7733302116394043
    3. '))
' → logprob: -10.398329734802246
    4. '),' → logprob: -10.648329734802246
    5. '()))' → logprob: -10.773329734802246
    6. ')))' → logprob: -12.773329734802246
    7. ' ))' → logprob: -13.148329734802246
    8. '#' → logprob: -13.898329734802246
    9. '())' → logprob: -14.148329734802246
    10. '()' → logprob: -14.523329734802246


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 306
Tokens correctement prédits (1ère position, stricte): 115
Tokens correctement prédits (1ère position, avec adaptation): 133
Tokens correctement prédits (top 10): 254
Précision stricte (1ère position): 37.58%
Précision adaptée (1ère position): 43.46%
Précision (top 10): 83.01%
================================================================================
