================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_input():
    return input()

def split_input(inp):
    return inp.split()

def convert_to_int(str_list):
    return list(map(int, str_list))

def assign_variables(int_list):
    return int_list[0], int_list[1]

def compute_difference(a, b):
    return a - (2 * b)

def check_negative(value):
    return value < 0

def print_zero():
    print(0)

def print_value(value):
    print(value)

def main():
    inp = get_input()
    split_inp = split_input(inp)
    int_list = convert_to_int(split_inp)
    a, b = assign_variables(int_list)
    diff = compute_difference(a, b)
    if check_negative(diff):
        print_zero()
    else:
        print_value(diff)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004976270254701376
    2. '():' → logprob: -5.629976272583008
    3. '_' → logprob: -6.879976272583008
    4. '()' → logprob: -8.629976272583008
    5. '```' → logprob: -10.004976272583008
    6. '(:' → logprob: -10.504976272583008
    7. '(_' → logprob: -10.754976272583008
    8. '(_:' → logprob: -10.879976272583008
    9. ' (' → logprob: -11.504976272583008
    10. '("("' → logprob: -12.004976272583008

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.05937580764293671
    2. '():' → logprob: -3.684375762939453
    3. ':' → logprob: -4.559375762939453
    4. '   ' → logprob: -4.684375762939453
    5. '\' → logprob: -5.809375762939453
    6. '\n' → logprob: -5.934375762939453
    7. '``' → logprob: -5.934375762939453
    8. '    
' → logprob: -7.059375762939453
    9. '()' → logprob: -7.934375762939453
    10. '(' → logprob: -7.934375762939453

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.21803174912929535
    2. 'input' → logprob: -2.468031644821167
    3. 'user' → logprob: -3.218031644821167
    4. '   ' → logprob: -3.343031644821167
    5. '```' → logprob: -4.593031883239746
    6. 'x' → logprob: -4.843031883239746
    7. ' ' → logprob: -4.968031883239746
    8. ' return' → logprob: -5.843031883239746
    9. 'text' → logprob: -6.343031883239746
    10. 'i' → logprob: -6.593031883239746

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3835088610649109
    2. ' ' → logprob: -1.3835089206695557
    3. 'input' → logprob: -2.7585089206695557
    4. '"' → logprob: -6.008508682250977
    5. ''' → logprob: -7.133508682250977
    6. ' "' → logprob: -8.008508682250977
    7. '  ' → logprob: -8.258508682250977
    8. ' '' → logprob: -8.508508682250977
    9. ' None' → logprob: -9.133508682250977
    10. '(input' → logprob: -9.258508682250977

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001565449871122837
    2. '('' → logprob: -7.251565456390381
    3. '()' → logprob: -7.626565456390381
    4. ''' → logprob: -9.001564979553223
    5. '("("' → logprob: -9.251564979553223
    6. ' (' → logprob: -10.501564979553223
    7. '```' → logprob: -10.626564979553223
    8. '(
' → logprob: -10.876564979553223
    9. '"' → logprob: -10.876564979553223
    10. ' ' → logprob: -11.626564979553223

Token 8: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26384079456329346
    2. 'def' → logprob: -2.638840675354004
    3. '()' → logprob: -3.513840675354004
    4. '\n' → logprob: -3.763840675354004
    5. '<|end|>' → logprob: -4.013840675354004
    6. '#' → logprob: -4.013840675354004
    7. ')' → logprob: -4.138840675354004
    8. '```' → logprob: -4.388840675354004
    9. '(
' → logprob: -4.638840675354004
    10. '\' → logprob: -5.263840675354004

Token 9: ' split' (ID: 12648)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.6110988855361938
    2. ' calculate' → logprob: -1.4860988855361938
    3. ' process' → logprob: -2.6110987663269043
    4. ' space' → logprob: -2.9860987663269043
    5. ' main' → logprob: -3.8610987663269043
    6. ' user' → logprob: -3.8610987663269043
    7. ' add' → logprob: -4.361098766326904
    8. ' ' → logprob: -4.736098766326904
    9. ' my' → logprob: -4.986098766326904
    10. ' validate' → logprob: -5.111098766326904

Token 10: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015971962362527847
    2. '(' → logprob: -4.265972137451172
    3. '_text' → logprob: -8.140972137451172
    4. '_s' → logprob: -8.390972137451172
    5. '_words' → logprob: -8.640972137451172
    6. '('_' → logprob: -9.015972137451172
    7. '_word' → logprob: -9.140972137451172
    8. ' _' → logprob: -9.390972137451172
    9. '_line' → logprob: -9.515972137451172
    10. '_string' → logprob: -9.640972137451172

Token 11: '(inp' (ID: 141645)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029434893280267715
    2. '_' → logprob: -3.7794349193573
    3. '('_' → logprob: -6.279434680938721
    4. '("("' → logprob: -7.029434680938721
    5. '_text' → logprob: -7.404434680938721
    6. '(_)' → logprob: -7.904434680938721
    7. '("_' → logprob: -8.154435157775879
    8. '```' → logprob: -8.279435157775879
    9. '_line' → logprob: -8.404435157775879
    10. '()' → logprob: -8.654435157775879

Token 12: '):
' (ID: 1883)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.0019483910873532295
    2. '):' → logprob: -7.126948356628418
    3. ')' → logprob: -7.751948356628418
    4. 'u' → logprob: -7.876948356628418
    5. ' ut' → logprob: -9.251948356628418
    6. '):
' → logprob: -9.251948356628418
    7. '_ut' → logprob: -9.376948356628418
    8. '.ut' → logprob: -11.751948356628418
    9. 'uts' → logprob: -12.001948356628418
    10. 'ут' → logprob: -12.001948356628418

Token 13: '   ' (ID: 271)
  Prédit: ' inp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inp' → logprob: -0.11808676272630692
    2. 'inp' → logprob: -2.993086814880371
    3. '   ' → logprob: -3.118086814880371
    4. ' return' → logprob: -4.118086814880371
    5. '(inp' → logprob: -7.993086814880371
    6. 'return' → logprob: -8.618086814880371
    7. ' split' → logprob: -9.493086814880371
    8. '    ' → logprob: -10.743086814880371
    9. ' in' → logprob: -11.118086814880371
    10. ' input' → logprob: -11.243086814880371

Token 14: ' return' (ID: 622)
  Prédit: ' inp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inp' → logprob: -0.26515185832977295
    2. 'inp' → logprob: -1.640151858329773
    3. ' return' → logprob: -3.5151519775390625
    4. '   ' → logprob: -5.3901519775390625
    5. 'return' (adapté à ' return') → logprob: -5.3901519775390625
    6. '(inp' → logprob: -10.390151977539062
    7. '```' → logprob: -11.265151977539062
    8. ' in' → logprob: -11.890151977539062
    9. ' input' → logprob: -12.515151977539062
    10. ' split' → logprob: -12.765151977539062

Token 15: ' inp' (ID: 64450)
  Prédit: ' inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inp' → logprob: -0.0028141476213932037
    2. 'inp' → logprob: -5.877814292907715
    3. '(inp' → logprob: -11.752814292907715
    4. ' in' → logprob: -14.502814292907715
    5. ' ' → logprob: -15.627814292907715
    6. ' ' → logprob: -16.1278133392334
    7. ' input' → logprob: -16.2528133392334
    8. ' ing' → logprob: -16.5028133392334
    9. 'Inp' → logprob: -16.5028133392334
    10. ' inu' → logprob: -16.6278133392334

Token 16: '.split' (ID: 10347)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.47502899169921875
    2. '.split' → logprob: -0.9750289916992188
    3. ' .' → logprob: -7.600028991699219
    4. '.strip' → logprob: -7.725028991699219
    5. 'split' → logprob: -12.850028991699219
    6. '.replace' → logprob: -13.475028991699219
    7. '().' → logprob: -13.600028991699219
    8. '.s' → logprob: -13.850028991699219
    9. '.lower' → logprob: -14.600028991699219
    10. '.Split' → logprob: -14.725028991699219

Token 17: '()

' (ID: 5874)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.1216859295964241
    2. '(' → logprob: -2.2466859817504883
    3. '("("' → logprob: -4.746685981750488
    4. ''' → logprob: -9.996685981750488
    5. '('.')' → logprob: -10.121685981750488
    6. '()' → logprob: -10.246685981750488
    7. '(`' → logprob: -11.871685981750488
    8. '("' → logprob: -12.371685981750488
    9. '(',' → logprob: -12.621685981750488
    10. '(('' → logprob: -13.246685981750488

Token 18: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021851040422916412
    2. 'd' → logprob: -3.896851062774658
    3. '\' → logprob: -7.771851062774658
    4. '#' → logprob: -8.2718505859375
    5. '```' → logprob: -8.6468505859375
    6. '[' → logprob: -9.0218505859375
    7. 'de' → logprob: -9.3968505859375
    8. '<|end|>' → logprob: -10.0218505859375
    9. '(' → logprob: -10.6468505859375
    10. '_' → logprob: -11.0218505859375

Token 19: ' convert' (ID: 8452)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1790735125541687
    2. ' join' → logprob: -2.5540735721588135
    3. 'main' → logprob: -3.3040735721588135
    4. ' process' → logprob: -3.9290735721588135
    5. 'join' → logprob: -4.554073333740234
    6. ' get' → logprob: -5.304073333740234
    7. 'process' → logprob: -5.429073333740234
    8. ' is' → logprob: -6.679073333740234
    9. ' calculate' → logprob: -6.929073333740234
    10. ' parse' → logprob: -7.429073333740234

Token 20: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.3209317624568939
    2. '_' → logprob: -1.3209317922592163
    3. '_token' → logprob: -5.695931911468506
    4. '_tokens' → logprob: -6.570931911468506
    5. '_input' → logprob: -7.445931911468506
    6. '(' → logprob: -7.445931911468506
    7. '_value' → logprob: -8.195931434631348
    8. '(_' → logprob: -8.570931434631348
    9. '_string' → logprob: -8.570931434631348
    10. '_str' → logprob: -8.695931434631348

Token 21: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0011171156074851751
    2. 'int' → logprob: -7.00111722946167
    3. '_' → logprob: -9.001116752624512
    4. '_float' → logprob: -10.876116752624512
    5. '_integer' → logprob: -11.126116752624512
    6. '_tokens' → logprob: -11.251116752624512
    7. '_in' → logprob: -11.876116752624512
    8. '_string' → logprob: -12.126116752624512
    9. '_number' → logprob: -12.251116752624512
    10. '_list' → logprob: -12.501116752624512

Token 22: '(str' (ID: 7946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08847345411777496
    2. 's' → logprob: -2.5884735584259033
    3. '(s' → logprob: -4.713473320007324
    4. ' (' → logprob: -8.838473320007324
    5. '(token' → logprob: -8.963473320007324
    6. '("("' → logprob: -8.963473320007324
    7. '(x' → logprob: -11.213473320007324
    8. '(n' → logprob: -11.213473320007324
    9. '_' → logprob: -11.338473320007324
    10. '(tokens' → logprob: -11.463473320007324

Token 23: '_list' (ID: 4162)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.5581914782524109
    2. ')' → logprob: -1.5581915378570557
    3. 's' → logprob: -1.5581915378570557
    4. 'ings' → logprob: -6.558191299438477
    5. ')s' → logprob: -6.558191299438477
    6. '):' → logprob: -7.058191299438477
    7. '(s' → logprob: -7.308191299438477
    8. '_ing' → logprob: -7.558191299438477
    9. '_val' → logprob: -7.808191299438477
    10. '_)' → logprob: -8.183191299438477

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004341579508036375
    2. ')' → logprob: -5.5043416023254395
    3. '):
' → logprob: -9.004341125488281
    4. ' ):' → logprob: -10.129341125488281
    5. '[]):' → logprob: -10.504341125488281
    6. ',' → logprob: -11.129341125488281
    7. 's' → logprob: -11.379341125488281
    8. '[' → logprob: -11.504341125488281
    9. '(' → logprob: -11.504341125488281
    10. '):

' → logprob: -12.004341125488281

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09718898683786392
    2. '[int' → logprob: -2.597188949584961
    3. '[' → logprob: -4.597188949584961
    4. ' return' → logprob: -5.222188949584961
    5. 'return' → logprob: -6.347188949584961
    6. 'int' → logprob: -8.222188949584961
    7. ' [' → logprob: -8.347188949584961
    8. '[i' → logprob: -8.722188949584961
    9. '[
' → logprob: -10.097188949584961
    10. '[str' → logprob: -10.222188949584961

Token 26: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8782950639724731
    2. '   ' → logprob: -1.1282950639724731
    3. 'return' (adapté à ' return') → logprob: -1.5032950639724731
    4. '[int' → logprob: -3.5032949447631836
    5. '[' → logprob: -4.878294944763184
    6. ' [' → logprob: -7.628294944763184
    7. '[
' → logprob: -8.753294944763184
    8. '[str' → logprob: -10.003294944763184
    9. '[i' → logprob: -10.253294944763184
    10. ' ' → logprob: -11.003294944763184

Token 27: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.01277921162545681
    2. ' list' → logprob: -4.512779235839844
    3. '[' → logprob: -6.887779235839844
    4. '[list' → logprob: -7.387779235839844
    5. '[int' → logprob: -9.637779235839844
    6. 'list' → logprob: -10.887779235839844
    7. '[List' → logprob: -12.512779235839844
    8. ' ' → logprob: -13.762779235839844
    9. ' ' → logprob: -14.512779235839844
    10. '   ' → logprob: -14.762779235839844

Token 28: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.3869889974594116
    2. '(' → logprob: -1.1369889974594116
    3. '(int' → logprob: -10.386988639831543
    4. '(
' → logprob: -10.636988639831543
    5. '_map' → logprob: -10.886988639831543
    6. '(str' → logprob: -11.011988639831543
    7. 'map' → logprob: -11.636988639831543
    8. ' map' → logprob: -12.136988639831543
    9. '(

' → logprob: -12.636988639831543
    10. '.map' → logprob: -13.011988639831543

Token 29: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001760744140483439
    2. ' int' → logprob: -7.126760959625244
    3. 'int' → logprob: -7.626760959625244
    4. '(' → logprob: -8.126760482788086
    5. '   ' → logprob: -9.376760482788086
    6. ',int' → logprob: -10.126760482788086
    7. ')' → logprob: -11.001760482788086
    8. ' (' → logprob: -11.626760482788086
    9. '=int' → logprob: -11.626760482788086
    10. '<int' → logprob: -12.001760482788086

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015332124195992947
    2. ',str' → logprob: -4.640332221984863
    3. '(str' → logprob: -5.765332221984863
    4. ' ,' → logprob: -6.265332221984863
    5. '(' → logprob: -7.765332221984863
    6. ' (' → logprob: -10.640332221984863
    7. ')' → logprob: -10.890332221984863
    8. ' ' → logprob: -10.890332221984863
    9. '))' → logprob: -11.515332221984863
    10. ' str' → logprob: -11.765332221984863

Token 31: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.12693335115909576
    2. ' str' → logprob: -2.1269333362579346
    3. '(str' → logprob: -13.501933097839355
    4. '   ' → logprob: -13.501933097839355
    5. ' ' → logprob: -14.001933097839355
    6. '	str' → logprob: -14.376933097839355
    7. ')' → logprob: -14.751933097839355
    8. ',str' → logprob: -15.876933097839355
    9. '))' → logprob: -16.001934051513672
    10. '_str' → logprob: -16.251934051513672

Token 32: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.12500286102295
    3. ')_' → logprob: -14.62500286102295
    4. '_l' → logprob: -16.000001907348633
    5. '_lst' → logprob: -16.375001907348633
    6. ')' → logprob: -16.875001907348633
    7. ' _' → logprob: -17.750001907348633
    8. '_li' → logprob: -17.750001907348633
    9. '_)' → logprob: -18.000001907348633
    10. '_lists' → logprob: -18.125001907348633

Token 33: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.1637164789135568e-05
    2. ')))' → logprob: -12.125011444091797
    3. ')' → logprob: -12.500011444091797
    4. '))
' → logprob: -13.625011444091797
    5. ' ))' → logprob: -13.875011444091797
    6. '   ' → logprob: -16.000011444091797
    7. ' ' → logprob: -16.250011444091797
    8. '()))' → logprob: -16.625011444091797
    9. '));' → logprob: -17.875011444091797
    10. '))

' → logprob: -18.750011444091797

Token 34: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.537868779967539e-06
    2. 'if' → logprob: -12.750008583068848
    3. '```' → logprob: -13.125008583068848
    4. '#' → logprob: -13.875008583068848
    5. 'print' → logprob: -14.000008583068848
    6. '<|end|>' → logprob: -14.625008583068848
    7. '<|end|>' → logprob: -14.875008583068848
    8. ' def' → logprob: -15.500008583068848
    9. 'data' → logprob: -15.625008583068848
    10. 'for' → logprob: -15.875008583068848

Token 35: ' assign' (ID: 14975)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.008691268973052502
    2. ' calculate' → logprob: -6.008691310882568
    3. ' process' → logprob: -6.383691310882568
    4. ' sum' → logprob: -6.758691310882568
    5. ' find' → logprob: -6.883691310882568
    6. ' solve' → logprob: -7.008691310882568
    7. 'main' → logprob: -7.258691310882568
    8. ' compute' → logprob: -8.75869083404541
    9. ' count' → logprob: -8.88369083404541
    10. ' factorial' → logprob: -9.13369083404541

Token 36: '_variables' (ID: 69364)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.1649097055196762
    2. '_variables' → logprob: -2.039909601211548
    3. '_' → logprob: -4.539909839630127
    4. '_names' → logprob: -6.289909839630127
    5. '_vars' → logprob: -6.539909839630127
    6. '_to' → logprob: -7.164909839630127
    7. '_ids' → logprob: -7.289909839630127
    8. '_parameters' → logprob: -7.289909839630127
    9. '_tokens' → logprob: -7.664909839630127
    10. '_inputs' → logprob: -7.789909839630127

Token 37: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25630316138267517
    2. '(str' → logprob: -2.881303071975708
    3. '(*' → logprob: -3.256303071975708
    4. '(args' → logprob: -3.506303071975708
    5. ' (' → logprob: -4.006303310394287
    6. '():' → logprob: -4.256303310394287
    7. '(names' → logprob: -4.631303310394287
    8. '(lst' → logprob: -4.631303310394287
    9. '(line' → logprob: -4.756303310394287
    10. '(input' → logprob: -4.881303310394287

Token 38: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.3613485097885132
    2. 's' → logprob: -1.2363485097885132
    3. '_values' → logprob: -4.611348628997803
    4. '_s' → logprob: -6.611348628997803
    5. '_lists' → logprob: -7.611348628997803
    6. '_variables' → logprob: -8.986348152160645
    7. ')_' → logprob: -9.111348152160645
    8. '_array' → logprob: -9.111348152160645
    9. '_' → logprob: -9.111348152160645
    10. '_lst' → logprob: -9.361348152160645

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00033045929740183055
    2. ' ):' → logprob: -8.625330924987793
    3. ')' → logprob: -9.125330924987793
    4. '):
' → logprob: -10.625330924987793
    5. ',' → logprob: -11.250330924987793
    6. '   ' → logprob: -12.875330924987793
    7. ':' → logprob: -14.250330924987793
    8. ' )' → logprob: -15.250330924987793
    9. ')):' → logprob: -15.250330924987793
    10. '    ' → logprob: -16.125329971313477

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2021906077861786
    2. 'a' → logprob: -1.827190637588501
    3. ' a' → logprob: -3.827190637588501
    4. 'x' → logprob: -8.827190399169922
    5. ' return' → logprob: -9.452190399169922
    6. 'return' → logprob: -9.577190399169922
    7. '[a' → logprob: -10.702190399169922
    8. ' ' → logprob: -11.077190399169922
    9. ' x' → logprob: -11.077190399169922
    10. '(a' → logprob: -11.202190399169922

Token 41: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.37106719613075256
    2. '   ' → logprob: -1.6210671663284302
    3. ' a' → logprob: -2.2460672855377197
    4. ' return' → logprob: -6.496067047119141
    5. 'return' (adapté à ' return') → logprob: -6.746067047119141
    6. 'x' → logprob: -6.871067047119141
    7. ' if' → logprob: -7.246067047119141
    8. 'if' → logprob: -7.621067047119141
    9. 'n' → logprob: -7.746067047119141
    10. ' x' → logprob: -7.746067047119141

Token 42: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6980538964271545
    2. ' int' → logprob: -0.6980538964271545
    3. 'tuple' → logprob: -6.19805383682251
    4. '(int' → logprob: -6.69805383682251
    5. ' tuple' → logprob: -6.69805383682251
    6. '   ' → logprob: -8.698054313659668
    7. 'a' → logprob: -9.573054313659668
    8. ' a' → logprob: -10.073054313659668
    9. '[int' → logprob: -10.573054313659668
    10. '*' → logprob: -10.698054313659668

Token 43: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0007499480270780623
    2. 's' → logprob: -7.2507500648498535
    3. '_' → logprob: -10.875749588012695
    4. '_tuple' → logprob: -11.625749588012695
    5. 'list' → logprob: -12.375749588012695
    6. '_lists' → logprob: -13.500749588012695
    7. 'List' → logprob: -14.000749588012695
    8. '(_' → logprob: -14.250749588012695
    9. '64' → logprob: -14.250749588012695
    10. '32' → logprob: -15.125749588012695

Token 44: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008713257499039173
    2. ':' → logprob: -4.758713245391846
    3. ':]' → logprob: -9.758713722229004
    4. ' ' → logprob: -10.758713722229004
    5. ' :' → logprob: -11.508713722229004
    6. ']' → logprob: -12.258713722229004
    7. '3' → logprob: -12.758713722229004
    8. '4' → logprob: -14.383713722229004
    9. '2' → logprob: -14.633713722229004
    10. '1' → logprob: -16.008712768554688

Token 46: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.6653664708137512
    2. ']' → logprob: -0.7903664708137512
    3. ' ]' → logprob: -4.1653666496276855
    4. ' ],' → logprob: -4.2903666496276855
    5. ',' → logprob: -6.1653666496276855
    6. '],
' → logprob: -7.2903666496276855
    7. ' ,' → logprob: -9.665366172790527
    8. '),' → logprob: -10.165366172790527
    9. ')' → logprob: -10.415366172790527
    10. ' ],
' → logprob: -10.415366172790527

Token 47: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.043001141399145126
    2. 'int' → logprob: -3.168001174926758
    3. ' ' → logprob: -14.418001174926758
    4. ' ' → logprob: -15.293001174926758
    5. '(int' → logprob: -15.418001174926758
    6. '[int' → logprob: -15.543001174926758
    7. '    ' → logprob: -15.793001174926758
    8. '<int' → logprob: -15.793001174926758
    9. ':int' → logprob: -15.918001174926758
    10. ',int' → logprob: -16.418001174926758

Token 48: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.512236498361744e-07
    2. 'List' → logprob: -15.375000953674316
    3. 'list' → logprob: -16.0
    4. '_' → logprob: -16.0
    5. '_lst' → logprob: -17.5
    6. '[' → logprob: -18.0
    7. '_lists' → logprob: -18.0
    8. 'ist' → logprob: -18.25
    9. ' _' → logprob: -18.25
    10. '_LIST' → logprob: -18.375

Token 49: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08294253796339035
    2. '1' → logprob: -2.582942485809326
    3. '<|end|>' → logprob: -6.082942485809326
    4. '0' → logprob: -7.332942485809326
    5. '```' → logprob: -7.957942485809326
    6. '[:]' → logprob: -8.207942962646484
    7. '2' → logprob: -9.082942962646484
    8. ' ' → logprob: -9.832942962646484
    9. '<|end|>' → logprob: -10.332942962646484
    10. '   ' → logprob: -10.332942962646484

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6941264867782593
    2. '2' → logprob: -0.6941264867782593
    3. '0' → logprob: -7.319126605987549
    4. '3' → logprob: -8.44412612915039
    5. '4' → logprob: -9.94412612915039
    6. '])' → logprob: -10.69412612915039
    7. '-' → logprob: -11.06912612915039
    8. ']' → logprob: -12.19412612915039
    9. ':' → logprob: -13.06912612915039
    10. '5' → logprob: -13.06912612915039

Token 51: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008375041070394218
    2. ')' → logprob: -7.375837326049805
    3. ' ]' → logprob: -8.875837326049805
    4. '],' → logprob: -10.000837326049805
    5. ')]' → logprob: -11.750837326049805
    6. ':]' → logprob: -11.875837326049805
    7. '<|end|>' → logprob: -13.000837326049805
    8. '}' → logprob: -13.125837326049805
    9. ',' → logprob: -13.625837326049805
    10. '])' → logprob: -13.750837326049805

Token 52: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0035609889309853315
    2. '

' → logprob: -6.628561019897461
    3. '```' → logprob: -7.128561019897461
    4. '
' → logprob: -7.253561019897461
    5. '<|end|>' → logprob: -8.003561019897461
    6. '<|end|>' → logprob: -8.253561019897461
    7. '\' → logprob: -10.253561019897461
    8. '``' → logprob: -10.503561019897461
    9. '#' → logprob: -10.753561019897461
    10. '\n' → logprob: -11.753561019897461

Token 53: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.05681263655424118
    2. 'main' → logprob: -3.8068125247955322
    3. ' calculate' → logprob: -3.9318125247955322
    4. 'calculate' → logprob: -5.681812763214111
    5. ' solve' → logprob: -5.931812763214111
    6. ' compute' → logprob: -6.181812763214111
    7. ' process' → logprob: -6.556812763214111
    8. ' sum' → logprob: -6.931812763214111
    9. ' add' → logprob: -7.181812763214111
    10. 'solve' → logprob: -8.056812286376953

Token 54: '_difference' (ID: 123771)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.07564026862382889
    2. '_' → logprob: -3.9506402015686035
    3. '_area' → logprob: -4.3256402015686035
    4. '(' → logprob: -4.3256402015686035
    5. '(a' → logprob: -4.8256402015686035
    6. '_difference' → logprob: -5.5756402015686035
    7. '_result' → logprob: -5.8256402015686035
    8. '_factor' → logprob: -6.3256402015686035
    9. '_product' → logprob: -6.4506402015686035
    10. '_total' → logprob: -6.9506402015686035

Token 55: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.02724793180823326
    2. '(' → logprob: -4.527247905731201
    3. '(x' → logprob: -4.902247905731201
    4. '(first' → logprob: -5.402247905731201
    5. '(n' → logprob: -6.527247905731201
    6. '(A' → logprob: -7.027247905731201
    7. '(num' → logprob: -7.902247905731201
    8. '(var' → logprob: -8.02724838256836
    9. '(u' → logprob: -9.15224838256836
    10. '(t' → logprob: -9.15224838256836

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011816580081358552
    2. ',b' → logprob: -7.001181602478027
    3. ' ,' → logprob: -8.251181602478027
    4. '-' → logprob: -12.251181602478027
    5. ')' → logprob: -13.126181602478027
    6. ',a' → logprob: -13.751181602478027
    7. '-,' → logprob: -15.001181602478027
    8. ',)' → logprob: -15.126181602478027
    9. ',
' → logprob: -15.626181602478027
    10. '_,' → logprob: -16.001182556152344

Token 57: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25192973017692566
    2. ' b' → logprob: -1.501929759979248
    3. ' ' → logprob: -15.37692928314209
    4. '<|end|>' → logprob: -15.37692928314209
    5. '   ' → logprob: -17.126930236816406
    6. '    ' → logprob: -17.126930236816406
    7. '```' → logprob: -17.251930236816406
    8. ' ' → logprob: -17.251930236816406
    9. ')b' → logprob: -17.626930236816406
    10. '>b' → logprob: -17.751930236816406

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -5.371605948312208e-05
    2. '):
' → logprob: -10.375053405761719
    3. ')' → logprob: -11.125053405761719
    4. ':' → logprob: -12.125053405761719
    5. ' ):' → logprob: -13.250053405761719
    6. ',' → logprob: -15.875053405761719
    7. '=' → logprob: -16.25005340576172
    8. '   ' → logprob: -16.37505340576172
    9. '):
' → logprob: -16.50005340576172
    10. '():' → logprob: -17.12505340576172

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04418560117483139
    2. ' return' → logprob: -3.6691856384277344
    3. 'return' → logprob: -4.044185638427734
    4. '```' → logprob: -8.544185638427734
    5. '    ' → logprob: -13.419185638427734
    6. '`' → logprob: -13.919185638427734
    7. '	return' → logprob: -13.919185638427734
    8. 'a' → logprob: -14.044185638427734
    9. 'b' → logprob: -14.169185638427734
    10. '``' → logprob: -14.419185638427734

Token 60: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03867602348327637
    2. '   ' → logprob: -3.5386760234832764
    3. ' return' → logprob: -4.9136762619018555
    4. 'abs' → logprob: -6.9136762619018555
    5. 'a' → logprob: -8.038676261901855
    6. 'b' → logprob: -9.163676261901855
    7. 'if' → logprob: -9.788676261901855
    8. '```' → logprob: -10.788676261901855
    9. ' abs' → logprob: -11.163676261901855
    10. 'max' → logprob: -12.288676261901855

Token 61: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3458130359649658
    2. 'b' → logprob: -1.4708130359649658
    3. 'abs' → logprob: -3.595813035964966
    4. ' a' → logprob: -4.220812797546387
    5. ' b' → logprob: -4.470812797546387
    6. ' abs' → logprob: -4.720812797546387
    7. 'max' → logprob: -10.220812797546387
    8. ' ' → logprob: -10.345812797546387
    9. ' max' → logprob: -11.095812797546387
    10. '   ' → logprob: -11.283312797546387

Token 62: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009784307330846786
    2. ' -' → logprob: -4.63478422164917
    3. '-b' → logprob: -10.509784698486328
    4. '+' → logprob: -14.759784698486328
    5. '_' → logprob: -15.259784698486328
    6. ' ' → logprob: -15.259784698486328
    7. 'b' → logprob: -16.009784698486328
    8. ',' → logprob: -17.884784698486328
    9. '>' → logprob: -17.884784698486328
    10. '*' → logprob: -18.134784698486328

Token 63: ' (' (ID: 350)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002185472520068288
    2. ' b' → logprob: -6.127185344696045
    3. '1' → logprob: -15.752185821533203
    4. ' ' → logprob: -16.377185821533203
    5. '>b' → logprob: -16.752185821533203
    6. '2' → logprob: -17.377185821533203
    7. '<|end|>' → logprob: -17.627185821533203
    8. '	b' → logprob: -18.002185821533203
    9. '   ' → logprob: -18.502185821533203
    10. '_b' → logprob: -18.627185821533203

Token 64: '2' (ID: 17)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0026729225646704435
    2. ' b' → logprob: -6.002673149108887
    3. '2' → logprob: -9.502673149108887
    4. '3' → logprob: -10.752673149108887
    5. '   ' → logprob: -11.377673149108887
    6. '4' → logprob: -11.502673149108887
    7. '1' → logprob: -11.627673149108887
    8. '5' → logprob: -11.752673149108887
    9. ' ' → logprob: -11.752673149108887
    10. '(b' → logprob: -11.877673149108887

Token 65: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11461741477251053
    2. '*b' → logprob: -2.614617347717285
    3. '*' → logprob: -3.364617347717285
    4. ' ' → logprob: -8.364617347717285
    5. 'b' → logprob: -8.489617347717285
    6. ' b' → logprob: -9.864617347717285
    7. ' ' → logprob: -11.239617347717285
    8. '0' → logprob: -12.489617347717285
    9. ' **' → logprob: -13.114617347717285
    10. '1' → logprob: -13.239617347717285

Token 66: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0619712732732296
    2. ' b' → logprob: -2.8119711875915527
    3. ' ' → logprob: -13.561971664428711
    4. ')b' → logprob: -13.561971664428711
    5. 'a' → logprob: -15.686971664428711
    6. '*b' → logprob: -15.811971664428711
    7. ')' → logprob: -15.936971664428711
    8. '	b' → logprob: -16.18697166442871
    9. ' ' → logprob: -16.31197166442871
    10. ' a' → logprob: -17.18697166442871

Token 67: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.3458322731312364e-06
    2. ' )' → logprob: -12.000007629394531
    3. ')
' → logprob: -14.375007629394531
    4. '*' → logprob: -15.375007629394531
    5. '+' → logprob: -16.25000762939453
    6. '}' → logprob: -17.25000762939453
    7. '))' → logprob: -17.50000762939453
    8. '**' → logprob: -17.62500762939453
    9. '),' → logprob: -17.75000762939453
    10. ');' → logprob: -18.25000762939453

Token 68: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011675085872411728
    2. '
' → logprob: -5.011674880981445
    3. '```' → logprob: -6.261674880981445
    4. '\' → logprob: -7.011674880981445
    5. '<|end|>' → logprob: -7.011674880981445
    6. '\n' → logprob: -7.386674880981445
    7. '

' → logprob: -8.511674880981445
    8. 'print' → logprob: -9.136674880981445
    9. 'if' → logprob: -9.511674880981445
    10. '<|end|>' → logprob: -9.761674880981445

Token 69: ' check' (ID: 2371)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.11656694859266281
    2. 'main' → logprob: -2.4915668964385986
    3. ' get' → logprob: -4.741567134857178
    4. 'get' → logprob: -4.991567134857178
    5. ' compute' → logprob: -5.116567134857178
    6. 'compute' → logprob: -5.991567134857178
    7. 'def' → logprob: -6.741567134857178
    8. ' calculate' → logprob: -8.24156665802002
    9. 'print' → logprob: -8.24156665802002
    10. 'calculate' → logprob: -8.36656665802002

Token 70: '_negative' (ID: 134489)
  Prédit: '_difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.024600647389888763
    2. '_' → logprob: -4.774600505828857
    3. '(' → logprob: -5.024600505828857
    4. '_result' → logprob: -5.524600505828857
    5. ' (' → logprob: -6.899600505828857
    6. '_condition' → logprob: -7.399600505828857
    7. '_if' → logprob: -7.649600505828857
    8. '_value' → logprob: -7.774600505828857
    9. 'difference' → logprob: -7.774600505828857
    10. '_diff' → logprob: -7.774600505828857

Token 71: '(value' (ID: 6333)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012103884480893612
    2. '(a' → logprob: -5.387104034423828
    3. '(value' → logprob: -5.637104034423828
    4. '(d' → logprob: -6.137104034423828
    5. '(_' → logprob: -8.387104034423828
    6. '_(' → logprob: -8.387104034423828
    7. '(n' → logprob: -8.637104034423828
    8. ' (' → logprob: -8.762104034423828
    9. '(diff' → logprob: -8.887104034423828
    10. '(num' → logprob: -9.012104034423828

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023753521963953972
    2. ' ):' → logprob: -3.7737534046173096
    3. ')' → logprob: -7.898753643035889
    4. '):
' → logprob: -9.64875316619873
    5. ' )' → logprob: -9.89875316619873
    6. ':' → logprob: -11.89875316619873
    7. ' ):
' → logprob: -13.02375316619873
    8. '   ' → logprob: -13.39875316619873
    9. '>=' → logprob: -13.64875316619873
    10. ' >=' → logprob: -13.64875316619873

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013189997524023056
    2. ' return' → logprob: -4.388189792633057
    3. ' if' → logprob: -7.638189792633057
    4. 'return' → logprob: -8.763190269470215
    5. 'if' → logprob: -10.388190269470215
    6. '	return' → logprob: -12.013190269470215
    7. '```' → logprob: -12.888190269470215
    8. '   ' → logprob: -14.138190269470215
    9. ' ' → logprob: -14.513190269470215
    10. '    ' → logprob: -14.638190269470215

Token 74: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5128995180130005
    2. ' return' → logprob: -1.0128995180130005
    3. 'if' → logprob: -4.012899398803711
    4. '   ' → logprob: -4.137899398803711
    5. ' if' → logprob: -5.512899398803711
    6. ' ' → logprob: -12.512899398803711
    7. '	return' → logprob: -13.512899398803711
    8. '```' → logprob: -14.262899398803711
    9. '  ' → logprob: -14.512899398803711
    10. '    ' → logprob: -14.637899398803711

Token 75: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.16027092933654785
    2. 'value' → logprob: -1.9102709293365479
    3. '(value' → logprob: -10.785270690917969
    4. '<' → logprob: -11.785270690917969
    5. ' ' → logprob: -11.785270690917969
    6. '"value' → logprob: -13.160270690917969
    7. '	value' → logprob: -13.660270690917969
    8. ' ' → logprob: -13.910270690917969
    9. '0' → logprob: -14.035270690917969
    10. 'Value' → logprob: -14.035270690917969

Token 76: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.17996591329574585
    2. ' <' → logprob: -1.8049659729003906
    3. '>=' → logprob: -9.05496597290039
    4. ' >=' → logprob: -10.17996597290039
    5. ' ' → logprob: -10.42996597290039
    6. '0' → logprob: -11.67996597290039
    7. '()<' → logprob: -11.80496597290039
    8. '[' → logprob: -12.05496597290039
    9. '1' → logprob: -12.67996597290039
    10. '>' → logprob: -13.30496597290039

Token 77: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011057018302381039
    2. ' ' → logprob: -4.511056900024414
    3. '1' → logprob: -12.261056900024414
    4. '=' → logprob: -12.761056900024414
    5. '```' → logprob: -15.011056900024414
    6. ' ' → logprob: -15.573556900024414
    7. '   ' → logprob: -16.073556900024414
    8. '۰' → logprob: -16.136056900024414
    9. 'zero' → logprob: -16.136056900024414
    10. '<' → logprob: -16.636056900024414

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010068230039905757
    2. ' ' → logprob: -9.250101089477539
    3. '=' → logprob: -12.625101089477539
    4. '1' → logprob: -14.000101089477539
    5. '```' → logprob: -16.00010108947754
    6. 'zero' → logprob: -16.62510108947754
    7. '   ' → logprob: -17.25010108947754
    8. '۰' → logprob: -17.56260108947754
    9. '00' → logprob: -18.43760108947754
    10. ' =' → logprob: -18.50010108947754

Token 79: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.49152132868766785
    2. '
' → logprob: -1.2415213584899902
    3. '<|end|>' → logprob: -2.6165213584899902
    4. '

' → logprob: -4.74152135848999
    5. '\n' → logprob: -5.24152135848999
    6. '```' → logprob: -5.49152135848999
    7. '#' → logprob: -5.86652135848999
    8. '\' → logprob: -6.11652135848999
    9. '<|end|>' → logprob: -6.86652135848999
    10. 'newline' → logprob: -7.49152135848999

Token 80: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3475569784641266
    2. '#' → logprob: -1.7225569486618042
    3. 'n' → logprob: -3.4725570678710938
    4. 'a' → logprob: -3.7225570678710938
    5. '```' → logprob: -3.8475570678710938
    6. '\' → logprob: -4.472557067871094
    7. '\n' → logprob: -4.722557067871094
    8. 'd' → logprob: -5.347557067871094
    9. '
' → logprob: -5.972557067871094
    10. '<|end|>' → logprob: -6.097557067871094

Token 81: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.002182499971240759
    2. 'main' → logprob: -6.252182483673096
    3. ' check' → logprob: -9.752182960510254
    4. ' is' → logprob: -10.002182960510254
    5. ' process' → logprob: -10.002182960510254
    6. ' calculate' → logprob: -10.502182960510254
    7. ' solve' → logprob: -10.877182960510254
    8. ' compute' → logprob: -11.127182960510254
    9. ' run' → logprob: -12.002182960510254
    10. ' print' → logprob: -12.127182960510254

Token 82: '_zero' (ID: 53468)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033510818611830473
    2. '_result' → logprob: -6.628351211547852
    3. '()' → logprob: -7.378351211547852
    4. '_' → logprob: -7.753351211547852
    5. '("")' → logprob: -8.628351211547852
    6. '("' → logprob: -8.753351211547852
    7. '('' → logprob: -9.128351211547852
    8. '("("' → logprob: -9.378351211547852
    9. 'result' → logprob: -9.628351211547852
    10. '_output' → logprob: -10.003351211547852

Token 83: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006818377412855625
    2. '():' → logprob: -5.0068182945251465
    3. '_' → logprob: -10.631818771362305
    4. '`()' → logprob: -11.131818771362305
    5. '()
' → logprob: -11.256818771362305
    6. ' ()' → logprob: -11.381818771362305
    7. '()

' → logprob: -11.756818771362305
    8. '()`' → logprob: -12.631818771362305
    9. '():
' → logprob: -12.631818771362305
    10. '(' → logprob: -12.631818771362305

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.779520092299208e-05
    2. ' print' → logprob: -9.875078201293945
    3. 'print' → logprob: -11.125078201293945
    4. '   ' → logprob: -11.625078201293945
    5. '    ' → logprob: -13.875078201293945
    6. '    
' → logprob: -14.500078201293945
    7. '```' → logprob: -15.250078201293945
    8. '(' → logprob: -15.500078201293945
    9. '       ' → logprob: -15.750078201293945
    10. '   ' → logprob: -15.875078201293945

Token 85: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.23028884828090668
    2. '   ' → logprob: -2.1052887439727783
    3. ' print' → logprob: -2.4802887439727783
    4. 'pr' → logprob: -9.9802885055542
    5. 'pass' → logprob: -9.9802885055542
    6. '    ' → logprob: -11.1052885055542
    7. ' pass' → logprob: -11.2302885055542
    8. 'return' → logprob: -11.3552885055542
    9. 'prin' → logprob: -11.6052885055542
    10. '```' → logprob: -11.9802885055542

Token 86: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01588396728038788
    2. '()' → logprob: -4.265883922576904
    3. '0' → logprob: -6.390883922576904
    4. '('' → logprob: -10.765884399414062
    5. ' (' → logprob: -11.390884399414062
    6. '("' → logprob: -12.140884399414062
    7. '()(' → logprob: -13.515884399414062
    8. ' ()' → logprob: -14.265884399414062
    9. '((' → logprob: -14.765884399414062
    10. '(
' → logprob: -14.765884399414062

Token 87: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002087853499688208
    2. '"' → logprob: -8.625208854675293
    3. ''' → logprob: -11.000208854675293
    4. ' ' → logprob: -12.000208854675293
    5. ')' → logprob: -12.375208854675293
    6. '(' → logprob: -13.750208854675293
    7. '   ' → logprob: -15.125208854675293
    8. '`' → logprob: -15.250208854675293
    9. '")' → logprob: -15.625208854675293
    10. '00' → logprob: -16.687707901000977

Token 88: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -15.625000953674316
    4. '))' → logprob: -18.625
    5. ')

' → logprob: -18.625
    6. '()' → logprob: -18.875
    7. ')`' → logprob: -19.25
    8. '')' → logprob: -19.875
    9. '}' → logprob: -20.125
    10. '`)' → logprob: -20.25

Token 89: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.65707261255011e-06
    2. '<|end|>' → logprob: -12.125008583068848
    3. '```' → logprob: -13.625008583068848
    4. ' def' → logprob: -14.250008583068848
    5. '
' → logprob: -14.750008583068848
    6. '<|end|>' → logprob: -15.375008583068848
    7. '\' → logprob: -15.375008583068848
    8. 'ndef' → logprob: -16.125009536743164
    9. '#' → logprob: -16.375009536743164
    10. '

' → logprob: -17.250009536743164

Token 90: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.9098233580589294
    2. 'print' → logprob: -1.2848234176635742
    3. ' main' → logprob: -1.2848234176635742
    4. 'main' → logprob: -3.409823417663574
    5. ' check' → logprob: -5.784823417663574
    6. ' def' → logprob: -6.034823417663574
    7. 'def' → logprob: -6.659823417663574
    8. 'check' → logprob: -7.284823417663574
    9. '_main' → logprob: -7.409823417663574
    10. ' run' → logprob: -7.534823417663574

Token 91: '_value' (ID: 6734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0217836145311594
    2. '(-' → logprob: -4.271783828735352
    3. '1' → logprob: -5.271783828735352
    4. '(value' → logprob: -6.146783828735352
    5. '()' → logprob: -9.146783828735352
    6. '-' → logprob: -10.021783828735352
    7. 'value' → logprob: -10.521783828735352
    8. '(abs' → logprob: -10.521783828735352
    9. '("")' → logprob: -11.146783828735352
    10. ' (' → logprob: -11.146783828735352

Token 92: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.268728643655777
    2. '():' → logprob: -1.5187286138534546
    3. '(' → logprob: -4.643728733062744
    4. '()' → logprob: -5.018728733062744
    5. '(result' → logprob: -9.018728256225586
    6. '(a' → logprob: -9.518728256225586
    7. '(x' → logprob: -9.893728256225586
    8. '(v' → logprob: -10.018728256225586
    9. '():
' → logprob: -10.393728256225586
    10. '(s' → logprob: -11.393728256225586

Token 93: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028884445782750845
    2. ')' → logprob: -5.8778886795043945
    3. '):
' → logprob: -9.502888679504395
    4. ':' → logprob: -12.377888679504395
    5. ' ):' → logprob: -12.377888679504395
    6. '   ' → logprob: -15.752888679504395
    7. '():' → logprob: -15.877888679504395
    8. '):

' → logprob: -16.877887725830078
    9. ' )' → logprob: -17.002887725830078
    10. '):
' → logprob: -17.252887725830078

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01017132680863142
    2. ' print' → logprob: -4.635171413421631
    3. 'print' → logprob: -7.885171413421631
    4. '(' → logprob: -10.510170936584473
    5. '(print' → logprob: -12.135170936584473
    6. '    ' → logprob: -13.385170936584473
    7. '	print' → logprob: -14.135170936584473
    8. ' ' → logprob: -14.260170936584473
    9. '  ' → logprob: -14.260170936584473
    10. '       ' → logprob: -14.385170936584473

Token 95: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.014237436465919018
    2. ' print' → logprob: -4.264237403869629
    3. '   ' → logprob: -9.514237403869629
    4. 'pr' → logprob: -16.639238357543945
    5. '	print' → logprob: -17.139238357543945
    6. '  ' → logprob: -18.139238357543945
    7. ' ' → logprob: -19.014238357543945
    8. '```' → logprob: -19.264238357543945
    9. 'prin' → logprob: -19.389238357543945
    10. '(print' → logprob: -19.639238357543945

Token 96: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.0031784253660589457
    2. '(' → logprob: -5.753178596496582
    3. ' (' → logprob: -14.753178596496582
    4. 'value' → logprob: -15.378178596496582
    5. '()' → logprob: -17.003177642822266
    6. '(
' → logprob: -18.003177642822266
    7. '(Value' → logprob: -18.003177642822266
    8. ' value' → logprob: -18.128177642822266
    9. ')value' → logprob: -18.378177642822266
    10. ',value' → logprob: -18.753177642822266

Token 97: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.5
    3. ' )' → logprob: -17.0
    4. '))' → logprob: -19.125
    5. ')

' → logprob: -20.125
    6. '}' → logprob: -20.875
    7. ')`' → logprob: -21.375
    8. ')}' → logprob: -21.5
    9. '   ' → logprob: -21.625
    10. '),' → logprob: -21.875

Token 98: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0012801184784621
    2. 'if' → logprob: -7.001280307769775
    3. 'inp' → logprob: -8.501279830932617
    4. 'a' → logprob: -9.876279830932617
    5. '```' → logprob: -10.751279830932617
    6. '\' → logprob: -10.751279830932617
    7. 'n' → logprob: -10.876279830932617
    8. 'input' → logprob: -11.376279830932617
    9. '  
' → logprob: -11.626279830932617
    10. '    
' → logprob: -11.626279830932617

Token 99: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.048689104616642
    2. 'main' → logprob: -3.048689126968384
    3. ' process' → logprob: -10.173688888549805
    4. ' solve' → logprob: -10.798688888549805
    5. ' run' → logprob: -11.048688888549805
    6. 'process' → logprob: -11.673688888549805
    7. ' solution' → logprob: -12.173688888549805
    8. ' calculate' → logprob: -12.423688888549805
    9. 'solve' → logprob: -13.173688888549805
    10. 'run' → logprob: -13.673688888549805

Token 100: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.017757700756192207
    2. '()' → logprob: -4.142757892608643
    3. '(' → logprob: -6.392757892608643
    4. '_' → logprob: -10.142757415771484
    5. '():
' → logprob: -12.517757415771484
    6. ' ():' → logprob: -13.392757415771484
    7. '(:' → logprob: -14.392757415771484
    8. '()(' → logprob: -14.642757415771484
    9. '().' → logprob: -14.767757415771484
    10. '(**' → logprob: -15.017757415771484

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007862250320613384
    2. ' inp' → logprob: -5.257862091064453
    3. 'inp' → logprob: -6.007862091064453
    4. 'input' → logprob: -9.632862091064453
    5. '    
' → logprob: -10.632862091064453
    6. ' input' → logprob: -10.757862091064453
    7. '   ' → logprob: -10.757862091064453
    8. ' user' → logprob: -11.632862091064453
    9. 'user' → logprob: -12.007862091064453
    10. 'in' → logprob: -13.007862091064453

Token 102: ' inp' (ID: 64450)
  Prédit: 'inp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inp' (adapté à ' inp') → logprob: -0.020152565091848373
    2. ' inp' → logprob: -4.395152568817139
    3. 'user' → logprob: -5.020152568817139
    4. 'input' → logprob: -8.02015209197998
    5. ' user' → logprob: -8.02015209197998
    6. '   ' → logprob: -8.64515209197998
    7. 'inputs' → logprob: -9.64515209197998
    8. 'raw' → logprob: -9.77015209197998
    9. 'usr' → logprob: -11.02015209197998
    10. 'data' → logprob: -11.77015209197998

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21733364462852478
    2. '=' → logprob: -1.8423336744308472
    3. 'ut' → logprob: -3.3423335552215576
    4. 'u' → logprob: -6.967333793640137
    5. '_' → logprob: -8.092333793640137
    6. ' ut' → logprob: -9.342333793640137
    7. '_ut' → logprob: -9.467333793640137
    8. ' ' → logprob: -9.717333793640137
    9. '   ' → logprob: -11.467333793640137
    10. '	' → logprob: -11.717333793640137

Token 104: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.575941801071167
    2. ' get' → logprob: -0.825941801071167
    3. '(get' → logprob: -13.700942039489746
    4. '	get' → logprob: -14.700942039489746
    5. ' input' → logprob: -14.950942039489746
    6. 'input' → logprob: -15.575942039489746
    7. '=get' → logprob: -16.57594108581543
    8. '_get' → logprob: -16.95094108581543
    9. ' ' → logprob: -17.07594108581543
    10. '.get' → logprob: -17.20094108581543

Token 105: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00018780550453811884
    2. '_' → logprob: -8.625187873840332
    3. '_in' → logprob: -12.750187873840332
    4. ' _' → logprob: -12.750187873840332
    5. '_put' → logprob: -14.000187873840332
    6. '_inputs' → logprob: -14.875187873840332
    7. '_user' → logprob: -15.125187873840332
    8. '_p' → logprob: -15.375187873840332
    9. '_Input' → logprob: -15.625187873840332
    10. '_output' → logprob: -15.875187873840332

Token 106: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.696889623621246e-06
    2. '()
' → logprob: -13.37500286102295
    3. '(' → logprob: -14.75000286102295
    4. '()

' → logprob: -15.00000286102295
    5. '().' → logprob: -16.125001907348633
    6. ' ()' → logprob: -16.375001907348633
    7. '()`' → logprob: -17.125001907348633
    8. '();' → logprob: -17.375001907348633
    9. '(),' → logprob: -17.750001907348633
    10. '()\' → logprob: -18.000001907348633

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015581571497023106
    2. '
' → logprob: -4.7655816078186035
    3. '    
' → logprob: -5.2655816078186035
    4. '<|end|>' → logprob: -7.2655816078186035
    5. '  
' → logprob: -8.515581130981445
    6. '    ' → logprob: -8.640581130981445
    7. ' ' → logprob: -8.640581130981445
    8. '  ' → logprob: -9.265581130981445
    9. 's' → logprob: -9.390581130981445
    10. '<|end|>' → logprob: -9.515581130981445

Token 108: ' split' (ID: 12648)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.634416401386261
    2. ' str' → logprob: -2.009416341781616
    3. ' splitted' → logprob: -2.759416341781616
    4. 'str' → logprob: -3.009416341781616
    5. ' strs' → logprob: -3.384416341781616
    6. ' split' → logprob: -3.384416341781616
    7. ' tokens' → logprob: -3.509416341781616
    8. 'split' (adapté à ' split') → logprob: -3.634416341781616
    9. 'parts' → logprob: -3.884416341781616
    10. 'spl' → logprob: -3.884416341781616

Token 109: '_in' (ID: 2267)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0017563373548910022
    2. '_' → logprob: -6.751756191253662
    3. '_in' → logprob: -7.501756191253662
    4. '_inputs' → logprob: -11.62675666809082
    5. '_output' → logprob: -11.62675666809082
    6. '_i' → logprob: -12.12675666809082
    7. '_ing' → logprob: -13.50175666809082
    8. '_Input' → logprob: -13.62675666809082
    9. '_ip' → logprob: -13.87675666809082
    10. '__' → logprob: -14.37675666809082

Token 110: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.002807725453749299
    2. 'put' → logprob: -5.8778076171875
    3. 'puts' → logprob: -13.7528076171875
    4. 'pt' → logprob: -14.3778076171875
    5. 'pu' → logprob: -14.7528076171875
    6. 'п' → logprob: -15.2528076171875
    7. 'pur' → logprob: -16.7528076171875
    8. 't' → logprob: -16.7528076171875
    9. '_put' → logprob: -16.7528076171875
    10. 'puted' → logprob: -16.8778076171875

Token 111: ' =' (ID: 314)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.0005288454121910036
    2. '=' → logprob: -8.625529289245605
    3. 'u' → logprob: -9.000529289245605
    4. ' =' → logprob: -9.125529289245605
    5. '_ut' → logprob: -10.000529289245605
    6. ' ut' → logprob: -10.125529289245605
    7. '_' → logprob: -11.250529289245605
    8. '()' → logprob: -12.250529289245605
    9. '(' → logprob: -12.250529289245605
    10. '   ' → logprob: -12.375529289245605

Token 112: ' split' (ID: 12648)
  Prédit: ' split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' split' → logprob: -0.07889606058597565
    2. 'split' → logprob: -2.5788960456848145
    3. '(split' → logprob: -12.078896522521973
    4. 'spl' → logprob: -15.578896522521973
    5. 'plit' → logprob: -15.703896522521973
    6. ' ' → logprob: -16.453895568847656
    7. '.split' → logprob: -16.703895568847656
    8. '_split' → logprob: -17.703895568847656
    9. ' ' → logprob: -18.078895568847656
    10. 's' → logprob: -18.453895568847656

Token 113: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0014245217898860574
    2. 'put' → logprob: -7.126424312591553
    3. '_in' → logprob: -8.126424789428711
    4. '_put' → logprob: -8.501424789428711
    5. '_' → logprob: -9.626424789428711
    6. 'input' → logprob: -11.501424789428711
    7. 'ut' → logprob: -11.626424789428711
    8. '(_' → logprob: -12.251424789428711
    9. 'inp' → logprob: -12.626424789428711
    10. 'puts' → logprob: -12.626424789428711

Token 114: '(inp' (ID: 141645)
  Prédit: '(inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inp' → logprob: -0.03820718824863434
    2. '(' → logprob: -3.2882072925567627
    3. '(in' → logprob: -9.788207054138184
    4. ' (' → logprob: -10.163207054138184
    5. '(s' → logprob: -10.288207054138184
    6. '(inv' → logprob: -10.913207054138184
    7. '(split' → logprob: -11.663207054138184
    8. '(i' → logprob: -13.163207054138184
    9. '(input' → logprob: -13.538207054138184
    10. '(
' → logprob: -13.538207054138184

Token 115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007628042250871658
    2. ')
' → logprob: -4.882627964019775
    3. ')
' → logprob: -11.132628440856934
    4. ' )' → logprob: -12.382628440856934
    5. ')

' → logprob: -13.382628440856934
    6. '()' → logprob: -14.507628440856934
    7. ' )
' → logprob: -15.382628440856934
    8. '   ' → logprob: -15.382628440856934
    9. '))' → logprob: -16.007627487182617
    10. ' ' → logprob: -16.257627487182617

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015822134912014008
    2. '
' → logprob: -4.765821933746338
    3. 'int' → logprob: -5.515821933746338
    4. ' int' → logprob: -6.765821933746338
    5. '    
' → logprob: -7.015821933746338
    6. 'converted' → logprob: -8.390822410583496
    7. ' ' → logprob: -8.765822410583496
    8. '    ' → logprob: -8.765822410583496
    9. ' converted' → logprob: -8.890822410583496
    10. '  ' → logprob: -8.890822410583496

Token 117: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.004048363771289587
    2. 'ints' → logprob: -5.6290483474731445
    3. ' int' → logprob: -8.004048347473145
    4. 'converted' → logprob: -10.254048347473145
    5. '   ' → logprob: -10.379048347473145
    6. 'conv' → logprob: -11.504048347473145
    7. 'num' → logprob: -11.504048347473145
    8. 'nums' → logprob: -11.879048347473145
    9. 'inte' → logprob: -12.379048347473145
    10. '    
' → logprob: -12.379048347473145

Token 118: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.2260887175798416
    2. '_' → logprob: -1.6010887622833252
    3. 's' → logprob: -8.601088523864746
    4. '_lst' → logprob: -9.226088523864746
    5. ' _' → logprob: -9.726088523864746
    6. '_in' → logprob: -9.726088523864746
    7. '_lists' → logprob: -10.101088523864746
    8. 'List' → logprob: -10.476088523864746
    9. '_value' → logprob: -10.476088523864746
    10. '_s' → logprob: -10.476088523864746

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692904472351074
    2. '=' → logprob: -2.1269290447235107
    3. ',' → logprob: -15.12692928314209
    4. ')' → logprob: -15.37692928314209
    5. '(' → logprob: -15.75192928314209
    6. ' ' → logprob: -16.251928329467773
    7. '.' → logprob: -16.376928329467773
    8. 's' → logprob: -16.626928329467773
    9. ' ' → logprob: -17.501928329467773
    10. '[' → logprob: -17.626928329467773

Token 120: ' convert' (ID: 8452)
  Prédit: ' convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.008615399710834026
    2. 'convert' → logprob: -4.758615493774414
    3. '(convert' → logprob: -14.008615493774414
    4. '.convert' → logprob: -18.008615493774414
    5. '_convert' → logprob: -18.633615493774414
    6. ' convertir' → logprob: -21.633615493774414
    7. ' conversion' → logprob: -22.133615493774414
    8. ' ' → logprob: -22.133615493774414
    9. ' Convert' → logprob: -22.258615493774414
    10. 'Convert' → logprob: -22.383615493774414

Token 121: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.297462171758525e-05
    2. '_' → logprob: -10.625033378601074
    3. '_t' → logprob: -11.750033378601074
    4. '```' → logprob: -15.500033378601074
    5. ' _' → logprob: -15.750033378601074
    6. '##_' → logprob: -16.500032424926758
    7. 'to' → logprob: -16.875032424926758
    8. '__' → logprob: -17.000032424926758
    9. 'To' → logprob: -17.875032424926758
    10. 't' → logprob: -18.000032424926758

Token 122: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.044822726398706436
    2. 'int' → logprob: -3.1698226928710938
    3. 'nt' → logprob: -6.669822692871094
    4. '_' → logprob: -7.669822692871094
    5. '_in' → logprob: -10.419822692871094
    6. '_list' → logprob: -10.919822692871094
    7. '_nt' → logprob: -11.294822692871094
    8. ' int' → logprob: -11.919822692871094
    9. ' _' → logprob: -12.544822692871094
    10. 'n' → logprob: -12.794822692871094

Token 123: '(split' (ID: 74985)
  Prédit: '(split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(split' → logprob: -0.01815134845674038
    2. '(' → logprob: -4.01815128326416
    3. ' (' → logprob: -14.51815128326416
    4. '(
' → logprob: -15.64315128326416
    5. '(sp' → logprob: -15.89315128326416
    6. '(s' → logprob: -16.143152236938477
    7. '(convert' → logprob: -16.768152236938477
    8. '((' → logprob: -16.768152236938477
    9. '(skip' → logprob: -17.143152236938477
    10. '(space' → logprob: -17.768152236938477

Token 124: '_in' (ID: 2267)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.47412681579589844
    2. '_in' → logprob: -0.9741268157958984
    3. '_input' → logprob: -10.849126815795898
    4. '_' → logprob: -11.849126815795898
    5. ')_' → logprob: -12.099126815795898
    6. '_lst' → logprob: -12.474126815795898
    7. 'inp' → logprob: -13.224126815795898
    8. '(inp' → logprob: -13.224126815795898
    9. 'list' → logprob: -13.349126815795898
    10. '(_' → logprob: -13.474126815795898

Token 125: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00042102107545360923
    2. 't' → logprob: -8.250420570373535
    3. 'п' → logprob: -9.625420570373535
    4. 'put' → logprob: -10.250420570373535
    5. 'ut' → logprob: -10.500420570373535
    6. '_list' → logprob: -11.375420570373535
    7. 'pt' → logprob: -11.375420570373535
    8. '
' → logprob: -13.750420570373535
    9. '_p' → logprob: -13.750420570373535
    10. 'list' → logprob: -14.500420570373535

Token 126: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000556012790184468
    2. ')
' → logprob: -7.500555992126465
    3. '()' → logprob: -13.750555992126465
    4. '())' → logprob: -14.250555992126465
    5. ' )' → logprob: -14.625555992126465
    6. ')

' → logprob: -14.625555992126465
    7. '   ' → logprob: -15.750555992126465
    8. '(' → logprob: -16.00055694580078
    9. '))' → logprob: -16.25055694580078
    10. '[' → logprob: -16.75055694580078

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4771052300930023
    2. ' a' → logprob: -1.2271052598953247
    3. 'a' → logprob: -2.602105140686035
    4. '    
' → logprob: -4.602105140686035
    5. '
' → logprob: -7.102105140686035
    6. ' ' → logprob: -7.852105140686035
    7. '(a' → logprob: -8.352105140686035
    8. '  
' → logprob: -9.102105140686035
    9. ' 
' → logprob: -9.477105140686035
    10. '(' → logprob: -9.727105140686035

Token 128: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.10024451464414597
    2. ' a' → logprob: -2.3502445220947266
    3. '   ' → logprob: -10.975244522094727
    4. '	a' → logprob: -12.225244522094727
    5. '(a' → logprob: -12.600244522094727
    6. 'A' → logprob: -13.100244522094727
    7. '    
' → logprob: -13.475244522094727
    8. ' ' → logprob: -13.600244522094727
    9. '[a' → logprob: -13.600244522094727
    10. '_a' → logprob: -13.850244522094727

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003478593716863543
    2. ',b' → logprob: -8.000348091125488
    3. ' ,' → logprob: -11.875348091125488
    4. 'b' → logprob: -12.250348091125488
    5. ',
' → logprob: -14.625348091125488
    6. ' b' → logprob: -16.750347137451172
    7. '_,' → logprob: -17.375347137451172
    8. 's' → logprob: -17.500347137451172
    9. ',

' → logprob: -17.625347137451172
    10. '‌,' → logprob: -17.625347137451172

Token 130: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.026504412293434143
    2. 'b' → logprob: -3.6515045166015625
    3. ' ' → logprob: -8.651504516601562
    4. '<|end|>' → logprob: -10.776504516601562
    5. '    ' → logprob: -12.901504516601562
    6. '_' → logprob: -13.401504516601562
    7. ' ' → logprob: -13.776504516601562
    8. 'space' → logprob: -13.901504516601562
    9. ' 
' → logprob: -14.651504516601562
    10. ' =' → logprob: -14.776504516601562

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005929393693804741
    2. '=' → logprob: -5.130929470062256
    3. ',' → logprob: -14.755928993225098
    4. '<|end|>' → logprob: -15.380928993225098
    5. ' =)' → logprob: -16.630929946899414
    6. ')' → logprob: -17.005929946899414
    7. ' ' → logprob: -17.505929946899414
    8. ' =
' → logprob: -17.880929946899414
    9. '.' → logprob: -19.005929946899414
    10. '  ' → logprob: -19.255929946899414

Token 132: ' assign' (ID: 14975)
  Prédit: ' assign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' assign' → logprob: -0.004620949272066355
    2. 'assign' → logprob: -5.3796210289001465
    3. '(assign' → logprob: -14.879620552062988
    4. '	assign' → logprob: -16.004621505737305
    5. ' assigned' → logprob: -16.629621505737305
    6. ' assignment' → logprob: -17.254621505737305
    7. ' asign' → logprob: -17.254621505737305
    8. '_assign' → logprob: -17.504621505737305
    9. ' ' → logprob: -17.754621505737305
    10. '.assign' → logprob: -17.879621505737305

Token 133: '_variables' (ID: 69364)
  Prédit: '_variables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_variables' → logprob: -6.511406809295295e-06
    2. '_vari' → logprob: -12.750006675720215
    3. '_' → logprob: -13.125006675720215
    4. '_values' → logprob: -13.625006675720215
    5. ' _' → logprob: -16.5000057220459
    6. '_variable' → logprob: -16.7500057220459
    7. '_vars' → logprob: -16.8750057220459
    8. '_var' → logprob: -17.1250057220459
    9. 'variables' → logprob: -17.1250057220459
    10. '(_' → logprob: -17.6250057220459

Token 134: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.541112427134067e-05
    2. '(' → logprob: -9.500075340270996
    3. ' (' → logprob: -15.375075340270996
    4. '(in' → logprob: -16.250076293945312
    5. '(intent' → logprob: -16.875076293945312
    6. ',int' → logprob: -17.000076293945312
    7. '(
' → logprob: -17.375076293945312
    8. '(i' → logprob: -17.875076293945312
    9. 'int' → logprob: -18.500076293945312
    10. '(Int' → logprob: -18.500076293945312

Token 135: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.5776860184123507e-06
    2. 'list' → logprob: -13.12500286102295
    3. 'List' → logprob: -15.12500286102295
    4. '_' → logprob: -16.750001907348633
    5. '_l' → logprob: -16.750001907348633
    6. '_lst' → logprob: -17.750001907348633
    7. 'ist' → logprob: -17.875001907348633
    8. '_LIST' → logprob: -18.250001907348633
    9. '_lists' → logprob: -18.375001907348633
    10. ')' → logprob: -18.750001907348633

Token 136: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ')
' → logprob: -12.75000286102295
    3. ' )' → logprob: -16.500003814697266
    4. '   ' → logprob: -16.625003814697266
    5. '<|end|>' → logprob: -17.375003814697266
    6. ')#' → logprob: -17.750003814697266
    7. ')

' → logprob: -17.750003814697266
    8. ')return' → logprob: -18.000003814697266
    9. ')a' → logprob: -18.125003814697266
    10. '),' → logprob: -18.375003814697266

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9319989681243896
    2. 'result' → logprob: -1.4319989681243896
    3. 'diff' → logprob: -1.8069989681243896
    4. ' result' → logprob: -1.9319989681243896
    5. ' diff' → logprob: -3.6819989681243896
    6. 'difference' → logprob: -4.181999206542969
    7. 'value' → logprob: -4.681999206542969
    8. ' value' → logprob: -5.556999206542969
    9. ' difference' → logprob: -6.181999206542969
    10. ' res' → logprob: -6.931999206542969

Token 138: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' (adapté à ' diff') → logprob: -0.3200705349445343
    2. 'result' → logprob: -1.570070505142212
    3. 'difference' → logprob: -3.195070505142212
    4. ' diff' → logprob: -4.070070743560791
    5. ' result' → logprob: -5.695070743560791
    6. 'res' → logprob: -6.195070743560791
    7. 'value' → logprob: -6.320070743560791
    8. ' difference' → logprob: -8.070070266723633
    9. 'c' → logprob: -8.945070266723633
    10. '   ' → logprob: -9.820070266723633

Token 139: ' =' (ID: 314)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0016897005261853337
    2. ' =' → logprob: -6.751689910888672
    3. '=' → logprob: -8.376689910888672
    4. '_value' → logprob: -9.126689910888672
    5. 'ference' → logprob: -9.751689910888672
    6. '_' → logprob: -10.251689910888672
    7. 'érence' → logprob: -10.626689910888672
    8. 'rence' → logprob: -11.001689910888672
    9. ' er' → logprob: -11.126689910888672
    10. '_er' → logprob: -11.126689910888672

Token 140: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.31326204538345337
    2. ' compute' → logprob: -1.3132619857788086
    3. 'computer' → logprob: -15.938261985778809
    4. '.compute' → logprob: -16.313262939453125
    5. '_compute' → logprob: -17.063262939453125
    6. '   ' → logprob: -17.438262939453125
    7. ' computer' → logprob: -18.188262939453125
    8. ' ' → logprob: -18.188262939453125
    9. 'comput' → logprob: -18.188262939453125
    10. 'computed' → logprob: -19.063262939453125

Token 141: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -3.380904672667384e-05
    2. '_' → logprob: -11.000033378601074
    3. 'difference' → logprob: -11.125033378601074
    4. '_diff' → logprob: -13.750033378601074
    5. '_value' → logprob: -14.250033378601074
    6. '_d' → logprob: -15.375033378601074
    7. '_distance' → logprob: -16.25003433227539
    8. ' difference' → logprob: -16.37503433227539
    9. '_di' → logprob: -17.00003433227539
    10. 'Difference' → logprob: -17.25003433227539

Token 142: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.003178071230649948
    2. '(' → logprob: -5.753178119659424
    3. ' (' → logprob: -15.628177642822266
    4. '(
' → logprob: -16.003177642822266
    5. '(

' → logprob: -17.878177642822266
    6. '(ai' → logprob: -19.003177642822266
    7. '(A' → logprob: -19.253177642822266
    8. '(b' → logprob: -19.378177642822266
    9. '((' → logprob: -19.503177642822266
    10. '(s' → logprob: -19.628177642822266

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018494461255613714
    2. ',b' → logprob: -8.625185012817383
    3. ' ,' → logprob: -12.500185012817383
    4. 'b' → logprob: -13.500185012817383
    5. ',
' → logprob: -15.750185012817383
    6. ')' → logprob: -16.875185012817383
    7. ',d' → logprob: -17.000185012817383
    8. '(' → logprob: -17.125185012817383
    9. ' b' → logprob: -17.875185012817383
    10. 'a' → logprob: -18.375185012817383

Token 144: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.12693166732788086
    2. 'b' → logprob: -2.126931667327881
    3. ')' → logprob: -13.501932144165039
    4. ' ' → logprob: -13.626932144165039
    5. ')b' → logprob: -14.626932144165039
    6. '	b' → logprob: -16.12693214416504
    7. ' ' → logprob: -16.25193214416504
    8. ' )' → logprob: -16.50193214416504
    9. '<|end|>' → logprob: -16.62693214416504
    10. ' 
' → logprob: -16.87693214416504

Token 145: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031970853451639414
    2. ')
' → logprob: -5.753197193145752
    3. ')
' → logprob: -11.503196716308594
    4. ')

' → logprob: -12.378196716308594
    5. '   ' → logprob: -12.753196716308594
    6. ' )' → logprob: -13.628196716308594
    7. ' ' → logprob: -15.128196716308594
    8. '))' → logprob: -15.378196716308594
    9. '
' → logprob: -16.503196716308594
    10. ')`' → logprob: -16.753196716308594

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19521668553352356
    2. ' if' → logprob: -1.8202166557312012
    3. 'if' → logprob: -4.195216655731201
    4. '
' → logprob: -8.44521713256836
    5. '    
' → logprob: -10.07021713256836
    6. '	if' → logprob: -11.57021713256836
    7. ' 
' → logprob: -12.57021713256836
    8. '    ' → logprob: -12.69521713256836
    9. '<|end|>' → logprob: -12.94521713256836
    10. '  ' → logprob: -13.19521713256836

Token 147: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.025703050196170807
    2. ' if' → logprob: -3.775702953338623
    3. '   ' → logprob: -6.025702953338623
    4. '
' → logprob: -10.775703430175781
    5. 'is' → logprob: -12.150703430175781
    6. 'negative' → logprob: -12.650703430175781
    7. '    
' → logprob: -13.400703430175781
    8. ' ' → logprob: -13.400703430175781
    9. '	if' → logprob: -13.400703430175781
    10. '  ' → logprob: -14.150703430175781

Token 148: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.00010366239439463243
    2. 'check' → logprob: -9.250103950500488
    3. ' not' → logprob: -12.375103950500488
    4. '(check' → logprob: -12.875103950500488
    5. ' ' → logprob: -15.125103950500488
    6. '	check' → logprob: -15.625103950500488
    7. ' ' → logprob: -15.750103950500488
    8. '    ' → logprob: -17.375102996826172
    9. ' negative' → logprob: -18.250102996826172
    10. '_check' → logprob: -18.500102996826172

Token 149: '_negative' (ID: 134489)
  Prédit: '_negative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_negative' → logprob: -9.674858301877975e-05
    2. 'negative' → logprob: -9.875096321105957
    3. '_neg' → logprob: -11.000096321105957
    4. '_' → logprob: -11.000096321105957
    5. '_n' → logprob: -12.250096321105957
    6. 'Negative' → logprob: -13.625096321105957
    7. ' negative' → logprob: -14.000096321105957
    8. '_minus' → logprob: -14.000096321105957
    9. '_positive' → logprob: -14.125096321105957
    10. '-negative' → logprob: -14.125096321105957

Token 150: '(diff' (ID: 84195)
  Prédit: '(diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -0.003188286442309618
    2. '(' → logprob: -5.753188133239746
    3. ' (' → logprob: -11.503188133239746
    4. '(value' → logprob: -16.003189086914062
    5. ' ' → logprob: -16.503189086914062
    6. '(d' → logprob: -16.503189086914062
    7. '(def' → logprob: -17.003189086914062
    8. '((' → logprob: -17.378189086914062
    9. '(abs' → logprob: -17.378189086914062
    10. '(div' → logprob: -17.503189086914062

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024768433067947626
    2. '):
' → logprob: -6.877476692199707
    3. ' ):' → logprob: -7.002476692199707
    4. ')' → logprob: -8.127476692199707
    5. '():' → logprob: -8.627476692199707
    6. '()' → logprob: -10.627476692199707
    7. ':' → logprob: -11.502476692199707
    8. '(' → logprob: -11.502476692199707
    9. ')):' → logprob: -12.377476692199707
    10. '   ' → logprob: -13.127476692199707

Token 152: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12301816046237946
    2. '()' → logprob: -2.498018264770508
    3. '       ' → logprob: -3.873018264770508
    4. 'print' → logprob: -4.498018264770508
    5. '()
' → logprob: -7.873018264770508
    6. '():
' → logprob: -8.248018264770508
    7. '    
' → logprob: -8.498018264770508
    8. ' print' → logprob: -8.748018264770508
    9. '
' → logprob: -8.873018264770508
    10. '    ' → logprob: -9.748018264770508

Token 153: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.1101599708199501
    2. ' print' → logprob: -2.6101598739624023
    3. '   ' → logprob: -3.4851598739624023
    4. '(print' → logprob: -9.735159873962402
    5. '	print' → logprob: -10.235159873962402
    6. '()' → logprob: -11.235159873962402
    7. '       ' → logprob: -11.860159873962402
    8. '
' → logprob: -12.235159873962402
    9. '```' → logprob: -12.860159873962402
    10. ' ' → logprob: -12.860159873962402

Token 154: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.015676630660891533
    2. '_value' → logprob: -4.265676498413086
    3. '_' → logprob: -6.640676498413086
    4. '(' → logprob: -9.640676498413086
    5. '```' → logprob: -9.890676498413086
    6. '0' → logprob: -10.890676498413086
    7. ')_' → logprob: -11.140676498413086
    8. '(_' → logprob: -11.140676498413086
    9. '__' → logprob: -11.640676498413086
    10. '}_' → logprob: -12.140676498413086

Token 155: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004081367049366236
    2. '()
' → logprob: -5.5040812492370605
    3. '()

' → logprob: -13.504081726074219
    4. '(' → logprob: -14.754081726074219
    5. ' ()' → logprob: -14.754081726074219
    6. '()
' → logprob: -14.754081726074219
    7. '()`' → logprob: -15.504081726074219
    8. '()"' → logprob: -16.00408172607422
    9. '(
' → logprob: -17.37908172607422
    10. '()\' → logprob: -17.37908172607422

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10460519790649414
    2. 'else' → logprob: -2.479605197906494
    3. ' else' → logprob: -4.229605197906494
    4. '()' → logprob: -7.354605197906494
    5. '
' → logprob: -8.854604721069336
    6. '()
' → logprob: -9.729604721069336
    7. '(' → logprob: -9.979604721069336
    8. '    
' → logprob: -10.604604721069336
    9. '	else' → logprob: -10.854604721069336
    10. '(
' → logprob: -11.104604721069336

Token 157: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5549808740615845
    2. 'else' (adapté à ' else') → logprob: -1.0549808740615845
    3. ' else' → logprob: -2.554980754852295
    4. ' ' → logprob: -11.429981231689453
    5. '	else' → logprob: -11.554981231689453
    6. 'e' → logprob: -14.304981231689453
    7. 'elif' → logprob: -14.429981231689453
    8. '  ' → logprob: -14.429981231689453
    9. '
' → logprob: -15.179981231689453
    10. '    
' → logprob: -15.179981231689453

Token 158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06968884915113449
    2. '():' → logprob: -2.9446887969970703
    3. ':
' → logprob: -4.56968879699707
    4. '():
' → logprob: -5.94468879699707
    5. '(' → logprob: -7.19468879699707
    6. '       ' → logprob: -7.31968879699707
    7. '   ' → logprob: -8.56968879699707
    8. '()' → logprob: -9.69468879699707
    9. ' :' → logprob: -10.94468879699707
    10. ' ():' → logprob: -11.56968879699707

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023974133655428886
    2. '   ' → logprob: -6.252397537231445
    3. 'print' → logprob: -8.127397537231445
    4. ' print' → logprob: -9.127397537231445
    5. '(print' → logprob: -10.252397537231445
    6. '    ' → logprob: -11.127397537231445
    7. '     ' → logprob: -12.627397537231445
    8. ' ' → logprob: -12.627397537231445
    9. '    ' → logprob: -13.002397537231445
    10. '      ' → logprob: -13.877397537231445

Token 160: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03807271271944046
    2. ' print' → logprob: -3.2880728244781494
    3. '   ' → logprob: -10.41307258605957
    4. '       ' → logprob: -14.03807258605957
    5. ' ' → logprob: -15.91307258605957
    6. '(print' → logprob: -16.16307258605957
    7. '	print' → logprob: -16.41307258605957
    8. '    ' → logprob: -16.78807258605957
    9. '.print' → logprob: -17.28807258605957
    10. '  ' → logprob: -17.41307258605957

Token 161: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -8.895480277715251e-06
    2. '_' → logprob: -11.750008583068848
    3. '_val' → logprob: -14.125008583068848
    4. 'value' → logprob: -16.875009536743164
    5. '_values' → logprob: -17.375009536743164
    6. '```' → logprob: -17.500009536743164
    7. '_Value' → logprob: -17.750009536743164
    8. '_VALUE' → logprob: -17.875009536743164
    9. ' _' → logprob: -18.000009536743164
    10. '(_' → logprob: -18.000009536743164

Token 162: '(diff' (ID: 84195)
  Prédit: '(diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -0.014172444120049477
    2. '(' → logprob: -4.264172554016113
    3. ' (' → logprob: -11.764172554016113
    4. '(
' → logprob: -14.389172554016113
    5. 'diff' → logprob: -15.389172554016113
    6. ' diff' → logprob: -15.514172554016113
    7. '	diff' → logprob: -16.514171600341797
    8. ' ' → logprob: -16.889171600341797
    9. '(d' → logprob: -17.389171600341797
    10. '(

' → logprob: -17.889171600341797

Token 163: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.372294698550832e-06
    2. ')
' → logprob: -11.625009536743164
    3. '()' → logprob: -16.125009536743164
    4. '())' → logprob: -16.125009536743164
    5. ' )' → logprob: -16.250009536743164
    6. '   ' → logprob: -16.750009536743164
    7. '))' → logprob: -18.000009536743164
    8. ')

' → logprob: -18.875009536743164
    9. ')#' → logprob: -19.375009536743164
    10. ')`' → logprob: -19.375009536743164

Token 164: 'main' (ID: 7731)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9210237860679626
    2. '\n' → logprob: -1.1710238456726074
    3. 'if' → logprob: -1.2960238456726074
    4. 'main' → logprob: -4.546023845672607
    5. '\' → logprob: -6.046023845672607
    6. '' → logprob: -6.546023845672607
    7. '#' → logprob: -7.046023845672607
    8. '  
' → logprob: -7.296023845672607
    9. '```' → logprob: -7.671023845672607
    10. '    
' → logprob: -7.796023845672607

Token 165: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12695477902889252
    2. '(' → logprob: -2.1269547939300537
    3. '()
' → logprob: -11.626955032348633
    4. '(
' → logprob: -11.876955032348633
    5. '();' → logprob: -13.001955032348633
    6. ' ()' → logprob: -13.251955032348633
    7. '()

' → logprob: -13.376955032348633
    8. '(

' → logprob: -13.626955032348633
    9. '()`' → logprob: -14.251955032348633
    10. ' (' → logprob: -15.001955032348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 163
Tokens correctement prédits (1ère position, stricte): 80
Tokens correctement prédits (1ère position, avec adaptation): 92
Tokens correctement prédits (top 10): 144
Précision stricte (1ère position): 49.08%
Précision adaptée (1ère position): 56.44%
Précision (top 10): 88.34%
================================================================================
