================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())

result = 'No'

i = 1
while i <= 9:
    j = 1
    while j <= 9:
        if i * j == N:
            result = 'Yes'
        j = j + 1
    i = i + 1

print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00019543453527148813
    2. '```' → logprob: -9.500195503234863
    3. '(N' → logprob: -10.500195503234863
    4. '`' → logprob: -10.750195503234863
    5. '(
' → logprob: -11.000195503234863
    6. ')' → logprob: -11.625195503234863
    7. '("("' → logprob: -11.625195503234863
    8. ''' → logprob: -11.625195503234863
    9. '()' → logprob: -11.875195503234863
    10. '('' → logprob: -12.250195503234863

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2372170090675354
    2. ')' → logprob: -1.7372169494628906
    3. '()' → logprob: -3.4872169494628906
    4. '())' → logprob: -5.737216949462891
    5. '```' → logprob: -7.987216949462891
    6. '(
' → logprob: -8.23721694946289
    7. '`' → logprob: -9.61221694946289
    8. '(()' → logprob: -9.61221694946289
    9. '("("' → logprob: -9.61221694946289
    10. '")' → logprob: -9.73721694946289

Token 5: 'result' (ID: 2521)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18690568208694458
    2. 'if' → logprob: -1.9369056224822998
    3. 'result' → logprob: -4.561905860900879
    4. 's' → logprob: -5.311905860900879
    5. 'total' → logprob: -5.936905860900879
    6. 'factor' → logprob: -6.311905860900879
    7. 'sum' → logprob: -6.936905860900879
    8. 'x' → logprob: -7.061905860900879
    9. 'arr' → logprob: -7.311905860900879
    10. 'print' → logprob: -7.436905860900879

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3797726631164551
    2. ' =' → logprob: -1.254772663116455
    3. '[' → logprob: -4.379772663116455
    4. '_' → logprob: -4.879772663116455
    5. '+' → logprob: -5.254772663116455
    6. '```' → logprob: -6.629772663116455
    7. ' +=' → logprob: -6.754772663116455
    8. ' ' → logprob: -7.254772663116455
    9. ')' → logprob: -7.754772663116455
    10. '+=' → logprob: -7.879772663116455

Token 7: ' '' (ID: 461)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6167279481887817
    2. ' ' → logprob: -0.9917279481887817
    3. ' N' → logprob: -2.866727828979492
    4. '"' → logprob: -4.491727828979492
    5. ' []' → logprob: -4.866727828979492
    6. 'N' → logprob: -4.866727828979492
    7. '1' → logprob: -5.991727828979492
    8. ' "' → logprob: -6.741727828979492
    9. '[]' → logprob: -6.866727828979492
    10. ''' → logprob: -7.241727828979492

Token 8: 'No' (ID: 3160)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1519055366516113
    2. '0' → logprob: -1.7769055366516113
    3. '1' → logprob: -2.2769055366516113
    4. 'YES' → logprob: -2.4019055366516113
    5. '*' → logprob: -2.5269055366516113
    6. 'Hello' → logprob: -2.9019055366516113
    7. 'Yes' → logprob: -3.9019055366516113
    8. 'P' → logprob: -4.026905536651611
    9. 'Y' → logprob: -4.151905536651611
    10. '')' → logprob: -4.151905536651611

Token 9: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.014837200753390789
    2. '')' → logprob: -4.264837265014648
    3. '\n' → logprob: -7.889837265014648
    4. 't' → logprob: -8.639837265014648
    5. ')' → logprob: -10.514837265014648
    6. ''t' → logprob: -11.139837265014648
    7. '<|end|>' → logprob: -11.139837265014648
    8. 'n' → logprob: -11.639837265014648
    9. ' or' → logprob: -11.764837265014648
    10. ''''' → logprob: -12.139837265014648

Token 10: 'i' (ID: 72)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3646429181098938
    2. '\n' → logprob: -1.489642858505249
    3. 'if' → logprob: -3.364642858505249
    4. '\' → logprob: -4.114643096923828
    5. '<|end|>' → logprob: -4.614643096923828
    6. '
' → logprob: -4.989643096923828
    7. ' if' → logprob: -5.864643096923828
    8. 'for' → logprob: -5.989643096923828
    9. ' 
' → logprob: -6.739643096923828
    10. '``' → logprob: -6.989643096923828

Token 11: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.004885400645434856
    2. 'n' → logprob: -5.379885196685791
    3. '=' → logprob: -8.50488567352295
    4. 's' → logprob: -11.25488567352295
    5. ' =' → logprob: -11.50488567352295
    6. ' n' → logprob: -11.50488567352295
    7. ' f' → logprob: -12.25488567352295
    8. '```' → logprob: -12.25488567352295
    9. ' ' → logprob: -12.62988567352295
    10. '+' → logprob: -12.75488567352295

Token 12: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.142802894115448
    2. '0' → logprob: -2.0178029537200928
    3. '1' → logprob: -9.017803192138672
    4. ' N' → logprob: -12.767803192138672
    5. '2' → logprob: -13.517803192138672
    6. ' n' → logprob: -14.142803192138672
    7. 'N' → logprob: -14.267803192138672
    8. 'n' → logprob: -15.392803192138672
    9. '```' → logprob: -15.892803192138672
    10. ' 
' → logprob: -16.142803192138672

Token 13: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2608686089515686
    2. '1' → logprob: -1.5108685493469238
    3. '2' → logprob: -5.010868549346924
    4. 'N' → logprob: -6.260868549346924
    5. ' ' → logprob: -8.885869026184082
    6. '10' → logprob: -9.760869026184082
    7. 'int' → logprob: -9.760869026184082
    8. '5' → logprob: -10.885869026184082
    9. '100' → logprob: -10.885869026184082
    10. '3' → logprob: -11.135869026184082

Token 14: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 15: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 16: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25330841541290283
    2. ' ' → logprob: -1.5033084154129028
    3. ' N' → logprob: -7.253308296203613
    4. 'i' → logprob: -7.378308296203613
    5. ' (' → logprob: -11.003308296203613
    6. ' ' → logprob: -11.878308296203613
    7. '  ' → logprob: -12.378308296203613
    8. ' <=' → logprob: -12.878308296203613
    9. 'N' → logprob: -13.128308296203613
    10. '(i' → logprob: -13.253308296203613

Token 17: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.01628737337887287
    2. '<=' → logprob: -4.141287326812744
    3. ' <' → logprob: -8.641287803649902
    4. '<' → logprob: -10.516287803649902
    5. '*' → logprob: -10.641287803649902
    6. ' *' → logprob: -11.266287803649902
    7. '**' → logprob: -12.391287803649902
    8. ' ' → logprob: -12.891287803649902
    9. ' ≤' → logprob: -13.766287803649902
    10. ' **' → logprob: -13.891287803649902

Token 18: ' ' (ID: 220)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5771774649620056
    2. 'N' → logprob: -0.8271774649620056
    3. ' ' → logprob: -6.70217752456665
    4. '10' → logprob: -12.702177047729492
    5. '  ' → logprob: -13.952177047729492
    6. '100' → logprob: -14.077177047729492
    7. '20' → logprob: -14.077177047729492
    8. 'int' → logprob: -14.327177047729492
    9. 'n' → logprob: -14.827177047729492
    10. '	N' → logprob: -14.952177047729492

Token 19: '9' (ID: 24)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.006757648196071386
    2. ' N' → logprob: -5.006757736206055
    3. ' ' → logprob: -10.756757736206055
    4. '10' → logprob: -12.006757736206055
    5. 'int' → logprob: -12.506757736206055
    6. '9' → logprob: -12.881757736206055
    7. '100' → logprob: -13.006757736206055
    8. '5' → logprob: -13.881757736206055
    9. '20' → logprob: -14.006757736206055
    10. '(' → logprob: -14.131757736206055

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010628487507347018
    2. ':
' → logprob: -9.625105857849121
    3. ' :' → logprob: -10.500105857849121
    4. ':**' → logprob: -12.125105857849121
    5. ':i' → logprob: -13.000105857849121
    6. '+:' → logprob: -13.375105857849121
    7. '):' → logprob: -14.125105857849121
    8. '**' → logprob: -14.875105857849121
    9. '*:' → logprob: -14.875105857849121
    10. ' and' → logprob: -15.000105857849121

Token 21: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3070279657840729
    2. ' ' → logprob: -2.30702805519104
    3. '    ' → logprob: -2.68202805519104
    4. '   ' → logprob: -3.05702805519104
    5. ' :' → logprob: -3.55702805519104
    6. '```' → logprob: -5.432027816772461
    7. ':
' → logprob: -5.682027816772461
    8. '<|end|>' → logprob: -6.057027816772461
    9. ' :
' → logprob: -6.182027816772461
    10. ' 
' → logprob: -6.307027816772461

Token 22: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6305186152458191
    2. '   ' → logprob: -1.6305186748504639
    3. ' if' → logprob: -2.005518674850464
    4. '    ' → logprob: -2.880518674850464
    5. 'if' → logprob: -3.380518674850464
    6. ' i' → logprob: -3.880518674850464
    7. 'i' → logprob: -5.130518436431885
    8. ':' → logprob: -5.630518436431885
    9. ' 
' → logprob: -6.255518436431885
    10. '```' → logprob: -6.255518436431885

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07923080772161484
    2. '=' → logprob: -2.579230785369873
    3. ' ' → logprob: -9.204231262207031
    4. ' +=' → logprob: -9.454231262207031
    5. '<|end|>' → logprob: -9.454231262207031
    6. 'space' → logprob: -11.079231262207031
    7. '<|end|>' → logprob: -11.829231262207031
    8. ')' → logprob: -11.829231262207031
    9. '_space' → logprob: -11.954231262207031
    10. ' <=' → logprob: -12.204231262207031

Token 24: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023377899080514908
    2. ' ' → logprob: -3.7733778953552246
    3. '0' → logprob: -9.023378372192383
    4. '10' → logprob: -13.273378372192383
    5. '```' → logprob: -13.523378372192383
    6. '   ' → logprob: -13.523378372192383
    7. ' i' → logprob: -13.648378372192383
    8. '2' → logprob: -13.898378372192383
    9. '=' → logprob: -13.898378372192383
    10. '<|end|>' → logprob: -14.023378372192383

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000797715678345412
    2. ' ' → logprob: -7.250797748565674
    3. '0' → logprob: -10.125797271728516
    4. 'i' → logprob: -10.875797271728516
    5. '9' → logprob: -11.375797271728516
    6. '2' → logprob: -12.000797271728516
    7. '10' → logprob: -12.500797271728516
    8. '   ' → logprob: -13.500797271728516
    9. '```' → logprob: -13.750797271728516
    10. ' i' → logprob: -14.000797271728516

Token 26: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3378830552101135
    2. 'while' (adapté à ' while') → logprob: -2.2128829956054688
    3. '<|end|>' → logprob: -2.3378829956054688
    4. '   ' → logprob: -2.8378829956054688
    5. ' ' → logprob: -4.712882995605469
    6. '    ' → logprob: -5.212882995605469
    7. '```' → logprob: -6.462882995605469
    8. '	while' → logprob: -6.462882995605469
    9. '<|end|>' → logprob: -6.837882995605469
    10. ' and' → logprob: -7.087882995605469

Token 29: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.026376591995358467
    2. 'j' → logprob: -3.651376485824585
    3. ' ' → logprob: -9.776376724243164
    4. '    ' → logprob: -11.401376724243164
    5. '	j' → logprob: -12.901376724243164
    6. '$j' → logprob: -14.026376724243164
    7. '   ' → logprob: -14.151376724243164
    8. ' (' → logprob: -14.651376724243164
    9. ':j' → logprob: -14.776376724243164
    10. ' ' → logprob: -14.901376724243164

Token 30: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0036164664197713137
    2. '<=' → logprob: -5.6286163330078125
    3. '<|end|>' → logprob: -11.753616333007812
    4. ' ≤' → logprob: -13.003616333007812
    5. '   ' → logprob: -13.253616333007812
    6. ' ' → logprob: -13.378616333007812
    7. ')<=' → logprob: -14.128616333007812
    8. ' <=",' → logprob: -14.503616333007812
    9. '```' → logprob: -14.628616333007812
    10. '    ' → logprob: -15.378616333007812

Token 31: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.002899378538131714
    2. ' ' → logprob: -5.877899169921875
    3. 'i' → logprob: -10.127899169921875
    4. ' i' → logprob: -11.252899169921875
    5. 'N' → logprob: -11.377899169921875
    6. '   ' → logprob: -11.502899169921875
    7. '  ' → logprob: -12.002899169921875
    8. '99' → logprob: -12.127899169921875
    9. '999' → logprob: -12.752899169921875
    10. '```' → logprob: -13.315399169921875

Token 32: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.001247016480192542
    2. 'i' → logprob: -7.001246929168701
    3. 'N' → logprob: -8.37624740600586
    4. ' ' → logprob: -9.50124740600586
    5. '99' → logprob: -11.50124740600586
    6. '999' → logprob: -12.00124740600586
    7. ' i' → logprob: -12.12624740600586
    8. '```' → logprob: -12.87624740600586
    9. '   ' → logprob: -13.37624740600586
    10. '10' → logprob: -14.75124740600586

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.392824874026701e-05
    2. ':
' → logprob: -11.00003433227539
    3. ':**' → logprob: -12.25003433227539
    4. '):' → logprob: -12.50003433227539
    5. '<|end|>' → logprob: -12.50003433227539
    6. ' :' → logprob: -12.87503433227539
    7. '<|end|>' → logprob: -14.87503433227539
    8. '**' → logprob: -15.12503433227539
    9. '```' → logprob: -15.25003433227539
    10. '   ' → logprob: -15.50003433227539

Token 34: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5014643669128418
    2. ':' → logprob: -1.5014643669128418
    3. '   ' → logprob: -2.001464366912842
    4. '    ' → logprob: -4.501464366912842
    5. '<|end|>' → logprob: -4.626464366912842
    6. ' ' → logprob: -4.751464366912842
    7. '```' → logprob: -5.751464366912842
    8. ':
' → logprob: -7.126464366912842
    9. '  ' → logprob: -8.00146484375
    10. ' :' → logprob: -8.00146484375

Token 35: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2259060144424438
    2. ' ' → logprob: -1.4759060144424438
    3. ' if' → logprob: -1.9759060144424438
    4. 'if' (adapté à ' if') → logprob: -2.1009058952331543
    5. '           ' → logprob: -2.6009058952331543
    6. '        ' → logprob: -2.7259058952331543
    7. '<|end|>' → logprob: -3.4759058952331543
    8. '   ' → logprob: -4.725905895233154
    9. '\' → logprob: -5.225905895233154
    10. '```' → logprob: -5.350905895233154

Token 36: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18011286854743958
    2. 'i' → logprob: -2.555112838745117
    3. ' N' → logprob: -2.680112838745117
    4. 'N' → logprob: -4.305112838745117
    5. ' ' → logprob: -5.680112838745117
    6. ' (' → logprob: -6.805112838745117
    7. '(i' → logprob: -8.805112838745117
    8. ' `' → logprob: -9.555112838745117
    9. '(' → logprob: -9.680112838745117
    10. '<|end|>' → logprob: -9.680112838745117

Token 37: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.16026820242404938
    2. ' *' → logprob: -1.9102681875228882
    3. '*j' → logprob: -10.28526782989502
    4. '==' → logprob: -12.41026782989502
    5. ' ==' → logprob: -13.28526782989502
    6. ' ' → logprob: -13.41026782989502
    7. '*i' → logprob: -13.66026782989502
    8. '+' → logprob: -14.53526782989502
    9. '＊' → logprob: -14.78526782989502
    10. '   ' → logprob: -15.66026782989502

Token 38: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008617527782917023
    2. ' j' → logprob: -4.758617401123047
    3. ' ' → logprob: -12.883617401123047
    4. '	j' → logprob: -15.508617401123047
    5. '<|end|>' → logprob: -15.758617401123047
    6. '   ' → logprob: -16.508617401123047
    7. '*j' → logprob: -17.133617401123047
    8. '<|end|>' → logprob: -17.258617401123047
    9. ' ' → logprob: -17.633617401123047
    10. '  ' → logprob: -17.883617401123047

Token 39: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2016448825597763
    2. ' ==' → logprob: -1.7016448974609375
    3. '=' → logprob: -8.576644897460938
    4. '===' → logprob: -10.576644897460938
    5. '==
' → logprob: -12.826644897460938
    6. ')==' → logprob: -12.826644897460938
    7. '<|end|>' → logprob: -12.826644897460938
    8. ' ' → logprob: -13.201644897460938
    9. ' =' → logprob: -13.451644897460938
    10. ')' → logprob: -13.951644897460938

Token 40: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.20143437385559082
    2. ' N' → logprob: -1.7014343738555908
    3. ' ' → logprob: -11.201434135437012
    4. ' ' → logprob: -12.701434135437012
    5. '   ' → logprob: -13.701434135437012
    6. '	N' → logprob: -13.951434135437012
    7. '`' → logprob: -13.951434135437012
    8. 'n' → logprob: -15.201434135437012
    9. '  ' → logprob: -15.576434135437012
    10. '```' → logprob: -15.576434135437012

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002549024939071387
    2. ' :' → logprob: -9.00025463104248
    3. ':
' → logprob: -9.12525463104248
    4. '       ' → logprob: -11.62525463104248
    5. '):' → logprob: -12.12525463104248
    6. ' and' → logprob: -12.37525463104248
    7. '           ' → logprob: -13.87525463104248
    8. ':return' → logprob: -14.00025463104248
    9. ':**' → logprob: -15.12525463104248
    10. '   ' → logprob: -15.12525463104248

Token 42: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06041310727596283
    2. 'result' → logprob: -3.060413122177124
    3. '       ' → logprob: -4.685412883758545
    4. '<|end|>' → logprob: -6.935412883758545
    5. ' result' → logprob: -7.310412883758545
    6. '```' → logprob: -8.435413360595703
    7. '<|end|>' → logprob: -9.060413360595703
    8. '          ' → logprob: -9.185413360595703
    9. '               ' → logprob: -9.685413360595703
    10. '        ' → logprob: -9.935413360595703

Token 43: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.5947408080101013
    2. '           ' → logprob: -1.344740867614746
    3. ' result' → logprob: -1.719740867614746
    4. '               ' → logprob: -4.844740867614746
    5. '       ' → logprob: -7.719740867614746
    6. '```' → logprob: -8.594740867614746
    7. ' ' → logprob: -11.344740867614746
    8. '   ' → logprob: -11.344740867614746
    9. '	result' → logprob: -11.594740867614746
    10. '            ' → logprob: -11.844740867614746

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142163336277008
    2. '=' → logprob: -1.7014216184616089
    3. ' ' → logprob: -11.826421737670898
    4. ' ='' → logprob: -14.201421737670898
    5. '='' → logprob: -16.7014217376709
    6. ' ==' → logprob: -16.8264217376709
    7. '＝' → logprob: -17.0764217376709
    8. ' +=' → logprob: -17.2014217376709
    9. '=

' → logprob: -18.0764217376709
    10. ' =)' → logprob: -18.0764217376709

Token 45: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00018577903392724693
    2. ' '' → logprob: -8.6251859664917
    3. '"' → logprob: -12.6251859664917
    4. '   ' → logprob: -13.3751859664917
    5. ' ' → logprob: -14.3751859664917
    6. '`' → logprob: -14.8751859664917
    7. '       ' → logprob: -15.7501859664917
    8. '    ' → logprob: -16.625185012817383
    9. '	' → logprob: -17.250185012817383
    10. '           ' → logprob: -17.375185012817383

Token 46: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0003285520360805094
    2. 'Ye' → logprob: -8.12532901763916
    3. 'Y' → logprob: -11.12532901763916
    4. ''' → logprob: -11.37532901763916
    5. 'YES' → logprob: -12.87532901763916
    6. ' Yes' → logprob: -12.87532901763916
    7. 'Ya' → logprob: -14.75032901763916
    8. 'Ok' → logprob: -15.62532901763916
    9. 'Yo' → logprob: -15.75032901763916
    10. 'True' → logprob: -16.625328063964844

Token 47: ''
' (ID: 2207)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22749872505664825
    2. ''' → logprob: -1.6024987697601318
    3. '       ' → logprob: -7.352498531341553
    4. '```' → logprob: -7.602498531341553
    5. ''
' → logprob: -8.102499008178711
    6. '               ' → logprob: -8.477499008178711
    7. '')' → logprob: -8.977499008178711
    8. '<|end|>' → logprob: -9.352499008178711
    9. ''''' → logprob: -9.852499008178711
    10. '          ' → logprob: -10.102499008178711

Token 48: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005311547312885523
    2. '       ' → logprob: -5.255311489105225
    3. '            
' → logprob: -10.880311965942383
    4. '            ' → logprob: -11.130311965942383
    5. '               ' → logprob: -11.380311965942383
    6. '        
' → logprob: -11.630311965942383
    7. '          ' → logprob: -11.630311965942383
    8. '        ' → logprob: -12.255311965942383
    9. '		' → logprob: -13.255311965942383
    10. '
' → logprob: -13.255311965942383

Token 49: ' j' (ID: 441)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013536323967855424
    2. '       ' → logprob: -10.00013542175293
    3. ' break' → logprob: -10.50013542175293
    4. 'break' → logprob: -11.25013542175293
    5. '            ' → logprob: -11.37513542175293
    6. '            
' → logprob: -11.75013542175293
    7. '          ' → logprob: -11.87513542175293
    8. '               ' → logprob: -12.00013542175293
    9. 'j' (adapté à ' j') → logprob: -12.50013542175293
    10. '		' → logprob: -12.87513542175293

Token 50: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1060345396399498
    2. ' +=' → logprob: -2.731034517288208
    3. '+' → logprob: -3.356034517288208
    4. '=' → logprob: -7.481034755706787
    5. '+='' → logprob: -12.481034278869629
    6. ' +' → logprob: -12.856034278869629
    7. '+="' → logprob: -12.856034278869629
    8. '++' → logprob: -12.981034278869629
    9. '<|end|>' → logprob: -13.481034278869629
    10. ']+=' → logprob: -13.606034278869629

Token 51: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.06197776645421982
    2. 'j' → logprob: -2.8119778633117676
    3. ' ' → logprob: -11.81197738647461
    4. '+' → logprob: -13.68697738647461
    5. '	j' → logprob: -13.93697738647461
    6. '1' → logprob: -14.68697738647461
    7. '+j' → logprob: -16.56197738647461
    8. '$j' → logprob: -16.93697738647461
    9. '```' → logprob: -16.93697738647461
    10. ' +' → logprob: -17.43697738647461

Token 52: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00043162284418940544
    2. ' +' → logprob: -7.750431537628174
    3. '1' → logprob: -14.625432014465332
    4. ' plus' → logprob: -15.750432014465332
    5. 'plus' → logprob: -15.875432014465332
    6. '+j' → logprob: -16.125431060791016
    7. '+
' → logprob: -17.500431060791016
    8. '＋' → logprob: -17.625431060791016
    9. '+i' → logprob: -18.250431060791016
    10. ' ' → logprob: -19.250431060791016

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.7501802444458
    4. '<|end|>' → logprob: -17.375179290771484
    5. '```' → logprob: -18.250179290771484
    6. '  ' → logprob: -18.250179290771484
    7. '１' → logprob: -19.125179290771484
    8. '    ' → logprob: -19.250179290771484
    9. '       ' → logprob: -19.500179290771484
    10. '<|end|>' → logprob: -20.000179290771484

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '<|end|>' → logprob: -18.0
    4. '１' → logprob: -19.0
    5. '```' → logprob: -19.375
    6. '   ' → logprob: -19.75
    7. '  ' → logprob: -20.125
    8. '۱' → logprob: -20.125
    9. '१' → logprob: -20.875
    10. '১' → logprob: -21.375

Token 55: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3272750973701477
    2. '
' → logprob: -1.327275037765503
    3. '       ' → logprob: -5.827275276184082
    4. '<|end|>' → logprob: -5.827275276184082
    5. '\n' → logprob: -6.202275276184082
    6. '    
' → logprob: -6.327275276184082
    7. '```' → logprob: -6.827275276184082
    8. '
' → logprob: -6.827275276184082
    9. '  
' → logprob: -7.577275276184082
    10. ' 
' → logprob: -7.827275276184082

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010700009443098679
    2. '
' → logprob: -10.125106811523438
    3. '```' → logprob: -10.625106811523438
    4. '       ' → logprob: -10.875106811523438
    5. 'i' → logprob: -11.875106811523438
    6. '    
' → logprob: -12.250106811523438
    7. '<|end|>' → logprob: -12.500106811523438
    8. ' ' → logprob: -12.750106811523438
    9. ' i' → logprob: -12.750106811523438
    10. '  ' → logprob: -13.875106811523438

Token 57: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0049925134517252445
    2. ' i' → logprob: -5.879992485046387
    3. 'i' (adapté à ' i') → logprob: -6.129992485046387
    4. '       ' → logprob: -12.629992485046387
    5. '```' → logprob: -13.254992485046387
    6. '	i' → logprob: -13.504992485046387
    7. ' ' → logprob: -13.754992485046387
    8. '  ' → logprob: -14.629992485046387
    9. '    
' → logprob: -14.879992485046387
    10. '    ' → logprob: -16.254993438720703

Token 58: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002226093056378886
    2. '+=' → logprob: -8.625222206115723
    3. ' =' → logprob: -10.125222206115723
    4. '+' → logprob: -13.375222206115723
    5. ' +=' → logprob: -13.500222206115723
    6. ' ' → logprob: -17.75022315979004
    7. '   ' → logprob: -19.00022315979004
    8. '＝' → logprob: -19.00022315979004
    9. '=i' → logprob: -19.75022315979004
    10. '<|end|>' → logprob: -20.25022315979004

Token 59: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20141451060771942
    2. ' i' → logprob: -1.7014144659042358
    3. ' ' → logprob: -14.826414108276367
    4. '1' → logprob: -14.951414108276367
    5. '	i' → logprob: -15.076414108276367
    6. '   ' → logprob: -15.826414108276367
    7. '  ' → logprob: -17.576414108276367
    8. '    ' → logprob: -17.701414108276367
    9. '_i' → logprob: -18.076414108276367
    10. '+' → logprob: -19.201414108276367

Token 60: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018154388293623924
    2. ' +' → logprob: -4.018154621124268
    3. ' ' → logprob: -13.14315414428711
    4. '1' → logprob: -13.64315414428711
    5. '   ' → logprob: -14.51815414428711
    6. '+i' → logprob: -14.89315414428711
    7. ' plus' → logprob: -15.51815414428711
    8. '＋' → logprob: -15.51815414428711
    9. '    ' → logprob: -16.76815414428711
    10. '++' → logprob: -17.64315414428711

Token 61: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008046258008107543
    2. ' ' → logprob: -7.125804424285889
    3. '```' → logprob: -17.500804901123047
    4. '<|end|>' → logprob: -17.500804901123047
    5. '   ' → logprob: -18.000804901123047
    6. '2' → logprob: -18.875804901123047
    7. '１' → logprob: -19.063304901123047
    8. ' ' → logprob: -19.125804901123047
    9. '  ' → logprob: -19.438304901123047
    10. '0' → logprob: -19.500804901123047

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -18.75
    4. '```' → logprob: -19.25
    5. '１' → logprob: -19.375
    6. '  ' → logprob: -19.75
    7. '2' → logprob: -20.125
    8. '۱' → logprob: -20.375
    9. '१' → logprob: -21.0
    10. '0' → logprob: -21.1875

Token 63: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00023750975378789008
    2. '
' → logprob: -8.500237464904785
    3. '```' → logprob: -10.375237464904785
    4. '

' → logprob: -13.625237464904785
    5. '
' → logprob: -14.375237464904785
    6. '``' → logprob: -14.750237464904785
    7. '    
' → logprob: -15.000237464904785
    8. '  
' → logprob: -15.875237464904785
    9. ' print' → logprob: -16.0002384185791
    10. ' 
' → logprob: -17.7502384185791

Token 64: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.815280696377158e-05
    2. '
' → logprob: -9.500078201293945
    3. '```' → logprob: -12.875078201293945
    4. '

' → logprob: -15.000078201293945
    5. ' print' → logprob: -15.250078201293945
    6. '
' → logprob: -16.250078201293945
    7. '  
' → logprob: -17.250078201293945
    8. '    
' → logprob: -17.375078201293945
    9. '``' → logprob: -17.500078201293945
    10. 'pr' → logprob: -18.125078201293945

Token 65: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02354278787970543
    2. '(result' → logprob: -3.773542881011963
    3. '('' → logprob: -8.148542404174805
    4. ' (' → logprob: -13.023542404174805
    5. 'result' → logprob: -13.023542404174805
    6. '()' → logprob: -13.023542404174805
    7. '(
' → logprob: -14.648542404174805
    8. '((' → logprob: -15.273542404174805
    9. '("("' → logprob: -15.648542404174805
    10. '(

' → logprob: -15.898542404174805

Token 66: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '))' → logprob: -15.375000953674316
    3. ' )' → logprob: -15.375000953674316
    4. ')`' → logprob: -16.875
    5. '')' → logprob: -17.375
    6. '`)' → logprob: -19.375
    7. ')
' → logprob: -19.5
    8. ')}' → logprob: -19.75
    9. '）' → logprob: -19.875
    10. ')))' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 64
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 21
Tokens correctement prédits (top 10): 52
Précision stricte (1ère position): 31.25%
Précision adaptée (1ère position): 32.81%
Précision (top 10): 81.25%
================================================================================
