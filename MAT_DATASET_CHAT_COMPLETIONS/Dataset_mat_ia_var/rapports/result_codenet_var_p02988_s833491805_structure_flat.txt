================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:53:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import statistics
input = sys.stdin.readline

n = int(input())
p = list(map(int, input().split()))
counter = 0
i = 1
while i < n - 1:
    a = p[i-1]
    b = p[i]
    c = p[i+1]
    if (a <= b <= c) or (c <= b <= a):
        counter += 1
    i += 1
print(counter)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' statistics' (ID: 21729)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -7.755678961984813e-05
    2. 'os' → logprob: -9.500077247619629
    3. ' math' → logprob: -13.625077247619629
    4. ' re' → logprob: -14.500077247619629
    5. ' json' → logprob: -15.125077247619629
    6. '"os' → logprob: -15.375077247619629
    7. '_os' → logprob: -16.125078201293945
    8. ' io' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.375078201293945
    10. '	os' → logprob: -17.000078201293945

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5510442852973938
    2. '\n' → logprob: -1.176044225692749
    3. 'import' → logprob: -3.176044225692749
    4. '\' → logprob: -3.426044225692749
    5. '<|end|>' → logprob: -4.426044464111328
    6. '```' → logprob: -4.801044464111328
    7. '
' → logprob: -4.926044464111328
    8. 'newline' → logprob: -5.551044464111328
    9. '<|end|>' → logprob: -5.676044464111328
    10. '

' → logprob: -7.176044464111328

Token 6: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7369279861450195
    2. '\n' → logprob: -0.8619279861450195
    3. '\' → logprob: -3.1119279861450195
    4. 'import' → logprob: -3.9869279861450195
    5. '
' → logprob: -4.7369279861450195
    6. '```' → logprob: -4.7369279861450195
    7. '<|end|>' → logprob: -5.6119279861450195
    8. ' as' → logprob: -5.8619279861450195
    9. 'as' → logprob: -6.3619279861450195
    10. 'newline' → logprob: -6.4869279861450195

Token 7: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22644618153572083
    2. '.' → logprob: -1.6014461517333984
    3. '()' → logprob: -7.476446151733398
    4. '(.)' → logprob: -9.726446151733398
    5. '```' → logprob: -9.851446151733398
    6. '[' → logprob: -9.851446151733398
    7. ')' → logprob: -9.976446151733398
    8. ' (' → logprob: -10.101446151733398
    9. '('' → logprob: -10.726446151733398
    10. '(
' → logprob: -10.726446151733398

Token 8: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1383943408727646
    2. ' sys' → logprob: -2.138394355773926
    3. 'input' → logprob: -4.513394355773926
    4. ' input' → logprob: -7.888394355773926
    5. 'lambda' → logprob: -10.888394355773926
    6. '(sys' → logprob: -11.013394355773926
    7. '=sys' → logprob: -11.013394355773926
    8. '	sys' → logprob: -12.138394355773926
    9. ' lambda' → logprob: -13.013394355773926
    10. 'system' → logprob: -13.638394355773926

Token 9: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01215958222746849
    2. '.stdin' → logprob: -4.51215934753418
    3. '.input' → logprob: -7.88715934753418
    4. ' .' → logprob: -8.51215934753418
    5. '.argv' → logprob: -8.63715934753418
    6. '.import' → logprob: -8.63715934753418
    7. '.stdout' → logprob: -9.76215934753418
    8. '.readline' → logprob: -10.38715934753418
    9. '.
' → logprob: -10.51215934753418
    10. '.`' → logprob: -11.88715934753418

Token 10: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1286987066268921
    2. '.readline' → logprob: -2.1286988258361816
    3. '.read' → logprob: -6.378698825836182
    4. 'read' → logprob: -10.628698348999023
    5. '.Read' → logprob: -11.503698348999023
    6. '.readlines' → logprob: -11.878698348999023
    7. '```' → logprob: -11.878698348999023
    8. ' .' → logprob: -12.753698348999023
    9. '.\' → logprob: -12.753698348999023
    10. ''.' → logprob: -13.128698348999023

Token 11: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12093370407819748
    2. '(' → logprob: -2.370933771133423
    3. '()
' → logprob: -4.870933532714844
    4. '(
' → logprob: -4.870933532714844
    5. '
' → logprob: -5.745933532714844
    6. '()

' → logprob: -6.745933532714844
    7. '\n' → logprob: -8.120933532714844
    8. '()\' → logprob: -8.620933532714844
    9. '(

' → logprob: -8.870933532714844
    10. '

' → logprob: -9.870933532714844

Token 12: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07553371787071228
    2. '()' → logprob: -3.075533628463745
    3. 'n' → logprob: -4.575533866882324
    4. 'data' → logprob: -4.950533866882324
    5. '(n' → logprob: -6.075533866882324
    6. 'def' → logprob: -6.200533866882324
    7. '(
' → logprob: -6.700533866882324
    8. 'num' → logprob: -6.825533866882324
    9. 'number' → logprob: -7.450533866882324
    10. 'for' → logprob: -7.950533866882324

Token 13: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0531235933303833
    2. '=' → logprob: -1.1781235933303833
    3. ')' → logprob: -1.6781235933303833
    4. ' =' → logprob: -2.1781234741210938
    5. '[' → logprob: -4.553123474121094
    6. '_' → logprob: -4.928123474121094
    7. '>' → logprob: -5.053123474121094
    8. '<|end|>' → logprob: -5.428123474121094
    9. ',' → logprob: -5.553123474121094
    10. '.' → logprob: -5.553123474121094

Token 14: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.04865889996290207
    2. 'int' → logprob: -3.048658847808838
    3. ' ' → logprob: -9.673659324645996
    4. '=int' → logprob: -12.548659324645996
    5. ' input' → logprob: -12.673659324645996
    6. 'input' → logprob: -14.298659324645996
    7. '<int' → logprob: -15.423659324645996
    8. '(int' → logprob: -15.423659324645996
    9. '[int' → logprob: -15.548659324645996
    10. ' len' → logprob: -15.923659324645996

Token 15: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.341087570646778e-05
    2. '(input' → logprob: -9.500093460083008
    3. '('' → logprob: -11.875093460083008
    4. '(n' → logprob: -12.125093460083008
    5. ' (' → logprob: -12.500093460083008
    6. '()' → logprob: -13.750093460083008
    7. '("' → logprob: -14.625093460083008
    8. '(
' → logprob: -15.000093460083008
    9. ' ' → logprob: -15.875093460083008
    10. '(`' → logprob: -16.000093460083008

Token 16: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07473291456699371
    2. '()' → logprob: -2.949733018875122
    3. ')' → logprob: -3.949733018875122
    4. '(' → logprob: -7.949732780456543
    5. ' ())' → logprob: -10.574732780456543
    6. '()))' → logprob: -12.574732780456543
    7. '())
' → logprob: -13.074732780456543
    8. '().' → logprob: -13.324732780456543
    9. '`)' → logprob: -13.449732780456543
    10. '))' → logprob: -13.574732780456543

Token 17: 'p' (ID: 79)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.3378860056400299
    2. 'numbers' → logprob: -1.5878859758377075
    3. 'arr' → logprob: -3.462886095046997
    4. 'nums' → logprob: -4.087885856628418
    5. 'scores' → logprob: -4.462885856628418
    6. 'values' → logprob: -4.712885856628418
    7. 'a' → logprob: -5.712885856628418
    8. 'prices' → logprob: -6.337885856628418
    9. 'array' → logprob: -6.462885856628418
    10. 'lst' → logprob: -6.837885856628418

Token 18: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.40979886054992676
    2. 'e' → logprob: -2.1597988605499268
    3. 'er' → logprob: -2.4097988605499268
    4. 'ie' → logprob: -3.4097988605499268
    5. 'oints' → logprob: -3.9097988605499268
    6. 'erc' → logprob: -4.284798622131348
    7. 'op' → logprob: -4.284798622131348
    8. ' =' → logprob: -4.909798622131348
    9. 's' → logprob: -5.159798622131348
    10. 'l' → logprob: -5.159798622131348

Token 19: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.16768412292003632
    2. 'list' → logprob: -1.9176840782165527
    3. ' [' → logprob: -5.167684078216553
    4. ' []' → logprob: -7.167684078216553
    5. '[' → logprob: -7.542684078216553
    6. '[int' → logprob: -8.792684555053711
    7. '[list' → logprob: -9.167684555053711
    8. '[]' → logprob: -9.417684555053711
    9. '[input' → logprob: -10.917684555053711
    10. ' ' → logprob: -11.042684555053711

Token 20: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011259292950853705
    2. '(p' → logprob: -6.876125812530518
    3. '(range' → logprob: -9.751126289367676
    4. '()' → logprob: -11.876126289367676
    5. '(map' → logprob: -11.876126289367676
    6. '(input' → logprob: -12.001126289367676
    7. '(
' → logprob: -13.001126289367676
    8. '(int' → logprob: -13.251126289367676
    9. '(data' → logprob: -13.626126289367676
    10. '(.' → logprob: -13.751126289367676

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.21637894213199615
    2. '(' → logprob: -1.716378927230835
    3. '(str' → logprob: -4.466379165649414
    4. '(lambda' → logprob: -5.841379165649414
    5. '(input' → logprob: -8.591379165649414
    6. '(float' → logprob: -9.841379165649414
    7. '(
' → logprob: -10.216379165649414
    8. 'int' → logprob: -10.716379165649414
    9. '(eval' → logprob: -10.716379165649414
    10. '<|end|>' → logprob: -10.716379165649414

Token 22: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.009624695405364037
    2. '(' → logprob: -4.759624481201172
    3. ',input' → logprob: -7.134624481201172
    4. ',' → logprob: -8.884624481201172
    5. ')' → logprob: -10.134624481201172
    6. '=input' → logprob: -11.509624481201172
    7. 'input' → logprob: -11.759624481201172
    8. ' (' → logprob: -12.634624481201172
    9. '))' → logprob: -12.634624481201172
    10. '(
' → logprob: -13.259624481201172

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03804642707109451
    2. ' input' → logprob: -3.288046360015869
    3. '(input' → logprob: -12.663046836853027
    4. ',input' → logprob: -13.913046836853027
    5. '=input' → logprob: -14.788046836853027
    6. '	input' → logprob: -15.413046836853027
    7. ' ' → logprob: -16.03804588317871
    8. ')' → logprob: -16.28804588317871
    9. '<input' → logprob: -16.91304588317871
    10. '_input' → logprob: -17.78804588317871

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.68022444692906e-05
    2. '()' → logprob: -10.750046730041504
    3. '()))' → logprob: -11.125046730041504
    4. '())' → logprob: -11.500046730041504
    5. '()));' → logprob: -15.875046730041504
    6. '(' → logprob: -16.62504768371582
    7. ' ().' → logprob: -16.62504768371582
    8. '())))' → logprob: -17.00004768371582
    9. ')' → logprob: -17.25004768371582
    10. '))' → logprob: -18.12504768371582

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0799730196595192
    2. 'strip' → logprob: -2.579972982406616
    3. 'rstrip' → logprob: -6.829973220825195
    4. ' split' → logprob: -13.704973220825195
    5. 'read' → logprob: -15.579973220825195
    6. ')' → logprob: -15.954973220825195
    7. ' strip' → logprob: -16.079973220825195
    8. '(split' → logprob: -16.079973220825195
    9. 'rs' → logprob: -17.329973220825195
    10. '```' → logprob: -17.704973220825195

Token 26: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.22767312824726105
    2. '()))' → logprob: -1.7276731729507446
    3. ')' → logprob: -3.852673053741455
    4. '())' → logprob: -5.602673053741455
    5. '()' → logprob: -7.227673053741455
    6. '(' → logprob: -8.477673530578613
    7. '()))
' → logprob: -10.102673530578613
    8. '))
' → logprob: -11.477673530578613
    9. '(p' → logprob: -12.227673530578613
    10. ')))' → logprob: -12.602673530578613

Token 27: 'counter' (ID: 32128)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.025214672088623
    2. '
' → logprob: -1.650214672088623
    3. 'p' → logprob: -2.275214672088623
    4. ' 
' → logprob: -2.400214672088623
    5. '\n' → logprob: -3.525214672088623
    6. 'm' → logprob: -3.650214672088623
    7. '#' → logprob: -3.650214672088623
    8. 's' → logprob: -3.650214672088623
    9. '' → logprob: -4.025214672088623
    10. ')
' → logprob: -4.025214672088623

Token 28: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6554480791091919
    2. '(' → logprob: -0.7804480791091919
    3. '[' → logprob: -4.530447959899902
    4. 's' → logprob: -5.280447959899902
    5. '=' → logprob: -5.405447959899902
    6. ' =' → logprob: -7.655447959899902
    7. '(.)' → logprob: -7.780447959899902
    8. '_' → logprob: -8.280447959899902
    9. '('.')' → logprob: -8.780447959899902
    10. '.(' → logprob: -9.155447959899902

Token 29: ' ' (ID: 220)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.01847287267446518
    2. ' {}' → logprob: -4.018472671508789
    3. '{' → logprob: -8.518472671508789
    4. '[' → logprob: -10.393472671508789
    5. '0' → logprob: -10.393472671508789
    6. '{}
' → logprob: -10.893472671508789
    7. ' [' → logprob: -11.143472671508789
    8. 'dict' → logprob: -11.393472671508789
    9. 'Counter' → logprob: -12.893472671508789
    10. ' {' → logprob: -12.893472671508789

Token 30: '0' (ID: 15)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0015329512534663081
    2. '{' → logprob: -6.751533031463623
    3. 'statistics' → logprob: -8.876532554626465
    4. '0' → logprob: -9.376532554626465
    5. '[' → logprob: -9.751532554626465
    6. '{}
' → logprob: -9.876532554626465
    7. 'dict' → logprob: -11.751532554626465
    8. '{}

' → logprob: -12.001532554626465
    9. '[]' → logprob: -12.251532554626465
    10. ' {}' → logprob: -13.126532554626465

Token 31: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7287347316741943
    2. '
' → logprob: -0.8537347316741943
    3. ' for' → logprob: -2.7287347316741943
    4. '\n' → logprob: -4.103734970092773
    5. '<|end|>' → logprob: -5.603734970092773
    6. '' → logprob: -6.103734970092773
    7. ' 
' → logprob: -6.478734970092773
    8. 'n' → logprob: -7.728734970092773
    9. 'if' → logprob: -7.978734970092773
    10. '\' → logprob: -8.103734970092773

Token 32: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018321549519896507
    2. ' for' → logprob: -4.268321514129639
    3. '
' → logprob: -5.768321514129639
    4. '\n' → logprob: -7.018321514129639
    5. '\' → logprob: -10.393321990966797
    6. ' 
' → logprob: -10.643321990966797
    7. '' → logprob: -10.893321990966797
    8. 'n' → logprob: -11.143321990966797
    9. 'if' → logprob: -11.768321990966797
    10. 'p' → logprob: -12.268321990966797

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7392768859863281
    2. 'n' → logprob: -1.3642768859863281
    3. '=' → logprob: -1.7392768859863281
    4. ' ' → logprob: -3.364276885986328
    5. ' +=' → logprob: -3.614276885986328
    6. '+' → logprob: -4.239276885986328
    7. ' n' → logprob: -4.739276885986328
    8. 's' → logprob: -6.114276885986328
    9. '<|end|>' → logprob: -6.739276885986328
    10. 'f' → logprob: -7.114276885986328

Token 34: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12767437100410461
    2. ' ' → logprob: -2.1276743412017822
    3. '1' → logprob: -7.252674579620361
    4. '2' → logprob: -10.627674102783203
    5. ' n' → logprob: -11.877674102783203
    6. 'n' → logprob: -13.002674102783203
    7. ' counter' → logprob: -13.877674102783203
    8. 'counter' → logprob: -14.627674102783203
    9. ' -' → logprob: -14.752674102783203
    10. ' p' → logprob: -14.752674102783203

Token 35: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020438177511096
    2. '1' → logprob: -4.145438194274902
    3. ' ' → logprob: -5.520438194274902
    4. '2' → logprob: -8.395438194274902
    5. 'n' → logprob: -9.145438194274902
    6. '-' → logprob: -11.020438194274902
    7. '3' → logprob: -11.895438194274902
    8. ' n' → logprob: -12.270438194274902
    9. 'p' → logprob: -12.520438194274902
    10. '4' → logprob: -12.707938194274902

Token 36: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.2912169694900513
    2. '<|end|>' → logprob: -1.6662169694900513
    3. ' while' → logprob: -1.9162169694900513
    4. ':' → logprob: -1.9162169694900513
    5. '
' → logprob: -1.9162169694900513
    6. '+' → logprob: -3.1662168502807617
    7. ' ' → logprob: -3.7912168502807617
    8. ':
' → logprob: -5.416216850280762
    9. ' 
' → logprob: -5.666216850280762
    10. '0' → logprob: -5.666216850280762

Token 37: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.30655109882354736
    2. ' while' → logprob: -1.8065510988235474
    3. '+' → logprob: -3.056550979614258
    4. ':' → logprob: -4.306550979614258
    5. '
' → logprob: -4.306550979614258
    6. '<|end|>' → logprob: -4.931550979614258
    7. '0' → logprob: -5.556550979614258
    8. ' ' → logprob: -6.306550979614258
    9. ')' → logprob: -6.431550979614258
    10. '```' → logprob: -6.431550979614258

Token 38: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.010934626683592796
    2. 'i' → logprob: -4.635934829711914
    3. ' counter' → logprob: -7.385934829711914
    4. 'counter' → logprob: -8.385934829711914
    5. ' ' → logprob: -8.635934829711914
    6. ' n' → logprob: -9.135934829711914
    7. ' p' → logprob: -11.385934829711914
    8. 'n' → logprob: -11.885934829711914
    9. ' len' → logprob: -12.385934829711914
    10. '<' → logprob: -12.385934829711914

Token 39: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12989011406898499
    2. '<' → logprob: -2.254890203475952
    3. ' <=' → logprob: -4.129889965057373
    4. '<=' → logprob: -7.254889965057373
    5. ' ' → logprob: -9.629890441894531
    6. '<n' → logprob: -10.129890441894531
    7. '<len' → logprob: -10.754890441894531
    8. '<size' → logprob: -13.754890441894531
    9. ' <
' → logprob: -14.504890441894531
    10. ' ≤' → logprob: -14.629890441894531

Token 40: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1459726095199585
    2. ' n' → logprob: -2.020972728729248
    3. 'len' → logprob: -6.020972728729248
    4. ' len' → logprob: -7.270972728729248
    5. ' ' → logprob: -9.02097225189209
    6. '	n' → logprob: -12.39597225189209
    7. '100' → logprob: -12.52097225189209
    8. '2' → logprob: -12.70847225189209
    9. '   ' → logprob: -12.70847225189209
    10. '10' → logprob: -12.83347225189209

Token 41: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006429764907807112
    2. ' and' → logprob: -7.625642776489258
    3. ' :' → logprob: -9.375642776489258
    4. 'and' → logprob: -10.500642776489258
    5. ':
' → logprob: -10.875642776489258
    6. ':**' → logprob: -11.250642776489258
    7. '+:' → logprob: -12.125642776489258
    8. '+' → logprob: -13.250642776489258
    9. '):' → logprob: -14.375642776489258
    10. ' ' → logprob: -15.250642776489258

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018125296628568321
    2. ' ' → logprob: -8.875181198120117
    3. '2' → logprob: -10.125181198120117
    4. '3' → logprob: -14.375181198120117
    5. '4' → logprob: -15.250181198120117
    6. '   ' → logprob: -16.187681198120117
    7. '0' → logprob: -16.375181198120117
    8. '5' → logprob: -16.375181198120117
    9. '-' → logprob: -16.562681198120117
    10. '```' → logprob: -16.875181198120117

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.791440293658525e-05
    2. '2' → logprob: -9.500078201293945
    3. ' ' → logprob: -13.125078201293945
    4. '3' → logprob: -14.250078201293945
    5. '4' → logprob: -15.625078201293945
    6. '```' → logprob: -16.812578201293945
    7. '１' → logprob: -17.312578201293945
    8. '5' → logprob: -17.375078201293945
    9. '   ' → logprob: -17.375078201293945
    10. '-' → logprob: -17.625078201293945

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002161325654014945
    2. ' :' → logprob: -6.627161502838135
    3. ' and' → logprob: -7.252161502838135
    4. ':
' → logprob: -9.127161026000977
    5. 'and' → logprob: -11.377161026000977
    6. ':**' → logprob: -13.252161026000977
    7. ' :
' → logprob: -13.877161026000977
    8. ',' → logprob: -14.002161026000977
    9. ' ' → logprob: -14.377161026000977
    10. '):' → logprob: -14.627161026000977

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1195891946554184
    2. ' if' → logprob: -2.99458909034729
    3. ' ' → logprob: -3.11958909034729
    4. '    ' → logprob: -5.119589328765869
    5. '<|end|>' → logprob: -5.244589328765869
    6. 'if' → logprob: -5.994589328765869
    7. ' 
' → logprob: -6.244589328765869
    8. '    
' → logprob: -6.994589328765869
    9. '  ' → logprob: -7.619589328765869
    10. ':' → logprob: -8.494588851928711

Token 46: ' a' (ID: 261)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13865473866462708
    2. 'if' → logprob: -2.5136547088623047
    3. '   ' → logprob: -3.6386547088623047
    4. '    ' → logprob: -4.638654708862305
    5. ' ' → logprob: -4.763654708862305
    6. ' i' → logprob: -6.263654708862305
    7. ' p' → logprob: -7.638654708862305
    8. 'i' → logprob: -8.013654708862305
    9. 'p' → logprob: -8.263654708862305
    10. '       ' → logprob: -8.388654708862305

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13217957317829132
    2. '=' → logprob: -3.3821794986724854
    3. '[i' → logprob: -3.7571794986724854
    4. 'b' → logprob: -4.2571797370910645
    5. ' <' → logprob: -4.3821797370910645
    6. ' +=' → logprob: -5.0071797370910645
    7. ' +' → logprob: -5.1321797370910645
    8. ',' → logprob: -5.6321797370910645
    9. ' ' → logprob: -5.6321797370910645
    10. 'i' → logprob: -5.7571797370910645

Token 48: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2524760067462921
    2. ' p' → logprob: -1.5024759769439697
    3. '(p' → logprob: -8.25247573852539
    4. ' (' → logprob: -9.25247573852539
    5. 'abs' → logprob: -10.12747573852539
    6. '   ' → logprob: -10.75247573852539
    7. ' abs' → logprob: -10.75247573852539
    8. ' ' → logprob: -10.75247573852539
    9. ' [' → logprob: -11.50247573852539
    10. '[p' → logprob: -11.50247573852539

Token 49: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.697387966094539e-05
    2. '[' → logprob: -9.375086784362793
    3. 'i' → logprob: -15.000086784362793
    4. '[
' → logprob: -15.125086784362793
    5. '[I' → logprob: -15.375086784362793
    6. ' [' → logprob: -15.500086784362793
    7. '[a' → logprob: -15.625086784362793
    8. '[j' → logprob: -16.00008773803711
    9. '[p' → logprob: -16.25008773803711
    10. '[m' → logprob: -16.62508773803711

Token 50: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05676679685711861
    2. ' -' → logprob: -3.1817667484283447
    3. ']' → logprob: -4.306766986846924
    4. ' ' → logprob: -9.556766510009766
    5. '+' → logprob: -9.806766510009766
    6. ' ]' → logprob: -10.306766510009766
    7. '   ' → logprob: -11.306766510009766
    8. ')' → logprob: -11.806766510009766
    9. '])' → logprob: -12.556766510009766
    10. '  ' → logprob: -12.681766510009766

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.953082341467962e-05
    2. ' ' → logprob: -10.625039100646973
    3. '0' → logprob: -12.125039100646973
    4. '2' → logprob: -12.812539100646973
    5. '-' → logprob: -13.062539100646973
    6. ']' → logprob: -13.187539100646973
    7. ')' → logprob: -14.500039100646973
    8. '```' → logprob: -14.937539100646973
    9. '   ' → logprob: -15.500039100646973
    10. '<|end|>' → logprob: -15.812539100646973

Token 52: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0029598698019981384
    2. ']
' → logprob: -5.877959728240967
    3. ' ]' → logprob: -9.877960205078125
    4. ']+' → logprob: -9.877960205078125
    5. ']>' → logprob: -11.127960205078125
    6. '])' → logprob: -11.502960205078125
    7. ')' → logprob: -11.752960205078125
    8. ']*' → logprob: -12.752960205078125
    9. ']>=' → logprob: -13.127960205078125
    10. '],' → logprob: -13.252960205078125

Token 53: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43963590264320374
    2. '<|end|>' → logprob: -1.5646358728408813
    3. '+' → logprob: -2.689635992050171
    4. ',' → logprob: -3.314635992050171
    5. ' +' → logprob: -3.939635992050171
    6. '   ' → logprob: -5.314635753631592
    7. ' ,' → logprob: -5.439635753631592
    8. '  ' → logprob: -6.189635753631592
    9. '<|end|>' → logprob: -6.314635753631592
    10. ' *' → logprob: -6.314635753631592

Token 54: ' b' (ID: 287)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.46916353702545166
    2. ' p' → logprob: -1.9691635370254517
    3. 'b' (adapté à ' b') → logprob: -2.094163417816162
    4. ' ' → logprob: -2.719163417816162
    5. 's' → logprob: -4.094163417816162
    6. ',' → logprob: -4.469163417816162
    7. '  ' → logprob: -5.094163417816162
    8. '   ' → logprob: -5.594163417816162
    9. ' b' → logprob: -6.344163417816162
    10. ' ,' → logprob: -6.344163417816162

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007636439986526966
    2. '=' → logprob: -4.882636547088623
    3. ',' → logprob: -10.757636070251465
    4. ' ' → logprob: -11.757636070251465
    5. ' ,' → logprob: -14.132636070251465
    6. ')' → logprob: -15.757636070251465
    7. '>' → logprob: -16.63263702392578
    8. ' >' → logprob: -16.75763702392578
    9. 'a' → logprob: -17.00763702392578
    10. '<|end|>' → logprob: -17.00763702392578

Token 56: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.2254253625869751
    2. 'p' → logprob: -1.600425362586975
    3. ' ' → logprob: -12.725425720214844
    4. '(p' → logprob: -13.850425720214844
    5. '	p' → logprob: -14.350425720214844
    6. ',p' → logprob: -14.475425720214844
    7. '2' → logprob: -14.787925720214844
    8. '0' → logprob: -15.037925720214844
    9. ' ' → logprob: -15.037925720214844
    10. '<p' → logprob: -15.037925720214844

Token 57: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.250001907348633
    3. 'i' → logprob: -16.750001907348633
    4. '```' → logprob: -17.000001907348633
    5. '[j' → logprob: -17.375001907348633
    6. '[
' → logprob: -18.125001907348633
    7. '[index' → logprob: -18.500001907348633
    8. ' [' → logprob: -18.875001907348633
    9. '[idx' → logprob: -19.000001907348633
    10. ' i' → logprob: -19.000001907348633

Token 58: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09424319863319397
    2. ']' → logprob: -2.594243288040161
    3. ']
' → logprob: -4.469243049621582
    4. '-' → logprob: -6.094243049621582
    5. ' +' → logprob: -6.719243049621582
    6. ']+' → logprob: -8.969243049621582
    7. '+
' → logprob: -9.094243049621582
    8. ' -' → logprob: -11.094243049621582
    9. '   ' → logprob: -11.344243049621582
    10. ' ]' → logprob: -11.594243049621582

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010444821091368794
    2. 'c' → logprob: -8.001044273376465
    3. '  ' → logprob: -8.126044273376465
    4. '<|end|>' → logprob: -8.751044273376465
    5. ' ' → logprob: -8.876044273376465
    6. ' c' → logprob: -9.501044273376465
    7. 's' → logprob: -12.001044273376465
    8. '    ' → logprob: -12.001044273376465
    9. ',' → logprob: -12.626044273376465
    10. '    
' → logprob: -12.876044273376465

Token 60: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0013010689290240407
    2. '   ' → logprob: -7.001301288604736
    3. ' c' → logprob: -7.876301288604736
    4. 'if' → logprob: -12.376300811767578
    5. '  ' → logprob: -13.001300811767578
    6. '	c' → logprob: -13.251300811767578
    7. ' ' → logprob: -14.626300811767578
    8. 'i' → logprob: -15.126300811767578
    9. ' if' → logprob: -16.251300811767578
    10. 's' → logprob: -16.251300811767578

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975292131304741
    2. '=' → logprob: -3.5297529697418213
    3. ' ' → logprob: -13.529752731323242
    4. 'p' → logprob: -14.779752731323242
    5. '=p' → logprob: -14.779752731323242
    6. 's' → logprob: -15.654752731323242
    7. 'a' → logprob: -17.154752731323242
    8. ',' → logprob: -17.404752731323242
    9. ' p' → logprob: -17.404752731323242
    10. '   ' → logprob: -18.154752731323242

Token 62: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20142170786857605
    2. ' p' → logprob: -1.7014217376708984
    3. '<p' → logprob: -14.076421737670898
    4. ' ' → logprob: -14.201421737670898
    5. '   ' → logprob: -14.201421737670898
    6. ' ' → logprob: -14.388921737670898
    7. '`' → logprob: -14.388921737670898
    8. '+p' → logprob: -14.576421737670898
    9. '	p' → logprob: -14.888921737670898
    10. '_p' → logprob: -14.951421737670898

Token 63: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.500001907348633
    3. ' [' → logprob: -16.000001907348633
    4. '\[' → logprob: -16.750001907348633
    5. 'i' → logprob: -17.375001907348633
    6. '[I' → logprob: -17.500001907348633
    7. '[++' → logprob: -18.125001907348633
    8. '[(' → logprob: -18.875001907348633
    9. '[j' → logprob: -19.000001907348633
    10. '[
' → logprob: -19.250001907348633

Token 64: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.726595241460018e-05
    2. ' +' → logprob: -10.25003719329834
    3. '+]' → logprob: -14.12503719329834
    4. '-' → logprob: -14.37503719329834
    5. '+)' → logprob: -16.000038146972656
    6. '1' → logprob: -16.125038146972656
    7. '+
' → logprob: -16.375038146972656
    8. ']+' → logprob: -16.375038146972656
    9. ']' → logprob: -16.750038146972656
    10. '＋' → logprob: -17.375038146972656

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. ']' → logprob: -11.50001049041748
    3. ' ' → logprob: -14.87501049041748
    4. '])' → logprob: -18.625011444091797
    5. '0' → logprob: -19.500011444091797
    6. '2' → logprob: -19.500011444091797
    7. ']>' → logprob: -19.625011444091797
    8. '+' → logprob: -20.000011444091797
    9. '۱' → logprob: -20.000011444091797
    10. '１' → logprob: -20.125011444091797

Token 66: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.959636033978313e-05
    2. ')
' → logprob: -9.750089645385742
    3. '   ' → logprob: -11.250089645385742
    4. ' )' → logprob: -11.500089645385742
    5. '):' → logprob: -12.625089645385742
    6. '）' → logprob: -13.750089645385742
    7. ':' → logprob: -14.000089645385742
    8. '`)' → logprob: -14.375089645385742
    9. '')' → logprob: -14.875089645385742
    10. ' ' → logprob: -14.875089645385742

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06618427485227585
    2. '
' → logprob: -2.9411842823028564
    3. '<|end|>' → logprob: -5.316184043884277
    4. '    
' → logprob: -6.191184043884277
    5. '  
' → logprob: -6.566184043884277
    6. '```' → logprob: -7.191184043884277
    7. ' 
' → logprob: -7.441184043884277
    8. '   
' → logprob: -7.941184043884277
    9. '<|end|>' → logprob: -8.191184043884277
    10. ' if' → logprob: -8.191184043884277

Token 68: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11480245739221573
    2. 'if' (adapté à ' if') → logprob: -2.489802360534668
    3. ' if' → logprob: -3.739802360534668
    4. '
' → logprob: -7.864802360534668
    5. '    
' → logprob: -7.864802360534668
    6. '    ' → logprob: -8.489802360534668
    7. ' ' → logprob: -8.614802360534668
    8. '<|end|>' → logprob: -9.239802360534668
    9. '	if' → logprob: -9.489802360534668
    10. '  ' → logprob: -9.489802360534668

Token 69: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9599582552909851
    2. ' a' → logprob: -1.7099583148956299
    3. ' (' → logprob: -1.9599583148956299
    4. 'b' → logprob: -2.33495831489563
    5. ' b' → logprob: -2.33495831489563
    6. '(' → logprob: -2.83495831489563
    7. '(a' → logprob: -3.45995831489563
    8. '(b' → logprob: -5.584958076477051
    9. ' abs' → logprob: -5.709958076477051
    10. ' c' → logprob: -6.959958076477051

Token 70: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03572719171643257
    2. 'b' → logprob: -4.160727024078369
    3. ' a' → logprob: -4.535727024078369
    4. '(a' → logprob: -5.035727024078369
    5. ' (' → logprob: -6.910727024078369
    6. ' b' → logprob: -7.410727024078369
    7. '(b' → logprob: -8.410727500915527
    8. 'c' → logprob: -9.035727500915527
    9. '(' → logprob: -9.285727500915527
    10. '   ' → logprob: -9.410727500915527

Token 71: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6952937245368958
    2. '<' → logprob: -0.8202937245368958
    3. ' >' → logprob: -3.195293664932251
    4. '>' → logprob: -3.945293664932251
    5. ' +' → logprob: -8.695293426513672
    6. '+' → logprob: -9.070293426513672
    7. ' <=' → logprob: -9.945293426513672
    8. ' ' → logprob: -9.945293426513672
    9. '<=' → logprob: -11.070293426513672
    10. '-' → logprob: -11.445293426513672

Token 72: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5255646109580994
    2. 'b' → logprob: -0.9005646109580994
    3. ' c' → logprob: -6.400564670562744
    4. 'c' → logprob: -7.275564670562744
    5. ' ' → logprob: -10.025564193725586
    6. ' p' → logprob: -10.900564193725586
    7. 'p' → logprob: -11.025564193725586
    8. 'a' → logprob: -13.275564193725586
    9. ' a' → logprob: -13.713064193725586
    10. '	b' → logprob: -14.275564193725586

Token 73: ' <=' (ID: 5017)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12121401727199554
    2. ' <=' → logprob: -2.496213912963867
    3. 'and' → logprob: -3.871213912963867
    4. ' >=' → logprob: -4.996213912963867
    5. '<=' → logprob: -5.871213912963867
    6. '>=' → logprob: -7.246213912963867
    7. ' ' → logprob: -7.871213912963867
    8. ')' → logprob: -9.121213912963867
    9. ' ==' → logprob: -10.121213912963867
    10. ' >' → logprob: -10.496213912963867

Token 74: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.008620012551546097
    2. ' c' → logprob: -4.758619785308838
    3. ' ' → logprob: -12.383620262145996
    4. '	c' → logprob: -14.883620262145996
    5. '   ' → logprob: -15.008620262145996
    6. ' ' → logprob: -16.00861930847168
    7. ')c' → logprob: -16.00861930847168
    8. '  ' → logprob: -16.75861930847168
    9. '_c' → logprob: -17.00861930847168
    10. 'с' → logprob: -17.07111930847168

Token 75: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13521675765514374
    2. ' or' → logprob: -2.38521671295166
    3. ' )' → logprob: -3.38521671295166
    4. 'or' → logprob: -7.63521671295166
    5. ' and' → logprob: -10.51021671295166
    6. ' ' → logprob: -11.13521671295166
    7. '):' → logprob: -13.01021671295166
    8. '),' → logprob: -13.13521671295166
    9. ' ),' → logprob: -14.51021671295166
    10. ')==' → logprob: -14.63521671295166

Token 76: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00043805985478684306
    2. 'or' → logprob: -8.12543773651123
    3. ' ' → logprob: -9.00043773651123
    4. '   ' → logprob: -11.62543773651123
    5. '    ' → logprob: -12.62543773651123
    6. '	or' → logprob: -13.12543773651123
    7. ' and' → logprob: -13.37543773651123
    8. '  ' → logprob: -13.50043773651123
    9. ')' → logprob: -14.87543773651123
    10. ':' → logprob: -15.00043773651123

Token 77: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0033881450071930885
    2. '(' → logprob: -6.628387928009033
    3. '(b' → logprob: -6.878387928009033
    4. '(c' → logprob: -7.503387928009033
    5. '(a' → logprob: -7.753387928009033
    6. ' c' → logprob: -11.503388404846191
    7. ' ' → logprob: -11.628388404846191
    8. '   ' → logprob: -11.753388404846191
    9. ' b' → logprob: -11.878388404846191
    10. ' or' → logprob: -12.628388404846191

Token 78: 'c' (ID: 66)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02863822504878044
    2. 'c' → logprob: -3.7786381244659424
    3. ' a' → logprob: -5.2786383628845215
    4. ' c' → logprob: -8.403637886047363
    5. 'b' → logprob: -10.653637886047363
    6. '   ' → logprob: -10.903637886047363
    7. ' ' → logprob: -11.903637886047363
    8. '  ' → logprob: -13.653637886047363
    9. '    ' → logprob: -13.903637886047363
    10. '	a' → logprob: -14.653637886047363

Token 79: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.05614611878991127
    2. ' >=' → logprob: -3.5561461448669434
    3. '<=' → logprob: -3.6811461448669434
    4. '>=' → logprob: -7.181146144866943
    5. ' ' → logprob: -9.556145668029785
    6. ')' → logprob: -11.681145668029785
    7. '   ' → logprob: -12.431145668029785
    8. '  ' → logprob: -12.806145668029785
    9. ')<=' → logprob: -12.806145668029785
    10. '<|end|>' → logprob: -13.556145668029785

Token 80: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3868895173072815
    2. 'b' → logprob: -1.1368894577026367
    3. ' ' → logprob: -11.261889457702637
    4. '<|end|>' → logprob: -13.136889457702637
    5. ')b' → logprob: -14.261889457702637
    6. 'a' → logprob: -14.261889457702637
    7. ' a' → logprob: -14.636889457702637
    8. '	b' → logprob: -14.886889457702637
    9. ')' → logprob: -15.261889457702637
    10. '>b' → logprob: -15.386889457702637

Token 81: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03445430472493172
    2. '<=' → logprob: -3.784454345703125
    3. ')' → logprob: -4.659454345703125
    4. ' )' → logprob: -7.409454345703125
    5. ')<=' → logprob: -7.534454345703125
    6. '):' → logprob: -8.409454345703125
    7. '):
' → logprob: -8.784454345703125
    8. ' ' → logprob: -9.784454345703125
    9. '):

' → logprob: -10.409454345703125
    10. ' ):
' → logprob: -10.409454345703125

Token 82: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.038042064756155014
    2. ' a' → logprob: -3.2880420684814453
    3. '	a' → logprob: -14.913042068481445
    4. ' ' → logprob: -15.163042068481445
    5. ')' → logprob: -18.538042068481445
    6. ')a' → logprob: -19.038042068481445
    7. '   ' → logprob: -19.288042068481445
    8. 'b' → logprob: -19.538042068481445
    9. '  ' → logprob: -19.538042068481445
    10. '<|end|>' → logprob: -19.788042068481445

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0033248113468289375
    2. ')' → logprob: -6.25332498550415
    3. '):
' → logprob: -7.12832498550415
    4. ':' → logprob: -8.003324508666992
    5. ' ):' → logprob: -8.628324508666992
    6. '   ' → logprob: -9.503324508666992
    7. ' )' → logprob: -13.628324508666992
    8. '):
' → logprob: -13.753324508666992
    9. ' ):
' → logprob: -13.878324508666992
    10. '):

' → logprob: -15.003324508666992

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0071196649223566055
    2. '   ' → logprob: -5.007119655609131
    3. ' i' → logprob: -9.382120132446289
    4. '    ' → logprob: -9.632120132446289
    5. 'i' → logprob: -9.882120132446289
    6. ' ' → logprob: -10.132120132446289
    7. '        
' → logprob: -10.382120132446289
    8. ' counter' → logprob: -10.632120132446289
    9. '    
' → logprob: -10.882120132446289
    10. '\n' → logprob: -11.382120132446289

Token 85: ' counter' (ID: 9446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.533257007598877
    2. ' counter' → logprob: -1.783257007598877
    3. 'counter' (adapté à ' counter') → logprob: -2.283257007598877
    4. 'i' → logprob: -2.658257007598877
    5. ' i' → logprob: -2.908257007598877
    6. '       ' → logprob: -4.033257007598877
    7. '```' → logprob: -8.033256530761719
    8. '  ' → logprob: -9.283256530761719
    9. ' ' → logprob: -9.283256530761719
    10. '    ' → logprob: -9.408256530761719

Token 86: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.02644229494035244
    2. '+=' → logprob: -3.651442289352417
    3. '+' → logprob: -9.151442527770996
    4. ' ' → logprob: -11.151442527770996
    5. '=' → logprob: -11.901442527770996
    6. ' +' → logprob: -11.901442527770996
    7. '<|end|>' → logprob: -12.651442527770996
    8. ' =' → logprob: -12.901442527770996
    9. '++' → logprob: -14.526442527770996
    10. '+='' → logprob: -14.901442527770996

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003600071184337139
    2. ' ' → logprob: -5.628600120544434
    3. '0' → logprob: -17.503599166870117
    4. '2' → logprob: -18.003599166870117
    5. '   ' → logprob: -18.128599166870117
    6. '+' → logprob: -18.503599166870117
    7. '１' → logprob: -18.878599166870117
    8. '  ' → logprob: -19.441099166870117
    9. ' ' → logprob: -19.691099166870117
    10. '3' → logprob: -19.941099166870117

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '2' → logprob: -16.750001907348633
    4. '0' → logprob: -18.312501907348633
    5. '１' → logprob: -18.562501907348633
    6. '-' → logprob: -18.812501907348633
    7. '3' → logprob: -19.000001907348633
    8. 'a' → logprob: -19.125001907348633
    9. '+' → logprob: -19.437501907348633
    10. 'b' → logprob: -19.812501907348633

Token 89: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0327954925596714
    2. '
' → logprob: -3.7827954292297363
    3. '    
' → logprob: -5.282795429229736
    4. '\n' → logprob: -5.657795429229736
    5. ' 
' → logprob: -7.907795429229736
    6. '       ' → logprob: -8.782795906066895
    7. '  
' → logprob: -8.907795906066895
    8. ' i' → logprob: -9.907795906066895
    9. 'i' → logprob: -10.032795906066895
    10. '   
' → logprob: -10.407795906066895

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002228287048637867
    2. '    
' → logprob: -6.502228260040283
    3. '
' → logprob: -7.502228260040283
    4. 'i' → logprob: -9.877228736877441
    5. '\n' → logprob: -10.252228736877441
    6. '```' → logprob: -10.627228736877441
    7. ' i' → logprob: -10.877228736877441
    8. '  
' → logprob: -11.252228736877441
    9. ' 
' → logprob: -11.877228736877441
    10. '   
' → logprob: -12.252228736877441

Token 91: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27828702330589294
    2. ' i' → logprob: -1.5282870531082153
    3. 'i' (adapté à ' i') → logprob: -3.653286933898926
    4. '    
' → logprob: -10.278286933898926
    5. ' 
' → logprob: -10.903286933898926
    6. ' ' → logprob: -11.028286933898926
    7. '
' → logprob: -11.028286933898926
    8. '```' → logprob: -11.653286933898926
    9. '	i' → logprob: -12.278286933898926
    10. '       ' → logprob: -12.903286933898926

Token 92: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006634721648879349
    2. ' +' → logprob: -8.250663757324219
    3. '+=' → logprob: -8.500663757324219
    4. ' +=' → logprob: -8.875663757324219
    5. '++' → logprob: -9.875663757324219
    6. '+++' → logprob: -12.625663757324219
    7. ' ' → logprob: -12.750663757324219
    8. '=' → logprob: -14.625663757324219
    9. '<|end|>' → logprob: -15.125663757324219
    10. '1' → logprob: -16.00066375732422

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.625024795532227
    3. '2' → logprob: -15.250024795532227
    4. '3' → logprob: -18.375024795532227
    5. '```' → logprob: -19.750024795532227
    6. '4' → logprob: -19.875024795532227
    7. '   ' → logprob: -20.500024795532227
    8. '１' → logprob: -20.500024795532227
    9. '  ' → logprob: -20.750024795532227
    10. '۱' → logprob: -21.312524795532227

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '2' → logprob: -16.5
    4. '```' → logprob: -17.75
    5. '   ' → logprob: -19.9375
    6. '3' → logprob: -20.0625
    7. '１' → logprob: -20.125
    8. '۱' → logprob: -20.6875
    9. '  ' → logprob: -21.375
    10. '१' → logprob: -21.375

Token 95: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09001106023788452
    2. '
' → logprob: -2.4650111198425293
    3. 'if' → logprob: -7.215011119842529
    4. '<|end|>' → logprob: -9.215010643005371
    5. '\n' → logprob: -9.465010643005371
    6. '  
' → logprob: -9.965010643005371
    7. '
' → logprob: -10.715010643005371
    8. '```' → logprob: -10.965010643005371
    9. ' 
' → logprob: -11.340010643005371
    10. '    
' → logprob: -11.465010643005371

Token 96: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0023579292465001345
    2. '
' → logprob: -6.1273579597473145
    3. 'if' → logprob: -9.752357482910156
    4. '<|end|>' → logprob: -9.877357482910156
    5. '```' → logprob: -11.377357482910156
    6. ')' → logprob: -11.377357482910156
    7. '\n' → logprob: -11.877357482910156
    8. '  
' → logprob: -11.877357482910156
    9. '#' → logprob: -12.002357482910156
    10. 'p' → logprob: -12.627357482910156

Token 97: '(counter' (ID: 85625)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.474100261926651
    2. '(counter' → logprob: -0.9741002321243286
    3. '(c' → logprob: -11.474100112915039
    4. '((' → logprob: -12.474100112915039
    5. '()' → logprob: -12.974100112915039
    6. '('' → logprob: -13.724100112915039
    7. '(f' → logprob: -13.974100112915039
    8. ' (' → logprob: -14.224100112915039
    9. '(count' → logprob: -14.349100112915039
    10. '(`' → logprob: -14.599100112915039

Token 98: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.875
    3. ' )' → logprob: -16.0
    4. ')`' → logprob: -18.125
    5. '))' → logprob: -18.75
    6. '）' → logprob: -20.125
    7. '`)' → logprob: -20.375
    8. '')' → logprob: -20.625
    9. '```' → logprob: -21.375
    10. ')#' → logprob: -21.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 96
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 86
Précision stricte (1ère position): 40.62%
Précision adaptée (1ère position): 41.67%
Précision (top 10): 89.58%
================================================================================
