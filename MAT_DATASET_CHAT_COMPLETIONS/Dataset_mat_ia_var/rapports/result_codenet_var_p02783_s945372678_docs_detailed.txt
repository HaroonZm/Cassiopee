================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:27:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def turns_to_defeat_monster(H, A):
    """
    Calcule le nombre de tours nécessaires pour vaincre un monstre.
    
    Args:
        H (int): Points de vie initiaux du monstre.
        A (int): Nombre de points de dégâts infligés au monstre par tour.
        
    Returns:
        int: Nombre minimal de tours pour ramener les points de vie du monstre à zéro ou moins.
    """
    # Initialisation des points de vie courants du monstre
    HP = H
    # Initialisation du compteur de tours
    count = 0
    # Répéter tant que le monstre a des points de vie positifs
    while HP > 0:
        # Incrémentation du nombre de tours
        count += 1
        # Soustraction des dégâts à la vie courante du monstre
        HP -= A
    # Retourne le nombre de tours nécessaires
    return count

def main():
    """
    Fonction principale pour lire les entrées de l'utilisateur,
    appeler la fonction de calcul, et afficher le résultat.
    """
    # Lecture des deux entiers en entrée : H (points de vie), A (dégâts)
    H, A = map(int, input().split())
    # Appel de la fonction calculant le nombre de tours
    result = turns_to_defeat_monster(H, A)
    # Affiche le résultat
    print(result)

# Appel de la fonction principale si ce fichier est exécuté directement
if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' turns' (ID: 18304)
  → Token d'amorce (pas de prédiction)

Token 2: '_to' (ID: 5089)
  → Token d'amorce (pas de prédiction)

Token 3: '_def' (ID: 26756)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06200186535716057
    2. '_take' → logprob: -3.812001943588257
    3. '(' → logprob: -5.062001705169678
    4. '_return' → logprob: -5.437001705169678
    5. '_continue' → logprob: -5.562001705169678
    6. '_make' → logprob: -5.687001705169678
    7. '_keep' → logprob: -6.312001705169678
    8. '_turn' → logprob: -6.312001705169678
    9. '_cons' → logprob: -6.812001705169678
    10. '_taken' → logprob: -7.062001705169678

Token 4: 'eat' (ID: 100633)
  Prédit: 'ault'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ault' → logprob: -0.37402471899986267
    2. '(' → logprob: -1.749024748802185
    3. 'ine' → logprob: -2.2490246295928955
    4. 'ect' → logprob: -4.874024868011475
    5. 'inite' → logprob: -5.249024868011475
    6. 'inition' → logprob: -5.749024868011475
    7. '():' → logprob: -5.874024868011475
    8. 'er' → logprob: -5.999024868011475
    9. '_' → logprob: -5.999024868011475
    10. ' (' → logprob: -6.124024868011475

Token 5: '_mon' (ID: 80615)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008155536837875843
    2. '_' → logprob: -5.258155345916748
    3. '(:' → logprob: -6.758155345916748
    4. '(_' → logprob: -7.508155345916748
    5. '_:' → logprob: -7.883155345916748
    6. '(_:' → logprob: -8.508155822753906
    7. ':' → logprob: -9.133155822753906
    8. '():' → logprob: -9.258155822753906
    9. '(a' → logprob: -9.258155822753906
    10. ' (' → logprob: -9.758155822753906

Token 6: 'ster' (ID: 3968)
  Prédit: 'ster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ster' → logprob: -0.0008229722734540701
    2. 'sters' → logprob: -7.875823020935059
    3. '(' → logprob: -8.625823020935059
    4. 's' → logprob: -9.625823020935059
    5. 'st' → logprob: -10.125823020935059
    6. '_' → logprob: -10.375823020935059
    7. 'def' → logprob: -10.750823020935059
    8. 'star' → logprob: -10.875823020935059
    9. '```' → logprob: -11.000823020935059
    10. 'stre' → logprob: -11.250823020935059

Token 7: '(H' (ID: 20904)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008103981614112854
    2. '(:' → logprob: -5.508103847503662
    3. '_' → logprob: -5.883103847503662
    4. '():' → logprob: -7.258103847503662
    5. '_:' → logprob: -8.63310432434082
    6. '(_:' → logprob: -9.13310432434082
    7. ':' → logprob: -9.38310432434082
    8. '(_' → logprob: -10.00810432434082
    9. '(":' → logprob: -10.63310432434082
    10. '(a' → logprob: -11.00810432434082

Token 8: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3316076397895813
    2. 'e' → logprob: -1.7066075801849365
    3. ',' → logprob: -3.0816075801849365
    4. ')' → logprob: -3.2066075801849365
    5. '_' → logprob: -5.581607818603516
    6. 'a' → logprob: -5.831607818603516
    7. ' ):' → logprob: -6.081607818603516
    8. 'P' → logprob: -6.206607818603516
    9. 'E' → logprob: -7.331607818603516
    10. 'p' → logprob: -7.581607818603516

Token 9: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.8114320039749146
    2. 'A' → logprob: -1.3114320039749146
    3. ' D' → logprob: -2.061431884765625
    4. 'D' → logprob: -2.436431884765625
    5. ' M' → logprob: -4.061431884765625
    6. ' player' → logprob: -4.561431884765625
    7. 'M' → logprob: -4.936431884765625
    8. 'd' → logprob: -5.311431884765625
    9. ' damage' → logprob: -5.436431884765625
    10. ' a' → logprob: -5.936431884765625

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.056617092341184616
    2. ')' → logprob: -2.931617021560669
    3. ',' → logprob: -6.556617259979248
    4. ':' → logprob: -8.43161678314209
    5. '_' → logprob: -10.30661678314209
    6. '=' → logprob: -11.30661678314209
    7. '):
' → logprob: -11.93161678314209
    8. '*' → logprob: -11.93161678314209
    9. ' ):' → logprob: -12.05661678314209
    10. '```' → logprob: -12.05661678314209

Token 11: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12275006622076035
    2. '   ' → logprob: -2.3727500438690186
    3. '```' → logprob: -4.997750282287598
    4. ':
' → logprob: -5.497750282287598
    5. '():' → logprob: -5.497750282287598
    6. '):' → logprob: -6.997750282287598
    7. '':' → logprob: -6.997750282287598
    8. '":' → logprob: -6.997750282287598
    9. '(' → logprob: -7.247750282287598
    10. ' ' → logprob: -7.497750282287598

Token 12: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25902652740478516
    2. '```' → logprob: -2.134026527404785
    3. ' ' → logprob: -2.634026527404785
    4. '`' → logprob: -4.509026527404785
    5. ' ```' → logprob: -5.384026527404785
    6. '    ' → logprob: -5.759026527404785
    7. ' if' → logprob: -6.009026527404785
    8. ''' → logprob: -6.009026527404785
    9. '_' → logprob: -6.134026527404785
    10. 'i' → logprob: -6.259026527404785

Token 13: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.426474690437317
    2. 'r' → logprob: -1.426474690437317
    3. ' \' → logprob: -2.0514745712280273
    4. ' ' → logprob: -2.4264745712280273
    5. 'return' → logprob: -3.4264745712280273
    6. 'i' → logprob: -3.6764745712280273
    7. '   ' → logprob: -3.8014745712280273
    8. '"""' → logprob: -3.8014745712280273
    9. 't' → logprob: -4.051474571228027
    10. ')' → logprob: -4.051474571228027

Token 14: ' Cal' (ID: 4453)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.4890693724155426
    2. 'Calcul' → logprob: -1.9890693426132202
    3. '"""' → logprob: -2.1140694618225098
    4. ' Calculate' → logprob: -3.1140694618225098
    5. ' Calculates' → logprob: -3.2390694618225098
    6. 'Returns' → logprob: -4.36406946182251
    7. '```' → logprob: -4.98906946182251
    8. ''''' → logprob: -4.98906946182251
    9. 'Number' → logprob: -5.11406946182251
    10. ' calculates' → logprob: -6.48906946182251

Token 15: 'cule' (ID: 45017)
  Prédit: 'culate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'culate' → logprob: -0.034681279212236404
    2. 'c' → logprob: -3.7846813201904297
    3. 'cul' → logprob: -4.53468132019043
    4. 'cula' → logprob: -8.78468132019043
    5. 'cu' → logprob: -8.90968132019043
    6. 'culated' → logprob: -9.40968132019043
    7. '```' → logprob: -9.53468132019043
    8. 'l' → logprob: -9.65968132019043
    9. '   ' → logprob: -10.40968132019043
    10. 'cular' → logprob: -10.65968132019043

Token 16: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007571246009320021
    2. 'r' → logprob: -5.007571220397949
    3. ' s' → logprob: -8.13257122039795
    4. 'te' → logprob: -8.25757122039795
    5. 'tes' → logprob: -9.25757122039795
    6. ' the' → logprob: -9.25757122039795
    7. 'z' → logprob: -11.13257122039795
    8. ' la' → logprob: -11.25757122039795
    9. '```' → logprob: -11.50757122039795
    10. '   ' → logprob: -11.63257122039795

Token 17: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.0015580703038722277
    2. 'nombre' → logprob: -7.376558303833008
    3. ' ' → logprob: -8.001558303833008
    4. '   ' → logprob: -8.501558303833008
    5. ' nombres' → logprob: -8.876558303833008
    6. '  ' → logprob: -9.001558303833008
    7. 's' → logprob: -9.876558303833008
    8. ' nomb' → logprob: -10.376558303833008
    9. ' number' → logprob: -11.001558303833008
    10. ' ' → logprob: -12.001558303833008

Token 18: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.15622025728225708
    2. ' ' → logprob: -2.7812201976776123
    3. '  ' → logprob: -3.1562201976776123
    4. ' d' → logprob: -4.031220436096191
    5. 's' → logprob: -4.406220436096191
    6. '_' → logprob: -5.531220436096191
    7. 'd' → logprob: -6.656220436096191
    8. ' ' → logprob: -6.656220436096191
    9. 'de' → logprob: -7.906220436096191
    10. '(s' → logprob: -7.906220436096191

Token 19: ' tours' (ID: 32603)
  Prédit: ' tours'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tours' → logprob: -0.1045241430401802
    2. ' ' → logprob: -2.4795241355895996
    3. ' t' → logprob: -5.6045241355896
    4. 't' → logprob: -5.6045241355896
    5. ' tour' → logprob: -5.6045241355896
    6. ' coups' → logprob: -7.2295241355896
    7. ' turns' → logprob: -7.3545241355896
    8. 'tour' → logprob: -7.4795241355896
    9. ' fois' → logprob: -8.104524612426758
    10. 'fois' → logprob: -8.354524612426758

Token 20: ' nécessaires' (ID: 74402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2811527252197266
    2. ' nécessaires' → logprob: -1.6561527252197266
    3. ' ' → logprob: -1.7811527252197266
    4. '  ' → logprob: -2.1561527252197266
    5. 's' → logprob: -2.1561527252197266
    6. ' nécessaire' → logprob: -3.4061527252197266
    7. '    ' → logprob: -3.7811527252197266
    8. ' necesarios' → logprob: -4.281152725219727
    9. ' necessary' → logprob: -4.281152725219727
    10. ' needed' → logprob: -4.531152725219727

Token 21: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6496121287345886
    2. '   ' → logprob: -1.1496121883392334
    3. ' pour' → logprob: -2.5246121883392334
    4. '  ' → logprob: -3.5246121883392334
    5. '_' → logprob: -4.399611949920654
    6. ' to' → logprob: -4.649611949920654
    7. '    ' → logprob: -5.149611949920654
    8. 'pour' → logprob: -5.149611949920654
    9. ' for' → logprob: -5.649611949920654
    10. ')' → logprob: -6.149611949920654

Token 22: ' vain' (ID: 34253)
  Prédit: ' vain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vain' → logprob: -0.6564642190933228
    2. '   ' → logprob: -1.5314642190933228
    3. ' battre' → logprob: -2.281464099884033
    4. ' terr' → logprob: -2.531464099884033
    5. 'b' → logprob: -3.781464099884033
    6. 'vain' → logprob: -4.281464099884033
    7. ' tuer' → logprob: -4.531464099884033
    8. ' que' → logprob: -4.656464099884033
    9. 'def' → logprob: -5.406464099884033
    10. '_' → logprob: -5.656464099884033

Token 23: 'cre' (ID: 894)
  Prédit: 'cre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cre' → logprob: -1.2233183042553719e-05
    2. 'c' → logprob: -11.500012397766113
    3. 'qu' → logprob: -14.625012397766113
    4. 'cra' → logprob: -15.000012397766113
    5. '**' → logprob: -15.500012397766113
    6. 'que' → logprob: -15.750012397766113
    7. 'Cre' → logprob: -16.000011444091797
    8. 'cr' → logprob: -16.500011444091797
    9. 'dre' → logprob: -16.625011444091797
    10. 'q' → logprob: -16.750011444091797

Token 24: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5857619643211365
    2. ' le' → logprob: -1.2107620239257812
    3. 'le' → logprob: -3.5857620239257812
    4. '_' → logprob: -3.8357620239257812
    5. ' un' → logprob: -3.8357620239257812
    6. 'l' → logprob: -3.9607620239257812
    7. 's' → logprob: -4.710762023925781
    8. ')' → logprob: -4.960762023925781
    9. 'n' → logprob: -5.460762023925781
    10. ''' → logprob: -5.585762023925781

Token 25: ' mon' (ID: 1767)
  Prédit: ' mon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mon' → logprob: -0.10276760905981064
    2. ' monster' → logprob: -3.8527677059173584
    3. ' advers' → logprob: -3.9777677059173584
    4. ' monst' → logprob: -4.352767467498779
    5. ' ' → logprob: -4.477767467498779
    6. 'mon' → logprob: -5.352767467498779
    7. ' ' → logprob: -5.602767467498779
    8. ' мон' → logprob: -5.852767467498779
    9. ' monstr' → logprob: -6.102767467498779
    10. ' enn' → logprob: -6.102767467498779

Token 26: 'stre' (ID: 26826)
  Prédit: 'stre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.1839447319507599
    2. 's' → logprob: -1.9339447021484375
    3. 'st' → logprob: -3.8089447021484375
    4. '   ' → logprob: -7.8089447021484375
    5. 'ster' → logprob: -8.933944702148438
    6. 'ste' → logprob: -9.308944702148438
    7. 'n' → logprob: -9.683944702148438
    8. '     ' → logprob: -9.808944702148438
    9. '\' → logprob: -9.808944702148438
    10. '\s' → logprob: -9.808944702148438

Token 27: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.313244104385376
    2. ',' → logprob: -1.438244104385376
    3. '.' → logprob: -1.813244104385376
    4. ':' → logprob: -2.813244104385376
    5. '\n' → logprob: -3.188244104385376
    6. ' en' → logprob: -3.438244104385376
    7. '\' → logprob: -3.563244104385376
    8. ' ' → logprob: -3.688244104385376
    9. ' (' → logprob: -3.938244104385376
    10. '(' → logprob: -3.938244104385376

Token 28: '    
' (ID: 1944)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2586709260940552
    2. '   ' → logprob: -2.3836708068847656
    3. '```' → logprob: -3.0086708068847656
    4. '"""
' → logprob: -4.133670806884766
    5. '
' → logprob: -4.633670806884766
    6. '\' → logprob: -4.633670806884766
    7. '"""' → logprob: -4.883670806884766
    8. '"\' → logprob: -5.008670806884766
    9. ')' → logprob: -5.133670806884766
    10. 'n' → logprob: -5.383670806884766

Token 29: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7662111520767212
    2. '   ' → logprob: -1.3912111520767212
    3. ')' → logprob: -2.1412110328674316
    4. ' ' → logprob: -2.8912110328674316
    5. ' 
' → logprob: -3.8912110328674316
    6. '"""' → logprob: -4.016211032867432
    7. ' """' → logprob: -4.141211032867432
    8. ' )' → logprob: -4.391211032867432
    9. ' \' → logprob: -4.891211032867432
    10. '```' → logprob: -5.141211032867432

Token 30: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7395756840705872
    2. ' return' → logprob: -1.3645756244659424
    3. 'return' → logprob: -2.8645756244659424
    4. 'n' → logprob: -2.9895756244659424
    5. ' """' → logprob: -3.2395756244659424
    6. ' Le' → logprob: -3.4895756244659424
    7. ' """
' → logprob: -4.1145758628845215
    8. ' n' → logprob: -4.7395758628845215
    9. '"""' → logprob: -4.7395758628845215
    10. '```' → logprob: -5.1145758628845215

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0056761503219604
    2. '(H' → logprob: -1.1306761503219604
    3. '   ' → logprob: -2.00567626953125
    4. ' :' → logprob: -2.63067626953125
    5. ',' → logprob: -3.63067626953125
    6. ')' → logprob: -4.00567626953125
    7. '):' → logprob: -4.13067626953125
    8. ' (' → logprob: -4.50567626953125
    9. '```' → logprob: -4.63067626953125
    10. ' H' → logprob: -4.88067626953125

Token 32: '       ' (ID: 309)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.6906368732452393
    2. '   ' → logprob: -0.9406368732452393
    3. '       ' → logprob: -3.6906368732452393
    4. '    ' → logprob: -3.8156368732452393
    5. ' monster' → logprob: -4.19063663482666
    6. 'H' → logprob: -4.31563663482666
    7. '```' → logprob: -4.81563663482666
    8. ' self' → logprob: -5.31563663482666
    9. ')' → logprob: -5.81563663482666
    10. ' ' → logprob: -5.81563663482666

Token 33: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -0.660467267036438
    2. ' H' → logprob: -1.410467267036438
    3. ' player' → logprob: -2.9104671478271484
    4. 'player' → logprob: -3.4104671478271484
    5. 'monster' → logprob: -3.4104671478271484
    6. ' monster' → logprob: -3.5354671478271484
    7. ' hero' → logprob: -4.035467147827148
    8. 'self' → logprob: -4.285467147827148
    9. 'hero' → logprob: -4.285467147827148
    10. '   ' → logprob: -4.910467147827148

Token 34: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.18258576095104218
    2. ' :' → logprob: -2.5575857162475586
    3. ':' → logprob: -2.6825857162475586
    4. ',' → logprob: -4.807585716247559
    5. '(int' → logprob: -4.932585716247559
    6. '   ' → logprob: -6.432585716247559
    7. '):' → logprob: -6.682585716247559
    8. ':int' → logprob: -6.807585716247559
    9. ')' → logprob: -7.557585716247559
    10. ' ,' → logprob: -8.182585716247559

Token 35: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.18002475798130035
    2. ' int' → logprob: -1.8050247430801392
    3. '   ' → logprob: -8.805025100708008
    4. ')' → logprob: -10.305025100708008
    5. ',' → logprob: -11.305025100708008
    6. ',int' → logprob: -11.305025100708008
    7. ':int' → logprob: -11.555025100708008
    8. '[int' → logprob: -11.680025100708008
    9. '):' → logprob: -11.805025100708008
    10. '```' → logprob: -11.930025100708008

Token 36: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.430759459733963
    2. ')' → logprob: -1.0557594299316406
    3. ',' → logprob: -6.930759429931641
    4. ' ):' → logprob: -7.430759429931641
    5. '   ' → logprob: -8.68075942993164
    6. ' )' → logprob: -9.30575942993164
    7. '),' → logprob: -9.93075942993164
    8. ':' → logprob: -10.05575942993164
    9. '):
' → logprob: -10.18075942993164
    10. 'int' → logprob: -11.55575942993164

Token 37: ' Points' (ID: 38086)
  Prédit: ' La'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.6053147315979004
    2. ' Points' → logprob: -1.3553147315979004
    3. ' Le' → logprob: -1.8553147315979004
    4. 'La' → logprob: -4.9803147315979
    5. ' Vie' → logprob: -5.1053147315979
    6. ' L' → logprob: -5.2303147315979
    7. ' points' → logprob: -5.3553147315979
    8. 'Points' → logprob: -5.7303147315979
    9. ' The' → logprob: -5.8553147315979
    10. 'Le' → logprob: -6.1053147315979

Token 38: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.46240633726119995
    2. '<|end|>' → logprob: -2.2124063968658447
    3. '_de' → logprob: -2.3374063968658447
    4. ' d' → logprob: -3.0874063968658447
    5. 'de' → logprob: -3.8374063968658447
    6. 'd' → logprob: -3.9624063968658447
    7. '   ' → logprob: -3.9624063968658447
    8. '_d' → logprob: -4.462406158447266
    9. 'def' → logprob: -4.587406158447266
    10. '_' → logprob: -4.587406158447266

Token 39: ' vie' (ID: 8585)
  Prédit: 'vie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vie' → logprob: -0.16072264313697815
    2. ' vie' → logprob: -1.9107226133346558
    3. ' ' → logprob: -8.660722732543945
    4. 'v' → logprob: -9.285722732543945
    5. '```' → logprob: -9.285722732543945
    6. 'pv' → logprob: -10.035722732543945
    7. ' santé' → logprob: -10.660722732543945
    8. 's' → logprob: -11.535722732543945
    9. 'vict' → logprob: -11.660722732543945
    10. 'attaque' → logprob: -12.160722732543945

Token 40: ' init' (ID: 6327)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.6022491455078125
    2. 'rest' → logprob: -1.9772491455078125
    3. '_rest' → logprob: -2.3522491455078125
    4. '   ' → logprob: -2.4772491455078125
    5. ')' → logprob: -2.6022491455078125
    6. ' du' → logprob: -3.7272491455078125
    7. ',' → logprob: -4.4772491455078125
    8. '_' → logprob: -5.1022491455078125
    9. ' )' → logprob: -5.6022491455078125
    10. 'du' → logprob: -5.9772491455078125

Token 41: 'iaux' (ID: 35231)
  Prédit: 'iaux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iaux' → logprob: -0.003044143319129944
    2. 'aux' → logprob: -6.128044128417969
    3. '   ' → logprob: -7.878044128417969
    4. 'i' → logprob: -9.378044128417969
    5. 'ia' → logprob: -9.503044128417969
    6. '```' → logprob: -9.878044128417969
    7. '**' → logprob: -10.628044128417969
    8. 'ra' → logprob: -10.753044128417969
    9. '##' → logprob: -10.878044128417969
    10. ' ' → logprob: -10.878044128417969

Token 42: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.7290461659431458
    2. ')' → logprob: -1.104046106338501
    3. '   ' → logprob: -2.229046106338501
    4. ' )' → logprob: -2.979046106338501
    5. ' ' → logprob: -5.35404634475708
    6. 'rest' → logprob: -5.85404634475708
    7. 'du' → logprob: -5.97904634475708
    8. ' de' → logprob: -6.10404634475708
    9. '```' → logprob: -6.35404634475708
    10. ' rest' → logprob: -6.35404634475708

Token 43: ' mon' (ID: 1767)
  Prédit: ' mon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mon' → logprob: -0.38856473565101624
    2. ' ' → logprob: -1.2635647058486938
    3. 'mon' → logprob: -3.6385648250579834
    4. ' monster' → logprob: -5.138564586639404
    5. ' m' → logprob: -6.138564586639404
    6. ' ' → logprob: -6.513564586639404
    7. '```' → logprob: -6.888564586639404
    8. ' мон' → logprob: -7.888564586639404
    9. ' monst' → logprob: -8.138565063476562
    10. ' monstr' → logprob: -8.388565063476562

Token 44: 'stre' (ID: 26826)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0038070916198194027
    2. 'stre' → logprob: -6.378807067871094
    3. 'st' → logprob: -7.003807067871094
    4. 'str' → logprob: -8.128807067871094
    5. 't' → logprob: -8.253807067871094
    6. 'e' → logprob: -8.503807067871094
    7. 'o' → logprob: -9.253807067871094
    8. '#' → logprob: -10.003807067871094
    9. 'ś' → logprob: -10.378807067871094
    10. '\' → logprob: -10.628807067871094

Token 45: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07080819457769394
    2. '   ' → logprob: -3.820808172225952
    3. '```' → logprob: -3.945808172225952
    4. ',' → logprob: -4.070808410644531
    5. '\n' → logprob: -5.945808410644531
    6. ')
' → logprob: -6.070808410644531
    7. '\' → logprob: -6.570808410644531
    8. ',
' → logprob: -6.945808410644531
    9. ' )' → logprob: -7.695808410644531
    10. '"""' → logprob: -8.320808410644531

Token 46: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4808817505836487
    2. '\n' → logprob: -1.480881690979004
    3. '```' → logprob: -3.105881690979004
    4. ')' → logprob: -3.230881690979004
    5. '\' → logprob: -4.230881690979004
    6. ''\' → logprob: -4.855881690979004
    7. '    
' → logprob: -5.105881690979004
    8. ' 
' → logprob: -5.230881690979004
    9. ''' → logprob: -5.230881690979004
    10. '    ' → logprob: -5.355881690979004

Token 47: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.6609972715377808
    2. 'A' (adapté à ' A') → logprob: -0.7859972715377808
    3. '   ' → logprob: -3.7859973907470703
    4. '    ' → logprob: -5.78599739074707
    5. '       ' → logprob: -6.66099739074707
    6. ' ' → logprob: -8.28599739074707
    7. '```' → logprob: -9.16099739074707
    8. '  ' → logprob: -9.41099739074707
    9. '"""' → logprob: -9.97349739074707
    10. ' `' → logprob: -10.09849739074707

Token 48: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0017112360801547766
    2. '(int' → logprob: -6.501711368560791
    3. ')' → logprob: -8.626710891723633
    4. '):' → logprob: -10.876710891723633
    5. '   ' → logprob: -13.001710891723633
    6. ' ' → logprob: -13.251710891723633
    7. '```' → logprob: -13.251710891723633
    8. ' :' → logprob: -14.251710891723633
    9. '):
' → logprob: -14.251710891723633
    10. ' )' → logprob: -14.376710891723633

Token 49: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00023691373644396663
    2. ' int' → logprob: -8.375236511230469
    3. ')' → logprob: -12.125236511230469
    4. '[int' → logprob: -15.000236511230469
    5. '(int' → logprob: -16.37523651123047
    6. ',int' → logprob: -16.75023651123047
    7. ':int' → logprob: -16.75023651123047
    8. '=int' → logprob: -16.75023651123047
    9. ']int' → logprob: -17.00023651123047
    10. '   ' → logprob: -17.12523651123047

Token 50: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003995053935796022
    2. ' ):' → logprob: -5.878994941711426
    3. ')' → logprob: -6.753994941711426
    4. ':' → logprob: -11.253994941711426
    5. ' :' → logprob: -12.378994941711426
    6. '):
' → logprob: -13.628994941711426
    7. ' )' → logprob: -13.628994941711426
    8. ',' → logprob: -13.753994941711426
    9. '   ' → logprob: -13.753994941711426
    10. '):

' → logprob: -15.503994941711426

Token 51: ' Nombre' (ID: 70208)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.625440239906311
    2. ' D' → logprob: -1.625440239906311
    3. ' Points' → logprob: -2.6254401206970215
    4. ' dégâts' → logprob: -3.2504401206970215
    5. 'Points' → logprob: -3.6254401206970215
    6. ' deg' → logprob: -4.1254401206970215
    7. ' points' → logprob: -4.1254401206970215
    8. 'points' → logprob: -4.1254401206970215
    9. 'd' → logprob: -4.3754401206970215
    10. ' Pu' → logprob: -4.5004401206970215

Token 52: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3364042043685913
    2. 'de' → logprob: -1.5864042043685913
    3. ' d' → logprob: -3.086404323577881
    4. '_de' → logprob: -3.836404323577881
    5. 'd' → logprob: -4.711404323577881
    6. '_' → logprob: -5.961404323577881
    7. ' ' → logprob: -7.586404323577881
    8. '_d' → logprob: -7.711404323577881
    9. ')' → logprob: -7.836404323577881
    10. 'def' → logprob: -8.461403846740723

Token 53: ' points' (ID: 5571)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.43281519412994385
    2. ' dégâts' → logprob: -1.5578151941299438
    3. ' points' → logprob: -2.1828150749206543
    4. ' d' → logprob: -5.182815074920654
    5. ' attaques' → logprob: -5.307815074920654
    6. 'points' → logprob: -5.432815074920654
    7. 'atta' → logprob: -5.557815074920654
    8. ' dommages' → logprob: -5.557815074920654
    9. 'deg' → logprob: -6.307815074920654
    10. ' dég' → logprob: -6.307815074920654

Token 54: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5765194892883301
    2. ' d' → logprob: -1.32651948928833
    3. ' de' → logprob: -1.82651948928833
    4. 'de' → logprob: -4.57651948928833
    5. '_d' → logprob: -7.95151948928833
    6. ' dégâts' → logprob: -7.95151948928833
    7. ' ' → logprob: -8.451519012451172
    8. '_de' → logprob: -9.201519012451172
    9. '   ' → logprob: -9.201519012451172
    10. ' ' → logprob: -9.826519012451172

Token 55: ' dégâts' (ID: 195715)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1635614037513733
    2. 'attaque' → logprob: -2.5385613441467285
    3. ' dégâts' → logprob: -2.7885613441467285
    4. 'dom' → logprob: -5.4135613441467285
    5. 'deg' → logprob: -6.2885613441467285
    6. ' attaque' → logprob: -6.7885613441467285
    7. 'dé' → logprob: -7.0385613441467285
    8. ' dég' → logprob: -7.1635613441467285
    9. ' dommages' → logprob: -8.163561820983887
    10. ' dommage' → logprob: -8.413561820983887

Token 56: ' infl' (ID: 5732)
  Prédit: ' infl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' infl' → logprob: -0.2929133474826813
    2. 'infl' → logprob: -1.5429133176803589
    3. '   ' → logprob: -4.292913436889648
    4. ')' → logprob: -4.917913436889648
    5. '_' → logprob: -5.042913436889648
    6. ' inflicted' → logprob: -5.792913436889648
    7. ' )' → logprob: -5.917913436889648
    8. ' que' → logprob: -6.792913436889648
    9. ' ' → logprob: -7.167913436889648
    10. 's' → logprob: -7.292913436889648

Token 57: 'ig' (ID: 343)
  Prédit: 'ig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ig' → logprob: -0.4228363633155823
    2. 'u' → logprob: -1.1728363037109375
    3. 'a' → logprob: -4.2978363037109375
    4. '   ' → logprob: -4.9228363037109375
    5. 'uent' → logprob: -6.0478363037109375
    6. 'iger' → logprob: -6.1728363037109375
    7. 'ige' → logprob: -6.6728363037109375
    8. 'uer' → logprob: -6.6728363037109375
    9. 'iges' → logprob: -7.4228363037109375
    10. 'e' → logprob: -7.5478363037109375

Token 58: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0072158994153141975
    2. 'er' → logprob: -5.632215976715088
    3. 'es' → logprob: -6.257215976715088
    4. 'é' → logprob: -6.632215976715088
    5. 'e' → logprob: -8.63221549987793
    6. 's' → logprob: -9.00721549987793
    7. 'ées' → logprob: -11.00721549987793
    8. 'ès' → logprob: -11.38221549987793
    9. '   ' → logprob: -11.63221549987793
    10. 'ent' → logprob: -11.88221549987793

Token 59: ' au' (ID: 2791)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2357906699180603
    2. ' )' → logprob: -1.735790729522705
    3. ' par' → logprob: -3.985790729522705
    4. ' à' → logprob: -5.235790729522705
    5. 'par' → logprob: -5.610790729522705
    6. ' au' → logprob: -6.235790729522705
    7. '   ' → logprob: -6.235790729522705
    8. ' ' → logprob: -7.360790729522705
    9. ' chaque' → logprob: -7.860790729522705
    10. 'au' → logprob: -8.235790252685547

Token 60: ' mon' (ID: 1767)
  Prédit: ' mon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mon' → logprob: -0.11868339031934738
    2. 'mon' → logprob: -2.243683338165283
    3. ' monster' → logprob: -5.618683338165283
    4. ' ' → logprob: -7.868683338165283
    5. ' ' → logprob: -7.993683338165283
    6. 'monster' → logprob: -8.118683815002441
    7. ' мон' → logprob: -8.243683815002441
    8. '   ' → logprob: -8.618683815002441
    9. '(mon' → logprob: -9.243683815002441
    10. ' monst' → logprob: -9.431183815002441

Token 61: 'stre' (ID: 26826)
  Prédit: 'stre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.0379953607916832
    2. 's' → logprob: -3.6629953384399414
    3. 'st' → logprob: -4.912995338439941
    4. 'ster' → logprob: -7.225495338439941
    5. '```' → logprob: -7.600495338439941
    6. '#' → logprob: -8.225495338439941
    7. 'tre' → logprob: -8.662995338439941
    8. 'str' → logprob: -8.725495338439941
    9. '   ' → logprob: -8.725495338439941
    10. 'e' → logprob: -8.787995338439941

Token 62: ' par' (ID: 686)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.047053318470716476
    2. ' par' → logprob: -3.547053337097168
    3. ').' → logprob: -5.297053337097168
    4. ' )' → logprob: -5.797053337097168
    5. '):
' → logprob: -6.172053337097168
    6. '   ' → logprob: -6.172053337097168
    7. 'par' → logprob: -6.547053337097168
    8. ')
' → logprob: -7.047053337097168
    9. ' chaque' → logprob: -7.047053337097168
    10. '):' → logprob: -7.297053337097168

Token 63: ' tour' (ID: 6970)
  Prédit: ' tour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tour' → logprob: -0.49317657947540283
    2. ' un' → logprob: -2.4931764602661133
    3. 'tour' → logprob: -2.6181764602661133
    4. ' chaque' → logprob: -2.6181764602661133
    5. ' le' → logprob: -3.1181764602661133
    6. ' l' → logprob: -3.4931764602661133
    7. ' ' → logprob: -3.7431764602661133
    8. ' une' → logprob: -4.493176460266113
    9. 'le' → logprob: -4.868176460266113
    10. 'l' → logprob: -5.243176460266113

Token 64: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5405386090278625
    2. '   ' → logprob: -1.2905385494232178
    3. '):
' → logprob: -2.9155385494232178
    4. '):' → logprob: -2.9155385494232178
    5. ').' → logprob: -3.5405385494232178
    6. ')
' → logprob: -6.290538787841797
    7. '.' → logprob: -6.540538787841797
    8. '):

' → logprob: -7.540538787841797
    9. ').
' → logprob: -8.165538787841797
    10. 'def' → logprob: -8.790538787841797

Token 65: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5531758069992065
    2. ')' → logprob: -0.9281758069992065
    3. '"""' → logprob: -3.928175926208496
    4. '"""
' → logprob: -5.428175926208496
    5. '\n' → logprob: -6.053175926208496
    6. '    
' → logprob: -7.428175926208496
    7. '"' → logprob: -7.678175926208496
    8. '\' → logprob: -7.928175926208496
    9. '"\' → logprob: -7.928175926208496
    10. '```' → logprob: -8.428175926208496

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008006307296454906
    2. ')' → logprob: -5.5080060958862305
    3. '
' → logprob: -6.6330060958862305
    4. '"""' → logprob: -6.7580060958862305
    5. '    
' → logprob: -7.2580060958862305
    6. '"""
' → logprob: -8.38300609588623
    7. '```' → logprob: -8.88300609588623
    8. '\n' → logprob: -9.38300609588623
    9. 'Returns' → logprob: -9.63300609588623
    10. '  
' → logprob: -10.00800609588623

Token 67: ' Returns' (ID: 9609)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Returns' (adapté à ' Returns') → logprob: -0.12432187795639038
    2. '   ' → logprob: -2.499321937561035
    3. '"""' → logprob: -4.374321937561035
    4. '"""
' → logprob: -4.499321937561035
    5. ' Returns' → logprob: -4.874321937561035
    6. 'returns' → logprob: -6.874321937561035
    7. ')' → logprob: -6.874321937561035
    8. 'Return' → logprob: -7.499321937561035
    9. '""' → logprob: -8.749321937561035
    10. 'return' → logprob: -8.874321937561035

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4514773488044739
    2. ' :' → logprob: -1.076477289199829
    3. '<|end|>' → logprob: -4.451477527618408
    4. ' int' → logprob: -5.576477527618408
    5. ':int' → logprob: -6.076477527618408
    6. 'int' → logprob: -6.451477527618408
    7. ' ' → logprob: -7.576477527618408
    8. '   ' → logprob: -7.826477527618408
    9. '<|end|>' → logprob: -7.826477527618408
    10. '):' → logprob: -7.951477527618408

Token 69: '       ' (ID: 309)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.02310989797115326
    2. '   ' → logprob: -4.1481099128723145
    3. 'int' → logprob: -5.1481099128723145
    4. '    ' → logprob: -7.0231099128723145
    5. '       ' → logprob: -8.398109436035156
    6. ' (' → logprob: -10.398109436035156
    7. '(int' → logprob: -10.773109436035156
    8. ' ' → logprob: -10.898109436035156
    9. ' ' → logprob: -11.523109436035156
    10. '	int' → logprob: -11.648109436035156

Token 70: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.10067944973707199
    2. ' int' → logprob: -2.350679397583008
    3. '   ' → logprob: -7.725679397583008
    4. '       ' → logprob: -10.975679397583008
    5. '(int' → logprob: -11.600679397583008
    6. '```' → logprob: -13.850679397583008
    7. 'Int' → logprob: -14.600679397583008
    8. ' (' → logprob: -14.725679397583008
    9. 'Le' → logprob: -14.725679397583008
    10. '	int' → logprob: -14.725679397583008

Token 71: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002837087959051132
    2. ' :' → logprob: -6.502837181091309
    3. '   ' → logprob: -6.752837181091309
    4. ':
' → logprob: -10.002837181091309
    5. ':return' → logprob: -10.627837181091309
    6. '```' → logprob: -10.752837181091309
    7. '):' → logprob: -11.002837181091309
    8. ')' → logprob: -11.377837181091309
    9. '"""' → logprob: -11.502837181091309
    10. 'The' → logprob: -12.502837181091309

Token 72: ' Nombre' (ID: 70208)
  Prédit: ' Le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Le' → logprob: -0.22079318761825562
    2. ' le' → logprob: -2.4707932472229004
    3. ' (' → logprob: -2.9707932472229004
    4. 'Le' → logprob: -3.8457932472229004
    5. ' nombre' → logprob: -3.9707932472229004
    6. '   ' → logprob: -4.2207932472229
    7. ' Nombre' → logprob: -5.9707932472229
    8. '    ' → logprob: -6.8457932472229
    9. ' number' → logprob: -6.9707932472229
    10. ' H' → logprob: -7.3457932472229

Token 73: ' minimal' (ID: 19957)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0009465920156799257
    2. '_' → logprob: -8.000946998596191
    3. 'de' → logprob: -8.500946998596191
    4. ' ' → logprob: -8.750946998596191
    5. '_de' → logprob: -9.875946998596191
    6. ' ' → logprob: -9.875946998596191
    7. ' total' → logprob: -10.375946998596191
    8. ' d' → logprob: -10.375946998596191
    9. ' nécessaire' → logprob: -10.375946998596191
    10. '   ' → logprob: -11.375946998596191

Token 74: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0017666933126747608
    2. '    ' → logprob: -7.876766681671143
    3. ' ' → logprob: -8.0017671585083
    4. '   ' → logprob: -8.1267671585083
    5. '_' → logprob: -8.2517671585083
    6. 'de' → logprob: -8.5017671585083
    7. '_de' → logprob: -9.3767671585083
    8. '  ' → logprob: -9.5017671585083
    9. ' nécessaire' → logprob: -9.7517671585083
    10. ' complet' → logprob: -10.5017671585083

Token 75: ' tours' (ID: 32603)
  Prédit: ' tours'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tours' → logprob: -0.10142377763986588
    2. 't' → logprob: -2.351423740386963
    3. ' t' → logprob: -7.851423740386963
    4. ' ' → logprob: -7.976423740386963
    5. 'tour' → logprob: -9.226424217224121
    6. ' turns' → logprob: -9.351424217224121
    7. ' ' → logprob: -9.726424217224121
    8. 'turn' → logprob: -9.851424217224121
    9. ' tour' → logprob: -10.351424217224121
    10. '_t' → logprob: -10.601424217224121

Token 76: ' pour' (ID: 1930)
  Prédit: ' nécessaires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nécessaires' → logprob: -0.44857174158096313
    2. '   ' → logprob: -1.0735716819763184
    3. ' nécessaire' → logprob: -4.448571681976318
    4. ' pour' → logprob: -5.698571681976318
    5. '    ' → logprob: -5.948571681976318
    6. '    
' → logprob: -7.573571681976318
    7. ' necess' → logprob: -7.948571681976318
    8. ' ' → logprob: -8.573572158813477
    9. '  ' → logprob: -8.948572158813477
    10. ' necesarios' → logprob: -8.948572158813477

Token 77: ' ram' (ID: 20920)
  Prédit: ' vain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vain' → logprob: -0.22091180086135864
    2. 'vain' → logprob: -1.9709117412567139
    3. ' le' → logprob: -4.220911979675293
    4. ' battre' → logprob: -4.595911979675293
    5. '   ' → logprob: -4.970911979675293
    6. ' tuer' → logprob: -5.345911979675293
    7. 'b' → logprob: -5.470911979675293
    8. ' terr' → logprob: -6.095911979675293
    9. 'v' → logprob: -6.220911979675293
    10. '_' → logprob: -6.720911979675293

Token 78: 'ener' (ID: 944)
  Prédit: 'ener'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ener' → logprob: -4.751746746478602e-05
    2. 'enir' → logprob: -10.62504768371582
    3. '
' → logprob: -12.00004768371582
    4. 'en' → logprob: -13.12504768371582
    5. 'e' → logprob: -13.25004768371582
    6. 'er' → logprob: -13.25004768371582
    7. 'enez' → logprob: -13.62504768371582
    8. '   ' → logprob: -13.75004768371582
    9. 'oner' → logprob: -13.75004768371582
    10. 'enar' → logprob: -13.75004768371582

Token 79: ' les' (ID: 1341)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.12771078944206238
    2. ' H' → logprob: -3.0027108192443848
    3. ' ' → logprob: -3.3777108192443848
    4. 'le' → logprob: -3.6277108192443848
    5. ' à' → logprob: -5.002710819244385
    6. ' a' → logprob: -7.252710819244385
    7. 'H' → logprob: -7.377710819244385
    8. ' au' → logprob: -7.877710819244385
    9. ' la' → logprob: -8.127710342407227
    10. '   ' → logprob: -8.627710342407227

Token 80: ' points' (ID: 5571)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.2202623188495636
    2. ' mon' → logprob: -1.9702622890472412
    3. ' H' → logprob: -4.22026252746582
    4. ' monster' → logprob: -4.72026252746582
    5. ' points' → logprob: -4.97026252746582
    6. 'monster' → logprob: -5.22026252746582
    7. '   ' → logprob: -5.34526252746582
    8. ' monst' → logprob: -5.34526252746582
    9. ' monstr' → logprob: -5.84526252746582
    10. 'H' → logprob: -6.09526252746582

Token 81: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4133710265159607
    2. '_de' → logprob: -1.2883710861206055
    3. '_' → logprob: -3.2883710861206055
    4. 'de' → logprob: -4.0383710861206055
    5. ' _' → logprob: -6.0383710861206055
    6. '   ' → logprob: -6.0383710861206055
    7. ' ' → logprob: -7.0383710861206055
    8. 'd' → logprob: -7.2883710861206055
    9. '_d' → logprob: -7.6633710861206055
    10. ' d' → logprob: -7.7883710861206055

Token 82: ' vie' (ID: 8585)
  Prédit: 'vie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vie' → logprob: -0.03130253776907921
    2. ' vie' → logprob: -3.5313024520874023
    3. ' ' → logprob: -6.781302452087402
    4. 'vict' → logprob: -9.281302452087402
    5. 'mon' → logprob: -10.031302452087402
    6. '   ' → logprob: -10.281302452087402
    7. 'v' → logprob: -10.281302452087402
    8. '```' → logprob: -10.531302452087402
    9. 'vue' → logprob: -10.781302452087402
    10. '  ' → logprob: -10.968802452087402

Token 83: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.17016269266605377
    2. ' à' → logprob: -2.1701626777648926
    3. 'du' → logprob: -3.7951626777648926
    4. '   ' → logprob: -4.295162677764893
    5. 'à' → logprob: -5.795162677764893
    6. ' ' → logprob: -6.795162677764893
    7. ' au' → logprob: -8.04516315460205
    8. 'au' → logprob: -8.17016315460205
    9. '    ' → logprob: -8.42016315460205
    10. '  ' → logprob: -8.79516315460205

Token 84: ' mon' (ID: 1767)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.06473195552825928
    2. ' mon' → logprob: -2.814732074737549
    3. 'monster' → logprob: -6.564732074737549
    4. ' monster' → logprob: -6.939732074737549
    5. 'mons' → logprob: -9.31473159790039
    6. ' мон' → logprob: -9.68973159790039
    7. ' monstr' → logprob: -9.81473159790039
    8. ' monst' → logprob: -10.06473159790039
    9. 'm' → logprob: -10.81473159790039
    10. '(mon' → logprob: -11.06473159790039

Token 85: 'stre' (ID: 26826)
  Prédit: 'stre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.006849996279925108
    2. 'st' → logprob: -5.756849765777588
    3. 's' → logprob: -6.756849765777588
    4. 'tre' → logprob: -7.256849765777588
    5. '   ' → logprob: -8.381850242614746
    6. 'ster' → logprob: -8.819350242614746
    7. '
' → logprob: -9.006850242614746
    8. '>' → logprob: -9.256850242614746
    9. '```' → logprob: -9.631850242614746
    10. ' ' → logprob: -9.881850242614746

Token 86: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.06345789134502411
    2. 'à' → logprob: -3.43845796585083
    3. '   ' → logprob: -3.93845796585083
    4. 'a' → logprob: -5.31345796585083
    5. ' a' → logprob: -6.06345796585083
    6. ' ' → logprob: -7.43845796585083
    7. 'au' → logprob: -7.56345796585083
    8. ' au' → logprob: -8.063457489013672
    9. ''à' → logprob: -8.438457489013672
    10. '0' → logprob: -8.688457489013672

Token 87: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13303503394126892
    2. ' ' → logprob: -2.1330349445343018
    3. 'z' → logprob: -6.258035182952881
    4. ' au' → logprob: -6.633035182952881
    5. ' zéro' → logprob: -6.633035182952881
    6. ' z' → logprob: -7.508035182952881
    7. 'au' → logprob: -7.758035182952881
    8. '   ' → logprob: -8.008034706115723
    9. ' zero' → logprob: -9.383034706115723
    10. '  ' → logprob: -10.508034706115723

Token 88: ' ou' (ID: 2031)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.6484662294387817
    2. ' ou' → logprob: -1.3984662294387817
    3. '.' → logprob: -2.273466110229492
    4. ')' → logprob: -2.523466110229492
    5. '   ' → logprob: -3.523466110229492
    6. '}' → logprob: -5.273466110229492
    7. ' ' → logprob: -5.773466110229492
    8. ' or' → logprob: -6.148466110229492
    9. '  ' → logprob: -6.648466110229492
    10. '```' → logprob: -7.273466110229492

Token 89: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.49725136160850525
    2. ' moins' → logprob: -1.9972513914108276
    3. ' en' → logprob: -2.247251272201538
    4. 'en' → logprob: -2.247251272201538
    5. 'less' → logprob: -3.622251272201538
    6. 'au' → logprob: -5.872251510620117
    7. 'inf' → logprob: -5.997251510620117
    8. 'below' → logprob: -6.122251510620117
    9. '0' → logprob: -6.497251510620117
    10. 'f' → logprob: -6.622251510620117

Token 90: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16959086060523987
    2. '.' → logprob: -2.044590950012207
    3. '
' → logprob: -4.294590950012207
    4. '.
' → logprob: -4.794590950012207
    5. '\n' → logprob: -6.419590950012207
    6. ')' → logprob: -6.544590950012207
    7. '    
' → logprob: -7.919590950012207
    8. 'def' → logprob: -8.544590950012207
    9. '"""' → logprob: -8.544590950012207
    10. ':' → logprob: -8.794590950012207

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15402919054031372
    2. '"""' → logprob: -2.279029130935669
    3. ')' → logprob: -4.529029369354248
    4. '
' → logprob: -4.654029369354248
    5. '"""
' → logprob: -4.904029369354248
    6. '\n' → logprob: -5.279029369354248
    7. '""' → logprob: -5.779029369354248
    8. '```' → logprob: -6.779029369354248
    9. '    
' → logprob: -7.029029369354248
    10. '"\' → logprob: -7.154029369354248

Token 92: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04938739165663719
    2. '
' → logprob: -3.7993874549865723
    3. ')' → logprob: -4.424387454986572
    4. '\n' → logprob: -4.799387454986572
    5. '"""' → logprob: -6.174387454986572
    6. '    
' → logprob: -6.549387454986572
    7. '```' → logprob: -7.549387454986572
    8. ':' → logprob: -8.299386978149414
    9. '\' → logprob: -8.549386978149414
    10. 'n' → logprob: -8.799386978149414

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0056303516030311584
    2. '
' → logprob: -5.5056304931640625
    3. '    
' → logprob: -6.6306304931640625
    4. 'n' → logprob: -9.505630493164062
    5. '    ' → logprob: -10.130630493164062
    6. '\n' → logprob: -10.255630493164062
    7. ' 
' → logprob: -10.880630493164062
    8. ' return' → logprob: -11.005630493164062
    9. '```' → logprob: -11.255630493164062
    10. 'return' → logprob: -11.380630493164062

Token 94: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1538997888565063
    2. 'return' → logprob: -1.2788997888565063
    3. ' return' → logprob: -2.028899669647217
    4. '   ' → logprob: -2.028899669647217
    5. ' if' → logprob: -2.903899669647217
    6. 'if' → logprob: -3.028899669647217
    7. ' import' → logprob: -3.403899669647217
    8. 'turn' → logprob: -6.153899669647217
    9. 'from' → logprob: -6.153899669647217
    10. ' from' → logprob: -6.903899669647217

Token 95: ' Initial' (ID: 9209)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2966194152832031
    2. ' if' → logprob: -1.5466194152832031
    3. ' return' → logprob: -1.5466194152832031
    4. 'import' → logprob: -2.171619415283203
    5. ' import' → logprob: -2.421619415283203
    6. 'return' → logprob: -3.671619415283203
    7. 'if' → logprob: -4.046619415283203
    8. 't' → logprob: -4.421619415283203
    9. ' max' → logprob: -4.671619415283203
    10. ' turns' → logprob: -5.421619415283203

Token 96: 'isation' (ID: 6993)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3255331516265869
    2. '   ' → logprob: -1.325533151626587
    3. 'al' → logprob: -6.325532913208008
    4. '_count' → logprob: -6.950532913208008
    5. 'ized' → logprob: -7.200532913208008
    6. 'ization' → logprob: -7.325532913208008
    7. 'ize' → logprob: -7.450532913208008
    8. '    ' → logprob: -7.575532913208008
    9. 'ialize' → logprob: -7.575532913208008
    10. 'izer' → logprob: -7.700532913208008

Token 97: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2653343677520752
    2. '    
' → logprob: -2.765334367752075
    3. ' 
' → logprob: -3.015334367752075
    4. ' return' → logprob: -3.640334367752075
    5. '    ' → logprob: -3.890334367752075
    6. 'n' → logprob: -3.890334367752075
    7. ' ' → logprob: -5.015334129333496
    8. '   
' → logprob: -5.265334129333496
    9. '  
' → logprob: -5.515334129333496
    10. 'return' → logprob: -5.515334129333496

Token 98: ' points' (ID: 5571)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.25887349247932434
    2. 'turn' → logprob: -2.133873462677002
    3. ' tours' → logprob: -3.133873462677002
    4. 'import' → logprob: -3.258873462677002
    5. ' turns' → logprob: -4.383873462677002
    6. 'tour' → logprob: -5.258873462677002
    7. ' import' → logprob: -6.258873462677002
    8. ' t' → logprob: -6.383873462677002
    9. 'result' → logprob: -7.008873462677002
    10. ' ' → logprob: -7.008873462677002

Token 99: ' de' (ID: 334)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.026097074151039124
    2. '_' → logprob: -4.401097297668457
    3. ' de' → logprob: -5.526097297668457
    4. 'de' → logprob: -5.526097297668457
    5. '   ' → logprob: -5.901097297668457
    6. '_rest' → logprob: -7.026097297668457
    7. 'def' → logprob: -7.151097297668457
    8. '_v' → logprob: -7.401097297668457
    9. '    
' → logprob: -9.776097297668457
    10. 'rest' → logprob: -9.901097297668457

Token 100: ' vie' (ID: 8585)
  Prédit: 'vie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vie' → logprob: -0.010891360230743885
    2. ' vie' → logprob: -4.760891437530518
    3. 'tour' → logprob: -7.885891437530518
    4. 'vict' → logprob: -7.885891437530518
    5. 'v' → logprob: -8.13589096069336
    6. ' ' → logprob: -8.26089096069336
    7. ' tours' → logprob: -8.63589096069336
    8. 'vic' → logprob: -9.13589096069336
    9. 'vue' → logprob: -9.26089096069336
    10. 'd' → logprob: -9.26089096069336

Token 101: ' cour' (ID: 2871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018287835642695427
    2. ' remaining' → logprob: -5.143287658691406
    3. 'remaining' → logprob: -5.768287658691406
    4. 'mon' → logprob: -6.393287658691406
    5. '    
' → logprob: -6.768287658691406
    6. ' current' → logprob: -6.893287658691406
    7. ' hp' → logprob: -7.018287658691406
    8. ' rest' → logprob: -7.393287658691406
    9. 'current' → logprob: -7.768287658691406
    10. 'rest' → logprob: -7.893287658691406

Token 102: 'ants' (ID: 2027)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.5507262349128723
    2. 'ent' → logprob: -1.8007261753082275
    3. 'ants' → logprob: -2.1757261753082275
    4. '   ' → logprob: -2.9257261753082275
    5. 'ant' → logprob: -3.0507261753082275
    6. 'u' → logprob: -4.300726413726807
    7. 'r' → logprob: -4.425726413726807
    8. 'ur' → logprob: -5.550726413726807
    9. 'urent' → logprob: -6.050726413726807
    10. 'rent' → logprob: -6.050726413726807

Token 103: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5701875686645508
    2. ' current' → logprob: -1.1951875686645508
    3. 'current' → logprob: -2.570187568664551
    4. '    
' → logprob: -3.695187568664551
    5. ' hp' → logprob: -4.445187568664551
    6. '
' → logprob: -5.820187568664551
    7. '   
' → logprob: -6.320187568664551
    8. ' h' → logprob: -6.570187568664551
    9. 'curr' → logprob: -6.695187568664551
    10. ' monster' → logprob: -6.695187568664551

Token 104: ' mon' (ID: 1767)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.03465629741549492
    2. ' mon' → logprob: -3.534656286239624
    3. 'monster' → logprob: -5.659656524658203
    4. ' monster' → logprob: -7.409656524658203
    5. ' мон' → logprob: -8.784656524658203
    6. ' H' → logprob: -9.159656524658203
    7. 'mo' → logprob: -9.409656524658203
    8. '```' → logprob: -9.472156524658203
    9. ' monst' → logprob: -9.659656524658203
    10. 'mons' → logprob: -9.784656524658203

Token 105: 'stre' (ID: 26826)
  Prédit: 'stre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.18150971829891205
    2. 's' → logprob: -1.9315097332000732
    3. 'st' → logprob: -5.056509494781494
    4. 'ster' → logprob: -5.056509494781494
    5. 'str' → logprob: -5.806509494781494
    6. '   ' → logprob: -6.306509494781494
    7. ''s' → logprob: -7.681509494781494
    8. 'e' → logprob: -7.806509494781494
    9. 'stru' → logprob: -8.056509971618652
    10. '#' → logprob: -8.306509971618652

Token 106: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.734614372253418
    2. ' current' → logprob: -1.234614372253418
    3. 'current' → logprob: -1.859614372253418
    4. ' hp' → logprob: -3.859614372253418
    5. '    
' → logprob: -4.234614372253418
    6. '
' → logprob: -4.734614372253418
    7. ' monster' → logprob: -5.484614372253418
    8. 'mon' → logprob: -5.734614372253418
    9. 'hp' → logprob: -5.984614372253418
    10. ' 
' → logprob: -6.109614372253418

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09244643151760101
    2. ' current' → logprob: -2.9674463272094727
    3. 'current' → logprob: -3.7174463272094727
    4. ' hp' → logprob: -5.217446327209473
    5. '    
' → logprob: -6.217446327209473
    6. '
' → logprob: -6.967446327209473
    7. 'curr' → logprob: -7.467446327209473
    8. ' curr' → logprob: -7.592446327209473
    9. 'hp' → logprob: -7.592446327209473
    10. '    ' → logprob: -7.842446327209473

Token 108: ' HP' (ID: 21979)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.5049942135810852
    2. 'current' → logprob: -1.1299941539764404
    3. ' hp' → logprob: -3.7549941539764404
    4. 'hp' → logprob: -4.0049943923950195
    5. '   ' → logprob: -4.3799943923950195
    6. ' remaining' → logprob: -5.0049943923950195
    7. 'remaining' → logprob: -5.6299943923950195
    8. 'health' → logprob: -6.5049943923950195
    9. 'curr' → logprob: -6.5049943923950195
    10. ' health' → logprob: -6.6299943923950195

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04679546132683754
    2. '_' → logprob: -3.42179536819458
    3. '_current' → logprob: -5.42179536819458
    4. '_act' → logprob: -5.54679536819458
    5. '=' → logprob: -6.17179536819458
    6. '_c' → logprob: -6.42179536819458
    7. '_rest' → logprob: -8.046795845031738
    8. '_curr' → logprob: -8.046795845031738
    9. '_cur' → logprob: -8.921795845031738
    10. '_remaining' → logprob: -9.671795845031738

Token 110: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.3132685124874115
    2. ' H' → logprob: -1.3132685422897339
    3. '	H' → logprob: -12.563268661499023
    4. '   ' → logprob: -12.813268661499023
    5. ' ' → logprob: -15.063268661499023
    6. ' ' → logprob: -15.938268661499023
    7. '_H' → logprob: -16.313268661499023
    8. '(H' → logprob: -17.063268661499023
    9. ',H' → logprob: -17.313268661499023
    10. '<H' → logprob: -18.125768661499023

Token 111: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4851198196411133
    2. '   ' → logprob: -1.9851198196411133
    3. ' 
' → logprob: -2.1101198196411133
    4. '    
' → logprob: -3.2351198196411133
    5. ' ' → logprob: -3.7351198196411133
    6. ',' → logprob: -4.610119819641113
    7. '  
' → logprob: -4.735119819641113
    8. ' while' → logprob: -4.860119819641113
    9. ' if' → logprob: -5.485119819641113
    10. '-' → logprob: -5.610119819641113

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6497164964675903
    2. '
' → logprob: -0.8997164964675903
    3. '    
' → logprob: -2.899716377258301
    4. ' 
' → logprob: -5.024716377258301
    5. '' → logprob: -6.149716377258301
    6. '   
' → logprob: -6.649716377258301
    7. '  
' → logprob: -6.899716377258301
    8. '    ' → logprob: -7.024716377258301
    9. '\n' → logprob: -7.149716377258301
    10. ' ' → logprob: -7.149716377258301

Token 113: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06343227624893188
    2. ' if' → logprob: -4.188432216644287
    3. ' while' → logprob: -4.313432216644287
    4. '    
' → logprob: -4.563432216644287
    5. 'if' → logprob: -5.938432216644287
    6. ' 
' → logprob: -6.188432216644287
    7. 'while' → logprob: -6.188432216644287
    8. '    ' → logprob: -6.313432216644287
    9. ' return' → logprob: -6.438432216644287
    10. 'return' → logprob: -6.563432216644287

Token 114: ' Initial' (ID: 9209)
  Prédit: ' tours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tours' → logprob: -1.291192889213562
    2. 'import' → logprob: -1.916192889213562
    3. ' while' → logprob: -2.0411930084228516
    4. ' import' → logprob: -2.5411930084228516
    5. 'tour' → logprob: -2.5411930084228516
    6. 'turn' → logprob: -2.5411930084228516
    7. ' turns' → logprob: -3.1661930084228516
    8. ' tour' → logprob: -3.2911930084228516
    9. 'while' → logprob: -3.4161930084228516
    10. 't' → logprob: -4.041193008422852

Token 115: 'isation' (ID: 6993)
  Prédit: 'ization'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.20788611471652985
    2. 'isation' → logprob: -1.9578860998153687
    3. '   ' → logprob: -3.332886219024658
    4. 'izer' → logprob: -5.707886219024658
    5. '_' → logprob: -6.707886219024658
    6. 'iz' → logprob: -6.832886219024658
    7. 'ize' → logprob: -6.957886219024658
    8. 'ation' → logprob: -7.832886219024658
    9. ' =' → logprob: -7.957886219024658
    10. 'er' → logprob: -8.0828857421875

Token 116: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.7256043553352356
    2. ' des' → logprob: -0.9756043553352356
    3. ' d' → logprob: -2.225604295730591
    4. '   ' → logprob: -3.725604295730591
    5. ' of' → logprob: -6.10060453414917
    6. '    ' → logprob: -6.60060453414917
    7. ' de' → logprob: -6.85060453414917
    8. '  ' → logprob: -7.60060453414917
    9. 'du' → logprob: -8.225604057312012
    10. ' ' → logprob: -8.350604057312012

Token 117: ' compteur' (ID: 163344)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.749455451965332
    2. 'count' → logprob: -0.874455451965332
    3. 't' → logprob: -2.999455451965332
    4. 'counter' → logprob: -3.374455451965332
    5. ' count' → logprob: -4.499455451965332
    6. ' counter' → logprob: -5.749455451965332
    7. ' turns' → logprob: -5.999455451965332
    8. 'nombre' → logprob: -6.124455451965332
    9. 'number' → logprob: -6.374455451965332
    10. 'nb' → logprob: -6.874455451965332

Token 118: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.10346426069736481
    2. 'de' → logprob: -2.853464365005493
    3. '   ' → logprob: -4.228464126586914
    4. ' =' → logprob: -4.603464126586914
    5. ' des' → logprob: -5.478464126586914
    6. 't' → logprob: -6.353464126586914
    7. ' ' → logprob: -6.478464126586914
    8. '  ' → logprob: -6.978464126586914
    9. ' d' → logprob: -7.103464126586914
    10. '_de' → logprob: -7.103464126586914

Token 119: ' tours' (ID: 32603)
  Prédit: ' tours'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tours' → logprob: -0.358157217502594
    2. 't' → logprob: -1.2331571578979492
    3. ' turns' → logprob: -5.608157157897949
    4. 'turn' → logprob: -5.608157157897949
    5. 'tour' → logprob: -7.108157157897949
    6. ' t' → logprob: -7.233157157897949
    7. ' ' → logprob: -7.733157157897949
    8. ' tour' → logprob: -9.23315715789795
    9. ' coups' → logprob: -9.60815715789795
    10. ' ' → logprob: -10.73315715789795

Token 120: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04548369720578194
    2. 't' → logprob: -3.9204835891723633
    3. '    
' → logprob: -4.545483589172363
    4. '
' → logprob: -4.920483589172363
    5. 'n' → logprob: -6.045483589172363
    6. '    ' → logprob: -6.795483589172363
    7. '  ' → logprob: -7.295483589172363
    8. '  
' → logprob: -8.170483589172363
    9. '   
' → logprob: -8.420483589172363
    10. 's' → logprob: -8.545483589172363

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01766483671963215
    2. 't' → logprob: -5.017664909362793
    3. ' turns' → logprob: -6.392664909362793
    4. ' t' → logprob: -6.767664909362793
    5. '    
' → logprob: -6.892664909362793
    6. ' turn' → logprob: -7.142664909362793
    7. ' counter' → logprob: -7.142664909362793
    8. 'turn' → logprob: -7.267664909362793
    9. 'count' → logprob: -7.517664909362793
    10. ' count' → logprob: -7.642664909362793

Token 122: ' count' (ID: 3605)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.15779973566532135
    2. ' turns' → logprob: -2.03279972076416
    3. ' turn' → logprob: -5.40779972076416
    4. 't' → logprob: -5.40779972076416
    5. 'count' (adapté à ' count') → logprob: -5.65779972076416
    6. ' rounds' → logprob: -7.65779972076416
    7. '   ' → logprob: -8.03279972076416
    8. ' count' → logprob: -8.03279972076416
    9. 'counter' → logprob: -8.40779972076416
    10. ' ' → logprob: -8.40779972076416

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018269339576363564
    2. '_' → logprob: -4.2682695388793945
    3. '=' → logprob: -5.5182695388793945
    4. ' +=' → logprob: -10.268269538879395
    5. '   ' → logprob: -11.393269538879395
    6. '_space' → logprob: -11.643269538879395
    7. '  ' → logprob: -11.893269538879395
    8. 's' → logprob: -12.518269538879395
    9. 'space' → logprob: -12.643269538879395
    10. ' ' → logprob: -12.893269538879395

Token 124: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20160259306430817
    2. ' ' → logprob: -1.701602578163147
    3. '1' → logprob: -8.576602935791016
    4. ' ' → logprob: -14.201602935791016
    5. '   ' → logprob: -17.201602935791016
    6. '۰' → logprob: -17.951602935791016
    7. '	' → logprob: -18.014102935791016
    8. '  ' → logprob: -18.326602935791016
    9. '```' → logprob: -18.889102935791016
    10. ' ' → logprob: -19.264102935791016

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001238004770129919
    2. ' ' → logprob: -9.125123977661133
    3. '1' → logprob: -11.125123977661133
    4. '   ' → logprob: -16.125123977661133
    5. '```' → logprob: -16.875123977661133
    6. '  ' → logprob: -18.312623977661133
    7. ' ' → logprob: -18.437623977661133
    8. '۰' → logprob: -18.437623977661133
    9. '`' → logprob: -19.125123977661133
    10. 'int' → logprob: -19.500123977661133

Token 126: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5504778623580933
    2. '   ' → logprob: -1.0504778623580933
    3. '    
' → logprob: -3.050477981567383
    4. ' 
' → logprob: -4.425477981567383
    5. '\n' → logprob: -4.800477981567383
    6. '  
' → logprob: -5.800477981567383
    7. ' while' → logprob: -7.175477981567383
    8. '   
' → logprob: -7.425477981567383
    9. 'while' → logprob: -8.300477981567383
    10. '' → logprob: -8.550477981567383

Token 127: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6182336211204529
    2. '   ' → logprob: -0.8682336211204529
    3. '    
' → logprob: -3.8682336807250977
    4. ' 
' → logprob: -4.118233680725098
    5. '  
' → logprob: -6.368233680725098
    6. ' while' → logprob: -6.618233680725098
    7. '\n' → logprob: -7.868233680725098
    8. '   
' → logprob: -8.493233680725098
    9. 'while' → logprob: -9.243233680725098
    10. '     
' → logprob: -9.618233680725098

Token 128: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4109974503517151
    2. '   ' → logprob: -2.1609973907470703
    3. ' while' → logprob: -2.4109973907470703
    4. ' 
' → logprob: -2.5359973907470703
    5. '    
' → logprob: -3.6609973907470703
    6. 'while' → logprob: -4.03599739074707
    7. '\n' → logprob: -5.78599739074707
    8. '  
' → logprob: -5.78599739074707
    9. '   
' → logprob: -6.66099739074707
    10. '	while' → logprob: -8.03599739074707

Token 129: ' Ré' (ID: 27181)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.42891135811805725
    2. 'while' → logprob: -1.0539113283157349
    3. 'While' → logprob: -8.928911209106445
    4. '   ' → logprob: -10.178911209106445
    5. '	while' → logprob: -11.678911209106445
    6. ' While' → logprob: -11.803911209106445
    7. 'WH' → logprob: -12.303911209106445
    8. '    ' → logprob: -13.053911209106445
    9. ' 
' → logprob: -13.178911209106445
    10. ' WH' → logprob: -13.241411209106445

Token 130: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8502044677734375
    2. 'sum' → logprob: -2.1002044677734375
    3. 'al' → logprob: -2.7252044677734375
    4. 'du' → logprob: -2.8502044677734375
    5. 's' → logprob: -3.1002044677734375
    6. '   ' → logprob: -3.2252044677734375
    7. 'while' → logprob: -3.2252044677734375
    8. 'solution' → logprob: -3.3502044677734375
    9. 'duction' → logprob: -3.9752044677734375
    10. 'pé' → logprob: -4.2252044677734375

Token 131: 'éter' (ID: 73737)
  Prédit: 'éter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éter' → logprob: -0.6440872550010681
    2. 'eter' → logprob: -1.519087314605713
    3. 'et' → logprob: -1.769087314605713
    4. 'e' → logprob: -3.144087314605713
    5. 'é' → logprob: -4.019087314605713
    6. 'ete' → logprob: -4.519087314605713
    7. 'ét' → logprob: -5.269087314605713
    8. 'eteer' → logprob: -6.269087314605713
    9. '_' → logprob: -6.894087314605713
    10. 'eti' → logprob: -7.394087314605713

Token 132: ' tant' (ID: 16235)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5994006395339966
    2. ' while' → logprob: -0.8494006395339966
    3. '    ' → logprob: -5.099400520324707
    4. 'while' → logprob: -5.349400520324707
    5. '    
' → logprob: -5.349400520324707
    6. '	while' → logprob: -6.724400520324707
    7. '<|end|>' → logprob: -6.974400520324707
    8. '
' → logprob: -7.349400520324707
    9. 'While' → logprob: -7.599400520324707
    10. ':' → logprob: -7.724400520324707

Token 133: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.10075768828392029
    2. ' que' → logprob: -2.350757598876953
    3. 'qu' → logprob: -8.100757598876953
    4. '   ' → logprob: -8.350757598876953
    5. ' qu' → logprob: -11.725757598876953
    6. 'Que' → logprob: -14.100757598876953
    7. '#' → logprob: -14.600757598876953
    8. 'quoi' → logprob: -15.100757598876953
    9. 'fois' → logprob: -15.225757598876953
    10. 'tant' → logprob: -15.600757598876953

Token 134: ' le' (ID: 505)
  Prédit: ' HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' HP' → logprob: -0.002490641549229622
    2. 'HP' → logprob: -6.002490520477295
    3. '_HP' → logprob: -11.502490997314453
    4. ' ' → logprob: -12.627490997314453
    5. ' H' → logprob: -14.502490997314453
    6. ' ' → logprob: -15.127490997314453
    7. ' hp' → logprob: -15.502490997314453
    8. '   ' → logprob: -15.627490997314453
    9. ' Hp' → logprob: -15.877490997314453
    10. '  ' → logprob: -16.752490997314453

Token 135: ' mon' (ID: 1767)
  Prédit: ' HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' HP' → logprob: -0.18044961988925934
    2. 'HP' → logprob: -1.8054496049880981
    3. 'mon' → logprob: -7.930449485778809
    4. '_HP' → logprob: -8.680449485778809
    5. ' monster' → logprob: -10.055449485778809
    6. ' mon' → logprob: -10.180449485778809
    7. ' ' → logprob: -10.805449485778809
    8. 'hp' → logprob: -11.242949485778809
    9. 'monster' → logprob: -11.555449485778809
    10. '   ' → logprob: -11.805449485778809

Token 136: 'stre' (ID: 26826)
  Prédit: 'stre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.01308622770011425
    2. 'tre' → logprob: -4.513086318969727
    3. 'st' → logprob: -6.888086318969727
    4. 'ster' → logprob: -7.388086318969727
    5. 'ste' → logprob: -9.513086318969727
    6. 'str' → logprob: -10.388086318969727
    7. 'bre' → logprob: -10.388086318969727
    8. '>' → logprob: -10.513086318969727
    9. 're' → logprob: -10.638086318969727
    10. '#' → logprob: -10.888086318969727

Token 137: ' a' (ID: 261)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -1.2032246589660645
    2. ' a' → logprob: -1.3282246589660645
    3. 'a' → logprob: -1.8282246589660645
    4. ' HP' → logprob: -1.9532246589660645
    5. ' n' → logprob: -3.2032246589660645
    6. '>' → logprob: -4.0782246589660645
    7. '_HP' → logprob: -4.3282246589660645
    8. '   ' → logprob: -4.7032246589660645
    9. 'est' → logprob: -4.9532246589660645
    10. ' est' → logprob: -5.0782246589660645

Token 138: ' des' (ID: 731)
  Prédit: ' HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' HP' → logprob: -0.3589891493320465
    2. 'HP' → logprob: -1.6089891195297241
    3. ' des' → logprob: -3.3589892387390137
    4. '>' → logprob: -3.6089892387390137
    5. ' encore' → logprob: -4.483989238739014
    6. ' ' → logprob: -5.108989238739014
    7. ' un' → logprob: -5.108989238739014
    8. 's' → logprob: -5.983989238739014
    9. '_HP' → logprob: -5.983989238739014
    10. ' toujours' → logprob: -6.233989238739014

Token 139: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.034490931779146194
    2. 'points' → logprob: -3.7844908237457275
    3. ' HP' → logprob: -4.909491062164307
    4. 'HP' → logprob: -6.034491062164307
    5. '_points' → logprob: -7.659491062164307
    6. ' PV' → logprob: -8.409490585327148
    7. ' point' → logprob: -8.909490585327148
    8. 'PV' → logprob: -9.034490585327148
    9. ' ' → logprob: -9.159490585327148
    10. '>' → logprob: -10.034490585327148

Token 140: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0532938614487648
    2. 'de' → logprob: -3.0532939434051514
    3. '   ' → logprob: -5.428293704986572
    4. '_de' → logprob: -8.55329418182373
    5. '>' → logprob: -10.42829418182373
    6. ' <=' → logprob: -10.67829418182373
    7. 'def' → logprob: -11.42829418182373
    8. ' >' → logprob: -11.55329418182373
    9. ' ' → logprob: -11.67829418182373
    10. '  ' → logprob: -11.80329418182373

Token 141: ' vie' (ID: 8585)
  Prédit: 'vie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vie' → logprob: -0.000295420759357512
    2. ' vie' → logprob: -9.625295639038086
    3. '```' → logprob: -9.625295639038086
    4. 'vue' → logprob: -10.125295639038086
    5. 'vi' → logprob: -10.250295639038086
    6. 'v' → logprob: -10.250295639038086
    7. '   ' → logprob: -11.500295639038086
    8. 'vita' → logprob: -12.500295639038086
    9. 'vict' → logprob: -12.500295639038086
    10. 'vite' → logprob: -12.750295639038086

Token 142: ' posit' (ID: 13047)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.011045821942389011
    2. '>' → logprob: -4.636045932769775
    3. '   ' → logprob: -7.261045932769775
    4. ' >=' → logprob: -8.261045455932617
    5. ' >
' → logprob: -10.011045455932617
    6. ' ' → logprob: -10.011045455932617
    7. 'sup' → logprob: -10.386045455932617
    8. ' supérieur' → logprob: -10.636045455932617
    9. ' HP' → logprob: -10.761045455932617
    10. ' greater' → logprob: -10.761045455932617

Token 143: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.023950468748807907
    2. 'if' → logprob: -3.7739505767822266
    3. '   ' → logprob: -7.773950576782227
    4. 's' → logprob: -8.898950576782227
    5. 'fs' → logprob: -10.023950576782227
    6. '```' → logprob: -11.023950576782227
    7. ' if' → logprob: -11.148950576782227
    8. '#' → logprob: -11.273950576782227
    9. 'i' → logprob: -11.648950576782227
    10. 'ils' → logprob: -12.023950576782227

Token 144: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03077545203268528
    2. '
' → logprob: -4.280775547027588
    3. '    
' → logprob: -4.780775547027588
    4. ' while' → logprob: -5.655775547027588
    5. ' 
' → logprob: -6.155775547027588
    6. ':' → logprob: -7.405775547027588
    7. '  
' → logprob: -7.780775547027588
    8. '<|end|>' → logprob: -8.03077507019043
    9. '   
' → logprob: -8.15577507019043
    10. '    ' → logprob: -8.53077507019043

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034026000648736954
    2. '    
' → logprob: -4.409026145935059
    3. '
' → logprob: -4.534026145935059
    4. ' 
' → logprob: -4.909026145935059
    5. ' while' → logprob: -6.284026145935059
    6. '  
' → logprob: -7.784026145935059
    7. '\n' → logprob: -8.159026145935059
    8. '    ' → logprob: -8.534026145935059
    9. '   
' → logprob: -9.159026145935059
    10. '     
' → logprob: -9.409026145935059

Token 146: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48267480731010437
    2. ' while' → logprob: -1.1076748371124268
    3. '\n' → logprob: -4.107674598693848
    4. ' 
' → logprob: -4.357674598693848
    5. '
' → logprob: -4.482674598693848
    6. 'while' (adapté à ' while') → logprob: -5.357674598693848
    7. '    
' → logprob: -5.357674598693848
    8. '	while' → logprob: -7.357674598693848
    9. '\' → logprob: -7.482674598693848
    10. '  
' → logprob: -7.857674598693848

Token 147: ' HP' (ID: 21979)
  Prédit: ' HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' HP' → logprob: -0.008638443425297737
    2. 'HP' → logprob: -4.758638381958008
    3. '_HP' → logprob: -10.758638381958008
    4. ' ' → logprob: -13.508638381958008
    5. ' ' → logprob: -14.133638381958008
    6. ' H' → logprob: -14.883638381958008
    7. 'H' → logprob: -17.258638381958008
    8. '_hp' → logprob: -17.258638381958008
    9. ' Hp' → logprob: -17.258638381958008
    10. '  ' → logprob: -17.383638381958008

Token 148: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.02630273625254631
    2. '>' → logprob: -3.6513028144836426
    3. ' ' → logprob: -13.776302337646484
    4. ' ' → logprob: -14.401302337646484
    5. ')' → logprob: -14.651302337646484
    6. ' >

' → logprob: -16.401302337646484
    7. ' >
' → logprob: -17.026302337646484
    8. '   ' → logprob: -17.651302337646484
    9. '">' → logprob: -17.651302337646484
    10. ')>' → logprob: -17.776302337646484

Token 149: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005233763717114925
    2. ' ' → logprob: -5.2552337646484375
    3. ' ' → logprob: -19.255233764648438
    4. '۰' → logprob: -19.255233764648438
    5. '<|end|>' → logprob: -20.255233764648438
    6. '00' → logprob: -20.817733764648438
    7. '```' → logprob: -21.380233764648438
    8. 'zero' → logprob: -21.567733764648438
    9. '_' → logprob: -21.567733764648438
    10. '  ' → logprob: -21.692733764648438

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '۰' → logprob: -20.375003814697266
    4. '<|end|>' → logprob: -21.125003814697266
    5. '```' → logprob: -21.500003814697266
    6. 'zero' → logprob: -21.750003814697266
    7. '00' → logprob: -22.125003814697266
    8. '   ' → logprob: -23.250003814697266
    9. '০' → logprob: -23.500003814697266
    10. '０' → logprob: -23.625003814697266

Token 151: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00862414762377739
    2. ':
' → logprob: -4.758624076843262
    3. '   ' → logprob: -12.883624076843262
    4. ',' → logprob: -13.133624076843262
    5. ' :' → logprob: -13.258624076843262
    6. ':

' → logprob: -13.883624076843262
    7. '):' → logprob: -14.383624076843262
    8. '):
' → logprob: -14.633624076843262
    9. '       ' → logprob: -15.508624076843262
    10. ' :
' → logprob: -15.633624076843262

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009897274896502495
    2. '
' → logprob: -5.259897232055664
    3. ' count' → logprob: -6.134897232055664
    4. 'count' → logprob: -6.759897232055664
    5. '   ' → logprob: -7.259897232055664
    6. ' 
' → logprob: -8.634897232055664
    7. '        
' → logprob: -9.134897232055664
    8. '    ' → logprob: -9.759897232055664
    9. '    
' → logprob: -9.884897232055664
    10. '\n' → logprob: -9.884897232055664

Token 153: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8961212038993835
    2. 'count' → logprob: -1.0211212635040283
    3. ' count' → logprob: -2.1461212635040283
    4. ' HP' → logprob: -2.7711212635040283
    5. 'HP' → logprob: -3.5211212635040283
    6. '
' → logprob: -4.646121025085449
    7. '        
' → logprob: -5.271121025085449
    8. ' 
' → logprob: -6.021121025085449
    9. '        ' → logprob: -6.271121025085449
    10. '   ' → logprob: -7.521121025085449

Token 154: ' In' (ID: 730)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.07012683153152466
    2. ' HP' → logprob: -3.44512677192688
    3. 'count' → logprob: -3.44512677192688
    4. ' count' → logprob: -5.820127010345459
    5. '   ' → logprob: -7.820127010345459
    6. '       ' → logprob: -8.3201265335083
    7. 'damage' → logprob: -8.8201265335083
    8. 'd' → logprob: -10.5701265335083
    9. ' damage' → logprob: -10.5701265335083
    10. ' ' → logprob: -11.2576265335083

Token 155: 'cr' (ID: 798)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6388087868690491
    2. '   ' → logprob: -1.7638087272644043
    3. 'fl' → logprob: -1.7638087272644043
    4. 'crement' → logprob: -2.8888087272644043
    5. 'flater' → logprob: -4.763808727264404
    6. '  ' → logprob: -4.888808727264404
    7. 'HP' → logprob: -5.138808727264404
    8. '       ' → logprob: -5.263808727264404
    9. ' f' → logprob: -5.638808727264404
    10. 'CREMENT' → logprob: -5.701308727264404

Token 156: 'ément' (ID: 17645)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6879847049713135
    2. 'ément' → logprob: -1.6879847049713135
    3. 'rement' → logprob: -2.1879847049713135
    4. 'ement' → logprob: -2.3129847049713135
    5. 'count' → logprob: -3.3129847049713135
    6. 'é' → logprob: -3.6879847049713135
    7. '       ' → logprob: -4.187984466552734
    8. ' count' → logprob: -5.062984466552734
    9. 'ment' → logprob: -5.937984466552734
    10. '  ' → logprob: -5.937984466552734

Token 157: 'ation' (ID: 387)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.07282697409391403
    2. ' count' → logprob: -2.697826862335205
    3. 'count' → logprob: -5.947826862335205
    4. ' ' → logprob: -9.197827339172363
    5. ' ' → logprob: -10.197827339172363
    6. '   ' → logprob: -10.322827339172363
    7. '       ' → logprob: -10.322827339172363
    8. '(count' → logprob: -11.072827339172363
    9. ' compter' → logprob: -11.947827339172363
    10. 'e' → logprob: -12.072827339172363

Token 158: ' du' (ID: 1462)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.47419485449790955
    2. 'count' → logprob: -0.9741948843002319
    3. ' du' → logprob: -10.349194526672363
    4. '	count' → logprob: -10.974194526672363
    5. '(count' → logprob: -10.974194526672363
    6. '=count' → logprob: -11.349194526672363
    7. '<|end|>' → logprob: -11.724194526672363
    8. ' de' → logprob: -11.849194526672363
    9. '[count' → logprob: -12.224194526672363
    10. '       ' → logprob: -13.099194526672363

Token 159: ' nombre' (ID: 9733)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.12699288129806519
    2. ' count' → logprob: -2.12699294090271
    3. ' ' → logprob: -10.501993179321289
    4. ' compteur' → logprob: -11.626993179321289
    5. '1' → logprob: -11.751993179321289
    6. 'counter' → logprob: -12.001993179321289
    7. ' compte' → logprob: -12.876993179321289
    8. '	count' → logprob: -13.126993179321289
    9. ' ' → logprob: -13.626993179321289
    10. ' compter' → logprob: -13.814493179321289

Token 160: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0495925098657608
    2. '_de' → logprob: -4.6745924949646
    3. 'de' → logprob: -4.6745924949646
    4. ' count' → logprob: -4.7995924949646
    5. 'count' → logprob: -5.0495924949646
    6. ' ' → logprob: -6.0495924949646
    7. '    ' → logprob: -6.0495924949646
    8. ' des' → logprob: -6.1745924949646
    9. '_' → logprob: -6.2995924949646
    10. '   ' → logprob: -6.4245924949646

Token 161: ' tours' (ID: 32603)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6454709768295288
    2. ' count' → logprob: -1.1454709768295288
    3. ' ' → logprob: -2.0204710960388184
    4. ' tours' → logprob: -3.7704710960388184
    5. '  ' → logprob: -7.645471096038818
    6. ' ' → logprob: -8.27047061920166
    7. ' turns' → logprob: -8.27047061920166
    8. '	count' → logprob: -9.02047061920166
    9. 't' → logprob: -9.27047061920166
    10. 'turn' → logprob: -9.27047061920166

Token 162: '
' (ID: 198)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4931463599205017
    2. '       ' → logprob: -1.1181464195251465
    3. ' count' → logprob: -3.1181464195251465
    4. '
' → logprob: -4.4931464195251465
    5. ' 
' → logprob: -5.4931464195251465
    6. '        
' → logprob: -7.4931464195251465
    7. '<|end|>' → logprob: -7.7431464195251465
    8. '[count' → logprob: -7.8681464195251465
    9. '=count' → logprob: -7.9931464195251465
    10. '        ' → logprob: -8.118145942687988

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1200728714466095
    2. 'count' → logprob: -2.495072841644287
    3. ' count' → logprob: -3.495072841644287
    4. '   ' → logprob: -9.120073318481445
    5. ' 
' → logprob: -9.745073318481445
    6. '        
' → logprob: -10.370073318481445
    7. '	count' → logprob: -10.370073318481445
    8. '
' → logprob: -10.745073318481445
    9. ' ' → logprob: -11.995073318481445
    10. '1' → logprob: -11.995073318481445

Token 164: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.47408005595207214
    2. ' count' → logprob: -0.9740800857543945
    3. '	count' → logprob: -13.349080085754395
    4. '    ' → logprob: -15.099080085754395
    5. ' ' → logprob: -15.224080085754395
    6. '   ' → logprob: -15.224080085754395
    7. '_count' → logprob: -16.474079132080078
    8. '       ' → logprob: -16.724079132080078
    9. '.count' → logprob: -16.849079132080078
    10. 'c' → logprob: -16.974079132080078

Token 165: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0003815756645053625
    2. '+=' → logprob: -7.8753814697265625
    3. ' =' → logprob: -13.875381469726562
    4. '=' → logprob: -15.625381469726562
    5. '   ' → logprob: -15.625381469726562
    6. ' ' → logprob: -16.250381469726562
    7. '    ' → logprob: -17.375381469726562
    8. ' -=' → logprob: -17.375381469726562
    9. ' ' → logprob: -17.625381469726562
    10. ' +' → logprob: -17.625381469726562

Token 166: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08894165605306625
    2. ' ' → logprob: -2.4639415740966797
    3. ' A' → logprob: -13.33894157409668
    4. 'A' → logprob: -14.71394157409668
    5. '   ' → logprob: -16.71394157409668
    6. ' ' → logprob: -17.21394157409668
    7. '```' → logprob: -18.02644157409668
    8. '  ' → logprob: -18.58894157409668
    9. '１' → logprob: -18.58894157409668
    10. '    ' → logprob: -18.83894157409668

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -17.750003814697266
    4. 'A' → logprob: -18.437503814697266
    5. '```' → logprob: -19.000003814697266
    6. 'a' → logprob: -19.687503814697266
    7. '
' → logprob: -20.375003814697266
    8. '  ' → logprob: -20.500003814697266
    9. '１' → logprob: -20.562503814697266
    10. '۱' → logprob: -20.687503814697266

Token 168: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3975362181663513
    2. '
' → logprob: -1.147536277770996
    3. '        
' → logprob: -5.397536277770996
    4. '   ' → logprob: -6.647536277770996
    5. ' 
' → logprob: -6.772536277770996
    6. '\n' → logprob: -7.147536277770996
    7. '  
' → logprob: -7.647536277770996
    8. '    
' → logprob: -7.647536277770996
    9. ' HP' → logprob: -8.022536277770996
    10. 'HP' → logprob: -8.397536277770996

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06122869625687599
    2. ' 
' → logprob: -3.8112287521362305
    3. ' HP' → logprob: -4.4362287521362305
    4. '        
' → logprob: -4.6862287521362305
    5. '
' → logprob: -4.8112287521362305
    6. '   ' → logprob: -5.6862287521362305
    7. 'HP' → logprob: -6.0612287521362305
    8. '    
' → logprob: -7.5612287521362305
    9. '  
' → logprob: -7.9362287521362305
    10. '<|end|>' → logprob: -8.68622875213623

Token 170: ' #' (ID: 1069)
  Prédit: ' HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' HP' → logprob: -1.0188122987747192
    2. '       ' → logprob: -1.1438122987747192
    3. 'HP' → logprob: -1.1438122987747192
    4. '   ' → logprob: -7.39381217956543
    5. '#' (adapté à ' #') → logprob: -7.51881217956543
    6. '        
' → logprob: -9.39381217956543
    7. ' #' → logprob: -9.51881217956543
    8. '_HP' → logprob: -9.76881217956543
    9. '
' → logprob: -9.83131217956543
    10. '```' → logprob: -10.26881217956543

Token 171: ' Sou' (ID: 17228)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.2819238007068634
    2. ' HP' → logprob: -1.406923770904541
    3. '#' → logprob: -8.6569242477417
    4. 'D' → logprob: -9.0319242477417
    5. '   ' → logprob: -9.3444242477417
    6. ' damage' → logprob: -10.2819242477417
    7. ' ' → logprob: -10.3444242477417
    8. ' #' → logprob: -10.5319242477417
    9. 'A' → logprob: -10.5944242477417
    10. ' ' → logprob: -10.7194242477417

Token 172: 'straction' (ID: 79887)
  Prédit: 'stra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.2756830155849457
    2. 'straction' → logprob: -1.525683045387268
    3. 'stract' → logprob: -4.4006829261779785
    4. 'str' → logprob: -4.5256829261779785
    5. 'st' → logprob: -8.900683403015137
    6. 'tr' → logprob: -9.400683403015137
    7. 'tra' → logprob: -9.525683403015137
    8. 't' → logprob: -10.775683403015137
    9. 'strate' → logprob: -10.775683403015137
    10. 'trait' → logprob: -11.025683403015137

Token 173: ' des' (ID: 731)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.06560178846120834
    2. 'A' → logprob: -2.9406018257141113
    3. ' de' → logprob: -4.940601825714111
    4. ' d' → logprob: -6.190601825714111
    5. '       ' → logprob: -7.440601825714111
    6. ' ' → logprob: -8.565601348876953
    7. ' of' → logprob: -8.815601348876953
    8. ' des' → logprob: -8.940601348876953
    9. '   ' → logprob: -9.190601348876953
    10. '(A' → logprob: -9.190601348876953

Token 174: ' dégâts' (ID: 195715)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.2260252982378006
    2. 'A' → logprob: -1.6010253429412842
    3. ' dégâts' → logprob: -7.476025104522705
    4. ' dommages' → logprob: -10.726025581359863
    5. ' damage' → logprob: -11.851025581359863
    6. ' damages' → logprob: -12.476025581359863
    7. ' ' → logprob: -12.601025581359863
    8. 'damage' → logprob: -13.351025581359863
    9. ' ' → logprob: -13.476025581359863
    10. ' points' → logprob: -13.726025581359863

Token 175: ' à' (ID: 1221)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.786074161529541
    2. ' from' → logprob: -1.661074161529541
    3. ' de' → logprob: -2.036074161529541
    4. '       ' → logprob: -2.161074161529541
    5. ' HP' → logprob: -3.536074161529541
    6. ' à' → logprob: -3.786074161529541
    7. 'from' → logprob: -4.536074161529541
    8. '   ' → logprob: -4.661074161529541
    9. ' au' → logprob: -4.786074161529541
    10. ' d' → logprob: -5.161074161529541

Token 176: ' la' (ID: 557)
  Prédit: ' HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' HP' → logprob: -0.22730964422225952
    2. 'HP' → logprob: -1.6023097038269043
    3. ' la' → logprob: -6.477309703826904
    4. '_HP' → logprob: -8.977309226989746
    5. 'l' → logprob: -9.852309226989746
    6. 'la' → logprob: -10.102309226989746
    7. ' l' → logprob: -10.227309226989746
    8. 'mon' → logprob: -10.352309226989746
    9. ' ' → logprob: -10.477309226989746
    10. ' ' → logprob: -11.852309226989746

Token 177: ' vie' (ID: 8585)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.40715664625167847
    2. ' HP' → logprob: -1.2821567058563232
    3. 'mon' → logprob: -3.0321567058563232
    4. ' mon' → logprob: -5.657156467437744
    5. ' monster' → logprob: -6.407156467437744
    6. ' points' → logprob: -6.657156467437744
    7. 'monster' → logprob: -7.282156467437744
    8. '_HP' → logprob: -8.032156944274902
    9. ' monst' → logprob: -8.032156944274902
    10. 'points' → logprob: -8.594656944274902

Token 178: ' cour' (ID: 2871)
  Prédit: ' HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' HP' → logprob: -0.9158150553703308
    2. '   ' → logprob: -1.2908151149749756
    3. ' du' → logprob: -1.6658151149749756
    4. ' de' → logprob: -2.9158151149749756
    5. 'HP' → logprob: -3.1658151149749756
    6. ' ' → logprob: -4.5408148765563965
    7. '       ' → logprob: -5.0408148765563965
    8. ' restante' → logprob: -5.0408148765563965
    9. 'mon' → logprob: -6.2908148765563965
    10. '    ' → logprob: -6.4158148765563965

Token 179: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.6284863352775574
    2. ' HP' → logprob: -2.003486394882202
    3. 'ants' → logprob: -2.003486394882202
    4. 'ant' → logprob: -2.503486394882202
    5. 'HP' → logprob: -3.003486394882202
    6. 't' → logprob: -3.753486394882202
    7. 'r' → logprob: -4.003486156463623
    8. '   ' → logprob: -4.753486156463623
    9. 'ts' → logprob: -4.878486156463623
    10. 's' → logprob: -5.378486156463623

Token 180: ' du' (ID: 1462)
  Prédit: ' HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' HP' → logprob: -0.3559591472148895
    2. 'HP' → logprob: -1.855959177017212
    3. '       ' → logprob: -1.980959177017212
    4. '        
' → logprob: -6.730958938598633
    5. '   ' → logprob: -6.855958938598633
    6. ',' → logprob: -7.605958938598633
    7. ' =' → logprob: -7.730958938598633
    8. ' ' → logprob: -8.105958938598633
    9. '=' → logprob: -8.355958938598633
    10. '\' → logprob: -8.730958938598633

Token 181: ' mon' (ID: 1767)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.7357523441314697
    2. ' mon' → logprob: -0.8607523441314697
    3. ' HP' → logprob: -2.7357523441314697
    4. 'HP' → logprob: -4.110752105712891
    5. ' monster' → logprob: -4.235752105712891
    6. 'monster' → logprob: -6.860752105712891
    7. ' ' → logprob: -7.860752105712891
    8. ' ' → logprob: -7.985752105712891
    9. ' monst' → logprob: -8.86075210571289
    10. '(mon' → logprob: -9.98575210571289

Token 182: 'stre' (ID: 26826)
  Prédit: 'stre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.0002669384120963514
    2. 's' → logprob: -9.250267028808594
    3. 'tre' → logprob: -9.875267028808594
    4. 'st' → logprob: -10.000267028808594
    5. 'ster' → logprob: -11.125267028808594
    6. ' ' → logprob: -12.000267028808594
    7. '   ' → logprob: -12.250267028808594
    8. '#' → logprob: -12.625267028808594
    9. 'ste' → logprob: -12.750267028808594
    10. 'store' → logprob: -12.875267028808594

Token 183: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6218311786651611
    2. ' HP' → logprob: -0.9968311786651611
    3. ' 
' → logprob: -3.246831178665161
    4. 'HP' → logprob: -3.996831178665161
    5. '        
' → logprob: -3.996831178665161
    6. '
' → logprob: -5.371830940246582
    7. '\' → logprob: -5.621830940246582
    8. '\n' → logprob: -5.996830940246582
    9. '<|end|>' → logprob: -6.246830940246582
    10. ',' → logprob: -6.871830940246582

Token 184: '       ' (ID: 309)
  Prédit: ' HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' HP' → logprob: -0.37211447954177856
    2. '       ' → logprob: -1.3721144199371338
    3. 'HP' → logprob: -2.872114419937134
    4. '   ' → logprob: -8.247114181518555
    5. '        
' → logprob: -9.372114181518555
    6. ' ' → logprob: -9.997114181518555
    7. '        ' → logprob: -9.997114181518555
    8. ' 
' → logprob: -10.747114181518555
    9. '_HP' → logprob: -11.247114181518555
    10. '      ' → logprob: -11.622114181518555

Token 185: ' HP' (ID: 21979)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' (adapté à ' HP') → logprob: -0.023248156532645226
    2. ' HP' → logprob: -3.7732481956481934
    3. '_HP' → logprob: -13.773247718811035
    4. '   ' → logprob: -14.148247718811035
    5. '       ' → logprob: -14.648247718811035
    6. 'TP' → logprob: -16.39824867248535
    7. 'hp' → logprob: -16.52324867248535
    8. 'PH' → logprob: -16.77324867248535
    9. ' ' → logprob: -17.02324867248535
    10. 'Hp' → logprob: -17.39824867248535

Token 186: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.08992520719766617
    2. '-' → logprob: -3.2149252891540527
    3. '-=' → logprob: -3.2149252891540527
    4. ' -' → logprob: -5.214925289154053
    5. '=' → logprob: -8.339924812316895
    6. '   ' → logprob: -12.464924812316895
    7. ' =' → logprob: -12.589924812316895
    8. ' ' → logprob: -13.839924812316895
    9. ' ' → logprob: -15.339924812316895
    10. '    ' → logprob: -15.339924812316895

Token 187: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16022443771362305
    2. ' A' → logprob: -1.910224437713623
    3. ' ' → logprob: -16.16022491455078
    4. '	A' → logprob: -16.66022491455078
    5. '   ' → logprob: -16.78522491455078
    6. 'a' → logprob: -19.16022491455078
    7. '  ' → logprob: -19.41022491455078
    8. '_A' → logprob: -19.41022491455078
    9. '1' → logprob: -19.53522491455078
    10. '    ' → logprob: -19.66022491455078

Token 188: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09659529477357864
    2. '   ' → logprob: -2.471595287322998
    3. '\n' → logprob: -5.346595287322998
    4. '<|end|>' → logprob: -6.721595287322998
    5. ' return' → logprob: -7.596595287322998
    6. 'return' → logprob: -7.846595287322998
    7. '    
' → logprob: -7.971595287322998
    8. '  
' → logprob: -8.971595764160156
    9. ')' → logprob: -9.721595764160156
    10. '	return' → logprob: -9.721595764160156

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021345296874642372
    2. '
' → logprob: -3.896345376968384
    3. ' return' → logprob: -8.021345138549805
    4. 'return' → logprob: -8.271345138549805
    5. '    
' → logprob: -8.646345138549805
    6. '\n' → logprob: -10.896345138549805
    7. '	return' → logprob: -11.896345138549805
    8. '       ' → logprob: -12.271345138549805
    9. '
' → logprob: -12.396345138549805
    10. ' 
' → logprob: -13.021345138549805

Token 190: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017887057038024068
    2. 'return' → logprob: -6.62678861618042
    3. ' return' → logprob: -7.87678861618042
    4. '
' → logprob: -9.501789093017578
    5. '    
' → logprob: -11.876789093017578
    6. '	return' → logprob: -14.626789093017578
    7. '       ' → logprob: -14.751789093017578
    8. '```' → logprob: -14.751789093017578
    9. '\n' → logprob: -16.626789093017578
    10. ' ' → logprob: -17.001789093017578

Token 191: ' Retour' (ID: 146830)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00919943954795599
    2. ' return' → logprob: -4.759199619293213
    3. '   ' → logprob: -7.509199619293213
    4. 'Return' → logprob: -10.509199142456055
    5. 'ret' → logprob: -11.884199142456055
    6. 'Retour' → logprob: -13.759199142456055
    7. ' ' → logprob: -15.134199142456055
    8. ':return' → logprob: -15.384199142456055
    9. 're' → logprob: -16.009199142456055
    10. '_return' → logprob: -16.134199142456055

Token 192: 'ne' (ID: 611)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.6461864709854126
    2. 'n' → logprob: -1.0211864709854126
    3. '   ' → logprob: -2.396186351776123
    4. 'ner' → logprob: -4.146186351776123
    5. 'count' → logprob: -5.521186351776123
    6. 'ne' → logprob: -5.521186351776123
    7. ' n' → logprob: -8.146186828613281
    8. ' ' → logprob: -9.271186828613281
    9. '	count' → logprob: -9.271186828613281
    10. '  ' → logprob: -9.396186828613281

Token 193: ' le' (ID: 505)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.02324839122593403
    2. 'count' → logprob: -3.7732484340667725
    3. ' ' → logprob: -13.148248672485352
    4. ' le' → logprob: -15.148248672485352
    5. '	count' → logprob: -15.273248672485352
    6. ' counts' → logprob: -15.398248672485352
    7. '   ' → logprob: -16.02324867248535
    8. '(count' → logprob: -16.52324867248535
    9. ' ' → logprob: -16.77324867248535
    10. 'counts' → logprob: -17.89824867248535

Token 194: ' nombre' (ID: 9733)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2812873125076294
    2. ' count' → logprob: -1.4062873125076294
    3. ' nombre' → logprob: -9.15628719329834
    4. 'nombre' → logprob: -10.78128719329834
    5. ' compte' → logprob: -13.40628719329834
    6. ' ' → logprob: -13.53128719329834
    7. ' ' → logprob: -13.90628719329834
    8. 'counts' → logprob: -13.90628719329834
    9. 'counter' → logprob: -14.15628719329834
    10. '   ' → logprob: -14.28128719329834

Token 195: ' de' (ID: 334)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.1260983794927597
    2. ' de' → logprob: -2.626098394393921
    3. 'count' → logprob: -3.126098394393921
    4. ' des' → logprob: -6.751098155975342
    5. 'de' → logprob: -7.501098155975342
    6. ' minimal' → logprob: -8.6260986328125
    7. '   ' → logprob: -9.6260986328125
    8. ' of' → logprob: -9.8760986328125
    9. ' ' → logprob: -10.3760986328125
    10. ' return' → logprob: -10.7510986328125

Token 196: ' tours' (ID: 32603)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2710851728916168
    2. ' tours' → logprob: -1.7710851430892944
    3. ' count' → logprob: -3.146085262298584
    4. 't' → logprob: -3.896085262298584
    5. 'turn' → logprob: -6.146085262298584
    6. 'tour' → logprob: -7.521085262298584
    7. 'counts' → logprob: -8.396084785461426
    8. ' ' → logprob: -8.521084785461426
    9. ' turns' → logprob: -8.521084785461426
    10. ' ' → logprob: -9.396084785461426

Token 197: ' nécessaires' (ID: 74402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03281499072909355
    2. 'return' → logprob: -3.7828149795532227
    3. ' return' → logprob: -4.657814979553223
    4. '    
' → logprob: -11.157814979553223
    5. '
' → logprob: -11.782814979553223
    6. '  ' → logprob: -12.532814979553223
    7. '	return' → logprob: -12.657814979553223
    8. '    ' → logprob: -13.032814979553223
    9. ' ' → logprob: -13.407814979553223
    10. '  
' → logprob: -14.282814979553223

Token 198: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011015182826668024
    2. 'return' → logprob: -7.126101493835449
    3. ' return' → logprob: -8.37610149383545
    4. '
' → logprob: -9.62610149383545
    5. '    
' → logprob: -14.75110149383545
    6. '	return' → logprob: -16.126102447509766
    7. '```' → logprob: -16.626102447509766
    8. '   ' → logprob: -17.251102447509766
    9. '       ' → logprob: -17.251102447509766
    10. '
' → logprob: -17.626102447509766

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015605698572471738
    2. 'return' → logprob: -6.501560688018799
    3. ' return' → logprob: -9.75156021118164
    4. '   ' → logprob: -18.12656021118164
    5. '	return' → logprob: -18.50156021118164
    6. '       ' → logprob: -19.00156021118164
    7. '```' → logprob: -19.37656021118164
    8. '  ' → logprob: -19.75156021118164
    9. '{return' → logprob: -19.75156021118164
    10. ':return' → logprob: -20.25156021118164

Token 200: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011765459552407265
    2. '   ' → logprob: -4.761765480041504
    3. ' return' → logprob: -5.761765480041504
    4. '	return' → logprob: -15.511765480041504
    5. '```' → logprob: -16.761764526367188
    6. 'eturn' → logprob: -17.011764526367188
    7. '{return' → logprob: -17.136764526367188
    8. '
' → logprob: -17.761764526367188
    9. '  ' → logprob: -18.011764526367188
    10. ':return' → logprob: -18.386764526367188

Token 201: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.313263863325119
    2. 'count' → logprob: -1.3132638931274414
    3. ' ' → logprob: -13.688263893127441
    4. '	count' → logprob: -14.688263893127441
    5. '(count' → logprob: -15.938263893127441
    6. ' counts' → logprob: -16.188262939453125
    7. '[count' → logprob: -16.313262939453125
    8. ' coun' → logprob: -17.063262939453125
    9. ' ' → logprob: -17.313262939453125
    10. 'counts' → logprob: -17.313262939453125

Token 202: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3802139163017273
    2. '<|end|>' → logprob: -1.380213975906372
    3. ')' → logprob: -3.755213975906372
    4. '\n' → logprob: -4.505213737487793
    5. '#' → logprob: -4.755213737487793
    6. '```' → logprob: -5.380213737487793
    7. '(' → logprob: -5.755213737487793
    8. '<|end|>' → logprob: -5.755213737487793
    9. 'def' → logprob: -6.130213737487793
    10. 'newline' → logprob: -6.380213737487793

Token 203: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6044033169746399
    2. '<|end|>' → logprob: -1.7294032573699951
    3. '#' → logprob: -2.354403257369995
    4. '```' → logprob: -2.604403257369995
    5. 'def' → logprob: -2.854403257369995
    6. '\n' → logprob: -3.979403257369995
    7. ')' → logprob: -4.979403495788574
    8. '[' → logprob: -5.229403495788574
    9. '\' → logprob: -5.229403495788574
    10. '<|end|>' → logprob: -5.729403495788574

Token 204: ' main' (ID: 2758)
  Prédit: ' player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' player' → logprob: -0.5249425768852234
    2. ' damage' → logprob: -1.8999426364898682
    3. ' turns' → logprob: -2.399942636489868
    4. ' calculate' → logprob: -3.399942636489868
    5. ' main' → logprob: -3.649942636489868
    6. ' hero' → logprob: -4.024942398071289
    7. ' battle' → logprob: -4.399942398071289
    8. ' monster' → logprob: -4.649942398071289
    9. ' ' → logprob: -4.774942398071289
    10. 'damage' → logprob: -5.024942398071289

Token 205: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.022408274933695793
    2. '(' → logprob: -3.8974082469940186
    3. '_' → logprob: -6.522408485412598
    4. ':' → logprob: -8.647408485412598
    5. '()' → logprob: -9.397408485412598
    6. '_:' → logprob: -9.772408485412598
    7. ' ():' → logprob: -10.397408485412598
    8. ' (' → logprob: -11.772408485412598
    9. '():
' → logprob: -11.772408485412598
    10. '(:' → logprob: -12.147408485412598

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5858709216117859
    2. '(' → logprob: -0.8358709216117859
    3. ':' → logprob: -5.710870742797852
    4. ' (' → logprob: -6.710870742797852
    5. '()' → logprob: -6.835870742797852
    6. '    ' → logprob: -7.085870742797852
    7. ' :' → logprob: -7.710870742797852
    8. '(
' → logprob: -7.835870742797852
    9. ' 
' → logprob: -7.960870742797852
    10. '    
' → logprob: -8.085870742797852

Token 207: ' """
' (ID: 7037)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.11573240160942078
    2. '   ' → logprob: -2.365732431411743
    3. 'H' → logprob: -4.865732192993164
    4. 'n' → logprob: -6.365732192993164
    5. ' 
' → logprob: -6.615732192993164
    6. ' n' → logprob: -7.115732192993164
    7. '(' → logprob: -7.615732192993164
    8. ' ' → logprob: -7.740732192993164
    9. '    
' → logprob: -8.115732192993164
    10. '(H' → logprob: -8.240732192993164

Token 208: '   ' (ID: 271)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.5194956660270691
    2. 'H' → logprob: -1.0194957256317139
    3. '   ' → logprob: -3.644495725631714
    4. ' ' → logprob: -5.519495487213135
    5. 'HP' → logprob: -5.644495487213135
    6. ' HP' → logprob: -5.894495487213135
    7. '#' → logprob: -6.144495487213135
    8. ' #' → logprob: -6.644495487213135
    9. '  ' → logprob: -7.269495487213135
    10. ' monster' → logprob: -7.581995487213135

Token 209: ' Fonction' (ID: 189149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18243350088596344
    2. 'Calcul' → logprob: -2.807433605194092
    3. '    ' → logprob: -3.307433605194092
    4. ' Calcul' → logprob: -3.807433605194092
    5. ' Aff' → logprob: -4.932433605194092
    6. ' Cal' → logprob: -4.932433605194092
    7. ' """' → logprob: -5.932433605194092
    8. ' Calculate' → logprob: -5.932433605194092
    9. '"""' → logprob: -6.057433605194092
    10. ' La' → logprob: -6.057433605194092

Token 210: ' principale' (ID: 68926)
  Prédit: ' principale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' principale' → logprob: -0.03218632563948631
    2. ' main' → logprob: -3.907186269760132
    3. ' principal' → logprob: -4.532186508178711
    4. ' d' → logprob: -8.032186508178711
    5. ' de' → logprob: -8.282186508178711
    6. '   ' → logprob: -9.157186508178711
    7. ' principales' → logprob: -10.407186508178711
    8. 'princip' → logprob: -10.782186508178711
    9. ' test' → logprob: -11.032186508178711
    10. ' ' → logprob: -11.532186508178711

Token 211: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30095374584198
    2. '():' → logprob: -1.67595374584198
    3. ':' → logprob: -3.5509538650512695
    4. 'def' → logprob: -3.8009538650512695
    5. '():
' → logprob: -4.3009538650512695
    6. '()' → logprob: -5.6759538650512695
    7. ' :' → logprob: -7.0509538650512695
    8. '    
' → logprob: -7.1759538650512695
    9. '```' → logprob: -7.1759538650512695
    10. '
' → logprob: -7.4259538650512695

Token 212: ' lire' (ID: 46082)
  Prédit: ' tester'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tester' → logprob: -0.3689538836479187
    2. ' ex' → logprob: -1.7439539432525635
    3. ' lancer' → logprob: -2.6189539432525635
    4. ' test' → logprob: -3.3689539432525635
    5. ' calcul' → logprob: -4.993953704833984
    6. ' run' → logprob: -5.618953704833984
    7. ' gérer' → logprob: -5.743953704833984
    8. ' effectuer' → logprob: -5.868953704833984
    9. ' execut' → logprob: -6.118953704833984
    10. ' tests' → logprob: -7.618953704833984

Token 213: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.0765693336725235
    2. ' l' → logprob: -3.5765693187713623
    3. ' des' → logprob: -3.8265693187713623
    4. ' la' → logprob: -4.701569557189941
    5. '()' → logprob: -4.826569557189941
    6. '   ' → logprob: -5.701569557189941
    7. ' input' → logprob: -6.826569557189941
    8. ' une' → logprob: -7.326569557189941
    9. 'les' → logprob: -7.576569557189941
    10. ' le' → logprob: -7.701569557189941

Token 214: ' entr' (ID: 7072)
  Prédit: ' inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inputs' → logprob: -1.1159651279449463
    2. ' données' → logprob: -1.3659651279449463
    3. ' entr' → logprob: -1.3659651279449463
    4. ' paramètres' → logprob: -2.8659651279449463
    5. 'inputs' → logprob: -3.7409651279449463
    6. ' input' → logprob: -3.7409651279449463
    7. 'entr' → logprob: -3.9909651279449463
    8. ' valeurs' → logprob: -4.240964889526367
    9. 'input' → logprob: -5.240964889526367
    10. 'entrée' → logprob: -5.365964889526367

Token 215: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0029200648423284292
    2. 'ees' → logprob: -5.877920150756836
    3. 'ée' → logprob: -9.627920150756836
    4. 'ies' → logprob: -10.502920150756836
    5. '```' → logprob: -12.252920150756836
    6. 'es' → logprob: -12.377920150756836
    7. 'rees' → logprob: -12.877920150756836
    8. 'er' → logprob: -13.127920150756836
    9. 'e' → logprob: -13.252920150756836
    10. '   ' → logprob: -13.377920150756836

Token 216: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09920722246170044
    2. ' et' → logprob: -2.9742071628570557
    3. ',' → logprob: -3.2242071628570557
    4. '()' → logprob: -6.724207401275635
    5. 'et' → logprob: -7.474207401275635
    6. ' ,' → logprob: -7.474207401275635
    7. ' and' → logprob: -7.974207401275635
    8. ' de' → logprob: -8.849206924438477
    9. '    ' → logprob: -9.099206924438477
    10. ' du' → logprob: -9.099206924438477

Token 217: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.18056635558605194
    2. 'l' → logprob: -1.8055663108825684
    3. ' code' → logprob: -8.555566787719727
    4. ' utilisateur' → logprob: -8.555566787719727
    5. ' standard' → logprob: -9.305566787719727
    6. 'util' → logprob: -9.930566787719727
    7. ' la' → logprob: -10.180566787719727
    8. ' input' → logprob: -10.180566787719727
    9. ' stdin' → logprob: -10.555566787719727
    10. '   ' → logprob: -10.555566787719727

Token 218: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.00233687786385417
    2. 'util' → logprob: -6.3773369789123535
    3. ''util' → logprob: -8.627336502075195
    4. '’utilisateur' → logprob: -8.627336502075195
    5. ''' → logprob: -9.127336502075195
    6. ' utilisateur' → logprob: -10.002336502075195
    7. 'a' → logprob: -10.627336502075195
    8. 'u' → logprob: -10.752336502075195
    9. ''user' → logprob: -10.877336502075195
    10. '   ' → logprob: -11.127336502075195

Token 219: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2672359049320221
    2. ',' → logprob: -1.5172358751296997
    3. ' et' → logprob: -4.64223575592041
    4. ' ,' → logprob: -5.39223575592041
    5. ' and' → logprob: -7.76723575592041
    6. '    ' → logprob: -9.01723575592041
    7. '<|end|>' → logprob: -9.39223575592041
    8. ')' → logprob: -9.51723575592041
    9. ' ' → logprob: -9.64223575592041
    10. '    
' → logprob: -9.76723575592041

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005058821756392717
    2. '    ' → logprob: -6.255058765411377
    3. ' et' → logprob: -6.880058765411377
    4. ' puis' → logprob: -6.880058765411377
    5. ' les' → logprob: -8.505059242248535
    6. ' effectuer' → logprob: -8.630059242248535
    7. ' afficher' → logprob: -8.880059242248535
    8. ' calcul' → logprob: -9.130059242248535
    9. ' continuer' → logprob: -9.380059242248535
    10. ' and' → logprob: -10.130059242248535

Token 221: ' appeler' (ID: 172747)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.5796001553535461
    2. '   ' → logprob: -1.0796000957489014
    3. 'calcul' → logprob: -2.4546000957489014
    4. ' effectuer' → logprob: -5.4546003341674805
    5. ' les' → logprob: -6.2046003341674805
    6. 'cal' → logprob: -6.4546003341674805
    7. ' calcular' → logprob: -6.7046003341674805
    8. '#' → logprob: -6.7046003341674805
    9. ' calculate' → logprob: -7.3296003341674805
    10. '    ' → logprob: -7.7046003341674805

Token 222: ' la' (ID: 557)
  Prédit: ' turns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' turns' → logprob: -0.10108669847249985
    2. 'turn' → logprob: -2.3510866165161133
    3. ' la' → logprob: -7.351086616516113
    4. ' turn' → logprob: -8.976086616516113
    5. '   ' → logprob: -9.726086616516113
    6. ' the' → logprob: -11.101086616516113
    7. '_turn' → logprob: -11.226086616516113
    8. ' ' → logprob: -11.726086616516113
    9. 'la' → logprob: -11.976086616516113
    10. 'def' → logprob: -13.101086616516113

Token 223: ' fonction' (ID: 17610)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.4207622706890106
    2. ' turns' → logprob: -1.920762300491333
    3. 'fonction' → logprob: -2.170762300491333
    4. 'def' → logprob: -3.045762300491333
    5. ' fonction' → logprob: -3.920762300491333
    6. 'tour' → logprob: -5.295762062072754
    7. 'function' → logprob: -5.545762062072754
    8. ' function' → logprob: -6.045762062072754
    9. ' turn' → logprob: -7.170762062072754
    10. 'nombre' → logprob: -7.420762062072754

Token 224: ' de' (ID: 334)
  Prédit: ' turns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' turns' → logprob: -0.2834027111530304
    2. 'turn' → logprob: -1.408402681350708
    3. '   ' → logprob: -6.783402919769287
    4. 'def' → logprob: -7.408402919769287
    5. ' turn' → logprob: -8.908402442932129
    6. ' ' → logprob: -9.408402442932129
    7. ' ' → logprob: -9.783402442932129
    8. ' `' → logprob: -10.033402442932129
    9. 'de' → logprob: -10.408402442932129
    10. '`' → logprob: -10.408402442932129

Token 225: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.6795077919960022
    2. ' calcul' → logprob: -1.4295077323913574
    3. 'turn' → logprob: -2.1795077323913574
    4. 'cal' → logprob: -2.8045077323913574
    5. ' turns' → logprob: -3.6795077323913574
    6. 't' → logprob: -4.554507732391357
    7. 'nombre' → logprob: -5.304507732391357
    8. ' calculation' → logprob: -5.304507732391357
    9. 'simulation' → logprob: -5.929507732391357
    10. 'combat' → logprob: -6.054507732391357

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5998142957687378
    2. '   ' → logprob: -0.9748142957687378
    3. ' et' → logprob: -2.9748144149780273
    4. ' de' → logprob: -4.099814414978027
    5. 'def' → logprob: -6.474814414978027
    6. 'de' → logprob: -6.474814414978027
    7. ' ,' → logprob: -6.724814414978027
    8. ' ' → logprob: -7.349814414978027
    9. 'et' → logprob: -8.224814414978027
    10. ' ' → logprob: -8.724814414978027

Token 227: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008266455493867397
    2. ' et' → logprob: -5.258266448974609
    3. 'et' → logprob: -5.883266448974609
    4. ' and' → logprob: -9.00826644897461
    5. '    ' → logprob: -9.63326644897461
    6. 'and' → logprob: -11.25826644897461
    7. '  ' → logprob: -11.75826644897461
    8. ' puis' → logprob: -11.75826644897461
    9. '```' → logprob: -12.50826644897461
    10. ' ' → logprob: -12.63326644897461

Token 228: ' afficher' (ID: 146524)
  Prédit: ' afficher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' afficher' → logprob: -0.006520683411508799
    2. '   ' → logprob: -6.006520748138428
    3. 'aff' → logprob: -6.006520748138428
    4. ' print' → logprob: -7.006520748138428
    5. ' impr' → logprob: -8.13152027130127
    6. 'print' → logprob: -9.25652027130127
    7. ' affich' → logprob: -9.75652027130127
    8. ' aff' → logprob: -10.25652027130127
    9. ' display' → logprob: -10.25652027130127
    10. ' affiche' → logprob: -10.50652027130127

Token 229: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.629150927066803
    2. '   ' → logprob: -1.2541508674621582
    3. ' la' → logprob: -2.504150867462158
    4. 'le' → logprob: -2.629150867462158
    5. ' les' → logprob: -5.004150867462158
    6. 'la' → logprob: -5.254150867462158
    7. '()' → logprob: -5.379150867462158
    8. 'result' → logprob: -5.379150867462158
    9. '(' → logprob: -6.379150867462158
    10. 'les' → logprob: -6.379150867462158

Token 230: ' résultat' (ID: 62556)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.21072068810462952
    2. ' résultat' → logprob: -1.7107206583023071
    3. 'nombre' → logprob: -4.835720539093018
    4. ' nombre' → logprob: -7.335720539093018
    5. 'result' → logprob: -7.585720539093018
    6. 'r' → logprob: -9.460721015930176
    7. 'ré' → logprob: -10.460721015930176
    8. '   ' → logprob: -10.710721015930176
    9. ' resultat' → logprob: -11.585721015930176
    10. ' résultats' → logprob: -11.835721015930176

Token 231: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03125042840838432
    2. ')' → logprob: -4.281250476837158
    3. '.' → logprob: -4.281250476837158
    4. '):' → logprob: -6.531250476837158
    5. ':' → logprob: -8.28125
    6. '```' → logprob: -8.28125
    7. '
' → logprob: -8.40625
    8. '):
' → logprob: -8.53125
    9. '    
' → logprob: -8.65625
    10. 'def' → logprob: -9.15625

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004848922253586352
    2. '    
' → logprob: -7.750484943389893
    3. '
' → logprob: -10.000484466552734
    4. 'def' → logprob: -12.875484466552734
    5. '```' → logprob: -13.500484466552734
    6. '    ' → logprob: -13.750484466552734
    7. 'n' → logprob: -14.375484466552734
    8. ' 
' → logprob: -14.875484466552734
    9. '    
    
' → logprob: -14.875484466552734
    10. '   
' → logprob: -15.000484466552734

Token 233: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021319588995538652
    2. '    
' → logprob: -9.125213623046875
    3. '
' → logprob: -9.250213623046875
    4. '    ' → logprob: -12.250213623046875
    5. '```' → logprob: -13.625213623046875
    6. 'def' → logprob: -14.250213623046875
    7. '"""' → logprob: -14.750213623046875
    8. '       ' → logprob: -15.375213623046875
    9. '  ' → logprob: -15.875213623046875
    10. 'n' → logprob: -16.000213623046875

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015276329941116273
    2. ' H' → logprob: -9.250152587890625
    3. 'import' → logprob: -11.125152587890625
    4. ' input' → logprob: -11.375152587890625
    5. 'H' → logprob: -11.875152587890625
    6. ' import' → logprob: -12.250152587890625
    7. 'n' → logprob: -12.375152587890625
    8. 'input' → logprob: -12.875152587890625
    9. ' try' → logprob: -13.250152587890625
    10. '   ' → logprob: -13.375152587890625

Token 235: ' #' (ID: 1069)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.5333391427993774
    2. ' H' → logprob: -0.9083391427993774
    3. '   ' → logprob: -4.658339023590088
    4. ' try' → logprob: -8.283339500427246
    5. 'try' → logprob: -9.283339500427246
    6. 'import' → logprob: -9.658339500427246
    7. '#' (adapté à ' #') → logprob: -9.908339500427246
    8. ' ' → logprob: -9.908339500427246
    9. 'h' → logprob: -10.158339500427246
    10. ' import' → logprob: -10.783339500427246

Token 236: ' Lecture' (ID: 106534)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.14475183188915253
    2. ' H' → logprob: -2.019751787185669
    3. '#' → logprob: -7.144752025604248
    4. '   ' → logprob: -7.894752025604248
    5. 'try' → logprob: -8.26975154876709
    6. 'HP' → logprob: -8.51975154876709
    7. 'h' → logprob: -8.89475154876709
    8. ' try' → logprob: -9.51975154876709
    9. 'import' → logprob: -9.76975154876709
    10. ' ' → logprob: -10.39475154876709

Token 237: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.795580267906189
    2. '()' → logprob: -1.420580267906189
    3. '   ' → logprob: -1.545580267906189
    4. ' de' → logprob: -2.9205803871154785
    5. '(' → logprob: -3.9205803871154785
    6. 'des' → logprob: -5.9205803871154785
    7. ' user' → logprob: -6.0455803871154785
    8. '_' → logprob: -6.1705803871154785
    9. ' (' → logprob: -6.4205803871154785
    10. 's' → logprob: -6.6705803871154785

Token 238: ' deux' (ID: 10301)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.19230931997299194
    2. 'H' → logprob: -2.1923093795776367
    3. ' inputs' → logprob: -3.3173093795776367
    4. ' valeurs' → logprob: -4.567309379577637
    5. ' input' → logprob: -5.692309379577637
    6. 'inputs' → logprob: -5.817309379577637
    7. ' ' → logprob: -6.442309379577637
    8. ' values' → logprob: -6.567309379577637
    9. ' données' → logprob: -6.692309379577637
    10. ' data' → logprob: -7.442309379577637

Token 239: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.5742360949516296
    2. ' valeurs' → logprob: -1.1992361545562744
    3. 'ent' → logprob: -2.8242361545562744
    4. ' nombres' → logprob: -3.0742361545562744
    5. ' integers' → logprob: -4.074235916137695
    6. 'val' → logprob: -4.949235916137695
    7. ' ' → logprob: -6.699235916137695
    8. ' inputs' → logprob: -7.699235916137695
    9. 'nombre' → logprob: -7.824235916137695
    10. ' espaces' → logprob: -7.949235916137695

Token 240: 'iers' (ID: 11012)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04463475942611694
    2. 'rees' → logprob: -3.7946348190307617
    3. 'iers' → logprob: -4.044634819030762
    4. 'ries' → logprob: -6.919634819030762
    5. 'ées' → logprob: -7.419634819030762
    6. 'rée' → logprob: -7.669634819030762
    7. 'rés' → logprob: -7.669634819030762
    8. 'ières' → logprob: -7.794634819030762
    9. 'ers' → logprob: -8.419634819030762
    10. '   ' → logprob: -8.919634819030762

Token 241: ' en' (ID: 469)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.021242953836917877
    2. 'H' → logprob: -4.396243095397949
    3. '   ' → logprob: -5.271243095397949
    4. 'n' → logprob: -6.896243095397949
    5. ' n' → logprob: -6.896243095397949
    6. ' h' → logprob: -8.27124309539795
    7. ' ' → logprob: -8.52124309539795
    8. 's' → logprob: -8.64624309539795
    9. '(H' → logprob: -9.27124309539795
    10. '()' → logprob: -9.39624309539795

Token 242: ' entrée' (ID: 95590)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -1.1888971328735352
    2. 'input' → logprob: -1.3138971328735352
    3. 'une' → logprob: -1.4388971328735352
    4. ' une' → logprob: -2.438897132873535
    5. ' input' → logprob: -2.563897132873535
    6. ' entrée' → logprob: -4.313897132873535
    7. 'entr' → logprob: -5.938897132873535
    8. ' ' → logprob: -6.313897132873535
    9. 'ent' → logprob: -6.563897132873535
    10. 'python' → logprob: -7.188897132873535

Token 243: ' :' (ID: 712)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.3915340006351471
    2. '   ' → logprob: -1.1415339708328247
    3. 'H' → logprob: -5.766533851623535
    4. ' line' → logprob: -7.641533851623535
    5. '    
' → logprob: -8.391533851623535
    6. ',' → logprob: -8.391533851623535
    7. ' ,' → logprob: -9.516533851623535
    8. 's' → logprob: -10.016533851623535
    9. ' ' → logprob: -10.016533851623535
    10. '    ' → logprob: -10.016533851623535

Token 244: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.22821471095085144
    2. ' H' → logprob: -1.6032147407531738
    3. 'h' → logprob: -6.103214740753174
    4. '   ' → logprob: -8.228214263916016
    5. ' h' → logprob: -8.353214263916016
    6. ' ' → logprob: -11.603214263916016
    7. 'n' → logprob: -11.853214263916016
    8. ' inputs' → logprob: -11.978214263916016
    9. ' line' → logprob: -12.228214263916016
    10. 'T' → logprob: -12.978214263916016

Token 245: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -8.542423165636137e-05
    2. ',A' → logprob: -9.625085830688477
    3. ' ,' → logprob: -11.250085830688477
    4. 'A' → logprob: -12.875085830688477
    5. 'et' → logprob: -13.500085830688477
    6. ' =' → logprob: -14.500085830688477
    7. ' et' → logprob: -14.625085830688477
    8. ',H' → logprob: -14.875085830688477
    9. ' and' → logprob: -15.375085830688477
    10. 's' → logprob: -15.875085830688477

Token 246: 'points' (ID: 14011)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03931979089975357
    2. ' ,' → logprob: -4.41431999206543
    3. ',A' → logprob: -4.66431999206543
    4. ' A' → logprob: -4.91431999206543
    5. 'A' → logprob: -5.28931999206543
    6. ')' → logprob: -5.66431999206543
    7. '),' → logprob: -7.53931999206543
    8. ' )' → logprob: -8.78931999206543
    9. 'et' → logprob: -9.28931999206543
    10. ' et' → logprob: -9.41431999206543

Token 247: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06916525959968567
    2. ' de' → logprob: -3.5691652297973633
    3. '_de' → logprob: -3.9441652297973633
    4. 'de' → logprob: -5.194165229797363
    5. ' ,' → logprob: -5.319165229797363
    6. '   ' → logprob: -5.694165229797363
    7. ',de' → logprob: -6.194165229797363
    8. 'vie' → logprob: -6.944165229797363
    9. 'def' → logprob: -7.194165229797363
    10. '_v' → logprob: -8.069165229797363

Token 248: ' vie' (ID: 8585)
  Prédit: 'vie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vie' → logprob: -0.011107249185442924
    2. ' vie' → logprob: -4.511107444763184
    3. ' ' → logprob: -10.636107444763184
    4. 'life' → logprob: -12.136107444763184
    5. 'vict' → logprob: -12.136107444763184
    6. 'v' → logprob: -12.261107444763184
    7. 'vi' → logprob: -12.261107444763184
    8. 'mon' → logprob: -13.011107444763184
    9. '   ' → logprob: -13.136107444763184
    10. '  ' → logprob: -13.386107444763184

Token 249: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6612155437469482
    2. ')' → logprob: -0.9112155437469482
    3. '),' → logprob: -2.5362155437469482
    4. 'et' → logprob: -7.286215782165527
    5. ' et' → logprob: -7.661215782165527
    6. ' )' → logprob: -7.786215782165527
    7. ' ,' → logprob: -8.161215782165527
    8. '   ' → logprob: -8.161215782165527
    9. 'mon' → logprob: -9.161215782165527
    10. ' ),' → logprob: -9.161215782165527

Token 250: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5241720080375671
    2. 'A' → logprob: -0.8991720080375671
    3. '   ' → logprob: -7.274171829223633
    4. ' ' → logprob: -8.649171829223633
    5. '    ' → logprob: -9.524171829223633
    6. '  ' → logprob: -9.649171829223633
    7. ',' → logprob: -11.149171829223633
    8. ' ' → logprob: -11.899171829223633
    9. ' ,' → logprob: -12.774171829223633
    10. 'a' → logprob: -12.774171829223633

Token 251: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23680299520492554
    2. ',' → logprob: -1.6118030548095703
    3. '=' → logprob: -4.48680305480957
    4. '=input' → logprob: -10.23680305480957
    5. '=int' → logprob: -11.23680305480957
    6. ' ,' → logprob: -11.86180305480957
    7. ')' → logprob: -12.23680305480957
    8. '   ' → logprob: -13.36180305480957
    9. ',input' → logprob: -14.11180305480957
    10. 'input' → logprob: -14.23680305480957

Token 252: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4206116497516632
    2. ' dégâts' → logprob: -1.6706116199493408
    3. ' points' → logprob: -2.795611619949341
    4. 'points' → logprob: -2.920611619949341
    5. 'deg' → logprob: -4.42061185836792
    6. ' attaques' → logprob: -5.17061185836792
    7. ' dég' → logprob: -5.29561185836792
    8. 'attaque' → logprob: -5.29561185836792
    9. ' deg' → logprob: -5.79561185836792
    10. ' dommages' → logprob: -6.42061185836792

Token 253: 'ég' (ID: 6634)
  Prédit: 'ég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.02709641121327877
    2. 'eg' → logprob: -4.277096271514893
    3. 'é' → logprob: -5.027096271514893
    4. 'omm' → logprob: -5.777096271514893
    5. 'éf' → logprob: -6.527096271514893
    6. ' dégâts' → logprob: -7.777096271514893
    7. 'e' → logprob: -8.15209674835205
    8. 'éges' → logprob: -8.40209674835205
    9. 'égr' → logprob: -8.77709674835205
    10. 'égé' → logprob: -9.27709674835205

Token 254: 'âts' (ID: 181633)
  Prédit: 'âts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'âts' → logprob: -0.01004670187830925
    2. 'ats' → logprob: -5.010046482086182
    3. '   ' → logprob: -6.135046482086182
    4. 'é' → logprob: -8.76004695892334
    5. '```' → logprob: -8.88504695892334
    6. ' ' → logprob: -9.13504695892334
    7. '  ' → logprob: -9.13504695892334
    8. 'êts' → logprob: -9.38504695892334
    9. 'ât' → logprob: -9.76004695892334
    10. 'a' → logprob: -9.88504695892334

Token 255: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008961042389273643
    2. ' )' → logprob: -4.758961200714111
    3. ' inflicted' → logprob: -9.008960723876953
    4. ' par' → logprob: -10.008960723876953
    5. '   ' → logprob: -10.133960723876953
    6. ')
' → logprob: -10.883960723876953
    7. ' ' → logprob: -11.133960723876953
    8. ' =' → logprob: -11.258960723876953
    9. '_per' → logprob: -11.633960723876953
    10. ' ' → logprob: -11.883960723876953

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021261146757751703
    2. ' H' → logprob: -6.252126216888428
    3. '    
' → logprob: -9.37712574005127
    4. 'H' → logprob: -9.75212574005127
    5. ' =' → logprob: -11.37712574005127
    6. '  ' → logprob: -11.62712574005127
    7. '    ' → logprob: -12.12712574005127
    8. ' ' → logprob: -12.25212574005127
    9. 'input' → logprob: -12.50212574005127
    10. ',' → logprob: -12.62712574005127

Token 257: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -0.6332188248634338
    2. ' H' → logprob: -0.7582188248634338
    3. '   ' → logprob: -7.508218765258789
    4. 'h' → logprob: -10.633218765258789
    5. ' ' → logprob: -11.633218765258789
    6. ' line' → logprob: -11.758218765258789
    7. ' inputs' → logprob: -12.133218765258789
    8. ' h' → logprob: -12.508218765258789
    9. ' input' → logprob: -13.008218765258789
    10. 'line' → logprob: -13.008218765258789

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.229872087715194e-05
    2. ',A' → logprob: -10.000061988830566
    3. ' ,' → logprob: -11.125061988830566
    4. ' =' → logprob: -13.875061988830566
    5. 'A' → logprob: -14.375061988830566
    6. '=' → logprob: -14.875061988830566
    7. ' A' → logprob: -16.250062942504883
    8. ',
' → logprob: -16.375062942504883
    9. '   ' → logprob: -16.875062942504883
    10. ',a' → logprob: -17.500062942504883

Token 259: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6329724192619324
    2. ' A' → logprob: -0.7579724192619324
    3. ' ' → logprob: -8.382972717285156
    4. '<|end|>' → logprob: -9.132972717285156
    5. '  ' → logprob: -10.632972717285156
    6. '    ' → logprob: -12.382972717285156
    7. '=A' → logprob: -13.132972717285156
    8. '   ' → logprob: -13.757972717285156
    9. '	A' → logprob: -13.882972717285156
    10. '=' → logprob: -14.382972717285156

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313265860080719
    2. '=' → logprob: -1.3132658004760742
    3. '=input' → logprob: -12.688265800476074
    4. ')' → logprob: -14.313265800476074
    5. ',' → logprob: -15.938265800476074
    6. ' ' → logprob: -16.43826675415039
    7. '=int' → logprob: -16.43826675415039
    8. '<|end|>' → logprob: -16.68826675415039
    9. ')=' → logprob: -16.93826675415039
    10. '＝' → logprob: -17.93826675415039

Token 261: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.05488893762230873
    2. 'map' → logprob: -2.929888963699341
    3. ' ' → logprob: -12.929888725280762
    4. '	map' → logprob: -13.429888725280762
    5. ' ' → logprob: -13.804888725280762
    6. '[' → logprob: -14.429888725280762
    7. ' list' → logprob: -14.679888725280762
    8. ' [' → logprob: -15.804888725280762
    9. '(map' → logprob: -15.929888725280762
    10. 'm' → logprob: -16.054889678955078

Token 262: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008716569282114506
    2. '(' → logprob: -4.758716583251953
    3. 'int' → logprob: -9.508716583251953
    4. '(input' → logprob: -10.633716583251953
    5. '(
' → logprob: -13.633716583251953
    6. ' (' → logprob: -14.258716583251953
    7. ' int' → logprob: -14.383716583251953
    8. '<int' → logprob: -14.508716583251953
    9. '[int' → logprob: -15.008716583251953
    10. '=int' → logprob: -16.258716583251953

Token 263: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1305067390203476
    2. '(input' → logprob: -2.130506753921509
    3. ' input' → logprob: -6.63050651550293
    4. ')' → logprob: -6.75550651550293
    5. ',input' → logprob: -7.00550651550293
    6. ',' → logprob: -9.75550651550293
    7. '(' → logprob: -9.75550651550293
    8. '   ' → logprob: -10.00550651550293
    9. '=input' → logprob: -11.50550651550293
    10. ' ' → logprob: -12.88050651550293

Token 264: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1602245420217514
    2. ' input' → logprob: -1.9102245569229126
    3. '   ' → logprob: -16.28522491455078
    4. ' ' → logprob: -16.28522491455078
    5. '(input' → logprob: -16.28522491455078
    6. ')' → logprob: -16.66022491455078
    7. '=input' → logprob: -17.53522491455078
    8. '	input' → logprob: -17.66022491455078
    9. ',input' → logprob: -17.91022491455078
    10. '<input' → logprob: -18.16022491455078

Token 265: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.000297685619443655
    2. '()' → logprob: -8.125297546386719
    3. '())' → logprob: -14.250297546386719
    4. ' ().' → logprob: -14.750297546386719
    5. '("' → logprob: -15.625297546386719
    6. '(' → logprob: -15.875297546386719
    7. ')' → logprob: -16.25029754638672
    8. '()).' → logprob: -16.37529754638672
    9. '("").' → logprob: -16.75029754638672
    10. '(input' → logprob: -17.37529754638672

Token 266: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005561320576816797
    2. 'strip' → logprob: -7.500555992126465
    3. '().' → logprob: -13.000555992126465
    4. '(split' → logprob: -14.625555992126465
    5. 'rstrip' → logprob: -15.250555992126465
    6. ' split' → logprob: -16.00055694580078
    7. 'spl' → logprob: -17.12555694580078
    8. 'read' → logprob: -17.25055694580078
    9. '.split' → logprob: -18.00055694580078
    10. '_split' → logprob: -18.00055694580078

Token 267: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0010254278313368559
    2. '()))' → logprob: -7.376025199890137
    3. '()' → logprob: -8.126025199890137
    4. ')' → logprob: -9.376025199890137
    5. '('' → logprob: -11.626025199890137
    6. '(' → logprob: -12.876025199890137
    7. '))' → logprob: -13.126025199890137
    8. ' ())' → logprob: -13.251025199890137
    9. '())
' → logprob: -13.376025199890137
    10. '(','' → logprob: -15.376025199890137

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007757107261568308
    2. '    
' → logprob: -5.257757186889648
    3. '
' → logprob: -6.132757186889648
    4. 'print' → logprob: -9.257757186889648
    5. ')' → logprob: -9.757757186889648
    6. '<|end|>' → logprob: -9.757757186889648
    7. '\n' → logprob: -10.507757186889648
    8. '  
' → logprob: -10.507757186889648
    9. '```' → logprob: -11.132757186889648
    10. 'return' → logprob: -11.757757186889648

Token 269: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5147510766983032
    2. 'result' → logprob: -1.1397510766983032
    3. ' result' → logprob: -2.8897509574890137
    4. 'print' → logprob: -4.389750957489014
    5. ' turns' → logprob: -4.889750957489014
    6. 'count' → logprob: -6.389750957489014
    7. ' print' → logprob: -6.764750957489014
    8. '
' → logprob: -6.889750957489014
    9. '    
' → logprob: -6.889750957489014
    10. 't' → logprob: -7.514750957489014

Token 270: ' App' (ID: 2583)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7905099391937256
    2. 'print' → logprob: -1.2905099391937256
    3. 't' → logprob: -1.6655099391937256
    4. ' result' → logprob: -3.0405099391937256
    5. 'turn' → logprob: -4.290510177612305
    6. ' print' → logprob: -4.665510177612305
    7. ' turns' → logprob: -5.165510177612305
    8. 'res' → logprob: -6.290510177612305
    9. 'count' → logprob: -7.540510177612305
    10. 'num' → logprob: -7.665510177612305

Token 271: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.38736099004745483
    2. 'eler' → logprob: -1.1373610496520996
    3. 'eller' → logprob: -8.137360572814941
    4. '   ' → logprob: -9.887360572814941
    5. 'er' → logprob: -10.512360572814941
    6. 'elle' → logprob: -10.887360572814941
    7. 'ler' → logprob: -11.137360572814941
    8. 'e' → logprob: -11.637360572814941
    9. '       ' → logprob: -11.637360572814941
    10. '\' → logprob: -12.012360572814941

Token 272: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10776083171367645
    2. '(turn' → logprob: -2.6077609062194824
    3. 'def' → logprob: -3.8577609062194824
    4. '   ' → logprob: -5.357760906219482
    5. '(
' → logprob: -7.107760906219482
    6. '(def' → logprob: -7.482760906219482
    7. 'de' → logprob: -7.982760906219482
    8. '(t' → logprob: -8.232760429382324
    9. 'turn' → logprob: -8.232760429382324
    10. 'to' → logprob: -9.607760429382324

Token 273: ' la' (ID: 557)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.474501371383667
    2. ' turns' → logprob: -0.974501371383667
    3. 'print' → logprob: -8.099501609802246
    4. '(turn' → logprob: -10.224501609802246
    5. ' turn' → logprob: -11.099501609802246
    6. 'the' → logprob: -11.224501609802246
    7. 'prints' → logprob: -11.224501609802246
    8. '   ' → logprob: -11.724501609802246
    9. '_turn' → logprob: -11.724501609802246
    10. ' the' → logprob: -11.974501609802246

Token 274: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007301575969904661
    2. 'turn' → logprob: -5.0073018074035645
    3. ' print' → logprob: -7.7573018074035645
    4. ' turns' → logprob: -9.257301330566406
    5. 'prints' → logprob: -10.382301330566406
    6. 'def' → logprob: -10.757301330566406
    7. '   ' → logprob: -11.882301330566406
    8. '
' → logprob: -14.382301330566406
    9. 'puts' → logprob: -14.757301330566406
    10. 'Turns' → logprob: -14.882301330566406

Token 275: ' calcul' (ID: 7559)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7992805242538452
    2. 'turn' → logprob: -1.0492805242538452
    3. '   ' → logprob: -2.4242806434631348
    4. 'result' → logprob: -2.5492806434631348
    5. 'count' → logprob: -4.299280643463135
    6. ' turns' → logprob: -4.674280643463135
    7. 'def' → logprob: -5.299280643463135
    8. 'prints' → logprob: -7.049280643463135
    9. ' result' → logprob: -7.299280643463135
    10. 't' → logprob: -7.299280643463135

Token 276: 'ant' (ID: 493)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7470599412918091
    2. 'turn' → logprob: -0.7470599412918091
    3. 'er' → logprob: -3.9970598220825195
    4. 'def' → logprob: -4.4970598220825195
    5. ' turns' → logprob: -4.9970598220825195
    6. '_' → logprob: -5.7470598220825195
    7. '_to' → logprob: -5.9970598220825195
    8. '_turn' → logprob: -5.9970598220825195
    9. '       ' → logprob: -6.2470598220825195
    10. 'eturn' → logprob: -7.1220598220825195

Token 277: ' le' (ID: 505)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.1915391981601715
    2. 'le' → logprob: -1.9415391683578491
    3. ' turns' → logprob: -4.316539287567139
    4. 'the' → logprob: -4.816539287567139
    5. 'les' → logprob: -5.566539287567139
    6. ' the' → logprob: -5.941539287567139
    7. ' le' → logprob: -6.066539287567139
    8. 'la' → logprob: -8.94153881072998
    9. 't' → logprob: -9.06653881072998
    10. '   ' → logprob: -9.44153881072998

Token 278: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.013737361878156662
    2. ' nombre' → logprob: -4.763737201690674
    3. 'turn' → logprob: -5.388737201690674
    4. 'number' → logprob: -8.888737678527832
    5. 'Nombre' → logprob: -9.138737678527832
    6. 'nb' → logprob: -9.138737678527832
    7. 'tour' → logprob: -9.888737678527832
    8. ' turns' → logprob: -10.513737678527832
    9. 'result' → logprob: -10.763737678527832
    10. 'next' → logprob: -11.138737678527832

Token 279: ' de' (ID: 334)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.8409280180931091
    2. 'de' → logprob: -1.090928077697754
    3. '_turn' → logprob: -2.465928077697754
    4. ' de' → logprob: -2.840928077697754
    5. '_' → logprob: -2.840928077697754
    6. '_des' → logprob: -4.590928077697754
    7. '_to' → logprob: -5.465928077697754
    8. '   ' → logprob: -5.465928077697754
    9. '_t' → logprob: -5.715928077697754
    10. 'def' → logprob: -5.840928077697754

Token 280: ' tours' (ID: 32603)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0558345653116703
    2. 'turn' → logprob: -2.9308345317840576
    3. 'tour' → logprob: -7.430834770202637
    4. ' tours' → logprob: -8.180834770202637
    5. ' turns' → logprob: -10.680834770202637
    6. ' ' → logprob: -11.180834770202637
    7. '_t' → logprob: -11.680834770202637
    8. '_' → logprob: -11.930834770202637
    9. '   ' → logprob: -12.430834770202637
    10. 'def' → logprob: -12.680834770202637

Token 281: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028875328600406647
    2. 'to' → logprob: -4.278875350952148
    3. '_to' → logprob: -5.403875350952148
    4. 'def' → logprob: -5.778875350952148
    5. 'result' → logprob: -6.028875350952148
    6. 'print' → logprob: -6.653875350952148
    7. ' to' → logprob: -6.778875350952148
    8. 'de' → logprob: -7.653875350952148
    9. 'count' → logprob: -8.403875350952148
    10. 'nombre' → logprob: -8.403875350952148

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021578760351985693
    2. 'result' → logprob: -7.502157688140869
    3. ' turns' → logprob: -7.877157688140869
    4. 'count' → logprob: -8.002158164978027
    5. 'turn' → logprob: -8.002158164978027
    6. 'print' → logprob: -8.502158164978027
    7. 'def' → logprob: -9.002158164978027
    8. ' to' → logprob: -10.127158164978027
    9. ',' → logprob: -10.377158164978027
    10. ')' → logprob: -10.752158164978027

Token 283: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.9014004468917847
    2. 'print' → logprob: -1.5264004468917847
    3. ' result' → logprob: -2.151400566101074
    4. ' turns' → logprob: -2.526400566101074
    5. 'turn' → logprob: -2.776400566101074
    6. '   ' → logprob: -3.026400566101074
    7. ' print' → logprob: -3.276400566101074
    8. 'count' → logprob: -4.026400566101074
    9. 't' → logprob: -4.651400566101074
    10. 'res' → logprob: -6.526400566101074

Token 284: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246292024850845
    2. '=' → logprob: -3.7732462882995605
    3. '_' → logprob: -14.898246765136719
    4. ')' → logprob: -15.023246765136719
    5. ' ' → logprob: -17.14824676513672
    6. '  ' → logprob: -17.27324676513672
    7. ' =)' → logprob: -17.39824676513672
    8. 's' → logprob: -17.64824676513672
    9. '＝' → logprob: -17.77324676513672
    10. '   ' → logprob: -18.14824676513672

Token 285: ' turns' (ID: 18304)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.6931576728820801
    2. ' turns' → logprob: -0.6931576728820801
    3. ' turn' → logprob: -11.943157196044922
    4. 'Turns' → logprob: -13.068157196044922
    5. '(turn' → logprob: -14.193157196044922
    6. '_turn' → logprob: -14.318157196044922
    7. '   ' → logprob: -15.568157196044922
    8. 'turned' → logprob: -15.568157196044922
    9. ' ' → logprob: -16.318157196044922
    10. '.turn' → logprob: -17.068157196044922

Token 286: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -15.625
    3. '_t' → logprob: -17.875
    4. 'to' → logprob: -19.0
    5. ' _' → logprob: -19.75
    6. '_TO' → logprob: -20.625
    7. 'To' → logprob: -21.5
    8. ' to' → logprob: -21.625
    9. '_
' → logprob: -21.75
    10. '_turn' → logprob: -21.75

Token 287: '_def' (ID: 26756)
  Prédit: '_def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_def' → logprob: -0.3132862150669098
    2. 'def' → logprob: -1.3132861852645874
    3. ' defeat' → logprob: -10.813285827636719
    4. 'Def' → logprob: -14.563285827636719
    5. '_' → logprob: -14.688285827636719
    6. '-def' → logprob: -14.938285827636719
    7. '_de' → logprob: -15.188285827636719
    8. 'define' → logprob: -15.313285827636719
    9. 'edef' → logprob: -15.438285827636719
    10. ':def' → logprob: -15.438285827636719

Token 288: 'eat' (ID: 100633)
  Prédit: 'eat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.00845441222190857
    2. 'at' → logprob: -4.883454322814941
    3. 'e' → logprob: -7.258454322814941
    4. 'def' → logprob: -9.258454322814941
    5. 'feat' → logprob: -11.508454322814941
    6. 'mon' → logprob: -11.883454322814941
    7. '_mon' → logprob: -13.008454322814941
    8. 'ate' → logprob: -13.258454322814941
    9. 'a' → logprob: -13.320954322814941
    10. 'et' → logprob: -13.383454322814941

Token 289: '_mon' (ID: 80615)
  Prédit: '_mon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mon' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -14.250000953674316
    3. '_m' → logprob: -17.75
    4. '_MON' → logprob: -18.25
    5. ' мон' → logprob: -18.375
    6. '(mon' → logprob: -19.375
    7. 'mon' → logprob: -19.375
    8. '_def' → logprob: -20.375
    9. '```' → logprob: -20.5
    10. ' _' → logprob: -20.625

Token 290: 'ster' (ID: 3968)
  Prédit: 'ster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ster' → logprob: -0.00035083942930214107
    2. 'monster' → logprob: -8.500350952148438
    3. 'ste' → logprob: -10.875350952148438
    4. 'Monster' → logprob: -11.000350952148438
    5. 'aster' → logprob: -11.125350952148438
    6. 'sters' → logprob: -11.250350952148438
    7. 'ter' → logprob: -11.250350952148438
    8. 'st' → logprob: -11.750350952148438
    9. 'stre' → logprob: -11.750350952148438
    10. 'oster' → logprob: -11.875350952148438

Token 291: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -2.451116051815916e-05
    2. '(' → logprob: -10.625024795532227
    3. ' (' → logprob: -15.625024795532227
    4. '(
' → logprob: -17.750024795532227
    5. '(M' → logprob: -18.375024795532227
    6. '(I' → logprob: -19.250024795532227
    7. '(S' → logprob: -19.875024795532227
    8. '(G' → logprob: -20.000024795532227
    9. '(C' → logprob: -20.125024795532227
    10. '(E' → logprob: -20.500024795532227

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0087516784551553e-05
    2. ',A' → logprob: -11.62501049041748
    3. ' ,' → logprob: -14.50001049041748
    4. ',
' → logprob: -15.12501049041748
    5. 'A' → logprob: -15.50001049041748
    6. '   ' → logprob: -17.125009536743164
    7. ')' → logprob: -19.875009536743164
    8. ',

' → logprob: -19.875009536743164
    9. '‌,' → logprob: -19.875009536743164
    10. ' ' → logprob: -20.250009536743164

Token 293: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.47407716512680054
    2. 'A' → logprob: -0.9740771651268005
    3. ')' → logprob: -16.224077224731445
    4. ' ' → logprob: -17.224077224731445
    5. '	A' → logprob: -17.599077224731445
    6. ' ' → logprob: -18.349077224731445
    7. '   ' → logprob: -18.599077224731445
    8. '_A' → logprob: -18.724077224731445
    9. ',A' → logprob: -19.849077224731445
    10. '    ' → logprob: -19.974077224731445

Token 294: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011049585416913033
    2. ')
' → logprob: -4.511049747467041
    3. ')
' → logprob: -13.386049270629883
    4. '   ' → logprob: -15.511049270629883
    5. ')

' → logprob: -16.761049270629883
    6. ' )' → logprob: -16.886049270629883
    7. '),' → logprob: -19.511049270629883
    8. ' )
' → logprob: -19.761049270629883
    9. ')`' → logprob: -19.761049270629883
    10. ')#' → logprob: -19.886049270629883

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16030851006507874
    2. 'print' → logprob: -1.9103084802627563
    3. ' print' → logprob: -10.160308837890625
    4. '
' → logprob: -10.160308837890625
    5. '    
' → logprob: -12.535308837890625
    6. '```' → logprob: -12.785308837890625
    7. '	print' → logprob: -14.910308837890625
    8. '    ' → logprob: -16.785308837890625
    9. '  ' → logprob: -17.160308837890625
    10. '   ' → logprob: -17.285308837890625

Token 296: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0026211936492472887
    2. '   ' → logprob: -6.002621173858643
    3. ' print' → logprob: -9.0026216506958
    4. '
' → logprob: -10.7526216506958
    5. '```' → logprob: -14.1276216506958
    6. '	print' → logprob: -16.002620697021484
    7. '    
' → logprob: -16.252620697021484
    8. '#print' → logprob: -17.377620697021484
    9. '
' → logprob: -17.877620697021484
    10. '.print' → logprob: -19.252620697021484

Token 297: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0788913294672966
    2. ' print' → logprob: -2.5788912773132324
    3. '   ' → logprob: -13.45389175415039
    4. 'Print' → logprob: -16.20389175415039
    5. '```' → logprob: -18.32889175415039
    6. '	print' → logprob: -19.20389175415039
    7. 'pr' → logprob: -19.32889175415039
    8. '#print' → logprob: -20.20389175415039
    9. 'prin' → logprob: -20.32889175415039
    10. 'printf' → logprob: -20.82889175415039

Token 298: 'iche' (ID: 7509)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.028815096244215965
    2. 'ich' → logprob: -3.7788150310516357
    3. 'iche' → logprob: -5.278815269470215
    4. 'ichage' → logprob: -8.403815269470215
    5. 'ic' → logprob: -9.028815269470215
    6. '   ' → logprob: -9.528815269470215
    7. 'print' → logprob: -10.528815269470215
    8. '#' → logprob: -12.278815269470215
    9. 'cher' → logprob: -12.653815269470215
    10. 'ichier' → logprob: -14.028815269470215

Token 299: ' le' (ID: 505)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.01824558526277542
    2. '(' → logprob: -4.018245697021484
    3. '(f' → logprob: -9.518245697021484
    4. '("' → logprob: -11.768245697021484
    5. '   ' → logprob: -12.268245697021484
    6. '(res' → logprob: -12.768245697021484
    7. 'result' → logprob: -13.018245697021484
    8. ' (' → logprob: -13.143245697021484
    9. '(
' → logprob: -14.518245697021484
    10. '(results' → logprob: -14.643245697021484

Token 300: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0110534792765975
    2. '(result' → logprob: -4.511053562164307
    3. ' result' → logprob: -12.636053085327148
    4. 'res' → logprob: -13.386053085327148
    5. '(' → logprob: -14.511053085327148
    6. 'resultado' → logprob: -15.886053085327148
    7. 'print' → logprob: -16.63605308532715
    8. 'r' → logprob: -17.01105308532715
    9. 'results' → logprob: -17.63605308532715
    10. '(res' → logprob: -17.88605308532715

Token 301: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005277725285850465
    2. 'print' → logprob: -7.875527858734131
    3. '(result' → logprob: -9.875527381896973
    4. '(' → logprob: -10.000527381896973
    5. ' print' → logprob: -10.375527381896973
    6. '(print' → logprob: -11.125527381896973
    7. '
' → logprob: -13.750527381896973
    8. 'result' → logprob: -13.750527381896973
    9. '()' → logprob: -14.000527381896973
    10. '    
' → logprob: -14.500527381896973

Token 302: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015645647421479225
    2. '   ' → logprob: -4.265645503997803
    3. ' print' → logprob: -6.515645503997803
    4. '(print' → logprob: -14.140645980834961
    5. '```' → logprob: -16.14064598083496
    6. '	print' → logprob: -16.39064598083496
    7. '.print' → logprob: -19.26564598083496
    8. '(' → logprob: -19.51564598083496
    9. '
' → logprob: -20.14064598083496
    10. ' ' → logprob: -20.26564598083496

Token 303: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.704273118884885e-07
    2. ' print' → logprob: -14.250000953674316
    3. '   ' → logprob: -18.0
    4. '```' → logprob: -21.0
    5. 'pr' → logprob: -23.25
    6. 'prin' → logprob: -25.75
    7. '	print' → logprob: -25.875
    8. 'printf' → logprob: -26.25
    9. '#print' → logprob: -26.375
    10. '`' → logprob: -26.875

Token 304: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.048588961362838745
    2. '(' → logprob: -3.048588991165161
    3. '(res' → logprob: -14.673588752746582
    4. '()' → logprob: -14.798588752746582
    5. '(results' → logprob: -15.173588752746582
    6. ' (' → logprob: -15.923588752746582
    7. '(resultado' → logprob: -16.1735897064209
    8. '(f' → logprob: -16.7985897064209
    9. 'result' → logprob: -16.9235897064209
    10. '('' → logprob: -17.0485897064209

Token 305: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -17.625
    3. ')`' → logprob: -18.625
    4. ')
' → logprob: -19.25
    5. '')' → logprob: -19.875
    6. '))' → logprob: -20.25
    7. '()' → logprob: -20.375
    8. '())' → logprob: -20.5
    9. '`)' → logprob: -20.5
    10. '")' → logprob: -20.75

Token 306: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.935296834039036e-06
    2. ' if' → logprob: -12.87500286102295
    3. '#' → logprob: -15.75000286102295
    4. '
' → logprob: -16.125003814697266
    5. 'main' → logprob: -16.500003814697266
    6. '```' → logprob: -17.750003814697266
    7. '\n' → logprob: -18.500003814697266
    8. '\' → logprob: -19.750003814697266
    9. 'If' → logprob: -19.750003814697266
    10. '<|end|>' → logprob: -19.875003814697266

Token 307: ' App' (ID: 2583)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.134509021649137e-05
    2. ' if' → logprob: -9.75006103515625
    3. 'main' → logprob: -12.75006103515625
    4. '__' → logprob: -16.50006103515625
    5. 'If' → logprob: -17.87506103515625
    6. 'ifdef' → logprob: -20.12506103515625
    7. ' main' → logprob: -21.12506103515625
    8. 'ifndef' → logprob: -21.62506103515625
    9. '```' → logprob: -21.87506103515625
    10. '#' → logprob: -22.62506103515625

Token 308: 'el' (ID: 296)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10874675214290619
    2. 'el' → logprob: -2.3587467670440674
    3. 'le' → logprob: -6.233746528625488
    4. 'lication' → logprob: -6.358746528625488
    5. 'ly' → logprob: -6.358746528625488
    6. 'end' → logprob: -6.483746528625488
    7. 'elif' → logprob: -7.858746528625488
    8. 'eler' → logprob: -8.608746528625488
    9. '```' → logprob: -8.608746528625488
    10. 'ear' → logprob: -9.108746528625488

Token 309: ' de' (ID: 334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001933397026732564
    2. 'main' → logprob: -6.751933574676514
    3. '(main' → logprob: -8.001933097839355
    4. ' if' → logprob: -8.251933097839355
    5. ' main' → logprob: -9.001933097839355
    6. '_main' → logprob: -10.501933097839355
    7. 'def' → logprob: -11.376933097839355
    8. '__' → logprob: -13.251933097839355
    9. '_' → logprob: -14.001933097839355
    10. '(' → logprob: -14.501933097839355

Token 310: ' la' (ID: 557)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.868328920158092e-05
    2. ' main' → logprob: -10.500028610229492
    3. 'if' → logprob: -13.750028610229492
    4. '__' → logprob: -16.875028610229492
    5. '(main' → logprob: -19.500028610229492
    6. '	main' → logprob: -19.625028610229492
    7. '_main' → logprob: -19.750028610229492
    8. '.main' → logprob: -21.250028610229492
    9. 'the' → logprob: -22.375028610229492
    10. '```' → logprob: -23.375028610229492

Token 311: ' fonction' (ID: 17610)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.012226476334035397
    2. 'if' → logprob: -4.512226581573486
    3. ' main' → logprob: -6.762226581573486
    4. '__' → logprob: -10.887226104736328
    5. ' if' → logprob: -13.637226104736328
    6. '```' → logprob: -13.887226104736328
    7. 'def' → logprob: -16.137226104736328
    8. 'principal' → logprob: -16.262226104736328
    9. '	main' → logprob: -16.762226104736328
    10. '_main' → logprob: -16.762226104736328

Token 312: ' principale' (ID: 68926)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.003319353563711047
    2. 'if' → logprob: -5.753319263458252
    3. '(main' → logprob: -9.25331974029541
    4. ' main' → logprob: -10.00331974029541
    5. '_main' → logprob: -15.25331974029541
    6. '	main' → logprob: -16.378318786621094
    7. ' if' → logprob: -16.878318786621094
    8. 'm' → logprob: -17.003318786621094
    9. 'maine' → logprob: -17.503318786621094
    10. '.main' → logprob: -17.628318786621094

Token 313: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4201623797416687
    2. 'main' → logprob: -1.1701624393463135
    3. '
' → logprob: -3.4201624393463135
    4. '

' → logprob: -11.170162200927734
    5. '(main' → logprob: -11.420162200927734
    6. ' main' → logprob: -11.920162200927734
    7. ' if' → logprob: -13.045162200927734
    8. '
' → logprob: -14.295162200927734
    9. '\n' → logprob: -14.670162200927734
    10. '```' → logprob: -15.170162200927734

Token 314: ' ce' (ID: 2357)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5759451985359192
    2. '__' → logprob: -0.8259451985359192
    3. 'name' → logprob: -12.700944900512695
    4. ' ' → logprob: -13.325944900512695
    5. '_name' → logprob: -14.575944900512695
    6. ' ' → logprob: -15.700944900512695
    7. '/__' → logprob: -16.450944900512695
    8. '_' → logprob: -17.200944900512695
    9. '___' → logprob: -17.200944900512695
    10. ' name' → logprob: -17.200944900512695

Token 315: ' fichier' (ID: 69637)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.14386874437332153
    2. ' __' → logprob: -2.0188686847686768
    3. 'name' → logprob: -7.143868923187256
    4. '_name' → logprob: -9.018868446350098
    5. ' ==' → logprob: -9.643868446350098
    6. ' ' → logprob: -10.018868446350098
    7. '_' → logprob: -10.393868446350098
    8. '==' → logprob: -10.643868446350098
    9. ' is' → logprob: -11.143868446350098
    10. '___' → logprob: -11.268868446350098

Token 316: ' est' (ID: 893)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01451075542718172
    2. ' __' → logprob: -4.639510631561279
    3. '==' → logprob: -6.014510631561279
    4. ' ==' → logprob: -7.264510631561279
    5. ' is' → logprob: -7.514510631561279
    6. 'est' → logprob: -7.639510631561279
    7. 'name' → logprob: -8.139511108398438
    8. ' est' → logprob: -9.389511108398438
    9. 'is' → logprob: -9.764511108398438
    10. '_name' → logprob: -10.514511108398438

Token 317: ' exécut' (ID: 165350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.38688361644744873
    2. ' __' → logprob: -1.1368836164474487
    3. '_' → logprob: -12.511883735656738
    4. '_name' → logprob: -12.761883735656738
    5. 'name' → logprob: -13.011883735656738
    6. ' "__' → logprob: -13.136883735656738
    7. '___' → logprob: -14.511883735656738
    8. ' _' → logprob: -14.886883735656738
    9. '/__' → logprob: -15.511883735656738
    10. ' ' → logprob: -15.886883735656738

Token 318: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06608898192644119
    2. ' en' → logprob: -3.691088914871216
    3. 'if' → logprob: -4.566089153289795
    4. ' __' → logprob: -4.691089153289795
    5. 'ed' → logprob: -4.816089153289795
    6. ' directly' → logprob: -5.691089153289795
    7. 'direct' → logprob: -6.441089153289795
    8. ' directement' → logprob: -6.441089153289795
    9. 'd' → logprob: -6.691089153289795
    10. ' if' → logprob: -6.816089153289795

Token 319: ' directement' (ID: 52317)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.37648525834083557
    2. ' en' → logprob: -2.3764853477478027
    3. ' __' → logprob: -2.6264853477478027
    4. ' as' → logprob: -3.0014853477478027
    5. ' under' → logprob: -3.3764853477478027
    6. 'if' → logprob: -3.8764853477478027
    7. '_name' → logprob: -4.251485347747803
    8. 'as' → logprob: -5.876485347747803
    9. '_as' → logprob: -5.876485347747803
    10. ' if' → logprob: -6.001485347747803

Token 320: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6356127262115479
    2. '
' → logprob: -0.7606127262115479
    3. '

' → logprob: -7.135612487792969
    4. ' if' → logprob: -7.260612487792969
    5. '```' → logprob: -7.260612487792969
    6. '\n' → logprob: -8.385612487792969
    7. ':
' → logprob: -8.760612487792969
    8. ':' → logprob: -8.885612487792969
    9. '
' → logprob: -9.135612487792969
    10. '  
' → logprob: -9.760612487792969

Token 321: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0802738870552275e-05
    2. '
' → logprob: -11.50001049041748
    3. ' if' → logprob: -14.25001049041748
    4. '```' → logprob: -16.750011444091797
    5. '

' → logprob: -20.625011444091797
    6. '
' → logprob: -21.125011444091797
    7. '\n' → logprob: -21.125011444091797
    8. '__' → logprob: -22.750011444091797
    9. '\
' → logprob: -22.750011444091797
    10. ' 
' → logprob: -22.750011444091797

Token 322: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.018152397125959396
    2. '__' → logprob: -4.018152236938477
    3. ' ' → logprob: -13.143152236938477
    4. ' ' → logprob: -14.893152236938477
    5. '_' → logprob: -16.893152236938477
    6. ' ' → logprob: -17.518152236938477
    7. '___' → logprob: -18.018152236938477
    8. '/__' → logprob: -18.393152236938477
    9. '​' → logprob: -18.643152236938477
    10. ' ___' → logprob: -19.018152236938477

Token 323: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06575004011392593
    2. '__' → logprob: -2.9407501220703125
    3. '==' → logprob: -5.0657501220703125
    4. ' __' → logprob: -5.4407501220703125
    5. 'name' → logprob: -9.565750122070312
    6. '_' → logprob: -10.315750122070312
    7. '=="' → logprob: -11.190750122070312
    8. ' =="' → logprob: -11.315750122070312
    9. ' =' → logprob: -11.565750122070312
    10. '=='' → logprob: -12.065750122070312

Token 324: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.816093228830141e-06
    2. '==' → logprob: -12.87500286102295
    3. ' ==' → logprob: -16.000001907348633
    4. '__.__' → logprob: -16.750001907348633
    5. '=="' → logprob: -18.625001907348633
    6. '___' → logprob: -19.000001907348633
    7. '__
' → logprob: -19.375001907348633
    8. '____' → logprob: -19.500001907348633
    9. '__('' → logprob: -19.500001907348633
    10. '__

' → logprob: -19.500001907348633

Token 325: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.19077371060848236
    2. '==' → logprob: -2.0657737255096436
    3. ' ==' → logprob: -3.0657737255096436
    4. '=="' → logprob: -8.190773963928223
    5. '=='' → logprob: -10.440773963928223
    6. '___' → logprob: -11.565773963928223
    7. '===' → logprob: -11.940773963928223
    8. '=' → logprob: -11.940773963928223
    9. '_' → logprob: -12.690773963928223
    10. ' =' → logprob: -13.065773963928223

Token 326: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02338721975684166
    2. ''' → logprob: -3.7733871936798096
    3. ' "__' → logprob: -8.89838695526123
    4. '__' → logprob: -12.77338695526123
    5. ' '__' → logprob: -13.02338695526123
    6. '("__' → logprob: -17.398387908935547
    7. '"user' → logprob: -17.898387908935547
    8. '"'' → logprob: -18.398387908935547
    9. '"name' → logprob: -18.648387908935547
    10. ''"' → logprob: -19.023387908935547

Token 327: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. 'name' → logprob: -18.25
    3. ' main' → logprob: -20.125
    4. '_main' → logprob: -22.125
    5. 'ma' → logprob: -23.375
    6. '__' → logprob: -23.625
    7. 'm' → logprob: -23.875
    8. '	main' → logprob: -24.25
    9. 'maine' → logprob: -25.125
    10. 'mp' → logprob: -25.375

Token 328: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12693682312965393
    2. '__":
' → logprob: -2.126936912536621
    3. '__':
' → logprob: -12.251936912536621
    4. '"' → logprob: -12.626936912536621
    5. '__["' → logprob: -15.626936912536621
    6. '```' → logprob: -15.626936912536621
    7. '__("' → logprob: -16.001935958862305
    8. '__
' → logprob: -16.126935958862305
    9. '__
' → logprob: -16.501935958862305
    10. '__",' → logprob: -16.876935958862305

Token 329: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.010729319415986538
    2. '__' → logprob: -4.7607293128967285
    3. ''' → logprob: -6.2607293128967285
    4. 'main' → logprob: -8.885729789733887
    5. ' "__' → logprob: -9.760729789733887
    6. '   ' → logprob: -12.635729789733887
    7. ' main' → logprob: -13.260729789733887
    8. ' __' → logprob: -14.635729789733887
    9. ' '__' → logprob: -14.635729789733887
    10. '_main' → logprob: -15.260729789733887

Token 330: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0009114635176956654
    2. ' main' → logprob: -7.000911235809326
    3. '	main' → logprob: -17.875911712646484
    4. '   ' → logprob: -18.625911712646484
    5. '_main' → logprob: -21.000911712646484
    6. '(main' → logprob: -22.125911712646484
    7. '.main' → logprob: -22.625911712646484
    8. 'Main' → logprob: -23.750911712646484
    9. ' ' → logprob: -24.375911712646484
    10. 'ma' → logprob: -25.500911712646484

Token 331: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 329
Tokens correctement prédits (1ère position, stricte): 116
Tokens correctement prédits (1ère position, avec adaptation): 126
Tokens correctement prédits (top 10): 236
Précision stricte (1ère position): 35.26%
Précision adaptée (1ère position): 38.30%
Précision (top 10): 71.73%
================================================================================
