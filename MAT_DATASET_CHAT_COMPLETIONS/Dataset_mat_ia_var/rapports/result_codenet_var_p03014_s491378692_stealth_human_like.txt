================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict

H, W = map(int, input().split())
mass = []
for x in range(H):
    # Pas fan des noms courts mais bon
    mass.append(input())

values_row = defaultdict(int)
values_col = defaultdict(int)

row_index = [[0]*W for _ in range(H)]
col_index = [[0]*W for _ in range(H)]

counter = 0
for r in range(H):
    counter += 1
    for c in range(W):
        if mass[r][c] == '#':
            counter += 1
        else:
            values_row[counter] += 1
            row_index[r][c] = counter

# Je voulais afficher ici mais ça fait un peu de bruit
# for row in row_index:
#     print(row)

counter = 0
for c in range(W):
    counter += 1
    for r in range(H):
        if mass[r][c] == '#':
            counter += 1
        else:
            values_col[counter] += 1
            col_index[r][c] = counter

# J'ai failli oublier ce passage
res = 0
for r in range(H):
    for c in range(W):
        # ça devrait faire l'affaire, j'espère
        temp = values_row[row_index[r][c]] + values_col[col_index[r][c]] - 1
        if temp > res:
            res = temp

print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.037925124168396
    2. 'default' → logprob: -1.162925124168396
    3. 'abc' → logprob: -1.787925124168396
    4. 'Counter' → logprob: -2.4129252433776855
    5. ' defaultdict' → logprob: -2.7879252433776855
    6. 'named' → logprob: -5.4129252433776855
    7. ' Counter' → logprob: -5.5379252433776855
    8. ' abc' → logprob: -6.0379252433776855
    9. ' deque' → logprob: -6.4129252433776855
    10. '```' → logprob: -6.7879252433776855

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20557522773742676
    2. '\' → logprob: -2.9555752277374268
    3. '```' → logprob: -3.0805752277374268
    4. '\n' → logprob: -4.080574989318848
    5. '\(' → logprob: -4.205574989318848
    6. 'newline' → logprob: -4.330574989318848
    7. '(
' → logprob: -4.705574989318848
    8. 'a' → logprob: -5.580574989318848
    9. '
' → logprob: -5.955574989318848
    10. '[' → logprob: -5.955574989318848

Token 5: 'H' (ID: 39)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2259136587381363
    2. 'd' → logprob: -2.6009137630462646
    3. '\n' → logprob: -2.8509137630462646
    4. '\' → logprob: -3.7259137630462646
    5. 'def' → logprob: -4.6009135246276855
    6. '
' → logprob: -5.2259135246276855
    7. '```' → logprob: -5.4759135246276855
    8. 'a' → logprob: -5.6009135246276855
    9. 'default' → logprob: -5.6009135246276855
    10. 'newline' → logprob: -5.6009135246276855

Token 6: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.022432992234826088
    2. '=' → logprob: -4.272432804107666
    3. 'a' → logprob: -5.647432804107666
    4. ' =' → logprob: -6.147432804107666
    5. 'd' → logprob: -7.772432804107666
    6. 'y' → logprob: -8.022433280944824
    7. 'D' → logprob: -8.272433280944824
    8. '(' → logprob: -8.272433280944824
    9. '{' → logprob: -8.522433280944824
    10. 'i' → logprob: -8.897433280944824

Token 7: ' W' (ID: 486)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38496023416519165
    2. ' W' → logprob: -1.8849601745605469
    3. '=' → logprob: -2.759960174560547
    4. 'W' → logprob: -3.509960174560547
    5. ' ' → logprob: -3.509960174560547
    6. ''' → logprob: -4.384960174560547
    7. ')' → logprob: -5.009960174560547
    8. ' defaultdict' → logprob: -5.009960174560547
    9. '   ' → logprob: -5.884960174560547
    10. '"' → logprob: -6.009960174560547

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48113346099853516
    2. ' =' → logprob: -0.9811334609985352
    3. ',' → logprob: -4.981133460998535
    4. ')' → logprob: -9.356133460998535
    5. '<|end|>' → logprob: -10.606133460998535
    6. '=
' → logprob: -11.231133460998535
    7. ' =
' → logprob: -11.606133460998535
    8. ' ' → logprob: -11.606133460998535
    9. ' ,' → logprob: -11.981133460998535
    10. '_' → logprob: -12.731133460998535

Token 9: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.041702743619680405
    2. ' map' → logprob: -4.041702747344971
    3. '0' → logprob: -4.666702747344971
    4. '10' → logprob: -5.041702747344971
    5. 'map' → logprob: -5.666702747344971
    6. '20' → logprob: -6.416702747344971
    7. ' defaultdict' → logprob: -6.916702747344971
    8. '50' → logprob: -8.291702270507812
    9. ' (' → logprob: -8.666702270507812
    10. '100' → logprob: -8.916702270507812

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.044958461076021194
    2. '(' → logprob: -3.2949583530426025
    3. '(str' → logprob: -5.544958591461182
    4. '(input' → logprob: -6.419958591461182
    5. '(lambda' → logprob: -7.044958591461182
    6. 'int' → logprob: -8.169958114624023
    7. '()' → logprob: -9.669958114624023
    8. 'input' → logprob: -9.919958114624023
    9. '<int' → logprob: -10.919958114624023
    10. '[int' → logprob: -11.294958114624023

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008351094089448452
    2. '(' → logprob: -5.1333513259887695
    3. ')' → logprob: -7.0083513259887695
    4. '<|end|>' → logprob: -7.5083513259887695
    5. ' ,' → logprob: -8.38335132598877
    6. ' (' → logprob: -9.38335132598877
    7. '```' → logprob: -9.38335132598877
    8. '(','' → logprob: -9.75835132598877
    9. ',input' → logprob: -9.88335132598877
    10. '(input' → logprob: -9.88335132598877

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931498050689697
    2. ' input' → logprob: -0.6931498050689697
    3. ' ' → logprob: -13.31814956665039
    4. '(input' → logprob: -14.81814956665039
    5. '=input' → logprob: -15.44314956665039
    6. ',input' → logprob: -15.69314956665039
    7. '	input' → logprob: -16.56814956665039
    8. ')' → logprob: -16.69314956665039
    9. 'str' → logprob: -16.81814956665039
    10. '```' → logprob: -17.81814956665039

Token 13: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.052756667137146
    2. '())' → logprob: -1.052756667137146
    3. '().' → logprob: -1.802756667137146
    4. '()' → logprob: -2.0527567863464355
    5. '(),' → logprob: -5.3027567863464355
    6. '(' → logprob: -6.3027567863464355
    7. ',' → logprob: -7.0527567863464355
    8. '());' → logprob: -8.177756309509277
    9. '()>' → logprob: -8.927756309509277
    10. '`()' → logprob: -9.052756309509277

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004084574058651924
    2. 'strip' → logprob: -5.504084587097168
    3. 'rstrip' → logprob: -12.379084587097168
    4. 'read' → logprob: -13.879084587097168
    5. ')' → logprob: -14.129084587097168
    6. '(split' → logprob: -16.25408363342285
    7. ' split' → logprob: -16.62908363342285
    8. 'spl' → logprob: -17.12908363342285
    9. 'isdigit' → logprob: -18.12908363342285
    10. 'startswith' → logprob: -18.25408363342285

Token 15: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002742350334301591
    2. '))' → logprob: -6.377742290496826
    3. '())' → logprob: -7.002742290496826
    4. '()' → logprob: -9.627742767333984
    5. '`)' → logprob: -10.502742767333984
    6. ')`' → logprob: -11.627742767333984
    7. '(' → logprob: -12.002742767333984
    8. '),' → logprob: -12.502742767333984
    9. '```' → logprob: -12.752742767333984
    10. ')))' → logprob: -13.002742767333984

Token 16: 'mass' (ID: 50019)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.32849037647247314
    2. 'field' → logprob: -2.5784902572631836
    3. 'matrix' → logprob: -2.9534902572631836
    4. 'graph' → logprob: -3.0784902572631836
    5. 'dp' → logprob: -3.3284902572631836
    6. 'counts' → logprob: -3.9534902572631836
    7. 'd' → logprob: -4.703490257263184
    8. 'data' → logprob: -5.328490257263184
    9. 'colors' → logprob: -5.703490257263184
    10. 'tiles' → logprob: -5.828490257263184

Token 17: ' =' (ID: 314)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.06062706932425499
    2. '[' → logprob: -3.435626983642578
    3. ' =' → logprob: -4.060626983642578
    4. '_' → logprob: -5.685626983642578
    5. '_map' → logprob: -7.060626983642578
    6. '=' → logprob: -7.310626983642578
    7. '_array' → logprob: -7.685626983642578
    8. ' ' → logprob: -7.935626983642578
    9. '_counts' → logprob: -7.935626983642578
    10. '_count' → logprob: -8.060626983642578

Token 18: ' []
' (ID: 8911)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.7082797288894653
    2. ' defaultdict' → logprob: -0.8332797288894653
    3. '[' → logprob: -3.333279609680176
    4. ' [' → logprob: -3.458279609680176
    5. '[[' → logprob: -6.333279609680176
    6. ' []' → logprob: -6.833279609680176
    7. ' [[' → logprob: -6.958279609680176
    8. '[]' → logprob: -7.208279609680176
    9. ' [[]' → logprob: -8.083279609680176
    10. ' ' → logprob: -8.333279609680176

Token 19: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0067156096920371056
    2. ' for' → logprob: -5.006715774536133
    3. '	for' → logprob: -15.881715774536133
    4. 'For' → logprob: -17.256715774536133
    5. '_for' → logprob: -17.756715774536133
    6. '```' → logprob: -17.881715774536133
    7. '[' → logprob: -18.131715774536133
    8. '   ' → logprob: -19.756715774536133
    9. '
' → logprob: -20.131715774536133
    10. '_' → logprob: -20.381715774536133

Token 20: ' x' (ID: 1215)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.031024061143398285
    2. ' ' → logprob: -4.156023979187012
    3. ' i' → logprob: -4.281023979187012
    4. '_' → logprob: -6.906023979187012
    5. ' ' → logprob: -10.281023979187012
    6. 'i' → logprob: -12.031023979187012
    7. ' ‌' → logprob: -12.906023979187012
    8. ' ▁' → logprob: -13.531023979187012
    9. '  ' → logprob: -13.906023979187012
    10. ' ​' → logprob: -14.781023979187012

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00624326104298234
    2. 'in' → logprob: -5.2562432289123535
    3. '_' → logprob: -7.2562432289123535
    4. ' ' → logprob: -8.256243705749512
    5. ' _' → logprob: -10.881243705749512
    6. 'x' → logprob: -12.506243705749512
    7. '  ' → logprob: -12.631243705749512
    8. 'i' → logprob: -12.881243705749512
    9. 'n' → logprob: -13.006243705749512
    10. '_in' → logprob: -13.006243705749512

Token 22: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.28115934133529663
    2. ' range' → logprob: -1.4061594009399414
    3. 'input' → logprob: -13.156159400939941
    4. '_' → logprob: -13.531159400939941
    5. 'ra' → logprob: -13.906159400939941
    6. '	range' → logprob: -14.281159400939941
    7. 'ran' → logprob: -14.531159400939941
    8. 'rang' → logprob: -14.656159400939941
    9. '[' → logprob: -14.781159400939941
    10. 'r' → logprob: -14.781159400939941

Token 23: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.2521403431892395
    2. '(' → logprob: -1.5021402835845947
    3. '(W' → logprob: -8.502140045166016
    4. ' (' → logprob: -13.377140045166016
    5. '(len' → logprob: -13.877140045166016
    6. '(
' → logprob: -14.002140045166016
    7. '(I' → logprob: -14.002140045166016
    8. '(s' → logprob: -14.377140045166016
    9. '((' → logprob: -14.877140045166016
    10. '(int' → logprob: -15.002140045166016

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009831507923081517
    2. ')' → logprob: -7.375983238220215
    3. '):
' → logprob: -8.250983238220215
    4. ':' → logprob: -10.125983238220215
    5. ' ):' → logprob: -10.375983238220215
    6. '+' → logprob: -10.875983238220215
    7. '   ' → logprob: -13.500983238220215
    8. ']:' → logprob: -14.125983238220215
    9. ' ' → logprob: -14.375983238220215
    10. '}:' → logprob: -14.750983238220215

Token 25: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.56334388256073
    2. '   ' → logprob: -0.93834388256073
    3. ' ' → logprob: -3.8133440017700195
    4. ' mass' → logprob: -5.1883440017700195
    5. '     
' → logprob: -6.0633440017700195
    6. '```' → logprob: -6.3133440017700195
    7. ' input' → logprob: -6.3133440017700195
    8. '    
' → logprob: -6.3133440017700195
    9. 'mass' → logprob: -7.1883440017700195
    10. 'input' → logprob: -7.3133440017700195

Token 26: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5336282253265381
    2. ' mass' → logprob: -1.033628225326538
    3. ' row' → logprob: -3.158628225326538
    4. ' data' → logprob: -5.158628463745117
    5. 'mass' → logprob: -6.033628463745117
    6. ' line' → logprob: -6.158628463745117
    7. '    ' → logprob: -6.783628463745117
    8. ' s' → logprob: -6.908628463745117
    9. 'data' → logprob: -7.533628463745117
    10. 's' → logprob: -8.283628463745117

Token 27: ' Pas' (ID: 18323)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24216702580451965
    2. ' row' → logprob: -2.4921669960021973
    3. ' data' → logprob: -2.9921669960021973
    4. ' mass' → logprob: -3.1171669960021973
    5. '    ' → logprob: -4.367166996002197
    6. ' line' → logprob: -4.992166996002197
    7. 'data' → logprob: -5.117166996002197
    8. ' input' → logprob: -6.242166996002197
    9. 'row' → logprob: -6.242166996002197
    10. ' ' → logprob: -6.492166996002197

Token 28: ' fan' (ID: 6831)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00039849523454904556
    2. 'sage' → logprob: -8.500398635864258
    3. 'sed' → logprob: -9.625398635864258
    4. 'se' → logprob: -9.875398635864258
    5. 'sing' → logprob: -10.125398635864258
    6. '   ' → logprob: -11.750398635864258
    7. 'sure' → logprob: -12.750398635864258
    8. 'sum' → logprob: -13.125398635864258
    9. 'sert' → logprob: -13.125398635864258
    10. '#' → logprob: -13.250398635864258

Token 29: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1611236333847046
    2. 's' → logprob: -2.036123752593994
    3. ' ' → logprob: -5.286123752593994
    4. 'for' → logprob: -5.786123752593994
    5. ' for' → logprob: -5.786123752593994
    6. '       ' → logprob: -6.661123752593994
    7. '    ' → logprob: -7.411123752593994
    8. 't' → logprob: -7.536123752593994
    9. '  ' → logprob: -7.786123752593994
    10. 'es' → logprob: -7.911123752593994

Token 30: ' noms' (ID: 97041)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.102890133857727
    2. 'input' → logprob: -1.477890133857727
    3. ' input' → logprob: -1.977890133857727
    4. '(' → logprob: -2.2278900146484375
    5. 'range' → logprob: -2.6028900146484375
    6. '(input' → logprob: -3.6028900146484375
    7. ' range' → logprob: -3.6028900146484375
    8. ')' → logprob: -3.6028900146484375
    9. '(range' → logprob: -4.4778900146484375
    10. ' ' → logprob: -5.1028900146484375

Token 31: ' courts' (ID: 33374)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10707473754882812
    2. ':' → logprob: -2.982074737548828
    3. ' de' → logprob: -3.857074737548828
    4. ' ' → logprob: -4.607074737548828
    5. ' :' → logprob: -4.857074737548828
    6. '    ' → logprob: -5.732074737548828
    7. ' of' → logprob: -6.232074737548828
    8. '  ' → logprob: -6.857074737548828
    9. ')' → logprob: -7.357074737548828
    10. ' for' → logprob: -7.482074737548828

Token 32: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015444573014974594
    2. ':' → logprob: -4.515444755554199
    3. ' :' → logprob: -5.890444755554199
    4. '    ' → logprob: -7.515444755554199
    5. ')' → logprob: -8.5154447555542
    6. ' ' → logprob: -8.8904447555542
    7. '  ' → logprob: -9.0154447555542
    8. '(' → logprob: -9.2654447555542
    9. '):' → logprob: -9.5154447555542
    10. ' (' → logprob: -9.6404447555542

Token 33: ' bon' (ID: 4846)
  Prédit: ' mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mass' → logprob: -0.2665041387081146
    2. '   ' → logprob: -2.1415040493011475
    3. 'mass' → logprob: -3.1415040493011475
    4. '    ' → logprob: -3.8915040493011475
    5. ' data' → logprob: -4.266504287719727
    6. '_' → logprob: -5.141504287719727
    7. 'y' → logprob: -5.391504287719727
    8. ' input' → logprob: -5.516504287719727
    9. ' lines' → logprob: -5.891504287719727
    10. ' y' → logprob: -6.266504287719727

Token 34: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014539248077198863
    2. ':' → logprob: -7.626453876495361
    3. '```' → logprob: -8.37645435333252
    4. '    
' → logprob: -8.75145435333252
    5. '    ' → logprob: -8.87645435333252
    6. ' mass' → logprob: -9.37645435333252
    7. '   ' → logprob: -10.12645435333252
    8. '  ' → logprob: -10.25145435333252
    9. 'mass' → logprob: -10.25145435333252
    10. ' ' → logprob: -10.37645435333252

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001511408481746912
    2. '    
' → logprob: -7.001511573791504
    3. '   ' → logprob: -8.876511573791504
    4. '
' → logprob: -9.376511573791504
    5. '```' → logprob: -9.376511573791504
    6. '  ' → logprob: -9.501511573791504
    7. 'input' → logprob: -10.501511573791504
    8. '    ' → logprob: -10.626511573791504
    9. '       ' → logprob: -10.751511573791504
    10. ' ' → logprob: -11.126511573791504

Token 36: ' mass' (ID: 4842)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.5450258255004883
    2. 'line' → logprob: -2.0450258255004883
    3. ' row' → logprob: -2.2950258255004883
    4. 's' → logprob: -2.6700258255004883
    5. 'l' → logprob: -3.4200258255004883
    6. ' line' → logprob: -3.7950258255004883
    7. '   ' → logprob: -3.7950258255004883
    8. 'mass' (adapté à ' mass') → logprob: -4.795025825500488
    9. 'y' → logprob: -4.920025825500488
    10. 'a' → logprob: -5.670025825500488

Token 37: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014243539422750473
    2. '.' → logprob: -4.2642436027526855
    3. ' =' → logprob: -10.514243125915527
    4. '=' → logprob: -10.514243125915527
    5. ' .' → logprob: -11.389243125915527
    6. '.extend' → logprob: -13.014243125915527
    7. '_row' → logprob: -13.264243125915527
    8. 'append' → logprob: -13.389243125915527
    9. '   ' → logprob: -13.514243125915527
    10. '_' → logprob: -14.014243125915527

Token 38: '(input' (ID: 10054)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.0015762827824801207
    2. '(' → logprob: -6.7515764236450195
    3. '([' → logprob: -8.00157642364502
    4. 'list' → logprob: -10.62657642364502
    5. '(tuple' → logprob: -10.75157642364502
    6. '(input' → logprob: -11.12657642364502
    7. '([]' → logprob: -11.87657642364502
    8. '(
' → logprob: -14.25157642364502
    9. '(l' → logprob: -14.50157642364502
    10. '(li' → logprob: -15.00157642364502

Token 39: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023284733295440674
    2. '()' → logprob: -3.773284673690796
    3. '().' → logprob: -10.523284912109375
    4. '()))' → logprob: -12.023284912109375
    5. '();)' → logprob: -13.023284912109375
    6. ' ())' → logprob: -13.648284912109375
    7. '())
' → logprob: -14.148284912109375
    8. ')' → logprob: -14.648284912109375
    9. '())

' → logprob: -14.773284912109375
    10. '()]' → logprob: -15.148284912109375

Token 40: 'values' (ID: 7222)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.663482427597046
    2. '<|end|>' → logprob: -1.663482427597046
    3. ')' → logprob: -1.913482427597046
    4. '
' → logprob: -2.163482427597046
    5. 'for' → logprob: -2.413482427597046
    6. '#' → logprob: -3.163482427597046
    7. 'neighbors' → logprob: -3.288482427597046
    8. 's' → logprob: -4.038482666015625
    9. 'neighbor' → logprob: -4.038482666015625
    10. 'result' → logprob: -4.413482666015625

Token 41: '_row' (ID: 19157)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2889280319213867
    2. '=' → logprob: -1.5389280319213867
    3. '[' → logprob: -3.7889280319213867
    4. '_' → logprob: -4.538928031921387
    5. ')' → logprob: -6.663928031921387
    6. 's' → logprob: -7.913928031921387
    7. '(' → logprob: -8.288928031921387
    8. ' ' → logprob: -8.663928031921387
    9. '[:]' → logprob: -8.788928031921387
    10. ']' → logprob: -9.038928031921387

Token 42: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06742378324270248
    2. ' =' → logprob: -3.0674238204956055
    3. '=' → logprob: -4.3174238204956055
    4. '_' → logprob: -5.8174238204956055
    5. '_s' → logprob: -6.9424238204956055
    6. '_values' → logprob: -7.1924238204956055
    7. '[' → logprob: -8.692423820495605
    8. '=[]' → logprob: -9.067423820495605
    9. ')' → logprob: -9.567423820495605
    10. '[]' → logprob: -9.942423820495605

Token 43: ' defaultdict' (ID: 107098)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05243473872542381
    2. 'default' → logprob: -3.0524346828460693
    3. '[]' → logprob: -6.302434921264648
    4. '[len' → logprob: -7.427434921264648
    5. ' [' → logprob: -7.802434921264648
    6. '[m' → logprob: -8.052434921264648
    7. '[-' → logprob: -9.302434921264648
    8. '(default' → logprob: -9.302434921264648
    9. '[int' → logprob: -9.427434921264648
    10. '[[' → logprob: -9.677434921264648

Token 44: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4713548421859741
    2. '(list' → logprob: -1.5963548421859741
    3. '(lambda' → logprob: -1.8463548421859741
    4. '(' → logprob: -4.346354961395264
    5. 'list' → logprob: -6.971354961395264
    6. '(<' → logprob: -7.221354961395264
    7. '<int' → logprob: -8.221354484558105
    8. '(
' → logprob: -8.721354484558105
    9. 'int' → logprob: -9.346354484558105
    10. '(dict' → logprob: -9.471354484558105

Token 45: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1279553291387856e-05
    2. ' )' → logprob: -12.000011444091797
    3. ')
' → logprob: -12.750011444091797
    4. '[' → logprob: -14.375011444091797
    5. '())' → logprob: -14.875011444091797
    6. ')

' → logprob: -15.375011444091797
    7. '()' → logprob: -15.500011444091797
    8. ')`' → logprob: -15.625011444091797
    9. '))' → logprob: -15.750011444091797
    10. ',' → logprob: -16.500011444091797

Token 46: 'values' (ID: 7222)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0947912409901619
    2. 'values' → logprob: -2.5947911739349365
    3. ' for' → logprob: -4.344791412353516
    4. ')' → logprob: -7.094791412353516
    5. '<|end|>' → logprob: -7.344791412353516
    6. '
' → logprob: -8.094791412353516
    7. 's' → logprob: -8.219791412353516
    8. ' values' → logprob: -8.594791412353516
    9. 'row' → logprob: -8.969791412353516
    10. 'indices' → logprob: -9.844791412353516

Token 47: '_col' (ID: 7255)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.5390287637710571
    2. '_' → logprob: -0.9140287637710571
    3. '[' → logprob: -4.414028644561768
    4. '_rows' → logprob: -6.664028644561768
    5. 'row' → logprob: -7.664028644561768
    6. '<|end|>' → logprob: -7.789028644561768
    7. '[row' → logprob: -8.289029121398926
    8. ')' → logprob: -8.414029121398926
    9. '[]' → logprob: -9.039029121398926
    10. 'Row' → logprob: -9.289029121398926

Token 48: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22712910175323486
    2. ' =' → logprob: -1.6021291017532349
    3. '[' → logprob: -6.477128982543945
    4. ')' → logprob: -9.352128982543945
    5. ']' → logprob: -9.977128982543945
    6. ' ' → logprob: -11.477128982543945
    7. '   ' → logprob: -11.852128982543945
    8. '[]' → logprob: -12.602128982543945
    9. '<|end|>' → logprob: -12.602128982543945
    10. '=[' → logprob: -13.102128982543945

Token 49: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -7.52919222577475e-05
    2. '(default' → logprob: -10.000075340270996
    3. ' defaultdict' → logprob: -10.500075340270996
    4. 'def' → logprob: -14.250075340270996
    5. ''default' → logprob: -14.375075340270996
    6. '"default' → logprob: -14.625075340270996
    7. 'Default' → logprob: -16.00007438659668
    8. '[' → logprob: -16.12507438659668
    9. ' default' → logprob: -16.37507438659668
    10. '.default' → logprob: -16.50007438659668

Token 50: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.815280696377158e-05
    2. 'int' → logprob: -9.875078201293945
    3. '(lambda' → logprob: -11.125078201293945
    4. '[int' → logprob: -11.625078201293945
    5. '<int' → logprob: -13.000078201293945
    6. '=int' → logprob: -15.750078201293945
    7. ',int' → logprob: -15.875078201293945
    8. 'lambda' → logprob: -16.000078201293945
    9. ']int' → logprob: -16.000078201293945
    10. '(' → logprob: -16.375078201293945

Token 51: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.874882430769503e-05
    2. ')
' → logprob: -10.125079154968262
    3. '()' → logprob: -11.125079154968262
    4. ' )' → logprob: -11.875079154968262
    5. ')

' → logprob: -12.125079154968262
    6. 'for' → logprob: -12.250079154968262
    7. '())' → logprob: -13.375079154968262
    8. '[' → logprob: -14.000079154968262
    9. '#' → logprob: -14.250079154968262
    10. '   ' → logprob: -14.500079154968262

Token 52: 'row' (ID: 843)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.531315314830863e-06
    2. ' for' → logprob: -12.750003814697266
    3. '```' → logprob: -15.250003814697266
    4. '#' → logprob: -15.500003814697266
    5. 'For' → logprob: -16.125003814697266
    6. ')' → logprob: -17.750003814697266
    7. '	for' → logprob: -17.750003814697266
    8. '
' → logprob: -18.750003814697266
    9. 'i' → logprob: -19.000003814697266
    10. 'values' → logprob: -19.125003814697266

Token 53: '_index' (ID: 7748)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010951608419418335
    2. '_s' → logprob: -4.760951519012451
    3. '_' → logprob: -7.135951519012451
    4. 'values' → logprob: -8.13595199584961
    5. '_values' → logprob: -8.13595199584961
    6. '[s' → logprob: -8.38595199584961
    7. '[]' → logprob: -8.51095199584961
    8. ' s' → logprob: -9.01095199584961
    9. '[' → logprob: -9.51095199584961
    10. ']' → logprob: -9.76095199584961

Token 54: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7841689586639404
    2. 's' → logprob: -1.4091689586639404
    3. '=' → logprob: -1.7841689586639404
    4. '[]' → logprob: -3.5341689586639404
    5. ' =' → logprob: -3.6591689586639404
    6. ']' → logprob: -3.7841689586639404
    7. ')' → logprob: -4.1591691970825195
    8. ',' → logprob: -4.5341691970825195
    9. ' ' → logprob: -4.9091691970825195
    10. '_' → logprob: -5.0341691970825195

Token 55: ' [[' (ID: 9237)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005235887598246336
    2. ' ' → logprob: -5.25523567199707
    3. 'H' → logprob: -14.38023567199707
    4. ' H' → logprob: -15.00523567199707
    5. 'x' → logprob: -15.00523567199707
    6. '(' → logprob: -15.50523567199707
    7. '1' → logprob: -16.13023567199707
    8. '<|end|>' → logprob: -16.13023567199707
    9. '[' → logprob: -16.56773567199707
    10. ' x' → logprob: -16.94273567199707

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0855339765548706
    2. '-' → logprob: -3.83553409576416
    3. 'int' → logprob: -4.33553409576416
    4. 'False' → logprob: -4.33553409576416
    5. ']' → logprob: -4.71053409576416
    6. 'i' → logprob: -4.83553409576416
    7. 'None' → logprob: -5.46053409576416
    8. 'x' → logprob: -5.46053409576416
    9. '(' → logprob: -6.46053409576416
    10. 'j' → logprob: -6.46053409576416

Token 57: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.35521188378334045
    2. ' for' → logprob: -1.480211853981018
    3. 'for' → logprob: -3.2302119731903076
    4. ',' → logprob: -4.4802117347717285
    5. ']*' → logprob: -4.4802117347717285
    6. ' ]' → logprob: -5.1052117347717285
    7. ']]' → logprob: -6.7302117347717285
    8. ')' → logprob: -7.4802117347717285
    9. ' ' → logprob: -8.730212211608887
    10. '0' → logprob: -8.730212211608887

Token 58: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0002661039761733264
    2. ' W' → logprob: -8.375266075134277
    3. '(W' → logprob: -10.625266075134277
    4. 'H' → logprob: -12.250266075134277
    5. '   ' → logprob: -12.750266075134277
    6. '(' → logprob: -13.875266075134277
    7. ' (' → logprob: -14.500266075134277
    8. 'len' → logprob: -15.000266075134277
    9. ' ' → logprob: -15.125266075134277
    10. '  ' → logprob: -15.625266075134277

Token 59: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07002301514148712
    2. 'for' → logprob: -2.6950230598449707
    3. ')' → logprob: -10.070022583007812
    4. ']' → logprob: -10.320022583007812
    5. ' ' → logprob: -12.320022583007812
    6. ' ]' → logprob: -13.195022583007812
    7. '	for' → logprob: -13.570022583007812
    8. '   ' → logprob: -13.820022583007812
    9. '0' → logprob: -14.070022583007812
    10. '```' → logprob: -14.820022583007812

Token 60: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.015606100670993328
    2. '_' → logprob: -5.015605926513672
    3. 'range' → logprob: -5.140605926513672
    4. ' _' → logprob: -6.140605926513672
    5. ' in' → logprob: -7.265605926513672
    6. '_range' → logprob: -9.640605926513672
    7. '(range' → logprob: -10.765605926513672
    8. ' xrange' → logprob: -11.015605926513672
    9. '<|end|>' → logprob: -11.265605926513672
    10. ' x' → logprob: -11.390605926513672

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19009889662265778
    2. 'in' → logprob: -1.9400988817214966
    3. 'range' → logprob: -3.565099000930786
    4. ' range' → logprob: -6.815098762512207
    5. ' ' → logprob: -10.815098762512207
    6. 'H' → logprob: -11.815098762512207
    7. 'x' → logprob: -12.815098762512207
    8. 'i' → logprob: -13.565098762512207
    9. '  ' → logprob: -13.565098762512207
    10. '<|end|>' → logprob: -13.815098762512207

Token 62: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.493430894101039e-05
    2. ' range' → logprob: -9.500075340270996
    3. '(range' → logprob: -16.87507438659668
    4. '[' → logprob: -19.37507438659668
    5. '	range' → logprob: -19.37507438659668
    6. ')' → logprob: -21.50007438659668
    7. '(' → logprob: -22.00007438659668
    8. 'row' → logprob: -22.12507438659668
    9. 'rang' → logprob: -22.50007438659668
    10. '   ' → logprob: -22.75007438659668

Token 63: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0003062646137550473
    2. 'H' → logprob: -8.125306129455566
    3. '(' → logprob: -11.625306129455566
    4. ')' → logprob: -14.875306129455566
    5. ' (' → logprob: -15.250306129455566
    6. ' H' → logprob: -15.250306129455566
    7. ')(' → logprob: -16.500307083129883
    8. '   ' → logprob: -16.750307083129883
    9. '((' → logprob: -16.875307083129883
    10. '	H' → logprob: -17.000307083129883

Token 64: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0015243870439007878
    2. ')' → logprob: -6.876524448394775
    3. ']' → logprob: -7.626524448394775
    4. ')],' → logprob: -13.626523971557617
    5. '])' → logprob: -13.751523971557617
    6. '])]' → logprob: -14.501523971557617
    7. ')])' → logprob: -14.626523971557617
    8. ' )' → logprob: -15.126523971557617
    9. ' ]' → logprob: -15.751523971557617
    10. '')]' → logprob: -16.001523971557617

Token 65: 'col' (ID: 1798)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28444623947143555
    2. 'col' → logprob: -1.6594462394714355
    3. ' for' → logprob: -3.1594462394714355
    4. 'column' → logprob: -5.5344462394714355
    5. ' col' → logprob: -5.7844462394714355
    6. ']' → logprob: -5.7844462394714355
    7. ')' → logprob: -6.5344462394714355
    8. 'row' → logprob: -7.2844462394714355
    9. 'c' → logprob: -7.6594462394714355
    10. 'i' → logprob: -7.7844462394714355

Token 66: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0001617035741219297
    2. '_' → logprob: -9.625162124633789
    3. '_indices' → logprob: -10.875162124633789
    4. '_values' → logprob: -11.250162124633789
    5. 'index' → logprob: -11.500162124633789
    6. '_indexes' → logprob: -12.125162124633789
    7. 's' → logprob: -12.250162124633789
    8. ']_' → logprob: -12.250162124633789
    9. ' _' → logprob: -12.625162124633789
    10. '_idx' → logprob: -12.875162124633789

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022910177707672
    2. '=' → logprob: -1.9102290868759155
    3. ' ' → logprob: -13.035228729248047
    4. '[' → logprob: -13.535228729248047
    5. ' =[' → logprob: -14.035228729248047
    6. ']' → logprob: -16.035228729248047
    7. ')' → logprob: -16.035228729248047
    8. '＝' → logprob: -16.160228729248047
    9. '=[' → logprob: -16.160228729248047
    10. ',' → logprob: -16.410228729248047

Token 68: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0007565005216747522
    2. '[' → logprob: -7.50075626373291
    3. ' [[' → logprob: -8.50075626373291
    4. '([[' → logprob: -16.750757217407227
    5. ' [' → logprob: -16.875757217407227
    6. '0' → logprob: -18.250757217407227
    7. '   ' → logprob: -18.625757217407227
    8. '[]' → logprob: -18.875757217407227
    9. ' ' → logprob: -19.250757217407227
    10. '[['' → logprob: -19.750757217407227

Token 69: '0' (ID: 15)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.34860309958457947
    2. '0' → logprob: -1.2236031293869019
    3. ' H' → logprob: -9.473603248596191
    4. 'W' → logprob: -9.598603248596191
    5. ' ' → logprob: -11.848603248596191
    6. '   ' → logprob: -13.723603248596191
    7. '(H' → logprob: -13.723603248596191
    8. 'h' → logprob: -14.098603248596191
    9. '(' → logprob: -14.348603248596191
    10. '[' → logprob: -14.598603248596191

Token 70: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.03398129343986511
    2. '*' → logprob: -3.4089813232421875
    3. ']' → logprob: -8.658981323242188
    4. ' for' → logprob: -9.533981323242188
    5. 'for' → logprob: -10.158981323242188
    6. 'H' → logprob: -10.283981323242188
    7. ')*' → logprob: -12.283981323242188
    8. ' ]' → logprob: -12.908981323242188
    9. '"*' → logprob: -13.158981323242188
    10. '   ' → logprob: -13.283981323242188

Token 71: 'W' (ID: 54)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.6656825866666622e-05
    2. 'W' → logprob: -10.75002670288086
    3. ' H' → logprob: -12.25002670288086
    4. '   ' → logprob: -16.12502670288086
    5. '	H' → logprob: -16.87502670288086
    6. '(H' → logprob: -17.00002670288086
    7. '```' → logprob: -17.12502670288086
    8. '0' → logprob: -17.62502670288086
    9. 'h' → logprob: -17.62502670288086
    10. ')' → logprob: -17.75002670288086

Token 72: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03819502890110016
    2. ' for' → logprob: -3.2881951332092285
    3. ']' → logprob: -8.91319465637207
    4. ')' → logprob: -11.03819465637207
    5. '*' → logprob: -14.41319465637207
    6. '	for' → logprob: -14.66319465637207
    7. '[' → logprob: -15.03819465637207
    8. '   ' → logprob: -15.16319465637207
    9. '`' → logprob: -15.41319465637207
    10. ' ]' → logprob: -15.41319465637207

Token 73: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.314581036567688
    2. ' range' → logprob: -1.314581036567688
    3. '(H' → logprob: -6.814580917358398
    4. '(range' → logprob: -8.814580917358398
    5. 'H' → logprob: -9.689580917358398
    6. ' H' → logprob: -12.064580917358398
    7. '_range' → logprob: -13.189580917358398
    8. '(' → logprob: -15.064580917358398
    9. ' (' → logprob: -15.189580917358398
    10. '0' → logprob: -15.314580917358398

Token 74: ' in' (ID: 306)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.3140566051006317
    2. 'range' → logprob: -1.314056634902954
    3. ' range' → logprob: -7.189056396484375
    4. '(H' → logprob: -10.439056396484375
    5. '(range' → logprob: -12.314056396484375
    6. '1' → logprob: -13.689056396484375
    7. ' H' → logprob: -13.814056396484375
    8. 'Range' → logprob: -14.064056396484375
    9. 'row' → logprob: -14.314056396484375
    10. '(' → logprob: -14.564056396484375

Token 75: ' range' (ID: 3352)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.003425327595323324
    2. 'range' → logprob: -5.753425121307373
    3. ' range' → logprob: -8.628425598144531
    4. '(H' → logprob: -9.753425598144531
    5. ' H' → logprob: -11.628425598144531
    6. '(' → logprob: -14.378425598144531
    7. '(range' → logprob: -14.878425598144531
    8. 'W' → logprob: -15.378425598144531
    9. 'Range' → logprob: -16.25342559814453
    10. '[' → logprob: -16.25342559814453

Token 76: '(H' (ID: 20904)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.693159818649292
    2. '(H' → logprob: -0.693159818649292
    3. ')' → logprob: -11.818160057067871
    4. '(' → logprob: -12.568160057067871
    5. '-H' → logprob: -14.693160057067871
    6. ')]' → logprob: -15.068160057067871
    7. ' H' → logprob: -15.068160057067871
    8. '0' → logprob: -15.443160057067871
    9. 'W' → logprob: -15.943160057067871
    10. '	H' → logprob: -16.193159103393555

Token 77: ')]

' (ID: 56882)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03857807815074921
    2. ')]' → logprob: -3.2885780334472656
    3. ']' → logprob: -8.288578033447266
    4. '])' → logprob: -8.413578033447266
    5. ')])' → logprob: -10.163578033447266
    6. '))' → logprob: -10.913578033447266
    7. '）' → logprob: -12.788578033447266
    8. '])]' → logprob: -13.413578033447266
    9. ' )' → logprob: -14.788578033447266
    10. '),' → logprob: -15.038578033447266

Token 78: 'counter' (ID: 32128)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00284469872713089
    2. 'count' → logprob: -7.00284481048584
    3. 'current' → logprob: -7.25284481048584
    4. 'counter' → logprob: -8.37784481048584
    5. '#' → logprob: -8.50284481048584
    6. 'value' → logprob: -8.62784481048584
    7. 'i' → logprob: -8.62784481048584
    8. 'row' → logprob: -9.75284481048584
    9. ' for' → logprob: -10.25284481048584
    10. 'val' → logprob: -10.37784481048584

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014702587388455868
    2. '=' → logprob: -4.264702796936035
    3. '_' → logprob: -7.889702796936035
    4. ' ' → logprob: -9.264702796936035
    5. 's' → logprob: -11.264702796936035
    6. '1' → logprob: -11.514702796936035
    7. ')' → logprob: -11.764702796936035
    8. '  ' → logprob: -11.889702796936035
    9. ' +=' → logprob: -12.389702796936035
    10. '<|end|>' → logprob: -12.514702796936035

Token 80: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5892431735992432
    2. '1' → logprob: -0.8392431735992432
    3. ' ' → logprob: -4.339242935180664
    4. '{}' → logprob: -8.964242935180664
    5. '[' → logprob: -11.214242935180664
    6. '{' → logprob: -11.214242935180664
    7. 'default' → logprob: -12.839242935180664
    8. ' defaultdict' → logprob: -13.089242935180664
    9. '-' → logprob: -13.339242935180664
    10. '   ' → logprob: -13.464242935180664

Token 81: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5766071081161499
    2. '0' → logprob: -0.8266071081161499
    3. '-' → logprob: -8.826606750488281
    4. '[' → logprob: -8.826606750488281
    5. '{}' → logprob: -8.951606750488281
    6. 'default' → logprob: -9.201606750488281
    7. ' ' → logprob: -9.701606750488281
    8. '{' → logprob: -10.451606750488281
    9. '[]' → logprob: -11.326606750488281
    10. 'int' → logprob: -12.451606750488281

Token 82: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07791103422641754
    2. ' for' → logprob: -2.827911138534546
    3. '
' → logprob: -4.577910900115967
    4. '<|end|>' → logprob: -5.327910900115967
    5. '' → logprob: -9.077911376953125
    6. '#' → logprob: -9.077911376953125
    7. ')' → logprob: -9.202911376953125
    8. '```' → logprob: -9.327911376953125
    9. '<|end|>' → logprob: -9.702911376953125
    10. ',' → logprob: -9.827911376953125

Token 83: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010473522706888616
    2. ' for' → logprob: -9.625104904174805
    3. '#' → logprob: -10.875104904174805
    4. 'current' → logprob: -11.750104904174805
    5. 'For' → logprob: -13.125104904174805
    6. '```' → logprob: -13.125104904174805
    7. 'prev' → logprob: -13.625104904174805
    8. 'last' → logprob: -14.125104904174805
    9. 'def' → logprob: -14.250104904174805
    10. 'x' → logprob: -14.250104904174805

Token 84: ' r' (ID: 428)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4633069634437561
    2. ' i' → logprob: -1.3383069038391113
    3. 'x' → logprob: -2.4633069038391113
    4. 'i' → logprob: -3.9633069038391113
    5. ' y' → logprob: -6.588306903839111
    6. ' h' → logprob: -6.838306903839111
    7. ' r' → logprob: -6.838306903839111
    8. '_' → logprob: -8.71330738067627
    9. 'h' → logprob: -8.71330738067627
    10. ' _' → logprob: -9.08830738067627

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018328918144106865
    2. 'in' → logprob: -4.01832914352417
    3. ' ' → logprob: -8.893328666687012
    4. ',' → logprob: -10.893328666687012
    5. 'n' → logprob: -12.143328666687012
    6. 's' → logprob: -13.018328666687012
    7. '_' → logprob: -13.143328666687012
    8. ')' → logprob: -13.268328666687012
    9. ' i' → logprob: -13.393328666687012
    10. 'i' → logprob: -13.518328666687012

Token 86: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1269376575946808
    2. ' range' → logprob: -2.1269376277923584
    3. 'ange' → logprob: -11.751937866210938
    4. ' ' → logprob: -14.501937866210938
    5. ')' → logprob: -15.126937866210938
    6. '	range' → logprob: -15.251937866210938
    7. '(range' → logprob: -15.626937866210938
    8. '   ' → logprob: -15.751937866210938
    9. 'in' → logprob: -16.376937866210938
    10. '  ' → logprob: -16.751937866210938

Token 87: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -9.591415437171236e-05
    2. '(' → logprob: -9.375096321105957
    3. 'H' → logprob: -11.500096321105957
    4. ')' → logprob: -14.375096321105957
    5. '(len' → logprob: -15.500096321105957
    6. ' (' → logprob: -17.12509536743164
    7. '(W' → logprob: -17.25009536743164
    8. '(
' → logprob: -17.75009536743164
    9. ' H' → logprob: -17.87509536743164
    10. '()' → logprob: -18.00009536743164

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020167864859104156
    2. '):
' → logprob: -6.502017021179199
    3. ' ):' → logprob: -7.627017021179199
    4. ' ' → logprob: -11.5020170211792
    5. ')' → logprob: -11.6270170211792
    6. '   ' → logprob: -12.8770170211792
    7. '):
' → logprob: -13.2520170211792
    8. ':' → logprob: -14.1270170211792
    9. 'for' → logprob: -14.6270170211792
    10. ',' → logprob: -14.7520170211792

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6740838885307312
    2. 'c' → logprob: -1.174083948135376
    3. ' for' → logprob: -2.174083948135376
    4. 'for' → logprob: -2.924083948135376
    5. ' c' → logprob: -4.674083709716797
    6. 'current' → logprob: -6.424083709716797
    7. ' current' → logprob: -7.174083709716797
    8. ' ' → logprob: -7.924083709716797
    9. '    ' → logprob: -8.049083709716797
    10. 'w' → logprob: -8.299083709716797

Token 90: ' counter' (ID: 9446)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12115698307752609
    2. ' c' → logprob: -3.371156930923462
    3. '   ' → logprob: -3.621156930923462
    4. 'for' → logprob: -3.871156930923462
    5. ' for' → logprob: -3.996156930923462
    6. 'current' → logprob: -5.621157169342041
    7. ' current' → logprob: -6.121157169342041
    8. 's' → logprob: -6.371157169342041
    9. ' ' → logprob: -6.996157169342041
    10. 'last' → logprob: -7.371157169342041

Token 91: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5703526139259338
    2. ' =' → logprob: -1.570352554321289
    3. ' +=' → logprob: -1.695352554321289
    4. '+=' → logprob: -3.195352554321289
    5. ' ' → logprob: -7.195352554321289
    6. '_=' → logprob: -7.695352554321289
    7. '_' → logprob: -7.945352554321289
    8. '+' → logprob: -8.195352554321289
    9. '0' → logprob: -9.070352554321289
    10. '1' → logprob: -9.945352554321289

Token 92: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0074846455827355385
    2. 'W' → logprob: -5.132484436035156
    3. ' ' → logprob: -7.257484436035156
    4. 'mass' → logprob: -7.507484436035156
    5. 'int' → logprob: -9.382484436035156
    6. ' W' → logprob: -9.882484436035156
    7. '(W' → logprob: -10.132484436035156
    8. 'values' → logprob: -10.382484436035156
    9. ' mass' → logprob: -10.507484436035156
    10. '(' → logprob: -11.257484436035156

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016293596709147096
    2. 'W' → logprob: -6.75162935256958
    3. 'int' → logprob: -9.001629829406738
    4. 'mass' → logprob: -9.126629829406738
    5. ' ' → logprob: -9.251629829406738
    6. 'values' → logprob: -9.501629829406738
    7. 'len' → logprob: -11.626629829406738
    8. '-' → logprob: -11.751629829406738
    9. 'r' → logprob: -11.876629829406738
    10. '0' → logprob: -12.001629829406738

Token 94: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0619882345199585
    2. '   ' → logprob: -1.5619882345199585
    3. '
' → logprob: -1.6869882345199585
    4. ' for' → logprob: -2.061988353729248
    5. 'if' → logprob: -2.936988353729248
    6. 'for' → logprob: -3.186988353729248
    7. '    
' → logprob: -3.936988353729248
    8. '0' → logprob: -5.311988353729248
    9. '<|end|>' → logprob: -5.561988353729248
    10. ' ' → logprob: -6.811988353729248

Token 95: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8521080017089844
    2. '   ' → logprob: -1.1021080017089844
    3. 'if' → logprob: -2.3521080017089844
    4. ' for' → logprob: -2.6021080017089844
    5. ' if' → logprob: -3.6021080017089844
    6. 'last' → logprob: -3.8521080017089844
    7. 'current' → logprob: -4.977108001708984
    8. 'prev' → logprob: -5.227108001708984
    9. ' last' → logprob: -5.602108001708984
    10. 'char' → logprob: -6.227108001708984

Token 96: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.053873512893915176
    2. 'prev' → logprob: -4.053873538970947
    3. 'last' → logprob: -4.303873538970947
    4. 'current' → logprob: -4.803873538970947
    5. 'previous' → logprob: -5.803873538970947
    6. 'cur' → logprob: -5.928873538970947
    7. 'start' → logprob: -6.678873538970947
    8. 'c' → logprob: -6.678873538970947
    9. 'curr' → logprob: -6.928873538970947
    10. '   ' → logprob: -7.178873538970947

Token 97: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2884801924228668
    2. 'c' → logprob: -1.4134801626205444
    3. ' w' → logprob: -5.413480281829834
    4. 'w' → logprob: -6.038480281829834
    5. ' range' → logprob: -8.413479804992676
    6. 'range' → logprob: -9.288479804992676
    7. 'W' → logprob: -10.038479804992676
    8. ' W' → logprob: -10.913479804992676
    9. ' ' → logprob: -11.163479804992676
    10. 'x' → logprob: -11.413479804992676

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10022467374801636
    2. 'in' → logprob: -2.350224733352661
    3. ' ' → logprob: -11.725224494934082
    4. ' range' → logprob: -12.475224494934082
    5. '   ' → logprob: -13.225224494934082
    6. 'range' → logprob: -13.475224494934082
    7. '(' → logprob: -13.725224494934082
    8. ')' → logprob: -14.225224494934082
    9. '  ' → logprob: -15.350224494934082
    10. ' (' → logprob: -15.475224494934082

Token 99: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022484004497528
    2. ' range' → logprob: -1.9102247953414917
    3. '(range' → logprob: -14.285224914550781
    4. '	range' → logprob: -16.53522491455078
    5. '   ' → logprob: -17.91022491455078
    6. ' ' → logprob: -18.03522491455078
    7. ')' → logprob: -18.78522491455078
    8. '  ' → logprob: -19.91022491455078
    9. '.range' → logprob: -20.41022491455078
    10. '_range' → logprob: -20.53522491455078

Token 100: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.0002382249804213643
    2. '(' → logprob: -8.625238418579102
    3. '(H' → logprob: -9.750238418579102
    4. 'W' → logprob: -15.250238418579102
    5. '(w' → logprob: -17.1252384185791
    6. 'range' → logprob: -18.0002384185791
    7. '   ' → logprob: -18.2502384185791
    8. '((' → logprob: -18.8752384185791
    9. ' (' → logprob: -19.1252384185791
    10. '(range' → logprob: -19.1252384185791

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.022342178970575333
    2. '):
' → logprob: -3.8973422050476074
    3. ':' → logprob: -6.772342205047607
    4. '   ' → logprob: -7.772342205047607
    5. ')' → logprob: -9.14734172821045
    6. '+' → logprob: -9.89734172821045
    7. '       ' → logprob: -10.89734172821045
    8. 'if' → logprob: -10.89734172821045
    9. '):

' → logprob: -11.27234172821045
    10. '():' → logprob: -12.64734172821045

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0715896487236023
    2. ' if' → logprob: -3.696589708328247
    3. 'if' → logprob: -3.696589708328247
    4. '   ' → logprob: -4.071589469909668
    5. ':' → logprob: -6.321589469909668
    6. '<|end|>' → logprob: -9.071589469909668
    7. ' ' → logprob: -9.196589469909668
    8. '```' → logprob: -9.946589469909668
    9. '    ' → logprob: -10.071589469909668
    10. ')' → logprob: -10.696589469909668

Token 103: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.36853522062301636
    2. 'if' (adapté à ' if') → logprob: -1.2435352802276611
    3. '   ' → logprob: -4.493535041809082
    4. '       ' → logprob: -4.868535041809082
    5. 'row' → logprob: -7.993535041809082
    6. ' row' → logprob: -7.993535041809082
    7. '           ' → logprob: -8.243535041809082
    8. ' ' → logprob: -10.993535041809082
    9. '	if' → logprob: -11.743535041809082
    10. '```' → logprob: -11.868535041809082

Token 104: ' mass' (ID: 4842)
  Prédit: ' mass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mass' → logprob: -0.3484629690647125
    2. 'mass' → logprob: -1.2234629392623901
    3. ' ' → logprob: -11.97346305847168
    4. '   ' → logprob: -12.84846305847168
    5. 'm' → logprob: -13.22346305847168
    6. ' not' → logprob: -13.72346305847168
    7. 'c' → logprob: -13.72346305847168
    8. ' c' → logprob: -13.84846305847168
    9. 'mas' → logprob: -14.47346305847168
    10. 'not' → logprob: -14.59846305847168

Token 105: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -8.180258191714529e-06
    2. '[row' → logprob: -12.250008583068848
    3. '[' → logprob: -14.125008583068848
    4. ' [' → logprob: -14.125008583068848
    5. 'r' → logprob: -14.250008583068848
    6. '[c' → logprob: -15.250008583068848
    7. ')[' → logprob: -15.375008583068848
    8. '][' → logprob: -15.625008583068848
    9. '```' → logprob: -15.625008583068848
    10. '[m' → logprob: -16.37500762939453

Token 106: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07354158908128738
    2. '[r' → logprob: -2.6985416412353516
    3. '[c' → logprob: -6.198541641235352
    4. '[' → logprob: -6.698541641235352
    5. ']' → logprob: -8.448541641235352
    6. ' ][' → logprob: -10.823541641235352
    7. '}[' → logprob: -11.073541641235352
    8. '   ' → logprob: -11.698541641235352
    9. '"][' → logprob: -11.698541641235352
    10. '```' → logprob: -11.698541641235352

Token 107: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.253090865968261e-06
    2. ' c' → logprob: -11.750009536743164
    3. '   ' → logprob: -14.625009536743164
    4. ')c' → logprob: -15.000009536743164
    5. ' ' → logprob: -15.750009536743164
    6. ']' → logprob: -16.000009536743164
    7. '```' → logprob: -16.125009536743164
    8. '	c' → logprob: -17.375009536743164
    9. '][' → logprob: -17.875009536743164
    10. '
' → logprob: -18.125009536743164

Token 108: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.49763426184654236
    2. '==' → logprob: -1.1226342916488647
    3. ']==' → logprob: -3.372634172439575
    4. ' ==' → logprob: -3.497634172439575
    5. ']=='' → logprob: -7.997634410858154
    6. '   ' → logprob: -7.997634410858154
    7. '=='' → logprob: -8.247633934020996
    8. ')' → logprob: -8.247633934020996
    9. '}' → logprob: -8.372633934020996
    10. ' ' → logprob: -9.247633934020996

Token 109: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08170949667692184
    2. ' ==' → logprob: -2.581709384918213
    3. '=' → logprob: -7.331709384918213
    4. '=='' → logprob: -7.706709384918213
    5. '.' → logprob: -8.206709861755371
    6. ':' → logprob: -8.456709861755371
    7. '!=' → logprob: -8.831709861755371
    8. ' ' → logprob: -8.831709861755371
    9. '>' → logprob: -8.956709861755371
    10. '#' → logprob: -9.081709861755371

Token 110: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.08509734272956848
    2. ''' → logprob: -3.085097312927246
    3. ''.' → logprob: -3.585097312927246
    4. ''C' → logprob: -6.210097312927246
    5. ''*' → logprob: -6.585097312927246
    6. '"#' → logprob: -7.085097312927246
    7. ''a' → logprob: -7.335097312927246
    8. ' '#'' → logprob: -7.835097312927246
    9. ''o' → logprob: -7.835097312927246
    10. ''O' → logprob: -7.835097312927246

Token 111: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0381532646715641
    2. ''' → logprob: -3.4131531715393066
    3. ':' → logprob: -6.288153171539307
    4. '':
' → logprob: -6.663153171539307
    5. ' ':' → logprob: -6.913153171539307
    6. '#' → logprob: -8.788153648376465
    7. ' '' → logprob: -9.663153648376465
    8. ''s' → logprob: -10.788153648376465
    9. '.' → logprob: -11.038153648376465
    10. '(':' → logprob: -11.163153648376465

Token 112: '           ' (ID: 352)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.9102875590324402
    2. 'counter' → logprob: -1.035287618637085
    3. '           ' → logprob: -2.035287618637085
    4. '       ' → logprob: -2.535287618637085
    5. ':
' → logprob: -4.660287380218506
    6. ':' → logprob: -5.035287380218506
    7. '   ' → logprob: -5.285287380218506
    8. 'and' → logprob: -5.785287380218506
    9. ' row' → logprob: -6.035287380218506
    10. ' and' → logprob: -6.410287380218506

Token 113: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' (adapté à ' counter') → logprob: -0.10597417503595352
    2. 'row' → logprob: -2.8559741973876953
    3. '           ' → logprob: -3.2309741973876953
    4. '       ' → logprob: -6.855974197387695
    5. ' counter' → logprob: -6.980974197387695
    6. 'values' → logprob: -7.605974197387695
    7. '               ' → logprob: -7.980974197387695
    8. 'continue' → logprob: -8.105974197387695
    9. '   ' → logprob: -9.605974197387695
    10. '
' → logprob: -9.855974197387695

Token 114: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1940668523311615
    2. ' =' → logprob: -2.5690667629241943
    3. '+=' → logprob: -2.6940667629241943
    4. ' +=' → logprob: -3.4440667629241943
    5. '-=' → logprob: -9.444067001342773
    6. ' -=' → logprob: -10.069067001342773
    7. '+' → logprob: -10.319067001342773
    8. ' ' → logprob: -11.069067001342773
    9. ')' → logprob: -11.194067001342773
    10. '=count' → logprob: -11.819067001342773

Token 115: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2537689507007599
    2. ' ' → logprob: -1.5037689208984375
    3. '0' → logprob: -6.3787689208984375
    4. '2' → logprob: -9.878768920898438
    5. '10' → logprob: -10.378768920898438
    6. '3' → logprob: -11.941268920898438
    7. '100' → logprob: -12.066268920898438
    8. '   ' → logprob: -12.066268920898438
    9. '9' → logprob: -12.316268920898438
    10. '5' → logprob: -12.441268920898438

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009372343309223652
    2. '0' → logprob: -4.884372234344482
    3. ' ' → logprob: -6.634372234344482
    4. '-' → logprob: -8.00937271118164
    5. '2' → logprob: -10.38437271118164
    6. '10' → logprob: -10.38437271118164
    7. '3' → logprob: -11.94687271118164
    8. '9' → logprob: -12.00937271118164
    9. ' -' → logprob: -12.00937271118164
    10. '   ' → logprob: -12.19687271118164

Token 117: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3743528425693512
    2. '   ' → logprob: -2.1243529319763184
    3. 'row' → logprob: -2.6243529319763184
    4. '
' → logprob: -3.2493529319763184
    5. 'else' → logprob: -3.2493529319763184
    6. '           ' → logprob: -3.6243529319763184
    7. ' row' → logprob: -5.374352931976318
    8. ')' → logprob: -5.624352931976318
    9. ' else' → logprob: -5.624352931976318
    10. ')
' → logprob: -7.624352931976318

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.531282901763916
    2. 'row' → logprob: -1.406282901763916
    3. '           ' → logprob: -2.531282901763916
    4. 'else' → logprob: -2.781282901763916
    5. '   ' → logprob: -4.031282901763916
    6. ' row' → logprob: -5.781282901763916
    7. ' else' → logprob: -5.906282901763916
    8. 'elif' → logprob: -7.406282901763916
    9. 'for' → logprob: -7.656282901763916
    10. 'while' → logprob: -8.656282424926758

Token 119: ' else' (ID: 1203)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6909576654434204
    2. 'else' (adapté à ' else') → logprob: -1.1909576654434204
    3. '   ' → logprob: -1.6909576654434204
    4. '       ' → logprob: -5.690957546234131
    5. ' else' → logprob: -5.690957546234131
    6. 'elif' → logprob: -6.315957546234131
    7. ' row' → logprob: -6.440957546234131
    8. '
' → logprob: -8.940958023071289
    9. '           ' → logprob: -9.815958023071289
    10. 'if' → logprob: -9.940958023071289

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023310350254178047
    2. ':
' → logprob: -3.773310422897339
    3. ':

' → logprob: -10.898310661315918
    4. '   ' → logprob: -10.898310661315918
    5. '       ' → logprob: -11.773310661315918
    6. '           ' → logprob: -12.273310661315918
    7. '):' → logprob: -12.398310661315918
    8. '):
' → logprob: -13.398310661315918
    9. '=' → logprob: -13.523310661315918
    10. ',' → logprob: -13.898310661315918

Token 121: '           ' (ID: 352)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6811264753341675
    2. '           ' → logprob: -0.9311264753341675
    3. '       ' → logprob: -2.556126594543457
    4. ' row' → logprob: -4.306126594543457
    5. '   ' → logprob: -5.806126594543457
    6. 'values' → logprob: -5.931126594543457
    7. 'counter' → logprob: -6.556126594543457
    8. '
' → logprob: -7.806126594543457
    9. '               ' → logprob: -8.306126594543457
    10. ' values' → logprob: -8.431126594543457

Token 122: ' values' (ID: 4824)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.08808755874633789
    2. 'values' (adapté à ' values') → logprob: -2.713087558746338
    3. '           ' → logprob: -4.463087558746338
    4. ' row' → logprob: -5.963087558746338
    5. 'counter' → logprob: -6.963087558746338
    6. '   ' → logprob: -6.963087558746338
    7. ' values' → logprob: -7.338087558746338
    8. '       ' → logprob: -7.463087558746338
    9. '               ' → logprob: -8.08808708190918
    10. 'if' → logprob: -8.33808708190918

Token 123: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -9.031157969729975e-05
    2. '_col' → logprob: -10.250090599060059
    3. 'row' → logprob: -10.500090599060059
    4. '_' → logprob: -10.875090599060059
    5. '[row' → logprob: -13.250090599060059
    6. '[_' → logprob: -13.875090599060059
    7. '_column' → logprob: -14.125090599060059
    8. 'Row' → logprob: -14.125090599060059
    9. '_cell' → logprob: -14.625090599060059
    10. '[' → logprob: -14.875090599060059

Token 124: '[counter' (ID: 127005)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.9415948987007141
    2. '[row' → logprob: -0.9415948987007141
    3. '[(' → logprob: -1.9415948390960693
    4. '[' → logprob: -3.3165948390960693
    5. '[r' → logprob: -3.4415948390960693
    6. '[counter' → logprob: -5.191595077514648
    7. '[c' → logprob: -7.316595077514648
    8. '[array' → logprob: -7.941595077514648
    9. '[count' → logprob: -8.316595077514648
    10. '[key' → logprob: -8.316595077514648

Token 125: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16198432445526123
    2. ']+=' → logprob: -1.9119843244552612
    3. '+=' → logprob: -7.161984443664551
    4. ' ]' → logprob: -8.03698444366455
    5. ' +=' → logprob: -8.03698444366455
    6. ']=' → logprob: -8.41198444366455
    7. '=' → logprob: -9.78698444366455
    8. ')' → logprob: -10.78698444366455
    9. ']+' → logprob: -10.78698444366455
    10. ',' → logprob: -12.28698444366455

Token 126: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3041113317012787
    2. ' +=' → logprob: -1.429111361503601
    3. '=' → logprob: -3.8041112422943115
    4. ' =' → logprob: -8.30411148071289
    5. ']+=' → logprob: -8.92911148071289
    6. '+' → logprob: -10.42911148071289
    7. ' ' → logprob: -12.80411148071289
    8. '[' → logprob: -13.17911148071289
    9. '+=(' → logprob: -13.30411148071289
    10. ')' → logprob: -13.92911148071289

Token 127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01849943958222866
    2. ' ' → logprob: -4.018499374389648
    3. 'c' → logprob: -8.518499374389648
    4. 'counter' → logprob: -10.518499374389648
    5. 'mass' → logprob: -10.643499374389648
    6. 'W' → logprob: -11.018499374389648
    7. ' c' → logprob: -11.143499374389648
    8. '0' → logprob: -11.393499374389648
    9. ' mass' → logprob: -11.518499374389648
    10. ' W' → logprob: -11.518499374389648

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.011373155459296e-05
    2. 'c' → logprob: -11.375030517578125
    3. '0' → logprob: -12.500030517578125
    4. '10' → logprob: -12.625030517578125
    5. ' ' → logprob: -12.625030517578125
    6. '2' → logprob: -13.000030517578125
    7. '100' → logprob: -13.375030517578125
    8. 'counter' → logprob: -13.500030517578125
    9. 'mass' → logprob: -14.500030517578125
    10. 'W' → logprob: -14.500030517578125

Token 129: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1425822228193283
    2. '
' → logprob: -3.0175821781158447
    3. 'row' → logprob: -3.7675821781158447
    4. '       ' → logprob: -4.142582416534424
    5. '<|end|>' → logprob: -4.142582416534424
    6. '   ' → logprob: -4.642582416534424
    7. ' row' → logprob: -5.392582416534424
    8. ' ' → logprob: -5.642582416534424
    9. '[row' → logprob: -6.017582416534424
    10. ' for' → logprob: -6.142582416534424

Token 130: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13515418767929077
    2. '       ' → logprob: -2.5101542472839355
    3. 'row' → logprob: -3.5101542472839355
    4. '   ' → logprob: -5.1351542472839355
    5. 'for' → logprob: -5.6351542472839355
    6. ' row' → logprob: -5.8851542472839355
    7. ' for' → logprob: -6.1351542472839355
    8. '
' → logprob: -7.6351542472839355
    9. '               ' → logprob: -9.635153770446777
    10. '```' → logprob: -9.885153770446777

Token 131: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.0005374244065023959
    2. 'counter' → logprob: -8.250537872314453
    3. 'col' → logprob: -8.875537872314453
    4. 'for' → logprob: -9.500537872314453
    5. ' row' → logprob: -10.125537872314453
    6. 'values' → logprob: -11.750537872314453
    7. 'column' → logprob: -12.625537872314453
    8. '           ' → logprob: -13.000537872314453
    9. '   ' → logprob: -13.250537872314453
    10. 'if' → logprob: -14.125537872314453

Token 132: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.3663626305060461e-05
    2. '_' → logprob: -12.50001335144043
    3. 'index' → logprob: -13.12501335144043
    4. '_row' → logprob: -13.25001335144043
    5. 's' → logprob: -13.37501335144043
    6. ' _' → logprob: -13.50001335144043
    7. '_counter' → logprob: -14.12501335144043
    8. '_value' → logprob: -14.62501335144043
    9. '_indices' → logprob: -15.62501335144043
    10. ')_' → logprob: -15.75001335144043

Token 133: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0009128939709626138
    2. '[c' → logprob: -7.750912666320801
    3. '[' → logprob: -8.0009126663208
    4. '[counter' → logprob: -9.1259126663208
    5. '[row' → logprob: -10.5009126663208
    6. ' [' → logprob: -12.2509126663208
    7. 'r' → logprob: -14.3759126663208
    8. '[R' → logprob: -14.6259126663208
    9. '[m' → logprob: -14.8759126663208
    10. '[current' → logprob: -14.8759126663208

Token 134: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003455944824963808
    2. '[c' → logprob: -8.500345230102539
    3. ' ][' → logprob: -9.375345230102539
    4. ']' → logprob: -9.875345230102539
    5. '[' → logprob: -12.375345230102539
    6. ')[' → logprob: -14.500345230102539
    7. '"][' → logprob: -15.000345230102539
    8. ' [' → logprob: -15.250345230102539
    9. '}[' → logprob: -16.00034523010254
    10. ''][' → logprob: -16.12534523010254

Token 135: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.5491004129871726e-05
    2. ' c' → logprob: -10.000045776367188
    3. ')c' → logprob: -17.500045776367188
    4. ' ' → logprob: -18.375045776367188
    5. '   ' → logprob: -18.750045776367188
    6. '	c' → logprob: -19.000045776367188
    7. '           ' → logprob: -19.375045776367188
    8. '       ' → logprob: -19.625045776367188
    9. 'с' → logprob: -20.375045776367188
    10. '  ' → logprob: -20.500045776367188

Token 136: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3992270231246948
    2. ']' → logprob: -1.1492270231246948
    3. ' =' → logprob: -4.899227142333984
    4. ']=' → logprob: -5.399227142333984
    5. ' ]' → logprob: -8.149227142333984
    6. ' ' → logprob: -11.524227142333984
    7. ')' → logprob: -12.024227142333984
    8. ',' → logprob: -14.774227142333984
    9. ']+=' → logprob: -15.024227142333984
    10. '   ' → logprob: -15.399227142333984

Token 137: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003806257154792547
    2. ' =' → logprob: -7.875380516052246
    3. '=int' → logprob: -15.500380516052246
    4. '=

' → logprob: -16.375381469726562
    5. '=}' → logprob: -16.750381469726562
    6. '=
' → logprob: -17.500381469726562
    7. '=end' → logprob: -17.625381469726562
    8. '=user' → logprob: -17.875381469726562
    9. '=c' → logprob: -18.250381469726562
    10. '=random' → logprob: -18.375381469726562

Token 138: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.0004315036640036851
    2. ' counter' → logprob: -7.750431537628174
    3. '   ' → logprob: -15.000431060791016
    4. 'count' → logprob: -15.250431060791016
    5. '	counter' → logprob: -16.375431060791016
    6. '[counter' → logprob: -17.125431060791016
    7. ' ' → logprob: -17.500431060791016
    8. 'c' → logprob: -18.500431060791016
    9. '(counter' → logprob: -19.125431060791016
    10. 'ounter' → logprob: -19.250431060791016

Token 139: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: '#' (ID: 2)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.1382381021976471
    2. 'for' → logprob: -2.7632381916046143
    3. '
' → logprob: -2.8882381916046143
    4. '   ' → logprob: -5.138237953186035
    5. ' for' → logprob: -7.013237953186035
    6. 'print' → logprob: -7.013237953186035
    7. ' counter' → logprob: -7.263237953186035
    8. '    
' → logprob: -7.263237953186035
    9. '```' → logprob: -8.138237953186035
    10. ' ' → logprob: -8.263237953186035

Token 141: ' Je' (ID: 4678)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.002971518551930785
    2. 'for' → logprob: -6.002971649169922
    3. ' counter' → logprob: -8.627971649169922
    4. '
' → logprob: -8.627971649169922
    5. ' for' → logprob: -10.502971649169922
    6. '

' → logprob: -11.502971649169922
    7. '```' → logprob: -11.502971649169922
    8. 'c' → logprob: -11.877971649169922
    9. 'row' → logprob: -11.877971649169922
    10. 'current' → logprob: -12.127971649169922

Token 142: ' voulais' (ID: 117841)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.13754580914974213
    2. 'for' → logprob: -2.1375458240509033
    3. 'continue' → logprob: -5.262545585632324
    4. ' for' → logprob: -6.512545585632324
    5. ' counter' → logprob: -6.762545585632324
    6. 'count' → logprob: -7.512545585632324
    7. 's' → logprob: -7.762545585632324
    8. ' ' → logprob: -8.012545585632324
    9. 'n' → logprob: -8.137545585632324
    10. '#' → logprob: -8.512545585632324

Token 143: ' afficher' (ID: 146524)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.32828372716903687
    2. 'for' → logprob: -1.4532837867736816
    3. ' for' → logprob: -4.328283786773682
    4. '#' → logprob: -5.078283786773682
    5. ' counter' → logprob: -5.078283786773682
    6. '   ' → logprob: -5.328283786773682
    7. 'contin' → logprob: -6.328283786773682
    8. ' to' → logprob: -6.453283786773682
    9. 'continue' → logprob: -6.578283786773682
    10. 'cont' → logprob: -6.703283786773682

Token 144: ' ici' (ID: 27994)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -1.2151743173599243
    2. 'for' → logprob: -1.4651743173599243
    3. '
' → logprob: -1.5901743173599243
    4. ' for' → logprob: -2.2151741981506348
    5. ',' → logprob: -2.9651741981506348
    6. ' ' → logprob: -3.9651741981506348
    7. '#' → logprob: -4.090174198150635
    8. '

' → logprob: -4.715174198150635
    9. '```' → logprob: -5.215174198150635
    10. 'values' → logprob: -5.340174198150635

Token 145: ' mais' (ID: 2899)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.969867467880249
    2. 'print' → logprob: -1.844867467880249
    3. 'counter' → logprob: -1.844867467880249
    4. ' for' → logprob: -1.844867467880249
    5. '
' → logprob: -2.469867467880249
    6. '#' → logprob: -3.469867467880249
    7. ',' → logprob: -4.469867706298828
    8. '```' → logprob: -5.094867706298828
    9. ' ' → logprob: -5.844867706298828
    10. '<|end|>' → logprob: -6.094867706298828

Token 146: ' ça' (ID: 13590)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.4652059078216553
    2. '#' → logprob: -1.7152059078216553
    3. 'for' → logprob: -2.0902059078216553
    4. 'pass' → logprob: -3.7152059078216553
    5. 'print' → logprob: -3.9652059078216553
    6. ' for' → logprob: -4.840206146240234
    7. '
' → logprob: -5.340206146240234
    8. '...' → logprob: -5.590206146240234
    9. 'continue' → logprob: -5.840206146240234
    10. ' counter' → logprob: -6.340206146240234

Token 147: ' fait' (ID: 7473)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4114009737968445
    2. '
' → logprob: -1.6614010334014893
    3. 'continue' → logprob: -3.1614010334014893
    4. 'counter' → logprob: -4.03640079498291
    5. 'for' → logprob: -4.03640079498291
    6. ' for' → logprob: -4.66140079498291
    7. ' continues' → logprob: -4.91140079498291
    8. ' is' → logprob: -4.91140079498291
    9. ',' → logprob: -5.41140079498291
    10. 'print' → logprob: -5.41140079498291

Token 148: ' un' (ID: 537)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8751533627510071
    2. 'une' → logprob: -1.6251533031463623
    3. 'part' → logprob: -2.2501533031463623
    4. ' ' → logprob: -2.6251533031463623
    5. 'runtime' → logprob: -3.3751533031463623
    6. 's' → logprob: -4.375153541564941
    7. 'un' → logprob: -4.625153541564941
    8. 'for' → logprob: -4.625153541564941
    9. 'Runtime' → logprob: -4.750153541564941
    10. 'er' → logprob: -4.875153541564941

Token 149: ' peu' (ID: 9235)
  Prédit: 'Syntax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Syntax' → logprob: -0.44809868931770325
    2. 'Name' → logprob: -2.198098659515381
    3. 'Indent' → logprob: -2.323098659515381
    4. 'syntax' → logprob: -2.948098659515381
    5. 'Key' → logprob: -3.198098659515381
    6. ' Syntax' → logprob: -4.948098659515381
    7. ' Key' → logprob: -5.198098659515381
    8. ' ' → logprob: -5.573098659515381
    9. ' Name' → logprob: -5.573098659515381
    10. 'Value' → logprob: -5.573098659515381

Token 150: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4420682191848755
    2. 'vide' → logprob: -2.067068099975586
    3. 'counter' → logprob: -3.317068099975586
    4. 'r' → logprob: -3.942068099975586
    5. 'de' → logprob: -4.067068099975586
    6. 'b' → logprob: -4.067068099975586
    7. '...' → logprob: -4.442068099975586
    8. 'in' → logprob: -4.567068099975586
    9. ' for' → logprob: -5.067068099975586
    10. 'inut' → logprob: -5.192068099975586

Token 151: ' bruit' (ID: 112145)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.6807354092597961
    2. 'double' → logprob: -2.6807353496551514
    3. 'mal' → logprob: -3.0557353496551514
    4. 'bord' → logprob: -3.1807353496551514
    5. 'debug' → logprob: -3.3057353496551514
    6. '```' → logprob: -3.4307353496551514
    7. 'sens' → logprob: -3.4307353496551514
    8. 'br' → logprob: -3.6807353496551514
    9. 'd' → logprob: -3.8057353496551514
    10. 'b' → logprob: -4.4307355880737305

Token 152: '
' (ID: 198)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.0026338035240769386
    2. 'for' → logprob: -6.127633571624756
    3. 'print' → logprob: -8.002634048461914
    4. '
' → logprob: -9.877634048461914
    5. '```' → logprob: -10.752634048461914
    6. ' counter' → logprob: -11.127634048461914
    7. '#' → logprob: -11.627634048461914
    8. 'c' → logprob: -12.877634048461914
    9. '    
' → logprob: -13.377634048461914
    10. '

' → logprob: -13.502634048461914

Token 153: '#' (ID: 2)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.0022468422539532185
    2. 'for' → logprob: -6.252246856689453
    3. 'print' → logprob: -8.627246856689453
    4. 'column' → logprob: -10.752246856689453
    5. 'values' → logprob: -11.002246856689453
    6. 'col' → logprob: -11.127246856689453
    7. '
' → logprob: -11.127246856689453
    8. '#' → logprob: -11.502246856689453
    9. '    
' → logprob: -11.752246856689453
    10. 'row' → logprob: -11.752246856689453

Token 154: ' for' (ID: 395)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.005844650790095329
    2. 'for' → logprob: -5.255844593048096
    3. 'print' → logprob: -8.880845069885254
    4. '
' → logprob: -9.005845069885254
    5. 'col' → logprob: -9.505845069885254
    6. '#' → logprob: -9.880845069885254
    7. 'values' → logprob: -9.880845069885254
    8. 'row' → logprob: -10.255845069885254
    9. 'column' → logprob: -10.505845069885254
    10. '```' → logprob: -11.005845069885254

Token 155: ' row' (ID: 5225)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3242768943309784
    2. ' r' → logprob: -1.5742769241333008
    3. ' i' → logprob: -3.699276924133301
    4. 'i' → logprob: -3.949276924133301
    5. 'c' → logprob: -5.449276924133301
    6. ' c' → logprob: -5.949276924133301
    7. ' row' → logprob: -6.074276924133301
    8. ' key' → logprob: -6.324276924133301
    9. 'val' → logprob: -6.449276924133301
    10. 'row' → logprob: -6.574276924133301

Token 156: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11761181056499481
    2. 'in' → logprob: -2.242611885070801
    3. '_index' → logprob: -5.992611885070801
    4. '_' → logprob: -6.992611885070801
    5. 'r' → logprob: -8.2426118850708
    6. 's' → logprob: -8.3676118850708
    7. '_idx' → logprob: -8.9926118850708
    8. 'index' → logprob: -9.2426118850708
    9. ' ' → logprob: -9.2426118850708
    10. '#' → logprob: -9.8676118850708

Token 157: ' row' (ID: 5225)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5826501846313477
    2. 'values' → logprob: -1.0826501846313477
    3. 'mass' → logprob: -3.0826501846313477
    4. 'row' → logprob: -3.5826501846313477
    5. ' range' → logprob: -3.8326501846313477
    6. ' values' → logprob: -5.457650184631348
    7. ' mass' → logprob: -5.832650184631348
    8. ' row' → logprob: -8.457650184631348
    9. 'value' → logprob: -9.707650184631348
    10. 'rows' → logprob: -10.082650184631348

Token 158: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.25143831968307495
    2. 's' → logprob: -1.8764383792877197
    3. ':' → logprob: -3.5014383792877197
    4. 'in' → logprob: -4.626438140869141
    5. '_values' → logprob: -4.626438140869141
    6. 'values' → logprob: -5.126438140869141
    7. ' in' → logprob: -5.751438140869141
    8. 'for' → logprob: -6.126438140869141
    9. ':
' → logprob: -6.376438140869141
    10. 'index' → logprob: -6.501438140869141

Token 159: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9451240301132202
    2. 'for' → logprob: -1.0701240301132202
    3. '<|end|>' → logprob: -2.8201241493225098
    4. ' for' → logprob: -2.9451241493225098
    5. ',' → logprob: -3.1951241493225098
    6. '#' → logprob: -3.4451241493225098
    7. 'counter' → logprob: -3.8201241493225098
    8. '   ' → logprob: -3.9451241493225098
    9. '<|end|>' → logprob: -4.82012414932251
    10. 'print' → logprob: -5.32012414932251

Token 160: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35636234283447266
    2. '#' → logprob: -2.3563623428344727
    3. ' for' → logprob: -2.4813623428344727
    4. 'for' → logprob: -2.4813623428344727
    5. 'print' → logprob: -4.106362342834473
    6. 'pass' → logprob: -5.231362342834473
    7. '<|end|>' → logprob: -5.731362342834473
    8. ' ' → logprob: -6.231362342834473
    9. ')' → logprob: -6.356362342834473
    10. ' pass' → logprob: -6.606362342834473

Token 161: '    ' (ID: 257)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1834452599287033
    2. '   ' → logprob: -2.0584452152252197
    3. ' print' → logprob: -3.9334452152252197
    4. 'pass' → logprob: -4.808445453643799
    5. ' for' → logprob: -5.683445453643799
    6. 'for' → logprob: -5.808445453643799
    7. ' pass' → logprob: -6.558445453643799
    8. ' ' → logprob: -7.058445453643799
    9. '...' → logprob: -7.808445453643799
    10. '#' → logprob: -7.808445453643799

Token 162: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0022956132888793945
    2. ' print' → logprob: -6.12729549407959
    3. 'pass' → logprob: -9.25229549407959
    4. '   ' → logprob: -12.00229549407959
    5. ' pass' → logprob: -12.37729549407959
    6. 'for' → logprob: -12.87729549407959
    7. '    ' → logprob: -14.12729549407959
    8. '...' → logprob: -14.75229549407959
    9. ' for' → logprob: -15.12729549407959
    10. '	print' → logprob: -16.752296447753906

Token 163: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.03200969472527504
    2. '('' → logprob: -3.9070096015930176
    3. '(' → logprob: -4.657009601593018
    4. '(*' → logprob: -7.282009601593018
    5. 'row' → logprob: -7.657009601593018
    6. '("' → logprob: -7.907009601593018
    7. '()' → logprob: -7.907009601593018
    8. '("")' → logprob: -13.032010078430176
    9. '(rows' → logprob: -13.657010078430176
    10. '[row' → logprob: -13.907010078430176

Token 164: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009188431431539357
    2. '#' → logprob: -8.6259183883667
    3. ']' → logprob: -8.6259183883667
    4. ')
' → logprob: -9.1259183883667
    5. '])' → logprob: -9.5009183883667
    6. ' )' → logprob: -9.6259183883667
    7. '   ' → logprob: -9.7509183883667
    8. ',' → logprob: -9.7509183883667
    9. 'for' → logprob: -9.8759183883667
    10. '[' → logprob: -10.7509183883667

Token 165: 'counter' (ID: 32128)
  Prédit: 'counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.0014025020645931363
    2. 'for' → logprob: -6.751402378082275
    3. '
' → logprob: -8.501402854919434
    4. 'print' → logprob: -11.751402854919434
    5. '

' → logprob: -12.751402854919434
    6. ' counter' → logprob: -12.876402854919434
    7. '```' → logprob: -12.876402854919434
    8. 'column' → logprob: -13.001402854919434
    9. '    
' → logprob: -13.501402854919434
    10. 'count' → logprob: -13.751402854919434

Token 166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12312092632055283
    2. '+=' → logprob: -3.3731210231781006
    3. ' =' → logprob: -3.7481210231781006
    4. ' +=' → logprob: -3.8731210231781006
    5. '1' → logprob: -4.3731207847595215
    6. '0' → logprob: -4.3731207847595215
    7. '+' → logprob: -5.2481207847595215
    8. '
' → logprob: -5.8731207847595215
    9. '=
' → logprob: -6.4981207847595215
    10. '2' → logprob: -6.8731207847595215

Token 167: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005235887598246336
    2. ' ' → logprob: -5.25523567199707
    3. '1' → logprob: -13.63023567199707
    4. '   ' → logprob: -15.44273567199707
    5. '=' → logprob: -16.00523567199707
    6. ' ' → logprob: -16.50523567199707
    7. '۰' → logprob: -16.63023567199707
    8. '  ' → logprob: -16.75523567199707
    9. '100' → logprob: -16.75523567199707
    10. 'counter' → logprob: -17.00523567199707

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011784763046307489
    2. ' ' → logprob: -9.125118255615234
    3. '1' → logprob: -11.750118255615234
    4. '   ' → logprob: -16.000118255615234
    5. '-' → logprob: -16.250118255615234
    6. '  ' → logprob: -16.375118255615234
    7. '۰' → logprob: -16.687618255615234
    8. '０' → logprob: -16.750118255615234
    9. 'zero' → logprob: -17.000118255615234
    10. '=' → logprob: -17.062618255615234

Token 169: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00026503115077503026
    2. '
' → logprob: -8.625265121459961
    3. ' for' → logprob: -9.375265121459961
    4. '<|end|>' → logprob: -14.875265121459961
    5. '```' → logprob: -15.125265121459961
    6. ' 
' → logprob: -16.75026512145996
    7. '  
' → logprob: -17.25026512145996
    8. '	for' → logprob: -18.12526512145996
    9. '    
' → logprob: -18.12526512145996
    10. '

' → logprob: -18.87526512145996

Token 170: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0280383548888494e-06
    2. ' for' → logprob: -14.125000953674316
    3. 'counter' → logprob: -16.250001907348633
    4. '
' → logprob: -16.625001907348633
    5. '```' → logprob: -17.750001907348633
    6. '   ' → logprob: -18.750001907348633
    7. 'from' → logprob: -18.750001907348633
    8. '#' → logprob: -19.875001907348633
    9. '1' → logprob: -20.250001907348633
    10. 'import' → logprob: -20.375001907348633

Token 171: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014169031754136086
    2. ' c' → logprob: -4.264169216156006
    3. 'r' → logprob: -13.264168739318848
    4. 'range' → logprob: -13.389168739318848
    5. 'w' → logprob: -13.514168739318848
    6. ' range' → logprob: -14.264168739318848
    7. ' r' → logprob: -16.764169692993164
    8. ' w' → logprob: -16.889169692993164
    9. '	c' → logprob: -17.014169692993164
    10. '_' → logprob: -17.389169692993164

Token 172: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05496274679899216
    2. 'in' → logprob: -2.929962635040283
    3. 'range' → logprob: -9.804963111877441
    4. ' ' → logprob: -11.054963111877441
    5. 'n' → logprob: -13.179963111877441
    6. 'In' → logprob: -13.679963111877441
    7. 's' → logprob: -13.679963111877441
    8. 'import' → logprob: -14.679963111877441
    9. '   ' → logprob: -14.804963111877441
    10. 'd' → logprob: -14.804963111877441

Token 173: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1269380897283554
    2. ' range' → logprob: -2.1269381046295166
    3. '(range' → logprob: -12.001937866210938
    4. ' in' → logprob: -12.751937866210938
    5. 'in' → logprob: -14.126937866210938
    6. ' ' → logprob: -15.876937866210938
    7. '(' → logprob: -17.251937866210938
    8. '   ' → logprob: -17.376937866210938
    9. '
' → logprob: -17.751937866210938
    10. 'W' → logprob: -18.001937866210938

Token 174: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.0025760135613381863
    2. '(H' → logprob: -6.002575874328613
    3. 'W' → logprob: -9.502575874328613
    4. '(' → logprob: -10.627575874328613
    5. 'H' → logprob: -13.627575874328613
    6. '1' → logprob: -17.50257682800293
    7. '(
' → logprob: -17.62757682800293
    8. '   ' → logprob: -17.75257682800293
    9. 'int' → logprob: -17.87757682800293
    10. 'range' → logprob: -18.00257682800293

Token 175: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011415957473218441
    2. '):
' → logprob: -4.511415958404541
    3. ':' → logprob: -8.011415481567383
    4. ')' → logprob: -10.636415481567383
    5. '):
' → logprob: -12.511415481567383
    6. '   ' → logprob: -12.636415481567383
    7. ' ):' → logprob: -13.136415481567383
    8. '):

' → logprob: -13.511415481567383
    9. ':
' → logprob: -13.761415481567383
    10. '}:' → logprob: -15.261415481567383

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0047556147910654545
    2. 'counter' → logprob: -5.37975549697876
    3. ' counter' → logprob: -9.004755973815918
    4. '	counter' → logprob: -11.754755973815918
    5. '   ' → logprob: -13.629755973815918
    6. '
' → logprob: -14.004755973815918
    7. '       ' → logprob: -14.629755973815918
    8. '(counter' → logprob: -14.629755973815918
    9. '    
' → logprob: -14.754755973815918
    10. '_counter' → logprob: -15.129755973815918

Token 177: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' (adapté à ' counter') → logprob: -0.0025037210434675217
    2. ' counter' → logprob: -6.627503871917725
    3. '   ' → logprob: -6.752503871917725
    4. 'for' → logprob: -12.252503395080566
    5. '	counter' → logprob: -13.502503395080566
    6. 'ounter' → logprob: -14.127503395080566
    7. ' ' → logprob: -14.252503395080566
    8. '(counter' → logprob: -15.502503395080566
    9. '_counter' → logprob: -15.502503395080566
    10. '
' → logprob: -15.502503395080566

Token 178: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38696974515914917
    2. ' +=' → logprob: -1.136969804763794
    3. '=' → logprob: -9.261969566345215
    4. ' =' → logprob: -12.636969566345215
    5. '+' → logprob: -15.511969566345215
    6. ' ' → logprob: -16.01197052001953
    7. ']+=' → logprob: -16.13697052001953
    8. '   ' → logprob: -16.26197052001953
    9. ' +' → logprob: -18.26197052001953
    10. '+="' → logprob: -18.51197052001953

Token 179: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005537479883059859
    2. ' ' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.750554084777832
    4. '0' → logprob: -15.250554084777832
    5. '```' → logprob: -17.063053131103516
    6. '2' → logprob: -17.375553131103516
    7. '  ' → logprob: -18.063053131103516
    8. '<|end|>' → logprob: -18.438053131103516
    9. 'for' → logprob: -18.500553131103516
    10. '
' → logprob: -19.125553131103516

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '0' → logprob: -18.000011444091797
    4. '
' → logprob: -18.312511444091797
    5. '   ' → logprob: -18.312511444091797
    6. '```' → logprob: -18.375011444091797
    7. '１' → logprob: -20.000011444091797
    8. '  ' → logprob: -20.687511444091797
    9. '۱' → logprob: -20.750011444091797
    10. '-' → logprob: -20.750011444091797

Token 181: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001855406299000606
    2. 'for' → logprob: -8.7501859664917
    3. ' for' → logprob: -10.7501859664917
    4. '
' → logprob: -12.3751859664917
    5. ' ' → logprob: -14.6251859664917
    6. '    
' → logprob: -15.2501859664917
    7. '       ' → logprob: -15.3751859664917
    8. '  ' → logprob: -15.7501859664917
    9. '<|end|>' → logprob: -15.7501859664917
    10. '```' → logprob: -15.8751859664917

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.2200749754119897e-06
    2. 'for' → logprob: -13.250001907348633
    3. ' for' → logprob: -16.250001907348633
    4. '       ' → logprob: -16.375001907348633
    5. '
' → logprob: -17.000001907348633
    6. ' ' → logprob: -17.500001907348633
    7. '    
' → logprob: -19.500001907348633
    8. '```' → logprob: -20.000001907348633
    9. '  ' → logprob: -20.125001907348633
    10. '   ' → logprob: -20.750001907348633

Token 183: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.0921942703134846e-05
    2. '   ' → logprob: -12.12501049041748
    3. ' for' → logprob: -12.12501049041748
    4. '
' → logprob: -17.125011444091797
    5. '    
' → logprob: -19.250011444091797
    6. '```' → logprob: -19.500011444091797
    7. ' ' → logprob: -20.000011444091797
    8. '	for' → logprob: -20.625011444091797
    9. 'from' → logprob: -21.875011444091797
    10. '       ' → logprob: -22.000011444091797

Token 184: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.676292231422849e-05
    2. ' r' → logprob: -11.000017166137695
    3. '	r' → logprob: -18.625017166137695
    4. 'range' → logprob: -19.000017166137695
    5. 'h' → logprob: -19.250017166137695
    6. 'x' → logprob: -19.375017166137695
    7. 'c' → logprob: -19.875017166137695
    8. '   ' → logprob: -20.000017166137695
    9. 'H' → logprob: -20.250017166137695
    10. '_r' → logprob: -20.375017166137695

Token 185: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0040823169983923435
    2. 'in' → logprob: -5.504082202911377
    3. 'range' → logprob: -13.254082679748535
    4. ' ' → logprob: -14.129082679748535
    5. '   ' → logprob: -14.504082679748535
    6. ' range' → logprob: -15.129082679748535
    7. 'In' → logprob: -15.754082679748535
    8. '  ' → logprob: -16.50408172607422
    9. '(' → logprob: -16.62908172607422
    10. ')' → logprob: -16.62908172607422

Token 186: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10021055489778519
    2. ' range' → logprob: -2.350210666656494
    3. '(H' → logprob: -13.100210189819336
    4. 'H' → logprob: -13.600210189819336
    5. '(range' → logprob: -14.475210189819336
    6. 'in' → logprob: -18.100210189819336
    7. '   ' → logprob: -19.350210189819336
    8. 'Range' → logprob: -19.350210189819336
    9. ' in' → logprob: -19.725210189819336
    10. ' H' → logprob: -19.975210189819336

Token 187: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.06797222793102264
    2. ' range' → logprob: -3.317972183227539
    3. 'range' → logprob: -3.567972183227539
    4. '(range' → logprob: -7.067972183227539
    5. 'H' → logprob: -8.442972183227539
    6. '(' → logprob: -8.817972183227539
    7. ' (' → logprob: -10.067972183227539
    8. '   ' → logprob: -12.442972183227539
    9. ' H' → logprob: -12.817972183227539
    10. 'Range' → logprob: -13.192972183227539

Token 188: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.478115975856781
    2. ':' → logprob: -0.978115975856781
    3. '):
' → logprob: -5.728116035461426
    4. '   ' → logprob: -7.478116035461426
    5. ':
' → logprob: -9.228116035461426
    6. ')' → logprob: -9.978116035461426
    7. '       ' → logprob: -10.228116035461426
    8. '```' → logprob: -12.353116035461426
    9. '}:' → logprob: -12.478116035461426
    10. ' :' → logprob: -12.728116035461426

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32971179485321045
    2. '   ' → logprob: -1.3297117948532104
    3. 'if' → logprob: -4.2047119140625
    4. ' if' → logprob: -6.5797119140625
    5. '           ' → logprob: -14.8297119140625
    6. '
' → logprob: -14.8297119140625
    7. '	if' → logprob: -14.9547119140625
    8. '     ' → logprob: -15.3297119140625
    9. ' ' → logprob: -15.7047119140625
    10. '	   ' → logprob: -15.8297119140625

Token 190: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.056174859404563904
    2. '       ' → logprob: -3.9311747550964355
    3. ' if' → logprob: -3.9311747550964355
    4. '   ' → logprob: -4.1811747550964355
    5. '           ' → logprob: -9.306175231933594
    6. '	if' → logprob: -12.306175231933594
    7. ' ' → logprob: -12.556175231933594
    8. '    ' → logprob: -13.556175231933594
    9. '
' → logprob: -13.931175231933594
    10. '```' → logprob: -14.181175231933594

Token 191: ' mass' (ID: 4842)
  Prédit: ' mass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mass' → logprob: -0.3868784010410309
    2. 'mass' → logprob: -1.1368783712387085
    3. '   ' → logprob: -12.01187801361084
    4. '_mass' → logprob: -15.01187801361084
    5. 'm' → logprob: -15.13687801361084
    6. ' ' → logprob: -15.51187801361084
    7. '.mass' → logprob: -15.51187801361084
    8. 'Mass' → logprob: -16.136878967285156
    9. 'mas' → logprob: -16.386878967285156
    10. '       ' → logprob: -16.761878967285156

Token 192: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -9.491498531133402e-06
    2. 'r' → logprob: -11.625009536743164
    3. '[' → logprob: -14.750009536743164
    4. ' [' → logprob: -17.625009536743164
    5. '[c' → logprob: -17.625009536743164
    6. '[m' → logprob: -18.125009536743164
    7. '[t' → logprob: -18.250009536743164
    8. '[s' → logprob: -18.375009536743164
    9. '[row' → logprob: -18.375009536743164
    10. '   ' → logprob: -18.500009536743164

Token 193: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08919811993837357
    2. '[c' → logprob: -2.464198112487793
    3. ')[' → logprob: -8.839198112487793
    4. '[' → logprob: -9.714198112487793
    5. ']' → logprob: -10.839198112487793
    6. '>[' → logprob: -12.089198112487793
    7. ' ][' → logprob: -12.089198112487793
    8. '}[' → logprob: -12.464198112487793
    9. '[r' → logprob: -12.589198112487793
    10. ' [' → logprob: -12.964198112487793

Token 194: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.630610641877865e-06
    2. ' c' → logprob: -12.500006675720215
    3. '#' → logprob: -14.625006675720215
    4. '   ' → logprob: -14.750006675720215
    5. '[c' → logprob: -14.875006675720215
    6. ')c' → logprob: -14.875006675720215
    7. ']' → logprob: -15.000006675720215
    8. '][' → logprob: -15.000006675720215
    9. ' ' → logprob: -15.500006675720215
    10. '```' → logprob: -16.3750057220459

Token 195: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009677992202341557
    2. ']==' → logprob: -7.125967979431152
    3. ' ==' → logprob: -9.500967979431152
    4. '==' → logprob: -9.875967979431152
    5. ' ]' → logprob: -10.750967979431152
    6. '']' → logprob: -11.625967979431152
    7. ']=='' → logprob: -12.625967979431152
    8. '   ' → logprob: -13.375967979431152
    9. ' ' → logprob: -15.000967979431152
    10. '][' → logprob: -15.375967979431152

Token 196: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5764757990837097
    2. ' ==' → logprob: -0.8264757990837097
    3. '=='' → logprob: -7.826475620269775
    4. '=' → logprob: -9.951476097106934
    5. ']==' → logprob: -10.701476097106934
    6. ')' → logprob: -10.826476097106934
    7. ']' → logprob: -11.076476097106934
    8. '==
' → logprob: -11.451476097106934
    9. '#' → logprob: -12.076476097106934
    10. ')==' → logprob: -12.951476097106934

Token 197: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.044553808867931366
    2. ' '#'' → logprob: -3.544553756713867
    3. ''' → logprob: -4.419553756713867
    4. ' '#' → logprob: -6.044553756713867
    5. ' '' → logprob: -8.294553756713867
    6. ' ' → logprob: -11.794553756713867
    7. '('#' → logprob: -11.919553756713867
    8. '"#' → logprob: -12.544553756713867
    9. ''*' → logprob: -12.794553756713867
    10. ''.' → logprob: -13.044553756713867

Token 198: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6738420128822327
    2. '           ' → logprob: -0.9238420128822327
    3. ':
' → logprob: -2.548841953277588
    4. '       ' → logprob: -4.798841953277588
    5. '               ' → logprob: -6.173841953277588
    6. '<|end|>' → logprob: -6.423841953277588
    7. 'counter' → logprob: -7.173841953277588
    8. ' counter' → logprob: -7.423841953277588
    9. '):
' → logprob: -7.673841953277588
    10. '   ' → logprob: -8.423842430114746

Token 199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014232734218239784
    2. 'counter' → logprob: -4.764232635498047
    3. '       ' → logprob: -5.389232635498047
    4. ' counter' → logprob: -7.639232635498047
    5. '               ' → logprob: -7.764232635498047
    6. '   ' → logprob: -9.014232635498047
    7. '          ' → logprob: -13.014232635498047
    8. '	counter' → logprob: -13.389232635498047
    9. ' ' → logprob: -14.014232635498047
    10. '```' → logprob: -14.139232635498047

Token 200: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' (adapté à ' counter') → logprob: -0.08131317049264908
    2. ' counter' → logprob: -2.956313133239746
    3. '           ' → logprob: -3.706313133239746
    4. '       ' → logprob: -6.831313133239746
    5. '               ' → logprob: -8.456313133239746
    6. '   ' → logprob: -8.831313133239746
    7. '	counter' → logprob: -10.206313133239746
    8. ' ' → logprob: -10.331313133239746
    9. '  ' → logprob: -13.206313133239746
    10. '_counter' → logprob: -13.456313133239746

Token 201: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018151231110095978
    2. ' +=' → logprob: -4.01815128326416
    3. '+' → logprob: -14.26815128326416
    4. ']+=' → logprob: -14.51815128326416
    5. '=' → logprob: -16.143150329589844
    6. '+="' → logprob: -16.893150329589844
    7. '+=(' → logprob: -17.893150329589844
    8. '+='' → logprob: -18.143150329589844
    9. '<|end|>' → logprob: -19.018150329589844
    10. '```' → logprob: -19.768150329589844

Token 202: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024762547109276056
    2. ' ' → logprob: -6.002476215362549
    3. '```' → logprob: -15.627476692199707
    4. '   ' → logprob: -16.00247573852539
    5. '<|end|>' → logprob: -16.25247573852539
    6. '0' → logprob: -16.50247573852539
    7. '2' → logprob: -17.00247573852539
    8. '       ' → logprob: -17.50247573852539
    9. '           ' → logprob: -18.43997573852539
    10. 'def' → logprob: -19.12747573852539

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '2' → logprob: -17.250017166137695
    4. '```' → logprob: -17.875017166137695
    5. '0' → logprob: -18.187517166137695
    6. '   ' → logprob: -18.250017166137695
    7. '<|end|>' → logprob: -18.250017166137695
    8. '-' → logprob: -18.312517166137695
    9. ')' → logprob: -19.687517166137695
    10. '
' → logprob: -20.125017166137695

Token 204: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03398682922124863
    2. 'else' → logprob: -3.408986806869507
    3. ' else' → logprob: -8.533987045288086
    4. '   ' → logprob: -8.908987045288086
    5. '           ' → logprob: -12.283987045288086
    6. 'elif' → logprob: -13.283987045288086
    7. '	else' → logprob: -14.033987045288086
    8. '```' → logprob: -14.533987045288086
    9. '<|end|>' → logprob: -15.033987045288086
    10. ' ' → logprob: -15.408987045288086

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.062421590089797974
    2. 'else' → logprob: -2.8124215602874756
    3. ' else' → logprob: -8.062421798706055
    4. '   ' → logprob: -8.937421798706055
    5. '```' → logprob: -13.187421798706055
    6. '	else' → logprob: -13.437421798706055
    7. '           ' → logprob: -13.687421798706055
    8. '<|end|>' → logprob: -13.937421798706055
    9. ' ' → logprob: -14.187421798706055
    10. 'elif' → logprob: -14.437421798706055

Token 206: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10334720462560654
    2. '       ' → logprob: -2.6033473014831543
    3. ' else' → logprob: -3.7283473014831543
    4. '   ' → logprob: -9.103346824645996
    5. '           ' → logprob: -11.978346824645996
    6. 'elif' → logprob: -12.103346824645996
    7. '	else' → logprob: -12.603346824645996
    8. '```' → logprob: -14.353346824645996
    9. ' ' → logprob: -15.228346824645996
    10. '
' → logprob: -16.228347778320312

Token 207: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021900253370404243
    2. ':
' → logprob: -4.271900177001953
    3. ':' → logprob: -4.896900177001953
    4. 'values' → logprob: -8.896900177001953
    5. '               ' → logprob: -10.146900177001953
    6. ' values' → logprob: -11.396900177001953
    7. '          ' → logprob: -11.396900177001953
    8. '       ' → logprob: -11.521900177001953
    9. '   ' → logprob: -11.896900177001953
    10. '):
' → logprob: -12.021900177001953

Token 208: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14663457870483398
    2. 'values' → logprob: -2.521634578704834
    3. ' values' → logprob: -2.896634578704834
    4. '       ' → logprob: -7.646634578704834
    5. '   ' → logprob: -8.521635055541992
    6. '               ' → logprob: -9.021635055541992
    7. '          ' → logprob: -11.021635055541992
    8. '         ' → logprob: -11.771635055541992
    9. '	values' → logprob: -11.771635055541992
    10. 'value' → logprob: -12.521635055541992

Token 209: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' (adapté à ' values') → logprob: -0.029940243810415268
    2. ' values' → logprob: -3.529940128326416
    3. '           ' → logprob: -8.654940605163574
    4. '   ' → logprob: -12.279940605163574
    5. '       ' → logprob: -12.279940605163574
    6. '               ' → logprob: -12.404940605163574
    7. '	values' → logprob: -13.529940605163574
    8. ' ' → logprob: -15.904940605163574
    9. 'value' → logprob: -16.154939651489258
    10. '
' → logprob: -16.404939651489258

Token 210: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -2.696889623621246e-06
    2. 'col' → logprob: -13.87500286102295
    3. '[col' → logprob: -14.25000286102295
    4. '_' → logprob: -14.50000286102295
    5. '_row' → logprob: -15.12500286102295
    6. '_column' → logprob: -15.87500286102295
    7. '_val' → logprob: -17.000001907348633
    8. '_c' → logprob: -17.000001907348633
    9. '```' → logprob: -17.500001907348633
    10. '_cat' → logprob: -18.750001907348633

Token 211: '[counter' (ID: 127005)
  Prédit: '[counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[counter' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.125
    3. '[c' → logprob: -17.75
    4. '[col' → logprob: -18.875
    5. '[count' → logprob: -18.875
    6. '[cnt' → logprob: -19.75
    7. '[row' → logprob: -20.875
    8. '[column' → logprob: -20.875
    9. 'counter' → logprob: -21.125
    10. '(counter' → logprob: -21.375

Token 212: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.762255072593689
    2. ']+=' → logprob: -1.262255072593689
    3. '+=' → logprob: -1.512255072593689
    4. ' +=' → logprob: -3.5122551918029785
    5. ' ]' → logprob: -9.63725471496582
    6. ']+' → logprob: -11.13725471496582
    7. '   ' → logprob: -11.51225471496582
    8. '           ' → logprob: -11.63725471496582
    9. ')' → logprob: -11.63725471496582
    10. '[' → logprob: -12.51225471496582

Token 213: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04867911338806152
    2. ' +=' → logprob: -3.0486791133880615
    3. ']+=' → logprob: -9.42367935180664
    4. '[' → logprob: -11.67367935180664
    5. '=' → logprob: -14.29867935180664
    6. '+' → logprob: -14.79867935180664
    7. '   ' → logprob: -14.92367935180664
    8. '        ' → logprob: -15.54867935180664
    9. ' ' → logprob: -15.54867935180664
    10. '    ' → logprob: -15.54867935180664

Token 214: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003361774142831564
    2. ' ' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.250336647033691
    4. '```' → logprob: -17.000335693359375
    5. '<|end|>' → logprob: -17.500335693359375
    6. '           ' → logprob: -17.500335693359375
    7. '       ' → logprob: -18.375335693359375
    8. '  ' → logprob: -19.000335693359375
    9. '0' → logprob: -19.125335693359375
    10. '+' → logprob: -19.875335693359375

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.625015258789062
    4. '```' → logprob: -17.625015258789062
    5. '<|end|>' → logprob: -19.000015258789062
    6. 'int' → logprob: -19.125015258789062
    7. '  ' → logprob: -20.125015258789062
    8. '
' → logprob: -20.250015258789062
    9. '0' → logprob: -20.625015258789062
    10. 'value' → logprob: -20.750015258789062

Token 216: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20303595066070557
    2. 'col' → logprob: -1.7030359506607056
    3. ' col' → logprob: -6.453035831451416
    4. '       ' → logprob: -10.703036308288574
    5. '          ' → logprob: -11.578036308288574
    6. '[col' → logprob: -11.578036308288574
    7. '	col' → logprob: -13.453036308288574
    8. '(col' → logprob: -14.203036308288574
    9. '         ' → logprob: -14.203036308288574
    10. ',col' → logprob: -14.828036308288574

Token 217: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47649946808815
    2. 'col' → logprob: -0.9764994382858276
    3. ' col' → logprob: -6.101499557495117
    4. '       ' → logprob: -8.726499557495117
    5. '          ' → logprob: -11.476499557495117
    6. '[col' → logprob: -12.726499557495117
    7. '         ' → logprob: -13.726499557495117
    8. '	col' → logprob: -13.976499557495117
    9. '```' → logprob: -14.351499557495117
    10. '   ' → logprob: -14.351499557495117

Token 218: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' (adapté à ' col') → logprob: -0.0002615742268972099
    2. ' col' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.375261306762695
    4. '           ' → logprob: -17.500261306762695
    5. '	col' → logprob: -18.250261306762695
    6. ' ' → logprob: -18.625261306762695
    7. 'column' → logprob: -19.125261306762695
    8. '  ' → logprob: -19.500261306762695
    9. '       ' → logprob: -19.625261306762695
    10. '[col' → logprob: -20.500261306762695

Token 219: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -5.512236498361744e-07
    2. ' _' → logprob: -15.250000953674316
    3. 'index' → logprob: -16.0
    4. '_' → logprob: -16.625
    5. '```' → logprob: -17.875
    6. '__' → logprob: -18.625
    7. '[index' → logprob: -18.625
    8. '=_' → logprob: -19.0
    9. '._' → logprob: -19.375
    10. '           ' → logprob: -19.375

Token 220: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.4378848391061183e-05
    2. 'r' → logprob: -11.875014305114746
    3. '[' → logprob: -12.250014305114746
    4. '[row' → logprob: -13.750014305114746
    5. ' [' → logprob: -14.500014305114746
    6. '[c' → logprob: -15.000014305114746
    7. '[s' → logprob: -15.500014305114746
    8. '[a' → logprob: -16.500015258789062
    9. '[u' → logprob: -16.625015258789062
    10. '[m' → logprob: -16.750015258789062

Token 221: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02166813611984253
    2. '[r' → logprob: -3.8966681957244873
    3. '[c' → logprob: -7.146667957305908
    4. ']' → logprob: -8.521668434143066
    5. '[' → logprob: -9.521668434143066
    6. ' ][' → logprob: -10.646668434143066
    7. ')[' → logprob: -11.521668434143066
    8. '[row' → logprob: -11.771668434143066
    9. '}[' → logprob: -12.646668434143066
    10. '[s' → logprob: -12.646668434143066

Token 222: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.703443770878948e-06
    2. ' c' → logprob: -11.875007629394531
    3. '[c' → logprob: -15.000007629394531
    4. ')c' → logprob: -15.750007629394531
    5. '```' → logprob: -16.75000762939453
    6. '   ' → logprob: -16.87500762939453
    7. ')' → logprob: -17.75000762939453
    8. ' ' → logprob: -17.87500762939453
    9. 'с' → logprob: -18.00000762939453
    10. '
' → logprob: -18.12500762939453

Token 223: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7076294422149658
    2. ']' → logprob: -0.7076294422149658
    3. ']=' → logprob: -4.457629203796387
    4. ' =' → logprob: -6.582629203796387
    5. '[c' → logprob: -7.207629203796387
    6. '[r' → logprob: -7.832629203796387
    7. '][' → logprob: -8.957629203796387
    8. '[' → logprob: -9.332629203796387
    9. '=c' → logprob: -10.707629203796387
    10. ' ]' → logprob: -11.707629203796387

Token 224: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011371198343113065
    2. '[c' → logprob: -7.5011372566223145
    3. ' =' → logprob: -8.376136779785156
    4. '[' → logprob: -8.751136779785156
    5. '=c' → logprob: -8.751136779785156
    6. '[col' → logprob: -10.751136779785156
    7. '=[' → logprob: -12.251136779785156
    8. '=
' → logprob: -13.626136779785156
    9. '<|end|>' → logprob: -13.751136779785156
    10. '[column' → logprob: -13.876136779785156

Token 225: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.0009115827269852161
    2. ' counter' → logprob: -7.000911712646484
    3. 'count' → logprob: -16.875911712646484
    4. '	counter' → logprob: -17.250911712646484
    5. '[counter' → logprob: -18.000911712646484
    6. 'c' → logprob: -18.625911712646484
    7. 'token' → logprob: -19.875911712646484
    8. 'ounter' → logprob: -20.000911712646484
    9. ' ' → logprob: -20.000911712646484
    10. '(counter' → logprob: -20.250911712646484

Token 226: '

' (ID: 279)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5694797039031982
    2. 'for' → logprob: -0.9444797039031982
    3. 'answer' → logprob: -3.3194797039031982
    4. 'res' → logprob: -5.069479942321777
    5. 'ans' → logprob: -6.319479942321777
    6. 'output' → logprob: -7.694479942321777
    7. 'print' → logprob: -8.944479942321777
    8. 'answers' → logprob: -8.944479942321777
    9. 'results' → logprob: -9.069479942321777
    10. ')' → logprob: -9.569479942321777

Token 227: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18535247445106506
    2. 'result' → logprob: -1.8103524446487427
    3. 'res' → logprob: -6.060352325439453
    4. 'answer' → logprob: -6.310352325439453
    5. 'output' → logprob: -7.185352325439453
    6. 'ans' → logprob: -7.935352325439453
    7. 'results' → logprob: -8.310352325439453
    8. 'answers' → logprob: -10.560352325439453
    9. 'out' → logprob: -10.810352325439453
    10. 'print' → logprob: -11.560352325439453

Token 228: ' J' (ID: 643)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4499934911727905
    2. 'result' → logprob: -1.3249934911727905
    3. 'res' → logprob: -2.94999361038208
    4. 'answer' → logprob: -3.69999361038208
    5. 'ans' → logprob: -4.07499361038208
    6. 'output' → logprob: -7.07499361038208
    7. 'results' → logprob: -7.69999361038208
    8. 'out' → logprob: -8.199993133544922
    9. 'ret' → logprob: -8.199993133544922
    10. 'answers' → logprob: -8.199993133544922

Token 229: ''ai' (ID: 12480)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012707414105534554
    2. '#' → logprob: -5.512707233428955
    3. 'output' → logprob: -6.137707233428955
    4. 'final' → logprob: -7.512707233428955
    5. ' for' → logprob: -7.637707233428955
    6. ''ai' → logprob: -7.637707233428955
    7. 'ust' → logprob: -7.637707233428955
    8. '=' → logprob: -7.637707233428955
    9. 'u' → logprob: -7.762707233428955
    10. 's' → logprob: -7.887707233428955

Token 230: ' fa' (ID: 2229)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0020679449662566185
    2. ' for' → logprob: -6.252068042755127
    3. '#' → logprob: -10.502067565917969
    4. '[]' → logprob: -10.502067565917969
    5. '=' → logprob: -10.877067565917969
    6. ' =' → logprob: -11.127067565917969
    7. '[' → logprob: -11.502067565917969
    8. 'final' → logprob: -11.877067565917969
    9. '[
' → logprob: -12.127067565917969
    10. 'print' → logprob: -12.377067565917969

Token 231: 'illi' (ID: 13515)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.19553770124912262
    2. 'is' → logprob: -3.445537805557251
    3. 'inal' → logprob: -3.445537805557251
    4. '#' → logprob: -4.070537567138672
    5. 'i' → logprob: -4.195537567138672
    6. 'bit' → logprob: -4.570537567138672
    7. 's' → logprob: -4.945537567138672
    8. 'if' → logprob: -5.070537567138672
    9. 'def' → logprob: -5.070537567138672
    10. 'in' → logprob: -5.195537567138672

Token 232: ' oublier' (ID: 99499)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1275871843099594
    2. 'result' → logprob: -2.252587080001831
    3. 'answer' → logprob: -4.62758731842041
    4. 'res' → logprob: -6.12758731842041
    5. 'ans' → logprob: -6.75258731842041
    6. ' for' → logprob: -7.00258731842041
    7. 'output' → logprob: -7.87758731842041
    8. 'results' → logprob: -9.75258731842041
    9. '
' → logprob: -10.12758731842041
    10. 'answers' → logprob: -10.25258731842041

Token 233: ' ce' (ID: 2357)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4924066960811615
    2. 'result' → logprob: -0.9924067258834839
    3. 'res' → logprob: -4.867406845092773
    4. 'answer' → logprob: -4.992406845092773
    5. 'ans' → logprob: -5.992406845092773
    6. 'output' → logprob: -7.367406845092773
    7. 'results' → logprob: -8.492406845092773
    8. 'total' → logprob: -8.742406845092773
    9. 'answers' → logprob: -10.117406845092773
    10. 'print' → logprob: -10.242406845092773

Token 234: ' passage' (ID: 26368)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5570935010910034
    2. '#' → logprob: -2.182093620300293
    3. 'part' → logprob: -2.557093620300293
    4. 'print' → logprob: -3.057093620300293
    5. ' for' → logprob: -3.182093620300293
    6. ' code' → logprob: -3.432093620300293
    7. 'code' → logprob: -4.682093620300293
    8. 'pass' → logprob: -4.682093620300293
    9. 'if' → logprob: -5.057093620300293
    10. 'ci' → logprob: -5.182093620300293

Token 235: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44558465480804443
    2. 'result' → logprob: -1.0705846548080444
    3. 'answer' → logprob: -4.695584774017334
    4. 'res' → logprob: -5.445584774017334
    5. 'output' → logprob: -6.570584774017334
    6. 'ans' → logprob: -6.570584774017334
    7. 'results' → logprob: -8.195584297180176
    8. 'answers' → logprob: -9.695584297180176
    9. 'final' → logprob: -10.320584297180176
    10. 'out' → logprob: -10.445584297180176

Token 236: 'res' (ID: 430)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05080799013376236
    2. 'result' → logprob: -3.0508079528808594
    3. 'answer' → logprob: -6.800807952880859
    4. 'res' → logprob: -7.550807952880859
    5. 'ans' → logprob: -8.17580795288086
    6. 'output' → logprob: -8.42580795288086
    7. 'results' → logprob: -10.17580795288086
    8. ' for' → logprob: -11.55080795288086
    9. 'answers' → logprob: -11.67580795288086
    10. 'print' → logprob: -11.80080795288086

Token 237: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.5937392115592957
    2. ' =' → logprob: -0.9687392115592957
    3. '=' → logprob: -2.8437392711639404
    4. 'u' → logprob: -5.343739032745361
    5. 'ults' → logprob: -5.843739032745361
    6. 'ul' → logprob: -7.218739032745361
    7. 'ultat' → logprob: -7.468739032745361
    8. 's' → logprob: -8.09373950958252
    9. 'ual' → logprob: -8.84373950958252
    10. 'ault' → logprob: -8.84373950958252

Token 238: ' ' (ID: 220)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.14156073331832886
    2. '[]' → logprob: -2.1415607929229736
    3. '[' → logprob: -4.3915605545043945
    4. '[]
' → logprob: -6.6415605545043945
    5. '[['' → logprob: -7.3915605545043945
    6. '["' → logprob: -9.766560554504395
    7. ' [[' → logprob: -10.016560554504395
    8. '['' → logprob: -10.266560554504395
    9. '[][]' → logprob: -10.516560554504395
    10. '[
' → logprob: -10.766560554504395

Token 239: '0' (ID: 15)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.08326605707406998
    2. '[]' → logprob: -2.583266019821167
    3. '[' → logprob: -5.583266258239746
    4. '[['' → logprob: -7.833266258239746
    5. '[]
' → logprob: -8.833266258239746
    6. '['' → logprob: -10.583266258239746
    7. '["' → logprob: -10.958266258239746
    8. '[][]' → logprob: -11.333266258239746
    9. '""' → logprob: -12.583266258239746
    10. '[
' → logprob: -13.458266258239746

Token 240: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.3458322731312364e-06
    2. ' for' → logprob: -12.500007629394531
    3. 'result' → logprob: -13.000007629394531
    4. 'print' → logprob: -14.250007629394531
    5. 'output' → logprob: -15.125007629394531
    6. '
' → logprob: -15.375007629394531
    7. 'res' → logprob: -16.50000762939453
    8. 'results' → logprob: -17.37500762939453
    9. 'answer' → logprob: -18.00000762939453
    10. 'ans' → logprob: -18.00000762939453

Token 241: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.8889261304575484e-06
    2. 'result' → logprob: -13.000003814697266
    3. ' for' → logprob: -14.125003814697266
    4. 'print' → logprob: -14.625003814697266
    5. 'output' → logprob: -15.125003814697266
    6. 'res' → logprob: -16.375003814697266
    7. 'ans' → logprob: -17.250003814697266
    8. 'results' → logprob: -17.500003814697266
    9. 'answer' → logprob: -17.875003814697266
    10. '
' → logprob: -18.750003814697266

Token 242: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008615042082965374
    2. ' r' → logprob: -4.758615016937256
    3. '_r' → logprob: -15.633615493774414
    4. 'range' → logprob: -15.633615493774414
    5. ' range' → logprob: -16.508615493774414
    6. 'i' → logprob: -16.508615493774414
    7. '	r' → logprob: -17.008615493774414
    8. ' ' → logprob: -18.383615493774414
    9. 'x' → logprob: -19.133615493774414
    10. ' in' → logprob: -19.258615493774414

Token 243: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0076601081527769566
    2. 'in' → logprob: -4.882659912109375
    3. 'range' → logprob: -10.382659912109375
    4. ' ' → logprob: -11.132659912109375
    5. 'n' → logprob: -13.257659912109375
    6. 's' → logprob: -13.382659912109375
    7. ' range' → logprob: -13.507659912109375
    8. '_' → logprob: -14.257659912109375
    9. '0' → logprob: -14.632659912109375
    10. '<|end|>' → logprob: -14.882659912109375

Token 244: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031777136027812958
    2. ' range' → logprob: -5.753177642822266
    3. '(range' → logprob: -18.253177642822266
    4. '   ' → logprob: -20.003177642822266
    5. 'ange' → logprob: -20.878177642822266
    6. '	range' → logprob: -21.253177642822266
    7. ' ' → logprob: -21.628177642822266
    8. 'Range' → logprob: -22.128177642822266
    9. 'r' → logprob: -22.253177642822266
    10. '
' → logprob: -22.753177642822266

Token 245: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -5.991464786347933e-05
    2. '(range' → logprob: -10.000060081481934
    3. 'range' → logprob: -12.000060081481934
    4. ' range' → logprob: -12.000060081481934
    5. '(' → logprob: -13.375060081481934
    6. '(len' → logprob: -15.125060081481934
    7. 'H' → logprob: -15.375060081481934
    8. 'Range' → logprob: -16.875059127807617
    9. '(
' → logprob: -18.625059127807617
    10. '_range' → logprob: -18.750059127807617

Token 246: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6336832046508789
    2. '):' → logprob: -0.7586832046508789
    3. ')' → logprob: -7.508683204650879
    4. ':' → logprob: -8.008683204650879
    5. ':
' → logprob: -9.508683204650879
    6. '):
' → logprob: -10.258683204650879
    7. ',' → logprob: -10.383683204650879
    8. '   ' → logprob: -10.508683204650879
    9. '):

' → logprob: -11.508683204650879
    10. ' ' → logprob: -11.633683204650879

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001051984610967338
    2. ' for' → logprob: -7.501051902770996
    3. 'for' → logprob: -7.626051902770996
    4. '	for' → logprob: -12.251051902770996
    5. ' ' → logprob: -13.001051902770996
    6. '       ' → logprob: -13.501051902770996
    7. '<|end|>' → logprob: -13.876051902770996
    8. '   ' → logprob: -14.501051902770996
    9. '  ' → logprob: -15.251051902770996
    10. '    
' → logprob: -15.376051902770996

Token 248: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38068529963493347
    2. 'for' (adapté à ' for') → logprob: -1.2556853294372559
    3. ' for' → logprob: -3.630685329437256
    4. ' range' → logprob: -5.880685329437256
    5. 'range' → logprob: -6.130685329437256
    6. ' ' → logprob: -8.505684852600098
    7. '  ' → logprob: -10.880684852600098
    8. '       ' → logprob: -11.505684852600098
    9. '```' → logprob: -11.505684852600098
    10. '
' → logprob: -12.505684852600098

Token 249: ' c' (ID: 274)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.046385858207941055
    2. 'c' → logprob: -3.5463857650756836
    3. ' W' → logprob: -4.296385765075684
    4. 'range' → logprob: -6.296385765075684
    5. ' range' → logprob: -7.171385765075684
    6. '(W' → logprob: -9.046385765075684
    7. ' c' → logprob: -9.296385765075684
    8. 'w' → logprob: -10.046385765075684
    9. '   ' → logprob: -12.046385765075684
    10. ' in' → logprob: -13.046385765075684

Token 250: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4741050899028778
    2. 'in' → logprob: -0.9741051197052002
    3. '(' → logprob: -11.099104881286621
    4. '   ' → logprob: -12.099104881286621
    5. ')' → logprob: -13.474104881286621
    6. ' ' → logprob: -13.599104881286621
    7. '(in' → logprob: -14.224104881286621
    8. '(H' → logprob: -14.224104881286621
    9. ',' → logprob: -14.599104881286621
    10. ' (' → logprob: -14.849104881286621

Token 251: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08055324852466583
    2. ' range' → logprob: -2.5805532932281494
    3. '(range' → logprob: -6.83055305480957
    4. '(W' → logprob: -7.45555305480957
    5. 'W' → logprob: -13.33055305480957
    6. '   ' → logprob: -13.70555305480957
    7. '(' → logprob: -14.95555305480957
    8. '
' → logprob: -15.58055305480957
    9. 'Range' → logprob: -15.95555305480957
    10. ' ' → logprob: -16.08055305480957

Token 252: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.003240816527977586
    2. '(H' → logprob: -5.753240585327148
    3. 'range' → logprob: -10.628240585327148
    4. '(' → logprob: -10.753240585327148
    5. '(range' → logprob: -11.628240585327148
    6. ' range' → logprob: -12.003240585327148
    7. ' (' → logprob: -14.128240585327148
    8. 'W' → logprob: -14.378240585327148
    9. '   ' → logprob: -14.503240585327148
    10. ')' → logprob: -15.003240585327148

Token 253: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16059453785419464
    2. '):' → logprob: -1.9105945825576782
    3. ')' → logprob: -8.535594940185547
    4. '   ' → logprob: -9.660594940185547
    5. ':' → logprob: -9.910594940185547
    6. '):
' → logprob: -11.035594940185547
    7. '):

' → logprob: -11.410594940185547
    8. ':
' → logprob: -11.910594940185547
    9. ' in' → logprob: -12.035594940185547
    10. ' ):
' → logprob: -12.535594940185547

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013088944368064404
    2. ' if' → logprob: -4.638089179992676
    3. 'if' → logprob: -6.638089179992676
    4. ':' → logprob: -6.763089179992676
    5. ':
' → logprob: -7.763089179992676
    6. '   ' → logprob: -8.013089179992676
    7. ',' → logprob: -10.888089179992676
    8. ' and' → logprob: -11.263089179992676
    9. ' ' → logprob: -11.388089179992676
    10. '<|end|>' → logprob: -11.763089179992676

Token 255: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04150845855474472
    2. 'res' → logprob: -3.541508436203003
    3. 'val' → logprob: -5.666508674621582
    4. '   ' → logprob: -6.166508674621582
    5. ' if' → logprob: -6.166508674621582
    6. 'print' → logprob: -6.416508674621582
    7. 'key' → logprob: -7.416508674621582
    8. 'id' → logprob: -8.041508674621582
    9. 'value' → logprob: -8.791508674621582
    10. 'v' → logprob: -8.916508674621582

Token 256: ' ça' (ID: 13590)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00842568464577198
    2. 'res' → logprob: -5.133425712585449
    3. ' if' → logprob: -6.758425712585449
    4. 'val' → logprob: -7.758425712585449
    5. '   ' → logprob: -8.75842571258545
    6. 'key' → logprob: -8.75842571258545
    7. 'v' → logprob: -9.38342571258545
    8. 'print' → logprob: -9.50842571258545
    9. 'value' → logprob: -9.63342571258545
    10. 'row' → logprob: -9.63342571258545

Token 257: ' devrait' (ID: 52773)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37936946749687195
    2. ' +=' → logprob: -2.2543694972991943
    3. ' if' → logprob: -2.3793694972991943
    4. '+=' → logprob: -2.7543694972991943
    5. '   ' → logprob: -3.5043694972991943
    6. '=' → logprob: -4.754369258880615
    7. ' =' → logprob: -4.879369258880615
    8. '       ' → logprob: -6.129369258880615
    9. 'res' → logprob: -6.379369258880615
    10. 'elif' → logprob: -6.629369258880615

Token 258: ' faire' (ID: 8119)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22322474420070648
    2. ' =' → logprob: -2.848224639892578
    3. 'if' → logprob: -3.098224639892578
    4. '+=' → logprob: -3.223224639892578
    5. '   ' → logprob: -3.848224639892578
    6. ' if' → logprob: -4.098224639892578
    7. ' +=' → logprob: -5.098224639892578
    8. '           ' → logprob: -5.348224639892578
    9. 'row' → logprob: -6.223224639892578
    10. 'print' → logprob: -6.848224639892578

Token 259: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6770992279052734
    2. 'res' → logprob: -1.3020992279052734
    3. 'values' → logprob: -1.8020992279052734
    4. ' res' → logprob: -3.8020992279052734
    5. ' values' → logprob: -4.427099227905273
    6. '   ' → logprob: -4.927099227905273
    7. ' print' → logprob: -5.302099227905273
    8. 'max' → logprob: -5.302099227905273
    9. 'row' → logprob: -6.552099227905273
    10. '           ' → logprob: -7.302099227905273

Token 260: ''aff' (ID: 53397)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7368430495262146
    2. 'e' → logprob: -0.7368430495262146
    3. 'res' → logprob: -5.361843109130859
    4. 'ev' → logprob: -5.361843109130859
    5. 'es' → logprob: -5.486843109130859
    6. 'eg' → logprob: -5.986843109130859
    7. 'max' → logprob: -6.111843109130859
    8. '   ' → logprob: -6.361843109130859
    9. 'egal' → logprob: -6.611843109130859
    10. 'arg' → logprob: -6.736843109130859

Token 261: 'aire' (ID: 8189)
  Prédit: 'ichage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.4220946431159973
    2. 'ich' → logprob: -1.7970945835113525
    3. 'ic' → logprob: -2.0470945835113525
    4. 'iche' → logprob: -3.9220945835113525
    5. 'ect' → logprob: -4.172094821929932
    6. 'icher' → logprob: -6.172094821929932
    7. 'air' → logprob: -6.422094821929932
    8. '#' → logprob: -6.422094821929932
    9. 'aire' → logprob: -6.422094821929932
    10. 'et' → logprob: -7.047094821929932

Token 262: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5766403079032898
    2. '       ' → logprob: -1.3266403675079346
    3. ' if' → logprob: -2.2016403675079346
    4. ' res' → logprob: -3.5766403675079346
    5. 'res' → logprob: -4.2016401290893555
    6. 'print' → logprob: -4.4516401290893555
    7. 'if' → logprob: -5.4516401290893555
    8. ' print' → logprob: -6.7016401290893555
    9. '   ' → logprob: -7.0766401290893555
    10. '
' → logprob: -7.8266401290893555

Token 263: ' j' (ID: 441)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0659738779067993
    2. '           ' → logprob: -1.3159738779067993
    3. ' res' → logprob: -1.4409738779067993
    4. 'res' → logprob: -2.3159737586975098
    5. ' if' → logprob: -3.0659737586975098
    6. 'if' → logprob: -5.31597375869751
    7. '   ' → logprob: -8.315974235534668
    8. '               ' → logprob: -8.940974235534668
    9. ' ' → logprob: -10.815974235534668
    10. 'value' → logprob: -11.065974235534668

Token 264: ''espère' (ID: 116557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4577949643135071
    2. 'if' → logprob: -1.7077949047088623
    3. '       ' → logprob: -2.4577949047088623
    4. 'e' → logprob: -3.5827949047088623
    5. ''' → logprob: -3.9577949047088623
    6. '           ' → logprob: -4.457795143127441
    7. ''ai' → logprob: -4.582795143127441
    8. ''espère' → logprob: -4.957795143127441
    9. ' if' → logprob: -5.082795143127441
    10. '   ' → logprob: -5.332795143127441

Token 265: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057736966758966446
    2. '           ' → logprob: -3.557736873626709
    3. ' if' → logprob: -4.057736873626709
    4. 'res' → logprob: -5.432736873626709
    5. 'if' → logprob: -6.432736873626709
    6. ' res' → logprob: -6.432736873626709
    7. ':' → logprob: -7.057736873626709
    8. '
' → logprob: -7.307736873626709
    9. ':
' → logprob: -7.557736873626709
    10. '   ' → logprob: -8.682737350463867

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10207584500312805
    2. '           ' → logprob: -2.4770758152008057
    3. ' if' → logprob: -4.727076053619385
    4. ' res' → logprob: -6.977076053619385
    5. '   ' → logprob: -7.227076053619385
    6. '
' → logprob: -7.727076053619385
    7. 'if' → logprob: -7.852076053619385
    8. ':' → logprob: -8.102075576782227
    9. 'res' → logprob: -8.227075576782227
    10. '(' → logprob: -8.477075576782227

Token 267: ' temp' (ID: 5484)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07839082926511765
    2. 'res' → logprob: -2.9533908367156982
    3. 'val' → logprob: -4.578390598297119
    4. 'print' → logprob: -5.328390598297119
    5. ' if' → logprob: -5.453390598297119
    6. 'value' → logprob: -6.703390598297119
    7. '   ' → logprob: -7.453390598297119
    8. '       ' → logprob: -7.828390598297119
    9. 'count' → logprob: -8.203391075134277
    10. 'v' → logprob: -8.203391075134277

Token 268: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023753639310598373
    2. '_row' → logprob: -4.648753643035889
    3. '=' → logprob: -4.773753643035889
    4. '_val' → logprob: -6.023753643035889
    5. '_' → logprob: -6.523753643035889
    6. '_res' → logprob: -6.773753643035889
    7. '_r' → logprob: -9.02375316619873
    8. '_value' → logprob: -9.14875316619873
    9. '_values' → logprob: -10.14875316619873
    10. '=row' → logprob: -10.39875316619873

Token 269: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.02632851153612137
    2. ' values' → logprob: -3.6513285636901855
    3. 'max' → logprob: -10.776328086853027
    4. '   ' → logprob: -13.776328086853027
    5. 'row' → logprob: -13.776328086853027
    6. 'value' → logprob: -13.776328086853027
    7. '	values' → logprob: -13.776328086853027
    8. ' max' → logprob: -13.901328086853027
    9. '(values' → logprob: -13.901328086853027
    10. ' ' → logprob: -14.901328086853027

Token 270: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -9.722539834911004e-05
    2. '_col' → logprob: -9.250097274780273
    3. '_' → logprob: -13.875097274780273
    4. 'row' → logprob: -16.000097274780273
    5. '_Row' → logprob: -18.750097274780273
    6. '_ROW' → logprob: -19.000097274780273
    7. '_rows' → logprob: -19.125097274780273
    8. '__' → logprob: -19.375097274780273
    9. ' _' → logprob: -19.875097274780273
    10. '_column' → logprob: -19.875097274780273

Token 271: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -7.226628895296017e-06
    2. '[' → logprob: -11.875007629394531
    3. '[
' → logprob: -16.25000762939453
    4. ' [' → logprob: -17.50000762939453
    5. 'row' → logprob: -17.62500762939453
    6. '[col' → logprob: -18.00000762939453
    7. '[get' → logprob: -19.25000762939453
    8. '.get' → logprob: -19.50000762939453
    9. '```' → logprob: -19.75000762939453
    10. '(row' → logprob: -19.87500762939453

Token 272: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.000227496653678827
    2. 'index' → logprob: -8.500227928161621
    3. '[r' → logprob: -11.625227928161621
    4. '[row' → logprob: -11.875227928161621
    5. '[_' → logprob: -13.375227928161621
    6. '_' → logprob: -13.500227928161621
    7. '[index' → logprob: -14.125227928161621
    8. '```' → logprob: -14.625227928161621
    9. ']' → logprob: -14.875227928161621
    10. '[' → logprob: -15.000227928161621

Token 273: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.951771421066951e-05
    2. '][' → logprob: -11.375029563903809
    3. 'r' → logprob: -11.500029563903809
    4. '[' → logprob: -13.000029563903809
    5. ' [' → logprob: -13.375029563903809
    6. '[s' → logprob: -13.750029563903809
    7. ']' → logprob: -14.625029563903809
    8. '[u' → logprob: -14.875029563903809
    9. '[row' → logprob: -14.875029563903809
    10. '```' → logprob: -15.000029563903809

Token 274: '][' (ID: 2696)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.062294356524944305
    2. '][' → logprob: -2.8122942447662354
    3. 'r' → logprob: -9.062294006347656
    4. ' [' → logprob: -9.562294006347656
    5. '[row' → logprob: -10.062294006347656
    6. ']' → logprob: -10.437294006347656
    7. ' ][' → logprob: -10.562294006347656
    8. '[' → logprob: -10.687294006347656
    9. '[c' → logprob: -12.187294006347656
    10. '[s' → logprob: -13.187294006347656

Token 275: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.157039049663581e-05
    2. ' c' → logprob: -10.000051498413086
    3. '[c' → logprob: -13.000051498413086
    4. '][' → logprob: -13.250051498413086
    5. '   ' → logprob: -14.250051498413086
    6. 'r' → logprob: -14.375051498413086
    7. ' ' → logprob: -14.875051498413086
    8. ')c' → logprob: -15.875051498413086
    9. '```' → logprob: -16.000051498413086
    10. '	c' → logprob: -16.375051498413086

Token 276: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021626602858304977
    2. ']]' → logprob: -3.8966267108917236
    3. ']+' → logprob: -6.8966264724731445
    4. ' ]' → logprob: -9.771626472473145
    5. ' ]]' → logprob: -11.771626472473145
    6. '[c' → logprob: -13.021626472473145
    7. '[' → logprob: -13.146626472473145
    8. '[r' → logprob: -14.271626472473145
    9. ']*' → logprob: -14.521626472473145
    10. ']
' → logprob: -14.521626472473145

Token 277: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16022920608520508
    2. ' +' → logprob: -1.910229206085205
    3. '+
' → logprob: -12.660228729248047
    4. ' ' → logprob: -14.535228729248047
    5. '       ' → logprob: -15.285228729248047
    6. ' ' → logprob: -15.410228729248047
    7. '
' → logprob: -15.660228729248047
    8. ' +
' → logprob: -15.785228729248047
    9. '   ' → logprob: -16.035228729248047
    10. '           ' → logprob: -16.535228729248047

Token 278: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.5759530663490295
    2. ' values' → logprob: -0.8259530663490295
    3. '(values' → logprob: -11.450953483581543
    4. '	values' → logprob: -13.575953483581543
    5. '.values' → logprob: -14.200953483581543
    6. '"' → logprob: -15.700953483581543
    7. '_values' → logprob: -15.700953483581543
    8. ' ' → logprob: -15.825953483581543
    9. 'value' → logprob: -16.200952529907227
    10. '1' → logprob: -16.450952529907227

Token 279: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -2.339278580620885e-06
    2. '_row' → logprob: -14.000001907348633
    3. '[col' → logprob: -14.000001907348633
    4. '_' → logprob: -15.250001907348633
    5. 'col' → logprob: -15.375001907348633
    6. '_COL' → logprob: -17.250001907348633
    7. '_cols' → logprob: -17.625001907348633
    8. '```' → logprob: -17.750001907348633
    9. '[_' → logprob: -17.875001907348633
    10. '_column' → logprob: -18.000001907348633

Token 280: '[col' (ID: 75852)
  Prédit: '[col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -0.00013417120499070734
    2. '[' → logprob: -9.625134468078613
    3. '[row' → logprob: -9.625134468078613
    4. '[
' → logprob: -14.375134468078613
    5. ' [' → logprob: -14.500134468078613
    6. '[column' → logprob: -15.375134468078613
    7. 'col' → logprob: -15.500134468078613
    8. ' col' → logprob: -15.500134468078613
    9. '[[' → logprob: -15.625134468078613
    10. '[c' → logprob: -16.250133514404297

Token 281: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.004894058220088482
    2. 'index' → logprob: -5.504894256591797
    3. 'ex' → logprob: -8.004894256591797
    4. 'dex' → logprob: -8.129894256591797
    5. 'nd' → logprob: -8.754894256591797
    6. 'x' → logprob: -11.754894256591797
    7. 'r' → logprob: -12.004894256591797
    8. 'Index' → logprob: -12.379894256591797
    9. 'ind' → logprob: -12.379894256591797
    10. 'd' → logprob: -13.754894256591797

Token 282: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.842555426876061e-06
    2. 'r' → logprob: -13.250004768371582
    3. ' [' → logprob: -13.250004768371582
    4. '[' → logprob: -14.500004768371582
    5. '[row' → logprob: -15.125004768371582
    6. '][' → logprob: -15.500004768371582
    7. '   ' → logprob: -16.6250057220459
    8. '[c' → logprob: -16.8750057220459
    9. ' ' → logprob: -17.0000057220459
    10. ']' → logprob: -17.7500057220459

Token 283: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.7166449427604675
    2. '[r' → logprob: -0.7166449427604675
    3. '[c' → logprob: -3.8416450023651123
    4. 'r' → logprob: -7.216644763946533
    5. ']' → logprob: -7.966644763946533
    6. 'c' → logprob: -8.091645240783691
    7. '   ' → logprob: -9.216645240783691
    8. ' ][' → logprob: -9.466645240783691
    9. '```' → logprob: -10.091645240783691
    10. '       ' → logprob: -10.341645240783691

Token 284: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.0590548703912646e-05
    2. ' c' → logprob: -11.250030517578125
    3. 'r' → logprob: -11.875030517578125
    4. '[c' → logprob: -12.000030517578125
    5. '   ' → logprob: -13.250030517578125
    6. ']' → logprob: -13.875030517578125
    7. '```' → logprob: -15.250030517578125
    8. ' ' → logprob: -15.250030517578125
    9. '[r' → logprob: -15.500030517578125
    10. '][' → logprob: -15.875030517578125

Token 285: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00023333763238042593
    2. ']-' → logprob: -9.37523365020752
    3. ' ]' → logprob: -9.50023365020752
    4. '[r' → logprob: -9.75023365020752
    5. ']]' → logprob: -12.12523365020752
    6. 'r' → logprob: -12.75023365020752
    7. '']' → logprob: -13.62523365020752
    8. '       ' → logprob: -13.87523365020752
    9. ']
' → logprob: -14.00023365020752
    10. '   ' → logprob: -14.12523365020752

Token 286: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3697541356086731
    2. '-' → logprob: -1.4947540760040283
    3. '<|end|>' → logprob: -3.3697540760040283
    4. '       ' → logprob: -3.7447540760040283
    5. '
' → logprob: -3.8697540760040283
    6. ' if' → logprob: -6.494754314422607
    7. ' ' → logprob: -6.869754314422607
    8. ' 
' → logprob: -6.994754314422607
    9. ')' → logprob: -7.244754314422607
    10. '<|end|>' → logprob: -7.869754314422607

Token 287: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -11.500011444091797
    3. '(' → logprob: -15.000011444091797
    4. ' (' → logprob: -15.250011444091797
    5. '2' → logprob: -16.125011444091797
    6. 'int' → logprob: -17.000011444091797
    7. '   ' → logprob: -17.125011444091797
    8. '           ' → logprob: -17.625011444091797
    9. '       ' → logprob: -17.875011444091797
    10. '0' → logprob: -18.437511444091797

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.117345684382599e-05
    2. ' ' → logprob: -10.875020980834961
    3. '(' → logprob: -14.250020980834961
    4. '2' → logprob: -14.375020980834961
    5. 'int' → logprob: -15.125020980834961
    6. ' (' → logprob: -15.625020980834961
    7. '   ' → logprob: -16.12502098083496
    8. '           ' → logprob: -16.87502098083496
    9. '(int' → logprob: -17.43752098083496
    10. '0' → logprob: -18.06252098083496

Token 289: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1838110387325287
    2. '       ' → logprob: -2.0588109493255615
    3. '<|end|>' → logprob: -3.3088109493255615
    4. '        
' → logprob: -6.308811187744141
    5. '
' → logprob: -7.183811187744141
    6. ')' → logprob: -7.683811187744141
    7. ')
' → logprob: -8.80881118774414
    8. ',' → logprob: -9.05881118774414
    9. ' if' → logprob: -9.18381118774414
    10. '<|end|>' → logprob: -9.30881118774414

Token 290: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 291: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.625811755657196
    2. ' if' → logprob: -1.5008118152618408
    3. '       ' → logprob: -2.000811815261841
    4. '
' → logprob: -2.375811815261841
    5. 'res' → logprob: -4.375811576843262
    6. 'print' → logprob: -7.500811576843262
    7. ')' → logprob: -8.125811576843262
    8. ' res' → logprob: -8.375811576843262
    9. '        
' → logprob: -9.375811576843262
    10. '<|end|>' → logprob: -9.500811576843262

Token 292: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.5999882221221924
    2. 'temp' → logprob: -1.0999882221221924
    3. ' mass' → logprob: -2.3499882221221924
    4. 'mass' → logprob: -4.599987983703613
    5. ' values' → logprob: -5.474987983703613
    6. ' res' → logprob: -5.474987983703613
    7. 'res' → logprob: -5.974987983703613
    8. 'values' → logprob: -6.974987983703613
    9. ' row' → logprob: -7.849987983703613
    10. ' not' → logprob: -8.787487983703613

Token 293: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16023743152618408
    2. '>' → logprob: -1.910237431526184
    3. ' ' → logprob: -12.160237312316895
    4. '   ' → logprob: -12.660237312316895
    5. '=' → logprob: -13.660237312316895
    6. ' ' → logprob: -14.285237312316895
    7. ')' → logprob: -14.660237312316895
    8. '  ' → logprob: -14.910237312316895
    9. '[' → logprob: -15.160237312316895
    10. 'max' → logprob: -15.535237312316895

Token 294: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2113979209971149e-05
    2. ' res' → logprob: -11.375012397766113
    3. '       ' → logprob: -15.500012397766113
    4. '
' → logprob: -15.875012397766113
    5. '	res' → logprob: -16.125011444091797
    6. '0' → logprob: -16.875011444091797
    7. '   ' → logprob: -17.375011444091797
    8. '           ' → logprob: -18.875011444091797
    9. '=res' → logprob: -19.500011444091797
    10. 'ress' → logprob: -19.500011444091797

Token 295: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1142154112458229
    2. ':
' → logprob: -2.23921537399292
    3. '           ' → logprob: -6.61421537399292
    4. '):
' → logprob: -11.114215850830078
    5. '       ' → logprob: -11.489215850830078
    6. '):' → logprob: -12.239215850830078
    7. ' :' → logprob: -12.489215850830078
    8. ':
' → logprob: -12.739215850830078
    9. ' :
' → logprob: -13.114215850830078
    10. ':

' → logprob: -13.114215850830078

Token 296: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007088594138622284
    2. '       ' → logprob: -8.37570858001709
    3. '               ' → logprob: -8.62570858001709
    4. 'res' → logprob: -9.12570858001709
    5. ' res' → logprob: -9.12570858001709
    6. '
' → logprob: -10.12570858001709
    7. '   ' → logprob: -11.25070858001709
    8. '```' → logprob: -11.62570858001709
    9. '            
' → logprob: -12.25070858001709
    10. '                   ' → logprob: -12.50070858001709

Token 297: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.038145918399095535
    2. ' res' → logprob: -3.2881460189819336
    3. '           ' → logprob: -9.538146018981934
    4. '               ' → logprob: -10.788146018981934
    5. '       ' → logprob: -11.413146018981934
    6. '	res' → logprob: -14.913146018981934
    7. '   ' → logprob: -15.038146018981934
    8. '                   ' → logprob: -17.163145065307617
    9. ' ' → logprob: -18.163145065307617
    10. '_res' → logprob: -18.413145065307617

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0485873706638813
    2. '=' → logprob: -3.0485873222351074
    3. '=temp' → logprob: -17.673587799072266
    4. '＝' → logprob: -17.923587799072266
    5. ' ' → logprob: -19.173587799072266
    6. '.=' → logprob: -20.173587799072266
    7. ',' → logprob: -21.298587799072266
    8. ' =)' → logprob: -21.298587799072266
    9. ' =
' → logprob: -21.673587799072266
    10. '            ' → logprob: -21.798587799072266

Token 299: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.16022443771362305
    2. ' temp' → logprob: -1.910224437713623
    3. 'tem' → logprob: -16.03522491455078
    4. 'tmp' → logprob: -16.41022491455078
    5. '	temp' → logprob: -16.53522491455078
    6. '(temp' → logprob: -18.03522491455078
    7. '_temp' → logprob: -18.66022491455078
    8. '$temp' → logprob: -18.78522491455078
    9. 't' → logprob: -19.16022491455078
    10. 'temps' → logprob: -19.53522491455078

Token 300: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.27099974633893e-05
    2. '
' → logprob: -11.375012397766113
    3. ' print' → logprob: -13.875012397766113
    4. ')' → logprob: -16.75001335144043
    5. '
' → logprob: -17.37501335144043
    6. '```' → logprob: -18.25001335144043
    7. ')
' → logprob: -18.75001335144043
    8. 'pr' → logprob: -18.75001335144043
    9. '.print' → logprob: -18.87501335144043
    10. '        
' → logprob: -18.87501335144043

Token 301: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.200166469876422e-06
    2. '
' → logprob: -12.750004768371582
    3. ' print' → logprob: -13.000004768371582
    4. '```' → logprob: -18.3750057220459
    5. ')
' → logprob: -19.5000057220459
    6. '(print' → logprob: -19.6250057220459
    7. ')' → logprob: -20.0000057220459
    8. ' 
' → logprob: -20.3750057220459
    9. '#print' → logprob: -20.6250057220459
    10. '.print' → logprob: -20.6250057220459

Token 302: '(res' (ID: 8331)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12722279131412506
    2. '(res' → logprob: -2.127222776412964
    3. '('' → logprob: -8.252223014831543
    4. '("' → logprob: -11.252223014831543
    5. 'res' → logprob: -11.752223014831543
    6. '(`' → logprob: -12.502223014831543
    7. '()' → logprob: -12.752223014831543
    8. '(
' → logprob: -13.252223014831543
    9. '("("' → logprob: -13.627223014831543
    10. ' (' → logprob: -14.002223014831543

Token 303: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ' )' → logprob: -12.75000286102295
    3. '())' → logprob: -16.750003814697266
    4. '()' → logprob: -17.000003814697266
    5. ')`' → logprob: -17.625003814697266
    6. '))' → logprob: -18.000003814697266
    7. '+' → logprob: -18.000003814697266
    8. ')#' → logprob: -18.125003814697266
    9. ')}' → logprob: -18.375003814697266
    10. ')
' → logprob: -18.750003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 301
Tokens correctement prédits (1ère position, stricte): 107
Tokens correctement prédits (1ère position, avec adaptation): 120
Tokens correctement prédits (top 10): 230
Précision stricte (1ère position): 35.55%
Précision adaptée (1ère position): 39.87%
Précision (top 10): 76.41%
================================================================================
