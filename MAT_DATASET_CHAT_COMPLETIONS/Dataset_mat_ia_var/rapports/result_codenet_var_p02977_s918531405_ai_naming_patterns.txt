================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_value = int(input())
highest_power_of_two = 1 << (input_value.bit_length() - 1)
difference_value = input_value - highest_power_of_two

if difference_value == 0:
    print("No")
else:
    print("Yes")
    print(1, 2)
    print(2, 3)
    print(3, input_value + 1)
    print(input_value + 1, input_value + 2)
    print(input_value + 2, input_value + 3)
    for loop_index in range(4, input_value, 2):
        print(loop_index, loop_index + 1)
        print(loop_index + input_value, loop_index + input_value + 1)
        print(1 + input_value, loop_index + input_value)
        print(1 + input_value, loop_index + 1)
    if (~input_value) & 1:
        print(input_value, highest_power_of_two + input_value)
        xor_value = input_value ^ highest_power_of_two ^ 1
        print(input_value + input_value, xor_value)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_value' (ID: 6734)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.9770203828811646
    2. 'input' → logprob: -1.2270203828811646
    3. ' ' → logprob: -1.3520203828811646
    4. '"' → logprob: -3.102020263671875
    5. ' "' → logprob: -4.477020263671875
    6. ''' → logprob: -5.352020263671875
    7. '0' → logprob: -5.727020263671875
    8. ' '' → logprob: -6.602020263671875
    9. ' int' → logprob: -7.102020263671875
    10. ' a' → logprob: -7.102020263671875

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0025887389201670885
    2. '(input' → logprob: -6.377588748931885
    3. '```' → logprob: -7.877588748931885
    4. '('' → logprob: -9.377588272094727
    5. '[' → logprob: -9.502588272094727
    6. '`' → logprob: -9.752588272094727
    7. ''' → logprob: -10.127588272094727
    8. '("("' → logprob: -10.252588272094727
    9. '()' → logprob: -10.377588272094727
    10. ' (' → logprob: -10.502588272094727

Token 5: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0830627903342247
    2. '(' → logprob: -3.0830628871917725
    3. '())' → logprob: -3.5830628871917725
    4. '()' → logprob: -5.333062648773193
    5. '))' → logprob: -6.833062648773193
    6. '[' → logprob: -10.333063125610352
    7. '()))' → logprob: -10.333063125610352
    8. '')' → logprob: -10.708063125610352
    9. '")' → logprob: -11.333063125610352
    10. '`)' → logprob: -11.458063125610352

Token 6: 'highest' (ID: 145680)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3975314199924469
    2. 'if' → logprob: -1.5225313901901245
    3. '*' → logprob: -2.522531509399414
    4. '%' → logprob: -4.397531509399414
    5. ' if' → logprob: -5.522531509399414
    6. ')' → logprob: -5.897531509399414
    7. '#' → logprob: -5.897531509399414
    8. '**' → logprob: -6.772531509399414
    9. '```' → logprob: -6.897531509399414
    10. ' ' → logprob: -6.897531509399414

Token 7: '_power' (ID: 51623)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0022072356659919024
    2. '_value' → logprob: -6.377207279205322
    3. '_val' → logprob: -8.877206802368164
    4. '_space' → logprob: -9.627206802368164
    5. ' _' → logprob: -10.002206802368164
    6. ')' → logprob: -10.127206802368164
    7. '_score' → logprob: -10.502206802368164
    8. '_max' → logprob: -11.002206802368164
    9. '_)' → logprob: -11.377206802368164
    10. '_s' → logprob: -11.502206802368164

Token 8: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009217512793838978
    2. ' =' → logprob: -5.134217739105225
    3. '=' → logprob: -6.884217739105225
    4. '_space' → logprob: -6.884217739105225
    5. '(' → logprob: -7.134217739105225
    6. ' ' → logprob: -8.634217262268066
    7. '_=' → logprob: -9.759217262268066
    8. ' _' → logprob: -10.134217262268066
    9. '_of' → logprob: -10.509217262268066
    10. 's' → logprob: -10.759217262268066

Token 9: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.16411322355270386
    2. '_' → logprob: -1.9141132831573486
    3. '2' → logprob: -5.6641130447387695
    4. ' ' → logprob: -8.16411304473877
    5. ' two' → logprob: -9.78911304473877
    6. '_t' → logprob: -10.16411304473877
    7. 'two' → logprob: -10.78911304473877
    8. '_tw' → logprob: -12.03911304473877
    9. '_TWO' → logprob: -13.53911304473877
    10. '```' → logprob: -13.66411304473877

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02518182061612606
    2. '=' → logprob: -4.025181770324707
    3. '_' → logprob: -5.025181770324707
    4. ' ' → logprob: -7.900181770324707
    5. '(' → logprob: -10.525181770324707
    6. ' _' → logprob: -11.025181770324707
    7. '_=' → logprob: -11.900181770324707
    8. '```' → logprob: -13.025181770324707
    9. ' <<=' → logprob: -13.400181770324707
    10. '_space' → logprob: -13.525181770324707

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4314456880092621
    2. '1' → logprob: -1.0564457178115845
    3. ' input' → logprob: -6.431445598602295
    4. 'input' → logprob: -6.806445598602295
    5. '(input' → logprob: -11.181446075439453
    6. '2' → logprob: -12.931446075439453
    7. ' (' → logprob: -13.056446075439453
    8. '  ' → logprob: -13.681446075439453
    9. '0' → logprob: -13.931446075439453
    10. ' ' → logprob: -14.306446075439453

Token 12: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004162687808275223
    2. 'input' → logprob: -5.879162788391113
    3. ' ' → logprob: -6.629162788391113
    4. ' input' → logprob: -10.629162788391113
    5. '0' → logprob: -12.254162788391113
    6. '2' → logprob: -12.379162788391113
    7. 'int' → logprob: -13.629162788391113
    8. '(input' → logprob: -13.879162788391113
    9. '  ' → logprob: -15.879162788391113
    10. '(' → logprob: -16.504161834716797

Token 13: ' <<' (ID: 2256)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5636606216430664
    2. '*' → logprob: -1.8136606216430664
    3. 'while' → logprob: -2.1886606216430664
    4. '2' → logprob: -3.1886606216430664
    5. ' while' → logprob: -3.1886606216430664
    6. '#' → logprob: -3.5636606216430664
    7. ' ' → logprob: -4.063660621643066
    8. '<|end|>' → logprob: -4.563660621643066
    9. '<<' → logprob: -5.563660621643066
    10. ' *' → logprob: -5.813660621643066

Token 14: ' (' (ID: 350)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2867136299610138
    2. ' input' → logprob: -1.4117136001586914
    3. '(input' → logprob: -5.786713600158691
    4. ' (' → logprob: -6.411713600158691
    5. ' ' → logprob: -8.286713600158691
    6. '(' → logprob: -8.536713600158691
    7. '31' → logprob: -8.786713600158691
    8. '1' → logprob: -9.411713600158691
    9. '32' → logprob: -9.786713600158691
    10. '10' → logprob: -10.411713600158691

Token 15: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0024914760142564774
    2. ' input' → logprob: -6.002491474151611
    3. '31' → logprob: -11.62749195098877
    4. '(input' → logprob: -12.00249195098877
    5. '32' → logprob: -14.37749195098877
    6. 'int' → logprob: -17.877490997314453
    7. ' ' → logprob: -18.002490997314453
    8. '30' → logprob: -18.002490997314453
    9. '[input' → logprob: -18.002490997314453
    10. '<input' → logprob: -18.127490997314453

Token 16: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.080963092041202e-06
    2. 'value' → logprob: -13.000004768371582
    3. '_val' → logprob: -13.750004768371582
    4. ')' → logprob: -14.375004768371582
    5. ')_' → logprob: -15.375004768371582
    6. '_' → logprob: -15.500004768371582
    7. ' _' → logprob: -15.625004768371582
    8. '_values' → logprob: -16.2500057220459
    9. '_user' → logprob: -16.3750057220459
    10. '_VALUE' → logprob: -16.8750057220459

Token 17: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -3.249780638725497e-05
    2. '.' → logprob: -10.875032424926758
    3. ' .' → logprob: -12.250032424926758
    4. ').' → logprob: -12.375032424926758
    5. 'bit' → logprob: -13.250032424926758
    6. ' bit' → logprob: -13.875032424926758
    7. '.bits' → logprob: -14.125032424926758
    8. ')' → logprob: -15.250032424926758
    9. '-' → logprob: -15.375032424926758
    10. '```' → logprob: -16.125032424926758

Token 18: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -3.7697225252486533e-06
    2. '_l' → logprob: -12.875003814697266
    3. '_' → logprob: -14.000003814697266
    4. '_le' → logprob: -15.750003814697266
    5. '_LENGTH' → logprob: -16.875003814697266
    6. '_Length' → logprob: -17.375003814697266
    7. '_width' → logprob: -17.625003814697266
    8. 'length' → logprob: -18.000003814697266
    9. '_len' → logprob: -18.125003814697266
    10. '```' → logprob: -18.750003814697266

Token 19: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005131999962031841
    2. '(' → logprob: -6.25513219833374
    3. '()-' → logprob: -6.38013219833374
    4. ')' → logprob: -7.50513219833374
    5. ' ()' → logprob: -7.50513219833374
    6. '())' → logprob: -7.88013219833374
    7. '-' → logprob: -11.505131721496582
    8. ' ())' → logprob: -12.505131721496582
    9. '```' → logprob: -12.880131721496582
    10. '(-' → logprob: -13.255131721496582

Token 20: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5912859439849854
    2. ')' → logprob: -1.0912859439849854
    3. '-' → logprob: -2.2162859439849854
    4. ' ' → logprob: -7.466285705566406
    5. '()' → logprob: -7.466285705566406
    6. ' )' → logprob: -8.841285705566406
    7. ')-' → logprob: -9.216285705566406
    8. '```' → logprob: -9.591285705566406
    9. '`' → logprob: -10.091285705566406
    10. '()-' → logprob: -10.341285705566406

Token 21: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. '2' → logprob: -16.37506675720215
    4. '```' → logprob: -17.00006675720215
    5. '   ' → logprob: -17.87506675720215
    6. '0' → logprob: -17.93756675720215
    7. ')' → logprob: -18.81256675720215
    8. '`' → logprob: -19.25006675720215
    9. ' ' → logprob: -19.43756675720215
    10. '۱' → logprob: -20.31256675720215

Token 22: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '2' → logprob: -16.375001907348633
    4. ')' → logprob: -17.625001907348633
    5. '```' → logprob: -17.875001907348633
    6. '`' → logprob: -19.312501907348633
    7. '   ' → logprob: -19.812501907348633
    8. '0' → logprob: -19.875001907348633
    9. '۱' → logprob: -20.250001907348633
    10. '১' → logprob: -20.375001907348633

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2603901015827432e-05
    2. '))' → logprob: -10.750022888183594
    3. ' )' → logprob: -14.875022888183594
    4. '`)' → logprob: -15.375022888183594
    5. ')))' → logprob: -15.500022888183594
    6. '')' → logprob: -16.000022888183594
    7. ')
' → logprob: -16.625022888183594
    8. ')`' → logprob: -16.625022888183594
    9. '```' → logprob: -17.875022888183594
    10. ')#' → logprob: -18.000022888183594

Token 24: 'difference' (ID: 133489)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6497465968132019
    2. '#' → logprob: -1.5247466564178467
    3. '*' → logprob: -1.8997466564178467
    4. '<|end|>' → logprob: -3.6497466564178467
    5. '
' → logprob: -4.149746417999268
    6. '%' → logprob: -4.274746417999268
    7. '**' → logprob: -4.649746417999268
    8. ' if' → logprob: -5.024746417999268
    9. 'print' → logprob: -5.274746417999268
    10. '\n' → logprob: -5.274746417999268

Token 25: '_value' (ID: 6734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002953096991404891
    2. '_' → logprob: -6.377953052520752
    3. '=' → logprob: -6.752953052520752
    4. ' ' → logprob: -9.75295352935791
    5. ' _' → logprob: -12.00295352935791
    6. '  ' → logprob: -12.37795352935791
    7. 's' → logprob: -12.75295352935791
    8. ' ' → logprob: -13.12795352935791
    9. 'space' → logprob: -13.62795352935791
    10. '_space' → logprob: -13.62795352935791

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009650575229898095
    2. '_' → logprob: -7.500965118408203
    3. '=' → logprob: -8.250965118408203
    4. ' ' → logprob: -9.875965118408203
    5. ' -=' → logprob: -10.250965118408203
    6. ' +=' → logprob: -10.500965118408203
    7. ' _' → logprob: -11.500965118408203
    8. ' |=' → logprob: -12.500965118408203
    9. '  ' → logprob: -12.625965118408203
    10. ' -' → logprob: -12.625965118408203

Token 27: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0406314879655838
    2. 'input' → logprob: -3.2906315326690674
    3. ' highest' → logprob: -6.415631294250488
    4. ' abs' → logprob: -7.290631294250488
    5. 'highest' → logprob: -8.790631294250488
    6. 'abs' → logprob: -9.540631294250488
    7. ' ' → logprob: -10.540631294250488
    8. ' difference' → logprob: -11.790631294250488
    9. '(input' → logprob: -13.040631294250488
    10. 'difference' → logprob: -13.540631294250488

Token 28: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0002003218833124265
    2. '_' → logprob: -8.750200271606445
    3. ' _' → logprob: -10.750200271606445
    4. '_val' → logprob: -11.375200271606445
    5. '_difference' → logprob: -13.000200271606445
    6. '```' → logprob: -13.000200271606445
    7. '_values' → logprob: -14.125200271606445
    8. ')_' → logprob: -14.125200271606445
    9. '_VALUE' → logprob: -14.250200271606445
    10. '_Value' → logprob: -14.500200271606445

Token 29: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08916302025318146
    2. '-' → logprob: -2.464163064956665
    3. '<|end|>' → logprob: -9.339162826538086
    4. ' ' → logprob: -9.589162826538086
    5. ' -
' → logprob: -10.964162826538086
    6. ')' → logprob: -11.589162826538086
    7. '_' → logprob: -11.839162826538086
    8. ' ' → logprob: -11.964162826538086
    9. '```' → logprob: -11.964162826538086
    10. ' ^' → logprob: -12.339162826538086

Token 30: ' highest' (ID: 11639)
  Prédit: 'highest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'highest' → logprob: -0.10020667314529419
    2. ' highest' → logprob: -2.3502066135406494
    3. 'difference' → logprob: -17.22520637512207
    4. '最高' → logprob: -17.35020637512207
    5. ' ' → logprob: -17.97520637512207
    6. 'Highest' → logprob: -17.97520637512207
    7. '   ' → logprob: -18.97520637512207
    8. 'high' → logprob: -18.97520637512207
    9. '1' → logprob: -19.22520637512207
    10. ' ' → logprob: -19.35020637512207

Token 31: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.001628048368729651
    2. '_' → logprob: -6.5016279220581055
    3. '_p' → logprob: -9.251627922058105
    4. '_pow' → logprob: -10.751627922058105
    5. '_value' → logprob: -12.751627922058105
    6. '_POWER' → logprob: -14.376627922058105
    7. ' _' → logprob: -14.626627922058105
    8. '_high' → logprob: -14.626627922058105
    9. '_difference' → logprob: -14.751627922058105
    10. '_possible' → logprob: -15.001627922058105

Token 32: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0004764287732541561
    2. '_value' → logprob: -7.875476360321045
    3. '_power' → logprob: -9.625476837158203
    4. 's' → logprob: -11.125476837158203
    5. '_' → logprob: -12.250476837158203
    6. ' _' → logprob: -12.875476837158203
    7. '```' → logprob: -13.375476837158203
    8. 'of' → logprob: -14.000476837158203
    9. '\' → logprob: -14.125476837158203
    10. '_to' → logprob: -14.250476837158203

Token 33: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.002195813925936818
    2. 'two' → logprob: -6.127195835113525
    3. '_tw' → logprob: -12.377195358276367
    4. '_t' → logprob: -13.252195358276367
    5. '-two' → logprob: -13.752195358276367
    6. '_TWO' → logprob: -13.752195358276367
    7. '(two' → logprob: -13.877195358276367
    8. ' two' → logprob: -14.127195358276367
    9. '2' → logprob: -15.377195358276367
    10. '```' → logprob: -15.377195358276367

Token 34: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.888623058795929
    2. '<|end|>' → logprob: -1.3886229991912842
    3. '+' → logprob: -1.8886229991912842
    4. ' ' → logprob: -2.638622999191284
    5. '*' → logprob: -3.513622999191284
    6. '%' → logprob: -3.513622999191284
    7. '>' → logprob: -4.138623237609863
    8. ')' → logprob: -4.513623237609863
    9. ' if' → logprob: -4.888623237609863
    10. 'if' → logprob: -5.888623237609863

Token 35: 'if' (ID: 366)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7573567032814026
    2. ' if' → logprob: -1.8823566436767578
    3. '\' → logprob: -2.257356643676758
    4. '\n' → logprob: -2.632356643676758
    5. '+' → logprob: -3.257356643676758
    6. '*' → logprob: -3.757356643676758
    7. ':' → logprob: -4.007356643676758
    8. '
' → logprob: -4.132356643676758
    9. '<|end|>' → logprob: -4.257356643676758
    10. ' 
' → logprob: -4.507356643676758

Token 36: ' difference' (ID: 9809)
  Prédit: ' difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.002491595223546028
    2. 'difference' → logprob: -6.502491474151611
    3. ' input' → logprob: -7.252491474151611
    4. ' highest' → logprob: -8.62749195098877
    5. ' ' → logprob: -9.50249195098877
    6. ' ' → logprob: -11.25249195098877
    7. ' space' → logprob: -11.75249195098877
    8. '_difference' → logprob: -13.62749195098877
    9. ' (' → logprob: -14.00249195098877
    10. ' not' → logprob: -14.25249195098877

Token 37: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.004773291759192944
    2. '_' → logprob: -5.379773139953613
    3. '_val' → logprob: -9.004773139953613
    4. ' _' → logprob: -10.754773139953613
    5. '>' → logprob: -12.504773139953613
    6. '_v' → logprob: -13.254773139953613
    7. '_Value' → logprob: -14.754773139953613
    8. '__' → logprob: -15.004773139953613
    9. '```' → logprob: -15.129773139953613
    10. ' ' → logprob: -15.254773139953613

Token 38: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8501781821250916
    2. ' >' → logprob: -0.9751781821250916
    3. ' <' → logprob: -2.1001782417297363
    4. ' >=' → logprob: -3.6001782417297363
    5. ' ' → logprob: -3.8501782417297363
    6. ' <=' → logprob: -4.600178241729736
    7. '>' → logprob: -4.850178241729736
    8. '==' → logprob: -5.350178241729736
    9. ' !=' → logprob: -7.225178241729736
    10. '<' → logprob: -7.600178241729736

Token 39: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026434868574142456
    2. '0' → logprob: -3.651434898376465
    3. ' highest' → logprob: -9.151434898376465
    4. 'highest' → logprob: -10.776434898376465
    5. '1' → logprob: -13.338934898376465
    6. ' ' → logprob: -13.901434898376465
    7. '2' → logprob: -14.963934898376465
    8. ' (' → logprob: -15.026434898376465
    9. '=' → logprob: -15.088934898376465
    10. ' lowest' → logprob: -15.213934898376465

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31388863921165466
    2. ' ' → logprob: -1.313888669013977
    3. 'highest' → logprob: -8.063888549804688
    4. ' highest' → logprob: -8.188888549804688
    5. '1' → logprob: -11.063888549804688
    6. 'high' → logprob: -13.563888549804688
    7. '2' → logprob: -13.688888549804688
    8. ' (' → logprob: -13.688888549804688
    9. 'Highest' → logprob: -14.001388549804688
    10. ' ' → logprob: -14.126388549804688

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.696077227592468e-05
    2. ' :' → logprob: -9.625077247619629
    3. ':
' → logprob: -11.875077247619629
    4. ':**' → logprob: -13.375077247619629
    5. ' and' → logprob: -14.125077247619629
    6. ':return' → logprob: -14.250077247619629
    7. ' or' → logprob: -14.875077247619629
    8. ',' → logprob: -15.750077247619629
    9. '):' → logprob: -16.500076293945312
    10. ':

' → logprob: -16.875076293945312

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8815663456916809
    2. ':' → logprob: -1.0065662860870361
    3. ':
' → logprob: -2.506566286087036
    4. ' print' → logprob: -2.756566286087036
    5. '\n' → logprob: -3.131566286087036
    6. 'print' → logprob: -4.131566524505615
    7. '
' → logprob: -5.006566524505615
    8. '    
' → logprob: -6.381566524505615
    9. ':return' → logprob: -6.881566524505615
    10. ' return' → logprob: -7.006566524505615

Token 43: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.283136248588562
    2. '   ' → logprob: -2.1581363677978516
    3. 'print' (adapté à ' print') → logprob: -2.4081363677978516
    4. '\n' → logprob: -4.158136367797852
    5. '
' → logprob: -4.783136367797852
    6. ' 
' → logprob: -5.283136367797852
    7. ' pass' → logprob: -5.783136367797852
    8. '    ' → logprob: -6.033136367797852
    9. '    
' → logprob: -6.033136367797852
    10. ' ' → logprob: -7.158136367797852

Token 44: '("' (ID: 568)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5295096039772034
    2. '(' → logprob: -1.1545095443725586
    3. '(high' → logprob: -2.4045095443725586
    4. '("' → logprob: -5.904509544372559
    5. '('' → logprob: -6.904509544372559
    6. '()' → logprob: -7.279509544372559
    7. 'input' → logprob: -7.779509544372559
    8. 'highest' → logprob: -7.904509544372559
    9. '("("' → logprob: -9.154509544372559
    10. '(f' → logprob: -9.779509544372559

Token 45: 'No' (ID: 3160)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9138380885124207
    2. '0' → logprob: -1.6638381481170654
    3. '2' → logprob: -1.9138381481170654
    4. 'input' → logprob: -2.0388381481170654
    5. 'Power' → logprob: -3.4138381481170654
    6. 'power' → logprob: -3.6638381481170654
    7. '"' → logprob: -4.663837909698486
    8. 'Yes' → logprob: -5.038837909698486
    9. 'Bob' → logprob: -5.038837909698486
    10. '")' → logprob: -5.288837909698486

Token 46: '")
' (ID: 1896)
  Prédit: ' difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.04462062194943428
    2. ' ' → logprob: -5.419620513916016
    3. ' output' → logprob: -5.669620513916016
    4. 'difference' → logprob: -5.669620513916016
    5. ' ")' → logprob: -5.669620513916016
    6. ' higher' → logprob: -6.419620513916016
    7. ' valid' → logprob: -6.669620513916016
    8. ' power' → logprob: -6.732120513916016
    9. ' differences' → logprob: -6.794620513916016
    10. ' duplicates' → logprob: -6.794620513916016

Token 47: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.14487095177173615
    2. ' else' → logprob: -2.5198709964752197
    3. 'elif' → logprob: -3.0198709964752197
    4. ' elif' → logprob: -6.519870758056641
    5. '    
' → logprob: -7.144870758056641
    6. '\n' → logprob: -7.144870758056641
    7. '   ' → logprob: -7.394870758056641
    8. '
' → logprob: -7.394870758056641
    9. '```' → logprob: -7.644870758056641
    10. ' 
' → logprob: -8.76987075805664

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010397175792604685
    2. ':
' → logprob: -7.001039505004883
    3. '   ' → logprob: -9.251039505004883
    4. ' :' → logprob: -10.501039505004883
    5. '    ' → logprob: -13.376039505004883
    6. ' :
' → logprob: -13.751039505004883
    7. ',' → logprob: -14.126039505004883
    8. '```' → logprob: -15.251039505004883
    9. '):' → logprob: -15.876039505004883
    10. '<|end|>' → logprob: -16.001039505004883

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006267189979553223
    2. ' print' → logprob: -5.131267070770264
    3. 'print' → logprob: -8.256267547607422
    4. '    ' → logprob: -10.131267547607422
    5. '   ' → logprob: -11.381267547607422
    6. '```' → logprob: -11.631267547607422
    7. '	print' → logprob: -13.006267547607422
    8. ' ' → logprob: -13.006267547607422
    9. '   ' → logprob: -13.006267547607422
    10. ' ' → logprob: -13.131267547607422

Token 50: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.11807045340538025
    2. '   ' → logprob: -2.618070363998413
    3. 'print' (adapté à ' print') → logprob: -3.368070363998413
    4. ' if' → logprob: -6.118070602416992
    5. ' for' → logprob: -7.743070602416992
    6. ' ' → logprob: -7.743070602416992
    7. '    ' → logprob: -7.868070602416992
    8. 'if' → logprob: -8.243070602416992
    9. '```' → logprob: -9.618070602416992
    10. '       ' → logprob: -10.368070602416992

Token 51: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3191157281398773
    2. '("' → logprob: -1.3191157579421997
    3. '("("' → logprob: -5.19411563873291
    4. '('' → logprob: -8.94411563873291
    5. '("")' → logprob: -10.44411563873291
    6. '(f' → logprob: -10.44411563873291
    7. '"' → logprob: -11.19411563873291
    8. '()' → logprob: -11.19411563873291
    9. '(True' → logprob: -11.31911563873291
    10. '((' → logprob: -11.69411563873291

Token 52: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.01227887999266386
    2. '"' → logprob: -4.637279033660889
    3. 'No' → logprob: -7.387279033660889
    4. 'yes' → logprob: -8.26227855682373
    5. 'difference' → logprob: -8.26227855682373
    6. ' Yes' → logprob: -8.51227855682373
    7. '")' → logprob: -8.63727855682373
    8. 'Ye' → logprob: -8.63727855682373
    9. 'YES' → logprob: -8.88727855682373
    10. 'Difference' → logprob: -9.57477855682373

Token 53: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0008516783127561212
    2. ')' → logprob: -7.250851631164551
    3. ')")' → logprob: -8.87585163116455
    4. '")
' → logprob: -13.50085163116455
    5. '!")' → logprob: -15.37585163116455
    6. '"' → logprob: -15.62585163116455
    7. '')' → logprob: -16.125852584838867
    8. ' ")' → logprob: -16.625852584838867
    9. '}")' → logprob: -16.750852584838867
    10. ' )' → logprob: -17.625852584838867

Token 54: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' print' (ID: 2123)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.187631368637085
    2. '   ' → logprob: -1.187631368637085
    3. ' if' → logprob: -2.562631368637085
    4. 'if' → logprob: -2.562631368637085
    5. '```' → logprob: -3.437631368637085
    6. '    ' → logprob: -3.562631368637085
    7. ' 
' → logprob: -3.937631368637085
    8. '
' → logprob: -3.937631368637085
    9. '<|end|>' → logprob: -4.187631607055664
    10. ',' → logprob: -4.187631607055664

Token 56: '(' (ID: 7)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.48002520203590393
    2. '(' → logprob: -0.9800251722335815
    3. '(f' → logprob: -5.980025291442871
    4. '("' → logprob: -6.855025291442871
    5. '('' → logprob: -7.230025291442871
    6. '("("' → logprob: -7.355025291442871
    7. '((' → logprob: -7.480025291442871
    8. 'difference' → logprob: -8.605025291442871
    9. '(diff' → logprob: -9.855025291442871
    10. ' (' → logprob: -9.980025291442871

Token 57: '1' (ID: 16)
  Prédit: 'difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'difference' → logprob: -0.1517481952905655
    2. ' difference' → logprob: -2.1517481803894043
    3. 'highest' → logprob: -4.151748180389404
    4. ' highest' → logprob: -5.276748180389404
    5. 'd' → logprob: -6.651748180389404
    6. '   ' → logprob: -7.151748180389404
    7. 'input' → logprob: -7.901748180389404
    8. '2' → logprob: -8.026748657226562
    9. ' input' → logprob: -8.151748657226562
    10. 'diff' → logprob: -9.026748657226562

Token 58: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.19375067949295044
    2. '+' → logprob: -1.9437506198883057
    3. ' <<' → logprob: -3.5687506198883057
    4. ')' → logprob: -6.318750858306885
    5. '<<' → logprob: -6.818750858306885
    6. ' )' → logprob: -7.443750858306885
    7. ' ,' → logprob: -7.443750858306885
    8. ',' → logprob: -8.068750381469727
    9. ' *' → logprob: -9.443750381469727
    10. ' ' → logprob: -9.568750381469727

Token 59: ' ' (ID: 220)
  Prédit: ' difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.6966958045959473
    2. 'difference' → logprob: -0.6966958045959473
    3. ' highest' → logprob: -6.321695804595947
    4. 'highest' → logprob: -6.946695804595947
    5. 'd' → logprob: -7.446695804595947
    6. ' input' → logprob: -9.821695327758789
    7. ' ' → logprob: -9.946695327758789
    8. 'input' → logprob: -10.946695327758789
    9. 'diff' → logprob: -11.571695327758789
    10. 'end' → logprob: -11.571695327758789

Token 60: '2' (ID: 17)
  Prédit: 'difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'difference' → logprob: -0.005591244902461767
    2. ' difference' → logprob: -5.38059139251709
    3. 'd' → logprob: -7.25559139251709
    4. 'highest' → logprob: -8.50559139251709
    5. 'input' → logprob: -10.25559139251709
    6. 'diff' → logprob: -11.88059139251709
    7. ' highest' → logprob: -12.00559139251709
    8. 'lowest' → logprob: -12.50559139251709
    9. ' input' → logprob: -13.25559139251709
    10. ' ' → logprob: -13.38059139251709

Token 61: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7880520224571228
    2. ' +' → logprob: -0.9130520224571228
    3. '+' → logprob: -2.2880520820617676
    4. ',' → logprob: -4.413052082061768
    5. ' )' → logprob: -4.663052082061768
    6. '**' → logprob: -5.163052082061768
    7. '*' → logprob: -5.538052082061768
    8. ' **' → logprob: -5.663052082061768
    9. ' ,' → logprob: -5.913052082061768
    10. ' *' → logprob: -6.038052082061768

Token 62: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9020599722862244
    2. '<|end|>' → logprob: -1.2770600318908691
    3. ')' → logprob: -2.152060031890869
    4. '\n' → logprob: -2.527060031890869
    5. ' ' → logprob: -3.402060031890869
    6. '0' → logprob: -3.652060031890869
    7. '+' → logprob: -4.527060031890869
    8. ' 
' → logprob: -4.652060031890869
    9. '```' → logprob: -4.902060031890869
    10. '#' → logprob: -4.902060031890869

Token 63: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: '(' (ID: 7)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.10101116448640823
    2. '(' → logprob: -2.851011276245117
    3. 'difference' → logprob: -3.726011276245117
    4. '(high' → logprob: -4.851011276245117
    5. '(input' → logprob: -5.726011276245117
    6. 'highest' → logprob: -7.351011276245117
    7. 'd' → logprob: -7.601011276245117
    8. '()' → logprob: -7.601011276245117
    9. '((' → logprob: -8.476011276245117
    10. '1' → logprob: -8.601011276245117

Token 65: '2' (ID: 17)
  Prédit: 'difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'difference' → logprob: -0.08892039209604263
    2. ' difference' → logprob: -3.2139203548431396
    3. 'highest' → logprob: -3.8389203548431396
    4. '1' → logprob: -5.213920593261719
    5. ' highest' → logprob: -5.338920593261719
    6. 'input' → logprob: -5.463920593261719
    7. '2' → logprob: -5.963920593261719
    8. 'd' → logprob: -6.588920593261719
    9. ' input' → logprob: -6.838920593261719
    10. ' ' → logprob: -6.963920593261719

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38266706466674805
    2. ' ,' → logprob: -1.632667064666748
    3. ' +' → logprob: -2.382667064666748
    4. '+' → logprob: -4.007667064666748
    5. ')' → logprob: -5.382667064666748
    6. ' ' → logprob: -6.132667064666748
    7. ',d' → logprob: -6.632667064666748
    8. ' )' → logprob: -7.007667064666748
    9. ' -' → logprob: -7.007667064666748
    10. '-' → logprob: -8.007667541503906

Token 67: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3400645852088928
    2. 'difference' → logprob: -1.965064525604248
    3. ' ' → logprob: -2.465064525604248
    4. ' difference' → logprob: -3.840064525604248
    5. 'highest' → logprob: -4.465064525604248
    6. '1' → logprob: -4.590064525604248
    7. '2' → logprob: -4.840064525604248
    8. ' input' → logprob: -5.715064525604248
    9. 'input' → logprob: -5.840064525604248
    10. ' highest' → logprob: -5.965064525604248

Token 68: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7653144598007202
    2. 'difference' → logprob: -0.7653144598007202
    3. ' ' → logprob: -3.7653145790100098
    4. ' difference' → logprob: -4.39031457901001
    5. 'highest' → logprob: -4.76531457901001
    6. '(' → logprob: -5.26531457901001
    7. 'input' → logprob: -5.26531457901001
    8. '2' → logprob: -5.26531457901001
    9. '1' → logprob: -5.39031457901001
    10. '(d' → logprob: -6.64031457901001

Token 69: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.0339031834737398e-05
    2. ')
' → logprob: -11.250020027160645
    3. ' )' → logprob: -13.000020027160645
    4. '   ' → logprob: -13.250020027160645
    5. ',' → logprob: -13.750020027160645
    6. '))' → logprob: -15.250020027160645
    7. '```' → logprob: -15.250020027160645
    8. '')' → logprob: -15.375020027160645
    9. ')**' → logprob: -15.500020027160645
    10. ' ' → logprob: -15.625020027160645

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017589399591088295
    2. 'print' → logprob: -4.642589569091797
    3. 'if' → logprob: -5.392589569091797
    4. 'for' → logprob: -6.892589569091797
    5. '```' → logprob: -7.267589569091797
    6. '<|end|>' → logprob: -7.892589569091797
    7. '    ' → logprob: -8.267589569091797
    8. ' ' → logprob: -8.892589569091797
    9. ' if' → logprob: -8.892589569091797
    10. 'elif' → logprob: -9.267589569091797

Token 71: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0330502949655056
    2. 'for' → logprob: -4.408050060272217
    3. '<|end|>' → logprob: -4.658050060272217
    4. 'print' (adapté à ' print') → logprob: -5.033050060272217
    5. '```' → logprob: -7.158050060272217
    6. '  ' → logprob: -7.283050060272217
    7. '    ' → logprob: -7.283050060272217
    8. ' ' → logprob: -7.283050060272217
    9. ' for' → logprob: -7.408050060272217
    10. 'if' → logprob: -8.158050537109375

Token 72: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07006203383207321
    2. '(high' → logprob: -3.1950619220733643
    3. '(d' → logprob: -4.195062160491943
    4. '3' → logprob: -5.320062160491943
    5. '("' → logprob: -6.195062160491943
    6. '(input' → logprob: -6.445062160491943
    7. 'highest' → logprob: -7.195062160491943
    8. 'difference' → logprob: -7.445062160491943
    9. '('' → logprob: -7.570062160491943
    10. '(n' → logprob: -7.570062160491943

Token 73: '3' (ID: 18)
  Prédit: 'highest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'highest' → logprob: -0.8343190550804138
    2. 'difference' → logprob: -0.9593190550804138
    3. '3' → logprob: -2.7093191146850586
    4. '1' → logprob: -3.0843191146850586
    5. '2' → logprob: -3.3343191146850586
    6. '"' → logprob: -4.834319114685059
    7. ' highest' → logprob: -4.834319114685059
    8. ' ' → logprob: -5.084319114685059
    9. 'input' → logprob: -5.709319114685059
    10. ' difference' → logprob: -5.709319114685059

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11709237843751907
    2. ' ,' → logprob: -2.2420923709869385
    3. ' )' → logprob: -6.242092609405518
    4. ')' → logprob: -6.742092609405518
    5. ' ' → logprob: -7.117092609405518
    6. ',end' → logprob: -9.36709213256836
    7. ',)' → logprob: -9.49209213256836
    8. '4' → logprob: -9.74209213256836
    9. '   ' → logprob: -10.61709213256836
    10. '+' → logprob: -11.49209213256836

Token 75: ' input' (ID: 3422)
  Prédit: 'difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'difference' → logprob: -1.1792454719543457
    2. 'highest' → logprob: -1.6792454719543457
    3. ' difference' → logprob: -1.9292454719543457
    4. ' highest' → logprob: -2.1792454719543457
    5. ' ' → logprob: -2.1792454719543457
    6. '4' → logprob: -2.3042454719543457
    7. ' input' → logprob: -4.679245471954346
    8. '1' → logprob: -4.929245471954346
    9. '2' → logprob: -4.929245471954346
    10. 'input' → logprob: -5.679245471954346

Token 76: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.796184723294573e-06
    2. '_' → logprob: -12.875005722045898
    3. 'value' → logprob: -13.625005722045898
    4. '_val' → logprob: -13.875005722045898
    5. ' _' → logprob: -15.000005722045898
    6. ')' → logprob: -15.750005722045898
    7. ')_' → logprob: -16.5000057220459
    8. '```' → logprob: -16.7500057220459
    9. 'Value' → logprob: -17.0000057220459
    10. '_difference' → logprob: -17.2500057220459

Token 77: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00869410764425993
    2. '-' → logprob: -5.258694171905518
    3. ' )' → logprob: -6.383694171905518
    4. '+' → logprob: -7.258694171905518
    5. ' -' → logprob: -7.383694171905518
    6. ')
' → logprob: -8.38369369506836
    7. ' +' → logprob: -10.13369369506836
    8. ',' → logprob: -10.50869369506836
    9. '   ' → logprob: -10.50869369506836
    10. '-)' → logprob: -10.63369369506836

Token 78: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04858646169304848
    2. ')' → logprob: -4.298586368560791
    3. '2' → logprob: -4.298586368560791
    4. 'difference' → logprob: -4.923586368560791
    5. ' ' → logprob: -5.048586368560791
    6. '4' → logprob: -5.798586368560791
    7. '   ' → logprob: -6.548586368560791
    8. '"' → logprob: -7.673586368560791
    9. ' difference' → logprob: -7.673586368560791
    10. '-' → logprob: -8.04858684539795

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022359317168593407
    2. '2' → logprob: -4.022359371185303
    3. '-' → logprob: -6.397359371185303
    4. 'difference' → logprob: -6.522359371185303
    5. ' ' → logprob: -7.522359371185303
    6. ')' → logprob: -8.897358894348145
    7. 'highest' → logprob: -9.022358894348145
    8. '"' → logprob: -9.397358894348145
    9. '")' → logprob: -9.397358894348145
    10. ' -' → logprob: -10.897358894348145

Token 80: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010926496179308742
    2. '   ' → logprob: -9.750109672546387
    3. ')
' → logprob: -10.125109672546387
    4. ' )' → logprob: -12.250109672546387
    5. '))' → logprob: -13.500109672546387
    6. '')' → logprob: -13.625109672546387
    7. '`)' → logprob: -14.375109672546387
    8. '```' → logprob: -14.500109672546387
    9. '4' → logprob: -14.750109672546387
    10. ' ' → logprob: -14.875109672546387

Token 81: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5803318619728088
    2. '```' → logprob: -1.830331802368164
    3. '<|end|>' → logprob: -2.205331802368164
    4. '   ' → logprob: -2.580331802368164
    5. 'for' → logprob: -3.455331802368164
    6. '4' → logprob: -4.580331802368164
    7. '    
' → logprob: -4.580331802368164
    8. '
' → logprob: -4.705331802368164
    9. ' for' → logprob: -4.830331802368164
    10. ' 
' → logprob: -5.080331802368164

Token 82: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027399776503443718
    2. '   ' → logprob: -4.27739953994751
    3. 'print' (adapté à ' print') → logprob: -5.15239953994751
    4. ' for' → logprob: -6.52739953994751
    5. '<|end|>' → logprob: -6.65239953994751
    6. ' ' → logprob: -6.90239953994751
    7. '4' → logprob: -7.27739953994751
    8. 'if' → logprob: -7.40239953994751
    9. '\n' → logprob: -7.52739953994751
    10. '```' → logprob: -7.65239953994751

Token 83: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014658770523965359
    2. '("' → logprob: -4.8896589279174805
    3. '(input' → logprob: -6.1396589279174805
    4. '(d' → logprob: -6.2646589279174805
    5. '('' → logprob: -6.3896589279174805
    6. '4' → logprob: -6.8896589279174805
    7. '((' → logprob: -9.13965892791748
    8. '()' → logprob: -10.26465892791748
    9. '3' → logprob: -10.88965892791748
    10. '(f' → logprob: -11.01465892791748

Token 84: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -14.000001907348633
    3. 'value' → logprob: -15.000001907348633
    4. '_val' → logprob: -15.625001907348633
    5. '_input' → logprob: -17.375001907348633
    6. 'Value' → logprob: -17.500001907348633
    7. '_v' → logprob: -18.000001907348633
    8. '_VALUE' → logprob: -18.125001907348633
    9. ')' → logprob: -18.375001907348633
    10. 'alue' → logprob: -18.500001907348633

Token 85: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4600966274738312
    2. '+' → logprob: -2.210096597671509
    3. ' +' → logprob: -2.585096597671509
    4. ' -' → logprob: -2.835096597671509
    5. ' ' → logprob: -3.335096597671509
    6. '-' → logprob: -3.460096597671509
    7. ' )' → logprob: -3.960096597671509
    8. '   ' → logprob: -4.210096836090088
    9. ' ,' → logprob: -4.460096836090088
    10. ',' → logprob: -4.960096836090088

Token 86: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1443808674812317
    2. '2' → logprob: -2.269380807876587
    3. ' ' → logprob: -3.519380807876587
    4. '4' → logprob: -7.269381046295166
    5. '3' → logprob: -7.894381046295166
    6. 'difference' → logprob: -9.144380569458008
    7. '0' → logprob: -9.269380569458008
    8. '   ' → logprob: -9.894380569458008
    9. ')' → logprob: -9.894380569458008
    10. '  ' → logprob: -10.644380569458008

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1887611746788025
    2. '2' → logprob: -1.8137612342834473
    3. ' ' → logprob: -5.438761234283447
    4. '3' → logprob: -6.188761234283447
    5. '4' → logprob: -6.563761234283447
    6. 'difference' → logprob: -7.563761234283447
    7. '0' → logprob: -8.188760757446289
    8. '   ' → logprob: -9.313760757446289
    9. ')' → logprob: -9.688760757446289
    10. 'input' → logprob: -10.188760757446289

Token 88: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2876880168914795
    2. ',' → logprob: -2.0376880168914795
    3. '-' → logprob: -3.2876880168914795
    4. ' ,' → logprob: -3.6626880168914795
    5. ' -' → logprob: -3.6626880168914795
    6. ' )' → logprob: -3.7876880168914795
    7. '   ' → logprob: -5.787688255310059
    8. ' ' → logprob: -5.912688255310059
    9. '+' → logprob: -7.037688255310059
    10. ' +' → logprob: -8.037688255310059

Token 89: ' input' (ID: 3422)
  Prédit: 'highest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'highest' → logprob: -0.26485294103622437
    2. 'input' → logprob: -2.139853000640869
    3. 'difference' → logprob: -2.764853000640869
    4. '1' → logprob: -3.764853000640869
    5. ' highest' → logprob: -4.389853000640869
    6. '2' → logprob: -4.639853000640869
    7. ' input' → logprob: -5.764853000640869
    8. '4' → logprob: -6.764853000640869
    9. ' ' → logprob: -7.389853000640869
    10. '(' → logprob: -7.764853000640869

Token 90: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.371605948312208e-05
    2. 'value' → logprob: -10.250053405761719
    3. '_val' → logprob: -12.250053405761719
    4. ')' → logprob: -12.250053405761719
    5. ')_' → logprob: -12.875053405761719
    6. '_' → logprob: -13.125053405761719
    7. 'Value' → logprob: -13.750053405761719
    8. '+' → logprob: -13.875053405761719
    9. '_VALUE' → logprob: -15.000053405761719
    10. '_Value' → logprob: -15.125053405761719

Token 91: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2978338599205017
    2. '+' → logprob: -1.4228339195251465
    3. ' +' → logprob: -4.2978339195251465
    4. ' )' → logprob: -7.1728339195251465
    5. '-' → logprob: -8.047833442687988
    6. '   ' → logprob: -8.047833442687988
    7. '4' → logprob: -8.172833442687988
    8. '`)' → logprob: -8.172833442687988
    9. '```' → logprob: -8.797833442687988
    10. '+)' → logprob: -9.047833442687988

Token 92: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22923222184181213
    2. '1' → logprob: -1.6042321920394897
    3. ')' → logprob: -6.354232311248779
    4. '4' → logprob: -7.229232311248779
    5. '3' → logprob: -7.229232311248779
    6. ' ' → logprob: -8.604231834411621
    7. 'input' → logprob: -9.229231834411621
    8. '5' → logprob: -10.104231834411621
    9. 'int' → logprob: -10.291731834411621
    10. 'difference' → logprob: -10.354231834411621

Token 93: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3932309150695801
    2. '1' → logprob: -1.76823091506958
    3. 'difference' → logprob: -2.01823091506958
    4. 'highest' → logprob: -4.01823091506958
    5. ' ' → logprob: -7.14323091506958
    6. '3' → logprob: -7.26823091506958
    7. 'input' → logprob: -7.51823091506958
    8. '4' → logprob: -8.143230438232422
    9. 'diff' → logprob: -8.393230438232422
    10. ' difference' → logprob: -8.955730438232422

Token 94: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.023293538717553e-05
    2. ')
' → logprob: -11.000030517578125
    3. '   ' → logprob: -11.625030517578125
    4. ' )' → logprob: -13.000030517578125
    5. ')`' → logprob: -14.625030517578125
    6. '`)' → logprob: -14.750030517578125
    7. '')' → logprob: -14.750030517578125
    8. '))' → logprob: -15.250030517578125
    9. '```' → logprob: -15.500030517578125
    10. ')")' → logprob: -16.375030517578125

Token 95: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45848867297172546
    2. 'print' → logprob: -1.2084887027740479
    3. '   ' → logprob: -2.958488702774048
    4. 'if' → logprob: -4.958488464355469
    5. '```' → logprob: -5.208488464355469
    6. 'else' → logprob: -5.708488464355469
    7. 'while' → logprob: -7.708488464355469
    8. ' for' → logprob: -8.458488464355469
    9. 'elif' → logprob: -8.458488464355469
    10. '    
' → logprob: -9.208488464355469

Token 96: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1425466537475586
    2. 'print' (adapté à ' print') → logprob: -2.3925466537475586
    3. '   ' → logprob: -3.2675466537475586
    4. 'if' → logprob: -6.767546653747559
    5. ' for' → logprob: -6.767546653747559
    6. '```' → logprob: -7.517546653747559
    7. 'else' → logprob: -8.767546653747559
    8. 'while' → logprob: -9.267546653747559
    9. '\n' → logprob: -10.017546653747559
    10. ' ' → logprob: -10.142546653747559

Token 97: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10191351920366287
    2. '("' → logprob: -3.1019134521484375
    3. '(input' → logprob: -3.6019134521484375
    4. '('' → logprob: -3.7269134521484375
    5. 'input' → logprob: -8.976913452148438
    6. '(d' → logprob: -9.101913452148438
    7. '((' → logprob: -9.476913452148438
    8. '(f' → logprob: -9.601913452148438
    9. 'difference' → logprob: -10.601913452148438
    10. '(*' → logprob: -10.976913452148438

Token 98: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00041970983147621155
    2. 'value' → logprob: -7.875419616699219
    3. '_' → logprob: -11.000419616699219
    4. '+' → logprob: -11.125419616699219
    5. ')' → logprob: -13.250419616699219
    6. '_val' → logprob: -13.375419616699219
    7. 'Value' → logprob: -13.750419616699219
    8. 'alue' → logprob: -13.750419616699219
    9. ' +' → logprob: -14.000419616699219
    10. 'valu' → logprob: -15.000419616699219

Token 99: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.692960798740387
    2. '+' → logprob: -0.942960798740387
    3. ',' → logprob: -2.817960739135742
    4. ')' → logprob: -3.692960739135742
    5. ' ,' → logprob: -3.942960739135742
    6. ' ' → logprob: -6.067960739135742
    7. ' -' → logprob: -6.317960739135742
    8. '-' → logprob: -6.942960739135742
    9. ' )' → logprob: -7.567960739135742
    10. '   ' → logprob: -8.567960739135742

Token 100: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.36326369643211365
    2. '1' → logprob: -1.488263726234436
    3. '3' → logprob: -3.2382636070251465
    4. ' ' → logprob: -3.2382636070251465
    5. '4' → logprob: -8.613264083862305
    6. ')' → logprob: -8.988264083862305
    7. 'difference' → logprob: -11.113264083862305
    8. '5' → logprob: -11.738264083862305
    9. '   ' → logprob: -12.113264083862305
    10. '6' → logprob: -12.238264083862305

Token 101: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7634609341621399
    2. '2' → logprob: -1.2634608745574951
    3. '1' → logprob: -1.3884608745574951
    4. ' ' → logprob: -6.388461112976074
    5. '4' → logprob: -9.388461112976074
    6. ')' → logprob: -10.763461112976074
    7. '   ' → logprob: -12.138461112976074
    8. '5' → logprob: -12.263461112976074
    9. '  ' → logprob: -12.638461112976074
    10. '0' → logprob: -13.075961112976074

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022393006831407547
    2. ')' → logprob: -3.897392988204956
    3. ' ,' → logprob: -6.397393226623535
    4. ',input' → logprob: -10.022393226623535
    5. ' )' → logprob: -10.272393226623535
    6. ',)' → logprob: -10.397393226623535
    7. ' ' → logprob: -10.647393226623535
    8. ',end' → logprob: -11.522393226623535
    9. '```' → logprob: -12.022393226623535
    10. ',
' → logprob: -12.147393226623535

Token 103: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7500880360603333
    2. 'input' → logprob: -1.0000879764556885
    3. 'highest' → logprob: -2.6250879764556885
    4. ' highest' → logprob: -2.7500879764556885
    5. 'difference' → logprob: -4.500088214874268
    6. ' difference' → logprob: -5.375088214874268
    7. '1' → logprob: -5.625088214874268
    8. ' ' → logprob: -6.125088214874268
    9. '2' → logprob: -6.750088214874268
    10. '3' → logprob: -8.50008773803711

Token 104: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.60414821645827e-06
    2. 'value' → logprob: -12.625004768371582
    3. '_val' → logprob: -14.125004768371582
    4. '_' → logprob: -15.375004768371582
    5. '_VALUE' → logprob: -16.375003814697266
    6. '+' → logprob: -16.500003814697266
    7. 'Value' → logprob: -17.000003814697266
    8. ')' → logprob: -17.750003814697266
    9. '_input' → logprob: -17.750003814697266
    10. '_user' → logprob: -18.125003814697266

Token 105: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011802212335169315
    2. ')' → logprob: -5.1368021965026855
    3. ' +' → logprob: -5.2618021965026855
    4. '-' → logprob: -7.6368021965026855
    5. '+)' → logprob: -10.136802673339844
    6. '+
' → logprob: -10.261802673339844
    7. '3' → logprob: -10.761802673339844
    8. ')+' → logprob: -11.136802673339844
    9. ' -' → logprob: -11.386802673339844
    10. '4' → logprob: -11.761802673339844

Token 106: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0013226228766143322
    2. '1' → logprob: -7.0013227462768555
    3. ' ' → logprob: -8.251322746276855
    4. '2' → logprob: -9.376322746276855
    5. ')' → logprob: -10.251322746276855
    6. '4' → logprob: -10.501322746276855
    7. 'input' → logprob: -14.376322746276855
    8. '5' → logprob: -15.001322746276855
    9. '  ' → logprob: -15.126322746276855
    10. '   ' → logprob: -15.126322746276855

Token 107: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0011824887478724122
    2. '1' → logprob: -7.126182556152344
    3. ' ' → logprob: -9.001182556152344
    4. 'highest' → logprob: -9.376182556152344
    5. '2' → logprob: -9.751182556152344
    6. '4' → logprob: -10.001182556152344
    7. ')' → logprob: -10.251182556152344
    8. 'input' → logprob: -11.001182556152344
    9. 'difference' → logprob: -11.751182556152344
    10. 'diff' → logprob: -13.251182556152344

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. ')
' → logprob: -12.250007629394531
    3. '   ' → logprob: -13.125007629394531
    4. '`)' → logprob: -15.000007629394531
    5. ' )' → logprob: -15.125007629394531
    6. '')' → logprob: -15.625007629394531
    7. ')`' → logprob: -15.875007629394531
    8. '))' → logprob: -16.37500762939453
    9. '")' → logprob: -16.75000762939453
    10. '```' → logprob: -17.25000762939453

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4258136749267578
    2. 'for' → logprob: -1.5508136749267578
    3. '<|end|>' → logprob: -3.300813674926758
    4. ' ' → logprob: -3.800813674926758
    5. '    
' → logprob: -4.175813674926758
    6. '```' → logprob: -4.300813674926758
    7. '\n' → logprob: -4.675813674926758
    8. ' for' → logprob: -4.800813674926758
    9. ' 
' → logprob: -4.800813674926758
    10. 'print' → logprob: -5.425813674926758

Token 110: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7234970331192017
    2. '   ' → logprob: -0.9734970331192017
    3. ' ' → logprob: -2.598496913909912
    4. '\n' → logprob: -4.098496913909912
    5. ' for' → logprob: -4.098496913909912
    6. '    ' → logprob: -4.348496913909912
    7. 'print' → logprob: -5.598496913909912
    8. '    
' → logprob: -5.973496913909912
    9. '<|end|>' → logprob: -6.098496913909912
    10. ' 
' → logprob: -6.223496913909912

Token 111: ' loop' (ID: 11453)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16388142108917236
    2. 'i' → logprob: -1.9138814210891724
    3. '_' → logprob: -5.788881301879883
    4. ' _' → logprob: -7.913881301879883
    5. ' difference' → logprob: -9.288881301879883
    6. 'difference' → logprob: -9.663881301879883
    7. ' diff' → logprob: -11.163881301879883
    8. ' d' → logprob: -11.163881301879883
    9. 'd' → logprob: -11.413881301879883
    10. 'diff' → logprob: -11.788881301879883

Token 112: '_index' (ID: 7748)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2164718061685562
    2. 'i' → logprob: -1.966471791267395
    3. ' _' → logprob: -3.7164719104766846
    4. '_' → logprob: -3.9664719104766846
    5. ' in' → logprob: -5.0914716720581055
    6. ' ' → logprob: -5.3414716720581055
    7. 'in' → logprob: -8.216471672058105
    8. '_i' → logprob: -9.466471672058105
    9. ' for' → logprob: -9.841471672058105
    10. ' variable' → logprob: -10.216471672058105

Token 113: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03814775496721268
    2. 'in' → logprob: -3.2881476879119873
    3. ' ' → logprob: -9.288147926330566
    4. 'n' → logprob: -12.788147926330566
    5. ' i' → logprob: -12.788147926330566
    6. '	in' → logprob: -13.288147926330566
    7. ',' → logprob: -13.538147926330566
    8. ' ' → logprob: -14.038147926330566
    9. 'i' → logprob: -14.288147926330566
    10. '1' → logprob: -14.788147926330566

Token 114: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1602296084165573
    2. ' range' → logprob: -1.9102295637130737
    3. '	range' → logprob: -12.285229682922363
    4. '(range' → logprob: -14.660229682922363
    5. ' ' → logprob: -15.035229682922363
    6. '   ' → logprob: -16.785228729248047
    7. 'rang' → logprob: -17.660228729248047
    8. '  ' → logprob: -17.660228729248047
    9. 'ran' → logprob: -18.285228729248047
    10. 'r' → logprob: -18.535228729248047

Token 115: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4855663721391466e-05
    2. '4' → logprob: -11.375015258789062
    3. '3' → logprob: -12.750015258789062
    4. '(
' → logprob: -16.125015258789062
    5. '((' → logprob: -16.250015258789062
    6. '()' → logprob: -16.375015258789062
    7. '(input' → logprob: -17.000015258789062
    8. '5' → logprob: -17.625015258789062
    9. ' (' → logprob: -17.750015258789062
    10. 'd' → logprob: -18.000015258789062

Token 116: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.16758987307548523
    2. '3' → logprob: -2.0425899028778076
    3. '1' → logprob: -3.7925899028778076
    4. '2' → logprob: -7.5425896644592285
    5. 'difference' → logprob: -7.6675896644592285
    6. 'input' → logprob: -7.7925896644592285
    7. ' ' → logprob: -8.292590141296387
    8. '(' → logprob: -8.542590141296387
    9. '0' → logprob: -9.792590141296387
    10. '5' → logprob: -10.292590141296387

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011424804106354713
    2. ',input' → logprob: -7.251142501831055
    3. ' ,' → logprob: -7.751142501831055
    4. 'input' → logprob: -14.751142501831055
    5. '1' → logprob: -15.001142501831055
    6. ' ' → logprob: -15.501142501831055
    7. ',int' → logprob: -15.626142501831055
    8. ',len' → logprob: -15.751142501831055
    9. ')' → logprob: -16.126142501831055
    10. '```' → logprob: -16.626142501831055

Token 118: ' input' (ID: 3422)
  Prédit: 'highest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'highest' → logprob: -0.7071462273597717
    2. 'input' → logprob: -0.9571462273597717
    3. ' input' → logprob: -3.207146167755127
    4. ' highest' → logprob: -3.207146167755127
    5. 'difference' → logprob: -3.207146167755127
    6. ' difference' → logprob: -6.582146167755127
    7. '   ' → logprob: -10.832146644592285
    8. 'lowest' → logprob: -10.957146644592285
    9. '1' → logprob: -11.082146644592285
    10. 'diff' → logprob: -11.207146644592285

Token 119: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.0564331205387134e-05
    2. 'value' → logprob: -11.62501049041748
    3. '_' → logprob: -14.25001049041748
    4. '_index' → logprob: -15.12501049041748
    5. ')' → logprob: -15.50001049041748
    6. 'Value' → logprob: -16.125011444091797
    7. ' _' → logprob: -16.750011444091797
    8. '   ' → logprob: -17.000011444091797
    9. '_VALUE' → logprob: -17.125011444091797
    10. 'alue' → logprob: -17.250011444091797

Token 120: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5233965516090393
    2. ' +' → logprob: -0.8983965516090393
    3. '):' → logprob: -8.773396492004395
    4. ' ' → logprob: -10.148396492004395
    5. ')' → logprob: -11.148396492004395
    6. '   ' → logprob: -11.273396492004395
    7. '):
' → logprob: -11.898396492004395
    8. ' -' → logprob: -11.898396492004395
    9. ' ):' → logprob: -11.898396492004395
    10. '+
' → logprob: -12.148396492004395

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.059438832104206085
    2. ' ' → logprob: -2.934438943862915
    3. ')' → logprob: -6.559438705444336
    4. '4' → logprob: -6.684438705444336
    5. '3' → logprob: -6.934438705444336
    6. '2' → logprob: -7.934438705444336
    7. '   ' → logprob: -8.309438705444336
    8. ' )' → logprob: -9.059438705444336
    9. '):
' → logprob: -9.684438705444336
    10. '+' → logprob: -10.309438705444336

Token 122: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025505772791802883
    2. '2' → logprob: -6.3775506019592285
    3. ' ' → logprob: -7.8775506019592285
    4. ')' → logprob: -8.50255012512207
    5. '3' → logprob: -8.75255012512207
    6. '4' → logprob: -9.50255012512207
    7. '+' → logprob: -12.25255012512207
    8. 'loop' → logprob: -12.25255012512207
    9. '   ' → logprob: -12.37755012512207
    10. '):
' → logprob: -12.37755012512207

Token 123: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018004773184657097
    2. '):
' → logprob: -4.143004894256592
    3. ':' → logprob: -6.393004894256592
    4. ')' → logprob: -8.893004417419434
    5. '+' → logprob: -9.268004417419434
    6. ' ):' → logprob: -10.768004417419434
    7. '   ' → logprob: -11.143004417419434
    8. ',' → logprob: -11.518004417419434
    9. ':
' → logprob: -11.893004417419434
    10. '+:' → logprob: -12.768004417419434

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13103598356246948
    2. '   ' → logprob: -2.3810360431671143
    3. ':' → logprob: -3.6310360431671143
    4. '    ' → logprob: -7.131035804748535
    5. '        
' → logprob: -7.381035804748535
    6. '	   ' → logprob: -7.756035804748535
    7. '    
' → logprob: -8.006035804748535
    8. 'print' → logprob: -8.131035804748535
    9. ' :' → logprob: -8.381035804748535
    10. '):' → logprob: -8.756035804748535

Token 125: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6874571442604065
    2. 'print' (adapté à ' print') → logprob: -0.8124571442604065
    3. ' print' → logprob: -3.0624570846557617
    4. '       ' → logprob: -5.312457084655762
    5. ' if' → logprob: -7.062457084655762
    6. 'if' → logprob: -7.562457084655762
    7. '	print' → logprob: -9.437457084655762
    8. ' ' → logprob: -9.562457084655762
    9. '           ' → logprob: -10.062457084655762
    10. '    ' → logprob: -10.187457084655762

Token 126: '(loop' (ID: 146562)
  Prédit: '(loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(loop' → logprob: -0.004626291338354349
    2. '(' → logprob: -5.879626274108887
    3. 'loop' → logprob: -6.379626274108887
    4. '(input' → logprob: -9.629626274108887
    5. ' loop' → logprob: -11.379626274108887
    6. '("' → logprob: -11.879626274108887
    7. 'input' → logprob: -11.879626274108887
    8. ' (' → logprob: -11.879626274108887
    9. '(f' → logprob: -12.129626274108887
    10. ' ' → logprob: -12.379626274108887

Token 127: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -3.047134305234067e-05
    2. '_' → logprob: -10.625030517578125
    3. '_,' → logprob: -12.375030517578125
    4. ' _' → logprob: -14.625030517578125
    5. 'index' → logprob: -15.000030517578125
    6. ')' → logprob: -15.000030517578125
    7. '_ind' → logprob: -16.000030517578125
    8. '_i' → logprob: -16.000030517578125
    9. ',' → logprob: -16.500030517578125
    10. ',index' → logprob: -16.500030517578125

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002633565105497837
    2. ' ,' → logprob: -6.002633571624756
    3. '+' → logprob: -10.002633094787598
    4. '   ' → logprob: -10.252633094787598
    5. ',end' → logprob: -10.252633094787598
    6. ')' → logprob: -11.002633094787598
    7. ',input' → logprob: -11.127633094787598
    8. ' +' → logprob: -12.377633094787598
    9. ' ' → logprob: -13.502633094787598
    10. ',)' → logprob: -13.877633094787598

Token 129: ' loop' (ID: 11453)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.0054661668837070465
    2. 'input' → logprob: -5.880465984344482
    3. ' loop' → logprob: -6.130465984344482
    4. '(loop' → logprob: -7.755465984344482
    5. '   ' → logprob: -11.13046646118164
    6. ' input' → logprob: -11.25546646118164
    7. 'lo' → logprob: -11.75546646118164
    8. ' ' → logprob: -12.50546646118164
    9. ')' → logprob: -12.75546646118164
    10. 'loopt' → logprob: -12.88046646118164

Token 130: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0017778765177354217
    2. 'index' → logprob: -6.501777648925781
    3. '+' → logprob: -8.376777648925781
    4. 'ind' → logprob: -11.876777648925781
    5. '_' → logprob: -12.001777648925781
    6. 'Index' → logprob: -12.251777648925781
    7. '__' → logprob: -12.751777648925781
    8. ')' → logprob: -12.876777648925781
    9. 'loop' → logprob: -12.876777648925781
    10. 'nd' → logprob: -13.126777648925781

Token 131: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12754793465137482
    2. ' +' → logprob: -2.1275479793548584
    3. ')' → logprob: -7.502547740936279
    4. '   ' → logprob: -10.877548217773438
    5. ' ' → logprob: -11.502548217773438
    6. ',' → logprob: -11.502548217773438
    7. '+)' → logprob: -11.752548217773438
    8. '+
' → logprob: -12.127548217773438
    9. ' )' → logprob: -12.377548217773438
    10. ' ,' → logprob: -12.377548217773438

Token 132: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024727347772568464
    2. ' ' → logprob: -8.37524700164795
    3. '2' → logprob: -11.62524700164795
    4. '3' → logprob: -12.00024700164795
    5. '   ' → logprob: -14.43774700164795
    6. '  ' → logprob: -15.18774700164795
    7. '<|end|>' → logprob: -16.125247955322266
    8. '```' → logprob: -16.437747955322266
    9. ' ' → logprob: -17.125247955322266
    10. '	' → logprob: -17.250247955322266

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.762356209335849e-05
    2. ' ' → logprob: -10.25003719329834
    3. '2' → logprob: -14.00003719329834
    4. '3' → logprob: -14.12503719329834
    5. '   ' → logprob: -15.50003719329834
    6. '  ' → logprob: -16.562538146972656
    7. '```' → logprob: -16.687538146972656
    8. '0' → logprob: -17.000038146972656
    9. '5' → logprob: -17.562538146972656
    10. '１' → logprob: -17.625038146972656

Token 134: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.845798710244708e-05
    2. ')
' → logprob: -10.250038146972656
    3. ' )' → logprob: -13.250038146972656
    4. '   ' → logprob: -15.000038146972656
    5. '')' → logprob: -15.000038146972656
    6. ')`' → logprob: -15.750038146972656
    7. '))' → logprob: -16.125038146972656
    8. '),' → logprob: -16.500038146972656
    9. '")' → logprob: -16.625038146972656
    10. '`)' → logprob: -17.125038146972656

Token 135: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8910709023475647
    2. '<|end|>' → logprob: -0.8910709023475647
    3. ')' → logprob: -2.26607084274292
    4. ' for' → logprob: -4.14107084274292
    5. '       ' → logprob: -4.26607084274292
    6. ' ' → logprob: -4.64107084274292
    7. '    ' → logprob: -4.89107084274292
    8. '
' → logprob: -5.14107084274292
    9. 'for' → logprob: -5.14107084274292
    10. '<|end|>' → logprob: -5.76607084274292

Token 136: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.21667656302452087
    2. '       ' → logprob: -1.7166765928268433
    3. '   ' → logprob: -4.591676712036133
    4. ' print' → logprob: -5.966676712036133
    5. ')' → logprob: -7.091676712036133
    6. '<|end|>' → logprob: -7.716676712036133
    7. ' ' → logprob: -8.091676712036133
    8. '           ' → logprob: -8.841676712036133
    9. '	print' → logprob: -9.341676712036133
    10. 'if' → logprob: -9.466676712036133

Token 137: '(loop' (ID: 146562)
  Prédit: '(loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(loop' → logprob: -0.0005908019375056028
    2. '(' → logprob: -7.875590801239014
    3. '(input' → logprob: -8.750591278076172
    4. 'loop' → logprob: -9.875591278076172
    5. '(
' → logprob: -15.500591278076172
    6. 'input' → logprob: -15.500591278076172
    7. '(lo' → logprob: -15.625591278076172
    8. '((' → logprob: -16.625591278076172
    9. '("' → logprob: -17.000591278076172
    10. '('' → logprob: -17.000591278076172

Token 138: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0001462107611587271
    2. 'index' → logprob: -8.87514591217041
    3. '_value' → logprob: -12.62514591217041
    4. 'ex' → logprob: -14.37514591217041
    5. 'Index' → logprob: -14.50014591217041
    6. 'x' → logprob: -14.87514591217041
    7. 'loop' → logprob: -14.87514591217041
    8. 'dex' → logprob: -15.00014591217041
    9. '+' → logprob: -15.37514591217041
    10. '_' → logprob: -16.000146865844727

Token 139: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5003162622451782
    2. ' +' → logprob: -1.3753162622451782
    3. ',' → logprob: -2.1253161430358887
    4. ' ,' → logprob: -4.500316143035889
    5. '-' → logprob: -5.375316143035889
    6. ' -' → logprob: -5.625316143035889
    7. ' ' → logprob: -6.625316143035889
    8. '   ' → logprob: -7.750316143035889
    9. '+,' → logprob: -8.250316619873047
    10. '  ' → logprob: -10.250316619873047

Token 140: ' input' (ID: 3422)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.020174413919448853
    2. '1' → logprob: -4.395174503326416
    3. ' ' → logprob: -5.020174503326416
    4. '3' → logprob: -6.895174503326416
    5. '0' → logprob: -11.020174026489258
    6. '4' → logprob: -13.957674026489258
    7. '   ' → logprob: -14.707674026489258
    8. '```' → logprob: -14.895174026489258
    9. '  ' → logprob: -15.207674026489258
    10. ')' → logprob: -15.520174026489258

Token 141: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0006199848721735179
    2. '_index' → logprob: -7.625619888305664
    3. 'value' → logprob: -9.250619888305664
    4. '2' → logprob: -11.250619888305664
    5. '_user' → logprob: -12.125619888305664
    6. 'index' → logprob: -12.250619888305664
    7. '_' → logprob: -12.750619888305664
    8. 'Value' → logprob: -13.125619888305664
    9. '```' → logprob: -13.250619888305664
    10. '_val' → logprob: -13.750619888305664

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04050522670149803
    2. ' ,' → logprob: -3.4155051708221436
    3. ')' → logprob: -5.665505409240723
    4. '-' → logprob: -6.415505409240723
    5. '+' → logprob: -7.665505409240723
    6. ' ' → logprob: -7.790505409240723
    7. ' -' → logprob: -7.790505409240723
    8. '   ' → logprob: -8.790505409240723
    9. ' +' → logprob: -9.915505409240723
    10. ' )' → logprob: -10.165505409240723

Token 143: ' loop' (ID: 11453)
  Prédit: ' loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loop' → logprob: -0.28894704580307007
    2. 'loop' → logprob: -1.4139471054077148
    3. '(loop' → logprob: -4.913947105407715
    4. 'space' → logprob: -8.663947105407715
    5. ' ' → logprob: -9.538947105407715
    6. ' input' → logprob: -9.788947105407715
    7. 'input' → logprob: -9.913947105407715
    8. ' space' → logprob: -10.663947105407715
    9. ')' → logprob: -10.913947105407715
    10. ' )' → logprob: -11.288947105407715

Token 144: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.002250768942758441
    2. 'index' → logprob: -6.252250671386719
    3. 'ex' → logprob: -8.627250671386719
    4. 'dex' → logprob: -9.377250671386719
    5. 'Index' → logprob: -10.502250671386719
    6. '_value' → logprob: -11.002250671386719
    7. 'x' → logprob: -12.252250671386719
    8. 'nd' → logprob: -13.002250671386719
    9. '2' → logprob: -14.002250671386719
    10. '_INDEX' → logprob: -14.127250671386719

Token 145: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2254229038953781
    2. ' +' → logprob: -1.6004228591918945
    3. ' ' → logprob: -12.725422859191895
    4. '<|end|>' → logprob: -13.475422859191895
    5. '+
' → logprob: -13.600422859191895
    6. ')' → logprob: -13.850422859191895
    7. ',' → logprob: -13.975422859191895
    8. ' plus' → logprob: -14.100422859191895
    9. ' +
' → logprob: -14.725422859191895
    10. ' ' → logprob: -14.975422859191895

Token 146: ' input' (ID: 3422)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19889438152313232
    2. 'input' → logprob: -1.8238943815231323
    3. ' input' → logprob: -4.573894500732422
    4. ' ' → logprob: -5.198894500732422
    5. 'difference' → logprob: -5.823894500732422
    6. ' difference' → logprob: -9.573894500732422
    7. '+' → logprob: -9.948894500732422
    8. ' +' → logprob: -11.323894500732422
    9. '
' → logprob: -11.573894500732422
    10. 'value' → logprob: -11.823894500732422

Token 147: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.003695443505421281
    2. 'value' → logprob: -6.003695487976074
    3. '_index' → logprob: -6.878695487976074
    4. '+' → logprob: -8.878695487976074
    5. 'index' → logprob: -10.253695487976074
    6. '2' → logprob: -12.753695487976074
    7. 'loop' → logprob: -12.753695487976074
    8. '3' → logprob: -12.878695487976074
    9. 'Value' → logprob: -13.253695487976074
    10. '_loop' → logprob: -14.128695487976074

Token 148: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023119807243347168
    2. ' +' → logprob: -3.8981199264526367
    3. ')' → logprob: -6.023119926452637
    4. '+)' → logprob: -9.273119926452637
    5. '+
' → logprob: -11.023119926452637
    6. '   ' → logprob: -11.273119926452637
    7. ' )' → logprob: -11.773119926452637
    8. ' ' → logprob: -12.523119926452637
    9. '1' → logprob: -13.023119926452637
    10. ')+' → logprob: -13.148119926452637

Token 149: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.3822154111694545e-05
    2. ' ' → logprob: -10.125043869018555
    3. '2' → logprob: -12.625043869018555
    4. '   ' → logprob: -15.750043869018555
    5. '3' → logprob: -16.312543869018555
    6. '+' → logprob: -16.562543869018555
    7. '```' → logprob: -17.437543869018555
    8. '  ' → logprob: -18.062543869018555
    9. '۱' → logprob: -18.375043869018555
    10. '0' → logprob: -18.500043869018555

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.249780638725497e-05
    2. '2' → logprob: -10.750032424926758
    3. ' ' → logprob: -11.625032424926758
    4. '3' → logprob: -13.375032424926758
    5. '   ' → logprob: -16.187532424926758
    6. '+' → logprob: -16.562532424926758
    7. '```' → logprob: -16.562532424926758
    8. '۱' → logprob: -17.437532424926758
    9. '0' → logprob: -17.562532424926758
    10. '-' → logprob: -17.937532424926758

Token 151: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.813969957875088e-05
    2. ')
' → logprob: -9.625067710876465
    3. '   ' → logprob: -13.875067710876465
    4. ' )' → logprob: -15.125067710876465
    5. ')`' → logprob: -15.625067710876465
    6. '))' → logprob: -15.625067710876465
    7. '       ' → logprob: -16.37506866455078
    8. '`)' → logprob: -16.87506866455078
    9. '')' → logprob: -17.12506866455078
    10. '),' → logprob: -17.25006866455078

Token 152: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5854366421699524
    2. '   ' → logprob: -1.5854365825653076
    3. '<|end|>' → logprob: -1.5854365825653076
    4. '       ' → logprob: -3.9604365825653076
    5. ' ' → logprob: -5.585436820983887
    6. ' )' → logprob: -6.335436820983887
    7. '    ' → logprob: -6.335436820983887
    8. 'print' → logprob: -6.335436820983887
    9. '[' → logprob: -6.835436820983887
    10. '<|end|>' → logprob: -7.210436820983887

Token 153: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7323034405708313
    2. '<|end|>' → logprob: -0.8573034405708313
    3. '   ' → logprob: -3.4823033809661865
    4. 'if' → logprob: -3.8573033809661865
    5. ' if' → logprob: -4.482303619384766
    6. ')' → logprob: -4.982303619384766
    7. 'print' (adapté à ' print') → logprob: -4.982303619384766
    8. ' ' → logprob: -5.232303619384766
    9. '    ' → logprob: -5.607303619384766
    10. '<|end|>' → logprob: -6.232303619384766

Token 154: '(' (ID: 7)
  Prédit: '(loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(loop' → logprob: -0.0003078142472077161
    2. '(' → logprob: -8.1253080368042
    3. '(input' → logprob: -12.0003080368042
    4. 'loop' → logprob: -12.5003080368042
    5. '(lo' → logprob: -14.6253080368042
    6. '   ' → logprob: -14.8753080368042
    7. '("' → logprob: -15.7503080368042
    8. '(f' → logprob: -15.8753080368042
    9. ' ' → logprob: -15.8753080368042
    10. '(
' → logprob: -16.000307083129883

Token 155: '1' (ID: 16)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.0012446361361071467
    2. 'input' → logprob: -7.25124454498291
    3. ' loop' → logprob: -8.12624454498291
    4. '(loop' → logprob: -8.75124454498291
    5. '   ' → logprob: -10.25124454498291
    6. '2' → logprob: -11.50124454498291
    7. ')' → logprob: -12.00124454498291
    8. '3' → logprob: -12.12624454498291
    9. '4' → logprob: -12.25124454498291
    10. '1' → logprob: -12.62624454498291

Token 156: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0150206433609128
    2. ' ,' → logprob: -4.265020847320557
    3. ')' → logprob: -7.265020847320557
    4. '+' → logprob: -9.390020370483398
    5. ' )' → logprob: -10.890020370483398
    6. '0' → logprob: -11.640020370483398
    7. ' ' → logprob: -11.765020370483398
    8. ',)' → logprob: -12.015020370483398
    9. '<|end|>' → logprob: -12.140020370483398
    10. ' +' → logprob: -12.265020370483398

Token 157: ' input' (ID: 3422)
  Prédit: ' loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loop' → logprob: -0.9480695128440857
    2. ' input' → logprob: -1.0730695724487305
    3. 'input' → logprob: -1.9480695724487305
    4. 'loop' → logprob: -2.0730695724487305
    5. '(loop' → logprob: -6.9480695724487305
    6. ' ' → logprob: -7.4480695724487305
    7. ' difference' → logprob: -8.82306957244873
    8. '    ' → logprob: -9.07306957244873
    9. 'difference' → logprob: -9.32306957244873
    10. ' (' → logprob: -10.32306957244873

Token 158: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0019312551012262702
    2. '_index' → logprob: -6.376931190490723
    3. 'value' → logprob: -8.501931190490723
    4. 'index' → logprob: -10.876931190490723
    5. ')' → logprob: -12.376931190490723
    6. '_' → logprob: -13.376931190490723
    7. 'Value' → logprob: -15.251931190490723
    8. '_input' → logprob: -15.251931190490723
    9. '*' → logprob: -15.376931190490723
    10. '_VALUE' → logprob: -15.876931190490723

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7979212403297424
    2. '+' → logprob: -1.0479211807250977
    3. ' +' → logprob: -1.7979211807250977
    4. ' ,' → logprob: -3.6729211807250977
    5. ')' → logprob: -4.922921180725098
    6. '),' → logprob: -8.547921180725098
    7. '+,' → logprob: -9.047921180725098
    8. ' )' → logprob: -9.422921180725098
    9. ' ' → logprob: -9.422921180725098
    10. '-' → logprob: -9.547921180725098

Token 160: ' loop' (ID: 11453)
  Prédit: ' loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loop' → logprob: -0.4750410318374634
    2. 'loop' → logprob: -1.1000410318374634
    3. ' input' → logprob: -3.600040912628174
    4. 'input' → logprob: -4.225040912628174
    5. '2' → logprob: -6.975040912628174
    6. '    ' → logprob: -7.350040912628174
    7. '1' → logprob: -7.600040912628174
    8. ' ' → logprob: -8.100041389465332
    9. '(loop' → logprob: -8.225041389465332
    10. '   ' → logprob: -8.475041389465332

Token 161: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.010619871318340302
    2. '_value' → logprob: -5.635619640350342
    3. 'index' → logprob: -5.760619640350342
    4. 'ex' → logprob: -5.885619640350342
    5. 'dex' → logprob: -7.260619640350342
    6. 'value' → logprob: -9.2606201171875
    7. '+' → logprob: -9.5106201171875
    8. 'x' → logprob: -9.5106201171875
    9. 'Index' → logprob: -9.8856201171875
    10. ')' → logprob: -11.7606201171875

Token 162: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7100772261619568
    2. '+' → logprob: -1.2100772857666016
    3. ' +' → logprob: -1.7100772857666016
    4. ',' → logprob: -3.8350772857666016
    5. ' )' → logprob: -5.335077285766602
    6. ' ,' → logprob: -6.460077285766602
    7. '   ' → logprob: -7.710077285766602
    8. '-' → logprob: -7.835077285766602
    9. ' -' → logprob: -8.460077285766602
    10. ' ' → logprob: -9.210077285766602

Token 163: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.21497191488742828
    2. ' input' → logprob: -2.0899720191955566
    3. '1' → logprob: -2.8399720191955566
    4. ' ' → logprob: -4.714972019195557
    5. '0' → logprob: -7.589972019195557
    6. ')' → logprob: -7.839972019195557
    7. 'highest' → logprob: -7.964972019195557
    8. 'difference' → logprob: -8.089971542358398
    9. '   ' → logprob: -8.464971542358398
    10. '2' → logprob: -8.839971542358398

Token 164: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.013184583745896816
    2. 'value' → logprob: -4.763184547424316
    3. 'input' → logprob: -6.138184547424316
    4. 'index' → logprob: -6.513184547424316
    5. '_index' → logprob: -7.388184547424316
    6. '+' → logprob: -9.638184547424316
    7. '_input' → logprob: -10.013184547424316
    8. '-' → logprob: -10.388184547424316
    9. '1' → logprob: -10.513184547424316
    10. '2' → logprob: -10.638184547424316

Token 165: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3607207238674164
    2. '+' → logprob: -1.3607207536697388
    3. '-' → logprob: -3.485720634460449
    4. ' +' → logprob: -4.735720634460449
    5. ' )' → logprob: -5.735720634460449
    6. ' -' → logprob: -5.985720634460449
    7. ')
' → logprob: -7.110720634460449
    8. '   ' → logprob: -8.73572063446045
    9. ',' → logprob: -9.23572063446045
    10. '+)' → logprob: -10.23572063446045

Token 166: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 168: '(' (ID: 7)
  Prédit: '(loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(loop' → logprob: -0.08561637997627258
    2. '(' → logprob: -2.71061635017395
    3. '(input' → logprob: -4.210616588592529
    4. 'loop' → logprob: -7.710616588592529
    5. '1' → logprob: -9.585616111755371
    6. '2' → logprob: -9.710616111755371
    7. 'input' → logprob: -10.335616111755371
    8. '3' → logprob: -10.585616111755371
    9. '(f' → logprob: -10.960616111755371
    10. '(i' → logprob: -11.710616111755371

Token 169: '1' (ID: 16)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.13753437995910645
    2. '2' → logprob: -2.7625343799591064
    3. '1' → logprob: -3.7625343799591064
    4. '3' → logprob: -4.262534141540527
    5. 'input' → logprob: -4.262534141540527
    6. ' loop' → logprob: -5.012534141540527
    7. '(loop' → logprob: -5.637534141540527
    8. '   ' → logprob: -5.887534141540527
    9. ' ' → logprob: -7.637534141540527
    10. ' input' → logprob: -9.012534141540527

Token 170: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6061538457870483
    2. ' +' → logprob: -1.2311538457870483
    3. '+' → logprob: -2.106153964996338
    4. ' ,' → logprob: -3.231153964996338
    5. ')' → logprob: -6.981153964996338
    6. ',input' → logprob: -8.98115348815918
    7. '+,' → logprob: -9.23115348815918
    8. '   ' → logprob: -9.73115348815918
    9. '<|end|>' → logprob: -9.98115348815918
    10. ')+' → logprob: -10.60615348815918

Token 171: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08084102720022202
    2. 'loop' → logprob: -2.705841064453125
    3. ' input' → logprob: -4.705841064453125
    4. ' loop' → logprob: -6.580841064453125
    5. '(loop' → logprob: -9.330841064453125
    6. '2' → logprob: -9.955841064453125
    7. '(input' → logprob: -10.330841064453125
    8. ')' → logprob: -10.330841064453125
    9. 'highest' → logprob: -10.455841064453125
    10. '3' → logprob: -10.580841064453125

Token 172: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00014251544780563563
    2. '_' → logprob: -9.625142097473145
    3. 'value' → logprob: -10.750142097473145
    4. '+' → logprob: -10.875142097473145
    5. '_input' → logprob: -11.000142097473145
    6. '_index' → logprob: -11.875142097473145
    7. 'input' → logprob: -12.750142097473145
    8. '_user' → logprob: -12.875142097473145
    9. ')' → logprob: -13.000142097473145
    10. '```' → logprob: -13.500142097473145

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1864604949951172
    2. '+' → logprob: -2.436460494995117
    3. ' +' → logprob: -2.686460494995117
    4. ' ,' → logprob: -4.561460494995117
    5. ')' → logprob: -5.811460494995117
    6. '+,' → logprob: -7.311460494995117
    7. '),' → logprob: -9.811460494995117
    8. '   ' → logprob: -9.936460494995117
    9. ' ' → logprob: -9.936460494995117
    10. ',)' → logprob: -10.061460494995117

Token 174: ' loop' (ID: 11453)
  Prédit: ' loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loop' → logprob: -0.48157185316085815
    2. 'loop' → logprob: -0.9815718531608582
    3. 'input' → logprob: -5.731571674346924
    4. ' input' → logprob: -5.981571674346924
    5. '(loop' → logprob: -6.481571674346924
    6. '2' → logprob: -10.106572151184082
    7. ' ' → logprob: -10.231572151184082
    8. '1' → logprob: -10.356572151184082
    9. '.loop' → logprob: -11.106572151184082
    10. 'difference' → logprob: -11.981572151184082

Token 175: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.001985140610486269
    2. 'index' → logprob: -6.2519850730896
    3. '+' → logprob: -10.126985549926758
    4. 'loop' → logprob: -12.126985549926758
    5. 'Index' → logprob: -12.376985549926758
    6. '_' → logprob: -13.751985549926758
    7. '```' → logprob: -13.876985549926758
    8. 'ind' → logprob: -14.126985549926758
    9. '_value' → logprob: -14.501985549926758
    10. '_INDEX' → logprob: -14.876985549926758

Token 176: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31372880935668945
    2. ' +' → logprob: -1.3137288093566895
    3. ')' → logprob: -7.9387288093566895
    4. '<|end|>' → logprob: -9.438728332519531
    5. '<|end|>' → logprob: -11.938728332519531
    6. 'input' → logprob: -12.313728332519531
    7. '   ' → logprob: -12.938728332519531
    8. '),' → logprob: -12.938728332519531
    9. ')+' → logprob: -12.938728332519531
    10. ' ' → logprob: -13.688728332519531

Token 177: ' ' (ID: 220)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.34117844700813293
    2. '1' → logprob: -1.5911784172058105
    3. ' input' → logprob: -2.5911784172058105
    4. ' ' → logprob: -4.5911784172058105
    5. '2' → logprob: -8.841178894042969
    6. '   ' → logprob: -10.091178894042969
    7. '3' → logprob: -10.091178894042969
    8. '<input' → logprob: -11.466178894042969
    9. ')' → logprob: -11.716178894042969
    10. '
' → logprob: -11.716178894042969

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16406941413879395
    2. 'input' → logprob: -1.914069414138794
    3. ' ' → logprob: -6.414069175720215
    4. '2' → logprob: -7.164069175720215
    5. '3' → logprob: -7.164069175720215
    6. ' input' → logprob: -7.539069175720215
    7. '+' → logprob: -10.914069175720215
    8. 'user' → logprob: -10.914069175720215
    9. 'loop' → logprob: -11.164069175720215
    10. ')' → logprob: -11.164069175720215

Token 179: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.829823102336377e-05
    2. ')
' → logprob: -9.25009822845459
    3. '   ' → logprob: -13.87509822845459
    4. '))' → logprob: -15.25009822845459
    5. ' )' → logprob: -15.37509822845459
    6. ')`' → logprob: -15.50009822845459
    7. '`)' → logprob: -16.125099182128906
    8. '```' → logprob: -16.750099182128906
    9. '),' → logprob: -16.875099182128906
    10. ')")' → logprob: -17.250099182128906

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48044219613075256
    2. '<|end|>' → logprob: -1.3554421663284302
    3. '       ' → logprob: -2.7304422855377197
    4. ' ' → logprob: -4.230442047119141
    5. 'print' → logprob: -4.480442047119141
    6. ')' → logprob: -4.480442047119141
    7. 'for' → logprob: -5.230442047119141
    8. '    ' → logprob: -5.480442047119141
    9. '\n' → logprob: -5.480442047119141
    10. '<|end|>' → logprob: -6.855442047119141

Token 181: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6858623027801514
    2. '<|end|>' → logprob: -1.8108623027801514
    3. ' ' → logprob: -1.9358623027801514
    4. '    ' → logprob: -2.8108623027801514
    5. 'print' → logprob: -3.0608623027801514
    6. ')' → logprob: -4.0608625411987305
    7. 'for' → logprob: -4.1858625411987305
    8. '       ' → logprob: -4.4358625411987305
    9. 'if' (adapté à ' if') → logprob: -4.8108625411987305
    10. '  ' → logprob: -5.3108625411987305

Token 182: ' (~' (ID: 65176)
  Prédit: 'difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'difference' → logprob: -0.25916698575019836
    2. ' difference' → logprob: -1.509166955947876
    3. ' input' → logprob: -5.884167194366455
    4. 'input' → logprob: -6.509167194366455
    5. ' highest' → logprob: -6.759167194366455
    6. 'd' → logprob: -7.259167194366455
    7. 'highest' → logprob: -7.259167194366455
    8. ' ' → logprob: -9.134166717529297
    9. '2' → logprob: -9.759166717529297
    10. '1' → logprob: -10.009166717529297

Token 183: 'input' (ID: 2586)
  Prédit: 'difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'difference' → logprob: -0.0341821163892746
    2. ' difference' → logprob: -3.659182071685791
    3. 'd' → logprob: -5.284182071685791
    4. 'input' → logprob: -6.284182071685791
    5. 'highest' → logprob: -8.15918254852295
    6. ' input' → logprob: -8.53418254852295
    7. '(d' → logprob: -8.78418254852295
    8. ' highest' → logprob: -9.28418254852295
    9. '0' → logprob: -10.03418254852295
    10. '(' → logprob: -10.28418254852295

Token 184: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.05852924659848213
    2. '_difference' → logprob: -3.0585291385650635
    3. '_' → logprob: -5.308529376983643
    4. 'difference' → logprob: -6.058529376983643
    5. '_input' → logprob: -6.933529376983643
    6. '_diff' → logprob: -8.058528900146484
    7. ')' → logprob: -8.308528900146484
    8. 'value' → logprob: -8.433528900146484
    9. ' ' → logprob: -8.933528900146484
    10. '_val' → logprob: -8.933528900146484

Token 185: ')' (ID: 8)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.4181194603443146
    2. ' &' → logprob: -1.1681194305419922
    3. ')' → logprob: -3.543119430541992
    4. ')&' → logprob: -7.668119430541992
    5. '<|end|>' → logprob: -7.918119430541992
    6. ' ' → logprob: -8.168119430541992
    7. ' )' → logprob: -8.418119430541992
    8. '&amp' → logprob: -8.793119430541992
    9. '[' → logprob: -8.918119430541992
    10. ' &
' → logprob: -10.043119430541992

Token 186: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.2531837821006775
    2. '&' → logprob: -1.5031838417053223
    3. ' ' → logprob: -7.628183841705322
    4. '<|end|>' → logprob: -7.753183841705322
    5. '&nbsp' → logprob: -9.378183364868164
    6. '&amp' → logprob: -9.878183364868164
    7. '[' → logprob: -10.503183364868164
    8. '&D' → logprob: -10.628183364868164
    9. ')' → logprob: -10.878183364868164
    10. '   ' → logprob: -11.003183364868164

Token 187: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05181249976158142
    2. ' ' → logprob: -3.0518124103546143
    3. 'difference' → logprob: -6.676812648773193
    4. '(' → logprob: -7.426812648773193
    5. ' (' → logprob: -7.676812648773193
    6. ' difference' → logprob: -8.176812171936035
    7. '3' → logprob: -8.676812171936035
    8. '(d' → logprob: -8.926812171936035
    9. 'd' → logprob: -9.551812171936035
    10. 'highest' → logprob: -9.801812171936035

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17545048892498016
    2. 'difference' → logprob: -2.300450563430786
    3. ' ' → logprob: -3.175450563430786
    4. ' difference' → logprob: -4.425450325012207
    5. '(d' → logprob: -6.675450325012207
    6. 'd' → logprob: -6.675450325012207
    7. 'highest' → logprob: -6.800450325012207
    8. '3' → logprob: -6.925450325012207
    9. '(' → logprob: -7.425450325012207
    10. ' (' → logprob: -7.425450325012207

Token 189: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019710374996066093
    2. ' ==' → logprob: -4.519710540771484
    3. '==' → logprob: -5.519710540771484
    4. ' :' → logprob: -5.644710540771484
    5. ':
' → logprob: -7.144710540771484
    6. ' !=' → logprob: -9.394710540771484
    7. ' and' → logprob: -9.769710540771484
    8. '   ' → logprob: -10.269710540771484
    9. ' ' → logprob: -10.394710540771484
    10. ' :
' → logprob: -11.269710540771484

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07511691004037857
    2. '   ' → logprob: -2.7001168727874756
    3. ' print' → logprob: -6.200117111206055
    4. 'print' → logprob: -7.075117111206055
    5. '        
' → logprob: -7.950117111206055
    6. ':' → logprob: -8.075117111206055
    7. '    ' → logprob: -8.075117111206055
    8. '    
' → logprob: -8.450117111206055
    9. ':
' → logprob: -8.450117111206055
    10. '
' → logprob: -8.575117111206055

Token 191: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.028663117438554764
    2. 'print' (adapté à ' print') → logprob: -3.903663158416748
    3. '   ' → logprob: -5.278663158416748
    4. '    ' → logprob: -6.778663158416748
    5. '       ' → logprob: -6.778663158416748
    6. ' ' → logprob: -7.903663158416748
    7. ' ' → logprob: -8.77866268157959
    8. '        ' → logprob: -10.15366268157959
    9. '	print' → logprob: -10.15366268157959
    10. '   ' → logprob: -10.90366268157959

Token 192: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07325392961502075
    2. '(' → logprob: -2.823253870010376
    3. '(loop' → logprob: -4.573254108428955
    4. '(high' → logprob: -7.698254108428955
    5. '(d' → logprob: -8.698253631591797
    6. '((' → logprob: -9.823253631591797
    7. ' (' → logprob: -10.198253631591797
    8. 'input' → logprob: -10.323253631591797
    9. 'loop' → logprob: -10.698253631591797
    10. '("' → logprob: -10.823253631591797

Token 193: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -9.603335638530552e-05
    2. '_index' → logprob: -9.500096321105957
    3. 'value' → logprob: -11.125096321105957
    4. '+' → logprob: -12.250096321105957
    5. ' +' → logprob: -15.000096321105957
    6. '_input' → logprob: -15.000096321105957
    7. 'Value' → logprob: -15.250096321105957
    8. '(' → logprob: -16.25009536743164
    9. ' value' → logprob: -16.37509536743164
    10. '_' → logprob: -16.50009536743164

Token 194: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16988785564899445
    2. '+' → logprob: -1.919887900352478
    3. ',' → logprob: -5.169888019561768
    4. ' ,' → logprob: -5.669888019561768
    5. ' ' → logprob: -7.794888019561768
    6. '+,' → logprob: -10.66988754272461
    7. ')' → logprob: -11.41988754272461
    8. '   ' → logprob: -11.54488754272461
    9. '  ' → logprob: -12.04488754272461
    10. ' -' → logprob: -12.16988754272461

Token 195: ' highest' (ID: 11639)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1062951534986496
    2. ' input' → logprob: -2.356295108795166
    3. '2' → logprob: -5.606295108795166
    4. '1' → logprob: -7.106295108795166
    5. 'highest' → logprob: -7.231295108795166
    6. ' ' → logprob: -8.106295585632324
    7. '3' → logprob: -8.356295585632324
    8. '(input' → logprob: -8.856295585632324
    9. ' highest' → logprob: -9.356295585632324
    10. '4' → logprob: -10.981295585632324

Token 196: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.00012487331696320325
    2. 'power' → logprob: -9.62512493133545
    3. '_value' → logprob: -9.87512493133545
    4. 'Power' → logprob: -12.75012493133545
    5. '+' → logprob: -13.75012493133545
    6. '_' → logprob: -13.87512493133545
    7. '_p' → logprob: -14.00012493133545
    8. '_input' → logprob: -14.75012493133545
    9. ')' → logprob: -15.12512493133545
    10. '_POWER' → logprob: -15.12512493133545

Token 197: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.003699127584695816
    2. '+' → logprob: -6.12869930267334
    3. 'of' → logprob: -7.25369930267334
    4. '_' → logprob: -7.37869930267334
    5. '```' → logprob: -10.12869930267334
    6. ' +' → logprob: -10.25369930267334
    7. ' of' → logprob: -10.75369930267334
    8. '__' → logprob: -11.00369930267334
    9. '_two' → logprob: -11.00369930267334
    10. '_plus' → logprob: -12.00369930267334

Token 198: '_two' (ID: 54305)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.06276747584342957
    2. '_two' → logprob: -2.812767505645752
    3. '2' → logprob: -7.562767505645752
    4. ' two' → logprob: -8.937767028808594
    5. 'Two' → logprob: -9.187767028808594
    6. '```' → logprob: -10.562767028808594
    7. '-two' → logprob: -12.562767028808594
    8. '_TWO' → logprob: -12.687767028808594
    9. '   ' → logprob: -13.062767028808594
    10. '1' → logprob: -13.187767028808594

Token 199: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5829594731330872
    2. '+' → logprob: -1.4579594135284424
    3. ')' → logprob: -1.5829594135284424
    4. ',' → logprob: -6.5829596519470215
    5. ' )' → logprob: -6.5829596519470215
    6. ')
' → logprob: -7.4579596519470215
    7. '   ' → logprob: -8.957959175109863
    8. ' ,' → logprob: -9.332959175109863
    9. ' ' → logprob: -10.707959175109863
    10. '+)' → logprob: -10.707959175109863

Token 200: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6217396259307861
    2. '1' → logprob: -1.2467396259307861
    3. ' input' → logprob: -2.246739625930786
    4. 'difference' → logprob: -2.996739625930786
    5. ' difference' → logprob: -5.121739387512207
    6. '3' → logprob: -5.121739387512207
    7. ' ' → logprob: -5.246739387512207
    8. '2' → logprob: -6.621739387512207
    9. 'highest' → logprob: -7.621739387512207
    10. '(input' → logprob: -8.496739387512207

Token 201: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00014084660506341606
    2. 'value' → logprob: -9.000141143798828
    3. '_index' → logprob: -12.125141143798828
    4. '_power' → logprob: -12.875141143798828
    5. '_two' → logprob: -13.375141143798828
    6. '```' → logprob: -13.375141143798828
    7. '_' → logprob: -13.625141143798828
    8. '_of' → logprob: -14.000141143798828
    9. '2' → logprob: -14.125141143798828
    10. '_val' → logprob: -14.375141143798828

Token 202: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01749042049050331
    2. ')
' → logprob: -5.142490386962891
    3. ' +' → logprob: -5.267490386962891
    4. '+' → logprob: -5.267490386962891
    5. ' )' → logprob: -7.267490386962891
    6. '   ' → logprob: -8.14249038696289
    7. ',' → logprob: -9.26749038696289
    8. '       ' → logprob: -10.64249038696289
    9. ' )
' → logprob: -11.01749038696289
    10. ' ' → logprob: -11.39249038696289

Token 203: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5367953777313232
    2. '<|end|>' → logprob: -0.9117953777313232
    3. ' ' → logprob: -5.786795616149902
    4. '```' → logprob: -6.036795616149902
    5. '#' → logprob: -6.036795616149902
    6. '
' → logprob: -6.161795616149902
    7. '}' → logprob: -7.286795616149902
    8. ':' → logprob: -7.536795616149902
    9. '   ' → logprob: -7.536795616149902
    10. ' )' → logprob: -7.786795616149902

Token 204: ' xor' (ID: 106402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: '_value' (ID: 6734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2999921143054962
    2. '_value' → logprob: -2.299992084503174
    3. ' (' → logprob: -3.174992084503174
    4. '(input' → logprob: -3.549992084503174
    5. '<|end|>' → logprob: -3.924992084503174
    6. 'input' → logprob: -4.049992084503174
    7. ' ' → logprob: -5.049992084503174
    8. ')' → logprob: -5.049992084503174
    9. ' input' → logprob: -5.299992084503174
    10. '(
' → logprob: -5.299992084503174

Token 206: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5350733399391174
    2. ' =' → logprob: -0.9100733399391174
    3. ' ^=' → logprob: -5.410073280334473
    4. ' ^' → logprob: -6.410073280334473
    5. ',' → logprob: -6.410073280334473
    6. ' ' → logprob: -6.785073280334473
    7. '_' → logprob: -7.410073280334473
    8. '^' → logprob: -7.535073280334473
    9. ')' → logprob: -7.910073280334473
    10. '(' → logprob: -7.910073280334473

Token 207: ' input' (ID: 3422)
  Prédit: 'highest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'highest' → logprob: -0.7286555171012878
    2. 'difference' → logprob: -1.1036555767059326
    3. 'input' → logprob: -1.9786555767059326
    4. ' highest' → logprob: -3.4786555767059326
    5. ' input' → logprob: -4.8536553382873535
    6. ' difference' → logprob: -5.6036553382873535
    7. '1' → logprob: -7.1036553382873535
    8. '(input' → logprob: -7.3536553382873535
    9. '(' → logprob: -7.4786553382873535
    10. 'd' → logprob: -7.6036553382873535

Token 208: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00011319868644932285
    2. 'value' → logprob: -9.125113487243652
    3. '_' → logprob: -13.625113487243652
    4. '_val' → logprob: -13.875113487243652
    5. '_index' → logprob: -13.875113487243652
    6. '+' → logprob: -15.000113487243652
    7. 'Value' → logprob: -15.250113487243652
    8. '_input' → logprob: -16.250112533569336
    9. ' _' → logprob: -17.000112533569336
    10. '```' → logprob: -17.125112533569336

Token 209: ' ^' (ID: 7602)
  Prédit: ' ^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.4733712375164032
    2. '^' → logprob: -1.0983712673187256
    3. '+' → logprob: -3.7233712673187256
    4. ' ' → logprob: -4.0983710289001465
    5. ' ^=' → logprob: -7.0983710289001465
    6. ' +' → logprob: -7.4733710289001465
    7. '   ' → logprob: -8.348371505737305
    8. ',' → logprob: -8.598371505737305
    9. ' ^
' → logprob: -8.598371505737305
    10. ')' → logprob: -8.598371505737305

Token 210: ' highest' (ID: 11639)
  Prédit: 'highest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'highest' → logprob: -0.2782137095928192
    2. 'difference' → logprob: -1.5282137393951416
    3. ' highest' → logprob: -4.0282135009765625
    4. '(d' → logprob: -6.4032135009765625
    5. 'input' → logprob: -6.4032135009765625
    6. ' difference' → logprob: -6.5282135009765625
    7. '(high' → logprob: -7.0282135009765625
    8. '(' → logprob: -7.4032135009765625
    9. 'd' → logprob: -7.4032135009765625
    10. '1' → logprob: -8.153213500976562

Token 211: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.06254588812589645
    2. '_of' → logprob: -3.0625457763671875
    3. '_value' → logprob: -4.5625457763671875
    4. 'of' → logprob: -5.9375457763671875
    5. 'power' → logprob: -7.3125457763671875
    6. '_pow' → logprob: -10.812545776367188
    7. '```' → logprob: -10.937545776367188
    8. '_' → logprob: -10.937545776367188
    9. 'pow' → logprob: -11.062545776367188
    10. 'Power' → logprob: -11.062545776367188

Token 212: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.002400505356490612
    2. 'of' → logprob: -6.5024003982543945
    3. '_value' → logprob: -7.1274003982543945
    4. '_two' → logprob: -9.502400398254395
    5. '_power' → logprob: -12.002400398254395
    6. '```' → logprob: -12.877400398254395
    7. '2' → logprob: -13.127400398254395
    8. 'Of' → logprob: -13.877400398254395
    9. '**' → logprob: -14.002400398254395
    10. '_' → logprob: -14.002400398254395

Token 213: '_two' (ID: 54305)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.007238972000777721
    2. '_two' → logprob: -5.007238864898682
    3. '2' → logprob: -8.25723934173584
    4. ' two' → logprob: -8.88223934173584
    5. 'input' → logprob: -9.50723934173584
    6. 'highest' → logprob: -10.38223934173584
    7. '(two' → logprob: -12.25723934173584
    8. '-two' → logprob: -12.75723934173584
    9. 'value' → logprob: -12.75723934173584
    10. '_value' → logprob: -13.00723934173584

Token 214: ' ^' (ID: 7602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09333006292581558
    2. '<|end|>' → logprob: -2.843330144882202
    3. '
' → logprob: -4.468329906463623
    4. '   ' → logprob: -4.593329906463623
    5. ')' → logprob: -4.968329906463623
    6. ' ' → logprob: -7.718329906463623
    7. '<|end|>' → logprob: -7.843329906463623
    8. ',' → logprob: -8.093330383300781
    9. '        
' → logprob: -8.218330383300781
    10. ')
' → logprob: -8.593330383300781

Token 215: ' ' (ID: 220)
  Prédit: 'difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'difference' → logprob: -0.5274163484573364
    2. 'highest' → logprob: -1.7774163484573364
    3. 'input' → logprob: -2.152416229248047
    4. '1' → logprob: -2.652416229248047
    5. '(input' → logprob: -3.277416229248047
    6. '(' → logprob: -5.402416229248047
    7. '3' → logprob: -5.777416229248047
    8. 'loop' → logprob: -6.277416229248047
    9. ' difference' → logprob: -6.527416229248047
    10. ' highest' → logprob: -6.777416229248047

Token 216: '1' (ID: 16)
  Prédit: 'difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'difference' → logprob: -0.2527828812599182
    2. '1' → logprob: -2.3777828216552734
    3. 'highest' → logprob: -2.3777828216552734
    4. 'input' → logprob: -4.002782821655273
    5. '3' → logprob: -4.752782821655273
    6. '(input' → logprob: -5.627782821655273
    7. '(' → logprob: -5.752782821655273
    8. 'd' → logprob: -6.752782821655273
    9. 'loop' → logprob: -7.002782821655273
    10. '(d' → logprob: -7.252782821655273

Token 217: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13889236748218536
    2. '<|end|>' → logprob: -2.388892412185669
    3. '
' → logprob: -3.888892412185669
    4. '   ' → logprob: -4.76389217376709
    5. ')' → logprob: -4.88889217376709
    6. '<|end|>' → logprob: -7.88889217376709
    7. ')
' → logprob: -8.13889217376709
    8. ' ' → logprob: -8.76389217376709
    9. ',' → logprob: -9.26389217376709
    10. '        
' → logprob: -9.38889217376709

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4785197377204895
    2. '   ' → logprob: -1.2285196781158447
    3. '<|end|>' → logprob: -2.6035196781158447
    4. ')' → logprob: -5.353519916534424
    5. ' ' → logprob: -6.103519916534424
    6. 'print' → logprob: -6.228519916534424
    7. '
' → logprob: -6.603519916534424
    8. ',' → logprob: -7.478519916534424
    9. ' print' → logprob: -7.978519916534424
    10. ' if' → logprob: -8.478519439697266

Token 219: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.044052381068468094
    2. ' print' → logprob: -3.6690523624420166
    3. '       ' → logprob: -4.169052600860596
    4. '   ' → logprob: -6.669052600860596
    5. 'if' → logprob: -8.044052124023438
    6. 'for' → logprob: -8.794052124023438
    7. ' for' → logprob: -8.919052124023438
    8. ' if' → logprob: -9.044052124023438
    9. ' ' → logprob: -10.044052124023438
    10. 'while' → logprob: -11.419052124023438

Token 220: '(input' (ID: 10054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.9340888261795044
    2. '(high' → logprob: -1.1840888261795044
    3. '(input' → logprob: -1.4340888261795044
    4. '(' → logprob: -3.059088706970215
    5. 'highest' → logprob: -5.059088706970215
    6. 'xor' → logprob: -5.559088706970215
    7. 'input' → logprob: -5.684088706970215
    8. '(d' → logprob: -7.309088706970215
    9. '1' → logprob: -8.059088706970215
    10. 'x' → logprob: -8.184088706970215

Token 221: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0012303499970585108
    2. ',' → logprob: -7.376230239868164
    3. 'value' → logprob: -7.751230239868164
    4. '+' → logprob: -10.251230239868164
    5. '_' → logprob: -10.501230239868164
    6. ' +' → logprob: -10.876230239868164
    7. '_,' → logprob: -10.876230239868164
    8. '_index' → logprob: -11.001230239868164
    9. 'xor' → logprob: -11.126230239868164
    10. 'index' → logprob: -12.126230239868164

Token 222: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03337502107024193
    2. ' +' → logprob: -4.158374786376953
    3. ' ,' → logprob: -4.783374786376953
    4. '+' → logprob: -4.783374786376953
    5. ',input' → logprob: -8.033374786376953
    6. ' ' → logprob: -9.908374786376953
    7. '+,' → logprob: -10.408374786376953
    8. ',x' → logprob: -11.033374786376953
    9. ')' → logprob: -11.408374786376953
    10. ',
' → logprob: -12.408374786376953

Token 223: ' input' (ID: 3422)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31282952427864075
    2. '3' → logprob: -2.4378294944763184
    3. 'xor' → logprob: -2.8128294944763184
    4. '2' → logprob: -3.0628294944763184
    5. ' ' → logprob: -3.1878294944763184
    6. 'highest' → logprob: -4.187829494476318
    7. '4' → logprob: -4.312829494476318
    8. 'input' → logprob: -6.312829494476318
    9. ' xor' → logprob: -6.812829494476318
    10. ' highest' → logprob: -7.312829494476318

Token 224: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.047228895127773285
    2. '1' → logprob: -3.7972288131713867
    3. '2' → logprob: -4.547228813171387
    4. '+' → logprob: -4.922228813171387
    5. '3' → logprob: -5.672228813171387
    6. 'value' → logprob: -6.422228813171387
    7. '4' → logprob: -7.547228813171387
    8. ' +' → logprob: -9.047228813171387
    9. '   ' → logprob: -10.547228813171387
    10. ' ' → logprob: -10.797228813171387

Token 225: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8266168236732483
    2. ' +' → logprob: -0.8266168236732483
    3. ',' → logprob: -2.2016167640686035
    4. ' ,' → logprob: -4.4516167640686035
    5. ' -' → logprob: -6.7016167640686035
    6. '-' → logprob: -7.0766167640686035
    7. ')' → logprob: -8.326617240905762
    8. '1' → logprob: -9.576617240905762
    9. '2' → logprob: -9.576617240905762
    10. '+,' → logprob: -9.951617240905762

Token 226: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.5905911326408386
    2. ' xor' → logprob: -1.5905911922454834
    3. ' highest' → logprob: -2.0905911922454834
    4. 'highest' → logprob: -2.4655911922454834
    5. ' input' → logprob: -3.9655911922454834
    6. 'input' → logprob: -4.340590953826904
    7. '1' → logprob: -7.340590953826904
    8. ' ' → logprob: -8.340591430664062
    9. ' XOR' → logprob: -9.215591430664062
    10. 'difference' → logprob: -9.215591430664062

Token 227: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0001334559783572331
    2. '_' → logprob: -9.375133514404297
    3. 'value' → logprob: -10.125133514404297
    4. '_val' → logprob: -12.500133514404297
    5. ')' → logprob: -12.875133514404297
    6. '_index' → logprob: -14.500133514404297
    7. '1' → logprob: -15.750133514404297
    8. '_
' → logprob: -15.750133514404297
    9. ' _' → logprob: -15.875133514404297
    10. '+' → logprob: -16.000133514404297

Token 228: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036701520439237356
    2. ',' → logprob: -6.5036702156066895
    3. ')
' → logprob: -7.1286702156066895
    4. ' )' → logprob: -7.2536702156066895
    5. ' +' → logprob: -8.003669738769531
    6. '+' → logprob: -8.503669738769531
    7. '   ' → logprob: -9.378669738769531
    8. ' ,' → logprob: -11.503669738769531
    9. ',)' → logprob: -12.003669738769531
    10. ' )
' → logprob: -12.753669738769531


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 226
Tokens correctement prédits (1ère position, stricte): 97
Tokens correctement prédits (1ère position, avec adaptation): 100
Tokens correctement prédits (top 10): 197
Précision stricte (1ère position): 42.92%
Précision adaptée (1ère position): 44.25%
Précision (top 10): 87.17%
================================================================================
