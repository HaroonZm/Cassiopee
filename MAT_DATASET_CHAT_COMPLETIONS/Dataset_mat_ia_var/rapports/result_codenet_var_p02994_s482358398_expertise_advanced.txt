================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add

n, l = map(int, input().split())
flavors = [l + i for i in range(n)]
excluded = min(flavors, key=abs)
result = reduce(add, flavors) - excluded
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.27646777033805847
    2. 'partial' → logprob: -1.7764678001403809
    3. ' wraps' → logprob: -3.151467800140381
    4. 'reduce' → logprob: -3.776467800140381
    5. ' partial' → logprob: -5.901467800140381
    6. 'l' → logprob: -5.901467800140381
    7. ' l' → logprob: -7.776467800140381
    8. 'cmp' → logprob: -8.901467323303223
    9. 'cache' → logprob: -8.901467323303223
    10. 'cached' → logprob: -9.026467323303223

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010288605466485023
    2. '(lambda' → logprob: -4.760288715362549
    3. ' (' → logprob: -7.385288715362549
    4. ',' → logprob: -7.885288715362549
    5. 'def' → logprob: -8.13528823852539
    6. '.' → logprob: -8.76028823852539
    7. '```' → logprob: -10.13528823852539
    8. '(
' → logprob: -10.51028823852539
    9. 'lambda' → logprob: -10.63528823852539
    10. 'a' → logprob: -10.76028823852539

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030943168327212334
    2. 'def' → logprob: -4.155943393707275
    3. '\' → logprob: -4.780943393707275
    4. ' ' → logprob: -6.030943393707275
    5. '(
' → logprob: -6.905943393707275
    6. ',' → logprob: -7.155943393707275
    7. '(lambda' → logprob: -7.905943393707275
    8. '```' → logprob: -8.280942916870117
    9. ' (' → logprob: -8.405942916870117
    10. 'd' → logprob: -8.780942916870117

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.5442676544189453
    2. ' itertools' → logprob: -1.4192676544189453
    3. ' math' → logprob: -2.0442676544189453
    4. ' collections' → logprob: -3.1692676544189453
    5. 'operator' → logprob: -5.544267654418945
    6. ' os' → logprob: -6.669267654418945
    7. ' typing' → logprob: -8.044267654418945
    8. 'math' → logprob: -8.044267654418945
    9. 'collections' → logprob: -8.669267654418945
    10. ' ' → logprob: -8.919267654418945

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0230238139629364
    2. 'import' → logprob: -3.898023843765259
    3. '.' → logprob: -6.52302360534668
    4. ' ' → logprob: -7.14802360534668
    5. ' .' → logprob: -8.89802360534668
    6. '.import' → logprob: -9.64802360534668
    7. '	import' → logprob: -11.52302360534668
    8. '_import' → logprob: -13.14802360534668
    9. '-import' → logprob: -13.27302360534668
    10. '<|end|>' → logprob: -13.39802360534668

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.24421872198581696
    2. ' import' → logprob: -1.8692187070846558
    3. ' mul' → logprob: -3.6192188262939453
    4. 'add' → logprob: -3.9942188262939453
    5. ' ' → logprob: -4.369218826293945
    6. 'import' → logprob: -5.994218826293945
    7. 'mul' → logprob: -6.619218826293945
    8. ' item' → logprob: -8.119218826293945
    9. ' icon' → logprob: -9.369218826293945
    10. ' ad' → logprob: -10.119218826293945

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2545537054538727
    2. '\' → logprob: -2.62955379486084
    3. '(
' → logprob: -3.25455379486084
    4. '\n' → logprob: -3.25455379486084
    5. ',' → logprob: -3.75455379486084
    6. '#' → logprob: -4.62955379486084
    7. ' ' → logprob: -5.25455379486084
    8. 'def' → logprob: -5.25455379486084
    9. ')' → logprob: -5.50455379486084
    10. '
' → logprob: -5.75455379486084

Token 10: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5127813220024109
    2. '#' → logprob: -1.7627813816070557
    3. ',' → logprob: -2.6377813816070557
    4. '\' → logprob: -3.6377813816070557
    5. '(
' → logprob: -3.7627813816070557
    6. 'a' → logprob: -3.8877813816070557
    7. '`' → logprob: -4.262781143188477
    8. 'result' → logprob: -4.262781143188477
    9. 'def' → logprob: -4.512781143188477
    10. '[' → logprob: -4.762781143188477

Token 11: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.702565610408783
    2. '_' → logprob: -1.3275656700134277
    3. '=' → logprob: -2.2025656700134277
    4. ' ' → logprob: -2.3275656700134277
    5. 'u' → logprob: -4.702565670013428
    6. 'um' → logprob: -4.827565670013428
    7. 'umber' → logprob: -5.452565670013428
    8. '   ' → logprob: -5.952565670013428
    9. '  ' → logprob: -6.327565670013428
    10. 'a' → logprob: -6.952565670013428

Token 12: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6098467707633972
    2. ' m' → logprob: -1.109846830368042
    3. 'm' → logprob: -2.609846830368042
    4. ' k' → logprob: -4.859846591949463
    5. ' =' → logprob: -4.859846591949463
    6. ''' → logprob: -4.984846591949463
    7. '=' → logprob: -5.484846591949463
    8. 's' → logprob: -5.484846591949463
    9. ' n' → logprob: -5.484846591949463
    10. ' s' → logprob: -5.984846591949463

Token 13: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06368733197450638
    2. ' =' → logprob: -2.813687324523926
    3. 'ist' → logprob: -6.688687324523926
    4. 'i' → logprob: -8.813687324523926
    5. '_' → logprob: -9.313687324523926
    6. 'e' → logprob: -9.438687324523926
    7. ',' → logprob: -10.313687324523926
    8. 'ength' → logprob: -10.938687324523926
    9. 'ine' → logprob: -11.063687324523926
    10. 'en' → logprob: -11.063687324523926

Token 14: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.9997575283050537
    2. ' map' → logprob: -0.9997575283050537
    3. '0' → logprob: -2.1247575283050537
    4. ' ' → logprob: -2.3747575283050537
    5. '1' → logprob: -3.9997575283050537
    6. 'int' → logprob: -4.624757766723633
    7. '5' → logprob: -5.124757766723633
    8. ' int' → logprob: -5.249757766723633
    9. '10' → logprob: -5.624757766723633
    10. 'input' → logprob: -5.624757766723633

Token 15: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5916158556938171
    2. '(int' → logprob: -0.8416158556938171
    3. '(lambda' → logprob: -4.591615676879883
    4. '(str' → logprob: -5.341615676879883
    5. '(input' → logprob: -8.341615676879883
    6. 'int' → logprob: -8.716615676879883
    7. '(eval' → logprob: -9.091615676879883
    8. '<int' → logprob: -10.966615676879883
    9. '(
' → logprob: -11.091615676879883
    10. '<|end|>' → logprob: -11.216615676879883

Token 16: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6209893822669983
    2. ',' → logprob: -1.2459893226623535
    3. ',input' → logprob: -2.4959893226623535
    4. 'input' → logprob: -3.2459893226623535
    5. '(' → logprob: -3.2459893226623535
    6. ')' → logprob: -4.3709893226623535
    7. ' input' → logprob: -7.2459893226623535
    8. ' ,' → logprob: -7.6209893226623535
    9. '=input' → logprob: -8.120989799499512
    10. '),' → logprob: -9.370989799499512

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018168555572628975
    2. ' input' → logprob: -4.0181684494018555
    3. ')' → logprob: -11.018168449401855
    4. '(input' → logprob: -14.018168449401855
    5. ',input' → logprob: -14.393168449401855
    6. '=input' → logprob: -15.768168449401855
    7. ' )' → logprob: -15.893168449401855
    8. ' ' → logprob: -15.893168449401855
    9. '	input' → logprob: -16.018169403076172
    10. '```' → logprob: -16.518169403076172

Token 18: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.8216400742530823
    2. '().' → logprob: -0.9466400742530823
    3. '()' → logprob: -2.1966400146484375
    4. ')' → logprob: -2.9466400146484375
    5. '(' → logprob: -5.3216400146484375
    6. '());' → logprob: -6.5716400146484375
    7. '('' → logprob: -7.6966400146484375
    8. '(),' → logprob: -7.9466400146484375
    9. '()))' → logprob: -8.446640014648438
    10. '()>' → logprob: -8.821640014648438

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004086708649992943
    2. 'strip' → logprob: -5.504086494445801
    3. 'rstrip' → logprob: -12.0040864944458
    4. 'read' → logprob: -13.8790864944458
    5. ' split' → logprob: -14.3790864944458
    6. '(split' → logprob: -15.1290864944458
    7. ')' → logprob: -15.2540864944458
    8. 'spl' → logprob: -16.754087448120117
    9. 'startswith' → logprob: -17.504087448120117
    10. 'decode' → logprob: -17.754087448120117

Token 20: '())
' (ID: 4574)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5761037468910217
    2. ')' → logprob: -0.8261037468910217
    3. '),' → logprob: -9.326104164123535
    4. '())' → logprob: -10.701104164123535
    5. ')))' → logprob: -11.326104164123535
    6. '()))' → logprob: -11.701104164123535
    7. '()' → logprob: -11.701104164123535
    8. ''))' → logprob: -12.076104164123535
    9. '))
' → logprob: -12.576104164123535
    10. ')
' → logprob: -12.826104164123535

Token 21: 'fl' (ID: 1836)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.9934291243553162
    2. ' numbers' → logprob: -1.868429183959961
    3. 'a' → logprob: -2.368429183959961
    4. 'arr' → logprob: -2.743429183959961
    5. ' 
' → logprob: -2.993429183959961
    6. 'result' → logprob: -3.368429183959961
    7. 'nums' → logprob: -3.368429183959961
    8. 'data' → logprob: -3.368429183959961
    9. 'lst' → logprob: -3.993429183959961
    10. '[' → logprob: -4.118429183959961

Token 22: 'avors' (ID: 69045)
  Prédit: 'avors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avors' → logprob: -0.5384901165962219
    2. 'owers' → logprob: -2.413490056991577
    3. 'ist' → logprob: -2.538490056991577
    4. 'at' → logprob: -3.038490056991577
    5. 'ags' → logprob: -3.163490056991577
    6. 'avours' → logprob: -3.288490056991577
    7. 'o' → logprob: -3.538490056991577
    8. 'ats' → logprob: -3.663490056991577
    9. 'a' → logprob: -4.663490295410156
    10. 'avor' → logprob: -4.788490295410156

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01041756384074688
    2. '=' → logprob: -4.635417461395264
    3. '_' → logprob: -7.760417461395264
    4. 's' → logprob: -9.135417938232422
    5. ' ' → logprob: -10.135417938232422
    6. '[' → logprob: -11.010417938232422
    7. '=[]' → logprob: -11.135417938232422
    8. ' _' → logprob: -11.760417938232422
    9. '[]' → logprob: -11.760417938232422
    10. '_counts' → logprob: -11.885417938232422

Token 24: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5786543488502502
    2. ' list' → logprob: -1.5786542892456055
    3. ' [' → logprob: -2.4536542892456055
    4. '[' → logprob: -2.5786542892456055
    5. '[list' → logprob: -3.0786542892456055
    6. '[]' → logprob: -4.7036542892456055
    7. '[input' → logprob: -4.9536542892456055
    8. ' []' → logprob: -5.3286542892456055
    9. '[int' → logprob: -5.8286542892456055
    10. 'input' → logprob: -7.9536542892456055

Token 25: 'l' (ID: 75)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.022236201912164688
    2. 'input' → logprob: -4.022236347198486
    3. 'i' → logprob: -5.897236347198486
    4. ' int' → logprob: -7.772236347198486
    5. 'n' → logprob: -8.147235870361328
    6. '(int' → logprob: -9.022235870361328
    7. '0' → logprob: -9.397235870361328
    8. 'str' → logprob: -9.397235870361328
    9. 'l' → logprob: -9.647235870361328
    10. 'map' → logprob: -9.772235870361328

Token 26: ' +' (ID: 659)
  Prédit: '+i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+i' → logprob: -0.8303117752075195
    2. '+' → logprob: -1.2053117752075195
    3. ' +' → logprob: -1.3303117752075195
    4. ',' → logprob: -10.08031177520752
    5. '+k' → logprob: -11.20531177520752
    6. '+l' → logprob: -11.45531177520752
    7. '+x' → logprob: -11.95531177520752
    8. ' ' → logprob: -12.20531177520752
    9. '+j' → logprob: -12.83031177520752
    10. '+n' → logprob: -12.95531177520752

Token 27: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12707887589931488
    2. ' i' → logprob: -2.1270787715911865
    3. '_' → logprob: -9.377079010009766
    4. '0' → logprob: -11.377079010009766
    5. ' ' → logprob: -11.377079010009766
    6. '1' → logprob: -11.377079010009766
    7. '_i' → logprob: -11.752079010009766
    8. ' _' → logprob: -12.127079010009766
    9. 'n' → logprob: -12.502079010009766
    10. 'x' → logprob: -12.502079010009766

Token 28: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01678311452269554
    2. ')' → logprob: -4.516783237457275
    3. 'for' → logprob: -5.391783237457275
    4. ' ' → logprob: -7.516783237457275
    5. '<|end|>' → logprob: -8.016782760620117
    6. ']' → logprob: -9.016782760620117
    7. '	for' → logprob: -9.891782760620117
    8. ' )' → logprob: -10.016782760620117
    9. '<|end|>' → logprob: -10.141782760620117
    10. ')]' → logprob: -11.266782760620117

Token 29: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.010557003319263458
    2. ' i' → logprob: -4.885557174682617
    3. 'range' → logprob: -5.885557174682617
    4. ' ' → logprob: -9.010557174682617
    5. ' xrange' → logprob: -11.010557174682617
    6. 'i' → logprob: -11.260557174682617
    7. '	range' → logprob: -12.260557174682617
    8. '_range' → logprob: -12.510557174682617
    9. '<|end|>' → logprob: -12.885557174682617
    10. '(range' → logprob: -13.510557174682617

Token 30: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06585094332695007
    2. ' in' → logprob: -3.1908509731292725
    3. 'range' → logprob: -3.9408509731292725
    4. '<|end|>' → logprob: -6.315850734710693
    5. ' ' → logprob: -7.565850734710693
    6. ' xrange' → logprob: -7.940850734710693
    7. '(range' → logprob: -8.440851211547852
    8. 'in' → logprob: -9.315851211547852
    9. '<|end|>' → logprob: -9.815851211547852
    10. '	range' → logprob: -9.815851211547852

Token 31: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31327399611473083
    2. 'range' → logprob: -1.3132740259170532
    3. ' xrange' → logprob: -12.188274383544922
    4. '	range' → logprob: -12.563274383544922
    5. ' ' → logprob: -12.688274383544922
    6. '(range' → logprob: -15.563274383544922
    7. ')' → logprob: -16.563274383544922
    8. '_range' → logprob: -16.563274383544922
    9. '.range' → logprob: -16.813274383544922
    10. ' ran' → logprob: -17.188274383544922

Token 32: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00072851701406762
    2. '(' → logprob: -7.250728607177734
    3. ' (' → logprob: -11.000728607177734
    4. 'n' → logprob: -14.250728607177734
    5. ')' → logprob: -14.500728607177734
    6. ')n' → logprob: -15.000728607177734
    7. ' n' → logprob: -15.250728607177734
    8. '(
' → logprob: -16.375728607177734
    9. ' ' → logprob: -16.875728607177734
    10. ' )' → logprob: -18.500728607177734

Token 33: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.117345684382599e-05
    2. ')' → logprob: -11.000020980834961
    3. ' )' → logprob: -13.375020980834961
    4. ']' → logprob: -13.750020980834961
    5. ')])' → logprob: -14.250020980834961
    6. ')]
' → logprob: -14.750020980834961
    7. '+' → logprob: -15.750020980834961
    8. '])]' → logprob: -16.00002098083496
    9. ')}' → logprob: -16.12502098083496
    10. '')]' → logprob: -16.12502098083496

Token 34: 'excluded' (ID: 194717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3557531833648682
    2. ')' → logprob: -1.8557531833648682
    3. 'result' → logprob: -1.8557531833648682
    4. 'sum' → logprob: -1.9807531833648682
    5. 'print' → logprob: -2.355753183364868
    6. '
' → logprob: -3.230753183364868
    7. ' 
' → logprob: -3.605753183364868
    8. 's' → logprob: -3.730753183364868
    9. ']' → logprob: -3.980753183364868
    10. '+' → logprob: -4.480752944946289

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14079296588897705
    2. '=' → logprob: -2.8907928466796875
    3. '_' → logprob: -2.8907928466796875
    4. 's' → logprob: -5.1407928466796875
    5. '_fl' → logprob: -5.3907928466796875
    6. '_sum' → logprob: -5.6407928466796875
    7. '_s' → logprob: -6.3907928466796875
    8. ' ' → logprob: -7.1407928466796875
    9. '_indices' → logprob: -7.3907928466796875
    10. '_values' → logprob: -7.6407928466796875

Token 36: ' min' (ID: 1349)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.9613283276557922
    2. '[]' → logprob: -1.7113282680511475
    3. '{' → logprob: -2.3363282680511475
    4. '0' → logprob: -2.4613282680511475
    5. ' set' → logprob: -2.9613282680511475
    6. '[' → logprob: -3.0863282680511475
    7. ' []' → logprob: -3.3363282680511475
    8. '2' → logprob: -3.5863282680511475
    9. '{}' → logprob: -4.336328506469727
    10. 'fl' → logprob: -4.336328506469727

Token 37: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.37676769495010376
    2. '(fl' → logprob: -1.501767635345459
    3. '(' → logprob: -2.501767635345459
    4. '(abs' → logprob: -5.626767635345459
    5. '((' → logprob: -6.376767635345459
    6. '([' → logprob: -7.001767635345459
    7. '(lambda' → logprob: -7.376767635345459
    8. '(add' → logprob: -7.876767635345459
    9. 'fl' → logprob: -7.876767635345459
    10. '(s' → logprob: -8.501768112182617

Token 38: 'lav' (ID: 38075)
  Prédit: 'lav'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lav' → logprob: -0.006247999612241983
    2. 'l' → logprob: -5.1312479972839355
    3. 'lu' → logprob: -9.756248474121094
    4. ' lav' → logprob: -10.256248474121094
    5. 'avors' → logprob: -10.256248474121094
    6. 'law' → logprob: -10.506248474121094
    7. '(l' → logprob: -10.881248474121094
    8. 'lap' → logprob: -11.131248474121094
    9. 'lava' → logprob: -11.381248474121094
    10. 'fl' → logprob: -11.506248474121094

Token 39: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.04373373091220856
    2. 'avors' → logprob: -3.168733835220337
    3. 'ers' → logprob: -8.543733596801758
    4. 'o' → logprob: -9.168733596801758
    5. 'vors' → logprob: -9.293733596801758
    6. 'or' → logprob: -9.418733596801758
    7. ')' → logprob: -9.793733596801758
    8. '   ' → logprob: -10.543733596801758
    9. '[' → logprob: -10.668733596801758
    10. ']' → logprob: -11.043733596801758

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10463870316743851
    2. ',key' → logprob: -2.7296388149261475
    3. '(key' → logprob: -3.7296388149261475
    4. 'key' → logprob: -4.979638576507568
    5. ')' → logprob: -6.729638576507568
    6. ' key' → logprob: -6.979638576507568
    7. '(),' → logprob: -7.729638576507568
    8. ' ,' → logprob: -8.854639053344727
    9. '(' → logprob: -9.479639053344727
    10. '(lambda' → logprob: -9.604639053344727

Token 41: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.4287881553173065
    2. ' key' → logprob: -1.053788185119629
    3. 'lambda' → logprob: -10.553788185119629
    4. ',key' → logprob: -10.928788185119629
    5. '(key' → logprob: -11.678788185119629
    6. ')' → logprob: -11.803788185119629
    7. ' lambda' → logprob: -12.053788185119629
    8. '	key' → logprob: -12.178788185119629
    9. ',' → logprob: -12.303788185119629
    10. 'fl' → logprob: -12.678788185119629

Token 42: '=' (ID: 28)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.4287666380405426
    2. '=' → logprob: -1.0537666082382202
    3. 'abs' → logprob: -10.053766250610352
    4. 'lambda' → logprob: -11.428766250610352
    5. ' =' → logprob: -12.178766250610352
    6. ' lambda' → logprob: -13.928766250610352
    7. ')' → logprob: -14.178766250610352
    8. '=
' → logprob: -14.303766250610352
    9. '=int' → logprob: -14.303766250610352
    10. '=l' → logprob: -14.803766250610352

Token 43: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.08897556364536285
    2. 'lambda' → logprob: -2.463975667953491
    3. '(lambda' → logprob: -10.96397590637207
    4. ' lambda' → logprob: -11.71397590637207
    5. '=lambda' → logprob: -12.83897590637207
    6. '   ' → logprob: -13.21397590637207
    7. ' abs' → logprob: -13.58897590637207
    8. '(abs' → logprob: -13.96397590637207
    9. 'absolute' → logprob: -14.58897590637207
    10. 'fabs' → logprob: -14.58897590637207

Token 44: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017893016338348389
    2. '))' → logprob: -6.376789093017578
    3. ')
' → logprob: -9.751789093017578
    4. ')))' → logprob: -11.626789093017578
    5. ')]' → logprob: -12.001789093017578
    6. ' )' → logprob: -12.251789093017578
    7. ')

' → logprob: -13.126789093017578
    8. ')}' → logprob: -13.126789093017578
    9. ')`' → logprob: -13.876789093017578
    10. '),' → logprob: -14.001789093017578

Token 45: 'result' (ID: 2521)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4125220477581024
    2. 'result' → logprob: -1.4125220775604248
    3. 'total' → logprob: -3.662522077560425
    4. ' 
' → logprob: -4.037521839141846
    5. 'sum' → logprob: -4.037521839141846
    6. ')
' → logprob: -4.162521839141846
    7. 'fl' → logprob: -5.912521839141846
    8. ')' → logprob: -5.912521839141846
    9. 'print' → logprob: -6.412521839141846
    10. 'excluded' → logprob: -6.537521839141846

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059449137188494205
    2. '=' → logprob: -5.130944728851318
    3. '_' → logprob: -11.630945205688477
    4. ' ' → logprob: -12.755945205688477
    5. 's' → logprob: -13.630945205688477
    6. 'space' → logprob: -15.255945205688477
    7. '  ' → logprob: -15.380945205688477
    8. '_space' → logprob: -15.380945205688477
    9. ' =)' → logprob: -15.380945205688477
    10. ' _' → logprob: -15.505945205688477

Token 47: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.10087506473064423
    2. ' reduce' → logprob: -2.35087513923645
    3. 'sum' → logprob: -7.725874900817871
    4. ' sum' → logprob: -8.975874900817871
    5. 'abs' → logprob: -10.100874900817871
    6. 're' → logprob: -10.475874900817871
    7. 'redu' → logprob: -11.600874900817871
    8. ' ' → logprob: -12.350874900817871
    9. ' abs' → logprob: -12.850874900817871
    10. '   ' → logprob: -12.975874900817871

Token 48: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.32668668031692505
    2. '(' → logprob: -1.3266866207122803
    3. '(lambda' → logprob: -4.326686859130859
    4. '(operator' → logprob: -9.70168685913086
    5. '(
' → logprob: -10.32668685913086
    6. 'add' → logprob: -10.95168685913086
    7. ' (' → logprob: -12.70168685913086
    8. ' add' → logprob: -12.70168685913086
    9. '(
' → logprob: -14.32668685913086
    10. '(

' → logprob: -14.45168685913086

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008027231320738792
    2. ',[' → logprob: -5.008027076721191
    3. ',f' → logprob: -7.633027076721191
    4. ',(' → logprob: -8.883027076721191
    5. ' ,' → logprob: -9.133027076721191
    6. '(' → logprob: -9.133027076721191
    7. ' (' → logprob: -9.508027076721191
    8. '[' → logprob: -9.758027076721191
    9. ',
' → logprob: -9.883027076721191
    10. '([' → logprob: -10.008027076721191

Token 50: ' flavors' (ID: 40057)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.3275488615036011
    2. '[' → logprob: -2.0775489807128906
    3. '[i' → logprob: -2.0775489807128906
    4. '[x' → logprob: -4.577548980712891
    5. ' [' → logprob: -4.702548980712891
    6. 'filter' → logprob: -5.952548980712891
    7. 'fl' → logprob: -6.077548980712891
    8. '(f' → logprob: -7.452548980712891
    9. '(filter' → logprob: -7.452548980712891
    10. '[token' → logprob: -7.452548980712891

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013780910521745682
    2. ',' → logprob: -7.001378059387207
    3. ' )' → logprob: -8.251378059387207
    4. ')-' → logprob: -9.376378059387207
    5. ')
' → logprob: -10.001378059387207
    6. ' if' → logprob: -10.876378059387207
    7. '[' → logprob: -11.251378059387207
    8. 'if' → logprob: -11.751378059387207
    9. '[:-' → logprob: -12.251378059387207
    10. '}' → logprob: -12.501378059387207

Token 52: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04486899822950363
    2. '-' → logprob: -3.1698689460754395
    3. ')' → logprob: -6.5448689460754395
    4. ' ' → logprob: -8.794869422912598
    5. '-fl' → logprob: -8.919869422912598
    6. '-ex' → logprob: -9.544869422912598
    7. '<|end|>' → logprob: -10.919869422912598
    8. ' ' → logprob: -11.044869422912598
    9. ' -
' → logprob: -11.044869422912598
    10. ' -=' → logprob: -12.544869422912598

Token 53: ' excluded' (ID: 52015)
  Prédit: 'excluded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'excluded' → logprob: -0.006716079078614712
    2. ' excluded' → logprob: -5.006716251373291
    3. 'exclude' → logprob: -14.506715774536133
    4. 'ex' → logprob: -15.256715774536133
    5. 'Excluded' → logprob: -16.756715774536133
    6. 'excluding' → logprob: -17.506715774536133
    7. '	ex' → logprob: -19.381715774536133
    8. '(ex' → logprob: -20.006715774536133
    9. 'exc' → logprob: -20.131715774536133
    10. 'exclusive' → logprob: -20.631715774536133

Token 54: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.024991393089294434
    2. '<|end|>' → logprob: -4.024991512298584
    3. ')' → logprob: -5.274991512298584
    4. '\n' → logprob: -7.274991512298584
    5. ' print' → logprob: -7.774991512298584
    6. '
' → logprob: -8.399991035461426
    7. '```' → logprob: -9.024991035461426
    8. '#' → logprob: -9.274991035461426
    9. '<|end|>' → logprob: -10.899991035461426
    10. 'p' → logprob: -11.024991035461426

Token 56: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014218512922525406
    2. '(result' → logprob: -4.264218330383301
    3. '()' → logprob: -10.3892183303833
    4. '("("' → logprob: -12.1392183303833
    5. ' (' → logprob: -12.2642183303833
    6. '((' → logprob: -12.5142183303833
    7. '('' → logprob: -13.3892183303833
    8. '(
' → logprob: -13.5142183303833
    9. '(print' → logprob: -14.1392183303833
    10. '```' → logprob: -14.1392183303833

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. '))' → logprob: -13.50000286102295
    3. ' )' → logprob: -14.00000286102295
    4. ')
' → logprob: -16.250001907348633
    5. ')`' → logprob: -17.000001907348633
    6. '')' → logprob: -18.000001907348633
    7. '`)' → logprob: -18.000001907348633
    8. ')}' → logprob: -18.875001907348633
    9. '）' → logprob: -19.375001907348633
    10. '(' → logprob: -19.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 55
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 22
Tokens correctement prédits (top 10): 42
Précision stricte (1ère position): 40.00%
Précision adaptée (1ère position): 40.00%
Précision (top 10): 76.36%
================================================================================
