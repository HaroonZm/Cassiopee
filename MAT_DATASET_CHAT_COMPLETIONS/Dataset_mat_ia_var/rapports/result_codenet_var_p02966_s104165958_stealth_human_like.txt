================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())

A = []
for x in range(n):
    row = []
    for y in range(n):
        row.append(0)
    A.append(row)

Al = []
for i in range(n+1):
    Al.append([0]*(n+1))
Ar = []
for i in range(n+1):
    Ar.append([0]*(n+1))

for i in range(n):
    x = [int(xx) for xx in input().split()]
    for j in range(n):
        if i < j:
            A[i][j] = x[j-1]  # hmm, index shenanigans
        elif i > j:
            A[i][j] = x[j]

# accumulate from left and right
for i in range(n):
    for j in range(i+1, n):
        Al[j][i+1] = Al[j][i] + A[j][i]   # why i+1 on left? works I guess
        if i-1 >= 0:
            Ar[i][j] = Ar[i-1][j] + A[i][j]
        else:
            Ar[i][j] = A[i][j]

# print("Al:", Al)
# print("Ar:", Ar)

dp = []
for i in range(n+1):
    dp.append([float("inf")]*(n+1))
dp[0][0] = 0

for i in range(n+1):
    for j in range(i, n+1): # not sure why j starts from i but that's how it's done
        l = 0
        r = 0
        k = j+1
        while k <= n:
            l = l + Al[k-1][i]
            r += (Ar[k-2][k-1] - Ar[j-1][k-1]) if j-1 >= 0 else Ar[k-2][k-1]
            before = dp[j][k]
            now = dp[i][j] + l + r
            if now < before:
                dp[j][k] = now
            k += 1
            # print('loop:', i,j,k,l,r,dp[j][k])
# print("DP:", dp)
ans = float("inf")
for i in range(n+1):
    ans = min(ans, dp[i][n])
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.657694418914616e-05
    2. ''' → logprob: -10.750056266784668
    3. '('' → logprob: -11.250056266784668
    4. '(
' → logprob: -11.625056266784668
    5. '(n' → logprob: -13.000056266784668
    6. '```' → logprob: -13.125056266784668
    7. '("("' → logprob: -13.125056266784668
    8. '()' → logprob: -13.500056266784668
    9. '`' → logprob: -13.625056266784668
    10. '[' → logprob: -14.125056266784668

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03871168941259384
    2. ')' → logprob: -3.5387117862701416
    3. '()' → logprob: -4.9137115478515625
    4. '())' → logprob: -7.1637115478515625
    5. '(
' → logprob: -8.663711547851562
    6. '```' → logprob: -9.163711547851562
    7. '(()' → logprob: -9.413711547851562
    8. '("("' → logprob: -9.663711547851562
    9. '('' → logprob: -9.913711547851562
    10. '`' → logprob: -10.163711547851562

Token 5: 'A' (ID: 32)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7557514905929565
    2. 'for' → logprob: -1.0057514905929565
    3. 'i' → logprob: -2.005751609802246
    4. 's' → logprob: -4.255751609802246
    5. 'f' → logprob: -4.880751609802246
    6. 'x' → logprob: -5.630751609802246
    7. ' if' → logprob: -6.755751609802246
    8. ' for' → logprob: -7.005751609802246
    9. 'm' → logprob: -8.130751609802246
    10. 'sum' → logprob: -8.255751609802246

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5926823616027832
    2. '+' → logprob: -1.0926823616027832
    3. ' =' → logprob: -3.217682361602783
    4. '*' → logprob: -4.092682361602783
    5. '**' → logprob: -4.217682361602783
    6. '+=' → logprob: -4.342682361602783
    7. 'dd' → logprob: -5.217682361602783
    8. 'r' → logprob: -5.467682361602783
    9. '%' → logprob: -5.467682361602783
    10. ' +' → logprob: -6.092682361602783

Token 7: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9491801261901855
    2. '[]' → logprob: -1.1991801261901855
    3. ' []' → logprob: -1.4491801261901855
    4. ' [' → logprob: -2.8241801261901855
    5. '[input' → logprob: -5.0741801261901855
    6. '[int' → logprob: -5.3241801261901855
    7. 'list' → logprob: -5.9491801261901855
    8. ' list' → logprob: -6.3241801261901855
    9. '[list' → logprob: -6.8241801261901855
    10. '[n' → logprob: -7.4491801261901855

Token 8: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003635707776993513
    2. ' for' → logprob: -5.628635883331299
    3. 'n' → logprob: -11.00363540649414
    4. 'f' → logprob: -12.12863540649414
    5. '[' → logprob: -12.50363540649414
    6. ' 
' → logprob: -12.75363540649414
    7. '
' → logprob: -13.62863540649414
    8. ' ' → logprob: -13.62863540649414
    9. '```' → logprob: -13.62863540649414
    10. 'i' → logprob: -14.50363540649414

Token 9: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18078358471393585
    2. ' i' → logprob: -1.8057836294174194
    3. 'i' → logprob: -7.930783748626709
    4. '  ' → logprob: -8.30578327178955
    5. ' _' → logprob: -8.55578327178955
    6. ' n' → logprob: -9.55578327178955
    7. ' ‌' → logprob: -9.68078327178955
    8. '_' → logprob: -10.30578327178955
    9. ' ' → logprob: -10.93078327178955
    10. ' range' → logprob: -11.43078327178955

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0026248814538121223
    2. 'in' → logprob: -6.002624988555908
    3. ' ' → logprob: -9.00262451171875
    4. 'n' → logprob: -11.87762451171875
    5. '  ' → logprob: -12.25262451171875
    6. '	in' → logprob: -12.37762451171875
    7. ' x' → logprob: -12.75262451171875
    8. ' i' → logprob: -14.00262451171875
    9. 'x' → logprob: -14.12762451171875
    10. 'range' → logprob: -14.25262451171875

Token 11: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.22543108463287354
    2. 'range' → logprob: -1.6004310846328735
    3. ' ' → logprob: -11.850431442260742
    4. 'n' → logprob: -13.100431442260742
    5. ' A' → logprob: -13.350431442260742
    6. '	range' → logprob: -13.350431442260742
    7. ' n' → logprob: -13.475431442260742
    8. 'A' → logprob: -14.225431442260742
    9. ' xrange' → logprob: -14.225431442260742
    10. '(range' → logprob: -14.600431442260742

Token 12: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2519359588623047
    2. '(' → logprob: -1.5019359588623047
    3. '(len' → logprob: -12.501935958862305
    4. ' (' → logprob: -13.501935958862305
    5. '(
' → logprob: -14.751935958862305
    6. '(s' → logprob: -15.501935958862305
    7. '(x' → logprob: -15.751935958862305
    8. '(

' → logprob: -15.751935958862305
    9. '((' → logprob: -15.876935958862305
    10. '(range' → logprob: -16.126935958862305

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026100215036422014
    2. ')' → logprob: -6.502610206604004
    3. '+' → logprob: -7.377610206604004
    4. ' ):' → logprob: -8.377610206604004
    5. '):
' → logprob: -8.627610206604004
    6. ':' → logprob: -10.002610206604004
    7. ',' → logprob: -11.127610206604004
    8. ' +' → logprob: -12.627610206604004
    9. '   ' → logprob: -13.252610206604004
    10. ' ' → logprob: -13.627610206604004

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5131887197494507
    2. '    ' → logprob: -1.1381887197494507
    3. ' A' → logprob: -3.2631888389587402
    4. '```' → logprob: -4.26318883895874
    5. ' ' → logprob: -4.63818883895874
    6. '     
' → logprob: -5.13818883895874
    7. 'A' → logprob: -5.13818883895874
    8. '    
' → logprob: -5.88818883895874
    9. '[' → logprob: -6.76318883895874
    10. ' 
' → logprob: -7.13818883895874

Token 15: ' row' (ID: 5225)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3834618628025055
    2. '   ' → logprob: -1.633461833000183
    3. 'A' → logprob: -2.2584619522094727
    4. ' line' → logprob: -4.258461952209473
    5. 'line' → logprob: -7.008461952209473
    6. ' ' → logprob: -7.133461952209473
    7. '```' → logprob: -7.508461952209473
    8. ' s' → logprob: -7.758461952209473
    9. ' a' → logprob: -8.133461952209473
    10. 'a' → logprob: -8.383461952209473

Token 16: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.09416388720273972
    2. ' =' → logprob: -2.5941638946533203
    3. '.' → logprob: -4.84416389465332
    4. '=' → logprob: -5.21916389465332
    5. '[' → logprob: -7.71916389465332
    6. '.extend' → logprob: -7.84416389465332
    7. '[]' → logprob: -8.09416389465332
    8. '_' → logprob: -8.84416389465332
    9. 's' → logprob: -8.84416389465332
    10. '[:]' → logprob: -8.96916389465332

Token 17: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.43441087007522583
    2. ' list' → logprob: -1.184410810470581
    3. '[]' → logprob: -3.684410810470581
    4. ' []' → logprob: -5.05941104888916
    5. ' [' → logprob: -5.18441104888916
    6. '[list' → logprob: -5.18441104888916
    7. '[' → logprob: -5.68441104888916
    8. '[int' → logprob: -8.43441104888916
    9. '[input' → logprob: -9.93441104888916
    10. '(list' → logprob: -11.18441104888916

Token 18: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6855736970901489
    2. '   ' → logprob: -1.060573697090149
    3. 'for' → logprob: -1.935573697090149
    4. '    ' → logprob: -5.435573577880859
    5. ' ' → logprob: -7.810573577880859
    6. '<|end|>' → logprob: -7.810573577880859
    7. '	for' → logprob: -8.56057357788086
    8. '    
' → logprob: -9.31057357788086
    9. '       ' → logprob: -10.31057357788086
    10. '     
' → logprob: -11.43557357788086

Token 19: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.28187641501426697
    2. ' for' → logprob: -1.4068764448165894
    3. '   ' → logprob: -7.531876564025879
    4. ' ' → logprob: -9.156876564025879
    5. 'n' → logprob: -10.656876564025879
    6. '    ' → logprob: -10.781876564025879
    7. '	for' → logprob: -11.906876564025879
    8. 'row' → logprob: -12.281876564025879
    9. 'value' → logprob: -12.531876564025879
    10. 'A' → logprob: -12.906876564025879

Token 20: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.07934202253818512
    2. ' ' → logprob: -2.9543421268463135
    3. ' range' → logprob: -4.579341888427734
    4. 'y' → logprob: -4.704341888427734
    5. ' j' → logprob: -6.204341888427734
    6. '_' → logprob: -6.954341888427734
    7. ' _' → logprob: -7.579341888427734
    8. 'range' → logprob: -7.704341888427734
    9. ' i' → logprob: -8.329341888427734
    10. ' x' → logprob: -8.954341888427734

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04861961305141449
    2. 'in' → logprob: -3.048619508743286
    3. ' ' → logprob: -11.423619270324707
    4. '<|end|>' → logprob: -11.548619270324707
    5. '   ' → logprob: -13.048619270324707
    6. '    ' → logprob: -13.673619270324707
    7. 'y' → logprob: -13.923619270324707
    8. '  ' → logprob: -14.048619270324707
    9. 'n' → logprob: -14.048619270324707
    10. 'import' → logprob: -14.173619270324707

Token 22: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03804619982838631
    2. 'range' → logprob: -3.28804612159729
    3. '(range' → logprob: -12.538045883178711
    4. '	range' → logprob: -14.663045883178711
    5. ' ' → logprob: -15.288045883178711
    6. 'in' → logprob: -16.03804588317871
    7. ' in' → logprob: -16.16304588317871
    8. ' space' → logprob: -16.66304588317871
    9. 'space' → logprob: -17.28804588317871
    10. ' xrange' → logprob: -17.41304588317871

Token 23: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00865109171718359
    2. '(' → logprob: -4.758651256561279
    3. '(m' → logprob: -10.883650779724121
    4. '(s' → logprob: -11.508650779724121
    5. '(range' → logprob: -12.383650779724121
    6. ' (' → logprob: -13.508650779724121
    7. 'n' → logprob: -13.633650779724121
    8. '(x' → logprob: -15.383650779724121
    9. '(
' → logprob: -16.258651733398438
    10. '(y' → logprob: -16.383651733398438

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20219089090824127
    2. ')' → logprob: -1.70219087600708
    3. '+' → logprob: -7.57719087600708
    4. ':' → logprob: -8.702191352844238
    5. '):
' → logprob: -9.952191352844238
    6. ' ):' → logprob: -10.827191352844238
    7. ' )' → logprob: -11.577191352844238
    8. '-' → logprob: -11.827191352844238
    9. ',' → logprob: -12.952191352844238
    10. '   ' → logprob: -12.952191352844238

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02398969791829586
    2. 'row' → logprob: -4.523989677429199
    3. ' row' → logprob: -5.148989677429199
    4. '    ' → logprob: -5.773989677429199
    5. ' ' → logprob: -6.648989677429199
    6. '   ' → logprob: -7.273989677429199
    7. '        ' → logprob: -7.398989677429199
    8. '     ' → logprob: -8.6489896774292
    9. '`' → logprob: -9.0239896774292
    10. '0' → logprob: -9.2739896774292

Token 26: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.47447824478149414
    2. 'row' (adapté à ' row') → logprob: -0.9744782447814941
    3. ' ' → logprob: -9.099477767944336
    4. 'r' → logprob: -9.599477767944336
    5. 'x' → logprob: -10.599477767944336
    6. '       ' → logprob: -10.974477767944336
    7. '   ' → logprob: -11.224477767944336
    8. ' `' → logprob: -11.349477767944336
    9. '0' → logprob: -11.474477767944336
    10. '	row' → logprob: -11.599477767944336

Token 27: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04868444800376892
    2. '.' → logprob: -3.0486843585968018
    3. ' .' → logprob: -9.423684120178223
    4. '.extend' → logprob: -11.673684120178223
    5. '.app' → logprob: -13.173684120178223
    6. 'append' → logprob: -13.298684120178223
    7. ' =' → logprob: -13.673684120178223
    8. '.insert' → logprob: -14.298684120178223
    9. '.ap' → logprob: -14.673684120178223
    10. '.add' → logprob: -14.798684120178223

Token 28: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16904288530349731
    2. '(int' → logprob: -1.9190428256988525
    3. '(input' → logprob: -5.669043064117432
    4. '('' → logprob: -6.169043064117432
    5. '(x' → logprob: -6.794043064117432
    6. '(y' → logprob: -7.044043064117432
    7. '((' → logprob: -8.044042587280273
    8. '(i' → logprob: -8.169042587280273
    9. '(
' → logprob: -8.794042587280273
    10. 'int' → logprob: -9.419042587280273

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23511824011802673
    2. 'int' → logprob: -1.7351182699203491
    3. 'x' → logprob: -3.4851181507110596
    4. 'input' → logprob: -7.485118389129639
    5. '1' → logprob: -7.735118389129639
    6. '(int' → logprob: -7.735118389129639
    7. ''x' → logprob: -8.48511791229248
    8. ''' → logprob: -8.61011791229248
    9. ' int' → logprob: -8.73511791229248
    10. '(x' → logprob: -9.23511791229248

Token 30: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2233183042553719e-05
    2. ')
' → logprob: -12.125012397766113
    3. ' )' → logprob: -12.500012397766113
    4. '   ' → logprob: -12.875012397766113
    5. '))' → logprob: -15.625012397766113
    6. '       ' → logprob: -16.500011444091797
    7. '')' → logprob: -17.375011444091797
    8. '),' → logprob: -17.375011444091797
    9. '`)' → logprob: -17.500011444091797
    10. ')))' → logprob: -17.750011444091797

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1623402088880539
    2. 'A' → logprob: -2.4123401641845703
    3. ' A' → logprob: -3.2873401641845703
    4. ' ' → logprob: -4.66234016418457
    5. ')' → logprob: -5.28734016418457
    6. '    
' → logprob: -5.78734016418457
    7. '<|end|>' → logprob: -5.78734016418457
    8. '    ' → logprob: -7.66234016418457
    9. '  ' → logprob: -8.03734016418457
    10. ' 
' → logprob: -8.41234016418457

Token 32: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.35724392533302307
    2. '   ' → logprob: -1.2322438955307007
    3. ' A' → logprob: -5.10724401473999
    4. '<|end|>' → logprob: -6.48224401473999
    5. ' ' → logprob: -7.73224401473999
    6. '    
' → logprob: -8.232243537902832
    7. '\' → logprob: -9.482243537902832
    8. '\n' → logprob: -9.482243537902832
    9. '	A' → logprob: -9.857243537902832
    10. '  ' → logprob: -9.857243537902832

Token 33: '.append' (ID: 3709)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.513185441493988
    2. '.append' → logprob: -1.0131855010986328
    3. '[x' → logprob: -3.513185501098633
    4. '[-' → logprob: -6.013185501098633
    5. '[y' → logprob: -6.388185501098633
    6. '[row' → logprob: -6.388185501098633
    7. '[A' → logprob: -7.138185501098633
    8. '\[' → logprob: -7.138185501098633
    9. '```' → logprob: -8.388185501098633
    10. '.' → logprob: -9.013185501098633

Token 34: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.00010652327910065651
    2. '(' → logprob: -9.250106811523438
    3. 'row' → logprob: -11.500106811523438
    4. ' row' → logprob: -16.375106811523438
    5. '(rows' → logprob: -16.625106811523438
    6. '[row' → logprob: -17.750106811523438
    7. '(
' → logprob: -18.000106811523438
    8. '(Row' → logprob: -18.500106811523438
    9. '([' → logprob: -18.625106811523438
    10. ' (' → logprob: -18.875106811523438

Token 35: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -14.875
    3. '))' → logprob: -16.75
    4. ' )' → logprob: -17.25
    5. ')`' → logprob: -18.875
    6. '')' → logprob: -19.625
    7. '`)' → logprob: -19.625
    8. '),' → logprob: -20.0
    9. ')

' → logprob: -20.0
    10. ')#' → logprob: -20.25

Token 36: 'Al' (ID: 2348)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04884759709239006
    2. 'n' → logprob: -4.173847675323486
    3. '\n' → logprob: -5.048847675323486
    4. '
' → logprob: -5.048847675323486
    5. '\' → logprob: -5.173847675323486
    6. ' for' → logprob: -5.298847675323486
    7. 'i' → logprob: -6.048847675323486
    8. '#' → logprob: -6.423847675323486
    9. 'A' → logprob: -6.548847675323486
    10. ' 
' → logprob: -6.798847675323486

Token 37: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.527517557144165
    2. 'l' → logprob: -1.652517557144165
    3. '[i' → logprob: -1.652517557144165
    4. '[-' → logprob: -2.402517557144165
    5. 'A' → logprob: -2.527517557144165
    6. '[len' → logprob: -2.527517557144165
    7. '[n' → logprob: -3.152517557144165
    8. 'len' → logprob: -3.277517557144165
    9. '[::-' → logprob: -3.652517557144165
    10. ']' → logprob: -4.777517318725586

Token 38: ' []
' (ID: 8911)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6379112601280212
    2. 'len' → logprob: -1.637911319732666
    3. 'n' → logprob: -2.262911319732666
    4. 'A' → logprob: -2.762911319732666
    5. '[' → logprob: -3.137911319732666
    6. '[len' → logprob: -3.387911319732666
    7. '[n' → logprob: -4.512911319732666
    8. 'en' → logprob: -5.137911319732666
    9. '[]' → logprob: -5.637911319732666
    10. '[-' → logprob: -5.887911319732666

Token 39: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01948663219809532
    2. '[]' → logprob: -5.019486427307129
    3. '=' → logprob: -5.519486427307129
    4. '=[]' → logprob: -6.269486427307129
    5. 'n' → logprob: -6.394486427307129
    6. 'l' → logprob: -6.519486427307129
    7. ' =' → logprob: -6.769486427307129
    8. 'A' → logprob: -7.394486427307129
    9. 'f' → logprob: -8.394486427307129
    10. '.append' → logprob: -8.519486427307129

Token 40: ' i' (ID: 575)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4960227310657501
    2. ' i' → logprob: -0.9960227012634277
    3. 'x' → logprob: -4.371022701263428
    4. 'i' → logprob: -5.121022701263428
    5. ' y' → logprob: -6.746022701263428
    6. ' z' → logprob: -7.371022701263428
    7. ' n' → logprob: -8.371023178100586
    8. ' _' → logprob: -8.496023178100586
    9. ' ' → logprob: -8.996023178100586
    10. ' row' → logprob: -9.121023178100586

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13265866041183472
    2. 'in' → logprob: -2.3826587200164795
    3. 'n' → logprob: -3.5076587200164795
    4. ' ' → logprob: -6.3826584815979
    5. ' n' → logprob: -8.632658958435059
    6. '  ' → logprob: -10.257658958435059
    7. '	in' → logprob: -10.507658958435059
    8. ' i' → logprob: -12.132658958435059
    9. '   ' → logprob: -12.382658958435059
    10. 'i' → logprob: -12.757658958435059

Token 42: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.11284306645393372
    2. 'range' → logprob: -2.2378430366516113
    3. 'A' → logprob: -12.23784351348877
    4. ' A' → logprob: -12.36284351348877
    5. ' ' → logprob: -12.48784351348877
    6. 'r' → logprob: -13.11284351348877
    7. ' ran' → logprob: -13.86284351348877
    8. ' r' → logprob: -14.11284351348877
    9. '	range' → logprob: -14.48784351348877
    10. '  ' → logprob: -14.61284351348877

Token 43: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0700388103723526
    2. '(' → logprob: -2.6950387954711914
    3. ' (' → logprob: -9.320038795471191
    4. '(s' → logprob: -12.195038795471191
    5. '(len' → logprob: -12.570038795471191
    6. ' ' → logprob: -14.195038795471191
    7. '(range' → logprob: -14.195038795471191
    8. '(
' → logprob: -14.695038795471191
    9. '()' → logprob: -14.695038795471191
    10. ' n' → logprob: -14.820038795471191

Token 44: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009655749425292015
    2. '+' → logprob: -5.509655952453613
    3. ')' → logprob: -5.634655952453613
    4. '):
' → logprob: -6.884655952453613
    5. '-' → logprob: -7.134655952453613
    6. ' ):' → logprob: -9.634655952453613
    7. '*' → logprob: -10.259655952453613
    8. ':' → logprob: -11.134655952453613
    9. '   ' → logprob: -11.509655952453613
    10. '**' → logprob: -11.634655952453613

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016303133452311158
    2. ' ' → logprob: -6.5016303062438965
    3. '2' → logprob: -9.876630783081055
    4. 'i' → logprob: -10.626630783081055
    5. '0' → logprob: -10.876630783081055
    6. '5' → logprob: -11.751630783081055
    7. '3' → logprob: -12.501630783081055
    8. '10' → logprob: -12.501630783081055
    9. 'n' → logprob: -12.626630783081055
    10. '-' → logprob: -12.876630783081055

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0035333207342773676
    2. ')' → logprob: -5.878533363342285
    3. ' ):' → logprob: -7.503533363342285
    4. '):
' → logprob: -8.878533363342285
    5. ':' → logprob: -11.003533363342285
    6. ' )' → logprob: -12.003533363342285
    7. '[' → logprob: -12.253533363342285
    8. '-' → logprob: -13.253533363342285
    9. '):
' → logprob: -13.753533363342285
    10. ',' → logprob: -13.878533363342285

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02619834803044796
    2. '    ' → logprob: -3.776198387145996
    3. '    
' → logprob: -6.526198387145996
    4. ' ' → logprob: -7.651198387145996
    5. ' 
' → logprob: -8.651198387145996
    6. ' Al' → logprob: -8.901198387145996
    7. '  ' → logprob: -9.276198387145996
    8. '
' → logprob: -9.276198387145996
    9. '<|end|>' → logprob: -9.276198387145996
    10. ' A' → logprob: -9.651198387145996

Token 48: ' Al' (ID: 1667)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' (adapté à ' Al') → logprob: -0.8741071224212646
    2. ' Al' → logprob: -1.2491071224212646
    3. 'A' → logprob: -1.3741071224212646
    4. ' A' → logprob: -3.8741071224212646
    5. '0' → logprob: -4.874107360839844
    6. ' ' → logprob: -5.124107360839844
    7. 'l' → logprob: -5.874107360839844
    8. '   ' → logprob: -7.124107360839844
    9. '[' → logprob: -7.249107360839844
    10. 'i' → logprob: -7.624107360839844

Token 49: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3133416175842285
    2. '.' → logprob: -1.3133416175842285
    3. ' .' → logprob: -10.68834114074707
    4. 'append' → logprob: -10.81334114074707
    5. '.app' → logprob: -11.68834114074707
    6. '.ap' → logprob: -12.31334114074707
    7. 'n' → logprob: -12.31334114074707
    8. 'p' → logprob: -12.43834114074707
    9. '.push' → logprob: -13.06334114074707
    10. '.p' → logprob: -13.06334114074707

Token 50: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.6992736458778381
    2. '(' → logprob: -1.3242735862731934
    3. '([]' → logprob: -1.4492735862731934
    4. '[' → logprob: -6.949273586273193
    5. '(A' → logprob: -7.449273586273193
    6. '[]' → logprob: -8.199274063110352
    7. '0' → logprob: -9.199274063110352
    8. '([])
' → logprob: -9.949274063110352
    9. ' ' → logprob: -10.199274063110352
    10. '(False' → logprob: -10.449274063110352

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009515985148027539
    2. ' ' → logprob: -7.125951766967773
    3. ']' → logprob: -10.125951766967773
    4. '1' → logprob: -10.625951766967773
    5. 'False' → logprob: -10.625951766967773
    6. '[' → logprob: -11.125951766967773
    7. '-' → logprob: -11.625951766967773
    8. 'i' → logprob: -11.875951766967773
    9. '[]' → logprob: -12.000951766967773
    10. ' ]' → logprob: -12.750951766967773

Token 52: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.29454413056373596
    2. ']*' → logprob: -1.4195441007614136
    3. ']*(' → logprob: -4.919544219970703
    4. ' for' → logprob: -5.294544219970703
    5. 'for' → logprob: -7.544544219970703
    6. ' ]' → logprob: -8.419544219970703
    7. '])' → logprob: -8.544544219970703
    8. '0' → logprob: -11.169544219970703
    9. ']+' → logprob: -12.294544219970703
    10. '	for' → logprob: -12.669544219970703

Token 53: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07082939893007278
    2. 'i' → logprob: -2.695829391479492
    3. ' n' → logprob: -7.320829391479492
    4. ' i' → logprob: -9.195829391479492
    5. '(n' → logprob: -9.695829391479492
    6. ' ' → logprob: -11.195829391479492
    7. '(i' → logprob: -11.320829391479492
    8. '(' → logprob: -12.070829391479492
    9. '1' → logprob: -12.070829391479492
    10. '2' → logprob: -12.070829391479492

Token 54: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009637462790124118
    2. '))' → logprob: -7.5009636878967285
    3. '+i' → logprob: -8.625964164733887
    4. '-' → logprob: -9.625964164733887
    5. '-i' → logprob: -9.875964164733887
    6. ' +' → logprob: -10.000964164733887
    7. ')' → logprob: -10.250964164733887
    8. '1' → logprob: -11.875964164733887
    9. '+
' → logprob: -11.875964164733887
    10. ')))' → logprob: -11.875964164733887

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011784763046307489
    2. ' ' → logprob: -10.125118255615234
    3. '2' → logprob: -10.250118255615234
    4. 'i' → logprob: -10.625118255615234
    5. '0' → logprob: -12.125118255615234
    6. '   ' → logprob: -13.375118255615234
    7. '```' → logprob: -13.500118255615234
    8. '-' → logprob: -13.875118255615234
    9. '+' → logprob: -13.875118255615234
    10. ')' → logprob: -13.937618255615234

Token 56: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.38687992095947266
    2. ')' → logprob: -1.1368799209594727
    3. ')))' → logprob: -12.011879920959473
    4. ' ))' → logprob: -14.261879920959473
    5. ')
' → logprob: -14.386879920959473
    6. '))
' → logprob: -14.386879920959473
    7. ' )' → logprob: -14.886879920959473
    8. ''))' → logprob: -15.386879920959473
    9. '])' → logprob: -16.136878967285156
    10. '),' → logprob: -16.511878967285156

Token 57: 'Ar' (ID: 2326)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0060198307037354
    2. 'for' → logprob: -1.5060198307037354
    3. '
' → logprob: -2.3810198307037354
    4. 'f' → logprob: -2.7560198307037354
    5. 'i' → logprob: -2.7560198307037354
    6. '#' → logprob: -3.2560198307037354
    7. ' 
' → logprob: -3.3810198307037354
    8. '' → logprob: -3.6310198307037354
    9. '\' → logprob: -3.7560198307037354
    10. ' ' → logprob: -4.131019592285156

Token 58: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0701379776000977
    2. '=' → logprob: -1.1951379776000977
    3. ' =' → logprob: -1.9451379776000977
    4. 'l' → logprob: -2.0701379776000977
    5. '.append' → logprob: -3.4451379776000977
    6. '=[]' → logprob: -3.8201379776000977
    7. 'ight' → logprob: -4.570137977600098
    8. '+' → logprob: -5.070137977600098
    9. '[]' → logprob: -5.445137977600098
    10. 'e' → logprob: -6.195137977600098

Token 59: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12422649562358856
    2. ' [' → logprob: -2.2492265701293945
    3. '[[' → logprob: -4.9992265701293945
    4. '[]' → logprob: -5.6242265701293945
    5. ' [[' → logprob: -7.6242265701293945
    6. '[n' → logprob: -8.749226570129395
    7. ' []' → logprob: -8.874226570129395
    8. '0' → logprob: -9.749226570129395
    9. ' [[]' → logprob: -10.499226570129395
    10. '[A' → logprob: -10.749226570129395

Token 60: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5048530030981055e-06
    2. ' for' → logprob: -13.500001907348633
    3. '[' → logprob: -16.750001907348633
    4. 'or' → logprob: -19.625001907348633
    5. '	for' → logprob: -19.625001907348633
    6. '[]' → logprob: -19.875001907348633
    7. '.for' → logprob: -20.500001907348633
    8. 'For' → logprob: -21.250001907348633
    9. '```' → logprob: -22.000001907348633
    10. '[
' → logprob: -22.250001907348633

Token 61: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11400430649518967
    2. 'i' → logprob: -2.239004373550415
    3. ' n' → logprob: -7.239004135131836
    4. 'n' → logprob: -8.614004135131836
    5. ' j' → logprob: -9.239004135131836
    6. ' y' → logprob: -10.114004135131836
    7. ' range' → logprob: -10.364004135131836
    8. 'range' → logprob: -10.489004135131836
    9. ' ' → logprob: -10.989004135131836
    10. 'j' → logprob: -11.114004135131836

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016057128086686134
    2. 'in' → logprob: -4.141057014465332
    3. 'n' → logprob: -11.516057014465332
    4. 'range' → logprob: -11.516057014465332
    5. ' ' → logprob: -13.516057014465332
    6. '1' → logprob: -15.266057014465332
    7. ' range' → logprob: -15.391057014465332
    8. '```' → logprob: -15.391057014465332
    9. 's' → logprob: -16.01605796813965
    10. 'int' → logprob: -16.14105796813965

Token 63: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47408348321914673
    2. 'range' → logprob: -0.9740834832191467
    3. '(range' → logprob: -12.59908390045166
    4. ' ' → logprob: -14.34908390045166
    5. 'in' → logprob: -14.47408390045166
    6. 'n' → logprob: -14.59908390045166
    7. 'ran' → logprob: -15.09908390045166
    8. ' in' → logprob: -15.09908390045166
    9. '	range' → logprob: -15.59908390045166
    10. '   ' → logprob: -15.97408390045166

Token 64: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.009307271800935268
    2. ' (' → logprob: -4.884307384490967
    3. '(' → logprob: -6.384307384490967
    4. '(range' → logprob: -12.009306907653809
    5. 'n' → logprob: -13.009306907653809
    6. ' range' → logprob: -14.384306907653809
    7. 'range' → logprob: -14.634306907653809
    8. '((' → logprob: -14.884306907653809
    9. '(
' → logprob: -14.884306907653809
    10. '(s' → logprob: -15.134306907653809

Token 65: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.961759259458631e-06
    2. ' +' → logprob: -13.000004768371582
    3. ')' → logprob: -14.125004768371582
    4. '+)' → logprob: -14.375004768371582
    5. '+
' → logprob: -14.750004768371582
    6. '+n' → logprob: -15.375004768371582
    7. 'n' → logprob: -16.1250057220459
    8. '(' → logprob: -16.6250057220459
    9. '1' → logprob: -16.6875057220459
    10. ')+' → logprob: -16.8125057220459

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012689977302215993
    2. '+' → logprob: -9.000126838684082
    3. ' ' → logprob: -12.875126838684082
    4. ')' → logprob: -15.250126838684082
    5. '2' → logprob: -15.375126838684082
    6. '```' → logprob: -15.875126838684082
    7. '   ' → logprob: -16.3751277923584
    8. 'n' → logprob: -16.5001277923584
    9. '(' → logprob: -17.5001277923584
    10. '+)' → logprob: -17.6251277923584

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007084991782903671
    2. '):
' → logprob: -5.507084846496582
    3. ')' → logprob: -5.882084846496582
    4. ':' → logprob: -9.257084846496582
    5. ' ):' → logprob: -9.507084846496582
    6. '+' → logprob: -10.507084846496582
    7. '):
' → logprob: -12.757084846496582
    8. ' ' → logprob: -13.007084846496582
    9. '):

' → logprob: -13.257084846496582
    10. ' )' → logprob: -13.507084846496582

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004413859453052282
    2. 'Ar' → logprob: -5.504414081573486
    3. ' Ar' → logprob: -8.129413604736328
    4. ' ' → logprob: -11.754413604736328
    5. '  ' → logprob: -11.754413604736328
    6. '[' → logprob: -11.879413604736328
    7. '    ' → logprob: -12.129413604736328
    8. 'ar' → logprob: -12.379413604736328
    9. '   ' → logprob: -12.879413604736328
    10. '       ' → logprob: -13.879413604736328

Token 69: ' Ar' (ID: 1754)
  Prédit: 'Ar'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' (adapté à ' Ar') → logprob: -0.0017487229779362679
    2. '[' → logprob: -6.376748561859131
    3. ' Ar' → logprob: -10.376749038696289
    4. 'ar' → logprob: -12.001749038696289
    5. 'Al' → logprob: -12.626749038696289
    6. '   ' → logprob: -13.251749038696289
    7. 'r' → logprob: -13.501749038696289
    8. '[]' → logprob: -14.126749038696289
    9. 'append' → logprob: -15.001749038696289
    10. ' ' → logprob: -15.626749038696289

Token 70: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00010878815373871475
    2. '.' → logprob: -9.25010871887207
    3. ' .' → logprob: -11.37510871887207
    4. 'append' → logprob: -14.12510871887207
    5. '.app' → logprob: -15.25010871887207
    6. '.extend' → logprob: -15.50010871887207
    7. '.ap' → logprob: -17.25010871887207
    8. 'appen' → logprob: -18.37510871887207
    9. '.Append' → logprob: -18.50010871887207
    10. '   ' → logprob: -19.00010871887207

Token 71: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0006105714710429311
    2. '[' → logprob: -7.6256103515625
    3. '(' → logprob: -9.5006103515625
    4. ' ([' → logprob: -10.0006103515625
    5. ' [' → logprob: -13.2506103515625
    6. '([]' → logprob: -15.3756103515625
    7. ' ' → logprob: -16.3756103515625
    8. '(([' → logprob: -16.5006103515625
    9. '((' → logprob: -16.7506103515625
    10. ' (' → logprob: -16.7506103515625

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6943050026893616
    2. '[' → logprob: -0.6943050026893616
    3. ' [' → logprob: -6.944304943084717
    4. ' ' → logprob: -8.819305419921875
    5. '(' → logprob: -10.569305419921875
    6. '[n' → logprob: -12.194305419921875
    7. '   ' → logprob: -12.819305419921875
    8. '```' → logprob: -13.069305419921875
    9. '([' → logprob: -13.194305419921875
    10. '1' → logprob: -13.694305419921875

Token 73: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.0006310671451501548
    2. ']' → logprob: -7.625630855560303
    3. ']*' → logprob: -8.875631332397461
    4. '*(' → logprob: -12.750631332397461
    5. ' ]' → logprob: -15.500631332397461
    6. '(n' → logprob: -16.25063133239746
    7. '](' → logprob: -16.62563133239746
    8. ')*(' → logprob: -17.50063133239746
    9. ']+' → logprob: -17.87563133239746
    10. '   ' → logprob: -18.37563133239746

Token 74: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00017195509281009436
    2. '(n' → logprob: -9.375171661376953
    3. ' n' → logprob: -9.375171661376953
    4. '   ' → logprob: -13.750171661376953
    5. ' ' → logprob: -15.250171661376953
    6. '1' → logprob: -15.375171661376953
    7. '	n' → logprob: -15.625171661376953
    8. ')n' → logprob: -15.625171661376953
    9. '2' → logprob: -16.000171661376953
    10. ' (' → logprob: -16.500171661376953

Token 75: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.463036435074173e-05
    2. ' +' → logprob: -11.000024795532227
    3. '1' → logprob: -12.750024795532227
    4. '+)' → logprob: -14.125024795532227
    5. '-' → logprob: -14.250024795532227
    6. 'n' → logprob: -14.375024795532227
    7. '+n' → logprob: -14.562524795532227
    8. '   ' → logprob: -14.687524795532227
    9. ')' → logprob: -14.687524795532227
    10. '+
' → logprob: -14.875024795532227

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.941161776310764e-05
    2. ' ' → logprob: -10.500039100646973
    3. '+' → logprob: -11.750039100646973
    4. ')' → logprob: -13.500039100646973
    5. '   ' → logprob: -13.875039100646973
    6. '```' → logprob: -14.625039100646973
    7. '0' → logprob: -15.437539100646973
    8. 'n' → logprob: -15.937539100646973
    9. '-' → logprob: -16.12504005432129
    10. '`' → logprob: -16.43754005432129

Token 77: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.048603273928165436
    2. ')' → logprob: -3.0486032962799072
    3. '))
' → logprob: -11.923603057861328
    4. ')))' → logprob: -12.423603057861328
    5. ' ))' → logprob: -12.923603057861328
    6. '   ' → logprob: -13.798603057861328
    7. ' )' → logprob: -15.423603057861328
    8. '])' → logprob: -15.423603057861328
    9. ''))' → logprob: -15.798603057861328
    10. ')
' → logprob: -15.798603057861328

Token 78: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1477605104446411
    2. 'f' → logprob: -2.2727603912353516
    3. 'n' → logprob: -4.397760391235352
    4. '#' → logprob: -4.897760391235352
    5. 'i' → logprob: -5.022760391235352
    6. '
' → logprob: -6.522760391235352
    7. ' for' → logprob: -6.772760391235352
    8. 'm' → logprob: -6.772760391235352
    9. 't' → logprob: -7.397760391235352
    10. 'd' → logprob: -7.522760391235352

Token 79: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01428620982915163
    2. ' x' → logprob: -4.389286041259766
    3. ' ' → logprob: -6.639286041259766
    4. 'i' → logprob: -7.889286041259766
    5. 'x' → logprob: -10.389286041259766
    6. ' ' → logprob: -10.889286041259766
    7. ' _' → logprob: -11.139286041259766
    8. ' space' → logprob: -12.014286041259766
    9. ' y' → logprob: -12.139286041259766
    10. '	i' → logprob: -12.389286041259766

Token 80: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015379206277430058
    2. 'in' → logprob: -4.390379428863525
    3. ' ' → logprob: -5.890379428863525
    4. '	in' → logprob: -11.015378952026367
    5. ')' → logprob: -11.515378952026367
    6. 'space' → logprob: -11.640378952026367
    7. '   ' → logprob: -11.765378952026367
    8. '  ' → logprob: -11.765378952026367
    9. ' i' → logprob: -11.890378952026367
    10. '(' → logprob: -11.890378952026367

Token 81: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04863244667649269
    2. ' range' → logprob: -3.0486323833465576
    3. '(range' → logprob: -10.048632621765137
    4. '(' → logprob: -13.923632621765137
    5. ' ' → logprob: -15.048632621765137
    6. ')' → logprob: -15.548632621765137
    7. '	range' → logprob: -15.548632621765137
    8. 'n' → logprob: -16.79863166809082
    9. 'ran' → logprob: -17.04863166809082
    10. 'r' → logprob: -17.04863166809082

Token 82: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21253588795661926
    2. '(n' → logprob: -1.7125358581542969
    3. ' (' → logprob: -4.587535858154297
    4. ' range' → logprob: -7.712535858154297
    5. '(range' → logprob: -8.837535858154297
    6. ' n' → logprob: -9.212535858154297
    7. '(
' → logprob: -9.337535858154297
    8. ')' → logprob: -10.337535858154297
    9. ' ' → logprob: -10.462535858154297
    10. 'range' → logprob: -10.962535858154297

Token 83: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1445063203573227
    2. '):' → logprob: -2.0195062160491943
    3. '):
' → logprob: -6.519506454467773
    4. ')' → logprob: -8.644506454467773
    5. ' +' → logprob: -9.519506454467773
    6. '-' → logprob: -10.519506454467773
    7. '1' → logprob: -11.144506454467773
    8. ' ):' → logprob: -11.269506454467773
    9. 'n' → logprob: -11.394506454467773
    10. '+n' → logprob: -12.019506454467773

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18455755710601807
    2. ' for' → logprob: -1.809557557106018
    3. 'for' → logprob: -5.5595574378967285
    4. '<|end|>' → logprob: -7.8095574378967285
    5. ' range' → logprob: -7.9345574378967285
    6. 'range' → logprob: -9.684557914733887
    7. '	for' → logprob: -10.184557914733887
    8. ' ' → logprob: -10.684557914733887
    9. '   ' → logprob: -11.309557914733887
    10. ' in' → logprob: -11.684557914733887

Token 85: ' x' (ID: 1215)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1381566971540451
    2. ' for' → logprob: -2.1381566524505615
    3. '   ' → logprob: -4.513156890869141
    4. 'j' → logprob: -9.26315689086914
    5. ' j' → logprob: -10.13815689086914
    6. ' ' → logprob: -10.13815689086914
    7. '	for' → logprob: -12.13815689086914
    8. 'range' → logprob: -12.38815689086914
    9. '    ' → logprob: -12.63815689086914
    10. 'row' → logprob: -12.88815689086914

Token 86: ' =' (ID: 314)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.40460336208343506
    2. '=' → logprob: -2.1546034812927246
    3. ' =' → logprob: -2.2796034812927246
    4. 'in' → logprob: -3.5296034812927246
    5. ' ' → logprob: -3.7796034812927246
    6. '   ' → logprob: -4.279603481292725
    7. '+' → logprob: -4.529603481292725
    8. '[' → logprob: -5.029603481292725
    9. 'for' → logprob: -5.029603481292725
    10. 'n' → logprob: -5.154603481292725

Token 87: ' [' (ID: 723)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1673983931541443
    2. '0' → logprob: -2.292398452758789
    3. 'i' → logprob: -3.042398452758789
    4. 'input' → logprob: -5.917398452758789
    5. ' int' → logprob: -7.042398452758789
    6. 'n' → logprob: -7.042398452758789
    7. ' i' → logprob: -8.542398452758789
    8. '[int' → logprob: -8.792398452758789
    9. 'A' → logprob: -9.292398452758789
    10. ' ' → logprob: -9.417398452758789

Token 88: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0006749047315679491
    2. '0' → logprob: -7.875674724578857
    3. 'i' → logprob: -9.625675201416016
    4. ']' → logprob: -10.125675201416016
    5. '1' → logprob: -10.125675201416016
    6. 'float' → logprob: -10.125675201416016
    7. '*' → logprob: -10.625675201416016
    8. '(int' → logprob: -10.875675201416016
    9. 'in' → logprob: -11.375675201416016
    10. ']int' → logprob: -11.500675201416016

Token 89: '(xx' (ID: 161745)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5845662951469421
    2. '(input' → logprob: -0.8345662951469421
    3. '(x' → logprob: -5.084566116333008
    4. '(i' → logprob: -6.584566116333008
    5. '()]' → logprob: -7.459566116333008
    6. '(s' → logprob: -9.084566116333008
    7. '()' → logprob: -9.584566116333008
    8. '(
' → logprob: -9.709566116333008
    9. ']' → logprob: -10.334566116333008
    10. '(a' → logprob: -10.334566116333008

Token 90: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008090975694358349
    2. '()' → logprob: -5.133090972900391
    3. '(' → logprob: -7.008090972900391
    4. '())' → logprob: -7.508090972900391
    5. '(x' → logprob: -8.50809097290039
    6. '(input' → logprob: -8.75809097290039
    7. 'input' → logprob: -9.00809097290039
    8. '(i' → logprob: -9.63309097290039
    9. ')]' → logprob: -9.88309097290039
    10. ' )' → logprob: -10.00809097290039

Token 91: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9103527665138245
    2. 'for' → logprob: -1.0353527069091797
    3. '()' → logprob: -1.5353527069091797
    4. ')' → logprob: -4.16035270690918
    5. '(' → logprob: -5.16035270690918
    6. '(x' → logprob: -5.66035270690918
    7. ']' → logprob: -7.16035270690918
    8. 'input' → logprob: -7.91035270690918
    9. ' ' → logprob: -8.53535270690918
    10. 'in' → logprob: -8.66035270690918

Token 92: ' xx' (ID: 44242)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.02977525070309639
    2. 'input' → logprob: -3.5297751426696777
    3. '(input' → logprob: -10.654775619506836
    4. '=input' → logprob: -14.029775619506836
    5. ' ' → logprob: -16.029775619506836
    6. '	input' → logprob: -16.154775619506836
    7. ' ' → logprob: -16.529775619506836
    8. ',input' → logprob: -16.779775619506836
    9. '<input' → logprob: -17.279775619506836
    10. '_input' → logprob: -17.654775619506836

Token 93: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.861462414264679
    2. ' in' → logprob: -1.1114623546600342
    3. '(input' → logprob: -1.8614623546600342
    4. 'input' → logprob: -2.611462354660034
    5. '=input' → logprob: -4.236462593078613
    6. '(' → logprob: -6.486462593078613
    7. ' ' → logprob: -6.611462593078613
    8. 'in' → logprob: -6.736462593078613
    9. ',input' → logprob: -7.861462593078613
    10. '	input' → logprob: -8.611462593078613

Token 94: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006716674659401178
    2. ' input' → logprob: -5.006716728210449
    3. '(input' → logprob: -13.75671672821045
    4. '=input' → logprob: -16.631715774536133
    5. '<input' → logprob: -16.756715774536133
    6. ' ' → logprob: -16.881715774536133
    7. 'range' → logprob: -17.131715774536133
    8. '	input' → logprob: -17.631715774536133
    9. 'in' → logprob: -17.756715774536133
    10. 'output' → logprob: -17.881715774536133

Token 95: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.8961017202818766e-05
    2. '()' → logprob: -9.750059127807617
    3. ' ().' → logprob: -15.125059127807617
    4. '()]' → logprob: -15.250059127807617
    5. '(' → logprob: -16.500059127807617
    6. '()].' → logprob: -18.125059127807617
    7. '())' → logprob: -18.625059127807617
    8. '()
' → logprob: -19.000059127807617
    9. '.split' → logprob: -20.000059127807617
    10. '()[' → logprob: -20.125059127807617

Token 96: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0182228721678257
    2. 'strip' → logprob: -4.018222808837891
    3. 'rstrip' → logprob: -9.64322280883789
    4. ' split' → logprob: -11.89322280883789
    5. 'spl' → logprob: -14.14322280883789
    6. ' strip' → logprob: -14.89322280883789
    7. '(split' → logprob: -16.14322280883789
    8. 's' → logprob: -16.51822280883789
    9. 'sp' → logprob: -18.51822280883789
    10. 'plit' → logprob: -18.76822280883789

Token 97: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00010711929644457996
    2. '()' → logprob: -9.500106811523438
    3. '('' → logprob: -10.750106811523438
    4. '(' → logprob: -11.625106811523438
    5. '())' → logprob: -13.625106811523438
    6. '()]
' → logprob: -14.750106811523438
    7. '("' → logprob: -16.375106811523438
    8. '()}' → logprob: -16.750106811523438
    9. '()].' → logprob: -17.000106811523438
    10. '()],' → logprob: -17.000106811523438

Token 98: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07019151002168655
    2. ' for' → logprob: -2.6951916217803955
    3. '   ' → logprob: -8.570191383361816
    4. '<|end|>' → logprob: -10.320191383361816
    5. '	for' → logprob: -11.195191383361816
    6. ' ' → logprob: -11.945191383361816
    7. 'A' → logprob: -12.945191383361816
    8. 'if' → logprob: -13.070191383361816
    9. 'Al' → logprob: -13.945191383361816
    10. 'i' → logprob: -13.945191383361816

Token 100: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5486099123954773
    2. ' y' → logprob: -0.9236099123954773
    3. 'j' → logprob: -4.423609733581543
    4. ' range' → logprob: -4.923609733581543
    5. ' ' → logprob: -5.548609733581543
    6. 'y' → logprob: -6.423609733581543
    7. 'range' → logprob: -8.173609733581543
    8. '  ' → logprob: -10.298609733581543
    9. ' xrange' → logprob: -11.798609733581543
    10. ' x' → logprob: -11.923609733581543

Token 101: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011718208901584148
    2. 'in' → logprob: -5.011718273162842
    3. ' ' → logprob: -5.386718273162842
    4. '<|end|>' → logprob: -7.886718273162842
    5. '  ' → logprob: -11.511717796325684
    6. '<|end|>' → logprob: -12.511717796325684
    7. '	in' → logprob: -12.636717796325684
    8. '0' → logprob: -12.886717796325684
    9. ' range' → logprob: -12.886717796325684
    10. 'n' → logprob: -13.136717796325684

Token 102: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16024962067604065
    2. 'range' → logprob: -1.9102495908737183
    3. '(range' → logprob: -10.660249710083008
    4. ' xrange' → logprob: -13.660249710083008
    5. '	range' → logprob: -14.660249710083008
    6. ' ' → logprob: -15.660249710083008
    7. '(' → logprob: -17.660249710083008
    8. 'x' → logprob: -17.910249710083008
    9. ' x' → logprob: -18.160249710083008
    10. '.range' → logprob: -18.535249710083008

Token 103: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004218720830976963
    2. '(' → logprob: -5.504218578338623
    3. ' (' → logprob: -9.004219055175781
    4. '(range' → logprob: -11.754219055175781
    5. '(s' → logprob: -12.879219055175781
    6. '(
' → logprob: -13.379219055175781
    7. ')' → logprob: -13.379219055175781
    8. '(x' → logprob: -13.379219055175781
    9. ' range' → logprob: -14.504219055175781
    10. ' n' → logprob: -14.629219055175781

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01872597262263298
    2. ')' → logprob: -5.018725872039795
    3. '):
' → logprob: -5.143725872039795
    4. '+' → logprob: -5.143725872039795
    5. '   ' → logprob: -9.143726348876953
    6. ':' → logprob: -10.018726348876953
    7. ' ):' → logprob: -10.018726348876953
    8. ']:' → logprob: -10.643726348876953
    9. '       ' → logprob: -11.018726348876953
    10. '):
' → logprob: -12.393726348876953

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008816883200779557
    2. '<|end|>' → logprob: -8.000882148742676
    3. ' ' → logprob: -8.500882148742676
    4. '    ' → logprob: -9.125882148742676
    5. '   ' → logprob: -9.250882148742676
    6. '      ' → logprob: -11.125882148742676
    7. '        
' → logprob: -11.125882148742676
    8. ',' → logprob: -11.125882148742676
    9. ' ' → logprob: -11.125882148742676
    10. ' A' → logprob: -11.625882148742676

Token 106: ' if' (ID: 538)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05519741028547287
    2. '       ' → logprob: -3.1801974773406982
    3. ' A' → logprob: -4.555197238922119
    4. '   ' → logprob: -7.055197238922119
    5. '           ' → logprob: -7.555197238922119
    6. 'Al' → logprob: -9.805197715759277
    7. 'if' (adapté à ' if') → logprob: -9.930197715759277
    8. '```' → logprob: -10.555197715759277
    9. 'x' → logprob: -10.930197715759277
    10. ' if' → logprob: -11.055197715759277

Token 107: ' i' (ID: 575)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.014177384786307812
    2. 'x' → logprob: -4.264177322387695
    3. ' ' → logprob: -11.639177322387695
    4. '(x' → logprob: -13.514177322387695
    5. ' ' → logprob: -13.764177322387695
    6. '	x' → logprob: -14.389177322387695
    7. ' (' → logprob: -14.514177322387695
    8. ' A' → logprob: -14.514177322387695
    9. '<|end|>' → logprob: -15.389177322387695
    10. '(' → logprob: -15.639177322387695

Token 108: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5049305558204651
    2. '==' → logprob: -1.3799304962158203
    3. ' >' → logprob: -2.7549304962158203
    4. ' !=' → logprob: -3.1299304962158203
    5. '>' → logprob: -4.50493049621582
    6. '!=' → logprob: -4.87993049621582
    7. ' >=' → logprob: -5.25493049621582
    8. ' ' → logprob: -5.37993049621582
    9. ' <=' → logprob: -5.87993049621582
    10. '+' → logprob: -6.12993049621582

Token 109: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05018121376633644
    2. 'n' → logprob: -3.5501811504364014
    3. ' j' → logprob: -4.0501813888549805
    4. ' n' → logprob: -6.8001813888549805
    5. '=' → logprob: -7.1751813888549805
    6. '=j' → logprob: -7.8001813888549805
    7. 'x' → logprob: -8.80018138885498
    8. ' ' → logprob: -9.30018138885498
    9. '>' → logprob: -9.42518138885498
    10. '	j' → logprob: -9.92518138885498

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7186064124107361
    2. ' and' → logprob: -0.7186064124107361
    3. 'and' → logprob: -4.593606472015381
    4. '           ' → logprob: -4.968606472015381
    5. ':
' → logprob: -5.968606472015381
    6. ' :' → logprob: -5.968606472015381
    7. '       ' → logprob: -6.468606472015381
    8. '   ' → logprob: -8.093605995178223
    9. '==' → logprob: -8.218605995178223
    10. ' or' → logprob: -8.343605995178223

Token 111: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008311899146065116
    2. '       ' → logprob: -8.625831604003906
    3. '0' → logprob: -9.125831604003906
    4. '               ' → logprob: -9.375831604003906
    5. '            
' → logprob: -9.750831604003906
    6. '<|end|>' → logprob: -9.750831604003906
    7. ':' → logprob: -9.875831604003906
    8. ' and' → logprob: -10.000831604003906
    9. '<|end|>' → logprob: -10.250831604003906
    10. '	       ' → logprob: -10.625831604003906

Token 112: ' A' (ID: 355)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.4752792418003082
    2. 'A' (adapté à ' A') → logprob: -1.4752792119979858
    3. 'Ar' → logprob: -2.6002793312072754
    4. ' Al' → logprob: -3.1002793312072754
    5. ' A' → logprob: -4.350279331207275
    6. '           ' → logprob: -4.850279331207275
    7. ' Ar' → logprob: -5.475279331207275
    8. 'if' → logprob: -6.225279331207275
    9. '   ' → logprob: -6.600279331207275
    10. ' if' → logprob: -7.225279331207275

Token 113: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006143859936855733
    2. '[' → logprob: -8.250614166259766
    3. '[I' → logprob: -8.875614166259766
    4. '[j' → logprob: -9.125614166259766
    5. '[x' → logprob: -9.500614166259766
    6. '[A' → logprob: -11.000614166259766
    7. ' [' → logprob: -12.625614166259766
    8. '][' → logprob: -13.125614166259766
    9. '[s' → logprob: -13.750614166259766
    10. '[int' → logprob: -14.250614166259766

Token 114: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0029659343417733908
    2. ']' → logprob: -5.877965927124023
    3. '[i' → logprob: -9.627965927124023
    4. ' ][' → logprob: -10.377965927124023
    5. '[' → logprob: -10.502965927124023
    6. '[j' → logprob: -10.877965927124023
    7. ']][' → logprob: -12.502965927124023
    8. '"][' → logprob: -12.752965927124023
    9. ']
' → logprob: -13.502965927124023
    10. ''][' → logprob: -13.627965927124023

Token 115: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.4974866644479334e-05
    2. 'x' → logprob: -11.250015258789062
    3. ' j' → logprob: -13.750015258789062
    4. 'y' → logprob: -14.625015258789062
    5. ']' → logprob: -15.250015258789062
    6. ' ' → logprob: -16.750015258789062
    7. '	j' → logprob: -16.750015258789062
    8. 'i' → logprob: -16.750015258789062
    9. '   ' → logprob: -16.750015258789062
    10. '[j' → logprob: -18.125015258789062

Token 116: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.036056455224752426
    2. ' ]' → logprob: -3.6610565185546875
    3. ']=' → logprob: -5.1610565185546875
    4. ' =' → logprob: -5.9110565185546875
    5. '=' → logprob: -6.7860565185546875
    6. '[' → logprob: -9.911056518554688
    7. ']+=' → logprob: -10.411056518554688
    8. ' ' → logprob: -11.036056518554688
    9. ')' → logprob: -11.911056518554688
    10. ']==' → logprob: -12.286056518554688

Token 117: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14270532131195068
    2. ' =' → logprob: -2.0177054405212402
    3. '+=' → logprob: -11.517704963684082
    4. '=int' → logprob: -11.767704963684082
    5. ' ' → logprob: -12.642704963684082
    6. ' +=' → logprob: -12.642704963684082
    7. ',' → logprob: -13.892704963684082
    8. '>' → logprob: -14.517704963684082
    9. '[' → logprob: -14.517704963684082
    10. ')' → logprob: -14.767704963684082

Token 118: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005935432855039835
    2. ' x' → logprob: -5.2559356689453125
    3. '1' → logprob: -8.005935668945312
    4. '0' → logprob: -8.505935668945312
    5. 'int' → logprob: -9.380935668945312
    6. ' ' → logprob: -10.630935668945312
    7. '-' → logprob: -11.130935668945312
    8. 'max' → logprob: -11.380935668945312
    9. '   ' → logprob: -12.380935668945312
    10. ' -' → logprob: -12.380935668945312

Token 119: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.003184125293046236
    2. '[' → logprob: -5.7531843185424805
    3. ' [' → logprob: -12.37818431854248
    4. '[s' → logprob: -14.50318431854248
    5. '[
' → logprob: -14.75318431854248
    6. '[i' → logprob: -15.00318431854248
    7. '[y' → logprob: -15.62818431854248
    8. '[js' → logprob: -15.62818431854248
    9. ' ' → logprob: -15.75318431854248
    10. '   ' → logprob: -16.003183364868164

Token 120: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02624410018324852
    2. ' ]' → logprob: -4.526244163513184
    3. '<|end|>' → logprob: -4.526244163513184
    4. '+' → logprob: -6.151244163513184
    5. ' ' → logprob: -7.526244163513184
    6. '-' → logprob: -8.151244163513184
    7. ')' → logprob: -8.276244163513184
    8. ']+' → logprob: -8.276244163513184
    9. ' +' → logprob: -8.651244163513184
    10. '<|end|>' → logprob: -9.151244163513184

Token 121: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11993575841188431
    2. '1' → logprob: -2.3699357509613037
    3. '(i' → logprob: -4.369935989379883
    4. '0' → logprob: -5.244935989379883
    5. ' i' → logprob: -7.119935989379883
    6. ' (' → logprob: -8.244935989379883
    7. '(' → logprob: -8.494935989379883
    8. 'j' → logprob: -8.994935989379883
    9. ' ' → logprob: -9.244935989379883
    10. '   ' → logprob: -10.494935989379883

Token 122: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.047643743455410004
    2. '+' → logprob: -3.4226436614990234
    3. '<|end|>' → logprob: -4.672643661499023
    4. ']+' → logprob: -5.797643661499023
    5. ' ]' → logprob: -6.922643661499023
    6. ' +' → logprob: -8.047643661499023
    7. ')' → logprob: -9.047643661499023
    8. '<|end|>' → logprob: -11.172643661499023
    9. '-' → logprob: -11.422643661499023
    10. '+]' → logprob: -11.422643661499023

Token 123: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ' hmm' (ID: 186402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' index' (ID: 3472)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28797560930252075
    2. '<|end|>' → logprob: -1.412975549697876
    3. '<|end|>' → logprob: -6.162975788116455
    4. '0' → logprob: -7.287975788116455
    5. '  ' → logprob: -7.537975788116455
    6. '    ' → logprob: -7.537975788116455
    7. ' else' → logprob: -7.912975788116455
    8. ' 
' → logprob: -8.287975311279297
    9. 'x' → logprob: -8.412975311279297
    10. 'else' → logprob: -8.537975311279297

Token 128: ' sh' (ID: 641)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: 'enan' (ID: 102036)
  Prédit: 'ift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ift' → logprob: -0.523577094078064
    2. 'ould' → logprob: -0.898577094078064
    3. 'ifting' → logprob: -8.523576736450195
    4. '```' → logprob: -9.398576736450195
    5. 'i' → logprob: -10.273576736450195
    6. 'ifts' → logprob: -10.398576736450195
    7. 'if' → logprob: -10.523576736450195
    8. '-' → logprob: -11.273576736450195
    9. ' ' → logprob: -11.648576736450195
    10. 'e' → logprob: -12.148576736450195

Token 130: 'igans' (ID: 136884)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.010931918397545815
    2. 'ift' → logprob: -4.885931968688965
    3. 'ifting' → logprob: -6.510931968688965
    4. 'ft' → logprob: -7.760931968688965
    5. 'g' → logprob: -7.760931968688965
    6. 'ifts' → logprob: -8.260931968688965
    7. 'ging' → logprob: -8.385931968688965
    8. 'f' → logprob: -8.885931968688965
    9. 'gift' → logprob: -9.385931968688965
    10. ''t' → logprob: -10.385931968688965

Token 131: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.45411574840545654
    2. ' else' → logprob: -1.3291157484054565
    3. '       ' → logprob: -2.329115867614746
    4. 'elif' (adapté à ' elif') → logprob: -6.829115867614746
    5. '<|end|>' → logprob: -6.954115867614746
    6. ' elif' → logprob: -7.329115867614746
    7. ')' → logprob: -9.579115867614746
    8. '	else' → logprob: -10.454115867614746
    9. ']' → logprob: -10.579115867614746
    10. '   ' → logprob: -11.079115867614746

Token 134: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008862264454364777
    2. 'i' → logprob: -4.883862495422363
    3. ' j' → logprob: -7.008862495422363
    4. 'j' → logprob: -8.633862495422363
    5. ' ' → logprob: -9.133862495422363
    6. ' ' → logprob: -10.883862495422363
    7. '	i' → logprob: -11.383862495422363
    8. '   ' → logprob: -11.758862495422363
    9. '    ' → logprob: -11.883862495422363
    10. '  ' → logprob: -12.258862495422363

Token 135: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.02643289603292942
    2. '>' → logprob: -3.651432991027832
    3. ' ' → logprob: -9.776432991027832
    4. ' ==' → logprob: -10.151432991027832
    5. '==' → logprob: -10.901432991027832
    6. ' !=' → logprob: -11.651432991027832
    7. ' ' → logprob: -12.276432991027832
    8. ' <' → logprob: -13.526432991027832
    9. ' >
' → logprob: -13.901432991027832
    10. '!=' → logprob: -14.151432991027832

Token 136: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.3484639525413513
    2. 'j' → logprob: -1.223464012145996
    3. ' ' → logprob: -11.723464012145996
    4. 'i' → logprob: -12.598464012145996
    5. ' i' → logprob: -13.098464012145996
    6. '	j' → logprob: -13.473464012145996
    7. 'x' → logprob: -13.723464012145996
    8. ' x' → logprob: -14.098464012145996
    9. '0' → logprob: -14.473464012145996
    10. '[j' → logprob: -14.848464012145996

Token 137: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0040882546454668045
    2. ' :' → logprob: -5.879088401794434
    3. ':
' → logprob: -6.879088401794434
    4. '=' → logprob: -9.629088401794434
    5. '           ' → logprob: -10.004088401794434
    6. '[' → logprob: -10.129088401794434
    7. '<|end|>' → logprob: -10.504088401794434
    8. ' =' → logprob: -10.879088401794434
    9. ' :
' → logprob: -11.254088401794434
    10. '       ' → logprob: -11.629088401794434

Token 138: '           ' (ID: 352)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.9143739342689514
    2. '           ' → logprob: -1.0393738746643066
    3. 'A' → logprob: -1.4143738746643066
    4. '   ' → logprob: -7.539373874664307
    5. 'x' → logprob: -7.914373874664307
    6. '0' → logprob: -8.039374351501465
    7. ' x' → logprob: -8.164374351501465
    8. '       ' → logprob: -8.414374351501465
    9. ' ' → logprob: -8.664374351501465
    10. '               ' → logprob: -8.914374351501465

Token 139: ' A' (ID: 355)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03381985053420067
    2. ' x' → logprob: -3.4088199138641357
    3. 'A' (adapté à ' A') → logprob: -9.408820152282715
    4. '0' → logprob: -9.783820152282715
    5. ' A' → logprob: -11.158820152282715
    6. '   ' → logprob: -12.283820152282715
    7. ' ' → logprob: -12.408820152282715
    8. '           ' → logprob: -12.658820152282715
    9. '       ' → logprob: -13.283820152282715
    10. '=' → logprob: -13.533820152282715

Token 140: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009611238492652774
    2. '[' → logprob: -7.1259613037109375
    3. '][' → logprob: -9.375961303710938
    4. '[j' → logprob: -9.625961303710938
    5. ']' → logprob: -12.500961303710938
    6. '[I' → logprob: -14.250961303710938
    7. 'i' → logprob: -14.375961303710938
    8. '[
' → logprob: -15.375961303710938
    9. '<|end|>' → logprob: -16.125961303710938
    10. ' [' → logprob: -16.500961303710938

Token 141: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006351164192892611
    2. ']' → logprob: -8.250635147094727
    3. '[i' → logprob: -8.750635147094727
    4. '[' → logprob: -9.250635147094727
    5. '[j' → logprob: -9.375635147094727
    6. ' ][' → logprob: -10.750635147094727
    7. ']][' → logprob: -12.750635147094727
    8. '][]' → logprob: -12.875635147094727
    9. ''][' → logprob: -13.375635147094727
    10. '"][' → logprob: -14.000635147094727

Token 142: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.28148606419563293
    2. 'x' → logprob: -1.4064860343933105
    3. 'i' → logprob: -8.781486511230469
    4. ' j' → logprob: -9.156486511230469
    5. '[j' → logprob: -10.781486511230469
    6. '0' → logprob: -10.906486511230469
    7. ' x' → logprob: -11.406486511230469
    8. 'A' → logprob: -11.781486511230469
    9. '[' → logprob: -12.156486511230469
    10. ' ' → logprob: -12.656486511230469

Token 143: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7046222686767578
    2. ']' → logprob: -0.8296222686767578
    3. ' =' → logprob: -2.704622268676758
    4. ']=' → logprob: -6.079622268676758
    5. ' ]' → logprob: -8.329622268676758
    6. '[' → logprob: -9.954622268676758
    7. ')' → logprob: -11.329622268676758
    8. ' ' → logprob: -13.329622268676758
    9. '][' → logprob: -14.704622268676758
    10. '>' → logprob: -14.954622268676758

Token 144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03807121515274048
    2. ' =' → logprob: -3.2880711555480957
    3. ']' → logprob: -10.538071632385254
    4. ']=' → logprob: -13.538071632385254
    5. '[' → logprob: -14.538071632385254
    6. ' ' → logprob: -14.788071632385254
    7. '=

' → logprob: -15.163071632385254
    8. ')' → logprob: -15.538071632385254
    9. '=
' → logprob: -15.663071632385254
    10. '>' → logprob: -16.163070678710938

Token 145: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13169847428798676
    2. ' x' → logprob: -2.1316983699798584
    3. '0' → logprob: -5.3816986083984375
    4. ' ' → logprob: -8.881698608398438
    5. '1' → logprob: -12.381698608398438
    6. '10' → logprob: -13.069198608398438
    7. 'A' → logprob: -13.569198608398438
    8. ' ' → logprob: -13.881698608398438
    9. ' A' → logprob: -14.256698608398438
    10. '   ' → logprob: -14.381698608398438

Token 146: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.423219696851447e-05
    2. 'j' → logprob: -10.000083923339844
    3. '[' → logprob: -10.375083923339844
    4. ' [' → logprob: -12.750083923339844
    5. '[
' → logprob: -13.000083923339844
    6. '[i' → logprob: -13.500083923339844
    7. '
' → logprob: -14.750083923339844
    8. ' j' → logprob: -15.750083923339844
    9. '

' → logprob: -17.375083923339844
    10. '(j' → logprob: -17.500083923339844

Token 147: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012923141941428185
    2. '<|end|>' → logprob: -4.387923240661621
    3. '<|end|>' → logprob: -8.637923240661621
    4. ' ]' → logprob: -9.137923240661621
    5. '+' → logprob: -9.887923240661621
    6. '[' → logprob: -11.137923240661621
    7. ']>' → logprob: -11.887923240661621
    8. '])' → logprob: -11.887923240661621
    9. ']int' → logprob: -11.887923240661621
    10. '0' → logprob: -12.137923240661621

Token 148: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: ' accumulate' (ID: 74226)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008222225122153759
    2. ' for' → logprob: -4.8832221031188965
    3. '#' → logprob: -8.383222579956055
    4. ')' → logprob: -9.133222579956055
    5. '<|end|>' → logprob: -9.508222579956055
    6. 'n' → logprob: -10.008222579956055
    7. '```' → logprob: -10.258222579956055
    8. 's' → logprob: -10.508222579956055
    9. 'i' → logprob: -10.758222579956055
    10. 'f' → logprob: -10.758222579956055

Token 150: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029900671914219856
    2. ' for' → logprob: -3.5299007892608643
    3. '
' → logprob: -9.404900550842285
    4. 's' → logprob: -10.404900550842285
    5. '<|end|>' → logprob: -10.779900550842285
    6. 'i' → logprob: -11.904900550842285
    7. '```' → logprob: -13.154900550842285
    8. '[' → logprob: -13.529900550842285
    9. ')' → logprob: -14.029900550842285
    10. ',' → logprob: -14.404900550842285

Token 151: ' left' (ID: 3561)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.021741509437561
    2. 'i' → logprob: -1.896741509437561
    3. ' top' → logprob: -2.0217413902282715
    4. 'top' → logprob: -2.3967413902282715
    5. 'left' → logprob: -2.8967413902282715
    6. ' the' → logprob: -3.1467413902282715
    7. ' i' → logprob: -3.1467413902282715
    8. 'the' → logprob: -3.3967413902282715
    9. 'n' → logprob: -3.5217413902282715
    10. ' ' → logprob: -4.1467413902282715

Token 152: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004095973912626505
    2. ' for' → logprob: -5.504096031188965
    3. '
' → logprob: -11.879096031188965
    4. '```' → logprob: -12.254096031188965
    5. 'i' → logprob: -12.504096031188965
    6. '<|end|>' → logprob: -13.379096031188965
    7. '``' → logprob: -16.37909507751465
    8. ',' → logprob: -16.37909507751465
    9. 's' → logprob: -16.75409507751465
    10. '	for' → logprob: -16.75409507751465

Token 153: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.01588854379951954
    2. 'from' → logprob: -5.390888690948486
    3. ' right' → logprob: -5.515888690948486
    4. 'for' → logprob: -5.640888690948486
    5. 'top' → logprob: -6.390888690948486
    6. '#' → logprob: -7.015888690948486
    7. 'up' → logprob: -8.140888214111328
    8. 'acc' → logprob: -9.015888214111328
    9. ' accumulate' → logprob: -9.015888214111328
    10. 'bottom' → logprob: -9.390888214111328

Token 154: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011650008149445057
    2. ' for' → logprob: -4.511650085449219
    3. '
' → logprob: -7.511650085449219
    4. '```' → logprob: -10.511650085449219
    5. '<|end|>' → logprob: -11.386650085449219
    6. 'i' → logprob: -11.886650085449219
    7. 'n' → logprob: -13.261650085449219
    8. ',' → logprob: -13.761650085449219
    9. '   ' → logprob: -13.886650085449219
    10. ')' → logprob: -14.011650085449219

Token 155: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006336859660223126
    2. ' for' → logprob: -7.375633716583252
    3. '```' → logprob: -12.375633239746094
    4. '
' → logprob: -13.250633239746094
    5. 'i' → logprob: -14.250633239746094
    6. '   ' → logprob: -15.625633239746094
    7. '<|end|>' → logprob: -16.000633239746094
    8. '``' → logprob: -16.375633239746094
    9. '#' → logprob: -17.250633239746094
    10. ')' → logprob: -17.500633239746094

Token 156: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07319732010364532
    2. 'i' → logprob: -2.698197364807129
    3. ' j' → logprob: -5.948197364807129
    4. 'j' → logprob: -8.448197364807129
    5. ' ' → logprob: -8.698197364807129
    6. ' k' → logprob: -9.073197364807129
    7. '	i' → logprob: -10.198197364807129
    8. ' l' → logprob: -10.948197364807129
    9. 'k' → logprob: -11.448197364807129
    10. ' row' → logprob: -11.823197364807129

Token 157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033692616969347
    2. 'in' → logprob: -3.4086925983428955
    3. ' ' → logprob: -10.533692359924316
    4. 'n' → logprob: -11.658692359924316
    5. 'range' → logprob: -12.908692359924316
    6. 'import' → logprob: -13.408692359924316
    7. '	in' → logprob: -13.533692359924316
    8. 'In' → logprob: -13.533692359924316
    9. '   ' → logprob: -14.283692359924316
    10. '_' → logprob: -14.658692359924316

Token 158: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011055603623390198
    2. ' range' → logprob: -4.5110554695129395
    3. 'in' → logprob: -12.636055946350098
    4. '(range' → logprob: -12.886055946350098
    5. ' in' → logprob: -13.886055946350098
    6. 'n' → logprob: -15.011055946350098
    7. ' ' → logprob: -15.386055946350098
    8. ')' → logprob: -15.886055946350098
    9. 'ran' → logprob: -16.38605499267578
    10. '	range' → logprob: -16.76105499267578

Token 159: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.05499910004437e-05
    2. '(' → logprob: -9.375090599060059
    3. 'n' → logprob: -12.375090599060059
    4. '(range' → logprob: -14.250090599060059
    5. 'range' → logprob: -14.250090599060059
    6. '(
' → logprob: -17.375089645385742
    7. ')' → logprob: -17.625089645385742
    8. ' (' → logprob: -18.250089645385742
    9. ' range' → logprob: -19.000089645385742
    10. '(len' → logprob: -19.125089645385742

Token 160: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6708812713623047
    2. '):' → logprob: -0.7958812713623047
    3. '):
' → logprob: -3.2958812713623047
    4. ' +' → logprob: -8.795881271362305
    5. '(n' → logprob: -9.295881271362305
    6. 'n' → logprob: -9.795881271362305
    7. '):
' → logprob: -10.420881271362305
    8. '   ' → logprob: -10.545881271362305
    9. ' ):' → logprob: -10.545881271362305
    10. '-' → logprob: -10.545881271362305

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0482511892914772
    2. 'for' → logprob: -3.173251152038574
    3. ' for' → logprob: -5.298251152038574
    4. 'sum' → logprob: -9.173251152038574
    5. ' ' → logprob: -10.298251152038574
    6. '	for' → logprob: -10.423251152038574
    7. '       ' → logprob: -11.173251152038574
    8. 's' → logprob: -11.173251152038574
    9. ' sum' → logprob: -11.673251152038574
    10. '  ' → logprob: -12.048251152038574

Token 162: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04785739257931709
    2. 'sum' → logprob: -4.172857284545898
    3. ' for' → logprob: -4.422857284545898
    4. 's' → logprob: -4.922857284545898
    5. '   ' → logprob: -5.422857284545898
    6. 'c' → logprob: -6.672857284545898
    7. 'Al' → logprob: -6.797857284545898
    8. 'cum' → logprob: -7.297857284545898
    9. 'curr' → logprob: -7.547857284545898
    10. 'acc' → logprob: -7.547857284545898

Token 163: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.201456218957901
    2. ' j' → logprob: -1.7014561891555786
    3. 'x' → logprob: -11.701456069946289
    4. 'y' → logprob: -12.201456069946289
    5. ' y' → logprob: -12.326456069946289
    6. 'i' → logprob: -12.701456069946289
    7. ' ' → logprob: -12.701456069946289
    8. '_j' → logprob: -13.201456069946289
    9. '	j' → logprob: -13.326456069946289
    10. ' range' → logprob: -13.388956069946289

Token 164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3486936092376709
    2. 'in' → logprob: -1.223693609237671
    3. '(' → logprob: -9.34869384765625
    4. 'range' → logprob: -9.34869384765625
    5. '(n' → logprob: -10.84869384765625
    6. '(in' → logprob: -11.72369384765625
    7. 'n' → logprob: -11.84869384765625
    8. '(i' → logprob: -11.97369384765625
    9. '   ' → logprob: -12.22369384765625
    10. ' range' → logprob: -12.47369384765625

Token 165: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.013865873217582703
    2. ' range' → logprob: -4.388865947723389
    3. '(range' → logprob: -6.638865947723389
    4. '(n' → logprob: -10.63886547088623
    5. '   ' → logprob: -12.26386547088623
    6. 'n' → logprob: -12.26386547088623
    7. '(' → logprob: -12.38886547088623
    8. 'in' → logprob: -13.13886547088623
    9. 'ange' → logprob: -13.26386547088623
    10. '(i' → logprob: -13.88886547088623

Token 166: '(i' (ID: 3649)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.21930955350399017
    2. '(range' → logprob: -1.7193095684051514
    3. 'range' → logprob: -4.469309329986572
    4. '(i' → logprob: -5.469309329986572
    5. '(' → logprob: -6.844309329986572
    6. ' range' → logprob: -6.969309329986572
    7. '(r' → logprob: -10.71930980682373
    8. '(j' → logprob: -11.09430980682373
    9. '(s' → logprob: -11.96930980682373
    10. '((' → logprob: -12.34430980682373

Token 167: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10340835899114609
    2. ',' → logprob: -2.9784083366394043
    3. ',n' → logprob: -3.4784083366394043
    4. ' +' → logprob: -4.228408336639404
    5. ' ,' → logprob: -6.978408336639404
    6. '):' → logprob: -7.728408336639404
    7. '+n' → logprob: -9.103408813476562
    8. 'n' → logprob: -9.478408813476562
    9. '1' → logprob: -9.853408813476562
    10. '   ' → logprob: -9.853408813476562

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020210994989611208
    2. ' ' → logprob: -9.250202178955078
    3. '2' → logprob: -10.000202178955078
    4. 'n' → logprob: -10.000202178955078
    5. ' n' → logprob: -12.500202178955078
    6. '   ' → logprob: -12.625202178955078
    7. '(n' → logprob: -12.625202178955078
    8. '
' → logprob: -13.250202178955078
    9. '(' → logprob: -14.000202178955078
    10. ',' → logprob: -15.000202178955078

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2547503411769867
    2. ',n' → logprob: -1.504750370979309
    3. ' ,' → logprob: -6.0047502517700195
    4. 'n' → logprob: -8.50475025177002
    5. '(n' → logprob: -9.37975025177002
    6. '):' → logprob: -10.12975025177002
    7. '1' → logprob: -11.62975025177002
    8. '   ' → logprob: -12.75475025177002
    9. ' n' → logprob: -13.37975025177002
    10. '+' → logprob: -13.50475025177002

Token 170: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007677846122533083
    2. ' n' → logprob: -4.882678031921387
    3. '   ' → logprob: -9.882678031921387
    4. '(n' → logprob: -11.257678031921387
    5. ' ' → logprob: -12.632678031921387
    6. '	n' → logprob: -14.507678031921387
    7. '  ' → logprob: -14.632678031921387
    8. '+' → logprob: -14.632678031921387
    9. ')' → logprob: -14.757678031921387
    10. '
' → logprob: -14.757678031921387

Token 171: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1368933618068695
    2. '+' → logprob: -2.1368932723999023
    3. '):
' → logprob: -4.636893272399902
    4. '   ' → logprob: -8.761893272399902
    5. 'n' → logprob: -11.011893272399902
    6. ':' → logprob: -11.386893272399902
    7. '       ' → logprob: -11.636893272399902
    8. ' +' → logprob: -11.636893272399902
    9. '+n' → logprob: -11.761893272399902
    10. '1' → logprob: -12.386893272399902

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022821188031230122
    2. '   ' → logprob: -9.125227928161621
    3. ' Al' → logprob: -9.500227928161621
    4. 'Al' → logprob: -10.750227928161621
    5. '<|end|>' → logprob: -12.250227928161621
    6. '           ' → logprob: -12.500227928161621
    7. '	   ' → logprob: -12.750227928161621
    8. '+' → logprob: -13.250227928161621
    9. '	' → logprob: -13.375227928161621
    10. ',' → logprob: -13.875227928161621

Token 173: ' Al' (ID: 1667)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' (adapté à ' Al') → logprob: -0.003961924463510513
    2. '           ' → logprob: -6.25396203994751
    3. ' Al' → logprob: -7.25396203994751
    4. '   ' → logprob: -7.37896203994751
    5. '       ' → logprob: -7.62896203994751
    6. 'Ar' → logprob: -8.503961563110352
    7. '               ' → logprob: -12.878961563110352
    8. ' ' → logprob: -13.003961563110352
    9. 'if' → logprob: -13.128961563110352
    10. '  ' → logprob: -14.753961563110352

Token 174: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.598092684522271e-05
    2. '[j' → logprob: -10.125056266784668
    3. '[' → logprob: -11.875056266784668
    4. '[I' → logprob: -12.250056266784668
    5. 'i' → logprob: -13.375056266784668
    6. ' [' → logprob: -13.750056266784668
    7. '][' → logprob: -14.875056266784668
    8. '
' → logprob: -15.625056266784668
    9. '\[' → logprob: -15.750056266784668
    10. '   ' → logprob: -16.00005531311035

Token 175: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.018505284562706947
    2. '[i' → logprob: -4.643505096435547
    3. '[j' → logprob: -4.893505096435547
    4. '[' → logprob: -7.393505096435547
    5. ' ][' → logprob: -8.768505096435547
    6. ']' → logprob: -9.018505096435547
    7. 'i' → logprob: -9.268505096435547
    8. 'j' → logprob: -10.143505096435547
    9. '-' → logprob: -10.393505096435547
    10. '
' → logprob: -11.018505096435547

Token 176: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015118853189051151
    2. 'j' → logprob: -6.501512050628662
    3. ' i' → logprob: -12.001511573791504
    4. '   ' → logprob: -13.751511573791504
    5. ',i' → logprob: -14.376511573791504
    6. ']' → logprob: -14.876511573791504
    7. '0' → logprob: -15.001511573791504
    8. ' ' → logprob: -15.626511573791504
    9. '1' → logprob: -15.751511573791504
    10. '_i' → logprob: -16.00151252746582

Token 177: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016814764589071274
    2. ']+=' → logprob: -4.266814708709717
    3. ' ]' → logprob: -6.766814708709717
    4. ']=' → logprob: -6.891814708709717
    5. ']+' → logprob: -7.891814708709717
    6. '+' → logprob: -10.266815185546875
    7. '=' → logprob: -10.641815185546875
    8. '+=' → logprob: -11.391815185546875
    9. '-' → logprob: -11.641815185546875
    10. '   ' → logprob: -12.391815185546875

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00032235344406217337
    2. ' ' → logprob: -8.875322341918945
    3. ']' → logprob: -9.125322341918945
    4. '0' → logprob: -10.625322341918945
    5. '2' → logprob: -11.250322341918945
    6. '-' → logprob: -11.500322341918945
    7. '   ' → logprob: -12.000322341918945
    8. ']=' → logprob: -12.875322341918945
    9. '
' → logprob: -12.937822341918945
    10. '```' → logprob: -13.062822341918945

Token 179: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018457774072885513
    2. ']+=' → logprob: -4.018457889556885
    3. ']=' → logprob: -8.518457412719727
    4. ']+' → logprob: -9.518457412719727
    5. ' ]' → logprob: -10.643457412719727
    6. '+=' → logprob: -12.393457412719727
    7. '[' → logprob: -12.893457412719727
    8. '=' → logprob: -13.518457412719727
    9. '+]' → logprob: -14.393457412719727
    10. ']]' → logprob: -14.893457412719727

Token 180: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20490626990795135
    2. '+=' → logprob: -1.8299062252044678
    3. ' +=' → logprob: -4.329906463623047
    4. ' =' → logprob: -4.454906463623047
    5. ']+=' → logprob: -10.454906463623047
    6. '+' → logprob: -10.704906463623047
    7. ']' → logprob: -13.579906463623047
    8. '[' → logprob: -13.579906463623047
    9. '+=(' → logprob: -14.329906463623047
    10. '-=' → logprob: -14.704906463623047

Token 181: ' Al' (ID: 1667)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.0025234611239284277
    2. ' Al' → logprob: -6.002523422241211
    3. 'Ar' → logprob: -10.627523422241211
    4. 'A' → logprob: -11.627523422241211
    5. '   ' → logprob: -12.252523422241211
    6. 'max' → logprob: -12.752523422241211
    7. 'al' → logprob: -13.752523422241211
    8. 'AL' → logprob: -13.752523422241211
    9. '       ' → logprob: -13.752523422241211
    10. ' ' → logprob: -14.627523422241211

Token 182: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.08958619832992554
    2. 'j' → logprob: -2.4645862579345703
    3. '[i' → logprob: -7.58958625793457
    4. 'i' → logprob: -10.08958625793457
    5. '[' → logprob: -10.21458625793457
    6. ' j' → logprob: -10.33958625793457
    7. '][' → logprob: -12.33958625793457
    8. ' [' → logprob: -12.71458625793457
    9. '
' → logprob: -12.96458625793457
    10. '	j' → logprob: -13.08958625793457

Token 183: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4007878601551056
    2. '[i' → logprob: -1.2757878303527832
    3. '[j' → logprob: -3.150787830352783
    4. '[' → logprob: -5.525787830352783
    5. ' [' → logprob: -6.025787830352783
    6. '   ' → logprob: -7.525787830352783
    7. '[n' → logprob: -8.900788307189941
    8. '	' → logprob: -8.900788307189941
    9. 'i' → logprob: -9.525788307189941
    10. ' ][' → logprob: -9.775788307189941

Token 184: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0020070301834493876
    2. ' i' → logprob: -6.252007007598877
    3. '[i' → logprob: -9.877007484436035
    4. 'j' → logprob: -11.752007484436035
    5. ' ' → logprob: -12.377007484436035
    6. '   ' → logprob: -12.377007484436035
    7. '][' → logprob: -13.502007484436035
    8. '```' → logprob: -13.502007484436035
    9. '	i' → logprob: -13.627007484436035
    10. ',i' → logprob: -13.627007484436035

Token 185: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02329590730369091
    2. ']+' → logprob: -3.7732958793640137
    3. '+' → logprob: -10.273296356201172
    4. ' ]' → logprob: -11.898296356201172
    5. '[' → logprob: -13.398296356201172
    6. ']
' → logprob: -13.523296356201172
    7. '+]' → logprob: -13.523296356201172
    8. '][' → logprob: -14.023296356201172
    9. ']+=' → logprob: -14.273296356201172
    10. '']' → logprob: -14.398296356201172

Token 186: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06222278252243996
    2. ' +' → logprob: -2.812222719192505
    3. '+A' → logprob: -8.312222480773926
    4. '+
' → logprob: -12.812222480773926
    5. 'A' → logprob: -13.562222480773926
    6. ' plus' → logprob: -14.187222480773926
    7. '+x' → logprob: -14.687222480773926
    8. '-' → logprob: -14.812222480773926
    9. '[' → logprob: -14.812222480773926
    10. ' A' → logprob: -14.937222480773926

Token 187: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0003020961594302207
    2. ' A' → logprob: -8.1253023147583
    3. '   ' → logprob: -12.1253023147583
    4. '       ' → logprob: -15.3753023147583
    5. '	A' → logprob: -15.8753023147583
    6. ' ' → logprob: -16.625301361083984
    7. '           ' → logprob: -17.000301361083984
    8. '  ' → logprob: -17.125301361083984
    9. '(A' → logprob: -17.500301361083984
    10. '
' → logprob: -17.500301361083984

Token 188: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0008912135381251574
    2. '[i' → logprob: -7.125891208648682
    3. 'j' → logprob: -10.00089168548584
    4. '[' → logprob: -10.12589168548584
    5. '[x' → logprob: -14.62589168548584
    6. 'i' → logprob: -14.75089168548584
    7. ' j' → logprob: -16.000890731811523
    8. '][' → logprob: -16.125890731811523
    9. ' [' → logprob: -16.750890731811523
    10. '[user' → logprob: -17.125890731811523

Token 189: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008785098791122437
    2. '[i' → logprob: -4.758785247802734
    3. ']' → logprob: -9.508785247802734
    4. '[' → logprob: -10.383785247802734
    5. '[j' → logprob: -10.633785247802734
    6. ' ][' → logprob: -11.008785247802734
    7. 'i' → logprob: -12.383785247802734
    8. '   ' → logprob: -12.633785247802734
    9. '[I' → logprob: -13.008785247802734
    10. '}[' → logprob: -13.258785247802734

Token 190: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00011355629976605996
    2. 'j' → logprob: -9.750113487243652
    3. ' i' → logprob: -9.875113487243652
    4. '[i' → logprob: -13.625113487243652
    5. '   ' → logprob: -14.000113487243652
    6. ' ' → logprob: -14.250113487243652
    7. ',i' → logprob: -15.625113487243652
    8. '
' → logprob: -16.00011444091797
    9. '	i' → logprob: -16.00011444091797
    10. ''i' → logprob: -16.12511444091797

Token 191: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007887827814556658
    2. '-' → logprob: -7.750788688659668
    3. '])' → logprob: -8.875788688659668
    4. ' ]' → logprob: -9.250788688659668
    5. '[' → logprob: -10.000788688659668
    6. ']
' → logprob: -10.625788688659668
    7. ')' → logprob: -11.250788688659668
    8. '+' → logprob: -11.875788688659668
    9. '[j' → logprob: -12.250788688659668
    10. '1' → logprob: -12.500788688659668

Token 192: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02692597359418869
    2. '
' → logprob: -5.151926040649414
    3. 'for' → logprob: -5.276926040649414
    4. '<|end|>' → logprob: -5.276926040649414
    5. '        
' → logprob: -5.401926040649414
    6. '   ' → logprob: -6.526926040649414
    7. ' for' → logprob: -6.651926040649414
    8. '        ' → logprob: -6.901926040649414
    9. ' ' → logprob: -7.526926040649414
    10. '    ' → logprob: -7.526926040649414

Token 193: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9019603133201599
    2. '       ' → logprob: -1.1519603729248047
    3. '<|end|>' → logprob: -2.0269603729248047
    4. 'for' → logprob: -2.5269603729248047
    5. '        
' → logprob: -3.7769603729248047
    6. ' for' → logprob: -4.151960372924805
    7. ' ' → logprob: -4.776960372924805
    8. 'Ar' → logprob: -5.651960372924805
    9. '   ' → logprob: -5.776960372924805
    10. ' Ar' → logprob: -6.276960372924805

Token 194: ' why' (ID: 4436)
  Prédit: 'Ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.16022615134716034
    2. 'for' → logprob: -3.0352261066436768
    3. '       ' → logprob: -3.7852261066436768
    4. ' Ar' → logprob: -3.9102261066436768
    5. ' for' → logprob: -3.9102261066436768
    6. 'Al' → logprob: -4.160226345062256
    7. '   ' → logprob: -4.535226345062256
    8. '<|end|>' → logprob: -5.285226345062256
    9. ' Al' → logprob: -6.535226345062256
    10. ' ' → logprob: -6.910226345062256

Token 195: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6268013119697571
    2. ' for' → logprob: -1.5018012523651123
    3. '       ' → logprob: -1.6268012523651123
    4. '<|end|>' → logprob: -4.126801490783691
    5. '
' → logprob: -4.501801490783691
    6. '   ' → logprob: -4.626801490783691
    7. '        
' → logprob: -6.251801490783691
    8. ' ' → logprob: -6.251801490783691
    9. ' Al' → logprob: -7.001801490783691
    10. '```' → logprob: -7.751801490783691

Token 196: '+' (ID: 10)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07933168113231659
    2. '+' → logprob: -2.579331636428833
    3. ' ' → logprob: -8.329331398010254
    4. ' +' → logprob: -9.704331398010254
    5. '[' → logprob: -10.329331398010254
    6. ']' → logprob: -10.704331398010254
    7. '<|end|>' → logprob: -10.704331398010254
    8. '+
' → logprob: -11.329331398010254
    9. '-' → logprob: -11.829331398010254
    10. '0' → logprob: -11.954331398010254

Token 198: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 199: ' left' (ID: 3561)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2017294466495514
    2. 'j' → logprob: -2.3267295360565186
    3. ']' → logprob: -3.2017295360565186
    4. 'the' → logprob: -3.9517295360565186
    5. ' i' → logprob: -4.5767292976379395
    6. ')' → logprob: -5.7017292976379395
    7. 'A' → logprob: -6.2017292976379395
    8. ' the' → logprob: -6.5767292976379395
    9. 'left' → logprob: -7.0767292976379395
    10. 'right' → logprob: -7.0767292976379395

Token 200: '?' (ID: 30)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' works' (ID: 5882)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: ' I' (ID: 357)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2376556694507599
    2. '<|end|>' → logprob: -2.3626556396484375
    3. 'Ar' → logprob: -3.1126556396484375
    4. '   ' → logprob: -3.7376556396484375
    5. ' for' → logprob: -3.8626556396484375
    6. 'for' → logprob: -3.9876556396484375
    7. '    ' → logprob: -6.1126556396484375
    8. '        ' → logprob: -6.2376556396484375
    9. ' Ar' → logprob: -6.6126556396484375
    10. ' ' → logprob: -6.9876556396484375

Token 203: ' guess' (ID: 11915)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6528492569923401
    2. 's' → logprob: -1.5278491973876953
    3. 'f' → logprob: -2.4028491973876953
    4. 'nd' → logprob: -2.6528491973876953
    5. 't' → logprob: -3.1528491973876953
    6. '+' → logprob: -3.2778491973876953
    7. '#' → logprob: -5.027849197387695
    8. '[' → logprob: -5.527849197387695
    9. 'for' → logprob: -6.152849197387695
    10. ']' → logprob: -6.277849197387695

Token 204: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06882914155721664
    2. 'Ar' → logprob: -2.94382905960083
    3. '   ' → logprob: -4.69382905960083
    4. '           ' → logprob: -6.56882905960083
    5. '<|end|>' → logprob: -6.56882905960083
    6. ' Ar' → logprob: -6.94382905960083
    7. ' for' → logprob: -7.94382905960083
    8. 'for' → logprob: -8.943829536437988
    9. ' ' → logprob: -9.068829536437988
    10. '    ' → logprob: -9.568829536437988

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3951854407787323
    2. 'Ar' → logprob: -1.1451854705810547
    3. ' Ar' → logprob: -5.895185470581055
    4. '   ' → logprob: -5.895185470581055
    5. '           ' → logprob: -6.645185470581055
    6. 'for' → logprob: -7.520185470581055
    7. ' for' → logprob: -7.645185470581055
    8. ' ' → logprob: -9.145185470581055
    9. '    ' → logprob: -10.020185470581055
    10. '        
' → logprob: -10.145185470581055

Token 206: ' if' (ID: 538)
  Prédit: 'Ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.00022916549642104656
    2. '       ' → logprob: -9.250228881835938
    3. '   ' → logprob: -9.375228881835938
    4. ' Ar' → logprob: -10.375228881835938
    5. 'for' → logprob: -12.375228881835938
    6. '           ' → logprob: -12.625228881835938
    7. '    ' → logprob: -13.500228881835938
    8. 'Al' → logprob: -13.625228881835938
    9. ' ' → logprob: -13.875228881835938
    10. '```' → logprob: -13.875228881835938

Token 207: ' i' (ID: 575)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.3484402894973755
    2. 'j' → logprob: -1.4734402894973755
    3. ' i' → logprob: -1.4734402894973755
    4. 'i' → logprob: -1.7234402894973755
    5. ' A' → logprob: -3.348440170288086
    6. 'A' → logprob: -3.473440170288086
    7. 'Al' → logprob: -4.223440170288086
    8. ' Al' → logprob: -4.598440170288086
    9. 'Ar' → logprob: -5.973440170288086
    10. 'n' → logprob: -6.223440170288086

Token 208: '-' (ID: 12)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8055348992347717
    2. '+' → logprob: -0.9305348992347717
    3. '<' → logprob: -1.930534839630127
    4. ' +' → logprob: -5.555534839630127
    5. '>' → logprob: -5.680534839630127
    6. ' >' → logprob: -5.680534839630127
    7. '[' → logprob: -7.555534839630127
    8. '<n' → logprob: -7.555534839630127
    9. ']' → logprob: -8.180535316467285
    10. ' <=' → logprob: -8.180535316467285

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05200886353850365
    2. '0' → logprob: -3.302008867263794
    3. ' ' → logprob: -4.677008628845215
    4. '>' → logprob: -6.177008628845215
    5. '>=' → logprob: -6.802008628845215
    6. 'j' → logprob: -7.177008628845215
    7. '-' → logprob: -8.677008628845215
    8. '+' → logprob: -9.927008628845215
    9. '```' → logprob: -9.927008628845215
    10. 'i' → logprob: -10.177008628845215

Token 210: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6087092161178589
    2. ' >=' → logprob: -0.9837092161178589
    3. '>' → logprob: -3.1087093353271484
    4. ']' → logprob: -4.108709335327148
    5. ']>=' → logprob: -4.733709335327148
    6. '[' → logprob: -5.233709335327148
    7. ' >' → logprob: -6.233709335327148
    8. ' ' → logprob: -6.358709335327148
    9. '][' → logprob: -6.483709335327148
    10. ' in' → logprob: -7.983709335327148

Token 211: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02984675019979477
    2. ' ' → logprob: -3.529846668243408
    3. 'j' → logprob: -10.404847145080566
    4. '1' → logprob: -10.779847145080566
    5. 'i' → logprob: -11.279847145080566
    6. '   ' → logprob: -11.529847145080566
    7. ' j' → logprob: -12.029847145080566
    8. ' i' → logprob: -12.217347145080566
    9. '
' → logprob: -12.592347145080566
    10. '    ' → logprob: -13.092347145080566

Token 212: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.73052782076411e-05
    2. ' ' → logprob: -9.625067710876465
    3. '1' → logprob: -14.750067710876465
    4. 'i' → logprob: -14.875067710876465
    5. 'j' → logprob: -15.125067710876465
    6. '   ' → logprob: -16.87506675720215
    7. '
' → logprob: -17.00006675720215
    8. '  ' → logprob: -18.43756675720215
    9. '    ' → logprob: -18.75006675720215
    10. ' i' → logprob: -19.00006675720215

Token 213: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12877564132213593
    2. ':' → logprob: -2.1287755966186523
    3. '           ' → logprob: -7.003775596618652
    4. ' :
' → logprob: -8.003775596618652
    5. '       ' → logprob: -8.878775596618652
    6. '):
' → logprob: -9.253775596618652
    7. ' and' → logprob: -9.378775596618652
    8. ' :' → logprob: -10.003775596618652
    9. '>' → logprob: -10.253775596618652
    10. '   ' → logprob: -10.253775596618652

Token 214: '           ' (ID: 352)
  Prédit: ' Ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Ar' → logprob: -0.5341533422470093
    2. '           ' → logprob: -0.9091533422470093
    3. 'Ar' → logprob: -4.659153461456299
    4. '   ' → logprob: -7.159153461456299
    5. '               ' → logprob: -8.28415298461914
    6. '       ' → logprob: -8.90915298461914
    7. ' ' → logprob: -9.03415298461914
    8. '          ' → logprob: -9.90915298461914
    9. ' ' → logprob: -9.90915298461914
    10. ' Al' → logprob: -10.28415298461914

Token 215: ' Ar' (ID: 1754)
  Prédit: 'Ar'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' (adapté à ' Ar') → logprob: -0.08334272354841232
    2. ' Ar' → logprob: -3.2083427906036377
    3. 'Al' → logprob: -3.4583427906036377
    4. '   ' → logprob: -5.708342552185059
    5. '           ' → logprob: -6.083342552185059
    6. ' Al' → logprob: -6.708342552185059
    7. '               ' → logprob: -7.458342552185059
    8. '       ' → logprob: -7.708342552185059
    9. ' ' → logprob: -10.083342552185059
    10. '                   ' → logprob: -10.208342552185059

Token 216: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.014684110297821e-06
    2. '[i' → logprob: -11.875008583068848
    3. '[' → logprob: -13.875008583068848
    4. 'j' → logprob: -14.500008583068848
    5. ' [' → logprob: -14.625008583068848
    6. '][' → logprob: -16.625009536743164
    7. '       ' → logprob: -17.125009536743164
    8. '   ' → logprob: -18.625009536743164
    9. '           ' → logprob: -19.000009536743164
    10. '[n' → logprob: -19.000009536743164

Token 217: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.028468485921621323
    2. '[j' → logprob: -3.653468370437622
    3. '[i' → logprob: -6.528468608856201
    4. ' ][' → logprob: -8.153468132019043
    5. '[' → logprob: -8.653468132019043
    6. '       ' → logprob: -9.653468132019043
    7. ']' → logprob: -9.778468132019043
    8. '   ' → logprob: -10.778468132019043
    9. '           ' → logprob: -10.778468132019043
    10. '-' → logprob: -11.153468132019043

Token 218: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00021212305000517517
    2. 'i' → logprob: -8.500211715698242
    3. ' j' → logprob: -12.625211715698242
    4. '   ' → logprob: -12.750211715698242
    5. 'n' → logprob: -14.125211715698242
    6. '	j' → logprob: -14.875211715698242
    7. '[j' → logprob: -15.250211715698242
    8. ']' → logprob: -15.500211715698242
    9. '           ' → logprob: -15.500211715698242
    10. '       ' → logprob: -15.875211715698242

Token 219: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25019371509552
    2. '][' → logprob: -1.62519371509552
    3. '-' → logprob: -4.6251935958862305
    4. ']=' → logprob: -5.1251935958862305
    5. '[j' → logprob: -5.1251935958862305
    6. '[i' → logprob: -7.3751935958862305
    7. '=' → logprob: -7.3751935958862305
    8. ']+=' → logprob: -7.8751935958862305
    9. '   ' → logprob: -8.25019359588623
    10. ' ]' → logprob: -8.37519359588623

Token 220: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04014730826020241
    2. ' =' → logprob: -3.415147304534912
    3. '+=' → logprob: -5.540147304534912
    4. ' +=' → logprob: -6.165147304534912
    5. ']' → logprob: -8.66514778137207
    6. '[' → logprob: -8.66514778137207
    7. '   ' → logprob: -10.04014778137207
    8. ']+=' → logprob: -11.29014778137207
    9. ']=' → logprob: -11.54014778137207
    10. '+' → logprob: -11.91514778137207

Token 221: ' Ar' (ID: 1754)
  Prédit: 'Ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.11305985599756241
    2. ' Ar' → logprob: -2.2380597591400146
    3. '   ' → logprob: -8.738059997558594
    4. 'A' → logprob: -10.363059997558594
    5. 'ar' → logprob: -11.613059997558594
    6. ' ' → logprob: -11.738059997558594
    7. '       ' → logprob: -12.363059997558594
    8. '    ' → logprob: -12.613059997558594
    9. '	' → logprob: -12.863059997558594
    10. ' A' → logprob: -12.925559997558594

Token 222: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.868328920158092e-05
    2. '(i' → logprob: -11.375028610229492
    3. '[' → logprob: -12.125028610229492
    4. 'i' → logprob: -12.625028610229492
    5. ' [' → logprob: -12.875028610229492
    6. ' i' → logprob: -13.000028610229492
    7. '[
' → logprob: -13.750028610229492
    8. ',i' → logprob: -14.250028610229492
    9. '][' → logprob: -14.875028610229492
    10. '[j' → logprob: -15.250028610229492

Token 223: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.11600153148174286
    2. '][' → logprob: -2.241001605987549
    3. '[' → logprob: -6.241001605987549
    4. '[j' → logprob: -7.491001605987549
    5. ' [' → logprob: -8.74100112915039
    6. '   ' → logprob: -9.24100112915039
    7. '-' → logprob: -9.49100112915039
    8. '[
' → logprob: -10.36600112915039
    9. ')[' → logprob: -10.36600112915039
    10. ' ][' → logprob: -10.36600112915039

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.857719275401905e-05
    2. ' ' → logprob: -10.375038146972656
    3. '0' → logprob: -13.187538146972656
    4. '   ' → logprob: -13.687538146972656
    5. '           ' → logprob: -14.625038146972656
    6. '```' → logprob: -14.687538146972656
    7. '][' → logprob: -15.062538146972656
    8. '2' → logprob: -15.062538146972656
    9. '       ' → logprob: -15.312538146972656
    10. ']' → logprob: -15.375038146972656

Token 225: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.016270598396658897
    2. '[j' → logprob: -4.141270637512207
    3. 'j' → logprob: -9.266270637512207
    4. ']' → logprob: -9.516270637512207
    5. '[' → logprob: -10.141270637512207
    6. ' ][' → logprob: -11.516270637512207
    7. '[i' → logprob: -11.766270637512207
    8. '}[' → logprob: -12.891270637512207
    9. ',j' → logprob: -13.516270637512207
    10. ' [' → logprob: -13.641270637512207

Token 226: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.913265239447355e-05
    2. ' j' → logprob: -9.250099182128906
    3. '[j' → logprob: -13.250099182128906
    4. '	j' → logprob: -14.125099182128906
    5. ',j' → logprob: -15.375099182128906
    6. '   ' → logprob: -15.375099182128906
    7. ' ' → logprob: -18.000099182128906
    8. '       ' → logprob: -18.625099182128906
    9. '
' → logprob: -18.750099182128906
    10. '][' → logprob: -18.875099182128906

Token 227: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014776058960705996
    2. ']+' → logprob: -6.8764777183532715
    3. ' ]' → logprob: -7.7514777183532715
    4. '+' → logprob: -11.251477241516113
    5. ' +' → logprob: -14.626477241516113
    6. '']' → logprob: -15.126477241516113
    7. ']
' → logprob: -15.376477241516113
    8. '+]' → logprob: -15.876477241516113
    9. '   ' → logprob: -16.12647819519043
    10. ')' → logprob: -16.37647819519043

Token 228: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38692253828048706
    2. '+' → logprob: -1.1369225978851318
    3. '+A' → logprob: -11.136922836303711
    4. '<|end|>' → logprob: -11.511922836303711
    5. '[' → logprob: -12.261922836303711
    6. '+j' → logprob: -12.511922836303711
    7. '+
' → logprob: -12.886922836303711
    8. '       ' → logprob: -12.886922836303711
    9. ')' → logprob: -13.136922836303711
    10. 'else' → logprob: -13.386922836303711

Token 229: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.006726856809109449
    2. ' A' → logprob: -5.0067267417907715
    3. '   ' → logprob: -11.88172721862793
    4. '	A' → logprob: -12.63172721862793
    5. ' ' → logprob: -13.88172721862793
    6. '       ' → logprob: -16.25672721862793
    7. '  ' → logprob: -16.63172721862793
    8. '1' → logprob: -16.88172721862793
    9. '           ' → logprob: -17.13172721862793
    10. '
' → logprob: -17.50672721862793

Token 230: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.532928466796875
    2. '[i' → logprob: -0.907928466796875
    3. '[j' → logprob: -5.407928466796875
    4. ' i' → logprob: -5.657928466796875
    5. 'j' → logprob: -6.532928466796875
    6. '[' → logprob: -8.782928466796875
    7. ' [' → logprob: -9.657928466796875
    8. '[
' → logprob: -10.407928466796875
    9. ' j' → logprob: -10.907928466796875
    10. ' ' → logprob: -11.657928466796875

Token 231: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01875615492463112
    2. '[j' → logprob: -4.01875638961792
    3. '   ' → logprob: -8.018755912780762
    4. '[' → logprob: -10.018755912780762
    5. ']' → logprob: -10.018755912780762
    6. 'j' → logprob: -10.143755912780762
    7. '       ' → logprob: -10.268755912780762
    8. ' ][' → logprob: -10.393755912780762
    9. ''][' → logprob: -11.268755912780762
    10. ' ' → logprob: -11.268755912780762

Token 232: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.173704271830502e-06
    2. ' j' → logprob: -13.00000286102295
    3. 'i' → logprob: -14.62500286102295
    4. '   ' → logprob: -16.375003814697266
    5. '[j' → logprob: -16.500003814697266
    6. ' ' → logprob: -17.250003814697266
    7. 'n' → logprob: -17.625003814697266
    8. ']' → logprob: -17.750003814697266
    9. '
' → logprob: -17.750003814697266
    10. 'y' → logprob: -17.750003814697266

Token 233: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030285518616437912
    2. '-' → logprob: -3.530285596847534
    3. ' ]' → logprob: -8.280285835266113
    4. ' -' → logprob: -9.155285835266113
    5. ']
' → logprob: -9.655285835266113
    6. '[' → logprob: -10.405285835266113
    7. '[i' → logprob: -10.905285835266113
    8. '       ' → logprob: -11.155285835266113
    9. '}' → logprob: -11.530285835266113
    10. '<|end|>' → logprob: -11.530285835266113

Token 234: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 235: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23074232041835785
    2. ' Ar' → logprob: -1.730742335319519
    3. 'Ar' → logprob: -3.6057422161102295
    4. '   ' → logprob: -6.855742454528809
    5. '       ' → logprob: -7.980742454528809
    6. '               ' → logprob: -8.605742454528809
    7. '          ' → logprob: -9.605742454528809
    8. '            ' → logprob: -10.730742454528809
    9. ' ' → logprob: -11.605742454528809
    10. '         ' → logprob: -11.605742454528809

Token 237: '           ' (ID: 352)
  Prédit: 'Ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.9284796118736267
    2. '           ' → logprob: -1.1784796714782715
    3. ' Ar' → logprob: -1.3034796714782715
    4. '0' → logprob: -3.8034796714782715
    5. ' ' → logprob: -6.4284796714782715
    6. '   ' → logprob: -6.6784796714782715
    7. '       ' → logprob: -8.428479194641113
    8. '               ' → logprob: -10.303479194641113
    9. ' ' → logprob: -10.678479194641113
    10. '          ' → logprob: -11.178479194641113

Token 238: ' Ar' (ID: 1754)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00638375710695982
    2. 'A' → logprob: -5.131383895874023
    3. ' ' → logprob: -8.131383895874023
    4. 'Ar' (adapté à ' Ar') → logprob: -9.131383895874023
    5. '           ' → logprob: -10.631383895874023
    6. ' A' → logprob: -10.756383895874023
    7. '       ' → logprob: -13.381383895874023
    8. '   ' → logprob: -13.506383895874023
    9. ' Ar' → logprob: -14.006383895874023
    10. '        ' → logprob: -14.256383895874023

Token 239: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016635251813568175
    2. '[' → logprob: -9.000165939331055
    3. '[j' → logprob: -10.500165939331055
    4. ' [' → logprob: -11.875165939331055
    5. 'i' → logprob: -12.250165939331055
    6. '```' → logprob: -14.375165939331055
    7. ' i' → logprob: -14.750165939331055
    8. '=' → logprob: -15.000165939331055
    9. '   ' → logprob: -15.125165939331055
    10. '(i' → logprob: -15.250165939331055

Token 240: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0022526723332703114
    2. '[j' → logprob: -7.377252578735352
    3. '[i' → logprob: -7.502252578735352
    4. '[' → logprob: -7.502252578735352
    5. ']' → logprob: -7.877252578735352
    6. ' ][' → logprob: -9.877252578735352
    7. ')[' → logprob: -10.877252578735352
    8. '<|end|>' → logprob: -10.877252578735352
    9. '[][' → logprob: -11.502252578735352
    10. '}[' → logprob: -11.502252578735352

Token 241: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.011373155459296e-05
    2. '0' → logprob: -10.875030517578125
    3. ' j' → logprob: -12.375030517578125
    4. '[j' → logprob: -12.875030517578125
    5. 'i' → logprob: -13.375030517578125
    6. 'Ar' → logprob: -13.625030517578125
    7. '$j' → logprob: -14.875030517578125
    8. '	j' → logprob: -15.625030517578125
    9. ']' → logprob: -15.625030517578125
    10. '][' → logprob: -16.000030517578125

Token 242: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26963138580322266
    2. ']=' → logprob: -2.0196313858032227
    3. '=' → logprob: -2.2696313858032227
    4. ' =' → logprob: -8.269631385803223
    5. '[' → logprob: -11.519631385803223
    6. ' ]' → logprob: -12.019631385803223
    7. '][' → logprob: -12.144631385803223
    8. ']+=' → logprob: -12.394631385803223
    9. ']==' → logprob: -14.144631385803223
    10. ')=' → logprob: -15.019631385803223

Token 243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.627176768844947e-05
    2. ' =' → logprob: -9.250096321105957
    3. '=A' → logprob: -16.12509536743164
    4. '=
' → logprob: -17.75009536743164
    5. '=

' → logprob: -17.75009536743164
    6. '[' → logprob: -18.12509536743164
    7. '+=' → logprob: -18.75009536743164
    8. ']=' → logprob: -19.37509536743164
    9. ']' → logprob: -19.50009536743164
    10. '0' → logprob: -19.75009536743164

Token 244: ' A' (ID: 355)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4317212998867035
    2. 'A' → logprob: -1.0567213296890259
    3. ' A' → logprob: -6.056721210479736
    4. ' ' → logprob: -7.306721210479736
    5. '   ' → logprob: -13.806721687316895
    6. '           ' → logprob: -15.056721687316895
    7. '1' → logprob: -15.306721687316895
    8. '	A' → logprob: -15.431721687316895
    9. '       ' → logprob: -15.931721687316895
    10. '  ' → logprob: -16.244220733642578

Token 245: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002631238894537091
    2. 'i' → logprob: -8.250263214111328
    3. '[' → logprob: -13.375263214111328
    4. ' i' → logprob: -16.000263214111328
    5. '```' → logprob: -16.250263214111328
    6. '[I' → logprob: -17.750263214111328
    7. '(i' → logprob: -17.875263214111328
    8. ' ' → logprob: -18.125263214111328
    9. '[
' → logprob: -18.250263214111328
    10. 'I' → logprob: -18.250263214111328

Token 246: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0389409214258194
    2. '[i' → logprob: -3.288940906524658
    3. '[j' → logprob: -7.288940906524658
    4. 'i' → logprob: -9.288941383361816
    5. ']' → logprob: -10.038941383361816
    6. '[' → logprob: -10.163941383361816
    7. ' ][' → logprob: -10.663941383361816
    8. 'j' → logprob: -12.038941383361816
    9. '   ' → logprob: -12.163941383361816
    10. '}[' → logprob: -13.288941383361816

Token 247: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.36574100604048e-06
    2. ' j' → logprob: -12.875004768371582
    3. 'i' → logprob: -13.875004768371582
    4. '[j' → logprob: -14.750004768371582
    5. '   ' → logprob: -15.875004768371582
    6. '	j' → logprob: -16.625003814697266
    7. ' ' → logprob: -16.750003814697266
    8. '```' → logprob: -17.250003814697266
    9. '
' → logprob: -18.125003814697266
    10. ',j' → logprob: -18.125003814697266

Token 248: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15249215066432953
    2. '<|end|>' → logprob: -2.277492046356201
    3. '}' → logprob: -3.652492046356201
    4. ']' → logprob: -4.527492046356201
    5. '       ' → logprob: -7.027492046356201
    6. '```' → logprob: -7.402492046356201
    7. '<|end|>' → logprob: -8.15249252319336
    8. ')
' → logprob: -9.40249252319336
    9. '   ' → logprob: -9.77749252319336
    10. '+' → logprob: -9.77749252319336

Token 249: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05722588300704956
    2. 'sum' → logprob: -3.6822259426116943
    3. 'i' → logprob: -4.807225704193115
    4. 'max' → logprob: -4.807225704193115
    5. 'print' → logprob: -5.807225704193115
    6. '#' → logprob: -6.057225704193115
    7. 'total' → logprob: -6.057225704193115
    8. '```' → logprob: -6.682225704193115
    9. 'result' → logprob: -6.932225704193115
    10. '<|end|>' → logprob: -7.057225704193115

Token 250: ' print' (ID: 2123)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -1.6012122631072998
    2. 'res' → logprob: -1.9762122631072998
    3. 'result' → logprob: -1.9762122631072998
    4. 'max' → logprob: -2.1012122631073
    5. 'ans' → logprob: -2.4762122631073
    6. 'for' → logprob: -2.4762122631073
    7. 'total' → logprob: -3.1012122631073
    8. 'sum' → logprob: -3.2262122631073
    9. 'best' → logprob: -3.8512122631073
    10. 'dp' → logprob: -3.8512122631073

Token 251: '("' (ID: 568)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4420786499977112
    2. '(' → logprob: -1.1920785903930664
    3. '()' → logprob: -3.0670785903930664
    4. '(A' → logprob: -5.942078590393066
    5. '(for' → logprob: -7.067078590393066
    6. '(sum' → logprob: -7.067078590393066
    7. 'print' → logprob: -7.692078590393066
    8. '("' → logprob: -7.692078590393066
    9. '("")' → logprob: -8.192078590393066
    10. '(
' → logprob: -8.317078590393066

Token 252: 'Al' (ID: 2348)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -1.4529896974563599
    2. 'sum' → logprob: -1.4529896974563599
    3. 'n' → logprob: -1.8279896974563599
    4. ')' → logprob: -2.3279895782470703
    5. 'max' → logprob: -3.0779895782470703
    6. '(' → logprob: -3.4529895782470703
    7. 'for' → logprob: -3.7029895782470703
    8. '(n' → logprob: -3.7029895782470703
    9. 'result' → logprob: -4.07798957824707
    10. 'ans' → logprob: -4.32798957824707

Token 253: ':",' (ID: 25704)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10974549502134323
    2. '")' → logprob: -2.484745502471924
    3. ')")' → logprob: -5.359745502471924
    4. '[' → logprob: -5.484745502471924
    5. '[i' → logprob: -5.734745502471924
    6. '[j' → logprob: -5.984745502471924
    7. ')
' → logprob: -6.234745502471924
    8. ']' → logprob: -6.484745502471924
    9. ',' → logprob: -7.734745502471924
    10. '#' → logprob: -7.859745502471924

Token 254: ' Al' (ID: 1667)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.03394511714577675
    2. ' Al' → logprob: -4.033945083618164
    3. ')' → logprob: -4.283945083618164
    4. 'A' → logprob: -7.533945083618164
    5. '[' → logprob: -7.783945083618164
    6. '#' → logprob: -8.283945083618164
    7. 'n' → logprob: -8.908945083618164
    8. 'print' → logprob: -9.283945083618164
    9. '")' → logprob: -9.658945083618164
    10. '"' → logprob: -9.908945083618164

Token 255: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008964112028479576
    2. '#' → logprob: -5.5089640617370605
    3. 'for' → logprob: -5.6339640617370605
    4. ')
' → logprob: -6.7589640617370605
    5. 'print' → logprob: -10.633964538574219
    6. ')#' → logprob: -10.633964538574219
    7. '
' → logprob: -11.133964538574219
    8. '[' → logprob: -11.258964538574219
    9. '#print' → logprob: -11.633964538574219
    10. ']' → logprob: -11.758964538574219

Token 256: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6859438419342041
    2. 'max' → logprob: -1.810943841934204
    3. 'sum' → logprob: -2.185943841934204
    4. 'result' → logprob: -2.560943841934204
    5. 'total' → logprob: -2.685943841934204
    6. 'res' → logprob: -3.935943841934204
    7. 'answer' → logprob: -3.935943841934204
    8. 'ans' → logprob: -4.935943603515625
    9. 'count' → logprob: -5.185943603515625
    10. 'i' → logprob: -5.435943603515625

Token 257: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.37744709849357605
    2. 'for' → logprob: -1.2524471282958984
    3. '#' → logprob: -4.502447128295898
    4. 'sum' → logprob: -5.377447128295898
    5. 'continue' → logprob: -5.627447128295898
    6. 'total' → logprob: -6.377447128295898
    7. 'max' → logprob: -6.752447128295898
    8. 'result' → logprob: -6.752447128295898
    9. ' for' → logprob: -7.252447128295898
    10. 'res' → logprob: -7.627447128295898

Token 258: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.38830986618995667
    2. '(' → logprob: -1.1383098363876343
    3. '()' → logprob: -7.013309955596924
    4. '("("' → logprob: -7.763309955596924
    5. '("")' → logprob: -10.138309478759766
    6. '('' → logprob: -11.013309478759766
    7. '(A' → logprob: -11.388309478759766
    8. '(#' → logprob: -11.388309478759766
    9. '("""' → logprob: -11.513309478759766
    10. '(
' → logprob: -11.763309478759766

Token 259: 'Ar' (ID: 2326)
  Prédit: 'Ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.2809683680534363
    2. 'A' → logprob: -1.655968427658081
    3. 'Al' → logprob: -3.655968427658081
    4. '(' → logprob: -4.780968189239502
    5. 'n' → logprob: -5.530968189239502
    6. '")' → logprob: -6.030968189239502
    7. ')' → logprob: -6.030968189239502
    8. '(A' → logprob: -6.030968189239502
    9. 'for' → logprob: -6.530968189239502
    10. 'sum' → logprob: -6.905968189239502

Token 260: ':",' (ID: 25704)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1476725339889526
    2. ':",' → logprob: -1.2726725339889526
    3. ':' → logprob: -1.5226725339889526
    4. '")' → logprob: -2.647672653198242
    5. ',' → logprob: -3.522672653198242
    6. '",' → logprob: -3.647672653198242
    7. ')")' → logprob: -4.022672653198242
    8. ')",' → logprob: -4.397672653198242
    9. '[' → logprob: -4.522672653198242
    10. '):' → logprob: -4.772672653198242

Token 261: ' Ar' (ID: 1754)
  Prédit: 'Ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.004078639671206474
    2. ' Ar' → logprob: -5.5040788650512695
    3. ')' → logprob: -16.129077911376953
    4. ''Ar' → logprob: -16.254077911376953
    5. ' ' → logprob: -17.254077911376953
    6. '[' → logprob: -17.629077911376953
    7. 'Al' → logprob: -17.629077911376953
    8. 'AR' → logprob: -18.754077911376953
    9. '   ' → logprob: -19.004077911376953
    10. '-Ar' → logprob: -19.504077911376953

Token 262: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16149067878723145
    2. 'for' → logprob: -1.9114906787872314
    3. '#' → logprob: -7.661490440368652
    4. ')
' → logprob: -8.036490440368652
    5. 'n' → logprob: -8.536490440368652
    6. '<|end|>' → logprob: -9.536490440368652
    7. ' for' → logprob: -10.161490440368652
    8. 'print' → logprob: -10.411490440368652
    9. ']' → logprob: -10.411490440368652
    10. ')n' → logprob: -10.536490440368652

Token 263: 'dp' (ID: 19037)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.4083508253097534
    2. 'ans' → logprob: -1.4083508253097534
    3. 'max' → logprob: -1.9083508253097534
    4. 'best' → logprob: -2.033350944519043
    5. 'answer' → logprob: -2.158350944519043
    6. 'result' → logprob: -3.658350944519043
    7. 'total' → logprob: -3.783350944519043
    8. 'dp' → logprob: -3.783350944519043
    9. 'for' → logprob: -4.783350944519043
    10. 's' → logprob: -5.033350944519043

Token 264: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012519894167780876
    2. '=' → logprob: -4.387519836425781
    3. '=[' → logprob: -12.637519836425781
    4. '=[[' → logprob: -13.387519836425781
    5. '=[]' → logprob: -13.512519836425781
    6. '[' → logprob: -13.512519836425781
    7. ' =[' → logprob: -14.887519836425781
    8. ' ' → logprob: -14.887519836425781
    9. ']' → logprob: -15.137519836425781
    10. 'dp' → logprob: -15.137519836425781

Token 265: ' []
' (ID: 8911)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.008050769567489624
    2. '[' → logprob: -5.508050918579102
    3. '[]
' → logprob: -6.258050918579102
    4. '[n' → logprob: -7.133050918579102
    5. '[]' → logprob: -7.133050918579102
    6. ' [[' → logprob: -7.883050918579102
    7. '[
' → logprob: -10.633050918579102
    8. '[A' → logprob: -11.008050918579102
    9. '[-' → logprob: -11.883050918579102
    10. '0' → logprob: -12.008050918579102

Token 266: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00014859484508633614
    2. ' for' → logprob: -9.00014877319336
    3. '[' → logprob: -10.62514877319336
    4. '[n' → logprob: -15.00014877319336
    5. '[]' → logprob: -15.00014877319336
    6. 'n' → logprob: -16.50014877319336
    7. '[
' → logprob: -16.62514877319336
    8. 'dp' → logprob: -16.75014877319336
    9. '[]
' → logprob: -17.75014877319336
    10. '0' → logprob: -18.25014877319336

Token 267: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5009070038795471
    2. '_' → logprob: -1.1259069442749023
    3. ' i' → logprob: -2.8759069442749023
    4. '_i' → logprob: -4.750906944274902
    5. ' _' → logprob: -5.375906944274902
    6. ' ' → logprob: -12.750906944274902
    7. 'k' → logprob: -12.875906944274902
    8. '_s' → logprob: -13.000906944274902
    9. '__' → logprob: -13.250906944274902
    10. 'range' → logprob: -13.375906944274902

Token 268: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11296819150447845
    2. 'in' → logprob: -2.2379682064056396
    3. ' ' → logprob: -9.737968444824219
    4. 'n' → logprob: -10.612968444824219
    5. '```' → logprob: -11.737968444824219
    6. '0' → logprob: -11.862968444824219
    7. '_' → logprob: -12.112968444824219
    8. '   ' → logprob: -12.237968444824219
    9. '=' → logprob: -12.362968444824219
    10. 'range' → logprob: -12.612968444824219

Token 269: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. '(range' → logprob: -16.750431060791016
    4. '	range' → logprob: -18.250431060791016
    5. ' ' → logprob: -18.625431060791016
    6. '   ' → logprob: -18.750431060791016
    7. 'rang' → logprob: -18.750431060791016
    8. '[' → logprob: -18.750431060791016
    9. '  ' → logprob: -19.875431060791016
    10. '0' → logprob: -19.875431060791016

Token 270: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00010425841173855588
    2. '(' → logprob: -9.250103950500488
    3. 'n' → logprob: -12.250103950500488
    4. '((' → logprob: -12.875103950500488
    5. '(range' → logprob: -15.250103950500488
    6. ' (' → logprob: -15.875103950500488
    7. '(N' → logprob: -16.375104904174805
    8. '(
' → logprob: -16.625104904174805
    9. '(i' → logprob: -17.125104904174805
    10. '(m' → logprob: -17.250104904174805

Token 271: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001805377542041242
    2. '(n' → logprob: -9.5001802444458
    3. '):
' → logprob: -10.0001802444458
    4. ' +' → logprob: -10.8751802444458
    5. '+
' → logprob: -11.0001802444458
    6. '+n' → logprob: -12.0001802444458
    7. ')]' → logprob: -12.3751802444458
    8. 'n' → logprob: -12.3751802444458
    9. ')' → logprob: -13.1251802444458
    10. '   ' → logprob: -13.1251802444458

Token 272: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005246210377663374
    2. '2' → logprob: -5.255246162414551
    3. '(n' → logprob: -12.00524616241455
    4. 'n' → logprob: -13.00524616241455
    5. ' ' → logprob: -13.38024616241455
    6. '
' → logprob: -14.63024616241455
    7. '(' → logprob: -14.88024616241455
    8. '   ' → logprob: -14.88024616241455
    9. '0' → logprob: -15.13024616241455
    10. '3' → logprob: -15.56774616241455

Token 273: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03406495600938797
    2. '):' → logprob: -3.409065008163452
    3. '):
' → logprob: -7.909064769744873
    4. ']:
' → logprob: -10.784065246582031
    5. '+' → logprob: -11.909065246582031
    6. ')' → logprob: -11.909065246582031
    7. ']:' → logprob: -12.159065246582031
    8. '   ' → logprob: -12.659065246582031
    9. ':' → logprob: -13.159065246582031
    10. '():
' → logprob: -13.659065246582031

Token 274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010447168024256825
    2. 'dp' → logprob: -7.376044750213623
    3. '	dp' → logprob: -8.001044273376465
    4. ' dp' → logprob: -9.501044273376465
    5. '   ' → logprob: -12.001044273376465
    6. '(dp' → logprob: -14.501044273376465
    7. '```' → logprob: -14.626044273376465
    8. '_dp' → logprob: -15.126044273376465
    9. '\t' → logprob: -15.626044273376465
    10. '[' → logprob: -15.751044273376465

Token 275: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -5.7292167184641585e-05
    2. ' dp' → logprob: -10.250057220458984
    3. '   ' → logprob: -10.750057220458984
    4. 'row' → logprob: -15.000057220458984
    5. '	dp' → logprob: -18.375057220458984
    6. 'd' → logprob: -19.500057220458984
    7. ' ' → logprob: -20.000057220458984
    8. '[' → logprob: -20.250057220458984
    9. ' row' → logprob: -20.625057220458984
    10. 'dc' → logprob: -21.125057220458984

Token 276: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002681304467841983
    2. '.' → logprob: -8.25026798248291
    3. ' .' → logprob: -12.00026798248291
    4. '.app' → logprob: -15.25026798248291
    5. '.extend' → logprob: -15.50026798248291
    6. '.ap' → logprob: -16.625268936157227
    7. 'append' → logprob: -16.875268936157227
    8. ' +=' → logprob: -17.250268936157227
    9. '+' → logprob: -17.375268936157227
    10. '   ' → logprob: -18.000268936157227

Token 277: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0017884672852233052
    2. '[' → logprob: -6.50178861618042
    3. '(' → logprob: -8.876788139343262
    4. '([-' → logprob: -8.876788139343262
    5. '[-' → logprob: -12.376788139343262
    6. '0' → logprob: -13.876788139343262
    7. '[i' → logprob: -14.626788139343262
    8. '(([' → logprob: -15.501788139343262
    9. '(-' → logprob: -15.626788139343262
    10. '(float' → logprob: -15.751788139343262

Token 278: 'float' (ID: 7829)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08210985362529755
    2. 'float' → logprob: -2.5821099281311035
    3. '-' → logprob: -6.5821099281311035
    4. '10' → logprob: -6.7071099281311035
    5. 'int' → logprob: -8.582109451293945
    6. 'False' → logprob: -8.832109451293945
    7. '100' → logprob: -9.082109451293945
    8. '(' → logprob: -10.207109451293945
    9. '1' → logprob: -10.332109451293945
    10. '999' → logprob: -10.332109451293945

Token 279: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0025128775741904974
    2. '("' → logprob: -6.8775129318237305
    3. ''in' → logprob: -6.8775129318237305
    4. 'inf' → logprob: -8.50251293182373
    5. '('-' → logprob: -9.00251293182373
    6. ''' → logprob: -9.50251293182373
    7. '(in' → logprob: -10.62751293182373
    8. '(' → logprob: -11.37751293182373
    9. '"' → logprob: -12.50251293182373
    10. '0' → logprob: -12.87751293182373

Token 280: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0011137815890833735
    2. '-inf' → logprob: -6.8761138916015625
    3. ''in' → logprob: -9.751113891601562
    4. 'in' → logprob: -11.501113891601562
    5. '-i' → logprob: -12.376113891601562
    6. '"' → logprob: -12.876113891601562
    7. ''' → logprob: -13.501113891601562
    8. '-' → logprob: -13.501113891601562
    9. '0' → logprob: -14.001113891601562
    10. ' inf' → logprob: -14.376113891601562

Token 281: '")]' (ID: 71224)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9447821974754333
    2. ')])' → logprob: -1.0697822570800781
    3. ')]' → logprob: -1.6947822570800781
    4. '")' → logprob: -2.569782257080078
    5. '")]' → logprob: -5.569782257080078
    6. ' )' → logprob: -6.319782257080078
    7. ')")' → logprob: -6.694782257080078
    8. ']' → logprob: -7.819782257080078
    9. ' ")' → logprob: -8.569782257080078
    10. '   ' → logprob: -9.194782257080078

Token 282: '*(' (ID: 14793)
  Prédit: ']*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.2355666160583496
    2. '(n' → logprob: -2.7355666160583496
    3. '*(' → logprob: -3.1105666160583496
    4. ')*(' → logprob: -3.1105666160583496
    5. ']*' → logprob: -3.8605666160583496
    6. ']' → logprob: -4.36056661605835
    7. ')' → logprob: -4.73556661605835
    8. 'for' → logprob: -4.86056661605835
    9. '   ' → logprob: -6.36056661605835
    10. ')*' → logprob: -6.61056661605835

Token 283: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005541055579669774
    2. '(n' → logprob: -7.500554084777832
    3. ' n' → logprob: -14.125554084777832
    4. '   ' → logprob: -15.250554084777832
    5. '(' → logprob: -16.62555503845215
    6. ' (' → logprob: -17.00055503845215
    7. '
' → logprob: -17.12555503845215
    8. '[n' → logprob: -18.50055503845215
    9. '	n' → logprob: -18.75055503845215
    10. '```' → logprob: -18.75055503845215

Token 284: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.723352049040841e-06
    2. ' +' → logprob: -13.125004768371582
    3. '+
' → logprob: -13.375004768371582
    4. '+n' → logprob: -15.125004768371582
    5. '```' → logprob: -15.500004768371582
    6. '+i' → logprob: -15.625004768371582
    7. '1' → logprob: -16.125003814697266
    8. 'n' → logprob: -16.375003814697266
    9. ')+' → logprob: -17.125003814697266
    10. '   ' → logprob: -17.375003814697266

Token 285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.32654589228332e-05
    2. '2' → logprob: -9.625073432922363
    3. '+' → logprob: -12.625073432922363
    4. ' ' → logprob: -12.750073432922363
    5. '```' → logprob: -15.437573432922363
    6. '
' → logprob: -15.562573432922363
    7. '   ' → logprob: -16.687572479248047
    8. '0' → logprob: -16.750072479248047
    9. ')' → logprob: -17.125072479248047
    10. '...' → logprob: -17.250072479248047

Token 286: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0036037517711520195
    2. ')' → logprob: -5.628603935241699
    3. ')))' → logprob: -13.1286039352417
    4. '))
' → logprob: -14.2536039352417
    5. ' ))' → logprob: -14.7536039352417
    6. '])' → logprob: -15.0036039352417
    7. '()))' → logprob: -16.128602981567383
    8. '   ' → logprob: -16.253602981567383
    9. '));' → logprob: -17.128602981567383
    10. '[' → logprob: -17.378602981567383

Token 287: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0004354373668320477
    2. 'for' → logprob: -7.7504353523254395
    3. '```' → logprob: -12.625435829162598
    4. ' for' → logprob: -14.000435829162598
    5. '0' → logprob: -15.250435829162598
    6. ' dp' → logprob: -15.500435829162598
    7. '[' → logprob: -16.50043487548828
    8. '	dp' → logprob: -17.12543487548828
    9. '_dp' → logprob: -17.50043487548828
    10. '(dp' → logprob: -17.75043487548828

Token 288: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002549742814153433
    2. '<|end|>' → logprob: -6.002549648284912
    3. '[n' → logprob: -10.50255012512207
    4. '
' → logprob: -10.75255012512207
    5. 'dp' → logprob: -11.75255012512207
    6. '[
' → logprob: -12.50255012512207
    7. '<|end|>' → logprob: -12.50255012512207
    8. '[i' → logprob: -13.25255012512207
    9. '```' → logprob: -13.25255012512207
    10. '0' → logprob: -14.12755012512207

Token 289: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. '1' → logprob: -11.000017166137695
    3. ' ' → logprob: -17.250017166137695
    4. '```' → logprob: -18.000017166137695
    5. '[' → logprob: -18.375017166137695
    6. '
' → logprob: -18.750017166137695
    7. '][' → logprob: -19.875017166137695
    8. '   ' → logprob: -19.875017166137695
    9. '2' → logprob: -20.000017166137695
    10. '۰' → logprob: -20.500017166137695

Token 290: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005230080569162965
    2. ']' → logprob: -8.00052261352539
    3. '[' → logprob: -8.62552261352539
    4. ']=' → logprob: -12.62552261352539
    5. ' ][' → logprob: -12.87552261352539
    6. '0' → logprob: -14.12552261352539
    7. ''][' → logprob: -15.12552261352539
    8. '"][' → logprob: -15.25052261352539
    9. '```' → logprob: -15.62552261352539
    10. '()][' → logprob: -15.87552261352539

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016885579680092633
    2. 'n' → logprob: -8.750168800354004
    3. '1' → logprob: -11.750168800354004
    4. ' ' → logprob: -14.000168800354004
    5. '```' → logprob: -14.812668800354004
    6. '
' → logprob: -15.062668800354004
    7. ']' → logprob: -15.437668800354004
    8. '-' → logprob: -16.06266975402832
    9. '2' → logprob: -16.75016975402832
    10. '   ' → logprob: -16.93766975402832

Token 292: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.35706390615087e-05
    2. ']=' → logprob: -10.375033378601074
    3. '=' → logprob: -13.250033378601074
    4. ' ]' → logprob: -14.500033378601074
    5. ')' → logprob: -17.00003433227539
    6. '`]' → logprob: -18.12503433227539
    7. ']
' → logprob: -18.37503433227539
    8. '']' → logprob: -18.75003433227539
    9. '<|end|>' → logprob: -19.12503433227539
    10. ']>' → logprob: -19.37503433227539

Token 293: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416350994259119
    2. ' =' → logprob: -4.264163494110107
    3. '=}' → logprob: -18.264163970947266
    4. '=
' → logprob: -18.514163970947266
    5. ',' → logprob: -19.014163970947266
    6. ')' → logprob: -19.264163970947266
    7. '＝' → logprob: -19.389163970947266
    8. '=True' → logprob: -19.389163970947266
    9. '=int' → logprob: -19.389163970947266
    10. ']' → logprob: -19.514163970947266

Token 294: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. ' ' → logprob: -19.375001907348633
    4. '   ' → logprob: -19.750001907348633
    5. '۰' → logprob: -20.125001907348633
    6. '00' → logprob: -20.562501907348633
    7. '1' → logprob: -20.812501907348633
    8. '```' → logprob: -21.062501907348633
    9. '  ' → logprob: -21.187501907348633
    10. '０' → logprob: -21.937501907348633

Token 295: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '1' → logprob: -18.875001907348633
    4. '   ' → logprob: -19.250001907348633
    5. 'float' → logprob: -19.500001907348633
    6. '00' → logprob: -19.750001907348633
    7. '۰' → logprob: -19.937501907348633
    8. 'int' → logprob: -20.312501907348633
    9. ' ' → logprob: -20.437501907348633
    10. '  ' → logprob: -20.625001907348633

Token 296: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.895480277715251e-06
    2. ' for' → logprob: -11.750008583068848
    3. '```' → logprob: -14.000008583068848
    4. '
' → logprob: -16.750009536743164
    5. '	for' → logprob: -18.375009536743164
    6. ')' → logprob: -18.625009536743164
    7. '<|end|>' → logprob: -18.625009536743164
    8. 'from' → logprob: -19.625009536743164
    9. '``' → logprob: -19.750009536743164
    10. 'n' → logprob: -20.125009536743164

Token 297: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.1008713702030946e-06
    2. ' for' → logprob: -13.125001907348633
    3. '```' → logprob: -17.125001907348633
    4. ')' → logprob: -19.125001907348633
    5. '	for' → logprob: -19.750001907348633
    6. '
' → logprob: -19.875001907348633
    7. 'i' → logprob: -20.125001907348633
    8. 'from' → logprob: -21.625001907348633
    9. 'n' → logprob: -21.750001907348633
    10. '<|end|>' → logprob: -22.000001907348633

Token 298: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7202885746955872
    2. ' i' → logprob: -0.8452885746955872
    3. ' length' → logprob: -3.3452885150909424
    4. 'l' → logprob: -4.5952887535095215
    5. 'length' → logprob: -4.5952887535095215
    6. ' l' → logprob: -4.7202887535095215
    7. 'k' → logprob: -5.2202887535095215
    8. ' k' → logprob: -5.2202887535095215
    9. ' s' → logprob: -6.3452887535095215
    10. ' j' → logprob: -6.5952887535095215

Token 299: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10024721920490265
    2. 'in' → logprob: -2.3502471446990967
    3. ' ' → logprob: -10.600247383117676
    4. '1' → logprob: -12.350247383117676
    5. 'n' → logprob: -13.475247383117676
    6. '	in' → logprob: -13.600247383117676
    7. 'import' → logprob: -13.725247383117676
    8. 'In' → logprob: -13.725247383117676
    9. '   ' → logprob: -13.975247383117676
    10. '+' → logprob: -14.100247383117676

Token 300: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018161648884415627
    2. ' range' → logprob: -4.018161773681641
    3. 'n' → logprob: -11.89316177368164
    4. '(range' → logprob: -12.64316177368164
    5. ' ' → logprob: -15.14316177368164
    6. ' n' → logprob: -15.39316177368164
    7. 'in' → logprob: -15.39316177368164
    8. '(n' → logprob: -15.39316177368164
    9. '1' → logprob: -15.89316177368164
    10. '
' → logprob: -16.01816177368164

Token 301: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.43780648708343506
    2. '(' → logprob: -1.062806487083435
    3. '1' → logprob: -5.062806606292725
    4. 'n' → logprob: -5.937806606292725
    5. 'range' → logprob: -9.437806129455566
    6. '(range' → logprob: -12.062806129455566
    7. ' (' → logprob: -13.062806129455566
    8. ' n' → logprob: -13.312806129455566
    9. '(
' → logprob: -13.562806129455566
    10. '2' → logprob: -13.812806129455566

Token 302: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008497562259435654
    2. '):
' → logprob: -5.258497714996338
    3. '1' → logprob: -6.383497714996338
    4. '):' → logprob: -7.258497714996338
    5. ',' → logprob: -7.633497714996338
    6. ' +' → logprob: -8.25849723815918
    7. ',n' → logprob: -10.50849723815918
    8. '0' → logprob: -11.00849723815918
    9. '-' → logprob: -11.00849723815918
    10. ' ' → logprob: -11.25849723815918

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.754368223482743e-05
    2. '2' → logprob: -9.750067710876465
    3. ' ' → logprob: -12.875067710876465
    4. '+' → logprob: -13.000067710876465
    5. '0' → logprob: -13.000067710876465
    6. 'n' → logprob: -14.000067710876465
    7. ')' → logprob: -14.125067710876465
    8. 'i' → logprob: -16.00006675720215
    9. '
' → logprob: -16.12506675720215
    10. 'for' → logprob: -16.25006675720215

Token 304: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06208375096321106
    2. '):
' → logprob: -2.8120837211608887
    3. '-' → logprob: -9.812084197998047
    4. '+' → logprob: -10.687084197998047
    5. '):
' → logprob: -10.812084197998047
    6. ':' → logprob: -11.437084197998047
    7. 'for' → logprob: -13.187084197998047
    8. '   ' → logprob: -13.312084197998047
    9. '1' → logprob: -13.687084197998047
    10. ')' → logprob: -14.687084197998047

Token 305: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008141118101775646
    2. ' for' → logprob: -5.508141040802002
    3. 'for' → logprob: -5.508141040802002
    4. '	for' → logprob: -14.50814151763916
    5. ' ' → logprob: -15.25814151763916
    6. '   ' → logprob: -17.133140563964844
    7. '  ' → logprob: -19.008140563964844
    8. '       ' → logprob: -19.258140563964844
    9. '    ' → logprob: -20.758140563964844
    10. '_for' → logprob: -21.508140563964844

Token 306: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -8.061054359131958e-06
    2. ' for' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.75000762939453
    4. ' ' → logprob: -19.62500762939453
    5. '	for' → logprob: -23.00000762939453
    6. 'if' → logprob: -24.25000762939453
    7. '```' → logprob: -24.87500762939453
    8. 'j' → logprob: -25.00000762939453
    9. 'from' → logprob: -25.62500762939453
    10. '  ' → logprob: -26.12500762939453

Token 307: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20141714811325073
    2. ' j' → logprob: -1.7014172077178955
    3. 'k' → logprob: -13.576416969299316
    4. '0' → logprob: -14.201416969299316
    5. 'i' → logprob: -14.326416969299316
    6. 'range' → logprob: -15.201416969299316
    7. ' ' → logprob: -15.826416969299316
    8. 's' → logprob: -15.826416969299316
    9. ' range' → logprob: -15.826416969299316
    10. 'x' → logprob: -16.326417922973633

Token 308: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20147132873535156
    2. 'in' → logprob: -1.7014713287353516
    3. '   ' → logprob: -11.326471328735352
    4. '	in' → logprob: -11.701471328735352
    5. '(' → logprob: -11.951471328735352
    6. '1' → logprob: -12.451471328735352
    7. 'import' → logprob: -12.701471328735352
    8. ' ' → logprob: -12.826471328735352
    9. 'i' → logprob: -12.951471328735352
    10. 'In' → logprob: -13.076471328735352

Token 309: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04862029477953911
    2. ' range' → logprob: -3.0486202239990234
    3. '(range' → logprob: -10.423620223999023
    4. 'in' → logprob: -13.298620223999023
    5. '   ' → logprob: -13.798620223999023
    6. 'i' → logprob: -15.923620223999023
    7. ' in' → logprob: -16.173620223999023
    8. 'for' → logprob: -16.548620223999023
    9. ' ' → logprob: -16.673620223999023
    10. '	range' → logprob: -17.173620223999023

Token 310: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03984630107879639
    2. 'range' → logprob: -3.289846420288086
    3. '(range' → logprob: -6.539846420288086
    4. 'i' → logprob: -8.664846420288086
    5. ' range' → logprob: -9.164846420288086
    6. '(' → logprob: -10.539846420288086
    7. '(n' → logprob: -10.539846420288086
    8. 'for' → logprob: -11.289846420288086
    9. 'in' → logprob: -12.039846420288086
    10. '[i' → logprob: -12.164846420288086

Token 311: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07123379409313202
    2. ',' → logprob: -2.9462337493896484
    3. ',n' → logprob: -4.321233749389648
    4. ',i' → logprob: -6.071233749389648
    5. ',j' → logprob: -8.821233749389648
    6. ' ,' → logprob: -8.946233749389648
    7. ' +' → logprob: -9.071233749389648
    8. '):' → logprob: -9.446233749389648
    9. '+i' → logprob: -10.196233749389648
    10. '):
' → logprob: -10.196233749389648

Token 312: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001872094871941954
    2. ' n' → logprob: -8.625186920166016
    3. 'i' → logprob: -12.000186920166016
    4. '   ' → logprob: -13.875186920166016
    5. '0' → logprob: -16.625186920166016
    6. ' ' → logprob: -16.625186920166016
    7. '1' → logprob: -16.750186920166016
    8. '```' → logprob: -16.750186920166016
    9. '
' → logprob: -16.875186920166016
    10. 'for' → logprob: -17.125186920166016

Token 313: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.8193366486229934e-05
    2. '+
' → logprob: -11.000018119812012
    3. ' +' → logprob: -14.375018119812012
    4. '1' → logprob: -15.125018119812012
    5. '+j' → logprob: -15.250018119812012
    6. '):
' → logprob: -15.375018119812012
    7. '+i' → logprob: -16.500019073486328
    8. '):' → logprob: -17.250019073486328
    9. '+n' → logprob: -17.500019073486328
    10. '   ' → logprob: -18.000019073486328

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018203090876340866
    2. '+' → logprob: -4.018203258514404
    3. 'n' → logprob: -9.893202781677246
    4. ' ' → logprob: -14.018202781677246
    5. 'j' → logprob: -14.268202781677246
    6. '+j' → logprob: -15.268202781677246
    7. ' +' → logprob: -15.643202781677246
    8. '+
' → logprob: -15.768202781677246
    9. '```' → logprob: -15.893202781677246
    10. ' n' → logprob: -16.018203735351562

Token 315: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1270475834608078
    2. '):
' → logprob: -2.127047538757324
    3. '+' → logprob: -9.252047538757324
    4. '   ' → logprob: -11.502047538757324
    5. ':' → logprob: -12.377047538757324
    6. '):
' → logprob: -12.627047538757324
    7. '):

' → logprob: -13.002047538757324
    8. '       ' → logprob: -13.877047538757324
    9. '=' → logprob: -14.377047538757324
    10. '}:' → logprob: -14.877047538757324

Token 316: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1646500676870346
    2. 'for' → logprob: -2.6646499633789062
    3. ' for' → logprob: -2.6646499633789062
    4. '   ' → logprob: -5.414649963378906
    5. ' k' → logprob: -5.789649963378906
    6. 'if' → logprob: -5.914649963378906
    7. 'k' → logprob: -6.789649963378906
    8. ' if' → logprob: -6.914649963378906
    9. '    ' → logprob: -10.039649963378906
    10. '           ' → logprob: -10.289649963378906

Token 317: ' not' (ID: 625)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.014840006828308
    2. 'k' → logprob: -1.139840006828308
    3. ' for' → logprob: -2.3898401260375977
    4. '   ' → logprob: -2.3898401260375977
    5. '       ' → logprob: -2.6398401260375977
    6. ' k' → logprob: -3.1398401260375977
    7. 'if' → logprob: -4.139840126037598
    8. ' if' → logprob: -5.639840126037598
    9. '           ' → logprob: -9.264840126037598
    10. ' ' → logprob: -9.889840126037598

Token 318: ' sure' (ID: 3239)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.8883220553398132
    2. 'j' → logprob: -1.263322114944458
    3. 'i' → logprob: -1.638322114944458
    4. ' i' → logprob: -3.388322114944458
    5. '(n' → logprob: -3.763322114944458
    6. '(' → logprob: -4.638321876525879
    7. '(i' → logprob: -4.763321876525879
    8. ' (' → logprob: -4.763321876525879
    9. 'n' → logprob: -4.888321876525879
    10. '(j' → logprob: -5.388321876525879

Token 319: ' why' (ID: 4436)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02570328302681446
    2. '   ' → logprob: -4.150703430175781
    3. ' for' → logprob: -5.025703430175781
    4. 'for' → logprob: -6.150703430175781
    5. '<|end|>' → logprob: -8.400703430175781
    6. ' if' → logprob: -9.025703430175781
    7. 'if' → logprob: -9.275703430175781
    8. ':' → logprob: -9.275703430175781
    9. '    ' → logprob: -10.025703430175781
    10. '.' → logprob: -10.150703430175781

Token 320: ' j' (ID: 441)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03870894014835358
    2. ' for' → logprob: -4.0387091636657715
    3. 'for' → logprob: -4.5387091636657715
    4. '   ' → logprob: -4.7887091636657715
    5. 'if' → logprob: -7.6637091636657715
    6. ' if' → logprob: -8.538708686828613
    7. '<|end|>' → logprob: -8.788708686828613
    8. '    ' → logprob: -9.663708686828613
    9. '	   ' → logprob: -9.663708686828613
    10. '	for' → logprob: -9.913708686828613

Token 321: ' starts' (ID: 13217)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.00028657913208
    2. '   ' → logprob: -1.25028657913208
    3. '+' → logprob: -2.00028657913208
    4. '       ' → logprob: -2.75028657913208
    5. 'in' → logprob: -3.12528657913208
    6. ':' → logprob: -3.12528657913208
    7. ' +=' → logprob: -4.25028657913208
    8. '+=' → logprob: -4.37528657913208
    9. '<|end|>' → logprob: -4.87528657913208
    10. '[' → logprob: -5.62528657913208

Token 322: ' from' (ID: 591)
  Prédit: '=i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=i' → logprob: -0.4115638732910156
    2. '=' → logprob: -1.2865638732910156
    3. 'at' → logprob: -3.5365638732910156
    4. '=j' → logprob: -4.161563873291016
    5. ' at' → logprob: -4.286563873291016
    6. 'from' → logprob: -6.911563873291016
    7. '=
' → logprob: -7.661563873291016
    8. 'i' → logprob: -7.786563873291016
    9. ' =' → logprob: -8.036563873291016
    10. '=int' → logprob: -8.661563873291016

Token 323: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00691855326294899
    2. ' i' → logprob: -5.006918430328369
    3. 'j' → logprob: -8.506918907165527
    4. ' j' → logprob: -14.506918907165527
    5. '
' → logprob: -15.881918907165527
    6. '   ' → logprob: -15.881918907165527
    7. '	i' → logprob: -16.13191795349121
    8. ')i' → logprob: -16.63191795349121
    9. ')' → logprob: -17.25691795349121
    10. '```' → logprob: -17.38191795349121

Token 324: ' but' (ID: 889)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13174591958522797
    2. '   ' → logprob: -2.5067458152770996
    3. '       ' → logprob: -4.0067458152771
    4. ':
' → logprob: -4.2567458152771
    5. '<|end|>' → logprob: -5.1317458152771
    6. ' for' → logprob: -6.8817458152771
    7. '[' → logprob: -7.7567458152771
    8. ',' → logprob: -7.7567458152771
    9. ' :' → logprob: -8.131746292114258
    10. 'for' → logprob: -8.631746292114258

Token 325: ' that's' (ID: 10954)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6288118958473206
    2. ' for' → logprob: -1.6288118362426758
    3. '       ' → logprob: -2.253811836242676
    4. '   ' → logprob: -2.628811836242676
    5. 'j' → logprob: -3.003811836242676
    6. 'for' → logprob: -4.003811836242676
    7. ' ' → logprob: -5.003811836242676
    8. ' i' → logprob: -5.128811836242676
    9. 'i' → logprob: -5.378811836242676
    10. ')' → logprob: -5.753811836242676

Token 326: ' how' (ID: 1495)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28618699312210083
    2. ' i' → logprob: -1.536186933517456
    3. 'j' → logprob: -4.036187171936035
    4. ' j' → logprob: -4.661187171936035
    5. '   ' → logprob: -5.661187171936035
    6. '    ' → logprob: -6.911187171936035
    7. ' ' → logprob: -7.286187171936035
    8. '       ' → logprob: -7.661187171936035
    9. '           ' → logprob: -8.161187171936035
    10. ' for' → logprob: -9.411187171936035

Token 327: ' it's' (ID: 4275)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6369480490684509
    2. '       ' → logprob: -1.6369481086730957
    3. '   ' → logprob: -2.6369481086730957
    4. ' range' → logprob: -2.6369481086730957
    5. 'range' → logprob: -3.2619481086730957
    6. 'j' → logprob: -3.3869481086730957
    7. ' in' → logprob: -3.8869481086730957
    8. '           ' → logprob: -4.386948108673096
    9. ' for' → logprob: -4.636948108673096
    10. 'for' → logprob: -5.011948108673096

Token 328: ' done' (ID: 4167)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2180668115615845
    2. 'done' → logprob: -1.4680668115615845
    3. 'for' → logprob: -2.218066692352295
    4. ' done' → logprob: -2.968066692352295
    5. 'j' → logprob: -3.093066692352295
    6. '       ' → logprob: -3.343066692352295
    7. '    ' → logprob: -3.468066692352295
    8. '=' → logprob: -3.593066692352295
    9. 'written' → logprob: -3.843066692352295
    10. ' ' → logprob: -3.968066692352295

Token 329: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03985031321644783
    2. ':' → logprob: -3.9148502349853516
    3. '   ' → logprob: -4.039850234985352
    4. ' for' → logprob: -7.164850234985352
    5. '<|end|>' → logprob: -8.164850234985352
    6. ':
' → logprob: -9.289850234985352
    7. ',' → logprob: -9.414850234985352
    8. 'for' → logprob: -9.789850234985352
    9. '[' → logprob: -10.164850234985352
    10. '```' → logprob: -10.414850234985352

Token 330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010115262120962143
    2. '   ' → logprob: -5.385115146636963
    3. ' for' → logprob: -6.010115146636963
    4. ':' → logprob: -6.510115146636963
    5. '<|end|>' → logprob: -7.010115146636963
    6. '```' → logprob: -9.010115623474121
    7. 'for' → logprob: -9.260115623474121
    8. ',' → logprob: -9.510115623474121
    9. '[' → logprob: -9.885115623474121
    10. ' if' → logprob: -10.260115623474121

Token 331: ' l' (ID: 305)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3903774619102478
    2. 'if' → logprob: -2.2653775215148926
    3. ' for' → logprob: -2.2653775215148926
    4. '       ' → logprob: -2.6403775215148926
    5. 'k' → logprob: -4.015377521514893
    6. ' if' → logprob: -4.265377521514893
    7. '   ' → logprob: -4.640377521514893
    8. ' k' → logprob: -6.015377521514893
    9. '           ' → logprob: -10.140377044677734
    10. ' ' → logprob: -10.140377044677734

Token 332: ' =' (ID: 314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7938052415847778
    2. '=' → logprob: -1.5438052415847778
    3. ' =' → logprob: -1.6688052415847778
    4. '       ' → logprob: -2.7938051223754883
    5. '   ' → logprob: -3.1688051223754883
    6. 'f' → logprob: -4.293805122375488
    7. 'e' → logprob: -4.668805122375488
    8. ' for' → logprob: -5.043805122375488
    9. '           ' → logprob: -5.293805122375488
    10. 'p' → logprob: -6.043805122375488

Token 333: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28560858964920044
    2. 'j' → logprob: -1.7856085300445557
    3. '0' → logprob: -2.9106085300445557
    4. ' i' → logprob: -4.285608768463135
    5. ' j' → logprob: -5.285608768463135
    6. 'dp' → logprob: -5.535608768463135
    7. 'max' → logprob: -6.285608768463135
    8. ' ' → logprob: -7.660608768463135
    9. ' max' → logprob: -8.410608291625977
    10. '1' → logprob: -9.035608291625977

Token 334: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35674020648002625
    2. 'j' → logprob: -1.7317402362823486
    3. '0' → logprob: -2.2317402362823486
    4. 'dp' → logprob: -4.8567399978637695
    5. 'max' → logprob: -4.9817399978637695
    6. 'n' → logprob: -8.48173999786377
    7. '(i' → logprob: -8.60673999786377
    8. ' i' → logprob: -8.85673999786377
    9. 'min' → logprob: -8.98173999786377
    10. '1' → logprob: -8.98173999786377

Token 335: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14685867726802826
    2. 'for' → logprob: -2.2718586921691895
    3. '<|end|>' → logprob: -4.3968586921691895
    4. 'if' → logprob: -4.7718586921691895
    5. ' for' → logprob: -4.8968586921691895
    6. ' if' → logprob: -6.8968586921691895
    7. 'while' → logprob: -6.8968586921691895
    8. ';' → logprob: -7.7718586921691895
    9. ',' → logprob: -8.021858215332031
    10. '   ' → logprob: -8.146858215332031

Token 337: ' r' (ID: 428)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4794093370437622
    2. 'for' → logprob: -0.9794093370437622
    3. ' while' → logprob: -6.354409217834473
    4. 'if' → logprob: -6.604409217834473
    5. '       ' → logprob: -6.979409217834473
    6. ' for' → logprob: -7.104409217834473
    7. 'l' → logprob: -7.854409217834473
    8. 'k' → logprob: -9.854409217834473
    9. 'dp' → logprob: -11.729409217834473
    10. 'j' → logprob: -11.979409217834473

Token 338: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2521628439426422
    2. ' =' → logprob: -1.5021628141403198
    3. '+' → logprob: -9.62716293334961
    4. '       ' → logprob: -10.25216293334961
    5. '+=' → logprob: -10.37716293334961
    6. 'for' → logprob: -11.25216293334961
    7. ' +=' → logprob: -11.25216293334961
    8. ',' → logprob: -11.50216293334961
    9. '=l' → logprob: -11.50216293334961
    10. '        ' → logprob: -11.75216293334961

Token 339: ' ' (ID: 220)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.18805134296417236
    2. 'i' → logprob: -2.188051223754883
    3. ' j' → logprob: -3.688051223754883
    4. 'n' → logprob: -4.188051223754883
    5. 'l' → logprob: -4.813051223754883
    6. ' i' → logprob: -5.438051223754883
    7. '0' → logprob: -6.313051223754883
    8. 'dp' → logprob: -6.813051223754883
    9. ' n' → logprob: -7.063051223754883
    10. 'len' → logprob: -7.188051223754883

Token 340: '0' (ID: 15)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6100778579711914
    2. 'i' → logprob: -0.8600778579711914
    3. 'n' → logprob: -3.7350778579711914
    4. 'len' → logprob: -4.860077857971191
    5. '0' → logprob: -6.860077857971191
    6. 'l' → logprob: -7.360077857971191
    7. '1' → logprob: -9.360077857971191
    8. 'min' → logprob: -10.110077857971191
    9. ' j' → logprob: -10.735077857971191
    10. ' i' → logprob: -10.860077857971191

Token 341: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0367947481572628
    2. '<|end|>' → logprob: -3.786794662475586
    3. '	' → logprob: -4.786794662475586
    4. 'for' → logprob: -6.661794662475586
    5. '
' → logprob: -6.911794662475586
    6. ' for' → logprob: -7.536794662475586
    7. 'if' → logprob: -7.661794662475586
    8. '   ' → logprob: -8.036794662475586
    9. '<|end|>' → logprob: -8.411794662475586
    10. ' if' → logprob: -8.411794662475586

Token 342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005628820043057203
    2. 'for' → logprob: -5.75562858581543
    3. ' for' → logprob: -7.13062858581543
    4. '	' → logprob: -7.25562858581543
    5. '<|end|>' → logprob: -8.00562858581543
    6. '   ' → logprob: -8.25562858581543
    7. 'if' → logprob: -8.88062858581543
    8. '           ' → logprob: -10.00562858581543
    9. ' if' → logprob: -10.75562858581543
    10. ' ' → logprob: -11.00562858581543

Token 343: ' k' (ID: 372)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6585204005241394
    2. 'if' → logprob: -0.9085204005241394
    3. '       ' → logprob: -2.908520460128784
    4. ' if' → logprob: -4.533520221710205
    5. ' for' → logprob: -4.783520221710205
    6. 'l' → logprob: -6.408520221710205
    7. ' ' → logprob: -6.658520221710205
    8. '        ' → logprob: -7.158520221710205
    9. '   ' → logprob: -7.283520221710205
    10. '           ' → logprob: -7.908520221710205

Token 344: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6655596494674683
    2. ' =' → logprob: -0.7905596494674683
    3. ' in' → logprob: -3.540559768676758
    4. 'in' → logprob: -5.790559768676758
    5. 'for' → logprob: -8.915559768676758
    6. ' ' → logprob: -9.290559768676758
    7. ',' → logprob: -9.665559768676758
    8. '=i' → logprob: -10.540559768676758
    9. ')' → logprob: -11.540559768676758
    10. '   ' → logprob: -12.040559768676758

Token 345: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34255531430244446
    2. ' i' → logprob: -1.467555284500122
    3. 'j' → logprob: -3.092555284500122
    4. ' j' → logprob: -4.467555522918701
    5. '0' → logprob: -6.092555522918701
    6. ' ' → logprob: -8.092555046081543
    7. 'n' → logprob: -10.217555046081543
    8. '   ' → logprob: -10.717555046081543
    9. '1' → logprob: -10.842555046081543
    10. ' n' → logprob: -11.592555046081543

Token 346: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12232600152492523
    2. ' -' → logprob: -2.247325897216797
    3. 'for' → logprob: -5.747325897216797
    4. '
' → logprob: -6.372325897216797
    5. '       ' → logprob: -6.372325897216797
    6. '   ' → logprob: -6.997325897216797
    7. ' ' → logprob: -6.997325897216797
    8. ' for' → logprob: -7.872325897216797
    9. '+' → logprob: -7.997325897216797
    10. 'while' → logprob: -9.997325897216797

Token 347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.684157026233152e-05
    2. '0' → logprob: -9.875077247619629
    3. ' ' → logprob: -10.750077247619629
    4. 'k' → logprob: -13.750077247619629
    5. '+' → logprob: -13.875077247619629
    6. '-' → logprob: -14.000077247619629
    7. '   ' → logprob: -15.375077247619629
    8. 'l' → logprob: -15.375077247619629
    9. '
' → logprob: -15.625077247619629
    10. '[' → logprob: -15.750077247619629

Token 348: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 349: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 351: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04858918860554695
    2. ' k' → logprob: -3.0485892295837402
    3. '(k' → logprob: -13.548588752746582
    4. 'j' → logprob: -15.048588752746582
    5. ' j' → logprob: -16.7985897064209
    6. ' ' → logprob: -17.0485897064209
    7. '	k' → logprob: -17.2985897064209
    8. ' ' → logprob: -17.4235897064209
    9. 'n' → logprob: -17.6735897064209
    10. '(' → logprob: -17.6735897064209

Token 352: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.17133629322052
    2. '<=' → logprob: -1.17133629322052
    3. ' <' → logprob: -1.42133629322052
    4. '<' → logprob: -2.2963361740112305
    5. '<n' → logprob: -3.2963361740112305
    6. '<len' → logprob: -6.9213361740112305
    7. '<num' → logprob: -10.54633617401123
    8. '<size' → logprob: -11.42133617401123
    9. ' ' → logprob: -12.04633617401123
    10. ' k' → logprob: -12.17133617401123

Token 353: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.5491004129871726e-05
    2. ' n' → logprob: -10.000045776367188
    3. 'k' → logprob: -18.125045776367188
    4. '
' → logprob: -18.250045776367188
    5. '	n' → logprob: -18.375045776367188
    6. '   ' → logprob: -19.125045776367188
    7. ' ' → logprob: -19.125045776367188
    8. ')n' → logprob: -20.000045776367188
    9. '_n' → logprob: -20.375045776367188
    10. '`' → logprob: -20.375045776367188

Token 354: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05041610449552536
    2. ':
' → logprob: -3.1754159927368164
    3. ' and' → logprob: -4.925415992736816
    4. 'and' → logprob: -10.175415992736816
    5. '<|end|>' → logprob: -10.550415992736816
    6. '):
' → logprob: -11.175415992736816
    7. ' :' → logprob: -11.675415992736816
    8. ':

' → logprob: -11.675415992736816
    9. '):' → logprob: -11.925415992736816
    10. '<|end|>' → logprob: -12.175415992736816

Token 355: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5322422385215759
    2. '<|end|>' → logprob: -1.4072422981262207
    3. ' ' → logprob: -3.0322422981262207
    4. ':' → logprob: -3.0322422981262207
    5. ':
' → logprob: -3.9072422981262207
    6. '```' → logprob: -4.282242298126221
    7. '       ' → logprob: -4.907242298126221
    8. '[' → logprob: -5.407242298126221
    9. ')' → logprob: -5.532242298126221
    10. '   ' → logprob: -5.657242298126221

Token 356: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.7610541582107544
    2. 'cost' → logprob: -1.3860541582107544
    3. 'if' → logprob: -2.011054039001465
    4. 'dp' → logprob: -2.761054039001465
    5. ' l' → logprob: -4.011054039001465
    6. 'c' → logprob: -4.136054039001465
    7. ' if' → logprob: -4.136054039001465
    8. '           ' → logprob: -4.386054039001465
    9. ' cost' → logprob: -4.636054039001465
    10. ' dp' → logprob: -6.011054039001465

Token 357: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.09369083493947983
    2. ' =' → logprob: -2.843690872192383
    3. '+=' → logprob: -3.593690872192383
    4. '=' → logprob: -5.593690872192383
    5. '+' → logprob: -12.718690872192383
    6. ' ' → logprob: -13.093690872192383
    7. ' +' → logprob: -13.718690872192383
    8. '   ' → logprob: -15.343690872192383
    9. ' -=' → logprob: -15.468690872192383
    10. ']+=' → logprob: -15.468690872192383

Token 358: ' l' (ID: 305)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.12171749025583267
    2. ' Al' → logprob: -2.9967174530029297
    3. 'Ar' → logprob: -3.4967174530029297
    4. 'dp' → logprob: -4.24671745300293
    5. 'max' → logprob: -5.24671745300293
    6. ' Ar' → logprob: -5.37171745300293
    7. ' max' → logprob: -5.62171745300293
    8. 'l' → logprob: -5.99671745300293
    9. ' dp' → logprob: -6.24671745300293
    10. 'min' → logprob: -7.12171745300293

Token 359: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4742072820663452
    2. ' +' → logprob: -0.9742072820663452
    3. '[' → logprob: -9.599206924438477
    4. ' ' → logprob: -11.224206924438477
    5. ' +
' → logprob: -11.224206924438477
    6. '+l' → logprob: -11.349206924438477
    7. ' plus' → logprob: -12.724206924438477
    8. ']+' → logprob: -13.224206924438477
    9. '+k' → logprob: -13.224206924438477
    10. '+r' → logprob: -13.349206924438477

Token 360: ' Al' (ID: 1667)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.2041906863451004
    2. 'Ar' → logprob: -1.704190731048584
    3. 'A' → logprob: -6.079190731048584
    4. '(' → logprob: -8.204190254211426
    5. ' Al' → logprob: -9.079190254211426
    6. ' Ar' → logprob: -9.829190254211426
    7. '(A' → logprob: -11.454190254211426
    8. ' ' → logprob: -12.454190254211426
    9. '   ' → logprob: -12.829190254211426
    10. ' A' → logprob: -12.829190254211426

Token 361: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00011939727846765891
    2. '[j' → logprob: -9.37511920928955
    3. 'k' → logprob: -10.75011920928955
    4. '[' → logprob: -11.75011920928955
    5. '[l' → logprob: -13.12511920928955
    6. '[n' → logprob: -13.62511920928955
    7. '(k' → logprob: -15.00011920928955
    8. '[r' → logprob: -15.12511920928955
    9. ' [' → logprob: -15.25011920928955
    10. '
' → logprob: -15.50011920928955

Token 362: '-' (ID: 12)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008422649116255343
    2. '[j' → logprob: -7.875842094421387
    3. '[k' → logprob: -8.625842094421387
    4. ' ][' → logprob: -9.250842094421387
    5. ']' → logprob: -9.375842094421387
    6. '-' → logprob: -10.125842094421387
    7. '[l' → logprob: -11.250842094421387
    8. '[' → logprob: -11.375842094421387
    9. '[i' → logprob: -11.500842094421387
    10. 'k' → logprob: -11.875842094421387

Token 363: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3764546513557434
    2. '][' → logprob: -2.2514545917510986
    3. 'i' → logprob: -2.5014545917510986
    4. '1' → logprob: -2.6264545917510986
    5. 'k' → logprob: -3.1264545917510986
    6. '[i' → logprob: -5.751454830169678
    7. '[j' → logprob: -5.876454830169678
    8. 'l' → logprob: -6.376454830169678
    9. ']' → logprob: -6.751454830169678
    10. '[k' → logprob: -7.501454830169678

Token 364: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004919105558656156
    2. '[j' → logprob: -8.750492095947266
    3. ' ][' → logprob: -8.750492095947266
    4. '[k' → logprob: -9.375492095947266
    5. ']' → logprob: -9.750492095947266
    6. '[i' → logprob: -11.375492095947266
    7. '[l' → logprob: -12.125492095947266
    8. '[' → logprob: -12.125492095947266
    9. 'k' → logprob: -12.625492095947266
    10. '   ' → logprob: -13.750492095947266

Token 365: 'i' (ID: 72)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4755292534828186
    2. 'i' → logprob: -0.9755292534828186
    3. 'k' → logprob: -6.725529193878174
    4. 'l' → logprob: -8.975529670715332
    5. ' j' → logprob: -9.725529670715332
    6. ' i' → logprob: -10.350529670715332
    7. 'r' → logprob: -11.975529670715332
    8. ']' → logprob: -12.725529670715332
    9. '
' → logprob: -13.100529670715332
    10. '```' → logprob: -13.100529670715332

Token 366: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004604811314493418
    2. ']
' → logprob: -5.879604816436768
    3. '-' → logprob: -6.629604816436768
    4. ' ]' → logprob: -7.754604816436768
    5. ']

' → logprob: -10.75460433959961
    6. ' -' → logprob: -11.25460433959961
    7. ' ]
' → logprob: -12.25460433959961
    8. '+' → logprob: -13.25460433959961
    9. ']
' → logprob: -13.50460433959961
    10. ']-' → logprob: -13.75460433959961

Token 367: '           ' (ID: 352)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4134865999221802
    2. '<|end|>' → logprob: -2.1634864807128906
    3. ' k' → logprob: -2.4134864807128906
    4. '+' → logprob: -3.4134864807128906
    5. '           ' → logprob: -3.7884864807128906
    6. '```' → logprob: -4.038486480712891
    7. '
' → logprob: -4.288486480712891
    8. ')' → logprob: -4.538486480712891
    9. '            
' → logprob: -4.538486480712891
    10. ' 
' → logprob: -5.038486480712891

Token 368: ' r' (ID: 428)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0264147520065308
    2. ')' → logprob: -1.5264147520065308
    3. '\n' → logprob: -2.1514148712158203
    4. 'r' (adapté à ' r') → logprob: -2.4014148712158203
    5. '```' → logprob: -2.9014148712158203
    6. ' 
' → logprob: -3.1514148712158203
    7. 'l' → logprob: -3.2764148712158203
    8. ' k' → logprob: -3.9014148712158203
    9. '+' → logprob: -4.15141487121582
    10. '\' → logprob: -4.52641487121582

Token 369: ' +=' (ID: 2757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04013562947511673
    2. ' +=' → logprob: -3.415135622024536
    3. '=' → logprob: -5.165135860443115
    4. '+=' → logprob: -7.790135860443115
    5. ' +' → logprob: -8.165135383605957
    6. '+' → logprob: -9.790135383605957
    7. ' ' → logprob: -13.415135383605957
    8. '```' → logprob: -15.915135383605957
    9. ')' → logprob: -16.040136337280273
    10. ',' → logprob: -16.540136337280273

Token 370: ' (' (ID: 350)
  Prédit: 'Ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.005281546153128147
    2. ' Ar' → logprob: -5.255281448364258
    3. '   ' → logprob: -10.755281448364258
    4. 'Al' → logprob: -12.005281448364258
    5. ' ' → logprob: -12.380281448364258
    6. '       ' → logprob: -12.755281448364258
    7. '(' → logprob: -13.130281448364258
    8. '  ' → logprob: -13.880281448364258
    9. '           ' → logprob: -14.005281448364258
    10. '    ' → logprob: -14.005281448364258

Token 371: 'Ar' (ID: 2326)
  Prédit: 'Ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.0012197628384456038
    2. ' Ar' → logprob: -6.876219749450684
    3. '   ' → logprob: -9.876219749450684
    4. 'Al' → logprob: -10.251219749450684
    5. ')' → logprob: -10.751219749450684
    6. '       ' → logprob: -11.501219749450684
    7. '           ' → logprob: -11.501219749450684
    8. ' ' → logprob: -11.751219749450684
    9. 'An' → logprob: -12.126219749450684
    10. '    ' → logprob: -12.376219749450684

Token 372: '[k' (ID: 14298)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6757570505142212
    2. 'k' → logprob: -1.1757570505142212
    3. 'j' → logprob: -1.9257570505142212
    4. '[i' → logprob: -3.6757569313049316
    5. '[j' → logprob: -5.175756931304932
    6. '[k' → logprob: -5.300756931304932
    7. '][' → logprob: -7.550756931304932
    8. '           ' → logprob: -9.42575740814209
    9. ' i' → logprob: -9.55075740814209
    10. ' j' → logprob: -10.17575740814209

Token 373: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.078839502763003e-05
    2. ' -' → logprob: -9.750090599060059
    3. '][' → logprob: -11.125090599060059
    4. '1' → logprob: -11.750090599060059
    5. '[-' → logprob: -12.500090599060059
    6. '[' → logprob: -12.625090599060059
    7. '           ' → logprob: -14.750090599060059
    8. '−' → logprob: -15.125090599060059
    9. '[k' → logprob: -15.375090599060059
    10. '-
' → logprob: -15.375090599060059

Token 374: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005443043075501919
    2. 'j' → logprob: -5.255443096160889
    3. '-' → logprob: -9.00544261932373
    4. 'i' → logprob: -9.75544261932373
    5. ' j' → logprob: -12.00544261932373
    6. ' ' → logprob: -12.50544261932373
    7. '[j' → logprob: -12.63044261932373
    8. ')' → logprob: -13.13044261932373
    9. '```' → logprob: -13.13044261932373
    10. ']' → logprob: -13.13044261932373

Token 375: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004070778959430754
    2. ']' → logprob: -8.875407218933105
    3. '[j' → logprob: -8.875407218933105
    4. ' ][' → logprob: -9.250407218933105
    5. '])' → logprob: -11.625407218933105
    6. '   ' → logprob: -12.375407218933105
    7. '[k' → logprob: -12.500407218933105
    8. ')[' → logprob: -13.250407218933105
    9. '       ' → logprob: -13.375407218933105
    10. ')' → logprob: -13.375407218933105

Token 376: 'k' (ID: 74)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00016682932619005442
    2. 'k' → logprob: -9.375166893005371
    3. ' j' → logprob: -9.500166893005371
    4. 'i' → logprob: -12.250166893005371
    5. '
' → logprob: -13.750166893005371
    6. '	j' → logprob: -14.625166893005371
    7. '
' → logprob: -15.375166893005371
    8. '   ' → logprob: -16.000165939331055
    9. '           ' → logprob: -16.625165939331055
    10. 'r' → logprob: -16.750165939331055

Token 377: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014780472964048386
    2. ']' → logprob: -4.389780521392822
    3. ' -' → logprob: -6.389780521392822
    4. '])' → logprob: -7.639780521392822
    5. ']-' → logprob: -9.889780044555664
    6. '-j' → logprob: -11.139780044555664
    7. '1' → logprob: -11.639780044555664
    8. '```' → logprob: -11.889780044555664
    9. '[j' → logprob: -12.014780044555664
    10. '           ' → logprob: -12.764780044555664

Token 378: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016849361127242446
    2. '-' → logprob: -7.00168514251709
    3. 'j' → logprob: -7.37668514251709
    4. ']' → logprob: -9.87668514251709
    5. '])' → logprob: -10.12668514251709
    6. '2' → logprob: -10.50168514251709
    7. 'i' → logprob: -11.12668514251709
    8. 'k' → logprob: -12.75168514251709
    9. 'r' → logprob: -13.12668514251709
    10. '```' → logprob: -13.50168514251709

Token 379: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3146401345729828
    2. ']' → logprob: -1.3146401643753052
    3. '-' → logprob: -7.439640045166016
    4. ' ])' → logprob: -7.939640045166016
    5. ']-' → logprob: -9.189640045166016
    6. ' -' → logprob: -9.314640045166016
    7. '])
' → logprob: -9.689640045166016
    8. ' ]' → logprob: -9.939640045166016
    9. ']
' → logprob: -10.314640045166016
    10. ')' → logprob: -10.564640045166016

Token 380: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06540975719690323
    2. ' )' → logprob: -3.4404096603393555
    3. ' -' → logprob: -3.5654096603393555
    4. '-' → logprob: -6.9404096603393555
    5. ' if' → logprob: -7.3154096603393555
    6. ')
' → logprob: -7.6904096603393555
    7. '<|end|>' → logprob: -8.815409660339355
    8. '+' → logprob: -9.065409660339355
    9. '])' → logprob: -9.190409660339355
    10. '-)' → logprob: -9.315409660339355

Token 381: ' Ar' (ID: 1754)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.08985242247581482
    2. 'Ar' → logprob: -2.4648523330688477
    3. '(' → logprob: -7.339852333068848
    4. ' Al' → logprob: -8.714852333068848
    5. ' Ar' → logprob: -10.464852333068848
    6. 'r' → logprob: -10.589852333068848
    7. 'l' → logprob: -10.589852333068848
    8. ' (' → logprob: -11.964852333068848
    9. '0' → logprob: -13.464852333068848
    10. '   ' → logprob: -13.589852333068848

Token 382: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.5309062004089355
    2. '[i' → logprob: -1.1559062004089355
    3. 'j' → logprob: -3.0309062004089355
    4. '[k' → logprob: -4.0309062004089355
    5. 'i' → logprob: -4.4059062004089355
    6. '(i' → logprob: -4.9059062004089355
    7. '(j' → logprob: -5.2809062004089355
    8. 'k' → logprob: -5.6559062004089355
    9. '(k' → logprob: -7.0309062004089355
    10. '][' → logprob: -7.5309062004089355

Token 383: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.32033771276474
    2. '][' → logprob: -1.3203377723693848
    3. ' -' → logprob: -5.070337772369385
    4. '[k' → logprob: -8.320337295532227
    5. ' ][' → logprob: -8.320337295532227
    6. '1' → logprob: -8.945337295532227
    7. '   ' → logprob: -10.195337295532227
    8. 'k' → logprob: -10.320337295532227
    9. ' ' → logprob: -10.695337295532227
    10. ']' → logprob: -11.070337295532227

Token 384: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014799882774241269
    2. '2' → logprob: -8.875147819519043
    3. ' ' → logprob: -12.000147819519043
    4. 'k' → logprob: -14.000147819519043
    5. '[k' → logprob: -15.000147819519043
    6. '][' → logprob: -15.562647819519043
    7. '(k' → logprob: -16.18764877319336
    8. '   ' → logprob: -16.25014877319336
    9. '-' → logprob: -16.25014877319336
    10. '
' → logprob: -16.62514877319336

Token 385: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002269681775942445
    2. ' ][' → logprob: -6.752269744873047
    3. '[k' → logprob: -6.877269744873047
    4. '   ' → logprob: -10.877269744873047
    5. ']' → logprob: -11.127269744873047
    6. 'k' → logprob: -12.252269744873047
    7. '       ' → logprob: -12.377269744873047
    8. '[' → logprob: -12.502269744873047
    9. '           ' → logprob: -12.502269744873047
    10. ' ' → logprob: -12.752269744873047

Token 386: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.8961017202818766e-05
    2. ' k' → logprob: -9.750059127807617
    3. '[k' → logprob: -14.500059127807617
    4. '   ' → logprob: -17.000059127807617
    5. '	k' → logprob: -17.250059127807617
    6. '{k' → logprob: -17.375059127807617
    7. '
' → logprob: -17.500059127807617
    8. ',k' → logprob: -17.500059127807617
    9. 'j' → logprob: -17.875059127807617
    10. ' ' → logprob: -18.125059127807617

Token 387: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.537868779967539e-06
    2. ' -' → logprob: -11.750008583068848
    3. '2' → logprob: -15.000008583068848
    4. '[' → logprob: -15.625008583068848
    5. '1' → logprob: -16.12500762939453
    6. '```' → logprob: -16.87500762939453
    7. '[-' → logprob: -18.25000762939453
    8. '-
' → logprob: -18.50000762939453
    9. '   ' → logprob: -18.75000762939453
    10. ' ' → logprob: -18.87500762939453

Token 388: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.054894015192985535
    2. '2' → logprob: -2.929893970489502
    3. ' ' → logprob: -11.55489444732666
    4. '   ' → logprob: -13.80489444732666
    5. '```' → logprob: -14.67989444732666
    6. '-' → logprob: -14.92989444732666
    7. '
' → logprob: -15.80489444732666
    8. '  ' → logprob: -16.617393493652344
    9. '0' → logprob: -17.617393493652344
    10. '           ' → logprob: -17.742393493652344

Token 389: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.005186082329601049
    2. '])
' → logprob: -6.005186080932617
    3. ' ])' → logprob: -6.880186080932617
    4. ')' → logprob: -7.005186080932617
    5. ']' → logprob: -7.380186080932617
    6. ')])' → logprob: -10.255186080932617
    7. ')]' → logprob: -11.130186080932617
    8. '       ' → logprob: -11.255186080932617
    9. '           ' → logprob: -11.380186080932617
    10. ' )' → logprob: -11.505186080932617

Token 390: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026198692619800568
    2. ' k' → logprob: -4.276198863983154
    3. 'k' → logprob: -4.526198863983154
    4. '
' → logprob: -7.276198863983154
    5. '            
' → logprob: -9.276198387145996
    6. '```' → logprob: -9.651198387145996
    7. ' ' → logprob: -10.026198387145996
    8. '               ' → logprob: -10.151198387145996
    9. '       ' → logprob: -10.276198387145996
    10. '            ' → logprob: -10.901198387145996

Token 391: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.765407145023346
    2. ' j' → logprob: -0.890407145023346
    3. 'k' → logprob: -2.515407085418701
    4. ' k' → logprob: -4.015407085418701
    5. '(j' → logprob: -4.640407085418701
    6. '(k' → logprob: -4.765407085418701
    7. ' (' → logprob: -5.015407085418701
    8. 'i' → logprob: -8.51540756225586
    9. ' i' → logprob: -8.76540756225586
    10. '(i' → logprob: -9.01540756225586

Token 392: '-' (ID: 12)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2853507995605469
    2. '<' → logprob: -1.7853507995605469
    3. '>' → logprob: -3.535350799560547
    4. '-' → logprob: -3.660350799560547
    5. '<n' → logprob: -4.285350799560547
    6. ' >' → logprob: -5.160350799560547
    7. ' !=' → logprob: -6.910350799560547
    8. ' -' → logprob: -7.035350799560547
    9. '<len' → logprob: -7.285350799560547
    10. '!=' → logprob: -7.535350799560547

Token 393: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.062377117574214935
    2. '0' → logprob: -2.8123772144317627
    3. ' ' → logprob: -7.937376976013184
    4. '2' → logprob: -10.187376976013184
    5. '-' → logprob: -12.562376976013184
    6. '```' → logprob: -12.562376976013184
    7. '   ' → logprob: -12.687376976013184
    8. '>' → logprob: -13.062376976013184
    9. '
' → logprob: -15.437376976013184
    10. '>=' → logprob: -15.562376976013184

Token 394: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.03865974396467209
    2. ' >=' → logprob: -3.2886598110198975
    3. '!=' → logprob: -7.913659572601318
    4. '!=-' → logprob: -9.413660049438477
    5. ' !=' → logprob: -9.538660049438477
    6. '>' → logprob: -9.913660049438477
    7. 'else' → logprob: -10.663660049438477
    8. ' is' → logprob: -11.413660049438477
    9. 'is' → logprob: -12.913660049438477
    10. '+' → logprob: -13.163660049438477

Token 395: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002508478006348014
    2. ' ' → logprob: -6.002508640289307
    3. 'i' → logprob: -10.502508163452148
    4. ' i' → logprob: -12.502508163452148
    5. 'j' → logprob: -14.502508163452148
    6. 'k' → logprob: -15.627508163452148
    7. '(i' → logprob: -15.627508163452148
    8. '   ' → logprob: -15.752508163452148
    9. '1' → logprob: -16.12750816345215
    10. '
' → logprob: -16.25250816345215

Token 396: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016534021124243736
    2. 'i' → logprob: -6.50165319442749
    3. ' ' → logprob: -8.876653671264648
    4. ' i' → logprob: -11.626653671264648
    5. 'l' → logprob: -13.751653671264648
    6. 'k' → logprob: -14.626653671264648
    7. 'j' → logprob: -14.751653671264648
    8. '
' → logprob: -15.751653671264648
    9. '   ' → logprob: -16.25165367126465
    10. '1' → logprob: -16.50165367126465

Token 397: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.061970602720975876
    2. 'else' → logprob: -2.8119707107543945
    3. ' ' → logprob: -13.686970710754395
    4. '           ' → logprob: -13.936970710754395
    5. ' and' → logprob: -14.811970710754395
    6. '            ' → logprob: -15.436970710754395
    7. 'and' → logprob: -15.686970710754395
    8. '```' → logprob: -16.686969757080078
    9. ' ' → logprob: -16.936969757080078
    10. '        ' → logprob: -17.061969757080078

Token 398: ' Ar' (ID: 1754)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.251579612493515
    2. ' ' → logprob: -1.8765796422958374
    3. ' Ar' → logprob: -3.251579523086548
    4. 'Ar' → logprob: -3.751579523086548
    5. '(' → logprob: -5.626579761505127
    6. ' (' → logprob: -5.751579761505127
    7. 'r' → logprob: -8.626579284667969
    8. ' r' → logprob: -9.126579284667969
    9. ' ' → logprob: -11.126579284667969
    10. '(r' → logprob: -11.876579284667969

Token 399: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.05001499131321907
    2. '[j' → logprob: -3.0500149726867676
    3. '[' → logprob: -7.175014972686768
    4. 'k' → logprob: -8.300015449523926
    5. '[n' → logprob: -8.425015449523926
    6. '[i' → logprob: -9.175015449523926
    7. 'j' → logprob: -9.925015449523926
    8. '0' → logprob: -11.675015449523926
    9. '[-' → logprob: -11.925015449523926
    10. '(k' → logprob: -11.925015449523926

Token 400: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.03521392197581e-05
    2. '0' → logprob: -11.500030517578125
    3. '[' → logprob: -11.875030517578125
    4. ' -' → logprob: -11.875030517578125
    5. '[j' → logprob: -12.625030517578125
    6. '   ' → logprob: -14.375030517578125
    7. '][' → logprob: -14.750030517578125
    8. '
' → logprob: -15.000030517578125
    9. ' ' → logprob: -15.125030517578125
    10. '[k' → logprob: -15.125030517578125

Token 401: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22542841732501984
    2. '2' → logprob: -1.6004284620285034
    3. ' ' → logprob: -11.350428581237793
    4. '   ' → logprob: -13.787928581237793
    5. '```' → logprob: -14.225428581237793
    6. '  ' → logprob: -15.537928581237793
    7. '
' → logprob: -15.662928581237793
    8. '0' → logprob: -15.787928581237793
    9. 'r' → logprob: -15.787928581237793
    10. '-' → logprob: -15.850428581237793

Token 402: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00042531240615062416
    2. '[k' → logprob: -7.875425338745117
    3. ' ][' → logprob: -10.500425338745117
    4. ']' → logprob: -11.750425338745117
    5. '[' → logprob: -12.375425338745117
    6. '[j' → logprob: -13.000425338745117
    7. '
' → logprob: -13.750425338745117
    8. 'k' → logprob: -14.625425338745117
    9. ' [' → logprob: -15.000425338745117
    10. '   ' → logprob: -15.375425338745117

Token 403: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.611323624383658e-05
    2. 'j' → logprob: -10.375065803527832
    3. '[k' → logprob: -10.375065803527832
    4. ' k' → logprob: -12.875065803527832
    5. '
' → logprob: -15.250065803527832
    6. '][' → logprob: -15.500065803527832
    7. '	k' → logprob: -16.00006675720215
    8. '(k' → logprob: -16.12506675720215
    9. '[j' → logprob: -16.25006675720215
    10. '[' → logprob: -16.25006675720215

Token 404: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00014370749704539776
    2. '1' → logprob: -8.875144004821777
    3. ' -' → logprob: -12.625144004821777
    4. '[' → logprob: -15.000144004821777
    5. '```' → logprob: -16.37514305114746
    6. '2' → logprob: -16.87514305114746
    7. '−' → logprob: -16.87514305114746
    8. ' ' → logprob: -17.37514305114746
    9. '   ' → logprob: -18.12514305114746
    10. '[-' → logprob: -18.12514305114746

Token 405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1054253011243418e-05
    2. '2' → logprob: -11.000020980834961
    3. ' ' → logprob: -12.500020980834961
    4. '
' → logprob: -16.31252098083496
    5. '```' → logprob: -16.31252098083496
    6. '   ' → logprob: -16.75002098083496
    7. '۱' → logprob: -17.25002098083496
    8. '１' → logprob: -17.56252098083496
    9. '0' → logprob: -17.81252098083496
    10. ']' → logprob: -17.93752098083496

Token 406: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.306953102350235
    2. ']' → logprob: -1.4319530725479126
    3. '           ' → logprob: -4.056952953338623
    4. ' )' → logprob: -5.806952953338623
    5. ')
' → logprob: -5.931952953338623
    6. ']
' → logprob: -7.181952953338623
    7. '<|end|>' → logprob: -7.306952953338623
    8. '])' → logprob: -8.306953430175781
    9. ' ]' → logprob: -8.306953430175781
    10. ' ' → logprob: -9.806953430175781

Token 407: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8306789994239807
    2. '           ' → logprob: -1.330678939819336
    3. ' 
' → logprob: -1.955678939819336
    4. '
' → logprob: -2.330678939819336
    5. 'if' → logprob: -3.705678939819336
    6. ' k' → logprob: -4.705678939819336
    7. '            
' → logprob: -5.080678939819336
    8. ' ' → logprob: -5.330678939819336
    9. ' dp' → logprob: -5.455678939819336
    10. '  
' → logprob: -6.205678939819336

Token 408: ' before' (ID: 2254)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8619623780250549
    2. ' if' → logprob: -1.3619623184204102
    3. 'if' → logprob: -1.3619623184204102
    4. ' k' → logprob: -3.73696231842041
    5. '           ' → logprob: -3.98696231842041
    6. 'dp' → logprob: -4.11196231842041
    7. ' dp' → logprob: -5.36196231842041
    8. '
' → logprob: -7.36196231842041
    9. '            
' → logprob: -7.73696231842041
    10. 'l' → logprob: -8.11196231842041

Token 409: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0080225467681885
    2. '_cost' → logprob: -1.1330225467681885
    3. 'cost' → logprob: -2.6330225467681885
    4. 'dp' → logprob: -2.7580225467681885
    5. '_dp' → logprob: -2.8830225467681885
    6. 'k' → logprob: -3.1330225467681885
    7. '=' → logprob: -3.1330225467681885
    8. '_k' → logprob: -4.133022308349609
    9. '_val' → logprob: -5.008022308349609
    10. 'Cost' → logprob: -5.633022308349609

Token 410: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11284519731998444
    2. ' dp' → logprob: -2.2378451824188232
    3. '	dp' → logprob: -11.987845420837402
    4. '           ' → logprob: -12.487845420837402
    5. '(dp' → logprob: -12.862845420837402
    6. '   ' → logprob: -13.112845420837402
    7. 'min' → logprob: -13.612845420837402
    8. ' ' → logprob: -13.737845420837402
    9. '0' → logprob: -13.862845420837402
    10. 'd' → logprob: -14.237845420837402

Token 411: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.035969629883766174
    2. '[j' → logprob: -3.4109697341918945
    3. '[k' → logprob: -6.6609697341918945
    4. 'i' → logprob: -6.9109697341918945
    5. 'j' → logprob: -10.660969734191895
    6. '[' → logprob: -12.160969734191895
    7. 'k' → logprob: -12.285969734191895
    8. '   ' → logprob: -12.910969734191895
    9. ' i' → logprob: -13.410969734191895
    10. '
' → logprob: -13.535969734191895

Token 412: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0040212878957390785
    2. '[k' → logprob: -5.754021167755127
    3. ']' → logprob: -7.379021167755127
    4. ' ][' → logprob: -9.379021644592285
    5. '[' → logprob: -9.879021644592285
    6. '[j' → logprob: -10.504021644592285
    7. '[l' → logprob: -11.004021644592285
    8. 'k' → logprob: -12.004021644592285
    9. '           ' → logprob: -12.254021644592285
    10. '[i' → logprob: -12.504021644592285

Token 413: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.16055230796337128
    2. 'i' → logprob: -2.0355522632598877
    3. 'j' → logprob: -4.035552501678467
    4. ']' → logprob: -10.785552024841309
    5. ' k' → logprob: -12.285552024841309
    6. ' i' → logprob: -12.285552024841309
    7. 'n' → logprob: -12.785552024841309
    8. 'l' → logprob: -12.910552024841309
    9. '[i' → logprob: -14.035552024841309
    10. '(i' → logprob: -14.160552024841309

Token 414: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001029000268317759
    2. '])' → logprob: -7.126029014587402
    3. ']+' → logprob: -9.126029014587402
    4. '[' → logprob: -9.876029014587402
    5. ' ]' → logprob: -10.376029014587402
    6. ']]' → logprob: -11.251029014587402
    7. ']
' → logprob: -11.626029014587402
    8. '][' → logprob: -13.626029014587402
    9. ')' → logprob: -13.876029014587402
    10. ']

' → logprob: -14.251029014587402

Token 415: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6248617768287659
    2. '<|end|>' → logprob: -0.9998617768287659
    3. ' ' → logprob: -3.374861717224121
    4. ' if' → logprob: -3.999861717224121
    5. '            ' → logprob: -4.624861717224121
    6. ')' → logprob: -4.749861717224121
    7. 'if' → logprob: -5.249861717224121
    8. '               ' → logprob: -5.374861717224121
    9. '<|end|>' → logprob: -5.874861717224121
    10. '       ' → logprob: -5.999861717224121

Token 416: ' now' (ID: 1954)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08047933131456375
    2. 'if' → logprob: -2.705479383468628
    3. 'current' → logprob: -6.080479145050049
    4. 'cost' → logprob: -6.205479145050049
    5. ' dp' → logprob: -6.330479145050049
    6. 'next' → logprob: -6.455479145050049
    7. 'after' → logprob: -7.330479145050049
    8. 'for' → logprob: -7.580479145050049
    9. ' if' → logprob: -7.830479145050049
    10. '           ' → logprob: -8.080479621887207

Token 417: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10024603456258774
    2. '=' → logprob: -2.350245952606201
    3. ']' → logprob: -10.72524642944336
    4. ' ' → logprob: -12.85024642944336
    5. ' =
' → logprob: -13.35024642944336
    6. ')' → logprob: -13.47524642944336
    7. ']=' → logprob: -13.60024642944336
    8. '	' → logprob: -13.72524642944336
    9. '		' → logprob: -14.22524642944336
    10. '    ' → logprob: -14.35024642944336

Token 418: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011065510101616383
    2. ' dp' → logprob: -5.011065483093262
    3. 'min' → logprob: -5.511065483093262
    4. ' min' → logprob: -8.761065483093262
    5. '           ' → logprob: -9.886065483093262
    6. '   ' → logprob: -10.261065483093262
    7. '	dp' → logprob: -11.511065483093262
    8. 'max' → logprob: -11.511065483093262
    9. ' ' → logprob: -12.261065483093262
    10. '       ' → logprob: -12.386065483093262

Token 419: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.04912706837058067
    2. '[i' → logprob: -3.0491271018981934
    3. '[k' → logprob: -8.424126625061035
    4. ' [' → logprob: -9.174126625061035
    5. 'j' → logprob: -9.674126625061035
    6. '[' → logprob: -10.049126625061035
    7. '][' → logprob: -10.674126625061035
    8. '           ' → logprob: -11.174126625061035
    9. ' j' → logprob: -11.299126625061035
    10. '       ' → logprob: -11.799126625061035

Token 420: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00012237003829795867
    2. '[j' → logprob: -9.6251220703125
    3. ' ][' → logprob: -10.7501220703125
    4. '[k' → logprob: -11.1251220703125
    5. ']' → logprob: -11.6251220703125
    6. ' ' → logprob: -13.1251220703125
    7. '   ' → logprob: -13.6251220703125
    8. ')[' → logprob: -13.6251220703125
    9. '[' → logprob: -13.7501220703125
    10. '       ' → logprob: -13.8751220703125

Token 421: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.1782583391759545e-05
    2. ' j' → logprob: -11.000031471252441
    3. 'k' → logprob: -11.750031471252441
    4. 'i' → logprob: -12.250031471252441
    5. 'n' → logprob: -14.375031471252441
    6. '   ' → logprob: -14.875031471252441
    7. ' ' → logprob: -15.125031471252441
    8. '  ' → logprob: -15.500031471252441
    9. '[j' → logprob: -15.625031471252441
    10. '	j' → logprob: -15.625031471252441

Token 422: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09720651805400848
    2. ']+' → logprob: -2.7222065925598145
    3. '+' → logprob: -4.2222065925598145
    4. ' +' → logprob: -4.4722065925598145
    5. ' ]' → logprob: -7.2222065925598145
    6. '[' → logprob: -11.097206115722656
    7. '+]' → logprob: -11.097206115722656
    8. '           ' → logprob: -11.347206115722656
    9. ']+=' → logprob: -11.847206115722656
    10. '+r' → logprob: -11.847206115722656

Token 423: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5505572557449341
    2. '+' → logprob: -0.9255572557449341
    3. '           ' → logprob: -3.9255571365356445
    4. ' if' → logprob: -5.5505571365356445
    5. 'if' → logprob: -5.8005571365356445
    6. 'dp' → logprob: -8.925557136535645
    7. '
' → logprob: -9.175557136535645
    8. '+
' → logprob: -9.925557136535645
    9. '+l' → logprob: -10.925557136535645
    10. '```' → logprob: -11.550557136535645

Token 424: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02664092928171158
    2. ' l' → logprob: -3.6516408920288086
    3. 'r' → logprob: -8.151640892028809
    4. 'max' → logprob: -11.151640892028809
    5. ' r' → logprob: -11.276640892028809
    6. ' ' → logprob: -11.776640892028809
    7. ' max' → logprob: -12.026640892028809
    8. '(l' → logprob: -12.776640892028809
    9. '   ' → logprob: -13.651640892028809
    10. '	l' → logprob: -13.776640892028809

Token 425: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5265525579452515
    2. '+' → logprob: -1.0265525579452515
    3. ' if' → logprob: -3.776552677154541
    4. 'if' → logprob: -4.276552677154541
    5. '
' → logprob: -4.526552677154541
    6. '           ' → logprob: -6.401552677154541
    7. '+
' → logprob: -7.276552677154541
    8. '+r' → logprob: -8.026552200317383
    9. '+k' → logprob: -8.151552200317383
    10. 'dp' → logprob: -8.776552200317383

Token 426: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003604105906561017
    2. ' r' → logprob: -5.628603935241699
    3. ' (' → logprob: -13.8786039352417
    4. '(r' → logprob: -14.0036039352417
    5. '(' → logprob: -14.3786039352417
    6. '
' → logprob: -14.6286039352417
    7. ' ' → logprob: -14.8786039352417
    8. '   ' → logprob: -15.2536039352417
    9. '           ' → logprob: -16.003604888916016
    10. '+' → logprob: -16.503604888916016

Token 427: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3138594627380371
    2. 'if' → logprob: -1.563859462738037
    3. ' if' → logprob: -2.813859462738037
    4. '               ' → logprob: -10.813859939575195
    5. '            
' → logprob: -10.938859939575195
    6. '```' → logprob: -11.438859939575195
    7. '       ' → logprob: -11.813859939575195
    8. ' k' → logprob: -12.063859939575195
    9. '   ' → logprob: -12.563859939575195
    10. 'k' → logprob: -12.563859939575195

Token 428: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.37989410758018494
    2. 'if' → logprob: -1.8798941373825073
    3. '           ' → logprob: -2.0048940181732178
    4. '\n' → logprob: -4.754894256591797
    5. '
' → logprob: -5.379894256591797
    6. ' 
' → logprob: -5.629894256591797
    7. '\t' → logprob: -5.629894256591797
    8. '       ' → logprob: -6.754894256591797
    9. '            
' → logprob: -6.754894256591797
    10. '               ' → logprob: -7.004894256591797

Token 429: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.052104149013757706
    2. ' if' → logprob: -3.0521042346954346
    3. '           ' → logprob: -5.6771039962768555
    4. 'dp' → logprob: -9.677103996276855
    5. '               ' → logprob: -11.302103996276855
    6. '[' → logprob: -12.427103996276855
    7. '```' → logprob: -13.302103996276855
    8. ' dp' → logprob: -13.427103996276855
    9. '                   ' → logprob: -14.052103996276855
    10. '       ' → logprob: -14.177103996276855

Token 430: ' now' (ID: 1954)
  Prédit: ' now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.11286468803882599
    2. 'now' → logprob: -2.2378647327423096
    3. '(now' → logprob: -10.48786449432373
    4. '[now' → logprob: -11.73786449432373
    5. '	now' → logprob: -12.98786449432373
    6. 'nown' → logprob: -13.61286449432373
    7. ' ' → logprob: -14.23786449432373
    8. ' dp' → logprob: -14.61286449432373
    9. 'dp' → logprob: -14.98786449432373
    10. '_now' → logprob: -15.36286449432373

Token 431: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08912070840597153
    2. '<' → logprob: -2.464120626449585
    3. '[' → logprob: -9.464120864868164
    4. '<|end|>' → logprob: -10.464120864868164
    5. '<n' → logprob: -10.964120864868164
    6. '<th' → logprob: -12.089120864868164
    7. '<int' → logprob: -12.339120864868164
    8. '           ' → logprob: -12.339120864868164
    9. ' ' → logprob: -12.339120864868164
    10. '<Token' → logprob: -12.714120864868164

Token 432: ' before' (ID: 2254)
  Prédit: 'before'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'before' → logprob: -0.013039988465607166
    2. 'dp' → logprob: -4.513040065765381
    3. ' before' → logprob: -6.263040065765381
    4. ' dp' → logprob: -9.388039588928223
    5. '	before' → logprob: -14.638039588928223
    6. '(before' → logprob: -15.888039588928223
    7. '           ' → logprob: -16.01304054260254
    8. 'after' → logprob: -16.63804054260254
    9. ' ' → logprob: -16.63804054260254
    10. '	dp' → logprob: -16.63804054260254

Token 433: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17269209027290344
    2. ':
' → logprob: -1.922692060470581
    3. '               ' → logprob: -5.04769229888916
    4. '           ' → logprob: -5.29769229888916
    5. '[' → logprob: -7.92269229888916
    6. '):
' → logprob: -8.79769229888916
    7. '                       ' → logprob: -9.67269229888916
    8. '                   ' → logprob: -9.79769229888916
    9. '):' → logprob: -9.79769229888916
    10. ' :
' → logprob: -10.04769229888916

Token 434: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14715927839279175
    2. ' dp' → logprob: -2.0221593379974365
    3. 'dp' → logprob: -5.522159099578857
    4. '           ' → logprob: -8.772159576416016
    5. '                   ' → logprob: -9.272159576416016
    6. '```' → logprob: -9.397159576416016
    7. '	dp' → logprob: -10.147159576416016
    8. '                               ' → logprob: -10.397159576416016
    9. '(dp' → logprob: -10.897159576416016
    10. '                       ' → logprob: -11.647159576416016

Token 435: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.1309429109096527
    2. ' dp' → logprob: -2.1309428215026855
    3. '               ' → logprob: -5.8809428215026855
    4. '           ' → logprob: -7.1309428215026855
    5. '	dp' → logprob: -7.8809428215026855
    6. '                   ' → logprob: -10.505943298339844
    7. '(dp' → logprob: -13.130943298339844
    8. '```' → logprob: -13.255943298339844
    9. '   ' → logprob: -13.505943298339844
    10. '_dp' → logprob: -13.880943298339844

Token 436: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.011077305302023888
    2. '[i' → logprob: -4.511077404022217
    3. 'j' → logprob: -10.636076927185059
    4. '[' → logprob: -12.886076927185059
    5. '][' → logprob: -13.386076927185059
    6. 'i' → logprob: -15.011076927185059
    7. '[
' → logprob: -15.136076927185059
    8. '
' → logprob: -15.136076927185059
    9. '[k' → logprob: -16.011077880859375
    10. ' [' → logprob: -16.136077880859375

Token 437: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004218554822728038
    2. ']' → logprob: -8.500421524047852
    3. '[k' → logprob: -8.500421524047852
    4. '<|end|>' → logprob: -12.000421524047852
    5. '"][' → logprob: -13.000421524047852
    6. ' ][' → logprob: -13.250421524047852
    7. 'k' → logprob: -13.500421524047852
    8. '[' → logprob: -13.875421524047852
    9. ''][' → logprob: -14.000421524047852
    10. ']][' → logprob: -15.375421524047852

Token 438: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: 0.0
    2. ' k' → logprob: -17.625
    3. '{k' → logprob: -19.25
    4. '
' → logprob: -19.375
    5. '	k' → logprob: -19.75
    6. '[k' → logprob: -19.875
    7. ' ' → logprob: -20.75
    8. '"k' → logprob: -21.25
    9. 'kx' → logprob: -21.375
    10. '   ' → logprob: -21.5

Token 439: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008365504327230155
    2. ' ]' → logprob: -7.875836372375488
    3. ']=' → logprob: -8.125836372375488
    4. '=' → logprob: -9.125836372375488
    5. ' =' → logprob: -9.875836372375488
    6. ')' → logprob: -16.000837326049805
    7. ']+=' → logprob: -16.375837326049805
    8. '[' → logprob: -16.875837326049805
    9. ']
' → logprob: -17.125837326049805
    10. '<|end|>' → logprob: -17.625837326049805

Token 440: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163628220558167
    2. ' =' → logprob: -4.264163494110107
    3. '=
' → logprob: -17.014163970947266
    4. '＝' → logprob: -18.514163970947266
    5. '.=' → logprob: -18.639163970947266
    6. '=

' → logprob: -18.764163970947266
    7. ']=' → logprob: -18.889163970947266
    8. '=True' → logprob: -19.139163970947266
    9. '=}' → logprob: -19.139163970947266
    10. '=create' → logprob: -19.139163970947266

Token 441: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.00671584764495492
    2. ' now' → logprob: -5.006715774536133
    3. '[now' → logprob: -15.131715774536133
    4. '	now' → logprob: -16.381715774536133
    5. '(now' → logprob: -16.506715774536133
    6. 'nown' → logprob: -17.881715774536133
    7. '
' → logprob: -18.256715774536133
    8. '_now' → logprob: -18.631715774536133
    9. 'no' → logprob: -19.131715774536133
    10. 'Now' → logprob: -19.131715774536133

Token 442: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022768881171941757
    2. ' k' → logprob: -4.522768974304199
    3. '
' → logprob: -4.772768974304199
    4. 'k' → logprob: -6.147768974304199
    5. '\n' → logprob: -7.772768974304199
    6. ',k' → logprob: -8.7727689743042
    7. '<|end|>' → logprob: -8.7727689743042
    8. '            
' → logprob: -9.2727689743042
    9. '```' → logprob: -10.2727689743042
    10. '               ' → logprob: -10.6477689743042

Token 443: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022552700713276863
    2. 'k' → logprob: -4.522552490234375
    3. ' k' → logprob: -5.397552490234375
    4. '
' → logprob: -5.647552490234375
    5. '               ' → logprob: -6.647552490234375
    6. '```' → logprob: -7.397552490234375
    7. '\n' → logprob: -8.022552490234375
    8. '#' → logprob: -8.272552490234375
    9. '       ' → logprob: -8.397552490234375
    10. '   ' → logprob: -8.522552490234375

Token 444: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.021031344309449196
    2. '           ' → logprob: -4.021031379699707
    3. ' k' → logprob: -5.896031379699707
    4. '   ' → logprob: -9.646031379699707
    5. '       ' → logprob: -10.396031379699707
    6. '	k' → logprob: -10.646031379699707
    7. ',k' → logprob: -13.146031379699707
    8. '```' → logprob: -13.396031379699707
    9. '               ' → logprob: -13.521031379699707
    10. '
' → logprob: -13.646031379699707

Token 445: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16517238318920135
    2. '+' → logprob: -2.1651723384857178
    3. ' +=' → logprob: -3.2901723384857178
    4. '=' → logprob: -8.915172576904297
    5. '++' → logprob: -9.290172576904297
    6. ']+=' → logprob: -11.415172576904297
    7. '+='' → logprob: -11.540172576904297
    8. '+="' → logprob: -11.915172576904297
    9. '<|end|>' → logprob: -12.040172576904297
    10. ' +' → logprob: -12.540172576904297

Token 446: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.750045776367188
    4. '```' → logprob: -20.500045776367188
    5. '+' → logprob: -21.500045776367188
    6. '  ' → logprob: -23.125045776367188
    7. '
' → logprob: -23.500045776367188
    8. ' ' → logprob: -23.750045776367188
    9. '１' → logprob: -24.000045776367188
    10. '       ' → logprob: -24.250045776367188

Token 447: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -17.750001907348633
    4. '   ' → logprob: -19.625001907348633
    5. '۱' → logprob: -20.812501907348633
    6. '+' → logprob: -20.937501907348633
    7. '`' → logprob: -21.062501907348633
    8. '１' → logprob: -21.062501907348633
    9. '``' → logprob: -21.625001907348633
    10. '2' → logprob: -21.750001907348633

Token 448: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 449: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 450: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 451: ' print' (ID: 2123)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7895461320877075
    2. '<|end|>' → logprob: -1.4145461320877075
    3. ']' → logprob: -2.039546012878418
    4. '```' → logprob: -3.289546012878418
    5. '#' → logprob: -3.664546012878418
    6. '       ' → logprob: -3.664546012878418
    7. 'n' → logprob: -4.539546012878418
    8. 'k' → logprob: -4.664546012878418
    9. '        ' → logprob: -5.039546012878418
    10. 'j' → logprob: -5.164546012878418

Token 452: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10680587589740753
    2. '(' → logprob: -2.9818058013916016
    3. '("")' → logprob: -3.4818058013916016
    4. '("' → logprob: -4.106805801391602
    5. '('' → logprob: -6.606805801391602
    6. '<|end|>' → logprob: -6.981805801391602
    7. '(
' → logprob: -8.356805801391602
    8. '(dp' → logprob: -8.481805801391602
    9. '#' → logprob: -8.981805801391602
    10. '(k' → logprob: -9.106805801391602

Token 453: 'loop' (ID: 14294)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.1601916253566742
    2. ' ')' → logprob: -2.660191535949707
    3. ')' → logprob: -2.910191535949707
    4. 'n' → logprob: -5.660191535949707
    5. '#' → logprob: -6.410191535949707
    6. 'l' → logprob: -6.410191535949707
    7. ' l' → logprob: -6.660191535949707
    8. ']' → logprob: -6.785191535949707
    9. ' )' → logprob: -6.785191535949707
    10. 'for' → logprob: -6.785191535949707

Token 454: ':',' (ID: 39112)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.2457152009010315
    2. ')' → logprob: -1.8707151412963867
    3. '<|end|>' → logprob: -2.9957151412963867
    4. '<|end|>' → logprob: -5.995715141296387
    5. ' )' → logprob: -6.370715141296387
    6. 's' → logprob: -6.495715141296387
    7. '")' → logprob: -6.620715141296387
    8. ']' → logprob: -6.620715141296387
    9. ' ')' → logprob: -7.370715141296387
    10. '```' → logprob: -7.370715141296387

Token 455: ' i' (ID: 575)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008424741216003895
    2. ' )' → logprob: -5.383424758911133
    3. '')' → logprob: -6.508424758911133
    4. '<|end|>' → logprob: -7.258424758911133
    5. ' k' → logprob: -7.633424758911133
    6. '           ' → logprob: -8.508424758911133
    7. ''' → logprob: -8.758424758911133
    8. 'k' → logprob: -9.133424758911133
    9. ')
' → logprob: -9.133424758911133
    10. '            ' → logprob: -9.883424758911133

Token 456: ',j' (ID: 22712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.036785680800676346
    2. '<|end|>' → logprob: -4.28678560256958
    3. '')' → logprob: -4.53678560256958
    4. '       ' → logprob: -5.03678560256958
    5. ',' → logprob: -5.66178560256958
    6. ' )' → logprob: -7.41178560256958
    7. '   ' → logprob: -8.286786079406738
    8. '<|end|>' → logprob: -8.911786079406738
    9. '        ' → logprob: -9.411786079406738
    10. ',j' → logprob: -9.536786079406738

Token 457: ',k' (ID: 35155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005767853930592537
    2. '<|end|>' → logprob: -6.130767822265625
    3. ',' → logprob: -6.755767822265625
    4. '#' → logprob: -7.255767822265625
    5. '')' → logprob: -7.380767822265625
    6. '       ' → logprob: -7.630767822265625
    7. ' )' → logprob: -8.505767822265625
    8. ')#' → logprob: -8.755767822265625
    9. ')
' → logprob: -9.880767822265625
    10. '           ' → logprob: -10.005767822265625

Token 458: ',l' (ID: 45198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016396844875998795
    2. '')' → logprob: -9.875164031982422
    3. '<|end|>' → logprob: -10.000164031982422
    4. ')
' → logprob: -10.250164031982422
    5. ')#' → logprob: -11.500164031982422
    6. '#' → logprob: -11.625164031982422
    7. '           ' → logprob: -12.625164031982422
    8. '       ' → logprob: -12.750164031982422
    9. ' )' → logprob: -12.875164031982422
    10. '<|end|>' → logprob: -14.500164031982422

Token 459: ',r' (ID: 33654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000866083602886647
    2. '<|end|>' → logprob: -7.500865936279297
    3. ')
' → logprob: -9.375865936279297
    4. ' )' → logprob: -9.750865936279297
    5. '')' → logprob: -10.000865936279297
    6. ')#' → logprob: -10.000865936279297
    7. '           ' → logprob: -10.875865936279297
    8. '#' → logprob: -11.000865936279297
    9. ',' → logprob: -11.125865936279297
    10. '       ' → logprob: -11.750865936279297

Token 460: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002214172709500417
    2. ')
' → logprob: -8.625221252441406
    3. '<|end|>' → logprob: -10.375221252441406
    4. ')#' → logprob: -12.875221252441406
    5. '')' → logprob: -13.000221252441406
    6. '       ' → logprob: -13.500221252441406
    7. '#' → logprob: -13.750221252441406
    8. '           ' → logprob: -14.125221252441406
    9. '```' → logprob: -14.750221252441406
    10. '   ' → logprob: -14.875221252441406

Token 461: 'dp' (ID: 19037)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0908309817314148
    2. '')' → logprob: -2.7158310413360596
    3. 'dp' → logprob: -4.3408308029174805
    4. ')
' → logprob: -5.8408308029174805
    5. ' )' → logprob: -6.7158308029174805
    6. '")' → logprob: -7.0908308029174805
    7. ' dp' → logprob: -7.9658308029174805
    8. 'True' → logprob: -8.21583080291748
    9. '#' → logprob: -8.46583080291748
    10. ''' → logprob: -8.59083080291748

Token 462: '[j' (ID: 7895)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005606581107713282
    2. '[' → logprob: -8.750560760498047
    3. '])' → logprob: -9.125560760498047
    4. '[j' → logprob: -9.250560760498047
    5. '<|end|>' → logprob: -10.125560760498047
    6. ')
' → logprob: -10.625560760498047
    7. '')' → logprob: -10.625560760498047
    8. ']' → logprob: -10.750560760498047
    9. ')])' → logprob: -10.875560760498047
    10. '[i' → logprob: -11.625560760498047

Token 463: '][' (ID: 2696)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.15492747724056244
    2. ']' → logprob: -2.4049274921417236
    3. ')' → logprob: -3.2799274921417236
    4. '[k' → logprob: -5.5299272537231445
    5. '])]' → logprob: -6.0299272537231445
    6. ')])' → logprob: -6.2799272537231445
    7. ',k' → logprob: -6.2799272537231445
    8. '[' → logprob: -6.4049272537231445
    9. '<|end|>' → logprob: -7.2799272537231445
    10. '[j' → logprob: -7.6549272537231445

Token 464: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.941850526549388e-06
    2. 'j' → logprob: -12.375007629394531
    3. ']' → logprob: -13.625007629394531
    4. 'n' → logprob: -13.750007629394531
    5. '
' → logprob: -14.625007629394531
    6. '0' → logprob: -15.125007629394531
    7. ' ' → logprob: -15.750007629394531
    8. 'None' → logprob: -16.12500762939453
    9. ')' → logprob: -16.50000762939453
    10. '   ' → logprob: -16.75000762939453

Token 465: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011832444579340518
    2. ')
' → logprob: -9.250118255615234
    3. ']' → logprob: -11.750118255615234
    4. '')' → logprob: -12.750118255615234
    5. '#' → logprob: -13.125118255615234
    6. ' )' → logprob: -13.125118255615234
    7. '           ' → logprob: -13.375118255615234
    8. '       ' → logprob: -13.875118255615234
    9. ')#' → logprob: -14.125118255615234
    10. '[' → logprob: -14.500118255615234

Token 466: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1715994030237198
    2. '<|end|>' → logprob: -2.9215993881225586
    3. '```' → logprob: -3.0465993881225586
    4. 'print' → logprob: -4.296599388122559
    5. '#' → logprob: -4.421599388122559
    6. ')' → logprob: -4.671599388122559
    7. 'n' → logprob: -5.046599388122559
    8. 'i' → logprob: -5.546599388122559
    9. '
' → logprob: -5.796599388122559
    10. 'k' → logprob: -6.296599388122559

Token 467: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.112016461789608
    2. 'for' → logprob: -2.362016439437866
    3. 'min' → logprob: -4.737016677856445
    4. 'i' → logprob: -7.237016677856445
    5. 'max' → logprob: -7.237016677856445
    6. 'result' → logprob: -7.362016677856445
    7. '#' → logprob: -7.987016677856445
    8. 'answer' → logprob: -8.862016677856445
    9. 'total' → logprob: -8.987016677856445
    10. '#print' → logprob: -9.112016677856445

Token 468: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5352877378463745
    2. '(dp' → logprob: -1.0352877378463745
    3. '()' → logprob: -3.160287857055664
    4. '(
' → logprob: -5.285287857055664
    5. '(max' → logprob: -5.410287857055664
    6. '(sum' → logprob: -6.410287857055664
    7. 'dp' → logprob: -6.535287857055664
    8. '("' → logprob: -6.785287857055664
    9. '(len' → logprob: -7.035287857055664
    10. '('' → logprob: -8.285287857055664

Token 469: 'DP' (ID: 16851)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3323620557785034
    2. '(dp' → logprob: -1.4573620557785034
    3. '(max' → logprob: -4.582362174987793
    4. 'max' → logprob: -4.707362174987793
    5. '(' → logprob: -5.207362174987793
    6. '()' → logprob: -5.582362174987793
    7. '("' → logprob: -5.582362174987793
    8. 'sum' → logprob: -5.957362174987793
    9. '('' → logprob: -5.957362174987793
    10. 'min' → logprob: -6.082362174987793

Token 470: ':",' (ID: 25704)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47847771644592285
    2. '])' → logprob: -1.6034777164459229
    3. ']' → logprob: -1.9784777164459229
    4. '[' → logprob: -4.353477478027344
    5. '")' → logprob: -4.353477478027344
    6. ')])' → logprob: -5.478477478027344
    7. ')
' → logprob: -6.228477478027344
    8. 'print' → logprob: -6.478477478027344
    9. ')")' → logprob: -6.728477478027344
    10. '[-' → logprob: -6.853477478027344

Token 471: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006511324550956488
    2. ' dp' → logprob: -5.756511211395264
    3. ')' → logprob: -5.881511211395264
    4. ')
' → logprob: -8.256511688232422
    5. '])' → logprob: -8.756511688232422
    6. '(dp' → logprob: -10.256511688232422
    7. '])
' → logprob: -10.756511688232422
    8. '   ' → logprob: -11.256511688232422
    9. ']' → logprob: -11.631511688232422
    10. 'print' → logprob: -11.881511688232422

Token 472: ')
' (ID: 446)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016034837812185287
    2. 'min' → logprob: -5.1410346031188965
    3. 'answer' → logprob: -5.5160346031188965
    4. 'for' → logprob: -5.8910346031188965
    5. 'result' → logprob: -5.8910346031188965
    6. 'minimum' → logprob: -8.891035079956055
    7. 'total' → logprob: -9.516035079956055
    8. 'm' → logprob: -10.016035079956055
    9. 'ans' → logprob: -10.016035079956055
    10. 'max' → logprob: -10.141035079956055

Token 473: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029703285545110703
    2. 'result' → logprob: -4.529703140258789
    3. 'min' → logprob: -4.654703140258789
    4. 'answer' → logprob: -5.029703140258789
    5. 'for' → logprob: -7.029703140258789
    6. 'res' → logprob: -7.654703140258789
    7. 'max' → logprob: -8.404703140258789
    8. 'ans' → logprob: -8.404703140258789
    9. 'best' → logprob: -8.779703140258789
    10. 'total' → logprob: -9.154703140258789

Token 474: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31396403908729553
    2. ' =' → logprob: -1.3139640092849731
    3. '_' → logprob: -7.313963890075684
    4. '[' → logprob: -11.188963890075684
    5. '_=' → logprob: -11.938963890075684
    6. '```' → logprob: -12.563963890075684
    7. 's' → logprob: -12.813963890075684
    8. ',' → logprob: -12.938963890075684
    9. '=
' → logprob: -13.938963890075684
    10. ' =
' → logprob: -13.938963890075684

Token 475: ' float' (ID: 4428)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05594222620129585
    2. 'min' → logprob: -3.4309422969818115
    3. ' dp' → logprob: -3.9309422969818115
    4. ' min' → logprob: -6.430942058563232
    5. 'float' → logprob: -7.305942058563232
    6. 'int' → logprob: -9.05594253540039
    7. ' float' → logprob: -11.30594253540039
    8. '(dp' → logprob: -12.55594253540039
    9. 'max' → logprob: -12.93094253540039
    10. ' int' → logprob: -13.18094253540039

Token 476: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.07899554073810577
    2. '('' → logprob: -2.5789954662323
    3. '(' → logprob: -9.328995704650879
    4. '"' → logprob: -12.078995704650879
    5. '("-' → logprob: -12.453995704650879
    6. '(ans' → logprob: -13.703995704650879
    7. '('-' → logprob: -13.703995704650879
    8. '(in' → logprob: -13.828995704650879
    9. 'ans' → logprob: -14.328995704650879
    10. ' ("' → logprob: -14.328995704650879

Token 477: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0004901225329376757
    2. '"' → logprob: -8.000490188598633
    3. ''in' → logprob: -9.000490188598633
    4. '-inf' → logprob: -11.000490188598633
    5. ''' → logprob: -11.250490188598633
    6. '"in' → logprob: -14.250490188598633
    7. ''s' → logprob: -15.000490188598633
    8. '_inf' → logprob: -15.875490188598633
    9. ' inf' → logprob: -15.875490188598633
    10. '('' → logprob: -16.125490188598633

Token 478: '")
' (ID: 1896)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2522546350955963
    2. ')' → logprob: -1.502254605293274
    3. '
' → logprob: -8.627254486083984
    4. 'for' → logprob: -9.502254486083984
    5. ' )
' → logprob: -10.377254486083984
    6. ')
' → logprob: -11.002254486083984
    7. ')

' → logprob: -11.752254486083984
    8. '[' → logprob: -12.877254486083984
    9. '())
' → logprob: -12.877254486083984
    10. ' )' → logprob: -13.002254486083984

Token 479: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.512236498361744e-07
    2. ' for' → logprob: -15.375000953674316
    3. '```' → logprob: -15.875000953674316
    4. 'i' → logprob: -16.125
    5. 'ans' → logprob: -17.75
    6. '
' → logprob: -17.75
    7. '``' → logprob: -19.375
    8. '	for' → logprob: -20.625
    9. 'print' → logprob: -22.375
    10. 'answer' → logprob: -22.625

Token 480: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01019799243658781
    2. 'j' → logprob: -5.13519811630249
    3. ' i' → logprob: -6.13519811630249
    4. 'k' → logprob: -6.76019811630249
    5. 'x' → logprob: -7.51019811630249
    6. 'end' → logprob: -8.260197639465332
    7. ' j' → logprob: -10.135197639465332
    8. 'l' → logprob: -11.010197639465332
    9. 'start' → logprob: -11.635197639465332
    10. 'final' → logprob: -11.635197639465332

Token 481: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4287368655204773
    2. 'in' → logprob: -1.053736925125122
    3. ' ' → logprob: -10.928736686706543
    4. '0' → logprob: -12.803736686706543
    5. '```' → logprob: -13.053736686706543
    6. 'range' → logprob: -13.178736686706543
    7. '	in' → logprob: -13.303736686706543
    8. 'n' → logprob: -13.303736686706543
    9. ')' → logprob: -13.428736686706543
    10. '   ' → logprob: -13.928736686706543

Token 482: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002036595979006961
    2. ' range' → logprob: -8.500204086303711
    3. '(range' → logprob: -16.00020408630371
    4. '   ' → logprob: -17.12520408630371
    5. ' ' → logprob: -17.37520408630371
    6. '
' → logprob: -18.87520408630371
    7. '  ' → logprob: -19.00020408630371
    8. '(' → logprob: -20.25020408630371
    9. 'in' → logprob: -20.25020408630371
    10. 'dp' → logprob: -20.25020408630371

Token 483: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00010318557906430215
    2. '(' → logprob: -9.250102996826172
    3. 'n' → logprob: -12.000102996826172
    4. '(i' → logprob: -15.375102996826172
    5. '(
' → logprob: -15.625102996826172
    6. '   ' → logprob: -15.750102996826172
    7. ' (' → logprob: -15.750102996826172
    8. 'range' → logprob: -16.875102996826172
    9. '(range' → logprob: -17.000102996826172
    10. '(len' → logprob: -17.125102996826172

Token 484: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0519295334815979
    2. '):
' → logprob: -3.051929473876953
    3. '):' → logprob: -5.801929473876953
    4. '(n' → logprob: -9.426929473876953
    5. '```' → logprob: -9.426929473876953
    6. ',' → logprob: -9.926929473876953
    7. '
' → logprob: -10.926929473876953
    8. ',n' → logprob: -10.926929473876953
    9. ' +' → logprob: -10.926929473876953
    10. 'n' → logprob: -11.051929473876953

Token 485: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. '+' → logprob: -13.250003814697266
    3. 'n' → logprob: -13.625003814697266
    4. '
' → logprob: -15.000003814697266
    5. ' ' → logprob: -15.250003814697266
    6. '0' → logprob: -17.500003814697266
    7. '(' → logprob: -17.500003814697266
    8. '   ' → logprob: -17.750003814697266
    9. '(n' → logprob: -18.375003814697266
    10. '2' → logprob: -18.875003814697266

Token 486: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004665680229663849
    2. '):' → logprob: -5.379665851593018
    3. '   ' → logprob: -11.12966537475586
    4. ':
' → logprob: -11.12966537475586
    5. '):
' → logprob: -11.50466537475586
    6. ':' → logprob: -12.75466537475586
    7. '[' → logprob: -14.25466537475586
    8. '
' → logprob: -14.37966537475586
    9. '():
' → logprob: -14.87966537475586
    10. '):

' → logprob: -15.00466537475586

Token 487: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035304634366184473
    2. 'if' → logprob: -5.878530502319336
    3. ' if' → logprob: -8.003530502319336
    4. 'for' → logprob: -8.628530502319336
    5. 'ans' → logprob: -8.628530502319336
    6. ' for' → logprob: -11.128530502319336
    7. ' ans' → logprob: -11.378530502319336
    8. '	ans' → logprob: -12.503530502319336
    9. '```' → logprob: -13.503530502319336
    10. '	if' → logprob: -14.253530502319336

Token 488: ' ans' (ID: 3345)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35416799783706665
    2. 'for' → logprob: -1.3541679382324219
    3. 'ans' (adapté à ' ans') → logprob: -3.354167938232422
    4. '   ' → logprob: -5.354167938232422
    5. ' if' → logprob: -8.104167938232422
    6. ' for' → logprob: -9.354167938232422
    7. ' ans' → logprob: -11.354167938232422
    8. ' ' → logprob: -11.729167938232422
    9. '	ans' → logprob: -13.354167938232422
    10. '    
' → logprob: -13.854167938232422

Token 489: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011059258133172989
    2. ' =' → logprob: -4.511059284210205
    3. '=min' → logprob: -11.636058807373047
    4. '=
' → logprob: -13.386058807373047
    5. '=max' → logprob: -14.386058807373047
    6. '<' → logprob: -15.761058807373047
    7. '<=' → logprob: -16.011058807373047
    8. '   ' → logprob: -16.386058807373047
    9. '.=' → logprob: -16.386058807373047
    10. '=int' → logprob: -16.761058807373047

Token 490: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.16022422909736633
    2. ' min' → logprob: -1.910224199295044
    3. 'ans' → logprob: -17.03522491455078
    4. '(min' → logprob: -17.41022491455078
    5. 'dp' → logprob: -17.66022491455078
    6. ' dp' → logprob: -18.16022491455078
    7. '	min' → logprob: -18.41022491455078
    8. '=min' → logprob: -18.78522491455078
    9. ' ans' → logprob: -18.91022491455078
    10. '[min' → logprob: -19.78522491455078

Token 491: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -14.125000953674316
    3. 'ans' → logprob: -14.375000953674316
    4. '(dp' → logprob: -17.250001907348633
    5. '(
' → logprob: -19.750001907348633
    6. '(answer' → logprob: -19.750001907348633
    7. '	ans' → logprob: -20.250001907348633
    8. '(err' → logprob: -20.375001907348633
    9. '(arr' → logprob: -21.125001907348633
    10. '(an' → logprob: -22.250001907348633

Token 492: ',' (ID: 11)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.49323567748069763
    2. '(dp' → logprob: -0.99323570728302
    3. ',' → logprob: -3.9932355880737305
    4. '[' → logprob: -8.11823558807373
    5. 'ans' → logprob: -8.99323558807373
    6. '(' → logprob: -9.86823558807373
    7. '[i' → logprob: -11.11823558807373
    8. ')' → logprob: -11.49323558807373
    9. 'dp' → logprob: -11.61823558807373
    10. '(
' → logprob: -11.61823558807373

Token 493: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0002613358374219388
    2. ' dp' → logprob: -8.250261306762695
    3. '   ' → logprob: -19.000261306762695
    4. '(dp' → logprob: -19.875261306762695
    5. '	dp' → logprob: -19.875261306762695
    6. '       ' → logprob: -23.125261306762695
    7. '```' → logprob: -23.125261306762695
    8. '_dp' → logprob: -23.250261306762695
    9. '.dp' → logprob: -23.875261306762695
    10. ' ' → logprob: -23.875261306762695

Token 494: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0029383599758148193
    2. '[n' → logprob: -5.877938270568848
    3. 'i' → logprob: -9.002938270568848
    4. ' [' → logprob: -12.502938270568848
    5. '[' → logprob: -13.252938270568848
    6. '][' → logprob: -13.877938270568848
    7. 'n' → logprob: -14.377938270568848
    8. '
' → logprob: -14.377938270568848
    9. '[-' → logprob: -14.377938270568848
    10. '[len' → logprob: -14.502938270568848

Token 495: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0020854277536273003
    2. '[n' → logprob: -6.252085208892822
    3. '[i' → logprob: -9.25208568572998
    4. ']' → logprob: -10.75208568572998
    5. ' ][' → logprob: -11.50208568572998
    6. '[' → logprob: -11.62708568572998
    7. ')[' → logprob: -11.75208568572998
    8. '][-' → logprob: -11.87708568572998
    9. '}[' → logprob: -13.25208568572998
    10. '   ' → logprob: -14.25208568572998

Token 496: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005545823951251805
    2. 'i' → logprob: -7.50055456161499
    3. ' n' → logprob: -13.875555038452148
    4. '[n' → logprob: -15.125555038452148
    5. '
' → logprob: -16.00055503845215
    6. '[i' → logprob: -16.75055503845215
    7. '(n' → logprob: -16.87555503845215
    8. '   ' → logprob: -17.00055503845215
    9. '{' → logprob: -17.37555503845215
    10. '```' → logprob: -17.50055503845215

Token 497: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -2.15310683415737e-05
    2. '])
' → logprob: -11.750021934509277
    3. ')' → logprob: -12.250021934509277
    4. '-' → logprob: -12.375021934509277
    5. ']' → logprob: -12.500021934509277
    6. '))' → logprob: -14.625021934509277
    7. ' ])' → logprob: -15.875021934509277
    8. ')]' → logprob: -16.37502098083496
    9. ')])' → logprob: -16.50002098083496
    10. ']))' → logprob: -16.75002098083496

Token 498: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.68022444692906e-05
    2. '```' → logprob: -10.000046730041504
    3. '
' → logprob: -14.000046730041504
    4. '``' → logprob: -14.500046730041504
    5. ' print' → logprob: -17.12504768371582
    6. '#print' → logprob: -19.50004768371582
    7. '  
' → logprob: -20.12504768371582
    8. '    
' → logprob: -20.75004768371582
    9. '-print' → logprob: -21.00004768371582
    10. '`' → logprob: -21.37504768371582

Token 499: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.018428867682814598
    2. '(' → logprob: -4.018428802490234
    3. '()' → logprob: -8.268428802490234
    4. 'ans' → logprob: -10.893428802490234
    5. '('' → logprob: -13.893428802490234
    6. '(
' → logprob: -13.893428802490234
    7. ' (' → logprob: -14.643428802490234
    8. '(answer' → logprob: -14.768428802490234
    9. '("("' → logprob: -15.143428802490234
    10. '("' → logprob: -15.268428802490234

Token 500: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.500000953674316
    3. '())' → logprob: -15.125000953674316
    4. ')
' → logprob: -15.250000953674316
    5. '))' → logprob: -15.500000953674316
    6. ')`' → logprob: -16.250001907348633
    7. '()' → logprob: -16.750001907348633
    8. '`)' → logprob: -17.000001907348633
    9. '')' → logprob: -18.875001907348633
    10. '")' → logprob: -19.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 498
Tokens correctement prédits (1ère position, stricte): 216
Tokens correctement prédits (1ère position, avec adaptation): 230
Tokens correctement prédits (top 10): 391
Précision stricte (1ère position): 43.37%
Précision adaptée (1ère position): 46.18%
Précision (top 10): 78.51%
================================================================================
