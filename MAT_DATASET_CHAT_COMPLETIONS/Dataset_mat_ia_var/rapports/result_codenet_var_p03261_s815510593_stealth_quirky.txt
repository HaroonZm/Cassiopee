================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
n=int(sys.stdin.readline())
a=sys.stdin.readline().rstrip()
track={a:None}
i=1
while i<n:
    b=sys.stdin.readline().rstrip()
    if b in track:
        print("No")
        sys.exit()
    if a[-1]!=b[0]:
        print("No")
        sys.exit()
    track[b]=None
    a=b
    i+=1
else:
    print("Yes")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: '=int' (ID: 37431)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5993443727493286
    2. '=' → logprob: -1.3493443727493286
    3. '_' → logprob: -2.474344253540039
    4. ' =' → logprob: -3.099344253540039
    5. ' ' → logprob: -4.099344253540039
    6. ',' → logprob: -4.474344253540039
    7. 'a' → logprob: -4.474344253540039
    8. 'e' → logprob: -5.099344253540039
    9. 'u' → logprob: -5.474344253540039
    10. 'p' → logprob: -6.224344253540039

Token 5: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002558561391197145
    2. '(sys' → logprob: -9.375255584716797
    3. '('' → logprob: -9.375255584716797
    4. '(n' → logprob: -10.625255584716797
    5. '("("' → logprob: -10.625255584716797
    6. '```' → logprob: -12.000255584716797
    7. ' (' → logprob: -12.125255584716797
    8. '()' → logprob: -12.625255584716797
    9. ''' → logprob: -12.625255584716797
    10. '(open' → logprob: -12.750255584716797

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0018735475605353713
    2. '.)' → logprob: -6.37687349319458
    3. '.")' → logprob: -9.876873970031738
    4. '.')' → logprob: -10.251873970031738
    5. ')' → logprob: -10.501873970031738
    6. '.argv' → logprob: -10.876873970031738
    7. '.stdin' → logprob: -11.251873970031738
    8. '.readline' → logprob: -11.626873970031738
    9. '.​' → logprob: -12.876873970031738
    10. '[' → logprob: -13.126873970031738

Token 7: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4943075478076935
    2. '.readline' → logprob: -0.9943075180053711
    3. '.read' → logprob: -3.994307518005371
    4. '.)' → logprob: -6.494307518005371
    5. ')' → logprob: -10.494307518005371
    6. '.Read' → logprob: -10.744307518005371
    7. '.")' → logprob: -11.244307518005371
    8. '.')' → logprob: -11.619307518005371
    9. '.readlines' → logprob: -11.869307518005371
    10. '.READ' → logprob: -12.244307518005371

Token 8: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.13504014909267426
    2. '()' → logprob: -2.135040044784546
    3. ')' → logprob: -5.010040283203125
    4. '(' → logprob: -7.385040283203125
    5. '().' → logprob: -7.385040283203125
    6. ' ())' → logprob: -9.385040283203125
    7. '()))' → logprob: -10.260040283203125
    8. '()[' → logprob: -11.510040283203125
    9. '())
' → logprob: -12.135040283203125
    10. '();)' → logprob: -12.260040283203125

Token 9: 'a' (ID: 64)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07294822484254837
    2. '\n' → logprob: -3.6979482173919678
    3. 'if' → logprob: -4.447948455810547
    4. ' for' → logprob: -4.697948455810547
    5. 'i' → logprob: -5.322948455810547
    6. ' ' → logprob: -5.822948455810547
    7. ')' → logprob: -5.822948455810547
    8. 'a' → logprob: -6.072948455810547
    9. '#' → logprob: -6.572948455810547
    10. '+' → logprob: -6.697948455810547

Token 10: '=sys' (ID: 149200)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009405412711203098
    2. '.' → logprob: -5.509405612945557
    3. '[a' → logprob: -6.384405612945557
    4. '=' → logprob: -6.509405612945557
    5. 'a' → logprob: -7.384405612945557
    6. '[i' → logprob: -7.634405612945557
    7. '[:]' → logprob: -8.134405136108398
    8. ' =' → logprob: -8.384405136108398
    9. '[]' → logprob: -9.509405136108398
    10. '[p' → logprob: -9.634405136108398

Token 11: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0645560622215271
    2. '.stdin' → logprob: -2.814556121826172
    3. '.readline' → logprob: -6.439556121826172
    4. '.stdout' → logprob: -7.064556121826172
    5. ' .' → logprob: -10.189556121826172
    6. '.argv' → logprob: -10.564556121826172
    7. '.read' → logprob: -11.439556121826172
    8. '.std' → logprob: -11.439556121826172
    9. '.stderr' → logprob: -12.064556121826172
    10. '<|end|>' → logprob: -12.189556121826172

Token 12: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.003934849053621292
    2. '.' → logprob: -5.628934860229492
    3. '.read' → logprob: -8.128934860229492
    4. '.readlines' → logprob: -10.253934860229492
    5. '.Read' → logprob: -12.753934860229492
    6. '.write' → logprob: -14.503934860229492
    7. ' .' → logprob: -14.878934860229492
    8. ' readline' → logprob: -15.003934860229492
    9. '```' → logprob: -15.753934860229492
    10. '().' → logprob: -16.503934860229492

Token 13: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.057179044932127
    2. '(' → logprob: -3.3071789741516113
    3. '().' → logprob: -4.057178974151611
    4. '.' → logprob: -7.182178974151611
    5. ')' → logprob: -7.432178974151611
    6. '())' → logprob: -9.68217945098877
    7. ' ()' → logprob: -10.30717945098877
    8. '40' → logprob: -10.30717945098877
    9. '```' → logprob: -10.55717945098877
    10. '`()' → logprob: -10.93217945098877

Token 14: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.5046022534370422
    2. 'split' → logprob: -1.0046021938323975
    3. 'rstrip' → logprob: -3.5046021938323975
    4. ' split' → logprob: -12.879602432250977
    5. 'rs' → logprob: -13.254602432250977
    6. ' strip' → logprob: -14.254602432250977
    7. 'spl' → logprob: -16.254602432250977
    8. 'rst' → logprob: -16.379602432250977
    9. 'replace' → logprob: -16.754602432250977
    10. 'r' → logprob: -17.129602432250977

Token 15: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4553820490837097
    2. '(' → logprob: -1.8303821086883545
    3. '"' → logprob: -2.7053821086883545
    4. '```' → logprob: -2.9553821086883545
    5. ''' → logprob: -3.0803821086883545
    6. '`' → logprob: -3.8303821086883545
    7. ')' → logprob: -5.955381870269775
    8. '\' → logprob: -6.080381870269775
    9. '`()' → logprob: -6.580381870269775
    10. '   ' → logprob: -6.830381870269775

Token 16: 'track' (ID: 22792)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.541957437992096
    2. 'if' → logprob: -1.5419573783874512
    3. 'a' → logprob: -2.291957378387451
    4. 's' → logprob: -3.166957378387451
    5. '[' → logprob: -4.541957378387451
    6. 'for' → logprob: -5.166957378387451
    7. '=' → logprob: -5.166957378387451
    8. '.' → logprob: -5.416957378387451
    9. 'data' → logprob: -5.416957378387451
    10. 'list' → logprob: -5.666957378387451

Token 17: '={' (ID: 1693)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4801934063434601
    2. 's' → logprob: -1.8551933765411377
    3. '_' → logprob: -2.4801933765411377
    4. 'd' → logprob: -3.3551933765411377
    5. 'er' → logprob: -3.6051933765411377
    6. 'ed' → logprob: -3.8551933765411377
    7. '[' → logprob: -3.9801933765411377
    8. '=[]' → logprob: -4.480193614959717
    9. 'ing' → logprob: -4.605193614959717
    10. ' =' → logprob: -5.605193614959717

Token 18: 'a' (ID: 64)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0008464370621368289
    2. ''}' → logprob: -8.000846862792969
    3. '"}' → logprob: -8.750846862792969
    4. ' }' → logprob: -9.000846862792969
    5. 'a' → logprob: -9.125846862792969
    6. '`}' → logprob: -10.250846862792969
    7. '[]}' → logprob: -10.375846862792969
    8. '0' → logprob: -10.375846862792969
    9. '}
' → logprob: -12.125846862792969
    10. '},' → logprob: -12.625846862792969

Token 19: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007873606868088245
    2. ':a' → logprob: -5.25787353515625
    3. ' :' → logprob: -6.63287353515625
    4. '}' → logprob: -7.13287353515625
    5. '[a' → logprob: -9.00787353515625
    6. ':[' → logprob: -9.25787353515625
    7. ':['' → logprob: -10.25787353515625
    8. ':n' → logprob: -10.38287353515625
    9. ':add' → logprob: -10.38287353515625
    10. ':''' → logprob: -10.50787353515625

Token 20: 'None' (ID: 8505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07232388854026794
    2. '0' → logprob: -2.697323799133301
    3. 'n' → logprob: -6.947323799133301
    4. 'True' → logprob: -6.947323799133301
    5. ' ' → logprob: -8.4473237991333
    6. '[' → logprob: -9.0723237991333
    7. ' True' → logprob: -10.4473237991333
    8. '[n' → logprob: -10.6973237991333
    9. 'False' → logprob: -10.8223237991333
    10. '-' → logprob: -11.4473237991333

Token 21: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0023284326307475567
    2. ',' → logprob: -6.127328395843506
    3. ' }' → logprob: -9.377328872680664
    4. '})' → logprob: -10.002328872680664
    5. ')' → logprob: -11.502328872680664
    6. ')}' → logprob: -14.127328872680664
    7. '}
' → logprob: -14.252328872680664
    8. ',
' → logprob: -14.377328872680664
    9. '}")' → logprob: -15.002328872680664
    10. '}')' → logprob: -15.377328872680664

Token 22: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03503655642271042
    2. 'if' → logprob: -4.285036563873291
    3. ' for' → logprob: -4.910036563873291
    4. 'b' → logprob: -5.410036563873291
    5. 'i' → logprob: -6.160036563873291
    6. 'while' → logprob: -6.410036563873291
    7. ',' → logprob: -6.785036563873291
    8. 's' → logprob: -6.910036563873291
    9. '.' → logprob: -7.410036563873291
    10. 'f' → logprob: -7.660036563873291

Token 23: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.046387676149606705
    2. ' =' → logprob: -3.1713876724243164
    3. 'n' → logprob: -6.296387672424316
    4. 'f' → logprob: -7.046387672424316
    5. ' ' → logprob: -7.921387672424316
    6. '+=' → logprob: -9.671387672424316
    7. 'd' → logprob: -10.046387672424316
    8. 'nt' → logprob: -10.296387672424316
    9. 'nd' → logprob: -10.296387672424316
    10. '+' → logprob: -10.421387672424316

Token 24: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026517879217863083
    2. '1' → logprob: -3.776517868041992
    3. ' ' → logprob: -5.776517868041992
    4. '2' → logprob: -9.026517868041992
    5. 'n' → logprob: -10.151517868041992
    6. ' n' → logprob: -13.026517868041992
    7. 'len' → logprob: -13.276517868041992
    8. 'int' → logprob: -13.401517868041992
    9. '-' → logprob: -14.026517868041992
    10. 'a' → logprob: -15.026517868041992

Token 25: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8289245367050171
    2. '<|end|>' → logprob: -1.078924536705017
    3. ' while' → logprob: -2.0789246559143066
    4. '
' → logprob: -2.9539246559143066
    5. ' ' → logprob: -3.5789246559143066
    6. ')' → logprob: -5.328924655914307
    7. ' 
' → logprob: -6.203924655914307
    8. ',' → logprob: -6.328924655914307
    9. '<|end|>' → logprob: -6.578924655914307
    10. 's' → logprob: -6.578924655914307

Token 27: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.013789935037493706
    2. 'i' → logprob: -4.388790130615234
    3. ' n' → logprob: -7.513790130615234
    4. ' True' → logprob: -7.513790130615234
    5. ' ' → logprob: -9.138790130615234
    6. 'True' → logprob: -10.638790130615234
    7. 'n' → logprob: -11.013790130615234
    8. ' len' → logprob: -11.513790130615234
    9. ' not' → logprob: -11.513790130615234
    10. ' a' → logprob: -11.513790130615234

Token 28: '<n' (ID: 33872)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.24893739819526672
    2. '<' → logprob: -1.6239373683929443
    3. '<n' → logprob: -4.498937606811523
    4. '<len' → logprob: -4.498937606811523
    5. '<=' → logprob: -7.498937606811523
    6. ' <=' → logprob: -7.873937606811523
    7. ' n' → logprob: -11.373937606811523
    8. ' in' → logprob: -11.373937606811523
    9. '<size' → logprob: -11.498937606811523
    10. 'in' → logprob: -11.873937606811523

Token 29: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004092235758434981
    2. ':
' → logprob: -8.750409126281738
    3. '+' → logprob: -9.750409126281738
    4. ' :' → logprob: -9.875409126281738
    5. ' and' → logprob: -10.000409126281738
    6. '+:' → logprob: -10.125409126281738
    7. '):' → logprob: -10.625409126281738
    8. ',' → logprob: -12.125409126281738
    9. 'and' → logprob: -12.250409126281738
    10. '>' → logprob: -12.375409126281738

Token 30: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9743074774742126
    2. ' 
' → logprob: -1.4743075370788574
    3. '   ' → logprob: -2.0993075370788574
    4. '<|end|>' → logprob: -2.0993075370788574
    5. ' a' → logprob: -2.4743075370788574
    6. 'a' → logprob: -4.224307537078857
    7. ' s' → logprob: -4.349307537078857
    8. '<|end|>' → logprob: -5.099307537078857
    9. '    
' → logprob: -5.224307537078857
    10. ' i' → logprob: -5.349307537078857

Token 31: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9214280843734741
    2. ' s' → logprob: -1.1714280843734741
    3. ' b' → logprob: -1.4214280843734741
    4. ' a' → logprob: -4.046428203582764
    5. ' 
' → logprob: -5.046428203582764
    6. 'b' (adapté à ' b') → logprob: -5.046428203582764
    7. ' line' → logprob: -5.421428203582764
    8. ' t' → logprob: -6.171428203582764
    9. ' i' → logprob: -6.171428203582764
    10. ' new' → logprob: -6.296428203582764

Token 32: '=sys' (ID: 149200)
  Prédit: '=sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sys' → logprob: -0.18886232376098633
    2. '=' → logprob: -2.1888623237609863
    3. ' =' → logprob: -2.8138623237609863
    4. '=input' → logprob: -9.688861846923828
    5. '=s' → logprob: -11.688861846923828
    6. '=int' → logprob: -12.563861846923828
    7. ' sys' → logprob: -12.688861846923828
    8. '=a' → logprob: -14.438861846923828
    9. '=subprocess' → logprob: -14.438861846923828
    10. '=

' → logprob: -14.438861846923828

Token 33: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00020056030189152807
    2. '.stdout' → logprob: -8.625200271606445
    3. '.' → logprob: -11.625200271606445
    4. '.std' → logprob: -12.500200271606445
    5. 'stdin' → logprob: -12.875200271606445
    6. '.readline' → logprob: -12.875200271606445
    7. '.argv' → logprob: -13.000200271606445
    8. '.stderr' → logprob: -14.750200271606445
    9. '.st' → logprob: -14.875200271606445
    10. '(stdin' → logprob: -16.375200271606445

Token 34: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.5048530030981055e-06
    2. '.' → logprob: -14.000001907348633
    3. '.readlines' → logprob: -14.750001907348633
    4. '.stdin' → logprob: -16.125001907348633
    5. '.read' → logprob: -16.500001907348633
    6. '().' → logprob: -17.500001907348633
    7. ' readline' → logprob: -17.625001907348633
    8. '```' → logprob: -18.875001907348633
    9. 'read' → logprob: -20.250001907348633
    10. '.write' → logprob: -20.625001907348633

Token 35: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.06199738010764122
    2. '()' → logprob: -2.811997413635254
    3. '())' → logprob: -11.186997413635254
    4. '()).' → logprob: -12.186997413635254
    5. ')' → logprob: -12.561997413635254
    6. '.readline' → logprob: -12.686997413635254
    7. '.rstrip' → logprob: -14.186997413635254
    8. '(' → logprob: -14.686997413635254
    9. ').' → logprob: -14.811997413635254
    10. '()].' → logprob: -14.936997413635254

Token 36: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -7.93448489275761e-05
    2. 'strip' → logprob: -9.500079154968262
    3. 'rst' → logprob: -13.125079154968262
    4. '.rstrip' → logprob: -13.750079154968262
    5. '```' → logprob: -14.625079154968262
    6. 'rt' → logprob: -15.875079154968262
    7. 'rl' → logprob: -16.125080108642578
    8. 'read' → logprob: -16.250080108642578
    9. 'r' → logprob: -16.250080108642578
    10. ' ' → logprob: -16.250080108642578

Token 37: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004136699251830578
    2. '()
' → logprob: -5.754136562347412
    3. ')' → logprob: -7.129136562347412
    4. '())' → logprob: -9.00413703918457
    5. '()<' → logprob: -12.12913703918457
    6. '()\' → logprob: -12.12913703918457
    7. '   ' → logprob: -12.87913703918457
    8. '()

' → logprob: -12.87913703918457
    9. '(' → logprob: -13.00413703918457
    10. '())
' → logprob: -13.12913703918457

Token 38: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1973184049129486
    2. 'if' (adapté à ' if') → logprob: -1.822318434715271
    3. '<|end|>' → logprob: -4.3223185539245605
    4. ' ' → logprob: -6.6973185539245605
    5. '
' → logprob: -6.8223185539245605
    6. ' 
' → logprob: -7.4473185539245605
    7. '<|end|>' → logprob: -8.197318077087402
    8. '   ' → logprob: -8.197318077087402
    9. 'i' → logprob: -8.572318077087402
    10. '    ' → logprob: -9.447318077087402

Token 40: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.0006068871589377522
    2. 'b' → logprob: -7.500607013702393
    3. ' ' → logprob: -10.125606536865234
    4. ' not' → logprob: -11.750606536865234
    5. ' a' → logprob: -12.375606536865234
    6. ' ' → logprob: -13.500606536865234
    7. 'a' → logprob: -15.750606536865234
    8. 'not' → logprob: -16.750606536865234
    9. ' '' → logprob: -17.563106536865234
    10. '	b' → logprob: -17.875606536865234

Token 41: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6406622529029846
    2. ' in' → logprob: -1.0156621932983398
    3. 'in' → logprob: -2.51566219329834
    4. 'not' → logprob: -3.51566219329834
    5. ' ' → logprob: -8.26566219329834
    6. '==' → logprob: -11.14066219329834
    7. ')' → logprob: -11.14066219329834
    8. ' ==' → logprob: -12.07816219329834
    9. '!=' → logprob: -12.14066219329834
    10. '	not' → logprob: -12.14066219329834

Token 42: ' track' (ID: 5290)
  Prédit: ' track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' track' → logprob: -0.5231354236602783
    2. 'track' → logprob: -0.8981354236602783
    3. ' ' → logprob: -12.0231351852417
    4. '(track' → logprob: -12.5231351852417
    5. 'tracker' → logprob: -14.7731351852417
    6. '   ' → logprob: -15.0231351852417
    7. 'tracking' → logprob: -15.1481351852417
    8. 'tracks' → logprob: -15.1481351852417
    9. ' tracks' → logprob: -15.3981351852417
    10. '.track' → logprob: -15.7731351852417

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002282053232192993
    2. ':
' → logprob: -6.25228214263916
    3. ' :' → logprob: -8.37728214263916
    4. ':return' → logprob: -9.37728214263916
    5. '.keys' → logprob: -10.87728214263916
    6. '   ' → logprob: -12.37728214263916
    7. '):' → logprob: -12.87728214263916
    8. '==' → logprob: -13.12728214263916
    9. ' or' → logprob: -13.37728214263916
    10. ' and' → logprob: -13.37728214263916

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5352391004562378
    2. ':' → logprob: -0.9102391004562378
    3. '   ' → logprob: -5.410239219665527
    4. ':
' → logprob: -5.535239219665527
    5. '.' → logprob: -6.410239219665527
    6. ' :' → logprob: -7.910239219665527
    7. ' print' → logprob: -8.285239219665527
    8. '):' → logprob: -8.410239219665527
    9. '    ' → logprob: -9.035239219665527
    10. ',' → logprob: -9.285239219665527

Token 45: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34390443563461304
    2. '       ' → logprob: -1.5939044952392578
    3. ' print' → logprob: -2.718904495239258
    4. 'print' (adapté à ' print') → logprob: -4.218904495239258
    5. ' break' → logprob: -5.968904495239258
    6. ' ' → logprob: -7.218904495239258
    7. '    ' → logprob: -7.468904495239258
    8. '```' → logprob: -7.593904495239258
    9. ':' → logprob: -7.718904495239258
    10. 'break' → logprob: -8.593904495239258

Token 46: '("' (ID: 568)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.29234716296195984
    2. '(' → logprob: -2.2923471927642822
    3. '(b' → logprob: -2.4173471927642822
    4. '(a' → logprob: -3.0423471927642822
    5. '(track' → logprob: -4.542346954345703
    6. '("' → logprob: -5.667346954345703
    7. '('' → logprob: -7.417346954345703
    8. '((' → logprob: -8.542346954345703
    9. 'b' → logprob: -8.917346954345703
    10. '("("' → logprob: -9.167346954345703

Token 47: 'No' (ID: 3160)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5991382598876953
    2. 'Yes' → logprob: -1.3491382598876953
    3. 'YES' → logprob: -1.8491382598876953
    4. 'NO' → logprob: -5.224138259887695
    5. '"' → logprob: -5.599138259887695
    6. 'i' → logprob: -5.724138259887695
    7. 'bad' → logprob: -5.849138259887695
    8. 're' → logprob: -5.974138259887695
    9. ' b' → logprob: -6.349138259887695
    10. 'yes' → logprob: -6.724138259887695

Token 48: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5774800181388855
    2. ')' → logprob: -0.8274800181388855
    3. ' )' → logprob: -7.202479839324951
    4. ')
' → logprob: -8.57748031616211
    5. ' ")' → logprob: -8.57748031616211
    6. '")
' → logprob: -8.95248031616211
    7. '')' → logprob: -9.82748031616211
    8. '
' → logprob: -9.95248031616211
    9. '"' → logprob: -10.32748031616211
    10. '<|end|>' → logprob: -10.45248031616211

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024720560759305954
    2. '   ' → logprob: -4.774720668792725
    3. ')' → logprob: -5.274720668792725
    4. '<|end|>' → logprob: -5.274720668792725
    5. '
' → logprob: -5.649720668792725
    6. '```' → logprob: -7.649720668792725
    7. ',' → logprob: -8.024720191955566
    8. '           ' → logprob: -8.274720191955566
    9. '<|end|>' → logprob: -8.774720191955566
    10. '        
' → logprob: -9.274720191955566

Token 50: ' sys' (ID: 12228)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0410887785255909
    2. '   ' → logprob: -3.541088819503784
    3. '	exit' → logprob: -5.416088581085205
    4. ' ' → logprob: -5.666088581085205
    5. '	break' → logprob: -6.791088581085205
    6. ' exit' → logprob: -8.041089057922363
    7. '\t' → logprob: -8.041089057922363
    8. '
' → logprob: -8.416089057922363
    9. '    ' → logprob: -8.666089057922363
    10. '           ' → logprob: -8.791089057922363

Token 51: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.0002100965939462185
    2. '.' → logprob: -8.50020980834961
    3. 'exit' → logprob: -12.37520980834961
    4. '.stdout' → logprob: -14.12520980834961
    5. '	exit' → logprob: -14.25020980834961
    6. ' exit' → logprob: -14.75020980834961
    7. ' .' → logprob: -15.25020980834961
    8. '.EXIT' → logprob: -16.25020980834961
    9. '.Exit' → logprob: -16.50020980834961
    10. '.quit' → logprob: -16.75020980834961

Token 52: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023278439417481422
    2. '(' → logprob: -3.7732784748077393
    3. '()
' → logprob: -11.02327823638916
    4. '())' → logprob: -12.39827823638916
    5. '()\' → logprob: -12.77327823638916
    6. '()`' → logprob: -12.89827823638916
    7. '()

' → logprob: -13.02327823638916
    8. '()(' → logprob: -13.39827823638916
    9. '()]' → logprob: -13.64827823638916
    10. ' ()' → logprob: -15.27327823638916

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021625140216201544
    2. 'track' → logprob: -6.627162456512451
    3. ' track' → logprob: -7.252162456512451
    4. '    
' → logprob: -9.87716293334961
    5. '
' → logprob: -10.50216293334961
    6. '```' → logprob: -11.12716293334961
    7. '(track' → logprob: -11.87716293334961
    8. '  
' → logprob: -12.25216293334961
    9. ' ' → logprob: -12.50216293334961
    10. 'else' → logprob: -12.50216293334961

Token 54: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7726860046386719
    2. 'track' → logprob: -0.7726860046386719
    3. ' track' → logprob: -2.647686004638672
    4. ' ' → logprob: -6.522686004638672
    5. 'else' → logprob: -6.522686004638672
    6. '(track' → logprob: -7.147686004638672
    7. '```' → logprob: -7.647686004638672
    8. ' else' → logprob: -7.897686004638672
    9. '[' → logprob: -8.272686004638672
    10. '    
' → logprob: -8.522686004638672

Token 55: ' a' (ID: 261)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.17906902730464935
    2. 'b' → logprob: -2.0540690422058105
    3. ' len' → logprob: -3.9290690422058105
    4. 'len' → logprob: -4.6790690422058105
    5. ' not' → logprob: -5.8040690422058105
    6. 'a' → logprob: -6.8040690422058105
    7. ' ' → logprob: -7.0540690422058105
    8. ' a' → logprob: -7.4290690422058105
    9. 'not' → logprob: -7.6790690422058105
    10. '"' → logprob: -8.679068565368652

Token 56: '[-' (ID: 17503)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.6098135709762573
    2. '[:' → logprob: -1.6098135709762573
    3. '==' → logprob: -1.8598135709762573
    4. '[' → logprob: -3.109813690185547
    5. '!=' → logprob: -3.734813690185547
    6. '.endswith' → logprob: -4.484813690185547
    7. '>' → logprob: -4.859813690185547
    8. '[-' → logprob: -5.234813690185547
    9. 'startswith' → logprob: -6.109813690185547
    10. '[i' → logprob: -6.234813690185547

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017367063090205193
    2. 'b' → logprob: -4.767366886138916
    3. 'len' → logprob: -5.642366886138916
    4. 'k' → logprob: -6.267366886138916
    5. '3' → logprob: -7.017366886138916
    6. '2' → logprob: -7.017366886138916
    7. 'i' → logprob: -7.767366886138916
    8. '4' → logprob: -8.267367362976074
    9. '5' → logprob: -8.767367362976074
    10. ' ' → logprob: -9.017367362976074

Token 58: ']!=' (ID: 85780)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1862996369600296
    2. '==' → logprob: -1.9362996816635132
    3. ' !=' → logprob: -4.436299800872803
    4. ']!=' → logprob: -5.561299800872803
    5. ']==' → logprob: -5.686299800872803
    6. ' ==' → logprob: -5.811299800872803
    7. '=' → logprob: -6.436299800872803
    8. ')!=' → logprob: -7.686299800872803
    9. '[' → logprob: -7.936299800872803
    10. ']' → logprob: -8.311299324035645

Token 59: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07889782637357712
    2. ' b' → logprob: -2.578897714614868
    3. ' ' → logprob: -11.828897476196289
    4. ''b' → logprob: -15.328897476196289
    5. '  ' → logprob: -15.953897476196289
    6. '<|end|>' → logprob: -16.57889747619629
    7. ''' → logprob: -16.70389747619629
    8. '	b' → logprob: -16.70389747619629
    9. '>b' → logprob: -17.20389747619629
    10. '`' → logprob: -17.32889747619629

Token 60: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.65707261255011e-06
    2. '0' → logprob: -12.000008583068848
    3. ' [' → logprob: -13.750008583068848
    4. ''s' → logprob: -14.750008583068848
    5. '[
' → logprob: -15.250008583068848
    6. ' ' → logprob: -16.000009536743164
    7. '1' → logprob: -16.000009536743164
    8. 's' → logprob: -16.250009536743164
    9. 'b' → logprob: -16.625009536743164
    10. ')' → logprob: -17.125009536743164

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012487331696320325
    2. ' ' → logprob: -9.00012493133545
    3. ':' → logprob: -14.75012493133545
    4. '[' → logprob: -15.62512493133545
    5. '  ' → logprob: -15.93762493133545
    6. '
' → logprob: -15.93762493133545
    7. ' :' → logprob: -16.125123977661133
    8. '1' → logprob: -16.375123977661133
    9. '   ' → logprob: -16.375123977661133
    10. '-' → logprob: -17.125123977661133

Token 62: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5917022824287415
    2. '):
' → logprob: -1.4667022228240967
    3. ':' → logprob: -1.9667022228240967
    4. ')' → logprob: -2.9667022228240967
    5. ':
' → logprob: -4.466702461242676
    6. '   ' → logprob: -5.091702461242676
    7. ']:' → logprob: -5.841702461242676
    8. ']' → logprob: -6.716702461242676
    9. '       ' → logprob: -7.466702461242676
    10. ']:
' → logprob: -7.466702461242676

Token 63: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23193415999412537
    2. '       ' → logprob: -1.6069341897964478
    3. ':' → logprob: -6.981934070587158
    4. ' track' → logprob: -6.981934070587158
    5. ':
' → logprob: -7.231934070587158
    6. ' ' → logprob: -7.231934070587158
    7. '    ' → logprob: -7.356934070587158
    8. ' 
' → logprob: -7.481934070587158
    9. '    
' → logprob: -8.106934547424316
    10. '
' → logprob: -8.606934547424316

Token 64: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16961722075939178
    2. '       ' → logprob: -1.9196171760559082
    3. '   ' → logprob: -5.294617176055908
    4. ' print' → logprob: -5.544617176055908
    5. '```' → logprob: -8.419617652893066
    6. '           ' → logprob: -9.294617652893066
    7. '	print' → logprob: -9.544617652893066
    8. ' ' → logprob: -10.669617652893066
    9. '``' → logprob: -12.544617652893066
    10. '  ' → logprob: -12.794617652893066

Token 65: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.029839344322681427
    2. '(' → logprob: -3.529839277267456
    3. '('' → logprob: -9.779839515686035
    4. '("("' → logprob: -10.529839515686035
    5. '("(' → logprob: -12.529839515686035
    6. '("""' → logprob: -14.529839515686035
    7. ' ("' → logprob: -15.029839515686035
    8. '(""' → logprob: -15.279839515686035
    9. '(
' → logprob: -15.279839515686035
    10. '("")' → logprob: -15.779839515686035

Token 66: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.1305553913116455
    2. '"No' → logprob: -2.1305553913116455
    3. '"' → logprob: -5.755555152893066
    4. 'Yes' → logprob: -7.755555152893066
    5. ' No' → logprob: -11.630555152893066
    6. '("' → logprob: -11.880555152893066
    7. '"N' → logprob: -13.005555152893066
    8. '“No' → logprob: -13.380555152893066
    9. '```' → logprob: -13.380555152893066
    10. '(No' → logprob: -13.505555152893066

Token 67: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.2682422995567322
    2. '")' → logprob: -1.518242359161377
    3. ')
' → logprob: -4.893242359161377
    4. ')' → logprob: -5.143242359161377
    5. '   ' → logprob: -6.518242359161377
    6. '       ' → logprob: -7.643242359161377
    7. ')")
' → logprob: -7.768242359161377
    8. '")
' → logprob: -7.893242359161377
    9. '')
' → logprob: -10.393241882324219
    10. '```' → logprob: -10.643241882324219

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005749551928602159
    2. '<|end|>' → logprob: -7.500575065612793
    3. '<|end|>' → logprob: -12.250575065612793
    4. ')' → logprob: -12.375575065612793
    5. '   ' → logprob: -12.625575065612793
    6. '```' → logprob: -13.125575065612793
    7. ',' → logprob: -13.125575065612793
    8. '
' → logprob: -13.375575065612793
    9. '           ' → logprob: -13.875575065612793
    10. '        
' → logprob: -13.875575065612793

Token 69: ' sys' (ID: 12228)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04886644333600998
    2. 'sys' (adapté à ' sys') → logprob: -3.2988665103912354
    3. ' sys' → logprob: -4.548866271972656
    4. '   ' → logprob: -9.923866271972656
    5. '	sys' → logprob: -9.923866271972656
    6. '```' → logprob: -9.923866271972656
    7. ' ' → logprob: -11.673866271972656
    8. '           ' → logprob: -11.923866271972656
    9. '        
' → logprob: -12.298866271972656
    10. 'exit' → logprob: -12.423866271972656

Token 70: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -6.034592388459714e-06
    2. 'exit' → logprob: -12.500005722045898
    3. '.' → logprob: -14.375005722045898
    4. '.stdout' → logprob: -14.375005722045898
    5. '	exit' → logprob: -14.375005722045898
    6. '       ' → logprob: -15.875005722045898
    7. '.EXIT' → logprob: -16.3750057220459
    8. '_exit' → logprob: -16.5000057220459
    9. '   ' → logprob: -16.6250057220459
    10. '```' → logprob: -16.8750057220459

Token 71: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00019424250058364123
    2. '()
' → logprob: -8.875194549560547
    3. '(' → logprob: -10.750194549560547
    4. '()`' → logprob: -10.750194549560547
    5. '()

' → logprob: -12.875194549560547
    6. '`()' → logprob: -13.125194549560547
    7. '()
' → logprob: -13.250194549560547
    8. ' ()' → logprob: -13.250194549560547
    9. '()\' → logprob: -14.000194549560547
    10. '()]' → logprob: -14.750194549560547

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15354478359222412
    2. 'track' → logprob: -2.0285449028015137
    3. ' track' → logprob: -4.778544902801514
    4. '
' → logprob: -6.653544902801514
    5. 'i' → logprob: -8.028544425964355
    6. 'a' → logprob: -8.528544425964355
    7. '    
' → logprob: -8.653544425964355
    8. '```' → logprob: -8.903544425964355
    9. '(track' → logprob: -9.153544425964355
    10. ' ' → logprob: -10.153544425964355

Token 73: ' track' (ID: 5290)
  Prédit: 'track'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' (adapté à ' track') → logprob: -0.0014461874961853027
    2. '   ' → logprob: -7.12644624710083
    3. ' track' → logprob: -7.37644624710083
    4. 'a' → logprob: -11.501445770263672
    5. '
' → logprob: -13.376445770263672
    6. ' ' → logprob: -13.876445770263672
    7. '(track' → logprob: -14.001445770263672
    8. 'else' → logprob: -14.251445770263672
    9. '  ' → logprob: -14.376445770263672
    10. '    
' → logprob: -14.876445770263672

Token 74: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.9862216504407115e-05
    2. '[a' → logprob: -11.125020027160645
    3. '[' → logprob: -12.250020027160645
    4. '```' → logprob: -16.250019073486328
    5. '\[' → logprob: -17.000019073486328
    6. 'b' → logprob: -17.125019073486328
    7. '[i' → logprob: -17.625019073486328
    8. '[...]' → logprob: -17.625019073486328
    9. ' [' → logprob: -17.875019073486328
    10. '[c' → logprob: -18.250019073486328

Token 75: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.07895126193761826
    2. ']' → logprob: -2.578951358795166
    3. ']=(' → logprob: -10.953950881958008
    4. ' ]' → logprob: -11.078950881958008
    5. '=' → logprob: -11.703950881958008
    6. ']={' → logprob: -11.828950881958008
    7. ']="' → logprob: -12.578950881958008
    8. ']=$' → logprob: -12.703950881958008
    9. ']='' → logprob: -12.828950881958008
    10. ']=-' → logprob: -13.828950881958008

Token 76: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.776898251497187e-05
    2. 'i' → logprob: -10.0000581741333
    3. ' None' → logprob: -11.5000581741333
    4. '   ' → logprob: -14.2500581741333
    5. 'True' → logprob: -14.7500581741333
    6. 'No' → logprob: -15.0000581741333
    7. 'a' → logprob: -15.6250581741333
    8. ' ' → logprob: -15.8750581741333
    9. 'N' → logprob: -16.125057220458984
    10. '_None' → logprob: -16.125057220458984

Token 77: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03338228538632393
    2. '
' → logprob: -3.6583821773529053
    3. '<|end|>' → logprob: -5.408382415771484
    4. 'i' → logprob: -6.533382415771484
    5. '    
' → logprob: -7.658382415771484
    6. '  
' → logprob: -8.908382415771484
    7. '<|end|>' → logprob: -9.033382415771484
    8. ' i' → logprob: -9.408382415771484
    9. ' ' → logprob: -9.408382415771484
    10. '\n' → logprob: -10.158382415771484

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017072015907615423
    2. 'i' → logprob: -6.626707077026367
    3. 'a' → logprob: -8.001707077026367
    4. '<|end|>' → logprob: -11.001707077026367
    5. '
' → logprob: -11.251707077026367
    6. '```' → logprob: -12.251707077026367
    7. ' i' → logprob: -12.501707077026367
    8. '    
' → logprob: -12.626707077026367
    9. '  ' → logprob: -13.376707077026367
    10. 'n' → logprob: -13.751707077026367

Token 79: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.008404407650232315
    2. '   ' → logprob: -5.13340425491333
    3. 'i' → logprob: -6.00840425491333
    4. ' a' → logprob: -11.633404731750488
    5. '  ' → logprob: -13.133404731750488
    6. '
' → logprob: -13.133404731750488
    7. ' i' → logprob: -14.508404731750488
    8. '    
' → logprob: -14.633404731750488
    9. ' ' → logprob: -15.133404731750488
    10. '    ' → logprob: -15.508404731750488

Token 80: '=b' (ID: 49769)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04599417746067047
    2. ' =' → logprob: -3.795994281768799
    3. '=b' → logprob: -3.795994281768799
    4. '=a' → logprob: -10.54599380493164
    5. '=i' → logprob: -13.67099380493164
    6. '＝' → logprob: -14.42099380493164
    7. '=s' → logprob: -15.04599380493164
    8. '=end' → logprob: -15.29599380493164
    9. '=user' → logprob: -15.29599380493164
    10. ' ' → logprob: -15.42099380493164

Token 81: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00348781980574131
    2. '
' → logprob: -5.753487586975098
    3. 'i' → logprob: -8.753487586975098
    4. '    
' → logprob: -9.628487586975098
    5. '<|end|>' → logprob: -10.003487586975098
    6. '```' → logprob: -11.503487586975098
    7. '  
' → logprob: -12.128487586975098
    8. '  ' → logprob: -12.503487586975098
    9. '
' → logprob: -12.628487586975098
    10. '<|end|>' → logprob: -12.628487586975098

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010481736389920115
    2. 'i' → logprob: -7.5010480880737305
    3. '
' → logprob: -7.7510480880737305
    4. '```' → logprob: -10.62604808807373
    5. '<|end|>' → logprob: -11.00104808807373
    6. '    
' → logprob: -11.37604808807373
    7. ' i' → logprob: -12.62604808807373
    8. '	i' → logprob: -13.12604808807373
    9. '  
' → logprob: -13.50104808807373
    10. '
' → logprob: -14.25104808807373

Token 83: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0014030871680006385
    2. '   ' → logprob: -7.001402854919434
    3. ' i' → logprob: -7.626402854919434
    4. '	i' → logprob: -13.001402854919434
    5. '```' → logprob: -14.376402854919434
    6. '
' → logprob: -15.001402854919434
    7. '<|end|>' → logprob: -15.376402854919434
    8. ' ' → logprob: -15.626402854919434
    9. '  ' → logprob: -15.751402854919434
    10. '    ' → logprob: -16.37640380859375

Token 84: '+=' (ID: 18287)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12723875045776367
    2. '+=' → logprob: -2.1272387504577637
    3. ' +=' → logprob: -8.127239227294922
    4. '++' → logprob: -11.752239227294922
    5. '=' → logprob: -13.127239227294922
    6. '+="' → logprob: -13.252239227294922
    7. '+++' → logprob: -13.627239227294922
    8. '+='' → logprob: -13.627239227294922
    9. ' +' → logprob: -14.877239227294922
    10. '+i' → logprob: -15.127239227294922

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -19.0
    4. '```' → logprob: -19.25
    5. '+' → logprob: -20.25
    6. '１' → logprob: -20.75
    7. '۱' → logprob: -21.3125
    8. '`' → logprob: -22.0
    9. '१' → logprob: -22.1875
    10. '  ' → logprob: -22.375

Token 86: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00040755473310127854
    2. '
' → logprob: -8.125407218933105
    3. 'else' → logprob: -9.375407218933105
    4. '```' → logprob: -10.875407218933105
    5. '  
' → logprob: -12.750407218933105
    6. '    
' → logprob: -13.125407218933105
    7. ' print' → logprob: -14.250407218933105
    8. ' 
' → logprob: -15.375407218933105
    9. '``' → logprob: -15.500407218933105
    10. '(print' → logprob: -15.625407218933105

Token 87: 'else' (ID: 2807)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.750436007976532e-05
    2. 'else' → logprob: -10.62503719329834
    3. '```' → logprob: -11.87503719329834
    4. '
' → logprob: -12.25003719329834
    5. '  
' → logprob: -14.50003719329834
    6. '    
' → logprob: -14.75003719329834
    7. ' print' → logprob: -16.250038146972656
    8. '``' → logprob: -16.875038146972656
    9. '(print' → logprob: -16.875038146972656
    10. '#print' → logprob: -17.000038146972656

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004966750275343657
    2. ':
' → logprob: -7.625496864318848
    3. ' :' → logprob: -12.125496864318848
    4. '   ' → logprob: -13.750496864318848
    5. '<|end|>' → logprob: -14.250496864318848
    6. ':

' → logprob: -14.375496864318848
    7. ' :
' → logprob: -16.00049591064453
    8. '>' → logprob: -16.00049591064453
    9. ':
' → logprob: -16.12549591064453
    10. ':return' → logprob: -16.37549591064453

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025038402527570724
    2. ' print' → logprob: -6.627503871917725
    3. 'print' → logprob: -6.752503871917725
    4. '       ' → logprob: -12.252503395080566
    5. '	print' → logprob: -12.877503395080566
    6. ' ' → logprob: -14.502503395080566
    7. '```' → logprob: -14.752503395080566
    8. '   ' → logprob: -15.377503395080566
    9. '    
' → logprob: -15.627503395080566
    10. '    ' → logprob: -15.877503395080566

Token 90: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06628435105085373
    2. '   ' → logprob: -3.441284418106079
    3. ' print' → logprob: -3.441284418106079
    4. '	print' → logprob: -9.8162841796875
    5. ' ' → logprob: -10.8162841796875
    6. '       ' → logprob: -11.9412841796875
    7. '```' → logprob: -12.8162841796875
    8. '  ' → logprob: -13.3162841796875
    9. '    ' → logprob: -13.8162841796875
    10. '    
' → logprob: -14.6912841796875

Token 91: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.08028320223093033
    2. '(' → logprob: -2.5802831649780273
    3. '("("' → logprob: -6.705283164978027
    4. '('' → logprob: -9.330283164978027
    5. '("(' → logprob: -9.830283164978027
    6. '("""' → logprob: -11.705283164978027
    7. '(
' → logprob: -11.830283164978027
    8. '"' → logprob: -12.330283164978027
    9. '"(' → logprob: -13.580283164978027
    10. ' ("' → logprob: -13.830283164978027

Token 92: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.005962930154055357
    2. '"' → logprob: -5.13096284866333
    3. 'Ye' → logprob: -11.005963325500488
    4. '("' → logprob: -12.005963325500488
    5. 'No' → logprob: -12.130963325500488
    6. 'YES' → logprob: -13.130963325500488
    7. '“Yes' → logprob: -13.630963325500488
    8. ' Yes' → logprob: -14.255963325500488
    9. '"No' → logprob: -14.505963325500488
    10. ''' → logprob: -14.505963325500488

Token 93: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07898562401533127
    2. '")' → logprob: -2.5789856910705566
    3. ')")' → logprob: -9.578985214233398
    4. '')' → logprob: -11.453985214233398
    5. '`)' → logprob: -11.953985214233398
    6. ')
' → logprob: -12.328985214233398
    7. '```' → logprob: -13.453985214233398
    8. ' )' → logprob: -13.578985214233398
    9. '())' → logprob: -14.328985214233398
    10. '»)' → logprob: -15.078985214233398


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 91
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 79
Précision stricte (1ère position): 39.56%
Précision adaptée (1ère position): 45.05%
Précision (top 10): 86.81%
================================================================================
