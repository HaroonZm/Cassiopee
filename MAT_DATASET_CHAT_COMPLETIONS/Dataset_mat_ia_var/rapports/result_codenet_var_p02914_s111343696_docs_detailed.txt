================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import numpy as np

def gaussian_elimination_xor(A: np.ndarray) -> np.ndarray:
    """
    Performs Gaussian elimination over the binary field (GF(2)) on the array A, modifying it in place 
    to form its reduced row-echelon form with respect to the XOR operation.

    Args:
        A (np.ndarray): Input numpy array of integers.

    Returns:
        np.ndarray: The basis of the input array under XOR, after elimination.
    """
    # Loop from the highest bit (59) down to 0
    for i in range(59, -1, -1):
        # Identify which elements have the ith bit set but are less than 2**(i + 1)
        one_digit = (A & (1 << i)) != 0
        pivot_flag = np.where(one_digit & (A < (1 << (i + 1))))[0]
        if len(pivot_flag) == 0:
            # If there is no candidate for pivot in this bit, skip
            continue
        p = pivot_flag[0]
        pivot = A[p]
        # For all rows with the ith bit set, XOR them with the pivot row to clear the bit
        A[one_digit] ^= pivot
        # Restore pivot row since the above also XORed it to zero
        A[p] = pivot
    return A

def calculate_maximum_xor_sum(A: np.ndarray) -> int:
    """
    Calculates the maximum XOR sum achievable by selecting a subset of the input array,
    using the XOR basis reduction algorithm.

    Args:
        A (np.ndarray): Input numpy array of integers.

    Returns:
        int: The maximal achievable subset XOR sum plus the contribution from odd '1's positions.
    """
    # Calculate overall XOR of all elements (cumulative XOR)
    xor = np.bitwise_xor.reduce(A)
    
    # Find bit positions where the number of '1's is odd in the cumulative XOR
    odd_digit = [1 << i for i in range(60) if xor & (1 << i)]

    # Ignore the bits that have an odd count of '1's by masking them from all elements
    for i in odd_digit:
        A = A & (~i)
    
    # Perform the elimination to get XOR basis elements
    A = gaussian_elimination_xor(A)
    
    # The result is sum of fixed bits (odd_digit) plus twice the maximal XOR from basis
    res = sum(odd_digit) + 2 * (np.bitwise_xor.reduce(A))
    return res

def main():
    """
    Main execution function. Reads input, processes data, and prints result.
    """
    # Read the number of elements
    N = int(input())
    # Read the integer array as numpy array of int64
    A = np.array(list(map(int, input().split())), dtype=np.int64)
    # Compute the result using the XOR elimination algorithm
    result = calculate_maximum_xor_sum(A)
    # Print the final result
    print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' numpy' (ID: 19529)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0005276533775031567
    2. 'np' → logprob: -7.625527858734131
    3. ' ' → logprob: -10.250527381896973
    4. ' numpy' → logprob: -12.500527381896973
    5. ' ' → logprob: -14.500527381896973
    6. '_np' → logprob: -17.37552833557129
    7. 'numpy' → logprob: -17.75052833557129
    8. ' n' → logprob: -18.00052833557129
    9. ',np' → logprob: -18.25052833557129
    10. ' npc' → logprob: -18.50052833557129

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4912054240703583
    2. 'newline' → logprob: -1.9912054538726807
    3. '\n' → logprob: -2.1162054538726807
    4. 'import' → logprob: -2.7412054538726807
    5. '\' → logprob: -3.8662054538726807
    6. '```' → logprob: -4.116205215454102
    7. '<|end|>' → logprob: -4.366205215454102
    8. '
' → logprob: -5.866205215454102
    9. '<|end|>' → logprob: -6.241205215454102
    10. '[' → logprob: -6.366205215454102

Token 5: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.27373868227005005
    2. '\n' → logprob: -2.1487386226654053
    3. '```' → logprob: -2.8987386226654053
    4. '\' → logprob: -3.7737386226654053
    5. 'newline' → logprob: -4.148738861083984
    6. '<|end|>' → logprob: -4.273738861083984
    7. 'import' → logprob: -5.648738861083984
    8. '[' → logprob: -6.148738861083984
    9. '\[' → logprob: -6.898738861083984
    10. '\r' → logprob: -7.023738861083984

Token 6: ' gaussian' (ID: 158175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05375884845852852
    2. ' space' → logprob: -4.05375862121582
    3. ' my' → logprob: -4.80375862121582
    4. ' calculate' → logprob: -5.17875862121582
    5. ' process' → logprob: -5.67875862121582
    6. ' array' → logprob: -6.17875862121582
    7. '_' → logprob: -6.17875862121582
    8. ' add' → logprob: -6.42875862121582
    9. ' create' → logprob: -6.80375862121582
    10. ' predict' → logprob: -7.05375862121582

Token 7: '_el' (ID: 55168)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2277408242225647
    2. '_kernel' → logprob: -1.97774076461792
    3. '_' → logprob: -3.47774076461792
    4. ' (' → logprob: -3.72774076461792
    5. ')' → logprob: -6.22774076461792
    6. ' ' → logprob: -6.22774076461792
    7. '(kernel' → logprob: -6.60274076461792
    8. '(x' → logprob: -6.60274076461792
    9. '<|end|>' → logprob: -7.10274076461792
    10. '_distribution' → logprob: -8.102741241455078

Token 8: 'imination' (ID: 34362)
  Prédit: 'lip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lip' → logprob: -0.33408093452453613
    2. 'l' → logprob: -1.3340809345245361
    3. 'ement' → logprob: -4.459080696105957
    4. 'li' → logprob: -6.459080696105957
    5. 'e' → logprob: -6.709080696105957
    6. 'astic' → logprob: -6.834080696105957
    7. 'lap' → logprob: -6.959080696105957
    8. 'lp' → logprob: -7.709080696105957
    9. 'ev' → logprob: -7.959080696105957
    10. 'len' → logprob: -8.334080696105957

Token 9: '_x' (ID: 7054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001652796781854704
    2. ' (' → logprob: -10.000164985656738
    3. '_' → logprob: -10.000164985656738
    4. '(
' → logprob: -11.125164985656738
    5. '```' → logprob: -11.875164985656738
    6. '():' → logprob: -12.250164985656738
    7. ':' → logprob: -12.375164985656738
    8. '(x' → logprob: -12.375164985656738
    9. '(`' → logprob: -12.625164985656738
    10. '_linear' → logprob: -12.750164985656738

Token 10: 'or' (ID: 267)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6521318554878235
    2. '(' → logprob: -0.9021318554878235
    3. '(s' → logprob: -3.9021317958831787
    4. '):' → logprob: -4.402132034301758
    5. '```' → logprob: -4.402132034301758
    6. '(a' → logprob: -5.027132034301758
    7. ')' → logprob: -5.652132034301758
    8. '(_' → logprob: -6.027132034301758
    9. '_(' → logprob: -6.027132034301758
    10. '(p' → logprob: -6.027132034301758

Token 11: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014787978725507855
    2. ' (' → logprob: -7.751478672027588
    3. '(a' → logprob: -7.876478672027588
    4. '(x' → logprob: -8.251479148864746
    5. '_' → logprob: -9.251479148864746
    6. '():' → logprob: -9.251479148864746
    7. '(n' → logprob: -10.001479148864746
    8. '```' → logprob: -10.876479148864746
    9. '(matrix' → logprob: -11.001479148864746
    10. '(A' → logprob: -11.126479148864746

Token 12: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05431564152240753
    2. ')' → logprob: -3.8043155670166016
    3. '):' → logprob: -3.9293155670166016
    4. '[' → logprob: -4.554315567016602
    5. '[:,' → logprob: -9.179315567016602
    6. ' ,' → logprob: -10.179315567016602
    7. '[,' → logprob: -10.429315567016602
    8. '<|end|>' → logprob: -10.679315567016602
    9. '[...,' → logprob: -10.804315567016602
    10. '):
' → logprob: -10.929315567016602

Token 13: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.12701137363910675
    2. 'np' → logprob: -2.127011299133301
    3. ' ndarray' → logprob: -10.6270112991333
    4. '[np' → logprob: -11.0020112991333
    5. ' List' → logprob: -11.2520112991333
    6. 'nd' → logprob: -11.8770112991333
    7. ')' → logprob: -12.0020112991333
    8. 'List' → logprob: -12.5020112991333
    9. '(np' → logprob: -12.7520112991333
    10. '_np' → logprob: -13.7520112991333

Token 14: '.ndarray' (ID: 78346)
  Prédit: '.ndarray'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ndarray' → logprob: -0.2481377273797989
    2. '[' → logprob: -2.1231377124786377
    3. ',' → logprob: -2.8731377124786377
    4. '.' → logprob: -3.6231377124786377
    5. ')' → logprob: -5.498137950897217
    6. ' ,' → logprob: -6.123137950897217
    7. '[int' → logprob: -6.373137950897217
    8. ' .' → logprob: -6.373137950897217
    9. '.Tensor' → logprob: -6.498137950897217
    10. '[array' → logprob: -6.998137950897217

Token 15: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11734449863433838
    2. ')' → logprob: -2.242344379425049
    3. '):' → logprob: -5.617344379425049
    4. ' ,' → logprob: -7.617344379425049
    5. '[' → logprob: -8.117344856262207
    6. '),' → logprob: -11.492344856262207
    7. ' )' → logprob: -11.617344856262207
    8. '<|end|>' → logprob: -11.617344856262207
    9. ',
' → logprob: -11.742344856262207
    10. '[:,' → logprob: -12.242344856262207

Token 16: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00145475915633142
    2. '):' → logprob: -7.126454830169678
    3. '():' → logprob: -8.75145435333252
    4. ' :' → logprob: -9.12645435333252
    5. '[:]' → logprob: -9.37645435333252
    6. '<|end|>' → logprob: -9.50145435333252
    7. '[' → logprob: -10.00145435333252
    8. ':return' → logprob: -10.25145435333252
    9. '   ' → logprob: -10.37645435333252
    10. ':**' → logprob: -11.25145435333252

Token 17: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.22579209506511688
    2. 'np' → logprob: -1.6007920503616333
    3. ' None' → logprob: -8.350791931152344
    4. 'None' → logprob: -9.975791931152344
    5. 'int' → logprob: -10.225791931152344
    6. ' int' → logprob: -10.225791931152344
    7. ' ' → logprob: -11.225791931152344
    8. '[np' → logprob: -12.225791931152344
    9. '(np' → logprob: -12.975791931152344
    10. '   ' → logprob: -14.225791931152344

Token 18: '.ndarray' (ID: 78346)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06356574594974518
    2. '[' → logprob: -2.813565731048584
    3. '.ndarray' → logprob: -7.438565731048584
    4. '.[' → logprob: -8.063566207885742
    5. ' .' → logprob: -8.313566207885742
    6. ':' → logprob: -9.313566207885742
    7. ''.' → logprob: -9.563566207885742
    8. '.array' → logprob: -9.938566207885742
    9. '[np' → logprob: -10.188566207885742
    10. '```' → logprob: -10.563566207885742

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003787184541579336
    2. '():' → logprob: -8.750378608703613
    3. '):' → logprob: -9.125378608703613
    4. ':
' → logprob: -10.000378608703613
    5. '[' → logprob: -11.500378608703613
    6. '(' → logprob: -11.750378608703613
    7. '   ' → logprob: -12.375378608703613
    8. ' :' → logprob: -12.375378608703613
    9. ':**' → logprob: -12.375378608703613
    10. '(:' → logprob: -12.375378608703613

Token 20: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11532735079526901
    2. ':
' → logprob: -2.3653273582458496
    3. '   ' → logprob: -4.36532735824585
    4. ' :
' → logprob: -7.36532735824585
    5. '```' → logprob: -7.49032735824585
    6. ' :' → logprob: -7.61532735824585
    7. '    
' → logprob: -9.490326881408691
    8. ',' → logprob: -9.990326881408691
    9. '  
' → logprob: -10.115326881408691
    10. ' 
' → logprob: -10.115326881408691

Token 21: ' """
' (ID: 7037)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7583666443824768
    2. 'n' → logprob: -1.633366584777832
    3. '   ' → logprob: -1.633366584777832
    4. ' n' → logprob: -2.633366584777832
    5. ' :' → logprob: -4.008366584777832
    6. ' ' → logprob: -4.883366584777832
    7. '```' → logprob: -5.008366584777832
    8. 'x' → logprob: -5.133366584777832
    9. 'A' → logprob: -5.633366584777832
    10. '"' → logprob: -6.133366584777832

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20565150678157806
    2. 'n' → logprob: -2.5806515216827393
    3. '#' → logprob: -3.5806515216827393
    4. 'r' → logprob: -4.58065128326416
    5. ' ' → logprob: -4.70565128326416
    6. '"""' → logprob: -4.70565128326416
    7. '    ' → logprob: -4.95565128326416
    8. ' n' → logprob: -5.08065128326416
    9. '```' → logprob: -5.70565128326416
    10. ' """' → logprob: -5.83065128326416

Token 23: ' Performs' (ID: 118692)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0226080417633057
    2. 'Perform' → logprob: -2.0226080417633057
    3. '"""' → logprob: -2.1476080417633057
    4. ' Perform' → logprob: -2.5226080417633057
    5. ' """' → logprob: -2.5226080417633057
    6. ' Performs' → logprob: -3.1476080417633057
    7. 'Returns' → logprob: -3.6476080417633057
    8. ' A' → logprob: -4.147607803344727
    9. '#' → logprob: -4.397607803344727
    10. 'def' → logprob: -4.647607803344727

Token 24: ' Gaussian' (ID: 103362)
  Prédit: ' Gaussian'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Gaussian' → logprob: -0.387630820274353
    2. ' gaussian' → logprob: -1.387630820274353
    3. ' ' → logprob: -4.012630939483643
    4. '_' → logprob: -4.387630939483643
    5. ' a' → logprob: -4.637630939483643
    6. '_ga' → logprob: -4.762630939483643
    7. 'Gaussian' → logprob: -5.137630939483643
    8. '<|end|>' → logprob: -5.387630939483643
    9. ' the' → logprob: -6.137630939483643
    10. ' linear' → logprob: -6.262630939483643

Token 25: ' elimination' (ID: 77324)
  Prédit: ' elimination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elimination' → logprob: -0.45910173654556274
    2. ' ' → logprob: -1.459101676940918
    3. '_el' → logprob: -2.959101676940918
    4. '<|end|>' → logprob: -3.209101676940918
    5. '_' → logprob: -3.834101676940918
    6. ' _' → logprob: -4.334101676940918
    7. ' El' → logprob: -5.459101676940918
    8. '<|end|>' → logprob: -6.459101676940918
    9. '   ' → logprob: -6.959101676940918
    10. '  ' → logprob: -7.459101676940918

Token 26: ' over' (ID: 1072)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5449452996253967
    2. ' with' → logprob: -2.044945240020752
    3. '_' → logprob: -2.294945240020752
    4. '<|end|>' → logprob: -2.544945240020752
    5. ' ' → logprob: -3.419945240020752
    6. ' (' → logprob: -3.919945240020752
    7. '(' → logprob: -4.044945240020752
    8. '   ' → logprob: -4.169945240020752
    9. ' to' → logprob: -4.419945240020752
    10. '<|end|>' → logprob: -5.794945240020752

Token 27: ' the' (ID: 290)
  Prédit: ' GF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' GF' → logprob: -0.038627054542303085
    2. ' the' → logprob: -3.7886271476745605
    3. ' F' → logprob: -4.9136271476745605
    4. 'GF' → logprob: -5.6636271476745605
    5. ' np' → logprob: -6.4136271476745605
    6. ' a' → logprob: -6.7886271476745605
    7. ' ' → logprob: -6.9136271476745605
    8. ' numpy' → logprob: -8.163626670837402
    9. ' binary' → logprob: -8.788626670837402
    10. ' gf' → logprob: -9.913626670837402

Token 28: ' binary' (ID: 15600)
  Prédit: ' field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' field' → logprob: -0.06756553053855896
    2. ' binary' → logprob: -3.192565441131592
    3. 'field' → logprob: -4.067565441131592
    4. 'binary' → logprob: -5.692565441131592
    5. ' GF' → logprob: -6.442565441131592
    6. ' finite' → logprob: -6.567565441131592
    7. ' G' → logprob: -8.06756591796875
    8. 'GF' → logprob: -8.19256591796875
    9. ' integers' → logprob: -9.31756591796875
    10. 'finite' → logprob: -10.31756591796875

Token 29: ' field' (ID: 3259)
  Prédit: ' field'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' field' → logprob: -0.6473401188850403
    2. ' space' → logprob: -1.2723400592803955
    3. ' matrix' → logprob: -2.0223400592803955
    4. ' fields' → logprob: -3.1473400592803955
    5. '_' → logprob: -5.522340297698975
    6. ' ' → logprob: -5.897340297698975
    7. ' vectors' → logprob: -5.897340297698975
    8. 'space' → logprob: -6.147340297698975
    9. 'field' → logprob: -6.397340297698975
    10. ' operations' → logprob: -6.897340297698975

Token 30: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2250804901123047
    2. '   ' → logprob: -3.1000804901123047
    3. ' to' → logprob: -3.3500804901123047
    4. ' with' → logprob: -3.3500804901123047
    5. '<|end|>' → logprob: -3.4750804901123047
    6. ' ' → logprob: -4.225080490112305
    7. ' on' → logprob: -4.600080490112305
    8. '  ' → logprob: -4.850080490112305
    9. ' for' → logprob: -4.975080490112305
    10. ' using' → logprob: -5.100080490112305

Token 31: 'GF' (ID: 56964)
  Prédit: 'GF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GF' → logprob: -0.2116028368473053
    2. ' GF' → logprob: -1.711602807044983
    3. '2' → logprob: -5.336602687835693
    4. 'F' → logprob: -6.086602687835693
    5. ' ' → logprob: -6.711602687835693
    6. ' F' → logprob: -7.586602687835693
    7. ')' → logprob: -7.836602687835693
    8. '\xf0\x9d' → logprob: -8.586603164672852
    9. ' \' → logprob: -8.836603164672852
    10. '_GF' → logprob: -9.211603164672852

Token 32: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030917741358280182
    2. '2' → logprob: -3.5309176445007324
    3. ')' → logprob: -7.780917644500732
    4. ' (' → logprob: -7.905917644500732
    5. '_' → logprob: -8.78091812133789
    6. '```' → logprob: -9.78091812133789
    7. '₂' → logprob: -9.78091812133789
    8. '{' → logprob: -10.03091812133789
    9. '[' → logprob: -10.40591812133789
    10. ').' → logprob: -11.78091812133789

Token 33: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002637199067976326
    2. ' ' → logprob: -8.250264167785645
    3. '(' → logprob: -14.125264167785645
    4. ')' → logprob: -14.625264167785645
    5. '```' → logprob: -15.000264167785645
    6. '   ' → logprob: -15.250264167785645
    7. '{' → logprob: -15.625264167785645
    8. '[' → logprob: -15.625264167785645
    9. '
' → logprob: -16.625263214111328
    10. '₂' → logprob: -17.125263214111328

Token 34: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015323443338274956
    2. '))' → logprob: -4.515323638916016
    3. ').' → logprob: -5.890323638916016
    4. ' )' → logprob: -6.640323638916016
    5. ')).' → logprob: -9.265323638916016
    6. '),' → logprob: -11.015323638916016
    7. ' ))' → logprob: -11.140323638916016
    8. ' ' → logprob: -11.640323638916016
    9. '):' → logprob: -11.765323638916016
    10. '   ' → logprob: -11.890323638916016

Token 35: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08393020927906036
    2. ':' → logprob: -3.208930253982544
    3. '):' → logprob: -4.208930015563965
    4. ')' → logprob: -4.458930015563965
    5. ',' → logprob: -5.083930015563965
    6. '.' → logprob: -6.708930015563965
    7. ' :' → logprob: -6.708930015563965
    8. ' to' → logprob: -7.083930015563965
    9. ' on' → logprob: -7.208930015563965
    10. ' for' → logprob: -7.333930015563965

Token 36: ' the' (ID: 290)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.022315368056297302
    2. 'A' → logprob: -3.897315263748169
    3. ' the' → logprob: -6.647315502166748
    4. ' ' → logprob: -8.27231502532959
    5. ' a' → logprob: -9.27231502532959
    6. '   ' → logprob: -9.64731502532959
    7. 'the' → logprob: -10.52231502532959
    8. ')' → logprob: -11.52231502532959
    9. ' an' → logprob: -12.39731502532959
    10. ' ' → logprob: -12.77231502532959

Token 37: ' array' (ID: 2644)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.12468332052230835
    2. ' matrix' → logprob: -2.499683380126953
    3. 'A' → logprob: -4.249683380126953
    4. ' input' → logprob: -4.374683380126953
    5. ' given' → logprob: -5.374683380126953
    6. ' ' → logprob: -5.999683380126953
    7. 'matrix' → logprob: -8.249683380126953
    8. 'input' → logprob: -8.624683380126953
    9. ' array' → logprob: -8.749683380126953
    10. '   ' → logprob: -8.999683380126953

Token 38: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5257773995399475
    2. ' A' → logprob: -1.9007773399353027
    3. 'A' → logprob: -2.6507773399353027
    4. ' of' → logprob: -3.5257773399353027
    5. ',' → logprob: -3.6507773399353027
    6. '.' → logprob: -4.150777339935303
    7. ' ' → logprob: -4.275777339935303
    8. ':' → logprob: -4.400777339935303
    9. '  ' → logprob: -4.525777339935303
    10. ' to' → logprob: -4.650777339935303

Token 39: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5049627423286438
    2. ':' → logprob: -1.254962682723999
    3. '):' → logprob: -2.504962682723999
    4. '\n' → logprob: -4.754962921142578
    5. '
' → logprob: -5.629962921142578
    6. ')' → logprob: -6.004962921142578
    7. '[' → logprob: -6.129962921142578
    8. ',' → logprob: -6.129962921142578
    9. '```' → logprob: -6.129962921142578
    10. '.' → logprob: -6.129962921142578

Token 40: ' modifying' (ID: 86506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2238466590642929
    2. '    ' → logprob: -2.723846673965454
    3. ' and' → logprob: -2.973846673965454
    4. ' ' → logprob: -3.973846673965454
    5. ' which' → logprob: -4.223846435546875
    6. ' to' → logprob: -4.473846435546875
    7. ' with' → logprob: -4.973846435546875
    8. '  ' → logprob: -5.348846435546875
    9. ' :' → logprob: -5.598846435546875
    10. ' inplace' → logprob: -5.598846435546875

Token 41: ' it' (ID: 480)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.07176883518695831
    2. 'A' → logprob: -3.3217687606811523
    3. ' the' → logprob: -3.4467687606811523
    4. ' it' → logprob: -6.696768760681152
    5. 'the' → logprob: -9.821768760681152
    6. ' a' → logprob: -11.571768760681152
    7. ' ' → logprob: -12.071768760681152
    8. ' in' → logprob: -12.696768760681152
    9. '```' → logprob: -13.196768760681152
    10. '   ' → logprob: -13.321768760681152

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07360903918743134
    2. ' to' → logprob: -3.3236091136932373
    3. ' inplace' → logprob: -3.6986091136932373
    4. '   ' → logprob: -5.323608875274658
    5. 'in' → logprob: -5.573608875274658
    6. ' ' → logprob: -7.948608875274658
    7. ' and' → logprob: -8.073609352111816
    8. '    ' → logprob: -8.198609352111816
    9. '  ' → logprob: -8.698609352111816
    10. ' the' → logprob: -8.948609352111816

Token 43: ' place' (ID: 2475)
  Prédit: ' place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' place' → logprob: -0.5550057291984558
    2. '-place' → logprob: -1.0550057888031006
    3. 'place' → logprob: -2.5550057888031006
    4. '_place' → logprob: -10.18000602722168
    5. '```' → logprob: -11.68000602722168
    6. 'Place' → logprob: -13.93000602722168
    7. '-' → logprob: -14.18000602722168
    8. 'plac' → logprob: -14.93000602722168
    9. ' -' → logprob: -16.43000602722168
    10. '.place' → logprob: -16.43000602722168

Token 44: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.505031943321228
    2. '):' → logprob: -1.630031943321228
    3. ':' → logprob: -2.0050320625305176
    4. ')' → logprob: -3.6300320625305176
    5. '.' → logprob: -4.505032062530518
    6. '```' → logprob: -4.880032062530518
    7. '\n' → logprob: -5.130032062530518
    8. ',' → logprob: -5.380032062530518
    9. '):
' → logprob: -5.755032062530518
    10. ' and' → logprob: -6.130032062530518

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12060165405273438
    2. ' to' → logprob: -3.1206016540527344
    3. ' and' → logprob: -3.7456016540527344
    4. '```' → logprob: -4.120601654052734
    5. '.' → logprob: -4.870601654052734
    6. ',' → logprob: -5.495601654052734
    7. ')' → logprob: -5.495601654052734
    8. ' for' → logprob: -5.620601654052734
    9. '\n' → logprob: -6.120601654052734
    10. ':' → logprob: -6.120601654052734

Token 46: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7577387094497681
    2. ' to' → logprob: -0.7577387094497681
    3. ' and' → logprob: -3.2577385902404785
    4. '.' → logprob: -4.7577385902404785
    5. ')' → logprob: -4.8827385902404785
    6. ',' → logprob: -5.7577385902404785
    7. ' for' → logprob: -7.1327385902404785
    8. ' with' → logprob: -7.1327385902404785
    9. ':' → logprob: -7.6327385902404785
    10. ' )' → logprob: -7.8827385902404785

Token 47: ' form' (ID: 1625)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.1763666272163391
    2. ' eliminate' → logprob: -2.9263665676116943
    3. ' transform' → logprob: -3.5513665676116943
    4. ' convert' → logprob: -3.5513665676116943
    5. ' bring' → logprob: -4.051366806030273
    6. ' make' → logprob: -5.051366806030273
    7. ' ensure' → logprob: -5.176366806030273
    8. ' obtain' → logprob: -5.301366806030273
    9. ' produce' → logprob: -5.426366806030273
    10. ' reduce' → logprob: -5.926366806030273

Token 48: ' its' (ID: 1617)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.0048125614412128925
    2. ' a' → logprob: -5.879812717437744
    3. ' the' → logprob: -6.254812717437744
    4. ' upper' → logprob: -10.254812240600586
    5. ' its' → logprob: -11.004812240600586
    6. 'an' → logprob: -11.504812240600586
    7. ' eche' → logprob: -11.629812240600586
    8. ' row' → logprob: -12.129812240600586
    9. ' reduced' → logprob: -12.254812240600586
    10. 'a' → logprob: -13.879812240600586

Token 49: ' reduced' (ID: 17255)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.020873747766017914
    2. ' reduced' → logprob: -4.270873546600342
    3. ' upper' → logprob: -5.895873546600342
    4. 'row' → logprob: -5.895873546600342
    5. ' eche' → logprob: -7.395873546600342
    6. 're' → logprob: -8.0208740234375
    7. 'e' → logprob: -8.8958740234375
    8. '_row' → logprob: -10.6458740234375
    9. ' Row' → logprob: -11.0208740234375
    10. 'upper' → logprob: -11.1458740234375

Token 50: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.02406778745353222
    2. '_row' → logprob: -4.0240678787231445
    3. ' eche' → logprob: -5.2740678787231445
    4. 'row' → logprob: -7.8990678787231445
    5. '   ' → logprob: -9.024067878723145
    6. ' ' → logprob: -9.524067878723145
    7. '-row' → logprob: -10.024067878723145
    8. ' _' → logprob: -10.149067878723145
    9. '_' → logprob: -10.274067878723145
    10. ' Row' → logprob: -11.024067878723145

Token 51: '-eche' (ID: 159593)
  Prédit: ' eche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' eche' → logprob: -0.0025081203784793615
    2. '-eche' → logprob: -6.502508163452148
    3. '_e' → logprob: -7.002508163452148
    4. '_' → logprob: -10.502508163452148
    5. ' ech' → logprob: -10.502508163452148
    6. 'E' → logprob: -10.877508163452148
    7. 'e' → logprob: -11.502508163452148
    8. 'ech' → logprob: -11.877508163452148
    9. '   ' → logprob: -13.002508163452148
    10. '```' → logprob: -14.127508163452148

Token 52: 'lon' (ID: 19325)
  Prédit: 'lon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lon' → logprob: -0.0003721622342709452
    2. 'alon' → logprob: -8.500371932983398
    3. '```' → logprob: -10.250371932983398
    4. 'le' → logprob: -10.625371932983398
    5. 'olon' → logprob: -10.625371932983398
    6. 'val' → logprob: -10.750371932983398
    7. 'von' → logprob: -11.375371932983398
    8. 'non' → logprob: -12.125371932983398
    9. 'long' → logprob: -12.125371932983398
    10. 'won' → logprob: -12.375371932983398

Token 53: ' form' (ID: 1625)
  Prédit: ' form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' form' → logprob: -0.03859023377299309
    2. '_form' → logprob: -3.2885901927948
    3. 'form' → logprob: -8.288590431213379
    4. '_' → logprob: -8.413590431213379
    5. ' _' → logprob: -10.038590431213379
    6. ' ' → logprob: -10.913590431213379
    7. '   ' → logprob: -12.663590431213379
    8. '  ' → logprob: -12.913590431213379
    9. '``' → logprob: -13.288590431213379
    10. '```' → logprob: -13.288590431213379

Token 54: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.584615170955658
    2. '.' → logprob: -1.3346152305603027
    3. ':' → logprob: -1.8346152305603027
    4. '```' → logprob: -4.959615230560303
    5. '):' → logprob: -5.709615230560303
    6. '.
' → logprob: -6.209615230560303
    7. ' (' → logprob: -6.834615230560303
    8. '
' → logprob: -6.959615230560303
    9. ',' → logprob: -6.959615230560303
    10. '\n' → logprob: -7.334615230560303

Token 55: ' respect' (ID: 5618)
  Prédit: ' respect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' respect' → logprob: -0.3234054148197174
    2. ' ' → logprob: -1.948405385017395
    3. ' the' → logprob: -2.9484055042266846
    4. ' ones' → logprob: -3.9484055042266846
    5. ' a' → logprob: -4.1984052658081055
    6. 'out' → logprob: -4.8234052658081055
    7. ' all' → logprob: -5.1984052658081055
    8. ' an' → logprob: -5.5734052658081055
    9. ' zeros' → logprob: -5.5734052658081055
    10. ' pivot' → logprob: -5.8234052658081055

Token 56: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5378652811050415
    2. 'to' → logprob: -0.9128652811050415
    3. '<|end|>' → logprob: -4.412865161895752
    4. 't' → logprob: -7.537865161895752
    5. '_to' → logprob: -7.787865161895752
    6. '=' → logprob: -8.28786563873291
    7. 'u' → logprob: -8.41286563873291
    8. 'd' → logprob: -8.66286563873291
    9. ' ' → logprob: -8.78786563873291
    10. ')' → logprob: -8.78786563873291

Token 57: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.03998616337776184
    2. ' each' → logprob: -4.4149861335754395
    3. ' ' → logprob: -4.7899861335754395
    4. ' columns' → logprob: -4.9149861335754395
    5. ' rows' → logprob: -5.5399861335754395
    6. ' a' → logprob: -6.7899861335754395
    7. 'the' → logprob: -6.9149861335754395
    8. ' binary' → logprob: -7.4149861335754395
    9. ' column' → logprob: -7.5399861335754395
    10. ')' → logprob: -7.6649861335754395

Token 58: ' XOR' (ID: 147209)
  Prédit: ' rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rows' → logprob: -1.3781287670135498
    2. ' columns' → logprob: -1.5031287670135498
    3. ' right' → logprob: -2.25312876701355
    4. ' binary' → logprob: -2.37812876701355
    5. ' vector' → logprob: -3.00312876701355
    6. ' vectors' → logprob: -3.00312876701355
    7. ' next' → logprob: -3.12812876701355
    8. ' given' → logprob: -3.62812876701355
    9. ' input' → logprob: -4.003129005432129
    10. ' matrix' → logprob: -4.128129005432129

Token 59: ' operation' (ID: 9506)
  Prédit: ' operation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operation' → logprob: -0.008475812152028084
    2. ' operations' → logprob: -5.6334757804870605
    3. ' ' → logprob: -6.3834757804870605
    4. ' of' → logprob: -6.7584757804870605
    5. 'operation' → logprob: -6.8834757804870605
    6. ')' → logprob: -8.883476257324219
    7. '   ' → logprob: -9.133476257324219
    8. ' operator' → logprob: -9.258476257324219
    9. '"' → logprob: -9.383476257324219
    10. '  ' → logprob: -9.633476257324219

Token 60: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2756558060646057
    2. ':' → logprob: -1.650655746459961
    3. '):' → logprob: -3.400655746459961
    4. '\n' → logprob: -5.775655746459961
    5. ':
' → logprob: -5.900655746459961
    6. '):
' → logprob: -6.275655746459961
    7. '
' → logprob: -6.275655746459961
    8. '    
' → logprob: -6.400655746459961
    9. '```' → logprob: -6.525655746459961
    10. '.' → logprob: -7.400655746459961

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03753962740302086
    2. '
' → logprob: -4.537539482116699
    3. '    
' → logprob: -4.537539482116699
    4. '```' → logprob: -4.912539482116699
    5. '\n' → logprob: -6.162539482116699
    6. ':' → logprob: -6.537539482116699
    7. '"""
' → logprob: -6.787539482116699
    8. '   
' → logprob: -7.287539482116699
    9. ' 
' → logprob: -7.662539482116699
    10. '    ' → logprob: -8.0375394821167

Token 62: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23660703003406525
    2. '
' → logprob: -2.111607074737549
    3. 'n' → logprob: -2.736607074737549
    4. '```' → logprob: -4.361607074737549
    5. '    
' → logprob: -5.486607074737549
    6. '    ' → logprob: -6.236607074737549
    7. '"""
' → logprob: -6.486607074737549
    8. '"""' → logprob: -6.736607074737549
    9. '\n' → logprob: -6.986607074737549
    10. '     
' → logprob: -7.861607074737549

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06030650436878204
    2. ',' → logprob: -4.435306549072266
    3. '=' → logprob: -4.435306549072266
    4. '   ' → logprob: -4.560306549072266
    5. '):' → logprob: -5.060306549072266
    6. '<|end|>' → logprob: -5.060306549072266
    7. ' :' → logprob: -5.685306549072266
    8. ')' → logprob: -6.060306549072266
    9. '[' → logprob: -6.310306549072266
    10. '```' → logprob: -6.685306549072266

Token 64: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011752852238714695
    2. '```' → logprob: -5.261753082275391
    3. ' A' → logprob: -5.636753082275391
    4. '    ' → logprob: -6.636753082275391
    5. 'A' → logprob: -7.011753082275391
    6. ' ' → logprob: -8.76175308227539
    7. ')' → logprob: -9.13675308227539
    8. '  ' → logprob: -9.51175308227539
    9. '`' → logprob: -9.88675308227539
    10. '``' → logprob: -10.01175308227539

Token 65: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.06390475481748581
    2. ' A' → logprob: -3.0639047622680664
    3. '   ' → logprob: -4.188904762268066
    4. '`' → logprob: -11.313904762268066
    5. '	A' → logprob: -11.813904762268066
    6. ' ' → logprob: -12.938904762268066
    7. '```' → logprob: -12.938904762268066
    8. ' matrix' → logprob: -13.313904762268066
    9. '       ' → logprob: -13.313904762268066
    10. '  ' → logprob: -13.313904762268066

Token 66: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034090590197592974
    2. '):' → logprob: -5.878408908843994
    3. ' :' → logprob: -8.003409385681152
    4. ',' → logprob: -8.878409385681152
    5. ')' → logprob: -9.878409385681152
    6. '   ' → logprob: -10.378409385681152
    7. '):
' → logprob: -10.628409385681152
    8. '.shape' → logprob: -12.128409385681152
    9. '[np' → logprob: -12.503409385681152
    10. '<|end|>' → logprob: -12.753409385681152

Token 67: 'np' (ID: 12766)
  Prédit: 'np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.005985439755022526
    2. ' np' → logprob: -5.130985260009766
    3. '   ' → logprob: -10.755985260009766
    4. 'numpy' → logprob: -10.755985260009766
    5. 'nd' → logprob: -12.380985260009766
    6. '[np' → logprob: -12.380985260009766
    7. '```' → logprob: -13.755985260009766
    8. '(np' → logprob: -14.005985260009766
    9. ')' → logprob: -14.005985260009766
    10. ' numpy' → logprob: -14.630985260009766

Token 68: '.ndarray' (ID: 78346)
  Prédit: '.ndarray'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ndarray' → logprob: -5.157039049663581e-05
    2. '.' → logprob: -10.250051498413086
    3. '.array' → logprob: -11.875051498413086
    4. '._' → logprob: -12.000051498413086
    5. '.nd' → logprob: -13.875051498413086
    6. ' .' → logprob: -14.250051498413086
    7. ' ndarray' → logprob: -14.500051498413086
    8. '   ' → logprob: -15.125051498413086
    9. '.npy' → logprob: -15.875051498413086
    10. '.Array' → logprob: -16.500051498413086

Token 69: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47562000155448914
    2. ')' → logprob: -0.9756200313568115
    3. ' ):' → logprob: -7.600619792938232
    4. '   ' → logprob: -7.850619792938232
    5. ' )' → logprob: -8.10062026977539
    6. ',' → logprob: -8.72562026977539
    7. '):
' → logprob: -9.10062026977539
    8. '[np' → logprob: -10.85062026977539
    9. ':' → logprob: -10.97562026977539
    10. '```' → logprob: -11.47562026977539

Token 70: ' Input' (ID: 10090)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.539018988609314
    2. ' np' → logprob: -1.789018988609314
    3. ' The' → logprob: -2.1640191078186035
    4. ' A' → logprob: -2.4140191078186035
    5. ' ndarray' → logprob: -4.2890191078186035
    6. ' An' → logprob: -4.4140191078186035
    7. '    ' → logprob: -5.1640191078186035
    8. '   ' → logprob: -5.9140191078186035
    9. 'The' → logprob: -6.0390191078186035
    10. 'A' → logprob: -6.1640191078186035

Token 71: ' numpy' (ID: 19529)
  Prédit: ' matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.06502700597047806
    2. ' array' → logprob: -3.5650269985198975
    3. '   ' → logprob: -3.8150269985198975
    4. 'matrix' → logprob: -5.565027236938477
    5. ')' → logprob: -6.065027236938477
    6. ' of' → logprob: -6.190027236938477
    7. ' ' → logprob: -7.190027236938477
    8. ',' → logprob: -7.315027236938477
    9. 'array' → logprob: -7.440027236938477
    10. '  ' → logprob: -7.940027236938477

Token 72: ' array' (ID: 2644)
  Prédit: ' array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.08442608267068863
    2. '.ndarray' → logprob: -2.584426164627075
    3. '   ' → logprob: -5.709425926208496
    4. 'array' → logprob: -6.709425926208496
    5. '[int' → logprob: -8.209425926208496
    6. '[array' → logprob: -8.584425926208496
    7. ' ndarray' → logprob: -8.709425926208496
    8. ' ' → logprob: -8.709425926208496
    9. '[' → logprob: -9.334425926208496
    10. ')' → logprob: -11.209425926208496

Token 73: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6251162886619568
    2. '   ' → logprob: -1.6251163482666016
    3. ')' → logprob: -2.1251163482666016
    4. ',' → logprob: -2.3751163482666016
    5. ' with' → logprob: -3.5001163482666016
    6. '```' → logprob: -4.750116348266602
    7. ' representing' → logprob: -5.125116348266602
    8. '[' → logprob: -6.000116348266602
    9. '):' → logprob: -6.500116348266602
    10. ':' → logprob: -6.750116348266602

Token 74: ' integers' (ID: 54912)
  Prédit: ' dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dtype' → logprob: -0.6193029284477234
    2. 'dtype' → logprob: -0.9943029284477234
    3. ' type' → logprob: -2.744302988052368
    4. ' shape' → logprob: -4.369302749633789
    5. 'uint' → logprob: -5.494302749633789
    6. 'type' → logprob: -5.619302749633789
    7. ' uint' → logprob: -5.869302749633789
    8. ' integers' → logprob: -5.994302749633789
    9. 'bool' → logprob: -7.994302749633789
    10. 'int' → logprob: -8.244302749633789

Token 75: '.

' (ID: 364)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2863733172416687
    2. ')' → logprob: -2.2863733768463135
    3. '   ' → logprob: -2.4113733768463135
    4. ' ,' → logprob: -4.036373138427734
    5. ' with' → logprob: -4.661373138427734
    6. '):' → logprob: -4.911373138427734
    7. '```' → logprob: -5.536373138427734
    8. ' of' → logprob: -5.536373138427734
    9. '):
' → logprob: -5.786373138427734
    10. ' representing' → logprob: -5.786373138427734

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10373928397893906
    2. ')' → logprob: -2.6037392616271973
    3. '```' → logprob: -4.228739261627197
    4. '"""
' → logprob: -5.603739261627197
    5. '"""' → logprob: -6.103739261627197
    6. '):' → logprob: -7.478739261627197
    7. ' )' → logprob: -7.728739261627197
    8. 'Returns' → logprob: -7.728739261627197
    9. '
' → logprob: -7.853739261627197
    10. ')
' → logprob: -7.853739261627197

Token 77: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059461627155542374
    2. '```' → logprob: -3.4344615936279297
    3. '"""' → logprob: -4.30946159362793
    4. '"""
' → logprob: -4.93446159362793
    5. ')' → logprob: -6.18446159362793
    6. '
' → logprob: -7.18446159362793
    7. 'Returns' (adapté à ' Returns') → logprob: -7.30946159362793
    8. '"' → logprob: -8.18446159362793
    9. '``' → logprob: -8.43446159362793
    10. ')
' → logprob: -8.55946159362793

Token 78: ':
' (ID: 734)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5706388354301453
    2. ':' → logprob: -1.44563889503479
    3. 'A' → logprob: -2.82063889503479
    4. '<|end|>' → logprob: -2.82063889503479
    5. '```' → logprob: -3.82063889503479
    6. '   ' → logprob: -4.820638656616211
    7. ' =' → logprob: -4.820638656616211
    8. '<|end|>' → logprob: -4.945638656616211
    9. '_' → logprob: -5.320638656616211
    10. ' np' → logprob: -5.320638656616211

Token 79: '       ' (ID: 309)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.08769746869802475
    2. '   ' → logprob: -2.7126975059509277
    3. 'A' → logprob: -4.337697505950928
    4. ' np' → logprob: -5.587697505950928
    5. ' None' → logprob: -7.962697505950928
    6. '    ' → logprob: -8.21269702911377
    7. 'np' → logprob: -9.58769702911377
    8. ' numpy' → logprob: -10.08769702911377
    9. '       ' → logprob: -10.83769702911377
    10. 'None' → logprob: -11.33769702911377

Token 80: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.47415611147880554
    2. 'np' (adapté à ' np') → logprob: -0.9741561412811279
    3. 'A' → logprob: -9.724156379699707
    4. ' A' → logprob: -11.849156379699707
    5. '   ' → logprob: -11.974156379699707
    6. '[np' → logprob: -13.349156379699707
    7. 'Optional' → logprob: -13.849156379699707
    8. '(np' → logprob: -13.974156379699707
    9. ' Optional' → logprob: -14.599156379699707
    10. '       ' → logprob: -14.599156379699707

Token 81: '.ndarray' (ID: 78346)
  Prédit: '.ndarray'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ndarray' → logprob: -0.0003827676991932094
    2. '.' → logprob: -8.000382423400879
    3. '.npy' → logprob: -10.750382423400879
    4. '._' → logprob: -11.500382423400879
    5. '.numpy' → logprob: -12.625382423400879
    6. '.nd' → logprob: -13.000382423400879
    7. ' ndarray' → logprob: -13.250382423400879
    8. '```' → logprob: -13.375382423400879
    9. '.asarray' → logprob: -13.625382423400879
    10. ':' → logprob: -14.000382423400879

Token 82: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023843301460146904
    2. ':
' → logprob: -6.752384185791016
    3. '   ' → logprob: -6.877384185791016
    4. 'A' → logprob: -9.502384185791016
    5. ' :' → logprob: -10.377384185791016
    6. '       ' → logprob: -11.002384185791016
    7. '```' → logprob: -11.627384185791016
    8. '):' → logprob: -12.127384185791016
    9. '[np' → logprob: -12.127384185791016
    10. ',' → logprob: -12.252384185791016

Token 83: ' The' (ID: 623)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.1153419017791748
    2. ' The' → logprob: -2.490341901779175
    3. 'A' → logprob: -4.240342140197754
    4. '   ' → logprob: -4.740342140197754
    5. 'The' → logprob: -6.615342140197754
    6. ' Modified' → logprob: -6.740342140197754
    7. ' np' → logprob: -8.490342140197754
    8. ' An' → logprob: -9.365342140197754
    9. ' the' → logprob: -10.615342140197754
    10. 'Modified' → logprob: -10.740342140197754

Token 84: ' basis' (ID: 9571)
  Prédit: ' modified'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' modified' → logprob: -0.5402034521102905
    2. ' transformed' → logprob: -1.9152034521102905
    3. ' input' → logprob: -2.29020357131958
    4. ' A' → logprob: -2.91520357131958
    5. ' processed' → logprob: -3.04020357131958
    6. ' converted' → logprob: -4.41520357131958
    7. ' updated' → logprob: -4.66520357131958
    8. ' array' → logprob: -4.79020357131958
    9. ' same' → logprob: -4.79020357131958
    10. 'A' → logprob: -4.91520357131958

Token 85: ' of' (ID: 328)
  Prédit: ' vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vectors' → logprob: -0.4261183738708496
    2. ' of' → logprob: -1.9261183738708496
    3. '   ' → logprob: -2.4261183738708496
    4. ' for' → logprob: -2.5511183738708496
    5. '<|end|>' → logprob: -4.80111837387085
    6. '_vectors' → logprob: -5.05111837387085
    7. 'vectors' → logprob: -5.30111837387085
    8. '```' → logprob: -5.67611837387085
    9. ' that' → logprob: -5.80111837387085
    10. ' ' → logprob: -6.30111837387085

Token 86: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5417237877845764
    2. ' A' → logprob: -0.9167237877845764
    3. 'A' → logprob: -4.541723728179932
    4. 'the' → logprob: -4.916723728179932
    5. ' vectors' → logprob: -8.54172420501709
    6. ' rows' → logprob: -8.66672420501709
    7. ' a' → logprob: -10.79172420501709
    8. ' sub' → logprob: -11.16672420501709
    9. ' row' → logprob: -11.29172420501709
    10. ' input' → logprob: -11.79172420501709

Token 87: ' input' (ID: 3422)
  Prédit: ' sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -1.2959115505218506
    2. ' input' → logprob: -1.2959115505218506
    3. ' row' → logprob: -1.9209115505218506
    4. 'row' → logprob: -2.5459115505218506
    5. ' vector' → logprob: -2.9209115505218506
    6. 'space' → logprob: -3.0459115505218506
    7. ' space' → logprob: -3.6709115505218506
    8. 'sub' → logprob: -3.9209115505218506
    9. 'input' → logprob: -4.17091178894043
    10. ' array' → logprob: -4.29591178894043

Token 88: ' array' (ID: 2644)
  Prédit: ' vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vectors' → logprob: -0.616205632686615
    2. ' A' → logprob: -1.2412056922912598
    3. 'A' → logprob: -2.4912056922912598
    4. '   ' → logprob: -2.9912056922912598
    5. ' array' → logprob: -4.61620569229126
    6. 'vectors' → logprob: -4.74120569229126
    7. '```' → logprob: -5.36620569229126
    8. ' vector' → logprob: -5.99120569229126
    9. ' matrix' → logprob: -6.36620569229126
    10. ' space' → logprob: -6.36620569229126

Token 89: ' under' (ID: 1641)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49421796202659607
    2. '   ' → logprob: -1.1192179918289185
    3. '```' → logprob: -3.369217872619629
    4. '    ' → logprob: -5.244217872619629
    5. ' :' → logprob: -5.494217872619629
    6. '\n' → logprob: -5.619217872619629
    7. '.' → logprob: -6.119217872619629
    8. ',' → logprob: -6.244217872619629
    9. ':
' → logprob: -6.494217872619629
    10. '\' → logprob: -6.494217872619629

Token 90: ' XOR' (ID: 147209)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9397557377815247
    2. ' xor' → logprob: -1.0647556781768799
    3. ' XOR' → logprob: -1.8147556781768799
    4. 'xor' → logprob: -3.31475567817688
    5. '   ' → logprob: -3.81475567817688
    6. 'the' → logprob: -4.689755916595459
    7. ' np' → logprob: -5.064755916595459
    8. ' GF' → logprob: -5.314755916595459
    9. ' numpy' → logprob: -5.814755916595459
    10. ' ' → logprob: -5.939755916595459

Token 91: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32504528760910034
    2. ':' → logprob: -1.5750453472137451
    3. '
' → logprob: -3.700045347213745
    4. '```' → logprob: -4.575045108795166
    5. ' :' → logprob: -5.200045108795166
    6. '    
' → logprob: -5.325045108795166
    7. ':
' → logprob: -5.450045108795166
    8. '   
' → logprob: -5.575045108795166
    9. '\n' → logprob: -5.700045108795166
    10. ',' → logprob: -6.075045108795166

Token 92: ' after' (ID: 1934)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3834737539291382
    2. ' A' → logprob: -1.7584737539291382
    3. ' which' → logprob: -1.8834737539291382
    4. '```' → logprob: -2.7584738731384277
    5. ' or' → logprob: -2.8834738731384277
    6. '    ' → logprob: -3.0084738731384277
    7. ' ' → logprob: -3.2584738731384277
    8. ' 
' → logprob: -3.5084738731384277
    9. ' that' → logprob: -3.5084738731384277
    10. ' np' → logprob: -3.8834738731384277

Token 93: ' elimination' (ID: 77324)
  Prédit: ' elimination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elimination' → logprob: -0.10694770514965057
    2. ' performing' → logprob: -3.356947660446167
    3. ' gaussian' → logprob: -3.856947660446167
    4. ' the' → logprob: -5.106947898864746
    5. 'ga' → logprob: -5.231947898864746
    6. ' eliminating' → logprob: -5.231947898864746
    7. ' ga' → logprob: -5.606947898864746
    8. 're' → logprob: -5.731947898864746
    9. ' reduction' → logprob: -5.731947898864746
    10. ' Gaussian' → logprob: -5.981947898864746

Token 94: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06757176667451859
    2. ':' → logprob: -2.9425718784332275
    3. '):' → logprob: -4.817571640014648
    4. '```' → logprob: -5.942571640014648
    5. '    
' → logprob: -8.192571640014648
    6. '.' → logprob: -8.192571640014648
    7. '
' → logprob: -8.192571640014648
    8. ',' → logprob: -8.317571640014648
    9. '):
' → logprob: -8.817571640014648
    10. '\n' → logprob: -9.192571640014648

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10469882190227509
    2. ':' → logprob: -3.104698896408081
    3. '    
' → logprob: -3.979698896408081
    4. '):' → logprob: -4.354698657989502
    5. '
' → logprob: -4.979698657989502
    6. '"""' → logprob: -5.354698657989502
    7. '```' → logprob: -5.479698657989502
    8. ')' → logprob: -6.104698657989502
    9. '\n' → logprob: -6.729698657989502
    10. '    ' → logprob: -7.479698657989502

Token 96: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14022862911224365
    2. ':' → logprob: -2.140228748321533
    3. '
' → logprob: -4.890228748321533
    4. '    
' → logprob: -6.390228748321533
    5. '):' → logprob: -6.515228748321533
    6. ':
' → logprob: -6.890228748321533
    7. '```' → logprob: -7.140228748321533
    8. '"""' → logprob: -9.265228271484375
    9. ')' → logprob: -9.390228271484375
    10. '\n' → logprob: -9.515228271484375

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006686006207019091
    2. 'n' → logprob: -5.506686210632324
    3. ' n' → logprob: -6.631686210632324
    4. '    
' → logprob: -7.506686210632324
    5. '
' → logprob: -7.631686210632324
    6. ' rows' → logprob: -9.381686210632324
    7. '```' → logprob: -9.881686210632324
    8. '    ' → logprob: -10.381686210632324
    9. 'rows' → logprob: -11.006686210632324
    10. ' 
' → logprob: -11.381686210632324

Token 98: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7440177798271179
    2. 'n' → logprob: -0.8690177798271179
    3. ' n' → logprob: -2.6190178394317627
    4. 'm' → logprob: -3.9940178394317627
    5. ' m' → logprob: -4.744017601013184
    6. '```' → logprob: -5.869017601013184
    7. 'A' → logprob: -6.869017601013184
    8. 'rows' → logprob: -7.619017601013184
    9. ' A' → logprob: -7.744017601013184
    10. ' rows' → logprob: -8.369017601013184

Token 99: ' Loop' (ID: 40095)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.773434042930603
    2. 'm' → logprob: -1.023434042930603
    3. ' n' → logprob: -2.2734341621398926
    4. ' m' → logprob: -3.0234341621398926
    5. 'rows' → logprob: -4.773434162139893
    6. 'A' → logprob: -4.773434162139893
    7. '   ' → logprob: -5.148434162139893
    8. ' A' → logprob: -6.273434162139893
    9. ' rows' → logprob: -6.273434162139893
    10. 'for' → logprob: -8.648433685302734

Token 100: ' from' (ID: 591)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2147386223077774
    2. ' for' → logprob: -1.7147386074066162
    3. '   ' → logprob: -5.214738845825195
    4. 'i' → logprob: -5.714738845825195
    5. ' in' → logprob: -6.464738845825195
    6. ' ' → logprob: -6.714738845825195
    7. 'for' → logprob: -7.339738845825195
    8. '_' → logprob: -8.339738845825195
    9. '    ' → logprob: -8.964738845825195
    10. ' _' → logprob: -9.214738845825195

Token 101: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28355082869529724
    2. 'i' → logprob: -2.53355073928833
    3. ' ' → logprob: -2.53355073928833
    4. ' i' → logprob: -3.40855073928833
    5. ' A' → logprob: -4.15855073928833
    6. 'n' → logprob: -4.65855073928833
    7. ' n' → logprob: -5.03355073928833
    8. 'len' → logprob: -5.53355073928833
    9. 'range' → logprob: -5.53355073928833
    10. 'A' → logprob: -5.65855073928833

Token 102: ' highest' (ID: 11639)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2633659243583679
    2. 'n' → logprob: -2.3883659839630127
    3. 'num' → logprob: -3.6383659839630127
    4. 'number' → logprob: -3.6383659839630127
    5. ' number' → logprob: -4.138365745544434
    6. ' n' → logprob: -4.388365745544434
    7. 'rows' → logprob: -4.388365745544434
    8. 'start' → logprob: -4.763365745544434
    9. ' ' → logprob: -4.888365745544434
    10. 'i' → logprob: -5.388365745544434

Token 103: ' bit' (ID: 3546)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1324163675308228
    2. ' row' → logprob: -1.5074163675308228
    3. ' bit' → logprob: -1.8824163675308228
    4. 'bit' → logprob: -2.507416248321533
    5. 'for' → logprob: -2.757416248321533
    6. '1' → logprob: -3.507416248321533
    7. 'row' → logprob: -3.507416248321533
    8. 'rank' → logprob: -3.507416248321533
    9. ' rank' → logprob: -4.007416248321533
    10. ' i' → logprob: -4.507416248321533

Token 104: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3785727620124817
    2. ' to' → logprob: -1.503572702407837
    3. ' =' → logprob: -3.503572702407837
    4. 'for' → logprob: -4.253572940826416
    5. ' bit' → logprob: -4.378572940826416
    6. ' in' → logprob: -5.128572940826416
    7. 'bit' → logprob: -5.503572940826416
    8. ' i' → logprob: -5.503572940826416
    9. ' (' → logprob: -6.003572940826416
    10. 'num' → logprob: -6.128572940826416

Token 105: '59' (ID: 4621)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '31' → logprob: -0.364406555891037
    2. 'A' → logprob: -1.6144065856933594
    3. '63' → logprob: -2.6144065856933594
    4. ' ' → logprob: -3.9894065856933594
    5. ' A' → logprob: -4.989406585693359
    6. '7' → logprob: -6.239406585693359
    7. 'len' → logprob: -6.864406585693359
    8. '(A' → logprob: -7.239406585693359
    9. 'np' → logprob: -7.489406585693359
    10. 'max' → logprob: -7.739406585693359

Token 106: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14889740943908691
    2. '5' → logprob: -2.648897409439087
    3. '   ' → logprob: -3.773897409439087
    4. ' )' → logprob: -4.023897171020508
    5. '7' → logprob: -4.523897171020508
    6. '1' → logprob: -5.648897171020508
    7. '9' → logprob: -5.898897171020508
    8. ',' → logprob: -6.273897171020508
    9. '3' → logprob: -6.398897171020508
    10. '6' → logprob: -7.148897171020508

Token 107: ' down' (ID: 1917)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.158872589468956
    2. ' for' → logprob: -2.408872604370117
    3. ',' → logprob: -3.908872604370117
    4. ' to' → logprob: -4.533872604370117
    5. '    ' → logprob: -4.908872604370117
    6. ' ' → logprob: -4.908872604370117
    7. 'for' → logprob: -5.783872604370117
    8. ' in' → logprob: -6.533872604370117
    9. ':' → logprob: -6.783872604370117
    10. '  ' → logprob: -6.783872604370117

Token 108: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2499450147151947
    2. ' to' → logprob: -1.624945044517517
    3. '    ' → logprob: -4.249945163726807
    4. '  ' → logprob: -5.624945163726807
    5. ' for' → logprob: -6.499945163726807
    6. ' ' → logprob: -6.499945163726807
    7. ',' → logprob: -7.499945163726807
    8. 'wards' → logprob: -7.874945163726807
    9. ' =' → logprob: -8.124944686889648
    10. 'for' → logprob: -8.249944686889648

Token 109: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6611224412918091
    2. '59' → logprob: -0.9111224412918091
    3. '0' → logprob: -3.1611223220825195
    4. '58' → logprob: -3.2861223220825195
    5. '1' → logprob: -7.2861223220825195
    6. '   ' → logprob: -7.9111223220825195
    7. '60' → logprob: -8.78612232208252
    8. '57' → logprob: -8.78612232208252
    9. '    ' → logprob: -9.16112232208252
    10. '  ' → logprob: -9.66112232208252

Token 110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04173143953084946
    2. '59' → logprob: -3.541731357574463
    3. '58' → logprob: -4.791731357574463
    4. ' ' → logprob: -5.916731357574463
    5. '-' → logprob: -7.791731357574463
    6. '60' → logprob: -8.416731834411621
    7. '1' → logprob: -9.041731834411621
    8. '   ' → logprob: -10.041731834411621
    9. '```' → logprob: -10.541731834411621
    10. '50' → logprob: -11.166731834411621

Token 111: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4312725365161896
    2. ' for' → logprob: -1.1812725067138672
    3. 'for' → logprob: -3.931272506713867
    4. ':' → logprob: -4.431272506713867
    5. '
' → logprob: -4.806272506713867
    6. '```' → logprob: -6.681272506713867
    7. '    
' → logprob: -6.806272506713867
    8. ' ' → logprob: -7.931272506713867
    9. ',' → logprob: -8.181272506713867
    10. '    ' → logprob: -8.306272506713867

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03308570757508278
    2. ' for' → logprob: -3.658085823059082
    3. 'for' → logprob: -5.033085823059082
    4. ':' → logprob: -9.658085823059082
    5. '
' → logprob: -9.783085823059082
    6. '```' → logprob: -10.033085823059082
    7. '60' → logprob: -10.908085823059082
    8. '59' → logprob: -11.408085823059082
    9. '    
' → logprob: -11.533085823059082
    10. '	for' → logprob: -12.158085823059082

Token 113: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.29173383116722107
    2. 'for' (adapté à ' for') → logprob: -1.5417338609695435
    3. '   ' → logprob: -3.416733741760254
    4. 'n' → logprob: -5.541733741760254
    5. ' n' → logprob: -6.416733741760254
    6. '```' → logprob: -8.041733741760254
    7. '
' → logprob: -9.791733741760254
    8. 'pivot' → logprob: -9.916733741760254
    9. 'rank' → logprob: -10.666733741760254
    10. 'i' → logprob: -10.916733741760254

Token 114: ' i' (ID: 575)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.4212789833545685
    2. 'i' → logprob: -1.421278953552246
    3. ' bit' → logprob: -2.796278953552246
    4. ' i' → logprob: -3.546278953552246
    5. 'b' → logprob: -4.921278953552246
    6. ' b' → logprob: -6.546278953552246
    7. 'k' → logprob: -7.046278953552246
    8. 'j' → logprob: -7.671278953552246
    9. 'pivot' → logprob: -7.671278953552246
    10. 'r' → logprob: -8.296278953552246

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007716055028140545
    2. 'in' → logprob: -4.882716178894043
    3. '   ' → logprob: -10.007716178894043
    4. ' ' → logprob: -10.132716178894043
    5. 'range' → logprob: -12.507716178894043
    6. '  ' → logprob: -12.757716178894043
    7. '    ' → logprob: -12.757716178894043
    8. ' =' → logprob: -13.132716178894043
    9. '```' → logprob: -13.257716178894043
    10. ')' → logprob: -13.257716178894043

Token 116: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009293214417994022
    2. ' range' → logprob: -5.009293079376221
    3. 're' → logprob: -6.009293079376221
    4. ' reversed' → logprob: -9.134293556213379
    5. '59' → logprob: -11.759293556213379
    6. 'reverse' → logprob: -13.259293556213379
    7. '   ' → logprob: -14.384293556213379
    8. '60' → logprob: -15.009293556213379
    9. 'np' → logprob: -16.134292602539062
    10. ' ' → logprob: -17.384292602539062

Token 117: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003676917403936386
    2. '59' → logprob: -5.628676891326904
    3. ' ' → logprob: -10.003677368164062
    4. ' (' → logprob: -11.253677368164062
    5. '   ' → logprob: -11.378677368164062
    6. '58' → logprob: -12.628677368164062
    7. '((' → logprob: -13.503677368164062
    8. '(len' → logprob: -14.378677368164062
    9. '  ' → logprob: -14.503677368164062
    10. '    ' → logprob: -15.128677368164062

Token 118: '59' (ID: 4621)
  Prédit: '59'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '59' → logprob: -0.0001319063303526491
    2. ' ' → logprob: -9.000131607055664
    3. '58' → logprob: -12.375131607055664
    4. '   ' → logprob: -13.125131607055664
    5. '5' → logprob: -14.687631607055664
    6. '  ' → logprob: -14.750131607055664
    7. '(' → logprob: -15.500131607055664
    8. '60' → logprob: -16.125131607055664
    9. '590' → logprob: -16.250131607055664
    10. ')' → logprob: -16.375131607055664

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012405868619680405
    2. ' ,' → logprob: -7.3762407302856445
    3. ' -' → logprob: -8.251240730285645
    4. '-' → logprob: -8.376240730285645
    5. ',-' → logprob: -9.251240730285645
    6. '9' → logprob: -11.626240730285645
    7. '   ' → logprob: -12.376240730285645
    8. '0' → logprob: -13.126240730285645
    9. '6' → logprob: -13.251240730285645
    10. '7' → logprob: -13.501240730285645

Token 120: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013266648165881634
    2. ' -' → logprob: -6.626326560974121
    3. ' ' → logprob: -14.501326560974121
    4. '-i' → logprob: -16.501327514648438
    5. 'i' → logprob: -16.626327514648438
    6. '   ' → logprob: -17.501327514648438
    7. '0' → logprob: -17.876327514648438
    8. ' i' → logprob: -18.001327514648438
    9. '  ' → logprob: -18.126327514648438
    10. ')' → logprob: -19.126327514648438

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.000003814697266
    4. '
' → logprob: -16.375003814697266
    5. '```' → logprob: -16.375003814697266
    6. '  ' → logprob: -17.875003814697266
    7. '

' → logprob: -18.000003814697266
    8. '' → logprob: -18.750003814697266
    9. '``' → logprob: -18.875003814697266
    10. '2' → logprob: -18.937503814697266

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006508840247988701
    2. '-' → logprob: -5.131508827209473
    3. ',-' → logprob: -8.131508827209473
    4. ' ,' → logprob: -8.756508827209473
    5. '   ' → logprob: -9.756508827209473
    6. ' -' → logprob: -9.756508827209473
    7. '1' → logprob: -12.631508827209473
    8. ' ,-' → logprob: -13.131508827209473
    9. '```' → logprob: -13.756508827209473
    10. '-,' → logprob: -13.881508827209473

Token 123: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.038043100386857986
    2. ' -' → logprob: -3.2880430221557617
    3. '```' → logprob: -14.663043022155762
    4. '   ' → logprob: -14.913043022155762
    5. ' ' → logprob: -15.038043022155762
    6. ')' → logprob: -15.663043022155762
    7. '):
' → logprob: -16.538043975830078
    8. '-i' → logprob: -16.663043975830078
    9. '1' → logprob: -17.163043975830078
    10. '  ' → logprob: -17.538043975830078

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -17.125001907348633
    4. '```' → logprob: -18.000001907348633
    5. ')' → logprob: -18.375001907348633
    6. '
' → logprob: -18.625001907348633
    7. '2' → logprob: -18.875001907348633
    8. '  ' → logprob: -19.062501907348633
    9. '):
' → logprob: -19.187501907348633
    10. '１' → logprob: -19.562501907348633

Token 125: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006176325026899576
    2. '):
' → logprob: -5.631176471710205
    3. ':' → logprob: -6.131176471710205
    4. ' ):' → logprob: -8.131175994873047
    5. ')' → logprob: -9.756175994873047
    6. ',' → logprob: -10.631175994873047
    7. '   ' → logprob: -11.131175994873047
    8. ' :' → logprob: -12.506175994873047
    9. ' ):
' → logprob: -13.756175994873047
    10. ' ' → logprob: -14.631175994873047

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034981502685695887
    2. '   ' → logprob: -6.503498077392578
    3. '<|end|>' → logprob: -6.503498077392578
    4. ':' → logprob: -8.878498077392578
    5. ' if' → logprob: -9.253498077392578
    6. ' ' → logprob: -10.003498077392578
    7. '        
' → logprob: -10.253498077392578
    8. '    ' → logprob: -10.503498077392578
    9. '
' → logprob: -10.503498077392578
    10. ',' → logprob: -11.128498077392578

Token 127: ' #' (ID: 1069)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.19708430767059326
    2. ' pivot' → logprob: -2.947084426879883
    3. '       ' → logprob: -3.197084426879883
    4. 'found' → logprob: -3.447084426879883
    5. 'row' → logprob: -3.947084426879883
    6. '   ' → logprob: -4.572084426879883
    7. 'n' → logprob: -4.822084426879883
    8. 'mask' → logprob: -5.572084426879883
    9. 'rows' → logprob: -5.947084426879883
    10. 'pos' → logprob: -6.322084426879883

Token 128: ' Identify' (ID: 88495)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.32573992013931274
    2. 'mask' → logprob: -2.700739860534668
    3. 'rows' → logprob: -2.825739860534668
    4. 'row' → logprob: -2.950739860534668
    5. 'found' → logprob: -3.700739860534668
    6. 'col' → logprob: -3.700739860534668
    7. ' pivot' → logprob: -3.950739860534668
    8. 'for' → logprob: -4.325739860534668
    9. 'n' → logprob: -5.575739860534668
    10. 'pos' → logprob: -6.325739860534668

Token 129: ' which' (ID: 1118)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.04090547561645508
    2. ' pivot' → logprob: -3.290905475616455
    3. 'rows' → logprob: -6.915905475616455
    4. 'mask' → logprob: -7.165905475616455
    5. 'row' → logprob: -7.290905475616455
    6. 'pos' → logprob: -8.915904998779297
    7. '   ' → logprob: -9.915904998779297
    8. ' rows' → logprob: -10.290904998779297
    9. 'max' → logprob: -10.665904998779297
    10. 'found' → logprob: -10.665904998779297

Token 130: ' elements' (ID: 8632)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.06405024230480194
    2. 'row' → logprob: -3.3140501976013184
    3. ' rows' → logprob: -3.6890501976013184
    4. ' row' → logprob: -7.939050197601318
    5. 'pivot' → logprob: -8.814050674438477
    6. 'indices' → logprob: -10.064050674438477
    7. '   ' → logprob: -11.064050674438477
    8. 'mask' → logprob: -11.189050674438477
    9. 'cols' → logprob: -11.439050674438477
    10. 'column' → logprob: -11.689050674438477

Token 131: ' have' (ID: 679)
  Prédit: ' have'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.2922525405883789
    2. ' =' → logprob: -1.917252540588379
    3. ' in' → logprob: -3.167252540588379
    4. 'have' → logprob: -3.667252540588379
    5. '=' → logprob: -4.292252540588379
    6. ' are' → logprob: -4.417252540588379
    7. '   ' → logprob: -5.417252540588379
    8. ' can' → logprob: -6.667252540588379
    9. '    ' → logprob: -6.917252540588379
    10. ' of' → logprob: -7.042252540588379

Token 132: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.2931896448135376
    2. 'bit' → logprob: -1.6681896448135376
    3. ' the' → logprob: -1.7931896448135376
    4. ' their' → logprob: -2.418189525604248
    5. ' bit' → logprob: -2.668189525604248
    6. ' (' → logprob: -2.918189525604248
    7. 'a' → logprob: -3.168189525604248
    8. 'the' → logprob: -3.418189525604248
    9. 'their' → logprob: -3.668189525604248
    10. 'A' → logprob: -4.168189525604248

Token 133: ' ith' (ID: 65087)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31429117918014526
    2. 'ith' → logprob: -1.56429123878479
    3. ' i' → logprob: -3.18929123878479
    4. 'bit' → logprob: -4.439291000366211
    5. ' ith' → logprob: -5.814291000366211
    6. ' (' → logprob: -6.439291000366211
    7. '(i' → logprob: -6.439291000366211
    8. ' bit' → logprob: -7.189291000366211
    9. '1' → logprob: -8.814291000366211
    10. 'highest' → logprob: -9.314291000366211

Token 134: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.11320378631353378
    2. 'bit' → logprob: -2.238203763961792
    3. '(bit' → logprob: -8.988204002380371
    4. '_bit' → logprob: -9.113204002380371
    5. ' (' → logprob: -9.863204002380371
    6. '-bit' → logprob: -10.238204002380371
    7. ' ' → logprob: -11.613204002380371
    8. '1' → logprob: -11.613204002380371
    9. '_' → logprob: -11.863204002380371
    10. ')' → logprob: -12.488204002380371

Token 135: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.1559537798166275
    2. '_set' → logprob: -2.655953884124756
    3. '       ' → logprob: -3.155953884124756
    4. 'set' → logprob: -3.905953884124756
    5. ' =' → logprob: -6.280953884124756
    6. '        ' → logprob: -6.280953884124756
    7. '    ' → logprob: -6.530953884124756
    8. '   ' → logprob: -6.655953884124756
    9. '1' → logprob: -6.905953884124756
    10. ' in' → logprob: -7.280953884124756

Token 136: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016765063628554344
    2. '        ' → logprob: -5.141765117645264
    3. ':' → logprob: -5.891765117645264
    4. ',' → logprob: -6.141765117645264
    5. ' for' → logprob: -7.266765117645264
    6. '      ' → logprob: -7.516765117645264
    7. '        
' → logprob: -7.641765117645264
    8. '   ' → logprob: -7.766765117645264
    9. 'for' → logprob: -7.766765117645264
    10. 'indices' → logprob: -7.766765117645264

Token 137: ' are' (ID: 553)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.05332551151514053
    2. 'not' → logprob: -3.8033254146575928
    3. ' are' → logprob: -4.178325653076172
    4. ' np' → logprob: -6.053325653076172
    5. ' do' → logprob: -6.303325653076172
    6. ' have' → logprob: -6.428325653076172
    7. ' all' → logprob: -6.428325653076172
    8. ' i' → logprob: -6.553325653076172
    9. 'np' → logprob: -6.553325653076172
    10. 'are' → logprob: -7.428325653076172

Token 138: ' less' (ID: 3760)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7642305493354797
    2. ' not' → logprob: -1.264230489730835
    3. 'not' → logprob: -1.764230489730835
    4. 'False' → logprob: -3.014230489730835
    5. ' ' → logprob: -4.389230728149414
    6. '==' → logprob: -5.014230728149414
    7. ' False' → logprob: -5.639230728149414
    8. '   ' → logprob: -6.014230728149414
    9. 'None' → logprob: -6.514230728149414
    10. '       ' → logprob: -6.889230728149414

Token 139: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.03342079371213913
    2. 'than' → logprob: -4.283420562744141
    3. '=' → logprob: -4.658420562744141
    4. '==' → logprob: -5.658420562744141
    5. '   ' → logprob: -6.033420562744141
    6. ' ==' → logprob: -7.533420562744141
    7. '_than' → logprob: -7.533420562744141
    8. '           ' → logprob: -7.908420562744141
    9. '          ' → logprob: -8.40842056274414
    10. ')' → logprob: -8.40842056274414

Token 140: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.292538583278656
    2. '1' → logprob: -3.042538642883301
    3. '(' → logprob: -3.292538642883301
    4. 'A' → logprob: -3.417538642883301
    5. ' len' → logprob: -3.792538642883301
    6. '=' → logprob: -3.917538642883301
    7. 'np' → logprob: -4.292538642883301
    8. '64' → logprob: -4.417538642883301
    9. '2' → logprob: -4.542538642883301
    10. '0' → logprob: -4.667538642883301

Token 141: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7101313471794128
    2. 'len' → logprob: -1.0851314067840576
    3. '1' → logprob: -2.7101314067840576
    4. 'i' → logprob: -3.2101314067840576
    5. '2' → logprob: -3.7101314067840576
    6. '=' → logprob: -4.8351311683654785
    7. 'np' → logprob: -4.8351311683654785
    8. 'A' → logprob: -5.3351311683654785
    9. '(i' → logprob: -5.4601311683654785
    10. '59' → logprob: -5.8351311683654785

Token 142: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.011050059460103512
    2. ' **' → logprob: -4.511050224304199
    3. '   ' → logprob: -14.2610502243042
    4. '*' → logprob: -14.6360502243042
    5. '```' → logprob: -15.2610502243042
    6. '**)' → logprob: -15.6360502243042
    7. '*i' → logprob: -16.011049270629883
    8. '       ' → logprob: -16.261049270629883
    9. ')' → logprob: -16.386049270629883
    10. ' **)' → logprob: -16.386049270629883

Token 143: '(' (ID: 7)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0034408881328999996
    2. '60' → logprob: -6.128440856933594
    3. ' i' → logprob: -6.878440856933594
    4. '   ' → logprob: -8.753440856933594
    5. '(i' → logprob: -10.878440856933594
    6. '59' → logprob: -11.128440856933594
    7. ' ' → logprob: -11.128440856933594
    8. '(' → logprob: -12.003440856933594
    9. '  ' → logprob: -13.128440856933594
    10. '61' → logprob: -13.128440856933594

Token 144: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00012213163427077234
    2. '60' → logprob: -9.1251220703125
    3. '(i' → logprob: -12.1251220703125
    4. '59' → logprob: -12.7501220703125
    5. '(' → logprob: -12.8751220703125
    6. ' i' → logprob: -13.1251220703125
    7. '	i' → logprob: -16.7501220703125
    8. '```' → logprob: -17.1251220703125
    9. ')' → logprob: -17.5001220703125
    10. '61' → logprob: -17.6251220703125

Token 145: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3346344530582428
    2. ')' → logprob: -1.3346344232559204
    3. '1' → logprob: -5.084634304046631
    4. '))' → logprob: -5.584634304046631
    5. ' +' → logprob: -5.584634304046631
    6. ' )' → logprob: -6.084634304046631
    7. '   ' → logprob: -6.584634304046631
    8. '):' → logprob: -6.709634304046631
    9. '):
' → logprob: -7.584634304046631
    10. '       ' → logprob: -7.959634304046631

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003931384126190096
    2. ')' → logprob: -8.37539291381836
    3. '0' → logprob: -10.00039291381836
    4. '60' → logprob: -10.12539291381836
    5. '+' → logprob: -10.50039291381836
    6. '```' → logprob: -10.75039291381836
    7. ' ' → logprob: -12.12539291381836
    8. 'i' → logprob: -12.12539291381836
    9. '   ' → logprob: -12.50039291381836
    10. '``' → logprob: -13.00039291381836

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0219828002154827e-05
    2. ')' → logprob: -11.625020027160645
    3. ' ' → logprob: -12.625020027160645
    4. '```' → logprob: -12.750020027160645
    5. '0' → logprob: -13.000020027160645
    6. '60' → logprob: -14.375020027160645
    7. '   ' → logprob: -14.750020027160645
    8. '2' → logprob: -15.000020027160645
    9. '
' → logprob: -15.375020027160645
    10. '59' → logprob: -16.25002098083496

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6942945122718811
    2. '):' → logprob: -0.8192945122718811
    3. ' )' → logprob: -3.8192944526672363
    4. ' ):' → logprob: -3.9442944526672363
    5. '):
' → logprob: -5.319294452667236
    6. '   ' → logprob: -5.694294452667236
    7. ')):' → logprob: -5.694294452667236
    8. '))' → logprob: -5.819294452667236
    9. '       ' → logprob: -6.819294452667236
    10. ' ' → logprob: -7.319294452667236

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01109309121966362
    2. ':' → logprob: -4.6360931396484375
    3. '   ' → logprob: -7.5110931396484375
    4. ',' → logprob: -8.386093139648438
    5. ' for' → logprob: -8.386093139648438
    6. 'for' → logprob: -10.261093139648438
    7. '      ' → logprob: -10.386093139648438
    8. ' :' → logprob: -10.386093139648438
    9. '        
' → logprob: -10.386093139648438
    10. '           ' → logprob: -10.511093139648438

Token 150: ' one' (ID: 1001)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.7330808043479919
    2. ' mask' → logprob: -1.6080808639526367
    3. 'indices' → logprob: -2.3580808639526367
    4. 'pivot' → logprob: -2.6080808639526367
    5. '       ' → logprob: -2.9830808639526367
    6. ' pivot' → logprob: -4.108080863952637
    7. 'c' → logprob: -4.483080863952637
    8. ' indices' → logprob: -4.608080863952637
    9. 'for' → logprob: -4.733080863952637
    10. 'idx' → logprob: -4.858080863952637

Token 151: '_digit' (ID: 119592)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.9895891547203064
    2. 's' → logprob: -1.2395892143249512
    3. '_indices' → logprob: -1.8645892143249512
    4. '_bits' → logprob: -2.864589214324951
    5. '_bit' → logprob: -3.489589214324951
    6. '_pos' → logprob: -3.614589214324951
    7. '_positions' → logprob: -3.864589214324951
    8. ' =' → logprob: -4.489589214324951
    9. '_elements' → logprob: -4.739589214324951
    10. '_idx' → logprob: -4.989589214324951

Token 152: ' =' (ID: 314)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -1.0301473140716553
    2. '_elements' → logprob: -1.1551473140716553
    3. '_indices' → logprob: -1.6551473140716553
    4. ' =' → logprob: -2.5301473140716553
    5. 's' → logprob: -3.9051473140716553
    6. '=' → logprob: -4.280147552490234
    7. '_idx' → logprob: -5.905147552490234
    8. '_candidates' → logprob: -5.905147552490234
    9. '_idxs' → logprob: -6.030147552490234
    10. '_indexes' → logprob: -6.280147552490234

Token 153: ' (' (ID: 350)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.9170860052108765
    2. 'A' → logprob: -1.0420860052108765
    3. 'np' → logprob: -2.292086124420166
    4. '(A' → logprob: -3.167086124420166
    5. ' [' → logprob: -3.792086124420166
    6. '[' → logprob: -3.917086124420166
    7. ' A' → logprob: -4.042086124420166
    8. ' (' → logprob: -4.917086124420166
    9. '[np' → logprob: -5.042086124420166
    10. '[(' → logprob: -5.167086124420166

Token 154: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04438243433833122
    2. '(A' → logprob: -3.419382333755493
    3. ' A' → logprob: -4.919382572174072
    4. ' (' → logprob: -6.169382572174072
    5. '   ' → logprob: -7.169382572174072
    6. '(' → logprob: -8.544382095336914
    7. 'np' → logprob: -8.919382095336914
    8. '((' → logprob: -9.544382095336914
    9. ' ' → logprob: -10.044382095336914
    10. '(np' → logprob: -10.669382095336914

Token 155: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.30497342348098755
    2. ' >=' → logprob: -2.0549733638763428
    3. '>=' → logprob: -2.3049733638763428
    4. '&' → logprob: -3.8049733638763428
    5. '>' → logprob: -5.054973602294922
    6. '[' → logprob: -6.929973602294922
    7. '&gt' → logprob: -7.304973602294922
    8. '[np' → logprob: -7.304973602294922
    9. ' ' → logprob: -7.429973602294922
    10. '[:]' → logprob: -7.429973602294922

Token 156: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006607371848076582
    2. ' (' → logprob: -5.256607532501221
    3. '((' → logprob: -6.631607532501221
    4. ')' → logprob: -10.756607055664062
    5. '(i' → logprob: -11.131607055664062
    6. ' ((' → logprob: -12.131607055664062
    7. '   ' → logprob: -12.756607055664062
    8. '
' → logprob: -13.006607055664062
    9. '(((' → logprob: -13.256607055664062
    10. ' ' → logprob: -13.631607055664062

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5761622190475464
    2. '(' → logprob: -0.8261622190475464
    3. ' (' → logprob: -8.826162338256836
    4. ' ' → logprob: -9.701162338256836
    5. 'np' → logprob: -11.951162338256836
    6. '   ' → logprob: -12.451162338256836
    7. '(np' → logprob: -13.326162338256836
    8. '[' → logprob: -13.701162338256836
    9. ')' → logprob: -14.201162338256836
    10. '  ' → logprob: -15.701162338256836

Token 158: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.10020710527896881
    2. '<<' → logprob: -2.3502070903778076
    3. '<<(' → logprob: -15.100207328796387
    4. '<' → logprob: -16.72520637512207
    5. ' ' → logprob: -16.72520637512207
    6. '<<<' → logprob: -16.85020637512207
    7. ' <<
' → logprob: -17.35020637512207
    8. ' <' → logprob: -18.60020637512207
    9. ' ' → logprob: -18.72520637512207
    10. '   ' → logprob: -19.10020637512207

Token 159: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00018065694894175977
    2. ' i' → logprob: -8.6251802444458
    3. ' ' → logprob: -14.6251802444458
    4. '   ' → logprob: -14.7501802444458
    5. '  ' → logprob: -17.250181198120117
    6. '	i' → logprob: -17.250181198120117
    7. '(i' → logprob: -17.625181198120117
    8. ')' → logprob: -17.750181198120117
    9. ')i' → logprob: -18.000181198120117
    10. '[i' → logprob: -18.625181198120117

Token 160: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0004061242798343301
    2. ')' → logprob: -7.875406265258789
    3. ' ))' → logprob: -10.875406265258789
    4. '!=' → logprob: -13.000406265258789
    5. ')!=' → logprob: -13.250406265258789
    6. ')))' → logprob: -14.375406265258789
    7. '])' → logprob: -14.875406265258789
    8. '[' → logprob: -15.125406265258789
    9. '"))' → logprob: -15.250406265258789
    10. '))
' → logprob: -15.500406265258789

Token 161: ' !=' (ID: 1666)
  Prédit: ')!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')!=' → logprob: -0.9172839522361755
    2. ')' → logprob: -1.0422840118408203
    3. '!=' → logprob: -1.4172840118408203
    4. ' !=' → logprob: -5.66728401184082
    5. '>' → logprob: -6.91728401184082
    6. '.astype' → logprob: -7.91728401184082
    7. '()!=' → logprob: -8.66728401184082
    8. ']!=' → logprob: -8.66728401184082
    9. ')>' → logprob: -9.16728401184082
    10. ' )' → logprob: -10.16728401184082

Token 162: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015028368216007948
    2. ' ' → logprob: -6.501502990722656
    3. 'False' → logprob: -14.626502990722656
    4. ' False' → logprob: -17.501502990722656
    5. 'np' → logprob: -19.001502990722656
    6. '   ' → logprob: -19.126502990722656
    7. '00' → logprob: -19.626502990722656
    8. '۰' → logprob: -21.126502990722656
    9. ' np' → logprob: -21.251502990722656
    10. ' ' → logprob: -21.251502990722656

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.263011578586884e-05
    2. ' ' → logprob: -10.250042915344238
    3. 'False' → logprob: -11.875042915344238
    4. 'np' → logprob: -16.000041961669922
    5. ' False' → logprob: -18.000041961669922
    6. '۰' → logprob: -19.750041961669922
    7. '   ' → logprob: -19.750041961669922
    8. 'false' → logprob: -19.875041961669922
    9. 'zero' → logprob: -20.250041961669922
    10. '  ' → logprob: -20.625041961669922

Token 164: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05431801453232765
    2. '<|end|>' → logprob: -3.6793179512023926
    3. ')' → logprob: -4.054317951202393
    4. '
' → logprob: -5.429317951202393
    5. ':' → logprob: -6.679317951202393
    6. '        
' → logprob: -7.054317951202393
    7. '<|end|>' → logprob: -7.054317951202393
    8. ' ' → logprob: -7.054317951202393
    9. '   ' → logprob: -8.05431842803955
    10. ',' → logprob: -8.30431842803955

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020273244008421898
    2. '<|end|>' → logprob: -4.145273208618164
    3. ')' → logprob: -6.395273208618164
    4. '[' → logprob: -7.270273208618164
    5. '        
' → logprob: -8.020273208618164
    6. '
' → logprob: -8.145273208618164
    7. '<|end|>' → logprob: -8.645273208618164
    8. ' if' → logprob: -9.020273208618164
    9. '   ' → logprob: -9.270273208618164
    10. '        ' → logprob: -9.270273208618164

Token 166: ' pivot' (ID: 44506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2936133146286011
    2. 'pivot' (adapté à ' pivot') → logprob: -2.4186134338378906
    3. ' pivot' → logprob: -3.2936134338378906
    4. 'indices' → logprob: -3.5436134338378906
    5. ' if' → logprob: -4.168613433837891
    6. 'mask' → logprob: -4.293613433837891
    7. ' for' → logprob: -4.668613433837891
    8. 'found' → logprob: -4.793613433837891
    9. 'for' → logprob: -5.043613433837891
    10. ' mask' → logprob: -5.293613433837891

Token 167: '_flag' (ID: 25269)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.42472022771835327
    2. '_indices' → logprob: -2.049720287322998
    3. ' =' → logprob: -2.174720287322998
    4. '_index' → logprob: -3.174720287322998
    5. '_row' → logprob: -3.299720287322998
    6. '_rows' → logprob: -4.674720287322998
    7. '_candidates' → logprob: -4.799720287322998
    8. '_idxs' → logprob: -6.299720287322998
    9. '_mask' → logprob: -6.424720287322998
    10. '=' → logprob: -6.924720287322998

Token 168: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16165529191493988
    2. '=' → logprob: -1.911655306816101
    3. '_idx' → logprob: -6.786655426025391
    4. '_index' → logprob: -8.91165542602539
    5. '_indices' → logprob: -10.16165542602539
    6. ',' → logprob: -10.53665542602539
    7. 'idx' → logprob: -10.78665542602539
    8. ')' → logprob: -11.03665542602539
    9. '   ' → logprob: -11.53665542602539
    10. 's' → logprob: -11.53665542602539

Token 169: ' np' (ID: 5374)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.6933146715164185
    2. 'False' → logprob: -0.6933146715164185
    3. '   ' → logprob: -9.693314552307129
    4. ' np' → logprob: -10.568314552307129
    5. '-' → logprob: -10.943314552307129
    6. 'np' → logprob: -10.943314552307129
    7. ' True' → logprob: -11.318314552307129
    8. ' -' → logprob: -11.443314552307129
    9. 'True' → logprob: -11.443314552307129
    10. ' ' → logprob: -11.943314552307129

Token 170: '.where' (ID: 40153)
  Prédit: '.argmax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.argmax' → logprob: -0.47704294323921204
    2. '.any' → logprob: -1.2270429134368896
    3. '.where' → logprob: -2.8520429134368896
    4. 'any' → logprob: -4.477043151855469
    5. '.sum' → logprob: -4.977043151855469
    6. 'where' → logprob: -5.852043151855469
    7. '.max' → logprob: -6.727043151855469
    8. '.zeros' → logprob: -6.852043151855469
    9. 'False' → logprob: -6.852043151855469
    10. 'max' → logprob: -6.977043151855469

Token 171: '(one' (ID: 92717)
  Prédit: '(one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(one' → logprob: -1.4140441635390744e-05
    2. '((' → logprob: -11.375014305114746
    3. '(' → logprob: -13.875014305114746
    4. 'one' → logprob: -14.125014305114746
    5. '(np' → logprob: -14.625014305114746
    6. ' (' → logprob: -15.500014305114746
    7. '(two' → logprob: -17.50001335144043
    8. '(~' → logprob: -17.62501335144043
    9. '(p' → logprob: -18.00001335144043
    10. '[' → logprob: -18.25001335144043

Token 172: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.0003622793301474303
    2. 'digit' → logprob: -9.000362396240234
    3. '_digits' → logprob: -9.250362396240234
    4. '-digit' → logprob: -9.375362396240234
    5. '[' → logprob: -11.125362396240234
    6. 'Digit' → logprob: -11.625362396240234
    7. '   ' → logprob: -11.875362396240234
    8. '_flag' → logprob: -12.125362396240234
    9. ')' → logprob: -12.500362396240234
    10. 's' → logprob: -13.000362396240234

Token 173: ' &' (ID: 827)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.0035611081402748823
    2. ',' → logprob: -5.878561019897461
    3. '[' → logprob: -7.503561019897461
    4. ' )[' → logprob: -9.628561019897461
    5. ' &' → logprob: -9.753561019897461
    6. ')' → logprob: -10.753561019897461
    7. ' and' → logprob: -11.628561019897461
    8. ',[' → logprob: -11.753561019897461
    9. ' ,' → logprob: -11.878561019897461
    10. ' [' → logprob: -12.253561019897461

Token 174: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.17824624478816986
    2. '(~' → logprob: -2.803246259689331
    3. '(np' → logprob: -3.303246259689331
    4. ' (' → logprob: -3.678246259689331
    5. '((' → logprob: -4.053246021270752
    6. '~' → logprob: -4.678246021270752
    7. '(' → logprob: -5.428246021270752
    8. '(one' → logprob: -5.553246021270752
    9. 'np' → logprob: -6.553246021270752
    10. '(True' → logprob: -6.678246021270752

Token 175: 'A' (ID: 32)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.23837238550186157
    2. 'A' → logprob: -1.6133723258972168
    3. 'np' → logprob: -5.113372325897217
    4. '(np' → logprob: -5.738372325897217
    5. ' (' → logprob: -6.488372325897217
    6. '((' → logprob: -7.238372325897217
    7. ' A' → logprob: -7.613372325897217
    8. '~' → logprob: -7.863372325897217
    9. '(~' → logprob: -8.613372802734375
    10. '(' → logprob: -9.238372802734375

Token 176: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3871183693408966
    2. ' <' → logprob: -1.1371183395385742
    3. '<n' → logprob: -10.512118339538574
    4. '<size' → logprob: -10.512118339538574
    5. '<(' → logprob: -10.637118339538574
    6. ' ' → logprob: -10.887118339538574
    7. '<int' → logprob: -11.387118339538574
    8. '<len' → logprob: -11.637118339538574
    9. '<p' → logprob: -11.762118339538574
    10. '>=' → logprob: -11.887118339538574

Token 177: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029198264237493277
    2. ' (' → logprob: -6.002919673919678
    3. '2' → logprob: -8.252920150756836
    4. '1' → logprob: -8.877920150756836
    5. '   ' → logprob: -10.377920150756836
    6. '[' → logprob: -12.877920150756836
    7. 'np' → logprob: -12.877920150756836
    8. '((' → logprob: -13.252920150756836
    9. ' ' → logprob: -13.377920150756836
    10. '>(' → logprob: -13.502920150756836

Token 178: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02554851956665516
    2. '1' → logprob: -3.9005484580993652
    3. '2' → logprob: -5.400548458099365
    4. ' (' → logprob: -7.775548458099365
    5. '   ' → logprob: -10.400548934936523
    6. ' ' → logprob: -10.775548934936523
    7. 'np' → logprob: -12.275548934936523
    8. '  ' → logprob: -14.150548934936523
    9. '(np' → logprob: -14.150548934936523
    10. '((' → logprob: -14.525548934936523

Token 179: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.6391590237617493
    2. ' <<' → logprob: -1.2641589641571045
    3. '<<(' → logprob: -1.8891589641571045
    4. '(' → logprob: -3.2641589641571045
    5. ' (' → logprob: -8.514159202575684
    6. '(np' → logprob: -10.139159202575684
    7. '   ' → logprob: -10.764159202575684
    8. 'np' → logprob: -11.014159202575684
    9. '1' → logprob: -11.014159202575684
    10. '[' → logprob: -11.139159202575684

Token 180: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.008940126746892929
    2. ' (' → logprob: -4.75894021987915
    3. '(' → logprob: -8.258939743041992
    4. '   ' → logprob: -10.133939743041992
    5. 'i' → logprob: -11.258939743041992
    6. ' ' → logprob: -11.883939743041992
    7. '  ' → logprob: -13.383939743041992
    8. '((' → logprob: -13.883939743041992
    9. '    ' → logprob: -14.383939743041992
    10. '(ii' → logprob: -14.383939743041992

Token 181: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.18091709911823273
    2. 'i' → logprob: -1.8059171438217163
    3. '(' → logprob: -7.555917263031006
    4. ' (' → logprob: -8.180916786193848
    5. '   ' → logprob: -8.555916786193848
    6. ' i' → logprob: -9.180916786193848
    7. '{i' → logprob: -9.930916786193848
    8. ' ' → logprob: -12.055916786193848
    9. '  ' → logprob: -12.680916786193848
    10. '	i' → logprob: -12.805916786193848

Token 182: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0030671951826661825
    2. ' +' → logprob: -6.0030670166015625
    3. '1' → logprob: -7.5030670166015625
    4. '   ' → logprob: -10.753067016601562
    5. ')))' → logprob: -12.128067016601562
    6. '))' → logprob: -12.253067016601562
    7. ')' → logprob: -13.003067016601562
    8. '))))' → logprob: -13.628067016601562
    9. ' ' → logprob: -14.003067016601562
    10. 'plus' → logprob: -14.378067016601562

Token 183: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001238004770129919
    2. ' ' → logprob: -9.250123977661133
    3. '   ' → logprob: -11.625123977661133
    4. '(i' → logprob: -11.875123977661133
    5. '(' → logprob: -12.375123977661133
    6. '0' → logprob: -13.625123977661133
    7. '```' → logprob: -13.750123977661133
    8. '+' → logprob: -14.000123977661133
    9. 'i' → logprob: -14.125123977661133
    10. '
' → logprob: -14.250123977661133

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008640571613796055
    2. '(i' → logprob: -7.250864028930664
    3. '(' → logprob: -9.250864028930664
    4. 'i' → logprob: -10.000864028930664
    5. '0' → logprob: -12.500864028930664
    6. '+' → logprob: -13.000864028930664
    7. ' ' → logprob: -13.750864028930664
    8. '   ' → logprob: -13.750864028930664
    9. '60' → logprob: -14.375864028930664
    10. ')' → logprob: -14.625864028930664

Token 185: '))))' (ID: 57459)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4282916188240051
    2. '))))' → logprob: -1.4282915592193604
    3. ')))' → logprob: -2.6782915592193604
    4. '))),' → logprob: -3.4282915592193604
    5. ')))),' → logprob: -5.6782917976379395
    6. '   ' → logprob: -6.9282917976379395
    7. ')),' → logprob: -7.0532917976379395
    8. ' ))' → logprob: -7.4282917976379395
    9. ' ' → logprob: -7.9282917976379395
    10. ')));' → logprob: -8.178291320800781

Token 186: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01693643443286419
    2. ')[' → logprob: -4.516936302185059
    3. '(' → logprob: -5.391936302185059
    4. '0' → logprob: -8.391936302185059
    5. '([' → logprob: -8.641936302185059
    6. ')' → logprob: -8.641936302185059
    7. '()[' → logprob: -8.766936302185059
    8. '(A' → logprob: -8.891936302185059
    9. 'A' → logprob: -9.266936302185059
    10. ',' → logprob: -9.266936302185059

Token 187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. '[' → logprob: -13.00001335144043
    3. ' ' → logprob: -13.31251335144043
    4. ')' → logprob: -13.50001335144043
    5. '```' → logprob: -14.12501335144043
    6. '-' → logprob: -14.31251335144043
    7. '1' → logprob: -14.56251335144043
    8. '   ' → logprob: -14.62501335144043
    9. ')[' → logprob: -14.62501335144043
    10. '
' → logprob: -14.87501335144043

Token 188: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015416761860251427
    2. '[' → logprob: -4.765416622161865
    3. '][' → logprob: -5.765416622161865
    4. ']
' → logprob: -7.515416622161865
    5. ':' → logprob: -7.640416622161865
    6. ']>' → logprob: -7.640416622161865
    7. '       ' → logprob: -7.765416622161865
    8. '0' → logprob: -8.015417098999023
    9. '   ' → logprob: -8.265417098999023
    10. '<|end|>' → logprob: -8.265417098999023

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009951756801456213
    2. ' if' → logprob: -7.37599515914917
    3. 'if' → logprob: -8.125995635986328
    4. '<|end|>' → logprob: -10.625995635986328
    5. '[' → logprob: -10.875995635986328
    6. '   ' → logprob: -12.000995635986328
    7. ',' → logprob: -12.000995635986328
    8. '        
' → logprob: -12.375995635986328
    9. '```' → logprob: -12.500995635986328
    10. ')' → logprob: -13.500995635986328

Token 190: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3070508539676666
    2. ' if' → logprob: -1.8070508241653442
    3. 'if' (adapté à ' if') → logprob: -2.307050943374634
    4. '   ' → logprob: -8.682050704956055
    5. '<|end|>' → logprob: -8.807050704956055
    6. '[' → logprob: -9.182050704956055
    7. '        
' → logprob: -9.807050704956055
    8. ' ' → logprob: -10.307050704956055
    9. ':' → logprob: -10.307050704956055
    10. ')' → logprob: -11.057050704956055

Token 191: ' len' (ID: 4631)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.9673963189125061
    2. 'len' → logprob: -1.4673962593078613
    3. ' pivot' → logprob: -1.4673962593078613
    4. ' len' → logprob: -1.8423962593078613
    5. ' not' → logprob: -8.84239673614502
    6. ' ' → logprob: -8.96739673614502
    7. '   ' → logprob: -9.84239673614502
    8. '  ' → logprob: -10.46739673614502
    9. '	len' → logprob: -10.71739673614502
    10. 'not' → logprob: -10.71739673614502

Token 192: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.1994775377388578e-05
    2. '(' → logprob: -11.875012397766113
    3. 'pivot' → logprob: -12.250012397766113
    4. 'p' → logprob: -15.625012397766113
    5. ' (' → logprob: -17.375011444091797
    6. '>' → logprob: -18.375011444091797
    7. '(
' → logprob: -18.625011444091797
    8. ' pivot' → logprob: -18.875011444091797
    9. '	p' → logprob: -19.250011444091797
    10. ')' → logprob: -20.000011444091797

Token 193: 'ivot' (ID: 19481)
  Prédit: 'ivot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivot' → logprob: -0.0036014977376908064
    2. 'pivot' → logprob: -5.628601551055908
    3. ' pivot' → logprob: -13.62860107421875
    4. '>' → logprob: -16.12860107421875
    5. 'iv' → logprob: -17.75360107421875
    6. 'ivit' → logprob: -17.87860107421875
    7. '[' → logprob: -18.00360107421875
    8. 'Pivot' → logprob: -18.37860107421875
    9. ')' → logprob: -18.75360107421875
    10. 'ivat' → logprob: -18.87860107421875

Token 194: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -4.008129963040119e-06
    2. 'flag' → logprob: -12.500003814697266
    3. ')' → logprob: -17.000003814697266
    4. 'Flag' → logprob: -17.500003814697266
    5. '_FLAG' → logprob: -18.625003814697266
    6. '_' → logprob: -18.875003814697266
    7. '>' → logprob: -19.625003814697266
    8. '```' → logprob: -20.250003814697266
    9. '_flags' → logprob: -20.625003814697266
    10. ' flag' → logprob: -20.750003814697266

Token 195: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016464581713080406
    2. ' ==' → logprob: -4.891464710235596
    3. ')==' → logprob: -5.016464710235596
    4. '==' → logprob: -6.141464710235596
    5. ' )' → logprob: -11.391464233398438
    6. '0' → logprob: -12.141464233398438
    7. ')>' → logprob: -12.391464233398438
    8. '):' → logprob: -12.516464233398438
    9. ']==' → logprob: -13.016464233398438
    10. ']' → logprob: -13.141464233398438

Token 196: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.348951131105423
    2. '==' → logprob: -1.2239511013031006
    3. '>' → logprob: -7.97395133972168
    4. ' >' → logprob: -9.72395133972168
    5. ')==' → logprob: -9.72395133972168
    6. ':' → logprob: -11.59895133972168
    7. '0' → logprob: -11.59895133972168
    8. '=' → logprob: -11.72395133972168
    9. ')' → logprob: -11.84895133972168
    10. ']==' → logprob: -12.84895133972168

Token 197: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001705771079286933
    2. ' ' → logprob: -6.376705646514893
    3. '1' → logprob: -12.62670612335205
    4. '  ' → logprob: -16.564205169677734
    5. '   ' → logprob: -16.626705169677734
    6. '```' → logprob: -17.501705169677734
    7. '    ' → logprob: -17.751705169677734
    8. '>' → logprob: -17.814205169677734
    9. '۰' → logprob: -18.189205169677734
    10. '	' → logprob: -19.189205169677734

Token 198: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026383911608718336
    2. ' ' → logprob: -8.250264167785645
    3. '1' → logprob: -13.250264167785645
    4. '   ' → logprob: -15.000264167785645
    5. '```' → logprob: -15.750264167785645
    6. '۰' → logprob: -16.625263214111328
    7. '  ' → logprob: -16.687763214111328
    8. '>' → logprob: -16.937763214111328
    9. '    ' → logprob: -17.312763214111328
    10. ')' → logprob: -17.687763214111328

Token 199: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008915078826248646
    2. ':
' → logprob: -5.008914947509766
    3. '       ' → logprob: -6.133914947509766
    4. '           ' → logprob: -11.383914947509766
    5. '   ' → logprob: -11.758914947509766
    6. ':return' → logprob: -12.508914947509766
    7. ' :' → logprob: -13.133914947509766
    8. '):' → logprob: -13.883914947509766
    9. ',' → logprob: -14.008914947509766
    10. ' or' → logprob: -14.883914947509766

Token 200: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003450388088822365
    2. ' continue' → logprob: -6.128450393676758
    3. 'continue' → logprob: -6.878450393676758
    4. '           ' → logprob: -8.503450393676758
    5. '   ' → logprob: -11.503450393676758
    6. '
' → logprob: -11.753450393676758
    7. ' continues' → logprob: -12.628450393676758
    8. '        
' → logprob: -12.878450393676758
    9. '```' → logprob: -12.878450393676758
    10. '\n' → logprob: -13.378450393676758

Token 201: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6806699633598328
    2. 'continue' → logprob: -1.1806700229644775
    3. ' continue' → logprob: -1.6806700229644775
    4. '           ' → logprob: -8.305669784545898
    5. '   ' → logprob: -9.055669784545898
    6. '	continue' → logprob: -11.055669784545898
    7. '```' → logprob: -11.555669784545898
    8. '_continue' → logprob: -12.180669784545898
    9. '               ' → logprob: -12.430669784545898
    10. '        
' → logprob: -14.930669784545898

Token 202: ' If' (ID: 1843)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.580854058265686
    2. ' continue' → logprob: -0.830854058265686
    3. '       ' → logprob: -5.5808539390563965
    4. '   ' → logprob: -6.8308539390563965
    5. '           ' → logprob: -10.205854415893555
    6. '	continue' → logprob: -11.955854415893555
    7. '_continue' → logprob: -13.205854415893555
    8. ' ' → logprob: -13.705854415893555
    9. 'continu' → logprob: -13.955854415893555
    10. 'Continue' → logprob: -13.955854415893555

Token 203: ' there' (ID: 1354)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.24418257176876068
    2. 'not' → logprob: -2.744182586669922
    3. 'continue' → logprob: -2.869182586669922
    4. ' continue' → logprob: -3.244182586669922
    5. ' True' → logprob: -3.494182586669922
    6. 'True' → logprob: -3.994182586669922
    7. 'pivot' → logprob: -6.244182586669922
    8. ' pivot' → logprob: -6.744182586669922
    9. ' no' → logprob: -6.869182586669922
    10. '   ' → logprob: -7.119182586669922

Token 204: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.08253122121095657
    2. 'is' → logprob: -2.957531213760376
    3. ' are' → logprob: -4.207531452178955
    4. ' continues' → logprob: -5.832531452178955
    5. '   ' → logprob: -5.957531452178955
    6. ' continue' → logprob: -6.332531452178955
    7. '       ' → logprob: -6.707531452178955
    8. 'continue' → logprob: -6.707531452178955
    9. 'are' → logprob: -6.957531452178955
    10. '    ' → logprob: -7.207531452178955

Token 205: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.5824989676475525
    2. '   ' → logprob: -1.9574990272521973
    3. ' not' → logprob: -2.2074990272521973
    4. 'continue' → logprob: -2.2074990272521973
    5. ' continue' → logprob: -2.9574990272521973
    6. 'not' → logprob: -4.707499027252197
    7. 'no' → logprob: -4.957499027252197
    8. ' None' → logprob: -5.457499027252197
    9. 'None' → logprob: -6.207499027252197
    10. '    ' → logprob: -6.832499027252197

Token 206: ' candidate' (ID: 17098)
  Prédit: ' pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pivot' → logprob: -0.4296827018260956
    2. 'pivot' → logprob: -1.054682731628418
    3. 'continue' → logprob: -8.429682731628418
    4. ' valid' → logprob: -8.804682731628418
    5. ' continue' → logprob: -8.929682731628418
    6. ' candidate' → logprob: -9.179682731628418
    7. ' suitable' → logprob: -9.179682731628418
    8. ' element' → logprob: -9.929682731628418
    9. 'candidate' → logprob: -10.179682731628418
    10. 'element' → logprob: -10.554682731628418

Token 207: ' for' (ID: 395)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.736760139465332
    2. ' for' → logprob: -1.236760139465332
    3. ' pivot' → logprob: -1.986760139465332
    4. 'for' → logprob: -2.736760139465332
    5. ',' → logprob: -4.361760139465332
    6. '       ' → logprob: -5.236760139465332
    7. 'continue' → logprob: -5.486760139465332
    8. '   ' → logprob: -5.861760139465332
    9. ' to' → logprob: -6.236760139465332
    10. ' continue' → logprob: -7.236760139465332

Token 208: ' pivot' (ID: 44506)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.0514659583568573
    2. ' pivot' → logprob: -3.1764659881591797
    3. ' a' → logprob: -5.55146598815918
    4. 'a' → logprob: -5.80146598815918
    5. ' the' → logprob: -7.05146598815918
    6. 'the' → logprob: -7.55146598815918
    7. 'i' → logprob: -10.30146598815918
    8. ' this' → logprob: -10.42646598815918
    9. 'p' → logprob: -11.30146598815918
    10. 'this' → logprob: -11.42646598815918

Token 209: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008141353726387024
    2. ' ,' → logprob: -5.75814151763916
    3. 'continue' → logprob: -6.13314151763916
    4. ' continue' → logprob: -6.50814151763916
    5. '       ' → logprob: -6.88314151763916
    6. '   ' → logprob: -9.38314151763916
    7. ',
' → logprob: -9.63314151763916
    8. '_continue' → logprob: -10.13314151763916
    9. ':' → logprob: -10.38314151763916
    10. '           ' → logprob: -11.13314151763916

Token 210: ' this' (ID: 495)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.5485608577728271
    2. ' this' → logprob: -0.9235608577728271
    3. 'one' → logprob: -5.173561096191406
    4. 'that' → logprob: -5.423561096191406
    5. ' that' → logprob: -5.548561096191406
    6. 'A' → logprob: -5.673561096191406
    7. 'pivot' → logprob: -6.048561096191406
    8. 'the' → logprob: -6.423561096191406
    9. ' one' → logprob: -6.548561096191406
    10. ' the' → logprob: -6.923561096191406

Token 211: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.36407727003097534
    2. ' bit' → logprob: -1.6140773296356201
    3. ' iteration' → logprob: -2.48907732963562
    4. 'iteration' → logprob: -4.239077091217041
    5. 'column' → logprob: -5.739077091217041
    6. 'i' → logprob: -6.114077091217041
    7. ' column' → logprob: -7.239077091217041
    8. 'position' → logprob: -7.739077091217041
    9. 'for' → logprob: -7.864077091217041
    10. ' i' → logprob: -8.1140775680542

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0404556542634964
    2. '       ' → logprob: -4.1654558181762695
    3. ':' → logprob: -4.9154558181762695
    4. 'continue' → logprob: -5.0404558181762695
    5. ' continue' → logprob: -5.2904558181762695
    6. ' ,' → logprob: -5.6654558181762695
    7. ':
' → logprob: -7.1654558181762695
    8. '        ' → logprob: -8.29045581817627
    9. ',
' → logprob: -8.54045581817627
    10. ' position' → logprob: -8.54045581817627

Token 213: ' skip' (ID: 16677)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.1616774946451187
    2. 'continue' → logprob: -2.036677598953247
    3. '       ' → logprob: -4.286677360534668
    4. '           ' → logprob: -5.411677360534668
    5. '	continue' → logprob: -8.161677360534668
    6. '   ' → logprob: -8.536677360534668
    7. '               ' → logprob: -9.786677360534668
    8. '_continue' → logprob: -9.786677360534668
    9. '	       ' → logprob: -13.161677360534668
    10. ' ' → logprob: -13.411677360534668

Token 214: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04972205311059952
    2. '           ' → logprob: -4.049722194671631
    3. 'continue' → logprob: -4.299722194671631
    4. '   ' → logprob: -4.424722194671631
    5. ' continue' → logprob: -5.299722194671631
    6. '               ' → logprob: -8.549721717834473
    7. '	continue' → logprob: -9.299721717834473
    8. '_continue' → logprob: -10.049721717834473
    9. ' ' → logprob: -10.299721717834473
    10. '    ' → logprob: -10.299721717834473

Token 215: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08910151571035385
    2. '           ' → logprob: -2.589101552963257
    3. ' continue' → logprob: -5.339101314544678
    4. 'continue' → logprob: -5.464101314544678
    5. '   ' → logprob: -6.964101314544678
    6. '               ' → logprob: -9.589101791381836
    7. '_continue' → logprob: -10.339101791381836
    8. '	continue' → logprob: -10.589101791381836
    9. '```' → logprob: -11.464101791381836
    10. '        
' → logprob: -12.339101791381836

Token 216: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.10818620026111603
    2. ' continue' → logprob: -2.8581862449645996
    3. '       ' → logprob: -3.1081862449645996
    4. '   ' → logprob: -7.9831862449646
    5. '           ' → logprob: -8.983185768127441
    6. '	continue' → logprob: -11.358185768127441
    7. '_continue' → logprob: -13.233185768127441
    8. '               ' → logprob: -13.483185768127441
    9. '```' → logprob: -13.608185768127441
    10. 'contin' → logprob: -14.233185768127441

Token 217: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010357866995036602
    2. '        
' → logprob: -4.885357856750488
    3. '
' → logprob: -6.885357856750488
    4. '   ' → logprob: -7.010357856750488
    5. '  
' → logprob: -8.760357856750488
    6. '```' → logprob: -9.260357856750488
    7. ',' → logprob: -9.385357856750488
    8. '    
' → logprob: -9.635357856750488
    9. '<|end|>' → logprob: -10.260357856750488
    10. ' pivot' → logprob: -10.260357856750488

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028878437355160713
    2. 'pivot' → logprob: -4.528878211975098
    3. ' pivot' → logprob: -4.528878211975098
    4. '        
' → logprob: -5.403878211975098
    5. '   ' → logprob: -7.028878211975098
    6. '
' → logprob: -8.153878211975098
    7. '  
' → logprob: -8.653878211975098
    8. ' piv' → logprob: -9.028878211975098
    9. '```' → logprob: -9.028878211975098
    10. ' for' → logprob: -9.153878211975098

Token 219: ' p' (ID: 275)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.8320117592811584
    2. ' pivot' → logprob: -1.2070116996765137
    3. '       ' → logprob: -1.3320116996765137
    4. '        
' → logprob: -8.082012176513672
    5. ' piv' → logprob: -8.082012176513672
    6. 'p' (adapté à ' p') → logprob: -8.207012176513672
    7. '   ' → logprob: -8.332012176513672
    8. 'row' → logprob: -8.582012176513672
    9. '```' → logprob: -9.082012176513672
    10. 'root' → logprob: -10.394512176513672

Token 220: ' =' (ID: 314)
  Prédit: 'ivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivot' → logprob: -0.0002072357019642368
    2. '=' → logprob: -9.12520694732666
    3. ' =' → logprob: -10.00020694732666
    4. 'iv' → logprob: -11.25020694732666
    5. '[' → logprob: -11.62520694732666
    6. 'pivot' → logprob: -12.12520694732666
    7. '   ' → logprob: -12.12520694732666
    8. 'i' → logprob: -12.50020694732666
    9. ']' → logprob: -13.25020694732666
    10. '[i' → logprob: -13.50020694732666

Token 221: ' pivot' (ID: 44506)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.38856589794158936
    2. ' pivot' → logprob: -1.1385658979415894
    3. 'p' → logprob: -6.388566017150879
    4. ' piv' → logprob: -12.513566017150879
    5. ' p' → logprob: -12.763566017150879
    6. '	p' → logprob: -13.263566017150879
    7. ' ' → logprob: -13.513566017150879
    8. '       ' → logprob: -14.263566017150879
    9. 'A' → logprob: -14.513566017150879
    10. '   ' → logprob: -14.638566017150879

Token 222: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.0010359067237004638
    2. 'flag' → logprob: -6.876035690307617
    3. '[' → logprob: -13.251035690307617
    4. 'Flag' → logprob: -14.501035690307617
    5. '0' → logprob: -14.751035690307617
    6. 'pivot' → logprob: -15.751035690307617
    7. '_FLAG' → logprob: -16.376035690307617
    8. 'p' → logprob: -17.126035690307617
    9. ' flag' → logprob: -17.126035690307617
    10. '```' → logprob: -17.626035690307617

Token 223: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004900033236481249
    2. '0' → logprob: -7.625490188598633
    3. ' ' → logprob: -14.375490188598633
    4. '[
' → logprob: -15.000490188598633
    5. '```' → logprob: -15.250490188598633
    6. ' [' → logprob: -15.375490188598633
    7. '][' → logprob: -15.750490188598633
    8. 's' → logprob: -16.000490188598633
    9. '1' → logprob: -16.500490188598633
    10. '   ' → logprob: -17.250490188598633

Token 224: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.931863051955588e-05
    2. ' ' → logprob: -9.875059127807617
    3. '[' → logprob: -12.375059127807617
    4. '   ' → logprob: -13.375059127807617
    5. '
' → logprob: -15.000059127807617
    6. ')' → logprob: -15.500059127807617
    7. ']' → logprob: -15.562559127807617
    8. '```' → logprob: -15.625059127807617
    9. ',' → logprob: -15.687559127807617
    10. '  ' → logprob: -16.062559127807617

Token 225: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04873747378587723
    2. ']
' → logprob: -3.0487375259399414
    3. ' ]' → logprob: -9.298737525939941
    4. ']

' → logprob: -11.048737525939941
    5. ']
' → logprob: -11.048737525939941
    6. ')' → logprob: -11.548737525939941
    7. '   ' → logprob: -12.298737525939941
    8. ' ]
' → logprob: -12.548737525939941
    9. ')]' → logprob: -12.673737525939941
    10. ')
' → logprob: -13.423737525939941

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7976215481758118
    2. 'pivot' → logprob: -0.7976215481758118
    3. 'A' → logprob: -2.797621488571167
    4. 'for' → logprob: -3.547621488571167
    5. ' A' → logprob: -6.172621726989746
    6. ' for' → logprob: -6.672621726989746
    7. ' pivot' → logprob: -6.797621726989746
    8. '        
' → logprob: -6.797621726989746
    9. 'if' → logprob: -7.422621726989746
    10. 'temp' → logprob: -7.547621726989746

Token 227: ' pivot' (ID: 44506)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06930819898843765
    2. 'for' → logprob: -3.444308280944824
    3. '       ' → logprob: -3.694308280944824
    4. 'if' → logprob: -5.069308280944824
    5. 'pivot' (adapté à ' pivot') → logprob: -6.069308280944824
    6. 'temp' → logprob: -7.194308280944824
    7. 'tmp' → logprob: -8.069308280944824
    8. '#' → logprob: -8.194308280944824
    9. '   ' → logprob: -9.569308280944824
    10. 'swap' → logprob: -10.194308280944824

Token 228: ' =' (ID: 314)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.31186118721961975
    2. ' =' → logprob: -1.5618611574172974
    3. '_value' → logprob: -2.936861276626587
    4. '=' → logprob: -5.561861038208008
    5. '_row' → logprob: -8.186861038208008
    6. '_element' → logprob: -8.436861038208008
    7. '_vector' → logprob: -8.936861038208008
    8. '_vec' → logprob: -9.061861038208008
    9. '_elem' → logprob: -9.311861038208008
    10. ' ^=' → logprob: -9.311861038208008

Token 229: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.4740793704986572
    2. 'A' → logprob: -0.9740793704986572
    3. '	A' → logprob: -13.599079132080078
    4. '       ' → logprob: -14.974079132080078
    5. '   ' → logprob: -15.099079132080078
    6. ' ' → logprob: -15.474079132080078
    7. 'int' → logprob: -16.849079132080078
    8. '        ' → logprob: -16.849079132080078
    9. '=A' → logprob: -17.099079132080078
    10. 'np' → logprob: -17.349079132080078

Token 230: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0001487140398239717
    2. '[' → logprob: -8.87514877319336
    3. 'p' → logprob: -12.25014877319336
    4. '[
' → logprob: -13.25014877319336
    5. ' [' → logprob: -14.37514877319336
    6. '[np' → logprob: -14.87514877319336
    7. '[[' → logprob: -15.12514877319336
    8. '```' → logprob: -15.62514877319336
    9. '[i' → logprob: -16.00014877319336
    10. '
' → logprob: -16.00014877319336

Token 231: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06229143589735031
    2. ']
' → logprob: -2.812291383743286
    3. ']

' → logprob: -8.937291145324707
    4. ']
' → logprob: -9.062291145324707
    5. ' ]' → logprob: -9.937291145324707
    6. ' ]
' → logprob: -11.437291145324707
    7. '[' → logprob: -12.187291145324707
    8. ']^' → logprob: -12.562291145324707
    9. '].' → logprob: -13.187291145324707
    10. ']

' → logprob: -13.687291145324707

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021960523445159197
    2. '   ' → logprob: -7.252195835113525
    3. '        
' → logprob: -7.377195835113525
    4. ' for' → logprob: -8.252196311950684
    5. 'for' → logprob: -8.252196311950684
    6. '
' → logprob: -8.377196311950684
    7. 'A' → logprob: -9.877196311950684
    8. '    
' → logprob: -11.377196311950684
    9. ' A' → logprob: -11.627196311950684
    10. '           ' → logprob: -11.752196311950684

Token 233: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20731134712696075
    2. '       ' → logprob: -1.8323113918304443
    3. ' for' → logprob: -4.332311153411865
    4. 'A' → logprob: -4.332311153411865
    5. '   ' → logprob: -7.832311153411865
    6. 'if' → logprob: -9.207311630249023
    7. '#' (adapté à ' #') → logprob: -9.457311630249023
    8. 'i' → logprob: -9.707311630249023
    9. '        
' → logprob: -9.707311630249023
    10. ' A' → logprob: -10.082311630249023

Token 234: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11542113125324249
    2. 'A' → logprob: -2.3654210567474365
    3. ' for' → logprob: -4.865421295166016
    4. '       ' → logprob: -5.490421295166016
    5. 'if' → logprob: -6.740421295166016
    6. 'swap' → logprob: -7.240421295166016
    7. '#' → logprob: -7.990421295166016
    8. '   ' → logprob: -8.240421295166016
    9. ' A' → logprob: -8.240421295166016
    10. 'mask' → logprob: -9.240421295166016

Token 235: ' all' (ID: 722)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.008849500678479671
    2. 'j' → logprob: -4.758849620819092
    3. ' idx' → logprob: -9.508849143981934
    4. ' k' → logprob: -9.758849143981934
    5. ' q' → logprob: -9.883849143981934
    6. ' ' → logprob: -11.383849143981934
    7. '_j' → logprob: -12.008849143981934
    8. '   ' → logprob: -12.133849143981934
    9. ' i' → logprob: -12.383849143981934
    10. 'idx' → logprob: -12.508849143981934

Token 236: ' rows' (ID: 13585)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2016286998987198
    2. ' j' → logprob: -1.7016286849975586
    3. 'q' → logprob: -9.201628684997559
    4. 'i' → logprob: -9.826628684997559
    5. ' q' → logprob: -10.826628684997559
    6. 'k' → logprob: -11.076628684997559
    7. ' i' → logprob: -11.701628684997559
    8. 'idx' → logprob: -12.201628684997559
    9. ' ' → logprob: -12.951628684997559
    10. ' idx' → logprob: -12.951628684997559

Token 237: ' with' (ID: 483)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.33206796646118164
    2. ' j' → logprob: -1.4570679664611816
    3. ' q' → logprob: -3.3320679664611816
    4. '[j' → logprob: -5.457067966461182
    5. '   ' → logprob: -6.207067966461182
    6. '       ' → logprob: -6.457067966461182
    7. '    ' → logprob: -7.207067966461182
    8. '[' → logprob: -7.457067966461182
    9. 'q' → logprob: -7.707067966461182
    10. 'j' → logprob: -7.832067966461182

Token 238: ' the' (ID: 290)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9701449871063232
    2. 'range' → logprob: -1.4701449871063232
    3. ' range' → logprob: -2.3451449871063232
    4. ' j' → logprob: -2.7201449871063232
    5. 'i' → logprob: -2.9701449871063232
    6. 'one' → logprob: -3.5951449871063232
    7. 'np' → logprob: -3.8451449871063232
    8. 'A' → logprob: -3.9701449871063232
    9. 'p' → logprob: -4.345145225524902
    10. ' ' → logprob: -4.345145225524902

Token 239: ' ith' (ID: 65087)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.3124152421951294
    2. 'pivot' → logprob: -1.5624152421951294
    3. 'one' → logprob: -1.6874152421951294
    4. 'i' → logprob: -1.6874152421951294
    5. ' one' → logprob: -2.81241512298584
    6. 'bit' → logprob: -3.81241512298584
    7. ' p' → logprob: -4.06241512298584
    8. ' (' → logprob: -4.81241512298584
    9. ' i' → logprob: -4.81241512298584
    10. '(p' → logprob: -4.93741512298584

Token 240: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.2036917805671692
    2. 'bit' → logprob: -1.7036917209625244
    3. ' set' → logprob: -7.3286919593811035
    4. ' ' → logprob: -8.453691482543945
    5. '-bit' → logprob: -8.453691482543945
    6. '_bit' → logprob: -8.453691482543945
    7. '1' → logprob: -8.703691482543945
    8. '+' → logprob: -8.953691482543945
    9. ')' → logprob: -9.078691482543945
    10. ' !=' → logprob: -9.703691482543945

Token 241: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6340144276618958
    2. ' set' → logprob: -0.7590144276618958
    3. '   ' → logprob: -7.13401460647583
    4. '_set' → logprob: -8.759014129638672
    5. '1' → logprob: -8.884014129638672
    6. ' ' → logprob: -9.009014129638672
    7. ',' → logprob: -9.634014129638672
    8. '       ' → logprob: -10.759014129638672
    9. '```' → logprob: -10.759014129638672
    10. '  ' → logprob: -11.009014129638672

Token 242: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.598490297794342
    2. ',' → logprob: -1.2234902381896973
    3. ':' → logprob: -2.7234902381896973
    4. ':
' → logprob: -2.8484902381896973
    5. '           ' → logprob: -4.223490238189697
    6. '
' → logprob: -4.848490238189697
    7. ',
' → logprob: -5.723490238189697
    8. ' and' → logprob: -6.348490238189697
    9. ' in' → logprob: -6.723490238189697
    10. '   ' → logprob: -7.098490238189697

Token 243: ' XOR' (ID: 147209)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14265809953212738
    2. 'for' → logprob: -2.517657995223999
    3. ' if' → logprob: -3.767657995223999
    4. '       ' → logprob: -4.142658233642578
    5. ' A' → logprob: -5.142658233642578
    6. 'if' → logprob: -5.392658233642578
    7. '   ' → logprob: -6.892658233642578
    8. '           ' → logprob: -7.267658233642578
    9. 'A' → logprob: -8.267658233642578
    10. ' i' → logprob: -9.517658233642578

Token 244: ' them' (ID: 1373)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -1.3392311334609985
    2. '(A' → logprob: -1.8392311334609985
    3. 'A' → logprob: -1.9642311334609985
    4. ' A' → logprob: -2.339231014251709
    5. '=A' → logprob: -2.339231014251709
    6. '       ' → logprob: -2.714231014251709
    7. '=' → logprob: -2.964231014251709
    8. ' =' → logprob: -3.339231014251709
    9. ' (' → logprob: -3.339231014251709
    10. 'with' → logprob: -3.589231014251709

Token 245: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.43207573890686035
    2. '       ' → logprob: -1.3070757389068604
    3. 'with' → logprob: -3.1820757389068604
    4. ' if' → logprob: -4.932075500488281
    5. '[' → logprob: -5.057075500488281
    6. '=' → logprob: -5.182075500488281
    7. '           ' → logprob: -5.307075500488281
    8. ',' → logprob: -5.307075500488281
    9. ' =' → logprob: -5.807075500488281
    10. '[i' → logprob: -6.932075500488281

Token 246: ' the' (ID: 290)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.34856247901916504
    2. ' pivot' → logprob: -1.223562479019165
    3. 'A' → logprob: -10.223562240600586
    4. 'np' → logprob: -10.598562240600586
    5. ' A' → logprob: -11.723562240600586
    6. ' np' → logprob: -11.848562240600586
    7. '    ' → logprob: -11.848562240600586
    8. '   ' → logprob: -11.848562240600586
    9. ' ' → logprob: -12.473562240600586
    10. '
' → logprob: -12.473562240600586

Token 247: ' pivot' (ID: 44506)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.04884146898984909
    2. ' pivot' → logprob: -3.0488414764404297
    3. 'A' → logprob: -9.92384147644043
    4. ' ' → logprob: -9.92384147644043
    5. 'p' → logprob: -10.67384147644043
    6. '   ' → logprob: -10.67384147644043
    7. ' A' → logprob: -10.92384147644043
    8. 'np' → logprob: -11.17384147644043
    9. '`' → logprob: -11.29884147644043
    10. '[p' → logprob: -11.29884147644043

Token 248: ' row' (ID: 5225)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06344491243362427
    2. '
' → logprob: -3.0634448528289795
    3. '        
' → logprob: -4.938445091247559
    4. ' for' → logprob: -5.438445091247559
    5. '\n' → logprob: -6.938445091247559
    6. '   ' → logprob: -8.063445091247559
    7. ',' → logprob: -8.063445091247559
    8. ' to' → logprob: -8.313445091247559
    9. '  
' → logprob: -8.313445091247559
    10. '    
' → logprob: -8.688445091247559

Token 249: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10647799074649811
    2. '
' → logprob: -2.356477975845337
    3. '        
' → logprob: -5.731478214263916
    4. '\n' → logprob: -6.856478214263916
    5. '  
' → logprob: -7.231478214263916
    6. ',' → logprob: -7.856478214263916
    7. ' for' → logprob: -8.856477737426758
    8. ':' → logprob: -9.106477737426758
    9. '    
' → logprob: -9.106477737426758
    10. '   ' → logprob: -9.481477737426758

Token 250: ' clear' (ID: 5364)
  Prédit: ' eliminate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' eliminate' → logprob: -0.7393051981925964
    2. ' zero' → logprob: -1.3643052577972412
    3. ' clear' → logprob: -2.739305257797241
    4. 'clear' → logprob: -2.864305257797241
    5. 'zero' → logprob: -2.864305257797241
    6. '   ' → logprob: -3.489305257797241
    7. 'el' → logprob: -3.739305257797241
    8. 'remove' → logprob: -4.864305019378662
    9. ' remove' → logprob: -4.864305019378662
    10. '       ' → logprob: -5.739305019378662

Token 251: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7840547561645508
    2. 'the' → logprob: -1.9090547561645508
    3. 'A' → logprob: -2.159054756164551
    4. '       ' → logprob: -2.534054756164551
    5. ' bit' → logprob: -3.159054756164551
    6. '   ' → logprob: -3.534054756164551
    7. ' A' → logprob: -3.534054756164551
    8. 'bit' → logprob: -3.659054756164551
    9. ' bits' → logprob: -4.409054756164551
    10. ' their' → logprob: -4.534054756164551

Token 252: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -1.4519652128219604
    2. 'i' → logprob: -1.7019652128219604
    3. 'bit' → logprob: -2.07696533203125
    4. 'pivot' → logprob: -2.20196533203125
    5. ' i' → logprob: -2.32696533203125
    6. ' ith' → logprob: -2.82696533203125
    7. 'ith' → logprob: -3.32696533203125
    8. ' ' → logprob: -3.32696533203125
    9. 'A' → logprob: -3.45196533203125
    10. ' pivot' → logprob: -3.57696533203125

Token 253: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043715134263038635
    2. '
' → logprob: -3.293715238571167
    3. '        
' → logprob: -5.543715000152588
    4. ' for' → logprob: -7.043715000152588
    5. '\n' → logprob: -8.543715476989746
    6. '  
' → logprob: -8.543715476989746
    7. '   ' → logprob: -9.543715476989746
    8. '    
' → logprob: -9.543715476989746
    9. ',' → logprob: -9.668715476989746
    10. '       
' → logprob: -10.043715476989746

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004276650492101908
    2. ' for' → logprob: -5.879276752471924
    3. '        
' → logprob: -7.629276752471924
    4. '   ' → logprob: -8.004276275634766
    5. '	' → logprob: -8.504276275634766
    6. 'for' → logprob: -9.504276275634766
    7. ',' → logprob: -9.754276275634766
    8. '
' → logprob: -10.004276275634766
    9. '           ' → logprob: -10.129276275634766
    10. '	   ' → logprob: -10.379276275634766

Token 255: ' A' (ID: 355)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2650812566280365
    2. 'for' → logprob: -1.5150812864303589
    3. '       ' → logprob: -4.390081405639648
    4. 'inds' → logprob: -8.890081405639648
    5. 'indices' → logprob: -8.890081405639648
    6. 'j' → logprob: -9.390081405639648
    7. '	for' → logprob: -9.640081405639648
    8. ' indices' → logprob: -10.015081405639648
    9. 'rows' → logprob: -10.640081405639648
    10. ' one' → logprob: -10.640081405639648

Token 256: '[' (ID: 58)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -1.2496652603149414
    2. '=' → logprob: -1.4996652603149414
    3. ' =' → logprob: -1.6246652603149414
    4. ' ^=' → logprob: -2.1246652603149414
    5. '[' → logprob: -2.7496652603149414
    6. '[np' → logprob: -3.1246652603149414
    7. '[p' → logprob: -3.3746652603149414
    8. '=A' → logprob: -4.374665260314941
    9. '[(' → logprob: -5.249665260314941
    10. '^' → logprob: -5.374665260314941

Token 257: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.5972849130630493
    2. '(one' → logprob: -0.8472849130630493
    3. ' (' → logprob: -4.72228479385376
    4. '(' → logprob: -5.47228479385376
    5. ' one' → logprob: -6.09728479385376
    6. '(A' → logprob: -6.34728479385376
    7. '(p' → logprob: -6.84728479385376
    8. '((' → logprob: -7.09728479385376
    9. ']' → logprob: -7.72228479385376
    10. '(np' → logprob: -7.84728479385376

Token 258: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.0004468772385735065
    2. '&' → logprob: -9.250447273254395
    3. '-digit' → logprob: -9.375447273254395
    4. ' &' → logprob: -9.375447273254395
    5. 'digit' → logprob: -9.750447273254395
    6. 'Digit' → logprob: -10.000447273254395
    7. '_digits' → logprob: -10.875447273254395
    8. ']' → logprob: -11.000447273254395
    9. '_flag' → logprob: -12.125447273254395
    10. ' Digit' → logprob: -12.500447273254395

Token 259: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009111315943300724
    2. ' ^' → logprob: -6.134111404418945
    3. ' ]' → logprob: -6.134111404418945
    4. '&' → logprob: -7.009111404418945
    5. '^' → logprob: -7.009111404418945
    6. ' &' → logprob: -7.009111404418945
    7. ']=' → logprob: -7.759111404418945
    8. ',' → logprob: -8.009111404418945
    9. '[p' → logprob: -8.134111404418945
    10. '[' → logprob: -8.259111404418945

Token 260: ' ^=' (ID: 79665)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.6274758577346802
    2. ' ^=' → logprob: -0.8774758577346802
    3. '=' → logprob: -3.0024757385253906
    4. ']' → logprob: -8.25247573852539
    5. ' =' → logprob: -8.62747573852539
    6. '[' → logprob: -9.87747573852539
    7. ' ' → logprob: -10.75247573852539
    8. '```' → logprob: -11.62747573852539
    9. ')' → logprob: -12.00247573852539
    10. '^^' → logprob: -12.25247573852539

Token 261: ' pivot' (ID: 44506)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -0.011050417087972164
    2. ' pivot' → logprob: -4.511050224304199
    3. 'p' → logprob: -13.1360502243042
    4. 'np' → logprob: -15.6360502243042
    5. ' ' → logprob: -16.011051177978516
    6. 'ivot' → logprob: -16.386051177978516
    7. '   ' → logprob: -16.636051177978516
    8. 'Pivot' → logprob: -16.761051177978516
    9. '	p' → logprob: -17.136051177978516
    10. '[p' → logprob: -17.136051177978516

Token 262: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 263: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1996583640575409
    2. ' A' → logprob: -2.8246583938598633
    3. '[' → logprob: -3.0746583938598633
    4. '       ' → logprob: -3.4496583938598633
    5. '[p' → logprob: -3.5746583938598633
    6. '   ' → logprob: -4.324658393859863
    7. 'p' → logprob: -7.324658393859863
    8. '[A' → logprob: -7.949658393859863
    9. ' ' → logprob: -8.324658393859863
    10. '#' (adapté à ' #') → logprob: -8.449658393859863

Token 265: ' Restore' (ID: 80037)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00014573395310435444
    2. '#' → logprob: -9.50014591217041
    3. ' A' → logprob: -9.62514591217041
    4. '   ' → logprob: -12.50014591217041
    5. '       ' → logprob: -14.00014591217041
    6. 'import' → logprob: -16.500144958496094
    7. '
' → logprob: -17.500144958496094
    8. ' ' → logprob: -17.625144958496094
    9. 'p' → logprob: -17.750144958496094
    10. '        
' → logprob: -17.875144958496094

Token 266: ' pivot' (ID: 44506)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2815034091472626
    2. ' A' → logprob: -1.406503438949585
    3. 'p' → logprob: -8.781503677368164
    4. ' p' → logprob: -9.531503677368164
    5. 'pivot' → logprob: -9.781503677368164
    6. ' ' → logprob: -10.406503677368164
    7. ' pivot' → logprob: -10.406503677368164
    8. '   ' → logprob: -12.406503677368164
    9. '0' → logprob: -14.031503677368164
    10. 'np' → logprob: -14.031503677368164

Token 267: ' row' (ID: 5225)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.14742276072502136
    2. '[p' → logprob: -2.1474227905273438
    3. ' A' → logprob: -5.022422790527344
    4. '[' → logprob: -5.397422790527344
    5. ' =' → logprob: -5.897422790527344
    6. 'p' → logprob: -6.147422790527344
    7. ' ^=' → logprob: -6.272422790527344
    8. ' p' → logprob: -7.897422790527344
    9. '<|end|>' → logprob: -8.022422790527344
    10. ' ' → logprob: -8.272422790527344

Token 268: ' since' (ID: 3630)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3285466432571411
    2. '[p' → logprob: -1.3285466432571411
    3. 'A' → logprob: -1.4535466432571411
    4. ' A' → logprob: -1.7035466432571411
    5. ' =' → logprob: -4.203546524047852
    6. '       ' → logprob: -4.328546524047852
    7. '[A' → logprob: -5.453546524047852
    8. '
' → logprob: -5.578546524047852
    9. '   ' → logprob: -6.078546524047852
    10. ' 
' → logprob: -6.078546524047852

Token 269: ' the' (ID: 290)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.001964082010090351
    2. ' A' → logprob: -6.251964092254639
    3. 'one' → logprob: -10.87696361541748
    4. '   ' → logprob: -12.12696361541748
    5. ' one' → logprob: -12.25196361541748
    6. ' ' → logprob: -13.00196361541748
    7. 'p' → logprob: -13.62696361541748
    8. 'not' → logprob: -14.25196361541748
    9. 'np' → logprob: -14.37696361541748
    10. '       ' → logprob: -15.50196361541748

Token 270: ' above' (ID: 5151)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0011161656584590673
    2. 'p' → logprob: -7.1261162757873535
    3. ' A' → logprob: -8.876115798950195
    4. '[' → logprob: -9.126115798950195
    5. ' p' → logprob: -11.126115798950195
    6. 'pivot' → logprob: -11.126115798950195
    7. '[p' → logprob: -11.376115798950195
    8. 'import' → logprob: -12.626115798950195
    9. '`' → logprob: -13.001115798950195
    10. '```' → logprob: -13.001115798950195

Token 271: ' also' (ID: 1217)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.909176766872406
    2. ' line' → logprob: -1.9091768264770508
    3. ' operation' → logprob: -1.9091768264770508
    4. 'operation' → logprob: -1.9091768264770508
    5. 'line' → logprob: -2.034176826477051
    6. 'xor' → logprob: -4.909176826477051
    7. 'row' → logprob: -5.159176826477051
    8. '[' → logprob: -5.784176826477051
    9. 'index' → logprob: -6.784176826477051
    10. 'p' → logprob: -6.909176826477051

Token 272: ' XOR' (ID: 147209)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.843633234500885
    2. 'affected' → logprob: -1.5936331748962402
    3. 'includes' → logprob: -2.3436331748962402
    4. 'cle' → logprob: -2.3436331748962402
    5. 'included' → logprob: -3.2186331748962402
    6. 'x' → logprob: -3.3436331748962402
    7. ' affected' → logprob: -3.8436331748962402
    8. 'modified' → logprob: -3.9686331748962402
    9. ' includes' → logprob: -4.71863317489624
    10. 't' → logprob: -4.71863317489624

Token 273: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.02034986950457096
    2. 'A' → logprob: -4.270349979400635
    3. 's' → logprob: -5.645349979400635
    4. '=A' → logprob: -6.520349979400635
    5. '=' → logprob: -7.270349979400635
    6. ' A' → logprob: -8.395349502563477
    7. ''ed' → logprob: -9.145349502563477
    8. 'p' → logprob: -10.020349502563477
    9. ''d' → logprob: -10.770349502563477
    10. '-ed' → logprob: -11.270349502563477

Token 274: ' it' (ID: 480)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.23905892670154572
    2. ' A' → logprob: -1.7390589714050293
    3. ' it' → logprob: -3.7390589714050293
    4. ' the' → logprob: -5.364058971405029
    5. 'pivot' → logprob: -5.864058971405029
    6. ' with' → logprob: -6.364058971405029
    7. 'it' → logprob: -6.739058971405029
    8. 'the' → logprob: -6.989058971405029
    9. 'with' → logprob: -7.489058971405029
    10. ' pivot' → logprob: -7.989058971405029

Token 275: ' to' (ID: 316)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.054912641644477844
    2. '[' → logprob: -3.429912567138672
    3. 'A' → logprob: -4.679912567138672
    4. ' A' → logprob: -5.554912567138672
    5. '[A' → logprob: -6.054912567138672
    6. ' =' → logprob: -6.429912567138672
    7. '[
' → logprob: -7.429912567138672
    8. '=' → logprob: -7.679912567138672
    9. '   ' → logprob: -7.679912567138672
    10. '[np' → logprob: -7.929912567138672

Token 276: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3249688744544983
    2. 'clear' → logprob: -2.0749688148498535
    3. 'zero' → logprob: -2.0749688148498535
    4. 'it' → logprob: -4.5749688148498535
    5. 'pivot' → logprob: -5.6999688148498535
    6. 'A' → logprob: -5.9499688148498535
    7. ' zero' → logprob: -6.0749688148498535
    8. 'set' → logprob: -6.5749688148498535
    9. ' ' → logprob: -6.6999688148498535
    10. 'self' → logprob: -6.9499688148498535

Token 277: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8930919170379639
    2. '
' → logprob: -1.1430919170379639
    3. ' A' → logprob: -1.8930919170379639
    4. 'A' → logprob: -2.643091917037964
    5. ' 
' → logprob: -4.393092155456543
    6. '  
' → logprob: -4.768092155456543
    7. '       ' → logprob: -4.893092155456543
    8. '        
' → logprob: -4.893092155456543
    9. '    
' → logprob: -5.393092155456543
    10. '[' → logprob: -5.893092155456543

Token 278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4211154282093048
    2. 'A' → logprob: -1.6711153984069824
    3. ' A' → logprob: -1.9211153984069824
    4. '   ' → logprob: -5.671115398406982
    5. '        
' → logprob: -6.171115398406982
    6. '```' → logprob: -6.546115398406982
    7. '[' → logprob: -8.17111587524414
    8. '`' → logprob: -8.17111587524414
    9. '<|end|>' → logprob: -8.29611587524414
    10. '\n' → logprob: -8.29611587524414

Token 279: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.03403222933411598
    2. ' A' → logprob: -3.4090323448181152
    3. '   ' → logprob: -7.909032344818115
    4. ' ' → logprob: -12.284031867980957
    5. '	A' → logprob: -12.659031867980957
    6. '       ' → logprob: -12.784031867980957
    7. '[' → logprob: -12.909031867980957
    8. '
' → logprob: -13.534031867980957
    9. '```' → logprob: -13.784031867980957
    10. ' 
' → logprob: -13.909031867980957

Token 280: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -3.857719275401905e-05
    2. 'p' → logprob: -10.625038146972656
    3. '[' → logprob: -11.250038146972656
    4. '[np' → logprob: -14.750038146972656
    5. '[[' → logprob: -15.000038146972656
    6. ' [' → logprob: -16.000038146972656
    7. ' =' → logprob: -16.125038146972656
    8. '[
' → logprob: -16.375038146972656
    9. '```' → logprob: -17.000038146972656
    10. '	p' → logprob: -17.250038146972656

Token 281: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001025895617203787
    2. ']=' → logprob: -9.375102996826172
    3. ' ]' → logprob: -11.000102996826172
    4. '])' → logprob: -15.250102996826172
    5. ']+=' → logprob: -15.750102996826172
    6. ')' → logprob: -16.000102996826172
    7. ']
' → logprob: -16.625102996826172
    8. ':]' → logprob: -16.875102996826172
    9. '[' → logprob: -17.000102996826172
    10. 'p' → logprob: -17.125102996826172

Token 282: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009414627216756344
    2. '^' → logprob: -5.2594146728515625
    3. ' ^=' → logprob: -5.5094146728515625
    4. ' =' → logprob: -9.259414672851562
    5. '.=' → logprob: -11.759414672851562
    6. '+=' → logprob: -12.509414672851562
    7. '*=' → logprob: -13.009414672851562
    8. ')' → logprob: -13.134414672851562
    9. '_=' → logprob: -13.134414672851562
    10. ')=' → logprob: -13.509414672851562

Token 283: ' pivot' (ID: 44506)
  Prédit: 'pivot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pivot' → logprob: -9.615255839889869e-05
    2. ' pivot' → logprob: -9.250096321105957
    3. 'p' → logprob: -19.12509536743164
    4. 'ivot' → logprob: -21.12509536743164
    5. 'Pivot' → logprob: -21.50009536743164
    6. 'pin' → logprob: -22.00009536743164
    7. 'pit' → logprob: -22.12509536743164
    8. 'pitch' → logprob: -22.25009536743164
    9. '   ' → logprob: -22.50009536743164
    10. '1' → logprob: -22.75009536743164

Token 284: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10507826507091522
    2. 'return' → logprob: -2.3550782203674316
    3. '       ' → logprob: -6.230078220367432
    4. ' return' → logprob: -6.980078220367432
    5. '<|end|>' → logprob: -7.230078220367432
    6. '    
' → logprob: -7.480078220367432
    7. '
' → logprob: -8.48007869720459
    8. '        
' → logprob: -9.35507869720459
    9. '```' → logprob: -9.35507869720459
    10. 'continue' → logprob: -10.10507869720459

Token 286: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04870375618338585
    2. 'return' (adapté à ' return') → logprob: -3.048703670501709
    3. ' return' → logprob: -10.173704147338867
    4. '    
' → logprob: -10.548704147338867
    5. '
' → logprob: -10.673704147338867
    6. '```' → logprob: -10.798704147338867
    7. 'A' → logprob: -13.298704147338867
    8. '       ' → logprob: -13.923704147338867
    9. '	return' → logprob: -14.173704147338867
    10. '[
' → logprob: -14.173704147338867

Token 287: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04964219406247139
    2. ' A' → logprob: -3.0496420860290527
    3. 'np' → logprob: -6.924642086029053
    4. ' np' → logprob: -9.674642562866211
    5. ' ' → logprob: -12.799642562866211
    6. '	A' → logprob: -12.924642562866211
    7. '   ' → logprob: -14.362142562866211
    8. '(A' → logprob: -14.549642562866211
    9. '_A' → logprob: -15.299642562866211
    10. '```' → logprob: -15.737142562866211

Token 288: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 289: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 290: ' calculate' (ID: 17950)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.226112961769104
    2. ' gaussian' → logprob: -2.1011128425598145
    3. ' basis' → logprob: -2.3511128425598145
    4. ' xor' → logprob: -2.4761128425598145
    5. ' add' → logprob: -2.8511128425598145
    6. ' linear' → logprob: -2.8511128425598145
    7. ' subset' → logprob: -3.8511128425598145
    8. ' solve' → logprob: -3.9761128425598145
    9. ' insert' → logprob: -3.9761128425598145
    10. ' get' → logprob: -4.1011128425598145

Token 291: '_max' (ID: 13731)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.10613080859184265
    2. '_basis' → logprob: -2.606130838394165
    3. '_rank' → logprob: -4.731130599975586
    4. '_' → logprob: -4.981130599975586
    5. '_max' → logprob: -5.856130599975586
    6. '_linear' → logprob: -6.106130599975586
    7. '_min' → logprob: -7.481130599975586
    8. '_hash' → logprob: -7.481130599975586
    9. '_union' → logprob: -7.606130599975586
    10. '_l' → logprob: -8.106130599975586

Token 292: 'imum' (ID: 4556)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0652494952082634
    2. '_subset' → logprob: -2.940249443054199
    3. '_basis' → logprob: -4.815249443054199
    4. 'xor' → logprob: -7.815249443054199
    5. '_' → logprob: -7.940249443054199
    6. '_sub' → logprob: -8.0652494430542
    7. 'subset' → logprob: -8.3152494430542
    8. 'imum' → logprob: -8.6902494430542
    9. '_weight' → logprob: -8.9402494430542
    10. '_linear' → logprob: -9.4402494430542

Token 293: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.05504047870635986
    2. '_subset' → logprob: -3.0550403594970703
    3. '_basis' → logprob: -5.43004035949707
    4. 'xor' → logprob: -6.68004035949707
    5. 'subset' → logprob: -8.30504035949707
    6. '_' → logprob: -8.80504035949707
    7. '_sub' → logprob: -9.55504035949707
    8. '_ind' → logprob: -10.18004035949707
    9. ' subset' → logprob: -10.30504035949707
    10. 'basis' → logprob: -10.55504035949707

Token 294: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.00028183520771563053
    2. 'OR' → logprob: -9.250282287597656
    3. '_or' → logprob: -9.375282287597656
    4. 'ors' → logprob: -10.000282287597656
    5. ' or' → logprob: -11.000282287597656
    6. '(or' → logprob: -11.125282287597656
    7. 'o' → logprob: -12.250282287597656
    8. 'xor' → logprob: -12.375282287597656
    9. '```' → logprob: -13.375282287597656
    10. '_' → logprob: -14.000282287597656

Token 295: '_sum' (ID: 29859)
  Prédit: '(nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.9653236865997314
    2. '(arr' → logprob: -1.0903236865997314
    3. '(numbers' → logprob: -2.7153236865997314
    4. '(A' → logprob: -2.7153236865997314
    5. '(array' → logprob: -2.9653236865997314
    6. '(a' → logprob: -3.3403236865997314
    7. '(' → logprob: -3.8403236865997314
    8. '(lst' → logprob: -4.715323448181152
    9. '(elements' → logprob: -5.090323448181152
    10. '(values' → logprob: -5.340323448181152

Token 296: '(A' (ID: 10706)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.6647792458534241
    2. '(A' → logprob: -1.2897791862487793
    3. '(' → logprob: -2.5397791862487793
    4. '(array' → logprob: -2.7897791862487793
    5. '(nums' → logprob: -3.2897791862487793
    6. '(numbers' → logprob: -4.789779186248779
    7. '(a' → logprob: -5.039779186248779
    8. '(lst' → logprob: -5.039779186248779
    9. '(elements' → logprob: -5.664779186248779
    10. '(values' → logprob: -6.289779186248779

Token 297: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23957137763500214
    2. ':' → logprob: -1.6145713329315186
    3. ',' → logprob: -4.864571571350098
    4. '):
' → logprob: -5.239571571350098
    5. ')' → logprob: -7.739571571350098
    6. ' ):' → logprob: -8.114571571350098
    7. '   ' → logprob: -9.614571571350098
    8. '[]):' → logprob: -10.114571571350098
    9. '):
' → logprob: -10.239571571350098
    10. '(' → logprob: -10.364571571350098

Token 298: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.01821456104516983
    2. ' np' → logprob: -4.018214702606201
    3. '[np' → logprob: -9.768214225769043
    4. ')' → logprob: -13.393214225769043
    5. '(np' → logprob: -13.393214225769043
    6. 'A' → logprob: -13.893214225769043
    7. 'int' → logprob: -14.018214225769043
    8. '   ' → logprob: -14.143214225769043
    9. 'numpy' → logprob: -15.018214225769043
    10. 'List' → logprob: -15.018214225769043

Token 299: '.ndarray' (ID: 78346)
  Prédit: '.ndarray'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ndarray' → logprob: -3.047134305234067e-05
    2. '.array' → logprob: -11.250030517578125
    3. 'array' → logprob: -11.750030517578125
    4. ' ndarray' → logprob: -12.625030517578125
    5. '.asarray' → logprob: -13.375030517578125
    6. '[np' → logprob: -14.250030517578125
    7. '.' → logprob: -14.500030517578125
    8. 'np' → logprob: -14.625030517578125
    9. '.npy' → logprob: -14.625030517578125
    10. '=np' → logprob: -14.875030517578125

Token 300: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00286039337515831
    2. '):' → logprob: -5.8778605461120605
    3. '   ' → logprob: -10.752860069274902
    4. '):
' → logprob: -11.127860069274902
    5. ',' → logprob: -11.502860069274902
    6. ':' → logprob: -12.252860069274902
    7. ' )' → logprob: -12.752860069274902
    8. ')->' → logprob: -14.002860069274902
    9. '):

' → logprob: -15.627860069274902
    10. '):
' → logprob: -15.877860069274902

Token 301: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03812800720334053
    2. '(A' → logprob: -4.163127899169922
    3. ':
' → logprob: -4.788127899169922
    4. '   ' → logprob: -5.538127899169922
    5. '[' → logprob: -5.788127899169922
    6. '(' → logprob: -6.038127899169922
    7. '):' → logprob: -6.913127899169922
    8. '):
' → logprob: -7.038127899169922
    9. '->' → logprob: -8.038127899169922
    10. ',' → logprob: -8.538127899169922

Token 302: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5837755799293518
    2. 'np' → logprob: -1.333775520324707
    3. ' np' → logprob: -2.208775520324707
    4. ' int' → logprob: -3.208775520324707
    5. 'A' → logprob: -3.958775520324707
    6. ' A' → logprob: -5.333775520324707
    7. '(np' → logprob: -6.333775520324707
    8. '(int' → logprob: -6.833775520324707
    9. '(A' → logprob: -7.583775520324707
    10. '   ' → logprob: -8.083775520324707

Token 303: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06809006631374359
    2. '   ' → logprob: -3.4430899620056152
    3. ':
' → logprob: -4.443089962005615
    4. '[' → logprob: -5.193089962005615
    5. '<|end|>' → logprob: -5.193089962005615
    6. '():' → logprob: -5.568089962005615
    7. '(' → logprob: -5.818089962005615
    8. '(A' → logprob: -7.193089962005615
    9. '[
' → logprob: -7.568089962005615
    10. '():
' → logprob: -7.693089962005615

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00024846551241353154
    2. 'max' → logprob: -8.500248908996582
    3. '    ' → logprob: -11.250248908996582
    4. ' max' → logprob: -11.375248908996582
    5. '    
' → logprob: -11.750248908996582
    6. '```' → logprob: -12.875248908996582
    7. 'x' → logprob: -13.250248908996582
    8. '       ' → logprob: -13.625248908996582
    9. 'current' → logprob: -14.125248908996582
    10. 'result' → logprob: -14.125248908996582

Token 305: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023635171819478273
    2. 'max' → logprob: -6.752363681793213
    3. 'basis' → logprob: -8.252363204956055
    4. 'n' → logprob: -8.752363204956055
    5. ' max' → logprob: -9.002363204956055
    6. ' basis' → logprob: -9.002363204956055
    7. 'x' → logprob: -9.377363204956055
    8. 'A' → logprob: -9.627363204956055
    9. 'result' → logprob: -9.752363204956055
    10. 'res' → logprob: -9.877363204956055

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015121236210688949
    2. '    ' → logprob: -7.376512050628662
    3. ' max' → logprob: -7.376512050628662
    4. 'max' → logprob: -9.25151252746582
    5. ' n' → logprob: -9.62651252746582
    6. 'n' → logprob: -10.00151252746582
    7. ' current' → logprob: -11.87651252746582
    8. '#' → logprob: -12.00151252746582
    9. ' length' → logprob: -12.75151252746582
    10. '
' → logprob: -12.75151252746582

Token 307: ' Calculates' (ID: 143745)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009130682796239853
    2. '#' → logprob: -6.009130477905273
    3. ' #' → logprob: -6.634130477905273
    4. ' basis' → logprob: -6.884130477905273
    5. 'def' → logprob: -7.009130477905273
    6. ' def' → logprob: -7.634130477905273
    7. '
' → logprob: -7.634130477905273
    8. ' """
' → logprob: -7.884130477905273
    9. 'basis' → logprob: -7.884130477905273
    10. ' max' → logprob: -8.009130477905273

Token 308: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47373294830322266
    2. ' np' → logprob: -2.2237329483032227
    3. ' max' → logprob: -2.2237329483032227
    4. 'max' → logprob: -2.9737329483032227
    5. ' maximum' → logprob: -3.2237329483032227
    6. ' the' → logprob: -3.8487329483032227
    7. 'np' → logprob: -4.223732948303223
    8. ' maximal' → logprob: -4.223732948303223
    9. '    ' → logprob: -4.473732948303223
    10. 'the' → logprob: -6.348732948303223

Token 309: ' maximum' (ID: 10562)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.5701448917388916
    2. ' maximum' → logprob: -1.0701448917388916
    3. 'max' → logprob: -2.4451448917388916
    4. ' max' → logprob: -5.5701446533203125
    5. ' maximal' → logprob: -7.0701446533203125
    6. ' basis' → logprob: -9.570144653320312
    7. '   ' → logprob: -9.695144653320312
    8. 'basis' → logprob: -10.695144653320312
    9. '
' → logprob: -11.445144653320312
    10. 'def' → logprob: -11.570144653320312

Token 310: ' XOR' (ID: 147209)
  Prédit: ' xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xor' → logprob: -0.14885231852531433
    2. 'xor' → logprob: -2.7738523483276367
    3. ' possible' → logprob: -3.2738523483276367
    4. '_x' → logprob: -3.7738523483276367
    5. ' XOR' → logprob: -4.398852348327637
    6. 'possible' → logprob: -6.898852348327637
    7. '_possible' → logprob: -7.148852348327637
    8. ' achievable' → logprob: -8.273852348327637
    9. ' subset' → logprob: -8.523852348327637
    10. '_' → logprob: -9.023852348327637

Token 311: ' sum' (ID: 4215)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7291293740272522
    2. '_sum' → logprob: -1.1041293144226074
    3. ' sum' → logprob: -2.2291293144226074
    4. ' ' → logprob: -3.3541293144226074
    5. ' _' → logprob: -3.7291293144226074
    6. ' value' → logprob: -5.229129314422607
    7. '_possible' → logprob: -5.729129314422607
    8. '   ' → logprob: -5.729129314422607
    9. ' of' → logprob: -6.479129314422607
    10. '_value' → logprob: -6.729129314422607

Token 312: ' achievable' (ID: 118877)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -1.1629797220230103
    2. ' that' → logprob: -1.6629797220230103
    3. '_possible' → logprob: -1.6629797220230103
    4. '   ' → logprob: -1.9129797220230103
    5. ' of' → logprob: -2.9129796028137207
    6. ' achievable' → logprob: -3.2879796028137207
    7. 'possible' → logprob: -4.037979602813721
    8. '<|end|>' → logprob: -4.537979602813721
    9. '_' → logprob: -4.662979602813721
    10. '(' → logprob: -4.662979602813721

Token 313: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4144510328769684
    2. ' by' → logprob: -2.4144511222839355
    3. '(' → logprob: -2.9144511222839355
    4. '(A' → logprob: -2.9144511222839355
    5. 'from' → logprob: -3.4144511222839355
    6. ' of' → logprob: -3.9144511222839355
    7. ' from' → logprob: -4.0394511222839355
    8. ' with' → logprob: -4.1644511222839355
    9. '_possible' → logprob: -4.6644511222839355
    10. ' (' → logprob: -4.9144511222839355

Token 314: ' selecting' (ID: 31615)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.9672121405601501
    2. ' combining' → logprob: -1.342212200164795
    3. ' any' → logprob: -2.467212200164795
    4. 'xor' → logprob: -2.717212200164795
    5. 'any' → logprob: -2.842212200164795
    6. ' selecting' → logprob: -3.092212200164795
    7. ' choosing' → logprob: -3.592212200164795
    8. 'A' → logprob: -4.592212200164795
    9. ' XOR' → logprob: -4.592212200164795
    10. 'x' → logprob: -4.967212200164795

Token 315: ' a' (ID: 261)
  Prédit: ' subsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -0.6614996194839478
    2. ' any' → logprob: -1.2864996194839478
    3. ' a' → logprob: -2.286499500274658
    4. 'any' → logprob: -2.661499500274658
    5. 'a' → logprob: -4.286499500274658
    6. ' some' → logprob: -5.036499500274658
    7. 'A' → logprob: -5.661499500274658
    8. 'some' → logprob: -5.786499500274658
    9. ' elements' → logprob: -6.286499500274658
    10. '   ' → logprob: -6.286499500274658

Token 316: ' subset' (ID: 58845)
  Prédit: ' subset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subset' → logprob: -0.1027851477265358
    2. 'subset' → logprob: -2.352785110473633
    3. 'sub' → logprob: -6.102785110473633
    4. ' subsets' → logprob: -9.102785110473633
    5. ' subse' → logprob: -9.727785110473633
    6. 'non' → logprob: -10.102785110473633
    7. ' sub' → logprob: -10.352785110473633
    8. '_subset' → logprob: -10.352785110473633
    9. ' combination' → logprob: -10.977785110473633
    10. ' non' → logprob: -11.102785110473633

Token 317: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.06522615253925323
    2. '   ' → logprob: -3.1902260780334473
    3. ' from' → logprob: -4.940226078033447
    4. 'of' → logprob: -5.440226078033447
    5. ')' → logprob: -5.815226078033447
    6. 'from' → logprob: -5.815226078033447
    7. '(A' → logprob: -6.440226078033447
    8. '(' → logprob: -6.940226078033447
    9. '_' → logprob: -7.690226078033447
    10. '<|end|>' → logprob: -8.190226554870605

Token 318: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.2104463577270508
    2. 'A' → logprob: -1.4604463577270508
    3. ' elements' → logprob: -1.4604463577270508
    4. ' A' → logprob: -1.5854463577270508
    5. 'the' → logprob: -3.710446357727051
    6. 'elements' → logprob: -4.960446357727051
    7. ' vectors' → logprob: -8.08544635772705
    8. ' array' → logprob: -8.08544635772705
    9. ' values' → logprob: -9.21044635772705
    10. '```' → logprob: -9.21044635772705

Token 319: ' input' (ID: 3422)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.39836350083351135
    2. 'array' → logprob: -2.2733635902404785
    3. ' elements' → logprob: -2.3983635902404785
    4. 'input' → logprob: -2.5233635902404785
    5. ' array' → logprob: -3.7733635902404785
    6. 'A' → logprob: -3.8983635902404785
    7. ' input' → logprob: -4.8983635902404785
    8. ' given' → logprob: -7.0233635902404785
    9. 'arr' → logprob: -7.2733635902404785
    10. 'given' → logprob: -7.2733635902404785

Token 320: ' array' (ID: 2644)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8597646951675415
    2. ' A' → logprob: -1.2347646951675415
    3. ' elements' → logprob: -1.9847646951675415
    4. '_elements' → logprob: -3.359764575958252
    5. '_' → logprob: -3.484764575958252
    6. ' array' → logprob: -3.484764575958252
    7. '   ' → logprob: -4.359764575958252
    8. '[' → logprob: -4.484764575958252
    9. ')' → logprob: -4.734764575958252
    10. ' _' → logprob: -4.984764575958252

Token 321: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8021925091743469
    2. '   ' → logprob: -1.3021924495697021
    3. ' that' → logprob: -2.427192449569702
    4. ')' → logprob: -3.677192449569702
    5. ' from' → logprob: -3.802192449569702
    6. ' and' → logprob: -3.802192449569702
    7. '(A' → logprob: -4.177192687988281
    8. ' (' → logprob: -4.427192687988281
    9. 'A' → logprob: -4.427192687988281
    10. ' of' → logprob: -4.552192687988281

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10079972445964813
    2. ')' → logprob: -3.850799798965454
    3. ' and' → logprob: -4.225799560546875
    4. 'A' → logprob: -4.475799560546875
    5. ' completing' → logprob: -4.975799560546875
    6. ' A' → logprob: -5.100799560546875
    7. '    ' → logprob: -5.100799560546875
    8. ' using' → logprob: -5.475799560546875
    9. '<|end|>' → logprob: -5.975799560546875
    10. ' given' → logprob: -6.225799560546875

Token 323: ' using' (ID: 2360)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05764761194586754
    2. '    ' → logprob: -4.682647705078125
    3. ' given' → logprob: -4.682647705078125
    4. ' completing' → logprob: -4.807647705078125
    5. 'A' → logprob: -4.932647705078125
    6. ' A' → logprob: -5.807647705078125
    7. ' and' → logprob: -6.182647705078125
    8. ' using' → logprob: -6.432647705078125
    9. 'def' → logprob: -6.432647705078125
    10. ' def' → logprob: -6.682647705078125

Token 324: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.829055905342102
    2. ' gaussian' → logprob: -1.079055905342102
    3. 'the' → logprob: -1.579055905342102
    4. 'ga' → logprob: -4.7040557861328125
    5. ' Gaussian' → logprob: -6.0790557861328125
    6. '   ' → logprob: -6.0790557861328125
    7. 'A' → logprob: -7.4540557861328125
    8. 'Gaussian' → logprob: -7.5790557861328125
    9. ' numpy' → logprob: -7.8915557861328125
    10. ' basis' → logprob: -8.016555786132812

Token 325: ' XOR' (ID: 147209)
  Prédit: 'ga'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ga' → logprob: -0.7997445464134216
    2. 'basis' → logprob: -0.7997445464134216
    3. ' basis' → logprob: -3.0497446060180664
    4. ' gaussian' → logprob: -3.0497446060180664
    5. '   ' → logprob: -6.799744606018066
    6. 're' → logprob: -6.924744606018066
    7. 'xor' → logprob: -7.674744606018066
    8. 'x' → logprob: -7.799744606018066
    9. 'result' → logprob: -8.049744606018066
    10. ' ga' → logprob: -8.299744606018066

Token 326: ' basis' (ID: 9571)
  Prédit: ' basis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' basis' → logprob: -0.2304687350988388
    2. '_basis' → logprob: -1.98046875
    3. 'basis' → logprob: -2.98046875
    4. ' elimination' → logprob: -4.48046875
    5. '_el' → logprob: -5.98046875
    6. '-b' → logprob: -7.35546875
    7. ' bases' → logprob: -7.85546875
    8. '_ga' → logprob: -8.23046875
    9. '-el' → logprob: -8.60546875
    10. 'el' → logprob: -8.73046875

Token 327: ' reduction' (ID: 21441)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049385011196136475
    2. ' of' → logprob: -4.174385070800781
    3. '.' → logprob: -4.424385070800781
    4. '_' → logprob: -6.049385070800781
    5. ' elements' → logprob: -6.299385070800781
    6. ' to' → logprob: -6.424385070800781
    7. ' generated' → logprob: -6.424385070800781
    8. ' vectors' → logprob: -6.424385070800781
    9. ' basis' → logprob: -6.674385070800781
    10. ' provided' → logprob: -6.924385070800781

Token 328: ' algorithm' (ID: 22184)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025848617777228355
    2. '.' → logprob: -4.775848388671875
    3. '(A' → logprob: -4.900848388671875
    4. ' of' → logprob: -5.900848388671875
    5. ':' → logprob: -6.275848388671875
    6. 'A' → logprob: -7.525848388671875
    7. ' to' → logprob: -7.650848388671875
    8. ' for' → logprob: -8.025848388671875
    9. ' (' → logprob: -8.025848388671875
    10. ',' → logprob: -8.150848388671875

Token 329: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027155933901667595
    2. ':' → logprob: -4.027155876159668
    3. '.' → logprob: -5.527155876159668
    4. ':
' → logprob: -6.902155876159668
    5. ')' → logprob: -7.027155876159668
    6. ',' → logprob: -7.152155876159668
    7. '<|end|>' → logprob: -7.652155876159668
    8. '):
' → logprob: -7.777155876159668
    9. '
' → logprob: -7.902155876159668
    10. '):' → logprob: -8.152155876159668

Token 330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041229039430618286
    2. '
' → logprob: -3.416229009628296
    3. '    
' → logprob: -5.041229248046875
    4. '```' → logprob: -7.291229248046875
    5. '<|end|>' → logprob: -8.916229248046875
    6. ')' → logprob: -9.416229248046875
    7. '  
' → logprob: -10.666229248046875
    8. ')
' → logprob: -11.041229248046875
    9. 'def' → logprob: -11.166229248046875
    10. '    ' → logprob: -11.291229248046875

Token 331: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00022082125360611826
    2. '
' → logprob: -9.000221252441406
    3. '    
' → logprob: -10.375221252441406
    4. '    ' → logprob: -10.500221252441406
    5. '```' → logprob: -11.375221252441406
    6. 'A' → logprob: -11.750221252441406
    7. 'def' → logprob: -12.500221252441406
    8. ' A' → logprob: -12.750221252441406
    9. ' code' → logprob: -13.000221252441406
    10. 'import' → logprob: -13.000221252441406

Token 332: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18497227132320404
    2. ':' → logprob: -2.5599722862243652
    3. '       ' → logprob: -2.8099722862243652
    4. '):' → logprob: -4.559972286224365
    5. '):
' → logprob: -4.684972286224365
    6. '(A' → logprob: -5.184972286224365
    7. '```' → logprob: -5.809972286224365
    8. ')' → logprob: -7.309972286224365
    9. ',' → logprob: -8.184971809387207
    10. '(' → logprob: -8.309971809387207

Token 333: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0900009274482727
    2. '       ' → logprob: -2.465000867843628
    3. 'A' → logprob: -7.840001106262207
    4. '    ' → logprob: -8.215001106262207
    5. '```' → logprob: -9.340001106262207
    6. ' A' → logprob: -9.965001106262207
    7. '        ' → logprob: -10.090001106262207
    8. ')' → logprob: -10.215001106262207
    9. ' ' → logprob: -10.340001106262207
    10. '   ' → logprob: -10.465001106262207

Token 334: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.12764059007167816
    2. ' A' → logprob: -2.12764048576355
    3. '   ' → logprob: -7.252640724182129
    4. ')' → logprob: -14.002640724182129
    5. ' ' → logprob: -14.002640724182129
    6. 'def' → logprob: -14.127640724182129
    7. '	A' → logprob: -14.877640724182129
    8. '```' → logprob: -15.252640724182129
    9. '       ' → logprob: -15.502640724182129
    10. '  ' → logprob: -15.502640724182129

Token 335: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004417893942445517
    2. ')' → logprob: -5.879417896270752
    3. ' :' → logprob: -6.879417896270752
    4. '):' → logprob: -8.254417419433594
    5. '):
' → logprob: -9.254417419433594
    6. '   ' → logprob: -9.504417419433594
    7. ' (' → logprob: -9.629417419433594
    8. '.shape' → logprob: -10.879417419433594
    9. ' =' → logprob: -11.254417419433594
    10. '[np' → logprob: -11.379417419433594

Token 336: 'np' (ID: 12766)
  Prédit: 'np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.002703350502997637
    2. ' np' → logprob: -6.0027031898498535
    3. '[np' → logprob: -8.502703666687012
    4. '(np' → logprob: -11.377703666687012
    5. ')' → logprob: -11.627703666687012
    6. 'A' → logprob: -13.502703666687012
    7. '   ' → logprob: -13.877703666687012
    8. '=np' → logprob: -14.377703666687012
    9. '_np' → logprob: -14.877703666687012
    10. 'numpy' → logprob: -15.377703666687012

Token 337: '.ndarray' (ID: 78346)
  Prédit: '.ndarray'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ndarray' → logprob: -8.537868779967539e-06
    2. '.' → logprob: -12.375008583068848
    3. '.array' → logprob: -14.000008583068848
    4. '.nd' → logprob: -14.250008583068848
    5. '.numpy' → logprob: -14.250008583068848
    6. '.npy' → logprob: -14.875008583068848
    7. ' ndarray' → logprob: -14.875008583068848
    8. 'nd' → logprob: -15.250008583068848
    9. '.asarray' → logprob: -15.625008583068848
    10. '.shape' → logprob: -15.875008583068848

Token 338: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00278490805067122
    2. '):' → logprob: -6.002784729003906
    3. '):
' → logprob: -8.502784729003906
    4. '   ' → logprob: -9.877784729003906
    5. ':' → logprob: -10.252784729003906
    6. ',' → logprob: -12.252784729003906
    7. ' )' → logprob: -12.502784729003906
    8. '[' → logprob: -13.502784729003906
    9. '):
' → logprob: -13.627784729003906
    10. '`)' → logprob: -13.627784729003906

Token 339: ' Input' (ID: 10090)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.3891719877719879
    2. 'np' → logprob: -1.1391719579696655
    3. 'A' → logprob: -7.139172077178955
    4. '[np' → logprob: -7.139172077178955
    5. '   ' → logprob: -8.014171600341797
    6. ' numpy' → logprob: -9.389171600341797
    7. '(np' → logprob: -9.639171600341797
    8. ' ndarray' → logprob: -9.889171600341797
    9. ' A' → logprob: -10.264171600341797
    10. 'import' → logprob: -10.264171600341797

Token 340: ' numpy' (ID: 19529)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1747000366449356
    2. ':' → logprob: -2.2997000217437744
    3. ' array' → logprob: -2.9247000217437744
    4. '[np' → logprob: -6.1747002601623535
    5. '.ndarray' → logprob: -6.5497002601623535
    6. '   ' → logprob: -7.0497002601623535
    7. '):' → logprob: -7.4247002601623535
    8. '):
' → logprob: -8.299699783325195
    9. ' ndarray' → logprob: -8.424699783325195
    10. 'array' → logprob: -8.549699783325195

Token 341: ' array' (ID: 2644)
  Prédit: ' array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.0739159807562828
    2. '.ndarray' → logprob: -2.698915958404541
    3. 'array' → logprob: -5.698915958404541
    4. '_array' → logprob: -8.0739164352417
    5. '[array' → logprob: -9.3239164352417
    6. ')' → logprob: -9.6989164352417
    7. '.array' → logprob: -9.8239164352417
    8. '   ' → logprob: -10.1989164352417
    9. '[' → logprob: -10.4489164352417
    10. ' ndarray' → logprob: -11.4489164352417

Token 342: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20488713681697845
    2. '   ' → logprob: -2.5798871517181396
    3. '):' → logprob: -3.3298871517181396
    4. ':' → logprob: -3.4548871517181396
    5. '[' → logprob: -3.9548871517181396
    6. ' of' → logprob: -4.5798869132995605
    7. '):
' → logprob: -4.8298869132995605
    8. '[np' → logprob: -6.8298869132995605
    9. '[int' → logprob: -7.2048869132995605
    10. '<|end|>' → logprob: -7.3298869132995605

Token 343: ' integers' (ID: 54912)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -1.0979938507080078
    2. ' integers' → logprob: -1.0979938507080078
    3. 'int' → logprob: -1.2229938507080078
    4. 'ints' → logprob: -3.347993850708008
    5. ' int' → logprob: -6.222993850708008
    6. 'np' → logprob: -7.597993850708008
    7. 'dtype' → logprob: -7.847993850708008
    8. 'A' → logprob: -8.472993850708008
    9. ' np' → logprob: -9.097993850708008
    10. ' ints' → logprob: -9.597993850708008

Token 344: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001602579141035676
    2. '):
' → logprob: -6.876602649688721
    3. '   ' → logprob: -7.751602649688721
    4. '):' → logprob: -9.001602172851562
    5. ' )' → logprob: -11.626602172851562
    6. '
' → logprob: -13.126602172851562
    7. ')->' → logprob: -13.876602172851562
    8. ')
' → logprob: -14.001602172851562
    9. '):
' → logprob: -14.251602172851562
    10. '):

' → logprob: -14.376602172851562

Token 345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01221999991685152
    2. ')' → logprob: -5.0122199058532715
    3. '```' → logprob: -5.2622199058532715
    4. '
' → logprob: -8.76222038269043
    5. '"""' → logprob: -10.01222038269043
    6. '``' → logprob: -10.63722038269043
    7. '):
' → logprob: -10.63722038269043
    8. '"""
' → logprob: -11.26222038269043
    9. '    
' → logprob: -11.51222038269043
    10. ')
' → logprob: -11.76222038269043

Token 346: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02496499754488468
    2. 'Returns' (adapté à ' Returns') → logprob: -3.7749650478363037
    3. '
' → logprob: -7.899964809417725
    4. ')' → logprob: -7.899964809417725
    5. '```' → logprob: -8.024965286254883
    6. 'returns' → logprob: -8.149965286254883
    7. '"""
' → logprob: -8.274965286254883
    8. '"""' → logprob: -10.024965286254883
    9. ' Returns' → logprob: -11.024965286254883
    10. 'def' → logprob: -11.399965286254883

Token 347: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08267467468976974
    2. '   ' → logprob: -2.582674741744995
    3. ':
' → logprob: -6.207674503326416
    4. '):' → logprob: -7.082674503326416
    5. '):
' → logprob: -7.582674503326416
    6. ')' → logprob: -8.457674980163574
    7. '=' → logprob: -9.707674980163574
    8. ',' → logprob: -9.957674980163574
    9. ' :' → logprob: -10.582674980163574
    10. '<|end|>' → logprob: -11.207674980163574

Token 348: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019460011390037835
    2. '    ' → logprob: -9.375194549560547
    3. '       ' → logprob: -10.000194549560547
    4. ')' → logprob: -10.375194549560547
    5. '```' → logprob: -10.500194549560547
    6. '    
' → logprob: -13.000194549560547
    7. '   ' → logprob: -13.875194549560547
    8. '     ' → logprob: -14.875194549560547
    9. '   ' → logprob: -15.000194549560547
    10. '  ' → logprob: -15.125194549560547

Token 349: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.04866071790456772
    2. ' int' → logprob: -3.0486607551574707
    3. '   ' → logprob: -9.673660278320312
    4. 'np' → logprob: -11.923660278320312
    5. ' np' → logprob: -13.548660278320312
    6. '[int' → logprob: -13.923660278320312
    7. '```' → logprob: -14.548660278320312
    8. '
' → logprob: -14.798660278320312
    9. ':int' → logprob: -15.423660278320312
    10. '	int' → logprob: -16.298660278320312

Token 350: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0030118150170892477
    2. ':
' → logprob: -5.878011703491211
    3. '   ' → logprob: -8.628011703491211
    4. '=' → logprob: -11.878011703491211
    5. '```' → logprob: -12.128011703491211
    6. ':return' → logprob: -12.253011703491211
    7. ' =' → logprob: -13.003011703491211
    8. '):' → logprob: -13.503011703491211
    9. ' :' → logprob: -13.753011703491211
    10. '<|end|>' → logprob: -13.878011703491211

Token 351: ' The' (ID: 623)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.6865363121032715
    2. ' max' → logprob: -1.9365363121032715
    3. '0' → logprob: -2.5615363121032715
    4. 'max' → logprob: -2.5615363121032715
    5. '   ' → logprob: -2.6865363121032715
    6. ' maximum' → logprob: -3.0615363121032715
    7. 'result' → logprob: -3.1865363121032715
    8. ' ' → logprob: -3.8115363121032715
    9. ' res' → logprob: -4.5615363121032715
    10. 'maximum' → logprob: -6.0615363121032715

Token 352: ' maximal' (ID: 65414)
  Prédit: ' maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.9981374144554138
    2. 'max' → logprob: -1.6231374740600586
    3. ' result' → logprob: -1.7481374740600586
    4. 'maximum' → logprob: -1.8731374740600586
    5. ' max' → logprob: -2.6231374740600586
    6. 'result' → logprob: -3.7481374740600586
    7. '0' → logprob: -5.248137474060059
    8. ' maximal' → logprob: -6.248137474060059
    9. ' current' → logprob: -6.498137474060059
    10. 'current' → logprob: -8.123137474060059

Token 353: ' achievable' (ID: 118877)
  Prédit: ' xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xor' → logprob: -0.8970022797584534
    2. ' possible' → logprob: -1.2720022201538086
    3. ' XOR' → logprob: -1.6470022201538086
    4. 'xor' → logprob: -2.3970022201538086
    5. ' value' → logprob: -4.772002220153809
    6. 'possible' → logprob: -4.897002220153809
    7. 'X' → logprob: -5.147002220153809
    8. ' achievable' → logprob: -6.272002220153809
    9. '^' → logprob: -6.397002220153809
    10. '_x' → logprob: -7.272002220153809

Token 354: ' subset' (ID: 58845)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.1419709175825119
    2. ' xor' → logprob: -2.1419708728790283
    3. '_x' → logprob: -4.391971111297607
    4. ' XOR' → logprob: -6.516971111297607
    5. 'X' → logprob: -8.01697063446045
    6. ' value' → logprob: -8.26697063446045
    7. ' result' → logprob: -8.76697063446045
    8. '^' → logprob: -9.01697063446045
    9. 'x' → logprob: -9.39197063446045
    10. 'result' → logprob: -9.89197063446045

Token 355: ' XOR' (ID: 147209)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.8174548149108887
    2. 'xor' → logprob: -0.8174548149108887
    3. ' XOR' → logprob: -2.6924548149108887
    4. ' xor' → logprob: -3.1924548149108887
    5. 'X' → logprob: -5.692454814910889
    6. '   ' → logprob: -5.942454814910889
    7. '_' → logprob: -7.192454814910889
    8. 'sum' → logprob: -7.567454814910889
    9. '_sum' → logprob: -7.942454814910889
    10. ' sum' → logprob: -8.192455291748047

Token 356: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -1.2253566980361938
    2. '   ' → logprob: -1.6003566980361938
    3. '_sum' → logprob: -2.1003565788269043
    4. ':' → logprob: -2.3503565788269043
    5. ' value' → logprob: -2.4753565788269043
    6. ')' → logprob: -2.7253565788269043
    7. 'sum' → logprob: -2.7253565788269043
    8. '.' → logprob: -3.2253565788269043
    9. '_value' → logprob: -5.350356578826904
    10. 'value' → logprob: -5.850356578826904

Token 357: ' plus' (ID: 2932)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42970117926597595
    2. ':' → logprob: -1.1797012090682983
    3. ':
' → logprob: -3.554701089859009
    4. ' =' → logprob: -5.304701328277588
    5. '=' → logprob: -5.804701328277588
    6. '):
' → logprob: -6.929701328277588
    7. '```' → logprob: -6.929701328277588
    8. ')' → logprob: -7.179701328277588
    9. '):' → logprob: -7.304701328277588
    10. '():
' → logprob: -7.304701328277588

Token 358: ' the' (ID: 290)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29002997279167175
    2. ' ' → logprob: -1.4150300025939941
    3. ' A' → logprob: -5.790030002593994
    4. ' np' → logprob: -6.540030002593994
    5. 'A' → logprob: -6.915030002593994
    6. 'np' → logprob: -6.915030002593994
    7. '0' → logprob: -7.290030002593994
    8. '   ' → logprob: -8.040029525756836
    9. ' one' → logprob: -8.665029525756836
    10. 'max' → logprob: -9.040029525756836

Token 359: ' contribution' (ID: 26735)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initial' → logprob: -1.2484413385391235
    2. ' current' → logprob: -1.6234413385391235
    3. ' maximum' → logprob: -1.7484413385391235
    4. 'maximum' → logprob: -2.873441219329834
    5. 'max' → logprob: -3.498441219329834
    6. '1' → logprob: -3.498441219329834
    7. ' value' → logprob: -3.748441219329834
    8. ' A' → logprob: -4.123441219329834
    9. 'initial' → logprob: -4.123441219329834
    10. 'current' → logprob: -4.123441219329834

Token 360: ' from' (ID: 591)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.36205431818962097
    2. '   ' → logprob: -1.3620543479919434
    3. ' from' → logprob: -3.8620543479919434
    4. 'from' → logprob: -4.112054347991943
    5. ' +' → logprob: -5.112054347991943
    6. '+' → logprob: -6.362054347991943
    7. '```' → logprob: -7.862054347991943
    8. '=' → logprob: -7.862054347991943
    9. '    ' → logprob: -8.112053871154785
    10. 'of' → logprob: -8.237053871154785

Token 361: ' odd' (ID: 14210)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.929755687713623
    2. ' A' → logprob: -1.054755687713623
    3. 'A' → logprob: -2.179755687713623
    4. ' (' → logprob: -3.179755687713623
    5. '(' → logprob: -3.804755687713623
    6. ' np' → logprob: -4.054755687713623
    7. ' all' → logprob: -4.179755687713623
    8. 'the' → logprob: -4.554755687713623
    9. ' ' → logprob: -4.929755687713623
    10. 'np' → logprob: -5.304755687713623

Token 362: ' '' (ID: 461)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elements' → logprob: -1.6435470581054688
    2. 'elements' → logprob: -1.6435470581054688
    3. 'numbers' → logprob: -1.6435470581054688
    4. ' numbers' → logprob: -2.1435470581054688
    5. 'A' → logprob: -2.5185470581054688
    6. ' parity' → logprob: -2.7685470581054688
    7. 'par' → logprob: -3.1435470581054688
    8. 'count' → logprob: -3.6435470581054688
    9. 'indices' → logprob: -4.268547058105469
    10. ' indices' → logprob: -4.768547058105469

Token 363: '1' (ID: 16)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.249224066734314
    2. ' elements' → logprob: -1.374224066734314
    3. 'elements' → logprob: -1.499224066734314
    4. ' A' → logprob: -2.7492241859436035
    5. ' numbers' → logprob: -2.8742241859436035
    6. 'numbers' → logprob: -3.2492241859436035
    7. '_elements' → logprob: -3.3742241859436035
    8. 'count' → logprob: -4.6242241859436035
    9. '_numbers' → logprob: -5.1242241859436035
    10. 'indices' → logprob: -5.4992241859436035

Token 364: ''s' (ID: 885)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.6939486861228943
    2. 's' → logprob: -1.443948745727539
    3. '_count' → logprob: -2.943948745727539
    4. '-bit' → logprob: -3.318948745727539
    5. '_counts' → logprob: -3.443948745727539
    6. ' bits' → logprob: -3.443948745727539
    7. 'bits' → logprob: -4.068948745727539
    8. '-b' → logprob: -4.068948745727539
    9. ')' → logprob: -4.318948745727539
    10. '_bit' → logprob: -4.693948745727539

Token 365: ' positions' (ID: 15897)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8006608486175537
    2. '   ' → logprob: -0.8006608486175537
    3. ':
' → logprob: -2.4256608486175537
    4. 'def' → logprob: -4.675661087036133
    5. '```' → logprob: -6.550661087036133
    6. '):
' → logprob: -6.675661087036133
    7. '
' → logprob: -7.175661087036133
    8. '    
' → logprob: -8.300661087036133
    9. '):' → logprob: -8.550661087036133
    10. '[' → logprob: -10.550661087036133

Token 366: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5344409346580505
    2. ':' → logprob: -1.5344409942626953
    3. ':
' → logprob: -2.4094409942626953
    4. 'def' → logprob: -2.7844409942626953
    5. '):
' → logprob: -3.2844409942626953
    6. '```' → logprob: -5.534440994262695
    7. '
' → logprob: -5.784440994262695
    8. '):' → logprob: -6.909440994262695
    9. ')' → logprob: -7.909440994262695
    10. '    
' → logprob: -8.159440994262695

Token 367: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013515453319996595
    2. '```' → logprob: -7.001351356506348
    3. 'def' → logprob: -8.251351356506348
    4. '
' → logprob: -8.751351356506348
    5. '    
' → logprob: -11.126351356506348
    6. '``' → logprob: -13.126351356506348
    7. 'import' → logprob: -14.251351356506348
    8. '{
' → logprob: -14.251351356506348
    9. '       ' → logprob: -14.501351356506348
    10. ':' → logprob: -14.751351356506348

Token 368: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050621695816516876
    2. '```' → logprob: -3.300621747970581
    3. '
' → logprob: -4.425621509552002
    4. '    
' → logprob: -8.05062198638916
    5. '``' → logprob: -9.80062198638916
    6. ')' → logprob: -9.92562198638916
    7. '):
' → logprob: -10.17562198638916
    8. ':' → logprob: -10.55062198638916
    9. ')
' → logprob: -11.42562198638916
    10. 'def' → logprob: -11.80062198638916

Token 369: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00048083928413689137
    2. '```' → logprob: -8.500480651855469
    3. 'max' → logprob: -9.625480651855469
    4. '    
' → logprob: -9.875480651855469
    5. 'n' → logprob: -10.500480651855469
    6. 'def' → logprob: -10.750480651855469
    7. 'odd' → logprob: -11.000480651855469
    8. 'ind' → logprob: -11.125480651855469
    9. '
' → logprob: -11.375480651855469
    10. 'result' → logprob: -11.750480651855469

Token 370: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17391443252563477
    2. 'n' → logprob: -2.5489144325256348
    3. ' n' → logprob: -3.4239144325256348
    4. 'max' → logprob: -4.173914432525635
    5. 'odd' → logprob: -4.673914432525635
    6. '#' (adapté à ' #') → logprob: -5.173914432525635
    7. 'def' → logprob: -5.798914432525635
    8. 'bits' → logprob: -5.923914432525635
    9. ' max' → logprob: -6.298914432525635
    10. 'bit' → logprob: -6.923914432525635

Token 371: ' Calculate' (ID: 38942)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -1.2417787313461304
    2. '#' → logprob: -2.11677885055542
    3. 'bit' → logprob: -2.49177885055542
    4. 'one' → logprob: -2.61677885055542
    5. 'A' → logprob: -2.74177885055542
    6. 'ones' → logprob: -2.99177885055542
    7. 'B' → logprob: -2.99177885055542
    8. 'count' → logprob: -3.11677885055542
    9. 'basis' → logprob: -3.24177885055542
    10. 'n' → logprob: -3.36677885055542

Token 372: ' overall' (ID: 10705)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.7808665633201599
    2. 'ones' → logprob: -2.2808666229248047
    3. 'one' → logprob: -2.6558666229248047
    4. 'bit' → logprob: -2.7808666229248047
    5. '   ' → logprob: -3.1558666229248047
    6. 'xor' → logprob: -3.5308666229248047
    7. 'total' → logprob: -3.6558666229248047
    8. 'count' → logprob: -3.6558666229248047
    9. 'n' → logprob: -3.6558666229248047
    10. 'cnt' → logprob: -3.9058666229248047

Token 373: ' XOR' (ID: 147209)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.23354437947273254
    2. 'ones' → logprob: -2.85854434967041
    3. 'par' → logprob: -2.98354434967041
    4. 'odd' → logprob: -3.48354434967041
    5. 'total' → logprob: -4.23354434967041
    6. 'count' → logprob: -4.85854434967041
    7. 'one' → logprob: -4.98354434967041
    8. 'bit' → logprob: -5.23354434967041
    9. ' xor' → logprob: -5.23354434967041
    10. 'cnt' → logprob: -5.60854434967041

Token 374: ' of' (ID: 328)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -1.0116873979568481
    2. '   ' → logprob: -1.3866873979568481
    3. 'total' → logprob: -1.8866873979568481
    4. 'x' → logprob: -3.1366872787475586
    5. 'result' → logprob: -3.2616872787475586
    6. 'overall' → logprob: -3.3866872787475586
    7. ' =' → logprob: -3.5116872787475586
    8. 'res' → logprob: -4.136687278747559
    9. 'ans' → logprob: -4.261687278747559
    10. 'all' → logprob: -4.886687278747559

Token 375: ' all' (ID: 722)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0009130131802521646
    2. ' A' → logprob: -7.000913143157959
    3. 'all' → logprob: -14.2509126663208
    4. '   ' → logprob: -15.3759126663208
    5. ' ' → logprob: -15.5009126663208
    6. ' all' → logprob: -16.125913619995117
    7. 'np' → logprob: -16.125913619995117
    8. '(A' → logprob: -16.500913619995117
    9. 'the' → logprob: -17.000913619995117
    10. '[' → logprob: -17.250913619995117

Token 376: ' elements' (ID: 8632)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.02764413319528103
    2. 'elements' → logprob: -3.652644157409668
    3. ' elements' → logprob: -6.902644157409668
    4. ' A' → logprob: -8.277644157409668
    5. 'ones' → logprob: -11.027644157409668
    6. '   ' → logprob: -11.027644157409668
    7. 'bits' → logprob: -11.277644157409668
    8. '1' → logprob: -11.527644157409668
    9. 'values' → logprob: -12.402644157409668
    10. 'array' → logprob: -12.527644157409668

Token 377: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.965609073638916
    2. 'total' → logprob: -1.465609073638916
    3. 'xor' → logprob: -2.715609073638916
    4. 'overall' → logprob: -2.715609073638916
    5. ' =' → logprob: -3.215609073638916
    6. ' total' → logprob: -3.340609073638916
    7. 'result' → logprob: -3.465609073638916
    8. 'x' → logprob: -3.590609073638916
    9. 'all' → logprob: -3.840609073638916
    10. 'odd' → logprob: -4.215609073638916

Token 378: 'c' (ID: 66)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.8929085731506348
    2. 'overall' → logprob: -1.8929085731506348
    3. ' overall' → logprob: -2.1429085731506348
    4. 'xor' → logprob: -2.3929085731506348
    5. ' A' → logprob: -2.5179085731506348
    6. 'odd' → logprob: -3.0179085731506348
    7. '   ' → logprob: -3.0179085731506348
    8. 'result' → logprob: -3.1429085731506348
    9. ')' → logprob: -3.3929085731506348
    10. 'total' → logprob: -3.5179085731506348

Token 379: 'umulative' (ID: 97729)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7191828489303589
    2. '=' → logprob: -0.8441828489303589
    3. 'urrent' → logprob: -3.3441829681396484
    4. 'xor' → logprob: -3.8441829681396484
    5. ')' → logprob: -5.344182968139648
    6. '_' → logprob: -5.469182968139648
    7. 'overall' → logprob: -5.969182968139648
    8. '_x' → logprob: -5.969182968139648
    9. 'urr' → logprob: -6.094182968139648
    10. 'umulative' → logprob: -6.344182968139648

Token 380: ' XOR' (ID: 147209)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.3714377284049988
    2. '_x' → logprob: -1.7464377880096436
    3. ')' → logprob: -2.9964377880096436
    4. '_' → logprob: -3.3714377880096436
    5. 'A' → logprob: -4.3714375495910645
    6. ' =' → logprob: -4.3714375495910645
    7. ' xor' → logprob: -4.8714375495910645
    8. 'X' → logprob: -5.6214375495910645
    9. ' )' → logprob: -5.9964375495910645
    10. '=' → logprob: -6.2464375495910645

Token 381: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0886443853378296
    2. '   ' → logprob: -1.0886443853378296
    3. ' =' → logprob: -1.7136443853378296
    4. '=' → logprob: -1.9636443853378296
    5. ' )' → logprob: -6.213644504547119
    6. ' ^=' → logprob: -6.838644504547119
    7. ')
' → logprob: -7.213644504547119
    8. ',' → logprob: -7.588644504547119
    9. '_' → logprob: -7.838644504547119
    10. 'A' → logprob: -8.588644027709961

Token 382: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16144461929798126
    2. 'c' → logprob: -3.036444664001465
    3. 'total' → logprob: -3.786444664001465
    4. ' total' → logprob: -4.161444664001465
    5. 'overall' → logprob: -4.536444664001465
    6. 'xor' → logprob: -4.661444664001465
    7. ' overall' → logprob: -4.786444664001465
    8. 'x' → logprob: -5.161444664001465
    9. 'result' → logprob: -5.536444664001465
    10. 'res' → logprob: -5.786444664001465

Token 383: ' xor' (ID: 106402)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.323181390762329
    2. 'xor' (adapté à ' xor') → logprob: -1.323181390762329
    3. 'total' → logprob: -1.448181390762329
    4. 'overall' → logprob: -2.698181390762329
    5. 'x' → logprob: -3.073181390762329
    6. 'res' → logprob: -3.823181390762329
    7. 'all' → logprob: -3.823181390762329
    8. '   ' → logprob: -4.44818115234375
    9. 'cum' → logprob: -4.44818115234375
    10. 'result' → logprob: -4.94818115234375

Token 384: ' =' (ID: 314)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.16895700991153717
    2. ' =' → logprob: -2.668956995010376
    3. '_all' → logprob: -2.793956995010376
    4. '_val' → logprob: -4.168957233428955
    5. '_value' → logprob: -5.168957233428955
    6. '_total' → logprob: -6.543957233428955
    7. '=' → logprob: -7.043957233428955
    8. '_result' → logprob: -7.418957233428955
    9. 'sum' → logprob: -7.668957233428955
    10. '_' → logprob: -8.418956756591797

Token 385: ' np' (ID: 5374)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22238977253437042
    2. 'np' → logprob: -1.847389817237854
    3. ' np' → logprob: -3.9723896980285645
    4. 'A' → logprob: -4.5973896980285645
    5. ' ' → logprob: -4.5973896980285645
    6. ' A' → logprob: -5.9723896980285645
    7. '   ' → logprob: -8.597390174865723
    8. 'int' → logprob: -10.847390174865723
    9. '1' → logprob: -12.722390174865723
    10. '  ' → logprob: -13.222390174865723

Token 386: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.0031165145337581635
    2. 'bit' → logprob: -6.128116607666016
    3. '_bit' → logprob: -7.128116607666016
    4. 'xor' → logprob: -9.503116607666016
    5. 'Bit' → logprob: -11.253116607666016
    6. '.logical' → logprob: -11.378116607666016
    7. '0' → logprob: -11.878116607666016
    8. ' bit' → logprob: -12.128116607666016
    9. '.Bit' → logprob: -12.628116607666016
    10. '-bit' → logprob: -13.003116607666016

Token 387: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.0009630310814827681
    2. '_x' → logprob: -7.37596321105957
    3. 'xor' → logprob: -8.00096321105957
    4. 'wis' → logprob: -14.62596321105957
    5. '_' → logprob: -15.62596321105957
    6. 'w' → logprob: -15.75096321105957
    7. '64' → logprob: -16.37596321105957
    8. '\' → logprob: -16.87596321105957
    9. 'array' → logprob: -16.87596321105957
    10. '```' → logprob: -17.12596321105957

Token 388: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.062396835535764694
    2. 'xor' → logprob: -2.812396764755249
    3. 'reduce' → logprob: -7.937397003173828
    4. 'wise' → logprob: -9.812397003173828
    5. '_or' → logprob: -12.437397003173828
    6. 'x' → logprob: -12.437397003173828
    7. '_all' → logprob: -12.937397003173828
    8. '_reduce' → logprob: -13.062397003173828
    9. '1' → logprob: -14.562397003173828
    10. 'exclusive' → logprob: -14.687397003173828

Token 389: 'or' (ID: 267)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.42336171865463257
    2. 'or' → logprob: -1.4233617782592773
    3. '_x' → logprob: -3.1733617782592773
    4. 'and' → logprob: -4.173361778259277
    5. 'r' → logprob: -4.298361778259277
    6. 'all' → logprob: -4.923361778259277
    7. 'wise' → logprob: -5.298361778259277
    8. 'orr' → logprob: -5.548361778259277
    9. 'ror' → logprob: -5.798361778259277
    10. 'rror' → logprob: -6.423361778259277

Token 390: '.reduce' (ID: 49441)
  Prédit: '.reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reduce' → logprob: -5.3954463510308415e-05
    2. 'reduce' → logprob: -10.125054359436035
    3. 'A' → logprob: -11.750054359436035
    4. '(A' → logprob: -12.500054359436035
    5. '.' → logprob: -13.875054359436035
    6. '   ' → logprob: -14.375054359436035
    7. ' .' → logprob: -15.750054359436035
    8. '_reduce' → logprob: -16.12505340576172
    9. '(np' → logprob: -16.87505340576172
    10. '=A' → logprob: -17.12505340576172

Token 391: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.125000953674316
    3. 'A' → logprob: -15.500000953674316
    4. ' (' → logprob: -16.375001907348633
    5. '(
' → logprob: -17.000001907348633
    6. '((' → logprob: -18.000001907348633
    7. '(a' → logprob: -19.750001907348633
    8. '(np' → logprob: -20.625001907348633
    9. '   ' → logprob: -20.750001907348633
    10. ' A' → logprob: -20.875001907348633

Token 392: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006591808632947505
    2. ')
' → logprob: -8.000658988952637
    3. ' )' → logprob: -8.500658988952637
    4. '   ' → logprob: -9.375658988952637
    5. ',' → logprob: -10.375658988952637
    6. '[' → logprob: -13.375658988952637
    7. ' )
' → logprob: -14.375658988952637
    8. ')

' → logprob: -14.750658988952637
    9. '))' → logprob: -15.000658988952637
    10. ').' → logprob: -15.500658988952637

Token 393: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11359396576881409
    2. '
' → logprob: -2.7385940551757812
    3. '    
' → logprob: -3.8635940551757812
    4. '+' → logprob: -4.488594055175781
    5. ' 
' → logprob: -6.488594055175781
    6. '   
' → logprob: -6.738594055175781
    7. ' if' → logprob: -6.988594055175781
    8. 'result' → logprob: -7.113594055175781
    9. '```' → logprob: -7.238594055175781
    10. '#' → logprob: -7.363594055175781

Token 394: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09945148229598999
    2. 'odd' → logprob: -3.7244515419006348
    3. 'max' → logprob: -4.349451541900635
    4. '#' → logprob: -4.724451541900635
    5. 'ones' → logprob: -4.849451541900635
    6. 'count' → logprob: -5.099451541900635
    7. 'result' → logprob: -5.474451541900635
    8. 'basis' → logprob: -5.599451541900635
    9. 'cnt' → logprob: -5.974451541900635
    10. 'one' → logprob: -5.974451541900635

Token 395: ' #' (ID: 1069)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -1.463323950767517
    2. 'basis' → logprob: -1.963323950767517
    3. 'ones' → logprob: -2.0883240699768066
    4. '#' (adapté à ' #') → logprob: -2.4633240699768066
    5. 'one' → logprob: -2.4633240699768066
    6. 'count' → logprob: -3.0883240699768066
    7. 'max' → logprob: -3.2133240699768066
    8. 'A' → logprob: -3.3383240699768066
    9. 'bit' → logprob: -3.4633240699768066
    10. 'cnt' → logprob: -3.8383240699768066

Token 396: ' Find' (ID: 9764)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.26199397444725037
    2. 'A' → logprob: -2.386993885040283
    3. 'B' → logprob: -3.011993885040283
    4. '#' → logprob: -3.636993885040283
    5. 'odd' → logprob: -4.636993885040283
    6. 'ones' → logprob: -5.136993885040283
    7. 're' → logprob: -5.136993885040283
    8. 'max' → logprob: -5.386993885040283
    9. 'count' → logprob: -5.386993885040283
    10. 'b' → logprob: -5.636993885040283

Token 397: ' bit' (ID: 3546)
  Prédit: ' basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' basis' → logprob: -0.8023655414581299
    2. 'basis' → logprob: -1.3023655414581299
    3. ' the' → logprob: -2.67736554145813
    4. 'the' → logprob: -2.92736554145813
    5. 'max' → logprob: -3.05236554145813
    6. ' max' → logprob: -3.80236554145813
    7. '   ' → logprob: -3.80236554145813
    8. '#' → logprob: -5.052365303039551
    9. 'A' → logprob: -5.177365303039551
    10. '_basis' → logprob: -5.302365303039551

Token 398: ' positions' (ID: 15897)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11751874536275864
    2. '_pos' → logprob: -4.242518901824951
    3. '_positions' → logprob: -4.242518901824951
    4. 'set' → logprob: -4.492518901824951
    5. ' =' → logprob: -4.742518901824951
    6. '   ' → logprob: -4.742518901824951
    7. '_mask' → logprob: -4.867518901824951
    8. '_' → logprob: -4.867518901824951
    9. 'mask' → logprob: -4.992518901824951
    10. '_count' → logprob: -5.242518901824951

Token 399: ' where' (ID: 1919)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5345197319984436
    2. '=' → logprob: -2.284519672393799
    3. ' where' → logprob: -2.409519672393799
    4. '   ' → logprob: -3.034519672393799
    5. 'with' → logprob: -3.159519672393799
    6. 'where' → logprob: -3.159519672393799
    7. ' with' → logprob: -4.034519672393799
    8. ' of' → logprob: -4.284519672393799
    9. '_where' → logprob: -4.534519672393799
    10. '_positions' → logprob: -4.784519672393799

Token 400: ' the' (ID: 290)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.3290237784385681
    2. '(x' → logprob: -1.454023838043213
    3. ' (' → logprob: -4.079023838043213
    4. ' xor' → logprob: -4.579023838043213
    5. '((' → logprob: -4.704023838043213
    6. '(np' → logprob: -5.829023838043213
    7. 'np' → logprob: -5.954023838043213
    8. ' ((' → logprob: -7.204023838043213
    9. 'x' → logprob: -7.329023838043213
    10. '(((' → logprob: -7.329023838043213

Token 401: ' number' (ID: 2086)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.053071752190589905
    2. 'count' → logprob: -3.8030717372894287
    3. '(x' → logprob: -4.803071975708008
    4. ' xor' → logprob: -5.553071975708008
    5. 'np' → logprob: -5.928071975708008
    6. ' (' → logprob: -6.178071975708008
    7. '((' → logprob: -6.553071975708008
    8. '1' → logprob: -6.678071975708008
    9. 'odd' → logprob: -6.928071975708008
    10. '(' → logprob: -7.053071975708008

Token 402: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.1767619103193283
    2. '_of' → logprob: -2.3017618656158447
    3. ' of' → logprob: -2.8017618656158447
    4. '_' → logprob: -7.176762104034424
    5. 'Of' → logprob: -8.926761627197266
    6. '   ' → logprob: -9.301761627197266
    7. 'A' → logprob: -10.051761627197266
    8. '[np' → logprob: -10.051761627197266
    9. 's' → logprob: -10.926761627197266
    10. 'count' → logprob: -11.051761627197266

Token 403: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6226321458816528
    2. 'ones' → logprob: -1.2476321458816528
    3. 'np' → logprob: -2.8726320266723633
    4. ' ones' → logprob: -3.6226320266723633
    5. 'A' → logprob: -3.8726320266723633
    6. ' set' → logprob: -4.122632026672363
    7. 'bits' → logprob: -4.122632026672363
    8. ' np' → logprob: -4.872632026672363
    9. ' bits' → logprob: -5.372632026672363
    10. 'set' → logprob: -5.497632026672363

Token 404: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0027876459062099457
    2. 'A' → logprob: -6.8777875900268555
    3. 'ones' → logprob: -7.2527875900268555
    4. 'np' → logprob: -7.8777875900268555
    5. 'bits' → logprob: -8.752787590026855
    6. ' ' → logprob: -9.002787590026855
    7. 'one' → logprob: -9.502787590026855
    8. 'set' → logprob: -9.502787590026855
    9. ' set' → logprob: -10.127787590026855
    10. ' ones' → logprob: -10.252787590026855

Token 405: ''s' (ID: 885)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0024643598590046167
    2. '_bits' → logprob: -6.377464294433594
    3. ' s' → logprob: -7.627464294433594
    4. ''s' → logprob: -8.752464294433594
    5. ')' → logprob: -10.377464294433594
    6. '_s' → logprob: -10.502464294433594
    7. 'bits' → logprob: -11.252464294433594
    8. '_positions' → logprob: -11.877464294433594
    9. ' bits' → logprob: -12.127464294433594
    10. '`s' → logprob: -12.502464294433594

Token 406: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1057862937450409
    2. 'in' → logprob: -2.9807863235473633
    3. ' =' → logprob: -3.6057863235473633
    4. ' is' → logprob: -4.355786323547363
    5. ' at' → logprob: -5.855786323547363
    6. '<|end|>' → logprob: -6.105786323547363
    7. ' set' → logprob: -6.980786323547363
    8. '_in' → logprob: -7.105786323547363
    9. ' A' → logprob: -8.105786323547363
    10. '=' → logprob: -8.230786323547363

Token 407: ' odd' (ID: 14210)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -1.0842770338058472
    2. ' (' → logprob: -1.2092770338058472
    3. ' np' → logprob: -1.9592770338058472
    4. '(A' → logprob: -2.7092771530151367
    5. '(np' → logprob: -3.3342771530151367
    6. ' odd' → logprob: -3.5842771530151367
    7. 'A' → logprob: -3.5842771530151367
    8. 'odd' → logprob: -3.9592771530151367
    9. '%' → logprob: -4.459277153015137
    10. '(' → logprob: -4.584277153015137

Token 408: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5566244125366211
    2. 'counts' → logprob: -2.431624412536621
    3. 'count' → logprob: -2.806624412536621
    4. '   ' → logprob: -2.931624412536621
    5. '_counts' → logprob: -3.181624412536621
    6. ' counts' → logprob: -3.181624412536621
    7. '_count' → logprob: -3.806624412536621
    8. '_bits' → logprob: -4.181624412536621
    9. ' ' → logprob: -4.306624412536621
    10. ' one' → logprob: -4.556624412536621

Token 409: ' the' (ID: 290)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10643865913152695
    2. 'np' → logprob: -3.231438636779785
    3. '(A' → logprob: -3.731438636779785
    4. ' A' → logprob: -4.231438636779785
    5. ' (' → logprob: -4.981438636779785
    6. '(np' → logprob: -4.981438636779785
    7. 'xor' → logprob: -5.856438636779785
    8. ' np' → logprob: -6.231438636779785
    9. '((' → logprob: -6.231438636779785
    10. '(' → logprob: -7.231438636779785

Token 410: ' cumulative' (ID: 75628)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07059992849826813
    2. ' A' → logprob: -2.9456000328063965
    3. ' (' → logprob: -5.6956000328063965
    4. 'np' → logprob: -5.9456000328063965
    5. 'xor' → logprob: -6.1956000328063965
    6. '(' → logprob: -6.3206000328063965
    7. '(A' → logprob: -6.8206000328063965
    8. 'bin' → logprob: -6.9456000328063965
    9. '~' → logprob: -7.6956000328063965
    10. ' np' → logprob: -7.9456000328063965

Token 411: ' XOR' (ID: 147209)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.20337161421775818
    2. 'A' → logprob: -2.328371524810791
    3. ' xor' → logprob: -2.703371524810791
    4. ' A' → logprob: -4.578371524810791
    5. 'bits' → logprob: -6.203371524810791
    6. 'x' → logprob: -6.828371524810791
    7. 'count' → logprob: -6.953371524810791
    8. 'bit' → logprob: -7.203371524810791
    9. 'X' → logprob: -7.203371524810791
    10. ' XOR' → logprob: -7.203371524810791

Token 412: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7508751153945923
    2. 'count' → logprob: -1.7508751153945923
    3. ' bit' → logprob: -2.2508749961853027
    4. 'bits' → logprob: -2.3758749961853027
    5. 'counts' → logprob: -2.3758749961853027
    6. ' =' → logprob: -2.5008749961853027
    7. 'bit' → logprob: -3.0008749961853027
    8. ' counts' → logprob: -3.2508749961853027
    9. ' bits' → logprob: -3.3758749961853027
    10. 'ones' → logprob: -3.3758749961853027

Token 413: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01979464292526245
    2. ' bit' → logprob: -5.644794464111328
    3. ' counts' → logprob: -5.769794464111328
    4. 'counts' → logprob: -5.894794464111328
    5. 'count' → logprob: -6.144794464111328
    6. ' bits' → logprob: -6.644794464111328
    7. 'bits' → logprob: -7.019794464111328
    8. 'bit' → logprob: -7.144794464111328
    9. ' ones' → logprob: -7.519794464111328
    10. 'ones' → logprob: -7.644794464111328

Token 414: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' (adapté à ' odd') → logprob: -0.7509185671806335
    2. 'ones' → logprob: -1.7509186267852783
    3. ' odd' → logprob: -2.2509186267852783
    4. 'one' → logprob: -2.7509186267852783
    5. 'bits' → logprob: -3.1259186267852783
    6. 'bit' → logprob: -3.8759186267852783
    7. ' one' → logprob: -4.000918388366699
    8. ' set' → logprob: -4.125918388366699
    9. ' ones' → logprob: -4.250918388366699
    10. 'positions' → logprob: -4.250918388366699

Token 415: '_digit' (ID: 119592)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.4294769763946533
    2. '_bits' → logprob: -1.3044769763946533
    3. '_' → logprob: -2.9294769763946533
    4. '_bit' → logprob: -4.804476737976074
    5. '_pos' → logprob: -4.929476737976074
    6. '_one' → logprob: -5.554476737976074
    7. '_counts' → logprob: -6.179476737976074
    8. ' =' → logprob: -6.929476737976074
    9. '_mask' → logprob: -7.304476737976074
    10. '_count' → logprob: -7.429476737976074

Token 416: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11087511479854584
    2. 's' → logprob: -2.735875129699707
    3. '_positions' → logprob: -3.360875129699707
    4. '=' → logprob: -5.485875129699707
    5. '_pos' → logprob: -7.610875129699707
    6. '_mask' → logprob: -7.985875129699707
    7. '_' → logprob: -9.110875129699707
    8. '_bits' → logprob: -9.360875129699707
    9. '_indices' → logprob: -9.360875129699707
    10. '_counts' → logprob: -10.235875129699707

Token 417: ' [' (ID: 723)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.4390398859977722
    2. '(x' → logprob: -1.814039945602417
    3. ' xor' → logprob: -1.939039945602417
    4. ' (' → logprob: -3.439039945602417
    5. 'np' → logprob: -4.939039707183838
    6. ' np' → logprob: -5.814039707183838
    7. '[x' → logprob: -6.439039707183838
    8. '((' → logprob: -6.564039707183838
    9. '(np' → logprob: -6.689039707183838
    10. 'x' → logprob: -7.564039707183838

Token 418: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6393441557884216
    2. '(i' → logprob: -0.7643441557884216
    3. '((' → logprob: -6.014344215393066
    4. 'bit' → logprob: -6.889344215393066
    5. 'bool' → logprob: -7.139344215393066
    6. 'int' → logprob: -7.514344215393066
    7. '(' → logprob: -7.764344215393066
    8. '(bit' → logprob: -8.014344215393066
    9. ' (' → logprob: -8.389344215393066
    10. ' i' → logprob: -8.639344215393066

Token 419: ' <<' (ID: 2256)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5439825057983398
    2. ' <<' → logprob: -1.5439825057983398
    3. '<<' → logprob: -1.7939825057983398
    4. ' for' → logprob: -3.66898250579834
    5. 'if' → logprob: -4.79398250579834
    6. 'for' → logprob: -5.66898250579834
    7. 'i' → logprob: -6.91898250579834
    8. '   ' → logprob: -7.54398250579834
    9. 'e' → logprob: -9.04398250579834
    10. '       ' → logprob: -9.16898250579834

Token 420: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005131178768351674
    2. ' i' → logprob: -8.375513076782227
    3. 'b' → logprob: -9.750513076782227
    4. '_' → logprob: -9.750513076782227
    5. 'bit' → logprob: -9.875513076782227
    6. 'j' → logprob: -10.000513076782227
    7. 'x' → logprob: -11.000513076782227
    8. 'k' → logprob: -11.250513076782227
    9. 'd' → logprob: -11.500513076782227
    10. '_i' → logprob: -12.000513076782227

Token 421: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.005965176969766617
    2. 'for' → logprob: -5.130965232849121
    3. ' if' → logprob: -10.380965232849121
    4. '	for' → logprob: -12.880965232849121
    5. '   ' → logprob: -13.630965232849121
    6. 'if' → logprob: -14.255965232849121
    7. ' ' → logprob: -14.755965232849121
    8. '    ' → logprob: -15.005965232849121
    9. ' i' → logprob: -15.255965232849121
    10. ' in' → logprob: -17.005964279174805

Token 422: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5780170559883118
    2. 'i' → logprob: -1.078016996383667
    3. ' range' → logprob: -2.328016996383667
    4. ' i' → logprob: -6.703017234802246
    5. ' ' → logprob: -13.328017234802246
    6. 'in' → logprob: -14.203017234802246
    7. '	range' → logprob: -14.453017234802246
    8. '   ' → logprob: -14.828017234802246
    9. ' in' → logprob: -15.078017234802246
    10. '(range' → logprob: -15.203017234802246

Token 423: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033835992217063904
    2. 'in' → logprob: -3.4088358879089355
    3. 'range' → logprob: -8.908836364746094
    4. ' range' → logprob: -10.033836364746094
    5. ' ' → logprob: -12.158836364746094
    6. ',' → logprob: -12.283836364746094
    7. '   ' → logprob: -14.783836364746094
    8. '  ' → logprob: -15.158836364746094
    9. 'i' → logprob: -15.783836364746094
    10. 'if' → logprob: -16.533836364746094

Token 424: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02324547804892063
    2. ' range' → logprob: -3.7732455730438232
    3. '   ' → logprob: -17.523244857788086
    4. '	range' → logprob: -17.523244857788086
    5. ' ' → logprob: -18.023244857788086
    6. '
' → logprob: -19.273244857788086
    7. '  ' → logprob: -19.398244857788086
    8. '(range' → logprob: -20.023244857788086
    9. 'np' → logprob: -20.398244857788086
    10. 're' → logprob: -20.898244857788086

Token 425: '(' (ID: 7)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.033881500363349915
    2. '(' → logprob: -3.408881425857544
    3. '59' → logprob: -8.783881187438965
    4. '(len' → logprob: -10.533881187438965
    5. 'len' → logprob: -10.658881187438965
    6. 'xor' → logprob: -11.283881187438965
    7. '56' → logprob: -12.533881187438965
    8. '(x' → logprob: -12.658881187438965
    9. '61' → logprob: -13.283881187438965
    10. '6' → logprob: -13.533881187438965

Token 426: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -4.978233846486546e-05
    2. '59' → logprob: -10.000049591064453
    3. 'len' → logprob: -13.375049591064453
    4. '61' → logprob: -14.500049591064453
    5. 'np' → logprob: -14.875049591064453
    6. '0' → logprob: -15.375049591064453
    7. '30' → logprob: -15.500049591064453
    8. '6' → logprob: -15.500049591064453
    9. '40' → logprob: -15.875049591064453
    10. ' ' → logprob: -15.875049591064453

Token 427: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011748019605875015
    2. ' if' → logprob: -4.63674783706665
    3. 'if' → logprob: -6.51174783706665
    4. ' )' → logprob: -7.76174783706665
    5. '   ' → logprob: -10.011748313903809
    6. ',' → logprob: -11.261748313903809
    7. ')]' → logprob: -11.636748313903809
    8. ' ' → logprob: -12.261748313903809
    9. '       ' → logprob: -13.386748313903809
    10. '    ' → logprob: -13.511748313903809

Token 428: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10028387606143951
    2. 'if' → logprob: -2.3502838611602783
    3. '   ' → logprob: -9.7252836227417
    4. ' ' → logprob: -11.7252836227417
    5. '  ' → logprob: -12.8502836227417
    6. '	if' → logprob: -13.1002836227417
    7. '    ' → logprob: -13.1002836227417
    8. '       ' → logprob: -13.2252836227417
    9. '           ' → logprob: -14.9752836227417
    10. ']' → logprob: -15.6002836227417

Token 429: ' xor' (ID: 106402)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.13737332820892334
    2. ' (' → logprob: -2.137373447418213
    3. '((' → logprob: -5.137373447418213
    4. 'xor' → logprob: -5.637373447418213
    5. ' xor' → logprob: -7.762373447418213
    6. ' ((' → logprob: -8.637372970581055
    7. '(np' → logprob: -9.637372970581055
    8. '   ' → logprob: -9.762372970581055
    9. 'x' → logprob: -9.887372970581055
    10. ' ' → logprob: -10.012372970581055

Token 430: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.03810862451791763
    2. ' &' → logprob: -3.2881085872650146
    3. '&amp' → logprob: -10.163108825683594
    4. '&(' → logprob: -11.038108825683594
    5. '&
' → logprob: -12.663108825683594
    6. '&p' → logprob: -12.788108825683594
    7. '&gt' → logprob: -13.038108825683594
    8. '&i' → logprob: -14.038108825683594
    9. '>>' → logprob: -14.288108825683594
    10. '＆' → logprob: -14.413108825683594

Token 431: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04858816787600517
    2. ' (' → logprob: -3.048588275909424
    3. '1' → logprob: -14.798587799072266
    4. '   ' → logprob: -15.673587799072266
    5. ' ' → logprob: -15.673587799072266
    6. '  ' → logprob: -17.048587799072266
    7. '[' → logprob: -18.173587799072266
    8. '((' → logprob: -18.173587799072266
    9. '
' → logprob: -18.173587799072266
    10. ' ' → logprob: -18.173587799072266

Token 432: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01322316937148571
    2. '1' → logprob: -4.513223171234131
    3. ' (' → logprob: -6.138223171234131
    4. ' ' → logprob: -11.388222694396973
    5. '   ' → logprob: -13.513222694396973
    6. ')' → logprob: -15.013222694396973
    7. '[' → logprob: -15.013222694396973
    8. '
' → logprob: -15.263222694396973
    9. '  ' → logprob: -15.638222694396973
    10. '{' → logprob: -15.638222694396973

Token 433: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.02977617457509041
    2. ' <<' → logprob: -3.529776096343994
    3. '1' → logprob: -10.779776573181152
    4. '   ' → logprob: -13.654776573181152
    5. ' ' → logprob: -14.279776573181152
    6. 'i' → logprob: -14.404776573181152
    7. '```' → logprob: -14.654776573181152
    8. '(' → logprob: -14.779776573181152
    9. ')' → logprob: -14.904776573181152
    10. '>>' → logprob: -15.029776573181152

Token 434: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00043257648940198123
    2. ' i' → logprob: -7.75043249130249
    3. '   ' → logprob: -14.000432968139648
    4. ' ' → logprob: -15.000432968139648
    5. '(i' → logprob: -15.250432968139648
    6. '```' → logprob: -16.37543296813965
    7. '
' → logprob: -16.50043296813965
    8. '  ' → logprob: -16.62543296813965
    9. '	i' → logprob: -16.62543296813965
    10. '[i' → logprob: -16.75043296813965

Token 435: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00019018957391381264
    2. ')' → logprob: -9.125189781188965
    3. ' )' → logprob: -10.750189781188965
    4. ')]
' → logprob: -11.000189781188965
    5. ']' → logprob: -11.500189781188965
    6. ')!=' → logprob: -11.750189781188965
    7. ')][' → logprob: -11.875189781188965
    8. '!=' → logprob: -12.125189781188965
    9. ')]

' → logprob: -13.250189781188965
    10. ')>' → logprob: -13.625189781188965

Token 436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021130327135324478
    2. '
' → logprob: -4.646130561828613
    3. 'max' → logprob: -6.271130561828613
    4. '    
' → logprob: -6.646130561828613
    5. ' for' → logprob: -7.021130561828613
    6. '#' → logprob: -7.021130561828613
    7. 'odd' → logprob: -7.021130561828613
    8. ' max' → logprob: -7.146130561828613
    9. 'result' → logprob: -7.396130561828613
    10. ' ' → logprob: -7.521130561828613

Token 437: ' #' (ID: 1069)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -1.4230834245681763
    2. 'basis' → logprob: -1.9230834245681763
    3. 'for' → logprob: -2.2980833053588867
    4. 'max' → logprob: -2.4230833053588867
    5. '#' (adapté à ' #') → logprob: -2.6730833053588867
    6. 'if' → logprob: -2.7980833053588867
    7. '   ' → logprob: -2.7980833053588867
    8. 'result' → logprob: -3.2980833053588867
    9. 'ans' → logprob: -3.7980833053588867
    10. 'B' → logprob: -3.7980833053588867

Token 438: ' Ignore' (ID: 84342)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.7019727826118469
    2. 'B' → logprob: -1.8269727230072021
    3. 'A' → logprob: -1.9519727230072021
    4. '#' → logprob: -2.326972723007202
    5. ' basis' → logprob: -3.826972723007202
    6. 're' → logprob: -4.201972961425781
    7. 'if' → logprob: -4.326972961425781
    8. 'odd' → logprob: -5.201972961425781
    9. 'xor' → logprob: -5.201972961425781
    10. 'base' → logprob: -5.326972961425781

Token 439: ' the' (ID: 290)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.5783658027648926
    2. 'A' → logprob: -1.7033658027648926
    3. ' A' → logprob: -2.0783658027648926
    4. ' the' → logprob: -2.4533658027648926
    5. ' elements' → logprob: -2.8283658027648926
    6. ' rest' → logprob: -2.9533658027648926
    7. 'if' → logprob: -3.0783658027648926
    8. ' odd' → logprob: -3.0783658027648926
    9. '   ' → logprob: -3.2033658027648926
    10. 'the' → logprob: -3.8283658027648926

Token 440: ' bits' (ID: 18189)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.9997487664222717
    2. 'if' → logprob: -2.124748706817627
    3. ' odd' → logprob: -2.624748706817627
    4. 'basis' → logprob: -3.124748706817627
    5. ' if' → logprob: -3.249748706817627
    6. 'elements' → logprob: -3.624748706817627
    7. 'len' → logprob: -3.749748706817627
    8. 'A' → logprob: -3.749748706817627
    9. 'bits' → logprob: -3.874748706817627
    10. 'even' → logprob: -3.874748706817627

Token 441: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0206221342086792
    2. ' that' → logprob: -1.1456221342086792
    3. ' not' → logprob: -2.3956222534179688
    4. ' in' → logprob: -2.7706222534179688
    5. 'not' → logprob: -3.0206222534179688
    6. 'that' → logprob: -3.5206222534179688
    7. ' where' → logprob: -4.145622253417969
    8. 'in' → logprob: -4.520622253417969
    9. '       ' → logprob: -4.645622253417969
    10. '=' → logprob: -4.645622253417969

Token 442: ' have' (ID: 679)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.16292451322078705
    2. 'are' → logprob: -2.9129245281219482
    3. ' appear' → logprob: -3.2879245281219482
    4. ' contribute' → logprob: -3.7879245281219482
    5. ' have' → logprob: -4.662924289703369
    6. ' can' → logprob: -5.412924289703369
    7. ' do' → logprob: -5.662924289703369
    8. 'appear' → logprob: -6.162924289703369
    9. ' set' → logprob: -6.287924289703369
    10. ' cannot' → logprob: -6.537924289703369

Token 443: ' an' (ID: 448)
  Prédit: 'already'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'already' → logprob: -1.37694251537323
    2. 'xor' → logprob: -1.75194251537323
    3. '0' → logprob: -1.87694251537323
    4. ' been' → logprob: -2.0019426345825195
    5. 'been' → logprob: -2.1269426345825195
    6. 'odd' → logprob: -2.8769426345825195
    7. ' already' → logprob: -3.0019426345825195
    8. ' odd' → logprob: -4.8769426345825195
    9. 'con' → logprob: -4.8769426345825195
    10. ' ' → logprob: -5.1269426345825195

Token 444: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.8483731150627136
    2. 'even' → logprob: -1.7233731746673584
    3. ' odd' → logprob: -1.9733731746673584
    4. ' even' → logprob: -2.7233731746673584
    5. ' impact' → logprob: -3.3483731746673584
    6. 'equal' → logprob: -4.098372936248779
    7. 'A' → logprob: -4.223372936248779
    8. 'overall' → logprob: -4.473372936248779
    9. 'effect' → logprob: -4.598372936248779
    10. ' effect' → logprob: -4.723372936248779

Token 445: ' count' (ID: 3605)
  Prédit: '_digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.5791633725166321
    2. ' count' → logprob: -1.4541633129119873
    3. 'count' → logprob: -2.5791633129119873
    4. '_count' → logprob: -3.4541633129119873
    5. ' digit' → logprob: -3.5791633129119873
    6. '_' → logprob: -4.204163551330566
    7. 'digit' → logprob: -4.329163551330566
    8. ' contribution' → logprob: -4.454163551330566
    9. ' number' → logprob: -4.829163551330566
    10. ' set' → logprob: -6.079163551330566

Token 446: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7150847315788269
    2. ' in' → logprob: -0.8400847315788269
    3. 'in' → logprob: -3.0900847911834717
    4. '=' → logprob: -4.840084552764893
    5. ' =' → logprob: -5.090084552764893
    6. ' for' → logprob: -5.715084552764893
    7. ' of' → logprob: -5.840084552764893
    8. ',' → logprob: -6.340084552764893
    9. ' A' → logprob: -6.965084552764893
    10. 'A' → logprob: -6.965084552764893

Token 447: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.089138150215149
    2. 'ones' → logprob: -1.089138150215149
    3. ' ones' → logprob: -1.964138150215149
    4. ' set' → logprob: -3.4641380310058594
    5. 'odd' → logprob: -3.9641380310058594
    6. 'A' → logprob: -4.089138031005859
    7. ''' → logprob: -4.214138031005859
    8. ' ' → logprob: -4.464138031005859
    9. 'set' → logprob: -4.464138031005859
    10. 'one' → logprob: -4.589138031005859

Token 448: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0264794509857893
    2. 'ones' → logprob: -4.401479244232178
    3. ''' → logprob: -5.276479244232178
    4. ' ' → logprob: -6.026479244232178
    5. ' ones' → logprob: -6.151479244232178
    6. ''s' → logprob: -7.026479244232178
    7. '')' → logprob: -7.651479244232178
    8. ' '' → logprob: -7.776479244232178
    9. ' set' → logprob: -8.026479721069336
    10. 'A' → logprob: -8.401479721069336

Token 449: ''s' (ID: 885)
  Prédit: ''s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.6452059149742126
    2. 's' → logprob: -1.3952059745788574
    3. ')' → logprob: -2.3952059745788574
    4. ''' → logprob: -2.8952059745788574
    5. '')' → logprob: -3.3952059745788574
    6. ' in' → logprob: -3.3952059745788574
    7. ')'' → logprob: -5.020205974578857
    8. '   ' → logprob: -6.395205974578857
    9. '_bits' → logprob: -7.270205974578857
    10. ''''' → logprob: -7.520205974578857

Token 450: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6303725242614746
    2. ' in' → logprob: -1.6303725242614746
    3. '
' → logprob: -2.0053725242614746
    4. 'A' → logprob: -3.1303725242614746
    5. ' for' → logprob: -3.1303725242614746
    6. ' A' → logprob: -4.380372524261475
    7. '    
' → logprob: -4.755372524261475
    8. ',' → logprob: -5.255372524261475
    9. 'in' → logprob: -5.380372524261475
    10. '<|end|>' → logprob: -6.380372524261475

Token 451: ' masking' (ID: 130806)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.4132940769195557
    2. '   ' → logprob: -1.4132940769195557
    3. ' A' → logprob: -2.2882940769195557
    4. ' for' → logprob: -3.2882940769195557
    5. ' [' → logprob: -3.4132940769195557
    6. ' odd' → logprob: -3.6632940769195557
    7. '[i' → logprob: -4.163293838500977
    8. '[' → logprob: -4.163293838500977
    9. '1' → logprob: -4.225793838500977
    10. ' ' → logprob: -4.350793838500977

Token 452: ' them' (ID: 1373)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7124125957489014
    2. ' =' → logprob: -1.2124125957489014
    3. '=' → logprob: -2.9624125957489014
    4. 'mask' → logprob: -3.8374125957489014
    5. '
' → logprob: -3.9624125957489014
    6. ' with' → logprob: -4.0874128341674805
    7. 'xor' → logprob: -4.3374128341674805
    8. '_mask' → logprob: -4.4624128341674805
    9. ' in' → logprob: -4.5874128341674805
    10. '_' → logprob: -4.5874128341674805

Token 453: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.569199800491333
    2. ' =' → logprob: -1.569199800491333
    3. '=' → logprob: -3.069199800491333
    4. '_' → logprob: -3.319199800491333
    5. ' with' → logprob: -3.569199800491333
    6. 'A' → logprob: -3.819199800491333
    7. ',' → logprob: -4.069199562072754
    8. ' A' → logprob: -4.444199562072754
    9. ' in' → logprob: -4.819199562072754
    10. 'xor' → logprob: -4.819199562072754

Token 454: ' all' (ID: 722)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6055583357810974
    2. ' A' → logprob: -0.9805583357810974
    3. ' the' → logprob: -2.855558395385742
    4. 'the' → logprob: -4.480558395385742
    5. ' elements' → logprob: -6.480558395385742
    6. ' each' → logprob: -6.480558395385742
    7. ' all' → logprob: -6.730558395385742
    8. 'xor' → logprob: -7.230558395385742
    9. 'each' → logprob: -7.605558395385742
    10. ' array' → logprob: -7.605558395385742

Token 455: ' elements' (ID: 8632)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6788461208343506
    2. ' elements' → logprob: -0.9288461208343506
    3. ' A' → logprob: -2.8038461208343506
    4. 'elements' → logprob: -3.4288461208343506
    5. ' bits' → logprob: -7.05384635925293
    6. ' numbers' → logprob: -7.42884635925293
    7. '   ' → logprob: -7.67884635925293
    8. ' ' → logprob: -7.80384635925293
    9. 'bits' → logprob: -8.05384635925293
    10. '(A' → logprob: -8.55384635925293

Token 456: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38313356041908264
    2. 'A' → logprob: -1.5081335306167603
    3. ' A' → logprob: -3.00813364982605
    4. '```' → logprob: -4.258133411407471
    5. '
' → logprob: -4.383133411407471
    6. ' =' → logprob: -5.383133411407471
    7. '    
' → logprob: -5.508133411407471
    8. ',' → logprob: -5.633133411407471
    9. '=A' → logprob: -6.633133411407471
    10. '=' → logprob: -6.883133411407471

Token 457: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05383748188614845
    2. 'A' → logprob: -3.178837537765503
    3. '```' → logprob: -5.053837299346924
    4. ' A' → logprob: -5.678837299346924
    5. '    
' → logprob: -8.178837776184082
    6. ',' → logprob: -8.803837776184082
    7. '``' → logprob: -8.803837776184082
    8. ' for' → logprob: -9.428837776184082
    9. '
' → logprob: -10.053837776184082
    10. ')' → logprob: -10.178837776184082

Token 458: ' for' (ID: 395)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6089701652526855
    2. ' A' → logprob: -1.6089701652526855
    3. 'masked' → logprob: -2.7339701652526855
    4. 'B' → logprob: -2.8589701652526855
    5. '   ' → logprob: -3.1089701652526855
    6. ' B' → logprob: -3.7339701652526855
    7. 'mask' → logprob: -3.7339701652526855
    8. ' masked' → logprob: -4.2339701652526855
    9. 'for' (adapté à ' for') → logprob: -4.6089701652526855
    10. ' mask' → logprob: -4.8589701652526855

Token 459: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6600329875946045
    2. ' i' → logprob: -1.0350329875946045
    3. ' bit' → logprob: -2.6600329875946045
    4. 'bit' → logprob: -3.0350329875946045
    5. 'x' → logprob: -6.160033226013184
    6. ' x' → logprob: -6.285033226013184
    7. ' j' → logprob: -6.535033226013184
    8. 'j' → logprob: -6.660033226013184
    9. 'a' → logprob: -7.410033226013184
    10. ' mask' → logprob: -8.160033226013184

Token 460: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07002101838588715
    2. 'in' → logprob: -2.695020914077759
    3. ',' → logprob: -10.07002067565918
    4. ' ' → logprob: -10.32002067565918
    5. '_in' → logprob: -13.07002067565918
    6. '  ' → logprob: -13.82002067565918
    7. ')' → logprob: -13.94502067565918
    8. ' ,' → logprob: -13.94502067565918
    9. '   ' → logprob: -14.19502067565918
    10. 'In' → logprob: -14.19502067565918

Token 461: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.14485827088356018
    2. 'range' → logprob: -2.6448583602905273
    3. ' range' → logprob: -3.3948583602905273
    4. ' odd' → logprob: -3.5198583602905273
    5. 're' → logprob: -8.144858360290527
    6. '   ' → logprob: -8.894858360290527
    7. 'sorted' → logprob: -9.269858360290527
    8. 'od' → logprob: -10.019858360290527
    9. ' reversed' → logprob: -10.269858360290527
    10. ' ' → logprob: -10.519858360290527

Token 462: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.00021593389101326466
    2. '_' → logprob: -9.500215530395508
    3. 'digit' → logprob: -9.875215530395508
    4. '_digits' → logprob: -10.000215530395508
    5. ' in' → logprob: -11.250215530395508
    6. ' _' → logprob: -11.750215530395508
    7. '_bit' → logprob: -11.875215530395508
    8. '   ' → logprob: -12.375215530395508
    9. 'Digit' → logprob: -12.875215530395508
    10. ' digit' → logprob: -13.375215530395508

Token 463: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28208887577056885
    2. ':
' → logprob: -1.4070888757705688
    3. '   ' → logprob: -7.532088756561279
    4. '       ' → logprob: -8.282089233398438
    5. ':
' → logprob: -10.282089233398438
    6. '):
' → logprob: -10.407089233398438
    7. ',' → logprob: -10.532089233398438
    8. '=' → logprob: -11.282089233398438
    9. 'A' → logprob: -11.282089233398438
    10. ':A' → logprob: -11.532089233398438

Token 464: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2214595079421997
    2. 'A' → logprob: -1.9714595079421997
    3. ' A' → logprob: -3.22145938873291
    4. '   ' → logprob: -3.97145938873291
    5. ':' → logprob: -8.84645938873291
    6. '
' → logprob: -9.09645938873291
    7. '        
' → logprob: -9.47145938873291
    8. '	A' → logprob: -9.84645938873291
    9. ':
' → logprob: -10.34645938873291
    10. '      ' → logprob: -10.59645938873291

Token 465: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.04101966693997383
    2. ' A' → logprob: -3.7910196781158447
    3. '   ' → logprob: -4.041019439697266
    4. '       ' → logprob: -11.541019439697266
    5. '  ' → logprob: -11.666019439697266
    6. ' ' → logprob: -11.666019439697266
    7. '	A' → logprob: -12.666019439697266
    8. '    ' → logprob: -12.916019439697266
    9. '
' → logprob: -13.041019439697266
    10. '    
' → logprob: -14.291019439697266

Token 466: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.677118718624115
    2. '&' → logprob: -1.5521187782287598
    3. ' &=' → logprob: -1.6771187782287598
    4. ' ^=' → logprob: -2.5521187782287598
    5. ' =' → logprob: -4.67711877822876
    6. '^' → logprob: -5.30211877822876
    7. ' ' → logprob: -7.92711877822876
    8. '[' → logprob: -8.302118301391602
    9. '%=' → logprob: -9.552118301391602
    10. '-=' → logprob: -9.677118301391602

Token 467: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0694742426276207
    2. ' A' → logprob: -2.944474220275879
    3. 'np' → logprob: -4.319474220275879
    4. ' np' → logprob: -7.444474220275879
    5. '(A' → logprob: -7.819474220275879
    6. ' (' → logprob: -8.819474220275879
    7. ' ' → logprob: -11.319474220275879
    8. '(' → logprob: -11.569474220275879
    9. '(np' → logprob: -11.569474220275879
    10. '	A' → logprob: -12.694474220275879

Token 468: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.34760814905166626
    2. '^' → logprob: -1.5976080894470215
    3. ' &' → logprob: -2.9726080894470215
    4. '&A' → logprob: -3.8476080894470215
    5. ' ^' → logprob: -4.8476080894470215
    6. 'A' → logprob: -5.0976080894470215
    7. '[' → logprob: -5.9726080894470215
    8. '[A' → logprob: -6.8476080894470215
    9. ' A' → logprob: -7.8476080894470215
    10. '=' → logprob: -9.09760856628418

Token 469: ' (~' (ID: 65176)
  Prédit: '~'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '~' → logprob: -0.3110444247722626
    2. '(~' → logprob: -1.561044454574585
    3. ' (~' → logprob: -3.436044454574585
    4. ' ~' → logprob: -3.686044454574585
    5. '(np' → logprob: -9.811044692993164
    6. '(i' → logprob: -10.311044692993164
    7. ' np' → logprob: -10.686044692993164
    8. 'np' → logprob: -11.561044692993164
    9. ' (' → logprob: -12.186044692993164
    10. '(' → logprob: -12.436044692993164

Token 470: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0038639740087091923
    2. ' i' → logprob: -5.75386381149292
    3. 'np' → logprob: -7.37886381149292
    4. ' np' → logprob: -10.628864288330078
    5. '(i' → logprob: -11.253864288330078
    6. 'A' → logprob: -12.003864288330078
    7. '{i' → logprob: -12.253864288330078
    8. '   ' → logprob: -12.878864288330078
    9. '(np' → logprob: -13.003864288330078
    10. ' (' → logprob: -13.253864288330078

Token 471: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002016331272898242
    2. ' )' → logprob: -9.375201225280762
    3. ')
' → logprob: -9.625201225280762
    4. '       ' → logprob: -10.000201225280762
    5. '   ' → logprob: -12.750201225280762
    6. '))' → logprob: -13.875201225280762
    7. '())' → logprob: -15.125201225280762
    8. ')

' → logprob: -15.625201225280762
    9. '<|end|>' → logprob: -15.750201225280762
    10. ')`' → logprob: -16.125202178955078

Token 472: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1043410450220108
    2. '
' → logprob: -2.6043410301208496
    3. '    
' → logprob: -3.8543410301208496
    4. '<|end|>' → logprob: -6.22934103012085
    5. 'return' → logprob: -7.22934103012085
    6. '  
' → logprob: -7.85434103012085
    7. ' return' → logprob: -8.354341506958008
    8. ' 
' → logprob: -8.729341506958008
    9. '        
' → logprob: -9.229341506958008
    10. '   
' → logprob: -9.979341506958008

Token 473: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10918141901493073
    2. 'basis' → logprob: -3.2341814041137695
    3. 'A' → logprob: -3.3591814041137695
    4. 'B' → logprob: -4.2341814041137695
    5. '#' → logprob: -5.3591814041137695
    6. 'b' → logprob: -6.1091814041137695
    7. ' basis' → logprob: -6.3591814041137695
    8. '
' → logprob: -6.3591814041137695
    9. '```' → logprob: -6.6091814041137695
    10. '    
' → logprob: -7.6091814041137695

Token 474: ' #' (ID: 1069)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.690584659576416
    2. 'A' → logprob: -1.190584659576416
    3. 'B' → logprob: -1.940584659576416
    4. '#' (adapté à ' #') → logprob: -3.315584659576416
    5. '   ' → logprob: -4.690584659576416
    6. 're' → logprob: -6.940584659576416
    7. 'base' → logprob: -7.315584659576416
    8. 'x' → logprob: -7.440584659576416
    9. 'b' → logprob: -7.565584659576416
    10. 'bas' → logprob: -7.940584659576416

Token 475: ' Perform' (ID: 36780)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.6973905563354492
    2. 'A' → logprob: -1.0723905563354492
    3. 'B' → logprob: -2.322390556335449
    4. 're' → logprob: -3.947390556335449
    5. '#' → logprob: -4.572390556335449
    6. 'base' → logprob: -5.197390556335449
    7. '   ' → logprob: -5.322390556335449
    8. ' A' → logprob: -5.447390556335449
    9. ' basis' → logprob: -5.447390556335449
    10. 'ga' → logprob: -5.947390556335449

Token 476: ' the' (ID: 290)
  Prédit: 'ga'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ga' → logprob: -0.7179849147796631
    2. ' gaussian' → logprob: -0.7179849147796631
    3. '   ' → logprob: -4.842985153198242
    4. 'A' → logprob: -4.967985153198242
    5. 'basis' → logprob: -5.467985153198242
    6. ' basis' → logprob: -6.342985153198242
    7. ' A' → logprob: -6.342985153198242
    8. ' ga' → logprob: -7.592985153198242
    9. 'Gaussian' → logprob: -7.717985153198242
    10. ' Gaussian' → logprob: -8.092985153198242

Token 477: ' elimination' (ID: 77324)
  Prédit: 'ga'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ga' → logprob: -0.32552334666252136
    2. 'A' → logprob: -1.9505233764648438
    3. 'basis' → logprob: -2.2005233764648438
    4. ' gaussian' → logprob: -4.450523376464844
    5. 're' → logprob: -5.075523376464844
    6. ' A' → logprob: -5.950523376464844
    7. ' basis' → logprob: -6.700523376464844
    8. 'bas' → logprob: -7.700523376464844
    9. 'Gaussian' → logprob: -7.700523376464844
    10. '   ' → logprob: -7.825523376464844

Token 478: ' to' (ID: 316)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7213479280471802
    2. '   ' → logprob: -0.7213479280471802
    3. ' A' → logprob: -4.221347808837891
    4. 'basis' → logprob: -4.971347808837891
    5. ' basis' → logprob: -6.096347808837891
    6. ' on' → logprob: -7.221347808837891
    7. ' with' → logprob: -7.971347808837891
    8. 'result' → logprob: -7.971347808837891
    9. 'with' → logprob: -8.22134780883789
    10. ',' → logprob: -8.34634780883789

Token 479: ' get' (ID: 717)
  Prédit: ' gaussian'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gaussian' → logprob: -0.42012089490890503
    2. 'ga' → logprob: -1.1701209545135498
    3. ' return' → logprob: -4.545120716094971
    4. 'A' → logprob: -4.920120716094971
    5. 'return' → logprob: -5.045120716094971
    6. 'get' → logprob: -6.670120716094971
    7. ' A' → logprob: -6.795120716094971
    8. ' get' → logprob: -6.920120716094971
    9. '   ' → logprob: -6.920120716094971
    10. ' basis' → logprob: -7.045120716094971

Token 480: ' XOR' (ID: 147209)
  Prédit: 'ga'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ga' → logprob: -0.46052196621894836
    2. ' gaussian' → logprob: -1.210521936416626
    3. 'A' → logprob: -3.210521936416626
    4. 'basis' → logprob: -4.460522174835205
    5. 'the' → logprob: -5.085522174835205
    6. ' basis' → logprob: -5.710522174835205
    7. ' A' → logprob: -5.835522174835205
    8. '   ' → logprob: -5.835522174835205
    9. 'np' → logprob: -6.710522174835205
    10. ' the' → logprob: -7.210522174835205

Token 481: ' basis' (ID: 9571)
  Prédit: '_basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_basis' → logprob: -0.7017597556114197
    2. 'basis' → logprob: -1.2017598152160645
    3. ' basis' → logprob: -1.8267598152160645
    4. 'A' → logprob: -4.0767598152160645
    5. '   ' → logprob: -4.0767598152160645
    6. ' A' → logprob: -5.5767598152160645
    7. '_A' → logprob: -6.2017598152160645
    8. '(A' → logprob: -6.7017598152160645
    9. '_b' → logprob: -8.451759338378906
    10. '_' → logprob: -8.451759338378906

Token 482: ' elements' (ID: 8632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5237987041473389
    2. 'A' → logprob: -1.0237987041473389
    3. ' A' → logprob: -3.273798704147339
    4. 'basis' → logprob: -5.148798942565918
    5. ' basis' → logprob: -6.273798942565918
    6. 'B' → logprob: -6.648798942565918
    7. 'result' → logprob: -7.648798942565918
    8. '(A' → logprob: -8.773798942565918
    9. 'b' → logprob: -9.148798942565918
    10. '`' → logprob: -9.273798942565918

Token 483: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4308539927005768
    2. '   ' → logprob: -1.0558539628982544
    3. ' A' → logprob: -6.430853843688965
    4. 'basis' → logprob: -8.430853843688965
    5. '```' → logprob: -9.305853843688965
    6. '`' → logprob: -10.180853843688965
    7. '    
' → logprob: -10.180853843688965
    8. '
' → logprob: -10.805853843688965
    9. 'B' → logprob: -11.055853843688965
    10. '=A' → logprob: -11.305853843688965

Token 484: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6071091294288635
    2. '   ' → logprob: -0.8571091294288635
    3. ' A' → logprob: -3.8571090698242188
    4. 'basis' → logprob: -5.107109069824219
    5. ' basis' → logprob: -6.857109069824219
    6. 'B' → logprob: -7.232109069824219
    7. '```' → logprob: -7.482109069824219
    8. 'result' → logprob: -8.357109069824219
    9. '`' → logprob: -8.482109069824219
    10. 'ga' → logprob: -8.857109069824219

Token 485: ' A' (ID: 355)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.31038179993629456
    2. 'A' (adapté à ' A') → logprob: -2.0603818893432617
    3. 'B' → logprob: -2.9353818893432617
    4. ' basis' → logprob: -3.1853818893432617
    5. 'ga' → logprob: -4.185381889343262
    6. '   ' → logprob: -4.435381889343262
    7. ' A' → logprob: -4.685381889343262
    8. 'base' → logprob: -6.435381889343262
    9. ' B' → logprob: -6.435381889343262
    10. ' gaussian' → logprob: -6.560381889343262

Token 486: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858827963471413
    2. ' =' → logprob: -3.048588275909424
    3. ',' → logprob: -15.298588752746582
    4. '=np' → logprob: -15.673588752746582
    5. '=g' → logprob: -15.923588752746582
    6. '=A' → logprob: -16.173587799072266
    7. '＝' → logprob: -16.423587799072266
    8. '   ' → logprob: -16.423587799072266
    9. ' ' → logprob: -17.048587799072266
    10. 'ga' → logprob: -17.048587799072266

Token 487: ' gaussian' (ID: 158175)
  Prédit: 'ga'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ga' → logprob: -0.4289039373397827
    2. ' gaussian' → logprob: -1.0539039373397827
    3. 'np' → logprob: -9.303903579711914
    4. '   ' → logprob: -10.178903579711914
    5. ' ga' → logprob: -10.803903579711914
    6. ' Gaussian' → logprob: -11.178903579711914
    7. ' np' → logprob: -11.303903579711914
    8. 'Gaussian' → logprob: -11.928903579711914
    9. ' ' → logprob: -12.303903579711914
    10. '  ' → logprob: -12.428903579711914

Token 488: '_el' (ID: 55168)
  Prédit: '_el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_el' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -13.750001907348633
    3. ' _' → logprob: -15.875001907348633
    4. '_en' → logprob: -15.875001907348633
    5. '_em' → logprob: -15.875001907348633
    6. '_x' → logprob: -16.250001907348633
    7. 'el' → logprob: -16.375001907348633
    8. '```' → logprob: -16.500001907348633
    9. '_ele' → logprob: -16.750001907348633
    10. ''_' → logprob: -16.875001907348633

Token 489: 'imination' (ID: 34362)
  Prédit: 'imination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imination' → logprob: -0.0002015139180002734
    2. 'min' → logprob: -8.875201225280762
    3. 'im' → logprob: -10.125201225280762
    4. 'imation' → logprob: -11.125201225280762
    5. 'imin' → logprob: -12.875201225280762
    6. 'imini' → logprob: -14.000201225280762
    7. '_min' → logprob: -14.125201225280762
    8. 'ination' → logprob: -14.375201225280762
    9. 'imi' → logprob: -14.875201225280762
    10. '_im' → logprob: -15.250201225280762

Token 490: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.6405310816480778e-05
    2. '_' → logprob: -11.625016212463379
    3. '_A' → logprob: -13.125016212463379
    4. ' _' → logprob: -13.375016212463379
    5. '(A' → logprob: -13.750016212463379
    6. '```' → logprob: -13.875016212463379
    7. '[' → logprob: -15.375016212463379
    8. '_a' → logprob: -15.375016212463379
    9. '_X' → logprob: -15.750016212463379
    10. '[A' → logprob: -15.875016212463379

Token 491: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0023837340995669365
    2. 'xor' → logprob: -6.502383708953857
    3. '_or' → logprob: -7.627383708953857
    4. '_x' → logprob: -8.252384185791016
    5. 'OR' → logprob: -9.377384185791016
    6. '_' → logprob: -11.252384185791016
    7. 'o' → logprob: -12.252384185791016
    8. '   ' → logprob: -12.752384185791016
    9. 'of' → logprob: -12.877384185791016
    10. '(_' → logprob: -13.002384185791016

Token 492: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.1637164789135568e-05
    2. ' (' → logprob: -11.500011444091797
    3. '(' → logprob: -14.250011444091797
    4. '(np' → logprob: -14.875011444091797
    5. '(
' → logprob: -15.375011444091797
    6. '```' → logprob: -15.750011444091797
    7. ')' → logprob: -17.375011444091797
    8. 'A' → logprob: -17.625011444091797
    9. ')(' → logprob: -17.750011444091797
    10. '(array' → logprob: -18.000011444091797

Token 493: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016074994346126914
    2. ',' → logprob: -9.375161170959473
    3. ')
' → logprob: -10.625161170959473
    4. ',A' → logprob: -10.750161170959473
    5. '(A' → logprob: -11.000161170959473
    6. '   ' → logprob: -12.125161170959473
    7. '[A' → logprob: -12.625161170959473
    8. 'A' → logprob: -12.875161170959473
    9. '[' → logprob: -14.000161170959473
    10. ' )' → logprob: -15.625161170959473

Token 494: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.253277987241745
    2. 'max' → logprob: -2.0032780170440674
    3. '```' → logprob: -2.8782780170440674
    4. 'for' → logprob: -4.628277778625488
    5. 'basis' → logprob: -4.753277778625488
    6. 'result' → logprob: -4.753277778625488
    7. '
' → logprob: -6.253277778625488
    8. '``' → logprob: -7.128277778625488
    9. '    
' → logprob: -7.378277778625488
    10. '#' → logprob: -7.628277778625488

Token 495: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.23469695448875427
    2. '   ' → logprob: -1.8596969842910767
    3. 'result' → logprob: -3.984696865081787
    4. 'for' → logprob: -4.359696865081787
    5. 'res' → logprob: -4.734696865081787
    6. 'best' → logprob: -5.359696865081787
    7. '```' → logprob: -5.484696865081787
    8. 'maximum' → logprob: -6.234696865081787
    9. 'basis' → logprob: -7.109696865081787
    10. 'ans' → logprob: -7.609696865081787

Token 496: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.49913570284843445
    2. 'res' → logprob: -1.6241357326507568
    3. 'result' → logprob: -2.499135732650757
    4. 'for' → logprob: -3.124135732650757
    5. 'best' → logprob: -3.874135732650757
    6. 'basis' → logprob: -3.999135732650757
    7. 'ans' → logprob: -4.249135494232178
    8. 'answer' → logprob: -5.249135494232178
    9. 'A' → logprob: -5.624135494232178
    10. 'maximum' → logprob: -6.624135494232178

Token 497: ' The' (ID: 623)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.27007099986076355
    2. 'res' → logprob: -2.520071029663086
    3. 'result' → logprob: -2.645071029663086
    4. 'for' → logprob: -4.020071029663086
    5. 'basis' → logprob: -4.395071029663086
    6. 'ans' → logprob: -4.520071029663086
    7. 'best' → logprob: -4.770071029663086
    8. 'A' → logprob: -4.895071029663086
    9. 'maximum' → logprob: -5.145071029663086
    10. '#' → logprob: -5.145071029663086

Token 498: ' result' (ID: 1534)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.5813383460044861
    2. 'max' → logprob: -1.8313384056091309
    3. 'result' → logprob: -2.206338405609131
    4. 'res' → logprob: -3.081338405609131
    5. 'best' → logprob: -3.706338405609131
    6. 'for' → logprob: -3.956338405609131
    7. '#' → logprob: -4.581338405609131
    8. '   ' → logprob: -4.581338405609131
    9. 'maximum' → logprob: -4.706338405609131
    10. 'answer' → logprob: -4.831338405609131

Token 499: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.055223796516656876
    2. ' =' → logprob: -2.9302237033843994
    3. 'max' → logprob: -8.43022346496582
    4. 'result' → logprob: -9.93022346496582
    5. '=max' → logprob: -10.68022346496582
    6. 'res' → logprob: -12.18022346496582
    7. ' ' → logprob: -12.30522346496582
    8. ' is' → logprob: -12.30522346496582
    9. '_max' → logprob: -12.55522346496582
    10. 's' → logprob: -12.68022346496582

Token 500: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07576614618301392
    2. 'max' → logprob: -3.575766086578369
    3. 'np' → logprob: -3.575766086578369
    4. ' ' → logprob: -4.950766086578369
    5. 'int' → logprob: -5.825766086578369
    6. 'A' → logprob: -6.450766086578369
    7. '   ' → logprob: -6.450766086578369
    8. ' np' → logprob: -7.075766086578369
    9. 'result' → logprob: -7.075766086578369
    10. ' max' → logprob: -7.325766086578369

Token 501: ' of' (ID: 328)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.531906247138977
    2. '(' → logprob: -2.2819061279296875
    3. '=' → logprob: -2.4069061279296875
    4. '(np' → logprob: -2.9069061279296875
    5. ' =' → logprob: -3.2819061279296875
    6. '([' → logprob: -3.5319061279296875
    7. '+' → logprob: -3.6569061279296875
    8. '   ' → logprob: -3.7819061279296875
    9. '_' → logprob: -4.5319061279296875
    10. '(sum' → logprob: -5.0319061279296875

Token 502: ' fixed' (ID: 13213)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.21370722353458405
    2. 'xor' → logprob: -2.213707208633423
    3. 'odd' → logprob: -3.338707208633423
    4. 'the' → logprob: -4.588707447052002
    5. 'pivot' → logprob: -5.338707447052002
    6. '(A' → logprob: -5.338707447052002
    7. 'max' → logprob: -5.463707447052002
    8. '[' → logprob: -6.213707447052002
    9. '(' → logprob: -6.213707447052002
    10. '[A' → logprob: -6.213707447052002

Token 503: ' bits' (ID: 18189)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4108414649963379
    2. ' A' → logprob: -2.035841464996338
    3. 'basis' → logprob: -3.285841464996338
    4. ' elements' → logprob: -3.660841464996338
    5. 'xor' → logprob: -3.660841464996338
    6. '(A' → logprob: -3.910841464996338
    7. ' basis' → logprob: -4.035841464996338
    8. '   ' → logprob: -4.285841464996338
    9. 'elements' → logprob: -4.410841464996338
    10. 's' → logprob: -4.660841464996338

Token 504: ' (' (ID: 350)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3279714584350586
    2. ' +' → logprob: -2.2029714584350586
    3. '   ' → logprob: -2.3279714584350586
    4. ' plus' → logprob: -3.5779714584350586
    5. 'plus' → logprob: -4.077971458435059
    6. '^' → logprob: -4.327971458435059
    7. '|' → logprob: -4.952971458435059
    8. 'xor' → logprob: -5.702971458435059
    9. ' ^' → logprob: -6.952971458435059
    10. ' xor' → logprob: -7.827971458435059

Token 505: 'odd' (ID: 18303)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.2618473768234253
    2. 'sum' → logprob: -1.5118473768234253
    3. 'odd' → logprob: -4.636847496032715
    4. ' xor' → logprob: -10.011847496032715
    5. '   ' → logprob: -10.511847496032715
    6. '```' → logprob: -10.636847496032715
    7. ')' → logprob: -10.761847496032715
    8. '+' → logprob: -11.511847496032715
    9. '(sum' → logprob: -11.636847496032715
    10. 'x' → logprob: -11.886847496032715

Token 506: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.0011243832996115088
    2. '_digits' → logprob: -7.501124382019043
    3. '_' → logprob: -7.751124382019043
    4. 'digit' → logprob: -9.376124382019043
    5. '_bit' → logprob: -11.251124382019043
    6. ')' → logprob: -11.501124382019043
    7. '   ' → logprob: -12.251124382019043
    8. '_bits' → logprob: -12.251124382019043
    9. '_sum' → logprob: -12.876124382019043
    10. ' ' → logprob: -12.876124382019043

Token 507: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06434168666601181
    2. '+' → logprob: -3.4393417835235596
    3. ' +' → logprob: -3.9393417835235596
    4. '|' → logprob: -4.8143415451049805
    5. ' )' → logprob: -6.8143415451049805
    6. ')+' → logprob: -7.0643415451049805
    7. ' |' → logprob: -8.56434154510498
    8. ',' → logprob: -9.18934154510498
    9. 'sum' → logprob: -9.56434154510498
    10. ' ' → logprob: -10.06434154510498

Token 508: ' plus' (ID: 2932)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.36293044686317444
    2. ' +' → logprob: -1.362930417060852
    3. '   ' → logprob: -3.6129305362701416
    4. '^' → logprob: -4.8629302978515625
    5. ' plus' → logprob: -5.1129302978515625
    6. 'result' → logprob: -6.2379302978515625
    7. '|' → logprob: -6.2379302978515625
    8. 'plus' → logprob: -6.7379302978515625
    9. ' ^' → logprob: -6.8629302978515625
    10. ' ' → logprob: -8.237930297851562

Token 509: ' twice' (ID: 18370)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6154520511627197
    2. 'np' → logprob: -1.1154520511627197
    3. 'sum' → logprob: -3.1154520511627197
    4. 'the' → logprob: -3.3654520511627197
    5. 'A' → logprob: -3.9904520511627197
    6. 'int' → logprob: -4.990451812744141
    7. ' the' → logprob: -5.115451812744141
    8. ' max' → logprob: -5.115451812744141
    9. ' np' → logprob: -5.490451812744141
    10. ' sum' → logprob: -5.865451812744141

Token 510: ' the' (ID: 290)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.4627763628959656
    2. '(np' → logprob: -2.2127764225006104
    3. 'the' → logprob: -2.3377764225006104
    4. 'sum' → logprob: -3.3377764225006104
    5. 'max' → logprob: -3.4627764225006104
    6. 'xor' → logprob: -3.7127764225006104
    7. 'A' → logprob: -4.087776184082031
    8. ' np' → logprob: -4.087776184082031
    9. ' the' → logprob: -4.337776184082031
    10. '(' → logprob: -4.837776184082031

Token 511: ' maximal' (ID: 65414)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5478461980819702
    2. 'np' → logprob: -1.6728461980819702
    3. 'sum' → logprob: -1.6728461980819702
    4. 'maximum' → logprob: -4.17284631729126
    5. 'xor' → logprob: -4.67284631729126
    6. 'A' → logprob: -4.92284631729126
    7. 'result' → logprob: -5.42284631729126
    8. '(max' → logprob: -5.92284631729126
    9. '(np' → logprob: -6.42284631729126
    10. '(A' → logprob: -7.42284631729126

Token 512: ' XOR' (ID: 147209)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.1878129541873932
    2. 'xor' → logprob: -2.8128130435943604
    3. 'value' → logprob: -3.0628130435943604
    4. 'A' → logprob: -3.9378130435943604
    5. 'subset' → logprob: -4.312812805175781
    6. 'basis' → logprob: -4.687812805175781
    7. 'elem' → logprob: -5.062812805175781
    8. 'val' → logprob: -5.812812805175781
    9. ' element' → logprob: -5.812812805175781
    10. 'result' → logprob: -6.062812805175781

Token 513: ' from' (ID: 591)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1205055713653564
    2. '^' → logprob: -1.8705055713653564
    3. 'value' → logprob: -2.3705055713653564
    4. ' ^' → logprob: -2.8705055713653564
    5. 'max' → logprob: -2.8705055713653564
    6. 'sum' → logprob: -3.2455055713653564
    7. 'val' → logprob: -3.4955055713653564
    8. '_' → logprob: -3.4955055713653564
    9. ' result' → logprob: -3.7455055713653564
    10. 'xor' → logprob: -3.7455055713653564

Token 514: ' basis' (ID: 9571)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0679212361574173
    2. 'the' → logprob: -2.9429211616516113
    3. 'basis' → logprob: -4.942921161651611
    4. ' A' → logprob: -5.817921161651611
    5. ' the' → logprob: -7.692921161651611
    6. 'elements' → logprob: -8.06792163848877
    7. '(A' → logprob: -8.56792163848877
    8. ' basis' → logprob: -8.69292163848877
    9. 'remaining' → logprob: -8.69292163848877
    10. 're' → logprob: -8.69292163848877

Token 515: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36460474133491516
    2. 'result' → logprob: -2.1146047115325928
    3. 'sum' → logprob: -3.2396047115325928
    4. 'max' → logprob: -3.3646047115325928
    5. '^' → logprob: -3.7396047115325928
    6. 'basis' → logprob: -3.9896047115325928
    7. 'xor' → logprob: -4.364604949951172
    8. 'res' → logprob: -4.739604949951172
    9. '_sum' → logprob: -5.489604949951172
    10. '_basis' → logprob: -5.614604949951172

Token 516: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3066035509109497
    2. 'result' → logprob: -1.6816035509109497
    3. 'res' → logprob: -3.18160343170166
    4. 'max' → logprob: -4.18160343170166
    5. '```' → logprob: -4.55660343170166
    6. ' result' → logprob: -5.18160343170166
    7. ' res' → logprob: -6.80660343170166
    8. '``' → logprob: -7.30660343170166
    9. 'x' → logprob: -7.43160343170166
    10. '^' → logprob: -7.68160343170166

Token 517: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.33987224102020264
    2. 'res' (adapté à ' res') → logprob: -1.7148722410202026
    3. 'max' → logprob: -2.339872360229492
    4. '   ' → logprob: -5.464872360229492
    5. '
' → logprob: -6.464872360229492
    6. 'ans' → logprob: -6.714872360229492
    7. ' result' → logprob: -6.964872360229492
    8. 'basis' → logprob: -7.464872360229492
    9. '```' → logprob: -7.589872360229492
    10. 'x' → logprob: -7.589872360229492

Token 518: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05491252616047859
    2. '=' → logprob: -2.929912567138672
    3. '_' → logprob: -10.929912567138672
    4. ' +=' → logprob: -12.554912567138672
    5. ',' → logprob: -12.679912567138672
    6. ' ' → logprob: -13.179912567138672
    7. '   ' → logprob: -13.804912567138672
    8. '  ' → logprob: -14.054912567138672
    9. ' |=' → logprob: -14.554912567138672
    10. 's' → logprob: -14.554912567138672

Token 519: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20390141010284424
    2. 'xor' → logprob: -1.9539014101028442
    3. 'sum' → logprob: -3.4539012908935547
    4. 'np' → logprob: -5.203901290893555
    5. 'max' → logprob: -5.953901290893555
    6. ' ' → logprob: -6.578901290893555
    7. ' xor' → logprob: -7.578901290893555
    8. 'int' → logprob: -7.828901290893555
    9. '(' → logprob: -8.578901290893555
    10. 'x' → logprob: -8.953901290893555

Token 520: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005524373147636652
    2. 'odd' → logprob: -6.005524158477783
    3. '(A' → logprob: -6.505524158477783
    4. '([' → logprob: -6.755524158477783
    5. '(x' → logprob: -9.255524635314941
    6. 'A' → logprob: -9.380524635314941
    7. '((' → logprob: -9.630524635314941
    8. '(res' → logprob: -10.505524635314941
    9. 'xor' → logprob: -10.630524635314941
    10. '(i' → logprob: -10.755524635314941

Token 521: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -2.522638169466518e-05
    2. 'od' → logprob: -11.500024795532227
    3. ' odd' → logprob: -12.125024795532227
    4. 'A' → logprob: -12.500024795532227
    5. '(' → logprob: -12.750024795532227
    6. '[' → logprob: -13.375024795532227
    7. 'i' → logprob: -14.625024795532227
    8. 'xor' → logprob: -15.375024795532227
    9. '(i' → logprob: -15.500024795532227
    10. '[i' → logprob: -15.625024795532227

Token 522: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -1.2664456789934775e-06
    2. 'digit' → logprob: -13.750000953674316
    3. '_digits' → logprob: -16.500001907348633
    4. '-digit' → logprob: -17.500001907348633
    5. 'Digit' → logprob: -17.500001907348633
    6. '_bit' → logprob: -17.625001907348633
    7. '_' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.125001907348633
    9. '_d' → logprob: -19.125001907348633
    10. '```' → logprob: -19.125001907348633

Token 523: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24290765821933746
    2. '+' → logprob: -1.8679076433181763
    3. ' +' → logprob: -3.117907762527466
    4. ')
' → logprob: -5.367907524108887
    5. ')+' → logprob: -5.492907524108887
    6. '^' → logprob: -5.742907524108887
    7. '   ' → logprob: -5.992907524108887
    8. ' ^' → logprob: -6.617907524108887
    9. ' )' → logprob: -7.992907524108887
    10. '+A' → logprob: -8.742907524108887

Token 524: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9248965382575989
    2. '+' → logprob: -1.424896478652954
    3. '^' → logprob: -1.799896478652954
    4. '   ' → logprob: -2.424896478652954
    5. 'for' → logprob: -3.549896478652954
    6. ' for' → logprob: -3.799896478652954
    7. ' ^' → logprob: -3.799896478652954
    8. ' +' → logprob: -4.049896717071533
    9. 'res' → logprob: -5.049896717071533
    10. 'max' → logprob: -5.424896717071533

Token 525: ' ' (ID: 220)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -1.1386091709136963
    2. 'max' → logprob: -1.5136091709136963
    3. 'int' → logprob: -1.7636091709136963
    4. '2' → logprob: -2.2636091709136963
    5. '(A' → logprob: -2.3886091709136963
    6. '(np' → logprob: -3.5136091709136963
    7. '(int' → logprob: -4.138608932495117
    8. '(max' → logprob: -4.263608932495117
    9. '(' → logprob: -4.888608932495117
    10. ' np' → logprob: -5.138608932495117

Token 526: '2' (ID: 17)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7610706686973572
    2. 'np' → logprob: -1.386070728302002
    3. 'max' → logprob: -1.386070728302002
    4. '2' → logprob: -5.011070728302002
    5. '(A' → logprob: -5.011070728302002
    6. '(np' → logprob: -5.261070728302002
    7. 'A' → logprob: -5.636070728302002
    8. 'sum' → logprob: -5.761070728302002
    9. '(max' → logprob: -5.761070728302002
    10. '(int' → logprob: -5.761070728302002

Token 527: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0031131880823522806
    2. ' *' → logprob: -5.878113269805908
    3. '**' → logprob: -8.75311279296875
    4. '*np' → logprob: -9.25311279296875
    5. '^' → logprob: -10.12811279296875
    6. '*(' → logprob: -12.00311279296875
    7. '*object' → logprob: -12.75311279296875
    8. '*A' → logprob: -13.62811279296875
    9. '*
' → logprob: -13.87811279296875
    10. ' ' → logprob: -14.12811279296875

Token 528: ' (' (ID: 350)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.251995712518692
    2. 'np' → logprob: -1.8769956827163696
    3. 'int' → logprob: -3.001995801925659
    4. '(max' → logprob: -4.75199556350708
    5. 'A' → logprob: -5.37699556350708
    6. '(np' → logprob: -5.87699556350708
    7. 'sum' → logprob: -6.37699556350708
    8. '(A' → logprob: -6.62699556350708
    9. '(' → logprob: -8.251996040344238
    10. '(int' → logprob: -8.251996040344238

Token 529: 'np' (ID: 12766)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.40549278259277344
    2. 'np' → logprob: -1.2804927825927734
    3. 'A' → logprob: -3.4054927825927734
    4. 'int' → logprob: -4.030492782592773
    5. 'sum' → logprob: -6.655492782592773
    6. 'ga' → logprob: -6.780492782592773
    7. '(max' → logprob: -7.280492782592773
    8. '(np' → logprob: -7.530492782592773
    9. '(A' → logprob: -8.155492782592773
    10. 'xor' → logprob: -9.030492782592773

Token 530: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.2585151195526123
    2. '.max' → logprob: -1.5085151195526123
    3. '.am' → logprob: -5.133515357971191
    4. '.maximum' → logprob: -8.008515357971191
    5. 'bit' → logprob: -9.008515357971191
    6. 'max' → logprob: -9.383515357971191
    7. '.argmax' → logprob: -9.633515357971191
    8. '_bit' → logprob: -11.133515357971191
    9. '.' → logprob: -11.258515357971191
    10. '.ndarray' → logprob: -11.508515357971191

Token 531: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -2.129266067640856e-05
    2. 'xor' → logprob: -11.250020980834961
    3. 'bit' → logprob: -12.000020980834961
    4. '_x' → logprob: -14.500020980834961
    5. 'w' → logprob: -14.875020980834961
    6. 'x' → logprob: -15.000020980834961
    7. 'wis' → logprob: -15.000020980834961
    8. '_bit' → logprob: -15.750020980834961
    9. 'array' → logprob: -16.12502098083496
    10. '_array' → logprob: -16.87502098083496

Token 532: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00043555660522542894
    2. 'xor' → logprob: -7.7504353523254395
    3. 'reduce' → logprob: -13.250435829162598
    4. '^' → logprob: -13.500435829162598
    5. '_or' → logprob: -14.750435829162598
    6. '\' → logprob: -15.000435829162598
    7. '_reduce' → logprob: -15.875435829162598
    8. 'or' → logprob: -16.00043487548828
    9. '_max' → logprob: -16.25043487548828
    10. 'x' → logprob: -16.25043487548828

Token 533: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.02262822724878788
    2. 'xor' → logprob: -3.8976283073425293
    3. 'nor' → logprob: -6.772628307342529
    4. '_or' → logprob: -8.147627830505371
    5. '_x' → logprob: -8.272627830505371
    6. 'x' → logprob: -9.147627830505371
    7. 'r' → logprob: -10.022627830505371
    8. 'ror' → logprob: -10.647627830505371
    9. 'np' → logprob: -10.772627830505371
    10. 'ors' → logprob: -11.022627830505371

Token 534: '.reduce' (ID: 49441)
  Prédit: '.reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reduce' → logprob: -0.00021021578868385404
    2. 'reduce' → logprob: -8.50020980834961
    3. '.' → logprob: -12.75020980834961
    4. ' .' → logprob: -13.87520980834961
    5. 'np' → logprob: -14.37520980834961
    6. 'A' → logprob: -14.75020980834961
    7. '[np' → logprob: -15.12520980834961
    8. '(np' → logprob: -15.25020980834961
    9. '.max' → logprob: -15.50020980834961
    10. '...' → logprob: -15.50020980834961

Token 535: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00026872646412812173
    2. 'A' → logprob: -8.250268936157227
    3. '(' → logprob: -12.625268936157227
    4. ')' → logprob: -14.000268936157227
    5. '[A' → logprob: -14.000268936157227
    6. '((' → logprob: -14.500268936157227
    7. '(
' → logprob: -14.625268936157227
    8. '([' → logprob: -14.750268936157227
    9. ')(' → logprob: -14.875268936157227
    10. ' A' → logprob: -15.375268936157227

Token 536: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5278294682502747
    2. '))' → logprob: -0.9028294682502747
    3. '[A' → logprob: -6.027829647064209
    4. '[' → logprob: -7.027829647064209
    5. ')))' → logprob: -7.527829647064209
    6. '(A' → logprob: -8.65282917022705
    7. '[np' → logprob: -8.65282917022705
    8. ')
' → logprob: -9.02782917022705
    9. '))
' → logprob: -9.27782917022705
    10. '^' → logprob: -9.52782917022705

Token 537: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.032028283923864365
    2. '
' → logprob: -4.0320281982421875
    3. '   ' → logprob: -4.5320281982421875
    4. ' return' → logprob: -6.0320281982421875
    5. '    
' → logprob: -7.9070281982421875
    6. '```' → logprob: -9.532028198242188
    7. '\n' → logprob: -9.657028198242188
    8. '	return' → logprob: -10.157028198242188
    9. ':return' → logprob: -10.907028198242188
    10. '  
' → logprob: -10.907028198242188

Token 538: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.032362569123506546
    2. '   ' → logprob: -3.532362461090088
    3. ' return' → logprob: -6.282362461090088
    4. '
' → logprob: -7.782362461090088
    5. '```' → logprob: -8.282362937927246
    6. '	return' → logprob: -10.407362937927246
    7. '    
' → logprob: -10.407362937927246
    8. ':return' → logprob: -12.157362937927246
    9. '  
' → logprob: -14.157362937927246
    10. '_return' → logprob: -14.657362937927246

Token 539: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00317783304490149
    2. ' res' → logprob: -5.753177642822266
    3. 'int' → logprob: -16.003177642822266
    4. '(res' → logprob: -18.253177642822266
    5. '	res' → logprob: -19.378177642822266
    6. '   ' → logprob: -19.878177642822266
    7. '$res' → logprob: -20.378177642822266
    8. ' int' → logprob: -21.378177642822266
    9. '```' → logprob: -22.003177642822266
    10. '_res' → logprob: -22.003177642822266

Token 540: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 541: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5238031148910522
    2. '<|end|>' → logprob: -1.3988031148910522
    3. '#' → logprob: -2.273803234100342
    4. '```' → logprob: -3.648803234100342
    5. '[' → logprob: -5.023803234100342
    6. ',' → logprob: -5.273803234100342
    7. '.' → logprob: -5.398803234100342
    8. '<|end|>' → logprob: -5.648803234100342
    9. '(' → logprob: -5.898803234100342
    10. ':' → logprob: -6.148803234100342

Token 542: ' main' (ID: 2758)
  Prédit: ' maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.9031868577003479
    2. ' max' → logprob: -1.0281867980957031
    3. 'max' → logprob: -2.278186798095703
    4. ' main' → logprob: -3.403186798095703
    5. 'maximum' → logprob: -3.528186798095703
    6. ' find' → logprob: -3.653186798095703
    7. ' maximize' → logprob: -4.153186798095703
    8. ' maximal' → logprob: -4.528186798095703
    9. ' subset' → logprob: -5.403186798095703
    10. ' calculate' → logprob: -5.528186798095703

Token 543: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.392824874026701e-05
    2. '():
' → logprob: -10.37503433227539
    3. ' ():' → logprob: -13.12503433227539
    4. '()' → logprob: -15.50003433227539
    5. '():
' → logprob: -15.62503433227539
    6. '():

' → logprob: -16.37503433227539
    7. '()>' → logprob: -16.62503433227539
    8. '(' → logprob: -16.87503433227539
    9. '_' → logprob: -17.50003433227539
    10. '()">' → logprob: -18.50003433227539

Token 544: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3342311978340149
    2. 'import' → logprob: -1.8342311382293701
    3. ' import' → logprob: -2.20923113822937
    4. '```' → logprob: -4.459231376647949
    5. ' A' → logprob: -7.209231376647949
    6. 'A' → logprob: -7.209231376647949
    7. '	import' → logprob: -7.959231376647949
    8. ' input' → logprob: -8.33423137664795
    9. 'input' → logprob: -8.58423137664795
    10. '<|end|>' → logprob: -8.83423137664795

Token 545: ' """
' (ID: 7037)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7892341613769531
    2. ' import' → logprob: -1.0392341613769531
    3. 'n' → logprob: -2.414234161376953
    4. ' n' → logprob: -2.539234161376953
    5. '```' → logprob: -4.164234161376953
    6. '   ' → logprob: -4.914234161376953
    7. ' input' → logprob: -8.289234161376953
    8. 'input' → logprob: -8.289234161376953
    9. 'N' → logprob: -9.039234161376953
    10. ' N' → logprob: -9.789234161376953

Token 546: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20028875768184662
    2. 'import' → logprob: -2.075288772583008
    3. ' import' → logprob: -2.950288772583008
    4. ' n' → logprob: -6.450288772583008
    5. 'n' → logprob: -6.950288772583008
    6. ' input' → logprob: -7.700288772583008
    7. 'input' → logprob: -8.200288772583008
    8. '    ' → logprob: -9.075288772583008
    9. 'int' → logprob: -9.325288772583008
    10. ' ' → logprob: -10.700288772583008

Token 547: ' Main' (ID: 7956)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.325824111700058
    2. 'import' → logprob: -2.450824022293091
    3. ' import' → logprob: -2.825824022293091
    4. ' n' → logprob: -2.950824022293091
    5. 'n' → logprob: -3.075824022293091
    6. ' input' → logprob: -5.07582426071167
    7. 'input' → logprob: -5.20082426071167
    8. '#' → logprob: -5.20082426071167
    9. ' A' → logprob: -5.95082426071167
    10. 'A' → logprob: -6.20082426071167

Token 548: ' execution' (ID: 20860)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02624351717531681
    2. '():
' → logprob: -3.7762434482574463
    3. '()' → logprob: -5.901243686676025
    4. 'def' → logprob: -8.401243209838867
    5. '():
' → logprob: -11.276243209838867
    6. '()>' → logprob: -13.151243209838867
    7. ':' → logprob: -13.151243209838867
    8. '_' → logprob: -13.401243209838867
    9. ' ():' → logprob: -13.401243209838867
    10. '()
' → logprob: -13.401243209838867

Token 549: ' function' (ID: 1114)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.08121798932552338
    2. '():' → logprob: -2.5812180042266846
    3. 'def' → logprob: -6.8312177658081055
    4. '   ' → logprob: -7.2062177658081055
    5. '()' → logprob: -7.8312177658081055
    6. ':' → logprob: -10.331217765808105
    7. '()
' → logprob: -10.956217765808105
    8. ':
' → logprob: -11.206217765808105
    9. '():
' → logprob: -11.456217765808105
    10. '_' → logprob: -11.956217765808105

Token 550: '.' (ID: 13)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.23847486078739166
    2. '():
' → logprob: -1.6134748458862305
    3. ':' → logprob: -5.1134748458862305
    4. '   ' → logprob: -5.2384748458862305
    5. 'def' → logprob: -7.4884748458862305
    6. '```' → logprob: -7.6134748458862305
    7. '()' → logprob: -7.8634748458862305
    8. ':
' → logprob: -9.23847484588623
    9. '
' → logprob: -10.61347484588623
    10. '<|end|>' → logprob: -10.73847484588623

Token 551: ' Reads' (ID: 88839)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004826441872864962
    2. 'def' → logprob: -5.879826545715332
    3. '```' → logprob: -7.254826545715332
    4. '
' → logprob: -7.754826545715332
    5. 'import' → logprob: -7.879826545715332
    6. '    
' → logprob: -8.504826545715332
    7. '<|end|>' → logprob: -9.879826545715332
    8. ' ' → logprob: -10.004826545715332
    9. ':' → logprob: -10.129826545715332
    10. '#' → logprob: -10.879826545715332

Token 552: ' input' (ID: 3422)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2546159029006958
    2. 'n' → logprob: -2.3796157836914062
    3. 'input' → logprob: -2.6296157836914062
    4. '```' → logprob: -3.2546157836914062
    5. '   ' → logprob: -4.254615783691406
    6. 'from' → logprob: -5.879615783691406
    7. 'int' → logprob: -6.379615783691406
    8. ' input' → logprob: -6.504615783691406
    9. 'the' → logprob: -7.754615783691406
    10. ' import' → logprob: -8.254615783691406

Token 553: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2714097499847412
    2. '   ' → logprob: -2.146409749984741
    3. ',' → logprob: -2.896409749984741
    4. '```' → logprob: -4.02140998840332
    5. '(),' → logprob: -4.52140998840332
    6. '().' → logprob: -4.77140998840332
    7. '()
' → logprob: -5.14640998840332
    8. 'import' → logprob: -5.52140998840332
    9. '.' → logprob: -5.64640998840332
    10. ' and' → logprob: -5.89640998840332

Token 554: ' processes' (ID: 14340)
  Prédit: ' processes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' processes' → logprob: -0.7422714829444885
    2. '   ' → logprob: -0.9922714829444885
    3. 'process' → logprob: -2.6172714233398438
    4. 'n' → logprob: -2.6172714233398438
    5. ' n' → logprob: -5.742271423339844
    6. ' parses' → logprob: -6.367271423339844
    7. 't' → logprob: -8.367271423339844
    8. '    ' → logprob: -8.367271423339844
    9. ' process' → logprob: -8.492271423339844
    10. 'outputs' → logprob: -8.617271423339844

Token 555: ' data' (ID: 1238)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2761634588241577
    2. 'data' → logprob: -1.4011634588241577
    3. 'import' → logprob: -1.7761634588241577
    4. ' data' → logprob: -2.0261635780334473
    5. '   ' → logprob: -2.5261635780334473
    6. 'n' → logprob: -2.9011635780334473
    7. 'input' → logprob: -5.026163578033447
    8. '()' → logprob: -5.651163578033447
    9. 'and' → logprob: -5.651163578033447
    10. 'the' → logprob: -5.776163578033447

Token 556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004753238055855036
    2. '   ' → logprob: -5.379753112792969
    3. 'and' → logprob: -9.379753112792969
    4. '```' → logprob: -10.629753112792969
    5. ' ,' → logprob: -11.879753112792969
    6. ' and' → logprob: -11.879753112792969
    7. ',
' → logprob: -13.004753112792969
    8. '(),' → logprob: -13.504753112792969
    9. ',and' → logprob: -13.629753112792969
    10. 'import' → logprob: -13.629753112792969

Token 557: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12567782402038574
    2. 'and' → logprob: -2.7506778240203857
    3. ' and' → logprob: -3.0006778240203857
    4. 'outputs' → logprob: -6.375678062438965
    5. ' processes' → logprob: -7.000678062438965
    6. ' calculates' → logprob: -7.500678062438965
    7. 'import' → logprob: -8.375678062438965
    8. '```' → logprob: -9.125678062438965
    9. 'n' → logprob: -9.250678062438965
    10. 'imports' → logprob: -9.250678062438965

Token 558: ' prints' (ID: 33767)
  Prédit: 'prints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prints' → logprob: -0.41961395740509033
    2. 'outputs' → logprob: -1.7946139574050903
    3. ' prints' → logprob: -2.169613838195801
    4. '   ' → logprob: -3.419613838195801
    5. 'comput' → logprob: -4.794613838195801
    6. 'print' → logprob: -5.169613838195801
    7. ' outputs' → logprob: -5.294613838195801
    8. 'produ' → logprob: -5.419613838195801
    9. ' calculates' → logprob: -6.544613838195801
    10. ' produces' → logprob: -6.794613838195801

Token 559: ' result' (ID: 1534)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9611000418663025
    2. '   ' → logprob: -1.0861001014709473
    3. 'results' → logprob: -1.7111001014709473
    4. 'the' → logprob: -2.8361001014709473
    5. 'result' → logprob: -3.9611001014709473
    6. 'output' → logprob: -4.586100101470947
    7. ' results' → logprob: -5.586100101470947
    8. '(' → logprob: -6.211100101470947
    9. ' the' → logprob: -6.586100101470947
    10. 'input' → logprob: -6.836100101470947

Token 560: '.
' (ID: 558)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04789432883262634
    2. '():
' → logprob: -3.422894239425659
    3. '   ' → logprob: -4.547894477844238
    4. ':' → logprob: -5.797894477844238
    5. '()' → logprob: -8.172894477844238
    6. '```' → logprob: -9.047894477844238
    7. ':
' → logprob: -9.797894477844238
    8. '
' → logprob: -10.922894477844238
    9. '.' → logprob: -10.922894477844238
    10. '):' → logprob: -11.547894477844238

Token 561: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006364924367517233
    2. '```' → logprob: -5.131364822387695
    3. '    
' → logprob: -9.006364822387695
    4. '<|end|>' → logprob: -9.381364822387695
    5. 'import' → logprob: -9.631364822387695
    6. '
' → logprob: -9.756364822387695
    7. 'def' → logprob: -10.381364822387695
    8. '``' → logprob: -11.006364822387695
    9. ':' → logprob: -11.256364822387695
    10. ')' → logprob: -11.756364822387695

Token 562: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015075240284204483
    2. '```' → logprob: -4.265075206756592
    3. 'def' → logprob: -8.01507568359375
    4. '
' → logprob: -8.89007568359375
    5. 'import' → logprob: -9.14007568359375
    6. ')' → logprob: -9.26507568359375
    7. ':' → logprob: -9.76507568359375
    8. '    
' → logprob: -10.14007568359375
    9. '):' → logprob: -10.14007568359375
    10. 'input' → logprob: -10.64007568359375

Token 563: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15470987558364868
    2. '```' → logprob: -2.404709815979004
    3. 'import' → logprob: -3.154709815979004
    4. ' import' → logprob: -5.404709815979004
    5. ' n' → logprob: -5.779709815979004
    6. 'n' → logprob: -5.904709815979004
    7. '``' → logprob: -9.779709815979004
    8. '`' → logprob: -11.529709815979004
    9. 'input' → logprob: -12.154709815979004
    10. ' lines' → logprob: -13.154709815979004

Token 564: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012219411320984364
    2. 'import' → logprob: -5.012219429016113
    3. '   ' → logprob: -5.512219429016113
    4. '```' → logprob: -7.262219429016113
    5. 'N' → logprob: -7.512219429016113
    6. ' n' → logprob: -8.512219429016113
    7. ' import' → logprob: -13.387219429016113
    8. '``' → logprob: -14.887219429016113
    9. 'num' → logprob: -15.137219429016113
    10. '	n' → logprob: -15.512219429016113

Token 565: ' Read' (ID: 5405)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.26731181144714355
    2. 'import' → logprob: -1.5173118114471436
    3. ' n' → logprob: -4.642312049865723
    4. ' import' → logprob: -5.642312049865723
    5. 'N' → logprob: -6.767312049865723
    6. '   ' → logprob: -7.017312049865723
    7. 't' → logprob: -11.142312049865723
    8. '```' → logprob: -11.892312049865723
    9. ' N' → logprob: -12.017312049865723
    10. 'input' → logprob: -12.767312049865723

Token 566: ' the' (ID: 290)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014709988608956337
    2. ' n' → logprob: -4.264709949493408
    3. 'N' → logprob: -8.264710426330566
    4. 'import' → logprob: -8.389710426330566
    5. '   ' → logprob: -10.139710426330566
    6. 'int' → logprob: -11.389710426330566
    7. '```' → logprob: -12.014710426330566
    8. ' N' → logprob: -13.014710426330566
    9. 't' → logprob: -13.889710426330566
    10. 'input' → logprob: -14.264710426330566

Token 567: ' number' (ID: 2086)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00035751116229221225
    2. ' n' → logprob: -8.375357627868652
    3. 'import' → logprob: -9.875357627868652
    4. 'number' → logprob: -9.875357627868652
    5. 'N' → logprob: -11.250357627868652
    6. 'int' → logprob: -12.500357627868652
    7. 'num' → logprob: -12.625357627868652
    8. ' number' → logprob: -13.500357627868652
    9. 't' → logprob: -13.625357627868652
    10. '```' → logprob: -14.375357627868652

Token 568: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.3828638792037964
    2. 'of' → logprob: -1.5078638792037964
    3. '=' → logprob: -3.132863998413086
    4. ' =' → logprob: -4.382863998413086
    5. '=int' → logprob: -4.382863998413086
    6. '_line' → logprob: -5.507863998413086
    7. '_token' → logprob: -5.632863998413086
    8. '()' → logprob: -5.882863998413086
    9. ' of' → logprob: -5.882863998413086
    10. 's' → logprob: -6.007863998413086

Token 569: ' elements' (ID: 8632)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.5642557144165039
    2. 'n' → logprob: -1.439255714416504
    3. ' elements' → logprob: -2.439255714416504
    4. 'test' → logprob: -3.064255714416504
    5. ' test' → logprob: -3.064255714416504
    6. ' n' → logprob: -4.814255714416504
    7. 'items' → logprob: -6.064255714416504
    8. 'cases' → logprob: -7.814255714416504
    9. ' integers' → logprob: -7.814255714416504
    10. 's' → logprob: -7.939255714416504

Token 570: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.39081060886383057
    2. '   ' → logprob: -1.1408106088638306
    3. '```' → logprob: -5.765810489654541
    4. 'N' → logprob: -7.765810489654541
    5. ' n' → logprob: -8.3908109664917
    6. '
' → logprob: -9.3908109664917
    7. ',' → logprob: -10.0158109664917
    8. ' =' → logprob: -12.1408109664917
    9. '_n' → logprob: -12.7658109664917
    10. '``' → logprob: -13.0158109664917

Token 571: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015397513285279274
    2. '   ' → logprob: -4.265397548675537
    3. ' n' → logprob: -7.265397548675537
    4. 'N' → logprob: -7.765397548675537
    5. '```' → logprob: -9.140397071838379
    6. '(n' → logprob: -14.390397071838379
    7. '
' → logprob: -14.515397071838379
    8. ' N' → logprob: -14.765397071838379
    9. '_n' → logprob: -15.140397071838379
    10. ',' → logprob: -15.515397071838379

Token 572: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018239261582493782
    2. ' n' → logprob: -4.268239498138428
    3. '   ' → logprob: -5.518239498138428
    4. 'N' (adapté à ' N') → logprob: -10.39323902130127
    5. '```' → logprob: -10.76823902130127
    6. 'num' → logprob: -14.01823902130127
    7. '	n' → logprob: -14.14323902130127
    8. ' ' → logprob: -14.26823902130127
    9. '`' → logprob: -14.76823902130127
    10. ' N' → logprob: -15.64323902130127

Token 573: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269364058971405
    2. '=' → logprob: -2.126936435699463
    3. '=int' → logprob: -12.251935958862305
    4. '   ' → logprob: -13.126935958862305
    5. ',' → logprob: -14.001935958862305
    6. ' ' → logprob: -15.251935958862305
    7. '=input' → logprob: -15.376935958862305
    8. ' ' → logprob: -15.376935958862305
    9. '```' → logprob: -17.001935958862305
    10. ' =
' → logprob: -17.876935958862305

Token 574: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01814994215965271
    2. ' int' → logprob: -4.0181498527526855
    3. '[int' → logprob: -20.518150329589844
    4. '(int' → logprob: -20.643150329589844
    5. '=int' → logprob: -21.143150329589844
    6. '<int' → logprob: -22.018150329589844
    7. '	int' → logprob: -22.143150329589844
    8. '   ' → logprob: -22.518150329589844
    9. '```' → logprob: -23.768150329589844
    10. ' ' → logprob: -24.143150329589844

Token 575: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04860304668545723
    2. 'input' → logprob: -3.048603057861328
    3. '(' → logprob: -11.173603057861328
    4. ' input' → logprob: -13.423603057861328
    5. '()' → logprob: -16.923603057861328
    6. '=input' → logprob: -16.923603057861328
    7. '(
' → logprob: -18.548603057861328
    8. '	input' → logprob: -18.923603057861328
    9. ',input' → logprob: -19.173603057861328
    10. ' (' → logprob: -19.423603057861328

Token 576: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014362583868205547
    2. '()' → logprob: -4.264362812042236
    3. '().' → logprob: -8.639362335205078
    4. ')' → logprob: -11.764362335205078
    5. '())
' → logprob: -11.889362335205078
    6. '(' → logprob: -12.639362335205078
    7. ' ())' → logprob: -13.264362335205078
    8. '();)' → logprob: -14.014362335205078
    9. '()))' → logprob: -14.764362335205078
    10. '()),' → logprob: -15.014362335205078

Token 577: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.20411118865013123
    2. '   ' → logprob: -1.7041112184524536
    3. 'arr' → logprob: -6.329111099243164
    4. '```' → logprob: -7.454111099243164
    5. ' A' → logprob: -8.829111099243164
    6. 'data' → logprob: -9.204111099243164
    7. 'numbers' → logprob: -10.579111099243164
    8. 'array' → logprob: -10.704111099243164
    9. '#' → logprob: -11.454111099243164
    10. 'a' → logprob: -12.329111099243164

Token 578: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0006913475226610899
    2. '   ' → logprob: -8.250691413879395
    3. ' A' → logprob: -8.875691413879395
    4. '```' → logprob: -9.000691413879395
    5. '#' (adapté à ' #') → logprob: -9.125691413879395
    6. 'arr' → logprob: -11.000691413879395
    7. 'data' → logprob: -11.375691413879395
    8. '
' → logprob: -11.500691413879395
    9. 'import' → logprob: -11.500691413879395
    10. '    
' → logprob: -13.125691413879395

Token 579: ' Read' (ID: 5405)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.015395049005746841
    2. 'arr' → logprob: -4.265395164489746
    3. 'data' → logprob: -7.765395164489746
    4. 'elements' → logprob: -8.390395164489746
    5. 'numbers' → logprob: -8.765395164489746
    6. 'values' → logprob: -8.765395164489746
    7. 'import' → logprob: -8.890395164489746
    8. 'nums' → logprob: -9.890395164489746
    9. ' A' → logprob: -10.140395164489746
    10. 'array' → logprob: -11.140395164489746

Token 580: ' the' (ID: 290)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6340367197990417
    2. 'arr' → logprob: -1.1340367794036865
    3. 'np' → logprob: -2.3840367794036865
    4. ' A' → logprob: -3.7590367794036865
    5. ' np' → logprob: -4.634036540985107
    6. 'array' → logprob: -4.884036540985107
    7. 'numbers' → logprob: -5.509036540985107
    8. ' arr' → logprob: -5.759036540985107
    9. ' array' → logprob: -5.884036540985107
    10. 'values' → logprob: -6.634036540985107

Token 581: ' integer' (ID: 16336)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4913889467716217
    2. 'arr' → logprob: -1.7413889169692993
    3. 'array' → logprob: -2.241389036178589
    4. 'numbers' → logprob: -2.616389036178589
    5. 'elements' → logprob: -4.11638879776001
    6. 'values' → logprob: -5.24138879776001
    7. 'np' → logprob: -5.36638879776001
    8. 'data' → logprob: -5.86638879776001
    9. 'import' → logprob: -6.49138879776001
    10. ' elements' → logprob: -7.11638879776001

Token 582: ' array' (ID: 2644)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.12054205685853958
    2. ' array' → logprob: -2.870542049407959
    3. 'arr' → logprob: -3.370542049407959
    4. 'list' → logprob: -4.870542049407959
    5. '_array' → logprob: -4.995542049407959
    6. '_list' → logprob: -5.995542049407959
    7. 's' → logprob: -5.995542049407959
    8. 'A' → logprob: -6.370542049407959
    9. 'values' → logprob: -7.745542049407959
    10. ' list' → logprob: -8.245542526245117

Token 583: ' as' (ID: 472)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.003119722241535783
    2. ' A' → logprob: -6.003119945526123
    3. '   ' → logprob: -7.378119945526123
    4. '
' → logprob: -11.628119468688965
    5. 'arr' → logprob: -12.878119468688965
    6. '```' → logprob: -12.878119468688965
    7. ',' → logprob: -13.253119468688965
    8. '	A' → logprob: -14.378119468688965
    9. '(A' → logprob: -14.628119468688965
    10. ',A' → logprob: -14.628119468688965

Token 584: ' numpy' (ID: 19529)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.008619658648967743
    2. ' np' → logprob: -4.758619785308838
    3. 'list' → logprob: -12.25861930847168
    4. ' list' → logprob: -15.25861930847168
    5. 'numpy' → logprob: -16.50861930847168
    6. '=np' → logprob: -18.88361930847168
    7. ' numpy' → logprob: -18.88361930847168
    8. '(np' → logprob: -19.38361930847168
    9. '[np' → logprob: -20.00861930847168
    10. '```' → logprob: -20.13361930847168

Token 585: ' array' (ID: 2644)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.2520255446434021
    2. ' array' → logprob: -1.5020256042480469
    3. 'arr' → logprob: -9.627025604248047
    4. '(array' → logprob: -11.377025604248047
    5. '.array' → logprob: -11.877025604248047
    6. 'np' → logprob: -12.002025604248047
    7. ' np' → logprob: -13.502025604248047
    8. '```' → logprob: -13.752025604248047
    9. '(np' → logprob: -14.127025604248047
    10. '_array' → logprob: -14.252025604248047

Token 586: ' of' (ID: 328)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.004320691339671612
    2. '   ' → logprob: -6.0043206214904785
    3. ' A' → logprob: -6.5043206214904785
    4. 'import' → logprob: -9.004321098327637
    5. '```' → logprob: -9.254321098327637
    6. 'arr' → logprob: -10.129321098327637
    7. '(A' → logprob: -10.254321098327637
    8. ',' → logprob: -11.379321098327637
    9. '	A' → logprob: -11.379321098327637
    10. '
' → logprob: -12.004321098327637

Token 587: ' int' (ID: 677)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.5976008772850037
    2. 'int' → logprob: -0.8476008772850037
    3. 'dtype' → logprob: -3.8476009368896484
    4. 'ints' → logprob: -9.847600936889648
    5. 'uint' → logprob: -11.097600936889648
    6. '[int' → logprob: -11.347600936889648
    7. ' np' → logprob: -12.222600936889648
    8. '64' → logprob: -12.472600936889648
    9. '[np' → logprob: -12.847600936889648
    10. 'numpy' → logprob: -13.472600936889648

Token 588: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -0.0013503533555194736
    2. '_' → logprob: -7.001350402832031
    3. '32' → logprob: -7.751350402832031
    4. '```' → logprob: -13.001350402832031
    5. '  ' → logprob: -13.751350402832031
    6. 's' → logprob: -14.251350402832031
    7. '   ' → logprob: -14.376350402832031
    8. 'array' → logprob: -14.501350402832031
    9. '_array' → logprob: -14.626350402832031
    10. '_(' → logprob: -14.626350402832031

Token 589: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.005733483005315065
    2. '   ' → logprob: -5.755733489990234
    3. '(A' → logprob: -7.130733489990234
    4. ' A' → logprob: -7.255733489990234
    5. 'arr' → logprob: -8.505733489990234
    6. ',' → logprob: -8.630733489990234
    7. '
' → logprob: -8.755733489990234
    8. 'import' → logprob: -8.880733489990234
    9. '```' → logprob: -9.005733489990234
    10. '(' → logprob: -9.255733489990234

Token 590: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.016651462763547897
    2. '   ' → logprob: -4.266651630401611
    3. ' A' → logprob: -6.516651630401611
    4. 'arr' → logprob: -7.516651630401611
    5. 'import' → logprob: -8.516651153564453
    6. '```' → logprob: -9.016651153564453
    7. 'data' → logprob: -10.016651153564453
    8. '(A' → logprob: -10.141651153564453
    9. '	A' → logprob: -11.141651153564453
    10. '(' → logprob: -11.141651153564453

Token 591: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.002383376471698284
    2. ' A' → logprob: -6.127383232116699
    3. 'import' → logprob: -8.8773832321167
    4. 'arr' → logprob: -10.3773832321167
    5. '   ' → logprob: -10.6273832321167
    6. '```' → logprob: -14.2523832321167
    7. 'data' → logprob: -14.3773832321167
    8. ' import' → logprob: -14.5023832321167
    9. 'array' → logprob: -14.6273832321167
    10. '	A' → logprob: -14.7523832321167

Token 592: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061969365924596786
    2. ' =' → logprob: -2.81196928024292
    3. '=np' → logprob: -13.311969757080078
    4. '   ' → logprob: -18.311969757080078
    5. ',' → logprob: -18.561969757080078
    6. ' ' → logprob: -18.811969757080078
    7. '=
' → logprob: -19.186969757080078
    8. '＝' → logprob: -19.311969757080078
    9. '[:]' → logprob: -19.311969757080078
    10. '[' → logprob: -19.686969757080078

Token 593: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.001170225441455841
    2. ' np' → logprob: -6.7511701583862305
    3. 'numpy' → logprob: -18.501171112060547
    4. '(np' → logprob: -20.001171112060547
    5. '=np' → logprob: -20.126171112060547
    6. '   ' → logprob: -20.501171112060547
    7. 'n' → logprob: -21.501171112060547
    8. '_np' → logprob: -21.751171112060547
    9. '```' → logprob: -22.626171112060547
    10. '[np' → logprob: -23.001171112060547

Token 594: '.array' (ID: 14557)
  Prédit: '.array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.array' → logprob: -0.002869423246011138
    2. 'array' → logprob: -6.127869606018066
    3. '.asarray' → logprob: -7.502869606018066
    4. '.from' → logprob: -9.252869606018066
    5. '.ndarray' → logprob: -11.377869606018066
    6. '.' → logprob: -11.627869606018066
    7. '_array' → logprob: -12.002869606018066
    8. ' array' → logprob: -12.627869606018066
    9. '.arange' → logprob: -13.002869606018066
    10. '(array' → logprob: -13.377869606018066

Token 595: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.0031879288144409657
    2. '([' → logprob: -5.753188133239746
    3. '(' → logprob: -11.878188133239746
    4. 'list' → logprob: -13.128188133239746
    5. '(map' → logprob: -14.378188133239746
    6. '[list' → logprob: -15.628188133239746
    7. '(np' → logprob: -15.753188133239746
    8. '([...' → logprob: -15.878188133239746
    9. '=list' → logprob: -16.62818717956543
    10. '(tuple' → logprob: -16.62818717956543

Token 596: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.735893965815194e-05
    2. 'map' → logprob: -11.000017166137695
    3. '(' → logprob: -14.375017166137695
    4. '(int' → logprob: -17.000017166137695
    5. '	map' → logprob: -18.250017166137695
    6. '_map' → logprob: -18.375017166137695
    7. ' map' → logprob: -18.750017166137695
    8. ',map' → logprob: -19.250017166137695
    9. '(
' → logprob: -19.500017166137695
    10. '.map' → logprob: -19.625017166137695

Token 597: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01417032815515995
    2. 'int' → logprob: -4.264170169830322
    3. '(' → logprob: -12.51417064666748
    4. ' int' → logprob: -13.63917064666748
    5. ',int' → logprob: -14.76417064666748
    6. '[int' → logprob: -14.76417064666748
    7. 'input' → logprob: -15.01417064666748
    8. '   ' → logprob: -15.51417064666748
    9. '<int' → logprob: -15.76417064666748
    10. '(input' → logprob: -16.014169692993164

Token 598: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.33890724182128906
    2. ',' → logprob: -1.713907241821289
    3. 'input' → logprob: -2.588907241821289
    4. '(input' → logprob: -3.588907241821289
    5. ')),' → logprob: -5.588907241821289
    6. '(' → logprob: -8.463907241821289
    7. '   ' → logprob: -8.588907241821289
    8. ' input' → logprob: -8.838907241821289
    9. ' ' → logprob: -9.088907241821289
    10. ' ,' → logprob: -9.838907241821289

Token 599: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007102862582542002
    2. ' input' → logprob: -7.250710487365723
    3. '   ' → logprob: -14.875710487365723
    4. ',input' → logprob: -18.000709533691406
    5. '	input' → logprob: -18.375709533691406
    6. '(input' → logprob: -18.500709533691406
    7. ' ' → logprob: -18.500709533691406
    8. '<input' → logprob: -19.625709533691406
    9. '=input' → logprob: -19.750709533691406
    10. '
' → logprob: -19.750709533691406

Token 600: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.128163257315464e-07
    2. '()' → logprob: -15.375
    3. '.split' → logprob: -17.125
    4. 'split' → logprob: -18.25
    5. '(' → logprob: -18.75
    6. ' ().' → logprob: -18.875
    7. '   ' → logprob: -20.25
    8. '("").' → logprob: -20.375
    9. '()
' → logprob: -20.875
    10. '('').' → logprob: -21.125

Token 601: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005535095697268844
    2. 'strip' → logprob: -7.500553607940674
    3. 'rstrip' → logprob: -15.250553131103516
    4. ' split' → logprob: -16.000553131103516
    5. '(split' → logprob: -16.500553131103516
    6. 'str' → logprob: -17.875553131103516
    7. 'spl' → logprob: -19.125553131103516
    8. '.split' → logprob: -19.500553131103516
    9. 'read' → logprob: -20.750553131103516
    10. '().' → logprob: -20.875553131103516

Token 602: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009238460334017873
    2. '())))' → logprob: -7.2509236335754395
    3. '()))' → logprob: -8.625924110412598
    4. ')),' → logprob: -10.875924110412598
    5. '(' → logprob: -12.375924110412598
    6. '())))
' → logprob: -12.500924110412598
    7. '())),
' → logprob: -12.875924110412598
    8. ')))' → logprob: -13.375924110412598
    9. '().' → logprob: -13.375924110412598
    10. ' ' → logprob: -14.125924110412598

Token 603: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.005634504836052656
    2. ')))' → logprob: -5.380634307861328
    3. '))),' → logprob: -7.380634307861328
    4. '))' → logprob: -8.380634307861328
    5. '()' → logprob: -9.380634307861328
    6. ')' → logprob: -10.005634307861328
    7. ' ' → logprob: -11.755634307861328
    8. ')))
' → logprob: -12.005634307861328
    9. '')),' → logprob: -12.255634307861328
    10. '   ' → logprob: -12.630634307861328

Token 604: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.018178856000304222
    2. ' dtype' → logprob: -4.018178939819336
    3. 'np' → logprob: -10.518178939819336
    4. 'nd' → logprob: -14.018178939819336
    5. ' np' → logprob: -14.018178939819336
    6. '   ' → logprob: -16.143178939819336
    7. '(dtype' → logprob: -16.268178939819336
    8. ' ' → logprob: -16.518178939819336
    9. '  ' → logprob: -17.143178939819336
    10. 'int' → logprob: -17.643178939819336

Token 605: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.014448833651840687
    2. 'np' → logprob: -4.764448642730713
    3. '(np' → logprob: -5.264448642730713
    4. ' np' → logprob: -8.264449119567871
    5. '=int' → logprob: -8.389449119567871
    6. '=' → logprob: -9.139449119567871
    7. '   ' → logprob: -10.639449119567871
    8. 'int' → logprob: -10.889449119567871
    9. '[np' → logprob: -12.514449119567871
    10. ' ' → logprob: -13.389449119567871

Token 606: '.int' (ID: 21499)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.23378832638263702
    2. 'np' → logprob: -1.9837883710861206
    3. '.int' → logprob: -2.733788251876831
    4. '=np' → logprob: -5.85878849029541
    5. '=int' → logprob: -6.48378849029541
    6. '   ' → logprob: -8.23378849029541
    7. ' int' → logprob: -8.48378849029541
    8. ' np' → logprob: -8.48378849029541
    9. '.uint' → logprob: -8.73378849029541
    10. 'numpy' → logprob: -9.23378849029541

Token 607: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -1.0280383548888494e-06
    2. 'int' → logprob: -13.875000953674316
    3. 'c' → logprob: -19.375001907348633
    4. 'np' → logprob: -19.625001907348633
    5. '6' → logprob: -20.375001907348633
    6. 'numpy' → logprob: -22.125001907348633
    7. '63' → logprob: -22.375001907348633
    8. 'p' → logprob: -22.625001907348633
    9. 'dtype' → logprob: -22.875001907348633
    10. '```' → logprob: -22.875001907348633

Token 608: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1041145626222715e-05
    2. '   ' → logprob: -11.625011444091797
    3. ')
' → logprob: -13.375011444091797
    4. ' )' → logprob: -15.375011444091797
    5. '))' → logprob: -15.750011444091797
    6. '[' → logprob: -17.250011444091797
    7. ')`' → logprob: -17.625011444091797
    8. '())' → logprob: -17.875011444091797
    9. ').' → logprob: -18.000011444091797
    10. '[])' → logprob: -18.125011444091797

Token 609: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007487834896892309
    2. 'res' → logprob: -5.882487773895264
    3. '```' → logprob: -6.257487773895264
    4. 'result' → logprob: -6.757487773895264
    5. '
' → logprob: -7.132487773895264
    6. 'max' → logprob: -7.507487773895264
    7. '    
' → logprob: -9.007488250732422
    8. 'rest' → logprob: -9.757488250732422
    9. 'for' → logprob: -10.882488250732422
    10. '``' → logprob: -11.132488250732422

Token 610: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0980054140090942
    2. 'res' → logprob: -1.0980054140090942
    3. 'result' → logprob: -1.2230054140090942
    4. 'max' → logprob: -3.5980052947998047
    5. 'A' → logprob: -4.973005294799805
    6. '```' → logprob: -6.348005294799805
    7. '
' → logprob: -7.348005294799805
    8. 'ans' → logprob: -7.723005294799805
    9. '    
' → logprob: -7.973005294799805
    10. 'rest' → logprob: -8.348005294799805

Token 611: ' Compute' (ID: 45438)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7049520015716553
    2. 'result' → logprob: -0.7049520015716553
    3. 'res' → logprob: -4.454952239990234
    4. 'answer' → logprob: -9.579952239990234
    5. 'ans' → logprob: -10.954952239990234
    6. '   ' → logprob: -11.204952239990234
    7. 'output' → logprob: -11.454952239990234
    8. ' result' → logprob: -13.579952239990234
    9. 'r' → logprob: -13.579952239990234
    10. ' print' → logprob: -15.079952239990234

Token 612: ' the' (ID: 290)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.03617706894874573
    2. 'res' → logprob: -4.036177158355713
    3. 'print' → logprob: -4.036177158355713
    4. '   ' → logprob: -9.286176681518555
    5. 'answer' → logprob: -10.161176681518555
    6. 'max' → logprob: -10.161176681518555
    7. 'ans' → logprob: -11.286176681518555
    8. 'and' → logprob: -11.911176681518555
    9. ' result' → logprob: -12.161176681518555
    10. 'resultado' → logprob: -13.536176681518555

Token 613: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.012978680431842804
    2. 'print' → logprob: -4.512978553771973
    3. 'res' → logprob: -6.512978553771973
    4. 'answer' → logprob: -7.762978553771973
    5. 'ans' → logprob: -11.637978553771973
    6. 'maximum' → logprob: -12.012978553771973
    7. 'max' → logprob: -12.387978553771973
    8. ' result' → logprob: -15.012978553771973
    9. 'output' → logprob: -15.512978553771973
    10. '   ' → logprob: -16.26297950744629

Token 614: ' using' (ID: 2360)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015661651268601418
    2. 'res' → logprob: -7.001565933227539
    3. 'result' → logprob: -7.376565933227539
    4. '```' → logprob: -10.626565933227539
    5. ' res' → logprob: -13.251565933227539
    6. '    
' → logprob: -14.001565933227539
    7. '
' → logprob: -14.251565933227539
    8. ' result' → logprob: -14.251565933227539
    9. '	result' → logprob: -15.376565933227539
    10. '	res' → logprob: -16.12656593322754

Token 615: ' the' (ID: 290)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -1.1472419600977446e-06
    2. ' calculate' → logprob: -14.000000953674316
    3. 'print' → logprob: -15.250000953674316
    4. '.calculate' → logprob: -19.875001907348633
    5. 'alculate' → logprob: -21.875001907348633
    6. '```' → logprob: -22.750001907348633
    7. 'maximum' → logprob: -23.625001907348633
    8. 'compute' → logprob: -23.875001907348633
    9. 'Calculate' → logprob: -24.250001907348633
    10. '
' → logprob: -24.375001907348633

Token 616: ' XOR' (ID: 147209)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -3.4121114822482923e-06
    2. 'print' → logprob: -13.000003814697266
    3. ' calculate' → logprob: -13.750003814697266
    4. 'maximum' → logprob: -17.625003814697266
    5. '```' → logprob: -18.875003814697266
    6. '.calculate' → logprob: -20.000003814697266
    7. 'compute' → logprob: -22.000003814697266
    8. 'alculate' → logprob: -22.625003814697266
    9. '
' → logprob: -23.125003814697266
    10. '`' → logprob: -23.375003814697266

Token 617: ' elimination' (ID: 77324)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.01708773337304592
    2. '_basis' → logprob: -4.892087936401367
    3. 'calculate' → logprob: -5.517087936401367
    4. ' basis' → logprob: -5.642087936401367
    5. 'maximum' → logprob: -7.767087936401367
    6. 'sum' → logprob: -7.767087936401367
    7. 'max' → logprob: -7.892087936401367
    8. '_sum' → logprob: -8.517087936401367
    9. '```' → logprob: -9.017087936401367
    10. 'maximize' → logprob: -9.642087936401367

Token 618: ' algorithm' (ID: 22184)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007478851824998856
    2. 'result' → logprob: -5.132478713989258
    3. 'res' → logprob: -6.632478713989258
    4. 'print' → logprob: -9.132478713989258
    5. ' result' → logprob: -9.257478713989258
    6. ' res' → logprob: -11.382478713989258
    7. ' and' → logprob: -12.132478713989258
    8. '    
' → logprob: -12.882478713989258
    9. '```' → logprob: -12.882478713989258
    10. ',' → logprob: -13.257478713989258

Token 619: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019972586596850306
    2. 'result' → logprob: -9.000199317932129
    3. '```' → logprob: -10.250199317932129
    4. 'print' → logprob: -10.375199317932129
    5. 'res' → logprob: -11.750199317932129
    6. '
' → logprob: -14.125199317932129
    7. '    
' → logprob: -14.250199317932129
    8. '``' → logprob: -15.875199317932129
    9. ' result' → logprob: -16.375200271606445
    10. '       ' → logprob: -16.750200271606445

Token 620: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009739940869621933
    2. 'result' → logprob: -7.500974178314209
    3. 'print' → logprob: -8.25097370147705
    4. 'res' → logprob: -9.00097370147705
    5. '```' → logprob: -10.25097370147705
    6. ' res' → logprob: -14.62597370147705
    7. ' result' → logprob: -14.87597370147705
    8. '    
' → logprob: -16.250974655151367
    9. '	result' → logprob: -16.500974655151367
    10. '
' → logprob: -16.625974655151367

Token 621: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7592422366142273
    2. 'result' (adapté à ' result') → logprob: -0.7592422366142273
    3. 'res' → logprob: -2.759242296218872
    4. '   ' → logprob: -7.509242057800293
    5. '```' → logprob: -10.134242057800293
    6. ' result' → logprob: -11.009242057800293
    7. ' print' → logprob: -11.634242057800293
    8. ' res' → logprob: -12.259242057800293
    9. '``' → logprob: -15.634242057800293
    10. '`' → logprob: -16.38424301147461

Token 622: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20146478712558746
    2. '=' → logprob: -1.7014647722244263
    3. '   ' → logprob: -9.951464653015137
    4. ')' → logprob: -13.576464653015137
    5. ',' → logprob: -14.326464653015137
    6. '=result' → logprob: -14.576464653015137
    7. '```' → logprob: -15.076464653015137
    8. '  ' → logprob: -15.451464653015137
    9. '<|end|>' → logprob: -15.451464653015137
    10. '=int' → logprob: -15.701464653015137

Token 623: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -7.493430894101039e-05
    2. ' calculate' → logprob: -9.500075340270996
    3. '.calculate' → logprob: -21.37507438659668
    4. 'compute' → logprob: -21.62507438659668
    5. 'cal' → logprob: -23.37507438659668
    6. 'alculate' → logprob: -23.50007438659668
    7. 'calc' → logprob: -23.50007438659668
    8. 'calculator' → logprob: -23.87507438659668
    9. 'Calculate' → logprob: -24.25007438659668
    10. '   ' → logprob: -24.25007438659668

Token 624: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00014931005716789514
    2. 'maximum' → logprob: -8.875149726867676
    3. 'max' → logprob: -11.625149726867676
    4. ' maximum' → logprob: -15.750149726867676
    5. 'Maximum' → logprob: -15.875149726867676
    6. '.maximum' → logprob: -16.62514877319336
    7. '_' → logprob: -16.75014877319336
    8. '\' → logprob: -17.37514877319336
    9. ' maximale' → logprob: -17.50014877319336
    10. '最大' → logprob: -17.62514877319336

Token 625: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.004109034780412912
    2. 'um' → logprob: -5.504108905792236
    3. 'im' → logprob: -11.504109382629395
    4. 'ium' → logprob: -11.754109382629395
    5. 'mum' → logprob: -12.254109382629395
    6. 'maximum' → logprob: -12.754109382629395
    7. 'sum' → logprob: -14.379109382629395
    8. 'inum' → logprob: -14.379109382629395
    9. '```' → logprob: -14.504109382629395
    10. '_' → logprob: -14.504109382629395

Token 626: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.004090627655386925
    2. '_max' → logprob: -5.504090785980225
    3. 'maximum' → logprob: -11.879090309143066
    4. 'xor' → logprob: -12.629090309143066
    5. '```' → logprob: -14.004090309143066
    6. '_' → logprob: -15.504090309143066
    7. 'max' → logprob: -15.879090309143066
    8. 'X' → logprob: -16.004091262817383
    9. '   ' → logprob: -16.504091262817383
    10. '_possible' → logprob: -16.629091262817383

Token 627: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -8.613945101387799e-05
    2. 'xor' → logprob: -9.500085830688477
    3. '_or' → logprob: -12.875085830688477
    4. 'er' → logprob: -13.500085830688477
    5. 'ор' → logprob: -13.625085830688477
    6. ' or' → logprob: -14.000085830688477
    7. 'ors' → logprob: -14.500085830688477
    8. '(or' → logprob: -14.625085830688477
    9. '_' → logprob: -14.750085830688477
    10. '   ' → logprob: -14.875085830688477

Token 628: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.9266199160483666e-05
    2. 'sum' → logprob: -10.875019073486328
    3. '_' → logprob: -15.250019073486328
    4. ' _' → logprob: -18.500019073486328
    5. '_max' → logprob: -18.625019073486328
    6. ' sum' → logprob: -18.750019073486328
    7. '```' → logprob: -18.750019073486328
    8. '_s' → logprob: -18.875019073486328
    9. '\' → logprob: -18.875019073486328
    10. '_result' → logprob: -19.125019073486328

Token 629: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -9.849109119386412e-06
    2. '(result' → logprob: -12.000009536743164
    3. '(' → logprob: -13.375009536743164
    4. '   ' → logprob: -14.000009536743164
    5. '```' → logprob: -14.750009536743164
    6. 'A' → logprob: -15.125009536743164
    7. 'result' → logprob: -15.500009536743164
    8. '(
' → logprob: -16.125009536743164
    9. '(B' → logprob: -17.000009536743164
    10. '[A' → logprob: -17.375009536743164

Token 630: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04075533151626587
    2. ')
' → logprob: -3.290755271911621
    3. '   ' → logprob: -5.915755271911621
    4. ')
' → logprob: -12.165755271911621
    5. '())' → logprob: -13.040755271911621
    6. '()' → logprob: -13.165755271911621
    7. '())
' → logprob: -14.040755271911621
    8. ' )' → logprob: -14.165755271911621
    9. '[' → logprob: -14.665755271911621
    10. ')

' → logprob: -14.665755271911621

Token 631: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04884600639343262
    2. 'print' → logprob: -3.0488460063934326
    3. '```' → logprob: -8.298846244812012
    4. '
' → logprob: -12.173846244812012
    5. ' print' → logprob: -12.923846244812012
    6. '	print' → logprob: -13.173846244812012
    7. '    
' → logprob: -15.548846244812012
    8. '``' → logprob: -15.923846244812012
    9. '   ' → logprob: -17.923845291137695
    10. '`' → logprob: -18.423845291137695

Token 632: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4740934669971466
    2. 'print' → logprob: -0.9740934371948242
    3. '```' → logprob: -11.474093437194824
    4. '	print' → logprob: -12.599093437194824
    5. ' print' → logprob: -12.849093437194824
    6. '
' → logprob: -16.22409439086914
    7. '       ' → logprob: -18.97409439086914
    8. '``' → logprob: -19.22409439086914
    9. '    
' → logprob: -19.22409439086914
    10. '`' → logprob: -19.34909439086914

Token 633: ' Print' (ID: 13103)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.703443770878948e-06
    2. ' print' → logprob: -12.250007629394531
    3. '   ' → logprob: -12.750007629394531
    4. '```' → logprob: -18.00000762939453
    5. '	print' → logprob: -24.12500762939453
    6. '``' → logprob: -24.75000762939453
    7. 'printf' → logprob: -25.62500762939453
    8. 'Print' → logprob: -25.87500762939453
    9. '
' → logprob: -26.00000762939453
    10. '#print' → logprob: -26.37500762939453

Token 634: ' the' (ID: 290)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.002475777640938759
    2. 'result' → logprob: -6.002475738525391
    3. ' result' → logprob: -17.37747573852539
    4. '(' → logprob: -17.75247573852539
    5. '=result' → logprob: -19.00247573852539
    6. '[result' → logprob: -20.00247573852539
    7. '	result' → logprob: -20.75247573852539
    8. ',result' → logprob: -21.12747573852539
    9. '_result' → logprob: -21.12747573852539
    10. '(f' → logprob: -21.37747573852539

Token 635: ' final' (ID: 1721)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.474094957113266
    2. 'result' → logprob: -0.9740949869155884
    3. ' result' → logprob: -10.974095344543457
    4. '(' → logprob: -15.224095344543457
    5. '=result' → logprob: -15.224095344543457
    6. '[result' → logprob: -15.724095344543457
    7. '	result' → logprob: -15.974095344543457
    8. '(
' → logprob: -17.09909439086914
    9. ',result' → logprob: -17.59909439086914
    10. 'Result' → logprob: -18.34909439086914

Token 636: ' result' (ID: 1534)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.010788529179990292
    2. 'result' → logprob: -5.010788440704346
    3. '(' → logprob: -5.510788440704346
    4. ' result' → logprob: -10.760788917541504
    5. '(
' → logprob: -15.010788917541504
    6. ' (' → logprob: -16.760787963867188
    7. '(res' → logprob: -17.010787963867188
    8. '=result' → logprob: -17.010787963867188
    9. 'Result' → logprob: -17.260787963867188
    10. '_result' → logprob: -17.385787963867188

Token 637: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009238055907189846
    2. '()' → logprob: -4.884238243103027
    3. '(' → logprob: -6.884238243103027
    4. '()
' → logprob: -8.384238243103027
    5. '```' → logprob: -8.759238243103027
    6. '(result' → logprob: -9.134238243103027
    7. 'print' → logprob: -9.634238243103027
    8. '\' → logprob: -11.634238243103027
    9. 'result' → logprob: -11.759238243103027
    10. '
' → logprob: -12.009238243103027

Token 638: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2014542669057846
    2. 'print' → logprob: -1.7014542818069458
    3. '```' → logprob: -10.201454162597656
    4. ' print' → logprob: -12.701454162597656
    5. '(print' → logprob: -14.951454162597656
    6. '	print' → logprob: -14.951454162597656
    7. '``' → logprob: -16.326454162597656
    8. '`' → logprob: -16.951454162597656
    9. '    
' → logprob: -17.951454162597656
    10. '(' → logprob: -18.076454162597656

Token 639: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -14.750000953674316
    3. '```' → logprob: -16.25
    4. ' print' → logprob: -18.5
    5. 'result' → logprob: -18.5
    6. '``' → logprob: -23.25
    7. '(print' → logprob: -25.0
    8. '	print' → logprob: -25.375
    9. '`' → logprob: -25.375
    10. '
' → logprob: -26.0

Token 640: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -2.2246291337069124e-05
    2. '(' → logprob: -10.750021934509277
    3. 'result' → logprob: -14.500021934509277
    4. '(res' → logprob: -16.500022888183594
    5. '()' → logprob: -17.250022888183594
    6. '(results' → logprob: -18.500022888183594
    7. '=result' → logprob: -18.875022888183594
    8. '(
' → logprob: -19.375022888183594
    9. '(resultado' → logprob: -19.375022888183594
    10. '(f' → logprob: -19.375022888183594

Token 641: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5928495486150496e-05
    2. '())' → logprob: -11.750016212463379
    3. '()' → logprob: -11.875016212463379
    4. '`)' → logprob: -15.125016212463379
    5. ' )' → logprob: -15.250016212463379
    6. ')
' → logprob: -15.625016212463379
    7. '')' → logprob: -15.875016212463379
    8. '")' → logprob: -16.625015258789062
    9. ')`' → logprob: -16.625015258789062
    10. '```' → logprob: -16.750015258789062

Token 642: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.4021237802808173e-05
    2. ' if' → logprob: -11.500014305114746
    3. 'main' → logprob: -13.000014305114746
    4. '```' → logprob: -13.750014305114746
    5. '
' → logprob: -14.625014305114746
    6. '\' → logprob: -18.25001335144043
    7. '#' → logprob: -18.50001335144043
    8. '\n' → logprob: -19.37501335144043
    9. '  
' → logprob: -19.75001335144043
    10. '    
' → logprob: -20.00001335144043

Token 643: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.4741216003894806
    2. '__' → logprob: -0.9741215705871582
    3. 'name' → logprob: -10.974122047424316
    4. ' ' → logprob: -11.474122047424316
    5. '_name' → logprob: -12.224122047424316
    6. '  ' → logprob: -12.849122047424316
    7. ' ' → logprob: -12.974122047424316
    8. '___' → logprob: -13.099122047424316
    9. '```' → logprob: -13.224122047424316
    10. '_' → logprob: -13.224122047424316

Token 644: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2483166605234146
    2. ' ==' → logprob: -1.7483166456222534
    3. '==' → logprob: -3.123316764831543
    4. '=="' → logprob: -6.748316764831543
    5. '.__' → logprob: -8.748316764831543
    6. ' __' → logprob: -8.998316764831543
    7. '=='' → logprob: -8.998316764831543
    8. '__.__' → logprob: -9.498316764831543
    9. '[' → logprob: -9.873316764831543
    10. 'name' → logprob: -9.873316764831543

Token 645: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.082895273109898e-05
    2. '__.__' → logprob: -10.500030517578125
    3. '==' → logprob: -14.000030517578125
    4. '__["' → logprob: -14.125030517578125
    5. '=="' → logprob: -14.750030517578125
    6. '____' → logprob: -14.875030517578125
    7. '___' → logprob: -15.000030517578125
    8. '__.' → logprob: -15.000030517578125
    9. '__
' → logprob: -16.500030517578125
    10. ' ==' → logprob: -17.125030517578125

Token 646: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003672282909974456
    2. '==' → logprob: -5.878672122955322
    3. ' ==' → logprob: -7.253672122955322
    4. '=="' → logprob: -9.00367259979248
    5. '__.__' → logprob: -10.75367259979248
    6. '=='' → logprob: -12.00367259979248
    7. '"' → logprob: -12.25367259979248
    8. '___' → logprob: -14.00367259979248
    9. '.__' → logprob: -14.12867259979248
    10. '__["' → logprob: -15.00367259979248

Token 647: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1002393513917923
    2. ''' → logprob: -2.3502392768859863
    3. '__' → logprob: -10.350239753723145
    4. ' "__' → logprob: -14.350239753723145
    5. ' '__' → logprob: -17.475238800048828
    6. '"name' → logprob: -17.850238800048828
    7. '"user' → logprob: -18.225238800048828
    8. ''"' → logprob: -18.350238800048828
    9. 'main' → logprob: -19.350238800048828
    10. '('__' → logprob: -19.350238800048828

Token 648: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00015908108616713434
    2. '__' → logprob: -8.75015926361084
    3. '_main' → logprob: -15.12515926361084
    4. 'name' → logprob: -15.75015926361084
    5. ' main' → logprob: -15.87515926361084
    6. '__":
' → logprob: -18.000158309936523
    7. 'python' → logprob: -18.125158309936523
    8. 'py' → logprob: -18.125158309936523
    9. 'built' → logprob: -18.500158309936523
    10. '-main' → logprob: -18.625158309936523

Token 649: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.014502412639558315
    2. '__' → logprob: -4.26450252532959
    3. '__':
' → logprob: -8.01450252532959
    4. '__["' → logprob: -12.88950252532959
    5. '__.' → logprob: -13.51450252532959
    6. '__
' → logprob: -13.88950252532959
    7. '__:' → logprob: -13.88950252532959
    8. '__.__' → logprob: -14.38950252532959
    9. '"' → logprob: -14.88950252532959
    10. '__
' → logprob: -14.88950252532959

Token 650: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0027135726995766163
    2. '__' → logprob: -6.002713680267334
    3. '   ' → logprob: -8.752713203430176
    4. '"' → logprob: -10.377713203430176
    5. ' main' → logprob: -10.377713203430176
    6. '	main' → logprob: -11.127713203430176
    7. ''' → logprob: -13.502713203430176
    8. '_main' → logprob: -14.127713203430176
    9. ' ' → logprob: -15.127713203430176
    10. '```' → logprob: -16.252714157104492

Token 651: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -16.75
    3. '	main' → logprob: -19.0
    4. '   ' → logprob: -20.5
    5. '_main' → logprob: -22.75
    6. '.main' → logprob: -25.625
    7. 'import' → logprob: -26.375
    8. '(main' → logprob: -27.25
    9. '主' → logprob: -27.25
    10. 'Main' → logprob: -28.0

Token 652: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 650
Tokens correctement prédits (1ère position, stricte): 201
Tokens correctement prédits (1ère position, avec adaptation): 212
Tokens correctement prédits (top 10): 460
Précision stricte (1ère position): 30.92%
Précision adaptée (1ère position): 32.62%
Précision (top 10): 70.77%
================================================================================
