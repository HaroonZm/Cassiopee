================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_input():
    return input()

def is_sunny(s):
    return s == 'Sunny'

def is_rainy(s):
    return s == 'Rainy'

def print_cloudy():
    print('Cloudy')

def print_sunny():
    print('Sunny')

def print_rainy():
    print('Rainy')

def process_weather(s):
    if is_sunny(s):
        print_cloudy()
    elif is_rainy(s):
        print_sunny()
    else:
        print_rainy()

def main():
    s = get_input()
    process_weather(s)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004976270254701376
    2. '():' → logprob: -5.629976272583008
    3. '_' → logprob: -6.879976272583008
    4. '()' → logprob: -8.629976272583008
    5. '```' → logprob: -10.004976272583008
    6. '(:' → logprob: -10.504976272583008
    7. '(_' → logprob: -10.754976272583008
    8. '(_:' → logprob: -10.879976272583008
    9. ' (' → logprob: -11.504976272583008
    10. '("("' → logprob: -12.004976272583008

Token 4: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.144391417503357
    2. '```' → logprob: -1.519391417503357
    3. '\n' → logprob: -1.769391417503357
    4. '   ' → logprob: -1.894391417503357
    5. '    
' → logprob: -3.5193915367126465
    6. '()' → logprob: -3.8943915367126465
    7. '(' → logprob: -4.1443915367126465
    8. ' 
' → logprob: -4.8943915367126465
    9. '
' → logprob: -5.0193915367126465
    10. ' return' → logprob: -5.1443915367126465

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.21803174912929535
    2. 'input' → logprob: -2.468031644821167
    3. 'user' → logprob: -3.218031644821167
    4. '   ' → logprob: -3.343031644821167
    5. '```' → logprob: -4.593031883239746
    6. 'x' → logprob: -4.843031883239746
    7. ' ' → logprob: -4.968031883239746
    8. ' return' → logprob: -5.843031883239746
    9. 'text' → logprob: -6.343031883239746
    10. 'i' → logprob: -6.593031883239746

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7762201428413391
    2. ' input' → logprob: -0.7762201428413391
    3. 'input' → logprob: -2.9012200832366943
    4. '"' → logprob: -4.026220321655273
    5. ''' → logprob: -5.651220321655273
    6. ' "' → logprob: -6.776220321655273
    7. '  ' → logprob: -7.401220321655273
    8. ' '' → logprob: -7.901220321655273
    9. '(input' → logprob: -8.276220321655273
    10. ' None' → logprob: -8.401220321655273

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015529518714174628
    2. '()' → logprob: -6.626553058624268
    3. '('' → logprob: -9.25155258178711
    4. '("("' → logprob: -9.62655258178711
    5. '(
' → logprob: -11.25155258178711
    6. ' (' → logprob: -11.25155258178711
    7. '```' → logprob: -11.62655258178711
    8. '("")' → logprob: -11.87655258178711
    9. ' ' → logprob: -12.12655258178711
    10. ''' → logprob: -12.62655258178711

Token 8: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9292922616004944
    2. '(' → logprob: -1.3042922019958496
    3. '()' → logprob: -2.5542922019958496
    4. '\n' → logprob: -2.6792922019958496
    5. '```' → logprob: -3.3042922019958496
    6. '(
' → logprob: -3.4292922019958496
    7. '#' → logprob: -3.6792922019958496
    8. '<|end|>' → logprob: -3.8042922019958496
    9. '\' → logprob: -4.42929220199585
    10. '
' → logprob: -4.67929220199585

Token 9: ' is' (ID: 382)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.19965864717960358
    2. ' calculate' → logprob: -2.1996586322784424
    3. ' process' → logprob: -4.0746588706970215
    4. ' add' → logprob: -4.4496588706970215
    5. ' user' → logprob: -4.6996588706970215
    6. ' ' → logprob: -4.8246588706970215
    7. ' space' → logprob: -5.0746588706970215
    8. ' read' → logprob: -6.0746588706970215
    9. ' compute' → logprob: -6.1996588706970215
    10. ' my' → logprob: -6.1996588706970215

Token 10: '_s' (ID: 1278)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.6845504641532898
    2. '_pal' → logprob: -1.4345505237579346
    3. '_' → logprob: -2.0595505237579346
    4. '_prime' → logprob: -2.9345505237579346
    5. '_even' → logprob: -4.1845502853393555
    6. ' _' → logprob: -4.4345502853393555
    7. 'digit' → logprob: -5.1845502853393555
    8. '_digit' → logprob: -5.1845502853393555
    9. '_integer' → logprob: -5.3095502853393555
    10. '_numeric' → logprob: -5.6845502853393555

Token 11: 'unny' (ID: 128423)
  Prédit: 'tring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tring' → logprob: -0.8722983002662659
    2. 'string' → logprob: -2.497298240661621
    3. 'pecial' → logprob: -2.872298240661621
    4. '_string' → logprob: -2.872298240661621
    5. 'afe' → logprob: -2.997298240661621
    6. 't' → logprob: -3.122298240661621
    7. 'even' → logprob: -3.247298240661621
    8. '_even' → logprob: -3.872298240661621
    9. 'm' → logprob: -4.122298240661621
    10. 'ingle' → logprob: -4.122298240661621

Token 12: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026910068467259407
    2. '():' → logprob: -4.151910305023193
    3. '_' → logprob: -5.026910305023193
    4. '(_' → logprob: -7.401910305023193
    5. '(_)' → logprob: -7.401910305023193
    6. '(:' → logprob: -7.776910305023193
    7. '(_:' → logprob: -7.901910305023193
    8. ':' → logprob: -8.026909828186035
    9. '("("' → logprob: -8.151909828186035
    10. '```' → logprob: -8.651909828186035

Token 13: '):
' (ID: 1883)
  Prédit: 'unny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unny' → logprob: -0.0284297876060009
    2. 'un' → logprob: -4.778429985046387
    3. '):' → logprob: -4.903429985046387
    4. ')' → logprob: -5.903429985046387
    5. 'e' → logprob: -6.028429985046387
    6. '(un' → logprob: -6.778429985046387
    7. '('' → logprob: -7.528429985046387
    8. '_un' → logprob: -7.653429985046387
    9. '():' → logprob: -7.778429985046387
    10. ' ):' → logprob: -8.028429985046387

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5770865082740784
    2. ':' → logprob: -1.5770864486694336
    3. '(s' → logprob: -2.4520864486694336
    4. '(' → logprob: -2.9520864486694336
    5. ' return' → logprob: -3.4520864486694336
    6. 'return' → logprob: -4.327086448669434
    7. '):' → logprob: -4.452086448669434
    8. ' :' → logprob: -4.952086448669434
    9. '    ' → logprob: -5.077086448669434
    10. 's' → logprob: -5.452086448669434

Token 15: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.36296346783638
    2. ' s' → logprob: -1.3629634380340576
    3. '   ' → logprob: -3.6129634380340576
    4. 'return' (adapté à ' return') → logprob: -4.487963676452637
    5. 's' → logprob: -4.987963676452637
    6. ' if' → logprob: -6.487963676452637
    7. ' "' → logprob: -7.612963676452637
    8. '"' → logprob: -7.737963676452637
    9. ' '' → logprob: -7.862963676452637
    10. ''s' → logprob: -8.487963676452637

Token 16: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.23142315447330475
    2. 's' → logprob: -2.7314231395721436
    3. ''s' → logprob: -2.7314231395721436
    4. '"' → logprob: -3.2314231395721436
    5. ' "' → logprob: -3.9814231395721436
    6. ''' → logprob: -4.731423377990723
    7. '"s' → logprob: -5.356423377990723
    8. ' '' → logprob: -5.481423377990723
    9. ' ' → logprob: -8.606423377990723
    10. ' True' → logprob: -8.731423377990723

Token 17: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8148024678230286
    2. '==' → logprob: -0.9398024678230286
    3. '.' → logprob: -2.564802408218384
    4. '.lower' → logprob: -2.564802408218384
    5. ' in' → logprob: -5.314802646636963
    6. '.startswith' → logprob: -5.689802646636963
    7. '.endswith' → logprob: -6.439802646636963
    8. ' .' → logprob: -7.064802646636963
    9. '.strip' → logprob: -7.439802646636963
    10. '=' → logprob: -7.939802646636963

Token 18: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7658376693725586
    2. ' "' → logprob: -0.7658376693725586
    3. ''' → logprob: -2.7658376693725586
    4. ' '' → logprob: -5.015837669372559
    5. ''s' → logprob: -7.890837669372559
    6. ''S' → logprob: -9.140837669372559
    7. ' ' → logprob: -10.265837669372559
    8. '"S' → logprob: -11.390837669372559
    9. '"I' → logprob: -11.890837669372559
    10. ''"' → logprob: -12.765837669372559

Token 19: 'Sunny' (ID: 145166)
  Prédit: 'sun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sun' → logprob: -0.0004528374411165714
    2. 'yes' → logprob: -7.875452995300293
    3. 'Sunny' → logprob: -9.750452995300293
    4. ' sunny' → logprob: -12.500452995300293
    5. 'true' → logprob: -13.000452995300293
    6. ''s' → logprob: -13.375452995300293
    7. 'y' → logprob: -13.500452995300293
    8. 'Yes' → logprob: -13.625452995300293
    9. 'clear' → logprob: -13.875452995300293
    10. 's' → logprob: -14.250452995300293

Token 20: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0003155625017825514
    2. ''S' → logprob: -8.12531566619873
    3. ''s' → logprob: -11.75031566619873
    4. '"' → logprob: -12.50031566619873
    5. ''''' → logprob: -12.62531566619873
    6. ''"' → logprob: -14.00031566619873
    7. '"'' → logprob: -14.12531566619873
    8. ' '' → logprob: -14.25031566619873
    9. '')' → logprob: -14.50031566619873
    10. ')'' → logprob: -14.75031566619873

Token 21: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06410983204841614
    2. '

' → logprob: -3.6891098022460938
    3. '<|end|>' → logprob: -3.8141098022460938
    4. '
' → logprob: -4.314109802246094
    5. '\' → logprob: -7.439109802246094
    6. '```' → logprob: -7.939109802246094
    7. '<|end|>' → logprob: -8.064109802246094
    8. '\n' → logprob: -8.939109802246094
    9. '#' → logprob: -9.939109802246094
    10. 'de' → logprob: -10.564109802246094

Token 22: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.46806520223617554
    2. 'is' → logprob: -1.2180652618408203
    3. ' get' → logprob: -3.2180652618408203
    4. ' main' → logprob: -4.34306526184082
    5. ' def' → logprob: -4.59306526184082
    6. 'get' → logprob: -5.09306526184082
    7. 'def' → logprob: -5.34306526184082
    8. ' rain' → logprob: -6.59306526184082
    9. 'main' → logprob: -6.59306526184082
    10. 'rain' → logprob: -7.46806526184082

Token 23: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.19036798179149628
    2. ' Rain' → logprob: -2.3153679370880127
    3. ' rainy' → logprob: -3.3153679370880127
    4. 'rain' → logprob: -4.690368175506592
    5. '_cloud' → logprob: -4.940368175506592
    6. 'Rain' → logprob: -5.815368175506592
    7. ' rain' → logprob: -5.940368175506592
    8. '   ' → logprob: -6.065368175506592
    9. '_s' → logprob: -6.690368175506592
    10. ' Cloud' → logprob: -6.690368175506592

Token 24: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -0.001794658601284027
    2. 'aining' → logprob: -6.501794815063477
    3. 'a' → logprob: -8.376794815063477
    4. '``' → logprob: -11.751794815063477
    5. '```' → logprob: -11.751794815063477
    6. 'ained' → logprob: -12.001794815063477
    7. '   ' → logprob: -12.001794815063477
    8. 'ai' → logprob: -12.251794815063477
    9. 'rain' → logprob: -12.376794815063477
    10. 'Rain' → logprob: -12.626794815063477

Token 25: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0015881775179877877
    2. 'ny' → logprob: -6.501588344573975
    3. 'ning' → logprob: -10.251587867736816
    4. '(y' → logprob: -10.751587867736816
    5. 'yy' → logprob: -11.751587867736816
    6. '```' → logprob: -12.626587867736816
    7. 'ing' → logprob: -13.251587867736816
    8. ''y' → logprob: -13.376587867736816
    9. '_y' → logprob: -13.376587867736816
    10. '	y' → logprob: -13.501587867736816

Token 26: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.07899631559848785
    2. '(' → logprob: -2.578996419906616
    3. ' (' → logprob: -9.203996658325195
    4. 's' → logprob: -13.203996658325195
    5. '(S' → logprob: -13.828996658325195
    6. '(ss' → logprob: -14.578996658325195
    7. '(
' → logprob: -14.703996658325195
    8. ' ' → logprob: -14.953996658325195
    9. '('' → logprob: -14.953996658325195
    10. '(n' → logprob: -15.328996658325195

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007825937122106552
    2. ')' → logprob: -5.25782585144043
    3. '):
' → logprob: -6.00782585144043
    4. 's' → logprob: -10.63282585144043
    5. ''):' → logprob: -10.75782585144043
    6. '=' → logprob: -11.38282585144043
    7. '   ' → logprob: -11.38282585144043
    8. '):
' → logprob: -11.38282585144043
    9. ' ):' → logprob: -11.75782585144043
    10. '):

' → logprob: -11.75782585144043

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6892518997192383
    2. ' s' → logprob: -0.9392518997192383
    3. ' return' → logprob: -2.4392518997192383
    4. 's' → logprob: -4.064251899719238
    5. 'return' → logprob: -6.439251899719238
    6. '(s' → logprob: -7.439251899719238
    7. ' ' → logprob: -7.814251899719238
    8. '    ' → logprob: -9.439251899719238
    9. '  ' → logprob: -10.064251899719238
    10. '	s' → logprob: -12.564251899719238

Token 29: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.325224906206131
    2. ' s' → logprob: -1.3252248764038086
    3. 'return' (adapté à ' return') → logprob: -4.825224876403809
    4. 's' → logprob: -5.575224876403809
    5. '   ' → logprob: -9.700224876403809
    6. ' ' → logprob: -11.200224876403809
    7. '(s' → logprob: -13.825224876403809
    8. '	return' → logprob: -15.700224876403809
    9. '  ' → logprob: -16.200225830078125
    10. '    ' → logprob: -16.325225830078125

Token 30: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.03365964815020561
    2. 's' → logprob: -3.4086596965789795
    3. '(s' → logprob: -11.408659934997559
    4. ''s' → logprob: -14.158659934997559
    5. ' ' → logprob: -14.283659934997559
    6. '   ' → logprob: -15.283659934997559
    7. '	s' → logprob: -15.408659934997559
    8. ''' → logprob: -15.721159934997559
    9. ' (' → logprob: -16.096158981323242
    10. '`s' → logprob: -16.096158981323242

Token 31: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2812533676624298
    2. '==' → logprob: -1.4062533378601074
    3. ' ' → logprob: -10.406253814697266
    4. '=='' → logprob: -11.031253814697266
    5. '[' → logprob: -11.406253814697266
    6. ' in' → logprob: -11.531253814697266
    7. '.startswith' → logprob: -11.531253814697266
    8. '.endswith' → logprob: -12.031253814697266
    9. '=' → logprob: -12.406253814697266
    10. ' !=' → logprob: -13.031253814697266

Token 32: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.34884172677993774
    2. ' '' → logprob: -1.223841667175293
    3. ''S' → logprob: -7.973841667175293
    4. '"' → logprob: -10.473841667175293
    5. ' ' → logprob: -10.848841667175293
    6. ''s' → logprob: -12.848841667175293
    7. ' ' → logprob: -14.223841667175293
    8. ''r' → logprob: -14.848841667175293
    9. '`' → logprob: -14.973841667175293
    10. ' "' → logprob: -15.098841667175293

Token 33: 'Rain' (ID: 74615)
  Prédit: 'Rain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rain' → logprob: -0.007021661382168531
    2. ''' → logprob: -5.007021427154541
    3. ' Rain' → logprob: -8.2570219039917
    4. 'Sunny' → logprob: -10.5070219039917
    5. ''S' → logprob: -11.7570219039917
    6. ''Re' → logprob: -12.2570219039917
    7. ''r' → logprob: -12.8820219039917
    8. 'R' → logprob: -13.3820219039917
    9. ' rainy' → logprob: -13.7570219039917
    10. 'rain' → logprob: -14.3820219039917

Token 34: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001238004770129919
    2. ''y' → logprob: -9.125123977661133
    3. ''' → logprob: -11.250123977661133
    4. '‘y' → logprob: -14.000123977661133
    5. 'y's' → logprob: -14.250123977661133
    6. ''}' → logprob: -16.750123977661133
    7. '```' → logprob: -16.875123977661133
    8. '	y' → logprob: -17.000123977661133
    9. ''''' → logprob: -17.250123977661133
    10. 'fall' → logprob: -17.625123977661133

Token 35: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -5.931863051955588e-05
    2. '')' → logprob: -10.125059127807617
    3. ')'' → logprob: -11.500059127807617
    4. ''''' → logprob: -12.125059127807617
    5. ')' → logprob: -13.375059127807617
    6. ''
' → logprob: -13.875059127807617
    7. ' '' → logprob: -15.125059127807617
    8. '"' → logprob: -15.250059127807617
    9. '()' → logprob: -15.625059127807617
    10. '('' → logprob: -15.750059127807617

Token 36: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.7053759519476444e-05
    2. '\' → logprob: -11.000057220458984
    3. 'd' → logprob: -11.375057220458984
    4. '```' → logprob: -11.750057220458984
    5. 'for' → logprob: -12.500057220458984
    6. '
' → logprob: -12.625057220458984
    7. '#' → logprob: -12.875057220458984
    8. 'de' → logprob: -13.125057220458984
    9. '\n' → logprob: -13.375057220458984
    10. 'print' → logprob: -13.750057220458984

Token 37: ' print' (ID: 2123)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2951755225658417
    2. ' get' → logprob: -1.670175552368164
    3. ' main' → logprob: -3.295175552368164
    4. ' def' → logprob: -3.670175552368164
    5. ' predict' → logprob: -7.170175552368164
    6. 'def' → logprob: -7.420175552368164
    7. ' describe' → logprob: -7.920175552368164
    8. ' calculate' → logprob: -7.920175552368164
    9. 'is' → logprob: -8.045175552368164
    10. ' weather' → logprob: -8.045175552368164

Token 38: '_cloud' (ID: 83382)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005501965060830116
    2. '_' → logprob: -5.380501747131348
    3. '_s' → logprob: -7.255501747131348
    4. '_weather' → logprob: -10.130501747131348
    5. '("' → logprob: -10.880501747131348
    6. '('' → logprob: -11.005501747131348
    7. '_(' → logprob: -11.255501747131348
    8. ' (' → logprob: -11.380501747131348
    9. '(s' → logprob: -11.630501747131348
    10. '("("' → logprob: -11.630501747131348

Token 39: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0020605691242963076
    2. 's' → logprob: -6.377060413360596
    3. '(y' → logprob: -8.877060890197754
    4. '_y' → logprob: -9.127060890197754
    5. ' y' → logprob: -9.502060890197754
    6. '_' → logprob: -11.377060890197754
    7. '()' → logprob: -11.877060890197754
    8. 'iness' → logprob: -12.252060890197754
    9. '(s' → logprob: -13.127060890197754
    10. '(' → logprob: -13.252060890197754

Token 40: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.034456267952919006
    2. '(s' → logprob: -4.784456253051758
    3. '():' → logprob: -4.784456253051758
    4. '()' → logprob: -4.909456253051758
    5. '_' → logprob: -5.159456253051758
    6. '(_)' → logprob: -6.659456253051758
    7. 's' → logprob: -6.784456253051758
    8. '(_' → logprob: -7.784456253051758
    9. '('_' → logprob: -8.284456253051758
    10. '_s' → logprob: -8.284456253051758

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002424886915832758
    2. 'print' → logprob: -6.502424716949463
    3. ' print' → logprob: -7.002424716949463
    4. '    
' → logprob: -12.877425193786621
    5. '```' → logprob: -12.877425193786621
    6. '    ' → logprob: -13.002425193786621
    7. '   ' → logprob: -13.752425193786621
    8. '	print' → logprob: -13.752425193786621
    9. '(' → logprob: -14.002425193786621
    10. '()' → logprob: -14.627425193786621

Token 42: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6072275638580322
    2. 'print' (adapté à ' print') → logprob: -0.8572275638580322
    3. ' print' → logprob: -3.4822275638580322
    4. 'pass' → logprob: -10.107227325439453
    5. '```' → logprob: -11.357227325439453
    6. ' pass' → logprob: -12.107227325439453
    7. '	print' → logprob: -13.607227325439453
    8. ' ' → logprob: -13.857227325439453
    9. '    ' → logprob: -13.857227325439453
    10. 'pr' → logprob: -14.232227325439453

Token 43: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.588089108467102
    2. '(' → logprob: -0.838089108467102
    3. '("' → logprob: -4.4630889892578125
    4. '()' → logprob: -7.8380889892578125
    5. '("("' → logprob: -8.838088989257812
    6. '("")' → logprob: -12.713088989257812
    7. '(
' → logprob: -13.588088989257812
    8. '("""' → logprob: -13.713088989257812
    9. '('(' → logprob: -13.838088989257812
    10. ''' → logprob: -14.338088989257812

Token 44: 'Cloud' (ID: 17486)
  Prédit: 'Cloud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cloud' → logprob: -2.451116051815916e-05
    2. 'It' → logprob: -11.625024795532227
    3. 'cloud' → logprob: -12.125024795532227
    4. ' Cloud' → logprob: -12.375024795532227
    5. 'Part' → logprob: -13.375024795532227
    6. 'C' → logprob: -13.625024795532227
    7. 'Cl' → logprob: -14.000024795532227
    8. ''' → logprob: -14.625024795532227
    9. 'It's' → logprob: -14.625024795532227
    10. '.Cloud' → logprob: -15.375024795532227

Token 45: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.896309739408025e-07
    2. ' y' → logprob: -14.500000953674316
    3. 's' → logprob: -16.0
    4. ''y' → logprob: -17.0
    5. '')' → logprob: -17.375
    6. '   ' → logprob: -17.75
    7. 'less' → logprob: -18.625
    8. '(y' → logprob: -19.0
    9. '‘y' → logprob: -19.25
    10. 'ly' → logprob: -19.375

Token 46: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -6.749814019713085e-06
    2. ''' → logprob: -12.750006675720215
    3. '')
' → logprob: -13.375006675720215
    4. ')' → logprob: -13.625006675720215
    5. '")' → logprob: -15.000006675720215
    6. '!' → logprob: -15.250006675720215
    7. '()' → logprob: -15.250006675720215
    8. '.')' → logprob: -17.12500762939453
    9. ''))' → logprob: -17.25000762939453
    10. '')

' → logprob: -17.37500762939453

Token 47: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0479995459318161
    2. '
' → logprob: -3.547999620437622
    3. '<|end|>' → logprob: -4.922999382019043
    4. '\' → logprob: -5.047999382019043
    5. '\n' → logprob: -6.672999382019043
    6. '#' → logprob: -6.922999382019043
    7. '

' → logprob: -7.297999382019043
    8. '```' → logprob: -7.422999382019043
    9. 'd' → logprob: -8.047999382019043
    10. '<|end|>' → logprob: -9.297999382019043

Token 48: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.008003942668437958
    2. ' main' → logprob: -6.1330037117004395
    3. 'print' → logprob: -6.6330037117004395
    4. ' get' → logprob: -6.7580037117004395
    5. ' is' → logprob: -6.8830037117004395
    6. '_' → logprob: -7.0080037117004395
    7. '_print' → logprob: -7.7580037117004395
    8. ' def' → logprob: -8.133004188537598
    9. ' _' → logprob: -8.133004188537598
    10. ' ' → logprob: -9.508004188537598

Token 49: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.3373202681541443
    2. '('' → logprob: -1.337320327758789
    3. '_r' → logprob: -4.212320327758789
    4. '_' → logprob: -4.962320327758789
    5. '('_' → logprob: -6.712320327758789
    6. '()' → logprob: -8.712320327758789
    7. '_S' → logprob: -8.962320327758789
    8. '_cloud' → logprob: -9.712320327758789
    9. '_weather' → logprob: -10.087320327758789
    10. '_is' → logprob: -10.212320327758789

Token 50: 'unny' (ID: 128423)
  Prédit: 'unny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unny' → logprob: -2.3080716346157715e-05
    2. 'un' → logprob: -11.250022888183594
    3. 'unn' → logprob: -12.875022888183594
    4. 'now' → logprob: -13.000022888183594
    5. 't' → logprob: -13.625022888183594
    6. '_un' → logprob: -14.000022888183594
    7. 'uny' → logprob: -14.500022888183594
    8. 'n' → logprob: -14.500022888183594
    9. 'u' → logprob: -15.500022888183594
    10. 'Sunny' → logprob: -15.625022888183594

Token 51: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005118065746501088
    2. '()' → logprob: -7.750511646270752
    3. '():
' → logprob: -9.62551212310791
    4. ' ():' → logprob: -11.25051212310791
    5. '():
' → logprob: -14.62551212310791
    6. '():

' → logprob: -15.00051212310791
    7. '()>' → logprob: -15.12551212310791
    8. '()">' → logprob: -15.12551212310791
    9. ':' → logprob: -15.50051212310791
    10. ' ()' → logprob: -15.50051212310791

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15663355588912964
    2. 'print' → logprob: -2.1566336154937744
    3. ' print' → logprob: -3.5316336154937744
    4. '	print' → logprob: -12.406633377075195
    5. '(print' → logprob: -13.156633377075195
    6. ' ' → logprob: -13.656633377075195
    7. '```' → logprob: -13.656633377075195
    8. ''' → logprob: -14.031633377075195
    9. '(' → logprob: -14.656633377075195
    10. '('' → logprob: -14.781633377075195

Token 53: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.8828707804204896e-05
    2. ' print' → logprob: -10.000048637390137
    3. '   ' → logprob: -12.625048637390137
    4. 'pr' → logprob: -17.625049591064453
    5. '```' → logprob: -17.750049591064453
    6. 'prin' → logprob: -18.250049591064453
    7. ' ' → logprob: -18.625049591064453
    8. '	print' → logprob: -19.375049591064453
    9. 'printf' → logprob: -20.500049591064453
    10. '  ' → logprob: -20.625049591064453

Token 54: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.001933992956764996
    2. '(' → logprob: -6.251934051513672
    3. '("' → logprob: -12.376934051513672
    4. ' ('' → logprob: -14.626934051513672
    5. '(S' → logprob: -15.251934051513672
    6. '('(' → logprob: -15.751934051513672
    7. '(\'' → logprob: -15.751934051513672
    8. '()' → logprob: -16.501934051513672
    9. '(('' → logprob: -17.501934051513672
    10. ''' → logprob: -17.626934051513672

Token 55: 'Sunny' (ID: 145166)
  Prédit: 'Sunny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sunny' → logprob: -8.180258191714529e-06
    2. 'Sun' → logprob: -11.875008583068848
    3. ' Sunny' → logprob: -13.750008583068848
    4. 'sun' → logprob: -17.25000762939453
    5. ' sunny' → logprob: -17.25000762939453
    6. 'Cloud' → logprob: -18.37500762939453
    7. ''' → logprob: -18.62500762939453
    8. ''S' → logprob: -18.75000762939453
    9. 'SUN' → logprob: -19.50000762939453
    10. 'Bright' → logprob: -19.87500762939453

Token 56: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00024311232846230268
    2. '()' → logprob: -8.375243186950684
    3. ')' → logprob: -11.875243186950684
    4. '')
' → logprob: -12.500243186950684
    5. '')

' → logprob: -14.000243186950684
    6. ''' → logprob: -14.625243186950684
    7. '")' → logprob: -14.875243186950684
    8. '('' → logprob: -16.500242233276367
    9. 'def' → logprob: -17.125242233276367
    10. '')
' → logprob: -17.875242233276367

Token 57: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.13388703338569e-06
    2. '
' → logprob: -11.750009536743164
    3. '```' → logprob: -14.125009536743164
    4. 'd' → logprob: -15.500009536743164
    5. ' def' → logprob: -16.250009536743164
    6. '<|end|>' → logprob: -16.625009536743164
    7. 'ndef' → logprob: -17.000009536743164
    8. '\' → logprob: -17.125009536743164
    9. '	def' → logprob: -17.875009536743164
    10. '

' → logprob: -18.125009536743164

Token 58: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.0021014907397329807
    2. ' def' → logprob: -7.002101421356201
    3. 'print' → logprob: -8.12710189819336
    4. '_' → logprob: -8.37710189819336
    5. ' _' → logprob: -8.75210189819336
    6. ' is' → logprob: -9.12710189819336
    7. '_print' → logprob: -9.25210189819336
    8. ' rain' → logprob: -9.50210189819336
    9. '_r' → logprob: -9.75210189819336
    10. ' get' → logprob: -10.00210189819336

Token 59: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.04391651973128319
    2. '('' → logprob: -3.2939164638519287
    3. '('_' → logprob: -6.293916702270508
    4. '(' → logprob: -7.168916702270508
    5. 'Rain' → logprob: -7.168916702270508
    6. '_s' → logprob: -7.293916702270508
    7. '_' → logprob: -7.418916702270508
    8. '_R' → logprob: -8.168916702270508
    9. '()' → logprob: -8.293916702270508
    10. '(r' → logprob: -8.543916702270508

Token 60: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -2.3199920178740285e-05
    2. 'a' → logprob: -10.750022888183594
    3. 'rain' → logprob: -14.875022888183594
    4. 'ai' → logprob: -15.125022888183594
    5. 'aine' → logprob: -15.500022888183594
    6. 'aining' → logprob: -15.875022888183594
    7. 'ainty' → logprob: -16.000022888183594
    8. 'unny' → logprob: -16.250022888183594
    9. 'ains' → logprob: -16.375022888183594
    10. '1' → logprob: -16.750022888183594

Token 61: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.896309739408025e-07
    2. 'yy' → logprob: -15.875000953674316
    3. 'ny' → logprob: -16.125
    4. 'yd' → logprob: -16.375
    5. '```' → logprob: -16.5
    6. '	y' → logprob: -16.625
    7. 'y's' → logprob: -17.0
    8. '(y' → logprob: -17.125
    9. 'yb' → logprob: -17.375
    10. ' y' → logprob: -17.625

Token 62: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.1875571544806007e-05
    2. ' ():' → logprob: -11.500011444091797
    3. '()' → logprob: -13.625011444091797
    4. ':' → logprob: -15.000011444091797
    5. '():
' → logprob: -16.375011444091797
    6. '(' → logprob: -17.500011444091797
    7. ' ()' → logprob: -19.250011444091797
    8. '):' → logprob: -19.375011444091797
    9. '():
' → logprob: -19.625011444091797
    10. '()>' → logprob: -19.750011444091797

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000639169302303344
    2. 'print' → logprob: -8.000638961791992
    3. '('' → logprob: -8.500638961791992
    4. ' print' → logprob: -9.375638961791992
    5. '(' → logprob: -12.000638961791992
    6. ''' → logprob: -12.000638961791992
    7. ' ' → logprob: -13.750638961791992
    8. '(print' → logprob: -14.875638961791992
    9. '   ' → logprob: -15.000638961791992
    10. '```' → logprob: -15.000638961791992

Token 64: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0011818927014246583
    2. '   ' → logprob: -7.0011820793151855
    3. ' print' → logprob: -8.251181602478027
    4. '('' → logprob: -11.876181602478027
    5. '(print' → logprob: -13.376181602478027
    6. ' ' → logprob: -15.001181602478027
    7. '(' → logprob: -15.376181602478027
    8. 'pr' → logprob: -15.876181602478027
    9. '	print' → logprob: -16.751182556152344
    10. ''' → logprob: -17.126182556152344

Token 65: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.008624974638223648
    2. '(' → logprob: -4.758625030517578
    3. '('(' → logprob: -12.008625030517578
    4. '(
' → logprob: -13.633625030517578
    5. ' ('' → logprob: -14.133625030517578
    6. ''' → logprob: -14.383625030517578
    7. '(\'' → logprob: -14.508625030517578
    8. '("' → logprob: -14.633625030517578
    9. '(

' → logprob: -15.008625030517578
    10. '('_' → logprob: -16.008625030517578

Token 66: 'Rain' (ID: 74615)
  Prédit: 'Rain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rain' → logprob: -1.8624639324116288e-06
    2. ''' → logprob: -13.750001907348633
    3. 'R' → logprob: -14.750001907348633
    4. 'Ra' → logprob: -16.000001907348633
    5. ' Rain' → logprob: -16.500001907348633
    6. '')' → logprob: -16.625001907348633
    7. 'Sunny' → logprob: -16.750001907348633
    8. 'rain' → logprob: -17.250001907348633
    9. '雨' → logprob: -18.375001907348633
    10. 'Rainbow' → logprob: -19.000001907348633

Token 67: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.228561349213123e-05
    2. '')' → logprob: -10.000052452087402
    3. ''y' → logprob: -12.125052452087402
    4. ''' → logprob: -13.625052452087402
    5. ')' → logprob: -15.625052452087402
    6. 'y's' → logprob: -16.875051498413086
    7. '‘y' → logprob: -17.500051498413086
    8. ')y' → logprob: -18.375051498413086
    9. ' y' → logprob: -18.500051498413086
    10. ')'' → logprob: -18.750051498413086

Token 68: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00033200893085449934
    2. ')' → logprob: -8.12533187866211
    3. '()' → logprob: -11.12533187866211
    4. '')
' → logprob: -11.12533187866211
    5. ''' → logprob: -12.25033187866211
    6. '")' → logprob: -14.00033187866211
    7. '')

' → logprob: -14.62533187866211
    8. 'def' → logprob: -15.87533187866211
    9. '```' → logprob: -16.25033187866211
    10. '('' → logprob: -18.00033187866211

Token 69: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.735893965815194e-05
    2. '

' → logprob: -12.375017166137695
    3. '```' → logprob: -12.375017166137695
    4. '
' → logprob: -12.500017166137695
    5. 'd' → logprob: -13.750017166137695
    6. '\' → logprob: -13.875017166137695
    7. 'weather' → logprob: -13.875017166137695
    8. 'for' → logprob: -14.125017166137695
    9. 'if' → logprob: -14.875017166137695
    10. 'ndef' → logprob: -15.750017166137695

Token 70: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.20232458412647247
    2. ' weather' → logprob: -2.202324628829956
    3. ' decide' → logprob: -4.202324390411377
    4. ' get' → logprob: -4.327324390411377
    5. ' predict' → logprob: -4.327324390411377
    6. ' forecast' → logprob: -4.452324390411377
    7. ' check' → logprob: -4.702324390411377
    8. ' determine' → logprob: -5.952324390411377
    9. ' describe' → logprob: -6.202324390411377
    10. ' classify' → logprob: -6.327324390411377

Token 71: '_weather' (ID: 170154)
  Prédit: '_weather'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weather' → logprob: -0.5204114317893982
    2. '_' → logprob: -1.395411491394043
    3. '_input' → logprob: -2.520411491394043
    4. '(' → logprob: -3.645411491394043
    5. '_day' → logprob: -3.770411491394043
    6. '_(' → logprob: -4.895411491394043
    7. '_fore' → logprob: -5.770411491394043
    8. '(s' → logprob: -6.020411491394043
    9. '_status' → logprob: -6.020411491394043
    10. '_s' → logprob: -6.270411491394043

Token 72: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3443011939525604
    2. '(s' → logprob: -1.4693012237548828
    3. '():' → logprob: -3.844301223754883
    4. '(weather' → logprob: -4.469301223754883
    5. '(day' → logprob: -4.719301223754883
    6. ' (' → logprob: -5.469301223754883
    7. '(status' → logprob: -5.844301223754883
    8. '(state' → logprob: -5.844301223754883
    9. '(condition' → logprob: -5.844301223754883
    10. '(event' → logprob: -6.844301223754883

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -9.341087570646778e-05
    2. ')' → logprob: -9.750093460083008
    3. '):
' → logprob: -10.500093460083008
    4. '_' → logprob: -12.625093460083008
    5. ':' → logprob: -13.125093460083008
    6. ''):' → logprob: -14.250093460083008
    7. ' ):' → logprob: -14.500093460083008
    8. '   ' → logprob: -14.875093460083008
    9. '"):' → logprob: -15.875093460083008
    10. 's' → logprob: -16.500093460083008

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002831464516930282
    2. ' if' → logprob: -9.000283241271973
    3. '    
' → logprob: -9.875283241271973
    4. '<|end|>' → logprob: -10.000283241271973
    5. ':' → logprob: -10.125283241271973
    6. '<|end|>' → logprob: -11.500283241271973
    7. '```' → logprob: -12.875283241271973
    8. 'if' → logprob: -13.500283241271973
    9. '    ' → logprob: -13.500283241271973
    10. '	if' → logprob: -13.625283241271973

Token 75: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4131515622138977
    2. '   ' → logprob: -1.163151502609253
    3. 'if' (adapté à ' if') → logprob: -3.663151502609253
    4. '```' → logprob: -9.663151741027832
    5. '	if' → logprob: -9.788151741027832
    6. ' ' → logprob: -9.913151741027832
    7. '    
' → logprob: -9.913151741027832
    8. ' 
' → logprob: -11.163151741027832
    9. '   ' → logprob: -11.788151741027832
    10. '    ' → logprob: -12.163151741027832

Token 76: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00032831361750140786
    2. '_' → logprob: -8.250328063964844
    3. 'is' → logprob: -10.750328063964844
    4. ' ' → logprob: -11.000328063964844
    5. ' ' → logprob: -11.125328063964844
    6. ' _' → logprob: -11.625328063964844
    7. 's' → logprob: -13.250328063964844
    8. '_is' → logprob: -13.625328063964844
    9. ' s' → logprob: -14.125328063964844
    10. '_s' → logprob: -15.000328063964844

Token 77: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0002075933152809739
    2. '_' → logprob: -9.250207901000977
    3. '_r' → logprob: -9.750207901000977
    4. '_cloud' → logprob: -10.000207901000977
    5. ' _' → logprob: -12.750207901000977
    6. 'sun' → logprob: -13.125207901000977
    7. 'Sunny' → logprob: -13.875207901000977
    8. 's' → logprob: -15.000207901000977
    9. '_sn' → logprob: -15.000207901000977
    10. ' Sunny' → logprob: -16.000207901000977

Token 78: 'unny' (ID: 128423)
  Prédit: 'unny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unny' → logprob: -1.747814349073451e-05
    2. 'un' → logprob: -11.875017166137695
    3. '_un' → logprob: -12.875017166137695
    4. 'uny' → logprob: -12.875017166137695
    5. 'sun' → logprob: -13.000017166137695
    6. 'u' → logprob: -13.625017166137695
    7. 'Sunny' → logprob: -14.125017166137695
    8. '_s' → logprob: -15.250017166137695
    9. '_' → logprob: -15.625017166137695
    10. 's' → logprob: -15.875017166137695

Token 79: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00015467056073248386
    2. '(' → logprob: -9.000154495239258
    3. ' (' → logprob: -10.375154495239258
    4. 's' → logprob: -18.250154495239258
    5. ' ' → logprob: -18.500154495239258
    6. '   ' → logprob: -20.750154495239258
    7. '(S' → logprob: -20.875154495239258
    8. '((' → logprob: -20.875154495239258
    9. '(i' → logprob: -21.125154495239258
    10. '```' → logprob: -21.125154495239258

Token 80: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017934665083885193
    2. '):
' → logprob: -6.501793384552002
    3. ' ):' → logprob: -8.75179386138916
    4. ')' → logprob: -9.12679386138916
    5. '():' → logprob: -11.12679386138916
    6. ':' → logprob: -12.00179386138916
    7. '   ' → logprob: -14.12679386138916
    8. '):
' → logprob: -14.37679386138916
    9. ''):' → logprob: -14.50179386138916
    10. '()' → logprob: -15.00179386138916

Token 81: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23061130940914154
    2. '():' → logprob: -2.1056113243103027
    3. '():
' → logprob: -2.9806113243103027
    4. ':
' → logprob: -3.6056113243103027
    5. '       ' → logprob: -5.730611324310303
    6. '()' → logprob: -6.480611324310303
    7. '   ' → logprob: -6.855611324310303
    8. '):' → logprob: -8.480610847473145
    9. '):
' → logprob: -9.730610847473145
    10. '()
' → logprob: -10.980610847473145

Token 82: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2526533305644989
    2. 'print' (adapté à ' print') → logprob: -1.7526533603668213
    3. ' print' → logprob: -3.8776533603668213
    4. '
' → logprob: -4.252653121948242
    5. '   ' → logprob: -4.752653121948242
    6. '\n' → logprob: -5.502653121948242
    7. '    
' → logprob: -7.252653121948242
    8. '        
' → logprob: -7.877653121948242
    9. '           ' → logprob: -8.127653121948242
    10. '(print' → logprob: -8.752653121948242

Token 83: '_cloud' (ID: 83382)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00031746976310387254
    2. '_' → logprob: -8.375317573547363
    3. '('_' → logprob: -9.500317573547363
    4. '(' → logprob: -13.000317573547363
    5. '(_' → logprob: -13.375317573547363
    6. '_S' → logprob: -13.625317573547363
    7. ' _' → logprob: -13.625317573547363
    8. '("_' → logprob: -13.875317573547363
    9. '```' → logprob: -13.875317573547363
    10. ''_' → logprob: -14.000317573547363

Token 84: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.6240566083070007e-06
    2. ' y' → logprob: -13.625001907348633
    3. ''y' → logprob: -15.875001907348633
    4. '_y' → logprob: -16.625001907348633
    5. '	y' → logprob: -16.875001907348633
    6. '(y' → logprob: -16.875001907348633
    7. 'y's' → logprob: -17.375001907348633
    8. '‘y' → logprob: -19.500001907348633
    9. '```' → logprob: -19.750001907348633
    10. '   ' → logprob: -19.750001907348633

Token 85: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000954098126385361
    2. '()
' → logprob: -7.2509541511535645
    3. '(' → logprob: -8.875953674316406
    4. ')' → logprob: -9.750953674316406
    5. '()

' → logprob: -10.625953674316406
    6. ' ()' → logprob: -11.750953674316406
    7. '())' → logprob: -12.000953674316406
    8. '()
' → logprob: -13.000953674316406
    9. ' ' → logprob: -13.375953674316406
    10. '()\' → logprob: -13.500953674316406

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17939187586307526
    2. 'elif' → logprob: -2.679391860961914
    3. '\n' → logprob: -3.054391860961914
    4. '
' → logprob: -3.804391860961914
    5. '    
' → logprob: -4.554391860961914
    6. 'else' → logprob: -5.429391860961914
    7. ' elif' → logprob: -5.804391860961914
    8. '()
' → logprob: -6.054391860961914
    9. '  
' → logprob: -6.804391860961914
    10. '<|end|>' → logprob: -7.054391860961914

Token 87: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.183580681681633
    2. ' elif' → logprob: -2.0585806369781494
    3. '   ' → logprob: -4.3085808753967285
    4. 'else' → logprob: -4.6835808753967285
    5. '
' → logprob: -5.3085808753967285
    6. ' else' → logprob: -5.4335808753967285
    7. '\n' → logprob: -5.5585808753967285
    8. '	elif' → logprob: -6.3085808753967285
    9. '    
' → logprob: -6.9335808753967285
    10. '<|end|>' → logprob: -7.6835808753967285

Token 88: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00016277639952022582
    2. 'is' → logprob: -8.875163078308105
    3. ' ' → logprob: -11.250163078308105
    4. ' ' → logprob: -12.000163078308105
    5. 's' → logprob: -13.500163078308105
    6. ' not' → logprob: -13.875163078308105
    7. '    ' → logprob: -14.750163078308105
    8. '<|end|>' → logprob: -15.250163078308105
    9. '	is' → logprob: -15.375163078308105
    10. 'not' → logprob: -16.00016212463379

Token 89: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.0013171432074159384
    2. '_s' → logprob: -7.001317024230957
    3. 'rain' → logprob: -8.251317024230957
    4. '_' → logprob: -10.126317024230957
    5. ' _' → logprob: -10.126317024230957
    6. 's' → logprob: -11.001317024230957
    7. 'r' → logprob: -11.001317024230957
    8. '(_' → logprob: -12.501317024230957
    9. ' rainy' → logprob: -12.626317024230957
    10. 'y' → logprob: -12.876317024230957

Token 90: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -0.001877947011962533
    2. 'a' → logprob: -6.501877784729004
    3. 'ai' → logprob: -8.251877784729004
    4. 'rain' → logprob: -11.126877784729004
    5. 'airy' → logprob: -11.251877784729004
    6. 'ay' → logprob: -11.376877784729004
    7. 'any' → logprob: -11.626877784729004
    8. 'iny' → logprob: -11.751877784729004
    9. '```' → logprob: -12.001877784729004
    10. 'aisy' → logprob: -12.251877784729004

Token 91: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.803360495017841e-05
    2. 't' → logprob: -10.250078201293945
    3. ' y' → logprob: -10.875078201293945
    4. 's' → logprob: -12.125078201293945
    5. '(y' → logprob: -12.375078201293945
    6. '_y' → logprob: -12.500078201293945
    7. 'a' → logprob: -12.750078201293945
    8. '	y' → logprob: -13.125078201293945
    9. '(' → logprob: -13.625078201293945
    10. ''y' → logprob: -14.750078201293945

Token 92: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0013305948814377189
    2. '(' → logprob: -6.626330375671387
    3. ' (' → logprob: -12.376330375671387
    4. 's' → logprob: -15.001330375671387
    5. ')' → logprob: -17.501331329345703
    6. ' ' → logprob: -17.751331329345703
    7. '(S' → logprob: -18.626331329345703
    8. '(n' → logprob: -19.126331329345703
    9. '(es' → logprob: -19.251331329345703
    10. '(
' → logprob: -19.501331329345703

Token 93: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.37720248103141785
    2. '(s' → logprob: -1.2522025108337402
    3. 's' → logprob: -4.12720251083374
    4. ')' → logprob: -4.50220251083374
    5. '):
' → logprob: -7.00220251083374
    6. ')s' → logprob: -9.377202033996582
    7. '   ' → logprob: -9.627202033996582
    8. ':' → logprob: -10.877202033996582
    9. ' s' → logprob: -11.002202033996582
    10. '(' → logprob: -11.627202033996582

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016541173681616783
    2. 'print' → logprob: -7.501654148101807
    3. '   ' → logprob: -8.251653671264648
    4. '()' → logprob: -8.251653671264648
    5. '(' → logprob: -9.251653671264648
    6. ':' → logprob: -9.751653671264648
    7. ' print' → logprob: -9.751653671264648
    8. '
' → logprob: -10.001653671264648
    9. '        
' → logprob: -10.126653671264648
    10. '```' → logprob: -10.126653671264648

Token 95: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16271522641181946
    2. '       ' → logprob: -2.662715196609497
    3. ' print' → logprob: -2.787715196609497
    4. '   ' → logprob: -5.162715435028076
    5. '()
' → logprob: -5.662715435028076
    6. '
' → logprob: -5.912715435028076
    7. '()' → logprob: -6.537715435028076
    8. '```' → logprob: -6.537715435028076
    9. '(print' → logprob: -7.037715435028076
    10. ' ' → logprob: -7.662715435028076

Token 96: '_s' (ID: 1278)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.05615063011646271
    2. '_s' → logprob: -3.0561506748199463
    3. '('_' → logprob: -5.681150436401367
    4. ''_' → logprob: -5.806150436401367
    5. '_' → logprob: -7.056150436401367
    6. '_cloud' → logprob: -9.931150436401367
    7. '(_' → logprob: -10.056150436401367
    8. '_ra' → logprob: -10.806150436401367
    9. '_y' → logprob: -10.931150436401367
    10. 'y' → logprob: -11.181150436401367

Token 97: 'unny' (ID: 128423)
  Prédit: 'unny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unny' → logprob: -0.06409294903278351
    2. 'u' → logprob: -3.0640928745269775
    3. 'un' → logprob: -4.439093112945557
    4. 'uny' → logprob: -5.939093112945557
    5. 'a' → logprob: -7.814093112945557
    6. '_un' → logprob: -9.189092636108398
    7. 'unn' → logprob: -9.314092636108398
    8. '_u' → logprob: -9.314092636108398
    9. 't' → logprob: -10.439092636108398
    10. '<u' → logprob: -10.564092636108398

Token 98: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0032018350902944803
    2. '()
' → logprob: -5.753201961517334
    3. '(' → logprob: -10.878201484680176
    4. '()

' → logprob: -12.878201484680176
    5. '()\' → logprob: -13.753201484680176
    6. '()
' → logprob: -14.753201484680176
    7. '(
' → logprob: -14.753201484680176
    8. ' ()' → logprob: -15.253201484680176
    9. '()`' → logprob: -15.253201484680176
    10. '()<' → logprob: -16.378202438354492

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012293596751987934
    2. 'else' → logprob: -4.637293815612793
    3. ' else' → logprob: -6.637293815612793
    4. 'elif' → logprob: -7.137293815612793
    5. '	else' → logprob: -9.512293815612793
    6. '```' → logprob: -9.762293815612793
    7. '	elif' → logprob: -9.887293815612793
    8. ' elif' → logprob: -10.012293815612793
    9. '    
' → logprob: -10.262293815612793
    10. 'n' → logprob: -10.387293815612793

Token 100: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2681888937950134
    2. 'else' (adapté à ' else') → logprob: -1.7681889533996582
    3. ' else' → logprob: -2.768188953399658
    4. 'elif' → logprob: -6.518188953399658
    5. ' elif' → logprob: -8.5181884765625
    6. '	else' → logprob: -9.1431884765625
    7. ' ' → logprob: -11.3931884765625
    8. '	elif' → logprob: -11.3931884765625
    9. '_else' → logprob: -12.1431884765625
    10. 'e' → logprob: -13.0181884765625

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002810105914250016
    2. ':
' → logprob: -5.877810001373291
    3. '   ' → logprob: -13.12781047821045
    4. ':
' → logprob: -13.87781047821045
    5. ' :' → logprob: -13.87781047821045
    6. ':return' → logprob: -15.12781047821045
    7. ':

' → logprob: -15.25281047821045
    8. '       ' → logprob: -15.50281047821045
    9. ':def' → logprob: -15.62781047821045
    10. ' :
' → logprob: -15.87781047821045

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4575378894805908
    2. '   ' → logprob: -1.5825378894805908
    3. 'print' → logprob: -1.9575378894805908
    4. ' print' → logprob: -3.957537889480591
    5. '	print' → logprob: -7.332537651062012
    6. '    ' → logprob: -8.457537651062012
    7. '```' → logprob: -8.707537651062012
    8. '    
' → logprob: -9.332537651062012
    9. '(print' → logprob: -9.332537651062012
    10. ' ' → logprob: -9.832537651062012

Token 103: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.1128595769405365
    2. ' print' → logprob: -2.2378594875335693
    3. '   ' → logprob: -10.737859725952148
    4. '	print' → logprob: -12.487859725952148
    5. '```' → logprob: -12.612859725952148
    6. ' ' → logprob: -12.862859725952148
    7. '       ' → logprob: -13.362859725952148
    8. '(print' → logprob: -13.862859725952148
    9. '.print' → logprob: -14.112859725952148
    10. '_print' → logprob: -14.112859725952148

Token 104: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.05390728637576103
    2. '_' → logprob: -3.8039073944091797
    3. '('_' → logprob: -3.9289073944091797
    4. ''_' → logprob: -4.67890739440918
    5. '_s' → logprob: -8.05390739440918
    6. '_cloud' → logprob: -8.55390739440918
    7. '"_' → logprob: -8.80390739440918
    8. '("_' → logprob: -8.92890739440918
    9. '(' → logprob: -9.17890739440918
    10. '```' → logprob: -10.05390739440918

Token 105: 'ain' (ID: 524)
  Prédit: 'ain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ain' → logprob: -0.0018264309037476778
    2. 'a' → logprob: -6.376826286315918
    3. 'ai' → logprob: -9.501826286315918
    4. 'unny' → logprob: -12.251826286315918
    5. 'any' → logprob: -12.376826286315918
    6. 'rain' → logprob: -12.376826286315918
    7. 'airy' → logprob: -12.376826286315918
    8. 'aine' → logprob: -12.751826286315918
    9. 'cloud' → logprob: -13.126826286315918
    10. ' ain' → logprob: -13.126826286315918

Token 106: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -8.061054359131958e-06
    2. ' y' → logprob: -12.375007629394531
    3. '	y' → logprob: -13.500007629394531
    4. 'y's' → logprob: -13.875007629394531
    5. ''y' → logprob: -14.500007629394531
    6. '```' → logprob: -15.750007629394531
    7. '_y' → logprob: -16.12500762939453
    8. '(y' → logprob: -16.25000762939453
    9. '‘y' → logprob: -16.37500762939453
    10. ';y' → logprob: -16.50000762939453

Token 107: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.822646693966817e-06
    2. '(' → logprob: -12.125007629394531
    3. '()
' → logprob: -14.125007629394531
    4. ' ()' → logprob: -14.750007629394531
    5. '()`' → logprob: -14.750007629394531
    6. '()

' → logprob: -15.000007629394531
    7. '()"' → logprob: -16.25000762939453
    8. '()]' → logprob: -16.87500762939453
    9. '()<' → logprob: -17.00000762939453
    10. '();' → logprob: -17.37500762939453

Token 108: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8210989832878113
    2. '
' → logprob: -1.071099042892456
    3. '\n' → logprob: -2.446099042892456
    4. 'n' → logprob: -3.821099042892456
    5. '' → logprob: -4.196098804473877
    6. '```' → logprob: -4.196098804473877
    7. '\' → logprob: -4.321098804473877
    8. 'd' → logprob: -4.446098804473877
    9. '(' → logprob: -4.821098804473877
    10. ')' → logprob: -5.196098804473877

Token 109: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.000839642365463078
    2. ' process' → logprob: -7.375839710235596
    3. ' get' → logprob: -9.375839233398438
    4. ' run' → logprob: -9.875839233398438
    5. ' ' → logprob: -10.250839233398438
    6. ' space' → logprob: -12.000839233398438
    7. ' test' → logprob: -12.000839233398438
    8. ' __' → logprob: -12.500839233398438
    9. ' weather' → logprob: -12.875839233398438
    10. ' _' → logprob: -13.000839233398438

Token 110: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00103686039801687
    2. '(' → logprob: -7.376036643981934
    3. '()' → logprob: -7.876036643981934
    4. '():
' → logprob: -11.001036643981934
    5. ':' → logprob: -12.001036643981934
    6. ' ():' → logprob: -12.626036643981934
    7. '()">' → logprob: -14.251036643981934
    8. '()>' → logprob: -14.376036643981934
    9. '(:' → logprob: -14.501036643981934
    10. '(":' → logprob: -14.751036643981934

Token 111: '   ' (ID: 271)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7556725740432739
    2. '   ' → logprob: -0.7556725740432739
    3. 's' → logprob: -3.0056724548339844
    4. ' weather' → logprob: -4.630672454833984
    5. 'weather' → logprob: -7.255672454833984
    6. ' input' → logprob: -8.255672454833984
    7. '    
' → logprob: -9.130672454833984
    8. ' user' → logprob: -9.755672454833984
    9. 'input' → logprob: -9.880672454833984
    10. '
' → logprob: -10.505672454833984

Token 112: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.383352130651474
    2. ' s' → logprob: -1.2583521604537964
    3. 'weather' → logprob: -3.883352041244507
    4. ' weather' → logprob: -4.383352279663086
    5. '   ' → logprob: -6.758352279663086
    6. 'input' → logprob: -10.758352279663086
    7. ' input' → logprob: -11.258352279663086
    8. '    
' → logprob: -12.633352279663086
    9. 'while' → logprob: -12.758352279663086
    10. ' while' → logprob: -12.883352279663086

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00043853666284121573
    2. '=' → logprob: -7.750438690185547
    3. ' ' → logprob: -12.500438690185547
    4. '  ' → logprob: -12.625438690185547
    5. ' =
' → logprob: -15.375438690185547
    6. '.' → logprob: -15.750438690185547
    7. '   ' → logprob: -15.875438690185547
    8. ',' → logprob: -16.625438690185547
    9. '_' → logprob: -16.875438690185547
    10. ')' → logprob: -17.000438690185547

Token 114: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.02324652671813965
    2. 'get' → logprob: -3.7732465267181396
    3. ' input' → logprob: -14.398246765136719
    4. '	get' → logprob: -15.023246765136719
    5. '(get' → logprob: -15.523246765136719
    6. 'input' → logprob: -17.14824676513672
    7. '_get' → logprob: -17.39824676513672
    8. ')get' → logprob: -18.02324676513672
    9. '=get' → logprob: -18.39824676513672
    10. ' ' → logprob: -18.52324676513672

Token 115: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00016349162615370005
    2. '_' → logprob: -8.750163078308105
    3. '_in' → logprob: -13.000163078308105
    4. '_user' → logprob: -13.875163078308105
    5. ' _' → logprob: -14.250163078308105
    6. '_inputs' → logprob: -15.250163078308105
    7. '_s' → logprob: -15.750163078308105
    8. '_line' → logprob: -15.875163078308105
    9. '_Input' → logprob: -16.000164031982422
    10. '()' → logprob: -16.125164031982422

Token 116: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.688212614681106e-05
    2. '()
' → logprob: -11.625017166137695
    3. '(' → logprob: -12.625017166137695
    4. ' ()' → logprob: -13.000017166137695
    5. '()(' → logprob: -14.750017166137695
    6. '()

' → logprob: -15.000017166137695
    7. '()`' → logprob: -15.125017166137695
    8. '`()' → logprob: -15.375017166137695
    9. '().' → logprob: -15.875017166137695
    10. ' ' → logprob: -16.250017166137695

Token 117: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00796443596482277
    2. '   ' → logprob: -5.882964611053467
    3. ' 
' → logprob: -6.257964611053467
    4. '    
' → logprob: -6.382964611053467
    5. '  
' → logprob: -6.757964611053467
    6. '<|end|>' → logprob: -9.257964134216309
    7. '
' → logprob: -9.382964134216309
    8. '   
' → logprob: -9.882964134216309
    9. '' → logprob: -10.007964134216309
    10. '\n' → logprob: -10.632964134216309

Token 118: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.02338710054755211
    2. ' process' → logprob: -3.7733871936798096
    3. '   ' → logprob: -9.02338695526123
    4. '	process' → logprob: -11.14838695526123
    5. '(process' → logprob: -12.64838695526123
    6. '.process' → logprob: -13.64838695526123
    7. ' ' → logprob: -14.02338695526123
    8. '_process' → logprob: -14.77338695526123
    9. 'proces' → logprob: -15.02338695526123
    10. '
' → logprob: -15.64838695526123

Token 119: '_weather' (ID: 170154)
  Prédit: '_weather'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weather' → logprob: -0.00021212305000517517
    2. '_' → logprob: -8.500211715698242
    3. '_w' → logprob: -13.000211715698242
    4. '_we' → logprob: -13.250211715698242
    5. '_s' → logprob: -13.375211715698242
    6. '_temperature' → logprob: -14.375211715698242
    7. '(_' → logprob: -14.500211715698242
    8. '_water' → logprob: -14.875211715698242
    9. '_week' → logprob: -15.500211715698242
    10. '_weapon' → logprob: -15.625211715698242

Token 120: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.008621077984571457
    2. '(' → logprob: -4.7586212158203125
    3. ' (' → logprob: -12.008621215820312
    4. 's' → logprob: -16.133621215820312
    5. '(
' → logprob: -16.258621215820312
    6. '(ss' → logprob: -16.508621215820312
    7. ' ' → logprob: -17.758621215820312
    8. '()' → logprob: -18.508621215820312
    9. '('' → logprob: -18.508621215820312
    10. '(S' → logprob: -18.633621215820312

Token 121: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. ')
' → logprob: -11.875007629394531
    3. '()' → logprob: -14.625007629394531
    4. ' )' → logprob: -14.875007629394531
    5. '())' → logprob: -16.62500762939453
    6. ')

' → logprob: -18.50000762939453
    7. '))' → logprob: -18.62500762939453
    8. ')`' → logprob: -19.25000762939453
    9. ')#' → logprob: -19.37500762939453
    10. '}' → logprob: -19.50000762939453

Token 122: 'main' (ID: 7731)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35217687487602234
    2. '<|end|>' → logprob: -1.6021769046783447
    3. '\n' → logprob: -3.2271769046783447
    4. 'if' → logprob: -3.6021769046783447
    5. '#' → logprob: -5.102176666259766
    6. ')' → logprob: -5.727176666259766
    7. '```' → logprob: -5.727176666259766
    8. '\' → logprob: -5.852176666259766
    9. '()' → logprob: -5.977176666259766
    10. 'main' → logprob: -6.102176666259766

Token 123: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009155054576694965
    2. '(' → logprob: -7.00091552734375
    3. '()
' → logprob: -12.87591552734375
    4. '()`' → logprob: -14.75091552734375
    5. ' ()' → logprob: -15.25091552734375
    6. '()

' → logprob: -15.50091552734375
    7. '();' → logprob: -15.87591552734375
    8. '(
' → logprob: -16.25091552734375
    9. '_' → logprob: -16.75091552734375
    10. '()"' → logprob: -17.00091552734375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 121
Tokens correctement prédits (1ère position, stricte): 68
Tokens correctement prédits (1ère position, avec adaptation): 76
Tokens correctement prédits (top 10): 106
Précision stricte (1ère position): 56.20%
Précision adaptée (1ère position): 62.81%
Précision (top 10): 87.60%
================================================================================
