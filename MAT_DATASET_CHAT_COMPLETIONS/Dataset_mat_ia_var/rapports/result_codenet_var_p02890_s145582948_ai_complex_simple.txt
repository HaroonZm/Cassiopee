================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import accumulate, islice, repeat, chain
from operator import itemgetter

def main():
    N = int(input())
    A = list(map(int, input().split()))

    # Construire C d'une manière compliquée
    C = reduce(lambda c, x: [a + (1 if i == x else 0) for i, a in enumerate(c)], A, [0] * (N + 1))
    
    # Index avancé sur le décompte des fréquences (D)
    D = [0] * (N + 2)
    for i, count in enumerate(C):
        if count:
            Dslice = list(islice(repeat(i, count), count))  # inutilement complexe
            D[i] += len(Dslice)
    
    # Calcul de S avec accumulate déguisé
    S = list(chain([0], accumulate(islice(D, 1, None))))
    f = [0] * (N + 1)
    list(map(lambda x: f.__setitem__(x, S[x] // x if x else 0), range(N + 1)))
    
    # Générer toutes les réponses d'une façon tordue
    prev_ans = [N]
    result = []
    for K in range(1, N + 1):
        candidates = [
            x for x in range(prev_ans[-1], 0, -1)
            if f[x] >= K
        ]
        a = next(iter(candidates), 0)
        result.append(a)
        prev_ans.append(a)
    
    print('\n'.join(map(str, result)))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3026095926761627
    2. 'partial' → logprob: -1.8026095628738403
    3. 'reduce' → logprob: -2.55260968208313
    4. 'l' → logprob: -4.677609443664551
    5. ' wraps' → logprob: -4.802609443664551
    6. 'cached' → logprob: -8.05260944366455
    7. 'cache' → logprob: -8.55260944366455
    8. 'cmp' → logprob: -9.05260944366455
    9. ' partial' → logprob: -9.42760944366455
    10. ' l' → logprob: -9.80260944366455

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019195254892110825
    2. '(lambda' → logprob: -4.394195079803467
    3. '.' → logprob: -5.144195079803467
    4. ',' → logprob: -8.019195556640625
    5. ' (' → logprob: -8.519195556640625
    6. '```' → logprob: -9.519195556640625
    7. '(
' → logprob: -10.144195556640625
    8. '\(' → logprob: -10.269195556640625
    9. '\' → logprob: -10.394195556640625
    10. 'lambda' → logprob: -11.019195556640625

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.8743318915367126
    2. ' operator' → logprob: -1.4993319511413574
    3. ' itertools' → logprob: -1.6243319511413574
    4. ' collections' → logprob: -1.8743319511413574
    5. ' os' → logprob: -4.874331951141357
    6. 'operator' → logprob: -7.499331951141357
    7. ' typing' → logprob: -8.4993314743042
    8. ' sys' → logprob: -8.6243314743042
    9. 'collections' → logprob: -8.9993314743042
    10. 'math' → logprob: -8.9993314743042

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.180752232670784
    2. 'import' → logprob: -1.8057522773742676
    3. '.' → logprob: -7.305752277374268
    4. '.import' → logprob: -8.68075180053711
    5. ' .' → logprob: -9.93075180053711
    6. '	import' → logprob: -10.05575180053711
    7. ' ' → logprob: -10.30575180053711
    8. '_import' → logprob: -11.43075180053711
    9. '.groupby' → logprob: -12.05575180053711
    10. '.im' → logprob: -12.30575180053711

Token 8: ' accumulate' (ID: 74226)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.8000409603118896
    2. 'group' → logprob: -2.0500409603118896
    3. 'acc' → logprob: -2.3000409603118896
    4. 'count' → logprob: -2.4250409603118896
    5. ' cycle' → logprob: -2.6750409603118896
    6. ' accumulate' → logprob: -3.1750409603118896
    7. 'cycle' → logprob: -3.3000409603118896
    8. ' chain' → logprob: -3.6750409603118896
    9. 'chain' → logprob: -4.175041198730469
    10. 'com' → logprob: -4.300041198730469

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.033279210329055786
    2. '(
' → logprob: -3.5332791805267334
    3. 'def' → logprob: -6.4082794189453125
    4. ',' → logprob: -7.2832794189453125
    5. '```' → logprob: -8.158279418945312
    6. '\' → logprob: -8.533279418945312
    7. '\n' → logprob: -8.658279418945312
    8. '`' → logprob: -9.533279418945312
    9. '(

' → logprob: -9.533279418945312
    10. '\(' → logprob: -9.783279418945312

Token 10: ' is' (ID: 382)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.5179258584976196
    2. 'chain' → logprob: -1.8929258584976196
    3. ' group' → logprob: -2.26792573928833
    4. ' chain' → logprob: -2.39292573928833
    5. 'product' → logprob: -3.89292573928833
    6. 'com' → logprob: -4.01792573928833
    7. ' product' → logprob: -5.26792573928833
    8. 'count' → logprob: -5.39292573928833
    9. 'cycle' → logprob: -6.26792573928833
    10. 'per' → logprob: -6.26792573928833

Token 11: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -4.894790981779806e-05
    2. 'lic' → logprob: -10.625048637390137
    3. '```' → logprob: -11.875048637390137
    4. 'l' → logprob: -12.375048637390137
    5. '``' → logprob: -12.500048637390137
    6. 'liced' → logprob: -13.500048637390137
    7. '#' → logprob: -13.625048637390137
    8. 'licing' → logprob: -13.875048637390137
    9. 'lices' → logprob: -14.000048637390137
    10. '>' → logprob: -14.250048637390137

Token 12: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048122938722372055
    2. '(
' → logprob: -3.1731228828430176
    3. ',' → logprob: -5.923122882843018
    4. 'def' → logprob: -7.173122882843018
    5. '\' → logprob: -7.673122882843018
    6. '\n' → logprob: -7.923122882843018
    7. '(

' → logprob: -9.048123359680176
    8. '[' → logprob: -9.173123359680176
    9. '
' → logprob: -9.298123359680176
    10. '```' → logprob: -9.423123359680176

Token 13: ' repeat' (ID: 22962)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -1.0907721519470215
    2. 'count' → logprob: -1.5907721519470215
    3. 'group' → logprob: -1.7157721519470215
    4. ' chain' → logprob: -1.9657721519470215
    5. ' group' → logprob: -3.3407721519470215
    6. 'cycle' → logprob: -3.4657721519470215
    7. 'take' → logprob: -3.8407721519470215
    8. ' count' → logprob: -4.7157721519470215
    9. 'filter' → logprob: -5.0907721519470215
    10. 'com' → logprob: -5.0907721519470215

Token 14: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3506685793399811
    2. ',' → logprob: -2.3506686687469482
    3. '(
' → logprob: -2.6006686687469482
    4. 'def' → logprob: -3.2256686687469482
    5. '\n' → logprob: -3.3506686687469482
    6. '\' → logprob: -3.9756686687469482
    7. '
' → logprob: -5.100668430328369
    8. ',
' → logprob: -5.225668430328369
    9. '#' → logprob: -6.225668430328369
    10. ')' → logprob: -6.225668430328369

Token 15: ' chain' (ID: 13464)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.6548154950141907
    2. 'count' → logprob: -2.029815435409546
    3. ' chain' → logprob: -2.404815435409546
    4. 'take' → logprob: -2.529815435409546
    5. 'cycle' → logprob: -2.529815435409546
    6. 'st' → logprob: -3.654815435409546
    7. 'tee' → logprob: -3.904815435409546
    8. ' cycle' → logprob: -4.904815673828125
    9. 'group' → logprob: -5.029815673828125
    10. 'zip' → logprob: -5.279815673828125

Token 16: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7299053072929382
    2. '\' → logprob: -2.104905366897583
    3. '(' → logprob: -2.354905366897583
    4. '\n' → logprob: -2.479905366897583
    5. 'def' → logprob: -2.854905366897583
    6. '(
' → logprob: -2.979905366897583
    7. '```' → logprob: -3.354905366897583
    8. ',
' → logprob: -3.979905366897583
    9. 'import' → logprob: -3.979905366897583
    10. '()' → logprob: -4.979905128479004

Token 17: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6816089153289795
    2. ',' → logprob: -2.0566089153289795
    3. '\' → logprob: -2.5566089153289795
    4. '```' → logprob: -2.6816089153289795
    5. '(' → logprob: -3.4316089153289795
    6. 'd' → logprob: -3.4316089153289795
    7. '`' → logprob: -3.5566089153289795
    8. '#' → logprob: -3.6816089153289795
    9. ',
' → logprob: -4.056609153747559
    10. 'import' → logprob: -4.056609153747559

Token 18: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.11001496762037277
    2. 'operator' → logprob: -2.4850149154663086
    3. ' math' → logprob: -4.735014915466309
    4. ' collections' → logprob: -5.110014915466309
    5. 'collections' → logprob: -5.735014915466309
    6. 'math' → logprob: -6.610014915466309
    7. ' ' → logprob: -7.985014915466309
    8. ' typing' → logprob: -8.110014915466309
    9. ' more' → logprob: -8.485014915466309
    10. ' heap' → logprob: -8.735014915466309

Token 19: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0902889296412468
    2. 'import' → logprob: -2.4652888774871826
    3. '.' → logprob: -6.965289115905762
    4. ' as' → logprob: -8.840289115905762
    5. ' .' → logprob: -9.465289115905762
    6. ' ' → logprob: -9.965289115905762
    7. ',' → logprob: -10.465289115905762
    8. ' ,' → logprob: -10.715289115905762
    9. '_import' → logprob: -10.965289115905762
    10. '	import' → logprob: -11.090289115905762

Token 20: ' item' (ID: 2169)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.10652633011341095
    2. ' mul' → logprob: -3.1065263748168945
    3. ' ' → logprob: -3.2315263748168945
    4. ' import' → logprob: -4.8565263748168945
    5. 'add' → logprob: -5.3565263748168945
    6. ' item' → logprob: -6.4815263748168945
    7. 'mul' → logprob: -7.4815263748168945
    8. ' icon' → logprob: -8.106526374816895
    9. 'import' → logprob: -8.481526374816895
    10. ' ad' → logprob: -8.856526374816895

Token 21: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0022681360132992268
    2. 'get' → logprob: -6.127268314361572
    3. 'getitem' → logprob: -9.627267837524414
    4. 'gett' → logprob: -11.377267837524414
    5. 'g' → logprob: -12.627267837524414
    6. 'got' → logprob: -14.377267837524414
    7. 's' → logprob: -15.377267837524414
    8. 'gets' → logprob: -15.377267837524414
    9. '_get' → logprob: -15.502267837524414
    10. 'gte' → logprob: -15.627267837524414

Token 22: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07326745241880417
    2. 'def' → logprob: -3.9482674598693848
    3. ',
' → logprob: -4.073267459869385
    4. 'import' → logprob: -4.323267459869385
    5. '\' → logprob: -5.448267459869385
    6. '\n' → logprob: -6.073267459869385
    7. '<|end|>' → logprob: -6.198267459869385
    8. '
' → logprob: -6.198267459869385
    9. '(' → logprob: -6.573267459869385
    10. ',

' → logprob: -6.573267459869385

Token 23: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8843717575073242
    2. 'def' → logprob: -1.6343717575073242
    3. '(' → logprob: -2.009371757507324
    4. '#' → logprob: -2.759371757507324
    5. '\' → logprob: -3.509371757507324
    6. ',' → logprob: -3.509371757507324
    7. '=' → logprob: -3.759371757507324
    8. '[' → logprob: -3.759371757507324
    9. '.' → logprob: -4.259371757507324
    10. '*' → logprob: -4.509371757507324

Token 24: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.031235067173838615
    2. ' reduce' → logprob: -4.281235218048096
    3. ' sorted' → logprob: -5.906235218048096
    4. ' factorial' → logprob: -6.156235218048096
    5. ' map' → logprob: -6.281235218048096
    6. ' space' → logprob: -6.656235218048096
    7. ' accumulate' → logprob: -6.781235218048096
    8. ' reducer' → logprob: -7.406235218048096
    9. '_' → logprob: -7.406235218048096
    10. ' compose' → logprob: -7.531235218048096

Token 25: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003564383659977466
    2. '_' → logprob: -9.125356674194336
    3. '():' → logprob: -9.875356674194336
    4. ' (' → logprob: -10.000356674194336
    5. ':' → logprob: -10.375356674194336
    6. '(
' → logprob: -10.875356674194336
    7. '(:' → logprob: -11.125356674194336
    8. '("("' → logprob: -11.250356674194336
    9. '```' → logprob: -11.500356674194336
    10. ')' → logprob: -11.500356674194336

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5468714833259583
    2. '    ' → logprob: -1.0468714237213135
    3. ' ' → logprob: -3.1718714237213135
    4. 'r' → logprob: -5.046871662139893
    5. 'n' → logprob: -5.671871662139893
    6. 'a' → logprob: -5.921871662139893
    7. '    
' → logprob: -6.296871662139893
    8. '     
' → logprob: -6.421871662139893
    9. '\' → logprob: -6.546871662139893
    10. ' 
' → logprob: -6.671871662139893

Token 27: ' N' (ID: 478)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.090604543685913
    2. ' data' → logprob: -1.340604543685913
    3. ' numbers' → logprob: -2.215604543685913
    4. 'n' → logprob: -2.840604543685913
    5. 'numbers' → logprob: -2.965604543685913
    6. 'result' → logprob: -3.715604543685913
    7. ' n' → logprob: -3.840604543685913
    8. ' result' → logprob: -3.965604543685913
    9. '   ' → logprob: -4.090604782104492
    10. ' nums' → logprob: -4.340604782104492

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015704091638326645
    2. '=' → logprob: -4.390704154968262
    3. ' ' → logprob: -5.890704154968262
    4. ',' → logprob: -8.015704154968262
    5. ' ,' → logprob: -9.890704154968262
    6. '  ' → logprob: -11.390704154968262
    7. '   ' → logprob: -11.890704154968262
    8. '_' → logprob: -12.015704154968262
    9. '    ' → logprob: -12.390704154968262
    10. '.' → logprob: -12.390704154968262

Token 29: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.03597790747880936
    2. 'int' → logprob: -3.660977840423584
    3. ' ' → logprob: -4.785977840423584
    4. '10' → logprob: -6.785977840423584
    5. '100' → logprob: -9.660978317260742
    6. '5' → logprob: -10.410978317260742
    7. '20' → logprob: -10.535978317260742
    8. '50' → logprob: -12.035978317260742
    9. ' map' → logprob: -12.535978317260742
    10. '15' → logprob: -12.785978317260742

Token 30: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6934440732002258
    2. '(input' → logprob: -0.6934440732002258
    3. 'input' → logprob: -8.31844425201416
    4. '('' → logprob: -10.56844425201416
    5. '()' → logprob: -12.19344425201416
    6. ' input' → logprob: -12.31844425201416
    7. '(
' → logprob: -12.31844425201416
    8. ' (' → logprob: -12.44344425201416
    9. '(int' → logprob: -13.44344425201416
    10. '("' → logprob: -13.56844425201416

Token 31: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10497845709323883
    2. '())' → logprob: -2.979978561401367
    3. '(' → logprob: -3.104978561401367
    4. '('' → logprob: -5.729978561401367
    5. ')' → logprob: -8.104978561401367
    6. '(()' → logprob: -9.229978561401367
    7. '("' → logprob: -9.354978561401367
    8. '("("' → logprob: -9.604978561401367
    9. '("")' → logprob: -10.229978561401367
    10. '()))' → logprob: -10.479978561401367

Token 32: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5898593068122864
    2. '<|end|>' → logprob: -1.7148592472076416
    3. ' ' → logprob: -2.2148592472076416
    4. '
' → logprob: -3.2148592472076416
    5. '   ' → logprob: -3.3398592472076416
    6. ' 
' → logprob: -3.9648592472076416
    7. '    
' → logprob: -4.464859485626221
    8. '\' → logprob: -4.839859485626221
    9. '  
' → logprob: -4.964859485626221
    10. '<|end|>' → logprob: -5.214859485626221

Token 33: ' A' (ID: 355)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -1.2360882759094238
    2. ' data' → logprob: -1.6110882759094238
    3. ' A' → logprob: -1.9860882759094238
    4. 'data' → logprob: -2.361088275909424
    5. ' a' → logprob: -2.861088275909424
    6. 'a' → logprob: -3.111088275909424
    7. 's' → logprob: -3.736088275909424
    8. 'numbers' → logprob: -4.111088275909424
    9. ' arr' → logprob: -4.361088275909424
    10. ' s' → logprob: -4.486088275909424

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.044408444315195084
    2. '=' → logprob: -3.1694085597991943
    3. '.' → logprob: -7.419408321380615
    4. '[' → logprob: -7.544408321380615
    5. ',' → logprob: -8.669408798217773
    6. '.append' → logprob: -10.419408798217773
    7. ' ' → logprob: -10.794408798217773
    8. ')' → logprob: -11.419408798217773
    9. '   ' → logprob: -12.044408798217773
    10. '_' → logprob: -12.419408798217773

Token 35: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.012907016091048717
    2. 'list' → logprob: -4.387907028198242
    3. ' [' → logprob: -7.887907028198242
    4. '[' → logprob: -11.512907028198242
    5. '[list' → logprob: -11.637907028198242
    6. ' input' → logprob: -13.637907028198242
    7. ' map' → logprob: -14.637907028198242
    8. ' []' → logprob: -14.637907028198242
    9. '[]' → logprob: -15.512907028198242
    10. ' tuple' → logprob: -15.762907028198242

Token 36: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5034621953964233
    2. '(map' → logprob: -1.0034621953964233
    3. '(input' → logprob: -3.878462314605713
    4. '(range' → logprob: -5.878462314605713
    5. '(chain' → logprob: -6.003462314605713
    6. '(int' → logprob: -6.128462314605713
    7. '(filter' → logprob: -8.878461837768555
    8. '(eval' → logprob: -8.878461837768555
    9. '(iter' → logprob: -9.128461837768555
    10. '(re' → logprob: -9.503461837768555

Token 37: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009166974923573434
    2. '(' → logprob: -7.000916481018066
    3. 'int' → logprob: -13.000916481018066
    4. ')' → logprob: -13.875916481018066
    5. '(
' → logprob: -14.500916481018066
    6. ',int' → logprob: -14.625916481018066
    7. '<int' → logprob: -14.625916481018066
    8. '=int' → logprob: -16.000917434692383
    9. '(str' → logprob: -16.000917434692383
    10. ' int' → logprob: -16.875917434692383

Token 38: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.12979736924171448
    2. ',' → logprob: -2.5047974586486816
    3. '(input' → logprob: -3.2547974586486816
    4. 'input' → logprob: -7.004797458648682
    5. '(' → logprob: -7.879797458648682
    6. ' ,' → logprob: -9.129796981811523
    7. ' input' → logprob: -10.879796981811523
    8. ',(' → logprob: -11.879796981811523
    9. '=input' → logprob: -12.004796981811523
    10. ')' → logprob: -12.879796981811523

Token 39: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02325141802430153
    2. ' input' → logprob: -3.773251533508301
    3. ',input' → logprob: -13.1482515335083
    4. '(input' → logprob: -13.3982515335083
    5. ' ' → logprob: -13.7732515335083
    6. '	input' → logprob: -14.6482515335083
    7. ')' → logprob: -14.8982515335083
    8. '=input' → logprob: -15.3982515335083
    9. '   ' → logprob: -15.7732515335083
    10. '_input' → logprob: -16.898250579833984

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.451116051815916e-05
    2. '()' → logprob: -11.625024795532227
    3. ')' → logprob: -12.000024795532227
    4. '))' → logprob: -12.875024795532227
    5. '()))' → logprob: -12.875024795532227
    6. '(' → logprob: -13.375024795532227
    7. ' ().' → logprob: -14.750024795532227
    8. ')))' → logprob: -15.125024795532227
    9. '.' → logprob: -15.250024795532227
    10. 'split' → logprob: -15.375024795532227

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00016074994346126914
    2. 'strip' → logprob: -8.750161170959473
    3. ' split' → logprob: -14.000161170959473
    4. 'rstrip' → logprob: -14.125161170959473
    5. '(split' → logprob: -14.500161170959473
    6. 'spl' → logprob: -15.750161170959473
    7. 's' → logprob: -17.625160217285156
    8. ')' → logprob: -18.625160217285156
    9. 'sp' → logprob: -18.875160217285156
    10. '```' → logprob: -19.875160217285156

Token 42: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5999364852905273
    2. ')' → logprob: -1.2249364852905273
    3. '()))' → logprob: -2.3499364852905273
    4. '())' → logprob: -3.7249364852905273
    5. ')))' → logprob: -3.8499364852905273
    6. '(' → logprob: -4.724936485290527
    7. '()' → logprob: -4.974936485290527
    8. '())))' → logprob: -7.349936485290527
    9. '),' → logprob: -10.349936485290527
    10. ''))' → logprob: -10.599936485290527

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6341024041175842
    2. '
' → logprob: -1.2591023445129395
    3. ')' → logprob: -2.5091023445129395
    4. '    
' → logprob: -2.8841023445129395
    5. '```' → logprob: -3.8841023445129395
    6. '\' → logprob: -5.5091023445129395
    7. '\n' → logprob: -5.6341023445129395
    8. '[' → logprob: -5.8841023445129395
    9. ')
' → logprob: -6.2591023445129395
    10. ' ' → logprob: -6.6341023445129395

Token 44: ' #' (ID: 1069)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -1.7770013809204102
    2. 'dp' → logprob: -1.9020013809204102
    3. 's' → logprob: -2.52700138092041
    4. 'c' → logprob: -2.65200138092041
    5. 'result' → logprob: -3.27700138092041
    6. 'acc' → logprob: -3.40200138092041
    7. 'B' → logprob: -3.40200138092041
    8. 'if' → logprob: -3.65200138092041
    9. 'count' → logprob: -3.65200138092041
    10. 'sorted' → logprob: -3.65200138092041

Token 45: ' Constru' (ID: 98396)
  Prédit: ' prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.8032066226005554
    2. ' acc' → logprob: -1.8032066822052002
    3. ' max' → logprob: -2.4282066822052
    4. ' sum' → logprob: -3.3032066822052
    5. ' c' → logprob: -3.4282066822052
    6. ' total' → logprob: -3.5532066822052
    7. ' s' → logprob: -4.053206443786621
    8. ' k' → logprob: -4.178206443786621
    9. ' sorted' → logprob: -4.178206443786621
    10. ' result' → logprob: -4.303206443786621

Token 46: 'ire' (ID: 594)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.0208955779671669
    2. 'ction' → logprob: -4.770895481109619
    3. 'ire' → logprob: -5.020895481109619
    4. '   ' → logprob: -6.520895481109619
    5. 'cter' → logprob: -6.770895481109619
    6. 'i' → logprob: -7.645895481109619
    7. 'c' → logprob: -7.895895481109619
    8. 'cture' → logprob: -8.145895957946777
    9. '```' → logprob: -8.145895957946777
    10. 'cte' → logprob: -8.645895957946777

Token 47: ' C' (ID: 363)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7317030429840088
    2. ' la' → logprob: -1.6067030429840088
    3. ' une' → logprob: -1.9817030429840088
    4. ' l' → logprob: -2.481703042984009
    5. ' ' → logprob: -3.106703042984009
    6. ' le' → logprob: -4.23170280456543
    7. ' des' → logprob: -4.48170280456543
    8. ' les' → logprob: -4.48170280456543
    9. '_' → logprob: -5.73170280456543
    10. ' a' → logprob: -6.10670280456543

Token 48: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.047506529837846756
    2. '[]' → logprob: -4.672506332397461
    3. '=' → logprob: -4.797506332397461
    4. 'um' → logprob: -5.047506332397461
    5. 'on' → logprob: -5.422506332397461
    6. '[' → logprob: -5.797506332397461
    7. 'umul' → logprob: -6.297506332397461
    8. '_' → logprob: -6.547506332397461
    9. '=[]' → logprob: -6.672506332397461
    10. '[:]' → logprob: -6.672506332397461

Token 49: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05049747973680496
    2. ''après' → logprob: -3.925497531890869
    3. ''' → logprob: -4.425497531890869
    4. 'es' → logprob: -4.675497531890869
    5. ''e' → logprob: -6.550497531890869
    6. 'ep' → logprob: -6.550497531890869
    7. 'ans' → logprob: -7.300497531890869
    8. ''ap' → logprob: -7.925497531890869
    9. '```' → logprob: -7.925497531890869
    10. 'u' → logprob: -8.050497055053711

Token 50: ' manière' (ID: 35013)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3835507929325104
    2. 'é' → logprob: -3.1335508823394775
    3. 'es' → logprob: -3.6335508823394775
    4. 'iff' → logprob: -3.6335508823394775
    5. 'ef' → logprob: -3.8835508823394775
    6. 'éc' → logprob: -4.133550643920898
    7. ''une' → logprob: -4.258550643920898
    8. 'éf' → logprob: -4.258550643920898
    9. 'istance' → logprob: -4.383550643920898
    10. 'élé' → logprob: -4.383550643920898

Token 51: ' compli' (ID: 51016)
  Prédit: ' cumul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cumul' → logprob: -0.8330562710762024
    2. ' optim' → logprob: -2.4580562114715576
    3. ' cumulative' → logprob: -2.4580562114715576
    4. ' lex' → logprob: -2.8330562114715576
    5. ' plus' → logprob: -3.3330562114715576
    6. ' efficace' → logprob: -3.8330562114715576
    7. ' unique' → logprob: -3.8330562114715576
    8. ' optimale' → logprob: -3.8330562114715576
    9. ' compact' → logprob: -4.083056449890137
    10. ' compacte' → logprob: -4.458056449890137

Token 52: 'quée' (ID: 63772)
  Prédit: 'quée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quée' → logprob: -0.005642805248498917
    2. 'lée' → logprob: -6.130642890930176
    3. 'née' → logprob: -6.380642890930176
    4. 'qu' → logprob: -7.755642890930176
    5. 'e' → logprob: -8.255642890930176
    6. 'te' → logprob: -8.505642890930176
    7. 'ée' → logprob: -8.630642890930176
    8. 'li' → logprob: -9.380642890930176
    9. 'q' → logprob: -9.505642890930176
    10. 'rée' → logprob: -9.630642890930176

Token 53: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3561343252658844
    2. ':' → logprob: -2.1061344146728516
    3. 'C' → logprob: -2.7311344146728516
    4. ',' → logprob: -3.1061344146728516
    5. '(' → logprob: -4.356134414672852
    6. '```' → logprob: -4.606134414672852
    7. ' C' → logprob: -4.981134414672852
    8. ' =' → logprob: -5.231134414672852
    9. '  ' → logprob: -5.356134414672852
    10. ' :' → logprob: -5.356134414672852

Token 54: '   ' (ID: 271)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.332800030708313
    2. ':' → logprob: -2.2077999114990234
    3. '   ' → logprob: -2.4577999114990234
    4. '(' → logprob: -3.4577999114990234
    5. ')' → logprob: -4.082799911499023
    6. ',' → logprob: -4.707799911499023
    7. '[' → logprob: -4.957799911499023
    8. '_' → logprob: -5.207799911499023
    9. ' C' → logprob: -5.457799911499023
    10. 'c' → logprob: -6.457799911499023

Token 55: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.048962026834487915
    2. ' C' → logprob: -3.798962116241455
    3. '(' → logprob: -5.423962116241455
    4. '_' → logprob: -5.798962116241455
    5. 'c' → logprob: -5.923962116241455
    6. '[' → logprob: -5.923962116241455
    7. ')' → logprob: -6.048962116241455
    8. ' ' → logprob: -6.298962116241455
    9. 'a' → logprob: -6.673962116241455
    10. ',' → logprob: -6.923962116241455

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04861711338162422
    2. '=' → logprob: -3.048617124557495
    3. '_' → logprob: -11.673617362976074
    4. ',' → logprob: -11.923617362976074
    5. '=[]' → logprob: -12.673617362976074
    6. 's' → logprob: -13.173617362976074
    7. '.' → logprob: -13.423617362976074
    8. ' ' → logprob: -14.173617362976074
    9. ' =[' → logprob: -14.298617362976074
    10. '  ' → logprob: -14.423617362976074

Token 57: ' reduce' (ID: 10389)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6071533560752869
    2. 'list' → logprob: -0.8571533560752869
    3. ' chain' → logprob: -4.732153415679932
    4. ' [' → logprob: -4.857153415679932
    5. 'chain' → logprob: -5.232153415679932
    6. '[' → logprob: -5.982153415679932
    7. ' sorted' → logprob: -7.232153415679932
    8. 'reduce' → logprob: -7.357153415679932
    9. ' accumulate' → logprob: -7.357153415679932
    10. '[list' → logprob: -7.482153415679932

Token 58: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6946318745613098
    2. '(lambda' → logprob: -0.6946318745613098
    3. '(operator' → logprob: -6.819632053375244
    4. '(item' → logprob: -8.694631576538086
    5. '(
' → logprob: -8.944631576538086
    6. '((' → logprob: -9.944631576538086
    7. '(list' → logprob: -10.694631576538086
    8. '(int' → logprob: -11.819631576538086
    9. '(chain' → logprob: -12.694631576538086
    10. '```' → logprob: -13.069631576538086

Token 59: ' c' (ID: 274)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.29015424847602844
    2. ' a' → logprob: -2.290154218673706
    3. ' acc' → logprob: -2.415154218673706
    4. ' lambda' → logprob: -3.415154218673706
    5. 'x' → logprob: -3.915154218673706
    6. ' c' → logprob: -6.290154457092285
    7. 'a' → logprob: -6.290154457092285
    8. 'acc' → logprob: -6.540154457092285
    9. 'lambda' → logprob: -6.665154457092285
    10. ' ' → logprob: -7.665154457092285

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008205882040783763
    2. ',c' → logprob: -7.750820636749268
    3. ',x' → logprob: -8.62582015991211
    4. ' ,' → logprob: -9.37582015991211
    5. ',a' → logprob: -10.75082015991211
    6. 'a' → logprob: -10.75082015991211
    7. 'lambda' → logprob: -11.12582015991211
    8. ',C' → logprob: -11.62582015991211
    9. ',A' → logprob: -12.00082015991211
    10. 'x' → logprob: -12.37582015991211

Token 61: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04252896457910538
    2. 'a' → logprob: -3.5425288677215576
    3. 'i' → logprob: -4.792529106140137
    4. ' x' → logprob: -6.542529106140137
    5. 't' → logprob: -7.167529106140137
    6. 'n' → logprob: -7.667529106140137
    7. 'b' → logprob: -7.667529106140137
    8. 'e' → logprob: -8.167529106140137
    9. 'v' → logprob: -8.292529106140137
    10. 'y' → logprob: -9.042529106140137

Token 62: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005888947052881122
    2. ' :' → logprob: -7.625588893890381
    3. ',' → logprob: -10.875589370727539
    4. ':c' → logprob: -11.125589370727539
    5. ',:' → logprob: -11.375589370727539
    6. 'c' → logprob: -12.000589370727539
    7. 'x' → logprob: -12.000589370727539
    8. '=' → logprob: -12.250589370727539
    9. ':x' → logprob: -12.250589370727539
    10. '_:' → logprob: -12.375589370727539

Token 63: ' [' (ID: 723)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.25321292877197266
    2. 'c' → logprob: -1.5032129287719727
    3. '*c' → logprob: -8.628212928771973
    4. '(*' → logprob: -9.003212928771973
    5. ' (*' → logprob: -9.003212928771973
    6. ' (' → logprob: -9.128212928771973
    7. '(c' → logprob: -9.128212928771973
    8. ' chain' → logprob: -9.378212928771973
    9. '[*' → logprob: -9.503212928771973
    10. 'chain' → logprob: -9.503212928771973

Token 64: 'a' (ID: 64)
  Prédit: '*x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*x' → logprob: -0.9783627986907959
    2. '*c' → logprob: -0.9783627986907959
    3. '*' → logprob: -1.603362798690796
    4. 'x' → logprob: -3.603362798690796
    5. 'c' → logprob: -4.853363037109375
    6. '*i' → logprob: -5.603363037109375
    7. '*(' → logprob: -6.103363037109375
    8. '*y' → logprob: -6.478363037109375
    9. '*v' → logprob: -7.103363037109375
    10. '*a' → logprob: -7.353363037109375

Token 65: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2665184736251831
    2. '+x' → logprob: -2.3915185928344727
    3. '+b' → logprob: -2.5165185928344727
    4. '+' → logprob: -3.0165185928344727
    5. '*' → logprob: -6.016518592834473
    6. '*x' → logprob: -6.266518592834473
    7. ' *' → logprob: -6.266518592834473
    8. '-' → logprob: -6.391518592834473
    9. ' -' → logprob: -7.016518592834473
    10. '+a' → logprob: -7.141518592834473

Token 66: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6941460371017456
    2. ' x' → logprob: -0.6941460371017456
    3. 'b' → logprob: -7.944146156311035
    4. ' b' → logprob: -8.194146156311035
    5. ' ' → logprob: -8.319146156311035
    6. '1' → logprob: -10.444146156311035
    7. '	x' → logprob: -10.944146156311035
    8. ' c' → logprob: -11.944146156311035
    9. 'c' → logprob: -12.006646156311035
    10. 'a' → logprob: -12.006646156311035

Token 67: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05994753539562225
    2. 'b' → logprob: -3.4349474906921387
    3. '1' → logprob: -4.184947490692139
    4. 'y' → logprob: -5.559947490692139
    5. ' x' → logprob: -6.059947490692139
    6. '[x' → logprob: -6.934947490692139
    7. '(x' → logprob: -7.309947490692139
    8. '[' → logprob: -7.559947490692139
    9. 'c' → logprob: -7.809947490692139
    10. ' ' → logprob: -8.184947967529297

Token 68: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.005202094092965126
    2. ' -' → logprob: -6.005202293395996
    3. 'if' → logprob: -7.630202293395996
    4. ',)' → logprob: -7.630202293395996
    5. '0' → logprob: -7.755202293395996
    6. ',' → logprob: -8.005202293395996
    7. ' ' → logprob: -8.255202293395996
    8. ' for' → logprob: -8.505202293395996
    9. '-' → logprob: -9.255202293395996
    10. '-x' → logprob: -9.505202293395996

Token 69: ' i' (ID: 575)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.39384329319000244
    2. 'x' → logprob: -1.1438432931900024
    3. ' a' → logprob: -6.643843173980713
    4. ' y' → logprob: -6.893843173980713
    5. 'a' → logprob: -7.018843173980713
    6. ' b' → logprob: -7.393843173980713
    7. ' ' → logprob: -7.518843173980713
    8. ' i' → logprob: -7.518843173980713
    9. ' len' → logprob: -7.643843173980713
    10. 'i' → logprob: -8.268843650817871

Token 70: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6946859359741211
    2. ' ==' → logprob: -0.6946859359741211
    3. 'x' → logprob: -6.819685935974121
    4. ' <' → logprob: -8.819685935974121
    5. ' x' → logprob: -10.069685935974121
    6. '<' → logprob: -10.569685935974121
    7. 'dx' → logprob: -10.569685935974121
    8. '<=' → logprob: -10.819685935974121
    9. '<len' → logprob: -10.819685935974121
    10. 'nd' → logprob: -10.944685935974121

Token 71: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.33616361021995544
    2. ' x' → logprob: -1.3361636400222778
    3. '0' → logprob: -4.336163520812988
    4. ' ' → logprob: -5.711163520812988
    5. 'len' → logprob: -6.086163520812988
    6. ' len' → logprob: -6.461163520812988
    7. 'c' → logprob: -7.211163520812988
    8. ' c' → logprob: -7.586163520812988
    9. 'N' → logprob: -8.336163520812988
    10. ' N' → logprob: -8.336163520812988

Token 72: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.019822804257273674
    2. 'else' → logprob: -4.019822597503662
    3. '-' → logprob: -7.894822597503662
    4. '    ' → logprob: -8.01982307434082
    5. '   ' → logprob: -8.14482307434082
    6. ' ' → logprob: -8.14482307434082
    7. '  ' → logprob: -9.14482307434082
    8. ' -' → logprob: -9.51982307434082
    9. '        ' → logprob: -10.51982307434082
    10. '	else' → logprob: -10.64482307434082

Token 73: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9958769679069519
    2. 'i' → logprob: -1.3708770275115967
    3. ' ' → logprob: -1.3708770275115967
    4. '1' → logprob: -2.7458770275115967
    5. ' i' → logprob: -3.6208770275115967
    6. 'a' → logprob: -4.495876789093018
    7. 'x' → logprob: -4.620876789093018
    8. 'j' → logprob: -6.120876789093018
    9. '   ' → logprob: -6.620876789093018
    10. ' x' → logprob: -6.745876789093018

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026471786201000214
    2. ' ' → logprob: -4.4014716148376465
    3. '1' → logprob: -4.6514716148376465
    4. 'i' → logprob: -5.6514716148376465
    5. ' i' → logprob: -7.6514716148376465
    6. '   ' → logprob: -9.276472091674805
    7. 'x' → logprob: -9.651472091674805
    8. '  ' → logprob: -10.276472091674805
    9. 'a' → logprob: -10.526472091674805
    10. ')' → logprob: -11.026472091674805

Token 75: ')' (ID: 8)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.02519797347486019
    2. 'else' → logprob: -4.025197982788086
    3. ')' → logprob: -5.400197982788086
    4. ' for' → logprob: -6.775197982788086
    5. ' ' → logprob: -7.525197982788086
    6. '   ' → logprob: -7.525197982788086
    7. 'a' → logprob: -8.900197982788086
    8. 'for' → logprob: -9.775197982788086
    9. 'c' → logprob: -10.650197982788086
    10. '  ' → logprob: -11.025197982788086

Token 76: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.019514573737978935
    2. 'for' → logprob: -4.019514560699463
    3. '   ' → logprob: -7.269514560699463
    4. ' ' → logprob: -7.519514560699463
    5. '  ' → logprob: -10.019515037536621
    6. '	for' → logprob: -11.144515037536621
    7. '+' → logprob: -11.894515037536621
    8. 'c' → logprob: -11.894515037536621
    9. '(c' → logprob: -11.894515037536621
    10. '    ' → logprob: -12.019515037536621

Token 77: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005935670807957649
    2. ' i' → logprob: -5.1309356689453125
    3. ',' → logprob: -12.255935668945312
    4. ',i' → logprob: -13.755935668945312
    5. '	i' → logprob: -14.505935668945312
    6. '  ' → logprob: -15.505935668945312
    7. 'a' → logprob: -15.880935668945312
    8. '   ' → logprob: -16.005935668945312
    9. ' ' → logprob: -16.380935668945312
    10. '(i' → logprob: -16.380935668945312

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016466323286294937
    2. ' in' → logprob: -4.39146614074707
    3. 'in' → logprob: -5.64146614074707
    4. ' ,' → logprob: -9.26646614074707
    5. 'range' → logprob: -9.51646614074707
    6. ',c' → logprob: -9.51646614074707
    7. ' range' → logprob: -10.39146614074707
    8. ',i' → logprob: -10.51646614074707
    9. ',in' → logprob: -10.89146614074707
    10. 's' → logprob: -11.39146614074707

Token 79: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4288325905799866
    2. ' a' → logprob: -1.0538325309753418
    3. '	a' → logprob: -9.8038330078125
    4. '(a' → logprob: -10.1788330078125
    5. '_a' → logprob: -11.4288330078125
    6. 'c' → logprob: -12.0538330078125
    7. '>a' → logprob: -12.1788330078125
    8. ' ' → logprob: -12.6788330078125
    9. ',a' → logprob: -12.8038330078125
    10. '_' → logprob: -12.9288330078125

Token 80: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01614123210310936
    2. 'in' → logprob: -4.141141414642334
    3. ',' → logprob: -10.141140937805176
    4. ' ' → logprob: -10.641140937805176
    5. 'n' → logprob: -11.516140937805176
    6. ' en' → logprob: -12.141140937805176
    7. 'en' → logprob: -12.266140937805176
    8. 's' → logprob: -12.641140937805176
    9. 'enumer' → logprob: -12.891140937805176
    10. 'ine' → logprob: -13.141140937805176

Token 81: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.5236244797706604
    2. ' enumerate' → logprob: -0.8986244797706604
    3. 'en' → logprob: -7.773624420166016
    4. '(en' → logprob: -10.023624420166016
    5. ' en' → logprob: -11.398624420166016
    6. ',' → logprob: -12.023624420166016
    7. 'enum' → logprob: -12.148624420166016
    8. '```' → logprob: -12.273624420166016
    9. 's' → logprob: -13.523624420166016
    10. '<|end|>' → logprob: -13.898624420166016

Token 82: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -4.596781946020201e-05
    2. 'c' → logprob: -10.500045776367188
    3. '(' → logprob: -11.875045776367188
    4. ')c' → logprob: -11.875045776367188
    5. '(C' → logprob: -12.625045776367188
    6. ' c' → logprob: -14.875045776367188
    7. ')' → logprob: -15.250045776367188
    8. ' (' → logprob: -15.750045776367188
    9. 'C' → logprob: -16.625045776367188
    10. '	c' → logprob: -16.750045776367188

Token 83: ')],' (ID: 60559)
  Prédit: ')],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')],' → logprob: -0.0035210796631872654
    2. '],' → logprob: -7.003520965576172
    3. ']' → logprob: -7.128520965576172
    4. ')]' → logprob: -7.378520965576172
    5. ']),' → logprob: -7.503520965576172
    6. ')' → logprob: -8.753520965576172
    7. '])' → logprob: -9.003520965576172
    8. ',' → logprob: -9.378520965576172
    9. ']],' → logprob: -9.753520965576172
    10. ')],
' → logprob: -9.753520965576172

Token 84: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2257593870162964
    2. ' A' → logprob: -1.6007593870162964
    3. 'range' → logprob: -9.600759506225586
    4. ' ' → logprob: -9.725759506225586
    5. '	A' → logprob: -9.850759506225586
    6. '   ' → logprob: -10.100759506225586
    7. ' range' → logprob: -10.850759506225586
    8. 'repeat' → logprob: -10.850759506225586
    9. '[A' → logprob: -11.538259506225586
    10. 'chain' → logprob: -11.600759506225586

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03900329768657684
    2. ',[' → logprob: -3.289003372192383
    3. ' ,[' → logprob: -7.414003372192383
    4. ' ,' → logprob: -8.664003372192383
    5. '[' → logprob: -8.664003372192383
    6. 'C' → logprob: -12.789003372192383
    7. '),' → logprob: -12.914003372192383
    8. ')' → logprob: -13.289003372192383
    9. '([' → logprob: -13.789003372192383
    10. ',C' → logprob: -13.914003372192383

Token 86: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02326982282102108
    2. ' [' → logprob: -3.7732698917388916
    3. 'repeat' → logprob: -11.648269653320312
    4. '[len' → logprob: -12.148269653320312
    5. '[N' → logprob: -12.398269653320312
    6. ' ' → logprob: -13.148269653320312
    7. ' repeat' → logprob: -14.273269653320312
    8. '[n' → logprob: -14.273269653320312
    9. '[count' → logprob: -14.398269653320312
    10. '   ' → logprob: -14.898269653320312

Token 87: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018327576981391758
    2. ' ' → logprob: -8.62518310546875
    3. '1' → logprob: -13.50018310546875
    4. '  ' → logprob: -14.56268310546875
    5. '   ' → logprob: -15.50018310546875
    6. '2' → logprob: -15.62518310546875
    7. '00' → logprob: -15.81268310546875
    8. '(' → logprob: -15.81268310546875
    9. '4' → logprob: -16.12518310546875
    10. '000' → logprob: -16.25018310546875

Token 88: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2017386257648468
    2. ']*' → logprob: -1.7017385959625244
    3. ']*(' → logprob: -8.326738357543945
    4. ' for' → logprob: -10.076738357543945
    5. ',' → logprob: -11.201738357543945
    6. ' ]' → logprob: -11.951738357543945
    7. ']+' → logprob: -12.201738357543945
    8. '0' → logprob: -12.701738357543945
    9. '])' → logprob: -13.076738357543945
    10. ')' → logprob: -13.201738357543945

Token 89: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5931235551834106
    2. ']*' → logprob: -0.8431235551834106
    3. ' for' → logprob: -5.093123435974121
    4. '(' → logprob: -5.468123435974121
    5. ',' → logprob: -6.343123435974121
    6. ' ' → logprob: -6.843123435974121
    7. ')' → logprob: -6.968123435974121
    8. '(N' → logprob: -7.343123435974121
    9. ']*(' → logprob: -7.718123435974121
    10. '0' → logprob: -7.843123435974121

Token 90: ' (' (ID: 350)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.023020900785923004
    2. ' N' → logprob: -4.7730207443237305
    3. 'max' → logprob: -5.3980207443237305
    4. '100' → logprob: -5.5230207443237305
    5. '10' → logprob: -5.8980207443237305
    6. '20' → logprob: -7.3980207443237305
    7. '(' → logprob: -7.6480207443237305
    8. '(N' → logprob: -7.6480207443237305
    9. ' max' → logprob: -8.39802074432373
    10. ' ' → logprob: -8.64802074432373

Token 91: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.45725470781326294
    2. 'max' → logprob: -1.0822546482086182
    3. ' max' → logprob: -4.707254886627197
    4. ' N' → logprob: -4.957254886627197
    5. '100' → logprob: -5.332254886627197
    6. '10' → logprob: -5.457254886627197
    7. 'len' → logprob: -7.082254886627197
    8. '20' → logprob: -7.707254886627197
    9. ' ' → logprob: -8.082254409790039
    10. '9' → logprob: -8.332254409790039

Token 92: ' +' (ID: 659)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06921787559986115
    2. ')' → logprob: -3.0692179203033447
    3. ' ))' → logprob: -4.444217681884766
    4. '+' → logprob: -5.444217681884766
    5. ' )' → logprob: -6.194217681884766
    6. '*' → logprob: -7.194217681884766
    7. ')))' → logprob: -7.569217681884766
    8. ' +' → logprob: -8.194217681884766
    9. ' ' → logprob: -8.444217681884766
    10. '*N' → logprob: -9.444217681884766

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006392522715032101
    2. ' ' → logprob: -5.131392478942871
    3. '2' → logprob: -7.756392478942871
    4. '10' → logprob: -11.256392478942871
    5. '   ' → logprob: -12.006392478942871
    6. '5' → logprob: -12.256392478942871
    7. '7' → logprob: -12.756392478942871
    8. '3' → logprob: -13.006392478942871
    9. 'N' → logprob: -13.756392478942871
    10. '  ' → logprob: -13.756392478942871

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003815756645053625
    2. '2' → logprob: -8.125381469726562
    3. ' ' → logprob: -9.500381469726562
    4. '10' → logprob: -12.250381469726562
    5. '5' → logprob: -13.375381469726562
    6. '3' → logprob: -13.625381469726562
    7. 'N' → logprob: -14.125381469726562
    8. '7' → logprob: -14.500381469726562
    9. '6' → logprob: -14.875381469726562
    10. '4' → logprob: -15.062881469726562

Token 95: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20144900679588318
    2. ')' → logprob: -1.7014490365982056
    3. ')))' → logprob: -11.076449394226074
    4. '))
' → logprob: -12.201449394226074
    5. ')
' → logprob: -12.326449394226074
    6. '])' → logprob: -12.576449394226074
    7. ' ))' → logprob: -12.826449394226074
    8. ' )' → logprob: -13.326449394226074
    9. '),' → logprob: -13.826449394226074
    10. '))

' → logprob: -15.326449394226074

Token 96: '    
' (ID: 1944)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10260161757469177
    2. '
' → logprob: -3.3526015281677246
    3. '' → logprob: -4.352601528167725
    4. ' ' → logprob: -4.477601528167725
    5. ')
' → logprob: -4.727601528167725
    6. '   ' → logprob: -4.852601528167725
    7. '[' → logprob: -4.977601528167725
    8. '  
' → logprob: -6.477601528167725
    9. '.' → logprob: -6.727601528167725
    10. '\n' → logprob: -6.852601528167725

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24854150414466858
    2. '
' → logprob: -1.8735414743423462
    3. ')' → logprob: -3.3735415935516357
    4. '    
' → logprob: -4.873541355133057
    5. 'print' → logprob: -5.248541355133057
    6. ')
' → logprob: -5.373541355133057
    7. 'for' → logprob: -5.998541355133057
    8. ' for' → logprob: -5.998541355133057
    9. '  
' → logprob: -6.248541355133057
    10. ' ' → logprob: -6.748541355133057

Token 98: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0071855783462524
    2. '   ' → logprob: -1.1321855783462524
    3. 'for' → logprob: -2.132185459136963
    4. ' for' → logprob: -2.632185459136963
    5. ' print' → logprob: -3.757185459136963
    6. 'C' → logprob: -3.882185459136963
    7. '    
' → logprob: -4.007185459136963
    8. 'D' → logprob: -4.382185459136963
    9. ' ' → logprob: -4.382185459136963
    10. ' 
' → logprob: -5.257185459136963

Token 99: ' Index' (ID: 14580)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2991124391555786
    2. ' print' → logprob: -2.049112319946289
    3. 'for' → logprob: -2.674112319946289
    4. ' D' → logprob: -2.674112319946289
    5. ' result' → logprob: -2.674112319946289
    6. 'print' → logprob: -2.674112319946289
    7. 'D' → logprob: -3.049112319946289
    8. 'result' → logprob: -3.549112319946289
    9. ' acc' → logprob: -3.924112319946289
    10. 'C' → logprob: -3.924112319946289

Token 100: ' avanc' (ID: 87985)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.21869485080242157
    2. 's' → logprob: -1.968694806098938
    3. 'er' → logprob: -4.218694686889648
    4. 'C' → logprob: -4.343694686889648
    5. ' =' → logprob: -4.593694686889648
    6. 'ing' → logprob: -6.718694686889648
    7. 'of' → logprob: -6.718694686889648
    8. '_c' → logprob: -6.968694686889648
    9. 'ed' → logprob: -7.093694686889648
    10. 'e' → logprob: -7.218694686889648

Token 101: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.1677578091621399
    2. 'és' → logprob: -2.167757749557495
    3. 'e' → logprob: -4.292757987976074
    4. 'es' → logprob: -4.292757987976074
    5. 'ement' → logprob: -5.042757987976074
    6. 'ateur' → logprob: -6.292757987976074
    7. 'ed' → logprob: -6.417757987976074
    8. 'er' → logprob: -7.042757987976074
    9. 'ateurs' → logprob: -7.917757987976074
    10. 'ements' → logprob: -8.292757987976074

Token 102: ' sur' (ID: 1512)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.291361004114151
    2. ' =' → logprob: -2.166361093521118
    3. 'es' → logprob: -2.541361093521118
    4. 'C' → logprob: -4.416360855102539
    5. 'er' → logprob: -5.041360855102539
    6. 'ing' → logprob: -5.416360855102539
    7. '=' → logprob: -5.416360855102539
    8. ' ' → logprob: -5.541360855102539
    9. ',' → logprob: -6.041360855102539
    10. 'ation' → logprob: -6.291360855102539

Token 103: ' le' (ID: 505)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.8297166228294373
    2. ' C' → logprob: -0.9547166228294373
    3. 'A' → logprob: -3.079716682434082
    4. ' A' → logprob: -3.204716682434082
    5. ' la' → logprob: -3.579716682434082
    6. 'range' → logprob: -4.079716682434082
    7. ' range' → logprob: -4.954716682434082
    8. ' une' → logprob: -5.704716682434082
    9. ' is' → logprob: -5.954716682434082
    10. ' ' → logprob: -6.079716682434082

Token 104: ' dé' (ID: 2393)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.8834738731384277
    2. 'A' → logprob: -1.3834738731384277
    3. ' C' → logprob: -2.2584738731384277
    4. 's' → logprob: -3.7584738731384277
    5. ' A' → logprob: -3.7584738731384277
    6. ' range' → logprob: -4.133473873138428
    7. ' list' → logprob: -4.445973873138428
    8. 'it' → logprob: -4.570973873138428
    9. ' code' → logprob: -4.570973873138428
    10. ' itertools' → logprob: -4.633473873138428

Token 105: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.2392866164445877
    2. 'cal' → logprob: -2.3642866611480713
    3. 'nombre' → logprob: -3.1142866611480713
    4. 'range' → logprob: -4.864286422729492
    5. '
' → logprob: -4.989286422729492
    6. 'f' → logprob: -4.989286422729492
    7. 'lai' → logprob: -4.989286422729492
    8. 'nom' → logprob: -5.239286422729492
    9. 'rang' → logprob: -5.489286422729492
    10. 'file' → logprob: -5.489286422729492

Token 106: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.7700887322425842
    2. 'té' → logprob: -1.0200886726379395
    3. 't' → logprob: -1.7700886726379395
    4. 'ose' → logprob: -6.1450886726379395
    5. 'teur' → logprob: -6.7700886726379395
    6. 'os' → logprob: -7.3950886726379395
    7. 'tes' → logprob: -7.9575886726379395
    8. 'osition' → logprob: -8.457589149475098
    9. '#' → logprob: -8.645089149475098
    10. 'osit' → logprob: -9.395089149475098

Token 107: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5318942070007324
    2. 's' → logprob: -1.6568942070007324
    3. 'C' → logprob: -3.0318942070007324
    4. '[' → logprob: -3.2818942070007324
    5. ' ' → logprob: -3.5318942070007324
    6. ' for' → logprob: -3.7818942070007324
    7. ' des' → logprob: -4.656894207000732
    8. ' C' → logprob: -4.656894207000732
    9. 'for' → logprob: -4.656894207000732
    10. ',' → logprob: -4.906894207000732

Token 108: ' fré' (ID: 52465)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.841556966304779
    2. 'C' → logprob: -1.9665570259094238
    3. ' C' → logprob: -2.091557025909424
    4. 'val' → logprob: -3.341557025909424
    5. 's' → logprob: -3.591557025909424
    6. ' éléments' → logprob: -3.591557025909424
    7. 'c' → logprob: -3.841557025909424
    8. 'pré' → logprob: -4.091557025909424
    9. 'occ' → logprob: -4.341557025909424
    10. 'A' → logprob: -4.341557025909424

Token 109: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.1405840665102005
    2. 'r' → logprob: -2.2655839920043945
    3. 'rr' → logprob: -3.7655839920043945
    4. 'q' → logprob: -6.3905839920043945
    5. 'qu' → logprob: -6.6405839920043945
    6. 'quence' → logprob: -7.8905839920043945
    7. 't' → logprob: -8.640583992004395
    8. 'urrences' → logprob: -8.640583992004395
    9. 'c' → logprob: -9.890583992004395
    10. 'ren' → logprob: -10.140583992004395

Token 110: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25274407863616943
    2. ' for' → logprob: -1.8777440786361694
    3. 'for' → logprob: -4.252744197845459
    4. 'C' → logprob: -4.502744197845459
    5. ' C' → logprob: -5.127744197845459
    6. ' result' → logprob: -5.627744197845459
    7. 'result' → logprob: -5.627744197845459
    8. ',' → logprob: -6.002744197845459
    9. '
' → logprob: -6.127744197845459
    10. ' ' → logprob: -6.127744197845459

Token 111: 'D' (ID: 35)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.8038345575332642
    2. ' C' → logprob: -1.4288345575332642
    3. ' lambda' → logprob: -2.5538344383239746
    4. ')' → logprob: -2.9288344383239746
    5. 'lambda' → logprob: -3.4288344383239746
    6. ' i' → logprob: -3.6788344383239746
    7. 'i' → logprob: -3.9288344383239746
    8. ' accumulate' → logprob: -4.178834438323975
    9. 'acc' → logprob: -4.428834438323975
    10. ' ' → logprob: -4.678834438323975

Token 112: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2503572404384613
    2. ' =' → logprob: -2.250357151031494
    3. 'C' → logprob: -3.125357151031494
    4. ' )' → logprob: -3.250357151031494
    5. '=' → logprob: -4.750357151031494
    6. ',' → logprob: -5.000357151031494
    7. 'e' → logprob: -5.500357151031494
    8. 'E' → logprob: -7.125357151031494
    9. 'A' → logprob: -7.125357151031494
    10. ' ' → logprob: -7.375357151031494

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05679596960544586
    2. ' D' → logprob: -3.931796073913574
    3. '
' → logprob: -4.431796073913574
    4. 'D' → logprob: -4.681796073913574
    5. '    
' → logprob: -5.556796073913574
    6. ',' → logprob: -6.056796073913574
    7. ':' → logprob: -6.181796073913574
    8. ' ' → logprob: -6.431796073913574
    9. ' 
' → logprob: -7.181796073913574
    10. ')' → logprob: -7.431796073913574

Token 114: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.5592745542526245
    2. ' D' → logprob: -1.4342745542526245
    3. '   ' → logprob: -1.6842745542526245
    4. ' for' → logprob: -6.559274673461914
    5. ' ' → logprob: -6.809274673461914
    6. 'for' → logprob: -7.559274673461914
    7. ' counts' → logprob: -9.309274673461914
    8. 'def' → logprob: -9.371774673461914
    9. ' indices' → logprob: -9.559274673461914
    10. 'd' → logprob: -9.559274673461914

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004102265927940607
    2. '=' → logprob: -5.5041022300720215
    3. ',' → logprob: -10.75410270690918
    4. ' ' → logprob: -14.37910270690918
    5. ' ' → logprob: -14.75410270690918
    6. '   ' → logprob: -15.25410270690918
    7. '=[' → logprob: -16.00410270690918
    8. ' ,' → logprob: -16.00410270690918
    9. '=list' → logprob: -16.00410270690918
    10. 's' → logprob: -16.12910270690918

Token 116: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.004850888159126043
    2. ' list' → logprob: -6.2548508644104
    3. '[list' → logprob: -7.0048508644104
    4. 'acc' → logprob: -7.1298508644104
    5. '[' → logprob: -7.5048508644104
    6. '[C' → logprob: -8.504851341247559
    7. '(list' → logprob: -9.004851341247559
    8. 'tuple' → logprob: -9.254851341247559
    9. 'is' → logprob: -10.379851341247559
    10. ' [' → logprob: -10.379851341247559

Token 117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004713376518338919
    2. 'C' → logprob: -5.879713535308838
    3. ' ' → logprob: -7.129713535308838
    4. '1' → logprob: -7.879713535308838
    5. ' C' → logprob: -8.50471305847168
    6. 'c' → logprob: -9.12971305847168
    7. '   ' → logprob: -9.50471305847168
    8. ']' → logprob: -9.50471305847168
    9. ')' → logprob: -10.00471305847168
    10. 'next' → logprob: -10.25471305847168

Token 118: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010472200810909271
    2. ']+' → logprob: -7.376047134399414
    3. ']
' → logprob: -8.376047134399414
    4. ',' → logprob: -9.001047134399414
    5. '])' → logprob: -10.626047134399414
    6. ')' → logprob: -10.876047134399414
    7. ' ]' → logprob: -12.376047134399414
    8. ']*(' → logprob: -12.626047134399414
    9. ')]' → logprob: -12.876047134399414
    10. ']
' → logprob: -13.126047134399414

Token 119: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6697371602058411
    2. '<|end|>' → logprob: -0.9197371602058411
    3. ' +' → logprob: -3.2947371006011963
    4. '
' → logprob: -3.4197371006011963
    5. ']' → logprob: -4.544737339019775
    6. ']+' → logprob: -6.294737339019775
    7. ')' → logprob: -6.294737339019775
    8. '*' → logprob: -6.919737339019775
    9. '<|end|>' → logprob: -7.044737339019775
    10. ',' → logprob: -7.419737339019775

Token 120: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.008929139003157616
    2. '(len' → logprob: -5.758929252624512
    3. ' (' → logprob: -5.883929252624512
    4. '(' → logprob: -6.133929252624512
    5. '(n' → logprob: -7.383929252624512
    6. 'len' → logprob: -10.008929252624512
    7. '((' → logprob: -10.258929252624512
    8. '
' → logprob: -10.758929252624512
    9. '(max' → logprob: -11.008929252624512
    10. ' ' → logprob: -11.133929252624512

Token 121: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.006381148938089609
    2. '(N' → logprob: -5.131381034851074
    3. 'len' → logprob: -8.006381034851074
    4. ' N' → logprob: -9.381381034851074
    5. '(' → logprob: -11.131381034851074
    6. '(len' → logprob: -12.006381034851074
    7. '
' → logprob: -12.506381034851074
    8. ' (' → logprob: -12.631381034851074
    9. 'n' → logprob: -13.381381034851074
    10. ')' → logprob: -13.631381034851074

Token 122: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04307934641838074
    2. ' +' → logprob: -3.168079376220703
    3. '+
' → logprob: -9.543079376220703
    4. ' +
' → logprob: -12.418079376220703
    5. ')' → logprob: -13.918079376220703
    6. ' plus' → logprob: -14.293079376220703
    7. ' ' → logprob: -14.293079376220703
    8. '
' → logprob: -14.418079376220703
    9. '1' → logprob: -14.543079376220703
    10. '+

' → logprob: -15.168079376220703

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14513111114501953
    2. '2' → logprob: -2.0201311111450195
    3. ' ' → logprob: -6.0201311111450195
    4. '   ' → logprob: -11.27013111114502
    5. '  ' → logprob: -13.20763111114502
    6. '
' → logprob: -13.39513111114502
    7. '7' → logprob: -13.64513111114502
    8. '3' → logprob: -13.70763111114502
    9. '```' → logprob: -14.14513111114502
    10. '(' → logprob: -14.58263111114502

Token 124: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07900545746088028
    2. '2' → logprob: -2.579005479812622
    3. ' ' → logprob: -9.204005241394043
    4. '   ' → logprob: -12.579005241394043
    5. '7' → logprob: -13.391505241394043
    6. '3' → logprob: -13.454005241394043
    7. '```' → logprob: -13.766505241394043
    8. '6' → logprob: -13.891505241394043
    9. '
' → logprob: -13.954005241394043
    10. '5' → logprob: -14.329005241394043

Token 125: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002511212369427085
    2. ')
' → logprob: -6.002511024475098
    3. ' )' → logprob: -10.877511024475098
    4. ')
' → logprob: -11.252511024475098
    5. ')

' → logprob: -13.002511024475098
    6. '))' → logprob: -15.002511024475098
    7. ']' → logprob: -15.252511024475098
    8. ' )
' → logprob: -15.627511024475098
    9. ')]' → logprob: -15.752511024475098
    10. '),' → logprob: -16.377511978149414

Token 126: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8903838396072388
    2. '
' → logprob: -1.3903838396072388
    3. 'for' → logprob: -2.015383720397949
    4. '<|end|>' → logprob: -2.015383720397949
    5. '   ' → logprob: -2.765383720397949
    6. '    
' → logprob: -5.890383720397949
    7. ')' → logprob: -6.015383720397949
    8. ' 
' → logprob: -6.515383720397949
    9. '  
' → logprob: -6.890383720397949
    10. ' ' → logprob: -7.015383720397949

Token 127: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003910626284778118
    2. ' for' → logprob: -5.628910541534424
    3. 'C' → logprob: -9.753911018371582
    4. 'D' → logprob: -9.753911018371582
    5. '   ' → logprob: -9.878911018371582
    6. 'i' → logprob: -10.128911018371582
    7. ')' → logprob: -10.503911018371582
    8. 'prev' → logprob: -11.003911018371582
    9. 'idx' → logprob: -11.503911018371582
    10. 'count' → logprob: -11.628911018371582

Token 128: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1156456470489502
    2. ' i' → logprob: -1.1156456470489502
    3. 'x' → logprob: -1.6156456470489502
    4. ' x' → logprob: -2.24064564704895
    5. 'a' → logprob: -3.74064564704895
    6. ' a' → logprob: -4.490645408630371
    7. ' c' → logprob: -6.365645408630371
    8. 'c' → logprob: -6.740645408630371
    9. ' ' → logprob: -7.865645408630371
    10. 'v' → logprob: -8.490645408630371

Token 129: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011885625310242176
    2. 'in' → logprob: -4.511885643005371
    3. ',' → logprob: -7.261885643005371
    4. ' ' → logprob: -9.636885643005371
    5. '	in' → logprob: -10.761885643005371
    6. ' ,' → logprob: -11.761885643005371
    7. '+' → logprob: -12.136885643005371
    8. '_' → logprob: -12.511885643005371
    9. 'In' → logprob: -12.636885643005371
    10. '   ' → logprob: -12.636885643005371

Token 130: ' count' (ID: 3605)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12158872187137604
    2. 'count' → logprob: -2.871588706970215
    3. ' c' → logprob: -3.746588706970215
    4. 'v' → logprob: -4.121588706970215
    5. 'a' → logprob: -4.496588706970215
    6. ' count' → logprob: -5.996588706970215
    7. 'cnt' → logprob: -7.121588706970215
    8. 'x' → logprob: -7.246588706970215
    9. 'freq' → logprob: -7.371588706970215
    10. 'val' → logprob: -7.371588706970215

Token 131: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03034633956849575
    2. 'in' → logprob: -3.530346393585205
    3. ',' → logprob: -7.655346393585205
    4. 'count' → logprob: -9.780345916748047
    5. ' ' → logprob: -10.280345916748047
    6. '_in' → logprob: -12.780345916748047
    7. '	in' → logprob: -12.780345916748047
    8. ',count' → logprob: -12.780345916748047
    9. 's' → logprob: -13.280345916748047
    10. '_count' → logprob: -13.467845916748047

Token 132: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0086520379409194
    2. ' enumerate' → logprob: -4.758652210235596
    3. '(en' → logprob: -10.383651733398438
    4. 'en' → logprob: -12.008651733398438
    5. 'enqueue' → logprob: -16.133651733398438
    6. '.enumer' → logprob: -16.633651733398438
    7. 'enum' → logprob: -17.133651733398438
    8. '   ' → logprob: -17.133651733398438
    9. ' en' → logprob: -17.383651733398438
    10. '
' → logprob: -17.508651733398438

Token 133: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -4.008129963040119e-06
    2. 'C' → logprob: -12.625003814697266
    3. ' C' → logprob: -14.875003814697266
    4. '(en' → logprob: -16.500003814697266
    5. '(' → logprob: -16.625003814697266
    6. '(c' → logprob: -16.750003814697266
    7. '(A' → logprob: -18.000003814697266
    8. ' (' → logprob: -18.000003814697266
    9. '	C' → logprob: -18.125003814697266
    10. '(CC' → logprob: -18.500003814697266

Token 134: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6330854892730713
    2. '):
' → logprob: -0.7580854892730713
    3. '[' → logprob: -8.383085250854492
    4. '):
' → logprob: -9.383085250854492
    5. '   ' → logprob: -10.133085250854492
    6. ':' → logprob: -10.258085250854492
    7. ' ):' → logprob: -11.008085250854492
    8. ' ):
' → logprob: -11.383085250854492
    9. '[:-' → logprob: -11.383085250854492
    10. '()):
' → logprob: -11.383085250854492

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036858171224594116
    2. '   ' → logprob: -5.87868595123291
    3. '<|end|>' → logprob: -8.75368595123291
    4. '    
' → logprob: -8.87868595123291
    5. '
' → logprob: -9.12868595123291
    6. '	   ' → logprob: -9.37868595123291
    7. '        
' → logprob: -9.50368595123291
    8. ' D' → logprob: -9.50368595123291
    9. 'D' → logprob: -9.75368595123291
    10. ',' → logprob: -10.12868595123291

Token 136: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6610061526298523
    2. 'D' → logprob: -1.161006212234497
    3. '       ' → logprob: -2.286006212234497
    4. ' D' → logprob: -3.411006212234497
    5. ' if' → logprob: -3.661006212234497
    6. 'if' (adapté à ' if') → logprob: -4.661005973815918
    7. ' for' → logprob: -9.161005973815918
    8. 'for' → logprob: -9.411005973815918
    9. '	D' → logprob: -9.411005973815918
    10. '    ' → logprob: -9.536005973815918

Token 137: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.21673154830932617
    2. 'count' → logprob: -1.8417315483093262
    3. ' i' → logprob: -3.466731548309326
    4. 'i' → logprob: -5.341731548309326
    5. ' ' → logprob: -8.591732025146484
    6. '	count' → logprob: -9.716732025146484
    7. '   ' → logprob: -10.966732025146484
    8. '  ' → logprob: -11.466732025146484
    9. '(count' → logprob: -11.904232025146484
    10. '<count' → logprob: -12.216732025146484

Token 138: ':
' (ID: 734)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.28401094675064087
    2. '>' → logprob: -1.409010887145996
    3. ' >=' → logprob: -6.784010887145996
    4. ':' → logprob: -7.159010887145996
    5. ' ' → logprob: -8.784010887145996
    6. ' !=' → logprob: -8.784010887145996
    7. '>=' → logprob: -8.784010887145996
    8. ' <' → logprob: -9.034010887145996
    9. ' %' → logprob: -9.909010887145996
    10. '%' → logprob: -9.909010887145996

Token 139: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056043561547994614
    2. '           ' → logprob: -3.1810436248779297
    3. ' D' → logprob: -4.80604362487793
    4. '   ' → logprob: -5.80604362487793
    5. ' for' → logprob: -7.68104362487793
    6. 'D' → logprob: -7.93104362487793
    7. '
' → logprob: -8.18104362487793
    8. '        
' → logprob: -8.80604362487793
    9. ',' → logprob: -9.18104362487793
    10. '	   ' → logprob: -9.55604362487793

Token 140: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.43938881158828735
    2. 'D' (adapté à ' D') → logprob: -1.4393887519836426
    3. '   ' → logprob: -2.6893887519836426
    4. '       ' → logprob: -3.1893887519836426
    5. ' for' → logprob: -5.189388751983643
    6. 'for' → logprob: -6.814388751983643
    7. '	D' → logprob: -7.689388751983643
    8. '           ' → logprob: -7.814388751983643
    9. '    ' → logprob: -7.939388751983643
    10. ' ' → logprob: -8.0643892288208

Token 141: 'slice' (ID: 49515)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0016967225819826126
    2. '[D' → logprob: -6.751696586608887
    3. '[' → logprob: -8.001696586608887
    4. '   ' → logprob: -9.376696586608887
    5. ' D' → logprob: -10.501696586608887
    6. 'D' → logprob: -10.501696586608887
    7. ' [' → logprob: -10.876696586608887
    8. '[j' → logprob: -12.001696586608887
    9. ' i' → logprob: -12.001696586608887
    10. ' =' → logprob: -12.501696586608887

Token 142: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7015442252159119
    2. ' =' → logprob: -1.7015442848205566
    3. '=' → logprob: -1.9515442848205566
    4. '[D' → logprob: -2.3265442848205566
    5. '[' → logprob: -3.2015442848205566
    6. '=D' → logprob: -4.076544284820557
    7. '[s' → logprob: -4.701544284820557
    8. '   ' → logprob: -5.076544284820557
    9. '=s' → logprob: -6.826544284820557
    10. 'D' → logprob: -7.076544284820557

Token 143: ' list' (ID: 1562)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.439989686012268
    2. ' D' → logprob: -1.564989686012268
    3. 'repeat' → logprob: -2.0649895668029785
    4. 'list' → logprob: -2.1899895668029785
    5. ' list' → logprob: -2.3149895668029785
    6. ' [' → logprob: -2.9399895668029785
    7. ' C' → logprob: -3.3149895668029785
    8. '[' → logprob: -3.8149895668029785
    9. 'C' → logprob: -4.1899895668029785
    10. 'is' → logprob: -4.3149895668029785

Token 144: '(is' (ID: 16171)
  Prédit: '(is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.01723056472837925
    2. '(acc' → logprob: -4.14223051071167
    3. '(range' → logprob: -7.64223051071167
    4. '(chain' → logprob: -7.89223051071167
    5. '(re' → logprob: -8.892230987548828
    6. '(' → logprob: -9.017230987548828
    7. 'is' → logprob: -10.392230987548828
    8. '(ac' → logprob: -11.142230987548828
    9. 'acc' → logprob: -11.392230987548828
    10. '(slice' → logprob: -12.017230987548828

Token 145: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.0010474584996700287
    2. 'slice' → logprob: -6.876047611236572
    3. 'ice' → logprob: -12.126047134399414
    4. 'lices' → logprob: -13.376047134399414
    5. '(slice' → logprob: -13.501047134399414
    6. 'liced' → logprob: -13.751047134399414
    7. 's' → logprob: -13.876047134399414
    8. '_slice' → logprob: -14.251047134399414
    9. 'licing' → logprob: -14.376047134399414
    10. 'chain' → logprob: -14.876047134399414

Token 146: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.09906946867704391
    2. '(C' → logprob: -3.474069356918335
    3. '(chain' → logprob: -3.599069356918335
    4. 'repeat' → logprob: -4.224069595336914
    5. '(acc' → logprob: -4.849069595336914
    6. '(A' → logprob: -5.599069595336914
    7. '(D' → logprob: -5.974069595336914
    8. '(' → logprob: -6.099069595336914
    9. '(count' → logprob: -6.224069595336914
    10. '(iter' → logprob: -6.599069595336914

Token 147: 'peat' (ID: 18888)
  Prédit: 'peat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peat' → logprob: -1.1875571544806007e-05
    2. 'pe' → logprob: -12.000011444091797
    3. 'PEAT' → logprob: -12.750011444091797
    4. 'peated' → logprob: -13.500011444091797
    5. 'p' → logprob: -14.625011444091797
    6. ' peat' → logprob: -15.625011444091797
    7. 'peating' → logprob: -15.625011444091797
    8. '
' → logprob: -15.750011444091797
    9. 'peater' → logprob: -16.000011444091797
    10. 'repeat' → logprob: -16.500011444091797

Token 148: '(i' (ID: 3649)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.08873593807220459
    2. '(i' → logprob: -2.588736057281494
    3. '(' → logprob: -5.088736057281494
    4. '(D' → logprob: -6.463736057281494
    5. 'count' → logprob: -7.338736057281494
    6. '(C' → logprob: -7.463736057281494
    7. '(c' → logprob: -8.713735580444336
    8. '(True' → logprob: -9.338735580444336
    9. '((' → logprob: -9.588735580444336
    10. ',count' → logprob: -9.588735580444336

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20270398259162903
    2. ',count' → logprob: -1.9527039527893066
    3. '),' → logprob: -3.8277039527893066
    4. ' ,' → logprob: -4.077703952789307
    5. ',i' → logprob: -7.077703952789307
    6. ',),' → logprob: -7.202703952789307
    7. ',len' → logprob: -7.702703952789307
    8. ' ),' → logprob: -8.702704429626465
    9. '(count' → logprob: -8.827704429626465
    10. 'count' → logprob: -8.952704429626465

Token 150: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0380525141954422
    2. ' count' → logprob: -3.288052558898926
    3. '	count' → logprob: -12.663052558898926
    4. ' ' → logprob: -13.038052558898926
    5. '(count' → logprob: -13.163052558898926
    6. '   ' → logprob: -14.163052558898926
    7. '=count' → logprob: -14.413052558898926
    8. '<count' → logprob: -14.538052558898926
    9. ',count' → logprob: -14.663052558898926
    10. '[count' → logprob: -14.788052558898926

Token 151: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0020484323613345623
    2. ' ),' → logprob: -6.252048492431641
    3. '   ' → logprob: -10.12704849243164
    4. ' ' → logprob: -11.00204849243164
    5. ')' → logprob: -11.37704849243164
    6. '  ' → logprob: -11.75204849243164
    7. ')))' → logprob: -12.00204849243164
    8. ',' → logprob: -12.12704849243164
    9. '       ' → logprob: -12.25204849243164
    10. ',),' → logprob: -12.62704849243164

Token 152: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.033652957528829575
    2. ' count' → logprob: -3.4086530208587646
    3. '0' → logprob: -12.283653259277344
    4. ' ' → logprob: -14.283653259277344
    5. '	count' → logprob: -14.533653259277344
    6. '(count' → logprob: -14.658653259277344
    7. '   ' → logprob: -15.783653259277344
    8. '=count' → logprob: -15.783653259277344
    9. '[count' → logprob: -15.908653259277344
    10. 'c' → logprob: -16.533653259277344

Token 153: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.014455875381827354
    2. '))
' → logprob: -4.264455795288086
    3. ' ))' → logprob: -8.639455795288086
    4. '))
' → logprob: -10.389455795288086
    5. ')))' → logprob: -11.014455795288086
    6. '));' → logprob: -11.014455795288086
    7. '))

' → logprob: -11.514455795288086
    8. ')' → logprob: -11.639455795288086
    9. ')):' → logprob: -11.639455795288086
    10. ' ))
' → logprob: -11.889455795288086

Token 154: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028786994516849518
    2. '
' → logprob: -6.502878665924072
    3. '       ' → logprob: -6.877878665924072
    4. ')' → logprob: -9.75287914276123
    5. '   ' → logprob: -9.87787914276123
    6. '<|end|>' → logprob: -10.00287914276123
    7. '            
' → logprob: -10.37787914276123
    8. ' D' → logprob: -10.75287914276123
    9. ',' → logprob: -10.75287914276123
    10. ')
' → logprob: -11.00287914276123

Token 155: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023727327585220337
    2. '       ' → logprob: -4.1487274169921875
    3. '
' → logprob: -5.0237274169921875
    4. '   ' → logprob: -8.273727416992188
    5. '            
' → logprob: -8.648727416992188
    6. ')' → logprob: -8.773727416992188
    7. '               ' → logprob: -9.648727416992188
    8. '        
' → logprob: -9.773727416992188
    9. ' ' → logprob: -10.023727416992188
    10. ')
' → logprob: -10.273727416992188

Token 156: ' inutile' (ID: 157748)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3250536322593689
    2. ' count' → logprob: -1.5750536918640137
    3. ')' → logprob: -3.2000536918640137
    4. 'len' → logprob: -4.575053691864014
    5. ' )' → logprob: -5.575053691864014
    6. '0' → logprob: -6.200053691864014
    7. '
' → logprob: -6.450053691864014
    8. ' len' → logprob: -6.575053691864014
    9. ')
' → logprob: -6.825053691864014
    10. ' ' → logprob: -6.825053691864014

Token 157: 'ment' (ID: 508)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 158: ' complexe' (ID: 78615)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.32783886790275574
    2. ' compli' → logprob: -2.452838897705078
    3. 'chain' → logprob: -3.202838897705078
    4. 'long' → logprob: -3.452838897705078
    5. ' complex' → logprob: -3.702838897705078
    6. ' longue' → logprob: -3.952838897705078
    7. ' complexe' → logprob: -4.577838897705078
    8. 'verbose' → logprob: -4.702838897705078
    9. ' répét' → logprob: -4.702838897705078
    10. 'all' → logprob: -5.077838897705078

Token 159: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5653725266456604
    2. '
' → logprob: -1.3153724670410156
    3. '           ' → logprob: -1.9403724670410156
    4. '   ' → logprob: -4.940372467041016
    5. '<|end|>' → logprob: -5.940372467041016
    6. '        
' → logprob: -6.065372467041016
    7. '+' → logprob: -6.690372467041016
    8. ')' → logprob: -6.815372467041016
    9. '            
' → logprob: -6.940372467041016
    10. '    
' → logprob: -6.940372467041016

Token 160: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26344019174575806
    2. '       ' → logprob: -1.8884401321411133
    3. '
' → logprob: -2.7634401321411133
    4. ')' → logprob: -5.388440132141113
    5. '   ' → logprob: -5.388440132141113
    6. ')
' → logprob: -6.263440132141113
    7. '            
' → logprob: -6.388440132141113
    8. '        
' → logprob: -6.638440132141113
    9. '<|end|>' → logprob: -6.888440132141113
    10. '    
' → logprob: -7.763440132141113

Token 161: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.5374112725257874
    2. ' D' → logprob: -1.6624112129211426
    3. '   ' → logprob: -2.0374112129211426
    4. ' for' → logprob: -3.2874112129211426
    5. 'for' → logprob: -3.5374112129211426
    6. '           ' → logprob: -4.287411212921143
    7. ' chain' → logprob: -4.662411212921143
    8. 'chain' → logprob: -5.662411212921143
    9. '       ' → logprob: -7.037411212921143
    10. 'C' → logprob: -7.787411212921143

Token 162: '[i' (ID: 1768)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.2375391274690628
    2. '[i' → logprob: -1.6125391721725464
    3. '.' → logprob: -5.487539291381836
    4. '[:' → logprob: -6.112539291381836
    5. '[len' → logprob: -6.237539291381836
    6. '[' → logprob: -6.362539291381836
    7. '[s' → logprob: -7.737539291381836
    8. 'extend' → logprob: -7.987539291381836
    9. ' =' → logprob: -8.487539291381836
    10. ' .' → logprob: -8.612539291381836

Token 163: ']' (ID: 60)
  Prédit: ':i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.10088422149419785
    2. ':' → logprob: -2.725884199142456
    3. ']' → logprob: -3.975884199142456
    4. ']+=' → logprob: -5.850884437561035
    5. ':]' → logprob: -6.225884437561035
    6. ':D' → logprob: -6.475884437561035
    7. ' :' → logprob: -6.600884437561035
    8. '+' → logprob: -7.475884437561035
    9. ':j' → logprob: -7.475884437561035
    10. '   ' → logprob: -7.850884437561035

Token 164: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7532832026481628
    2. '=' → logprob: -1.6282832622528076
    3. ' =' → logprob: -1.6282832622528076
    4. '+=' → logprob: -2.0032832622528076
    5. ' ' → logprob: -7.2532830238342285
    6. '.extend' → logprob: -7.3782830238342285
    7. '+' → logprob: -8.378283500671387
    8. ']' → logprob: -10.503283500671387
    9. ']+=' → logprob: -10.503283500671387
    10. ':' → logprob: -10.628283500671387

Token 165: ' len' (ID: 4631)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.012093283236026764
    2. 'len' → logprob: -4.6370930671691895
    3. ' count' → logprob: -6.3870930671691895
    4. '1' → logprob: -7.6370930671691895
    5. 'D' → logprob: -10.012093544006348
    6. ' len' → logprob: -10.137093544006348
    7. 'C' → logprob: -10.137093544006348
    8. 'sum' → logprob: -10.762093544006348
    9. ' ' → logprob: -11.762093544006348
    10. '	count' → logprob: -12.512093544006348

Token 166: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.00012761499965563416
    2. '(' → logprob: -9.000127792358398
    3. '(C' → logprob: -12.625127792358398
    4. 'D' → logprob: -15.000127792358398
    5. '(
' → logprob: -16.3751277923584
    6. 'Ds' → logprob: -16.6251277923584
    7. '(count' → logprob: -16.7501277923584
    8. '(Dense' → logprob: -16.8751277923584
    9. '(ids' → logprob: -17.0001277923584
    10. 'Dsl' → logprob: -17.2501277923584

Token 167: 'slice' (ID: 49515)
  Prédit: 'slice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slice' → logprob: -7.226628895296017e-06
    2. ')' → logprob: -12.625007629394531
    3. '(slice' → logprob: -13.000007629394531
    4. 'Slice' → logprob: -15.000007629394531
    5. 'lice' → logprob: -15.125007629394531
    6. 'D' → logprob: -15.500007629394531
    7. '))' → logprob: -15.875007629394531
    8. ' slice' → logprob: -15.875007629394531
    9. '_slice' → logprob: -16.37500762939453
    10. '   ' → logprob: -16.75000762939453

Token 168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00037800322752445936
    2. ')
' → logprob: -8.000377655029297
    3. ' )' → logprob: -10.250377655029297
    4. '))' → logprob: -13.250377655029297
    5. '<|end|>' → logprob: -13.250377655029297
    6. '   ' → logprob: -14.500377655029297
    7. ')

' → logprob: -14.750377655029297
    8. ')#' → logprob: -14.875377655029297
    9. ')return' → logprob: -15.000377655029297
    10. ')))' → logprob: -15.000377655029297

Token 169: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21481768786907196
    2. '<|end|>' → logprob: -1.8398176431655884
    3. '
' → logprob: -4.214817523956299
    4. ')' → logprob: -4.464817523956299
    5. '    
' → logprob: -5.589817523956299
    6. ']' → logprob: -7.589817523956299
    7. '```' → logprob: -7.589817523956299
    8. '<|end|>' → logprob: -7.589817523956299
    9. '[' → logprob: -8.089818000793457
    10. '  
' → logprob: -8.339818000793457

Token 171: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45386555790901184
    2. 'for' → logprob: -1.3288655281066895
    3. ' for' → logprob: -3.0788655281066895
    4. ')' → logprob: -4.3288655281066895
    5. 'print' → logprob: -4.7038655281066895
    6. 'return' → logprob: -4.8288655281066895
    7. '#' (adapté à ' #') → logprob: -5.2038655281066895
    8. '    
' → logprob: -5.5788655281066895
    9. 'def' → logprob: -5.8288655281066895
    10. 'D' → logprob: -6.4538655281066895

Token 172: ' Calcul' (ID: 57243)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.4921904802322388
    2. '#' → logprob: -1.6171904802322388
    3. ' for' → logprob: -2.367190361022949
    4. 'for' → logprob: -2.367190361022949
    5. ' E' → logprob: -2.992190361022949
    6. 'result' → logprob: -3.117190361022949
    7. 'sorted' → logprob: -3.242190361022949
    8. ' result' → logprob: -3.492190361022949
    9. ' max' → logprob: -3.992190361022949
    10. ' #' → logprob: -4.117190361022949

Token 173: ' de' (ID: 334)
  Prédit: ' prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -1.0251423120498657
    2. '   ' → logprob: -2.400142192840576
    3. ' E' → logprob: -2.400142192840576
    4. ' S' → logprob: -2.400142192840576
    5. 'E' → logprob: -2.775142192840576
    6. 'S' → logprob: -3.025142192840576
    7. 'prefix' → logprob: -3.150142192840576
    8. ' max' → logprob: -3.150142192840576
    9. ' total' → logprob: -3.525142192840576
    10. ' result' → logprob: -4.025142192840576

Token 174: ' S' (ID: 336)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.3355598449707031
    2. 'prefix' → logprob: -2.335559844970703
    3. 'result' → logprob: -2.460559844970703
    4. 'res' → logprob: -2.460559844970703
    5. 'sum' → logprob: -2.585559844970703
    6. 'acc' → logprob: -2.585559844970703
    7. ' max' → logprob: -3.085559844970703
    8. ' prefix' → logprob: -3.460559844970703
    9. 'len' → logprob: -3.585559844970703
    10. 'D' → logprob: -3.835559844970703

Token 175: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05878857150673866
    2. '=' → logprob: -2.933788537979126
    3. '   ' → logprob: -5.683788776397705
    4. ' ' → logprob: -9.183788299560547
    5. 'S' → logprob: -9.183788299560547
    6. 'um' → logprob: -9.683788299560547
    7. ',' → logprob: -10.058788299560547
    8. '  ' → logprob: -10.183788299560547
    9. ' S' → logprob: -10.683788299560547
    10. '=S' → logprob: -10.808788299560547

Token 176: ' accumulate' (ID: 74226)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.14885695278644562
    2. 'list' → logprob: -2.2738568782806396
    3. ' accumulate' → logprob: -3.5238568782806396
    4. ' list' → logprob: -6.148857116699219
    5. 'chain' → logprob: -6.148857116699219
    6. 'it' → logprob: -7.523857116699219
    7. 'reduce' → logprob: -7.898857116699219
    8. 'ac' → logprob: -8.523857116699219
    9. '(acc' → logprob: -9.648857116699219
    10. '
' → logprob: -10.023857116699219

Token 177: ' dég' (ID: 62409)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3422190248966217
    2. '   ' → logprob: -1.4672189950942993
    3. '(S' → logprob: -3.467219114303589
    4. ',' → logprob: -4.46721887588501
    5. ' =' → logprob: -5.46721887588501
    6. ' S' → logprob: -5.84221887588501
    7. '(' → logprob: -6.09221887588501
    8. '=' → logprob: -6.46721887588501
    9. ',S' → logprob: -7.34221887588501
    10. '=S' → logprob: -7.46721887588501

Token 178: 'uis' (ID: 4560)
  Prédit: 'agée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agée' → logprob: -0.6591237783432007
    2. 'agé' → logprob: -2.9091238975524902
    3. 'n' → logprob: -3.0341238975524902
    4. 'race' → logprob: -3.0341238975524902
    5. 'uis' → logprob: -3.1591238975524902
    6. 'r' → logprob: -3.2841238975524902
    7. '=' → logprob: -3.4091238975524902
    8. 'éné' → logprob: -3.5341238975524902
    9. 'age' → logprob: -4.15912389755249
    10. 'g' → logprob: -4.28412389755249

Token 179: 'é' (ID: 377)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.193674921989441
    2. '=' → logprob: -1.943674921989441
    3. 'S' → logprob: -1.943674921989441
    4. '   ' → logprob: -2.3186750411987305
    5. 'D' → logprob: -2.9436750411987305
    6. 'd' → logprob: -3.0686750411987305
    7. 'r' → logprob: -3.1936750411987305
    8. ',' → logprob: -3.1936750411987305
    9. 'C' → logprob: -3.5686750411987305
    10. '=S' → logprob: -4.1936750411987305

Token 180: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13442516326904297
    2. 'S' → logprob: -2.259425163269043
    3. ' S' → logprob: -4.759425163269043
    4. '
' → logprob: -5.009425163269043
    5. ',' → logprob: -6.259425163269043
    6. '    
' → logprob: -6.259425163269043
    7. ' =' → logprob: -6.884425163269043
    8. '=' → logprob: -7.759425163269043
    9. ' ' → logprob: -8.884425163269043
    10. ',S' → logprob: -9.634425163269043

Token 181: '   ' (ID: 271)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8577311635017395
    2. '   ' → logprob: -0.9827311635017395
    3. ' S' → logprob: -1.6077311038970947
    4. '    
' → logprob: -7.982731342315674
    5. '
' → logprob: -8.607730865478516
    6. ' ' → logprob: -8.732730865478516
    7. ',' → logprob: -9.232730865478516
    8. 'D' → logprob: -9.482730865478516
    9. ' =' → logprob: -9.732730865478516
    10. '  ' → logprob: -9.982730865478516

Token 182: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.10269350558519363
    2. ' S' → logprob: -2.477693557739258
    3. ' list' → logprob: -5.352693557739258
    4. 'list' → logprob: -5.352693557739258
    5. '   ' → logprob: -6.102693557739258
    6. 'D' → logprob: -6.602693557739258
    7. ' D' → logprob: -8.602693557739258
    8. 'acc' → logprob: -9.477693557739258
    9. '[' → logprob: -9.602693557739258
    10. 'for' → logprob: -10.102693557739258

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759435892105103
    2. '=' → logprob: -0.8259435892105103
    3. ' ' → logprob: -13.700943946838379
    4. ',' → logprob: -14.200943946838379
    5. '   ' → logprob: -14.200943946838379
    6. '[' → logprob: -14.575943946838379
    7. ')' → logprob: -15.450943946838379
    8. 's' → logprob: -15.825943946838379
    9. ' ' → logprob: -15.950943946838379
    10. ' =[' → logprob: -15.950943946838379

Token 184: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.026309354230761528
    2. ' list' → logprob: -3.6513092517852783
    3. '   ' → logprob: -12.6513090133667
    4. '[' → logprob: -12.9013090133667
    5. ' [' → logprob: -13.2763090133667
    6. '[list' → logprob: -14.4013090133667
    7. '(list' → logprob: -15.1513090133667
    8. 'acc' → logprob: -15.2763090133667
    9. '	list' → logprob: -15.9013090133667
    10. ' ' → logprob: -16.026309967041016

Token 185: '(chain' (ID: 124348)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -1.723973582556937e-05
    2. '(' → logprob: -11.875017166137695
    3. '(ac' → logprob: -12.000017166137695
    4. 'acc' → logprob: -12.500017166137695
    5. '(chain' → logprob: -15.750017166137695
    6. '	acc' → logprob: -16.625017166137695
    7. '(is' → logprob: -16.750017166137695
    8. ' (' → logprob: -17.125017166137695
    9. '(
' → logprob: -17.500017166137695
    10. '   ' → logprob: -18.000017166137695

Token 186: '([' (ID: 5194)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.38861602544784546
    2. '.from' → logprob: -1.1386160850524902
    3. '.acc' → logprob: -7.26361608505249
    4. 'from' → logprob: -7.51361608505249
    5. '(*' → logprob: -7.76361608505249
    6. '(from' → logprob: -11.013615608215332
    7. 'acc' → logprob: -11.388615608215332
    8. '(' → logprob: -11.388615608215332
    9. '(is' → logprob: -11.388615608215332
    10. '([' → logprob: -11.888615608215332

Token 187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012824170291423798
    2. 'D' → logprob: -4.387824058532715
    3. 'C' → logprob: -8.512824058532715
    4. ' ' → logprob: -10.387824058532715
    5. '   ' → logprob: -11.012824058532715
    6. '[D' → logprob: -11.262824058532715
    7. '[' → logprob: -11.637824058532715
    8. '1' → logprob: -11.762824058532715
    9. '(' → logprob: -11.762824058532715
    10. ' D' → logprob: -12.262824058532715

Token 188: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -1.771655115589965e-05
    2. ']' → logprob: -11.625018119812012
    3. '],
' → logprob: -12.750018119812012
    4. ' ],' → logprob: -13.375018119812012
    5. '],[' → logprob: -13.500018119812012
    6. ',' → logprob: -13.875018119812012
    7. ':],' → logprob: -14.750018119812012
    8. '()],' → logprob: -15.000018119812012
    9. '   ' → logprob: -15.250018119812012
    10. '),' → logprob: -15.625018119812012

Token 189: ' accumulate' (ID: 74226)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.012777555733919144
    2. ' accumulate' → logprob: -4.387777328491211
    3. '(acc' → logprob: -8.387777328491211
    4. ' ' → logprob: -11.762777328491211
    5. 'is' → logprob: -11.762777328491211
    6. '	acc' → logprob: -12.262777328491211
    7. '   ' → logprob: -12.512777328491211
    8. 'list' → logprob: -12.762777328491211
    9. 'ac' → logprob: -13.137777328491211
    10. '.acc' → logprob: -13.262777328491211

Token 190: '(is' (ID: 16171)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.005232221446931362
    2. '(lambda' → logprob: -5.380232334136963
    3. '(C' → logprob: -8.005231857299805
    4. '(' → logprob: -9.005231857299805
    5. 'D' → logprob: -10.005231857299805
    6. '(range' → logprob: -10.255231857299805
    7. '(
' → logprob: -11.005231857299805
    8. '(A' → logprob: -11.380231857299805
    9. '(d' → logprob: -11.630231857299805
    10. '   ' → logprob: -12.255231857299805

Token 191: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -3.547789674485102e-05
    2. '(C' → logprob: -11.375035285949707
    3. 'ub' → logprob: -11.625035285949707
    4. '(' → logprob: -13.500035285949707
    5. '[C' → logprob: -13.625035285949707
    6. 'liced' → logprob: -13.625035285949707
    7. 'lices' → logprob: -14.125035285949707
    8. '(D' → logprob: -14.250035285949707
    9. '[' → logprob: -14.375035285949707
    10. 'eq' → logprob: -14.375035285949707

Token 192: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.00588566018268466
    2. '(C' → logprob: -5.380885601043701
    3. '(iter' → logprob: -7.505885601043701
    4. '(re' → logprob: -8.50588607788086
    5. '(chain' → logprob: -9.25588607788086
    6. '(it' → logprob: -9.50588607788086
    7. '(d' → logprob: -9.63088607788086
    8. '(' → logprob: -9.63088607788086
    9. '(lambda' → logprob: -9.75588607788086
    10. '(A' → logprob: -10.13088607788086

Token 193: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16469942033290863
    2. ',' → logprob: -1.9146994352340698
    3. '(len' → logprob: -5.914699554443359
    4. '(lambda' → logprob: -7.164699554443359
    5. '(None' → logprob: -7.414699554443359
    6. '(),' → logprob: -8.91469955444336
    7. ' ,' → logprob: -9.28969955444336
    8. ',len' → logprob: -9.78969955444336
    9. 'len' → logprob: -11.03969955444336
    10. 'lambda' → logprob: -11.41469955444336

Token 194: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0794934332370758
    2. 'len' → logprob: -3.079493522644043
    3. 'N' → logprob: -4.079493522644043
    4. 'None' → logprob: -5.079493522644043
    5. '0' → logprob: -5.829493522644043
    6. ' ' → logprob: -6.329493522644043
    7. '   ' → logprob: -6.829493522644043
    8. ' N' → logprob: -7.454493522644043
    9. ' len' → logprob: -7.579493522644043
    10. ' None' → logprob: -8.829493522644043

Token 195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11602053791284561
    2. 'len' → logprob: -2.866020441055298
    3. 'N' → logprob: -2.991020441055298
    4. '0' → logprob: -6.366020679473877
    5. '   ' → logprob: -8.491020202636719
    6. 'None' → logprob: -8.741020202636719
    7. ' ' → logprob: -9.616020202636719
    8. '(' → logprob: -9.991020202636719
    9. ' len' → logprob: -10.116020202636719
    10. ' N' → logprob: -10.241020202636719

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016700613778084517
    2. ',None' → logprob: -6.501669883728027
    3. ',len' → logprob: -9.501669883728027
    4. 'None' → logprob: -10.376669883728027
    5. ',N' → logprob: -10.501669883728027
    6. ' ,' → logprob: -10.626669883728027
    7. ',),' → logprob: -12.501669883728027
    8. ',n' → logprob: -13.376669883728027
    9. ',
' → logprob: -14.251669883728027
    10. ',)' → logprob: -14.251669883728027

Token 197: ' None' (ID: 4662)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.45934566855430603
    2. 'None' → logprob: -1.2093456983566284
    3. 'len' → logprob: -2.709345579147339
    4. ' N' → logprob: -6.709345817565918
    5. ' None' → logprob: -6.709345817565918
    6. ')))' → logprob: -7.959345817565918
    7. ' len' → logprob: -9.084345817565918
    8. ',N' → logprob: -9.584345817565918
    9. '))' → logprob: -9.709345817565918
    10. '   ' → logprob: -9.834345817565918

Token 198: '))))
' (ID: 55084)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.006664811633527279
    2. ')))' → logprob: -5.506664752960205
    3. '),' → logprob: -7.131664752960205
    4. '))))
' → logprob: -7.256664752960205
    5. '))))

' → logprob: -7.756664752960205
    6. '))' → logprob: -8.006665229797363
    7. ' ))' → logprob: -8.756665229797363
    8. ')' → logprob: -9.881665229797363
    9. ' ' → logprob: -10.506665229797363
    10. ')))),' → logprob: -10.631665229797363

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11229929327964783
    2. ')' → logprob: -2.4872992038726807
    3. '
' → logprob: -3.8622992038726807
    4. '    
' → logprob: -6.73729944229126
    5. '<|end|>' → logprob: -7.48729944229126
    6. ')
' → logprob: -8.862298965454102
    7. '```' → logprob: -9.612298965454102
    8. 'print' → logprob: -11.362298965454102
    9. ' )' → logprob: -11.362298965454102
    10. '  
' → logprob: -11.487298965454102

Token 200: ' f' (ID: 285)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.661264955997467
    2. '   ' → logprob: -0.786264955997467
    3. '<|end|>' → logprob: -4.036264896392822
    4. '
' → logprob: -5.786264896392822
    5. '    
' → logprob: -6.036264896392822
    6. '(' → logprob: -6.411264896392822
    7. '```' → logprob: -6.911264896392822
    8. '#' → logprob: -7.661264896392822
    9. ' ' → logprob: -8.16126537322998
    10. '  
' → logprob: -8.28626537322998

Token 201: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0013759488938376307
    2. ' or' → logprob: -8.001376152038574
    3. 'o' → logprob: -8.876376152038574
    4. '#' → logprob: -9.126376152038574
    5. 'for' → logprob: -9.126376152038574
    6. '(or' → logprob: -9.126376152038574
    7. '   ' → logprob: -9.251376152038574
    8. '()' → logprob: -9.251376152038574
    9. '(' → logprob: -9.376376152038574
    10. '```' → logprob: -10.126376152038574

Token 202: ' [' (ID: 723)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.5989601612091064
    2. 'lambda' → logprob: -0.8489601612091064
    3. '(lambda' → logprob: -4.598959922790527
    4. '0' → logprob: -5.473959922790527
    5. 'S' → logprob: -5.598959922790527
    6. 'len' → logprob: -6.598959922790527
    7. ' S' → logprob: -7.098959922790527
    8. ' len' → logprob: -7.473959922790527
    9. 'item' → logprob: -7.473959922790527
    10. ' ' → logprob: -7.723959922790527

Token 203: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09456785023212433
    2. 'S' → logprob: -3.2195677757263184
    3. '1' → logprob: -4.844567775726318
    4. '(' → logprob: -5.094567775726318
    5. 'C' → logprob: -5.594567775726318
    6. 'x' → logprob: -5.594567775726318
    7. 'i' → logprob: -5.594567775726318
    8. 'item' → logprob: -5.844567775726318
    9. 'abs' → logprob: -5.844567775726318
    10. 'max' → logprob: -6.344567775726318

Token 204: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018088180804625154
    2. ']*' → logprob: -7.5018086433410645
    3. ']*(' → logprob: -8.001809120178223
    4. ',' → logprob: -8.001809120178223
    5. ' ]' → logprob: -8.126809120178223
    6. ']+' → logprob: -8.876809120178223
    7. ')' → logprob: -10.251809120178223
    8. ' for' → logprob: -10.376809120178223
    9. '])' → logprob: -10.626809120178223
    10. ')]' → logprob: -10.751809120178223

Token 205: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.001352379797026515
    2. '(' → logprob: -7.751352310180664
    3. '(len' → logprob: -8.001352310180664
    4. ' (' → logprob: -8.001352310180664
    5. 'N' → logprob: -9.126352310180664
    6. 'len' → logprob: -9.626352310180664
    7. '(n' → logprob: -9.626352310180664
    8. '((' → logprob: -12.626352310180664
    9. '
' → logprob: -13.376352310180664
    10. '   ' → logprob: -13.876352310180664

Token 207: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00040099851321429014
    2. ' N' → logprob: -8.37540054321289
    3. 'len' → logprob: -8.75040054321289
    4. '(N' → logprob: -11.62540054321289
    5. '   ' → logprob: -13.37540054321289
    6. '(' → logprob: -14.37540054321289
    7. 'n' → logprob: -14.75040054321289
    8. '2' → logprob: -15.50040054321289
    9. ' ' → logprob: -15.87540054321289
    10. ' len' → logprob: -16.00040054321289

Token 208: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026348724961280823
    2. ' +' → logprob: -3.651348829269409
    3. '+
' → logprob: -10.526349067687988
    4. '   ' → logprob: -11.901349067687988
    5. '
' → logprob: -12.401349067687988
    6. '1' → logprob: -12.776349067687988
    7. '2' → logprob: -12.901349067687988
    8. ')' → logprob: -13.276349067687988
    9. ' +
' → logprob: -13.276349067687988
    10. ' ' → logprob: -15.026349067687988

Token 209: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01975046470761299
    2. '1' → logprob: -4.144750595092773
    3. '3' → logprob: -5.644750595092773
    4. ' ' → logprob: -8.769750595092773
    5. '
' → logprob: -12.519750595092773
    6. '   ' → logprob: -12.644750595092773
    7. '4' → logprob: -12.707250595092773
    8. '(' → logprob: -13.019750595092773
    9. '5' → logprob: -14.207250595092773
    10. 'N' → logprob: -14.457250595092773

Token 210: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.056828852742910385
    2. '1' → logprob: -3.056828737258911
    3. '3' → logprob: -4.80682897567749
    4. '(' → logprob: -11.306828498840332
    5. ' ' → logprob: -11.306828498840332
    6. '4' → logprob: -13.119328498840332
    7. '
' → logprob: -13.369328498840332
    8. '(N' → logprob: -13.681828498840332
    9. '   ' → logprob: -14.181828498840332
    10. '{' → logprob: -14.431828498840332

Token 211: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015430726343765855
    2. ')
' → logprob: -6.501543045043945
    3. ' )' → logprob: -10.251543045043945
    4. ')
' → logprob: -12.751543045043945
    5. ')

' → logprob: -14.126543045043945
    6. ')]' → logprob: -14.376543045043945
    7. '   ' → logprob: -15.251543045043945
    8. ')`' → logprob: -15.251543045043945
    9. '
' → logprob: -15.501543045043945
    10. '))' → logprob: -15.751543045043945

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03618856891989708
    2. 'for' → logprob: -4.03618860244751
    3. ' for' → logprob: -4.03618860244751
    4. '<|end|>' → logprob: -9.036188125610352
    5. '    
' → logprob: -10.661188125610352
    6. 'def' → logprob: -11.036188125610352
    7. '
' → logprob: -11.536188125610352
    8. ')' → logprob: -11.536188125610352
    9. '	for' → logprob: -11.786188125610352
    10. 'f' → logprob: -12.161188125610352

Token 213: ' list' (ID: 1562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12791922688484192
    2. ' for' → logprob: -2.3779191970825195
    3. '   ' → logprob: -3.6279191970825195
    4. 'i' → logprob: -7.5029191970825195
    5. ' i' → logprob: -9.87791919708252
    6. 'f' → logprob: -10.00291919708252
    7. ')' → logprob: -10.37791919708252
    8. '	for' → logprob: -11.37791919708252
    9. 'def' → logprob: -11.62791919708252
    10. ' ' → logprob: -11.62791919708252

Token 214: '(map' (ID: 16946)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.20022644102573395
    2. '(is' → logprob: -2.4502265453338623
    3. '(chain' → logprob: -2.4502265453338623
    4. '(map' → logprob: -5.825226306915283
    5. '(' → logprob: -6.075226306915283
    6. 'acc' → logprob: -6.325226306915283
    7. '(zip' → logprob: -7.325226306915283
    8. '(ac' → logprob: -8.325226783752441
    9. '(range' → logprob: -8.825226783752441
    10. '(f' → logprob: -9.075226783752441

Token 215: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0027065619360655546
    2. '(f' → logprob: -6.377706527709961
    3. '(' → logprob: -7.002706527709961
    4. '(
' → logprob: -10.502706527709961
    5. '(item' → logprob: -10.502706527709961
    6. '(int' → logprob: -11.252706527709961
    7. '((' → logprob: -11.877706527709961
    8. ' (' → logprob: -11.877706527709961
    9. '(operator' → logprob: -12.002706527709961
    10. '(None' → logprob: -13.127706527709961

Token 216: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9614027738571167
    2. 'i' → logprob: -1.2114027738571167
    3. ' f' → logprob: -2.3364028930664062
    4. 'f' → logprob: -2.4614028930664062
    5. ' lambda' → logprob: -3.3364028930664062
    6. ' x' → logprob: -3.4614028930664062
    7. 'x' → logprob: -3.4614028930664062
    8. 'lambda' → logprob: -4.211402893066406
    9. ' idx' → logprob: -4.711402893066406
    10. 'j' → logprob: -5.586402893066406

Token 217: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009487013332545757
    2. ' :' → logprob: -4.759487152099609
    3. ',' → logprob: -8.00948715209961
    4. '=lambda' → logprob: -8.25948715209961
    5. 'lambda' → logprob: -9.25948715209961
    6. ' lambda' → logprob: -9.75948715209961
    7. '(lambda' → logprob: -10.75948715209961
    8. 'f' → logprob: -10.88448715209961
    9. ' f' → logprob: -11.38448715209961
    10. ' x' → logprob: -11.50948715209961

Token 218: ' f' (ID: 285)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6212196946144104
    2. ' lambda' → logprob: -1.6212196350097656
    3. '(lambda' → logprob: -1.8712196350097656
    4. 'f' → logprob: -2.4962196350097656
    5. ' f' → logprob: -3.6212196350097656
    6. '   ' → logprob: -7.371219635009766
    7. '(f' → logprob: -7.746219635009766
    8. ' (' → logprob: -7.746219635009766
    9. 'None' → logprob: -9.246219635009766
    10. ' ' → logprob: -9.746219635009766

Token 219: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -4.5252596464706585e-05
    2. '__' → logprob: -10.500044822692871
    3. '__.__' → logprob: -12.125044822692871
    4. '().__' → logprob: -12.375044822692871
    5. '.append' → logprob: -12.625044822692871
    6. ').__' → logprob: -13.375044822692871
    7. '.' → logprob: -14.375044822692871
    8. '.extend' → logprob: -14.375044822692871
    9. ' __' → logprob: -14.875044822692871
    10. '.setdefault' → logprob: -15.000044822692871

Token 220: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.3425219549390022e-05
    2. 'sets' → logprob: -11.37501335144043
    3. 'getitem' → logprob: -13.50001335144043
    4. '
' → logprob: -15.62501335144043
    5. 'i' → logprob: -15.75001335144043
    6. 'del' → logprob: -15.87501335144043
    7. '

' → logprob: -17.25001335144043
    8. '```' → logprob: -17.50001335144043
    9. '.set' → logprob: -18.25001335144043
    10. 'imul' → logprob: -18.37501335144043

Token 221: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -1.2664456789934775e-06
    2. 'attr' → logprob: -13.625000953674316
    3. '__(' → logprob: -18.375001907348633
    4. ' item' → logprob: -19.375001907348633
    5. 'getitem' → logprob: -19.375001907348633
    6. '(item' → logprob: -19.875001907348633
    7. '(' → logprob: -21.000001907348633
    8. 'index' → logprob: -21.000001907348633
    9. 'it' → logprob: -21.000001907348633
    10. 'state' → logprob: -21.125001907348633

Token 222: '__(' (ID: 8241)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12862920761108398
    2. '(' → logprob: -2.128629207611084
    3. 'x' → logprob: -7.628629207611084
    4. '((' → logprob: -7.753629207611084
    5. ' (' → logprob: -8.003629684448242
    6. ')' → logprob: -8.628629684448242
    7. ')(' → logprob: -9.253629684448242
    8. '(
' → logprob: -10.753629684448242
    9. '(None' → logprob: -10.878629684448242
    10. ',' → logprob: -11.128629684448242

Token 223: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003242835868149996
    2. ' x' → logprob: -5.8782429695129395
    3. ')' → logprob: -8.878242492675781
    4. '*' → logprob: -9.378242492675781
    5. '*x' → logprob: -9.753242492675781
    6. 'S' → logprob: -10.753242492675781
    7. '0' → logprob: -10.753242492675781
    8. 'C' → logprob: -11.003242492675781
    9. '
' → logprob: -11.128242492675781
    10. ',' → logprob: -11.503242492675781

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008598887361586094
    2. ',x' → logprob: -8.125860214233398
    3. '-' → logprob: -8.625860214233398
    4. ' ,' → logprob: -9.250860214233398
    5. ' -' → logprob: -9.500860214233398
    6. 'x' → logprob: -9.625860214233398
    7. ',S' → logprob: -10.125860214233398
    8. ',
' → logprob: -10.500860214233398
    9. ',C' → logprob: -10.875860214233398
    10. '   ' → logprob: -11.500860214233398

Token 225: ' S' (ID: 336)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0195509195327759
    2. 'x' → logprob: -1.6445509195327759
    3. 'S' → logprob: -1.6445509195327759
    4. '0' → logprob: -2.2695508003234863
    5. 'f' → logprob: -2.2695508003234863
    6. 'True' → logprob: -4.019550800323486
    7. ' ' → logprob: -4.894550800323486
    8. ' S' → logprob: -5.644550800323486
    9. ' x' → logprob: -5.644550800323486
    10. ' f' → logprob: -5.894550800323486

Token 226: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.4498052223643754e-05
    2. '[' → logprob: -11.500014305114746
    3. 'x' → logprob: -13.125014305114746
    4. '[
' → logprob: -14.125014305114746
    5. '
' → logprob: -15.125014305114746
    6. '   ' → logprob: -15.125014305114746
    7. '[D' → logprob: -15.500014305114746
    8. '[S' → logprob: -15.875014305114746
    9. '[-' → logprob: -16.125015258789062
    10. ' [' → logprob: -16.125015258789062

Token 227: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.133896142244339
    2. ']),' → logprob: -2.7588961124420166
    3. ']+' → logprob: -3.6338961124420166
    4. '+' → logprob: -3.7588961124420166
    5. '])),' → logprob: -4.883896350860596
    6. '-' → logprob: -5.883896350860596
    7. ']))' → logprob: -7.508896350860596
    8. '])' → logprob: -7.758896350860596
    9. ' +' → logprob: -8.758895874023438
    10. ' -' → logprob: -9.133895874023438

Token 228: ' //' (ID: 602)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6389462947845459
    2. '+' → logprob: -1.513946294784546
    3. '-' → logprob: -1.638946294784546
    4. ' -' → logprob: -3.638946294784546
    5. ' ),' → logprob: -4.138946533203125
    6. ' +' → logprob: -4.513946533203125
    7. ')' → logprob: -6.763946533203125
    8. '   ' → logprob: -7.138946533203125
    9. ')),' → logprob: -7.138946533203125
    10. '+x' → logprob: -7.138946533203125

Token 229: ' x' (ID: 1215)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2789275050163269
    2. 'x' → logprob: -1.9039275646209717
    3. '(' → logprob: -3.2789275646209717
    4. '(x' → logprob: -3.4039275646209717
    5. 'N' → logprob: -4.903927326202393
    6. '1' → logprob: -5.153927326202393
    7. ' ' → logprob: -5.653927326202393
    8. '(N' → logprob: -6.028927326202393
    9. ' (' → logprob: -7.153927326202393
    10. 'A' → logprob: -7.403927326202393

Token 230: ' if' (ID: 538)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.004904381465166807
    2. ' if' → logprob: -6.254904270172119
    3. ')' → logprob: -6.504904270172119
    4. ' ),' → logprob: -6.629904270172119
    5. 'if' → logprob: -9.254904747009277
    6. ' ' → logprob: -10.379904747009277
    7. '   ' → logprob: -11.879904747009277
    8. '),
' → logprob: -12.379904747009277
    9. '  ' → logprob: -13.129904747009277
    10. ' )' → logprob: -13.129904747009277

Token 231: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03804171830415726
    2. ' x' → logprob: -3.288041830062866
    3. ' ' → logprob: -16.038042068481445
    4. '	x' → logprob: -16.913042068481445
    5. '   ' → logprob: -16.913042068481445
    6. ' ' → logprob: -17.538042068481445
    7. '(x' → logprob: -18.413042068481445
    8. '>x' → logprob: -19.413042068481445
    9. '"x' → logprob: -19.788042068481445
    10. '  ' → logprob: -19.788042068481445

Token 232: ' else' (ID: 1203)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7962005138397217
    2. '>' → logprob: -0.9212005138397217
    3. ' !=' → logprob: -2.4212005138397217
    4. '!=' → logprob: -3.0462005138397217
    5. ' else' → logprob: -4.421200752258301
    6. 'else' → logprob: -6.671200752258301
    7. ' and' → logprob: -7.546200752258301
    8. ' ' → logprob: -7.921200752258301
    9. 'and' → logprob: -8.5462007522583
    10. ' ' → logprob: -9.0462007522583

Token 233: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13797955214977264
    2. '1' → logprob: -2.137979507446289
    3. ' ' → logprob: -4.512979507446289
    4. '   ' → logprob: -11.262979507446289
    5. '  ' → logprob: -12.137979507446289
    6. '           ' → logprob: -13.637979507446289
    7. '
' → logprob: -13.887979507446289
    8. '    ' → logprob: -14.387979507446289
    9. '       ' → logprob: -15.075479507446289
    10. ' ' → logprob: -15.075479507446289

Token 234: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004958406207151711
    2. ' ' → logprob: -8.250495910644531
    3. '1' → logprob: -8.375495910644531
    4. '   ' → logprob: -13.125495910644531
    5. '  ' → logprob: -14.500495910644531
    6. '
' → logprob: -14.625495910644531
    7. '           ' → logprob: -15.312995910644531
    8. '    ' → logprob: -16.31299591064453
    9. '```' → logprob: -16.50049591064453
    10. '     ' → logprob: -16.56299591064453

Token 235: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00021772195759695023
    2. ' ),' → logprob: -8.62521743774414
    3. ')' → logprob: -10.37521743774414
    4. '   ' → logprob: -12.37521743774414
    5. ' ' → logprob: -14.50021743774414
    6. ')),' → logprob: -14.62521743774414
    7. '),
' → logprob: -15.12521743774414
    8. '       ' → logprob: -15.62521743774414
    9. '           ' → logprob: -15.75021743774414
    10. '  ' → logprob: -16.00021743774414

Token 236: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.034647200256586075
    2. ' range' → logprob: -3.409647226333618
    3. 'filter' → logprob: -7.159646987915039
    4. 'A' → logprob: -8.784646987915039
    5. ' filter' → logprob: -10.534646987915039
    6. 'C' → logprob: -10.659646987915039
    7. ' A' → logprob: -12.034646987915039
    8. '   ' → logprob: -12.909646987915039
    9. ' ' → logprob: -13.034646987915039
    10. '(range' → logprob: -13.159646987915039

Token 237: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5762298107147217
    2. '(N' → logprob: -0.8262298107147217
    3. '(len' → logprob: -8.3262300491333
    4. '1' → logprob: -10.2012300491333
    5. '(n' → logprob: -12.5762300491333
    6. ' (' → logprob: -12.9512300491333
    7. 'len' → logprob: -12.9512300491333
    8. 'N' → logprob: -13.3262300491333
    9. '((' → logprob: -14.8262300491333
    10. '(M' → logprob: -14.9512300491333

Token 238: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06351427733898163
    2. ' +' → logprob: -2.813514232635498
    3. '(' → logprob: -6.938514232635498
    4. '1' → logprob: -7.813514232635498
    5. '   ' → logprob: -9.438514709472656
    6. '()+' → logprob: -9.813514709472656
    7. ',' → logprob: -11.063514709472656
    8. ' ' → logprob: -12.438514709472656
    9. '+
' → logprob: -12.563514709472656
    10. '()' → logprob: -12.813514709472656

Token 239: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002396463416516781
    2. ' ' → logprob: -6.127396583557129
    3. '2' → logprob: -8.502396583557129
    4. '   ' → logprob: -12.127396583557129
    5. '```' → logprob: -14.127396583557129
    6. '  ' → logprob: -14.377396583557129
    7. '+' → logprob: -14.502396583557129
    8. '
' → logprob: -14.877396583557129
    9. '11' → logprob: -15.814896583557129
    10. '(' → logprob: -16.189895629882812

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005799580831080675
    2. '2' → logprob: -7.750579833984375
    3. ' ' → logprob: -9.125579833984375
    4. '+' → logprob: -11.250579833984375
    5. 'N' → logprob: -11.500579833984375
    6. '12' → logprob: -11.875579833984375
    7. '0' → logprob: -13.000579833984375
    8. '   ' → logprob: -13.250579833984375
    9. '11' → logprob: -13.375579833984375
    10. '(' → logprob: -13.625579833984375

Token 241: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0017560989363119006
    2. '))' → logprob: -6.626756191253662
    3. ')' → logprob: -7.876756191253662
    4. ')))
' → logprob: -10.876755714416504
    5. '))))' → logprob: -11.376755714416504
    6. ')));' → logprob: -11.501755714416504
    7. ' ' → logprob: -12.126755714416504
    8. '   ' → logprob: -13.001755714416504
    9. ')))

' → logprob: -14.001755714416504
    10. '())))' → logprob: -14.751755714416504

Token 242: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06773676723241806
    2. '<|end|>' → logprob: -2.942736864089966
    3. ')' → logprob: -4.567736625671387
    4. '
' → logprob: -7.317736625671387
    5. '```' → logprob: -7.692736625671387
    6. '    
' → logprob: -8.317736625671387
    7. '}' → logprob: -8.442736625671387
    8. 'if' → logprob: -8.442736625671387
    9. '<|end|>' → logprob: -9.192736625671387
    10. ']' → logprob: -9.442736625671387

Token 243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058041393756866455
    2. '<|end|>' → logprob: -2.9330413341522217
    3. ')' → logprob: -6.183041572570801
    4. '
' → logprob: -7.808041572570801
    5. '```' → logprob: -8.3080415725708
    6. '    
' → logprob: -8.5580415725708
    7. '#' → logprob: -9.8080415725708
    8. '<|end|>' → logprob: -10.0580415725708
    9. '}' → logprob: -10.4330415725708
    10. 'return' → logprob: -10.5580415725708

Token 244: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5570904016494751
    2. 'print' → logprob: -1.432090401649475
    3. '   ' → logprob: -1.932090401649475
    4. 'return' → logprob: -3.5570902824401855
    5. 'f' → logprob: -5.3070902824401855
    6. 'if' → logprob: -6.3070902824401855
    7. 'result' → logprob: -6.5570902824401855
    8. 'def' → logprob: -6.5570902824401855
    9. ' for' → logprob: -6.6820902824401855
    10. '#' (adapté à ' #') → logprob: -7.1820902824401855

Token 245: ' Gén' (ID: 71828)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.683363914489746
    2. 'print' → logprob: -1.933363914489746
    3. 'for' → logprob: -2.183363914489746
    4. ' for' → logprob: -2.433363914489746
    5. ' max' → logprob: -2.558363914489746
    6. 'max' → logprob: -2.683363914489746
    7. 'result' → logprob: -2.808363914489746
    8. ' print' → logprob: -2.808363914489746
    9. ' result' → logprob: -3.558363914489746
    10. ' #' → logprob: -3.933363914489746

Token 246: 'érer' (ID: 29097)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.08632532507181168
    2. 'eral' → logprob: -3.0863254070281982
    3. 'def' → logprob: -4.711325168609619
    4. '
' → logprob: -4.961325168609619
    5. 'ér' → logprob: -5.586325168609619
    6. 'ération' → logprob: -6.211325168609619
    7. 'érer' → logprob: -6.211325168609619
    8. '```' → logprob: -6.211325168609619
    9. 'érateur' → logprob: -6.211325168609619
    10. '   ' → logprob: -6.336325168609619

Token 247: ' toutes' (ID: 17502)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.1258132457733154
    2. 'result' → logprob: -1.1258132457733154
    3. '   ' → logprob: -2.5008132457733154
    4. ' for' → logprob: -2.8758132457733154
    5. ' output' → logprob: -3.1258132457733154
    6. 'for' → logprob: -3.1258132457733154
    7. 'output' → logprob: -3.7508132457733154
    8. ' res' → logprob: -4.2508134841918945
    9. 'f' → logprob: -4.5008134841918945
    10. 'res' → logprob: -5.0008134841918945

Token 248: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.08710281550884247
    2. 's' → logprob: -3.4621028900146484
    3. 'sub' → logprob: -4.087102890014648
    4. 'com' → logprob: -4.087102890014648
    5. 'comb' → logprob: -5.462102890014648
    6. ' les' → logprob: -5.837102890014648
    7. 'la' → logprob: -5.962102890014648
    8. '(' → logprob: -6.212102890014648
    9. 'pairs' → logprob: -6.212102890014648
    10. 'subset' → logprob: -6.587102890014648

Token 249: ' réponses' (ID: 88884)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5280956625938416
    2. 'p' → logprob: -2.4030957221984863
    3. 'div' → logprob: -2.6530957221984863
    4. 'com' → logprob: -3.0280957221984863
    5. 'sub' → logprob: -3.2780957221984863
    6. 'comb' → logprob: -3.2780957221984863
    7. 'pairs' → logprob: -3.5280957221984863
    8. 'val' → logprob: -3.9030957221984863
    9. ' comb' → logprob: -4.403095722198486
    10. 'pair' → logprob: -4.903095722198486

Token 250: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1221289411187172
    2. 'for' → logprob: -2.747128963470459
    3. ' for' → logprob: -2.997128963470459
    4. '
' → logprob: -7.997128963470459
    5. 'results' → logprob: -9.2471284866333
    6. '    
' → logprob: -9.2471284866333
    7. ',' → logprob: -9.3721284866333
    8. 'def' → logprob: -9.8721284866333
    9. 'result' → logprob: -9.8721284866333
    10. 'print' → logprob: -10.2471284866333

Token 251: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.07289502769708633
    2. ''une' → logprob: -4.197895050048828
    3. 'ans' → logprob: -4.822895050048828
    4. '1' → logprob: -4.947895050048828
    5. 'range' → logprob: -5.072895050048828
    6. 'eux' → logprob: -5.197895050048828
    7. 'une' → logprob: -5.322895050048828
    8. 'u' → logprob: -5.447895050048828
    9. ''abord' → logprob: -5.572895050048828
    10. 'i' → logprob: -5.822895050048828

Token 252: ' façon' (ID: 33381)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7967056035995483
    2. 'fonction' → logprob: -1.0467056035995483
    3. 'def' → logprob: -3.546705722808838
    4. 'f' → logprob: -3.796705722808838
    5. 'for' → logprob: -4.046705722808838
    6. 'man' → logprob: -4.171705722808838
    7. '```' → logprob: -4.171705722808838
    8. 'fa' → logprob: -4.296705722808838
    9. 'ligne' → logprob: -5.046705722808838
    10. '   ' → logprob: -5.171705722808838

Token 253: ' t' (ID: 260)
  Prédit: 'compl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compl' → logprob: -1.1870919466018677
    2. ' compli' → logprob: -1.6870919466018677
    3. 'com' → logprob: -1.9370919466018677
    4. 'for' → logprob: -3.062091827392578
    5. 'b' → logprob: -3.187091827392578
    6. 'range' → logprob: -3.312091827392578
    7. '```' → logprob: -3.562091827392578
    8. 'comp' → logprob: -3.937091827392578
    9. ' inutile' → logprob: -4.062091827392578
    10. '   ' → logprob: -4.312091827392578

Token 254: 'ord' (ID: 604)
  Prédit: 'rès'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rès' → logprob: -0.14155267179012299
    2. 'r' → logprob: -2.891552686691284
    3. 'rib' → logprob: -3.641552686691284
    4. 'ab' → logprob: -4.641552448272705
    5. 'rans' → logprob: -5.391552448272705
    6. 'otal' → logprob: -5.391552448272705
    7. 'ort' → logprob: -5.516552448272705
    8. 'ord' → logprob: -5.891552448272705
    9. 'err' → logprob: -6.016552448272705
    10. 'rid' → logprob: -6.391552448272705

Token 255: 'ue' (ID: 466)
  Prédit: 'urée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urée' → logprob: -0.8428651094436646
    2. 'ue' → logprob: -0.9678651094436646
    3. 'e' → logprob: -2.717864990234375
    4. 'ée' → logprob: -3.592864990234375
    5. 'ueuse' → logprob: -3.592864990234375
    6. 'u' → logprob: -4.592864990234375
    7. 'uée' → logprob: -4.967864990234375
    8. 'lée' → logprob: -5.092864990234375
    9. 'illée' → logprob: -5.342864990234375
    10. 'uree' → logprob: -5.467864990234375

Token 256: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7862844467163086
    2. ' for' → logprob: -0.9112844467163086
    3. 'for' → logprob: -2.2862844467163086
    4. 'answers' → logprob: -4.786284446716309
    5. 'result' → logprob: -4.911284446716309
    6. ' answers' → logprob: -5.036284446716309
    7. ' result' → logprob: -5.286284446716309
    8. '```' → logprob: -6.036284446716309
    9. 'results' → logprob: -6.286284446716309
    10. ' ans' → logprob: -6.411284446716309

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20920729637145996
    2. ' for' → logprob: -1.83420729637146
    3. 'for' → logprob: -3.58420729637146
    4. '
' → logprob: -7.834207534790039
    5. ' print' → logprob: -8.084207534790039
    6. 'print' → logprob: -8.709207534790039
    7. '```' → logprob: -9.459207534790039
    8. ' result' → logprob: -9.584207534790039
    9. 'result' → logprob: -9.834207534790039
    10. '    
' → logprob: -9.959207534790039

Token 258: ' prev' (ID: 10258)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6958815455436707
    2. 'for' → logprob: -0.8208815455436707
    3. '   ' → logprob: -3.1958816051483154
    4. ' answers' → logprob: -5.445881366729736
    5. 'answers' → logprob: -5.445881366729736
    6. 'print' → logprob: -6.070881366729736
    7. 'result' → logprob: -6.195881366729736
    8. ' print' → logprob: -6.320881366729736
    9. ' ans' → logprob: -6.570881366729736
    10. 'results' → logprob: -6.945881366729736

Token 259: '_ans' (ID: 146254)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06465216726064682
    2. ',' → logprob: -3.81465220451355
    3. '=' → logprob: -3.93965220451355
    4. '_count' → logprob: -4.189651966094971
    5. '_val' → logprob: -6.689651966094971
    6. 'count' → logprob: -7.189651966094971
    7. '_freq' → logprob: -7.439651966094971
    8. '_value' → logprob: -7.689651966094971
    9. '_' → logprob: -7.814651966094971
    10. '_max' → logprob: -7.939651966094971

Token 260: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3942720592021942
    2. ' =' → logprob: -1.3942720890045166
    3. 's' → logprob: -2.6442720890045166
    4. ',' → logprob: -5.0192718505859375
    5. ' s' → logprob: -10.144271850585938
    6. ' ' → logprob: -10.519271850585938
    7. ')' → logprob: -10.519271850585938
    8. '_' → logprob: -11.394271850585938
    9. 'es' → logprob: -11.894271850585938
    10. ' ,' → logprob: -12.019271850585938

Token 261: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007750725373625755
    2. ' ' → logprob: -5.507750511169434
    3. '-' → logprob: -6.132750511169434
    4. '[' → logprob: -7.632750511169434
    5. 'N' → logprob: -7.757750511169434
    6. '[N' → logprob: -8.757750511169434
    7. 'None' → logprob: -9.132750511169434
    8. '[]
' → logprob: -9.257750511169434
    9. '[]' → logprob: -9.882750511169434
    10. '1' → logprob: -10.007750511169434

Token 262: 'N' (ID: 45)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0035725077614188194
    2. 'N' → logprob: -6.503572463989258
    3. '(' → logprob: -7.503572463989258
    4. '1' → logprob: -8.003572463989258
    5. 'False' → logprob: -8.003572463989258
    6. '-' → logprob: -8.378572463989258
    7. ']' → logprob: -8.503572463989258
    8. '()]' → logprob: -9.378572463989258
    9. '[]' → logprob: -9.753572463989258
    10. ' ' → logprob: -9.878572463989258

Token 263: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1416139006614685
    2. ')]' → logprob: -2.7666139602661133
    3. '-' → logprob: -4.141613960266113
    4. '+' → logprob: -4.141613960266113
    5. ']
' → logprob: -4.141613960266113
    6. ' -' → logprob: -5.016613960266113
    7. ')' → logprob: -5.516613960266113
    8. ',' → logprob: -5.516613960266113
    9. ' +' → logprob: -6.266613960266113
    10. '])' → logprob: -6.641613960266113

Token 264: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12215868383646011
    2. '   ' → logprob: -2.3721587657928467
    3. ' for' → logprob: -4.872158527374268
    4. '    
' → logprob: -5.497158527374268
    5. '  
' → logprob: -6.247158527374268
    6. ' 
' → logprob: -6.622158527374268
    7. '<|end|>' → logprob: -6.622158527374268
    8. ',
' → logprob: -6.872158527374268
    9. 'for' → logprob: -6.872158527374268
    10. ',' → logprob: -6.997158527374268

Token 265: ' result' (ID: 1534)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5191347599029541
    2. 'for' → logprob: -1.019134759902954
    3. '   ' → logprob: -3.144134759902954
    4. '
' → logprob: -8.519134521484375
    5. 'result' (adapté à ' result') → logprob: -8.894134521484375
    6. ' ans' → logprob: -9.394134521484375
    7. 'ans' → logprob: -9.644134521484375
    8. '	for' → logprob: -9.644134521484375
    9. '    
' → logprob: -9.769134521484375
    10. 'answer' → logprob: -9.894134521484375

Token 266: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2847270369529724
    2. '=' → logprob: -1.4097270965576172
    3. 's' → logprob: -5.659727096557617
    4. '=[]' → logprob: -9.784727096557617
    5. ',' → logprob: -11.534727096557617
    6. '_' → logprob: -11.659727096557617
    7. '[]' → logprob: -13.409727096557617
    8. ' ' → logprob: -13.534727096557617
    9. ')' → logprob: -13.659727096557617
    10. 'es' → logprob: -13.784727096557617

Token 267: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4115848243236542
    2. ' []' → logprob: -1.1615848541259766
    3. '[' → logprob: -4.286584854125977
    4. ' [' → logprob: -5.161584854125977
    5. '[]
' → logprob: -5.536584854125977
    6. ' []
' → logprob: -7.161584854125977
    7. '[]

' → logprob: -9.786584854125977
    8. '['' → logprob: -11.286584854125977
    9. '[p' → logprob: -11.411584854125977
    10. '["' → logprob: -11.536584854125977

Token 268: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.54731285572052
    2. '   ' → logprob: -1.04731285572052
    3. 'for' → logprob: -2.6723127365112305
    4. '
' → logprob: -7.4223127365112305
    5. '	for' → logprob: -7.6723127365112305
    6. '    
' → logprob: -8.04731273651123
    7. '<|end|>' → logprob: -9.92231273651123
    8. '```' → logprob: -10.79731273651123
    9. ',' → logprob: -11.29731273651123
    10. 'def' → logprob: -11.54731273651123

Token 269: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6531686186790466
    2. 'for' (adapté à ' for') → logprob: -0.7781686186790466
    3. '   ' → logprob: -3.9031686782836914
    4. '
' → logprob: -9.278168678283691
    5. '	for' → logprob: -10.153168678283691
    6. '    
' → logprob: -10.403168678283691
    7. ' 
' → logprob: -12.653168678283691
    8. 'def' → logprob: -12.903168678283691
    9. '```' → logprob: -12.903168678283691
    10. 'while' → logprob: -13.528168678283691

Token 270: ' K' (ID: 658)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7724312543869019
    2. 'x' → logprob: -1.1474312543869019
    3. 'k' → logprob: -1.8974312543869019
    4. ' i' → logprob: -4.897431373596191
    5. 'l' → logprob: -5.147431373596191
    6. 'd' → logprob: -5.272431373596191
    7. 'j' → logprob: -5.272431373596191
    8. ' x' → logprob: -5.397431373596191
    9. 'ans' → logprob: -5.397431373596191
    10. 'K' → logprob: -5.647431373596191

Token 271: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04340767860412598
    2. 'in' → logprob: -3.168407678604126
    3. ',' → logprob: -8.043407440185547
    4. ' ' → logprob: -10.418407440185547
    5. '   ' → logprob: -11.418407440185547
    6. 'n' → logprob: -11.918407440185547
    7. '_in' → logprob: -11.918407440185547
    8. '_' → logprob: -12.043407440185547
    9. ' ,' → logprob: -12.168407440185547
    10. '  ' → logprob: -13.168407440185547

Token 272: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.35529497265815735
    2. ' range' → logprob: -1.230294942855835
    3. 'prev' → logprob: -5.105295181274414
    4. ' prev' → logprob: -7.355295181274414
    5. 'chain' → logprob: -10.980295181274414
    6. 're' → logprob: -11.105295181274414
    7. 'A' → logprob: -11.605295181274414
    8. ' ' → logprob: -11.730295181274414
    9. '[' → logprob: -11.792795181274414
    10. '(range' → logprob: -11.917795181274414

Token 273: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04888007044792175
    2. '(N' → logprob: -3.048880100250244
    3. '(prev' → logprob: -8.798879623413086
    4. '1' → logprob: -9.048879623413086
    5. 'prev' → logprob: -11.548879623413086
    6. ' (' → logprob: -12.548879623413086
    7. '   ' → logprob: -13.173879623413086
    8. ' ' → logprob: -13.298879623413086
    9. '(n' → logprob: -13.298879623413086
    10. 'N' → logprob: -13.923879623413086

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5253466367721558
    2. 'N' → logprob: -0.9003466367721558
    3. '2' → logprob: -6.525346755981445
    4. 'prev' → logprob: -8.275346755981445
    5. '0' → logprob: -8.400346755981445
    6. ' N' → logprob: -9.275346755981445
    7. 'len' → logprob: -10.025346755981445
    8. ' ' → logprob: -10.025346755981445
    9. '   ' → logprob: -10.150346755981445
    10. '(N' → logprob: -11.025346755981445

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001452375203371048
    2. ' ,' → logprob: -6.626452445983887
    3. ',N' → logprob: -9.001452445983887
    4. '   ' → logprob: -13.376452445983887
    5. ',
' → logprob: -13.626452445983887
    6. ',K' → logprob: -15.376452445983887
    7. 'N' → logprob: -16.62645149230957
    8. '(N' → logprob: -16.87645149230957
    9. ',n' → logprob: -17.00145149230957
    10. ' ' → logprob: -17.12645149230957

Token 276: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0052384985610842705
    2. ' N' → logprob: -5.2552385330200195
    3. '   ' → logprob: -12.38023853302002
    4. ' ' → logprob: -15.25523853302002
    5. '	N' → logprob: -16.005237579345703
    6. '(N' → logprob: -16.505237579345703
    7. 'len' → logprob: -17.130237579345703
    8. '  ' → logprob: -17.505237579345703
    9. '
' → logprob: -17.880237579345703
    10. '```' → logprob: -18.255237579345703

Token 277: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740878641605377
    2. ' +' → logprob: -0.9740878343582153
    3. '   ' → logprob: -12.224087715148926
    4. '):
' → logprob: -13.349087715148926
    5. '+
' → logprob: -13.349087715148926
    6. ' +
' → logprob: -13.849087715148926
    7. '
' → logprob: -14.599087715148926
    8. '):' → logprob: -14.974087715148926
    9. ' ' → logprob: -15.224087715148926
    10. ',' → logprob: -15.849087715148926

Token 278: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001118307700380683
    2. '2' → logprob: -7.376118183135986
    3. ' ' → logprob: -7.626118183135986
    4. '   ' → logprob: -12.626118659973145
    5. '
' → logprob: -14.751118659973145
    6. '```' → logprob: -16.001117706298828
    7. '  ' → logprob: -16.563617706298828
    8. ')' → logprob: -16.751117706298828
    9. '+' → logprob: -17.063617706298828
    10. 'N' → logprob: -17.563617706298828

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004242395516484976
    2. '2' → logprob: -7.875424385070801
    3. ' ' → logprob: -10.1254243850708
    4. '   ' → logprob: -13.2504243850708
    5. '
' → logprob: -14.7504243850708
    6. 'N' → logprob: -14.9379243850708
    7. 'K' → logprob: -15.6879243850708
    8. '+' → logprob: -15.7504243850708
    9. ')' → logprob: -15.7504243850708
    10. '```' → logprob: -15.7504243850708

Token 280: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28218039870262146
    2. '):
' → logprob: -1.4071804285049438
    3. ':' → logprob: -7.032180309295654
    4. '   ' → logprob: -9.407180786132812
    5. ')' → logprob: -10.657180786132812
    6. '):
' → logprob: -11.032180786132812
    7. ' ):
' → logprob: -11.782180786132812
    8. ' ):' → logprob: -11.907180786132812
    9. ':
' → logprob: -12.157180786132812
    10. ',' → logprob: -12.907180786132812

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022694433573633432
    2. '        
' → logprob: -7.627269268035889
    3. '   ' → logprob: -8.002269744873047
    4. '<|end|>' → logprob: -8.002269744873047
    5. ' 
' → logprob: -8.127269744873047
    6. '```' → logprob: -8.377269744873047
    7. '
' → logprob: -9.002269744873047
    8. '    ' → logprob: -9.377269744873047
    9. ' ' → logprob: -9.377269744873047
    10. '    
' → logprob: -9.377269744873047

Token 282: ' candidates' (ID: 18116)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7143614888191223
    2. ' if' → logprob: -1.8393614292144775
    3. ' count' → logprob: -2.2143614292144775
    4. 'count' → logprob: -3.4643614292144775
    5. '   ' → logprob: -3.8393614292144775
    6. ' ans' → logprob: -3.8393614292144775
    7. ' freq' → logprob: -4.089361667633057
    8. 'if' → logprob: -4.214361667633057
    9. ' while' → logprob: -4.339361667633057
    10. ' max' → logprob: -4.464361667633057

Token 283: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033658724278211594
    2. '=' → logprob: -3.408658742904663
    3. '   ' → logprob: -12.158658981323242
    4. ',' → logprob: -12.408658981323242
    5. ' ' → logprob: -13.908658981323242
    6. '    ' → logprob: -14.283658981323242
    7. ':' → logprob: -14.908658981323242
    8. '=[]' → logprob: -15.033658981323242
    9. 's' → logprob: -15.158658981323242
    10. ' =[' → logprob: -15.533658981323242

Token 284: ' [
' (ID: 4240)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1657624989748001
    2. '[x' → logprob: -2.540762424468994
    3. 'filter' → logprob: -3.915762424468994
    4. '[' → logprob: -4.165762424468994
    5. '[f' → logprob: -4.165762424468994
    6. 'list' → logprob: -4.790762424468994
    7. '[item' → logprob: -5.540762424468994
    8. '[k' → logprob: -5.915762424468994
    9. '[a' → logprob: -6.540762424468994
    10. '(i' → logprob: -6.540762424468994

Token 285: '           ' (ID: 352)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5129821300506592
    2. 'i' → logprob: -2.012982130050659
    3. 'f' → logprob: -2.262982130050659
    4. '(i' → logprob: -3.762982130050659
    5. '(x' → logprob: -4.012982368469238
    6. 'prev' → logprob: -4.137982368469238
    7. 'c' → logprob: -4.637982368469238
    8. 'S' → logprob: -4.762982368469238
    9. '       ' → logprob: -4.887982368469238
    10. '           ' → logprob: -4.887982368469238

Token 286: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.48828381299972534
    2. 'i' → logprob: -2.11328387260437
    3. 'f' → logprob: -2.73828387260437
    4. 'prev' → logprob: -2.98828387260437
    5. 'c' → logprob: -3.23828387260437
    6. '(i' → logprob: -4.363283634185791
    7. 'S' → logprob: -4.488283634185791
    8. '(x' → logprob: -4.613283634185791
    9. 's' → logprob: -4.613283634185791
    10. 'j' → logprob: -4.863283634185791

Token 287: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08924806118011475
    2. 'for' → logprob: -2.4642481803894043
    3. '+' → logprob: -9.089247703552246
    4. '           ' → logprob: -10.089247703552246
    5. '*' → logprob: -10.089247703552246
    6. '-' → logprob: -10.589247703552246
    7. ' ' → logprob: -11.214247703552246
    8. '   ' → logprob: -11.464247703552246
    9. ' *' → logprob: -11.714247703552246
    10. '          ' → logprob: -12.089247703552246

Token 288: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5545241832733154
    2. ' x' → logprob: -1.3045241832733154
    3. ' range' → logprob: -2.4295241832733154
    4. 'range' → logprob: -3.5545241832733154
    5. 'prev' → logprob: -3.9295241832733154
    6. ' prev' → logprob: -4.1795244216918945
    7. ' in' → logprob: -7.1795244216918945
    8. 'f' → logprob: -7.4295244216918945
    9. ' f' → logprob: -7.5545244216918945
    10. ' result' → logprob: -9.179524421691895

Token 289: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014792097732424736
    2. 'in' → logprob: -4.264791965484619
    3. ',' → logprob: -7.514791965484619
    4. ' ' → logprob: -10.514792442321777
    5. 'x' → logprob: -10.514792442321777
    6. ' x' → logprob: -11.889792442321777
    7. ',x' → logprob: -12.639792442321777
    8. ' ,' → logprob: -13.014792442321777
    9. '<|end|>' → logprob: -13.014792442321777
    10. 's' → logprob: -13.389792442321777

Token 290: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07381711155176163
    2. 'prev' → logprob: -2.698817014694214
    3. ' range' → logprob: -5.948817253112793
    4. 'chain' → logprob: -7.948817253112793
    5. 'f' → logprob: -8.198817253112793
    6. 'filter' → logprob: -9.073817253112793
    7. '(' → logprob: -9.323817253112793
    8. '(range' → logprob: -9.448817253112793
    9. '[' → logprob: -9.573817253112793
    10. ' prev' → logprob: -10.323817253112793

Token 291: '(prev' (ID: 59594)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.2818281352519989
    2. '(' → logprob: -1.9068281650543213
    3. '(N' → logprob: -2.9068281650543213
    4. '(prev' → logprob: -4.031827926635742
    5. '(len' → logprob: -4.656827926635742
    6. 'K' → logprob: -4.906827926635742
    7. 'prev' → logprob: -6.406827926635742
    8. '   ' → logprob: -6.656827926635742
    9. '(k' → logprob: -7.156827926635742
    10. '1' → logprob: -7.281827926635742

Token 292: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.0006395269301719964
    2. 'ans' → logprob: -7.50063943862915
    3. 'Ans' → logprob: -10.250639915466309
    4. '[-' → logprob: -11.000639915466309
    5. '[' → logprob: -12.500639915466309
    6. '1' → logprob: -12.625639915466309
    7. '_' → logprob: -12.750639915466309
    8. '_len' → logprob: -12.875639915466309
    9. '   ' → logprob: -12.875639915466309
    10. '+' → logprob: -13.250639915466309

Token 293: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0008841915987432003
    2. '[' → logprob: -7.125884056091309
    3. '   ' → logprob: -10.750884056091309
    4. '-' → logprob: -10.875884056091309
    5. ' [-' → logprob: -11.125884056091309
    6. '[K' → logprob: -12.125884056091309
    7. ',' → logprob: -12.750884056091309
    8. '1' → logprob: -13.125884056091309
    9. '+' → logprob: -13.250884056091309
    10. ' ' → logprob: -13.375884056091309

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02034718357026577
    2. '-' → logprob: -4.0203471183776855
    3. '0' → logprob: -7.2703471183776855
    4. ' ' → logprob: -7.2703471183776855
    5. ' -' → logprob: -8.395347595214844
    6. '   ' → logprob: -8.895347595214844
    7. '(' → logprob: -9.020347595214844
    8. 'K' → logprob: -9.520347595214844
    9. '```' → logprob: -10.395347595214844
    10. 'len' → logprob: -10.520347595214844

Token 295: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.138361856341362
    2. ' ,' → logprob: -2.638361930847168
    3. ' +' → logprob: -3.763361930847168
    4. ' -' → logprob: -4.388361930847168
    5. '+' → logprob: -4.513361930847168
    6. '-' → logprob: -5.263361930847168
    7. ')' → logprob: -6.263361930847168
    8. '),' → logprob: -6.513361930847168
    9. '   ' → logprob: -7.013361930847168
    10. ' ' → logprob: -8.013361930847168

Token 296: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.367830753326416
    2. '-' → logprob: -2.242830753326416
    3. 'K' → logprob: -2.242830753326416
    4. ' ' → logprob: -3.242830753326416
    5. ' K' → logprob: -3.367830753326416
    6. 'N' → logprob: -4.492830753326416
    7. ' -' → logprob: -4.867830753326416
    8. ' N' → logprob: -6.117830753326416
    9. '1' → logprob: -8.367830276489258
    10. '-K' → logprob: -8.742830276489258

Token 297: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3070680499076843
    2. 'K' → logprob: -1.807068109512329
    3. '-' → logprob: -2.557068109512329
    4. 'N' → logprob: -4.30706787109375
    5. ' K' → logprob: -5.55706787109375
    6. ' ' → logprob: -5.68206787109375
    7. ' -' → logprob: -6.93206787109375
    8. ' N' → logprob: -8.55706787109375
    9. '-K' → logprob: -8.80706787109375
    10. '1' → logprob: -8.80706787109375

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034089400433003902
    2. '-' → logprob: -6.003408908843994
    3. ' -' → logprob: -7.753408908843994
    4. '   ' → logprob: -8.378409385681152
    5. ' ,' → logprob: -8.878409385681152
    6. ',-' → logprob: -9.128409385681152
    7. '  ' → logprob: -12.378409385681152
    8. ' ' → logprob: -12.503409385681152
    9. '           ' → logprob: -12.503409385681152
    10. '       ' → logprob: -12.878409385681152

Token 299: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009763291105628014
    2. ' -' → logprob: -4.634763240814209
    3. '   ' → logprob: -13.009763717651367
    4. '           ' → logprob: -13.509763717651367
    5. '  ' → logprob: -13.759763717651367
    6. ' ' → logprob: -14.009763717651367
    7. '```' → logprob: -15.009763717651367
    8. '          ' → logprob: -15.509763717651367
    9. '       ' → logprob: -15.509763717651367
    10. '1' → logprob: -15.634763717651367

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25937753915786743
    2. '-' → logprob: -1.7593774795532227
    3. ' -' → logprob: -2.8843774795532227
    4. ' ' → logprob: -8.384377479553223
    5. ')' → logprob: -8.884377479553223
    6. '   ' → logprob: -10.634377479553223
    7. '
' → logprob: -11.884377479553223
    8. '           ' → logprob: -12.259377479553223
    9. '  ' → logprob: -12.384377479553223
    10. ')
' → logprob: -13.134377479553223

Token 301: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002922206884250045
    2. ')
' → logprob: -6.127922058105469
    3. ' if' → logprob: -8.127922058105469
    4. '       ' → logprob: -8.377922058105469
    5. ' )' → logprob: -9.002922058105469
    6. '           ' → logprob: -10.002922058105469
    7. '   ' → logprob: -11.127922058105469
    8. 'if' → logprob: -11.627922058105469
    9. ',' → logprob: -12.002922058105469
    10. ')
' → logprob: -12.502922058105469

Token 302: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.016783935949206352
    2. '           ' → logprob: -4.391783714294434
    3. 'if' → logprob: -5.641783714294434
    4. '       ' → logprob: -7.516783714294434
    5. ')' → logprob: -9.391783714294434
    6. '
' → logprob: -9.766783714294434
    7. '        ' → logprob: -11.766783714294434
    8. '               ' → logprob: -12.016783714294434
    9. '            ' → logprob: -12.141783714294434
    10. ']' → logprob: -12.266783714294434

Token 303: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14561127126216888
    2. '           ' → logprob: -2.02061128616333
    3. 'if' (adapté à ' if') → logprob: -5.89561128616333
    4. '
' → logprob: -9.270610809326172
    5. '            ' → logprob: -9.770610809326172
    6. '               ' → logprob: -11.895610809326172
    7. '       ' → logprob: -12.520610809326172
    8. ' ' → logprob: -12.895610809326172
    9. ')' → logprob: -13.020610809326172
    10. ']' → logprob: -13.020610809326172

Token 304: ' f' (ID: 285)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.009212613105774
    2. 'f' → logprob: -1.384212613105774
    3. 'x' → logprob: -2.1342124938964844
    4. 'C' → logprob: -2.6342124938964844
    5. ' f' → logprob: -3.2592124938964844
    6. ' S' → logprob: -3.3842124938964844
    7. 'K' → logprob: -3.5092124938964844
    8. ' x' → logprob: -4.134212493896484
    9. '(S' → logprob: -4.384212493896484
    10. ' C' → logprob: -4.509212493896484

Token 305: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0005582740413956344
    2. '[K' → logprob: -8.625557899475098
    3. '[' → logprob: -9.125557899475098
    4. 'x' → logprob: -9.750557899475098
    5. '(x' → logprob: -10.375557899475098
    6. '[k' → logprob: -10.375557899475098
    7. '[c' → logprob: -10.875557899475098
    8. ']' → logprob: -11.000557899475098
    9. '][' → logprob: -11.000557899475098
    10. '[i' → logprob: -11.000557899475098

Token 306: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007074209861457348
    2. ']>=' → logprob: -5.007074356079102
    3. ' ]' → logprob: -8.507074356079102
    4. ']==' → logprob: -10.132074356079102
    5. ']%' → logprob: -10.882074356079102
    6. ']>' → logprob: -11.007074356079102
    7. '[' → logprob: -11.132074356079102
    8. '%' → logprob: -11.382074356079102
    9. '   ' → logprob: -11.507074356079102
    10. '>=' → logprob: -11.757074356079102

Token 307: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5658363103866577
    2. ' >=' → logprob: -1.0658363103866577
    3. ']' → logprob: -3.0658364295959473
    4. ']>=' → logprob: -3.3158364295959473
    5. '[' → logprob: -6.440836429595947
    6. '>' → logprob: -6.815836429595947
    7. '*' → logprob: -7.940836429595947
    8. 'x' → logprob: -8.315835952758789
    9. ')>=' → logprob: -8.315835952758789
    10. '==' → logprob: -8.815835952758789

Token 308: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00020616286201402545
    2. '   ' → logprob: -9.750205993652344
    3. 'N' → logprob: -9.875205993652344
    4. ' K' → logprob: -10.000205993652344
    5. 'f' → logprob: -10.375205993652344
    6. '
' → logprob: -12.625205993652344
    7. '(' → logprob: -12.750205993652344
    8. ' ' → logprob: -13.000205993652344
    9. 'x' → logprob: -13.250205993652344
    10. 'k' → logprob: -13.375205993652344

Token 309: '
' (ID: 198)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015584505163133144
    2. '       ' → logprob: -4.390584468841553
    3. ']
' → logprob: -5.890584468841553
    4. ' ]' → logprob: -8.515584945678711
    5. '   ' → logprob: -9.765584945678711
    6. ' and' → logprob: -10.640584945678711
    7. ']

' → logprob: -11.640584945678711
    8. ']
' → logprob: -12.640584945678711
    9. ' ]
' → logprob: -13.015584945678711
    10. '][:' → logprob: -13.515584945678711

Token 310: '       ' (ID: 309)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3471360206604004
    2. '       ' → logprob: -1.3471360206604004
    3. ']
' → logprob: -3.4721360206604004
    4. ' and' → logprob: -7.0971360206604
    5. ' ]' → logprob: -7.4721360206604
    6. '   ' → logprob: -7.7221360206604
    7. ' ]
' → logprob: -8.722135543823242
    8. ']

' → logprob: -8.972135543823242
    9. ']
' → logprob: -10.347135543823242
    10. ' or' → logprob: -10.597135543823242

Token 311: ' ]
' (ID: 10213)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' (adapté à ' ]
') → logprob: -0.4216841161251068
    2. ']' → logprob: -1.2966841459274292
    3. '       ' → logprob: -2.6716840267181396
    4. '   ' → logprob: -7.296684265136719
    5. ']
' → logprob: -7.921684265136719
    6. ' ]
' → logprob: -8.171684265136719
    7. ' ]' → logprob: -10.046684265136719
    8. ' and' → logprob: -10.171684265136719
    9. '][:' → logprob: -10.296684265136719
    10. ']

' → logprob: -10.546684265136719

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015897235134616494
    2. '<|end|>' → logprob: -7.626589775085449
    3. '
' → logprob: -7.876589775085449
    4. ')' → logprob: -8.00158977508545
    5. '[' → logprob: -9.12658977508545
    6. '   ' → logprob: -9.62658977508545
    7. ',' → logprob: -10.50158977508545
    8. '):
' → logprob: -10.75158977508545
    9. ':' → logprob: -10.87658977508545
    10. ' if' → logprob: -11.12658977508545

Token 313: ' a' (ID: 261)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3276097774505615
    2. '       ' → logprob: -1.4526097774505615
    3. 'if' → logprob: -4.077610015869141
    4. ' result' → logprob: -4.202610015869141
    5. ' prev' → logprob: -4.702610015869141
    6. 'prev' → logprob: -6.202610015869141
    7. 'result' → logprob: -6.827610015869141
    8. '   ' → logprob: -6.952610015869141
    9. ' answer' → logprob: -8.95261001586914
    10. ' ans' → logprob: -9.32761001586914

Token 314: ' =' (ID: 314)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.000239536224398762
    2. 'dd' → logprob: -9.500239372253418
    3. ' =' → logprob: -10.125239372253418
    4. 'pp' → logprob: -10.625239372253418
    5. 'n' → logprob: -11.125239372253418
    6. '       ' → logprob: -11.250239372253418
    7. 'w' → logprob: -11.250239372253418
    8. '   ' → logprob: -11.375239372253418
    9. '=' → logprob: -11.500239372253418
    10. 'swer' → logprob: -12.125239372253418

Token 315: ' next' (ID: 2613)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.2874075174331665
    2. 'c' → logprob: -1.4124075174331665
    3. ' max' → logprob: -6.037407398223877
    4. 'prev' → logprob: -6.912407398223877
    5. 'max' → logprob: -7.037407398223877
    6. ' prev' → logprob: -7.037407398223877
    7. ' c' → logprob: -7.162407398223877
    8. ' min' → logprob: -8.912407875061035
    9. 'min' → logprob: -9.912407875061035
    10. ' candidats' → logprob: -10.287407875061035

Token 316: '(iter' (ID: 61014)
  Prédit: '(iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(iter' → logprob: -0.06032770872116089
    2. '((' → logprob: -3.3103277683258057
    3. '(x' → logprob: -4.435327529907227
    4. '(c' → logprob: -4.685327529907227
    5. '(i' → logprob: -7.435327529907227
    6. '(re' → logprob: -8.685327529907227
    7. '(filter' → logprob: -9.435327529907227
    8. '(candidate' → logprob: -9.810327529907227
    9. '(k' → logprob: -10.685327529907227
    10. '(' → logprob: -10.935327529907227

Token 317: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -8.41866585687967e-06
    2. 'c' → logprob: -12.750008583068848
    3. ')c' → logprob: -12.750008583068848
    4. '(' → logprob: -14.125008583068848
    5. ')' → logprob: -14.625008583068848
    6. ')(' → logprob: -14.750008583068848
    7. '(candidate' → logprob: -15.250008583068848
    8. '(
' → logprob: -15.375008583068848
    9. '©' → logprob: -16.25000762939453
    10. ' (' → logprob: -16.75000762939453

Token 318: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.006765579804778099
    2. 'and' → logprob: -5.006765365600586
    3. 'andid' → logprob: -10.506765365600586
    4. 'ands' → logprob: -11.506765365600586
    5. 'andi' → logprob: -12.756765365600586
    6. 'andidate' → logprob: -13.131765365600586
    7. ')' → logprob: -13.256765365600586
    8. '{' → logprob: -13.506765365600586
    9. '   ' → logprob: -14.006765365600586
    10. ' and' → logprob: -14.131765365600586

Token 319: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.19504043459892273
    2. '))' → logprob: -2.070040464401245
    3. ',' → logprob: -3.070040464401245
    4. '))
' → logprob: -5.820040225982666
    5. ' ),' → logprob: -6.820040225982666
    6. ' ))' → logprob: -8.445040702819824
    7. ' ,' → logprob: -8.945040702819824
    8. '       ' → logprob: -9.570040702819824
    9. '   ' → logprob: -10.195040702819824
    10. ' ))
' → logprob: -10.570040702819824

Token 320: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015988850966095924
    2. '-' → logprob: -4.640988826751709
    3. 'N' → logprob: -6.015988826751709
    4. 'None' → logprob: -6.390988826751709
    5. 'K' → logprob: -6.765988826751709
    6. 'prev' → logprob: -7.890988826751709
    7. '1' → logprob: -8.515989303588867
    8. ' ' → logprob: -8.515989303588867
    9. '-K' → logprob: -9.890989303588867
    10. ' -' → logprob: -10.265989303588867

Token 321: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01500256173312664
    2. '-' → logprob: -4.640002727508545
    3. 'None' → logprob: -6.140002727508545
    4. 'N' → logprob: -6.390002727508545
    5. '1' → logprob: -7.515002727508545
    6. 'K' → logprob: -7.765002727508545
    7. ' ' → logprob: -8.765002250671387
    8. 'prev' → logprob: -8.890002250671387
    9. ' -' → logprob: -9.890002250671387
    10. '-K' → logprob: -10.765002250671387

Token 322: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.024941276758909225
    2. ')' → logprob: -4.399941444396973
    3. '       ' → logprob: -4.399941444396973
    4. ')
' → logprob: -9.649941444396973
    5. '   ' → logprob: -12.024941444396973
    6. ' )
' → logprob: -12.274941444396973
    7. ')

' → logprob: -14.274941444396973
    8. ')`
' → logprob: -15.274941444396973
    9. '           ' → logprob: -15.899941444396973
    10. ' )' → logprob: -16.024940490722656

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005848681554198265
    2. '
' → logprob: -5.2558488845825195
    3. '   ' → logprob: -7.8808488845825195
    4. 'result' → logprob: -9.88084888458252
    5. ' result' → logprob: -9.88084888458252
    6. 'prev' → logprob: -10.25584888458252
    7. '        
' → logprob: -10.50584888458252
    8. '<|end|>' → logprob: -10.75584888458252
    9. ' prev' → logprob: -11.88084888458252
    10. ')' → logprob: -12.13084888458252

Token 324: ' result' (ID: 1534)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07567939162254333
    2. 'prev' → logprob: -3.075679302215576
    3. ' prev' → logprob: -4.450679302215576
    4. 'result' (adapté à ' result') → logprob: -4.575679302215576
    5. ' result' → logprob: -5.450679302215576
    6. '   ' → logprob: -8.325679779052734
    7. 'if' → logprob: -9.200679779052734
    8. ' if' → logprob: -9.325679779052734
    9. '
' → logprob: -11.450679779052734
    10. '	prev' → logprob: -11.450679779052734

Token 325: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.862962229410186e-05
    2. '.' → logprob: -9.625078201293945
    3. '.extend' → logprob: -11.875078201293945
    4. ' .' → logprob: -12.625078201293945
    5. '.app' → logprob: -13.250078201293945
    6. '.ap' → logprob: -15.375078201293945
    7. '.Append' → logprob: -16.125078201293945
    8. '.push' → logprob: -16.500078201293945
    9. '​.' → logprob: -17.500078201293945
    10. 'append' → logprob: -18.125078201293945

Token 326: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00013464801304508
    2. '(' → logprob: -9.250134468078613
    3. 'a' → logprob: -10.250134468078613
    4. '(str' → logprob: -13.125134468078613
    5. '(
' → logprob: -14.375134468078613
    6. '(f' → logprob: -15.500134468078613
    7. '((' → logprob: -15.625134468078613
    8. '('' → logprob: -16.75013542175293
    9. ' (' → logprob: -17.00013542175293
    10. ' a' → logprob: -17.62513542175293

Token 327: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029934227466583252
    2. ')
' → logprob: -3.5299341678619385
    3. '       ' → logprob: -9.15493392944336
    4. '   ' → logprob: -9.52993392944336
    5. ')

' → logprob: -13.27993392944336
    6. ' )' → logprob: -13.52993392944336
    7. ')
' → logprob: -14.65493392944336
    8. ')`' → logprob: -14.90493392944336
    9. '
' → logprob: -15.27993392944336
    10. ')return' → logprob: -15.52993392944336

Token 328: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1470004916191101
    2. '
' → logprob: -2.022000551223755
    3. '    
' → logprob: -5.772000312805176
    4. 'prev' → logprob: -7.772000312805176
    5. '```' → logprob: -8.522000312805176
    6. 'print' → logprob: -9.022000312805176
    7. '       ' → logprob: -9.147000312805176
    8. '        
' → logprob: -9.522000312805176
    9. 'return' → logprob: -9.522000312805176
    10. '<|end|>' → logprob: -9.772000312805176

Token 329: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.14295923709869385
    2. '   ' → logprob: -2.2679591178894043
    3. ' prev' → logprob: -3.7679591178894043
    4. '       ' → logprob: -5.142959117889404
    5. '	prev' → logprob: -7.267959117889404
    6. '
' → logprob: -11.267959594726562
    7. ' ' → logprob: -11.517959594726562
    8. '  ' → logprob: -11.642959594726562
    9. 'previous' → logprob: -12.142959594726562
    10. '_prev' → logprob: -12.642959594726562

Token 330: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -1.981667537620524e-06
    2. 'ans' → logprob: -13.750001907348633
    3. '_answer' → logprob: -14.500001907348633
    4. '_answers' → logprob: -15.750001907348633
    5. '_an' → logprob: -16.000001907348633
    6. 'Ans' → logprob: -16.125001907348633
    7. '_ant' → logprob: -18.125001907348633
    8. ' _' → logprob: -18.250001907348633
    9. '_ann' → logprob: -18.250001907348633
    10. '_' → logprob: -18.250001907348633

Token 331: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.9040898880339228e-05
    2. '.' → logprob: -10.750028610229492
    3. ' .' → logprob: -12.250028610229492
    4. '[-' → logprob: -13.750028610229492
    5. '.app' → logprob: -13.875028610229492
    6. '.extend' → logprob: -14.750028610229492
    7. '.pop' → logprob: -16.000028610229492
    8. '.ap' → logprob: -16.125028610229492
    9. '​.' → logprob: -17.125028610229492
    10. ').' → logprob: -17.875028610229492

Token 332: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.04868025332689285
    2. 'a' → logprob: -3.048680305480957
    3. ' a' → logprob: -9.298680305480957
    4. '(' → logprob: -13.673680305480957
    5. ' (' → logprob: -16.54867935180664
    6. 'result' → logprob: -16.79867935180664
    7. '(result' → logprob: -16.79867935180664
    8. '(
' → logprob: -17.29867935180664
    9. '	a' → logprob: -17.67367935180664
    10. '   ' → logprob: -19.54867935180664

Token 333: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000432695698691532
    2. ')
' → logprob: -7.75043249130249
    3. '   ' → logprob: -13.625432968139648
    4. ')

' → logprob: -15.125432968139648
    5. ' )' → logprob: -16.00043296813965
    6. ')`' → logprob: -16.00043296813965
    7. '       ' → logprob: -16.25043296813965
    8. ')return' → logprob: -16.50043296813965
    9. '`)' → logprob: -17.00043296813965
    10. '))' → logprob: -17.12543296813965

Token 334: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21018722653388977
    2. '   ' → logprob: -1.7101871967315674
    3. '    
' → logprob: -5.4601874351501465
    4. '<|end|>' → logprob: -5.5851874351501465
    5. 'return' → logprob: -8.835186958312988
    6. ' 
' → logprob: -8.835186958312988
    7. '```' → logprob: -9.210186958312988
    8. '  
' → logprob: -9.460186958312988
    9. '\n' → logprob: -10.085186958312988
    10. ' return' → logprob: -10.210186958312988

Token 335: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010363764129579067
    2. '
' → logprob: -4.760363578796387
    3. '    
' → logprob: -6.760363578796387
    4. 'return' → logprob: -7.635363578796387
    5. ' return' → logprob: -10.010363578796387
    6. '<|end|>' → logprob: -10.260363578796387
    7. 'print' → logprob: -11.635363578796387
    8. '```' → logprob: -12.260363578796387
    9. '  
' → logprob: -12.760363578796387
    10. ' 
' → logprob: -12.760363578796387

Token 336: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6250886917114258
    2. 'print' (adapté à ' print') → logprob: -1.7500886917114258
    3. '   ' → logprob: -2.125088691711426
    4. 'return' → logprob: -2.250088691711426
    5. ' for' → logprob: -2.875088691711426
    6. ' return' → logprob: -5.250088691711426
    7. ' print' → logprob: -5.500088691711426
    8. '    
' → logprob: -8.250088691711426
    9. '
' → logprob: -9.125088691711426
    10. '```' → logprob: -10.250088691711426

Token 337: '('\' (ID: 24345)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.03843343257904053
    2. '('' → logprob: -3.53843355178833
    3. '(' → logprob: -5.03843355178833
    4. '("' → logprob: -6.16343355178833
    5. '()' → logprob: -10.288433074951172
    6. '(*(' → logprob: -11.538433074951172
    7. '(tuple' → logprob: -12.663433074951172
    8. '(result' → logprob: -12.663433074951172
    9. '('\' → logprob: -13.538433074951172
    10. '(*)' → logprob: -13.538433074951172

Token 338: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.320199877838604e-07
    2. ''' → logprob: -15.375
    3. 'join' → logprob: -16.625
    4. 's' → logprob: -17.0
    5. ' n' → logprob: -18.375
    6. ''.' → logprob: -18.625
    7. '''.' → logprob: -18.625
    8. 'x' → logprob: -18.75
    9. 'u' → logprob: -18.875
    10. 'b' → logprob: -19.0

Token 339: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.06512374430894852
    2. '.join' → logprob: -3.1901237964630127
    3. 'join' → logprob: -4.190123558044434
    4. '.' → logprob: -5.190123558044434
    5. '''.' → logprob: -7.815123558044434
    6. '".' → logprob: -8.190123558044434
    7. ')' → logprob: -8.440123558044434
    8. ''' → logprob: -8.690123558044434
    9. ').' → logprob: -10.315123558044434
    10. '')' → logprob: -10.940123558044434

Token 340: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.6240566083070007e-06
    2. 'j' → logprob: -14.250001907348633
    3. 'jo' → logprob: -14.500001907348633
    4. ' join' → logprob: -15.625001907348633
    5. '```' → logprob: -16.750001907348633
    6. 'print' → logprob: -17.250001907348633
    7. ')' → logprob: -17.625001907348633
    8. 'strip' → logprob: -17.875001907348633
    9. 'split' → logprob: -19.250001907348633
    10. '(join' → logprob: -19.500001907348633

Token 341: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0034937579184770584
    2. '(str' → logprob: -6.253493785858154
    3. '(result' → logprob: -6.503493785858154
    4. 'map' → logprob: -9.753493309020996
    5. '(' → logprob: -12.003493309020996
    6. 'result' → logprob: -14.253493309020996
    7. '([' → logprob: -14.878493309020996
    8. '(list' → logprob: -15.003493309020996
    9. ' map' → logprob: -16.503494262695312
    10. '(
' → logprob: -17.003494262695312

Token 342: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00091217877343297
    2. 'str' → logprob: -7.000912189483643
    3. '```' → logprob: -15.000911712646484
    4. '[str' → logprob: -16.125911712646484
    5. '(' → logprob: -16.250911712646484
    6. '=str' → logprob: -16.750911712646484
    7. '
' → logprob: -17.125911712646484
    8. ')' → logprob: -17.375911712646484
    9. '	str' → logprob: -17.500911712646484
    10. ',str' → logprob: -18.000911712646484

Token 343: ',' (ID: 11)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.04335540533065796
    2. ',result' → logprob: -3.1683554649353027
    3. ',' → logprob: -8.168354988098145
    4. 'result' → logprob: -10.543354988098145
    5. ' (' → logprob: -10.668354988098145
    6. '(' → logprob: -11.918354988098145
    7. '(results' → logprob: -12.418354988098145
    8. '=result' → logprob: -12.418354988098145
    9. ',(' → logprob: -12.543354988098145
    10. ' result' → logprob: -13.293354988098145

Token 344: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.001170225441455841
    2. ' result' → logprob: -6.7511701583862305
    3. '(result' → logprob: -17.751171112060547
    4. '	result' → logprob: -20.126171112060547
    5. '   ' → logprob: -20.626171112060547
    6. ',result' → logprob: -22.126171112060547
    7. '[result' → logprob: -22.501171112060547
    8. 'results' → logprob: -22.626171112060547
    9. '$result' → logprob: -23.001171112060547
    10. '=result' → logprob: -23.126171112060547

Token 345: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6931591629981995
    2. ')))' → logprob: -0.6931591629981995
    3. ')' → logprob: -11.818159103393555
    4. '))))' → logprob: -13.318159103393555
    5. '))
' → logprob: -14.318159103393555
    6. '}))' → logprob: -14.318159103393555
    7. ')))
' → logprob: -14.443159103393555
    8. ' ))' → logprob: -14.818159103393555
    9. '()))' → logprob: -15.068159103393555
    10. ']))' → logprob: -15.443159103393555

Token 346: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00040183294913731515
    2. 'main' → logprob: -9.250401496887207
    3. ' if' → logprob: -9.375401496887207
    4. '<|end|>' → logprob: -9.375401496887207
    5. '
' → logprob: -9.875401496887207
    6. '```' → logprob: -10.375401496887207
    7. '#' → logprob: -10.750401496887207
    8. ')' → logprob: -11.875401496887207
    9. '{' → logprob: -12.000401496887207
    10. '(main' → logprob: -12.500401496887207

Token 347: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02979273721575737
    2. '__' → logprob: -3.5297927856445312
    3. '_name' → logprob: -10.904792785644531
    4. '_' → logprob: -11.654792785644531
    5. ' ' → logprob: -12.154792785644531
    6. '___' → logprob: -12.654792785644531
    7. 'name' → logprob: -12.779792785644531
    8. ' _' → logprob: -13.654792785644531
    9. ' ' → logprob: -13.904792785644531
    10. ' ___' → logprob: -14.529792785644531

Token 348: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03860250487923622
    2. ' ==' → logprob: -4.038602352142334
    3. '==' → logprob: -4.413602352142334
    4. 'name' → logprob: -5.288602352142334
    5. ' __' → logprob: -6.288602352142334
    6. '=="' → logprob: -7.663602352142334
    7. '.__' → logprob: -8.288602828979492
    8. '__.__' → logprob: -8.288602828979492
    9. '=='' → logprob: -9.413602828979492
    10. '.name' → logprob: -9.788602828979492

Token 349: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.8624639324116288e-06
    2. '==' → logprob: -13.500001907348633
    3. '__.__' → logprob: -14.750001907348633
    4. '___' → logprob: -17.250001907348633
    5. 'name' → logprob: -17.625001907348633
    6. '____' → logprob: -17.875001907348633
    7. '__.' → logprob: -17.875001907348633
    8. '__('' → logprob: -17.875001907348633
    9. '=="' → logprob: -18.000001907348633
    10. '__
' → logprob: -18.625001907348633

Token 350: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04975824058055878
    2. '==' → logprob: -3.049758195877075
    3. ' ==' → logprob: -7.049758434295654
    4. '=="' → logprob: -8.174757957458496
    5. '__.__' → logprob: -12.174757957458496
    6. '___' → logprob: -12.424757957458496
    7. '===' → logprob: -12.424757957458496
    8. '_' → logprob: -12.924757957458496
    9. '=='' → logprob: -13.299757957458496
    10. '=' → logprob: -14.299757957458496

Token 351: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1269412338733673
    2. ''' → logprob: -2.126941204071045
    3. '__' → logprob: -11.376941680908203
    4. ' "__' → logprob: -13.626941680908203
    5. ' '__' → logprob: -16.251941680908203
    6. '"user' → logprob: -16.376941680908203
    7. '   ' → logprob: -16.876941680908203
    8. '"name' → logprob: -17.001941680908203
    9. ''post' → logprob: -17.001941680908203
    10. ''"' → logprob: -17.501941680908203

Token 352: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03497946634888649
    2. '__' → logprob: -3.6599795818328857
    3. 'name' → logprob: -4.784979343414307
    4. '"' → logprob: -8.284979820251465
    5. ''' → logprob: -11.409979820251465
    6. 'built' → logprob: -11.784979820251465
    7. '__":
' → logprob: -12.409979820251465
    8. '```' → logprob: -12.784979820251465
    9. '__':
' → logprob: -13.409979820251465
    10. '_main' → logprob: -13.659979820251465

Token 353: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.20357537269592285
    2. '__' → logprob: -1.7035753726959229
    3. '__':
' → logprob: -6.328575134277344
    4. '__.' → logprob: -8.328575134277344
    5. '__.__' → logprob: -9.203575134277344
    6. '__["' → logprob: -11.078575134277344
    7. '__
' → logprob: -12.578575134277344
    8. '.' → logprob: -13.078575134277344
    9. '__("' → logprob: -13.203575134277344
    10. '__",' → logprob: -13.328575134277344

Token 354: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.5954712075181305e-05
    2. ' main' → logprob: -10.250036239624023
    3. '	main' → logprob: -14.625036239624023
    4. '   ' → logprob: -16.875036239624023
    5. '_main' → logprob: -18.000036239624023
    6. '__' → logprob: -18.375036239624023
    7. '(main' → logprob: -20.750036239624023
    8. '.main' → logprob: -21.375036239624023
    9. ' ' → logprob: -21.875036239624023
    10. '```' → logprob: -22.375036239624023

Token 355: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.0
    3. '	main' → logprob: -21.75
    4. 'import' → logprob: -24.5
    5. '   ' → logprob: -25.375
    6. '(main' → logprob: -25.75
    7. '.main' → logprob: -26.5
    8. '_main' → logprob: -28.125
    9. '```' → logprob: -28.75
    10. 'Main' → logprob: -28.875

Token 356: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.603412389755249
    2. '<|end|>' → logprob: -0.853412389755249
    3. '
' → logprob: -4.853412628173828
    4. '```' → logprob: -4.978412628173828
    5. '#' → logprob: -5.478412628173828
    6. '<|end|>' → logprob: -5.853412628173828
    7. '(' → logprob: -5.853412628173828
    8. '}' → logprob: -7.478412628173828
    9. '()' → logprob: -7.728412628173828
    10. '{' → logprob: -8.478412628173828


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 354
Tokens correctement prédits (1ère position, stricte): 129
Tokens correctement prédits (1ère position, avec adaptation): 138
Tokens correctement prédits (top 10): 275
Précision stricte (1ère position): 36.44%
Précision adaptée (1ère position): 38.98%
Précision (top 10): 77.68%
================================================================================
