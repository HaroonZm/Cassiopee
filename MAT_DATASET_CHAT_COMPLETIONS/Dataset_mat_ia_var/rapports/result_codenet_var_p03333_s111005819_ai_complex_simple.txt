================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from functools import reduce, lru_cache, partial
import math
from itertools import chain, islice, groupby, starmap, tee, zip_longest, product as cartesian
from copy import deepcopy as dcp, copy as cp
from operator import attrgetter, itemgetter, mul, add
from bisect import bisect_left as bl, bisect as bs, bisect_right as br
from collections import deque as dq, defaultdict as dd, Counter as Ctr
from heapq import heapify, heappop as hp, heappush as hpush, nlargest, nsmallest
from decimal import Decimal

sys.setrecursionlimit(10**7)

def input():
    get = sys.stdin.readline
    return (lambda s: s[:-1] if s[-1:] == "\n" else s)(get())

def printe(*x): print("##", *x, file=sys.stderr)
def printl(li): [_ for _ in map(print, li)] if li else None
def argsort(s, return_sorted=False):
    idx = list(range(len(s)))
    idx = sorted(idx, key=lambda k: s[k])
    if return_sorted:
        return idx, list(map(s.__getitem__, idx))
    return idx
def alp2num(c, cap=False): return (lambda o: o - 97 if not cap else o - 65)(ord(c))
def num2alp(i, cap=False): return chr(i + (65 if cap else 97))
def matmat(A, B):
    return [[reduce(add, map(mul, a, b), 0) for b in zip(*B)] for a in A]
def matvec(M, v):
    return list(starmap(lambda a, b: sum(x*y for x, y in zip(a, b)), zip(M, [v]*len(M))))
def T(M):
    return [list(col) for col in zip(*M)]
def binr(x): return format(x, 'b')
def bitcount(x):
    # Overcomplicated bit count using reduction over binary string
    return reduce(lambda a, c: a + int(c), bin(x)[2:], 0)

def flatten(l): return list(chain.from_iterable(l))

def main():
    mod = int("1" + "0"*9) + 7
    N = int(input())
    S = tuple(tuple(map(int, input().split())) for _ in range(N))
    base = N
    enc_idx = lambda v, i: (v * base) + i
    # Fancy heap generation
    ls = reduce(lambda acc, p: (hpush(acc, -enc_idx(p[0], p[1])) or acc), enumerate(map(itemgetter(0), S)), [])
    rs = reduce(lambda acc, p: (hpush(acc, enc_idx(p[1], p[0])) or acc), enumerate(map(lambda t: (t[1], t[0]), enumerate(map(itemgetter(1), S)))), [])
    # Actually above is nonsense for value, use following
    ls = []
    for i, (l, r) in enumerate(S):
        hpush(ls, -l*base + i)
    rs = []
    for i, (l, r) in enumerate(S):
        hpush(rs, r*base + i)

    # Store original for the second pass using unnecessarily deep copy
    lsc, rsc = dcp(ls), dcp(rs)

    # Functionally convoluted state handling
    def complex_game(ls, rs):
        dset, cur, tot, f = set(), 0, 0, 0
        # Iterator wrappers
        ls_iter = lambda: (hp(ls) for _ in iter(int, 1) if ls)
        rs_iter = lambda: (hp(rs) for _ in iter(int, 1) if rs)
        while ls and rs:
            for lcod in ls_iter():
                l, i = divmod(lcod, base)
                l *= -1
                if i in dset:
                    dset.remove(i)
                elif cur < l:
                    tot += l - cur
                    dset.add(i)
                    cur = l
                    break
                else:
                    f = 1
                    break
            if f: break
            for rcod in rs_iter():
                r, i = divmod(rcod, base)
                if i in dset:
                    dset.remove(i)
                elif cur > r:
                    tot += cur - r
                    cur = r
                    dset.add(i)
                    break
                else:
                    f = 1
                    break
            if f: break
        tot += abs(cur)
        return tot

    tot1 = complex_game(dcp(lsc), dcp(rsc))

    def complex_game_reverse(ls, rs):
        dset, cur, tot, f = set(), 0, 0, 0
        ls_iter = lambda: (hp(ls) for _ in iter(int, 1) if ls)
        rs_iter = lambda: (hp(rs) for _ in iter(int, 1) if rs)
        while ls and rs:
            for rcod in rs_iter():
                r, i = divmod(rcod, base)
                if i in dset:
                    dset.remove(i)
                elif cur > r:
                    tot += cur - r
                    cur = r
                    dset.add(i)
                    break
                else:
                    f = 1
                    break
            if f: break
            for lcod in ls_iter():
                l, i = divmod(lcod, base)
                l *= -1
                if i in dset:
                    dset.remove(i)
                elif cur < l:
                    tot += l - cur
                    dset.add(i)
                    cur = l
                    break
                else:
                    f = 1
                    break
                if f: break
        tot += abs(cur)
        return tot

    tot2 = complex_game_reverse(dcp(lsc), dcp(rsc))
    print(max(tot1, tot2))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18539276719093323
    2. '\n' → logprob: -2.0603928565979004
    3. '<|end|>' → logprob: -4.1853928565979
    4. '\' → logprob: -4.5603928565979
    5. 'newline' → logprob: -5.3103928565979
    6. '```' → logprob: -6.0603928565979
    7. 'import' → logprob: -6.1853928565979
    8. '<|end|>' → logprob: -6.5603928565979
    9. '' → logprob: -6.9353928565979
    10. '
' → logprob: -7.1853928565979

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.006869417615234852
    2. 'os' → logprob: -5.756869316101074
    3. ' math' → logprob: -6.881869316101074
    4. ' collections' → logprob: -7.256869316101074
    5. ' pathlib' → logprob: -7.756869316101074
    6. ' typing' → logprob: -8.131869316101074
    7. ' ' → logprob: -8.256869316101074
    8. ' datetime' → logprob: -9.006869316101074
    9. 'collections' → logprob: -9.131869316101074
    10. ' Py' → logprob: -9.256869316101074

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2277756780385971
    2. 'import' → logprob: -1.6027756929397583
    3. '.' → logprob: -6.727775573730469
    4. ' ' → logprob: -7.352775573730469
    5. '_import' → logprob: -7.977775573730469
    6. '_' → logprob: -9.477775573730469
    7. '	import' → logprob: -10.102775573730469
    8. '.import' → logprob: -11.102775573730469
    9. ' .' → logprob: -11.477775573730469
    10. '```' → logprob: -11.602775573730469

Token 6: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.8747674226760864
    2. 'partial' → logprob: -1.4997674226760864
    3. ' wraps' → logprob: -1.4997674226760864
    4. ' partial' → logprob: -2.874767303466797
    5. 'l' → logprob: -3.374767303466797
    6. ' l' → logprob: -3.624767303466797
    7. 'reduce' → logprob: -4.124767303466797
    8. 'import' → logprob: -6.999767303466797
    9. ' reduce' → logprob: -6.999767303466797
    10. 'cache' → logprob: -7.874767303466797

Token 7: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0677001476287842
    2. ',' → logprob: -1.1927001476287842
    3. '(' → logprob: -1.4427001476287842
    4. ' ' → logprob: -2.692700147628784
    5. '\' → logprob: -4.567700386047363
    6. '.' → logprob: -4.692700386047363
    7. '\n' → logprob: -5.317700386047363
    8. '' → logprob: -5.817700386047363
    9. '```' → logprob: -6.067700386047363
    10. '(
' → logprob: -6.317700386047363

Token 8: ' l' (ID: 305)
  Prédit: ' partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partial' → logprob: -0.43998947739601135
    2. 'partial' → logprob: -1.064989447593689
    3. 'wrap' → logprob: -5.1899895668029785
    4. ' wraps' → logprob: -5.4399895668029785
    5. ' l' → logprob: -7.8149895668029785
    6. ' cmp' → logprob: -8.43998908996582
    7. ' ' → logprob: -8.81498908996582
    8. 'cmp' → logprob: -8.93998908996582
    9. 'l' → logprob: -9.56498908996582
    10. 'wr' → logprob: -9.81498908996582

Token 9: 'ru' (ID: 1942)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.8148807287216187
    2. 'ambda' → logprob: -0.8148807287216187
    3. 'amb' → logprob: -2.439880847930908
    4. 'a' → logprob: -4.439880847930908
    5. 'am' → logprob: -4.814880847930908
    6. 'is' → logprob: -6.189880847930908
    7. 'en' → logprob: -6.814880847930908
    8. 'st' → logprob: -7.064880847930908
    9. 'map' → logprob: -7.189880847930908
    10. 'ru' → logprob: -7.314880847930908

Token 10: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.00038872790173627436
    2. '_c' → logprob: -8.375389099121094
    3. 'cache' → logprob: -9.375389099121094
    4. '_' → logprob: -10.375389099121094
    5. '_cached' → logprob: -11.250389099121094
    6. 'c' → logprob: -11.625389099121094
    7. '_CACHE' → logprob: -11.875389099121094
    8. '_ca' → logprob: -12.000389099121094
    9. 'Cache' → logprob: -13.750389099121094
    10. '```' → logprob: -13.875389099121094

Token 11: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0977904796600342
    2. 'import' → logprob: -1.3477904796600342
    3. '
' → logprob: -2.472790479660034
    4. '```' → logprob: -2.722790479660034
    5. '<|end|>' → logprob: -2.722790479660034
    6. '' → logprob: -3.097790479660034
    7. '\' → logprob: -3.222790479660034
    8. '

' → logprob: -3.472790479660034
    9. '[' → logprob: -4.472790718078613
    10. ' 

' → logprob: -4.597790718078613

Token 12: ' partial' (ID: 13664)
  Prédit: ' partial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partial' → logprob: -0.3537786900997162
    2. ' wraps' → logprob: -1.4787787199020386
    3. 'partial' → logprob: -3.228778600692749
    4. 'wrap' → logprob: -3.728778600692749
    5. ' singled' → logprob: -6.728778839111328
    6. ' cache' → logprob: -6.853778839111328
    7. ' cmp' → logprob: -6.853778839111328
    8. ' cached' → logprob: -7.228778839111328
    9. ' ' → logprob: -7.353778839111328
    10. ' defaultdict' → logprob: -7.853778839111328

Token 13: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -1.3383092880249023
    2. '\n' → logprob: -1.5883092880249023
    3. 'import' → logprob: -1.7133092880249023
    4. ',' → logprob: -1.9633092880249023
    5. '
' → logprob: -2.2133092880249023
    6. '\' → logprob: -3.2133092880249023
    7. '' → logprob: -3.9633092880249023
    8. '```' → logprob: -4.463309288024902
    9. '


' → logprob: -5.463309288024902
    10. ' 

' → logprob: -5.588309288024902

Token 14: 'import' (ID: 561)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -1.2096335887908936
    2. 'import' → logprob: -1.2096335887908936
    3. ',' → logprob: -2.4596335887908936
    4. '\n' → logprob: -2.8346335887908936
    5. '' → logprob: -2.9596335887908936
    6. '\' → logprob: -3.3346335887908936
    7. '
' → logprob: -3.3346335887908936
    8. '```' → logprob: -3.5846335887908936
    9. 'def' → logprob: -3.9596335887908936
    10. ' 

' → logprob: -4.459633827209473

Token 15: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0006554892170242965
    2. ' math' → logprob: -7.750655651092529
    3. ' collections' → logprob: -9.500655174255371
    4. 'os' → logprob: -10.125655174255371
    5. ' re' → logprob: -10.250655174255371
    6. ' ' → logprob: -10.625655174255371
    7. ' itertools' → logprob: -10.625655174255371
    8. ' functools' → logprob: -11.125655174255371
    9. ' numpy' → logprob: -13.375655174255371
    10. ' operator' → logprob: -13.375655174255371

Token 16: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5814554691314697
    2. ',' → logprob: -1.8314554691314697
    3. '

' → logprob: -2.0814554691314697
    4. '\n' → logprob: -2.0814554691314697
    5. '<|end|>' → logprob: -2.0814554691314697
    6. '\' → logprob: -2.5814554691314697
    7. 'import' → logprob: -2.7064554691314697
    8. '(' → logprob: -3.5814554691314697
    9. '.' → logprob: -3.7064554691314697
    10. '#' → logprob: -4.331455230712891

Token 17: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -1.472550868988037
    2. '
' → logprob: -1.597550868988037
    3. ',' → logprob: -1.972550868988037
    4. 'import' → logprob: -2.472550868988037
    5. '<|end|>' → logprob: -2.722550868988037
    6. '\' → logprob: -3.097550868988037
    7. 'def' → logprob: -3.097550868988037
    8. '\n' → logprob: -3.222550868988037
    9. '' → logprob: -3.472550868988037
    10. '#' → logprob: -3.722550868988037

Token 18: ' itertools' (ID: 103178)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.10921092331409454
    2. ' itertools' → logprob: -3.234210968017578
    3. ' typing' → logprob: -3.359210968017578
    4. 'collections' → logprob: -4.359210968017578
    5. ' operator' → logprob: -4.734210968017578
    6. ' functools' → logprob: -5.734210968017578
    7. ' os' → logprob: -6.234210968017578
    8. ' random' → logprob: -7.484210968017578
    9. ' ' → logprob: -7.734210968017578
    10. ' fractions' → logprob: -7.859210968017578

Token 19: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.08294791728258133
    2. 'import' → logprob: -2.9579479694366455
    3. '.' → logprob: -3.7079479694366455
    4. ' .' → logprob: -5.957947731018066
    5. ' ' → logprob: -8.707947731018066
    6. '.import' → logprob: -8.707947731018066
    7. ' itertools' → logprob: -9.707947731018066
    8. '.im' → logprob: -9.957947731018066
    9. '	import' → logprob: -10.332947731018066
    10. '.groupby' → logprob: -11.082947731018066

Token 20: ' chain' (ID: 13464)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -1.3474935293197632
    2. ' chain' → logprob: -1.8474935293197632
    3. ' accumulate' → logprob: -2.3474936485290527
    4. ' permutations' → logprob: -2.5974936485290527
    5. ' cycle' → logprob: -2.7224936485290527
    6. 'acc' → logprob: -2.7224936485290527
    7. 'group' → logprob: -2.8474936485290527
    8. 'com' → logprob: -3.0974936485290527
    9. ' product' → logprob: -3.2224936485290527
    10. ' combinations' → logprob: -3.3474936485290527

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14237329363822937
    2. 'import' → logprob: -2.5173733234405518
    3. '<|end|>' → logprob: -3.8923733234405518
    4. '\n' → logprob: -4.642373085021973
    5. '
' → logprob: -5.017373085021973
    6. ',
' → logprob: -5.392373085021973
    7. '

' → logprob: -5.517373085021973
    8. ',

' → logprob: -6.642373085021973
    9. '```' → logprob: -6.642373085021973
    10. 'from' → logprob: -6.892373085021973

Token 22: ' is' (ID: 382)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.06959645450115204
    2. 'cycle' → logprob: -3.569596529006958
    3. 'count' → logprob: -5.069596290588379
    4. ' cycle' → logprob: -5.194596290588379
    5. ' is' → logprob: -5.569596290588379
    6. 'is' → logprob: -5.569596290588379
    7. 'compress' → logprob: -5.819596290588379
    8. ' combinations' → logprob: -5.944596290588379
    9. 'product' → logprob: -5.944596290588379
    10. ' permutations' → logprob: -6.194596290588379

Token 23: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -5.574251918005757e-05
    2. 'lic' → logprob: -10.375055313110352
    3. 'l' → logprob: -10.750055313110352
    4. '```' → logprob: -14.375055313110352
    5. 'licing' → logprob: -14.625055313110352
    6. 'lices' → logprob: -14.875055313110352
    7. '>' → logprob: -15.125055313110352
    8. 'li' → logprob: -15.250055313110352
    9. 'liced' → logprob: -15.500055313110352
    10. '	' → logprob: -16.12505531311035

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3031259775161743
    2. 'import' → logprob: -2.4281258583068848
    3. '
' → logprob: -2.6781258583068848
    4. '\n' → logprob: -3.5531258583068848
    5. '

' → logprob: -4.053125858306885
    6. ',
' → logprob: -4.428125858306885
    7. '<|end|>' → logprob: -4.678125858306885
    8. '' → logprob: -4.928125858306885
    9. '#' → logprob: -4.928125858306885
    10. '\' → logprob: -5.303125858306885

Token 25: ' group' (ID: 3566)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.397493600845337
    2. 'com' → logprob: -1.647493600845337
    3. 'cycle' → logprob: -2.272493600845337
    4. 'tee' → logprob: -2.397493600845337
    5. 'zip' → logprob: -2.397493600845337
    6. 'group' → logprob: -2.772493600845337
    7. 'acc' → logprob: -3.022493600845337
    8. 'take' → logprob: -3.272493600845337
    9. 'compress' → logprob: -4.272493362426758
    10. ' accumulate' → logprob: -4.272493362426758

Token 26: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -3.650518920039758e-06
    2. 'y' → logprob: -12.625003814697266
    3. 'py' → logprob: -15.500003814697266
    4. 'b' → logprob: -16.500003814697266
    5. 's' → logprob: -18.750003814697266
    6. 'by's' → logprob: -18.750003814697266
    7. 'byt' → logprob: -19.625003814697266
    8. ' by' → logprob: -20.000003814697266
    9. 'it' → logprob: -20.125003814697266
    10. 'byg' → logprob: -20.750003814697266

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.835880696773529
    2. '
' → logprob: -1.4608807563781738
    3. 'import' → logprob: -1.9608807563781738
    4. '

' → logprob: -2.960880756378174
    5. '\n' → logprob: -2.960880756378174
    6. '<|end|>' → logprob: -3.085880756378174
    7. '' → logprob: -4.710880756378174
    8. ',
' → logprob: -5.085880756378174
    9. ' ' → logprob: -5.460880756378174
    10. ' 

' → logprob: -5.585880756378174

Token 28: ' st' (ID: 420)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1423099040985107
    2. 'acc' → logprob: -1.7673099040985107
    3. 'zip' → logprob: -2.2673099040985107
    4. 'count' → logprob: -2.3923099040985107
    5. ' accumulate' → logprob: -2.3923099040985107
    6. 'tee' → logprob: -2.6423099040985107
    7. ' zip' → logprob: -3.7673099040985107
    8. ' tee' → logprob: -3.7673099040985107
    9. 'filter' → logprob: -4.01731014251709
    10. 'product' → logprob: -4.26731014251709

Token 29: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.18438725173473358
    2. 'ar' → logprob: -1.80938720703125
    3. 'r' → logprob: -6.55938720703125
    4. 'art' → logprob: -6.93438720703125
    5. 'arl' → logprob: -8.30938720703125
    6. 'a' → logprob: -8.30938720703125
    7. 'ertools' → logprob: -8.30938720703125
    8. 'ep' → logprob: -8.55938720703125
    9. 'arp' → logprob: -8.68438720703125
    10. 'op' → logprob: -8.68438720703125

Token 30: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -3.619311974034645e-05
    2. 'ep' → logprob: -11.250036239624023
    3. ' ap' → logprob: -12.125036239624023
    4. 'e' → logprob: -12.500036239624023
    5. '	ap' → logprob: -12.500036239624023
    6. '_ap' → logprob: -13.500036239624023
    7. '```' → logprob: -13.625036239624023
    8. 'a' → logprob: -13.875036239624023
    9. 'aj' → logprob: -14.000036239624023
    10. 'up' → logprob: -14.000036239624023

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08762920647859573
    2. '
' → logprob: -3.5876293182373047
    3. ',
' → logprob: -3.8376293182373047
    4. 'import' → logprob: -4.212629318237305
    5. '\n' → logprob: -5.337629318237305
    6. '' → logprob: -5.712629318237305
    7. '<|end|>' → logprob: -5.712629318237305
    8. '

' → logprob: -6.337629318237305
    9. 'from' → logprob: -6.837629318237305
    10. '\' → logprob: -6.837629318237305

Token 32: ' tee' (ID: 44157)
  Prédit: 'tee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tee' → logprob: -0.9162566661834717
    2. 'acc' → logprob: -1.6662566661834717
    3. ' accumulate' → logprob: -1.9162566661834717
    4. ' tee' → logprob: -2.4162566661834717
    5. 'com' → logprob: -3.1662566661834717
    6. 'zip' → logprob: -3.7912566661834717
    7. 'product' → logprob: -3.9162566661834717
    8. 'filter' → logprob: -4.041256904602051
    9. 'count' → logprob: -4.041256904602051
    10. ' product' → logprob: -4.291256904602051

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13072118163108826
    2. '
' → logprob: -3.005721092224121
    3. 'import' → logprob: -3.755721092224121
    4. ',
' → logprob: -4.005721092224121
    5. '<|end|>' → logprob: -4.005721092224121
    6. '\n' → logprob: -5.880721092224121
    7. '

' → logprob: -6.130721092224121
    8. '' → logprob: -6.505721092224121
    9. ' ' → logprob: -6.880721092224121
    10. '\' → logprob: -7.005721092224121

Token 34: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.8477169871330261
    2. 'com' → logprob: -1.972717046737671
    3. 'count' → logprob: -1.972717046737671
    4. ' zip' → logprob: -2.597717046737671
    5. 'filter' → logprob: -2.847717046737671
    6. 'acc' → logprob: -3.097717046737671
    7. 'product' → logprob: -3.597717046737671
    8. ' accumulate' → logprob: -3.722717046737671
    9. ' product' → logprob: -4.097716808319092
    10. 'cycle' → logprob: -4.347716808319092

Token 35: '_long' (ID: 42288)
  Prédit: '_long'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_long' → logprob: -0.044364649802446365
    2. 'long' → logprob: -3.2943646907806396
    3. 'import' → logprob: -5.1693644523620605
    4. 'Longest' → logprob: -8.544364929199219
    5. 'with' → logprob: -9.044364929199219
    6. '-long' → logprob: -9.544364929199219
    7. '_LONG' → logprob: -9.794364929199219
    8. ' longest' → logprob: -10.044364929199219
    9. ' long' → logprob: -10.919364929199219
    10. '_with' → logprob: -11.044364929199219

Token 36: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -2.5776860184123507e-06
    2. 'uest' → logprob: -14.00000286102295
    3. 'estin' → logprob: -14.62500286102295
    4. 'ex' → logprob: -14.75000286102295
    5. 'esture' → logprob: -15.87500286102295
    6. 'st' → logprob: -16.125001907348633
    7. 'ist' → logprob: -16.250001907348633
    8. 'ext' → logprob: -16.500001907348633
    9. 'esting' → logprob: -16.500001907348633
    10. 'es' → logprob: -16.625001907348633

Token 37: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6928600072860718
    2. ',' → logprob: -0.8178600072860718
    3. '

' → logprob: -3.8178601264953613
    4. ',
' → logprob: -4.317860126495361
    5. '<|end|>' → logprob: -4.692860126495361
    6. 'import' → logprob: -4.942860126495361
    7. '
' → logprob: -6.942860126495361
    8. '' → logprob: -6.942860126495361
    9. '


' → logprob: -7.192860126495361
    10. '\n' → logprob: -7.192860126495361

Token 38: ' product' (ID: 1888)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.0289697647094727
    2. 'count' → logprob: -1.2789697647094727
    3. 'filter' → logprob: -1.6539697647094727
    4. 'product' → logprob: -2.2789697647094727
    5. ' product' → logprob: -4.153969764709473
    6. 'acc' → logprob: -4.278969764709473
    7. 'compress' → logprob: -4.403969764709473
    8. 'cycle' → logprob: -5.153969764709473
    9. ' accumulate' → logprob: -5.153969764709473
    10. ' count' → logprob: -5.778969764709473

Token 39: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.569311797618866
    2. '
' → logprob: -1.3193118572235107
    3. '<|end|>' → logprob: -2.4443118572235107
    4. '

' → logprob: -2.9443118572235107
    5. 'import' → logprob: -4.944311618804932
    6. ',
' → logprob: -5.069311618804932
    7. ' ' → logprob: -6.194311618804932
    8. '' → logprob: -6.319311618804932
    9. '<|end|>' → logprob: -6.444311618804932
    10. '\n' → logprob: -6.444311618804932

Token 40: ' cart' (ID: 8149)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.7395292520523071
    2. ' itertools' → logprob: -1.1145292520523071
    3. 'product' → logprob: -1.9895292520523071
    4. 'prod' → logprob: -3.6145291328430176
    5. ' ' → logprob: -4.114529132843018
    6. ' prod' → logprob: -5.614529132843018
    7. 'it' → logprob: -5.864529132843018
    8. '	product' → logprob: -6.864529132843018
    9. ' p' → logprob: -6.989529132843018
    10. ' cart' → logprob: -7.239529132843018

Token 41: 'esian' (ID: 56320)
  Prédit: 'esian'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esian' → logprob: -0.4515030086040497
    2. 'es' → logprob: -1.076503038406372
    3. 'esi' → logprob: -4.451502799987793
    4. 'esion' → logprob: -4.701502799987793
    5. 'product' → logprob: -7.201502799987793
    6. 'esy' → logprob: -7.951502799987793
    7. 'esia' → logprob: -8.201502799987793
    8. 'essian' → logprob: -8.576502799987793
    9. '_product' → logprob: -8.951502799987793
    10. 'esine' → logprob: -11.076502799987793

Token 42: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4410914182662964
    2. '_product' → logprob: -1.0660914182662964
    3. '_products' → logprob: -5.566091537475586
    4. '_prod' → logprob: -6.316091537475586
    5. 'product' → logprob: -6.441091537475586
    6. '\' → logprob: -6.441091537475586
    7. '_space' → logprob: -7.316091537475586
    8. ',' → logprob: -7.816091537475586
    9. ')' → logprob: -8.566091537475586
    10. '_map' → logprob: -8.691091537475586

Token 43: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.685614287853241
    2. '

' → logprob: -1.0606143474578857
    3. '
' → logprob: -2.6856143474578857
    4. '<|end|>' → logprob: -3.6856143474578857
    5. 'import' → logprob: -4.060614109039307
    6. '\n' → logprob: -5.060614109039307
    7. '' → logprob: -5.310614109039307
    8. ',

' → logprob: -5.685614109039307
    9. 'def' → logprob: -5.810614109039307
    10. ',
' → logprob: -5.935614109039307

Token 44: ' copy' (ID: 5150)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.9161164164543152
    2. ' operator' → logprob: -1.29111647605896
    3. ' collections' → logprob: -1.41611647605896
    4. 'operator' → logprob: -2.66611647605896
    5. ' ' → logprob: -5.541116237640381
    6. ' functools' → logprob: -5.666116237640381
    7. ' more' → logprob: -7.041116237640381
    8. 'random' → logprob: -7.291116237640381
    9. 'os' → logprob: -7.791116237640381
    10. ' random' → logprob: -7.916116237640381

Token 45: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.3886536657810211
    2. 'import' → logprob: -1.1386536359786987
    3. ' ' → logprob: -6.888653755187988
    4. '	import' → logprob: -7.388653755187988
    5. '<|end|>' → logprob: -10.013653755187988
    6. '_import' → logprob: -10.638653755187988
    7. '.deepcopy' → logprob: -10.888653755187988
    8. ' imports' → logprob: -11.513653755187988
    9. ' im' → logprob: -11.638653755187988
    10. ' importar' → logprob: -11.888653755187988

Token 46: ' deepcopy' (ID: 130230)
  Prédit: ' deepcopy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -0.0036544795148074627
    2. ' copy' → logprob: -6.128654479980469
    3. '.deepcopy' → logprob: -7.253654479980469
    4. 'copy' → logprob: -7.503654479980469
    5. 'deep' → logprob: -8.503654479980469
    6. ' deep' → logprob: -12.878654479980469
    7. ' import' → logprob: -13.003654479980469
    8. ' dee' → logprob: -13.878654479980469
    9. 'import' → logprob: -14.378654479980469
    10. 'dee' → logprob: -15.753654479980469

Token 47: ' as' (ID: 472)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6151641011238098
    2. '
' → logprob: -1.490164041519165
    3. 'import' → logprob: -2.490164041519165
    4. ',' → logprob: -2.865164041519165
    5. '<|end|>' → logprob: -3.115164041519165
    6. ' 

' → logprob: -4.115164279937744
    7. '\n' → logprob: -4.865164279937744
    8. '' → logprob: -5.615164279937744
    9. ' ' → logprob: -5.740164279937744
    10. '#' → logprob: -5.990164279937744

Token 48: ' d' (ID: 272)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.4923483431339264
    2. ' copy' → logprob: -1.492348313331604
    3. 'deep' → logprob: -3.4923484325408936
    4. ' cp' → logprob: -3.6173484325408936
    5. ' deepcopy' → logprob: -3.7423484325408936
    6. ' dc' → logprob: -3.7423484325408936
    7. 'cpy' → logprob: -4.1173481941223145
    8. 'dc' → logprob: -4.7423481941223145
    9. ' dp' → logprob: -4.8673481941223145
    10. 'cp' → logprob: -4.9923481941223145

Token 49: 'cp' (ID: 10450)
  Prédit: 'eep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eep' → logprob: -0.018666885793209076
    2. 'ee' → logprob: -4.518666744232178
    3. 'e' → logprob: -4.893666744232178
    4. 'copy' → logprob: -10.143667221069336
    5. '```' → logprob: -11.393667221069336
    6. 'ep' → logprob: -11.518667221069336
    7. 'eeper' → logprob: -11.768667221069336
    8. '
' → logprob: -12.143667221069336
    9. 'eee' → logprob: -12.518667221069336
    10. 'ec' → logprob: -12.643667221069336

Token 50: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4754369556903839
    2. '

' → logprob: -1.6004369258880615
    3. ',' → logprob: -3.2254369258880615
    4. '<|end|>' → logprob: -3.2254369258880615
    5. 'import' → logprob: -3.6004369258880615
    6. '' → logprob: -4.225437164306641
    7. '\n' → logprob: -4.350437164306641
    8. ' 

' → logprob: -4.975437164306641
    9. '#' → logprob: -5.350437164306641
    10. ' ' → logprob: -5.600437164306641

Token 51: ' copy' (ID: 5150)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.034939058125019073
    2. ' copy' → logprob: -3.4099390506744385
    3. '_copy' → logprob: -7.784939289093018
    4. 'named' → logprob: -8.40993881225586
    5. ' deepcopy' → logprob: -9.03493881225586
    6. 'deque' → logprob: -9.65993881225586
    7. 'p' → logprob: -9.78493881225586
    8. 'partial' → logprob: -9.90993881225586
    9. '_' → logprob: -10.03493881225586
    10. 'deep' → logprob: -10.15993881225586

Token 52: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.594849169254303
    2. 'as' → logprob: -1.5948491096496582
    3. ',' → logprob: -2.219849109649658
    4. ' ' → logprob: -3.344849109649658
    5. '(' → logprob: -3.469849109649658
    6. 'from' → logprob: -3.594849109649658
    7. '<|end|>' → logprob: -3.844849109649658
    8. 'import' → logprob: -4.969849109649658
    9. ' (' → logprob: -5.469849109649658
    10. '.deepcopy' → logprob: -6.219849109649658

Token 53: ' cp' (ID: 27776)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.630994439125061
    2. 'cpy' → logprob: -1.380994439125061
    3. ' copy' → logprob: -1.880994439125061
    4. ' cp' → logprob: -3.7559943199157715
    5. 'cp' → logprob: -3.7559943199157715
    6. ' deepcopy' → logprob: -4.3809943199157715
    7. 'cop' → logprob: -6.6309943199157715
    8. 'c' → logprob: -7.0059943199157715
    9. ' cop' → logprob: -7.3809943199157715
    10. 'deep' → logprob: -7.8809943199157715

Token 54: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6503134369850159
    2. '
' → logprob: -1.150313377380371
    3. '<|end|>' → logprob: -3.025313377380371
    4. 'import' → logprob: -3.150313377380371
    5. '

' → logprob: -3.650313377380371
    6. ',
' → logprob: -4.775313377380371
    7. '\n' → logprob: -4.900313377380371
    8. ' ' → logprob: -5.150313377380371
    9. 'from' → logprob: -5.400313377380371
    10. '' → logprob: -5.650313377380371

Token 55: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4929831326007843
    2. '
' → logprob: -1.242983102798462
    3. ',' → logprob: -2.867983102798462
    4. 'import' → logprob: -4.367983341217041
    5. '\n' → logprob: -5.242983341217041
    6. '


' → logprob: -5.367983341217041
    7. '#' → logprob: -5.367983341217041
    8. '' → logprob: -5.617983341217041
    9. '<|end|>' → logprob: -5.617983341217041
    10. 'def' → logprob: -6.742983341217041

Token 56: ' operator' (ID: 11019)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.996253252029419
    2. ' collections' → logprob: -1.121253252029419
    3. ' operator' → logprob: -1.996253252029419
    4. 'operator' → logprob: -2.746253252029419
    5. 'os' → logprob: -3.621253252029419
    6. 'random' → logprob: -4.24625301361084
    7. ' os' → logprob: -4.62125301361084
    8. ' typing' → logprob: -4.62125301361084
    9. ' random' → logprob: -4.74625301361084
    10. '_operator' → logprob: -5.49625301361084

Token 57: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.010389248840510845
    2. 'import' → logprob: -4.63538932800293
    3. '<|end|>' → logprob: -8.01038932800293
    4. ' ' → logprob: -8.88538932800293
    5. '	import' → logprob: -9.88538932800293
    6. '.' → logprob: -10.38538932800293
    7. ' as' → logprob: -10.63538932800293
    8. ',' → logprob: -10.76038932800293
    9. '<|end|>' → logprob: -11.01038932800293
    10. ' ,' → logprob: -12.13538932800293

Token 58: ' attr' (ID: 12642)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.20119890570640564
    2. ' ' → logprob: -2.0761988162994385
    3. ' attr' → logprob: -4.201199054718018
    4. ' mul' → logprob: -4.576199054718018
    5. 'item' → logprob: -4.826199054718018
    6. ' method' → logprob: -4.826199054718018
    7. ' import' → logprob: -5.201199054718018
    8. ' add' → logprob: -5.451199054718018
    9. ' is' → logprob: -6.701199054718018
    10. 'getitem' → logprob: -6.951199054718018

Token 59: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.00020377879263833165
    2. 'get' → logprob: -9.375204086303711
    3. 'item' → logprob: -9.500204086303711
    4. 'getitem' → logprob: -10.250204086303711
    5. 'setter' → logprob: -13.875204086303711
    6. 'gett' → logprob: -14.000204086303711
    7. 'method' → logprob: -14.000204086303711
    8. 'operator' → logprob: -14.250204086303711
    9. ',' → logprob: -14.375204086303711
    10. 'got' → logprob: -14.375204086303711

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006485146004706621
    2. '<|end|>' → logprob: -5.3814849853515625
    3. ' ,' → logprob: -6.6314849853515625
    4. 'import' → logprob: -8.506484985351562
    5. ',
' → logprob: -8.756484985351562
    6. ' ' → logprob: -9.381484985351562
    7. ' as' → logprob: -10.506484985351562
    8. '<|end|>' → logprob: -10.631484985351562
    9. ',

' → logprob: -12.131484985351562
    10. ' import' → logprob: -12.381484985351562

Token 61: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.5860497951507568
    2. 'item' → logprob: -1.0860497951507568
    3. ' method' → logprob: -2.711049795150757
    4. 'method' → logprob: -3.336049795150757
    5. 'getitem' → logprob: -6.461050033569336
    6. ' ' → logprob: -7.336050033569336
    7. ' mul' → logprob: -7.836050033569336
    8. '	item' → logprob: -8.461050033569336
    9. '.item' → logprob: -9.461050033569336
    10. '=item' → logprob: -9.461050033569336

Token 62: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0001137947037932463
    2. 'get' → logprob: -9.125113487243652
    3. 'getitem' → logprob: -13.000113487243652
    4. 'gett' → logprob: -13.375113487243652
    5. 'g' → logprob: -14.500113487243652
    6. 'Getter' → logprob: -16.00011444091797
    7. '```' → logprob: -16.62511444091797
    8. 'gte' → logprob: -17.12511444091797
    9. 'setter' → logprob: -17.50011444091797
    10. 'ge' → logprob: -17.87511444091797

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1623167097568512
    2. '<|end|>' → logprob: -2.1623167991638184
    3. '
' → logprob: -4.162316799163818
    4. ',
' → logprob: -4.412316799163818
    5. 'import' → logprob: -6.162316799163818
    6. ' ' → logprob: -6.412316799163818
    7. '\n' → logprob: -6.787316799163818
    8. '

' → logprob: -8.16231632232666
    9. '<|end|>' → logprob: -8.16231632232666
    10. ' ,' → logprob: -8.53731632232666

Token 64: ' mul' (ID: 9975)
  Prédit: 'method'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.19404271245002747
    2. ' method' → logprob: -2.069042682647705
    3. ' mul' → logprob: -3.569042682647705
    4. 'mul' → logprob: -4.319042682647705
    5. ' ' → logprob: -6.444042682647705
    6. 'add' → logprob: -6.694042682647705
    7. 'operator' → logprob: -7.069042682647705
    8. 'xor' → logprob: -7.319042682647705
    9. 'eq' → logprob: -7.694042682647705
    10. 'gt' → logprob: -7.819042682647705

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11375207453966141
    2. 't' → logprob: -2.7387521266937256
    3. 'tip' → logprob: -3.3637521266937256
    4. 'ti' → logprob: -6.1137518882751465
    5. '<|end|>' → logprob: -6.4887518882751465
    6. 'ip' → logprob: -6.4887518882751465
    7. 'plier' → logprob: -6.8637518882751465
    8. 'p' → logprob: -8.113752365112305
    9. ' ,' → logprob: -8.988752365112305
    10. ' ' → logprob: -9.113752365112305

Token 66: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.2948276102542877
    2. 'add' → logprob: -1.7948275804519653
    3. ' tr' → logprob: -2.669827699661255
    4. 'tr' → logprob: -5.169827461242676
    5. ' flo' → logprob: -6.419827461242676
    6. 'flo' → logprob: -6.419827461242676
    7. ' mul' → logprob: -6.669827461242676
    8. ' method' → logprob: -6.669827461242676
    9. ' ' → logprob: -6.919827461242676
    10. 'pow' → logprob: -7.044827461242676

Token 67: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0487964041531086
    2. ',
' → logprob: -4.1737961769104
    3. '<|end|>' → logprob: -4.1737961769104
    4. '
' → logprob: -4.5487961769104
    5. 'import' → logprob: -6.7987961769104
    6. '\n' → logprob: -6.9237961769104
    7. ' ' → logprob: -6.9237961769104
    8. '' → logprob: -7.4237961769104
    9. '  
' → logprob: -8.298796653747559
    10. 'from' → logprob: -8.298796653747559

Token 68: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4357345998287201
    2. '

' → logprob: -1.9357346296310425
    3. 'import' → logprob: -2.310734510421753
    4. '
' → logprob: -2.935734510421753
    5. 'def' → logprob: -4.685734748840332
    6. '#' → logprob: -4.810734748840332
    7. '<|end|>' → logprob: -4.935734748840332
    8. ',

' → logprob: -5.060734748840332
    9. ',
' → logprob: -5.185734748840332
    10. '' → logprob: -5.560734748840332

Token 69: ' bis' (ID: 7204)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.9068771004676819
    2. ' collections' → logprob: -1.031877040863037
    3. 'os' → logprob: -2.781877040863037
    4. ' os' → logprob: -3.281877040863037
    5. ' random' → logprob: -3.531877040863037
    6. 'random' → logprob: -3.656877040863037
    7. 'operator' → logprob: -3.906877040863037
    8. '_' → logprob: -4.281877040863037
    9. ' functools' → logprob: -4.281877040863037
    10. ' operator' → logprob: -4.406877040863037

Token 70: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.676981345459353e-06
    2. 'e' → logprob: -12.250005722045898
    3. 'ec' → logprob: -14.625005722045898
    4. 'ected' → logprob: -16.1250057220459
    5. 'ectl' → logprob: -16.5000057220459
    6. 'ection' → logprob: -17.2500057220459
    7. 'ector' → logprob: -17.5000057220459
    8. 'ecta' → logprob: -17.5000057220459
    9. '```' → logprob: -17.7500057220459
    10. '>' → logprob: -18.0000057220459

Token 71: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03112783096730709
    2. 'import' → logprob: -3.5311279296875
    3. ' ' → logprob: -7.6561279296875
    4. '_import' → logprob: -8.1561279296875
    5. '<|end|>' → logprob: -8.1561279296875
    6. '	import' → logprob: -8.5311279296875
    7. '_' → logprob: -9.1561279296875
    8. 'ort' → logprob: -12.7811279296875
    9. ' importar' → logprob: -12.7811279296875
    10. 'm' → logprob: -13.2186279296875

Token 72: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.0850486159324646
    2. ' ins' → logprob: -2.5850486755371094
    3. 'bis' → logprob: -5.335048675537109
    4. 'ins' → logprob: -6.835048675537109
    5. '_ins' → logprob: -8.46004867553711
    6. '.ins' → logprob: -10.96004867553711
    7. '_left' → logprob: -12.58504867553711
    8. ' ' → logprob: -12.96004867553711
    9. '_right' → logprob: -13.21004867553711
    10. '```' → logprob: -13.58504867553711

Token 73: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.36574100604048e-06
    2. 'e' → logprob: -12.750004768371582
    3. 'ec' → logprob: -13.625004768371582
    4. 'ectl' → logprob: -15.875004768371582
    5. 'ected' → logprob: -17.000003814697266
    6. '```' → logprob: -17.250003814697266
    7. 'ects' → logprob: -17.500003814697266
    8. 'ecta' → logprob: -18.250003814697266
    9. 'sect' → logprob: -18.500003814697266
    10. 'ectin' → logprob: -18.875003814697266

Token 74: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.08376128226518631
    2. '_right' → logprob: -2.583761215209961
    3. '<|end|>' → logprob: -5.958761215209961
    4. '_' → logprob: -7.333761215209961
    5. 'left' → logprob: -7.458761215209961
    6. 'right' → logprob: -7.583761215209961
    7. ',' → logprob: -8.583761215209961
    8. 'ins' → logprob: -10.333761215209961
    9. 'import' → logprob: -10.458761215209961
    10. '_LEFT' → logprob: -10.583761215209961

Token 75: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004676711279898882
    2. 'import' → logprob: -6.504676818847656
    3. '<|end|>' → logprob: -6.629676818847656
    4. ',
' → logprob: -7.129676818847656
    5. '
' → logprob: -8.254676818847656
    6. ',b' → logprob: -8.379676818847656
    7. ' ,' → logprob: -8.629676818847656
    8. 'from' → logprob: -9.629676818847656
    9. '<|end|>' → logprob: -9.754676818847656
    10. ' ' → logprob: -9.754676818847656

Token 76: ' bl' (ID: 1162)
  Prédit: ' bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.2647969722747803
    2. 'bis' → logprob: -1.6397969722747803
    3. 'bl' → logprob: -3.7647969722747803
    4. ' bl' → logprob: -5.514797210693359
    5. '_bl' → logprob: -5.889797210693359
    6. '_b' → logprob: -6.014797210693359
    7. 'b' → logprob: -6.264797210693359
    8. '_' → logprob: -6.514797210693359
    9. ' b' → logprob: -7.639797210693359
    10. '	b' → logprob: -7.764797210693359

Token 77: ',' (ID: 11)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.1703709214925766
    2. ',' → logprob: -2.4203708171844482
    3. 'ist' → logprob: -2.9203708171844482
    4. '<|end|>' → logprob: -5.170371055603027
    5. 'ect' → logprob: -5.795371055603027
    6. 'e' → logprob: -7.045371055603027
    7. 't' → logprob: -8.170371055603027
    8. 'ic' → logprob: -8.420371055603027
    9. 'l' → logprob: -8.420371055603027
    10. 's' → logprob: -8.670371055603027

Token 78: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.32813239097595215
    2. ' bis' → logprob: -1.3281323909759521
    3. 'ins' → logprob: -4.703132629394531
    4. 'bl' → logprob: -6.203132629394531
    5. 'b' → logprob: -6.328132629394531
    6. ' ins' → logprob: -6.703132629394531
    7. ' bl' → logprob: -8.078132629394531
    8. 'import' → logprob: -10.640632629394531
    9. ' ' → logprob: -10.765632629394531
    10. '```' → logprob: -10.828132629394531

Token 79: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0015478298300877213
    2. 'sect' → logprob: -6.501547813415527
    3. 'e' → logprob: -10.626547813415527
    4. 'ec' → logprob: -12.251547813415527
    5. 'ct' → logprob: -12.376547813415527
    6. 'ected' → logprob: -12.751547813415527
    7. 'ects' → logprob: -13.376547813415527
    8. '```' → logprob: -13.501547813415527
    9. 'c' → logprob: -13.626547813415527
    10. 's' → logprob: -13.626547813415527

Token 80: ' as' (ID: 472)
  Prédit: '_right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.00878356397151947
    2. '_' → logprob: -4.758783340454102
    3. '_r' → logprob: -9.508783340454102
    4. '<|end|>' → logprob: -9.883783340454102
    5. '__' → logprob: -11.633783340454102
    6. 'right' → logprob: -11.883783340454102
    7. '_left' → logprob: -12.008783340454102
    8. 'ight' → logprob: -12.383783340454102
    9. '_RIGHT' → logprob: -12.383783340454102
    10. ' _' → logprob: -12.508783340454102

Token 81: ' bs' (ID: 35414)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1626390516757965
    2. ' b' → logprob: -2.2876391410827637
    3. ' bis' → logprob: -4.037639141082764
    4. '	b' → logprob: -4.787639141082764
    5. 'bis' → logprob: -4.787639141082764
    6. ' ' → logprob: -5.287639141082764
    7. '_right' → logprob: -6.162639141082764
    8. 'bs' → logprob: -6.287639141082764
    9. 'r' → logprob: -6.412639141082764
    10. ' bs' → logprob: -6.787639141082764

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6609461903572083
    2. '<|end|>' → logprob: -0.9109461903572083
    3. '
' → logprob: -3.4109461307525635
    4. ')' → logprob: -4.535946369171143
    5. 'import' → logprob: -4.660946369171143
    6. '\n' → logprob: -4.910946369171143
    7. '.' → logprob: -5.910946369171143
    8. ',
' → logprob: -5.910946369171143
    9. ' ' → logprob: -5.910946369171143
    10. '<|end|>' → logprob: -6.160946369171143

Token 83: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.5940788388252258
    2. 'ins' → logprob: -1.469078779220581
    3. ' bis' → logprob: -2.219078779220581
    4. ' ins' → logprob: -2.219078779220581
    5. 'b' → logprob: -8.84407901763916
    6. 'in' → logprob: -9.71907901763916
    7. '_ins' → logprob: -9.84407901763916
    8. 'r' → logprob: -10.46907901763916
    9. 'bl' → logprob: -10.71907901763916
    10. 'he' → logprob: -10.71907901763916

Token 84: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0005152635276317596
    2. 'e' → logprob: -7.625515460968018
    3. 'ec' → logprob: -10.62551498413086
    4. '_' → logprob: -14.50051498413086
    5. 'ected' → logprob: -14.62551498413086
    6. 'sect' → logprob: -15.00051498413086
    7. '```' → logprob: -15.25051498413086
    8. 'ectl' → logprob: -15.37551498413086
    9. 'ext' → logprob: -15.50051498413086
    10. 'ects' → logprob: -15.75051498413086

Token 85: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.32024943828582764
    2. '_left' → logprob: -1.8202494382858276
    3. '_' → logprob: -2.195249557495117
    4. '_

' → logprob: -9.445249557495117
    5. '<|end|>' → logprob: -9.570249557495117
    6. '_RIGHT' → logprob: -9.820249557495117
    7. '_Right' → logprob: -9.820249557495117
    8. '_split' → logprob: -10.195249557495117
    9. '_down' → logprob: -10.445249557495117
    10. '_write' → logprob: -10.445249557495117

Token 86: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.18271218240261078
    2. '<|end|>' → logprob: -2.4327120780944824
    3. 'as' → logprob: -2.5577120780944824
    4. ' ' → logprob: -7.557712078094482
    5. '_' → logprob: -7.557712078094482
    6. '_as' → logprob: -8.30771255493164
    7. '<|end|>' → logprob: -8.68271255493164
    8. '	as' → logprob: -9.43271255493164
    9. ',' → logprob: -10.30771255493164
    10. '(as' → logprob: -10.30771255493164

Token 87: ' br' (ID: 1294)
  Prédit: 'br'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'br' → logprob: -0.38769879937171936
    2. ' br' → logprob: -1.137698769569397
    3. '	br' → logprob: -7.137698650360107
    4. '(br' → logprob: -11.387699127197266
    5. '_br' → logprob: -12.262699127197266
    6. ';br' → logprob: -12.512699127197266
    7. 'b' → logprob: -12.637699127197266
    8. ' ' → logprob: -12.762699127197266
    9. '<br' → logprob: -13.887699127197266
    10. ' bhr' → logprob: -14.012699127197266

Token 88: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: ' collections' (ID: 22690)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.41441115736961365
    2. ' collections' → logprob: -1.289411187171936
    3. ' os' → logprob: -3.2894110679626465
    4. ' random' → logprob: -4.2894110679626465
    5. 'collections' → logprob: -5.7894110679626465
    6. ' threading' → logprob: -6.1644110679626465
    7. 'heap' → logprob: -6.4144110679626465
    8. ' typing' → logprob: -6.5394110679626465
    9. ' ' → logprob: -7.0394110679626465
    10. ' functools' → logprob: -7.6644110679626465

Token 91: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3684031367301941
    2. 'abc' → logprob: -1.3684031963348389
    3. '<|end|>' → logprob: -3.243403196334839
    4. 'from' → logprob: -4.99340295791626
    5. ' import' → logprob: -5.36840295791626
    6. '```' → logprob: -7.49340295791626
    7. '0' → logprob: -8.493403434753418
    8. 'a' → logprob: -8.618403434753418
    9. '.' → logprob: -8.743403434753418
    10. 'collections' → logprob: -8.993403434753418

Token 92: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.0016002024058252573
    2. ' abc' → logprob: -6.62660026550293
    3. ' Counter' → logprob: -9.75160026550293
    4. ' deque' → logprob: -9.75160026550293
    5. 'deque' → logprob: -9.75160026550293
    6. 'default' → logprob: -10.25160026550293
    7. ' ' → logprob: -11.12660026550293
    8. ' named' → logprob: -11.25160026550293
    9. 'abc' → logprob: -11.37660026550293
    10. '_' → logprob: -11.50160026550293

Token 93: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06339132785797119
    2. '<|end|>' → logprob: -3.0633912086486816
    3. ' ,' → logprob: -4.813391208648682
    4. ' ' → logprob: -5.688391208648682
    5. 'import' → logprob: -6.688391208648682
    6. ',
' → logprob: -6.813391208648682
    7. ' as' → logprob: -8.43839168548584
    8. '<|end|>' → logprob: -8.81339168548584
    9. '\n' → logprob: -9.68839168548584
    10. '.' → logprob: -9.93839168548584

Token 94: ' dq' (ID: 164235)
  Prédit: ' dq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dq' → logprob: -0.22902990877628326
    2. ' d' → logprob: -1.979029893875122
    3. ' de' → logprob: -3.104029893875122
    4. 'dq' → logprob: -4.354030132293701
    5. 'd' → logprob: -5.479030132293701
    6. ' dc' → logprob: -5.979030132293701
    7. 'deque' → logprob: -7.229030132293701
    8. ' deque' → logprob: -7.854030132293701
    9. 'de' → logprob: -7.979030132293701
    10. ' q' → logprob: -8.604029655456543

Token 95: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.3368082046508789
    2. ' defaultdict' → logprob: -1.961808204650879
    3. 'Counter' → logprob: -2.336808204650879
    4. 'named' → logprob: -3.211808204650879
    5. 'Ordered' → logprob: -5.586808204650879
    6. ' Counter' → logprob: -6.086808204650879
    7. ' named' → logprob: -6.211808204650879
    8. 'Chain' → logprob: -9.836808204650879
    9. 'Named' → logprob: -9.961808204650879
    10. ' Ordered' → logprob: -10.211808204650879

Token 97: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.020955583080649376
    2. '<|end|>' → logprob: -4.145955562591553
    3. ',' → logprob: -6.145955562591553
    4. 'as' → logprob: -6.520955562591553
    5. 'import' → logprob: -6.895955562591553
    6. '(' → logprob: -9.395956039428711
    7. ' ' → logprob: -9.520956039428711
    8. ' (' → logprob: -10.770956039428711
    9. ' import' → logprob: -10.770956039428711
    10. ' defaultdict' → logprob: -10.770956039428711

Token 98: ' dd' (ID: 18636)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.03722050040960312
    2. ' d' → logprob: -4.037220478057861
    3. ' dd' → logprob: -5.162220478057861
    4. ' ' → logprob: -5.162220478057861
    5. ' def' → logprob: -5.412220478057861
    6. 'default' → logprob: -6.787220478057861
    7. ' default' → logprob: -7.037220478057861
    8. ' ' → logprob: -8.41222095489502
    9. 'd' → logprob: -8.41222095489502
    10. ' df' → logprob: -9.16222095489502

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.050558120012283325
    2. '<|end|>' → logprob: -3.050558090209961
    3. 'import' → logprob: -7.925558090209961
    4. 'from' → logprob: -8.175558090209961
    5. ' ' → logprob: -8.550558090209961
    6. '
' → logprob: -8.675558090209961
    7. ',
' → logprob: -8.675558090209961
    8. ' ,' → logprob: -9.300558090209961
    9. '```' → logprob: -9.550558090209961
    10. '  ' → logprob: -9.550558090209961

Token 100: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.7270510792732239
    2. 'named' → logprob: -0.9770510792732239
    3. 'Ordered' → logprob: -2.727051019668579
    4. ' named' → logprob: -2.977051019668579
    5. ' Counter' → logprob: -3.852051019668579
    6. ' Ordered' → logprob: -6.352051258087158
    7. ' defaultdict' → logprob: -7.727051258087158
    8. 'Named' → logprob: -8.10205078125
    9. 'default' → logprob: -9.47705078125
    10. 'User' → logprob: -10.22705078125

Token 101: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.256198525428772
    2. '<|end|>' → logprob: -1.506198525428772
    3. 'as' → logprob: -5.756198406219482
    4. ' ' → logprob: -8.00619888305664
    5. '<|end|>' → logprob: -8.38119888305664
    6. '(' → logprob: -8.63119888305664
    7. 'import' → logprob: -8.88119888305664
    8. ',' → logprob: -9.25619888305664
    9. ')' → logprob: -9.88119888305664
    10. ' (' → logprob: -10.50619888305664

Token 102: ' C' (ID: 363)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.7082793116569519
    2. ' Counter' → logprob: -0.9582793116569519
    3. ' c' → logprob: -3.2082793712615967
    4. 'C' → logprob: -3.4582793712615967
    5. ' C' → logprob: -3.4582793712615967
    6. ' counter' → logprob: -4.958279132843018
    7. ' ' → logprob: -5.458279132843018
    8. 'c' → logprob: -6.083279132843018
    9. '.Counter' → logprob: -6.833279132843018
    10. ' ctr' → logprob: -6.958279132843018

Token 103: 'tr' (ID: 371)
  Prédit: 'ounter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ounter' → logprob: -0.6106105446815491
    2. ',' → logprob: -1.1106104850769043
    3. 'from' → logprob: -3.6106104850769043
    4. '<|end|>' → logprob: -3.7356104850769043
    5. ')' → logprob: -4.360610485076904
    6. 'ount' → logprob: -4.860610485076904
    7. ' ' → logprob: -4.985610485076904
    8. 'ont' → logprob: -4.985610485076904
    9. 'ounters' → logprob: -5.610610485076904
    10. ']' → logprob: -5.610610485076904

Token 104: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4726690351963043
    2. '<|end|>' → logprob: -1.847669005393982
    3. '

' → logprob: -2.7226691246032715
    4. ',' → logprob: -2.7226691246032715
    5. '#' → logprob: -3.3476691246032715
    6. '\n' → logprob: -4.0976691246032715
    7. ',
' → logprob: -5.0976691246032715
    8. '' → logprob: -5.2226691246032715
    9. 'def' → logprob: -5.7226691246032715
    10. 'import' → logprob: -6.3476691246032715

Token 106: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.814278781414032
    2. ' os' → logprob: -1.8142788410186768
    3. ' typing' → logprob: -2.4392788410186768
    4. 'os' → logprob: -2.4392788410186768
    5. 'heap' → logprob: -2.6892788410186768
    6. ' collections' → logprob: -3.4392788410186768
    7. 'collections' → logprob: -3.6892788410186768
    8. 'typing' → logprob: -4.314278602600098
    9. ' random' → logprob: -4.564278602600098
    10. ' pathlib' → logprob: -4.564278602600098

Token 107: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. 'queue' → logprob: -15.625
    3. 'import' → logprob: -16.75
    4. '<|end|>' → logprob: -17.125
    5. 's' → logprob: -18.875
    6. 'dict' → logprob: -19.25
    7. ' queue' → logprob: -19.5
    8. 'ify' → logprob: -20.375
    9. 't' → logprob: -20.375
    10. '_' → logprob: -20.375

Token 108: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.033403266221284866
    2. 'import' → logprob: -3.533403158187866
    3. ' ' → logprob: -5.908403396606445
    4. '<|end|>' → logprob: -7.033403396606445
    5. '	import' → logprob: -10.658403396606445
    6. ' as' → logprob: -12.158403396606445
    7. '_import' → logprob: -12.283403396606445
    8. ' ' → logprob: -12.658403396606445
    9. ' imports' → logprob: -13.033403396606445
    10. 'space' → logprob: -13.158403396606445

Token 109: ' heap' (ID: 37237)
  Prédit: ' he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.09684127569198608
    2. 'he' → logprob: -2.971841335296631
    3. 'heap' → logprob: -3.596841335296631
    4. ' heap' → logprob: -4.471841335296631
    5. ' ' → logprob: -6.346841335296631
    6. '<|end|>' → logprob: -8.346840858459473
    7. ' n' → logprob: -9.971840858459473
    8. '.heap' → logprob: -10.096840858459473
    9. 'import' → logprob: -10.471840858459473
    10. '```' → logprob: -10.721840858459473

Token 110: 'ify' (ID: 1985)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.07549314945936203
    2. 'ify' → logprob: -2.825493097305298
    3. 'push' → logprob: -4.825493335723877
    4. 'replace' → logprob: -5.325493335723877
    5. 'ush' → logprob: -8.075492858886719
    6. '_push' → logprob: -10.075492858886719
    7. 'queue' → logprob: -10.450492858886719
    8. 'p' → logprob: -10.700492858886719
    9. 'lify' → logprob: -10.700492858886719
    10. 'u' → logprob: -10.950492858886719

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0451209619641304
    2. '<|end|>' → logprob: -4.045121192932129
    3. ' ,' → logprob: -4.295121192932129
    4. ' ' → logprob: -4.420121192932129
    5. ' as' → logprob: -7.545121192932129
    6. 'import' → logprob: -8.045121192932129
    7. ',
' → logprob: -11.295121192932129
    8. ' import' → logprob: -11.295121192932129
    9. '(' → logprob: -11.545121192932129
    10. '<|end|>' → logprob: -11.795121192932129

Token 112: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.252066969871521
    2. ' he' → logprob: -1.502066969871521
    3. 'heap' → logprob: -9.252066612243652
    4. '.he' → logprob: -11.002066612243652
    5. '```' → logprob: -11.627066612243652
    6. ' ' → logprob: -11.877066612243652
    7. ' heap' → logprob: -12.502066612243652
    8. '_he' → logprob: -12.877066612243652
    9. 'nl' → logprob: -14.127066612243652
    10. '  ' → logprob: -15.127066612243652

Token 113: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.005963526200503111
    2. 'ap' → logprob: -5.130963325500488
    3. 'a' → logprob: -10.380963325500488
    4. 'ап' → logprob: -14.255963325500488
    5. ' app' → logprob: -14.505963325500488
    6. '```' → logprob: -14.505963325500488
    7. '	app' → logprob: -15.005963325500488
    8. 'pp' → logprob: -15.255963325500488
    9. 'appen' → logprob: -15.380963325500488
    10. 'q' → logprob: -15.380963325500488

Token 114: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.005936263594776392
    2. 'op' → logprob: -5.130936145782471
    3. 'us' → logprob: -12.380936622619629
    4. '```' → logprob: -14.505936622619629
    5. '   ' → logprob: -14.630936622619629
    6. 'push' → logprob: -14.880936622619629
    7. '

' → logprob: -15.255936622619629
    8. 'u' → logprob: -15.255936622619629
    9. '
' → logprob: -15.755936622619629
    10. '[' → logprob: -15.755936622619629

Token 115: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046165118692442775
    2. '<|end|>' → logprob: -8.37546157836914
    3. ' ,' → logprob: -8.87546157836914
    4. ' as' → logprob: -10.62546157836914
    5. ',
' → logprob: -10.75046157836914
    6. ' ' → logprob: -11.00046157836914
    7. 'import' → logprob: -11.62546157836914
    8. 'as' → logprob: -12.37546157836914
    9. '<|end|>' → logprob: -12.37546157836914
    10. 's' → logprob: -12.62546157836914

Token 116: ' hp' (ID: 37774)
  Prédit: ' hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hp' → logprob: -0.2588872015476227
    2. 'hp' → logprob: -1.8838871717453003
    3. ' h' → logprob: -3.38388729095459
    4. ' he' → logprob: -3.38388729095459
    5. 'h' → logprob: -5.50888729095459
    6. 'hpp' → logprob: -6.13388729095459
    7. 'he' → logprob: -6.63388729095459
    8. '	h' → logprob: -8.00888729095459
    9. 'hq' → logprob: -8.88388729095459
    10. '_hp' → logprob: -9.38388729095459

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6770264506340027
    2. 'p' → logprob: -0.8020264506340027
    3. 'ush' → logprob: -3.4270265102386475
    4. 'op' → logprob: -4.677026271820068
    5. ',p' → logprob: -7.677026271820068
    6. 'h' → logprob: -8.177026748657227
    7. 'push' → logprob: -8.427026748657227
    8. ' ,' → logprob: -8.677026748657227
    9. ' ' → logprob: -8.927026748657227
    10. '<|end|>' → logprob: -9.302026748657227

Token 118: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.3869885802268982
    2. ' he' → logprob: -1.136988639831543
    3. 'heap' → logprob: -9.511988639831543
    4. '.he' → logprob: -11.386988639831543
    5. ' heap' → logprob: -11.761988639831543
    6. ' ' → logprob: -11.886988639831543
    7. '```' → logprob: -12.386988639831543
    8. 'hp' → logprob: -13.074488639831543
    9. 'h' → logprob: -13.074488639831543
    10. 'hep' → logprob: -13.949488639831543

Token 119: 'app' (ID: 903)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.11294902116060257
    2. 'app' → logprob: -2.2379491329193115
    3. 'ап' → logprob: -9.61294937133789
    4. '```' → logprob: -10.61294937133789
    5. 'a' → logprob: -11.11294937133789
    6. 'aps' → logprob: -12.11294937133789
    7. 'p' → logprob: -12.48794937133789
    8. 'apk' → logprob: -13.36294937133789
    9. 'q' → logprob: -13.48794937133789
    10. 'qp' → logprob: -14.48794937133789

Token 120: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.009927613660693169
    2. 'op' → logprob: -4.634927749633789
    3. 'us' → logprob: -9.134927749633789
    4. 'p' → logprob: -11.259927749633789
    5. 'push' → logprob: -11.384927749633789
    6. 'u' → logprob: -11.634927749633789
    7. '```' → logprob: -11.884927749633789
    8. 'o' → logprob: -12.509927749633789
    9. '   ' → logprob: -13.009927749633789
    10. '

' → logprob: -13.134927749633789

Token 121: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.08317798376083374
    2. '<|end|>' → logprob: -3.2081780433654785
    3. 'as' → logprob: -3.7081780433654785
    4. ' ' → logprob: -4.7081780433654785
    5. ',' → logprob: -5.2081780433654785
    6. '<|end|>' → logprob: -9.20817756652832
    7. ' ,' → logprob: -9.33317756652832
    8. '  ' → logprob: -10.08317756652832
    9. '(as' → logprob: -10.08317756652832
    10. '	as' → logprob: -10.20817756652832

Token 122: ' h' (ID: 312)
  Prédit: ' hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hp' → logprob: -0.4180327355861664
    2. 'hp' → logprob: -1.1680327653884888
    3. 'h' → logprob: -4.668032646179199
    4. ' h' → logprob: -4.793032646179199
    5. 'hpp' → logprob: -5.043032646179199
    6. ' he' → logprob: -5.793032646179199
    7. 'he' → logprob: -6.668032646179199
    8. 'ph' → logprob: -7.043032646179199
    9. ' ' → logprob: -7.668032646179199
    10. '	h' → logprob: -8.0430326461792

Token 123: 'push' (ID: 18873)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005158334970474243
    2. 'push' → logprob: -6.005158424377441
    3. 'e' → logprob: -6.380158424377441
    4. 'op' → logprob: -7.380158424377441
    5. 'ush' → logprob: -8.755158424377441
    6. 'pp' → logprob: -9.880158424377441
    7. '<|end|>' → logprob: -10.505158424377441
    8. 'q' → logprob: -11.005158424377441
    9. ' ' → logprob: -11.130158424377441
    10. 'ap' → logprob: -11.130158424377441

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29455798864364624
    2. '
' → logprob: -2.669558048248291
    3. ',
' → logprob: -2.794558048248291
    4. 'def' → logprob: -3.169558048248291
    5. '<|end|>' → logprob: -3.169558048248291
    6. '#' → logprob: -4.794558048248291
    7. 'import' → logprob: -5.169558048248291
    8. '  
' → logprob: -5.544558048248291
    9. '(
' → logprob: -5.919558048248291
    10. ')' → logprob: -6.294558048248291

Token 125: ' n' (ID: 297)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.17010347545146942
    2. 'heap' → logprob: -2.0451035499572754
    3. ' he' → logprob: -3.7951035499572754
    4. ' heap' → logprob: -5.420103549957275
    5. 'nl' → logprob: -10.170103073120117
    6. ' n' → logprob: -10.170103073120117
    7. 'h' → logprob: -10.295103073120117
    8. 'n' → logprob: -11.420103073120117
    9. 'merge' → logprob: -11.545103073120117
    10. '```' → logprob: -12.170103073120117

Token 126: 'largest' (ID: 191832)
  Prédit: 'largest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.3486722707748413
    2. 'small' → logprob: -1.2236722707748413
    3. 'large' → logprob: -9.348671913146973
    4. 'l' → logprob: -9.473671913146973
    5. 'Largest' → logprob: -10.848671913146973
    6. 'ext' → logprob: -11.223671913146973
    7. 'e' → logprob: -12.098671913146973
    8. '_small' → logprob: -12.223671913146973
    9. 'larg' → logprob: -12.473671913146973
    10. 'sm' → logprob: -13.098671913146973

Token 127: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07084094732999802
    2. '<|end|>' → logprob: -2.945840835571289
    3. ',' → logprob: -4.445840835571289
    4. '(
' → logprob: -6.695840835571289
    5. '<|end|>' → logprob: -7.195840835571289
    6. 'import' → logprob: -7.195840835571289
    7. ' as' → logprob: -7.695840835571289
    8. ' (' → logprob: -7.695840835571289
    9. ')' → logprob: -8.945840835571289
    10. 'as' → logprob: -9.945840835571289

Token 128: ' n' (ID: 297)
  Prédit: 'nl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nl' → logprob: -0.8917440176010132
    2. 'n' → logprob: -1.0167440176010132
    3. 'he' → logprob: -2.2667441368103027
    4. 'heap' → logprob: -2.6417441368103027
    5. ' n' → logprob: -3.0167441368103027
    6. ' he' → logprob: -5.891744136810303
    7. 'merge' → logprob: -7.766744136810303
    8. 'h' → logprob: -7.891744136810303
    9. ' heap' → logprob: -8.141743659973145
    10. '	n' → logprob: -8.766743659973145

Token 129: 'small' (ID: 18158)
  Prédit: 'small'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.002825323725119233
    2. 'largest' → logprob: -6.0028252601623535
    3. 'ext' → logprob: -8.627825736999512
    4. 'sm' → logprob: -9.627825736999512
    5. '_small' → logprob: -10.877825736999512
    6. 'e' → logprob: -10.877825736999512
    7. 'mall' → logprob: -11.002825736999512
    8. 'import' → logprob: -11.877825736999512
    9. 'he' → logprob: -12.002825736999512
    10. 'l' → logprob: -12.252825736999512

Token 130: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.0011075903894379735
    2. 'ist' → logprob: -7.376107692718506
    3. 'lest' → logprob: -8.501107215881348
    4. 'test' → logprob: -10.001107215881348
    5. ' est' → logprob: -10.126107215881348
    6. 'iest' → logprob: -10.251107215881348
    7. 'st' → logprob: -10.376107215881348
    8. 'e' → logprob: -10.626107215881348
    9. 'east' → logprob: -10.626107215881348
    10. 'ests' → logprob: -11.001107215881348

Token 131: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07498542964458466
    2. ',
' → logprob: -3.8249855041503906
    3. 'import' → logprob: -4.324985504150391
    4. ' as' → logprob: -4.449985504150391
    5. '
' → logprob: -4.574985504150391
    6. 'from' → logprob: -5.574985504150391
    7. '<|end|>' → logprob: -6.074985504150391
    8. 'as' → logprob: -6.324985504150391
    9. ')' → logprob: -6.449985504150391
    10. 'def' → logprob: -7.199985504150391

Token 132: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9149497151374817
    2. '

' → logprob: -1.539949655532837
    3. ',' → logprob: -1.664949655532837
    4. 'import' → logprob: -2.539949655532837
    5. '<|end|>' → logprob: -3.664949655532837
    6. ',
' → logprob: -3.789949655532837
    7. 'def' → logprob: -4.289949893951416
    8. 'from' → logprob: -4.289949893951416
    9. '#' → logprob: -5.164949893951416
    10. ' 

' → logprob: -5.289949893951416

Token 133: ' decimal' (ID: 26964)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.35297027230262756
    2. 'os' → logprob: -1.9779702425003052
    3. 'statistics' → logprob: -3.6029703617095947
    4. 'collections' → logprob: -3.8529703617095947
    5. 'operator' → logprob: -4.102970123291016
    6. 'thread' → logprob: -4.352970123291016
    7. 'heap' → logprob: -4.477970123291016
    8. 're' → logprob: -4.602970123291016
    9. ' random' → logprob: -4.602970123291016
    10. 'math' → logprob: -5.102970123291016

Token 134: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.019018420949578285
    2. 'import' → logprob: -4.394018650054932
    3. '<|end|>' → logprob: -5.394018650054932
    4. ' ' → logprob: -6.269018650054932
    5. '	import' → logprob: -10.519018173217773
    6. '<|end|>' → logprob: -11.894018173217773
    7. ' ' → logprob: -12.019018173217773
    8. '_import' → logprob: -12.519018173217773
    9. '.' → logprob: -13.269018173217773
    10. '```' → logprob: -13.644018173217773

Token 135: ' Decimal' (ID: 56874)
  Prédit: 'Decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Decimal' → logprob: -0.2555507719516754
    2. ' Decimal' → logprob: -1.505550742149353
    3. '.Decimal' → logprob: -5.630550861358643
    4. 'Context' → logprob: -11.630550384521484
    5. '_decimal' → logprob: -11.880550384521484
    6. 'decimal' → logprob: -12.380550384521484
    7. 'Decimals' → logprob: -13.005550384521484
    8. ' decimal' → logprob: -13.255550384521484
    9. ' ' → logprob: -13.880550384521484
    10. ' get' → logprob: -14.130550384521484

Token 136: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2985258102416992
    2. '<|end|>' → logprob: -1.6735258102416992
    3. ' ' → logprob: -3.423525810241699
    4. '(' → logprob: -4.423525810241699
    5. 'import' → logprob: -4.673525810241699
    6. ' as' → logprob: -5.048525810241699
    7. '<|end|>' → logprob: -5.673525810241699
    8. ' ,' → logprob: -5.923525810241699
    9. ' (' → logprob: -6.923525810241699
    10. ')' → logprob: -7.548525810241699

Token 137: 'sys' (ID: 17324)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3046203553676605
    2. '
' → logprob: -2.8046202659606934
    3. 'd' → logprob: -3.3046202659606934
    4. 'def' → logprob: -3.4296202659606934
    5. ' 
' → logprob: -3.5546202659606934
    6. '\' → logprob: -4.179620265960693
    7. '_' → logprob: -4.554620265960693
    8. 'a' → logprob: -4.804620265960693
    9. '\n' → logprob: -4.804620265960693
    10. 'x' → logprob: -4.929620265960693

Token 138: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -6.229872087715194e-05
    2. '.exit' → logprob: -10.625061988830566
    3. '.argv' → logprob: -12.125061988830566
    4. '.stdout' → logprob: -12.500061988830566
    5. ' .' → logprob: -12.750061988830566
    6. '.stderr' → logprob: -12.750061988830566
    7. '.readline' → logprob: -12.875061988830566
    8. '.stdin' → logprob: -13.000061988830566
    9. '.setdefault' → logprob: -13.000061988830566
    10. '.import' → logprob: -13.125061988830566

Token 139: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.20655658841133118
    2. '_rec' → logprob: -1.8315565586090088
    3. '_execution' → logprob: -4.706556797027588
    4. '_limit' → logprob: -5.456556797027588
    5. '_exc' → logprob: -5.706556797027588
    6. '_' → logprob: -6.081556797027588
    7. '_trace' → logprob: -6.956556797027588
    8. '_int' → logprob: -7.456556797027588
    9. '_sys' → logprob: -7.581556797027588
    10. '_ex' → logprob: -7.831556797027588

Token 140: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0009718484943732619
    2. 'ursive' → logprob: -7.250971794128418
    3. 'limit' → logprob: -8.875971794128418
    4. 'urs' → logprob: -9.250971794128418
    5. 'ur' → logprob: -12.000971794128418
    6. 'usion' → logprob: -12.125971794128418
    7. '_limit' → logprob: -12.500971794128418
    8. 'urf' → logprob: -13.000971794128418
    9. 'ursively' → logprob: -13.750971794128418
    10. 'ursor' → logprob: -14.000971794128418

Token 141: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0007123126997612417
    2. '_limit' → logprob: -7.2507123947143555
    3. 'lim' → logprob: -13.500712394714355
    4. 'depth' → logprob: -14.500712394714355
    5. ' limit' → logprob: -15.125712394714355
    6. '.limit' → logprob: -15.875712394714355
    7. '_depth' → logprob: -16.37571144104004
    8. 'Limit' → logprob: -17.87571144104004
    9. '_' → logprob: -18.12571144104004
    10. '-limit' → logprob: -18.12571144104004

Token 142: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.380904672667384e-05
    2. '(
' → logprob: -10.375033378601074
    3. '(

' → logprob: -13.500033378601074
    4. '((' → logprob: -14.250033378601074
    5. ' (' → logprob: -16.00003433227539
    6. '()' → logprob: -16.62503433227539
    7. '```' → logprob: -16.75003433227539
    8. '('' → logprob: -17.37503433227539
    9. '(
' → logprob: -17.37503433227539
    10. '(`' → logprob: -17.62503433227539

Token 143: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02977629378437996
    2. '100' → logprob: -3.5297763347625732
    3. ' ' → logprob: -11.279776573181152
    4. '999' → logprob: -11.904776573181152
    5. '300' → logprob: -13.404776573181152
    6. '500' → logprob: -13.529776573181152
    7. '1' → logprob: -13.779776573181152
    8. '200' → logprob: -13.904776573181152
    9. '900' → logprob: -14.529776573181152
    10. '250' → logprob: -15.404776573181152

Token 144: '**' (ID: 410)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.06683844327926636
    2. '**' → logprob: -3.316838502883911
    3. '6' → logprob: -3.566838502883911
    4. '8' → logprob: -9.441838264465332
    5. '07' → logprob: -9.816838264465332
    6. '9' → logprob: -12.566838264465332
    7. '000' → logprob: -13.316838264465332
    8. '06' → logprob: -13.566838264465332
    9. '00' → logprob: -14.691838264465332
    10. '```' → logprob: -15.316838264465332

Token 145: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.10245358943939209
    2. '9' → logprob: -2.3524537086486816
    3. '8' → logprob: -6.102453708648682
    4. '6' → logprob: -11.977453231811523
    5. '**' → logprob: -14.477453231811523
    6. '```' → logprob: -15.602453231811523
    7. ' ' → logprob: -17.477453231811523
    8. '

' → logprob: -17.727453231811523
    9. '}' → logprob: -18.602453231811523
    10. ')' → logprob: -18.977453231811523

Token 146: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ' )' → logprob: -12.375005722045898
    3. ')
' → logprob: -13.625005722045898
    4. ')

' → logprob: -16.8750057220459
    5. ')
' → logprob: -17.7500057220459
    6. '),' → logprob: -18.2500057220459
    7. ' ' → logprob: -18.5000057220459
    8. ')`' → logprob: -18.6250057220459
    9. ')#' → logprob: -18.8750057220459
    10. ');' → logprob: -19.0000057220459

Token 147: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05260350927710533
    2. 'class' → logprob: -3.4276034832000732
    3. '
' → logprob: -4.302603721618652
    4. '

' → logprob: -5.927603721618652
    5. '\' → logprob: -7.177603721618652
    6. 'd' → logprob: -7.177603721618652
    7. 'n' → logprob: -8.052603721618652
    8. '#' → logprob: -8.552603721618652
    9. 'import' → logprob: -9.302603721618652
    10. ' 
' → logprob: -9.552603721618652

Token 148: ' input' (ID: 3422)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7306509613990784
    2. ' solve' → logprob: -1.3556509017944336
    3. ' factorial' → logprob: -1.7306509017944336
    4. ' ' → logprob: -3.4806509017944336
    5. ' dfs' → logprob: -4.605650901794434
    6. ' factor' → logprob: -4.980650901794434
    7. ' _' → logprob: -5.355650901794434
    8. ' f' → logprob: -5.355650901794434
    9. ' fibonacci' → logprob: -5.355650901794434
    10. '_' → logprob: -5.480650901794434

Token 149: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003850325592793524
    2. '():
' → logprob: -8.625385284423828
    3. '()' → logprob: -8.750385284423828
    4. ' ():' → logprob: -10.500385284423828
    5. '(' → logprob: -11.375385284423828
    6. '(prompt' → logprob: -12.500385284423828
    7. '().' → logprob: -12.750385284423828
    8. ':' → logprob: -15.375385284423828
    9. '():

' → logprob: -15.625385284423828
    10. '()>' → logprob: -16.000385284423828

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6398827433586121
    2. ' return' → logprob: -1.1398828029632568
    3. ' sys' → logprob: -2.264882802963257
    4. '    ' → logprob: -3.514882802963257
    5. ' ' → logprob: -4.389882564544678
    6. 'return' → logprob: -6.264882564544678
    7. ' input' → logprob: -6.389882564544678
    8. '    
' → logprob: -7.764882564544678
    9. '  ' → logprob: -7.889882564544678
    10. 'sys' → logprob: -8.014883041381836

Token 151: ' get' (ID: 717)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1603880226612091
    2. ' return' → logprob: -1.9103879928588867
    3. 'sys' → logprob: -9.410387992858887
    4. ' sys' → logprob: -9.535387992858887
    5. ' ' → logprob: -12.410387992858887
    6. '	return' → logprob: -12.910387992858887
    7. '   ' → logprob: -13.910387992858887
    8. 'input' → logprob: -14.535387992858887
    9. 's' → logprob: -15.410387992858887
    10. 'eturn' → logprob: -15.535387992858887

Token 152: ' =' (ID: 314)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0674341470003128
    2. 'attr' → logprob: -2.817434072494507
    3. 's' → logprob: -5.692434310913086
    4. '_line' → logprob: -6.692434310913086
    5. 'input' → logprob: -8.067434310913086
    6. '_input' → logprob: -9.067434310913086
    7. 'sys' → logprob: -9.692434310913086
    8. 'lin' → logprob: -10.067434310913086
    9. 'pass' → logprob: -10.192434310913086
    10. 'ter' → logprob: -10.567434310913086

Token 153: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.22735713422298431
    2. 'sys' → logprob: -1.6023571491241455
    3. '=sys' → logprob: -7.352356910705566
    4. 'lambda' → logprob: -7.852356910705566
    5. ' lambda' → logprob: -8.227356910705566
    6. '	sys' → logprob: -8.227356910705566
    7. 'input' → logprob: -9.227356910705566
    8. ' ' → logprob: -9.227356910705566
    9. 'partial' → logprob: -10.227356910705566
    10. ' partial' → logprob: -10.227356910705566

Token 154: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.129266067640856e-05
    2. '.' → logprob: -11.625020980834961
    3. '.stdout' → logprob: -11.750020980834961
    4. 'stdin' → logprob: -13.000020980834961
    5. '._' → logprob: -13.750020980834961
    6. '.readline' → logprob: -15.125020980834961
    7. '.modules' → logprob: -15.125020980834961
    8. '.__' → logprob: -15.625020980834961
    9. '.argv' → logprob: -15.875020980834961
    10. '.std' → logprob: -16.62502098083496

Token 155: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.7640287280082703
    2. 'buffer' → logprob: -1.014028787612915
    3. 'read' → logprob: -1.764028787612915
    4. ' readline' → logprob: -9.514028549194336
    5. 'reader' → logprob: -11.389028549194336
    6. 'rea' → logprob: -11.889028549194336
    7. 'readonly' → logprob: -11.889028549194336
    8. 'reading' → logprob: -13.764028549194336
    9. 'buff' → logprob: -14.014028549194336
    10. '_buffer' → logprob: -14.139028549194336

Token 156: '
' (ID: 198)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03821155056357384
    2. '()' → logprob: -3.2882115840911865
    3. 'rstrip' → logprob: -9.163211822509766
    4. '.rstrip' → logprob: -11.163211822509766
    5. '()
' → logprob: -11.538211822509766
    6. '
' → logprob: -11.663211822509766
    7. '.strip' → logprob: -11.788211822509766
    8. 'strip' → logprob: -11.788211822509766
    9. ')' → logprob: -12.538211822509766
    10. '().__' → logprob: -12.788211822509766

Token 157: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.030908377841114998
    2. '().' → logprob: -4.155908584594727
    3. '()
' → logprob: -4.780908584594727
    4. '   ' → logprob: -5.405908584594727
    5. 'return' → logprob: -7.405908584594727
    6. '
' → logprob: -7.655908584594727
    7. '(' → logprob: -8.530908584594727
    8. ' ()' → logprob: -8.780908584594727
    9. '()\' → logprob: -9.030908584594727
    10. 'rstrip' → logprob: -9.655908584594727

Token 158: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6731635332107544
    2. ' return' → logprob: -1.2981635332107544
    3. '   ' → logprob: -1.5481635332107544
    4. '    
' → logprob: -6.923163414001465
    5. '    ' → logprob: -7.173163414001465
    6. '	return' → logprob: -7.423163414001465
    7. '()' → logprob: -7.548163414001465
    8. ' ' → logprob: -8.048163414001465
    9. 'def' → logprob: -8.673163414001465
    10. '
' → logprob: -8.673163414001465

Token 159: ' (' (ID: 350)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.011287137866020203
    2. 'get' → logprob: -4.511287212371826
    3. ' ' → logprob: -8.511286735534668
    4. '(get' → logprob: -11.511286735534668
    5. '  ' → logprob: -11.886286735534668
    6. ' getattr' → logprob: -12.011286735534668
    7. '[get' → logprob: -12.761286735534668
    8. '	get' → logprob: -13.261286735534668
    9. ' strip' → logprob: -13.386286735534668
    10. '"' → logprob: -13.386286735534668

Token 160: 'lambda' (ID: 35280)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.11962421238422394
    2. ' get' → logprob: -2.369624137878418
    3. 'int' → logprob: -4.119624137878418
    4. 'next' → logprob: -6.994624137878418
    5. ' next' → logprob: -7.369624137878418
    6. ' int' → logprob: -7.369624137878418
    7. ')' → logprob: -8.744624137878418
    8. ' ' → logprob: -8.869624137878418
    9. 'sys' → logprob: -9.494624137878418
    10. '(get' → logprob: -9.744624137878418

Token 161: ' s' (ID: 265)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34930354356765747
    2. ' :' → logprob: -1.2243034839630127
    3. ':int' → logprob: -7.724303722381592
    4. ' ' → logprob: -8.849303245544434
    5. ':list' → logprob: -9.599303245544434
    6. ':str' → logprob: -9.974303245544434
    7. ':void' → logprob: -10.849303245544434
    8. ' )' → logprob: -10.974303245544434
    9. 'prompt' → logprob: -11.099303245544434
    10. ' ):' → logprob: -11.224303245544434

Token 162: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01281016506254673
    2. ' :' → logprob: -4.887810230255127
    3. ':s' → logprob: -6.137810230255127
    4. '=s' → logprob: -6.762810230255127
    5. '=' → logprob: -7.137810230255127
    6. '=None' → logprob: -7.137810230255127
    7. '=sys' → logprob: -9.512809753417969
    8. ':f' → logprob: -10.637809753417969
    9. ':_' → logprob: -10.887809753417969
    10. '_:' → logprob: -11.012809753417969

Token 163: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6952357888221741
    2. 'get' → logprob: -1.0702357292175293
    3. 'sys' → logprob: -2.4452357292175293
    4. 'next' → logprob: -3.5702357292175293
    5. 'int' → logprob: -3.6952357292175293
    6. ' get' → logprob: -5.195235729217529
    7. ' next' → logprob: -5.445235729217529
    8. ' sys' → logprob: -5.820235729217529
    9. 'float' → logprob: -6.445235729217529
    10. ' s' → logprob: -6.695235729217529

Token 164: '[:-' (ID: 63556)
  Prédit: '.rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rstrip' → logprob: -0.32510271668434143
    2. '.strip' → logprob: -1.325102686882019
    3. '[:-' → logprob: -4.575102806091309
    4. '.' → logprob: -6.700102806091309
    5. ')' → logprob: -9.200102806091309
    6. '().' → logprob: -10.450102806091309
    7. '.split' → logprob: -10.450102806091309
    8. 'rstrip' → logprob: -10.575102806091309
    9. ' .' → logprob: -10.950102806091309
    10. '.replace' → logprob: -11.200102806091309

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. 'len' → logprob: -17.375
    4. '```' → logprob: -17.625
    5. 'newline' → logprob: -17.875
    6. '\' → logprob: -18.625
    7. ''\' → logprob: -18.875
    8. '-' → logprob: -19.0
    9. '"\' → logprob: -19.125
    10. '2' → logprob: -19.375

Token 166: ']' (ID: 60)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.7115758061408997
    2. ' if' → logprob: -0.8365758061408997
    3. ')' → logprob: -2.961575746536255
    4. 'if' → logprob: -4.336575984954834
    5. '])(' → logprob: -5.086575984954834
    6. ' )(' → logprob: -6.086575984954834
    7. 's' → logprob: -7.086575984954834
    8. '))(' → logprob: -7.461575984954834
    9. ' )' → logprob: -8.086575508117676
    10. ' or' → logprob: -8.211575508117676

Token 167: ' if' (ID: 538)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.008254979737102985
    2. ')' → logprob: -5.2582550048828125
    3. ' if' → logprob: -6.2582550048828125
    4. '(s' → logprob: -7.6332550048828125
    5. ' )(' → logprob: -7.8832550048828125
    6. '(get' → logprob: -9.758255004882812
    7. ' )' → logprob: -10.508255004882812
    8. ' or' → logprob: -10.633255004882812
    9. '(sys' → logprob: -10.883255004882812
    10. ')(__' → logprob: -11.008255004882812

Token 168: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0020436751656234264
    2. ' s' → logprob: -6.252043724060059
    3. 'len' → logprob: -9.127043724060059
    4. '(s' → logprob: -12.252043724060059
    5. ' len' → logprob: -13.752043724060059
    6. ' ' → logprob: -15.877043724060059
    7. '(len' → logprob: -16.502042770385742
    8. '(' → logprob: -17.127042770385742
    9. '	s' → logprob: -17.127042770385742
    10. ' isinstance' → logprob: -17.127042770385742

Token 169: '[-' (ID: 17503)
  Prédit: '.endswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.endswith' → logprob: -0.00866775307804346
    2. '[-' → logprob: -5.633667945861816
    3. ' and' → logprob: -6.133667945861816
    4. 'and' → logprob: -6.633667945861816
    5. 'else' → logprob: -7.258667945861816
    6. ' else' → logprob: -7.508667945861816
    7. '.' → logprob: -9.508667945861816
    8. ':' → logprob: -9.883667945861816
    9. 'ends' → logprob: -9.883667945861816
    10. '.startswith' → logprob: -10.008667945861816

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011668878141790628
    2. '==' → logprob: -8.126167297363281
    3. '-' → logprob: -8.501167297363281
    4. '=' → logprob: -8.876167297363281
    5. ' ' → logprob: -9.126167297363281
    6. ':' → logprob: -10.001167297363281
    7. ' ==' → logprob: -10.126167297363281
    8. '='\' → logprob: -10.126167297363281
    9. ']' → logprob: -10.251167297363281
    10. '2' → logprob: -10.376167297363281

Token 171: ':]' (ID: 67377)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05439468100667
    2. '=='' → logprob: -3.4293947219848633
    3. ' ==' → logprob: -4.054394721984863
    4. '=="' → logprob: -6.679394721984863
    5. '=' → logprob: -7.804394721984863
    6. ']==' → logprob: -8.304394721984863
    7. ' in' → logprob: -8.304394721984863
    8. 'else' → logprob: -8.304394721984863
    9. '==
' → logprob: -8.554394721984863
    10. 'in' → logprob: -9.054394721984863

Token 172: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.011040871031582355
    2. ' ==' → logprob: -5.011040687561035
    3. '=='' → logprob: -5.636040687561035
    4. '=="' → logprob: -7.636040687561035
    5. '==
' → logprob: -8.761040687561035
    6. '=' → logprob: -9.886040687561035
    7. 'else' → logprob: -10.886040687561035
    8. 'in' → logprob: -11.136040687561035
    9. '	' → logprob: -12.136040687561035
    10. ' in' → logprob: -12.511040687561035

Token 173: ' "\' (ID: 6512)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.0009440997382625937
    2. '"\' → logprob: -7.000944137573242
    3. ''
' → logprob: -10.625944137573242
    4. ' '\' → logprob: -12.625944137573242
    5. '\n' → logprob: -12.625944137573242
    6. '`
' → logprob: -14.375944137573242
    7. '`\' → logprob: -14.375944137573242
    8. ''' → logprob: -15.250944137573242
    9. '\
' → logprob: -16.125944137573242
    10. '"
' → logprob: -16.250944137573242

Token 174: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.7968066206085496e-05
    2. '\n' → logprob: -10.500027656555176
    3. '
' → logprob: -15.000027656555176
    4. ' n' → logprob: -17.625028610229492
    5. '```' → logprob: -17.625028610229492
    6. 'r' → logprob: -18.375028610229492
    7. '\' → logprob: -18.500028610229492
    8. 'x' → logprob: -18.625028610229492
    9. '\
' → logprob: -18.750028610229492
    10. '_n' → logprob: -18.875028610229492

Token 175: '"' (ID: 1)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.004624629858881235
    2. 'else' → logprob: -5.379624843597412
    3. '	else' → logprob: -13.129624366760254
    4. 's' → logprob: -13.879624366760254
    5. ' ' → logprob: -14.254624366760254
    6. '"' → logprob: -14.879624366760254
    7. ')' → logprob: -15.754624366760254
    8. ' els' → logprob: -16.75462532043457
    9. ' and' → logprob: -17.00462532043457
    10. '
' → logprob: -17.37962532043457

Token 176: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.018153101205825806
    2. 'else' → logprob: -4.018153190612793
    3. '	else' → logprob: -13.018153190612793
    4. ' ' → logprob: -14.893153190612793
    5. ' and' → logprob: -15.393153190612793
    6. 's' → logprob: -15.893153190612793
    7. ')' → logprob: -16.768152236938477
    8. ' s' → logprob: -17.018152236938477
    9. 'e' → logprob: -17.893152236938477
    10. '    ' → logprob: -18.018152236938477

Token 177: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04858771339058876
    2. ' s' → logprob: -3.0485877990722656
    3. ' ' → logprob: -15.923587799072266
    4. '   ' → logprob: -17.298587799072266
    5. '  ' → logprob: -17.548587799072266
    6. '    ' → logprob: -17.673587799072266
    7. '_s' → logprob: -17.798587799072266
    8. '	s' → logprob: -17.798587799072266
    9. '(s' → logprob: -18.173587799072266
    10. '     ' → logprob: -18.673587799072266

Token 178: ')(' (ID: 4898)
  Prédit: ')('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.048920370638370514
    2. ')' → logprob: -3.0489203929901123
    3. ' )(' → logprob: -8.798920631408691
    4. ' )' → logprob: -10.048920631408691
    5. '   ' → logprob: -10.298920631408691
    6. ')(
' → logprob: -10.298920631408691
    7. ')("' → logprob: -10.798920631408691
    8. '))(' → logprob: -10.798920631408691
    9. ')(__' → logprob: -11.298920631408691
    10. ')s' → logprob: -12.423920631408691

Token 179: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -7.941850526549388e-06
    2. ' get' → logprob: -11.750007629394531
    3. '(get' → logprob: -17.62500762939453
    4. '	get' → logprob: -19.00000762939453
    5. '[get' → logprob: -19.62500762939453
    6. 'sys' → logprob: -20.12500762939453
    7. 'input' → logprob: -20.75000762939453
    8. ')get' → logprob: -20.87500762939453
    9. '   ' → logprob: -21.50000762939453
    10. '=get' → logprob: -22.12500762939453

Token 180: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.006809037644416094
    2. '()' → logprob: -5.006809234619141
    3. ' ())' → logprob: -9.88180923461914
    4. ')' → logprob: -10.38180923461914
    5. '();)' → logprob: -12.13180923461914
    6. '())
' → logprob: -12.88180923461914
    7. '())

' → logprob: -13.88180923461914
    8. '()))' → logprob: -14.63180923461914
    9. ' ()' → logprob: -14.63180923461914
    10. '()]' → logprob: -14.63180923461914

Token 181: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1953088641166687
    2. '
' → logprob: -1.8203089237213135
    3. '#' → logprob: -5.320308685302734
    4. '\' → logprob: -5.820308685302734
    5. '

' → logprob: -6.195308685302734
    6. 'd' → logprob: -6.195308685302734
    7. '\n' → logprob: -7.195308685302734
    8. '<|end|>' → logprob: -7.445308685302734
    9. 'class' → logprob: -7.820308685302734
    10. 'de' → logprob: -8.320308685302734

Token 182: ' prin' (ID: 18095)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03763503581285477
    2. ' solve' → logprob: -4.03763484954834
    3. ' factorial' → logprob: -5.03763484954834
    4. 'main' → logprob: -5.53763484954834
    5. ' map' → logprob: -6.16263484954834
    6. ' factor' → logprob: -7.16263484954834
    7. ' print' → logprob: -7.28763484954834
    8. ' parse' → logprob: -7.53763484954834
    9. ' sys' → logprob: -7.66263484954834
    10. 'factor' → logprob: -7.78763484954834

Token 183: 'te' (ID: 411)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00020473242329899222
    2. 'tf' → logprob: -8.500205039978027
    3. 'tpl' → logprob: -13.875205039978027
    4. 'tt' → logprob: -16.37520408630371
    5. 'т' → logprob: -16.62520408630371
    6. 'tfoot' → logprob: -17.00020408630371
    7. 'tph' → logprob: -17.12520408630371
    8. 'tr' → logprob: -17.50020408630371
    9. 'tl' → logprob: -17.87520408630371
    10. '	t' → logprob: -18.12520408630371

Token 184: '(*' (ID: 9000)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.017998335883021355
    2. 'rror' → logprob: -4.767998218536377
    3. 'f' → logprob: -6.142998218536377
    4. 'd' → logprob: -7.142998218536377
    5. 'rr' → logprob: -7.142998218536377
    6. '(' → logprob: -7.142998218536377
    7. 'def' → logprob: -7.267998218536377
    8. 's' → logprob: -7.642998218536377
    9. 'nt' → logprob: -7.767998218536377
    10. 'val' → logprob: -7.892998218536377

Token 185: 'x' (ID: 87)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.13112235069274902
    2. ')' → logprob: -2.506122350692749
    3. 'x' → logprob: -3.881122350692749
    4. 'rror' → logprob: -4.881122589111328
    5. 's' → logprob: -5.506122589111328
    6. '*' → logprob: -5.881122589111328
    7. 'r' → logprob: -6.381122589111328
    8. 'print' → logprob: -6.631122589111328
    9. '):' → logprob: -7.506122589111328
    10. 'str' → logprob: -7.756122589111328

Token 186: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.36881762742996216
    2. ',' → logprob: -1.2438175678253174
    3. '):
' → logprob: -5.2438178062438965
    4. 'r' → logprob: -5.7438178062438965
    5. 'rror' → logprob: -6.2438178062438965
    6. ')' → logprob: -6.4938178062438965
    7. 'p' → logprob: -6.7438178062438965
    8. ':' → logprob: -6.7438178062438965
    9. 'n' → logprob: -6.9938178062438965
    10. 'nd' → logprob: -7.1188178062438965

Token 187: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06452386826276779
    2. 'print' → logprob: -2.939523935317993
    3. ' print' → logprob: -4.689523696899414
    4. '    
' → logprob: -8.814523696899414
    5. '    ' → logprob: -9.439523696899414
    6. '  ' → logprob: -9.814523696899414
    7. ' ' → logprob: -10.064523696899414
    8. '
' → logprob: -11.189523696899414
    9. 'import' → logprob: -11.314523696899414
    10. '	print' → logprob: -11.939523696899414

Token 188: '("' (ID: 568)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.014174560084939003
    2. '(' → logprob: -4.264174461364746
    3. '*' → logprob: -12.389174461364746
    4. '(
' → logprob: -13.014174461364746
    5. '(*)' → logprob: -13.514174461364746
    6. '(*(' → logprob: -13.514174461364746
    7. '(x' → logprob: -13.764174461364746
    8. '((*' → logprob: -15.264174461364746
    9. ' (*' → logprob: -15.514174461364746
    10. '()' → logprob: -15.639174461364746

Token 189: '##' (ID: 877)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.052497636526823044
    2. '",' → logprob: -3.677497625350952
    3. '*",' → logprob: -5.052497863769531
    4. '"*' → logprob: -5.427497863769531
    5. '(*' → logprob: -5.677497863769531
    6. '*x' → logprob: -5.677497863769531
    7. '"' → logprob: -5.677497863769531
    8. '".' → logprob: -6.302497863769531
    9. '*"' → logprob: -7.302497863769531
    10. '",'' → logprob: -7.927497863769531

Token 190: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.0643312856554985
    2. ' ",' → logprob: -3.939331293106079
    3. '".' → logprob: -4.5643310546875
    4. '"' → logprob: -4.6893310546875
    5. '",'' → logprob: -4.9393310546875
    6. ' ".' → logprob: -5.6893310546875
    7. '"*' → logprob: -5.9393310546875
    8. '*' → logprob: -6.3143310546875
    9. '>",' → logprob: -6.6893310546875
    10. 'x' → logprob: -6.8143310546875

Token 191: ' *' (ID: 425)
  Prédit: '*x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*x' → logprob: -0.1810455024242401
    2. '*' → logprob: -1.8060455322265625
    3. ' *' → logprob: -8.306045532226562
    4. '*f' → logprob: -8.306045532226562
    5. '*out' → logprob: -8.681045532226562
    6. '*object' → logprob: -9.181045532226562
    7. '*l' → logprob: -9.181045532226562
    8. '*d' → logprob: -9.431045532226562
    9. '*i' → logprob: -9.681045532226562
    10. '*self' → logprob: -9.931045532226562

Token 192: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. ' x' → logprob: -17.75
    3. '(x' → logprob: -22.75
    4. '[' → logprob: -22.875
    5. '{x' → logprob: -23.625
    6. '[x' → logprob: -24.25
    7. '$x' → logprob: -24.375
    8. ')x' → logprob: -24.625
    9. '<|end|>' → logprob: -25.5
    10. 'list' → logprob: -25.5

Token 193: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05568293109536171
    2. ',' → logprob: -2.930682897567749
    3. ',end' → logprob: -7.305683135986328
    4. ' )' → logprob: -9.930683135986328
    5. ')#' → logprob: -10.930683135986328
    6. ',)' → logprob: -11.305683135986328
    7. ');' → logprob: -11.430683135986328
    8. ' ,' → logprob: -11.805683135986328
    9. ')
' → logprob: -11.805683135986328
    10. '  ' → logprob: -12.430683135986328

Token 194: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.12275049090385437
    2. 'flush' → logprob: -2.2477505207061768
    3. 'end' → logprob: -5.122750282287598
    4. ')' → logprob: -5.997750282287598
    5. 'sep' → logprob: -6.747750282287598
    6. ' file' → logprob: -8.997750282287598
    7. ')
' → logprob: -10.872750282287598
    8. ' flush' → logprob: -10.872750282287598
    9. '**' → logprob: -11.122750282287598
    10. '"' → logprob: -11.247750282287598

Token 195: '=sys' (ID: 149200)
  Prédit: '=sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sys' → logprob: -1.4855663721391466e-05
    2. '=' → logprob: -11.125015258789062
    3. '=file' → logprob: -17.125015258789062
    4. 'sys' → logprob: -17.125015258789062
    5. '=subprocess' → logprob: -17.125015258789062
    6. ' sys' → logprob: -19.250015258789062
    7. ' =' → logprob: -19.500015258789062
    8. '=torch' → logprob: -19.625015258789062
    9. '=open' → logprob: -19.625015258789062
    10. '(sys' → logprob: -19.750015258789062

Token 196: '.stderr' (ID: 87058)
  Prédit: '.stderr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stderr' → logprob: -0.00028660334646701813
    2. '.stdout' → logprob: -8.250287055969238
    3. 'stderr' → logprob: -10.625287055969238
    4. '.stdin' → logprob: -14.625287055969238
    5. '.' → logprob: -15.625287055969238
    6. '.__' → logprob: -15.625287055969238
    7. '(stderr' → logprob: -16.250286102294922
    8. '._' → logprob: -16.875286102294922
    9. ' stderr' → logprob: -17.000286102294922
    10. '.std' → logprob: -18.250286102294922

Token 197: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. ' )' → logprob: -12.375005722045898
    3. ',' → logprob: -13.875005722045898
    4. ')
' → logprob: -16.2500057220459
    5. ')#' → logprob: -16.7500057220459
    6. '))' → logprob: -17.2500057220459
    7. ')`' → logprob: -17.3750057220459
    8. ',)' → logprob: -17.6250057220459
    9. ');' → logprob: -17.6250057220459
    10. '),' → logprob: -17.8750057220459

Token 198: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11962726712226868
    2. '
' → logprob: -2.2446272373199463
    3. '<|end|>' → logprob: -5.619627475738525
    4. '\n' → logprob: -6.994627475738525
    5. '\' → logprob: -7.119627475738525
    6. '

' → logprob: -7.369627475738525
    7. '#' → logprob: -8.619626998901367
    8. 'ndef' → logprob: -9.119626998901367
    9. '<|end|>' → logprob: -9.369626998901367
    10. ' 
' → logprob: -9.744626998901367

Token 199: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5111851096153259
    2. 'print' → logprob: -1.8861851692199707
    3. ' prin' → logprob: -1.8861851692199707
    4. ' input' → logprob: -3.6361851692199707
    5. ' pr' → logprob: -4.261185169219971
    6. 'pr' → logprob: -4.886185169219971
    7. ' prit' → logprob: -4.886185169219971
    8. ' prints' → logprob: -5.261185169219971
    9. 'prin' → logprob: -5.261185169219971
    10. ' debug' → logprob: -5.511185169219971

Token 200: 'l' (ID: 75)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018107218202203512
    2. '()' → logprob: -6.876810550689697
    3. 'f' → logprob: -8.876811027526855
    4. '(
' → logprob: -9.001811027526855
    5. '<|end|>' → logprob: -9.001811027526855
    6. '("")' → logprob: -9.251811027526855
    7. '(*' → logprob: -9.751811027526855
    8. '('' → logprob: -10.001811027526855
    9. '("' → logprob: -10.251811027526855
    10. 'def' → logprob: -10.501811027526855

Token 201: '(li' (ID: 111234)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22586019337177277
    2. '(' → logprob: -1.7258602380752563
    3. '()' → logprob: -4.600860118865967
    4. 'ine' → logprob: -4.725860118865967
    5. '(*' → logprob: -6.725860118865967
    6. '<|end|>' → logprob: -7.100860118865967
    7. 'ist' → logprob: -7.600860118865967
    8. '(
' → logprob: -7.725860118865967
    9. 'ines' → logprob: -8.225860595703125
    10. '*' → logprob: -8.225860595703125

Token 202: '):' (ID: 3127)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0031395703554153442
    2. 'ne' → logprob: -6.378139495849609
    3. '):' → logprob: -6.753139495849609
    4. '):
' → logprob: -9.00313949584961
    5. ':' → logprob: -9.37813949584961
    6. 's' → logprob: -10.50313949584961
    7. ',' → logprob: -11.50313949584961
    8. ')' → logprob: -12.25313949584961
    9. 'nt' → logprob: -13.00313949584961
    10. 'n' → logprob: -13.12813949584961

Token 203: ' [_' (ID: 38766)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.09613128751516342
    2. ' for' → logprob: -2.5961313247680664
    3. '   ' → logprob: -4.346131324768066
    4. ' def' → logprob: -6.346131324768066
    5. '    ' → logprob: -7.221131324768066
    6. 'print' → logprob: -7.596131324768066
    7. ' return' → logprob: -7.596131324768066
    8. ' pass' → logprob: -8.721131324768066
    9. '    
' → logprob: -8.971131324768066
    10. ' 
' → logprob: -9.346131324768066

Token 204: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005290207453072071
    2. 'pr' → logprob: -5.8802900314331055
    3. 'for' → logprob: -6.7552900314331055
    4. ' for' → logprob: -7.2552900314331055
    5. 'write' → logprob: -8.505290031433105
    6. '=' → logprob: -9.005290031433105
    7. 'p' → logprob: -9.630290031433105
    8. ':' → logprob: -10.255290031433105
    9. '(print' → logprob: -10.755290031433105
    10. 'import' → logprob: -11.130290031433105

Token 205: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014733945950865746
    2. ' _' → logprob: -4.764733791351318
    3. ' in' → logprob: -5.389733791351318
    4. 'in' → logprob: -6.639733791351318
    5. 'i' → logprob: -9.764734268188477
    6. '_=' → logprob: -9.889734268188477
    7. '_]' → logprob: -10.264734268188477
    8. 'li' → logprob: -10.889734268188477
    9. ' ' → logprob: -11.264734268188477
    10. '_in' → logprob: -11.389734268188477

Token 206: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07893694192171097
    2. ' in' → logprob: -2.57893705368042
    3. 'import' → logprob: -11.078936576843262
    4. '
' → logprob: -11.578936576843262
    5. ' ' → logprob: -11.578936576843262
    6. '	in' → logprob: -13.078936576843262
    7. '

' → logprob: -13.203936576843262
    8. '  ' → logprob: -13.828936576843262
    9. ')' → logprob: -13.953936576843262
    10. 'not' → logprob: -14.453936576843262

Token 207: ' map' (ID: 4014)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.009251282550394535
    2. 'map' → logprob: -5.134251117706299
    3. '(li' → logprob: -6.634251117706299
    4. 'print' → logprob: -7.509251117706299
    5. ' li' → logprob: -8.009251594543457
    6. '(map' → logprob: -8.384251594543457
    7. '[' → logprob: -8.509251594543457
    8. '(' → logprob: -8.634251594543457
    9. 'range' → logprob: -8.884251594543457
    10. '(_' → logprob: -9.384251594543457

Token 208: '(print' (ID: 110391)
  Prédit: '(print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(print' → logprob: -0.005895372945815325
    2. 'print' → logprob: -6.005895137786865
    3. '(lambda' → logprob: -6.130895137786865
    4. '(pr' → logprob: -6.880895137786865
    5. '(' → logprob: -8.505895614624023
    6. ' (' → logprob: -12.755895614624023
    7. '(
' → logprob: -13.130895614624023
    8. ' print' → logprob: -13.380895614624023
    9. '#print' → logprob: -13.755895614624023
    10. '(Print' → logprob: -14.630895614624023

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010922349756583571
    2. ',line' → logprob: -7.126092433929443
    3. '(li' → logprob: -9.501091957092285
    4. ' ,' → logprob: -10.126091957092285
    5. 'li' → logprob: -10.376091957092285
    6. ',list' → logprob: -10.501091957092285
    7. ',ll' → logprob: -10.751091957092285
    8. '(' → logprob: -11.001091957092285
    9. ',(' → logprob: -11.126091957092285
    10. ',l' → logprob: -11.126091957092285

Token 210: ' li' (ID: 3476)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -1.3663626305060461e-05
    2. ' li' → logprob: -11.25001335144043
    3. '(li' → logprob: -14.62501335144043
    4. '<li' → logprob: -16.50001335144043
    5. 'list' → logprob: -16.75001335144043
    6. '   ' → logprob: -17.25001335144043
    7. ' ' → logprob: -18.75001335144043
    8. 'map' → logprob: -18.87501335144043
    9. '_li' → logprob: -18.87501335144043
    10. '  ' → logprob: -19.25001335144043

Token 211: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001158211671281606
    2. ' )' → logprob: -10.125115394592285
    3. ')]
' → logprob: -10.125115394592285
    4. ',' → logprob: -11.250115394592285
    5. ')' → logprob: -11.500115394592285
    6. '())' → logprob: -11.750115394592285
    7. ']' → logprob: -14.250115394592285
    8. ')])' → logprob: -14.250115394592285
    9. ')]

' → logprob: -14.875115394592285
    10. '   ' → logprob: -15.000115394592285

Token 212: ' if' (ID: 538)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011984802782535553
    2. '
' → logprob: -4.511984825134277
    3. '\' → logprob: -8.011984825134277
    4. '\n' → logprob: -9.011984825134277
    5. '

' → logprob: -9.136984825134277
    6. '#' → logprob: -9.261984825134277
    7. '_' → logprob: -9.511984825134277
    8. '    
' → logprob: -10.761984825134277
    9. ')' → logprob: -10.886984825134277
    10. ' def' → logprob: -11.261984825134277

Token 213: ' li' (ID: 3476)
  Prédit: 'li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.006547920405864716
    2. ' li' → logprob: -5.881547927856445
    3. 'len' → logprob: -5.881547927856445
    4. 'False' → logprob: -8.006547927856445
    5. ' False' → logprob: -8.381547927856445
    6. '0' → logprob: -8.381547927856445
    7. ' isinstance' → logprob: -10.131547927856445
    8. ' len' → logprob: -10.506547927856445
    9. 'type' → logprob: -10.506547927856445
    10. ' ' → logprob: -10.631547927856445

Token 214: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5763868093490601
    2. 'else' → logprob: -0.8263868093490601
    3. '!=' → logprob: -8.576386451721191
    4. 'not' → logprob: -9.326386451721191
    5. ' is' → logprob: -9.701386451721191
    6. ' not' → logprob: -10.076386451721191
    7. ')' → logprob: -10.951386451721191
    8. ' ' → logprob: -11.326386451721191
    9. 'is' → logprob: -11.451386451721191
    10. 'and' → logprob: -12.201386451721191

Token 215: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2657691240310669
    2. ' None' → logprob: -1.765769124031067
    3. 'print' → logprob: -3.3907690048217773
    4. '...' → logprob: -3.7657690048217773
    5. '   ' → logprob: -6.015769004821777
    6. 'False' → logprob: -7.515769004821777
    7. 'True' → logprob: -7.765769004821777
    8. ' print' → logprob: -7.765769004821777
    9. 'pass' → logprob: -7.765769004821777
    10. '0' → logprob: -7.890769004821777

Token 216: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007293070200830698
    2. '
' → logprob: -5.007293224334717
    3. '    
' → logprob: -9.257292747497559
    4. '\' → logprob: -9.382292747497559
    5. 'class' → logprob: -9.507292747497559
    6. '#' → logprob: -9.757292747497559
    7. '  
' → logprob: -10.007292747497559
    8. '

' → logprob: -10.132292747497559
    9. ' 
' → logprob: -10.257292747497559
    10. '\n' → logprob: -10.382292747497559

Token 217: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013518068008124828
    2. '
' → logprob: -4.5135178565979
    3. 'class' → logprob: -7.1385178565979
    4. '\' → logprob: -8.013518333435059
    5. '

' → logprob: -8.263518333435059
    6. '#' → logprob: -8.263518333435059
    7. '<|end|>' → logprob: -8.263518333435059
    8. '\n' → logprob: -9.763518333435059
    9. '    
' → logprob: -9.888518333435059
    10. 'ndef' → logprob: -10.138518333435059

Token 218: ' args' (ID: 4966)
  Prédit: ' prin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prin' → logprob: -0.8669301867485046
    2. ' print' → logprob: -1.2419302463531494
    3. ' main' → logprob: -2.6169302463531494
    4. ' prints' → logprob: -3.3669302463531494
    5. ' pr' → logprob: -3.4919302463531494
    6. ' debug' → logprob: -3.7419302463531494
    7. 'pr' → logprob: -4.11693000793457
    8. 'print' → logprob: -4.11693000793457
    9. ' println' → logprob: -4.74193000793457
    10. ' input' → logprob: -5.24193000793457

Token 219: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.12395840138196945
    2. 'parse' → logprob: -3.8739583492279053
    3. '=[]' → logprob: -3.9989583492279053
    4. ' =' → logprob: -4.123958587646484
    5. 'plit' → logprob: -4.373958587646484
    6. '=' → logprob: -4.498958587646484
    7. 'ect' → logprob: -4.873958587646484
    8. '_parser' → logprob: -5.123958587646484
    9. '_' → logprob: -5.498958587646484
    10. 'parser' → logprob: -5.623958587646484

Token 220: '(s' (ID: 1858)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.631380558013916
    2. '(arr' → logprob: -1.256380558013916
    3. '(lambda' → logprob: -2.881380558013916
    4. '(seq' → logprob: -3.256380558013916
    5. '(a' → logprob: -3.631380558013916
    6. '(' → logprob: -4.006380558013916
    7. '(l' → logprob: -4.381380558013916
    8. '(li' → logprob: -4.631380558013916
    9. '(ls' → logprob: -4.756380558013916
    10. '(array' → logprob: -5.506380558013916

Token 221: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013781465590000153
    2. 's' → logprob: -5.513781547546387
    3. ',' → logprob: -5.638781547546387
    4. '(s' → logprob: -6.513781547546387
    5. '):
' → logprob: -6.513781547546387
    6. ' ):' → logprob: -6.763781547546387
    7. ')' → logprob: -7.638781547546387
    8. '(' → logprob: -8.763781547546387
    9. 'eq' → logprob: -8.888781547546387
    10. '_list' → logprob: -9.263781547546387

Token 222: ' return' (ID: 622)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.4318070411682129
    2. ' key' → logprob: -1.306807041168213
    3. 'reverse' → logprob: -2.806807041168213
    4. 'rev' → logprob: -4.556807041168213
    5. ' reverse' → logprob: -5.056807041168213
    6. ' /' → logprob: -6.806807041168213
    7. '*' → logprob: -7.806807041168213
    8. ' rev' → logprob: -8.681806564331055
    9. ',' → logprob: -8.681806564331055
    10. 'r' → logprob: -8.806806564331055

Token 223: '_sorted' (ID: 104993)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.034978777170181274
    2. '_indices' → logprob: -3.7849788665771484
    3. '_inverse' → logprob: -4.534978866577148
    4. '_idx' → logprob: -7.409978866577148
    5. '_indexes' → logprob: -8.784978866577148
    6. '_' → logprob: -9.909978866577148
    7. '_array' → logprob: -10.409978866577148
    8. 's' → logprob: -10.784978866577148
    9. '_args' → logprob: -11.159978866577148
    10. '_sorted' → logprob: -11.409978866577148

Token 224: '=False' (ID: 12148)
  Prédit: '=False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=False' → logprob: -0.19719968736171722
    2. '=' → logprob: -2.072199583053589
    3. '=True' → logprob: -3.072199583053589
    4. '_indices' → logprob: -5.197199821472168
    5. ' =' → logprob: -7.572199821472168
    6. 'indices' → logprob: -8.322199821472168
    7. '):' → logprob: -8.572199821472168
    8. '_=' → logprob: -10.072199821472168
    9. '_by' → logprob: -10.822199821472168
    10. '=None' → logprob: -10.822199821472168

Token 225: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07380315661430359
    2. ',' → logprob: -2.698803186416626
    3. '=' → logprob: -5.823802947998047
    4. ' ):' → logprob: -7.448802947998047
    5. ')' → logprob: -9.073802947998047
    6. '=None' → logprob: -9.323802947998047
    7. '):
' → logprob: -9.948802947998047
    8. ':' → logprob: -10.573802947998047
    9. '=False' → logprob: -11.573802947998047
    10. '=True' → logprob: -11.823802947998047

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4055546224117279
    2. ' return' → logprob: -2.0305545330047607
    3. ' ind' → logprob: -3.1555545330047607
    4. ' s' → logprob: -3.4055545330047607
    5. ' keys' → logprob: -3.6555545330047607
    6. ' n' → logprob: -3.7805545330047607
    7. ' idx' → logprob: -3.9055545330047607
    8. ' def' → logprob: -4.28055477142334
    9. ' key' → logprob: -4.53055477142334
    10. ' indices' → logprob: -5.03055477142334

Token 227: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.7958018779754639
    2. 'inds' → logprob: -0.9208018779754639
    3. 'ind' → logprob: -2.420801877975464
    4. 'res' → logprob: -3.545801877975464
    5. 'indices' → logprob: -4.420802116394043
    6. 'return' → logprob: -5.795802116394043
    7. 'key' → logprob: -6.045802116394043
    8. 'indx' → logprob: -6.045802116394043
    9. 'r' → logprob: -6.170802116394043
    10. 'if' → logprob: -6.295802116394043

Token 228: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5283191204071045
    2. ' =' → logprob: -1.2783191204071045
    3. 's' → logprob: -2.0283191204071045
    4. ',' → logprob: -8.278319358825684
    5. '_' → logprob: -10.903319358825684
    6. '   ' → logprob: -11.653319358825684
    7. '_=' → logprob: -11.653319358825684
    8. 'sort' → logprob: -11.903319358825684
    9. 'es' → logprob: -11.903319358825684
    10. 'ex' → logprob: -12.278319358825684

Token 229: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6956503391265869
    2. 'sorted' → logprob: -0.9456503391265869
    3. 'range' → logprob: -2.195650339126587
    4. ' list' → logprob: -7.195650100708008
    5. ' sorted' → logprob: -7.820650100708008
    6. ' range' → logprob: -8.195650100708008
    7. '[' → logprob: -9.320650100708008
    8. 'lst' → logprob: -11.695650100708008
    9. '[*' → logprob: -12.195650100708008
    10. 'tuple' → logprob: -13.695650100708008

Token 230: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0011778471525758505
    2. 'range' → logprob: -7.251177787780762
    3. '(map' → logprob: -7.751177787780762
    4. '(' → logprob: -10.376177787780762
    5. 'map' → logprob: -12.876177787780762
    6. ' range' → logprob: -13.251177787780762
    7. '	range' → logprob: -13.751177787780762
    8. '(en' → logprob: -15.001177787780762
    9. '(sorted' → logprob: -15.251177787780762
    10. '```' → logprob: -15.751177787780762

Token 231: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0031806828919798136
    2. 'len' → logprob: -5.753180503845215
    3. ' len' → logprob: -13.003180503845215
    4. '(' → logprob: -15.503180503845215
    5. '	len' → logprob: -15.503180503845215
    6. '=len' → logprob: -15.628180503845215
    7. ',len' → logprob: -16.12818145751953
    8. '<len' → logprob: -17.62818145751953
    9. '[len' → logprob: -17.75318145751953
    10. '   ' → logprob: -18.25318145751953

Token 232: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.005254387855529785
    2. 's' → logprob: -5.25525426864624
    3. '(' → logprob: -11.130254745483398
    4. ' s' → logprob: -12.880254745483398
    5. '(
' → logprob: -13.880254745483398
    6. ')' → logprob: -14.630254745483398
    7. '   ' → logprob: -15.005254745483398
    8. ' (' → logprob: -15.005254745483398
    9. '_s' → logprob: -15.130254745483398
    10. '(x' → logprob: -15.380254745483398

Token 233: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0028609856963157654
    2. '))
' → logprob: -5.877861022949219
    3. ' ))' → logprob: -10.127861022949219
    4. ')))' → logprob: -11.627861022949219
    5. '))

' → logprob: -12.877861022949219
    6. ')' → logprob: -14.127861022949219
    7. '()))' → logprob: -14.252861022949219
    8. 's' → logprob: -14.377861022949219
    9. ' ))
' → logprob: -14.377861022949219
    10. ' ' → logprob: -14.752861022949219

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14144152402877808
    2. '<|end|>' → logprob: -2.641441583633423
    3. '
' → logprob: -3.391441583633423
    4. ')' → logprob: -4.016441345214844
    5. 'idx' → logprob: -6.141441345214844
    6. '    
' → logprob: -6.266441345214844
    7. 'def' → logprob: -7.391441345214844
    8. '<|end|>' → logprob: -7.516441345214844
    9. ' ' → logprob: -7.766441345214844
    10. '    ' → logprob: -7.891441345214844

Token 235: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.045786984264850616
    2. '   ' → logprob: -4.1707868576049805
    3. 'if' → logprob: -4.1707868576049805
    4. ' idx' → logprob: -4.4207868576049805
    5. ' if' → logprob: -6.4207868576049805
    6. 'return' → logprob: -9.04578685760498
    7. 's' → logprob: -10.29578685760498
    8. '	idx' → logprob: -10.79578685760498
    9. 'def' → logprob: -11.17078685760498
    10. ' return' → logprob: -11.42078685760498

Token 236: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.033136673271656036
    2. '.' → logprob: -3.7831366062164307
    3. '=' → logprob: -4.65813684463501
    4. 'sort' → logprob: -8.908136367797852
    5. '.=' → logprob: -9.158136367797852
    6. '   ' → logprob: -9.283136367797852
    7. ',' → logprob: -12.283136367797852
    8. ' sort' → logprob: -12.283136367797852
    9. ' =' → logprob: -12.408136367797852
    10. '	sort' → logprob: -12.533136367797852

Token 237: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.00013488641707226634
    2. ' sorted' → logprob: -9.000134468078613
    3. 'list' → logprob: -11.875134468078613
    4. '   ' → logprob: -12.875134468078613
    5. '[' → logprob: -14.500134468078613
    6. '(sorted' → logprob: -14.750134468078613
    7. 'st' → logprob: -14.875134468078613
    8. 's' → logprob: -15.375134468078613
    9. '
' → logprob: -15.750134468078613
    10. ' ' → logprob: -16.50013542175293

Token 238: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.014533900655806065
    2. '(range' → logprob: -4.264533996582031
    3. '(' → logprob: -8.514533996582031
    4. '(key' → logprob: -8.764533996582031
    5. '(
' → logprob: -12.264533996582031
    6. 'range' → logprob: -12.514533996582031
    7. '(s' → logprob: -13.514533996582031
    8. 'idx' → logprob: -13.639533996582031
    9. '(iter' → logprob: -14.264533996582031
    10. '[idx' → logprob: -14.389533996582031

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018322253599762917
    2. ',key' → logprob: -4.018322467803955
    3. 'key' → logprob: -8.768321990966797
    4. ' ,' → logprob: -11.143321990966797
    5. ')' → logprob: -14.143321990966797
    6. ' key' → logprob: -14.268321990966797
    7. ',
' → logprob: -14.893321990966797
    8. '(),' → logprob: -15.393321990966797
    9. '   ' → logprob: -15.643321990966797
    10. '(key' → logprob: -15.893321990966797

Token 240: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.004078878089785576
    2. ' key' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.75407886505127
    4. 'reverse' → logprob: -16.004079818725586
    5. ',key' → logprob: -16.004079818725586
    6. '	key' → logprob: -17.379079818725586
    7. '(key' → logprob: -17.504079818725586
    8. ' ' → logprob: -20.254079818725586
    9. '
' → logprob: -20.254079818725586
    10. ' reverse' → logprob: -20.754079818725586

Token 241: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.20161212980747223
    2. '=' → logprob: -1.701612114906311
    3. '=item' → logprob: -8.57661247253418
    4. '=s' → logprob: -12.32661247253418
    5. '=
' → logprob: -12.82661247253418
    6. '=_' → logprob: -12.95161247253418
    7. '=index' → logprob: -16.20161247253418
    8. '=

' → logprob: -16.20161247253418
    9. 'partial' → logprob: -16.45161247253418
    10. '=i' → logprob: -16.70161247253418

Token 242: ' k' (ID: 372)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5078524947166443
    2. 'i' → logprob: -1.507852554321289
    3. ' i' → logprob: -2.257852554321289
    4. ' x' → logprob: -2.757852554321289
    5. 'k' → logprob: -5.132852554321289
    6. 's' → logprob: -6.632852554321289
    7. ' s' → logprob: -7.007852554321289
    8. ' k' → logprob: -7.382852554321289
    9. 'v' → logprob: -11.257852554321289
    10. '_i' → logprob: -11.757852554321289

Token 243: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031796174589544535
    2. ':s' → logprob: -5.753179550170898
    3. ' :' → logprob: -13.753179550170898
    4. 's' → logprob: -15.003179550170898
    5. ':
' → logprob: -15.253179550170898
    6. ':k' → logprob: -15.628179550170898
    7. ':ss' → logprob: -17.0031795501709
    8. '   ' → logprob: -17.8781795501709
    9. ':S' → logprob: -18.1281795501709
    10. ':_' → logprob: -18.3781795501709

Token 244: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0024764856789261103
    2. ' s' → logprob: -6.002476692199707
    3. '(s' → logprob: -14.502476692199707
    4. '   ' → logprob: -16.12747573852539
    5. ':' → logprob: -16.50247573852539
    6. '	s' → logprob: -17.50247573852539
    7. 'x' → logprob: -18.25247573852539
    8. ' ' → logprob: -18.50247573852539
    9. '_s' → logprob: -18.87747573852539
    10. ':s' → logprob: -18.87747573852539

Token 245: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.625003814697266
    3. '[key' → logprob: -16.125003814697266
    4. 'k' → logprob: -16.625003814697266
    5. '[
' → logprob: -17.250003814697266
    6. '(k' → logprob: -18.625003814697266
    7. ' [' → logprob: -19.250003814697266
    8. ')[' → logprob: -19.625003814697266
    9. ')' → logprob: -19.750003814697266
    10. '[i' → logprob: -20.375003814697266

Token 246: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.35342836380004883
    2. ')' → logprob: -1.2284283638000488
    3. '))' → logprob: -5.728428363800049
    4. ' )' → logprob: -7.478428363800049
    5. ',' → logprob: -7.853428363800049
    6. '})' → logprob: -8.35342788696289
    7. '),' → logprob: -8.72842788696289
    8. ' ])' → logprob: -9.22842788696289
    9. ')]' → logprob: -9.35342788696289
    10. ')])' → logprob: -9.47842788696289

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031237265095114708
    2. ')' → logprob: -4.6562371253967285
    3. '    
' → logprob: -4.6562371253967285
    4. '
' → logprob: -5.5312371253967285
    5. 'return' → logprob: -6.5312371253967285
    6. ' ' → logprob: -6.9062371253967285
    7. ',' → logprob: -7.0312371253967285
    8. ' return' → logprob: -7.1562371253967285
    9. '<|end|>' → logprob: -7.2812371253967285
    10. ' if' → logprob: -7.5312371253967285

Token 248: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06949281692504883
    2. '   ' → logprob: -3.194492816925049
    3. 'if' (adapté à ' if') → logprob: -3.944492816925049
    4. ' return' → logprob: -5.069492816925049
    5. 'return' → logprob: -7.694492816925049
    6. '[' → logprob: -10.94449234008789
    7. ' ' → logprob: -12.06949234008789
    8. '    ' → logprob: -12.31949234008789
    9. ',' → logprob: -12.44449234008789
    10. '    
' → logprob: -12.44449234008789

Token 249: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.575947105884552
    2. ' return' → logprob: -0.825947105884552
    3. ' not' → logprob: -12.200946807861328
    4. 'not' → logprob: -13.700946807861328
    5. '(return' → logprob: -13.950946807861328
    6. '   ' → logprob: -14.950946807861328
    7. '{return' → logprob: -15.450946807861328
    8. ' ' → logprob: -16.200946807861328
    9. ':return' → logprob: -16.825946807861328
    10. ')return' → logprob: -16.950946807861328

Token 250: '_sorted' (ID: 104993)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6862708330154419
    2. '_sorted' → logprob: -0.9362708330154419
    3. '_true' → logprob: -3.1862707138061523
    4. ' True' → logprob: -3.6862707138061523
    5. ':' → logprob: -4.436270713806152
    6. ' ' → logprob: -5.186270713806152
    7. ' _' → logprob: -5.436270713806152
    8. '_return' → logprob: -6.061270713806152
    9. '_:' → logprob: -6.311270713806152
    10. '_idxs' → logprob: -6.436270713806152

Token 251: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015246253460645676
    2. ' :' → logprob: -6.501524448394775
    3. ':
' → logprob: -11.251524925231934
    4. ':return' → logprob: -11.751524925231934
    5. '=' → logprob: -14.376524925231934
    6. ' else' → logprob: -15.626524925231934
    7. ',' → logprob: -15.751524925231934
    8. '==' → logprob: -16.501523971557617
    9. 'else' → logprob: -16.501523971557617
    10. '):' → logprob: -16.626523971557617

Token 252: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01603037863969803
    2. '       ' → logprob: -4.891030311584473
    3. ' :' → logprob: -6.266030311584473
    4. ',' → logprob: -6.391030311584473
    5. ':
' → logprob: -6.391030311584473
    6. ':return' → logprob: -6.766030311584473
    7. '   ' → logprob: -6.891030311584473
    8. ' return' → logprob: -7.391030311584473
    9. '    ' → logprob: -8.516030311584473
    10. 'return' → logprob: -10.391030311584473

Token 253: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.30075740814208984
    2. 'return' (adapté à ' return') → logprob: -1.5507574081420898
    3. '       ' → logprob: -3.05075740814209
    4. '   ' → logprob: -8.17575740814209
    5. '	return' → logprob: -11.05075740814209
    6. ':return' → logprob: -11.05075740814209
    7. ' ' → logprob: -12.17575740814209
    8. '_return' → logprob: -12.30075740814209
    9. ' s' → logprob: -12.67575740814209
    10. '
' → logprob: -13.55075740814209

Token 254: ' idx' (ID: 14016)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.6557923555374146
    2. '([' → logprob: -1.6557923555374146
    3. '[list' → logprob: -2.280792236328125
    4. ' [' → logprob: -2.780792236328125
    5. '[s' → logprob: -2.905792236328125
    6. '[' → logprob: -3.155792236328125
    7. '[item' → logprob: -4.780792236328125
    8. ' ([' → logprob: -5.030792236328125
    9. 'list' → logprob: -5.030792236328125
    10. 'idx' → logprob: -5.905792236328125

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.963691804325208e-05
    2. ' ,' → logprob: -10.750029563903809
    3. ',s' → logprob: -11.875029563903809
    4. ',[' → logprob: -14.375029563903809
    5. ',len' → logprob: -15.250029563903809
    6. ',
' → logprob: -16.500030517578125
    7. ',list' → logprob: -16.875030517578125
    8. ',n' → logprob: -17.125030517578125
    9. ',k' → logprob: -17.250030517578125
    10. 's' → logprob: -17.375030517578125

Token 256: ' list' (ID: 1562)
  Prédit: '[item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[item' → logprob: -0.12155282497406006
    2. '[s' → logprob: -2.6215529441833496
    3. '[' → logprob: -3.9965529441833496
    4. '[list' → logprob: -4.24655294418335
    5. 'sorted' → logprob: -4.87155294418335
    6. ' [' → logprob: -7.12155294418335
    7. 'list' → logprob: -8.496552467346191
    8. '[attr' → logprob: -9.871552467346191
    9. '[get' → logprob: -9.871552467346191
    10. '[type' → logprob: -9.996552467346191

Token 257: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.006851650308817625
    2. '(sorted' → logprob: -5.131851673126221
    3. '(item' → logprob: -7.881851673126221
    4. '(chain' → logprob: -8.506851196289062
    5. '(s' → logprob: -8.881851196289062
    6. '([' → logprob: -9.006851196289062
    7. '(__' → logprob: -10.756851196289062
    8. 'map' → logprob: -11.631851196289062
    9. '(' → logprob: -11.756851196289062
    10. '(sort' → logprob: -12.131851196289062

Token 258: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.009779464453458786
    2. '(lambda' → logprob: -4.634779453277588
    3. '(' → logprob: -11.759779930114746
    4. 's' → logprob: -11.884779930114746
    5. 'lambda' → logprob: -12.509779930114746
    6. '(part' → logprob: -12.759779930114746
    7. '(item' → logprob: -13.634779930114746
    8. '(operator' → logprob: -14.634779930114746
    9. '(
' → logprob: -15.634779930114746
    10. ' lambda' → logprob: -16.13477897644043

Token 259: '.__' (ID: 10210)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.7803789973258972
    2. '(idx' → logprob: -0.9053789973258972
    3. ')' → logprob: -3.280379056930542
    4. '(s' → logprob: -3.405379056930542
    5. 'lambda' → logprob: -3.530379056930542
    6. 's' → logprob: -4.280378818511963
    7. '(' → logprob: -4.530378818511963
    8. '))' → logprob: -5.280378818511963
    9. 'idx' → logprob: -5.780378818511963
    10. '[idx' → logprob: -6.155378818511963

Token 260: 'getitem' (ID: 147767)
  Prédit: 'getitem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getitem' → logprob: -6.988221684878226e-06
    2. 'item' → logprob: -12.000006675720215
    3. 'idx' → logprob: -15.625006675720215
    4. '__' → logprob: -15.750006675720215
    5. 'index' → logprob: -16.12500762939453
    6. 'set' → logprob: -16.37500762939453
    7. 'class' → logprob: -16.62500762939453
    8. 'get' → logprob: -16.87500762939453
    9. 'items' → logprob: -17.00000762939453
    10. 'gets' → logprob: -17.12500762939453

Token 261: '__,' (ID: 23783)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3902033970225602e-05
    2. ',index' → logprob: -11.250014305114746
    3. ' ,' → logprob: -14.625014305114746
    4. '(idx' → logprob: -16.12501335144043
    5. ',
' → logprob: -16.87501335144043
    6. ',args' → logprob: -17.37501335144043
    7. 'idx' → logprob: -17.75001335144043
    8. ',[' → logprob: -17.75001335144043
    9. ',id' → logprob: -17.87501335144043
    10. '‌,' → logprob: -18.00001335144043

Token 262: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0007100477814674377
    2. ' idx' → logprob: -7.2507100105285645
    3. '	idx' → logprob: -16.750709533691406
    4. '(idx' → logprob: -17.125709533691406
    5. 'index' → logprob: -17.750709533691406
    6. '[idx' → logprob: -18.125709533691406
    7. ' ' → logprob: -19.125709533691406
    8. ')' → logprob: -19.375709533691406
    9. '   ' → logprob: -20.000709533691406
    10. 'indx' → logprob: -20.250709533691406

Token 263: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10021518170833588
    2. '))
' → logprob: -2.350215196609497
    3. '   ' → logprob: -13.100214958190918
    4. ')' → logprob: -13.225214958190918
    5. ' ))' → logprob: -13.350214958190918
    6. '))

' → logprob: -13.725214958190918
    7. ' ))
' → logprob: -14.100214958190918
    8. '))
' → logprob: -14.350214958190918
    9. ')
' → logprob: -15.100214958190918
    10. ')))' → logprob: -15.600214958190918

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015836587408557534
    2. 'else' → logprob: -9.000158309936523
    3. 'return' → logprob: -10.750158309936523
    4. ' else' → logprob: -12.500158309936523
    5. '
' → logprob: -13.250158309936523
    6. 'def' → logprob: -13.750158309936523
    7. ' return' → logprob: -14.000158309936523
    8. '    
' → logprob: -14.000158309936523
    9. '<|end|>' → logprob: -14.000158309936523
    10. 'idx' → logprob: -14.125158309936523

Token 265: ' return' (ID: 622)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5841352343559265
    2. 'return' (adapté à ' return') → logprob: -0.8341352343559265
    3. '   ' → logprob: -5.459135055541992
    4. ' else' → logprob: -5.834135055541992
    5. ' return' → logprob: -6.959135055541992
    6. ' ' → logprob: -11.709135055541992
    7. 'raise' → logprob: -12.834135055541992
    8. '```' → logprob: -13.209135055541992
    9. ')' → logprob: -13.334135055541992
    10. '    
' → logprob: -13.459135055541992

Token 266: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.004078997299075127
    2. ' idx' → logprob: -5.5040788650512695
    3. '(idx' → logprob: -15.50407886505127
    4. '	idx' → logprob: -15.75407886505127
    5. '[idx' → logprob: -16.629079818725586
    6. 'index' → logprob: -17.254079818725586
    7. 'id' → logprob: -17.754079818725586
    8. ' ' → logprob: -18.379079818725586
    9. '   ' → logprob: -19.004079818725586
    10. '.idx' → logprob: -19.629079818725586

Token 267: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 268: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11631505191326141
    2. '
' → logprob: -2.3663151264190674
    3. '<|end|>' → logprob: -4.491314888000488
    4. '

' → logprob: -6.616314888000488
    5. '#' → logprob: -6.866314888000488
    6. ')' → logprob: -7.366314888000488
    7. '\n' → logprob: -8.116314888000488
    8. '_' → logprob: -8.491314888000488
    9. '\' → logprob: -8.741314888000488
    10. ',' → logprob: -8.866314888000488

Token 269: ' alp' (ID: 107692)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.00278902053833
    2. ' args' → logprob: -2.25278902053833
    3. ' solve' → logprob: -2.50278902053833
    4. ' partial' → logprob: -3.00278902053833
    5. ' factorial' → logprob: -3.25278902053833
    6. ' is' → logprob: -3.37778902053833
    7. ' binary' → logprob: -3.75278902053833
    8. 'main' → logprob: -3.87778902053833
    9. ' arg' → logprob: -3.87778902053833
    10. ' ceil' → logprob: -4.12778902053833

Token 270: '2' (ID: 17)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5035418272018433
    2. 'ha' → logprob: -1.0035418272018433
    3. 'hab' → logprob: -4.003541946411133
    4. 'has' → logprob: -5.253541946411133
    5. 'han' → logprob: -6.003541946411133
    6. '=' → logprob: -7.628541946411133
    7. 'hah' → logprob: -7.753541946411133
    8. 'haba' → logprob: -7.878541946411133
    9. 'hac' → logprob: -8.503541946411133
    10. 'hat' → logprob: -8.878541946411133

Token 271: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.3619164526462555
    2. 'os' → logprob: -1.361916422843933
    3. 'h' → logprob: -3.8619165420532227
    4. 'idx' → logprob: -4.111916542053223
    5. 'index' → logprob: -5.611916542053223
    6. 'int' → logprob: -5.986916542053223
    7. 'ha' → logprob: -7.611916542053223
    8. 'hs' → logprob: -7.611916542053223
    9. 'ho' → logprob: -7.861916542053223
    10. '_num' → logprob: -8.111916542053223

Token 272: '(c' (ID: 2410)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.01889677159488201
    2. '(' → logprob: -4.393896579742432
    3. '(char' → logprob: -6.518896579742432
    4. '(a' → logprob: -6.893896579742432
    5. '(x' → logprob: -7.268896579742432
    6. '(lambda' → logprob: -7.518896579742432
    7. '(c' → logprob: -7.643896579742432
    8. '(string' → logprob: -7.643896579742432
    9. '(letter' → logprob: -7.643896579742432
    10. '(ch' → logprob: -8.76889705657959

Token 273: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030389709398150444
    2. '):
' → logprob: -3.5303897857666016
    3. ')' → logprob: -7.530389785766602
    4. ' ):' → logprob: -9.780389785766602
    5. ':' → logprob: -10.780389785766602
    6. '=' → logprob: -12.280389785766602
    7. '   ' → logprob: -12.405389785766602
    8. 's' → logprob: -12.905389785766602
    9. '):

' → logprob: -13.280389785766602
    10. '(c' → logprob: -13.280389785766602

Token 274: ' cap' (ID: 2328)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.125161811709404
    2. ' base' → logprob: -3.50016188621521
    3. 'a' → logprob: -3.75016188621521
    4. 'upper' → logprob: -4.125161647796631
    5. 'lower' → logprob: -4.375161647796631
    6. 'ord' → logprob: -4.875161647796631
    7. 'b' → logprob: -5.125161647796631
    8. 'A' → logprob: -5.375161647796631
    9. 'offset' → logprob: -5.500161647796631
    10. 'cap' → logprob: -5.750161647796631

Token 275: '=False' (ID: 12148)
  Prédit: 'ital'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ital' → logprob: -0.5551148056983948
    2. '=' → logprob: -1.93011474609375
    3. '=True' → logprob: -2.05511474609375
    4. '=False' → logprob: -2.18011474609375
    5. 'italize' → logprob: -4.18011474609375
    6. '):' → logprob: -4.55511474609375
    7. 'itals' → logprob: -5.43011474609375
    8. '=None' → logprob: -5.55511474609375
    9. 't' → logprob: -6.80511474609375
    10. '):
' → logprob: -6.80511474609375

Token 276: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003665275638923049
    2. '):
' → logprob: -5.628665447235107
    3. ':' → logprob: -10.25366497039795
    4. ')' → logprob: -10.75366497039795
    5. '   ' → logprob: -12.62866497039795
    6. ',' → logprob: -12.75366497039795
    7. '):
' → logprob: -13.75366497039795
    8. ' ):' → logprob: -14.25366497039795
    9. '=' → logprob: -14.87866497039795
    10. ' :' → logprob: -16.253665924072266

Token 277: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15746472775936127
    2. ' return' → logprob: -2.0324647426605225
    3. ' if' → logprob: -4.282464504241943
    4. 'return' → logprob: -7.907464504241943
    5. '	return' → logprob: -8.907464981079102
    6. '    ' → logprob: -9.157464981079102
    7. 'if' → logprob: -9.782464981079102
    8. '   ' → logprob: -10.032464981079102
    9. '<|end|>' → logprob: -10.157464981079102
    10. ' ' → logprob: -10.532464981079102

Token 278: ' (' (ID: 350)
  Prédit: ' ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.5849977731704712
    2. 'ord' → logprob: -0.8349977731704712
    3. '(ord' → logprob: -4.709997653961182
    4. ' (' → logprob: -12.20999813079834
    5. ' ' → logprob: -13.08499813079834
    6. '0' → logprob: -13.45999813079834
    7. '(' → logprob: -13.70999813079834
    8. '26' → logprob: -14.20999813079834
    9. 'c' → logprob: -14.45999813079834
    10. '1' → logprob: -14.95999813079834

Token 279: 'lambda' (ID: 35280)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.024259204044938087
    2. ' ord' → logprob: -3.774259090423584
    3. '(ord' → logprob: -6.899259090423584
    4. '10' → logprob: -13.649259567260742
    5. '26' → logprob: -14.399259567260742
    6. '
' → logprob: -14.399259567260742
    7. '65' → logprob: -14.649259567260742
    8. '0' → logprob: -15.024259567260742
    9. 'c' → logprob: -15.274259567260742
    10. '_ord' → logprob: -15.399259567260742

Token 280: ' o' (ID: 293)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.4486704468727112
    2. ' ord' → logprob: -1.5736703872680664
    3. '(ord' → logprob: -2.4486703872680664
    4. 'x' → logprob: -3.1986703872680664
    5. 'c' → logprob: -4.448670387268066
    6. ' x' → logprob: -5.448670387268066
    7. ' c' → logprob: -6.198670387268066
    8. '0' → logprob: -6.573670387268066
    9. 'lambda' → logprob: -6.698670387268066
    10. '   ' → logprob: -6.948670387268066

Token 281: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0420190766453743
    2. 'ord' → logprob: -3.7920191287994385
    3. 'r' → logprob: -4.167018890380859
    4. '(ord' → logprob: -6.667018890380859
    5. ' :' → logprob: -7.292018890380859
    6. ' ord' → logprob: -7.917018890380859
    7. ':r' → logprob: -8.41701889038086
    8. ':o' → logprob: -8.54201889038086
    9. ':c' → logprob: -8.66701889038086
    10. 'c' → logprob: -10.04201889038086

Token 282: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.7146536707878113
    2. 'ord' → logprob: -0.7146536707878113
    3. ' ord' → logprob: -4.464653491973877
    4. '(o' → logprob: -5.714653491973877
    5. '(ord' → logprob: -5.714653491973877
    6. ' o' → logprob: -5.839653491973877
    7. '(' → logprob: -9.839653968811035
    8. '0' → logprob: -10.214653968811035
    9. ' (' → logprob: -10.464653968811035
    10. '{o' → logprob: -10.839653968811035

Token 283: ' -' (ID: 533)
  Prédit: '(ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.5391462445259094
    2. ':' → logprob: -1.4141461849212646
    3. 'ord' → logprob: -2.4141461849212646
    4. '-' → logprob: -3.7891461849212646
    5. 'if' → logprob: -4.164146423339844
    6. ' if' → logprob: -4.289146423339844
    7. ' ord' → logprob: -5.414146423339844
    8. '(c' → logprob: -5.539146423339844
    9. '[' → logprob: -5.789146423339844
    10. '(o' → logprob: -5.789146423339844

Token 284: ' ' (ID: 220)
  Prédit: '65'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '65' → logprob: -0.04810100421309471
    2. '(' → logprob: -3.9231009483337402
    3. '97' → logprob: -4.79810094833374
    4. '64' → logprob: -4.92310094833374
    5. '(ord' → logprob: -5.42310094833374
    6. 'ord' → logprob: -5.67310094833374
    7. '96' → logprob: -5.92310094833374
    8. ' (' → logprob: -7.67310094833374
    9. '48' → logprob: -8.173101425170898
    10. ' ' → logprob: -8.423101425170898

Token 285: '97' (ID: 5170)
  Prédit: '65'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '65' → logprob: -0.013638240285217762
    2. '(' → logprob: -4.638638019561768
    3. '97' → logprob: -6.638638019561768
    4. 'ord' → logprob: -6.888638019561768
    5. '64' → logprob: -7.138638019561768
    6. '(ord' → logprob: -7.388638019561768
    7. ' (' → logprob: -9.638638496398926
    8. ' ' → logprob: -10.888638496398926
    9. '96' → logprob: -11.138638496398926
    10. '48' → logprob: -12.138638496398926

Token 286: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28178656101226807
    2. 'if' → logprob: -1.406786561012268
    3. ')(' → logprob: -7.5317864418029785
    4. '+' → logprob: -9.531786918640137
    5. '	if' → logprob: -11.656786918640137
    6. ')' → logprob: -12.031786918640137
    7. ' +' → logprob: -12.406786918640137
    8. ' ' → logprob: -12.406786918640137
    9. '   ' → logprob: -13.781786918640137
    10. '
' → logprob: -14.656786918640137

Token 287: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.09525618702173233
    2. ' not' → logprob: -2.5952560901641846
    3. 'cap' → logprob: -4.345256328582764
    4. '(not' → logprob: -5.845256328582764
    5. '(cap' → logprob: -8.970255851745605
    6. 'o' → logprob: -9.345255851745605
    7. '(' → logprob: -10.345255851745605
    8. ' cap' → logprob: -10.595255851745605
    9. '(o' → logprob: -10.595255851745605
    10. 'ord' → logprob: -10.595255851745605

Token 288: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -5.180879816180095e-05
    2. ' cap' → logprob: -10.125051498413086
    3. '(cap' → logprob: -11.375051498413086
    4. '(' → logprob: -16.125051498413086
    5. 'caps' → logprob: -17.250051498413086
    6. '
' → logprob: -17.750051498413086
    7. 'o' → logprob: -18.500051498413086
    8. 'not' → logprob: -18.500051498413086
    9. 'c' → logprob: -18.625051498413086
    10. ' ' → logprob: -19.250051498413086

Token 289: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2519832253456116
    2. 'else' → logprob: -1.5019831657409668
    3. '	else' → logprob: -10.126983642578125
    4. ' ' → logprob: -11.876983642578125
    5. '   ' → logprob: -13.626983642578125
    6. 'e' → logprob: -14.001983642578125
    7. '32' → logprob: -14.126983642578125
    8. '_else' → logprob: -14.626983642578125
    9. '     ' → logprob: -15.001983642578125
    10. ' and' → logprob: -15.126983642578125

Token 290: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.007740073837339878
    2. ' o' → logprob: -4.882740020751953
    3. '(o' → logprob: -9.132740020751953
    4. '	o' → logprob: -11.132740020751953
    5. '
' → logprob: -12.632740020751953
    6. '   ' → logprob: -14.007740020751953
    7. 'ord' → logprob: -14.132740020751953
    8. '{o' → logprob: -14.257740020751953
    9. ' (' → logprob: -14.382740020751953
    10. 'O' → logprob: -14.382740020751953

Token 291: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07966440171003342
    2. '-' → logprob: -2.579664468765259
    3. '()-' → logprob: -8.07966423034668
    4. ' ' → logprob: -9.07966423034668
    5. '(c' → logprob: -9.20466423034668
    6. ')' → logprob: -9.32966423034668
    7. '(ord' → logprob: -10.20466423034668
    8. '()' → logprob: -11.07966423034668
    9. 'ord' → logprob: -11.32966423034668
    10. ')-' → logprob: -12.07966423034668

Token 292: ' ' (ID: 220)
  Prédit: '65'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '65' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '6' → logprob: -17.500011444091797
    4. 'ord' → logprob: -18.000011444091797
    5. '64' → logprob: -18.375011444091797
    6. 'A' → logprob: -18.500011444091797
    7. '
' → logprob: -20.875011444091797
    8. '   ' → logprob: -21.250011444091797
    9. '66' → logprob: -21.375011444091797
    10. 'is' → logprob: -21.625011444091797

Token 293: '65' (ID: 3898)
  Prédit: '65'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '65' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.75
    3. '6' → logprob: -16.875
    4. 'ord' → logprob: -17.125
    5. 'A' → logprob: -17.25
    6. '64' → logprob: -17.5
    7. '
' → logprob: -19.875
    8. '```' → logprob: -20.375
    9. '41' → logprob: -21.0
    10. '_A' → logprob: -21.0

Token 294: ')(' (ID: 4898)
  Prédit: ')('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.00022725824965164065
    2. ' )(' → logprob: -8.500226974487305
    3. '(ord' → logprob: -11.625226974487305
    4. ')(__' → logprob: -12.125226974487305
    5. ')' → logprob: -12.375226974487305
    6. ')((' → logprob: -12.875226974487305
    7. ')(
' → logprob: -13.125226974487305
    8. ')("' → logprob: -15.875226974487305
    9. '   ' → logprob: -16.000226974487305
    10. ')(_' → logprob: -16.125226974487305

Token 295: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.0003361774142831564
    2. ' ord' → logprob: -8.000336647033691
    3. '(ord' → logprob: -14.250336647033691
    4. 'ords' → logprob: -16.750335693359375
    5. '   ' → logprob: -18.375335693359375
    6. 'orde' → logprob: -18.875335693359375
    7. '_ord' → logprob: -19.375335693359375
    8. ' ' → logprob: -19.500335693359375
    9. 'or' → logprob: -19.750335693359375
    10. '```' → logprob: -19.875335693359375

Token 296: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0001454955490771681
    2. 'c' → logprob: -9.37514591217041
    3. ')c' → logprob: -9.75014591217041
    4. '(' → logprob: -13.37514591217041
    5. ')' → logprob: -15.12514591217041
    6. '	c' → logprob: -15.62514591217041
    7. ',c' → logprob: -16.750144958496094
    8. '<|end|>' → logprob: -16.875144958496094
    9. ')(' → logprob: -17.000144958496094
    10. '(
' → logprob: -17.375144958496094

Token 297: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0031960124615579844
    2. ')' → logprob: -5.8781962394714355
    3. '()))' → logprob: -8.503195762634277
    4. ' ))' → logprob: -8.753195762634277
    5. ')))' → logprob: -11.378195762634277
    6. '[' → logprob: -12.378195762634277
    7. ' ' → logprob: -12.378195762634277
    8. '))
' → logprob: -12.628195762634277
    9. ' )' → logprob: -13.003195762634277
    10. '())' → logprob: -13.753195762634277

Token 298: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2152480185031891
    2. '<|end|>' → logprob: -1.9652479887008667
    3. ')' → logprob: -2.9652481079101562
    4. '_' → logprob: -7.090248107910156
    5. '#' → logprob: -7.840248107910156
    6. '
' → logprob: -8.215248107910156
    7. ' def' → logprob: -9.590248107910156
    8. '```' → logprob: -9.840248107910156
    9. '<|end|>' → logprob: -9.840248107910156
    10. ',' → logprob: -10.090248107910156

Token 299: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.021085968241095543
    2. 'alp' → logprob: -4.521085739135742
    3. 'chr' → logprob: -6.396085739135742
    4. 'char' → logprob: -6.396085739135742
    5. 'nums' → logprob: -7.146085739135742
    6. 'is' → logprob: -7.271085739135742
    7. 'alpha' → logprob: -7.396085739135742
    8. 'al' → logprob: -8.021085739135742
    9. 'alph' → logprob: -8.021085739135742
    10. 'n' → logprob: -8.146085739135742

Token 300: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010926496179308742
    2. 'to' → logprob: -9.125109672546387
    3. '_to' → logprob: -15.500109672546387
    4. ' to' → logprob: -17.12510871887207
    5. 't' → logprob: -17.37510871887207
    6. '_' → logprob: -17.62510871887207
    7. '₂' → logprob: -18.50010871887207
    8. '<|end|>' → logprob: -18.50010871887207
    9. '۲' → logprob: -18.62510871887207
    10. 'toa' → logprob: -18.75010871887207

Token 301: 'alp' (ID: 100669)
  Prédit: 'alp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alp' → logprob: -0.0002060436672763899
    2. 'al' → logprob: -8.750205993652344
    3. 'alpha' → logprob: -10.250205993652344
    4. 'alph' → logprob: -12.375205993652344
    5. '2' → logprob: -12.625205993652344
    6. 'alb' → logprob: -12.750205993652344
    7. ' alp' → logprob: -14.500205993652344
    8. 'alf' → logprob: -14.875205993652344
    9. 'a' → logprob: -15.125205993652344
    10. 'c' → logprob: -15.500205993652344

Token 302: '(i' (ID: 3649)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.08747708797454834
    2. '(' → logprob: -2.712477207183838
    3. '(lambda' → logprob: -4.712477207183838
    4. '=' → logprob: -6.212477207183838
    5. '(s' → logprob: -6.462477207183838
    6. '(n' → logprob: -6.462477207183838
    7. ' =' → logprob: -6.962477207183838
    8. '=lambda' → logprob: -7.212477207183838
    9. '(a' → logprob: -7.837477207183838
    10. '(
' → logprob: -8.21247673034668

Token 303: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05927537381649017
    2. ')' → logprob: -3.5592753887176514
    3. '):
' → logprob: -4.809275150299072
    4. ',' → logprob: -4.934275150299072
    5. '(' → logprob: -5.184275150299072
    6. '(i' → logprob: -6.434275150299072
    7. ')(' → logprob: -6.559275150299072
    8. ' ):' → logprob: -6.684275150299072
    9. '(c' → logprob: -7.059275150299072
    10. '(cap' → logprob: -7.684275150299072

Token 304: ' cap' (ID: 2328)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.21421049535274506
    2. ' lambda' → logprob: -1.8392105102539062
    3. 'cap' → logprob: -3.7142105102539062
    4. 'chr' → logprob: -5.589210510253906
    5. '=lambda' → logprob: -6.214210510253906
    6. ' cap' → logprob: -6.339210510253906
    7. '(lambda' → logprob: -6.464210510253906
    8. 'c' → logprob: -8.839210510253906
    9. 'False' → logprob: -8.964210510253906
    10. '(cap' → logprob: -10.339210510253906

Token 305: '=False' (ID: 12148)
  Prédit: '=False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=False' → logprob: -9.849109119386412e-06
    2. '=True' → logprob: -12.125009536743164
    3. '=' → logprob: -12.750009536743164
    4. '):' → logprob: -13.750009536743164
    5. '(False' → logprob: -15.125009536743164
    6. '):
' → logprob: -17.125009536743164
    7. ')' → logprob: -17.250009536743164
    8. ',' → logprob: -17.500009536743164
    9. 'False' → logprob: -17.625009536743164
    10. '=None' → logprob: -18.375009536743164

Token 306: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00010044389637187123
    2. '):
' → logprob: -9.500100135803223
    3. ' ):' → logprob: -10.625100135803223
    4. ')' → logprob: -14.875100135803223
    5. '):

' → logprob: -15.000100135803223
    6. ':' → logprob: -15.125100135803223
    7. '):
' → logprob: -15.875100135803223
    8. '   ' → logprob: -17.00010108947754
    9. '=' → logprob: -17.50010108947754
    10. ' ' → logprob: -17.62510108947754

Token 307: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.003200050676241517
    2. 'return' → logprob: -5.753200054168701
    3. '   ' → logprob: -11.003199577331543
    4. '	return' → logprob: -12.628199577331543
    5. ' ' → logprob: -14.003199577331543
    6. ' (' → logprob: -14.003199577331543
    7. '
' → logprob: -15.378199577331543
    8. ' if' → logprob: -16.12820053100586
    9. ' ' → logprob: -16.50320053100586
    10. '(return' → logprob: -16.62820053100586

Token 308: ' chr' (ID: 42767)
  Prédit: '(chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chr' → logprob: -0.39177218079566956
    2. 'chr' → logprob: -1.2667721509933472
    3. '(lambda' → logprob: -3.8917722702026367
    4. ' (' → logprob: -4.516772270202637
    5. ' chr' → logprob: -4.516772270202637
    6. '(' → logprob: -9.766772270202637
    7. 'lambda' → logprob: -10.016772270202637
    8. ' lambda' → logprob: -10.641772270202637
    9. ' ' → logprob: -12.516772270202637
    10. '_chr' → logprob: -13.141772270202637

Token 309: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03151855990290642
    2. '(' → logprob: -3.5315184593200684
    3. '((' → logprob: -6.531518459320068
    4. '65' → logprob: -8.656518936157227
    5. 'i' → logprob: -9.156518936157227
    6. '(ord' → logprob: -11.031518936157227
    7. '97' → logprob: -12.156518936157227
    8. ' (' → logprob: -13.031518936157227
    9. ' i' → logprob: -13.406518936157227
    10. '(int' → logprob: -13.656518936157227

Token 310: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.020690780133008957
    2. ' +' → logprob: -3.895690679550171
    3. '+(' → logprob: -9.52069091796875
    4. '97' → logprob: -9.64569091796875
    5. '```' → logprob: -12.64569091796875
    6. ' ' → logprob: -13.02069091796875
    7. 'ord' → logprob: -13.64569091796875
    8. '   ' → logprob: -13.89569091796875
    9. '(' → logprob: -14.02069091796875
    10. ')' → logprob: -14.52069091796875

Token 311: ' (' (ID: 350)
  Prédit: '65'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '65' → logprob: -0.4916260242462158
    2. '(' → logprob: -1.1166260242462158
    3. ' (' → logprob: -2.991626024246216
    4. '97' → logprob: -4.741625785827637
    5. ' ' → logprob: -6.241625785827637
    6. '(ord' → logprob: -9.991625785827637
    7. '(cap' → logprob: -10.366625785827637
    8. '```' → logprob: -11.991625785827637
    9. '(A' → logprob: -12.366625785827637
    10. 'uppercase' → logprob: -12.741625785827637

Token 312: '65' (ID: 3898)
  Prédit: '65'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '65' → logprob: -0.007337434217333794
    2. '(' → logprob: -5.13233757019043
    3. ' ' → logprob: -7.00733757019043
    4. ' (' → logprob: -8.00733757019043
    5. '97' → logprob: -8.75733757019043
    6. '0' → logprob: -12.75733757019043
    7. '67' → logprob: -13.50733757019043
    8. '(A' → logprob: -13.50733757019043
    9. '66' → logprob: -14.13233757019043
    10. '(
' → logprob: -14.13233757019043

Token 313: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3132792115211487
    2. 'if' → logprob: -1.313279151916504
    3. '0' → logprob: -11.938279151916504
    4. ')' → logprob: -12.313279151916504
    5. '```' → logprob: -13.813279151916504
    6. '<|end|>' → logprob: -13.938279151916504
    7. '   ' → logprob: -14.063279151916504
    8. '	if' → logprob: -14.063279151916504
    9. ' ' → logprob: -14.063279151916504
    10. '
' → logprob: -15.063279151916504

Token 314: ' cap' (ID: 2328)
  Prédit: 'cap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cap' → logprob: -0.04866469278931618
    2. ' cap' → logprob: -3.0486648082733154
    3. '(cap' → logprob: -9.548665046691895
    4. ' not' → logprob: -13.298665046691895
    5. '1' → logprob: -13.423665046691895
    6. '0' → logprob: -14.298665046691895
    7. 'caps' → logprob: -14.423665046691895
    8. 'not' → logprob: -14.798665046691895
    9. '65' → logprob: -15.048665046691895
    10. 'True' → logprob: -15.298665046691895

Token 315: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4740913212299347
    2. 'else' → logprob: -0.9740912914276123
    3. '	else' → logprob: -11.849091529846191
    4. '<|end|>' → logprob: -12.099091529846191
    5. ' ' → logprob: -13.474091529846191
    6. '   ' → logprob: -17.349090576171875
    7. '_else' → logprob: -17.349090576171875
    8. ')' → logprob: -17.474090576171875
    9. '==' → logprob: -17.724090576171875
    10. '0' → logprob: -18.099090576171875

Token 316: ' ' (ID: 220)
  Prédit: '97'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '96' → logprob: -16.50002098083496
    4. 'a' → logprob: -18.37502098083496
    5. '   ' → logprob: -18.75002098083496
    6. '```' → logprob: -18.87502098083496
    7. '097' → logprob: -20.50002098083496
    8. '  ' → logprob: -20.87502098083496
    9. '32' → logprob: -21.87502098083496
    10. '98' → logprob: -22.25002098083496

Token 317: '97' (ID: 5170)
  Prédit: '97'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. 'a' → logprob: -17.375
    4. '96' → logprob: -17.5
    5. '```' → logprob: -19.125
    6. '   ' → logprob: -20.0
    7. '097' → logprob: -20.875
    8. ''a' → logprob: -21.375
    9. '
' → logprob: -22.375
    10. '  ' → logprob: -22.625

Token 318: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. ' )' → logprob: -12.875004768371582
    3. '))' → logprob: -13.500004768371582
    4. ')#' → logprob: -16.375003814697266
    5. ')return' → logprob: -16.375003814697266
    6. ')}' → logprob: -16.375003814697266
    7. ')}}' → logprob: -16.875003814697266
    8. ')
' → logprob: -17.500003814697266
    9. '())' → logprob: -17.875003814697266
    10. '<|end|>' → logprob: -18.250003814697266

Token 319: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010119275189936161
    2. 'class' → logprob: -4.760119438171387
    3. '#' → logprob: -6.760119438171387
    4. '<|end|>' → logprob: -8.760119438171387
    5. 'from' → logprob: -10.260119438171387
    6. '\' → logprob: -10.385119438171387
    7. 'import' → logprob: -11.635119438171387
    8. '
' → logprob: -11.635119438171387
    9. '<|end|>' → logprob: -11.635119438171387
    10. '```' → logprob: -11.885119438171387

Token 320: ' mat' (ID: 2450)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -2.1901164054870605
    2. 'int' → logprob: -2.6901164054870605
    3. 'mod' → logprob: -3.1901164054870605
    4. 'g' → logprob: -3.3151164054870605
    5. 'num' → logprob: -3.4401164054870605
    6. 'div' → logprob: -3.4401164054870605
    7. 's' → logprob: -3.4401164054870605
    8. 'factor' → logprob: -3.4401164054870605
    9. 'fact' → logprob: -3.4401164054870605
    10. 'bit' → logprob: -3.5651164054870605

Token 321: 'mat' (ID: 8872)
  Prédit: 'rix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rix' → logprob: -0.23822136223316193
    2. 'rices' → logprob: -1.7382214069366455
    3. 'def' → logprob: -5.488221168518066
    4. 'r' → logprob: -5.488221168518066
    5. '_mul' → logprob: -5.988221168518066
    6. 'mul' → logprob: -6.113221168518066
    7. '_to' → logprob: -6.113221168518066
    8. 'ix' → logprob: -6.113221168518066
    9. 'plotlib' → logprob: -6.238221168518066
    10. 'rial' → logprob: -6.738221168518066

Token 322: '(A' (ID: 10706)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2329040765762329
    2. 'mul' → logprob: -2.4829039573669434
    3. '(A' → logprob: -2.7329039573669434
    4. '_mul' → logprob: -3.8579039573669434
    5. '(mat' → logprob: -3.9829039573669434
    6. '(m' → logprob: -4.857903957366943
    7. '(matrix' → logprob: -4.982903957366943
    8. '(*' → logprob: -6.232903957366943
    9. 'Mul' → logprob: -7.357903957366943
    10. '(' → logprob: -7.607903957366943

Token 323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004536696244031191
    2. ',B' → logprob: -5.5045366287231445
    3. ' ,' → logprob: -8.254536628723145
    4. ',A' → logprob: -9.254536628723145
    5. '):' → logprob: -9.879536628723145
    6. ',b' → logprob: -10.754536628723145
    7. ',
' → logprob: -11.379536628723145
    8. '[' → logprob: -12.004536628723145
    9. 'def' → logprob: -13.254536628723145
    10. 'B' → logprob: -13.629536628723145

Token 324: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.009765418246388435
    2. ' B' → logprob: -4.634765625
    3. 'b' → logprob: -12.759765625
    4. '	B' → logprob: -13.634765625
    5. 'def' → logprob: -14.009765625
    6. ')' → logprob: -14.009765625
    7. ' ' → logprob: -14.259765625
    8. 'lambda' → logprob: -14.509765625
    9. '   ' → logprob: -14.634765625
    10. '  ' → logprob: -15.009765625

Token 325: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001350710866972804
    2. '):
' → logprob: -6.8763508796691895
    3. ',' → logprob: -8.251350402832031
    4. ' ):' → logprob: -10.126350402832031
    5. ')' → logprob: -11.376350402832031
    6. '):
' → logprob: -13.001350402832031
    7. ':' → logprob: -13.751350402832031
    8. 'def' → logprob: -15.626350402832031
    9. '**' → logprob: -15.626350402832031
    10. '   ' → logprob: -15.751350402832031

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12172286957502365
    2. ' return' → logprob: -2.746722936630249
    3. 'return' → logprob: -3.371722936630249
    4. 'n' → logprob: -4.99672269821167
    5. '[' → logprob: -5.24672269821167
    6. ' n' → logprob: -6.24672269821167
    7. 'result' → logprob: -7.49672269821167
    8. ' result' → logprob: -8.371723175048828
    9. ' [' → logprob: -8.371723175048828
    10. '(' → logprob: -8.621723175048828

Token 327: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6407838463783264
    2. 'r' → logprob: -1.2657837867736816
    3. 'n' → logprob: -2.2657837867736816
    4. 'm' → logprob: -4.015783786773682
    5. 'len' → logprob: -4.140783786773682
    6. 'rows' → logprob: -4.390783786773682
    7. 'res' → logprob: -4.640783786773682
    8. '[[' → logprob: -4.890783786773682
    9. ' return' → logprob: -5.265783786773682
    10. 'M' → logprob: -5.390783786773682

Token 328: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0020384411327540874
    2. '[' → logprob: -6.252038478851318
    3. '[
' → logprob: -9.25203800201416
    4. '[list' → logprob: -12.00203800201416
    5. ' [[' → logprob: -12.25203800201416
    6. 'list' → logprob: -13.00203800201416
    7. '[['' → logprob: -15.37703800201416
    8. '[a' → logprob: -16.127038955688477
    9. '[A' → logprob: -16.627038955688477
    10. '[n' → logprob: -16.752038955688477

Token 329: 'reduce' (ID: 49119)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.001291428110562265
    2. ' sum' → logprob: -6.751291275024414
    3. 'reduce' → logprob: -9.251291275024414
    4. '(sum' → logprob: -11.501291275024414
    5. 'dot' → logprob: -12.251291275024414
    6. 'mul' → logprob: -12.376291275024414
    7. '
' → logprob: -12.501291275024414
    8. 'add' → logprob: -14.376291275024414
    9. ' ' → logprob: -14.626291275024414
    10. '   ' → logprob: -14.876291275024414

Token 330: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.29597118496894836
    2. '(m' → logprob: -1.545971155166626
    3. '(lambda' → logprob: -3.295971155166626
    4. 'mul' → logprob: -5.420971393585205
    5. 'add' → logprob: -6.920971393585205
    6. '(operator' → logprob: -8.045970916748047
    7. '(' → logprob: -8.420970916748047
    8. '(
' → logprob: -10.170970916748047
    9. '   ' → logprob: -10.795970916748047
    10. '```' → logprob: -11.045970916748047

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011028486303985119
    2. ',[' → logprob: -5.011028289794922
    3. ',map' → logprob: -5.636028289794922
    4. ',(' → logprob: -8.261028289794922
    5. ' ,' → logprob: -8.386028289794922
    6. ',
' → logprob: -9.511028289794922
    7. ',m' → logprob: -10.136028289794922
    8. ' ,[' → logprob: -10.261028289794922
    9. ',row' → logprob: -10.886028289794922
    10. '   ' → logprob: -11.136028289794922

Token 332: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.40479961037635803
    2. 'st' → logprob: -1.1547995805740356
    3. '(st' → logprob: -4.279799461364746
    4. '(map' → logprob: -5.654799461364746
    5. '(a' → logprob: -9.279799461364746
    6. 'mul' → logprob: -9.404799461364746
    7. '[' → logprob: -9.654799461364746
    8. '[a' → logprob: -10.279799461364746
    9. ' st' → logprob: -10.404799461364746
    10. ' map' → logprob: -10.404799461364746

Token 333: '(m' (ID: 2145)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.0003218766360078007
    2. '(m' → logprob: -8.125322341918945
    3. ' mul' → logprob: -11.250322341918945
    4. 'partial' → logprob: -12.625322341918945
    5. 'lambda' → logprob: -12.750322341918945
    6. 'm' → logprob: -12.875322341918945
    7. '(lambda' → logprob: -13.125322341918945
    8. 'mu' → logprob: -15.000322341918945
    9. 'operator' → logprob: -15.000322341918945
    10. '(' → logprob: -15.125322341918945

Token 334: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -7.896309739408025e-07
    2. 'ult' → logprob: -14.250000953674316
    3. '<ul' → logprob: -18.0
    4. 'ул' → logprob: -18.125
    5. 'u' → logprob: -18.75
    6. ' ul' → logprob: -19.375
    7. 'ulm' → logprob: -19.5
    8. 'at' → logprob: -19.875
    9. 'ultiply' → logprob: -20.5
    10. 'mul' → logprob: -21.375

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02480836771428585
    2. '(lambda' → logprob: -4.774808406829834
    3. '(x' → logprob: -5.899808406829834
    4. 'row' → logprob: -5.899808406829834
    5. 'lambda' → logprob: -6.149808406829834
    6. ',row' → logprob: -6.274808406829834
    7. '   ' → logprob: -7.024808406829834
    8. 'xy' → logprob: -7.149808406829834
    9. '))' → logprob: -7.274808406829834
    10. '(a' → logprob: -7.399808406829834

Token 336: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.36078330874443054
    2. 'row' → logprob: -1.485783338546753
    3. 'r' → logprob: -3.235783338546753
    4. 'ar' → logprob: -3.610783338546753
    5. 'x' → logprob: -6.235783100128174
    6. ' a' → logprob: -6.485783100128174
    7. '(a' → logprob: -6.485783100128174
    8. 'ra' → logprob: -6.735783100128174
    9. ' row' → logprob: -6.985783100128174
    10. '[a' → logprob: -7.360783100128174

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6768445372581482
    2. 'row' → logprob: -1.176844596862793
    3. ',b' → logprob: -2.676844596862793
    4. 'r' → logprob: -2.926844596862793
    5. 'b' → logprob: -4.176844596862793
    6. '_row' → logprob: -4.551844596862793
    7. ',row' → logprob: -4.551844596862793
    8. ',r' → logprob: -4.801844596862793
    9. 'A' → logprob: -5.301844596862793
    10. '(row' → logprob: -5.801844596862793

Token 338: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003399313660338521
    2. ' b' → logprob: -5.75339937210083
    3. 'bs' → logprob: -9.003398895263672
    4. '[b' → logprob: -10.628398895263672
    5. 'col' → logprob: -10.753398895263672
    6. 'row' → logprob: -10.878398895263672
    7. '(b' → logprob: -11.753398895263672
    8. 'bc' → logprob: -11.753398895263672
    9. 'bt' → logprob: -12.878398895263672
    10. 'br' → logprob: -13.128398895263672

Token 339: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4390784800052643
    2. 'col' → logprob: -1.814078450202942
    3. '_col' → logprob: -1.939078450202942
    4. 't' → logprob: -3.6890785694122314
    5. ')' → logprob: -4.439078330993652
    6. '_row' → logprob: -5.314078330993652
    7. 'row' → logprob: -6.564078330993652
    8. 'column' → logprob: -6.689078330993652
    9. '_column' → logprob: -6.689078330993652
    10. '_t' → logprob: -6.814078330993652

Token 340: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026729601086117327
    2. '[' → logprob: -9.000267028808594
    3. ' ' → logprob: -9.000267028808594
    4. '[]' → logprob: -11.375267028808594
    5. '[])' → logprob: -12.875267028808594
    6. ')' → logprob: -12.875267028808594
    7. '[]
' → logprob: -13.250267028808594
    8. ' [' → logprob: -14.375267028808594
    9. '  ' → logprob: -14.750267028808594
    10. '   ' → logprob: -15.250267028808594

Token 341: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.982165698194876e-05
    2. '[' → logprob: -9.625080108642578
    3. '[]' → logprob: -11.750080108642578
    4. ' ' → logprob: -12.875080108642578
    5. '[])' → logprob: -13.500080108642578
    6. ')' → logprob: -14.125080108642578
    7. '[]
' → logprob: -14.500080108642578
    8. 'Decimal' → logprob: -15.125080108642578
    9. ' [' → logprob: -16.375080108642578
    10. '[])
' → logprob: -16.875080108642578

Token 342: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013119110371917486
    2. ' )' → logprob: -9.375131607055664
    3. '))' → logprob: -10.125131607055664
    4. ')
' → logprob: -12.750131607055664
    5. '   ' → logprob: -13.250131607055664
    6. 'for' → logprob: -14.875131607055664
    7. '  ' → logprob: -15.125131607055664
    8. '    ' → logprob: -15.625131607055664
    9. '])' → logprob: -15.750131607055664
    10. ' ' → logprob: -16.125131607055664

Token 343: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05378980189561844
    2. 'for' → logprob: -3.3037898540496826
    3. ')' → logprob: -4.3037896156311035
    4. '   ' → logprob: -7.5537896156311035
    5. '        ' → logprob: -7.9287896156311035
    6. '       ' → logprob: -8.053790092468262
    7. '    ' → logprob: -8.178790092468262
    8. '           ' → logprob: -8.553790092468262
    9. '          ' → logprob: -8.928790092468262
    10. '            ' → logprob: -9.803790092468262

Token 344: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2519756853580475
    2. ' b' → logprob: -1.501975655555725
    3. ' range' → logprob: -10.876976013183594
    4. 'range' → logprob: -11.251976013183594
    5. 'a' → logprob: -12.501976013183594
    6. '[b' → logprob: -12.626976013183594
    7. '	b' → logprob: -13.001976013183594
    8. '_b' → logprob: -13.501976013183594
    9. '(b' → logprob: -13.751976013183594
    10. ' a' → logprob: -14.501976013183594

Token 345: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10021033883094788
    2. ' in' → logprob: -2.350210428237915
    3. ')' → logprob: -13.725210189819336
    4. ' ' → logprob: -13.850210189819336
    5. 'n' → logprob: -14.600210189819336
    6. '[' → logprob: -15.475210189819336
    7. '
' → logprob: -15.725210189819336
    8. 'zip' → logprob: -16.100210189819336
    9. '[::-' → logprob: -16.100210189819336
    10. 's' → logprob: -16.225210189819336

Token 346: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.011050889268517494
    2. ' zip' → logprob: -4.511050701141357
    3. '(zip' → logprob: -12.761051177978516
    4. 'map' → logprob: -16.386051177978516
    5. '.zip' → logprob: -17.511051177978516
    6. ' ' → logprob: -18.136051177978516
    7. 'range' → logprob: -18.636051177978516
    8. '
' → logprob: -18.636051177978516
    9. 'transpose' → logprob: -18.761051177978516
    10. '   ' → logprob: -19.136051177978516

Token 347: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -1.7432603272027336e-06
    2. '(*)' → logprob: -13.500001907348633
    3. '(*(' → logprob: -15.250001907348633
    4. '(b' → logprob: -18.375001907348633
    5. '((*' → logprob: -18.500001907348633
    6. '(zip' → logprob: -19.000001907348633
    7. '(' → logprob: -20.500001907348633
    8. ' (*' → logprob: -20.875001907348633
    9. '*' → logprob: -21.000001907348633
    10. '(row' → logprob: -21.750001907348633

Token 348: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -4.0722858102526516e-05
    2. ' B' → logprob: -10.125041007995605
    3. 'zip' → logprob: -15.125041007995605
    4. ' ' → logprob: -16.12504005432129
    5. 'b' → logprob: -16.50004005432129
    6. '   ' → logprob: -16.87504005432129
    7. '(B' → logprob: -17.37504005432129
    8. 'transpose' → logprob: -17.37504005432129
    9. ')' → logprob: -17.75004005432129
    10. '	B' → logprob: -18.12504005432129

Token 349: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.073596548754722e-05
    2. '   ' → logprob: -10.62505054473877
    3. ')' → logprob: -11.62505054473877
    4. ')]
' → logprob: -11.87505054473877
    5. ']' → logprob: -12.12505054473877
    6. ' )' → logprob: -13.12505054473877
    7. ' ' → logprob: -14.25005054473877
    8. '       ' → logprob: -14.50005054473877
    9. '))' → logprob: -15.25005054473877
    10. 'a' → logprob: -15.37505054473877

Token 350: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01779634691774845
    2. '   ' → logprob: -4.517796516418457
    3. ' for' → logprob: -5.642796516418457
    4. '       ' → logprob: -6.892796516418457
    5. ' ]' → logprob: -6.892796516418457
    6. 'for' → logprob: -7.017796516418457
    7. ')' → logprob: -9.142796516418457
    8. '    ' → logprob: -10.267796516418457
    9. ' ' → logprob: -11.017796516418457
    10. '])' → logprob: -11.142796516418457

Token 351: ' a' (ID: 261)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0016638736706227064
    2. 'a' → logprob: -6.626663684844971
    3. ' A' → logprob: -8.001664161682129
    4. '	A' → logprob: -14.126664161682129
    5. 'range' → logprob: -14.251664161682129
    6. 'row' → logprob: -14.876664161682129
    7. ' a' → logprob: -15.376664161682129
    8. '   ' → logprob: -15.626664161682129
    9. '  ' → logprob: -16.126663208007812
    10. '
' → logprob: -16.251663208007812

Token 352: ' in' (ID: 306)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.016368646174669266
    2. ' A' → logprob: -4.266368865966797
    3. ' in' → logprob: -6.141368865966797
    4. 'in' → logprob: -9.891368865966797
    5. ')' → logprob: -16.766368865966797
    6. '(A' → logprob: -16.766368865966797
    7. ']' → logprob: -17.266368865966797
    8. ',A' → logprob: -17.641368865966797
    9. '	A' → logprob: -17.641368865966797
    10. ',' → logprob: -18.016368865966797

Token 353: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.5577775128767826e-06
    2. ' A' → logprob: -12.125005722045898
    3. '	A' → logprob: -19.7500057220459
    4. '(A' → logprob: -21.1250057220459
    5. 'Ａ' → logprob: -21.3750057220459
    6. 'a' → logprob: -21.7500057220459
    7. '*A' → logprob: -22.1250057220459
    8. ')' → logprob: -22.1250057220459
    9. '
' → logprob: -22.2500057220459
    10. ' ' → logprob: -22.6250057220459

Token 354: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00023059594968799502
    2. ')]' → logprob: -8.50023078918457
    3. ' ]' → logprob: -11.00023078918457
    4. '])' → logprob: -13.00023078918457
    5. '<|end|>' → logprob: -13.25023078918457
    6. ']]' → logprob: -13.50023078918457
    7. ')' → logprob: -13.75023078918457
    8. '()]' → logprob: -13.87523078918457
    9. ']
' → logprob: -14.00023078918457
    10. ']]]' → logprob: -14.62523078918457

Token 355: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6666709780693054
    2. '<|end|>' → logprob: -0.7916709780693054
    3. '
' → logprob: -4.166670799255371
    4. ')' → logprob: -4.291670799255371
    5. '#' → logprob: -6.541670799255371
    6. '<|end|>' → logprob: -6.666670799255371
    7. ']' → logprob: -7.791670799255371
    8. '```' → logprob: -8.166670799255371
    9. '[' → logprob: -8.791670799255371
    10. ' def' → logprob: -8.916670799255371

Token 356: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.06103301793336868
    2. ' mat' → logprob: -2.936033010482788
    3. 'main' → logprob: -6.061033248901367
    4. 'pow' → logprob: -6.311033248901367
    5. 'matrix' → logprob: -8.811033248901367
    6. ' main' → logprob: -8.811033248901367
    7. 'solve' → logprob: -8.811033248901367
    8. 'factor' → logprob: -9.061033248901367
    9. 'transpose' → logprob: -9.311033248901367
    10. 'fact' → logprob: -9.436033248901367

Token 357: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.062208328396081924
    2. 'mul' → logprob: -2.812208414077759
    3. 'sub' → logprob: -9.68720817565918
    4. 'vect' → logprob: -9.93720817565918
    5. 'mult' → logprob: -10.43720817565918
    6. 'mat' → logprob: -10.56220817565918
    7. '
' → logprob: -10.93720817565918
    8. 'transpose' → logprob: -11.06220817565918
    9. '   ' → logprob: -11.68720817565918
    10. '_vec' → logprob: -11.93720817565918

Token 358: '(M' (ID: 6103)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.006746281404048204
    2. '(M' → logprob: -5.006746292114258
    3. '(mat' → logprob: -10.881746292114258
    4. '(matrix' → logprob: -12.256746292114258
    5. '(Matrix' → logprob: -12.881746292114258
    6. '(' → logprob: -12.881746292114258
    7. '(Mat' → logprob: -13.756746292114258
    8. '(m' → logprob: -14.006746292114258
    9. '(V' → logprob: -15.756746292114258
    10. ' (' → logprob: -16.381746292114258

Token 359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016044863732531667
    2. ',M' → logprob: -7.2516045570373535
    3. ' ,' → logprob: -7.6266045570373535
    4. ',v' → logprob: -7.8766045570373535
    5. ',m' → logprob: -11.501604080200195
    6. '(M' → logprob: -12.001604080200195
    7. 'v' → logprob: -12.751604080200195
    8. ',V' → logprob: -13.501604080200195
    9. ',A' → logprob: -13.751604080200195
    10. '(' → logprob: -14.126604080200195

Token 360: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0012503541074693203
    2. ' v' → logprob: -6.751250267028809
    3. 'vec' → logprob: -9.876250267028809
    4. 'V' → logprob: -10.501250267028809
    5. 'x' → logprob: -15.251250267028809
    6. '	v' → logprob: -15.626250267028809
    7. ' V' → logprob: -16.126251220703125
    8. ' ' → logprob: -16.376251220703125
    9. ' vec' → logprob: -16.376251220703125
    10. '(v' → logprob: -16.376251220703125

Token 361: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006607849150896072
    2. '(M' → logprob: -5.756608009338379
    3. '):
' → logprob: -6.131608009338379
    4. ',' → logprob: -6.756608009338379
    5. ':' → logprob: -10.381608009338379
    6. ')' → logprob: -11.006608009338379
    7. '(m' → logprob: -11.131608009338379
    8. ']:' → logprob: -11.631608009338379
    9. ',M' → logprob: -12.631608009338379
    10. '   ' → logprob: -12.756608009338379

Token 362: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007747409865260124
    2. ' return' → logprob: -5.007747173309326
    3. '[' → logprob: -7.257747173309326
    4. '   ' → logprob: -8.257747650146484
    5. '[[' → logprob: -10.257747650146484
    6. '[
' → logprob: -11.382747650146484
    7. ':return' → logprob: -12.382747650146484
    8. '	return' → logprob: -12.507747650146484
    9. '[M' → logprob: -12.507747650146484
    10. '[m' → logprob: -13.007747650146484

Token 363: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.018254481256008148
    2. ' return' → logprob: -4.018254280090332
    3. '[' → logprob: -9.518254280090332
    4. '   ' → logprob: -10.518254280090332
    5. '[m' → logprob: -13.768254280090332
    6. '	return' → logprob: -14.768254280090332
    7. '[r' → logprob: -14.768254280090332
    8. ' [' → logprob: -14.893254280090332
    9. '[i' → logprob: -15.268254280090332
    10. ' ' → logprob: -15.393254280090332

Token 364: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01630355976521969
    2. '[list' → logprob: -4.766303539276123
    3. ' [' → logprob: -5.266303539276123
    4. '[m' → logprob: -6.016303539276123
    5. '[v' → logprob: -11.391304016113281
    6. '[get' → logprob: -11.516304016113281
    7. '[a' → logprob: -11.641304016113281
    8. '[result' → logprob: -11.766304016113281
    9. '[row' → logprob: -12.266304016113281
    10. '[to' → logprob: -13.266304016113281

Token 365: '(st' (ID: 4065)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.010264298878610134
    2. '(st' → logprob: -4.6352643966674805
    3. '(chain' → logprob: -7.8852643966674805
    4. '(zip' → logprob: -9.26026439666748
    5. '(mat' → logprob: -11.51026439666748
    6. '(' → logprob: -11.63526439666748
    7. '(m' → logprob: -12.01026439666748
    8. 'map' → logprob: -12.01026439666748
    9. '([' → logprob: -13.76026439666748
    10. '(re' → logprob: -14.26026439666748

Token 366: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -3.173704271830502e-06
    2. 'ar' → logprob: -13.37500286102295
    3. 'map' → logprob: -13.62500286102295
    4. 'arp' → logprob: -16.250003814697266
    5. 'a' → logprob: -16.875003814697266
    6. 'r' → logprob: -17.625003814697266
    7. 'ap' → logprob: -17.750003814697266
    8. ' arm' → logprob: -18.000003814697266
    9. 'armat' → logprob: -18.750003814697266
    10. '   ' → logprob: -19.000003814697266

Token 367: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.8624639324116288e-06
    2. 'ul' → logprob: -13.625001907348633
    3. 'at' → logprob: -15.000001907348633
    4. 'ult' → logprob: -16.875001907348633
    5. 'ultiply' → logprob: -16.875001907348633
    6. 'map' → logprob: -17.375001907348633
    7. 'api' → logprob: -18.000001907348633
    8. '
' → logprob: -18.125001907348633
    9. 'ath' → logprob: -18.500001907348633
    10. 'up' → logprob: -19.000001907348633

Token 368: '(lambda' (ID: 43341)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.014354708604514599
    2. '(add' → logprob: -4.639354705810547
    3. '(lambda' → logprob: -6.014354705810547
    4. 'mul' → logprob: -6.389354705810547
    5. '(operator' → logprob: -8.139354705810547
    6. 'add' → logprob: -9.764354705810547
    7. '   ' → logprob: -10.389354705810547
    8. '```' → logprob: -10.639354705810547
    9. '(' → logprob: -11.139354705810547
    10. '(
' → logprob: -11.264354705810547

Token 369: ' a' (ID: 261)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.4689655303955078
    2. 'a' → logprob: -2.093965530395508
    3. 'x' → logprob: -2.093965530395508
    4. 'f' → logprob: -2.343965530395508
    5. 'add' → logprob: -4.343965530395508
    6. 'lambda' → logprob: -4.468965530395508
    7. 'm' → logprob: -5.593965530395508
    8. ' f' → logprob: -7.343965530395508
    9. ' mul' → logprob: -7.843965530395508
    10. ' x' → logprob: -7.968965530395508

Token 370: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18078358471393585
    2. 'x' → logprob: -2.80578351020813
    3. ',v' → logprob: -2.80578351020813
    4. ',x' → logprob: -3.18078351020813
    5. ',b' → logprob: -6.930783748626709
    6. ',val' → logprob: -7.305783748626709
    7. 'v' → logprob: -7.680783748626709
    8. '   ' → logprob: -8.43078327178955
    9. 'c' → logprob: -9.68078327178955
    10. '_,' → logprob: -9.80578327178955

Token 371: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.15559683740139008
    2. 'x' → logprob: -2.1555967330932617
    3. 'mul' → logprob: -3.6555967330932617
    4. 'v' → logprob: -6.905596733093262
    5. 'a' → logprob: -8.155596733093262
    6. 'm' → logprob: -8.155596733093262
    7. 'u' → logprob: -8.405596733093262
    8. ' b' → logprob: -9.280596733093262
    9. 'lambda' → logprob: -9.530596733093262
    10. 'y' → logprob: -9.655596733093262

Token 372: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002485288307070732
    2. ',' → logprob: -6.627485275268555
    3. ' :' → logprob: -7.252485275268555
    4. ',a' → logprob: -8.127485275268555
    5. ':a' → logprob: -8.877485275268555
    6. 'a' → logprob: -12.127485275268555
    7. '   ' → logprob: -12.627485275268555
    8. '=' → logprob: -13.377485275268555
    9. ':m' → logprob: -14.127485275268555
    10. ',v' → logprob: -14.252485275268555

Token 373: ' sum' (ID: 4215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.015254530124366283
    2. 'add' → logprob: -4.640254497528076
    3. ' a' → logprob: -5.515254497528076
    4. 'mul' → logprob: -7.015254497528076
    5. ' add' → logprob: -7.765254497528076
    6. '   ' → logprob: -9.515254974365234
    7. ' mul' → logprob: -10.390254974365234
    8. ' ' → logprob: -10.765254974365234
    9. '  ' → logprob: -12.390254974365234
    10. 'reduce' → logprob: -13.140254974365234

Token 374: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6262980103492737
    2. '(map' → logprob: -1.126297950744629
    3. '(m' → logprob: -2.126297950744629
    4. '([' → logprob: -4.501297950744629
    5. '((' → logprob: -4.751297950744629
    6. 'mul' → logprob: -7.376297950744629
    7. '(x' → logprob: -7.626297950744629
    8. '(' → logprob: -8.001297950744629
    9. 'a' → logprob: -8.876297950744629
    10. '(add' → logprob: -8.876297950744629

Token 375: '*y' (ID: 83575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5836910605430603
    2. 'mul' → logprob: -1.458691120147705
    3. '(a' → logprob: -1.708691120147705
    4. '([' → logprob: -4.708691120147705
    5. '(map' → logprob: -4.833691120147705
    6. '(m' → logprob: -5.583691120147705
    7. '(x' → logprob: -6.208691120147705
    8. '(' → logprob: -6.583691120147705
    9. '[a' → logprob: -6.583691120147705
    10. '*a' → logprob: -6.958691120147705

Token 376: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4749855101108551
    2. 'for' → logprob: -0.9749854803085327
    3. ' ' → logprob: -7.599985599517822
    4. '	for' → logprob: -8.474985122680664
    5. '   ' → logprob: -8.974985122680664
    6. '  ' → logprob: -10.474985122680664
    7. '
' → logprob: -10.599985122680664
    8. '    ' → logprob: -12.224985122680664
    9. 'x' → logprob: -12.599985122680664
    10. ')' → logprob: -12.724985122680664

Token 377: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008683709427714348
    2. ' x' → logprob: -4.758683681488037
    3. '(x' → logprob: -10.258684158325195
    4. '	x' → logprob: -10.883684158325195
    5. ' ' → logprob: -12.508684158325195
    6. 'a' → logprob: -12.508684158325195
    7. '  ' → logprob: -12.508684158325195
    8. '   ' → logprob: -13.383684158325195
    9. ',x' → logprob: -13.508684158325195
    10. ',' → logprob: -14.508684158325195

Token 378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02381102554500103
    2. 'x' → logprob: -4.023810863494873
    3. ',x' → logprob: -5.523810863494873
    4. 'in' → logprob: -6.523810863494873
    5. ',y' → logprob: -9.773811340332031
    6. ' in' → logprob: -10.398811340332031
    7. 'a' → logprob: -10.773811340332031
    8. 'y' → logprob: -11.023811340332031
    9. ' ,' → logprob: -11.023811340332031
    10. ',b' → logprob: -11.148811340332031

Token 379: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0003392767102923244
    2. ' x' → logprob: -8.37533950805664
    3. 'y' → logprob: -9.25033950805664
    4. '(x' → logprob: -11.37533950805664
    5. ' y' → logprob: -15.37533950805664
    6. 'a' → logprob: -15.50033950805664
    7. '  ' → logprob: -15.75033950805664
    8. ' ' → logprob: -15.87533950805664
    9. '	x' → logprob: -16.37533950805664
    10. ',x' → logprob: -16.75033950805664

Token 380: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.14306938648223877
    2. ' in' → logprob: -2.018069267272949
    3. ',' → logprob: -8.26806926727295
    4. ' ' → logprob: -9.89306926727295
    5. '  ' → logprob: -10.01806926727295
    6. 'a' → logprob: -11.39306926727295
    7. ')' → logprob: -12.26806926727295
    8. '   ' → logprob: -12.76806926727295
    9. 'ine' → logprob: -12.89306926727295
    10. '
' → logprob: -12.89306926727295

Token 381: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.2264043539762497
    2. ' zip' → logprob: -1.6014043092727661
    3. '(zip' → logprob: -7.476404190063477
    4. 'pair' → logprob: -8.726404190063477
    5. 'x' → logprob: -9.851404190063477
    6. 'a' → logprob: -9.851404190063477
    7. '[' → logprob: -10.851404190063477
    8. 'chain' → logprob: -10.851404190063477
    9. ' pair' → logprob: -10.851404190063477
    10. '
' → logprob: -11.101404190063477

Token 382: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.0339031834737398e-05
    2. 'a' → logprob: -11.000020027160645
    3. '(' → logprob: -12.750020027160645
    4. '(
' → logprob: -16.00002098083496
    5. '   ' → logprob: -16.50002098083496
    6. ' (' → logprob: -16.50002098083496
    7. '
' → logprob: -16.50002098083496
    8. '

' → logprob: -16.75002098083496
    9. '  ' → logprob: -16.87502098083496
    10. '((' → logprob: -17.00002098083496

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05634412169456482
    2. ',v' → logprob: -2.9313440322875977
    3. ',b' → logprob: -6.806344032287598
    4. ' ,' → logprob: -9.056344032287598
    5. ',M' → logprob: -9.181344032287598
    6. 'v' → logprob: -9.306344032287598
    7. ',a' → logprob: -11.431344032287598
    8. ',m' → logprob: -11.431344032287598
    9. 'b' → logprob: -12.806344032287598
    10. '   ' → logprob: -13.181344032287598

Token 384: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0018888992490246892
    2. ' b' → logprob: -6.376888751983643
    3. 'v' → logprob: -8.6268892288208
    4. '   ' → logprob: -13.0018892288208
    5. ' v' → logprob: -13.1268892288208
    6. 'a' → logprob: -13.5018892288208
    7. '    ' → logprob: -13.8768892288208
    8. '  ' → logprob: -15.3768892288208
    9. 'M' → logprob: -15.6268892288208
    10. ' ' → logprob: -15.7518892288208

Token 385: ')),' (ID: 12098)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12884721159934998
    2. '),' → logprob: -2.503847122192383
    3. ',M' → logprob: -3.878847122192383
    4. ')),' → logprob: -4.503847122192383
    5. ',v' → logprob: -6.378847122192383
    6. 'v' → logprob: -6.503847122192383
    7. ')))' → logprob: -6.503847122192383
    8. ' ,' → logprob: -7.253847122192383
    9. ' M' → logprob: -7.878847122192383
    10. 'M' → logprob: -7.878847122192383

Token 386: ' zip' (ID: 16216)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0033933715894818306
    2. 'zip' → logprob: -5.753393173217773
    3. '[M' → logprob: -9.253393173217773
    4. ' M' → logprob: -9.503393173217773
    5. 'is' → logprob: -11.128393173217773
    6. ' zip' → logprob: -11.378393173217773
    7. '	M' → logprob: -12.378393173217773
    8. '(M' → logprob: -12.753393173217773
    9. '[' → logprob: -13.253393173217773
    10. ')' → logprob: -13.503393173217773

Token 387: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -3.4881879400927573e-05
    2. '(' → logprob: -10.375035285949707
    3. '(*' → logprob: -13.875035285949707
    4. '((' → logprob: -13.875035285949707
    5. ')' → logprob: -14.125035285949707
    6. '(
' → logprob: -15.375035285949707
    7. '   ' → logprob: -15.750035285949707
    8. ' (' → logprob: -16.12503433227539
    9. ',' → logprob: -16.50003433227539
    10. '(*(' → logprob: -16.87503433227539

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21813064813613892
    2. ',v' → logprob: -1.8431305885314941
    3. '(v' → logprob: -3.343130588531494
    4. 'v' → logprob: -7.343130588531494
    5. '(' → logprob: -7.593130588531494
    6. ' ,' → logprob: -8.093131065368652
    7. ',[' → logprob: -8.343131065368652
    8. ',
' → logprob: -8.718131065368652
    9. ',d' → logprob: -8.843131065368652
    10. ',(' → logprob: -9.218131065368652

Token 389: ' [' (ID: 723)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03591788187623024
    2. '[v' → logprob: -3.9109179973602295
    3. ' v' → logprob: -4.78591775894165
    4. '[' → logprob: -5.78591775894165
    5. ' [' → logprob: -6.66091775894165
    6. '[(' → logprob: -7.03591775894165
    7. '[[' → logprob: -7.16091775894165
    8. '(v' → logprob: -8.785918235778809
    9. ')' → logprob: -8.910918235778809
    10. 'repeat' → logprob: -9.035918235778809

Token 390: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0006439301068894565
    2. '[v' → logprob: -7.625643730163574
    3. '[' → logprob: -9.875643730163574
    4. '(v' → logprob: -10.500643730163574
    5. 'repeat' → logprob: -10.875643730163574
    6. '   ' → logprob: -11.625643730163574
    7. 'deep' → logprob: -11.625643730163574
    8. ' v' → logprob: -12.000643730163574
    9. ']' → logprob: -12.875643730163574
    10. 'cycle' → logprob: -12.875643730163574

Token 391: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.04342593997716904
    2. ']))' → logprob: -3.543426036834717
    3. ']' → logprob: -4.543426036834717
    4. ',' → logprob: -7.293426036834717
    5. ' for' → logprob: -7.293426036834717
    6. '])))' → logprob: -7.918426036834717
    7. 'for' → logprob: -8.293425559997559
    8. ']*(' → logprob: -8.418425559997559
    9. '   ' → logprob: -8.918425559997559
    10. '*' → logprob: -9.168425559997559

Token 392: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0013842822518199682
    2. '(len' → logprob: -6.876384258270264
    3. '1' → logprob: -8.251384735107422
    4. '2' → logprob: -9.751384735107422
    5. ' len' → logprob: -10.501384735107422
    6. '(' → logprob: -12.876384735107422
    7. '   ' → logprob: -14.501384735107422
    8. ' ' → logprob: -14.626384735107422
    9. '3' → logprob: -15.001384735107422
    10. '0' → logprob: -16.001384735107422

Token 393: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.18086127936840057
    2. '(v' → logprob: -1.805861234664917
    3. 'v' → logprob: -7.055861473083496
    4. 'M' → logprob: -8.805861473083496
    5. '(m' → logprob: -10.305861473083496
    6. '(' → logprob: -10.430861473083496
    7. '(a' → logprob: -10.555861473083496
    8. '((' → logprob: -12.180861473083496
    9. '([' → logprob: -13.055861473083496
    10. '[M' → logprob: -13.180861473083496

Token 394: '))))
' (ID: 55084)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0061877029947936535
    2. '[' → logprob: -5.506187915802002
    3. '))' → logprob: -6.881187915802002
    4. ')' → logprob: -7.756187915802002
    5. '))))' → logprob: -7.881187915802002
    6. ' ' → logprob: -8.881187438964844
    7. ')))
' → logprob: -9.881187438964844
    8. '0' → logprob: -11.006187438964844
    9. '),' → logprob: -11.131187438964844
    10. ')));' → logprob: -11.256187438964844

Token 395: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11852585524320602
    2. '(' → logprob: -2.993525743484497
    3. '(v' → logprob: -4.493525981903076
    4. '[' → logprob: -4.618525981903076
    5. 'v' → logprob: -4.618525981903076
    6. 'def' → logprob: -4.743525981903076
    7. '<|end|>' → logprob: -5.118525981903076
    8. ',' → logprob: -5.118525981903076
    9. '   ' → logprob: -6.368525981903076
    10. '
' → logprob: -6.743525981903076

Token 396: ' T' (ID: 353)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.7406560778617859
    2. 'mat' → logprob: -1.2406561374664307
    3. 'pow' → logprob: -2.4906561374664307
    4. 'partial' → logprob: -3.7406561374664307
    5. ' mat' → logprob: -4.240655899047852
    6. 'prod' → logprob: -4.615655899047852
    7. 'main' → logprob: -4.865655899047852
    8. 'mul' → logprob: -4.865655899047852
    9. 'reduce' → logprob: -4.990655899047852
    10. ' vec' → logprob: -4.990655899047852

Token 397: '(M' (ID: 6103)
  Prédit: 'rans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rans' → logprob: -1.1297334432601929
    2. 'uple' → logprob: -1.5047334432601929
    3. 'ype' → logprob: -2.2547335624694824
    4. 'rie' → logprob: -3.0047335624694824
    5. 'r' → logprob: -3.1297335624694824
    6. 'def' → logprob: -3.2547335624694824
    7. '[]' → logprob: -3.7547335624694824
    8. 'est' → logprob: -3.8797335624694824
    9. 'abs' → logprob: -4.004733562469482
    10. '[' → logprob: -4.379733562469482

Token 398: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018305977806448936
    2. ')' → logprob: -4.393305778503418
    3. '):
' → logprob: -5.268305778503418
    4. ' ):' → logprob: -7.893305778503418
    5. ')=' → logprob: -8.768305778503418
    6. ' )' → logprob: -10.768305778503418
    7. ',' → logprob: -11.018305778503418
    8. '=' → logprob: -11.518305778503418
    9. '):

' → logprob: -11.643305778503418
    10. ':' → logprob: -12.143305778503418

Token 399: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.23177458345890045
    2. '   ' → logprob: -2.8567745685577393
    3. '[
' → logprob: -2.9817745685577393
    4. '[' → logprob: -3.2317745685577393
    5. 'def' → logprob: -3.4817745685577393
    6. ' return' → logprob: -4.231774806976318
    7. '[]' → logprob: -4.606774806976318
    8. '[[' → logprob: -6.606774806976318
    9. 'zip' → logprob: -7.356774806976318
    10. '[:]' → logprob: -7.856774806976318

Token 400: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.000491076149046421
    2. ' return' → logprob: -8.62549114227295
    3. 'list' → logprob: -8.75049114227295
    4. 'zip' → logprob: -9.00049114227295
    5. '[' → logprob: -11.12549114227295
    6. '   ' → logprob: -12.12549114227295
    7. 'def' → logprob: -12.25049114227295
    8. 'transpose' → logprob: -13.00049114227295
    9. '[list' → logprob: -14.25049114227295
    10. '[[' → logprob: -14.50049114227295

Token 401: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.009117217734456062
    2. '[list' → logprob: -4.759117126464844
    3. '[' → logprob: -7.759117126464844
    4. ' list' → logprob: -9.509117126464844
    5. ' [' → logprob: -14.384117126464844
    6. '(list' → logprob: -14.634117126464844
    7. '[[' → logprob: -14.884117126464844
    8. '[List' → logprob: -16.759117126464844
    9. 'zip' → logprob: -17.509117126464844
    10. '=list' → logprob: -17.884117126464844

Token 402: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0002390594017924741
    2. '[list' → logprob: -8.500239372253418
    3. ' list' → logprob: -10.625239372253418
    4. '[' → logprob: -11.750239372253418
    5. '[*' → logprob: -12.875239372253418
    6. '(list' → logprob: -15.500239372253418
    7. '[j' → logprob: -15.750239372253418
    8. ' [' → logprob: -16.6252384185791
    9. '[i' → logprob: -16.7502384185791
    10. '*' → logprob: -16.8752384185791

Token 403: '(col' (ID: 37070)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5548748970031738
    2. '(row' → logprob: -1.0548748970031738
    3. '(zip' → logprob: -3.054874897003174
    4. '(i' → logprob: -3.554874897003174
    5. '(r' → logprob: -7.304874897003174
    6. '(col' → logprob: -7.679874897003174
    7. '(z' → logprob: -7.929874897003174
    8. '(range' → logprob: -9.304874420166016
    9. '(_)' → logprob: -9.429874420166016
    10. '(t' → logprob: -9.679874420166016

Token 404: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04641623795032501
    2. ')' → logprob: -3.9214162826538086
    3. ' for' → logprob: -4.171416282653809
    4. '(row' → logprob: -4.796416282653809
    5. 'row' → logprob: -6.671416282653809
    6. 'in' → logprob: -8.546416282653809
    7. '(M' → logprob: -8.921416282653809
    8. ' in' → logprob: -10.046416282653809
    9. '(r' → logprob: -10.171416282653809
    10. '(zip' → logprob: -10.171416282653809

Token 405: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1752094030380249
    2. ' for' → logprob: -1.925209403038025
    3. 'in' → logprob: -4.4252095222473145
    4. ' in' → logprob: -6.0502095222473145
    5. ')' → logprob: -7.6752095222473145
    6. 'from' → logprob: -10.675209045410156
    7. ']' → logprob: -11.675209045410156
    8. '	for' → logprob: -11.925209045410156
    9. ' ' → logprob: -12.050209045410156
    10. 'transpose' → logprob: -12.050209045410156

Token 406: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.00317783304490149
    2. ' col' → logprob: -5.753177642822266
    3. '	col' → logprob: -16.128177642822266
    4. 'colm' → logprob: -18.003177642822266
    5. 'coln' → logprob: -18.128177642822266
    6. ' ' → logprob: -18.753177642822266
    7. 'zip' → logprob: -18.878177642822266
    8. 'cols' → logprob: -19.378177642822266
    9. ' ' → logprob: -19.503177642822266
    10. '_' → logprob: -19.503177642822266

Token 407: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10020774602890015
    2. ' in' → logprob: -2.350207805633545
    3. ')' → logprob: -15.600207328796387
    4. '	in' → logprob: -15.600207328796387
    5. ' ' → logprob: -15.725207328796387
    6. ']' → logprob: -15.975207328796387
    7. '[' → logprob: -16.600208282470703
    8. 'import' → logprob: -16.725208282470703
    9. 'inp' → logprob: -17.350208282470703
    10. 'inth' → logprob: -17.475208282470703

Token 408: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.0005533903022296727
    2. ' zip' → logprob: -7.500553607940674
    3. '(zip' → logprob: -14.750553131103516
    4. '.zip' → logprob: -18.000553131103516
    5. '
' → logprob: -18.750553131103516
    6. '   ' → logprob: -18.750553131103516
    7. ' ' → logprob: -19.250553131103516
    8. 'z' → logprob: -21.000553131103516
    9. '  ' → logprob: -21.750553131103516
    10. '

' → logprob: -22.625553131103516

Token 409: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -4.9424725148128346e-05
    2. '*' → logprob: -10.000049591064453
    3. '(*)' → logprob: -12.500049591064453
    4. '_long' → logprob: -15.750049591064453
    5. '(' → logprob: -16.375049591064453
    6. '*M' → logprob: -17.250049591064453
    7. '(*(' → logprob: -17.750049591064453
    8. 'Long' → logprob: -19.625049591064453
    9. ' (*' → logprob: -19.750049591064453
    10. '(
' → logprob: -20.625049591064453

Token 410: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -2.8087270038668066e-05
    2. ' M' → logprob: -10.500027656555176
    3. '(M' → logprob: -14.875027656555176
    4. '[M' → logprob: -16.875028610229492
    5. ')' → logprob: -17.125028610229492
    6. '   ' → logprob: -17.375028610229492
    7. ' ' → logprob: -18.750028610229492
    8. '*M' → logprob: -18.875028610229492
    9. '	M' → logprob: -19.125028610229492
    10. '[' → logprob: -19.250028610229492

Token 411: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.0921942703134846e-05
    2. ')' → logprob: -11.87501049041748
    3. '(M' → logprob: -13.25001049041748
    4. ')]
' → logprob: -13.50001049041748
    5. ']' → logprob: -14.50001049041748
    6. ')],' → logprob: -17.500011444091797
    7. '))' → logprob: -17.625011444091797
    8. ' )' → logprob: -17.750011444091797
    9. '()]' → logprob: -17.750011444091797
    10. ')])' → logprob: -17.750011444091797

Token 412: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5037999749183655
    2. '<|end|>' → logprob: -1.0037999153137207
    3. '
' → logprob: -4.128799915313721
    4. ')' → logprob: -4.753799915313721
    5. '```' → logprob: -6.253799915313721
    6. '#' → logprob: -7.253799915313721
    7. '\n' → logprob: -8.003800392150879
    8. '[' → logprob: -8.128800392150879
    9. '<|end|>' → logprob: -8.128800392150879
    10. '\' → logprob: -8.878800392150879

Token 413: ' bin' (ID: 6958)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.6880372166633606
    2. ' mat' → logprob: -1.3130371570587158
    3. ' chain' → logprob: -3.563037157058716
    4. ' deepcopy' → logprob: -4.438037395477295
    5. 'pow' → logprob: -4.688037395477295
    6. 'print' → logprob: -5.063037395477295
    7. ' list' → logprob: -5.063037395477295
    8. ' perm' → logprob: -5.188037395477295
    9. ' flatten' → logprob: -5.188037395477295
    10. 'partial' → logprob: -5.313037395477295

Token 414: 'r' (ID: 81)
  Prédit: 'ary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ary' → logprob: -0.14853671193122864
    2. 'search' → logprob: -3.1485366821289062
    3. 'def' → logprob: -3.7735366821289062
    4. 'omial' → logprob: -3.8985366821289062
    5. 'pow' → logprob: -4.273536682128906
    6. '_search' → logprob: -4.398536682128906
    7. 'om' → logprob: -5.023536682128906
    8. '(int' → logprob: -5.148536682128906
    9. '(' → logprob: -5.773536682128906
    10. 'ect' → logprob: -6.523536682128906

Token 415: '(x' (ID: 4061)
  Prédit: 'ary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ary' → logprob: -0.2202787548303604
    2. 'e' → logprob: -3.345278739929199
    3. 'ead' → logprob: -3.470278739929199
    4. 'ange' → logprob: -3.470278739929199
    5. 'ep' → logprob: -3.720278739929199
    6. 'ay' → logprob: -3.720278739929199
    7. 'ec' → logprob: -4.595278739929199
    8. 'eg' → logprob: -4.720278739929199
    9. 'ect' → logprob: -5.095278739929199
    10. 'epy' → logprob: -5.345278739929199

Token 416: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004035418387502432
    2. ',x' → logprob: -6.254035472869873
    3. ' ,' → logprob: -7.254035472869873
    4. '(x' → logprob: -7.629035472869873
    5. '):' → logprob: -8.754034996032715
    6. '   ' → logprob: -8.879034996032715
    7. '(' → logprob: -9.629034996032715
    8. ',b' → logprob: -9.629034996032715
    9. ',n' → logprob: -10.379034996032715
    10. '):
' → logprob: -10.379034996032715

Token 417: ' return' (ID: 622)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.551547110080719
    2. ' bin' → logprob: -1.4265470504760742
    3. ' return' → logprob: -2.426547050476074
    4. '   ' → logprob: -3.051547050476074
    5. 'return' → logprob: -3.176547050476074
    6. ' format' → logprob: -5.551547050476074
    7. 'format' → logprob: -6.051547050476074
    8. '/bin' → logprob: -9.676547050476074
    9. '(bin' → logprob: -10.301547050476074
    10. ' ' → logprob: -10.301547050476074

Token 418: ' format' (ID: 6011)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.0005481490516103804
    2. ' bin' → logprob: -7.875548362731934
    3. 'format' → logprob: -8.750548362731934
    4. '(bin' → logprob: -11.875548362731934
    5. 'f' → logprob: -14.125548362731934
    6. ' format' → logprob: -14.750548362731934
    7. 'str' → logprob: -15.375548362731934
    8. '"' → logprob: -15.500548362731934
    9. '"{' → logprob: -15.625548362731934
    10. 'lambda' → logprob: -15.875548362731934

Token 419: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0008920480031520128
    2. '(' → logprob: -7.125892162322998
    3. 'x' → logprob: -9.50089168548584
    4. '<|end|>' → logprob: -11.87589168548584
    5. 'bin' → logprob: -13.00089168548584
    6. '(bin' → logprob: -13.25089168548584
    7. ' (' → logprob: -14.50089168548584
    8. '(
' → logprob: -14.75089168548584
    9. '```' → logprob: -15.87589168548584
    10. '{x' → logprob: -15.87589168548584

Token 420: ',' (ID: 11)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00026574634830467403
    2. '(' → logprob: -8.375266075134277
    3. ',' → logprob: -11.250266075134277
    4. '(len' → logprob: -11.750266075134277
    5. ' (' → logprob: -11.875266075134277
    6. ',x' → logprob: -12.875266075134277
    7. 'x' → logprob: -13.500266075134277
    8. ')' → logprob: -13.500266075134277
    9. '```' → logprob: -14.375266075134277
    10. '(bin' → logprob: -14.500266075134277

Token 421: ' '' (ID: 461)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.034236833453178406
    2. '"' → logprob: -4.034236907958984
    3. ''' → logprob: -4.159236907958984
    4. ''#' → logprob: -8.659236907958984
    5. ''r' → logprob: -10.034236907958984
    6. ' '' → logprob: -10.409236907958984
    7. ''f' → logprob: -10.409236907958984
    8. 'b' → logprob: -11.034236907958984
    9. '"#' → logprob: -11.284236907958984
    10. ''x' → logprob: -11.409236907958984

Token 422: 'b' (ID: 65)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.056941572576761246
    2. 'b' → logprob: -3.056941509246826
    3. ''' → logprob: -4.931941509246826
    4. '"' → logprob: -7.431941509246826
    5. '0' → logprob: -7.931941509246826
    6. '016' → logprob: -10.306941986083984
    7. ''s' → logprob: -10.806941986083984
    8. ''#' → logprob: -11.306941986083984
    9. ''x' → logprob: -11.556941986083984
    10. ''f' → logprob: -11.681941986083984

Token 423: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0007383962511084974
    2. ')' → logprob: -7.250738620758057
    3. '')}' → logprob: -11.250738143920898
    4. '")' → logprob: -12.250738143920898
    5. '')]' → logprob: -12.875738143920898
    6. '').' → logprob: -13.500738143920898
    7. '}')' → logprob: -13.750738143920898
    8. '')
' → logprob: -14.125738143920898
    9. ''))' → logprob: -14.125738143920898
    10. ''' → logprob: -14.500738143920898

Token 424: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4206869602203369
    2. 'def' → logprob: -1.795686960220337
    3. '<|end|>' → logprob: -1.795686960220337
    4. '
' → logprob: -5.045686721801758
    5. '<|end|>' → logprob: -6.920686721801758
    6. '#' → logprob: -7.420686721801758
    7. ' def' → logprob: -7.670686721801758
    8. '_' → logprob: -7.920686721801758
    9. ',' → logprob: -7.920686721801758
    10. '```' → logprob: -7.920686721801758

Token 425: ' bit' (ID: 3546)
  Prédit: ' bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bin' → logprob: -0.3719179034233093
    2. 'bin' → logprob: -1.996917963027954
    3. ' bit' → logprob: -2.621917963027954
    4. ' dec' → logprob: -3.746917963027954
    5. 'b' → logprob: -4.746917724609375
    6. ' int' → logprob: -4.746917724609375
    7. 'int' → logprob: -4.871917724609375
    8. 'bit' → logprob: -4.996917724609375
    9. ' hex' → logprob: -5.246917724609375
    10. ' b' → logprob: -5.496917724609375

Token 426: 'count' (ID: 5420)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018051020801067352
    2. 'set' → logprob: -4.6430511474609375
    3. 'count' → logprob: -5.6430511474609375
    4. '_length' → logprob: -6.0180511474609375
    5. '_count' → logprob: -6.7680511474609375
    6. 'array' → logprob: -7.7680511474609375
    7. 'wise' → logprob: -9.018051147460938
    8. 'mask' → logprob: -9.018051147460938
    9. 'cnt' → logprob: -9.768051147460938
    10. 'string' → logprob: -9.768051147460938

Token 427: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4751102328300476
    2. '(x' → logprob: -0.9751102328300476
    3. '(
' → logprob: -7.725110054016113
    4. '(bin' → logprob: -8.475110054016113
    5. ' (' → logprob: -8.725110054016113
    6. '(n' → logprob: -9.475110054016113
    7. '(

' → logprob: -10.600110054016113
    8. ')' → logprob: -11.225110054016113
    9. '(int' → logprob: -11.225110054016113
    10. 'def' → logprob: -11.225110054016113

Token 428: '):
' (ID: 1883)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.45059341192245483
    2. ')' → logprob: -1.4505934715270996
    3. '):' → logprob: -2.4505934715270996
    4. '(' → logprob: -3.3255934715270996
    5. ' )' → logprob: -6.5755934715271
    6. ' (' → logprob: -6.7005934715271
    7. ')(' → logprob: -7.2005934715271
    8. ',' → logprob: -7.4505934715271
    9. ':' → logprob: -7.7005934715271
    10. '=' → logprob: -8.325592994689941

Token 429: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3345264494419098
    2. 'bin' → logprob: -2.209526538848877
    3. 'def' → logprob: -2.584526538848877
    4. ' return' → logprob: -2.709526538848877
    5. '   ' → logprob: -3.584526538848877
    6. ' bin' → logprob: -5.584526538848877
    7. '=' → logprob: -7.209526538848877
    8. ' =' → logprob: -9.209526062011719
    9. '(bin' → logprob: -9.459526062011719
    10. ' def' → logprob: -10.084526062011719

Token 430: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6979582905769348
    2. 'bin' → logprob: -0.6979582905769348
    3. 'def' → logprob: -6.072958469390869
    4. '   ' → logprob: -6.197958469390869
    5. ' return' → logprob: -8.447957992553711
    6. 'x' → logprob: -8.572957992553711
    7. ' bin' → logprob: -10.572957992553711
    8. 'count' → logprob: -11.447957992553711
    9. ' ' → logprob: -12.447957992553711
    10. '  ' → logprob: -12.822957992553711

Token 431: ' Over' (ID: 7931)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.016923772171139717
    2. 'bin' → logprob: -4.516923904418945
    3. '   ' → logprob: -5.516923904418945
    4. 'def' → logprob: -6.891923904418945
    5. ' return' → logprob: -7.141923904418945
    6. '    ' → logprob: -11.891923904418945
    7. 'count' → logprob: -12.016923904418945
    8. ' ' → logprob: -12.141923904418945
    9. '  ' → logprob: -12.766923904418945
    10. ' bin' → logprob: -12.891923904418945

Token 432: 'comp' (ID: 3697)
  Prédit: 'load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'load' → logprob: -0.7873054146766663
    2. 'loads' → logprob: -1.6623053550720215
    3. 'loaded' → logprob: -2.2873053550720215
    4. 'return' → logprob: -2.4123053550720215
    5. 'view' → logprob: -2.6623053550720215
    6. 'flow' → logprob: -3.2873053550720215
    7. 'from' → logprob: -4.7873053550720215
    8. 'count' → logprob: -4.7873053550720215
    9. 'pass' → logprob: -4.9123053550720215
    10. 'def' → logprob: -5.1623053550720215

Token 433: 'licated' (ID: 90176)
  Prédit: 'lete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lete' → logprob: -0.0773993507027626
    2. 'let' → logprob: -3.077399253845215
    3. 'le' → logprob: -4.202399253845215
    4. 'leted' → logprob: -4.452399253845215
    5. 'def' → logprob: -7.452399253845215
    6. 'letes' → logprob: -7.827399253845215
    7. '```' → logprob: -7.952399253845215
    8. 'l' → logprob: -8.702399253845215
    9. 'return' → logprob: -9.702399253845215
    10. 'ile' → logprob: -9.952399253845215

Token 434: ' bit' (ID: 3546)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09619538486003876
    2. ' return' → logprob: -3.5961954593658447
    3. 'return' → logprob: -3.9711954593658447
    4. '(' → logprob: -4.221195220947266
    5. '(x' → logprob: -4.471195220947266
    6. ' def' → logprob: -4.971195220947266
    7. ' but' → logprob: -6.221195220947266
    8. ' for' → logprob: -6.221195220947266
    9. '   ' → logprob: -6.346195220947266
    10. 'count' → logprob: -6.596195220947266

Token 435: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6445525884628296
    2. '_count' → logprob: -1.0195525884628296
    3. 's' → logprob: -2.894552707672119
    4. '   ' → logprob: -3.644552707672119
    5. '_length' → logprob: -4.269552707672119
    6. 'pop' → logprob: -5.269552707672119
    7. 'def' → logprob: -5.269552707672119
    8. 'set' → logprob: -5.644552707672119
    9. 'cnt' → logprob: -7.144552707672119
    10. '_pop' → logprob: -7.144552707672119

Token 436: ' using' (ID: 2360)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15720877051353455
    2. ' =' → logprob: -2.9072086811065674
    3. '(x' → logprob: -3.1572086811065674
    4. '   ' → logprob: -4.2822089195251465
    5. ' def' → logprob: -4.5322089195251465
    6. '(' → logprob: -4.9072089195251465
    7. '=' → logprob: -5.0322089195251465
    8. '(n' → logprob: -5.7822089195251465
    9. ' for' → logprob: -7.0322089195251465
    10. 'return' → logprob: -7.2822089195251465

Token 437: ' reduction' (ID: 21441)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.3742688000202179
    2. 'x' → logprob: -1.2492687702178955
    3. 'lambda' → logprob: -4.499269008636475
    4. 'def' → logprob: -4.999269008636475
    5. 'return' → logprob: -6.249269008636475
    6. 'bit' → logprob: -7.249269008636475
    7. 'reduce' → logprob: -7.249269008636475
    8. 'b' → logprob: -7.624269008636475
    9. '(bin' → logprob: -7.749269008636475
    10. 'math' → logprob: -7.749269008636475

Token 438: ' over' (ID: 1072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7169551849365234
    2. 'def' → logprob: -1.4669551849365234
    3. 'return' → logprob: -1.4669551849365234
    4. '(lambda' → logprob: -3.4669551849365234
    5. ' return' → logprob: -5.091955184936523
    6. ',' → logprob: -5.341955184936523
    7. ')' → logprob: -6.091955184936523
    8. '(' → logprob: -6.716955184936523
    9. '(
' → logprob: -7.091955184936523
    10. ':' → logprob: -7.466955184936523

Token 439: ' binary' (ID: 15600)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.6683303117752075
    2. 'lambda' → logprob: -1.0433303117752075
    3. 'range' → logprob: -2.668330192565918
    4. 'str' → logprob: -3.168330192565918
    5. '(lambda' → logprob: -5.043330192565918
    6. 'map' → logprob: -5.168330192565918
    7. 'bit' → logprob: -5.168330192565918
    8. 'int' → logprob: -6.043330192565918
    9. '[' → logprob: -7.168330192565918
    10. '(bin' → logprob: -7.293330192565918

Token 440: ' string' (ID: 1621)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.0023560523986816
    2. 'string' → logprob: -1.8773560523986816
    3. 'bin' → logprob: -2.0023560523986816
    4. 'map' → logprob: -2.2523560523986816
    5. 'x' → logprob: -3.2523560523986816
    6. 'def' → logprob: -3.3773560523986816
    7. 'digits' → logprob: -3.3773560523986816
    8. 's' → logprob: -3.6273560523986816
    9. 'format' → logprob: -3.7523560523986816
    10. 'lambda' → logprob: -3.7523560523986816

Token 441: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2614530920982361
    2. 'return' → logprob: -2.011453151702881
    3. 'def' → logprob: -2.636453151702881
    4. ' return' → logprob: -3.761453151702881
    5. 's' → logprob: -7.511453151702881
    6. ')' → logprob: -7.636453151702881
    7. '```' → logprob: -9.636452674865723
    8. ' s' → logprob: -9.761452674865723
    9. ',' → logprob: -9.886452674865723
    10. '):
' → logprob: -10.011452674865723

Token 442: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3416893482208252
    2. 'return' → logprob: -1.3416893482208252
    3. ' return' → logprob: -4.091689109802246
    4. 'def' → logprob: -4.591689109802246
    5. 's' → logprob: -6.966689109802246
    6. ')' → logprob: -9.091689109802246
    7. ' s' → logprob: -10.341689109802246
    8. 'x' → logprob: -11.216689109802246
    9. ',' → logprob: -11.341689109802246
    10. ' ' → logprob: -11.466689109802246

Token 443: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005507780238986015
    2. '   ' → logprob: -5.630507946014404
    3. 's' → logprob: -7.005507946014404
    4. ' return' → logprob: -7.130507946014404
    5. 'def' → logprob: -9.255507469177246
    6. 'b' → logprob: -9.880507469177246
    7. 'bin' → logprob: -10.380507469177246
    8. ' ' → logprob: -12.255507469177246
    9. 'x' → logprob: -12.505507469177246
    10. '  ' → logprob: -13.005507469177246

Token 444: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.011404533870518208
    2. 'sum' → logprob: -4.636404514312744
    3. ' reduce' → logprob: -6.636404514312744
    4. 'len' → logprob: -8.761404991149902
    5. ' sum' → logprob: -8.886404991149902
    6. '   ' → logprob: -10.761404991149902
    7. ' ' → logprob: -12.011404991149902
    8. 'fun' → logprob: -12.261404991149902
    9. ' functools' → logprob: -12.886404991149902
    10. 'redu' → logprob: -13.761404991149902

Token 445: '(lambda' (ID: 43341)
  Prédit: '(add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.03902541473507881
    2. '(lambda' → logprob: -3.28902530670166
    3. '(m' → logprob: -7.66402530670166
    4. 'add' → logprob: -7.91402530670166
    5. '(' → logprob: -9.66402530670166
    6. '(operator' → logprob: -10.16402530670166
    7. 'mul' → logprob: -10.91402530670166
    8. '   ' → logprob: -11.53902530670166
    9. '(int' → logprob: -11.78902530670166
    10. '(
' → logprob: -12.66402530670166

Token 446: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2927078604698181
    2. 'x' → logprob: -1.917707920074463
    3. 'add' → logprob: -2.542707920074463
    4. 'lambda' → logprob: -3.667707920074463
    5. 'acc' → logprob: -6.417707920074463
    6. 'count' → logprob: -8.292707443237305
    7. 'mul' → logprob: -8.792707443237305
    8. ' a' → logprob: -9.042707443237305
    9. '   ' → logprob: -9.542707443237305
    10. 'carry' → logprob: -9.542707443237305

Token 447: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018127823248505592
    2. ',x' → logprob: -4.143127918243408
    3. ',b' → logprob: -7.143127918243408
    4. '+' → logprob: -7.268127918243408
    5. 'x' → logprob: -8.64312744140625
    6. ',c' → logprob: -9.39312744140625
    7. '+x' → logprob: -9.51812744140625
    8. '+,' → logprob: -9.76812744140625
    9. ',a' → logprob: -10.26812744140625
    10. ' ,' → logprob: -10.39312744140625

Token 448: ' c' (ID: 274)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0036760864313691854
    2. ' b' → logprob: -5.628675937652588
    3. 'x' → logprob: -10.503676414489746
    4. '    ' → logprob: -10.753676414489746
    5. '   ' → logprob: -11.253676414489746
    6. '  ' → logprob: -12.253676414489746
    7. ' ' → logprob: -13.253676414489746
    8. 'y' → logprob: -13.503676414489746
    9. '     ' → logprob: -13.503676414489746
    10. '      ' → logprob: -13.628676414489746

Token 449: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04718421399593353
    2. ',' → logprob: -3.2971842288970947
    3. 'a' → logprob: -5.297183990478516
    4. ' :' → logprob: -5.797183990478516
    5. ',a' → logprob: -7.922183990478516
    6. '   ' → logprob: -8.422183990478516
    7. ':a' → logprob: -8.797183990478516
    8. ':int' → logprob: -9.547183990478516
    9. '+:' → logprob: -9.922183990478516
    10. ' ,' → logprob: -10.297183990478516

Token 450: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0031818747520446777
    2. ' a' → logprob: -5.7531819343566895
    3. 'int' → logprob: -13.628181457519531
    4. '(a' → logprob: -14.003181457519531
    5. '   ' → logprob: -14.253181457519531
    6. ' ' → logprob: -15.003181457519531
    7. 'add' → logprob: -15.128181457519531
    8. '  ' → logprob: -15.753181457519531
    9. '0' → logprob: -15.878181457519531
    10. '1' → logprob: -16.12818145751953

Token 451: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1437150090932846
    2. ' +' → logprob: -2.0187149047851562
    3. '+(' → logprob: -7.018714904785156
    4. '+a' → logprob: -9.518714904785156
    5. '+
' → logprob: -10.643714904785156
    6. '+=' → logprob: -11.768714904785156
    7. '   ' → logprob: -11.893714904785156
    8. '+[' → logprob: -12.393714904785156
    9. '+c' → logprob: -12.643714904785156
    10. '       ' → logprob: -13.018714904785156

Token 452: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.41301029920578003
    2. '(int' → logprob: -1.2880103588104248
    3. '1' → logprob: -3.663010358810425
    4. '(c' → logprob: -3.788010358810425
    5. '(' → logprob: -4.538010120391846
    6. '(ord' → logprob: -6.163010120391846
    7. ' int' → logprob: -7.663010120391846
    8. ' (' → logprob: -7.788010120391846
    9. 'c' → logprob: -7.788010120391846
    10. 'ord' → logprob: -10.538010597229004

Token 453: '(c' (ID: 2410)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0019506559474393725
    2. '(c' → logprob: -6.251950740814209
    3. ' c' → logprob: -10.87695026397705
    4. ')c' → logprob: -13.37695026397705
    5. 'bool' → logprob: -14.62695026397705
    6. '	c' → logprob: -14.87695026397705
    7. '(' → logprob: -15.25195026397705
    8. ' ' → logprob: -15.62695026397705
    9. 'a' → logprob: -16.126951217651367
    10. '   ' → logprob: -16.376951217651367

Token 454: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.000504062045365572
    2. ',' → logprob: -8.375504493713379
    3. ' ),' → logprob: -8.375504493713379
    4. ')' → logprob: -10.875504493713379
    5. ' ' → logprob: -11.750504493713379
    6. '   ' → logprob: -12.375504493713379
    7. ''),' → logprob: -13.125504493713379
    8. '==' → logprob: -13.375504493713379
    9. 'if' → logprob: -13.625504493713379
    10. '0' → logprob: -13.625504493713379

Token 455: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.015191950835287571
    2. 'bit' → logprob: -4.515192031860352
    3. ' bin' → logprob: -5.515192031860352
    4. ''' → logprob: -9.765192031860352
    5. ' bit' → logprob: -10.390192031860352
    6. '"' → logprob: -11.515192031860352
    7. 'str' → logprob: -12.765192031860352
    8. '(bin' → logprob: -12.890192031860352
    9. ''b' → logprob: -13.515192031860352
    10. 'b' → logprob: -13.640192031860352

Token 456: '(x' (ID: 4061)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00526316836476326
    2. '(x' → logprob: -5.255263328552246
    3. '(r' → logprob: -10.630263328552246
    4. '(' → logprob: -13.255263328552246
    5. 'x' → logprob: -13.880263328552246
    6. 'str' → logprob: -14.130263328552246
    7. '1' → logprob: -14.505263328552246
    8. '_r' → logprob: -15.380263328552246
    9. ' r' → logprob: -15.380263328552246
    10. '```' → logprob: -15.755263328552246

Token 457: ')[' (ID: 13637)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.007793644443154335
    2. '(' → logprob: -5.757793426513672
    3. '),' → logprob: -5.757793426513672
    4. '()),' → logprob: -6.882793426513672
    5. 'r' → logprob: -8.882793426513672
    6. ')' → logprob: -9.882793426513672
    7. '()' → logprob: -9.882793426513672
    8. '(r' → logprob: -10.632793426513672
    9. ')[' → logprob: -11.007793426513672
    10. '))' → logprob: -11.007793426513672

Token 458: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008709590882062912
    2. '1' → logprob: -4.75870943069458
    3. ':' → logprob: -9.883709907531738
    4. '3' → logprob: -11.133709907531738
    5. '   ' → logprob: -12.008709907531738
    6. '
' → logprob: -12.133709907531738
    7. '][' → logprob: -12.133709907531738
    8. '```' → logprob: -12.508709907531738
    9. '::-' → logprob: -13.258709907531738
    10. ' ' → logprob: -13.508709907531738

Token 459: ':],' (ID: 117284)
  Prédit: ':],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':],' → logprob: -0.014487490057945251
    2. '],' → logprob: -4.889487266540527
    3. ':' → logprob: -5.014487266540527
    4. '1' → logprob: -9.014487266540527
    5. ':].' → logprob: -10.889487266540527
    6. ':]' → logprob: -10.889487266540527
    7. ' :' → logprob: -11.264487266540527
    8. '()],' → logprob: -11.264487266540527
    9. '])' → logprob: -11.389487266540527
    10. '   ' → logprob: -12.514487266540527

Token 460: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000570667558349669
    2. ' ' → logprob: -7.500570774078369
    3. '   ' → logprob: -12.125570297241211
    4. 'lambda' → logprob: -13.375570297241211
    5. '           ' → logprob: -13.500570297241211
    6. ')' → logprob: -13.750570297241211
    7. '       ' → logprob: -14.250570297241211
    8. '                           ' → logprob: -14.375570297241211
    9. '                   ' → logprob: -14.500570297241211
    10. '     ' → logprob: -14.563070297241211

Token 461: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.908022285439074e-05
    2. ' ' → logprob: -9.750059127807617
    3. ')' → logprob: -15.875059127807617
    4. '   ' → logprob: -16.000059127807617
    5. '1' → logprob: -16.312559127807617
    6. '  ' → logprob: -16.750059127807617
    7. '۰' → logprob: -17.062559127807617
    8. '00' → logprob: -17.187559127807617
    9. '000' → logprob: -17.312559127807617
    10. '    ' → logprob: -17.750059127807617

Token 462: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ' )' → logprob: -12.500005722045898
    3. ')
' → logprob: -13.625005722045898
    4. ')return' → logprob: -15.000005722045898
    5. ')#' → logprob: -17.2500057220459
    6. ')`' → logprob: -17.5000057220459
    7. ')x' → logprob: -17.7500057220459
    8. '())' → logprob: -18.0000057220459
    9. '))' → logprob: -18.5000057220459
    10. ')b' → logprob: -18.7500057220459

Token 463: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003981376066803932
    2. '<|end|>' → logprob: -8.125397682189941
    3. '#' → logprob: -9.625397682189941
    4. ')' → logprob: -11.500397682189941
    5. '```' → logprob: -11.500397682189941
    6. '<|end|>' → logprob: -12.250397682189941
    7. 'from' → logprob: -12.500397682189941
    8. ' def' → logprob: -13.250397682189941
    9. 'import' → logprob: -14.500397682189941
    10. '^' → logprob: -14.625397682189941

Token 464: ' flatten' (ID: 61445)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bit' → logprob: -1.0164846181869507
    2. 'bit' → logprob: -1.1414846181869507
    3. 'pow' → logprob: -2.1414847373962402
    4. ' pow' → logprob: -3.0164847373962402
    5. ' factorial' → logprob: -3.5164847373962402
    6. ' gcd' → logprob: -3.8914847373962402
    7. 'factor' → logprob: -5.01648473739624
    8. ' l' → logprob: -5.01648473739624
    9. 'fact' → logprob: -5.26648473739624
    10. ' fib' → logprob: -5.39148473739624

Token 465: '(l' (ID: 4179)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.0984555035829544
    2. '(' → logprob: -3.2234554290771484
    3. '(list' → logprob: -3.7234554290771484
    4. '(iter' → logprob: -4.473455429077148
    5. '(ls' → logprob: -4.723455429077148
    6. '(l' → logprob: -5.098455429077148
    7. '(li' → logprob: -6.723455429077148
    8. '(ll' → logprob: -7.473455429077148
    9. '(chain' → logprob: -7.598455429077148
    10. '(lista' → logprob: -8.723455429077148

Token 466: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3993065059185028
    2. 'ist' → logprob: -1.2743065357208252
    3. '):
' → logprob: -3.024306535720825
    4. ',' → logprob: -7.649306297302246
    5. '=[]' → logprob: -9.024306297302246
    6. ')' → logprob: -9.524306297302246
    7. ' ):' → logprob: -9.524306297302246
    8. '[]):' → logprob: -10.024306297302246
    9. 'st' → logprob: -10.149306297302246
    10. '   ' → logprob: -10.899306297302246

Token 467: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.1586651802062988
    2. ' list' → logprob: -1.2836651802062988
    3. ' [' → logprob: -1.9086651802062988
    4. ' chain' → logprob: -2.783665180206299
    5. 'chain' → logprob: -2.908665180206299
    6. '[]' → logprob: -3.033665180206299
    7. '[' → logprob: -3.783665180206299
    8. '[x' → logprob: -4.033665180206299
    9. 'return' → logprob: -4.283665180206299
    10. '[list' → logprob: -4.283665180206299

Token 468: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.025252150371670723
    2. 'chain' → logprob: -3.775252103805542
    3. '[list' → logprob: -6.900252342224121
    4. '[' → logprob: -7.275252342224121
    5. '[x' → logprob: -9.775252342224121
    6. '[_' → logprob: -9.900252342224121
    7. '(chain' → logprob: -10.400252342224121
    8. '[l' → logprob: -10.400252342224121
    9. '(list' → logprob: -11.025252342224121
    10. ' list' → logprob: -11.150252342224121

Token 469: '(chain' (ID: 124348)
  Prédit: '(chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.0003032881941180676
    2. 'chain' → logprob: -8.125303268432617
    3. '(' → logprob: -12.375303268432617
    4. 'from' → logprob: -13.750303268432617
    5. '.chain' → logprob: -14.375303268432617
    6. '(map' → logprob: -15.875303268432617
    7. '   ' → logprob: -16.000303268432617
    8. '```' → logprob: -16.125303268432617
    9. ' chain' → logprob: -16.250303268432617
    10. '(filter' → logprob: -16.250303268432617

Token 470: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.0008330935961566865
    2. 'from' → logprob: -7.375833034515381
    3. '(*' → logprob: -8.625833511352539
    4. '.' → logprob: -10.625833511352539
    5. '(l' → logprob: -13.750833511352539
    6. '.l' → logprob: -14.375833511352539
    7. '(' → logprob: -15.000833511352539
    8. ')' → logprob: -15.375833511352539
    9. '.*' → logprob: -15.750833511352539
    10. ' from' → logprob: -16.37583351135254

Token 471: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.008740440011024475
    2. 'iter' → logprob: -4.758740425109863
    3. '(iter' → logprob: -10.508740425109863
    4. ' iterable' → logprob: -10.508740425109863
    5. ' iter' → logprob: -10.633740425109863
    6. 'Iterable' → logprob: -10.883740425109863
    7. '	iter' → logprob: -11.508740425109863
    8. '_iterator' → logprob: -11.883740425109863
    9. 'list' → logprob: -12.633740425109863
    10. '_ITER' → logprob: -13.133740425109863

Token 472: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.0005704291397705674
    2. 'atable' → logprob: -9.000570297241211
    3. 'ist' → logprob: -9.125570297241211
    4. '(' → logprob: -9.250570297241211
    5. 'st' → logprob: -9.750570297241211
    6. 'def' → logprob: -10.250570297241211
    7. '(iter' → logprob: -10.375570297241211
    8. 'ables' → logprob: -10.625570297241211
    9. '_iter' → logprob: -11.125570297241211
    10. 'list' → logprob: -11.625570297241211

Token 473: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0019469641847535968
    2. 'l' → logprob: -6.251946926116943
    3. '(' → logprob: -11.626947402954102
    4. '	l' → logprob: -11.751947402954102
    5. '(
' → logprob: -14.751947402954102
    6. ',l' → logprob: -14.751947402954102
    7. ')' → logprob: -15.251947402954102
    8. '((' → logprob: -15.876947402954102
    9. '(map' → logprob: -15.876947402954102
    10. '
' → logprob: -16.6269474029541

Token 474: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0001605115394340828
    2. '()))' → logprob: -9.250160217285156
    3. '))
' → logprob: -9.750160217285156
    4. '))

' → logprob: -13.125160217285156
    5. ')' → logprob: -13.500160217285156
    6. ' ))' → logprob: -13.625160217285156
    7. ')))' → logprob: -14.125160217285156
    8. '(' → logprob: -14.875160217285156
    9. '(l' → logprob: -15.500160217285156
    10. '()' → logprob: -16.125160217285156

Token 475: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010611523175612092
    2. 'from' → logprob: -7.626060962677002
    3. 'class' → logprob: -8.50106143951416
    4. '#' → logprob: -8.75106143951416
    5. ')' → logprob: -9.00106143951416
    6. 'import' → logprob: -10.62606143951416
    7. '@' → logprob: -11.12606143951416
    8. '
' → logprob: -12.00106143951416
    9. '[' → logprob: -12.25106143951416
    10. '[]' → logprob: -12.50106143951416

Token 476: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.6982156038284302
    2. 'main' → logprob: -1.8232156038284302
    3. ' chunk' → logprob: -3.6982154846191406
    4. 'partial' → logprob: -3.6982154846191406
    5. 'chunk' → logprob: -3.8232154846191406
    6. 'ceil' → logprob: -3.8232154846191406
    7. ' is' → logprob: -3.8232154846191406
    8. 'prod' → logprob: -3.8232154846191406
    9. ' partial' → logprob: -3.9482154846191406
    10. ' ceil' → logprob: -4.073215484619141

Token 477: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.978233846486546e-05
    2. '()' → logprob: -10.750049591064453
    3. '(' → logprob: -11.250049591064453
    4. '():
' → logprob: -11.375049591064453
    5. ' ():' → logprob: -12.625049591064453
    6. '(:' → logprob: -15.500049591064453
    7. ':' → logprob: -16.375049591064453
    8. '(":' → logprob: -16.625049591064453
    9. 'def' → logprob: -17.625049591064453
    10. '()>' → logprob: -18.375049591064453

Token 478: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013189997524023056
    2. '    ' → logprob: -4.763189792633057
    3. ' n' → logprob: -6.013189792633057
    4. 'n' → logprob: -6.388189792633057
    5. ' pass' → logprob: -8.888190269470215
    6. '	n' → logprob: -9.263190269470215
    7. 'pass' → logprob: -10.263190269470215
    8. '    
' → logprob: -10.263190269470215
    9. 'import' → logprob: -11.138190269470215
    10. '	' → logprob: -11.263190269470215

Token 479: ' mod' (ID: 1812)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.028213320299983025
    2. ' n' → logprob: -3.7782132625579834
    3. '   ' → logprob: -5.4032135009765625
    4. 'N' → logprob: -7.9032135009765625
    5. 's' → logprob: -11.153213500976562
    6. ' N' → logprob: -11.153213500976562
    7. '	n' → logprob: -11.278213500976562
    8. ' pass' → logprob: -11.403213500976562
    9. 'pass' → logprob: -12.028213500976562
    10. '    ' → logprob: -12.028213500976562

Token 480: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42949992418289185
    2. ' =' → logprob: -1.054499864578247
    3. '   ' → logprob: -7.929500102996826
    4. ' ' → logprob: -8.929499626159668
    5. ',' → logprob: -9.054499626159668
    6. '_' → logprob: -9.679499626159668
    7. ')' → logprob: -10.054499626159668
    8. '  ' → logprob: -10.304499626159668
    9. '    ' → logprob: -10.804499626159668
    10. '=int' → logprob: -11.929499626159668

Token 481: ' int' (ID: 677)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9266199160483666e-05
    2. '100' → logprob: -11.125019073486328
    3. 'int' → logprob: -12.875019073486328
    4. '998' → logprob: -13.375019073486328
    5. '1' → logprob: -15.500019073486328
    6. ' ' → logprob: -16.125019073486328
    7. '(' → logprob: -18.375019073486328
    8. '   ' → logprob: -20.000019073486328
    9. '１０' → logprob: -20.375019073486328
    10. '[int' → logprob: -20.500019073486328

Token 482: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005810413509607315
    2. '(input' → logprob: -5.255810260772705
    3. 'input' → logprob: -7.505810260772705
    4. '1' → logprob: -11.130810737609863
    5. '()' → logprob: -11.880810737609863
    6. '(sys' → logprob: -12.880810737609863
    7. '('' → logprob: -13.255810737609863
    8. ' input' → logprob: -14.880810737609863
    9. '(
' → logprob: -15.380810737609863
    10. '("' → logprob: -15.755810737609863

Token 483: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012833021173719317
    2. '"' → logprob: -9.500128746032715
    3. '100' → logprob: -10.000128746032715
    4. '(' → logprob: -12.875128746032715
    5. '998' → logprob: -12.875128746032715
    6. ' ' → logprob: -14.500128746032715
    7. '")' → logprob: -14.875128746032715
    8. '
' → logprob: -14.875128746032715
    9. '   ' → logprob: -15.000128746032715
    10. '``' → logprob: -15.000128746032715

Token 484: '"' (ID: 1)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.30849260091781616
    2. 'e' → logprob: -1.558492660522461
    3. '0' → logprob: -2.933492660522461
    4. '"' → logprob: -6.808492660522461
    5. '00' → logprob: -8.183492660522461
    6. '<<' → logprob: -9.433492660522461
    7. '   ' → logprob: -10.183492660522461
    8. '010' → logprob: -10.308492660522461
    9. '012' → logprob: -10.433492660522461
    10. '_' → logprob: -10.683492660522461

Token 485: ' +' (ID: 659)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6050094366073608
    2. '000' → logprob: -0.8550094366073608
    3. '0' → logprob: -3.6050095558166504
    4. '00' → logprob: -6.73000955581665
    5. '   ' → logprob: -9.980009078979492
    6. '<<' → logprob: -10.105009078979492
    7. '```' → logprob: -10.355009078979492
    8. '2' → logprob: -10.730009078979492
    9. '264' → logprob: -10.980009078979492
    10. '"' → logprob: -10.980009078979492

Token 486: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.009799649938941002
    2. '9' → logprob: -5.509799480438232
    3. '000' → logprob: -6.009799480438232
    4. '0' → logprob: -6.134799480438232
    5. ''' → logprob: -7.634799480438232
    6. '10' → logprob: -7.884799480438232
    7. '12' → logprob: -9.50979995727539
    8. '13' → logprob: -10.38479995727539
    9. '09' → logprob: -10.88479995727539
    10. ' "' → logprob: -11.13479995727539

Token 487: '0' (ID: 15)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.1328178346157074
    2. '0' → logprob: -2.3828177452087402
    3. '9' → logprob: -3.5078177452087402
    4. '09' → logprob: -7.63281774520874
    5. '00' → logprob: -7.75781774520874
    6. '8' → logprob: -7.88281774520874
    7. '"' → logprob: -8.257818222045898
    8. '2' → logprob: -9.132818222045898
    9. '3' → logprob: -9.132818222045898
    10. '5' → logprob: -9.257818222045898

Token 488: '"*' (ID: 166615)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.7043749690055847
    2. '6' → logprob: -1.2043750286102295
    3. '7' → logprob: -2.3293750286102295
    4. '9' → logprob: -2.4543750286102295
    5. '000' → logprob: -4.07937479019165
    6. '8' → logprob: -6.07937479019165
    7. '0' → logprob: -6.32937479019165
    8. '00' → logprob: -7.20437479019165
    9. '06' → logprob: -7.82937479019165
    10. '*' → logprob: -9.704375267028809

Token 489: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.2471589798224159e-05
    2. '6' → logprob: -11.500012397766113
    3. '7' → logprob: -13.625012397766113
    4. '
' → logprob: -14.875012397766113
    5. ' ' → logprob: -15.375012397766113
    6. '8' → logprob: -15.625012397766113
    7. '"' → logprob: -16.37501335144043
    8. '   ' → logprob: -16.62501335144043
    9. '

' → logprob: -16.87501335144043
    10. '09' → logprob: -17.12501335144043

Token 490: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033305153250694275
    2. '7' → logprob: -3.7833051681518555
    3. '0' → logprob: -5.6583051681518555
    4. '9' → logprob: -5.7833051681518555
    5. '+' → logprob: -6.2833051681518555
    6. '6' → logprob: -7.0333051681518555
    7. '```' → logprob: -8.408305168151855
    8. ' )' → logprob: -9.033305168151855
    9. ')+' → logprob: -9.158305168151855
    10. '")' → logprob: -10.283305168151855

Token 491: ' +' (ID: 659)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.5800458788871765
    2. '+' → logprob: -1.2050459384918213
    3. '0' → logprob: -2.4550459384918213
    4. '9' → logprob: -3.8300459384918213
    5. ' +' → logprob: -4.580045700073242
    6. '   ' → logprob: -4.705045700073242
    7. '**' → logprob: -5.955045700073242
    8. ' ' → logprob: -6.205045700073242
    9. '+
' → logprob: -6.205045700073242
    10. '1' → logprob: -6.330045700073242

Token 492: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -17.0
    3. '   ' → logprob: -19.625
    4. ' ' → logprob: -20.375
    5. '700' → logprob: -20.75
    6. '

' → logprob: -21.375
    7. '9' → logprob: -21.375
    8. '```' → logprob: -21.875
    9. '"' → logprob: -22.125
    10. '  ' → logprob: -22.375

Token 493: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. '9' → logprob: -16.25
    3. '+' → logprob: -16.75
    4. '6' → logprob: -17.625
    5. '   ' → logprob: -18.5
    6. '"' → logprob: -19.25
    7. '700' → logprob: -19.25
    8. '```' → logprob: -20.25
    9. '000' → logprob: -20.625
    10. '79' → logprob: -21.0

Token 494: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49611935019493103
    2. ':' → logprob: -0.9961193799972534
    3. '   ' → logprob: -4.371119499206543
    4. ':
' → logprob: -5.371119499206543
    5. '    
' → logprob: -6.996119499206543
    6. ')' → logprob: -7.371119499206543
    7. 'def' → logprob: -7.496119499206543
    8. ',' → logprob: -7.746119499206543
    9. '```' → logprob: -8.121119499206543
    10. '<|end|>' → logprob: -8.371119499206543

Token 495: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33944305777549744
    2. ':' → logprob: -1.5894430875778198
    3. '
' → logprob: -2.9644429683685303
    4. 'def' → logprob: -4.339443206787109
    5. '    
' → logprob: -5.089443206787109
    6. '<|end|>' → logprob: -5.964443206787109
    7. '```' → logprob: -6.214443206787109
    8. '():' → logprob: -6.714443206787109
    9. ':
' → logprob: -6.964443206787109
    10. ')' → logprob: -7.214443206787109

Token 496: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0402333028614521
    2. ' n' → logprob: -4.290233135223389
    3. '   ' → logprob: -4.540233135223389
    4. 'N' (adapté à ' N') → logprob: -5.290233135223389
    5. 'a' → logprob: -5.540233135223389
    6. 'data' → logprob: -6.540233135223389
    7. 'x' → logprob: -7.165233135223389
    8. '#' → logprob: -7.165233135223389
    9. 'def' → logprob: -7.415233135223389
    10. ' N' → logprob: -8.040233612060547

Token 497: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.650843620300293
    2. ' =' → logprob: -0.775843620300293
    3. ',' → logprob: -4.025843620300293
    4. ' ' → logprob: -9.400843620300293
    5. ' ,' → logprob: -9.525843620300293
    6. '   ' → logprob: -10.025843620300293
    7. ' =
' → logprob: -11.900843620300293
    8. ')' → logprob: -12.150843620300293
    9. '=int' → logprob: -12.275843620300293
    10. '  ' → logprob: -12.650843620300293

Token 498: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002511093392968178
    2. ' int' → logprob: -6.002511024475098
    3. 'input' → logprob: -10.252511024475098
    4. ' input' → logprob: -16.252511978149414
    5. '   ' → logprob: -18.002511978149414
    6. ' ' → logprob: -18.127511978149414
    7. '(int' → logprob: -18.252511978149414
    8. 'len' → logprob: -18.502511978149414
    9. '=int' → logprob: -18.627511978149414
    10. '	int' → logprob: -18.877511978149414

Token 499: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01287100836634636
    2. 'input' → logprob: -5.262870788574219
    3. '()' → logprob: -5.512870788574219
    4. '(' → logprob: -5.637870788574219
    5. '('' → logprob: -12.387870788574219
    6. ' input' → logprob: -12.512870788574219
    7. '(
' → logprob: -13.262870788574219
    8. '(sys' → logprob: -13.387870788574219
    9. '=input' → logprob: -14.262870788574219
    10. '("' → logprob: -15.012870788574219

Token 500: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0006504826596938074
    2. '()' → logprob: -7.500650405883789
    3. '())
' → logprob: -9.250650405883789
    4. ')' → logprob: -14.500650405883789
    5. '()
' → logprob: -15.250650405883789
    6. '())

' → logprob: -15.750650405883789
    7. ' ())' → logprob: -15.750650405883789
    8. '())
' → logprob: -16.12565040588379
    9. '(' → logprob: -16.12565040588379
    10. '().' → logprob: -16.25065040588379

Token 501: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0702199637889862
    2. '<|end|>' → logprob: -2.8202199935913086
    3. ' ' → logprob: -6.570219993591309
    4. ' A' → logprob: -6.695219993591309
    5. '    
' → logprob: -6.820219993591309
    6. 'data' → logprob: -7.195219993591309
    7. ')' → logprob: -7.320219993591309
    8. 'def' → logprob: -7.695219993591309
    9. 'a' → logprob: -7.945219993591309
    10. 's' → logprob: -8.070219993591309

Token 502: ' S' (ID: 336)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05042698606848717
    2. 'a' → logprob: -3.675426959991455
    3. 'S' (adapté à ' S') → logprob: -4.425426959991455
    4. 'arr' → logprob: -4.800426959991455
    5. 's' → logprob: -7.050426959991455
    6. 'dp' → logprob: -7.050426959991455
    7. 'lst' → logprob: -8.050427436828613
    8. 'H' → logprob: -8.675427436828613
    9. '   ' → logprob: -9.050427436828613
    10. 'D' → logprob: -9.175427436828613

Token 503: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17983673512935638
    2. '=' → logprob: -1.8048367500305176
    3. '   ' → logprob: -10.30483627319336
    4. ' ' → logprob: -10.67983627319336
    5. ')' → logprob: -11.17983627319336
    6. ',' → logprob: -12.42983627319336
    7. '.' → logprob: -12.55483627319336
    8. '[' → logprob: -12.67983627319336
    9. '_' → logprob: -12.92983627319336
    10. '  ' → logprob: -13.55483627319336

Token 504: ' tuple' (ID: 31311)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007102862582542002
    2. ' input' → logprob: -7.250710487365723
    3. 'list' → logprob: -15.875710487365723
    4. '(input' → logprob: -16.250709533691406
    5. '[input' → logprob: -16.625709533691406
    6. '=input' → logprob: -17.750709533691406
    7. '   ' → logprob: -18.000709533691406
    8. '<input' → logprob: -18.750709533691406
    9. '	input' → logprob: -18.875709533691406
    10. 'int' → logprob: -19.750709533691406

Token 505: '(tuple' (ID: 133029)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0007270866190083325
    2. 'input' → logprob: -7.25072717666626
    3. '(map' → logprob: -11.375726699829102
    4. '(' → logprob: -12.500726699829102
    5. 'map' → logprob: -14.000726699829102
    6. '(int' → logprob: -14.375726699829102
    7. '[input' → logprob: -15.250726699829102
    8. '(list' → logprob: -16.0007266998291
    9. '=input' → logprob: -17.0007266998291
    10. '(
' → logprob: -17.0007266998291

Token 506: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.3528071641921997
    2. '(input' → logprob: -1.2278071641921997
    3. '(ord' → logprob: -6.47780704498291
    4. '(int' → logprob: -6.85280704498291
    5. 'input' → logprob: -6.97780704498291
    6. 'map' → logprob: -7.60280704498291
    7. '(al' → logprob: -8.72780704498291
    8. '(' → logprob: -9.47780704498291
    9. '(sorted' → logprob: -11.22780704498291
    10. 'alp' → logprob: -11.35280704498291

Token 507: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.010095441713929176
    2. '(str' → logprob: -5.385095596313477
    3. '(ord' → logprob: -5.385095596313477
    4. '(' → logprob: -7.635095596313477
    5. '(al' → logprob: -8.885095596313477
    6. 'int' → logprob: -9.010095596313477
    7. '(lambda' → logprob: -10.135095596313477
    8. 'str' → logprob: -10.260095596313477
    9. 'alp' → logprob: -11.260095596313477
    10. '(input' → logprob: -11.260095596313477

Token 508: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.020689958706498146
    2. ',' → logprob: -4.395689964294434
    3. 'input' → logprob: -5.395689964294434
    4. '(input' → logprob: -5.645689964294434
    5. '(' → logprob: -10.270689964294434
    6. '))' → logprob: -11.270689964294434
    7. ',int' → logprob: -12.520689964294434
    8. ',(' → logprob: -12.645689964294434
    9. ',list' → logprob: -12.645689964294434
    10. ' ,' → logprob: -12.770689964294434

Token 509: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.001394165214151144
    2. ' input' → logprob: -6.626394271850586
    3. 'list' → logprob: -9.876394271850586
    4. '(input' → logprob: -11.501394271850586
    5. '   ' → logprob: -13.251394271850586
    6. ')' → logprob: -13.626394271850586
    7. ' ' → logprob: -13.626394271850586
    8. ',input' → logprob: -14.001394271850586
    9. '[input' → logprob: -15.001394271850586
    10. '
' → logprob: -15.376394271850586

Token 510: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.704273118884885e-07
    2. '()' → logprob: -15.250000953674316
    3. '.split' → logprob: -15.750000953674316
    4. '   ' → logprob: -17.0
    5. ' ().' → logprob: -17.125
    6. 'split' → logprob: -17.25
    7. '()))' → logprob: -17.375
    8. '))' → logprob: -18.25
    9. '(' → logprob: -18.625
    10. '()
' → logprob: -19.75

Token 511: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009161015041172504
    2. 'strip' → logprob: -7.000916004180908
    3. '().' → logprob: -13.000916481018066
    4. ' split' → logprob: -13.250916481018066
    5. 'rstrip' → logprob: -14.875916481018066
    6. '.split' → logprob: -16.12591552734375
    7. '(split' → logprob: -16.87591552734375
    8. 's' → logprob: -16.87591552734375
    9. '   ' → logprob: -17.37591552734375
    10. 'replace' → logprob: -17.62591552734375

Token 512: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.05769352987408638
    2. '))' → logprob: -3.3076934814453125
    3. '())))' → logprob: -4.3076934814453125
    4. ')))' → logprob: -5.4326934814453125
    5. '()' → logprob: -6.8076934814453125
    6. '())))
' → logprob: -8.307693481445312
    7. '()))
' → logprob: -8.557693481445312
    8. '())' → logprob: -10.307693481445312
    9. '()));' → logprob: -10.432693481445312
    10. '(' → logprob: -12.932693481445312

Token 513: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007089786231517792
    2. '   ' → logprob: -7.875709056854248
    3. '))' → logprob: -8.75070858001709
    4. ')
' → logprob: -9.25070858001709
    5. '())' → logprob: -10.12570858001709
    6. ' )' → logprob: -11.37570858001709
    7. '()' → logprob: -11.50070858001709
    8. ')`' → logprob: -12.75070858001709
    9. '  ' → logprob: -13.25070858001709
    10. ')**' → logprob: -13.50070858001709

Token 514: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.2524021157296374e-05
    2. '_i' → logprob: -10.625052452087402
    3. '_range' → logprob: -11.125052452087402
    4. ' range' → logprob: -12.250052452087402
    5. ' _' → logprob: -12.500052452087402
    6. 'range' → logprob: -13.625052452087402
    7. '_in' → logprob: -14.000052452087402
    8. '_
' → logprob: -14.250052452087402
    9. '_=' → logprob: -14.625052452087402
    10. 'i' → logprob: -14.875052452087402

Token 515: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10370941460132599
    2. 'range' → logprob: -2.8537094593048096
    3. ' in' → logprob: -3.3537094593048096
    4. '_' → logprob: -5.2287092208862305
    5. ' range' → logprob: -8.10370922088623
    6. 'i' → logprob: -8.35370922088623
    7. 'n' → logprob: -11.85370922088623
    8. ')' → logprob: -12.22870922088623
    9. '_range' → logprob: -12.85370922088623
    10. '   ' → logprob: -12.97870922088623

Token 516: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.8624639324116288e-06
    2. ' range' → logprob: -13.250001907348633
    3. '(range' → logprob: -19.875001907348633
    4. '	range' → logprob: -20.250001907348633
    5. '   ' → logprob: -21.750001907348633
    6. 'r' → logprob: -22.375001907348633
    7. 'rang' → logprob: -22.500001907348633
    8. '
' → logprob: -23.000001907348633
    9. '```' → logprob: -23.375001907348633
    10. '  ' → logprob: -23.750001907348633

Token 517: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -8.895480277715251e-06
    2. 'N' → logprob: -11.750008583068848
    3. '(' → logprob: -13.875008583068848
    4. '(n' → logprob: -16.875009536743164
    5. '(
' → logprob: -18.125009536743164
    6. '   ' → logprob: -18.500009536743164
    7. '	N' → logprob: -18.500009536743164
    8. ' N' → logprob: -19.625009536743164
    9. ')' → logprob: -20.875009536743164
    10. ' (' → logprob: -21.500009536743164

Token 518: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.44312788406387e-05
    2. '))' → logprob: -9.875054359436035
    3. ')
' → logprob: -13.625054359436035
    4. '())' → logprob: -13.750054359436035
    5. ')}' → logprob: -15.625054359436035
    6. ')`' → logprob: -16.12505531311035
    7. '()' → logprob: -16.25005531311035
    8. ')))' → logprob: -17.50005531311035
    9. ')#' → logprob: -17.50005531311035
    10. ' )' → logprob: -17.62505531311035

Token 519: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034045133739709854
    2. '
' → logprob: -4.034045219421387
    3. 'def' → logprob: -5.034045219421387
    4. '    
' → logprob: -5.909045219421387
    5. ')' → logprob: -6.159045219421387
    6. 'dp' → logprob: -7.159045219421387
    7. '<|end|>' → logprob: -7.534045219421387
    8. 'result' → logprob: -8.034045219421387
    9. 'x' → logprob: -8.034045219421387
    10. '```' → logprob: -8.034045219421387

Token 520: ' base' (ID: 3611)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.31225889921188354
    2. '   ' → logprob: -1.4372589588165283
    3. 'd' → logprob: -5.437258720397949
    4. ' dp' → logprob: -5.562258720397949
    5. 'DP' → logprob: -5.687258720397949
    6. '    
' → logprob: -6.312258720397949
    7. 'ans' → logprob: -6.437258720397949
    8. 'cnt' → logprob: -6.687258720397949
    9. 'res' → logprob: -6.812258720397949
    10. 'dist' → logprob: -6.937258720397949

Token 521: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06644833832979202
    2. '=' → logprob: -3.066448450088501
    3. 's' → logprob: -4.441448211669922
    4. '_' → logprob: -7.191448211669922
    5. '_sum' → logprob: -7.816448211669922
    6. ',' → logprob: -7.941448211669922
    7. '_counts' → logprob: -8.191448211669922
    8. '_s' → logprob: -8.191448211669922
    9. '_scores' → logprob: -8.316448211669922
    10. '_mask' → logprob: -8.441448211669922

Token 522: ' N' (ID: 478)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6919474601745605
    2. '0' → logprob: -1.3169474601745605
    3. '1' → logprob: -2.4419474601745605
    4. '10' → logprob: -3.3169474601745605
    5. '[S' → logprob: -3.9419474601745605
    6. '[N' → logprob: -4.1919474601745605
    7. 'S' → logprob: -4.3169474601745605
    8. '100' → logprob: -4.5669474601745605
    9. 'mod' → logprob: -4.9419474601745605
    10. '2' → logprob: -4.9419474601745605

Token 523: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25226446986198425
    2. '**' → logprob: -2.5022644996643066
    3. ' +' → logprob: -3.2522644996643066
    4. '   ' → logprob: -3.2522644996643066
    5. '*' → logprob: -4.002264499664307
    6. 'def' → logprob: -4.502264499664307
    7. '-' → logprob: -4.502264499664307
    8. ',' → logprob: -5.252264499664307
    9. '#' → logprob: -6.002264499664307
    10. ' *' → logprob: -6.002264499664307

Token 524: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038454193621873856
    2. 'dp' → logprob: -4.413454055786133
    3. ')' → logprob: -5.163454055786133
    4. '
' → logprob: -5.288454055786133
    5. 'for' → logprob: -6.038454055786133
    6. '    
' → logprob: -6.038454055786133
    7. 'def' → logprob: -6.663454055786133
    8. '+' → logprob: -7.038454055786133
    9. 'a' → logprob: -7.538454055786133
    10. ',' → logprob: -7.538454055786133

Token 525: ' enc' (ID: 3219)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08247457444667816
    2. '   ' → logprob: -3.45747447013855
    3. 'ans' → logprob: -5.207474708557129
    4. 'dist' → logprob: -5.582474708557129
    5. 'DP' → logprob: -5.582474708557129
    6. 'cnt' → logprob: -5.832474708557129
    7. 'd' → logprob: -5.957474708557129
    8. 'for' → logprob: -5.957474708557129
    9. 'counts' → logprob: -6.582474708557129
    10. 'res' → logprob: -6.582474708557129

Token 526: '_idx' (ID: 15257)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11113372445106506
    2. '=' → logprob: -2.6111338138580322
    3. 'ode' → logprob: -3.7361338138580322
    4. 'oded' → logprob: -5.736133575439453
    5. '   ' → logprob: -6.736133575439453
    6. 'od' → logprob: -7.361133575439453
    7. '=[]' → logprob: -7.611133575439453
    8. 'oding' → logprob: -7.986133575439453
    9. 'oder' → logprob: -7.986133575439453
    10. '```' → logprob: -8.236133575439453

Token 527: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38843241333961487
    2. '=' → logprob: -1.1384323835372925
    3. 'oder' → logprob: -7.888432502746582
    4. 'oded' → logprob: -8.263432502746582
    5. 's' → logprob: -8.513432502746582
    6. ',' → logprob: -8.638432502746582
    7. '   ' → logprob: -9.263432502746582
    8. 'ount' → logprob: -9.263432502746582
    9. 'oders' → logprob: -9.388432502746582
    10. 'oding' → logprob: -10.138432502746582

Token 528: ' lambda' (ID: 27871)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13781121373176575
    2. '[' → logprob: -2.7628111839294434
    3. '[]' → logprob: -3.3878111839294434
    4. '{}' → logprob: -4.012811183929443
    5. '{' → logprob: -5.637811183929443
    6. 'base' → logprob: -6.262811183929443
    7. 'lambda' → logprob: -6.512811183929443
    8. 'tuple' → logprob: -6.762811183929443
    9. 'default' → logprob: -7.012811183929443
    10. 'sum' → logprob: -7.137811183929443

Token 529: ' v' (ID: 323)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9101765751838684
    2. ' i' → logprob: -1.2851765155792236
    3. 'x' → logprob: -1.7851765155792236
    4. 'i' → logprob: -2.1601765155792236
    5. ' t' → logprob: -4.535176753997803
    6. 't' → logprob: -5.410176753997803
    7. ' s' → logprob: -5.535176753997803
    8. ' idx' → logprob: -5.785176753997803
    9. ' a' → logprob: -6.285176753997803
    10. 's' → logprob: -6.410176753997803

Token 530: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05707072839140892
    2. ':' → logprob: -2.932070732116699
    3. ' :' → logprob: -7.307070732116699
    4. ',v' → logprob: -7.432070732116699
    5. ' ,' → logprob: -8.1820707321167
    6. ',i' → logprob: -8.6820707321167
    7. 'v' → logprob: -8.8070707321167
    8. ' v' → logprob: -9.0570707321167
    9. ',n' → logprob: -10.0570707321167
    10. 'x' → logprob: -10.1820707321167

Token 531: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.43113043904304504
    2. 'b' → logprob: -1.9311304092407227
    3. 'j' → logprob: -3.0561304092407227
    4. 'x' → logprob: -3.5561304092407227
    5. ' i' → logprob: -3.6811304092407227
    6. 'k' → logprob: -3.8061304092407227
    7. 'c' → logprob: -4.056130409240723
    8. ' b' → logprob: -4.181130409240723
    9. ' j' → logprob: -5.181130409240723
    10. 'r' → logprob: -5.181130409240723

Token 532: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.840432565193623e-05
    2. ' :' → logprob: -10.000088691711426
    3. ',' → logprob: -10.500088691711426
    4. ':v' → logprob: -11.875088691711426
    5. 'v' → logprob: -12.750088691711426
    6. '=' → logprob: -13.750088691711426
    7. ':return' → logprob: -14.000088691711426
    8. ':i' → logprob: -14.000088691711426
    9. ',v' → logprob: -14.500088691711426
    10. '   ' → logprob: -14.625088691711426

Token 533: ' (' (ID: 350)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.06980958580970764
    2. ' v' → logprob: -2.819809675216675
    3. 'base' → logprob: -5.944809436798096
    4. '(v' → logprob: -6.069809436798096
    5. ' base' → logprob: -6.569809436798096
    6. ' (' → logprob: -7.694809436798096
    7. '(base' → logprob: -7.819809436798096
    8. 'i' → logprob: -8.069809913635254
    9. '(i' → logprob: -9.069809913635254
    10. ' i' → logprob: -9.194809913635254

Token 534: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.026328401640057564
    2. 'base' → logprob: -4.0263285636901855
    3. 'i' → logprob: -4.9013285636901855
    4. '(base' → logprob: -8.026328086853027
    5. ' v' → logprob: -9.401328086853027
    6. '(i' → logprob: -9.651328086853027
    7. '(v' → logprob: -10.026328086853027
    8. ' base' → logprob: -10.276328086853027
    9. '(' → logprob: -10.401328086853027
    10. '   ' → logprob: -11.151328086853027

Token 535: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.45639169216156006
    2. ',' → logprob: -1.45639169216156
    3. '*' → logprob: -2.2063918113708496
    4. ' ,' → logprob: -4.83139181137085
    5. ' +' → logprob: -5.20639181137085
    6. '+' → logprob: -5.70639181137085
    7. ')' → logprob: -6.08139181137085
    8. ' ' → logprob: -6.33139181137085
    9. ' <<' → logprob: -7.20639181137085
    10. '[' → logprob: -8.206391334533691

Token 536: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0023135726805776358
    2. '(base' → logprob: -6.377313613891602
    3. 'N' → logprob: -8.252313613891602
    4. ' base' → logprob: -8.377313613891602
    5. '(' → logprob: -9.627313613891602
    6. '(N' → logprob: -11.002313613891602
    7. '10' → logprob: -12.127313613891602
    8. '100' → logprob: -12.377313613891602
    9. 'len' → logprob: -12.502313613891602
    10. '3' → logprob: -12.752313613891602

Token 537: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.46981510519981384
    2. ')' → logprob: -1.3448151350021362
    3. ' +' → logprob: -2.2198150157928467
    4. ')+' → logprob: -5.219815254211426
    5. '+i' → logprob: -8.969815254211426
    6. ' )' → logprob: -9.844815254211426
    7. ',' → logprob: -10.594815254211426
    8. ' ' → logprob: -10.969815254211426
    9. '+)' → logprob: -11.219815254211426
    10. '+
' → logprob: -12.094815254211426

Token 538: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07060493528842926
    2. ' +' → logprob: -2.6956050395965576
    3. '+i' → logprob: -7.3206048011779785
    4. '+
' → logprob: -12.320605278015137
    5. ' ' → logprob: -14.695605278015137
    6. ' ' → logprob: -15.195605278015137
    7. '()+' → logprob: -15.570605278015137
    8. '+k' → logprob: -15.695605278015137
    9. '+j' → logprob: -15.820605278015137
    10. '+r' → logprob: -15.820605278015137

Token 539: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.547789674485102e-05
    2. ' i' → logprob: -10.250035285949707
    3. ' ' → logprob: -20.750036239624023
    4. '   ' → logprob: -21.125036239624023
    5. '  ' → logprob: -21.500036239624023
    6. '	i' → logprob: -22.125036239624023
    7. '1' → logprob: -23.000036239624023
    8. '
' → logprob: -23.625036239624023
    9. '```' → logprob: -24.125036239624023
    10. '(i' → logprob: -24.125036239624023

Token 540: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8097015619277954
    2. '   ' → logprob: -0.8097015619277954
    3. ')' → logprob: -2.809701442718506
    4. '<|end|>' → logprob: -3.184701442718506
    5. '    
' → logprob: -5.559701442718506
    6. ',' → logprob: -7.059701442718506
    7. 'def' → logprob: -7.059701442718506
    8. ')
' → logprob: -7.809701442718506
    9. ' ' → logprob: -7.809701442718506
    10. '#' → logprob: -7.934701442718506

Token 541: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5478558540344238
    2. ')' → logprob: -1.0478558540344238
    3. '<|end|>' → logprob: -3.172855854034424
    4. '
' → logprob: -4.422855854034424
    5. 'def' → logprob: -5.422855854034424
    6. ':' → logprob: -5.922855854034424
    7. '    
' → logprob: -5.922855854034424
    8. ' ' → logprob: -6.297855854034424
    9. ',' → logprob: -6.797855854034424
    10. '#' → logprob: -6.797855854034424

Token 542: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38332599401474
    2. 'dp' → logprob: -1.3833260536193848
    3. 'def' → logprob: -4.508326053619385
    4. 'v' → logprob: -4.633326053619385
    5. 'for' → logprob: -5.133326053619385
    6. 'i' → logprob: -5.133326053619385
    7. ' dp' → logprob: -5.508326053619385
    8. 'n' → logprob: -5.508326053619385
    9. 'idx' → logprob: -5.758326053619385
    10. 'd' → logprob: -6.008326053619385

Token 543: ' Fancy' (ID: 134694)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01972474902868271
    2. 'for' → logprob: -5.6447248458862305
    3. 'cnt' → logprob: -6.3947248458862305
    4. 'memo' → logprob: -6.3947248458862305
    5. 'ans' → logprob: -6.6447248458862305
    6. 'freq' → logprob: -6.8947248458862305
    7. 'DP' → logprob: -7.1447248458862305
    8. 'res' → logprob: -7.2697248458862305
    9. 'dist' → logprob: -7.3947248458862305
    10. 'f' → logprob: -7.3947248458862305

Token 544: ' heap' (ID: 37237)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5019164085388184
    2. 'encoding' → logprob: -2.8769164085388184
    3. 'index' → logprob: -3.5019164085388184
    4. ' indexing' → logprob: -3.5019164085388184
    5. ' encoding' → logprob: -3.6269164085388184
    6. 'for' → logprob: -3.6269164085388184
    7. 'DP' → logprob: -3.8769164085388184
    8. 'comment' → logprob: -3.8769164085388184
    9. 'def' → logprob: -4.126916408538818
    10. 'data' → logprob: -4.251916408538818

Token 545: ' generation' (ID: 13986)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15390247106552124
    2. 'q' → logprob: -2.653902530670166
    3. '=[]' → logprob: -3.528902530670166
    4. '=' → logprob: -3.653902530670166
    5. '[]' → logprob: -6.153902530670166
    6. '<|end|>' → logprob: -6.278902530670166
    7. '#' → logprob: -6.528902530670166
    8. 'import' → logprob: -6.653902530670166
    9. 'data' → logprob: -6.903902530670166
    10. 's' → logprob: -7.153902530670166

Token 546: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15396542847156525
    2. ' h' → logprob: -3.528965473175049
    3. 'heap' → logprob: -3.528965473175049
    4. 'h' → logprob: -4.278965473175049
    5. ' heap' → logprob: -4.278965473175049
    6. 'hq' → logprob: -4.528965473175049
    7. 'def' → logprob: -4.653965473175049
    8. 'import' → logprob: -4.903965473175049
    9. '    
' → logprob: -5.528965473175049
    10. 'dp' → logprob: -5.778965473175049

Token 547: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.412662148475647
    2. 'heap' → logprob: -1.412662148475647
    3. ',' → logprob: -2.5376620292663574
    4. 'import' → logprob: -2.9126620292663574
    5. ' heap' → logprob: -2.9126620292663574
    6. ':' → logprob: -3.1626620292663574
    7. 'def' → logprob: -3.1626620292663574
    8. '<|end|>' → logprob: -3.4126620292663574
    9. '(heap' → logprob: -3.5376620292663574
    10. ')' → logprob: -3.5376620292663574

Token 548: ' ls' (ID: 41498)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.42204853892326355
    2. 'heap' → logprob: -1.422048568725586
    3. 'hq' → logprob: -2.797048568725586
    4. 'import' → logprob: -4.172048568725586
    5. 'pq' → logprob: -5.422048568725586
    6. 'dp' → logprob: -5.422048568725586
    7. 'q' → logprob: -5.547048568725586
    8. 'hp' → logprob: -5.547048568725586
    9. 'from' → logprob: -6.047048568725586
    10. '   ' → logprob: -6.422048568725586

Token 549: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13356637954711914
    2. ' =' → logprob: -2.133566379547119
    3. '=' → logprob: -5.883566379547119
    4. '=[]' → logprob: -6.633566379547119
    5. 'heap' → logprob: -7.508566379547119
    6. '_heap' → logprob: -8.133565902709961
    7. '_' → logprob: -8.258565902709961
    8. 'it' → logprob: -8.508565902709961
    9. '=[]
' → logprob: -8.633565902709961
    10. 'h' → logprob: -8.758565902709961

Token 550: ' reduce' (ID: 10389)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.166366308927536
    2. '[(' → logprob: -2.2913663387298584
    3. '[d' → logprob: -3.2913663387298584
    4. '[' → logprob: -4.916366100311279
    5. 'dq' → logprob: -6.041366100311279
    6. '[[' → logprob: -6.541366100311279
    7. 'list' → logprob: -6.791366100311279
    8. '[S' → logprob: -7.041366100311279
    9. '[list' → logprob: -8.541366577148438
    10. '[((' → logprob: -8.666366577148438

Token 551: '(lambda' (ID: 43341)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.4188733696937561
    2. '(lambda' → logprob: -1.6688733100891113
    3. '(add' → logprob: -1.9188733100891113
    4. '(' → logprob: -5.793873310089111
    5. '(part' → logprob: -5.918873310089111
    6. 'add' → logprob: -7.918873310089111
    7. '(
' → logprob: -7.918873310089111
    8. '(heap' → logprob: -9.04387378692627
    9. 'h' → logprob: -9.29387378692627
    10. '(operator' → logprob: -9.66887378692627

Token 552: ' acc' (ID: 1259)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.9251583814620972
    2. 'a' → logprob: -1.8001583814620972
    3. ' lambda' → logprob: -1.9251583814620972
    4. ' acc' → logprob: -2.6751585006713867
    5. ' a' → logprob: -2.6751585006713867
    6. 'x' → logprob: -2.9251585006713867
    7. 's' → logprob: -3.8001585006713867
    8. ' x' → logprob: -4.425158500671387
    9. 'acc' → logprob: -4.550158500671387
    10. 'l' → logprob: -4.550158500671387

Token 553: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009135294705629349
    2. 'lambda' → logprob: -5.3841352462768555
    3. '=lambda' → logprob: -5.7591352462768555
    4. ' ,' → logprob: -7.6341352462768555
    5. ' lambda' → logprob: -8.009135246276855
    6. '(lambda' → logprob: -8.384135246276855
    7. 'a' → logprob: -9.884135246276855
    8. '   ' → logprob: -10.009135246276855
    9. '=' → logprob: -10.259135246276855
    10. ',item' → logprob: -10.509135246276855

Token 554: ' p' (ID: 275)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6252695322036743
    2. ' lambda' → logprob: -1.1252695322036743
    3. 'x' → logprob: -3.0002694129943848
    4. ' x' → logprob: -3.6252694129943848
    5. ' acc' → logprob: -4.625269412994385
    6. '   ' → logprob: -4.750269412994385
    7. 's' → logprob: -4.750269412994385
    8. 'acc' → logprob: -4.875269412994385
    9. 'ls' → logprob: -5.125269412994385
    10. ' s' → logprob: -5.125269412994385

Token 555: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007456130348145962
    2. ',' → logprob: -5.757456302642822
    3. ':
' → logprob: -6.757456302642822
    4. 'art' → logprob: -7.257456302642822
    5. 'r' → logprob: -7.382456302642822
    6. ' :' → logprob: -7.632456302642822
    7. 'rev' → logprob: -7.757456302642822
    8. ':[' → logprob: -8.007455825805664
    9. 'ro' → logprob: -9.132455825805664
    10. 'p' → logprob: -10.257455825805664

Token 556: ' (' (ID: 350)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.5564597845077515
    2. 'h' → logprob: -1.6814597845077515
    3. ' acc' → logprob: -2.056459903717041
    4. ' h' → logprob: -3.056459903717041
    5. 'hp' → logprob: -3.931459903717041
    6. '[h' → logprob: -4.806459903717041
    7. '(acc' → logprob: -5.056459903717041
    8. 'he' → logprob: -5.431459903717041
    9. '(h' → logprob: -5.681459903717041
    10. 'heap' → logprob: -5.681459903717041

Token 557: 'h' (ID: 71)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.08058647066354752
    2. 'h' → logprob: -3.9555864334106445
    3. 'hp' → logprob: -4.0805864334106445
    4. ' acc' → logprob: -4.0805864334106445
    5. 'heap' → logprob: -5.3305864334106445
    6. '[h' → logprob: -5.5805864334106445
    7. '(acc' → logprob: -5.8305864334106445
    8. 'lambda' → logprob: -6.5805864334106445
    9. '   ' → logprob: -6.7055864334106445
    10. '[*' → logprob: -6.7055864334106445

Token 558: 'push' (ID: 18873)
  Prédit: 'push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.007894778624176979
    2. 'ush' → logprob: -5.257894992828369
    3. 'p' → logprob: -6.007894992828369
    4. '[' → logprob: -10.132894515991211
    5. '   ' → logprob: -10.132894515991211
    6. '
' → logprob: -10.882894515991211
    7. 'h' → logprob: -11.257894515991211
    8. ',' → logprob: -11.632894515991211
    9. '.push' → logprob: -12.007894515991211
    10. ' push' → logprob: -12.257894515991211

Token 559: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.47512856125831604
    2. 'acc' → logprob: -0.9751285314559937
    3. ' acc' → logprob: -6.975128650665283
    4. '	acc' → logprob: -9.600128173828125
    5. '(' → logprob: -11.225128173828125
    6. '(
' → logprob: -11.350128173828125
    7. ' (' → logprob: -11.475128173828125
    8. '
' → logprob: -12.475128173828125
    9. '   ' → logprob: -12.975128173828125
    10. ')' → logprob: -13.350128173828125

Token 560: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05306689813733101
    2. ',p' → logprob: -3.5530669689178467
    3. ' ,' → logprob: -4.553066730499268
    4. '(p' → logprob: -4.553066730499268
    5. ',h' → logprob: -7.678066730499268
    6. '(' → logprob: -7.803066730499268
    7. '),' → logprob: -8.053067207336426
    8. 'p' → logprob: -8.928067207336426
    9. '(acc' → logprob: -9.053067207336426
    10. ',s' → logprob: -9.303067207336426

Token 561: ' -' (ID: 533)
  Prédit: '(enc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(enc' → logprob: -0.35742390155792236
    2. 'enc' → logprob: -2.107423782348633
    3. '(p' → logprob: -2.732423782348633
    4. 'p' → logprob: -2.732423782348633
    5. '(' → logprob: -3.232423782348633
    6. '(-' → logprob: -5.607423782348633
    7. ' (' → logprob: -6.607423782348633
    8. ' enc' → logprob: -6.982423782348633
    9. '(tuple' → logprob: -7.482423782348633
    10. ' p' → logprob: -7.482423782348633

Token 562: 'enc' (ID: 1038)
  Prédit: 'enc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enc' → logprob: -0.08497317880392075
    2. 'p' → logprob: -2.959973096847534
    3. '(enc' → logprob: -3.584973096847534
    4. '(' → logprob: -6.834973335266113
    5. ' enc' → logprob: -7.709973335266113
    6. '(p' → logprob: -8.584973335266113
    7. '1' → logprob: -10.084973335266113
    8. '(
' → logprob: -10.459973335266113
    9. ' p' → logprob: -11.084973335266113
    10. '((' → logprob: -11.334973335266113

Token 563: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0038713314570486546
    2. 'ode' → logprob: -6.003871440887451
    3. 'idx' → logprob: -6.628871440887451
    4. 'p' → logprob: -11.253870964050293
    5. 'od' → logprob: -11.378870964050293
    6. '_IDX' → logprob: -11.878870964050293
    7. 'oded' → logprob: -12.003870964050293
    8. 'de' → logprob: -12.503870964050293
    9. 'ose' → logprob: -12.878870964050293
    10. 'd' → logprob: -13.003870964050293

Token 564: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.030728938058018684
    2. '(*' → logprob: -3.530729055404663
    3. '((' → logprob: -8.030729293823242
    4. '(' → logprob: -8.030729293823242
    5. '((*' → logprob: -9.155729293823242
    6. '(enc' → logprob: -9.655729293823242
    7. 'p' → logprob: -10.030729293823242
    8. '(*(' → logprob: -10.530729293823242
    9. '(s' → logprob: -11.030729293823242
    10. '(part' → logprob: -11.655729293823242

Token 565: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03094709850847721
    2. '(' → logprob: -4.030947208404541
    3. '(p' → logprob: -4.655947208404541
    4. ',' → logprob: -7.030947208404541
    5. '0' → logprob: -7.030947208404541
    6. ',p' → logprob: -8.280946731567383
    7. '[p' → logprob: -8.405946731567383
    8. '))' → logprob: -8.405946731567383
    9. 'p' → logprob: -8.530946731567383
    10. ')' → logprob: -8.655946731567383

Token 566: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002901997184380889
    2. '1' → logprob: -6.377902030944824
    3. '[' → logprob: -7.127902030944824
    4. 'p' → logprob: -8.377902030944824
    5. ' ' → logprob: -9.627902030944824
    6. '(' → logprob: -10.502902030944824
    7. '
' → logprob: -11.002902030944824
    8. ' p' → logprob: -11.627902030944824
    9. 'x' → logprob: -11.815402030944824
    10. '-' → logprob: -11.940402030944824

Token 567: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03479987382888794
    2. ',p' → logprob: -3.534799814224243
    3. ' ,' → logprob: -6.159800052642822
    4. 'p' → logprob: -7.034800052642822
    5. '],' → logprob: -7.284800052642822
    6. '[p' → logprob: -8.159799575805664
    7. '[' → logprob: -8.284799575805664
    8. ']))' → logprob: -9.159799575805664
    9. '   ' → logprob: -9.409799575805664
    10. '(p' → logprob: -9.659799575805664

Token 568: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0010469816625118256
    2. ' p' → logprob: -7.251047134399414
    3. '0' → logprob: -8.001047134399414
    4. ' ' → logprob: -14.001047134399414
    5. '   ' → logprob: -15.626047134399414
    6. '  ' → logprob: -15.626047134399414
    7. '1' → logprob: -15.876047134399414
    8. '-' → logprob: -16.126047134399414
    9. '-p' → logprob: -16.626047134399414
    10. '
' → logprob: -16.876047134399414

Token 569: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19454067945480347
    2. '1' → logprob: -1.9445407390594482
    3. 'p' → logprob: -3.9445407390594482
    4. '0' → logprob: -4.319540500640869
    5. ' p' → logprob: -7.194540500640869
    6. ')' → logprob: -9.069540977478027
    7. ' ' → logprob: -9.444540977478027
    8. '[p' → logprob: -10.444540977478027
    9. '(p' → logprob: -10.819540977478027
    10. '(' → logprob: -11.444540977478027

Token 570: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009213966317474842
    2. '0' → logprob: -4.759213924407959
    3. 'p' → logprob: -7.884213924407959
    4. '[' → logprob: -8.759214401245117
    5. ' ' → logprob: -10.634214401245117
    6. ' p' → logprob: -11.571714401245117
    7. ')' → logprob: -11.946714401245117
    8. '(' → logprob: -13.571714401245117
    9. '2' → logprob: -13.634214401245117
    10. '   ' → logprob: -13.759214401245117

Token 571: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4046662747859955
    2. ')),' → logprob: -1.4046663045883179
    3. ')))' → logprob: -2.6546661853790283
    4. '))),' → logprob: -4.404666423797607
    5. ' ' → logprob: -6.279666423797607
    6. ')' → logprob: -6.654666423797607
    7. '),' → logprob: -7.654666423797607
    8. '))
' → logprob: -8.15466594696045
    9. ')));' → logprob: -8.77966594696045
    10. ')))),' → logprob: -8.77966594696045

Token 572: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31883081793785095
    2. ')' → logprob: -1.6938308477401733
    3. '),' → logprob: -2.693830728530884
    4. ' ,' → logprob: -4.818830966949463
    5. ' if' → logprob: -5.693830966949463
    6. '   ' → logprob: -5.943830966949463
    7. ' and' → logprob: -6.068830966949463
    8. ',p' → logprob: -6.193830966949463
    9. ';' → logprob: -7.193830966949463
    10. 'if' → logprob: -7.568830966949463

Token 573: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.03365768492221832
    2. ' acc' → logprob: -3.4086577892303467
    3. 'ac' → logprob: -12.033658027648926
    4. '(acc' → logprob: -12.658658027648926
    5. '	acc' → logprob: -14.158658027648926
    6. '_acc' → logprob: -14.408658027648926
    7. 'acce' → logprob: -14.908658027648926
    8. 'p' → logprob: -15.408658027648926
    9. '-' → logprob: -15.658658027648926
    10. ' accu' → logprob: -16.03365707397461

Token 574: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13513419032096863
    2. '),' → logprob: -2.510134220123291
    3. ',p' → logprob: -4.385134220123291
    4. ' if' → logprob: -4.635134220123291
    5. 'if' → logprob: -4.760134220123291
    6. ')' → logprob: -4.760134220123291
    7. ' ,' → logprob: -5.760134220123291
    8. 'p' → logprob: -6.885134220123291
    9. '   ' → logprob: -7.135134220123291
    10. 'and' → logprob: -8.885133743286133

Token 575: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.03617430850863457
    2. ' enumerate' → logprob: -3.5361742973327637
    3. '[(' → logprob: -5.661174297332764
    4. 'S' → logprob: -6.161174297332764
    5. 'range' → logprob: -7.911174297332764
    6. '((' → logprob: -8.786174774169922
    7. '[((' → logprob: -9.286174774169922
    8. 'list' → logprob: -9.911174774169922
    9. ' S' → logprob: -10.161174774169922
    10. 'zip' → logprob: -10.536174774169922

Token 576: '(map' (ID: 16946)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.004491835366934538
    2. 'S' → logprob: -6.254491806030273
    3. '(range' → logprob: -6.879491806030273
    4. '(N' → logprob: -7.004491806030273
    5. '(s' → logprob: -8.629491806030273
    6. '((' → logprob: -9.254491806030273
    7. '(en' → logprob: -9.504491806030273
    8. ')' → logprob: -9.879491806030273
    9. '([(' → logprob: -10.004491806030273
    10. '(' → logprob: -10.254491806030273

Token 577: '(item' (ID: 10016)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.20642568171024323
    2. '(item' → logprob: -2.456425666809082
    3. '(part' → logprob: -4.081425666809082
    4. '(len' → logprob: -4.206425666809082
    5. '(sum' → logprob: -4.456425666809082
    6. '(min' → logprob: -4.456425666809082
    7. '(max' → logprob: -4.456425666809082
    8. 'min' → logprob: -5.206425666809082
    9. 'lambda' → logprob: -5.206425666809082
    10. 'max' → logprob: -5.331425666809082

Token 578: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -9.849109119386412e-06
    2. 'get' → logprob: -11.625009536743164
    3. 'getitem' → logprob: -14.500009536743164
    4. 'setter' → logprob: -15.500009536743164
    5. '0' → logprob: -16.875009536743164
    6. 'Getter' → logprob: -17.500009536743164
    7. '1' → logprob: -17.750009536743164
    8. '[' → logprob: -18.250009536743164
    9. 'gett' → logprob: -18.750009536743164
    10. 's' → logprob: -18.875009536743164

Token 579: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9950608015060425
    2. '1' → logprob: -0.9950608015060425
    3. '0' → logprob: -1.3700608015060425
    4. '(lambda' → logprob: -5.995060920715332
    5. 'lambda' → logprob: -6.620060920715332
    6. '
' → logprob: -7.245060920715332
    7. ',' → logprob: -7.495060920715332
    8. ' (' → logprob: -7.995060920715332
    9. ' ' → logprob: -8.120060920715332
    10. '[' → logprob: -8.870060920715332

Token 580: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17990735173225403
    2. '1' → logprob: -1.8049073219299316
    3. ' ' → logprob: -9.05490779876709
    4. '
' → logprob: -11.42990779876709
    5. 'lambda' → logprob: -11.67990779876709
    6. '   ' → logprob: -12.49240779876709
    7. '-' → logprob: -12.61740779876709
    8. '2' → logprob: -12.99240779876709
    9. '[' → logprob: -13.05490779876709
    10. '```' → logprob: -13.11740779876709

Token 581: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043088026344776154
    2. ',S' → logprob: -3.168087959289551
    3. 'S' → logprob: -9.91808795928955
    4. ' ,' → logprob: -10.79308795928955
    5. '),' → logprob: -11.54308795928955
    6. '(S' → logprob: -13.04308795928955
    7. '```' → logprob: -13.54308795928955
    8. ')(' → logprob: -14.29308795928955
    9. '   ' → logprob: -14.29308795928955
    10. ')))' → logprob: -14.54308795928955

Token 582: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00866113230586052
    2. ' S' → logprob: -4.758661270141602
    3. '   ' → logprob: -10.508661270141602
    4. '(S' → logprob: -12.633661270141602
    5. ' ' → logprob: -12.758661270141602
    6. '
' → logprob: -12.883661270141602
    7. ')' → logprob: -13.008661270141602
    8. 'ls' → logprob: -13.133661270141602
    9. 's' → logprob: -13.508661270141602
    10. '  ' → logprob: -14.133661270141602

Token 583: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -1.0068718194961548
    2. ')),' → logprob: -1.0068718194961548
    3. ',' → logprob: -1.7568718194961548
    4. ')))' → logprob: -2.8818717002868652
    5. '))' → logprob: -3.8818717002868652
    6. '()' → logprob: -4.756871700286865
    7. '))),' → logprob: -5.381871700286865
    8. '   ' → logprob: -6.631871700286865
    9. '()),' → logprob: -6.881871700286865
    10. '(),' → logprob: -7.131871700286865

Token 584: ' [])
' (ID: 64395)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.49172648787498474
    2. ' [])' → logprob: -1.9917265176773071
    3. 'dq' → logprob: -2.1167263984680176
    4. '[]' → logprob: -2.6167263984680176
    5. ' dq' → logprob: -3.2417263984680176
    6. '[d' → logprob: -5.366726398468018
    7. 'deque' → logprob: -5.616726398468018
    8. ' []' → logprob: -5.741726398468018
    9. ' ' → logprob: -6.491726398468018
    10. 'd' → logprob: -6.616726398468018

Token 585: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6988365650177002
    2. '   ' → logprob: -0.6988365650177002
    3. '<|end|>' → logprob: -5.698836326599121
    4. ',' → logprob: -7.323836326599121
    5. ' )' → logprob: -7.698836326599121
    6. '.' → logprob: -8.573836326599121
    7. '    
' → logprob: -8.823836326599121
    8. '  ' → logprob: -9.073836326599121
    9. '[' → logprob: -9.198836326599121
    10. ')
' → logprob: -9.573836326599121

Token 586: ' rs' (ID: 15181)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37736430764198303
    2. ')' → logprob: -1.5023642778396606
    3. '    
' → logprob: -4.127364158630371
    4. ',' → logprob: -4.502364158630371
    5. ' while' → logprob: -4.502364158630371
    6. 'while' → logprob: -4.502364158630371
    7. ' for' → logprob: -4.752364158630371
    8. 'for' → logprob: -5.127364158630371
    9. 'def' → logprob: -5.877364158630371
    10. 'idx' → logprob: -6.002364158630371

Token 587: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760509371757507
    2. ' =' → logprob: -0.8260509371757507
    3. ',' → logprob: -9.451050758361816
    4. 's' → logprob: -10.826050758361816
    5. ')' → logprob: -12.201050758361816
    6. '=[]' → logprob: -12.951050758361816
    7. ' ' → logprob: -13.701050758361816
    8. '_' → logprob: -13.951050758361816
    9. '.' → logprob: -14.326050758361816
    10. '  ' → logprob: -15.326050758361816

Token 588: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.715087890625
    2. '[]' → logprob: -0.965087890625
    3. '[' → logprob: -2.590087890625
    4. 'list' → logprob: -3.965087890625
    5. '[-' → logprob: -4.340087890625
    6. ' reduce' → logprob: -5.590087890625
    7. ' [' → logprob: -6.215087890625
    8. ' []' → logprob: -6.340087890625
    9. '[d' → logprob: -6.340087890625
    10. '[l' → logprob: -6.465087890625

Token 589: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0001757696009008214
    2. 'lambda' → logprob: -9.000175476074219
    3. ' (' → logprob: -10.125175476074219
    4. '(' → logprob: -12.875175476074219
    5. '=lambda' → logprob: -12.875175476074219
    6. '   ' → logprob: -13.000175476074219
    7. '```' → logprob: -13.125175476074219
    8. ' lambda' → logprob: -13.750175476074219
    9. '(None' → logprob: -14.125175476074219
    10. '(
' → logprob: -15.125175476074219

Token 590: ' acc' (ID: 1259)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.47490936517715454
    2. '(lambda' → logprob: -0.9749093651771545
    3. ' lambda' → logprob: -7.22490930557251
    4. '=lambda' → logprob: -10.474909782409668
    5. '(h' → logprob: -11.099909782409668
    6. '...' → logprob: -11.724909782409668
    7. 'acc' → logprob: -11.849909782409668
    8. '(None' → logprob: -12.099909782409668
    9. 'r' → logprob: -12.349909782409668
    10. 'lam' → logprob: -12.474909782409668

Token 591: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08310821652412415
    2. '(lambda' → logprob: -2.5831081867218018
    3. 'lambda' → logprob: -5.708108425140381
    4. 'enumer' → logprob: -7.833108425140381
    5. '=lambda' → logprob: -9.083107948303223
    6. ' ,' → logprob: -9.333107948303223
    7. ',item' → logprob: -9.833107948303223
    8. ' (' → logprob: -10.333107948303223
    9. ' lambda' → logprob: -10.458107948303223
    10. '(' → logprob: -10.708107948303223

Token 592: ' p' (ID: 275)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.24844472110271454
    2. 'p' → logprob: -2.7484447956085205
    3. 'partial' → logprob: -2.7484447956085205
    4. ' lambda' → logprob: -3.1234447956085205
    5. 'h' → logprob: -3.9984447956085205
    6. 'enumer' → logprob: -4.123444557189941
    7. '(lambda' → logprob: -5.373444557189941
    8. ' partial' → logprob: -5.623444557189941
    9. 'item' → logprob: -6.248444557189941
    10. ' p' → logprob: -6.873444557189941

Token 593: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004284961149096489
    2. ':' → logprob: -6.004284858703613
    3. ',p' → logprob: -7.754284858703613
    4. ',item' → logprob: -8.004284858703613
    5. 'enumer' → logprob: -8.129284858703613
    6. ' ,' → logprob: -8.254284858703613
    7. '(p' → logprob: -8.754284858703613
    8. ',(' → logprob: -9.004284858703613
    9. ' :' → logprob: -10.629284858703613
    10. '   ' → logprob: -10.754284858703613

Token 594: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0005230080569162965
    2. ' (' → logprob: -8.25052261352539
    3. 'h' → logprob: -8.37552261352539
    4. ' h' → logprob: -11.50052261352539
    5. '  ' → logprob: -12.00052261352539
    6. '   ' → logprob: -12.25052261352539
    7. ' ' → logprob: -13.00052261352539
    8. 'p' → logprob: -13.50052261352539
    9. '(' → logprob: -13.62552261352539
    10. '[h' → logprob: -13.62552261352539

Token 595: 'h' (ID: 71)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.576443076133728
    2. 'h' → logprob: -0.826443076133728
    3. 'hp' → logprob: -8.32644271850586
    4. ' h' → logprob: -8.82644271850586
    5. '  ' → logprob: -10.70144271850586
    6. '   ' → logprob: -10.95144271850586
    7. '[h' → logprob: -10.95144271850586
    8. 'he' → logprob: -11.20144271850586
    9. ' ' → logprob: -11.45144271850586
    10. 'hpp' → logprob: -11.57644271850586

Token 596: 'push' (ID: 18873)
  Prédit: 'push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -2.45848218582978e-06
    2. ' push' → logprob: -14.50000286102295
    3. '_push' → logprob: -14.50000286102295
    4. '(push' → logprob: -14.75000286102295
    5. '.push' → logprob: -14.87500286102295
    6. 'p' → logprob: -15.37500286102295
    7. 'h' → logprob: -15.75000286102295
    8. '	push' → logprob: -15.87500286102295
    9. 'ush' → logprob: -16.250001907348633
    10. '```' → logprob: -17.125001907348633

Token 597: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -7.896309739408025e-07
    2. 'acc' → logprob: -15.250000953674316
    3. ' (' → logprob: -15.500000953674316
    4. '(' → logprob: -16.125
    5. '(enc' → logprob: -16.625
    6. '(ac' → logprob: -17.25
    7. '	acc' → logprob: -17.75
    8. ' acc' → logprob: -17.875
    9. '<|end|>' → logprob: -18.125
    10. '(arr' → logprob: -19.125

Token 598: ',' (ID: 11)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -6.945094355614856e-05
    2. ',' → logprob: -9.625069618225098
    3. 'acc' → logprob: -12.875069618225098
    4. ' (' → logprob: -15.500069618225098
    5. '(enc' → logprob: -15.500069618225098
    6. ')' → logprob: -15.875069618225098
    7. '(' → logprob: -16.75006866455078
    8. '	acc' → logprob: -17.12506866455078
    9. '(ac' → logprob: -17.62506866455078
    10. ' acc' → logprob: -17.75006866455078

Token 599: ' enc' (ID: 3219)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005151804536581039
    2. ' -' → logprob: -5.380151748657227
    3. ' p' → logprob: -7.755151748657227
    4. '-ac' → logprob: -11.005151748657227
    5. '-inc' → logprob: -11.255151748657227
    6. '-p' → logprob: -11.630151748657227
    7. '-int' → logprob: -11.755151748657227
    8. '-item' → logprob: -12.130151748657227
    9. '-ent' → logprob: -12.255151748657227
    10. '-inf' → logprob: -12.255151748657227

Token 600: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00018685187387745827
    2. 'idx' → logprob: -8.625186920166016
    3. '(p' → logprob: -12.750186920166016
    4. 'p' → logprob: -13.250186920166016
    5. 'Idx' → logprob: -14.250186920166016
    6. '(idx' → logprob: -15.000186920166016
    7. '```' → logprob: -15.250186920166016
    8. '-' → logprob: -15.875186920166016
    9. '_IDX' → logprob: -15.875186920166016
    10. '   ' → logprob: -16.250186920166016

Token 601: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -6.515961285913363e-05
    2. '(' → logprob: -10.125064849853516
    3. '((' → logprob: -11.500064849853516
    4. '(S' → logprob: -12.625064849853516
    5. ' (' → logprob: -12.750064849853516
    6. '(item' → logprob: -13.125064849853516
    7. '(-' → logprob: -13.125064849853516
    8. '(s' → logprob: -13.750064849853516
    9. '(abs' → logprob: -14.250064849853516
    10. ')(' → logprob: -14.750064849853516

Token 602: '[' (ID: 58)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4981918931007385
    2. '(p' → logprob: -0.9981918931007385
    3. '[' → logprob: -3.7481918334960938
    4. '0' → logprob: -9.873191833496094
    5. ' (' → logprob: -9.873191833496094
    6. ')' → logprob: -9.873191833496094
    7. '(x' → logprob: -10.873191833496094
    8. '((' → logprob: -11.373191833496094
    9. '(s' → logprob: -11.498191833496094
    10. ',' → logprob: -11.748191833496094

Token 603: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02637043595314026
    2. '(' → logprob: -3.9013705253601074
    3. '1' → logprob: -5.776370525360107
    4. '(p' → logprob: -6.526370525360107
    5. '[' → logprob: -6.901370525360107
    6. '2' → logprob: -9.65137004852295
    7. ' ' → logprob: -10.15137004852295
    8. 'p' → logprob: -10.52637004852295
    9. '(item' → logprob: -11.08887004852295
    10. 'item' → logprob: -11.21387004852295

Token 604: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021027136594057083
    2. '],' → logprob: -4.521027088165283
    3. ',p' → logprob: -5.771027088165283
    4. ' ,' → logprob: -5.896027088165283
    5. '0' → logprob: -6.646027088165283
    6. '(p' → logprob: -7.021027088165283
    7. '[' → logprob: -7.146027088165283
    8. '(),' → logprob: -7.896027088165283
    9. '),' → logprob: -8.146027565002441
    10. 'p' → logprob: -9.271027565002441

Token 605: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.062014512717723846
    2. ' p' → logprob: -2.812014579772949
    3. '(p' → logprob: -11.68701457977295
    4. '<|end|>' → logprob: -12.24951457977295
    5. ')p' → logprob: -12.31201457977295
    6. ' ' → logprob: -12.31201457977295
    7. '   ' → logprob: -12.37451457977295
    8. ')' → logprob: -12.81201457977295
    9. '0' → logprob: -12.87451457977295
    10. '  ' → logprob: -13.62451457977295

Token 606: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2175579071044922
    2. '[' → logprob: -1.7175579071044922
    3. '0' → logprob: -4.217557907104492
    4. ')' → logprob: -7.717557907104492
    5. '))' → logprob: -8.342557907104492
    6. '),' → logprob: -9.092557907104492
    7. ']))' → logprob: -9.217557907104492
    8. ' ' → logprob: -9.342557907104492
    9. ')),' → logprob: -9.592557907104492
    10. ')))' → logprob: -9.967557907104492

Token 607: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47456061840057373
    2. '1' → logprob: -0.9745606184005737
    3. '[' → logprob: -8.349560737609863
    4. ' ' → logprob: -8.474560737609863
    5. ')' → logprob: -10.849560737609863
    6. '(' → logprob: -12.349560737609863
    7. '2' → logprob: -12.537060737609863
    8. '   ' → logprob: -13.724560737609863
    9. '```' → logprob: -13.849560737609863
    10. 'p' → logprob: -13.974560737609863

Token 608: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.010313388891518116
    2. ']))' → logprob: -5.260313510894775
    3. ')' → logprob: -6.385313510894775
    4. '])' → logprob: -6.510313510894775
    5. ')))' → logprob: -7.385313510894775
    6. ' ))' → logprob: -7.760313510894775
    7. '[' → logprob: -8.010313034057617
    8. '0' → logprob: -8.635313034057617
    9. '()))' → logprob: -8.635313034057617
    10. '1' → logprob: -9.760313034057617

Token 609: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15356013178825378
    2. '),' → logprob: -2.403560161590576
    3. ' or' → logprob: -3.028560161590576
    4. ')' → logprob: -5.903560161590576
    5. 'or' → logprob: -7.903560161590576
    6. ' ,' → logprob: -7.903560161590576
    7. '   ' → logprob: -9.778559684753418
    8. '  ' → logprob: -11.403559684753418
    9. ' ),' → logprob: -11.903559684753418
    10. ')),' → logprob: -12.028559684753418

Token 610: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.12693840265274048
    2. ' acc' → logprob: -2.1269383430480957
    3. '(acc' → logprob: -11.751938819885254
    4. ')' → logprob: -14.626938819885254
    5. 'p' → logprob: -14.751938819885254
    6. '	acc' → logprob: -15.001938819885254
    7. ' accu' → logprob: -15.251938819885254
    8. 'ac' → logprob: -15.751938819885254
    9. 'rs' → logprob: -15.751938819885254
    10. ' p' → logprob: -15.876938819885254

Token 611: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.02058766968548298
    2. ',' → logprob: -3.895587682723999
    3. ')' → logprob: -10.395587921142578
    4. ')),' → logprob: -12.145587921142578
    5. '   ' → logprob: -13.270587921142578
    6. ' ),' → logprob: -13.520587921142578
    7. ' ,' → logprob: -13.770587921142578
    8. 's' → logprob: -13.895587921142578
    9. '),
' → logprob: -14.145587921142578
    10. ',),' → logprob: -14.270587921142578

Token 612: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.000830355507787317
    2. 'range' → logprob: -7.125830173492432
    3. ' enumerate' → logprob: -10.62583065032959
    4. '(range' → logprob: -15.37583065032959
    5. 'enum' → logprob: -15.62583065032959
    6. 'filter' → logprob: -15.75083065032959
    7. '[' → logprob: -16.125829696655273
    8. '
' → logprob: -16.250829696655273
    9. ' range' → logprob: -16.375829696655273
    10. '[(' → logprob: -16.375829696655273

Token 613: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0008497710223309696
    2. '(S' → logprob: -7.375849723815918
    3. 'map' → logprob: -8.625849723815918
    4. '(item' → logprob: -11.250849723815918
    5. '((' → logprob: -11.875849723815918
    6. '(zip' → logprob: -12.375849723815918
    7. '(' → logprob: -12.375849723815918
    8. '(range' → logprob: -12.500849723815918
    9. '(list' → logprob: -12.625849723815918
    10. 'S' → logprob: -13.750849723815918

Token 614: '(lambda' (ID: 43341)
  Prédit: '(item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.005679429974406958
    2. '(lambda' → logprob: -5.255679607391357
    3. 'item' → logprob: -7.880679607391357
    4. '(part' → logprob: -10.3806791305542
    5. '(s' → logprob: -11.6306791305542
    6. 'lambda' → logprob: -12.0056791305542
    7. '(' → logprob: -12.2556791305542
    8. 'S' → logprob: -12.5056791305542
    9. '(sys' → logprob: -12.5056791305542
    10. '(S' → logprob: -13.0056791305542

Token 615: ' t' (ID: 260)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.7121953964233398
    2. 'lambda' → logprob: -0.7121953964233398
    3. ' item' → logprob: -5.21219539642334
    4. '(lambda' → logprob: -5.33719539642334
    5. 's' → logprob: -5.58719539642334
    6. ' lambda' → logprob: -6.33719539642334
    7. '(item' → logprob: -6.83719539642334
    8. 'x' → logprob: -6.96219539642334
    9. 'attr' → logprob: -7.96219539642334
    10. 'S' → logprob: -9.08719539642334

Token 616: ':' (ID: 25)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.51692134141922
    2. ':' → logprob: -1.5169212818145752
    3. '(lambda' → logprob: -2.516921281814575
    4. 'lambda' → logprob: -2.891921281814575
    5. 'item' → logprob: -3.641921281814575
    6. '(t' → logprob: -5.016921520233154
    7. 'ambda' → logprob: -5.141921520233154
    8. '(item' → logprob: -6.641921520233154
    9. ' t' → logprob: -6.766921520233154
    10. 's' → logprob: -7.016921520233154

Token 617: ' (' (ID: 350)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04590287059545517
    2. 'item' → logprob: -3.545902967453003
    3. '(t' → logprob: -4.670902729034424
    4. '(item' → logprob: -6.420902729034424
    5. 'lambda' → logprob: -6.670902729034424
    6. ' item' → logprob: -6.670902729034424
    7. ' t' → logprob: -6.795902729034424
    8. '(lambda' → logprob: -7.420902729034424
    9. 'operator' → logprob: -8.670903205871582
    10. ' (' → logprob: -9.170903205871582

Token 618: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0105765825137496
    2. '(t' → logprob: -4.6355767250061035
    3. ' t' → logprob: -8.510576248168945
    4. 'lambda' → logprob: -9.385576248168945
    5. 'item' → logprob: -9.510576248168945
    6. '(' → logprob: -10.010576248168945
    7. '(lambda' → logprob: -10.260576248168945
    8. ' (' → logprob: -10.260576248168945
    9. '-t' → logprob: -10.385576248168945
    10. ')' → logprob: -10.510576248168945

Token 619: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5596024990081787
    2. ':' → logprob: -1.6846024990081787
    3. 't' → logprob: -1.9346024990081787
    4. '(t' → logprob: -2.5596024990081787
    5. ':t' → logprob: -4.434602737426758
    6. '(' → logprob: -6.059602737426758
    7. ' t' → logprob: -6.309602737426758
    8. '   ' → logprob: -6.809602737426758
    9. '[t' → logprob: -6.934602737426758
    10. 'x' → logprob: -7.059602737426758

Token 620: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012209635227918625
    2. '0' → logprob: -4.512209415435791
    3. ' ' → logprob: -7.887209415435791
    4. '   ' → logprob: -8.38720989227295
    5. 't' → logprob: -8.63720989227295
    6. '2' → logprob: -9.38720989227295
    7. '[' → logprob: -9.82470989227295
    8. '
' → logprob: -10.76220989227295
    9. '```' → logprob: -10.88720989227295
    10. '::-' → logprob: -10.88720989227295

Token 621: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05922504886984825
    2. '[' → logprob: -3.309225082397461
    3. ',t' → logprob: -5.309225082397461
    4. '),' → logprob: -5.559225082397461
    5. ' ,' → logprob: -5.684225082397461
    6. '],' → logprob: -6.559225082397461
    7. 't' → logprob: -6.684225082397461
    8. ',p' → logprob: -7.559225082397461
    9. '[t' → logprob: -7.684225082397461
    10. '-' → logprob: -7.684225082397461

Token 622: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0009242036612704396
    2. ' t' → logprob: -7.375924110412598
    3. 'item' → logprob: -8.875924110412598
    4. '   ' → logprob: -10.500924110412598
    5. '(t' → logprob: -11.125924110412598
    6. ')' → logprob: -11.125924110412598
    7. 'lambda' → logprob: -11.250924110412598
    8. ' ' → logprob: -11.500924110412598
    9. '0' → logprob: -11.500924110412598
    10. 'p' → logprob: -11.625924110412598

Token 623: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014094396494328976
    2. '1' → logprob: -5.014094352722168
    3. ',' → logprob: -5.389094352722168
    4. '0' → logprob: -6.014094352722168
    5. '),' → logprob: -8.639094352722168
    6. ')' → logprob: -9.889094352722168
    7. 't' → logprob: -10.764094352722168
    8. '(' → logprob: -10.889094352722168
    9. '2' → logprob: -11.889094352722168
    10. '#' → logprob: -12.389094352722168

Token 624: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009340902324765921
    2. '1' → logprob: -7.12593412399292
    3. '[' → logprob: -9.250933647155762
    4. ' ' → logprob: -10.500933647155762
    5. ')' → logprob: -13.500933647155762
    6. '   ' → logprob: -14.125933647155762
    7. '2' → logprob: -14.188433647155762
    8. 't' → logprob: -14.188433647155762
    9. ',' → logprob: -14.813433647155762
    10. '```' → logprob: -15.250933647155762

Token 625: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0009538597078062594
    2. ',' → logprob: -7.750953674316406
    3. 'S' → logprob: -8.875953674316406
    4. ')' → logprob: -9.250953674316406
    5. '   ' → logprob: -9.375953674316406
    6. '(S' → logprob: -10.250953674316406
    7. ' ),' → logprob: -10.375953674316406
    8. ')),' → logprob: -10.375953674316406
    9. '))),' → logprob: -11.250953674316406
    10. ' ' → logprob: -11.625953674316406

Token 626: ' enumerate' (ID: 29671)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0011558164842426777
    2. ' S' → logprob: -7.126155853271484
    3. 'enumer' → logprob: -8.251155853271484
    4. '   ' → logprob: -10.876155853271484
    5. ' enumerate' → logprob: -11.251155853271484
    6. ')' → logprob: -11.376155853271484
    7. '  ' → logprob: -11.376155853271484
    8. '(S' → logprob: -12.376155853271484
    9. ' ' → logprob: -12.376155853271484
    10. '[S' → logprob: -12.626155853271484

Token 627: '(map' (ID: 16946)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.4289085268974304
    2. 'S' → logprob: -1.0539085865020752
    3. 's' → logprob: -10.053908348083496
    4. '[S' → logprob: -10.553908348083496
    5. '((' → logprob: -10.803908348083496
    6. ' S' → logprob: -10.803908348083496
    7. '(' → logprob: -10.928908348083496
    8. ')' → logprob: -11.428908348083496
    9. '(s' → logprob: -11.428908348083496
    10. 'input' → logprob: -12.178908348083496

Token 628: '(item' (ID: 10016)
  Prédit: '(item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.007588525302708149
    2. 'item' → logprob: -5.3825883865356445
    3. '(lambda' → logprob: -6.0075883865356445
    4. '(S' → logprob: -8.507588386535645
    5. 'S' → logprob: -9.382588386535645
    6. '(' → logprob: -10.132588386535645
    7. '(sys' → logprob: -10.257588386535645
    8. '(s' → logprob: -10.257588386535645
    9. '(part' → logprob: -11.007588386535645
    10. ')' → logprob: -11.132588386535645

Token 629: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0010798488510772586
    2. 'item' → logprob: -7.87608003616333
    3. 'get' → logprob: -8.251079559326172
    4. 'getitem' → logprob: -8.626079559326172
    5. 'lambda' → logprob: -8.751079559326172
    6. '(item' → logprob: -9.876079559326172
    7. '(lambda' → logprob: -10.876079559326172
    8. 'operator' → logprob: -11.376079559326172
    9. 'setter' → logprob: -11.501079559326172
    10. '=item' → logprob: -13.626079559326172

Token 630: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04186223819851875
    2. '(lambda' → logprob: -3.9168622493743896
    3. '0' → logprob: -4.1668620109558105
    4. '1' → logprob: -5.9168620109558105
    5. '(S' → logprob: -6.4168620109558105
    6. '(s' → logprob: -8.291862487792969
    7. 'S' → logprob: -8.416862487792969
    8. '(item' → logprob: -8.541862487792969
    9. '2' → logprob: -8.666862487792969
    10. '((' → logprob: -9.416862487792969

Token 631: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3878008723258972
    2. '1' → logprob: -1.137800931930542
    3. '(' → logprob: -8.012801170349121
    4. '2' → logprob: -8.262801170349121
    5. ' ' → logprob: -8.387801170349121
    6. '```' → logprob: -10.825301170349121
    7. '[' → logprob: -11.575301170349121
    8. '   ' → logprob: -11.825301170349121
    9. '-' → logprob: -12.075301170349121
    10. 'S' → logprob: -12.387801170349121

Token 632: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.15854284167289734
    2. ',' → logprob: -2.0335428714752197
    3. '(S' → logprob: -4.283542633056641
    4. ',S' → logprob: -7.533542633056641
    5. '   ' → logprob: -7.783542633056641
    6. 'S' → logprob: -8.15854263305664
    7. '))))' → logprob: -8.78354263305664
    8. ' ,' → logprob: -9.03354263305664
    9. ' ),' → logprob: -9.28354263305664
    10. ')))),' → logprob: -9.65854263305664

Token 633: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0004305500478949398
    2. '(S' → logprob: -8.2504301071167
    3. ' S' → logprob: -9.1254301071167
    4. 's' → logprob: -10.8754301071167
    5. 'rs' → logprob: -12.1254301071167
    6. '[S' → logprob: -12.3754301071167
    7. '   ' → logprob: -12.5004301071167
    8. 'item' → logprob: -12.5004301071167
    9. ')))' → logprob: -12.6254301071167
    10. ')' → logprob: -12.7504301071167

Token 634: ')))),' (ID: 35247)
  Prédit: '))),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))),' → logprob: -0.16617430746555328
    2. ')),' → logprob: -3.0411744117736816
    3. ')))),' → logprob: -3.2911744117736816
    4. '(S' → logprob: -4.291174411773682
    5. '()' → logprob: -4.666174411773682
    6. '   ' → logprob: -4.666174411773682
    7. '()))' → logprob: -4.791174411773682
    8. '))' → logprob: -4.916174411773682
    9. '),' → logprob: -5.166174411773682
    10. ')))' → logprob: -5.666174411773682

Token 635: ' [])
' (ID: 64395)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1169794425368309
    2. ' []' → logprob: -2.3669793605804443
    3. '[])' → logprob: -4.741979598999023
    4. ' [])' → logprob: -5.366979598999023
    5. '))' → logprob: -6.616979598999023
    6. ')' → logprob: -7.616979598999023
    7. 'acc' → logprob: -7.991979598999023
    8. ' ))' → logprob: -8.491979598999023
    9. '([]' → logprob: -8.616979598999023
    10. 'ls' → logprob: -9.241979598999023

Token 636: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04429279640316963
    2. '   ' → logprob: -3.794292688369751
    3. '
' → logprob: -5.16929292678833
    4. '<|end|>' → logprob: -5.29429292678833
    5. '[' → logprob: -5.91929292678833
    6. ':' → logprob: -6.41929292678833
    7. ' ' → logprob: -6.79429292678833
    8. '#' → logprob: -7.04429292678833
    9. 'def' → logprob: -7.16929292678833
    10. '    
' → logprob: -7.91929292678833

Token 637: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14191165566444397
    2. ' ' → logprob: -3.141911745071411
    3. ':' → logprob: -3.891911745071411
    4. '
' → logprob: -4.266911506652832
    5. '   ' → logprob: -4.391911506652832
    6. '[' → logprob: -4.516911506652832
    7. '#' (adapté à ' #') → logprob: -5.266911506652832
    8. '<|end|>' → logprob: -5.266911506652832
    9. ' 
' → logprob: -5.516911506652832
    10. ']' → logprob: -6.141911506652832

Token 638: ' Actually' (ID: 50557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6623109579086304
    2. ' ' → logprob: -1.0373109579086304
    3. '[' → logprob: -3.03731107711792
    4. '(' → logprob: -4.03731107711792
    5. '#' → logprob: -4.03731107711792
    6. ' )' → logprob: -4.28731107711792
    7. '_' → logprob: -5.16231107711792
    8. '    ' → logprob: -5.66231107711792
    9. '<|end|>' → logprob: -5.91231107711792
    10. ' 
' → logprob: -6.28731107711792

Token 639: ' above' (ID: 5151)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8456156253814697
    2. '#' → logprob: -1.7206156253814697
    3. 'def' → logprob: -2.3456156253814697
    4. 'heap' → logprob: -3.0956156253814697
    5. 'for' → logprob: -3.2206156253814697
    6. 'print' → logprob: -3.4706156253814697
    7. '...' → logprob: -4.220615386962891
    8. 'ls' → logprob: -4.345615386962891
    9. 'used' → logprob: -4.720615386962891
    10. 'pass' → logprob: -4.845615386962891

Token 640: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 641: ' nonsense' (ID: 79744)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9353266358375549
    2. 'unfinished' → logprob: -1.6853265762329102
    3. 'not' → logprob: -1.9353265762329102
    4. ' incomplete' → logprob: -3.31032657623291
    5. 'just' → logprob: -3.56032657623291
    6. 'cut' → logprob: -3.56032657623291
    7. 'a' → logprob: -3.93532657623291
    8. 'incorrect' → logprob: -4.06032657623291
    9. 'correct' → logprob: -4.18532657623291
    10. 'only' → logprob: -4.18532657623291

Token 642: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 643: ' value' (ID: 1432)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -1.8415799140930176
    2. 'i' → logprob: -2.0915799140930176
    3. 'heap' → logprob: -2.2165799140930176
    4. '_' → logprob: -2.4665799140930176
    5. 'p' → logprob: -2.4665799140930176
    6. ' now' → logprob: -2.9665799140930176
    7. 'the' → logprob: -3.3415799140930176
    8. 'he' → logprob: -3.4665799140930176
    9. '_now' → logprob: -3.9665799140930176
    10. 'continu' → logprob: -3.9665799140930176

Token 644: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 645: ' use' (ID: 1199)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 646: ' following' (ID: 3992)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ls' → logprob: -1.609054684638977
    2. 'S' → logprob: -1.734054684638977
    3. 'rs' → logprob: -2.1090545654296875
    4. '#' → logprob: -2.7340545654296875
    5. 'heap' → logprob: -2.8590545654296875
    6. 'N' → logprob: -3.3590545654296875
    7. 'p' → logprob: -3.3590545654296875
    8. 'for' → logprob: -3.3590545654296875
    9. 'def' → logprob: -3.4840545654296875
    10. 'enc' → logprob: -3.8590545654296875

Token 647: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1308792233467102
    2. 'def' → logprob: -2.8808791637420654
    3. '<|end|>' → logprob: -3.6308791637420654
    4. 'ls' → logprob: -5.0058794021606445
    5. '...' → logprob: -5.5058794021606445
    6. 's' → logprob: -5.6308794021606445
    7. ')' → logprob: -5.7558794021606445
    8. '#' → logprob: -5.7558794021606445
    9. '    
' → logprob: -5.7558794021606445
    10. ':' → logprob: -6.1308794021606445

Token 648: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2178242802619934
    2. 'def' → logprob: -2.3428242206573486
    3. ')' → logprob: -3.7178242206573486
    4. '[' → logprob: -3.8428242206573486
    5. '<|end|>' → logprob: -3.8428242206573486
    6. '#' → logprob: -4.842824459075928
    7. '...' → logprob: -5.342824459075928
    8. '    ' → logprob: -5.467824459075928
    9. '    
' → logprob: -5.592824459075928
    10. ']' → logprob: -6.842824459075928

Token 649: ' ls' (ID: 41498)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1783122718334198
    2. '    ' → logprob: -3.053312301635742
    3. ')' → logprob: -3.428312301635742
    4. '<|end|>' → logprob: -4.053312301635742
    5. 'def' → logprob: -4.303312301635742
    6. '[' → logprob: -4.303312301635742
    7. '...' → logprob: -4.678312301635742
    8. '#' → logprob: -5.178312301635742
    9. '[]' → logprob: -5.803312301635742
    10. ' ' → logprob: -6.553312301635742

Token 650: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14320865273475647
    2. '=' → logprob: -2.0182087421417236
    3. ',' → logprob: -8.143208503723145
    4. '=[]' → logprob: -9.268208503723145
    5. '.' → logprob: -10.393208503723145
    6. ')' → logprob: -10.518208503723145
    7. ':' → logprob: -10.893208503723145
    8. '   ' → logprob: -11.393208503723145
    9. 's' → logprob: -11.518208503723145
    10. 'def' → logprob: -11.643208503723145

Token 651: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.46800440549850464
    2. 'reduce' → logprob: -1.2180044651031494
    3. '[' → logprob: -3.3430044651031494
    4. '[-' → logprob: -3.9680044651031494
    5. 'list' → logprob: -4.21800422668457
    6. '[list' → logprob: -6.46800422668457
    7. '[]
' → logprob: -6.59300422668457
    8. '[d' → logprob: -6.59300422668457
    9. '[l' → logprob: -6.84300422668457
    10. '[])' → logprob: -7.71800422668457

Token 652: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0425681434571743
    2. '<|end|>' → logprob: -3.2925682067871094
    3. 'rs' → logprob: -6.542568206787109
    4. ')' → logprob: -7.667568206787109
    5. '...' → logprob: -7.792568206787109
    6. 'for' → logprob: -7.917568206787109
    7. '<|end|>' → logprob: -8.29256820678711
    8. ' for' → logprob: -8.29256820678711
    9. '```' → logprob: -8.41756820678711
    10. 'idx' → logprob: -8.54256820678711

Token 653: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2652819752693176
    2. '   ' → logprob: -1.5152819156646729
    3. 'rs' → logprob: -4.890282154083252
    4. ' for' → logprob: -5.265282154083252
    5. '<|end|>' → logprob: -8.515281677246094
    6. 'n' → logprob: -9.515281677246094
    7. '...' → logprob: -9.890281677246094
    8. 'he' → logprob: -10.640281677246094
    9. 'r' → logprob: -10.640281677246094
    10. ')' → logprob: -10.765281677246094

Token 654: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011967604048550129
    2. 'v' → logprob: -4.511967658996582
    3. 'p' → logprob: -8.136967658996582
    4. 'idx' → logprob: -8.386967658996582
    5. '_i' → logprob: -9.261967658996582
    6. 'k' → logprob: -9.636967658996582
    7. ' i' → logprob: -9.636967658996582
    8. 'l' → logprob: -9.886967658996582
    9. 'val' → logprob: -10.261967658996582
    10. 'x' → logprob: -11.011967658996582

Token 655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10231326520442963
    2. ' in' → logprob: -2.727313280105591
    3. 'in' → logprob: -3.477313280105591
    4. ',v' → logprob: -7.602313041687012
    5. ' ,' → logprob: -8.727313041687012
    6. '0' → logprob: -10.352313041687012
    7. '_,' → logprob: -10.602313041687012
    8. ',val' → logprob: -10.727313041687012
    9. ',n' → logprob: -10.852313041687012
    10. ',s' → logprob: -10.852313041687012

Token 656: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.7288703322410583
    2. '(p' → logprob: -1.1038703918457031
    3. '(s' → logprob: -2.728870391845703
    4. 'v' → logprob: -3.478870391845703
    5. '(x' → logprob: -3.728870391845703
    6. '(a' → logprob: -4.228870391845703
    7. '(t' → logprob: -4.353870391845703
    8. 'p' → logprob: -4.603870391845703
    9. 's' → logprob: -4.853870391845703
    10. '(r' → logprob: -5.353870391845703

Token 657: 'l' (ID: 75)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.31312382221221924
    2. 'l' → logprob: -1.5631238222122192
    3. 'a' → logprob: -3.6881237030029297
    4. 's' → logprob: -3.9381237030029297
    5. 'val' → logprob: -4.93812370300293
    6. 'x' → logprob: -6.06312370300293
    7. 'S' → logprob: -6.68812370300293
    8. 'L' → logprob: -6.93812370300293
    9. 'start' → logprob: -6.93812370300293
    10. 'f' → logprob: -7.93812370300293

Token 658: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000920869642868638
    2. 's' → logprob: -7.25092077255249
    3. ',s' → logprob: -9.250921249389648
    4. ',r' → logprob: -9.625921249389648
    5. ',v' → logprob: -10.750921249389648
    6. ',e' → logprob: -11.625921249389648
    7. ',i' → logprob: -12.625921249389648
    8. ',l' → logprob: -12.625921249389648
    9. ' ,' → logprob: -13.125921249389648
    10. 'v' → logprob: -13.250921249389648

Token 659: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.8908587662735954e-05
    2. ')' → logprob: -11.500019073486328
    3. ' r' → logprob: -11.875019073486328
    4. '```' → logprob: -14.625019073486328
    5. '   ' → logprob: -15.125019073486328
    6. '_)' → logprob: -15.250019073486328
    7. '

' → logprob: -15.500019073486328
    8. '_r' → logprob: -15.500019073486328
    9. '
' → logprob: -15.625019073486328
    10. '  ' → logprob: -17.375019073486328

Token 660: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7954958821064793e-05
    2. 'in' → logprob: -11.375018119812012
    3. ' )' → logprob: -12.250018119812012
    4. ' in' → logprob: -14.250018119812012
    5. '   ' → logprob: -14.625018119812012
    6. '),' → logprob: -16.500017166137695
    7. 's' → logprob: -17.000017166137695
    8. '_)' → logprob: -17.000017166137695
    9. '):' → logprob: -17.125017166137695
    10. ')
' → logprob: -17.250017166137695

Token 661: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.13802598416805267
    2. ' in' → logprob: -2.138025999069214
    3. ')' → logprob: -4.513025760650635
    4. 's' → logprob: -11.638026237487793
    5. '):
' → logprob: -11.638026237487793
    6. 'n' → logprob: -11.888026237487793
    7. 'import' → logprob: -12.638026237487793
    8. ' )' → logprob: -12.763026237487793
    9. '   ' → logprob: -12.763026237487793
    10. '_in' → logprob: -13.013026237487793

Token 662: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0009118211455643177
    2. ' enumerate' → logprob: -7.000911712646484
    3. 'in' → logprob: -15.625911712646484
    4. 'en' → logprob: -16.250911712646484
    5. 'enum' → logprob: -16.750911712646484
    6. '```' → logprob: -18.000911712646484
    7. 'enqueue' → logprob: -18.000911712646484
    8. 'range' → logprob: -18.125911712646484
    9. ')' → logprob: -18.500911712646484
    10. '
' → logprob: -19.250911712646484

Token 663: '(S' (ID: 6181)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.2948405128554441e-05
    2. ' S' → logprob: -11.37501335144043
    3. 'enumer' → logprob: -13.87501335144043
    4. '(S' → logprob: -15.12501335144043
    5. ')' → logprob: -15.75001335144043
    6. '[S' → logprob: -17.75001335144043
    7. '   ' → logprob: -18.00001335144043
    8. ' enumerate' → logprob: -18.12501335144043
    9. '
' → logprob: -18.50001335144043
    10. ' ' → logprob: -18.62501335144043

Token 664: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04867275804281235
    2. '):
' → logprob: -3.048672676086426
    3. ':' → logprob: -10.173672676086426
    4. ')' → logprob: -11.048672676086426
    5. '):
' → logprob: -11.048672676086426
    6. '   ' → logprob: -11.423672676086426
    7. ' ):' → logprob: -13.673672676086426
    8. '):

' → logprob: -13.923672676086426
    9. ',' → logprob: -14.173672676086426
    10. '**' → logprob: -15.548672676086426

Token 665: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0551619827747345
    2. '       ' → logprob: -3.055161952972412
    3. ' h' → logprob: -5.430161952972412
    4. 'h' → logprob: -6.305161952972412
    5. '<|end|>' → logprob: -9.55516242980957
    6. ',' → logprob: -9.80516242980957
    7. '    ' → logprob: -10.30516242980957
    8. ' if' → logprob: -10.43016242980957
    9. '  ' → logprob: -11.18016242980957
    10. ' ' → logprob: -11.18016242980957

Token 666: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.5831276774406433
    2. '   ' → logprob: -0.8331276774406433
    3. ' h' → logprob: -5.083127498626709
    4. '       ' → logprob: -7.083127498626709
    5. '	h' → logprob: -9.708127975463867
    6. 'ls' → logprob: -10.958127975463867
    7. '  ' → logprob: -11.333127975463867
    8. '    ' → logprob: -11.583127975463867
    9. ' ' → logprob: -12.208127975463867
    10. ' ls' → logprob: -12.333127975463867

Token 667: 'push' (ID: 18873)
  Prédit: 'push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -3.6789137084269896e-05
    2. 'ush' → logprob: -10.37503719329834
    3. '.push' → logprob: -12.62503719329834
    4. 'h' → logprob: -13.87503719329834
    5. '_push' → logprob: -15.12503719329834
    6. '	push' → logprob: -15.25003719329834
    7. ' push' → logprob: -15.50003719329834
    8. 'p' → logprob: -15.50003719329834
    9. '   ' → logprob: -15.62503719329834
    10. '(push' → logprob: -16.500036239624023

Token 668: '(ls' (ID: 128476)
  Prédit: '(ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ls' → logprob: -3.650518920039758e-06
    2. 'ls' → logprob: -12.750003814697266
    3. '(rs' → logprob: -14.125003814697266
    4. ' ls' → logprob: -18.000003814697266
    5. '_ls' → logprob: -18.125003814697266
    6. '(' → logprob: -18.375003814697266
    7. '(lst' → logprob: -19.000003814697266
    8. '(l' → logprob: -19.125003814697266
    9. 'LS' → logprob: -20.000003814697266
    10. '(lhs' → logprob: -20.125003814697266

Token 669: ',' (ID: 11)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.007205605506896973
    2. ',' → logprob: -5.382205486297607
    3. '(-(' → logprob: -6.757205486297607
    4. '((-' → logprob: -7.132205486297607
    5. ' (-' → logprob: -8.007205963134766
    6. '(' → logprob: -8.632205963134766
    7. '(enc' → logprob: -9.882205963134766
    8. ')' → logprob: -10.382205963134766
    9. '((' → logprob: -11.757205963134766
    10. ',-' → logprob: -12.507205963134766

Token 670: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1309548318386078
    2. ' -' → logprob: -2.1309547424316406
    3. '-(' → logprob: -5.880954742431641
    4. '-inc' → logprob: -8.13095474243164
    5. '(-' → logprob: -8.38095474243164
    6. ' -(' → logprob: -8.88095474243164
    7. '-l' → logprob: -9.38095474243164
    8. '-int' → logprob: -9.75595474243164
    9. ' ' → logprob: -9.75595474243164
    10. '   ' → logprob: -10.13095474243164

Token 671: 'l' (ID: 75)
  Prédit: 'enc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enc' → logprob: -0.03989739343523979
    2. '(enc' → logprob: -3.9148974418640137
    3. '(l' → logprob: -4.289897441864014
    4. '((' → logprob: -5.539897441864014
    5. 'l' → logprob: -6.789897441864014
    6. '(i' → logprob: -8.914896965026855
    7. '(' → logprob: -9.039896965026855
    8. ' enc' → logprob: -9.914896965026855
    9. ' (' → logprob: -10.539896965026855
    10. '(((' → logprob: -10.914896965026855

Token 672: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019695531576871872
    2. ',' → logprob: -4.26969575881958
    3. ')
' → logprob: -5.76969575881958
    4. '   ' → logprob: -7.51969575881958
    5. ' *' → logprob: -7.76969575881958
    6. ' )' → logprob: -8.269695281982422
    7. '<|end|>' → logprob: -8.269695281982422
    8. '*' → logprob: -8.894695281982422
    9. '),' → logprob: -9.144695281982422
    10. '       ' → logprob: -9.269695281982422

Token 673: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0007267289329320192
    2. ' base' → logprob: -7.875726699829102
    3. 'N' → logprob: -8.250726699829102
    4. '100' → logprob: -9.750726699829102
    5. '(base' → logprob: -10.625726699829102
    6. ' N' → logprob: -14.375726699829102
    7. '10' → logprob: -14.500726699829102
    8. 'mod' → logprob: -15.000726699829102
    9. '_base' → logprob: -15.250726699829102
    10. '(N' → logprob: -15.500726699829102

Token 674: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.48128223419189453
    2. '-' → logprob: -0.9812822341918945
    3. '+' → logprob: -5.7312822341918945
    4. ' ' → logprob: -6.7312822341918945
    5. ' +' → logprob: -6.9812822341918945
    6. '   ' → logprob: -7.6062822341918945
    7. '-i' → logprob: -7.6062822341918945
    8. ')' → logprob: -8.231282234191895
    9. ',' → logprob: -8.981282234191895
    10. '+i' → logprob: -9.106282234191895

Token 675: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0014978413237258792
    2. ' i' → logprob: -7.001497745513916
    3. '(' → logprob: -8.376498222351074
    4. '(i' → logprob: -8.876498222351074
    5. '-i' → logprob: -9.376498222351074
    6. ' (' → logprob: -9.876498222351074
    7. '-' → logprob: -10.376498222351074
    8. '(-' → logprob: -10.876498222351074
    9. ' -' → logprob: -11.626498222351074
    10. 'r' → logprob: -12.251498222351074

Token 676: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010330478107789531
    2. ' )' → logprob: -9.500102996826172
    3. ')
' → logprob: -10.500102996826172
    4. '   ' → logprob: -15.500102996826172
    5. ')

' → logprob: -16.000102996826172
    6. '<|end|>' → logprob: -16.125102996826172
    7. ')return' → logprob: -16.250102996826172
    8. ')#' → logprob: -16.625102996826172
    9. '`)' → logprob: -16.875102996826172
    10. ')`' → logprob: -17.375102996826172

Token 677: '   ' (ID: 271)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -2.451116051815916e-05
    2. '   ' → logprob: -10.875024795532227
    3. ' rs' → logprob: -12.500024795532227
    4. '	rs' → logprob: -13.875024795532227
    5. '_rs' → logprob: -15.250024795532227
    6. '(rs' → logprob: -15.625024795532227
    7. '$rs' → logprob: -15.750024795532227
    8. 'r' → logprob: -16.250024795532227
    9. '    
' → logprob: -16.375024795532227
    10. 'for' → logprob: -17.000024795532227

Token 678: ' rs' (ID: 15181)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' (adapté à ' rs') → logprob: -2.9875325708417222e-05
    2. '   ' → logprob: -10.500029563903809
    3. ' rs' → logprob: -13.375029563903809
    4. '	rs' → logprob: -14.375029563903809
    5. '    
' → logprob: -16.375030517578125
    6. '_rs' → logprob: -16.500030517578125
    7. '(rs' → logprob: -17.000030517578125
    8. '$rs' → logprob: -17.000030517578125
    9. '.rs' → logprob: -19.625030517578125
    10. ' ' → logprob: -19.625030517578125

Token 679: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868749439716339
    2. '=' → logprob: -1.1368749141693115
    3. '=[]' → logprob: -12.51187515258789
    4. ':' → logprob: -16.88687515258789
    5. '=[]
' → logprob: -17.01187515258789
    6. '   ' → logprob: -17.38687515258789
    7. '.clear' → logprob: -17.51187515258789
    8. 's' → logprob: -17.63687515258789
    9. '  ' → logprob: -17.76187515258789
    10. '[:]' → logprob: -18.01187515258789

Token 680: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.04865958169102669
    2. '[]' → logprob: -3.048659563064575
    3. '[]

' → logprob: -9.548659324645996
    4. ' []
' → logprob: -14.423659324645996
    5. ' []' → logprob: -15.673659324645996
    6. '[])
' → logprob: -16.548660278320312
    7. '[' → logprob: -17.173660278320312
    8. '=[]
' → logprob: -18.173660278320312
    9. 'deque' → logprob: -18.673660278320312
    10. '[]>' → logprob: -18.923660278320312

Token 681: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4741254150867462
    2. 'for' → logprob: -0.9741253852844238
    3. ' for' → logprob: -9.974125862121582
    4. '	for' → logprob: -13.474125862121582
    5. '<|end|>' → logprob: -15.724125862121582
    6. '```' → logprob: -16.099124908447266
    7. '       ' → logprob: -16.849124908447266
    8. ' ' → logprob: -17.099124908447266
    9. '  ' → logprob: -17.099124908447266
    10. '
' → logprob: -17.724124908447266

Token 682: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.030556796118617058
    2. '   ' → logprob: -3.5305566787719727
    3. ' for' → logprob: -7.155556678771973
    4. '	for' → logprob: -11.405556678771973
    5. ' ' → logprob: -12.030556678771973
    6. '<|end|>' → logprob: -12.655556678771973
    7. '  ' → logprob: -12.780556678771973
    8. '0' → logprob: -13.530556678771973
    9. '
' → logprob: -15.405556678771973
    10. 'For' → logprob: -15.780556678771973

Token 683: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.031157969729975e-05
    2. ' i' → logprob: -9.375090599060059
    3. 'r' → logprob: -13.375090599060059
    4. 'j' → logprob: -13.625090599060059
    5. '   ' → logprob: -14.125090599060059
    6. '<|end|>' → logprob: -15.000090599060059
    7. '```' → logprob: -15.375090599060059
    8. '	i' → logprob: -15.500090599060059
    9. '(i' → logprob: -15.750090599060059
    10. '  ' → logprob: -15.750090599060059

Token 684: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.53050296427682e-05
    2. ',r' → logprob: -10.75008487701416
    3. ' ,' → logprob: -10.87508487701416
    4. ' in' → logprob: -11.12508487701416
    5. 'r' → logprob: -11.25008487701416
    6. '_,' → logprob: -12.00008487701416
    7. 's' → logprob: -12.50008487701416
    8. 'in' → logprob: -13.37508487701416
    9. '0' → logprob: -14.75008487701416
    10. ' ' → logprob: -15.00008487701416

Token 685: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.024599716067314148
    2. ' (' → logprob: -4.149599552154541
    3. '(l' → logprob: -4.774599552154541
    4. 'r' → logprob: -9.5246000289917
    5. '   ' → logprob: -12.2746000289917
    6. '(_,' → logprob: -12.8996000289917
    7. ' ' → logprob: -13.5246000289917
    8. '(' → logprob: -13.5246000289917
    9. ' r' → logprob: -13.6496000289917
    10. '(L' → logprob: -14.5246000289917

Token 686: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.31529369950294495
    2. 'r' → logprob: -1.3152936697006226
    3. '_,' → logprob: -6.815293788909912
    4. '(l' → logprob: -7.940293788909912
    5. '(r' → logprob: -8.315293312072754
    6. ' l' → logprob: -8.940293312072754
    7. '(_,' → logprob: -9.565293312072754
    8. ' r' → logprob: -9.815293312072754
    9. '_l' → logprob: -10.315293312072754
    10. '_r' → logprob: -11.690293312072754

Token 687: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003212805895600468
    2. ',r' → logprob: -8.375321388244629
    3. 'r' → logprob: -9.625321388244629
    4. ' ,' → logprob: -10.875321388244629
    5. 's' → logprob: -13.875321388244629
    6. ' r' → logprob: -14.000321388244629
    7. ',
' → logprob: -14.000321388244629
    8. '_,' → logprob: -14.125321388244629
    9. ')' → logprob: -14.875321388244629
    10. '<|end|>' → logprob: -15.250321388244629

Token 688: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03805927932262421
    2. ' r' → logprob: -3.2880592346191406
    3. ',' → logprob: -12.41305923461914
    4. ' ' → logprob: -12.78805923461914
    5. '   ' → logprob: -12.78805923461914
    6. '<|end|>' → logprob: -13.85055923461914
    7. '```' → logprob: -14.03805923461914
    8. '  ' → logprob: -14.03805923461914
    9. ',r' → logprob: -14.16305923461914
    10. '(r' → logprob: -14.22555923461914

Token 689: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.670925358776003e-05
    2. 'in' → logprob: -9.875066757202148
    3. ' in' → logprob: -11.250066757202148
    4. ' )' → logprob: -14.000066757202148
    5. ',' → logprob: -15.375066757202148
    6. '),' → logprob: -15.875066757202148
    7. 's' → logprob: -16.00006675720215
    8. '   ' → logprob: -16.25006675720215
    9. 'In' → logprob: -16.25006675720215
    10. '):
' → logprob: -16.62506675720215

Token 690: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.011085901409387589
    2. ' in' → logprob: -4.5110859870910645
    3. '   ' → logprob: -10.261085510253906
    4. ',' → logprob: -13.636085510253906
    5. ' ' → logprob: -14.261085510253906
    6. '  ' → logprob: -14.886085510253906
    7. 'enumer' → logprob: -15.386085510253906
    8. '[' → logprob: -15.636085510253906
    9. '       ' → logprob: -16.011085510253906
    10. ')' → logprob: -16.136085510253906

Token 691: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.050234608352184296
    2. ' enumerate' → logprob: -3.05023455619812
    3. 'h' → logprob: -6.425234794616699
    4. ' h' → logprob: -10.9252347946167
    5. 'en' → logprob: -12.3002347946167
    6. 'he' → logprob: -14.0502347946167
    7. ' enumer' → logprob: -14.1752347946167
    8. 'enum' → logprob: -14.6752347946167
    9. 'enqueue' → logprob: -14.6752347946167
    10. '   ' → logprob: -15.1752347946167

Token 692: '(S' (ID: 6181)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.250063180923462
    2. 'r' → logprob: -1.250063180923462
    3. 'rs' → logprob: -1.750063180923462
    4. '[(' → logprob: -2.875063180923462
    5. ' enumerate' → logprob: -3.250063180923462
    6. 'enumer' → logprob: -3.500063180923462
    7. 's' → logprob: -3.750063180923462
    8. 'range' → logprob: -3.750063180923462
    9. 'h' → logprob: -3.875063180923462
    10. ' rs' → logprob: -4.000062942504883

Token 693: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5597934722900391
    2. '):' → logprob: -0.9347934722900391
    3. '   ' → logprob: -3.684793472290039
    4. ',' → logprob: -5.184793472290039
    5. ':' → logprob: -5.434793472290039
    6. '):
' → logprob: -7.934793472290039
    7. ':
' → logprob: -8.184793472290039
    8. '       ' → logprob: -9.059793472290039
    9. '=' → logprob: -10.809793472290039
    10. ')' → logprob: -10.934793472290039

Token 694: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009615362621843815
    2. '       ' → logprob: -4.759615421295166
    3. 'h' → logprob: -7.009615421295166
    4. ' h' → logprob: -9.259614944458008
    5. '	h' → logprob: -13.759614944458008
    6. '    ' → logprob: -15.009614944458008
    7. '```' → logprob: -15.759614944458008
    8. '  ' → logprob: -15.884614944458008
    9. '   ' → logprob: -16.009614944458008
    10. ' ' → logprob: -16.759614944458008

Token 695: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.002879176288843155
    2. '   ' → logprob: -6.3778791427612305
    3. ' h' → logprob: -6.7528791427612305
    4. '	h' → logprob: -12.12787914276123
    5. '  ' → logprob: -13.12787914276123
    6. ' ' → logprob: -14.00287914276123
    7. 'he' → logprob: -15.25287914276123
    8. '       ' → logprob: -16.377880096435547
    9. '    ' → logprob: -16.752880096435547
    10. '
' → logprob: -17.127880096435547

Token 696: 'push' (ID: 18873)
  Prédit: 'push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.001044955221004784
    2. 'h' → logprob: -6.876044750213623
    3. 'ush' → logprob: -11.751045227050781
    4. '.push' → logprob: -13.376045227050781
    5. 'p' → logprob: -14.126045227050781
    6. ' push' → logprob: -14.251045227050781
    7. '_push' → logprob: -15.001045227050781
    8. '	push' → logprob: -15.376045227050781
    9. 'put' → logprob: -15.751045227050781
    10. '(push' → logprob: -16.00104522705078

Token 697: '(rs' (ID: 25887)
  Prédit: '(rs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rs' → logprob: -0.014166207052767277
    2. 'rs' → logprob: -4.264166355133057
    3. '$rs' → logprob: -13.764165878295898
    4. ' rs' → logprob: -13.889165878295898
    5. '	rs' → logprob: -14.514165878295898
    6. 's' → logprob: -16.6391658782959
    7. '(' → logprob: -16.8891658782959
    8. '_rs' → logprob: -17.6391658782959
    9. ' (' → logprob: -18.1391658782959
    10. '```' → logprob: -18.2641658782959

Token 698: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003926179837435484
    2. ',r' → logprob: -5.8789262771606445
    3. '(r' → logprob: -6.8789262771606445
    4. ' ,' → logprob: -10.503926277160645
    5. 'r' → logprob: -10.628926277160645
    6. ',(' → logprob: -11.128926277160645
    7. '   ' → logprob: -11.753926277160645
    8. ',i' → logprob: -12.503926277160645
    9. ' r' → logprob: -13.003926277160645
    10. '(' → logprob: -13.003926277160645

Token 699: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005966596305370331
    2. ' r' → logprob: -5.130966663360596
    3. '(r' → logprob: -10.505966186523438
    4. 'enc' → logprob: -13.005966186523438
    5. '   ' → logprob: -13.130966186523438
    6. ' ' → logprob: -13.130966186523438
    7. ' enc' → logprob: -14.005966186523438
    8. '  ' → logprob: -14.755966186523438
    9. '	r' → logprob: -14.880966186523438
    10. 'l' → logprob: -15.005966186523438

Token 700: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20650848746299744
    2. ',' → logprob: -1.7065085172653198
    3. ')' → logprob: -5.581508636474609
    4. ' *' → logprob: -6.706508636474609
    5. '),' → logprob: -11.20650863647461
    6. '   ' → logprob: -11.45650863647461
    7. ' ' → logprob: -11.45650863647461
    8. ' ,' → logprob: -11.70650863647461
    9. '```' → logprob: -11.83150863647461
    10. '<|end|>' → logprob: -11.83150863647461

Token 701: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0004892880679108202
    2. ' base' → logprob: -7.625489234924316
    3. '(base' → logprob: -14.125489234924316
    4. ')' → logprob: -16.500490188598633
    5. '0' → logprob: -16.500490188598633
    6. ' ' → logprob: -16.625490188598633
    7. '   ' → logprob: -16.875490188598633
    8. '	base' → logprob: -17.250490188598633
    9. 'b' → logprob: -17.500490188598633
    10. '  ' → logprob: -17.500490188598633

Token 702: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38689929246902466
    2. '+' → logprob: -1.1368992328643799
    3. '+i' → logprob: -11.2618989944458
    4. ')' → logprob: -11.8868989944458
    5. ' ' → logprob: -13.2618989944458
    6. '-' → logprob: -13.3868989944458
    7. ',' → logprob: -13.6368989944458
    8. ' -' → logprob: -13.6368989944458
    9. '   ' → logprob: -13.7618989944458
    10. '+r' → logprob: -15.0118989944458

Token 703: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.253713218029588e-05
    2. ' i' → logprob: -10.125062942504883
    3. '-i' → logprob: -11.125062942504883
    4. '-' → logprob: -12.750062942504883
    5. '(i' → logprob: -13.625062942504883
    6. '(' → logprob: -13.625062942504883
    7. ' -' → logprob: -14.250062942504883
    8. '(-' → logprob: -14.500062942504883
    9. '   ' → logprob: -15.125062942504883
    10. '
' → logprob: -15.375062942504883

Token 704: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.77627644513268e-06
    2. ')
' → logprob: -12.250008583068848
    3. '   ' → logprob: -12.625008583068848
    4. ' )' → logprob: -14.250008583068848
    5. ')

' → logprob: -17.625009536743164
    6. '))' → logprob: -17.750009536743164
    7. ')#' → logprob: -18.000009536743164
    8. ')`' → logprob: -18.125009536743164
    9. '#' → logprob: -18.625009536743164
    10. ')return' → logprob: -19.125009536743164

Token 705: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25254926085472107
    2. 'while' → logprob: -2.127549171447754
    3. 'used' → logprob: -3.627549171447754
    4. 'selected' → logprob: -4.877549171447754
    5. 'dp' → logprob: -5.002549171447754
    6. '    
' → logprob: -5.377549171447754
    7. 'done' → logprob: -5.502549171447754
    8. 'cur' → logprob: -5.627549171447754
    9. 'visited' → logprob: -5.627549171447754
    10. 'seen' → logprob: -6.002549171447754

Token 706: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0978416204452515
    2. 'while' → logprob: -1.5978416204452515
    3. 'cur' → logprob: -2.472841739654541
    4. 'i' → logprob: -2.597841739654541
    5. 'count' → logprob: -3.097841739654541
    6. 'def' → logprob: -3.222841739654541
    7. 'used' → logprob: -3.972841739654541
    8. 'selected' → logprob: -3.972841739654541
    9. 'for' → logprob: -4.097841739654541
    10. ')' → logprob: -4.222841739654541

Token 707: ' Store' (ID: 12600)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5661964416503906
    2. 'used' → logprob: -1.9411964416503906
    3. 'ans' → logprob: -2.3161964416503906
    4. 'res' → logprob: -3.0661964416503906
    5. 'cnt' → logprob: -3.9411964416503906
    6. 'visited' → logprob: -4.066196441650391
    7. 'count' → logprob: -4.441196441650391
    8. 'seen' → logprob: -4.816196441650391
    9. 'answer' → logprob: -4.816196441650391
    10. '#' → logprob: -5.066196441650391

Token 708: ' original' (ID: 4756)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3974149823188782
    2. 'used' → logprob: -2.2724149227142334
    3. 'ans' → logprob: -3.6474149227142334
    4. '#' → logprob: -3.8974149227142334
    5. 'interval' → logprob: -4.1474151611328125
    6. 'active' → logprob: -4.1474151611328125
    7. 'events' → logprob: -4.7724151611328125
    8. 'removed' → logprob: -4.7724151611328125
    9. 'done' → logprob: -4.8974151611328125
    10. 'answer' → logprob: -5.1474151611328125

Token 709: ' for' (ID: 395)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.9447345733642578
    2. 'S' → logprob: -1.1947345733642578
    3. 'ranges' → logprob: -2.194734573364258
    4. 'indices' → logprob: -2.694734573364258
    5. 'positions' → logprob: -3.069734573364258
    6. '#' → logprob: -3.944734573364258
    7. ' intervals' → logprob: -4.694734573364258
    8. 'segments' → logprob: -4.944734573364258
    9. 'points' → logprob: -5.444734573364258
    10. 'order' → logprob: -5.444734573364258

Token 710: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.5353754758834839
    2. 'return' → logprob: -2.1603755950927734
    3. 'reference' → logprob: -2.2853755950927734
    4. 'debug' → logprob: -2.4103755950927734
    5. 'answer' → logprob: -2.7853755950927734
    6. ')' → logprob: -3.4103755950927734
    7. 'reverse' → logprob: -3.7853755950927734
    8. 'sorting' → logprob: -4.035375595092773
    9. 'original' → logprob: -4.285375595092773
    10. '_' → logprob: -4.410375595092773

Token 711: ' second' (ID: 3099)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.7565386295318604
    2. 'dp' → logprob: -1.8815386295318604
    3. 'answer' → logprob: -2.5065386295318604
    4. '#' → logprob: -2.7565386295318604
    5. 'sorted' → logprob: -3.2565386295318604
    6. 'main' → logprob: -3.5065386295318604
    7. 'next' → logprob: -3.5065386295318604
    8. 's' → logprob: -3.8815386295318604
    9. 'indices' → logprob: -3.8815386295318604
    10. 'heap' → logprob: -3.8815386295318604

Token 712: ' pass' (ID: 1853)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.6293354034423828
    2. 'pass' → logprob: -1.8793354034423828
    3. 'ranges' → logprob: -2.254335403442383
    4. 'indices' → logprob: -2.504335403442383
    5. 'line' → logprob: -2.629335403442383
    6. 'part' → logprob: -2.754335403442383
    7. '<|end|>' → logprob: -3.004335403442383
    8. 'def' → logprob: -3.379335403442383
    9. 'token' → logprob: -3.879335403442383
    10. 'lines' → logprob: -4.004335403442383

Token 713: ' using' (ID: 2360)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16532841324806213
    2. '<|end|>' → logprob: -3.4153285026550293
    3. 'orig' → logprob: -3.6653285026550293
    4. 'original' → logprob: -3.9153285026550293
    5. 'S' → logprob: -4.165328502655029
    6. '
' → logprob: -4.790328502655029
    7. '    
' → logprob: -4.790328502655029
    8. 's' → logprob: -4.915328502655029
    9. ',' → logprob: -5.915328502655029
    10. 'indices' → logprob: -6.040328502655029

Token 714: ' unnecessarily' (ID: 169842)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.03207745775580406
    2. 'd' → logprob: -4.407077312469482
    3. 'rs' → logprob: -4.782077312469482
    4. 'ls' → logprob: -6.032077312469482
    5. 'cp' → logprob: -6.282077312469482
    6. 'deep' → logprob: -6.532077312469482
    7. 'dp' → logprob: -6.657077312469482
    8. 'r' → logprob: -7.157077312469482
    9. 's' → logprob: -7.532077312469482
    10. 'copy' → logprob: -8.15707778930664

Token 715: ' deep' (ID: 8103)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.057012677192688
    2. 'copy' → logprob: -2.3070125579833984
    3. 'deep' → logprob: -2.3070125579833984
    4. '#' → logprob: -2.5570125579833984
    5. '   ' → logprob: -2.8070125579833984
    6. 's' → logprob: -2.9320125579833984
    7. 'ls' → logprob: -3.3070125579833984
    8. 'dp' → logprob: -3.3070125579833984
    9. 'd' → logprob: -3.4320125579833984
    10. '...' → logprob: -3.5570125579833984

Token 716: ' copy' (ID: 5150)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.0014939149841666222
    2. 'cp' → logprob: -7.25149393081665
    3. 'cpy' → logprob: -7.25149393081665
    4. 'd' → logprob: -9.751493453979492
    5. 'cop' → logprob: -11.501493453979492
    6. 'c' → logprob: -12.376493453979492
    7. 'deep' → logprob: -13.751493453979492
    8. ' copy' → logprob: -14.501493453979492
    9. 'import' → logprob: -16.001493453979492
    10. '_copy' → logprob: -16.126493453979492

Token 717: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.203718900680542
    2. 'S' → logprob: -1.953718900680542
    3. 'orig' → logprob: -4.578719139099121
    4. ' S' → logprob: -5.078719139099121
    5. 'O' → logprob: -5.078719139099121
    6. ' original' → logprob: -5.328719139099121
    7. 'original' → logprob: -5.578719139099121
    8. 's' → logprob: -6.078719139099121
    9. ' orig' → logprob: -6.203719139099121
    10. '
' → logprob: -6.203719139099121

Token 718: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3074619472026825
    2. 'S' → logprob: -2.182461977005005
    3. 'orig' → logprob: -3.307461977005005
    4. ' S' → logprob: -3.432461977005005
    5. ' orig' → logprob: -3.682461977005005
    6. ' original' → logprob: -4.682461738586426
    7. 'os' → logprob: -5.057461738586426
    8. 'original' → logprob: -5.182461738586426
    9. 'O' → logprob: -5.307461738586426
    10. 'og' → logprob: -5.432461738586426

Token 719: ' l' (ID: 305)
  Prédit: 'orig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'orig' → logprob: -0.7824973464012146
    2. 'S' → logprob: -1.0324974060058594
    3. 'original' → logprob: -2.9074974060058594
    4. 'org' → logprob: -3.2824974060058594
    5. 'ori' → logprob: -3.5324974060058594
    6. 'os' → logprob: -4.407497406005859
    7. 'og' → logprob: -4.782497406005859
    8. '   ' → logprob: -5.032497406005859
    9. 'O' → logprob: -5.157497406005859
    10. 'or' → logprob: -5.157497406005859

Token 720: 'sc' (ID: 2786)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10733325779438019
    2. 's' → logprob: -2.607333183288574
    3. ' =' → logprob: -5.107333183288574
    4. '_S' → logprob: -5.107333183288574
    5. '_s' → logprob: -5.357333183288574
    6. 'ls' → logprob: -6.732333183288574
    7. 'orig' → logprob: -7.107333183288574
    8. '_orig' → logprob: -7.232333183288574
    9. 'original' → logprob: -7.482333183288574
    10. 'es' → logprob: -7.482333183288574

Token 721: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27327263355255127
    2. '=' → logprob: -1.5232726335525513
    3. 'opy' → logprob: -4.648272514343262
    4. 's' → logprob: -5.148272514343262
    5. 'p' → logprob: -6.898272514343262
    6. 'opes' → logprob: -6.898272514343262
    7. 'ls' → logprob: -7.523272514343262
    8. 'es' → logprob: -8.023272514343262
    9. 'rs' → logprob: -8.148272514343262
    10. 'o' → logprob: -8.273272514343262

Token 722: ' r' (ID: 428)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11224474012851715
    2. 'ls' → logprob: -2.3622448444366455
    3. ' d' → logprob: -5.237244606018066
    4. '=' → logprob: -5.362244606018066
    5. ' ls' → logprob: -7.112244606018066
    6. 'l' → logprob: -7.362244606018066
    7. '=d' → logprob: -8.487244606018066
    8. 'cp' → logprob: -9.112244606018066
    9. ' =' → logprob: -9.612244606018066
    10. 'rs' → logprob: -10.112244606018066

Token 723: 'sc' (ID: 2786)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21222423017024994
    2. 'sc' → logprob: -1.8372242450714111
    3. 'c' → logprob: -3.462224245071411
    4. ' =' → logprob: -7.837224006652832
    5. '=' → logprob: -8.837224006652832
    6. '=sc' → logprob: -10.462224006652832
    7. 'с' → logprob: -11.462224006652832
    8. 'scp' → logprob: -12.087224006652832
    9. 'scss' → logprob: -12.837224006652832
    10. 'pc' → logprob: -13.587224006652832

Token 724: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018177449703216553
    2. ' =' → logprob: -4.018177509307861
    3. ',' → logprob: -10.518177032470703
    4. 's' → logprob: -15.643177032470703
    5. '=d' → logprob: -16.768177032470703
    6. '=l' → logprob: -16.768177032470703
    7. '=}' → logprob: -17.018177032470703
    8. '=[]' → logprob: -17.018177032470703
    9. '=
' → logprob: -17.143177032470703
    10. '=

' → logprob: -17.393177032470703

Token 725: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0003036457928828895
    2. '(d' → logprob: -8.500303268432617
    3. ' d' → logprob: -9.625303268432617
    4. '[d' → logprob: -10.500303268432617
    5. '(' → logprob: -12.750303268432617
    6. 'deep' → logprob: -13.625303268432617
    7. 'ls' → logprob: -14.625303268432617
    8. ' (' → logprob: -14.625303268432617
    9. ' ' → logprob: -14.625303268432617
    10. '[' → logprob: -14.875303268432617

Token 726: 'cp' (ID: 10450)
  Prédit: 'cp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cp' → logprob: -0.000523246475495398
    2. 'c' → logprob: -8.375523567199707
    3. '(ls' → logprob: -8.750523567199707
    4. '(cp' → logprob: -9.375523567199707
    5. 'ls' → logprob: -10.875523567199707
    6. '(d' → logprob: -11.750523567199707
    7. '([' → logprob: -12.125523567199707
    8. 'p' → logprob: -12.375523567199707
    9. 'd' → logprob: -12.375523567199707
    10. 'cs' → logprob: -12.500523567199707

Token 727: '(ls' (ID: 128476)
  Prédit: '(ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ls' → logprob: -0.004909600596874952
    2. '((' → logprob: -5.379909515380859
    3. 'ls' → logprob: -8.50490951538086
    4. '([' → logprob: -9.37990951538086
    5. '(' → logprob: -14.12990951538086
    6. '(l' → logprob: -14.75490951538086
    7. ' ls' → logprob: -15.12990951538086
    8. '(rs' → logprob: -15.62990951538086
    9. '(lst' → logprob: -15.87990951538086
    10. '_ls' → logprob: -15.87990951538086

Token 728: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -1.1756367712223437e-05
    2. ' ),' → logprob: -11.750011444091797
    3. '   ' → logprob: -13.125011444091797
    4. ' ' → logprob: -13.875011444091797
    5. ')' → logprob: -14.750011444091797
    6. ',' → logprob: -15.500011444091797
    7. '  ' → logprob: -15.625011444091797
    8. ',),' → logprob: -16.000011444091797
    9. '],' → logprob: -18.250011444091797
    10. '       ' → logprob: -19.125011444091797

Token 729: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005382588133215904
    2. ' d' → logprob: -7.875538349151611
    3. 'rs' → logprob: -9.125537872314453
    4. 'dq' → logprob: -10.125537872314453
    5. 'r' → logprob: -12.625537872314453
    6. 'dcc' → logprob: -13.125537872314453
    7. 'ds' → logprob: -13.500537872314453
    8. 'dc' → logprob: -13.750537872314453
    9. 'rc' → logprob: -14.250537872314453
    10. ' rs' → logprob: -15.000537872314453

Token 730: 'cp' (ID: 10450)
  Prédit: 'cp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cp' → logprob: -0.0018110794480890036
    2. 'c' → logprob: -6.3768110275268555
    3. 'cq' → logprob: -9.501811027526855
    4. 'p' → logprob: -11.876811027526855
    5. 'd' → logprob: -11.876811027526855
    6. 'pq' → logprob: -12.001811027526855
    7. 'dq' → logprob: -12.251811027526855
    8. 'q' → logprob: -13.001811027526855
    9. 'rs' → logprob: -13.251811027526855
    10. 'scp' → logprob: -13.626811027526855

Token 731: '(rs' (ID: 25887)
  Prédit: '(rs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rs' → logprob: -0.00023250321100931615
    2. 'rs' → logprob: -8.375232696533203
    3. '$rs' → logprob: -13.625232696533203
    4. '	rs' → logprob: -14.875232696533203
    5. ' rs' → logprob: -15.250232696533203
    6. '
' → logprob: -17.125232696533203
    7. '(r' → logprob: -17.375232696533203
    8. '(
' → logprob: -17.500232696533203
    9. '(' → logprob: -17.625232696533203
    10. '```' → logprob: -17.875232696533203

Token 732: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.845798710244708e-05
    2. '   ' → logprob: -10.500038146972656
    3. ')
' → logprob: -11.750038146972656
    4. ' )' → logprob: -13.125038146972656
    5. '<|end|>' → logprob: -15.000038146972656
    6. ')

' → logprob: -15.250038146972656
    7. '<|end|>' → logprob: -16.500038146972656
    8. 'def' → logprob: -16.500038146972656
    9. ')return' → logprob: -16.875038146972656
    10. '),' → logprob: -16.875038146972656

Token 733: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11600376665592194
    2. 'while' → logprob: -3.2410037517547607
    3. 'for' → logprob: -4.24100399017334
    4. '    
' → logprob: -4.49100399017334
    5. '#' → logprob: -4.99100399017334
    6. 'count' → logprob: -5.49100399017334
    7. 'i' → logprob: -5.61600399017334
    8. '<|end|>' → logprob: -5.74100399017334
    9. 'def' → logprob: -5.86600399017334
    10. 'current' → logprob: -5.99100399017334

Token 734: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4860667586326599
    2. 'dp' → logprob: -1.8610668182373047
    3. 'res' → logprob: -2.6110668182373047
    4. 'ret' → logprob: -3.7360668182373047
    5. 'used' → logprob: -3.8610668182373047
    6. 'answer' → logprob: -4.236066818237305
    7. 'for' → logprob: -4.361066818237305
    8. 'rem' → logprob: -5.111066818237305
    9. 'q' → logprob: -5.361066818237305
    10. 'cnt' → logprob: -5.486066818237305

Token 735: ' Function' (ID: 11035)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5163486003875732
    2. 'ans' → logprob: -2.3913486003875732
    3. 'used' → logprob: -2.5163486003875732
    4. 'res' → logprob: -3.0163486003875732
    5. '#' → logprob: -3.8913486003875732
    6. 'q' → logprob: -4.141348838806152
    7. 'visited' → logprob: -4.141348838806152
    8. 'cnt' → logprob: -4.641348838806152
    9. 'seen' → logprob: -4.641348838806152
    10. 'pos' → logprob: -4.891348838806152

Token 736: 'ally' (ID: 2146)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002991609275341034
    2. ' def' → logprob: -6.752991676330566
    3. 's' → logprob: -8.127991676330566
    4. '   ' → logprob: -8.252991676330566
    5. 'get' → logprob: -9.127991676330566
    6. 'find' → logprob: -9.252991676330566
    7. 'solve' → logprob: -9.377991676330566
    8. 'for' → logprob: -9.502991676330566
    9. 'calc' → logprob: -10.127991676330566
    10. 'extract' → logprob: -10.127991676330566

Token 737: ' convol' (ID: 191866)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05710259824991226
    2. ',' → logprob: -4.432102680206299
    3. 'process' → logprob: -4.557102680206299
    4. 'ls' → logprob: -4.807102680206299
    5. '   ' → logprob: -5.182102680206299
    6. 'merge' → logprob: -5.307102680206299
    7. ')' → logprob: -6.182102680206299
    8. ' def' → logprob: -6.432102680206299
    9. '#' → logprob: -6.682102680206299
    10. '
' → logprob: -6.807102680206299

Token 738: 'uted' (ID: 26369)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.02028937079012394
    2. 'ed' → logprob: -4.645289421081543
    3. 'ution' → logprob: -5.270289421081543
    4. 've' → logprob: -5.645289421081543
    5. 'ute' → logprob: -7.395289421081543
    6. 'ved' → logprob: -8.520289421081543
    7. 'uted' → logprob: -8.520289421081543
    8. 'utions' → logprob: -8.770289421081543
    9. 'def' → logprob: -8.895289421081543
    10. 'ec' → logprob: -9.645289421081543

Token 739: ' state' (ID: 2608)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15185809135437012
    2. '#' → logprob: -3.15185809135437
    3. ')' → logprob: -3.77685809135437
    4. '   ' → logprob: -4.151858329772949
    5. 'pass' → logprob: -4.151858329772949
    6. '<|end|>' → logprob: -4.276858329772949
    7. 'dp' → logprob: -5.276858329772949
    8. 'res' → logprob: -5.651858329772949
    9. 's' → logprob: -6.401858329772949
    10. '...' → logprob: -6.526858329772949

Token 740: ' handling' (ID: 17491)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48796799778938293
    2. '=' → logprob: -2.1129679679870605
    3. ':' → logprob: -2.3629679679870605
    4. ',' → logprob: -2.6129679679870605
    5. 'def' → logprob: -3.6129679679870605
    6. 's' → logprob: -3.9879679679870605
    7. ')' → logprob: -4.4879679679870605
    8. '<|end|>' → logprob: -4.6129679679870605
    9. '=[]' → logprob: -5.1129679679870605
    10. '   ' → logprob: -5.2379679679870605

Token 741: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3296836018562317
    2. 'def' → logprob: -2.204683542251587
    3. ':' → logprob: -2.329683542251587
    4. ')' → logprob: -3.704683542251587
    5. '#' → logprob: -4.454683780670166
    6. '<|end|>' → logprob: -4.454683780670166
    7. '
' → logprob: -5.329683780670166
    8. 'state' → logprob: -5.454683780670166
    9. ',' → logprob: -5.704683780670166
    10. '    
' → logprob: -6.079683780670166

Token 742: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7686166763305664
    2. '   ' → logprob: -0.7686166763305664
    3. 'def' → logprob: -4.018616676330566
    4. ',' → logprob: -4.268616676330566
    5. ')' → logprob: -4.268616676330566
    6. ' ' → logprob: -5.018616676330566
    7. '(' → logprob: -5.393616676330566
    8. '<|end|>' → logprob: -5.643616676330566
    9. '#' → logprob: -6.393616676330566
    10. '    ' → logprob: -6.393616676330566

Token 743: ' def' (ID: 1056)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0224262475967407
    2. 'cur' → logprob: -2.022426128387451
    3. 'used' → logprob: -2.522426128387451
    4. 'state' → logprob: -2.897426128387451
    5. 'pos' → logprob: -3.522426128387451
    6. 'l' → logprob: -3.522426128387451
    7. 'res' → logprob: -3.522426128387451
    8. 'ans' → logprob: -3.647426128387451
    9. 'def' (adapté à ' def') → logprob: -3.772426128387451
    10. 'stack' → logprob: -4.022426128387451

Token 744: ' complex' (ID: 8012)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -1.1923527717590332
    2. 'pop' → logprob: -1.3173527717590332
    3. 'solve' → logprob: -1.3173527717590332
    4. 'update' → logprob: -3.692352771759033
    5. 'dfs' → logprob: -3.817352771759033
    6. 'step' → logprob: -3.817352771759033
    7. 'state' → logprob: -4.317352771759033
    8. 'search' → logprob: -4.317352771759033
    9. 'check' → logprob: -4.817352771759033
    10. 'solver' → logprob: -4.817352771759033

Token 745: '_game' (ID: 41386)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.03883199021220207
    2. 'state' → logprob: -3.538831949234009
    3. '_query' → logprob: -6.538832187652588
    4. '_condition' → logprob: -6.913832187652588
    5. '_states' → logprob: -6.913832187652588
    6. '_process' → logprob: -7.288832187652588
    7. '(state' → logprob: -7.663832187652588
    8. '_key' → logprob: -7.663832187652588
    9. 'def' → logprob: -7.788832187652588
    10. '_function' → logprob: -7.913832187652588

Token 746: '(ls' (ID: 128476)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.4593144953250885
    2. '(state' → logprob: -1.2093144655227661
    3. 'state' → logprob: -2.9593145847320557
    4. '(' → logprob: -5.209314346313477
    5. '():' → logprob: -5.959314346313477
    6. '(s' → logprob: -6.209314346313477
    7. '(_' → logprob: -6.834314346313477
    8. '(ls' → logprob: -6.834314346313477
    9. '(states' → logprob: -7.209314346313477
    10. '(pos' → logprob: -7.459314346313477

Token 747: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.045823566731997e-05
    2. '):' → logprob: -11.250020027160645
    3. ' ,' → logprob: -12.625020027160645
    4. ',r' → logprob: -13.375020027160645
    5. ',
' → logprob: -14.125020027160645
    6. '   ' → logprob: -14.750020027160645
    7. '):
' → logprob: -15.125020027160645
    8. '_,' → logprob: -15.500020027160645
    9. ':' → logprob: -15.750020027160645
    10. '‌,' → logprob: -15.875020027160645

Token 748: ' rs' (ID: 15181)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -0.03928150609135628
    2. ' rs' → logprob: -3.2892816066741943
    3. 'r' → logprob: -6.789281368255615
    4. ' r' → logprob: -10.664281845092773
    5. '   ' → logprob: -10.914281845092773
    6. ' ' → logprob: -11.039281845092773
    7. 'l' → logprob: -11.414281845092773
    8. '	rs' → logprob: -11.539281845092773
    9. 'rc' → logprob: -11.789281845092773
    10. ' l' → logprob: -11.914281845092773

Token 749: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20163629949092865
    2. '):' → logprob: -1.7016363143920898
    3. '):
' → logprob: -8.82663631439209
    4. '   ' → logprob: -10.20163631439209
    5. ':' → logprob: -11.57663631439209
    6. ')' → logprob: -11.70163631439209
    7. ' ,' → logprob: -12.20163631439209
    8. ',
' → logprob: -12.95163631439209
    9. ' ):' → logprob: -13.20163631439209
    10. '):
' → logprob: -13.32663631439209

Token 750: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010409192182123661
    2. '    ' → logprob: -5.510409355163574
    3. '       ' → logprob: -5.885409355163574
    4. '<|end|>' → logprob: -6.635409355163574
    5. '    
' → logprob: -7.135409355163574
    6. '	   ' → logprob: -7.760409355163574
    7. '(' → logprob: -8.760409355163574
    8. '	' → logprob: -9.010409355163574
    9. ')' → logprob: -9.135409355163574
    10. '	return' → logprob: -9.260409355163574

Token 751: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9254282116889954
    2. 'score' → logprob: -1.9254281520843506
    3. 'res' → logprob: -2.4254281520843506
    4. ' res' → logprob: -2.6754281520843506
    5. 'state' → logprob: -2.6754281520843506
    6. '   ' → logprob: -3.1754281520843506
    7. 'turn' → logprob: -3.6754281520843506
    8. 'pass' → logprob: -4.05042839050293
    9. ' pass' → logprob: -4.42542839050293
    10. '           ' → logprob: -4.42542839050293

Token 752: 'set' (ID: 977)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.017593029886484146
    2. 'ef' → logprob: -4.767592906951904
    3. 'e' → logprob: -4.892592906951904
    4. ' =' → logprob: -7.392592906951904
    5. 'eq' → logprob: -8.267593383789062
    6. 'Q' → logprob: -9.517593383789062
    7. '   ' → logprob: -9.767593383789062
    8. 'p' → logprob: -9.892593383789062
    9. 'def' → logprob: -9.892593383789062
    10. '=' → logprob: -10.517593383789062

Token 753: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4746658504009247
    2. ' =' → logprob: -0.9746658802032471
    3. '=set' → logprob: -8.724665641784668
    4. ',' → logprob: -8.849665641784668
    5. '=[]' → logprob: -9.474665641784668
    6. 'd' → logprob: -9.599665641784668
    7. '={}' → logprob: -9.849665641784668
    8. ' ' → logprob: -11.224665641784668
    9. '   ' → logprob: -11.599665641784668
    10. '<|end|>' → logprob: -11.724665641784668

Token 754: ' cur' (ID: 4396)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.6238064765930176
    2. '{}' → logprob: -1.6238064765930176
    3. 'dd' → logprob: -1.6238064765930176
    4. 'dq' → logprob: -1.8738064765930176
    5. 'set' → logprob: -2.2488064765930176
    6. 'seen' → logprob: -3.9988064765930176
    7. 'score' → logprob: -4.373806476593018
    8. 'res' → logprob: -4.498806476593018
    9. 'visited' → logprob: -4.498806476593018
    10. '[]' → logprob: -4.748806476593018

Token 755: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4643693268299103
    2. '=' → logprob: -1.089369297027588
    3. '=set' → logprob: -4.339369297027588
    4. ',' → logprob: -5.214369297027588
    5. '_set' → logprob: -5.339369297027588
    6. 'set' → logprob: -5.589369297027588
    7. '   ' → logprob: -6.464369297027588
    8. '_idx' → logprob: -6.464369297027588
    9. 'x' → logprob: -6.964369297027588
    10. '=[]' → logprob: -7.339369297027588

Token 756: ' tot' (ID: 2417)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -1.475258708000183
    2. 'res' → logprob: -2.1002588272094727
    3. 'ans' → logprob: -2.4752588272094727
    4. 'cnt' → logprob: -2.8502588272094727
    5. 'used' → logprob: -2.9752588272094727
    6. 'score' → logprob: -3.1002588272094727
    7. 'rem' → logprob: -3.7252588272094727
    8. 'st' → logprob: -3.7252588272094727
    9. 'visited' → logprob: -3.7252588272094727
    10. 'seen' → logprob: -4.225258827209473

Token 757: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7291833758354187
    2. ' =' → logprob: -0.8541833758354187
    3. ',' → logprob: -2.4791834354400635
    4. 'y' → logprob: -5.479183197021484
    5. '   ' → logprob: -6.604183197021484
    6. '=set' → logprob: -7.354183197021484
    7. ')' → logprob: -8.104183197021484
    8. '  ' → logprob: -8.229183197021484
    9. ' ' → logprob: -8.354183197021484
    10. '=[]' → logprob: -8.979183197021484

Token 758: ' f' (ID: 285)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.956528902053833
    2. 'cnt' → logprob: -2.581528902053833
    3. 'res' → logprob: -2.706528902053833
    4. 'turn' → logprob: -2.831528902053833
    5. 'used' → logprob: -3.394028902053833
    6. ' cnt' → logprob: -3.581528902053833
    7. 'score' → logprob: -3.831528902053833
    8. 'l' → logprob: -3.956528902053833
    9. 'rem' → logprob: -4.081528663635254
    10. ' res' → logprob: -4.144028663635254

Token 759: ' =' (ID: 314)
  Prédit: 'lag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lag' → logprob: -0.36421024799346924
    2. ' =' → logprob: -2.4892101287841797
    3. 'req' → logprob: -3.3642101287841797
    4. 'irst' → logprob: -3.3642101287841797
    5. 'or' → logprob: -3.4892101287841797
    6. 'lg' → logprob: -3.9892101287841797
    7. 'ound' → logprob: -3.9892101287841797
    8. 'l' → logprob: -4.36421012878418
    9. 'rom' → logprob: -4.48921012878418
    10. 'lags' → logprob: -4.61421012878418

Token 760: ' set' (ID: 920)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.6596433520317078
    2. 'set' → logprob: -0.9096433520317078
    3. ' dd' → logprob: -3.0346434116363525
    4. ' set' → logprob: -3.6596434116363525
    5. 'd' → logprob: -6.409643173217773
    6. 'dq' → logprob: -6.784643173217773
    7. '{' → logprob: -6.909643173217773
    8. '(dd' → logprob: -7.034643173217773
    9. '   ' → logprob: -7.659643173217773
    10. '{},' → logprob: -8.534643173217773

Token 761: '(),' (ID: 2547)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3487463891506195
    2. '(),' → logprob: -1.223746418952942
    3. '(' → logprob: -9.098746299743652
    4. '([]' → logprob: -9.473746299743652
    5. '()]' → logprob: -9.848746299743652
    6. '();' → logprob: -11.598746299743652
    7. ',' → logprob: -11.848746299743652
    8. '(),
' → logprob: -11.973746299743652
    9. '()
' → logprob: -12.473746299743652
    10. '(ls' → logprob: -12.598746299743652

Token 762: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.30027395486831665
    2. 'False' → logprob: -1.5502738952636719
    3. '[]' → logprob: -4.550273895263672
    4. ' False' → logprob: -4.675273895263672
    5. 'True' → logprob: -4.800273895263672
    6. ' ' → logprob: -5.425273895263672
    7. '-' → logprob: -5.925273895263672
    8. 'ls' → logprob: -6.050273895263672
    9. ' True' → logprob: -6.300273895263672
    10. '1' → logprob: -6.425273895263672

Token 763: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7107023596763611
    2. 'False' → logprob: -1.2107024192810059
    3. 'True' → logprob: -2.085702419281006
    4. '-' → logprob: -3.460702419281006
    5. '[]' → logprob: -3.835702419281006
    6. '1' → logprob: -4.210702419281006
    7. 'None' → logprob: -4.960702419281006
    8. 'ls' → logprob: -5.460702419281006
    9. 'cur' → logprob: -6.085702419281006
    10. 'deque' → logprob: -6.710702419281006

Token 764: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6243877410888672
    2. '<|end|>' → logprob: -0.8743877410888672
    3. '
' → logprob: -3.624387741088867
    4. '       ' → logprob: -4.999387741088867
    5. '   ' → logprob: -5.374387741088867
    6. '<|end|>' → logprob: -5.624387741088867
    7. ')' → logprob: -5.999387741088867
    8. 'def' → logprob: -7.374387741088867
    9. ',
' → logprob: -7.374387741088867
    10. ' ' → logprob: -7.874387741088867

Token 765: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008627458591945469
    2. ' ' → logprob: -8.000863075256348
    3. '1' → logprob: -8.250863075256348
    4. 'False' → logprob: -9.125863075256348
    5. '-' → logprob: -10.000863075256348
    6. 'len' → logprob: -10.375863075256348
    7. '[]' → logprob: -10.625863075256348
    8. 'True' → logprob: -10.750863075256348
    9. 'None' → logprob: -11.875863075256348
    10. '[' → logprob: -12.375863075256348

Token 766: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002514539286494255
    2. '1' → logprob: -6.752514362335205
    3. 'len' → logprob: -7.627514362335205
    4. 'True' → logprob: -8.752514839172363
    5. '-' → logprob: -9.002514839172363
    6. 'False' → logprob: -9.127514839172363
    7. '[]' → logprob: -9.127514839172363
    8. 'N' → logprob: -9.127514839172363
    9. 'mod' → logprob: -10.127514839172363
    10. '[],' → logprob: -10.252514839172363

Token 767: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06277184188365936
    2. '<|end|>' → logprob: -2.937771797180176
    3. '
' → logprob: -6.187771797180176
    4. '   ' → logprob: -6.562771797180176
    5. ')' → logprob: -6.812771797180176
    6. '       ' → logprob: -7.062771797180176
    7. ',
' → logprob: -7.312771797180176
    8. ':' → logprob: -7.437771797180176
    9. '<|end|>' → logprob: -7.437771797180176
    10. ' ' → logprob: -8.812771797180176

Token 768: ' ' (ID: 220)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.47028791904449463
    2. 'False' → logprob: -1.3452879190444946
    3. '0' → logprob: -2.595287799835205
    4. '1' → logprob: -3.595287799835205
    5. ' True' → logprob: -5.345287799835205
    6. '[]' → logprob: -5.720287799835205
    7. '-' → logprob: -6.720287799835205
    8. 'lambda' → logprob: -6.970287799835205
    9. ' False' → logprob: -7.345287799835205
    10. ' ' → logprob: -8.095288276672363

Token 769: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.4718831181526184
    2. 'True' → logprob: -1.3468830585479736
    3. '0' → logprob: -2.7218830585479736
    4. '1' → logprob: -3.0968830585479736
    5. '-' → logprob: -6.096883296966553
    6. 'lambda' → logprob: -6.096883296966553
    7. 'None' → logprob: -8.846882820129395
    8. '[]' → logprob: -8.971882820129395
    9. 'len' → logprob: -9.471882820129395
    10. '[' → logprob: -9.721882820129395

Token 770: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09583639353513718
    2. '       ' → logprob: -3.7208364009857178
    3. '<|end|>' → logprob: -3.8458364009857178
    4. '):' → logprob: -4.345836162567139
    5. ')' → logprob: -4.595836162567139
    6. '   ' → logprob: -4.720836162567139
    7. ',' → logprob: -4.970836162567139
    8. '
' → logprob: -6.220836162567139
    9. ':
' → logprob: -6.595836162567139
    10. ' :' → logprob: -6.970836162567139

Token 771: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14323261380195618
    2. '   ' → logprob: -2.893232583999634
    3. '):' → logprob: -3.518232583999634
    4. ')' → logprob: -4.018232822418213
    5. '       ' → logprob: -4.643232822418213
    6. ':
' → logprob: -4.893232822418213
    7. '<|end|>' → logprob: -5.393232822418213
    8. ',' → logprob: -5.393232822418213
    9. '
' → logprob: -7.268232822418213
    10. '    
' → logprob: -7.393232822418213

Token 772: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 773: ' Iterator' (ID: 41994)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6149136424064636
    2. 'while' → logprob: -0.8649136424064636
    3. '   ' → logprob: -3.7399137020111084
    4. '       ' → logprob: -4.489913463592529
    5. '    ' → logprob: -6.739913463592529
    6. '	while' → logprob: -6.739913463592529
    7. ' for' → logprob: -8.489913940429688
    8. '<|end|>' → logprob: -8.489913940429688
    9. 'for' → logprob: -8.614913940429688
    10. ')' → logprob: -9.239913940429688

Token 774: ' wrappers' (ID: 165338)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.33545663952827454
    2. '   ' → logprob: -2.960456609725952
    3. 'while' → logprob: -2.960456609725952
    4. ' ls' → logprob: -3.210456609725952
    5. ' for' → logprob: -3.335456609725952
    6. ' while' → logprob: -3.710456609725952
    7. ',' → logprob: -4.210456848144531
    8. 'for' → logprob: -4.210456848144531
    9. 'def' → logprob: -4.335456848144531
    10. 'it' → logprob: -4.710456848144531

Token 775: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37904807925224304
    2. '       ' → logprob: -1.5040481090545654
    3. '(ls' → logprob: -3.5040481090545654
    4. ' ls' → logprob: -4.504047870635986
    5. '   ' → logprob: -4.629047870635986
    6. ',
' → logprob: -4.754047870635986
    7. '
' → logprob: -5.129047870635986
    8. 'ls' → logprob: -5.379047870635986
    9. '(' → logprob: -5.504047870635986
    10. '<|end|>' → logprob: -6.129047870635986

Token 776: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3622130155563354
    2. ',' → logprob: -1.6122130155563354
    3. '       ' → logprob: -1.6122130155563354
    4. '
' → logprob: -2.362213134765625
    5. '<|end|>' → logprob: -2.612213134765625
    6. ':' → logprob: -2.737213134765625
    7. '        
' → logprob: -3.612213134765625
    8. '    
' → logprob: -3.612213134765625
    9. '    ' → logprob: -4.612213134765625
    10. '<|end|>' → logprob: -4.737213134765625

Token 777: ' ls' (ID: 41498)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.041766881942749
    2. ' while' → logprob: -1.541766881942749
    3. 'ls' (adapté à ' ls') → logprob: -1.916766881942749
    4. ' ls' → logprob: -2.166766881942749
    5. 'l' → logprob: -3.166766881942749
    6. 'while' → logprob: -3.291766881942749
    7. ' l' → logprob: -3.291766881942749
    8. '       ' → logprob: -4.291767120361328
    9. ' def' → logprob: -4.791767120361328
    10. 'def' → logprob: -5.041767120361328

Token 778: '_iter' (ID: 27043)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6112576723098755
    2. ',' → logprob: -1.3612576723098755
    3. '_iter' → logprob: -2.111257553100586
    4. '_it' → logprob: -3.486257553100586
    5. '=' → logprob: -3.611257553100586
    6. 'it' → logprob: -4.736257553100586
    7. 'iter' → logprob: -5.611257553100586
    8. '_' → logprob: -6.111257553100586
    9. '_itr' → logprob: -6.111257553100586
    10. 'i' → logprob: -7.236257553100586

Token 779: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3142491579055786
    2. ' =' → logprob: -1.3142491579055786
    3. ',' → logprob: -6.939249038696289
    4. '   ' → logprob: -11.564249038696289
    5. ')' → logprob: -13.939249038696289
    6. 's' → logprob: -13.939249038696289
    7. '=[]' → logprob: -13.939249038696289
    8. ' ' → logprob: -14.814249038696289
    9. '=lambda' → logprob: -14.939249038696289
    10. '=s' → logprob: -15.314249038696289

Token 780: ' lambda' (ID: 27871)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.03833545371890068
    2. '(iter' → logprob: -3.5383355617523193
    3. ' iter' → logprob: -5.41333532333374
    4. '(ls' → logprob: -7.28833532333374
    5. '(lambda' → logprob: -7.41333532333374
    6. 'lambda' → logprob: -7.66333532333374
    7. 'ls' → logprob: -7.78833532333374
    8. '(' → logprob: -7.78833532333374
    9. 'dq' → logprob: -7.91333532333374
    10. 'tee' → logprob: -8.288335800170898

Token 781: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7187115550041199
    2. 'ls' → logprob: -2.2187116146087646
    3. 'heap' → logprob: -2.3437116146087646
    4. 'h' → logprob: -2.8437116146087646
    5. ' h' → logprob: -2.8437116146087646
    6. ' heap' → logprob: -3.2187116146087646
    7. ' ls' → logprob: -3.2187116146087646
    8. 'iter' → logprob: -4.2187113761901855
    9. '():' → logprob: -4.4687113761901855
    10. ' iter' → logprob: -4.5937113761901855

Token 782: ' (' (ID: 350)
  Prédit: 'hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hp' → logprob: -1.369024634361267
    2. '(-' → logprob: -1.744024634361267
    3. '(h' → logprob: -1.994024634361267
    4. 'h' → logprob: -2.1190247535705566
    5. 'he' → logprob: -2.1190247535705566
    6. '-' → logprob: -2.3690247535705566
    7. ' hp' → logprob: -4.119024753570557
    8. '(' → logprob: -4.494024753570557
    9. '(lambda' → logprob: -4.744024753570557
    10. ' -' → logprob: -4.994024753570557

Token 783: 'hp' (ID: 45478)
  Prédit: '-h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-h' → logprob: -0.41560599207878113
    2. '-he' → logprob: -2.6656060218811035
    3. '-' → logprob: -2.7906060218811035
    4. 'he' → logprob: -2.9156060218811035
    5. 'hp' → logprob: -3.1656060218811035
    6. 'h' → logprob: -3.2906060218811035
    7. '(-' → logprob: -3.6656060218811035
    8. '-l' → logprob: -3.9156060218811035
    9. 'abs' → logprob: -5.4156060218811035
    10. '-p' → logprob: -5.5406060218811035

Token 784: '(ls' (ID: 128476)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.8110830783843994
    2. '(ls' → logprob: -0.9360830783843994
    3. 'ush' → logprob: -2.3110830783843994
    4. 'pop' → logprob: -3.1860830783843994
    5. '(op' → logprob: -4.56108283996582
    6. 'p' → logprob: -5.56108283996582
    7. 'he' → logprob: -6.18608283996582
    8. '[' → logprob: -6.93608283996582
    9. 'ls' → logprob: -7.06108283996582
    10. '(heap' → logprob: -7.43608283996582

Token 785: ')' (ID: 8)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6755563616752625
    2. '()[' → logprob: -1.6755564212799072
    3. '()),' → logprob: -1.8005564212799072
    4. '()' → logprob: -2.8005564212799072
    5. '())[' → logprob: -3.5505564212799072
    6. ')' → logprob: -4.300556182861328
    7. '()))' → logprob: -4.425556182861328
    8. '[' → logprob: -4.925556182861328
    9. '(),' → logprob: -5.300556182861328
    10. 'pop' → logprob: -5.800556182861328

Token 786: ' for' (ID: 395)
  Prédit: '(),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.696552574634552
    2. '()' → logprob: -0.821552574634552
    3. '()[' → logprob: -4.071552753448486
    4. '[' → logprob: -4.321552753448486
    5. '[-' → logprob: -5.071552753448486
    6. '())' → logprob: -5.196552753448486
    7. '();' → logprob: -5.446552753448486
    8. 'and' → logprob: -5.571552753448486
    9. ' and' → logprob: -5.571552753448486
    10. ',' → logprob: -5.696552753448486

Token 787: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04883478209376335
    2. '[' → logprob: -3.673834800720215
    3. '()' → logprob: -5.173834800720215
    4. '[]' → logprob: -5.423834800720215
    5. '_[' → logprob: -5.923834800720215
    6. 'ls' → logprob: -6.048834800720215
    7. '_ls' → logprob: -6.423834800720215
    8. ')' → logprob: -6.798834800720215
    9. 'range' → logprob: -7.798834800720215
    10. '0' → logprob: -7.798834800720215

Token 788: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3243633508682251
    2. 'in' → logprob: -1.324363350868225
    3. '_' → logprob: -5.0743632316589355
    4. ')' → logprob: -6.1993632316589355
    5. '()' → logprob: -6.3243632316589355
    6. ' _' → logprob: -8.074363708496094
    7. ' ' → logprob: -8.574363708496094
    8. '  ' → logprob: -9.199363708496094
    9. '(' → logprob: -9.949363708496094
    10. '...' → logprob: -10.074363708496094

Token 789: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.4593914747238159
    2. 'range' → logprob: -1.209391474723816
    3. '[' → logprob: -2.7093915939331055
    4. '[]' → logprob: -6.5843915939331055
    5. ' iter' → logprob: -7.5843915939331055
    6. ' range' → logprob: -7.8343915939331055
    7. 'it' → logprob: -8.084391593933105
    8. '()' → logprob: -9.084391593933105
    9. '```' → logprob: -9.209391593933105
    10. '(iter' → logprob: -9.334391593933105

Token 790: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10278632491827011
    2. 'range' → logprob: -3.4777863025665283
    3. '(range' → logprob: -3.8527863025665283
    4. '(' → logprob: -4.102786540985107
    5. '(lambda' → logprob: -4.227786540985107
    6. 'int' → logprob: -4.727786540985107
    7. '(()' → logprob: -5.477786540985107
    8. '([]' → logprob: -7.477786540985107
    9. 'lambda' → logprob: -7.977786540985107
    10. '()' → logprob: -9.72778606414795

Token 791: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1035378947854042
    2. ',' → logprob: -3.8535377979278564
    3. '(()' → logprob: -4.4785380363464355
    4. '())' → logprob: -4.6035380363464355
    5. '()' → logprob: -4.6035380363464355
    6. '))' → logprob: -4.7285380363464355
    7. '()))' → logprob: -4.7285380363464355
    8. ')' → logprob: -5.1035380363464355
    9. '(""))' → logprob: -5.4785380363464355
    10. ':' → logprob: -5.7285380363464355

Token 792: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00025561772054061294
    2. ' ' → logprob: -8.875255584716797
    3. '0' → logprob: -9.125255584716797
    4. '```' → logprob: -13.250255584716797
    5. '
' → logprob: -14.250255584716797
    6. ':' → logprob: -14.500255584716797
    7. '))' → logprob: -14.625255584716797
    8. ')' → logprob: -14.750255584716797
    9. 'None' → logprob: -14.875255584716797
    10. '(' → logprob: -14.875255584716797

Token 793: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006919850129634142
    2. '0' → logprob: -5.381919860839844
    3. '''' → logprob: -7.256919860839844
    4. 'None' → logprob: -7.506919860839844
    5. ''' → logprob: -8.006919860839844
    6. '-' → logprob: -8.756919860839844
    7. '(' → logprob: -9.631919860839844
    8. '"' → logprob: -9.756919860839844
    9. ')' → logprob: -9.881919860839844
    10. '()' → logprob: -9.881919860839844

Token 794: ')' (ID: 8)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5990781784057617
    2. ')' → logprob: -1.4740781784057617
    3. '))' → logprob: -1.9740781784057617
    4. '()))' → logprob: -2.5990781784057617
    5. '()' → logprob: -5.599078178405762
    6. '()))
' → logprob: -6.349078178405762
    7. '())
' → logprob: -7.349078178405762
    8. '):' → logprob: -7.474078178405762
    9. '))
' → logprob: -7.724078178405762
    10. ' ())' → logprob: -8.724078178405762

Token 795: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03871914744377136
    2. '())' → logprob: -3.4137191772460938
    3. ')
' → logprob: -5.663719177246094
    4. '())
' → logprob: -7.663719177246094
    5. '()' → logprob: -7.913719177246094
    6. '   ' → logprob: -8.538719177246094
    7. '       ' → logprob: -8.663719177246094
    8. ' )' → logprob: -9.288719177246094
    9. '),' → logprob: -9.288719177246094
    10. '):' → logprob: -10.288719177246094

Token 796: ' ls' (ID: 41498)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.8991387486457825
    2. 'False' → logprob: -1.3991386890411377
    3. 'ls' → logprob: -1.7741386890411377
    4. ' True' → logprob: -2.5241386890411377
    5. 'len' → logprob: -2.8991386890411377
    6. ' False' → logprob: -4.149138927459717
    7. ' ls' → logprob: -4.649138927459717
    8. '0' → logprob: -5.774138927459717
    9. '1' → logprob: -6.024138927459717
    10. '(True' → logprob: -6.024138927459717

Token 797: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012627330143004656
    2. '])' → logprob: -7.126262664794922
    3. ' and' → logprob: -9.376262664794922
    4. '):' → logprob: -10.001262664794922
    5. '[' → logprob: -10.126262664794922
    6. ')
' → logprob: -10.126262664794922
    7. ' )' → logprob: -10.626262664794922
    8. ')>' → logprob: -10.626262664794922
    9. ');' → logprob: -10.751262664794922
    10. '),' → logprob: -10.876262664794922

Token 798: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.42771467566490173
    2. '       ' → logprob: -1.1777147054672241
    3. '()
' → logprob: -4.802714824676514
    4. ')' → logprob: -4.927714824676514
    5. ':' → logprob: -5.802714824676514
    6. '():' → logprob: -5.802714824676514
    7. '())' → logprob: -5.927714824676514
    8. ',' → logprob: -6.177714824676514
    9. '(),' → logprob: -6.552714824676514
    10. '():
' → logprob: -6.677714824676514

Token 799: ' rs' (ID: 15181)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6476544141769409
    2. '()' → logprob: -1.772654414176941
    3. ')' → logprob: -1.897654414176941
    4. '():' → logprob: -3.2726545333862305
    5. '   ' → logprob: -3.7726545333862305
    6. '()
' → logprob: -4.3976545333862305
    7. '(' → logprob: -4.5226545333862305
    8. ':
' → logprob: -4.6476545333862305
    9. '       ' → logprob: -4.6476545333862305
    10. '):' → logprob: -5.0226545333862305

Token 800: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.07645062357187271
    2. ' =' → logprob: -2.9514505863189697
    3. '=' → logprob: -3.9514505863189697
    4. '_' → logprob: -6.326450824737549
    5. ')' → logprob: -9.70145034790039
    6. '=[]' → logprob: -9.95145034790039
    7. '=_' → logprob: -10.20145034790039
    8. '_=' → logprob: -10.32645034790039
    9. '   ' → logprob: -10.70145034790039
    10. ',' → logprob: -10.70145034790039

Token 801: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5786571502685547
    2. '=' → logprob: -0.8286571502685547
    3. '=lambda' → logprob: -5.953657150268555
    4. '   ' → logprob: -9.703657150268555
    5. '()' → logprob: -10.453657150268555
    6. ':' → logprob: -12.078657150268555
    7. ')' → logprob: -12.453657150268555
    8. '(lambda' → logprob: -12.578657150268555
    9. '=[]' → logprob: -12.703657150268555
    10. '=None' → logprob: -13.453657150268555

Token 802: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.2578739523887634
    2. ' lambda' → logprob: -1.5078740119934082
    3. '(lambda' → logprob: -5.132874011993408
    4. '   ' → logprob: -11.88287353515625
    5. '=lambda' → logprob: -12.63287353515625
    6. '     ' → logprob: -12.63287353515625
    7. ' (' → logprob: -12.75787353515625
    8. '       ' → logprob: -13.00787353515625
    9. '           ' → logprob: -13.63287353515625
    10. '    ' → logprob: -13.63287353515625

Token 803: ':' (ID: 25)
  Prédit: '(rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rs' → logprob: -0.06428010016679764
    2. ':' → logprob: -3.9392800331115723
    3. '(lambda' → logprob: -4.189280033111572
    4. '(h' → logprob: -4.439280033111572
    5. ' rs' → logprob: -5.564280033111572
    6. '()' → logprob: -5.814280033111572
    7. 'rs' → logprob: -5.939280033111572
    8. ' (' → logprob: -6.064280033111572
    9. '(' → logprob: -6.814280033111572
    10. '(r' → logprob: -7.189280033111572

Token 804: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00811025220900774
    2. ' (' → logprob: -4.883110046386719
    3. ' hp' → logprob: -8.383110046386719
    4. 'hp' → logprob: -8.633110046386719
    5. '   ' → logprob: -11.008110046386719
    6. '  ' → logprob: -11.258110046386719
    7. '((' → logprob: -11.508110046386719
    8. '(' → logprob: -11.758110046386719
    9. ' ' → logprob: -11.758110046386719
    10. '     ' → logprob: -12.195610046386719

Token 805: 'hp' (ID: 45478)
  Prédit: 'hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' → logprob: -0.03686174005270004
    2. '(h' → logprob: -3.4118616580963135
    3. ' hp' → logprob: -5.911861896514893
    4. '-' → logprob: -8.786861419677734
    5. 'h' → logprob: -8.911861419677734
    6. 'he' → logprob: -9.786861419677734
    7. '(rs' → logprob: -10.661861419677734
    8. 'rs' → logprob: -10.661861419677734
    9. ' -' → logprob: -10.786861419677734
    10. '(' → logprob: -11.286861419677734

Token 806: '(rs' (ID: 25887)
  Prédit: '(rs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rs' → logprob: -2.7729658540920354e-05
    2. 'rs' → logprob: -10.875027656555176
    3. '(ls' → logprob: -13.500027656555176
    4. '(r' → logprob: -13.625027656555176
    5. '(' → logprob: -13.750027656555176
    6. '$rs' → logprob: -14.125027656555176
    7. '(-' → logprob: -14.375027656555176
    8. '1' → logprob: -14.625027656555176
    9. '	rs' → logprob: -15.125027656555176
    10. '(rhs' → logprob: -15.125027656555176

Token 807: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013077878393232822
    2. '())' → logprob: -4.638077735900879
    3. '()' → logprob: -5.763077735900879
    4. '))' → logprob: -9.138077735900879
    5. 'for' → logprob: -10.888077735900879
    6. '   ' → logprob: -11.513077735900879
    7. ')
' → logprob: -11.638077735900879
    8. ' )' → logprob: -11.888077735900879
    9. ' for' → logprob: -13.013077735900879
    10. ')))' → logprob: -13.013077735900879

Token 808: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8835424184799194
    2. ' for' → logprob: -1.0085424184799194
    3. 'for' → logprob: -1.7585424184799194
    4. ')' → logprob: -3.008542537689209
    5. ' ()' → logprob: -9.00854206085205
    6. '())' → logprob: -10.75854206085205
    7. '   ' → logprob: -10.88354206085205
    8. '	for' → logprob: -10.88354206085205
    9. ' ' → logprob: -11.00854206085205
    10. '[' → logprob: -11.75854206085205

Token 809: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007612663321197033
    2. ' _' → logprob: -4.882612705230713
    3. '_ls' → logprob: -13.507612228393555
    4. '_)' → logprob: -13.757612228393555
    5. ')' → logprob: -14.757612228393555
    6. ' ' → logprob: -14.882612228393555
    7. '_]' → logprob: -15.257612228393555
    8. '   ' → logprob: -15.382612228393555
    9. '_=' → logprob: -15.382612228393555
    10. '[]' → logprob: -15.507612228393555

Token 810: ' in' (ID: 306)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.4008180499076843
    2. ' iter' → logprob: -1.275818109512329
    3. 'int' → logprob: -3.400818109512329
    4. '(iter' → logprob: -4.77581787109375
    5. 'it' → logprob: -6.65081787109375
    6. '_' → logprob: -6.65081787109375
    7. ' int' → logprob: -6.90081787109375
    8. '(' → logprob: -7.27581787109375
    9. ' rs' → logprob: -7.40081787109375
    10. 'rs' → logprob: -7.77581787109375

Token 811: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.07336326688528061
    2. 'int' → logprob: -3.0733633041381836
    3. ' iter' → logprob: -3.8233633041381836
    4. 'ls' → logprob: -6.948363304138184
    5. 'it' → logprob: -7.823363304138184
    6. '(iter' → logprob: -7.823363304138184
    7. 'rs' → logprob: -8.698363304138184
    8. ' ls' → logprob: -9.073363304138184
    9. ' int' → logprob: -9.198363304138184
    10. 'ints' → logprob: -9.698363304138184

Token 812: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.779520092299208e-05
    2. 'int' → logprob: -10.250078201293945
    3. '(lambda' → logprob: -10.875078201293945
    4. '(' → logprob: -11.375078201293945
    5. '[int' → logprob: -13.125078201293945
    6. '=int' → logprob: -13.250078201293945
    7. '   ' → logprob: -13.625078201293945
    8. ',int' → logprob: -13.625078201293945
    9. ' (' → logprob: -13.875078201293945
    10. '(None' → logprob: -14.250078201293945

Token 813: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.534558552724775e-05
    2. ' ,' → logprob: -10.875025749206543
    3. '(),' → logprob: -12.125025749206543
    4. '(' → logprob: -14.750025749206543
    5. ',
' → logprob: -16.375024795532227
    6. ')' → logprob: -17.000024795532227
    7. 'import' → logprob: -17.125024795532227
    8. '),' → logprob: -17.250024795532227
    9. '()' → logprob: -17.375024795532227
    10. '   ' → logprob: -17.375024795532227

Token 814: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012526008300483227
    2. ' ' → logprob: -4.387526035308838
    3. '0' → logprob: -12.51252555847168
    4. ')' → logprob: -12.88752555847168
    5. '   ' → logprob: -13.13752555847168
    6. 'lambda' → logprob: -13.20002555847168
    7. ' lambda' → logprob: -14.13752555847168
    8. '```' → logprob: -14.38752555847168
    9. '  ' → logprob: -14.63752555847168
    10. '           ' → logprob: -15.01252555847168

Token 815: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.558399319241289e-05
    2. ' ' → logprob: -11.000025749206543
    3. '0' → logprob: -12.250025749206543
    4. ')' → logprob: -13.625025749206543
    5. '(' → logprob: -13.875025749206543
    6. 'lambda' → logprob: -14.125025749206543
    7. '2' → logprob: -14.875025749206543
    8. 's' → logprob: -15.500025749206543
    9. '```' → logprob: -16.375024795532227
    10. '   ' → logprob: -16.375024795532227

Token 816: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005762664368376136
    2. ' if' → logprob: -8.25057601928711
    3. '))' → logprob: -9.50057601928711
    4. '())' → logprob: -9.75057601928711
    5. '()' → logprob: -9.87557601928711
    6. '):
' → logprob: -10.37557601928711
    7. '):' → logprob: -10.37557601928711
    8. 'if' → logprob: -11.25057601928711
    9. ' )' → logprob: -11.50057601928711
    10. '<|end|>' → logprob: -12.00057601928711

Token 817: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026710573583841324
    2. ' if' → logprob: -4.151710510253906
    3. '<|end|>' → logprob: -5.401710510253906
    4. '       ' → logprob: -6.651710510253906
    5. '):' → logprob: -6.776710510253906
    6. ' )' → logprob: -7.276710510253906
    7. '()' → logprob: -7.526710510253906
    8. ':' → logprob: -8.026710510253906
    9. '())' → logprob: -8.276710510253906
    10. '   ' → logprob: -8.651710510253906

Token 818: ' rs' (ID: 15181)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -0.00016241880075540394
    2. 'ls' → logprob: -9.125162124633789
    3. ' rs' → logprob: -10.625162124633789
    4. '(rs' → logprob: -10.875162124633789
    5. 'True' → logprob: -12.625162124633789
    6. 'len' → logprob: -13.250162124633789
    7. '$rs' → logprob: -13.500162124633789
    8. '	rs' → logprob: -13.500162124633789
    9. '0' → logprob: -14.250162124633789
    10. '   ' → logprob: -14.875162124633789

Token 819: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011959441471844912
    2. '):' → logprob: -7.376195907592773
    3. '())' → logprob: -8.126195907592773
    4. '):
' → logprob: -9.376195907592773
    5. ')
' → logprob: -10.251195907592773
    6. '<|end|>' → logprob: -10.251195907592773
    7. '()' → logprob: -10.376195907592773
    8. ' )' → logprob: -11.001195907592773
    9. '))' → logprob: -11.001195907592773
    10. '):

' → logprob: -11.876195907592773

Token 820: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6989099383354187
    2. ')' → logprob: -1.4489099979400635
    3. '       ' → logprob: -2.0739099979400635
    4. '<|end|>' → logprob: -2.4489099979400635
    5. '   ' → logprob: -3.3239099979400635
    6. '):' → logprob: -4.323909759521484
    7. ',' → logprob: -7.198909759521484
    8. 'def' → logprob: -7.198909759521484
    9. ' ' → logprob: -7.573909759521484
    10. ':
' → logprob: -7.698909759521484

Token 821: ' while' (ID: 2049)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31194618344306946
    2. ')' → logprob: -2.311946153640747
    3. '       ' → logprob: -2.311946153640747
    4. '   ' → logprob: -4.061946392059326
    5. ' ' → logprob: -4.436946392059326
    6. '):' → logprob: -5.061946392059326
    7. '\t' → logprob: -5.061946392059326
    8. '<|end|>' → logprob: -5.061946392059326
    9. ',' → logprob: -5.311946392059326
    10. '	' → logprob: -6.061946392059326

Token 822: ' ls' (ID: 41498)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.03116770088672638
    2. ' ls' → logprob: -3.90616774559021
    3. 'len' → logprob: -5.031167507171631
    4. 'True' → logprob: -6.531167507171631
    5. 'd' → logprob: -7.281167507171631
    6. 'cur' → logprob: -7.531167507171631
    7. '(ls' → logprob: -7.906167507171631
    8. 'l' → logprob: -8.281167984008789
    9. 'not' → logprob: -8.406167984008789
    10. ' True' → logprob: -8.781167984008789

Token 823: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.050268739461898804
    2. 'and' → logprob: -3.3002686500549316
    3. ':' → logprob: -4.925268650054932
    4. ' or' → logprob: -5.675268650054932
    5. '   ' → logprob: -7.550268650054932
    6. ')' → logprob: -7.675268650054932
    7. ':
' → logprob: -9.05026912689209
    8. '	and' → logprob: -10.17526912689209
    9. '<|end|>' → logprob: -10.17526912689209
    10. '       ' → logprob: -10.42526912689209

Token 824: ' rs' (ID: 15181)
  Prédit: ' rs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rs' → logprob: -0.09348088502883911
    2. 'rs' → logprob: -2.4684808254241943
    3. 'True' → logprob: -6.218481063842773
    4. '(rs' → logprob: -6.593481063842773
    5. ' True' → logprob: -6.968481063842773
    6. '(' → logprob: -9.468481063842773
    7. ' (' → logprob: -9.968481063842773
    8. ' cur' → logprob: -11.468481063842773
    9. '(True' → logprob: -11.468481063842773
    10. ' not' → logprob: -11.843481063842773

Token 825: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04801420867443085
    2. ' and' → logprob: -3.2980141639709473
    3. '<|end|>' → logprob: -5.423014163970947
    4. ':
' → logprob: -6.298014163970947
    5. ',' → logprob: -6.423014163970947
    6. ' :' → logprob: -6.923014163970947
    7. 'and' → logprob: -7.673014163970947
    8. '       ' → logprob: -8.548014640808105
    9. '):' → logprob: -9.048014640808105
    10. '<|end|>' → logprob: -9.923014640808105

Token 826: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5144215226173401
    2. '        ' → logprob: -1.6394214630126953
    3. '           ' → logprob: -2.6394214630126953
    4. ' ' → logprob: -3.5144214630126953
    5. '        
' → logprob: -3.7644214630126953
    6. '<|end|>' → logprob: -3.8894214630126953
    7. '	       ' → logprob: -4.014421463012695
    8. '	' → logprob: -4.639421463012695
    9. ' 
' → logprob: -5.264421463012695
    10. '    ' → logprob: -5.389421463012695

Token 827: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44250500202178955
    2. 'l' → logprob: -1.9425050020217896
    3. '           ' → logprob: -2.5675048828125
    4. 'v' → logprob: -2.9425048828125
    5. ' l' → logprob: -3.6925048828125
    6. 't' → logprob: -4.5675048828125
    7. 'x' → logprob: -4.6925048828125
    8. 'p' → logprob: -5.3175048828125
    9. 'a' → logprob: -5.4425048828125
    10. '        ' → logprob: -5.9425048828125

Token 828: ' l' (ID: 305)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7831871509552002
    2. ' _' → logprob: -1.1581871509552002
    3. ' side' → logprob: -3.0331871509552
    4. ' val' → logprob: -3.1581871509552
    5. 'v' → logprob: -3.6581871509552
    6. ' i' → logprob: -4.783186912536621
    7. 'side' → logprob: -4.908186912536621
    8. 'i' → logprob: -4.908186912536621
    9. ' x' → logprob: -5.033186912536621
    10. 'val' → logprob: -5.033186912536621

Token 829: 'cod' (ID: 38134)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.022138262167572975
    2. 'e' → logprob: -4.1471381187438965
    3. '_' → logprob: -6.0221381187438965
    4. ',' → logprob: -6.1471381187438965
    5. 'p' → logprob: -8.022138595581055
    6. ')' → logprob: -8.272138595581055
    7. '_,' → logprob: -8.522138595581055
    8. '   ' → logprob: -8.897138595581055
    9. '[' → logprob: -9.272138595581055
    10. 'i' → logprob: -9.522138595581055

Token 830: ' in' (ID: 306)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.13888199627399445
    2. ',' → logprob: -2.3888819217681885
    3. ' =' → logprob: -4.638882160186768
    4. 'ode' → logprob: -4.888882160186768
    5. 'de' → logprob: -5.013882160186768
    6. '=' → logprob: -5.513882160186768
    7. '   ' → logprob: -6.013882160186768
    8. ')' → logprob: -6.388882160186768
    9. ' in' → logprob: -7.138882160186768
    10. '_' → logprob: -7.138882160186768

Token 831: ' ls' (ID: 41498)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.0140524385496974
    2. '[-' → logprob: -5.389052391052246
    3. '(-' → logprob: -5.389052391052246
    4. '(ls' → logprob: -5.889052391052246
    5. '[' → logprob: -7.514052391052246
    6. 'next' → logprob: -8.014052391052246
    7. ' ls' → logprob: -8.014052391052246
    8. '(' → logprob: -8.264052391052246
    9. '-' → logprob: -9.139052391052246
    10. '   ' → logprob: -9.639052391052246

Token 832: '_iter' (ID: 27043)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029600514099001884
    2. '):' → logprob: -4.154600620269775
    3. '.pop' → logprob: -5.529600620269775
    4. ' and' → logprob: -5.904600620269775
    5. ':
' → logprob: -6.154600620269775
    6. ',' → logprob: -6.779600620269775
    7. '<|end|>' → logprob: -7.404600620269775
    8. '):
' → logprob: -7.904600620269775
    9. '[' → logprob: -8.154600143432617
    10. ' :' → logprob: -8.404600143432617

Token 833: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0026006263215094805
    2. '()' → logprob: -6.62760066986084
    3. '():
' → logprob: -7.37760066986084
    4. ':' → logprob: -7.50260066986084
    5. '(ls' → logprob: -9.75260066986084
    6. '):' → logprob: -11.62760066986084
    7. ' ():' → logprob: -11.87760066986084
    8. '():
' → logprob: -12.00260066986084
    9. '():

' → logprob: -12.75260066986084
    10. '(),' → logprob: -13.00260066986084

Token 834: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024738935753703117
    2. '<|end|>' → logprob: -5.024738788604736
    3. '           ' → logprob: -5.399738788604736
    4. ',' → logprob: -5.649738788604736
    5. ':' → logprob: -6.399738788604736
    6. ' (' → logprob: -7.024738788604736
    7. ' :' → logprob: -7.274738788604736
    8. '       ' → logprob: -7.399738788604736
    9. '                
' → logprob: -7.524738788604736
    10. '                ' → logprob: -8.024739265441895

Token 835: ' l' (ID: 305)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.6153960227966309
    2. ' if' → logprob: -2.365396022796631
    3. ' l' → logprob: -2.615396022796631
    4. 'l' (adapté à ' l') → logprob: -2.615396022796631
    5. 'val' → logprob: -3.115396022796631
    6. '                   ' → logprob: -3.365396022796631
    7. '-' → logprob: -3.740396022796631
    8. 'if' → logprob: -4.240396022796631
    9. '_' → logprob: -4.240396022796631
    10. 'v' → logprob: -4.490396022796631

Token 836: ',' (ID: 11)
  Prédit: 'cod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cod' → logprob: -0.007198620121926069
    2. '_cod' → logprob: -6.007198810577393
    3. ' =' → logprob: -6.257198810577393
    4. 'val' → logprob: -7.007198810577393
    5. '=' → logprob: -7.507198810577393
    6. 'code' → logprob: -7.757198810577393
    7. '   ' → logprob: -8.757198333740234
    8. 'c' → logprob: -8.882198333740234
    9. '_code' → logprob: -9.257198333740234
    10. 'v' → logprob: -9.757198333740234

Token 837: ' i' (ID: 575)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.6743922233581543
    2. ' l' → logprob: -1.6743922233581543
    3. '-' → logprob: -2.0493922233581543
    4. '-l' → logprob: -2.7993922233581543
    5. ' -' → logprob: -3.2993922233581543
    6. 'abs' → logprob: -4.049392223358154
    7. 'l' → logprob: -4.299392223358154
    8. '-cur' → logprob: -4.424392223358154
    9. 'cod' → logprob: -4.674392223358154
    10. 'lc' → logprob: -4.799392223358154

Token 838: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021000059321522713
    2. ' =' → logprob: -3.8960001468658447
    3. ',' → logprob: -7.770999908447266
    4. '   ' → logprob: -10.770999908447266
    5. ' ' → logprob: -12.770999908447266
    6. ')' → logprob: -13.145999908447266
    7. '=-' → logprob: -13.145999908447266
    8. '  ' → logprob: -13.145999908447266
    9. 'cod' → logprob: -13.395999908447266
    10. '    ' → logprob: -14.270999908447266

Token 839: ' div' (ID: 4223)
  Prédit: '-div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-div' → logprob: -0.25424888730049133
    2. 'div' → logprob: -1.629248857498169
    3. ' div' → logprob: -4.129249095916748
    4. '(-' → logprob: -4.879249095916748
    5. '-' → logprob: -6.129249095916748
    6. ' -' → logprob: -7.129249095916748
    7. '   ' → logprob: -7.254249095916748
    8. '-dec' → logprob: -8.12924861907959
    9. ' (-' → logprob: -8.12924861907959
    10. '(div' → logprob: -8.75424861907959

Token 840: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.001078183762729168
    2. '(-' → logprob: -7.626078128814697
    3. 'cod' → logprob: -8.126078605651855
    4. '-' → logprob: -8.626078605651855
    5. 'ls' → logprob: -10.751078605651855
    6. '-mod' → logprob: -10.876078605651855
    7. '(' → logprob: -11.251078605651855
    8. '-c' → logprob: -11.751078605651855
    9. '(ls' → logprob: -12.251078605651855
    10. '//' → logprob: -12.376078605651855

Token 841: '(l' (ID: 4179)
  Prédit: '-l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.6229104399681091
    2. '-c' → logprob: -0.9979104399681091
    3. '-' → logprob: -3.247910499572754
    4. '(-' → logprob: -3.247910499572754
    5. 'lc' → logprob: -4.872910499572754
    6. '-code' → logprob: -5.372910499572754
    7. 'cod' → logprob: -6.372910499572754
    8. ' -' → logprob: -6.497910499572754
    9. '-coded' → logprob: -7.622910499572754
    10. 'l' → logprob: -7.622910499572754

Token 842: 'cod' (ID: 38134)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.010594856925308704
    2. ' base' → logprob: -4.885594844818115
    3. '(base' → logprob: -6.510594844818115
    4. '-base' → logprob: -7.385594844818115
    5. '(-' → logprob: -8.510595321655273
    6. ')' → logprob: -9.135595321655273
    7. ' (' → logprob: -9.385595321655273
    8. '(' → logprob: -9.510595321655273
    9. '/base' → logprob: -9.635595321655273
    10. 'b' → logprob: -9.885595321655273

Token 843: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04425893351435661
    2. 'base' → logprob: -3.9192588329315186
    3. ' ,' → logprob: -3.9192588329315186
    4. ' base' → logprob: -6.419259071350098
    5. '(base' → logprob: -7.169259071350098
    6. ')' → logprob: -8.669259071350098
    7. ',b' → logprob: -8.919259071350098
    8. '[' → logprob: -9.169259071350098
    9. ',
' → logprob: -9.294259071350098
    10. '/base' → logprob: -9.419259071350098

Token 844: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0015170073602348566
    2. ' base' → logprob: -6.751516819000244
    3. 'N' → logprob: -8.001517295837402
    4. '100' → logprob: -12.501517295837402
    5. '10' → logprob: -13.376517295837402
    6. '-base' → logprob: -13.376517295837402
    7. ' N' → logprob: -13.751517295837402
    8. '(base' → logprob: -14.126517295837402
    9. '	base' → logprob: -14.376517295837402
    10. 'mod' → logprob: -14.876517295837402

Token 845: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005585906561464071
    2. ')
' → logprob: -5.255585670471191
    3. '               ' → logprob: -8.380585670471191
    4. '           ' → logprob: -9.880585670471191
    5. '),' → logprob: -10.255585670471191
    6. ');' → logprob: -11.880585670471191
    7. '*' → logprob: -12.255585670471191
    8. '       ' → logprob: -12.380585670471191
    9. '                   ' → logprob: -12.755585670471191
    10. ')

' → logprob: -13.005585670471191

Token 846: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8726614117622375
    2. '<|end|>' → logprob: -0.9976614117622375
    3. ':' → logprob: -2.2476613521575928
    4. '           ' → logprob: -3.4976613521575928
    5. '                   ' → logprob: -3.6226613521575928
    6. ')' → logprob: -3.6226613521575928
    7. '<|end|>' → logprob: -5.372661590576172
    8. '...' → logprob: -5.872661590576172
    9. '                               ' → logprob: -5.997661590576172
    10. ' ' → logprob: -6.372661590576172

Token 847: ' l' (ID: 305)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6751835346221924
    2. '           ' → logprob: -1.8001835346221924
    3. ' if' → logprob: -2.4251835346221924
    4. '                ' → logprob: -3.0501835346221924
    5. 'h' → logprob: -3.1751835346221924
    6. '       ' → logprob: -3.1751835346221924
    7. '                   ' → logprob: -3.3001835346221924
    8. ' h' → logprob: -3.9251835346221924
    9. 'if' → logprob: -4.800183296203613
    10. '        ' → logprob: -5.050183296203613

Token 848: ' *=' (ID: 25253)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3446215391159058
    2. '       ' → logprob: -1.8446215391159058
    3. '           ' → logprob: -1.9696215391159058
    4. ' =' → logprob: -2.4696216583251953
    5. ',' → logprob: -2.7196216583251953
    6. '<|end|>' → logprob: -2.8446216583251953
    7. 'if' → logprob: -3.3446216583251953
    8. '               ' → logprob: -3.5946216583251953
    9. ' if' → logprob: -3.8446216583251953
    10. ' -=' → logprob: -3.9696216583251953

Token 849: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.6537622034084052e-05
    2. ' -' → logprob: -10.62502670288086
    3. '1' → logprob: -13.12502670288086
    4. '(-' → logprob: -16.00002670288086
    5. '-base' → logprob: -18.00002670288086
    6. '
' → logprob: -18.37502670288086
    7. '  ' → logprob: -18.37502670288086
    8. '`' → logprob: -18.50002670288086
    9. '+' → logprob: -18.62502670288086
    10. '   ' → logprob: -18.75002670288086

Token 850: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. '
' → logprob: -16.250003814697266
    4. '   ' → logprob: -16.250003814697266
    5. '-' → logprob: -16.500003814697266
    6. '<|end|>' → logprob: -16.500003814697266
    7. '```' → logprob: -16.875003814697266
    8. ')' → logprob: -17.750003814697266
    9. '  ' → logprob: -18.375003814697266
    10. ' -' → logprob: -18.750003814697266

Token 851: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 852: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 853: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7578890323638916
    2. 'i' → logprob: -2.0078890323638916
    3. '           ' → logprob: -2.3828890323638916
    4. 'h' → logprob: -2.5078890323638916
    5. ' if' → logprob: -2.5078890323638916
    6. ' i' → logprob: -3.6328890323638916
    7. 'if' (adapté à ' if') → logprob: -3.7578890323638916
    8. '       ' → logprob: -3.7578890323638916
    9. '<|end|>' → logprob: -4.1328887939453125
    10. 'l' → logprob: -4.6328887939453125

Token 854: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16557523608207703
    2. ' i' → logprob: -2.0405752658843994
    3. '(i' → logprob: -4.41557502746582
    4. ' (' → logprob: -4.79057502746582
    5. 'not' → logprob: -7.29057502746582
    6. ' not' → logprob: -7.41557502746582
    7. 'l' → logprob: -7.79057502746582
    8. '   ' → logprob: -8.66557502746582
    9. ' l' → logprob: -9.41557502746582
    10. '(not' → logprob: -9.54057502746582

Token 855: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.23213720321655273
    2. ' in' → logprob: -1.6071372032165527
    3. 'in' → logprob: -5.732137203216553
    4. 'not' → logprob: -5.857137203216553
    5. '<|end|>' → logprob: -7.982137203216553
    6. ' ==' → logprob: -9.357137680053711
    7. ')' → logprob: -9.482137680053711
    8. ' !=' → logprob: -10.232137680053711
    9. '==' → logprob: -10.607137680053711
    10. ' ' → logprob: -11.107137680053711

Token 856: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -4.632542913896032e-05
    2. ' d' → logprob: -10.125046730041504
    3. 'f' → logprob: -12.750046730041504
    4. '
' → logprob: -14.000046730041504
    5. 'cur' → logprob: -14.250046730041504
    6. '
' → logprob: -15.750046730041504
    7. '#' → logprob: -15.750046730041504
    8. '```' → logprob: -16.000045776367188
    9. ')d' → logprob: -16.437545776367188
    10. ')' → logprob: -16.437545776367188

Token 857: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0010700850980356336
    2. 's' → logprob: -7.126070022583008
    3. 'et' → logprob: -8.876070022583008
    4. 'd' → logprob: -10.126070022583008
    5. 'f' → logprob: -10.251070022583008
    6. ' set' → logprob: -11.251070022583008
    7. '_set' → logprob: -11.626070022583008
    8. 'l' → logprob: -12.126070022583008
    9. '```' → logprob: -12.251070022583008
    10. '...' → logprob: -13.126070022583008

Token 858: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01955806277692318
    2. ' and' → logprob: -4.894557952880859
    3. '<|end|>' → logprob: -5.519557952880859
    4. ':
' → logprob: -5.894557952880859
    5. '               ' → logprob: -6.269557952880859
    6. ':return' → logprob: -7.019557952880859
    7. '           ' → logprob: -7.394557952880859
    8. '                   ' → logprob: -7.894557952880859
    9. '                       ' → logprob: -8.14455795288086
    10. ' :' → logprob: -8.14455795288086

Token 859: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.44007420539855957
    2. ' ' → logprob: -1.5650742053985596
    3. '                ' → logprob: -3.0650742053985596
    4. '                    ' → logprob: -3.9400742053985596
    5. '                           ' → logprob: -3.9400742053985596
    6. '                       ' → logprob: -3.9400742053985596
    7. '               ' → logprob: -4.5650739669799805
    8. '                               ' → logprob: -4.9400739669799805
    9. '<|end|>' → logprob: -5.1900739669799805
    10. ' continue' → logprob: -6.0650739669799805

Token 860: ' d' (ID: 272)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.23364053666591644
    2. 'continue' → logprob: -1.7336405515670776
    3. '                   ' → logprob: -3.483640432357788
    4. '                       ' → logprob: -7.358640670776367
    5. '               ' → logprob: -9.358640670776367
    6. ' ' → logprob: -9.733640670776367
    7. '	continue' → logprob: -10.358640670776367
    8. '           ' → logprob: -10.608640670776367
    9. ' ' → logprob: -10.858640670776367
    10. '   ' → logprob: -11.108640670776367

Token 861: 'set' (ID: 977)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.003301174147054553
    2. 'contin' → logprob: -6.37830114364624
    3. ' continue' → logprob: -7.00330114364624
    4. '	continue' → logprob: -8.878301620483398
    5. '   ' → logprob: -9.253301620483398
    6. 'e' → logprob: -9.378301620483398
    7. 'pop' → logprob: -9.878301620483398
    8. 'continu' → logprob: -10.128301620483398
    9. '=' → logprob: -10.628301620483398
    10. 'cont' → logprob: -10.753301620483398

Token 862: '.remove' (ID: 7986)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.06103930622339249
    2. 'continue' → logprob: -3.9360392093658447
    3. '.' → logprob: -4.061039447784424
    4. '.remove' → logprob: -4.561039447784424
    5. 'discard' → logprob: -5.686039447784424
    6. 'add' → logprob: -6.186039447784424
    7. '.dis' → logprob: -6.311039447784424
    8. '.clear' → logprob: -6.561039447784424
    9. '                   ' → logprob: -6.811039447784424
    10. '                       ' → logprob: -6.936039447784424

Token 863: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00018947436183225363
    2. 'i' → logprob: -8.625189781188965
    3. '(' → logprob: -12.500189781188965
    4. '(l' → logprob: -12.625189781188965
    5. ' i' → logprob: -14.000189781188965
    6. '{i' → logprob: -14.250189781188965
    7. 'l' → logprob: -15.875189781188965
    8. '((' → logprob: -15.875189781188965
    9. '[i' → logprob: -16.00018882751465
    10. '(
' → logprob: -16.00018882751465

Token 864: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017469348385930061
    2. ')
' → logprob: -6.626747131347656
    3. '                   ' → logprob: -8.876747131347656
    4. '               ' → logprob: -9.126747131347656
    5. '<|end|>' → logprob: -9.126747131347656
    6. ' )' → logprob: -10.501747131347656
    7. ')return' → logprob: -11.876747131347656
    8. '           ' → logprob: -12.251747131347656
    9. '),' → logprob: -12.376747131347656
    10. ',' → logprob: -12.751747131347656

Token 865: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38408222794532776
    2. ' ' → logprob: -1.6340821981430054
    3. '               ' → logprob: -3.134082317352295
    4. '                ' → logprob: -3.884082317352295
    5. '                   ' → logprob: -4.259082317352295
    6. ' )' → logprob: -4.509082317352295
    7. ',' → logprob: -5.134082317352295
    8. '<|end|>' → logprob: -5.134082317352295
    9. ' else' → logprob: -5.884082317352295
    10. ':' → logprob: -5.884082317352295

Token 866: ' elif' (ID: 9497)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07760410010814667
    2. ' )' → logprob: -3.827604055404663
    3. ' ' → logprob: -3.952604055404663
    4. ':' → logprob: -4.702604293823242
    5. ' ' → logprob: -5.702604293823242
    6. '_' → logprob: -5.702604293823242
    7. ',' → logprob: -5.952604293823242
    8. ' else' → logprob: -6.327604293823242
    9. '[' → logprob: -6.452604293823242
    10. '(' → logprob: -6.577604293823242

Token 867: ' cur' (ID: 4396)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.1351195573806763
    2. ' i' → logprob: -1.3851195573806763
    3. ' not' → logprob: -2.3851194381713867
    4. 'l' → logprob: -2.3851194381713867
    5. 'i' → logprob: -2.6351194381713867
    6. ' f' → logprob: -2.8851194381713867
    7. 'f' → logprob: -3.6351194381713867
    8. 'not' → logprob: -3.6351194381713867
    9. 'True' → logprob: -4.260119438171387
    10. ' True' → logprob: -4.510119438171387

Token 868: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3518567681312561
    2. '==' → logprob: -1.7268567085266113
    3. ' +' → logprob: -3.4768567085266113
    4. '+' → logprob: -3.6018567085266113
    5. ' +=' → logprob: -3.6018567085266113
    6. '<|end|>' → logprob: -4.101856708526611
    7. ' !=' → logprob: -5.976856708526611
    8. ' ' → logprob: -6.101856708526611
    9. ' <' → logprob: -6.226856708526611
    10. '=' → logprob: -6.851856708526611

Token 869: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.019075967371463776
    2. ' l' → logprob: -5.144075870513916
    3. '0' → logprob: -5.644075870513916
    4. 'base' → logprob: -6.394075870513916
    5. '=' → logprob: -6.519075870513916
    6. 'cod' → logprob: -6.519075870513916
    7. 'mod' → logprob: -7.269075870513916
    8. 'lc' → logprob: -7.519075870513916
    9. '-' → logprob: -7.644075870513916
    10. '1' → logprob: -7.769075870513916

Token 870: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09951344132423401
    2. ' and' → logprob: -2.974513530731201
    3. '+' → logprob: -3.724513530731201
    4. ' +' → logprob: -5.724513530731201
    5. 'and' → logprob: -5.849513530731201
    6. ':
' → logprob: -6.224513530731201
    7. '<|end|>' → logprob: -6.224513530731201
    8. ' :' → logprob: -6.474513530731201
    9. '):' → logprob: -6.474513530731201
    10. '           ' → logprob: -6.724513530731201

Token 871: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5956926345825195
    2. ' ' → logprob: -1.9706926345825195
    3. '                ' → logprob: -2.0956926345825195
    4. '                    ' → logprob: -2.0956926345825195
    5. '                       ' → logprob: -4.2206926345825195
    6. '               ' → logprob: -4.4706926345825195
    7. '<|end|>' → logprob: -4.8456926345825195
    8. '                           ' → logprob: -5.3456926345825195
    9. '                        ' → logprob: -5.3456926345825195
    10. ' )' → logprob: -5.9706926345825195

Token 872: ' tot' (ID: 2417)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.4120407700538635
    2. ' cur' → logprob: -1.2870407104492188
    3. '                   ' → logprob: -2.9120407104492188
    4. '               ' → logprob: -6.537040710449219
    5. '                       ' → logprob: -6.662040710449219
    6. 'break' → logprob: -6.912040710449219
    7. ' break' → logprob: -7.037040710449219
    8. ' return' → logprob: -7.162040710449219
    9. ' f' → logprob: -7.787040710449219
    10. 'return' → logprob: -8.037040710449219

Token 873: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31554290652275085
    2. '+=' → logprob: -1.5655429363250732
    3. '=' → logprob: -3.1905429363250732
    4. ' =' → logprob: -3.9405429363250732
    5. '+' → logprob: -8.690543174743652
    6. '   ' → logprob: -8.940543174743652
    7. '    ' → logprob: -9.190543174743652
    8. '                   ' → logprob: -9.190543174743652
    9. ' -=' → logprob: -9.190543174743652
    10. ',' → logprob: -9.565543174743652

Token 874: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3304077684879303
    2. 'cur' → logprob: -1.455407738685608
    3. '1' → logprob: -3.5804078578948975
    4. ' l' → logprob: -5.330407619476318
    5. '(cur' → logprob: -5.330407619476318
    6. ' cur' → logprob: -6.080407619476318
    7. '-' → logprob: -6.205407619476318
    8. '(' → logprob: -6.455407619476318
    9. '(l' → logprob: -6.955407619476318
    10. 'i' → logprob: -7.330407619476318

Token 875: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 876: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -8.149051427608356e-05
    2. ' cur' → logprob: -9.500081062316895
    3. '(cur' → logprob: -12.875081062316895
    4. 'l' → logprob: -13.000081062316895
    5. '1' → logprob: -14.500081062316895
    6. '   ' → logprob: -15.375081062316895
    7. '	cur' → logprob: -16.25008201599121
    8. '```' → logprob: -16.25008201599121
    9. 'cod' → logprob: -16.37508201599121
    10. '[cur' → logprob: -16.50008201599121

Token 877: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0747414380311966
    2. '
' → logprob: -3.4497413635253906
    3. '<|end|>' → logprob: -4.324741363525391
    4. ' cur' → logprob: -4.824741363525391
    5. 'cur' → logprob: -5.199741363525391
    6. '               ' → logprob: -5.574741363525391
    7. ',' → logprob: -6.574741363525391
    8. '           ' → logprob: -6.824741363525391
    9. '                    
' → logprob: -6.949741363525391
    10. ' 
' → logprob: -7.074741363525391

Token 878: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8297789096832275
    2. ' ' → logprob: -1.3297789096832275
    3. '<|end|>' → logprob: -2.7047789096832275
    4. '               ' → logprob: -3.4547789096832275
    5. 'cur' → logprob: -3.7047789096832275
    6. ')' → logprob: -3.7047789096832275
    7. '\n' → logprob: -3.8297789096832275
    8. '                    ' → logprob: -3.8297789096832275
    9. ' \' → logprob: -4.079778671264648
    10. ' cur' → logprob: -4.204778671264648

Token 879: ' d' (ID: 272)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0019351851660758257
    2. ' cur' → logprob: -6.251935005187988
    3. '_cur' → logprob: -13.251935005187988
    4. '	cur' → logprob: -13.376935005187988
    5. '(cur' → logprob: -13.751935005187988
    6. '                   ' → logprob: -14.126935005187988
    7. '[cur' → logprob: -14.626935005187988
    8. '                           ' → logprob: -15.876935005187988
    9. '   ' → logprob: -16.001935958862305
    10. '.cur' → logprob: -16.001935958862305

Token 880: 'set' (ID: 977)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0022104429081082344
    2. ' cur' → logprob: -6.25221061706543
    3. '_cur' → logprob: -8.87721061706543
    4. '=' → logprob: -9.37721061706543
    5. '[cur' → logprob: -10.62721061706543
    6. ' =' → logprob: -11.12721061706543
    7. '   ' → logprob: -11.50221061706543
    8. '	cur' → logprob: -13.00221061706543
    9. '(cur' → logprob: -13.50221061706543
    10. 'curr' → logprob: -14.12721061706543

Token 881: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.3513955771923065
    2. '=' → logprob: -1.351395606994629
    3. '.' → logprob: -3.851395606994629
    4. 'add' → logprob: -4.601395606994629
    5. ' =' → logprob: -6.226395606994629
    6. '|' → logprob: -6.851395606994629
    7. '.clear' → logprob: -7.101395606994629
    8. ' |=' → logprob: -7.476395606994629
    9. ',' → logprob: -7.976395606994629
    10. '.update' → logprob: -8.726395606994629

Token 882: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004699495621025562
    2. '(i' → logprob: -5.37969970703125
    3. ' i' → logprob: -9.50469970703125
    4. '(' → logprob: -13.25469970703125
    5. '   ' → logprob: -13.87969970703125
    6. ' (' → logprob: -14.62969970703125
    7. '{i' → logprob: -15.25469970703125
    8. '	i' → logprob: -15.50469970703125
    9. '```' → logprob: -16.00469970703125
    10. ' ' → logprob: -16.00469970703125

Token 883: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05106096714735031
    2. ')
' → logprob: -3.176060914993286
    3. '                   ' → logprob: -5.176061153411865
    4. '               ' → logprob: -7.051061153411865
    5. '<|end|>' → logprob: -7.176061153411865
    6. '           ' → logprob: -8.551060676574707
    7. ' )' → logprob: -8.801060676574707
    8. ',' → logprob: -9.551060676574707
    9. '),' → logprob: -10.051060676574707
    10. ' )
' → logprob: -10.176060676574707

Token 884: '                   ' (ID: 699)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5654468536376953
    2. ' ' → logprob: -1.4404468536376953
    3. ' )' → logprob: -3.4404468536376953
    4. '<|end|>' → logprob: -3.4404468536376953
    5. '_' → logprob: -3.8154468536376953
    6. '\n' → logprob: -4.565446853637695
    7. '\' → logprob: -4.815446853637695
    8. '                   ' → logprob: -4.815446853637695
    9. ' 
' → logprob: -4.940446853637695
    10. ',' → logprob: -5.065446853637695

Token 885: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.007118130102753639
    2. '                   ' → logprob: -5.382118225097656
    3. ' cur' → logprob: -6.007118225097656
    4. '               ' → logprob: -11.757118225097656
    5. '                           ' → logprob: -11.882118225097656
    6. '                       ' → logprob: -12.257118225097656
    7. '           ' → logprob: -12.382118225097656
    8. '   ' → logprob: -13.007118225097656
    9. '[cur' → logprob: -13.132118225097656
    10. '(cur' → logprob: -13.757118225097656

Token 886: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03806616738438606
    2. ' =' → logprob: -3.2880661487579346
    3. '+=' → logprob: -11.038065910339355
    4. '<' → logprob: -12.913065910339355
    5. ' +=' → logprob: -13.413065910339355
    6. ',' → logprob: -13.788065910339355
    7. '<|end|>' → logprob: -14.163065910339355
    8. ' ' → logprob: -14.663065910339355
    9. ')' → logprob: -14.913065910339355
    10. '*=' → logprob: -15.413065910339355

Token 887: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.012513183988630772
    2. ' l' → logprob: -4.387513160705566
    3. '	l' → logprob: -13.887513160705566
    4. '```' → logprob: -15.075013160705566
    5. 'lc' → logprob: -15.262513160705566
    6. 'cod' → logprob: -15.575013160705566
    7. ' ' → logprob: -15.637513160705566
    8. 'cur' → logprob: -16.012514114379883
    9. 'ld' → logprob: -16.387514114379883
    10. ' ' → logprob: -16.637514114379883

Token 888: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 889: '                   ' (ID: 699)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09174180775880814
    2. '<|end|>' → logprob: -2.8417418003082275
    3. ':' → logprob: -4.716742038726807
    4. '           ' → logprob: -5.966742038726807
    5. '       ' → logprob: -6.091742038726807
    6. ',' → logprob: -6.216742038726807
    7. ' ' → logprob: -6.216742038726807
    8. ' )' → logprob: -6.466742038726807
    9. '               ' → logprob: -6.716742038726807
    10. '\n' → logprob: -6.841742038726807

Token 890: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.035576581954956
    2. ' return' → logprob: -1.410576581954956
    3. 'return' → logprob: -1.535576581954956
    4. ' ' → logprob: -3.660576581954956
    5. '                    ' → logprob: -3.785576581954956
    6. '               ' → logprob: -3.910576581954956
    7. '           ' → logprob: -4.285576820373535
    8. '                ' → logprob: -4.660576820373535
    9. '       ' → logprob: -4.785576820373535
    10. '    ' → logprob: -5.160576820373535

Token 891: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 892: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014795618131756783
    2. ' )' → logprob: -5.264795780181885
    3. '           ' → logprob: -6.139795780181885
    4. '       ' → logprob: -6.389795780181885
    5. '   ' → logprob: -6.639795780181885
    6. ' ' → logprob: -7.264795780181885
    7. ':' → logprob: -7.389795780181885
    8. '    ' → logprob: -7.764795780181885
    9. '(' → logprob: -8.389795303344727
    10. '```' → logprob: -8.389795303344727

Token 893: ' else' (ID: 1203)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5126284956932068
    2. '           ' → logprob: -2.2626285552978516
    3. ')' → logprob: -2.3876285552978516
    4. ' )' → logprob: -3.1376285552978516
    5. ' else' → logprob: -3.3876285552978516
    6. '               ' → logprob: -3.8876285552978516
    7. '       ' → logprob: -4.012628555297852
    8. '    ' → logprob: -4.387628555297852
    9. '        ' → logprob: -4.387628555297852
    10. '<|end|>' → logprob: -4.512628555297852

Token 894: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10653553903102875
    2. '                ' → logprob: -3.4815354347229004
    3. '               ' → logprob: -3.4815354347229004
    4. '                    ' → logprob: -4.1065354347229
    5. '           ' → logprob: -5.4815354347229
    6. ' break' → logprob: -5.6065354347229
    7. ' pass' → logprob: -5.8565354347229
    8. '            ' → logprob: -6.2315354347229
    9. ' continue' → logprob: -6.2315354347229
    10. ' if' → logprob: -6.6065354347229

Token 895: '                   ' (ID: 699)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -1.080246090888977
    2. ' l' → logprob: -1.205246090888977
    3. ' d' → logprob: -2.4552459716796875
    4. ' h' → logprob: -3.5802459716796875
    5. ' return' → logprob: -3.5802459716796875
    6. '                   ' → logprob: -3.7052459716796875
    7. ' pass' → logprob: -3.8302459716796875
    8. '                    ' → logprob: -3.8302459716796875
    9. ' continue' → logprob: -3.9552459716796875
    10. '               ' → logprob: -4.0802459716796875

Token 896: ' f' (ID: 285)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.70416659116745
    2. 'pass' → logprob: -1.0791666507720947
    3. 'break' → logprob: -2.4541666507720947
    4. 'return' → logprob: -3.0791666507720947
    5. 'd' → logprob: -3.9541666507720947
    6. 'f' (adapté à ' f') → logprob: -5.079166412353516
    7. '...' → logprob: -6.829166412353516
    8. 'cur' → logprob: -6.829166412353516
    9. 'for' → logprob: -6.954166412353516
    10. '           ' → logprob: -7.204166412353516

Token 897: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6633622050285339
    2. '+=' → logprob: -1.1633622646331787
    3. ' =' → logprob: -2.4133622646331787
    4. ' +=' → logprob: -3.0383622646331787
    5. 'break' → logprob: -4.2883620262146
    6. 'return' → logprob: -4.9133620262146
    7. '   ' → logprob: -5.4133620262146
    8. 'or' → logprob: -6.1633620262146
    9. ' ' → logprob: -6.5383620262146
    10. '-=' → logprob: -7.1633620262146

Token 898: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020104798022657633
    2. '0' → logprob: -6.752010345458984
    3. 'True' → logprob: -7.627010345458984
    4. 'f' → logprob: -8.877010345458984
    5. 'not' → logprob: -9.627010345458984
    6. 'False' → logprob: -9.752010345458984
    7. ' ' → logprob: -10.252010345458984
    8. '-' → logprob: -10.627010345458984
    9. ' True' → logprob: -11.877010345458984
    10. '+' → logprob: -12.002010345458984

Token 899: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002691578818485141
    2. '0' → logprob: -6.752691745758057
    3. 'True' → logprob: -6.752691745758057
    4. 'not' → logprob: -9.127691268920898
    5. 'False' → logprob: -9.502691268920898
    6. '-' → logprob: -9.752691268920898
    7. 'cur' → logprob: -11.127691268920898
    8. '+' → logprob: -11.127691268920898
    9. 'f' → logprob: -11.252691268920898
    10. 'i' → logprob: -11.502691268920898

Token 900: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 901: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 902: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.7827073335647583
    2. 'break' (adapté à ' break') → logprob: -0.9077073335647583
    3. '                   ' → logprob: -2.0327072143554688
    4. '               ' → logprob: -5.907707214355469
    5. 'return' → logprob: -6.407707214355469
    6. ' return' → logprob: -6.782707214355469
    7. '                       ' → logprob: -7.532707214355469
    8. '                    ' → logprob: -7.782707214355469
    9. '	break' → logprob: -8.032707214355469
    10. '           ' → logprob: -8.157707214355469

Token 903: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 904: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04183617979288101
    2. '           ' → logprob: -4.166836261749268
    3. '       ' → logprob: -4.916836261749268
    4. ' )' → logprob: -5.541836261749268
    5. '   ' → logprob: -5.791836261749268
    6. '<|end|>' → logprob: -6.166836261749268
    7. '_' → logprob: -6.291836261749268
    8. '               ' → logprob: -6.791836261749268
    9. ':' → logprob: -7.041836261749268
    10. '    ' → logprob: -7.041836261749268

Token 905: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29237696528434753
    2. '           ' → logprob: -1.91737699508667
    3. '   ' → logprob: -2.91737699508667
    4. '    ' → logprob: -5.16737699508667
    5. '<|end|>' → logprob: -5.16737699508667
    6. '               ' → logprob: -5.29237699508667
    7. 'while' → logprob: -5.41737699508667
    8. ' if' → logprob: -5.54237699508667
    9. '	' → logprob: -5.79237699508667
    10. '        ' → logprob: -5.91737699508667

Token 906: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.6442722678184509
    2. 'f' → logprob: -0.7692722678184509
    3. ' not' → logprob: -4.519272327423096
    4. 'not' → logprob: -7.394272327423096
    5. '   ' → logprob: -10.144271850585938
    6. ' ' → logprob: -11.144271850585938
    7. ' rs' → logprob: -11.144271850585938
    8. '  ' → logprob: -11.769271850585938
    9. '    ' → logprob: -12.144271850585938
    10. 'rs' → logprob: -12.269271850585938

Token 907: ':' (ID: 25)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5110995769500732
    2. ':' → logprob: -1.1360995769500732
    3. '==' → logprob: -2.6360995769500732
    4. '<|end|>' → logprob: -6.136099815368652
    5. ' :' → logprob: -6.511099815368652
    6. '=' → logprob: -7.011099815368652
    7. '   ' → logprob: -7.636099815368652
    8. ' ' → logprob: -7.886099815368652
    9. ' !=' → logprob: -8.511099815368652
    10. ')' → logprob: -8.636099815368652

Token 908: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03411206603050232
    2. '           ' → logprob: -3.659111976623535
    3. '            ' → logprob: -6.159111976623535
    4. '       ' → logprob: -6.284111976623535
    5. '                ' → logprob: -6.659111976623535
    6. '                   ' → logprob: -7.284111976623535
    7. ' break' → logprob: -7.409111976623535
    8. '<|end|>' → logprob: -8.034111976623535
    9. '   ' → logprob: -8.409111976623535
    10. '			' → logprob: -8.659111976623535

Token 909: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.764742910861969
    2. '<|end|>' → logprob: -0.764742910861969
    3. '       ' → logprob: -3.764742851257324
    4. '            
' → logprob: -4.389742851257324
    5. '
' → logprob: -5.639742851257324
    6. '   ' → logprob: -5.764742851257324
    7. ' 
' → logprob: -5.889742851257324
    8. '    ' → logprob: -6.014742851257324
    9. '            ' → logprob: -6.139742851257324
    10. '        
' → logprob: -6.264742851257324

Token 910: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.910911500453949
    2. '           ' → logprob: -1.7859115600585938
    3. '       ' → logprob: -1.9109115600585938
    4. '    ' → logprob: -2.4109115600585938
    5. '   ' → logprob: -3.2859115600585938
    6. ')' → logprob: -3.4109115600585938
    7. '<|end|>' → logprob: -3.6609115600585938
    8. '        ' → logprob: -3.7859115600585938
    9. ' )' → logprob: -4.285911560058594
    10. '            ' → logprob: -4.660911560058594

Token 911: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7693807482719421
    2. ' for' → logprob: -1.019380807876587
    3. 'for' (adapté à ' for') → logprob: -2.019380807876587
    4. '       ' → logprob: -3.644380807876587
    5. '   ' → logprob: -4.144380569458008
    6. '               ' → logprob: -8.644380569458008
    7. '    ' → logprob: -8.769380569458008
    8. ' ' → logprob: -9.144380569458008
    9. ' ' → logprob: -9.269380569458008
    10. '	for' → logprob: -9.394380569458008

Token 912: ' rc' (ID: 23309)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.010546626523137093
    2. '	rc' → logprob: -5.635546684265137
    3. ' rc' → logprob: -5.885546684265137
    4. 'rcode' → logprob: -6.510546684265137
    5. '(rc' → logprob: -6.760546684265137
    6. 'r' → logprob: -7.510546684265137
    7. '_rc' → logprob: -8.510546684265137
    8. '   ' → logprob: -8.760546684265137
    9. '```' → logprob: -9.010546684265137
    10. '`' → logprob: -9.510546684265137

Token 913: 'od' (ID: 368)
  Prédit: 'od'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.0004948906716890633
    2. 'cod' → logprob: -8.750494956970215
    3. 'ods' → logprob: -9.250494956970215
    4. 'ode' → logprob: -9.375494956970215
    5. 's' → logprob: -10.000494956970215
    6. 'odes' → logprob: -10.000494956970215
    7. 'rs' → logprob: -11.125494956970215
    8. 'in' → logprob: -11.250494956970215
    9. 'os' → logprob: -12.000494956970215
    10. 'd' → logprob: -12.687994956970215

Token 914: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11286255717277527
    2. 'in' → logprob: -2.2378625869750977
    3. 'cod' → logprob: -10.987862586975098
    4. ' ' → logprob: -11.487862586975098
    5. ' cod' → logprob: -12.237862586975098
    6. ',' → logprob: -12.862862586975098
    7. '  ' → logprob: -13.362862586975098
    8. '	in' → logprob: -13.362862586975098
    9. ' ' → logprob: -14.862862586975098
    10. 'incode' → logprob: -14.987862586975098

Token 915: ' rs' (ID: 15181)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -5.407366916188039e-05
    2. ' rs' → logprob: -10.000054359436035
    3. '(rs' → logprob: -11.750054359436035
    4. '$rs' → logprob: -15.125054359436035
    5. '	rs' → logprob: -15.250054359436035
    6. '_rs' → logprob: -16.12505340576172
    7. 'ls' → logprob: -16.50005340576172
    8. ' ' → logprob: -17.62505340576172
    9. 'r' → logprob: -18.00005340576172
    10. '[' → logprob: -18.12505340576172

Token 916: '_iter' (ID: 27043)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.09208260476589203
    2. '_iter' → logprob: -2.4670825004577637
    3. '()' → logprob: -6.717082500457764
    4. '():
' → logprob: -7.092082500457764
    5. ':' → logprob: -7.217082500457764
    6. '_iterator' → logprob: -8.217082977294922
    7. 'iter' → logprob: -10.092082977294922
    8. '();' → logprob: -11.842082977294922
    9. '_ITER' → logprob: -11.842082977294922
    10. '(' → logprob: -12.342082977294922

Token 917: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.47837358713150024
    2. '():
' → logprob: -0.9783735871315002
    3. '()' → logprob: -5.4783735275268555
    4. '():

' → logprob: -10.228373527526855
    5. '():
' → logprob: -10.353373527526855
    6. ':' → logprob: -11.228373527526855
    7. '()>' → logprob: -11.853373527526855
    8. '(' → logprob: -12.478373527526855
    9. '<|end|>' → logprob: -12.478373527526855
    10. '()<' → logprob: -12.853373527526855

Token 918: '               ' (ID: 506)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.857914388179779
    2. '               ' → logprob: -1.1079144477844238
    3. ' (' → logprob: -2.607914447784424
    4. '():
' → logprob: -2.732914447784424
    5. '(rc' → logprob: -3.857914447784424
    6. '<|end|>' → logprob: -4.357914447784424
    7. ':' → logprob: -4.482914447784424
    8. '()' → logprob: -4.482914447784424
    9. '():' → logprob: -4.607914447784424
    10. '       ' → logprob: -4.732914447784424

Token 919: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.14244577288627625
    2. ' r' → logprob: -2.3924458026885986
    3. '               ' → logprob: -3.2674458026885986
    4. '           ' → logprob: -5.7674455642700195
    5. '                   ' → logprob: -9.76744556427002
    6. '   ' → logprob: -9.89244556427002
    7. '       ' → logprob: -11.64244556427002
    8. ' ' → logprob: -12.39244556427002
    9. '	r' → logprob: -12.76744556427002
    10. ' ' → logprob: -14.39244556427002

Token 920: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001882823125924915
    2. ' ,' → logprob: -9.000187873840332
    3. ' =' → logprob: -10.375187873840332
    4. ',i' → logprob: -11.500187873840332
    5. '=' → logprob: -11.625187873840332
    6. '_,' → logprob: -12.750187873840332
    7. '               ' → logprob: -12.750187873840332
    8. '<|end|>' → logprob: -13.750187873840332
    9. '           ' → logprob: -13.875187873840332
    10. ',r' → logprob: -14.125187873840332

Token 921: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.021377498283982277
    2. ' i' → logprob: -3.8963775634765625
    3. 'rc' → logprob: -7.3963775634765625
    4. 'r' → logprob: -9.646377563476562
    5. ' rc' → logprob: -9.771377563476562
    6. 'base' → logprob: -10.396377563476562
    7. 'code' → logprob: -11.771377563476562
    8. 'b' → logprob: -11.896377563476562
    9. '(i' → logprob: -12.021377563476562
    10. '=' → logprob: -12.521377563476562

Token 922: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197384372353554
    2. ' =' → logprob: -2.811973810195923
    3. ',' → logprob: -12.061973571777344
    4. '               ' → logprob: -15.436973571777344
    5. '   ' → logprob: -16.311973571777344
    6. '           ' → logprob: -17.561973571777344
    7. ' ' → logprob: -17.561973571777344
    8. '       ' → logprob: -18.436973571777344
    9. '```' → logprob: -18.436973571777344
    10. '                   ' → logprob: -18.811973571777344

Token 923: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0002764710516203195
    2. ' div' → logprob: -8.375276565551758
    3. 'rc' → logprob: -10.000276565551758
    4. '(div' → logprob: -15.500276565551758
    5. 'cod' → logprob: -16.000276565551758
    6. '   ' → logprob: -16.625276565551758
    7. ' rc' → logprob: -16.750276565551758
    8. '	div' → logprob: -17.250276565551758
    9. '(rc' → logprob: -17.375276565551758
    10. '     ' → logprob: -17.875276565551758

Token 924: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.000808082812000066
    2. 'div' → logprob: -7.125808238983154
    3. 'omod' → logprob: -13.125807762145996
    4. '(div' → logprob: -14.375807762145996
    5. 'cod' → logprob: -14.875807762145996
    6. '(' → logprob: -16.000808715820312
    7. 'mods' → logprob: -16.125808715820312
    8. '(rc' → logprob: -16.375808715820312
    9. 'od' → logprob: -16.625808715820312
    10. '(mod' → logprob: -16.750808715820312

Token 925: '(rc' (ID: 83646)
  Prédit: '(rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rc' → logprob: -7.481510692741722e-05
    2. 'rc' → logprob: -9.62507438659668
    3. '(r' → logprob: -12.25007438659668
    4. '(rs' → logprob: -13.12507438659668
    5. ' rc' → logprob: -13.62507438659668
    6. '	rc' → logprob: -14.62507438659668
    7. '.rc' → logprob: -16.25007438659668
    8. 'r' → logprob: -16.87507438659668
    9. ' (' → logprob: -17.87507438659668
    10. '_rc' → logprob: -17.87507438659668

Token 926: 'od' (ID: 368)
  Prédit: 'od'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.0019106694962829351
    2. 'cod' → logprob: -6.37691068649292
    3. 'rc' → logprob: -9.001910209655762
    4. '_cod' → logprob: -10.876910209655762
    5. '(rc' → logprob: -12.251910209655762
    6. 'од' → logprob: -12.376910209655762
    7. '.cod' → logprob: -12.626910209655762
    8. 'r' → logprob: -12.626910209655762
    9. 'oc' → logprob: -12.626910209655762
    10. 'Cod' → logprob: -12.751910209655762

Token 927: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020246754866093397
    2. '(rs' → logprob: -8.875202178955078
    3. '(rc' → logprob: -10.125202178955078
    4. '(r' → logprob: -11.375202178955078
    5. ' ,' → logprob: -12.625202178955078
    6. '(' → logprob: -13.000202178955078
    7. ',r' → logprob: -13.125202178955078
    8. ')' → logprob: -13.875202178955078
    9. '```' → logprob: -14.875202178955078
    10. '),' → logprob: -15.125202178955078

Token 928: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0013314292300492525
    2. ' base' → logprob: -6.626331329345703
    3. 'r' → logprob: -12.626331329345703
    4. '(base' → logprob: -13.751331329345703
    5. '   ' → logprob: -14.126331329345703
    6. 'rs' → logprob: -15.501331329345703
    7. ' ' → logprob: -16.251331329345703
    8. '  ' → logprob: -17.501331329345703
    9. '_base' → logprob: -17.876331329345703
    10. '/base' → logprob: -17.876331329345703

Token 929: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2257252186536789
    2. ')
' → logprob: -1.6007251739501953
    3. '               ' → logprob: -8.350725173950195
    4. ')

' → logprob: -11.225725173950195
    5. '):
' → logprob: -11.475725173950195
    6. '<|end|>' → logprob: -11.475725173950195
    7. '),' → logprob: -11.600725173950195
    8. ',' → logprob: -12.475725173950195
    9. ')\
' → logprob: -12.725725173950195
    10. ')
' → logprob: -12.850725173950195

Token 930: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0025717332027852535
    2. '<|end|>' → logprob: -6.2525715827941895
    3. '                ' → logprob: -8.502572059631348
    4. 'r' → logprob: -9.627572059631348
    5. '                
' → logprob: -9.752572059631348
    6. '```' → logprob: -9.877572059631348
    7. ' ' → logprob: -10.002572059631348
    8. ' if' → logprob: -10.002572059631348
    9. '                   ' → logprob: -10.127572059631348
    10. ' r' → logprob: -10.377572059631348

Token 931: ' if' (ID: 538)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10362923890352249
    2. 'if' (adapté à ' if') → logprob: -2.9786293506622314
    3. '               ' → logprob: -3.2286293506622314
    4. ' if' → logprob: -5.478629112243652
    5. ' r' → logprob: -5.728629112243652
    6. '                   ' → logprob: -7.853629112243652
    7. '```' → logprob: -9.978629112243652
    8. '           ' → logprob: -10.603629112243652
    9. '   ' → logprob: -11.228629112243652
    10. '                ' → logprob: -11.728629112243652

Token 932: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005357194691896439
    2. ' i' → logprob: -5.255357265472412
    3. 'r' → logprob: -9.755356788635254
    4. 'f' → logprob: -10.255356788635254
    5. 'not' → logprob: -11.130356788635254
    6. 'cur' → logprob: -12.505356788635254
    7. '   ' → logprob: -12.755356788635254
    8. '(i' → logprob: -13.380356788635254
    9. ' ' → logprob: -13.505356788635254
    10. '  ' → logprob: -13.880356788635254

Token 933: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.028467681258916855
    2. ' not' → logprob: -4.153467655181885
    3. 'in' → logprob: -4.403467655181885
    4. 'not' → logprob: -9.278468132019043
    5. '<|end|>' → logprob: -10.778468132019043
    6. ')' → logprob: -12.528468132019043
    7. ' ' → logprob: -13.653468132019043
    8. '<|end|>' → logprob: -14.278468132019043
    9. '   ' → logprob: -15.028468132019043
    10. '               ' → logprob: -15.528468132019043

Token 934: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0004926258116029203
    2. ' d' → logprob: -7.625492572784424
    3. '<|end|>' → logprob: -12.875493049621582
    4. ')d' → logprob: -14.250493049621582
    5. 'f' → logprob: -14.625493049621582
    6. '...' → logprob: -15.375493049621582
    7. '```' → logprob: -15.750493049621582
    8. '           ' → logprob: -16.125492095947266
    9. '<|end|>' → logprob: -16.500492095947266
    10. 'user' → logprob: -16.875492095947266

Token 935: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.002848982810974121
    2. 'd' → logprob: -5.877849102020264
    3. 's' → logprob: -10.377848625183105
    4. 'et' → logprob: -11.627848625183105
    5. 'f' → logprob: -13.002848625183105
    6. ' d' → logprob: -14.002848625183105
    7. ' set' → logprob: -15.377848625183105
    8. 'sets' → logprob: -15.627848625183105
    9. '...' → logprob: -16.002849578857422
    10. '```' → logprob: -16.502849578857422

Token 936: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45641350746154785
    2. ':
' → logprob: -1.5814135074615479
    3. '                   ' → logprob: -1.9564135074615479
    4. '<|end|>' → logprob: -4.581413269042969
    5. '               ' → logprob: -5.956413269042969
    6. '):
' → logprob: -5.956413269042969
    7. '):' → logprob: -6.331413269042969
    8. ',' → logprob: -7.331413269042969
    9. ')' → logprob: -7.706413269042969
    10. '           ' → logprob: -8.581413269042969

Token 937: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0008953820797614753
    2. 'd' → logprob: -7.5008955001831055
    3. '```' → logprob: -9.250895500183105
    4. '                       ' → logprob: -9.375895500183105
    5. '               ' → logprob: -9.625895500183105
    6. '           ' → logprob: -10.500895500183105
    7. '   ' → logprob: -10.750895500183105
    8. '       ' → logprob: -11.500895500183105
    9. 'continue' → logprob: -11.625895500183105
    10. ' d' → logprob: -11.750895500183105

Token 938: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0026985935401171446
    2. ' d' → logprob: -6.1276984214782715
    3. '                   ' → logprob: -7.8776984214782715
    4. '           ' → logprob: -10.00269889831543
    5. '               ' → logprob: -10.37769889831543
    6. '       ' → logprob: -10.50269889831543
    7. 'continue' → logprob: -11.00269889831543
    8. '   ' → logprob: -11.87769889831543
    9. '```' → logprob: -12.75269889831543
    10. ' continue' → logprob: -14.00269889831543

Token 939: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -2.570319702499546e-05
    2. 'et' → logprob: -10.750025749206543
    3. 's' → logprob: -12.750025749206543
    4. 'd' → logprob: -14.250025749206543
    5. 'se' → logprob: -16.000024795532227
    6. '=set' → logprob: -16.125024795532227
    7. 'else' → logprob: -16.625024795532227
    8. '{' → logprob: -16.625024795532227
    9. '_set' → logprob: -17.000024795532227
    10. 'continue' → logprob: -17.250024795532227

Token 940: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.006197061389684677
    2. 'remove' → logprob: -5.381196975708008
    3. '.add' → logprob: -6.756196975708008
    4. '.' → logprob: -8.506196975708008
    5. '                   ' → logprob: -9.006196975708008
    6. '.dis' → logprob: -10.631196975708008
    7. '                       ' → logprob: -10.756196975708008
    8. '               ' → logprob: -11.506196975708008
    9. '.pop' → logprob: -11.756196975708008
    10. ' remove' → logprob: -12.256196975708008

Token 941: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.1875571544806007e-05
    2. 'i' → logprob: -11.875011444091797
    3. '(' → logprob: -12.250011444091797
    4. ' i' → logprob: -17.000011444091797
    5. '{i' → logprob: -18.000011444091797
    6. '<|end|>' → logprob: -18.000011444091797
    7. ' (' → logprob: -18.500011444091797
    8. '(ii' → logprob: -20.000011444091797
    9. ',i' → logprob: -20.250011444091797
    10. '[i' → logprob: -20.500011444091797

Token 942: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012962681241333485
    2. ')
' → logprob: -4.512962818145752
    3. '                   ' → logprob: -6.762962818145752
    4. '               ' → logprob: -7.262962818145752
    5. ')i' → logprob: -11.512962341308594
    6. '           ' → logprob: -11.637962341308594
    7. '),' → logprob: -11.762962341308594
    8. '       ' → logprob: -12.512962341308594
    9. '<|end|>' → logprob: -12.512962341308594
    10. '(i' → logprob: -13.012962341308594

Token 943: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.031179025769233704
    2. '                   ' → logprob: -3.5311789512634277
    3. 'else' → logprob: -7.281178951263428
    4. '           ' → logprob: -9.156179428100586
    5. '                       ' → logprob: -9.281179428100586
    6. ')' → logprob: -9.531179428100586
    7. ' ' → logprob: -9.531179428100586
    8. '```' → logprob: -9.531179428100586
    9. '       ' → logprob: -9.656179428100586
    10. ' else' → logprob: -10.031179428100586

Token 944: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24455901980400085
    2. 'elif' (adapté à ' elif') → logprob: -2.2445590496063232
    3. ' elif' → logprob: -2.2445590496063232
    4. '                   ' → logprob: -5.619558811187744
    5. ' else' → logprob: -7.994558811187744
    6. 'else' → logprob: -8.244559288024902
    7. '           ' → logprob: -8.494559288024902
    8. '   ' → logprob: -8.869559288024902
    9. '...' → logprob: -9.244559288024902
    10. '                ' → logprob: -9.494559288024902

Token 945: ' cur' (ID: 4396)
  Prédit: ' cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.5893132090568542
    2. 'cur' → logprob: -0.8393132090568542
    3. 'r' → logprob: -4.96431303024292
    4. ' r' → logprob: -5.08931303024292
    5. '   ' → logprob: -10.339313507080078
    6. 'rc' → logprob: -10.464313507080078
    7. 'f' → logprob: -11.651813507080078
    8. '	cur' → logprob: -11.714313507080078
    9. '(cur' → logprob: -11.839313507080078
    10. '```' → logprob: -11.964313507080078

Token 946: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.021165110170841217
    2. '<' → logprob: -4.021164894104004
    3. '<|end|>' → logprob: -6.021164894104004
    4. ' <=' → logprob: -8.896164894104004
    5. ' >=' → logprob: -8.896164894104004
    6. ' >' → logprob: -9.271164894104004
    7. ' ' → logprob: -9.771164894104004
    8. '[' → logprob: -10.521164894104004
    9. '>' → logprob: -11.021164894104004
    10. '=' → logprob: -11.021164894104004

Token 947: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003625247161835432
    2. ' r' → logprob: -5.628625392913818
    3. 'cur' → logprob: -11.37862491607666
    4. '   ' → logprob: -12.37862491607666
    5. '                   ' → logprob: -12.75362491607666
    6. 'rc' → logprob: -13.50362491607666
    7. '               ' → logprob: -13.87862491607666
    8. '           ' → logprob: -14.37862491607666
    9. '  ' → logprob: -14.62862491607666
    10. ' ' → logprob: -14.75362491607666

Token 948: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5666829943656921
    2. '                   ' → logprob: -1.441683053970337
    3. ':
' → logprob: -1.691683053970337
    4. '               ' → logprob: -5.566682815551758
    5. '+' → logprob: -6.316682815551758
    6. '<|end|>' → logprob: -6.441682815551758
    7. ' :' → logprob: -7.441682815551758
    8. '                  ' → logprob: -7.691682815551758
    9. ',' → logprob: -7.691682815551758
    10. '                    ' → logprob: -7.816682815551758

Token 949: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5681777596473694
    2. '                    ' → logprob: -1.3181777000427246
    3. '                ' → logprob: -2.3181777000427246
    4. '               ' → logprob: -3.4431777000427246
    5. ' ' → logprob: -4.443177700042725
    6. '            ' → logprob: -5.193177700042725
    7. '0' → logprob: -5.568177700042725
    8. '                  ' → logprob: -5.568177700042725
    9. '<|end|>' → logprob: -6.818177700042725
    10. '    ' → logprob: -7.068177700042725

Token 950: ' tot' (ID: 2417)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6969603896141052
    2. 'tot' (adapté à ' tot') → logprob: -1.57196044921875
    3. ' tot' → logprob: -1.82196044921875
    4. ' f' → logprob: -2.44696044921875
    5. 'f' → logprob: -3.44696044921875
    6. '               ' → logprob: -5.19696044921875
    7. '```' → logprob: -5.32196044921875
    8. '           ' → logprob: -6.19696044921875
    9. '   ' → logprob: -7.69696044921875
    10. '``' → logprob: -7.82196044921875

Token 951: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0037943734787404537
    2. '+=' → logprob: -6.628794193267822
    3. ' -=' → logprob: -7.003794193267822
    4. ' +' → logprob: -7.128794193267822
    5. '+' → logprob: -8.25379467010498
    6. '<|end|>' → logprob: -8.25379467010498
    7. ' =' → logprob: -8.75379467010498
    8. ')' → logprob: -10.25379467010498
    9. ' ' → logprob: -11.75379467010498
    10. '=' → logprob: -11.87879467010498

Token 952: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.04373430088162422
    2. ' cur' → logprob: -3.168734312057495
    3. '(cur' → logprob: -7.543734073638916
    4. '[cur' → logprob: -8.918734550476074
    5. '```' → logprob: -10.668734550476074
    6. '	cur' → logprob: -11.293734550476074
    7. '   ' → logprob: -11.418734550476074
    8. '0' → logprob: -12.043734550476074
    9. '`' → logprob: -12.793734550476074
    10. 'abs' → logprob: -13.043734550476074

Token 953: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0059478795155882835
    2. '-' → logprob: -5.130948066711426
    3. '-r' → logprob: -11.255948066711426
    4. ' ' → logprob: -12.755948066711426
    5. '<|end|>' → logprob: -14.005948066711426
    6. ' –' → logprob: -14.630948066711426
    7. '-cur' → logprob: -15.130948066711426
    8. '   ' → logprob: -15.255948066711426
    9. ' -=' → logprob: -15.255948066711426
    10. '—' → logprob: -15.255948066711426

Token 954: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.000488110730657354
    2. ' r' → logprob: -7.62548828125
    3. 'cur' → logprob: -17.12548828125
    4. '<|end|>' → logprob: -17.62548828125
    5. '```' → logprob: -18.62548828125
    6. '	r' → logprob: -19.50048828125
    7. ' ' → logprob: -19.62548828125
    8. 'rc' → logprob: -19.62548828125
    9. '(r' → logprob: -19.87548828125
    10. 'rcode' → logprob: -20.25048828125

Token 955: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15393272042274475
    2. '<|end|>' → logprob: -2.528932809829712
    3. '               ' → logprob: -3.903932809829712
    4. ' ' → logprob: -4.278932571411133
    5. ' 
' → logprob: -5.153932571411133
    6. '                    ' → logprob: -5.153932571411133
    7. ')' → logprob: -5.278932571411133
    8. '                ' → logprob: -6.278932571411133
    9. '           ' → logprob: -6.653932571411133
    10. '                  ' → logprob: -6.778932571411133

Token 956: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0017798993503674865
    2. '               ' → logprob: -6.876780033111572
    3. '                    ' → logprob: -8.626779556274414
    4. '<|end|>' → logprob: -9.001779556274414
    5. '                       ' → logprob: -9.376779556274414
    6. '           ' → logprob: -9.751779556274414
    7. '                  ' → logprob: -9.751779556274414
    8. '                    
' → logprob: -9.751779556274414
    9. '```' → logprob: -10.126779556274414
    10. ' ' → logprob: -10.751779556274414

Token 957: ' cur' (ID: 4396)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07259320467710495
    2. '                   ' → logprob: -3.1975932121276855
    3. 'cur' (adapté à ' cur') → logprob: -4.1975932121276855
    4. 'break' → logprob: -4.4475932121276855
    5. 'f' → logprob: -6.9475932121276855
    6. 'return' → logprob: -7.5725932121276855
    7. ' d' → logprob: -7.6975932121276855
    8. '               ' → logprob: -9.197592735290527
    9. '                       ' → logprob: -9.697592735290527
    10. '           ' → logprob: -9.697592735290527

Token 958: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0033242227509617805
    2. ' =' → logprob: -5.753324031829834
    3. '+=' → logprob: -9.128324508666992
    4. ' +=' → logprob: -11.378324508666992
    5. ',' → logprob: -12.378324508666992
    6. '                   ' → logprob: -12.378324508666992
    7. '-=' → logprob: -12.878324508666992
    8. '<' → logprob: -13.128324508666992
    9. '>' → logprob: -13.503324508666992
    10. '*=' → logprob: -13.503324508666992

Token 959: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00010902655776590109
    2. ' r' → logprob: -9.12510871887207
    3. '(r' → logprob: -18.37510871887207
    4. '```' → logprob: -18.50010871887207
    5. '-' → logprob: -18.62510871887207
    6. '	r' → logprob: -18.75010871887207
    7. 'cur' → logprob: -18.75010871887207
    8. '[r' → logprob: -19.00010871887207
    9. 'rs' → logprob: -19.56260871887207
    10. '-r' → logprob: -19.87510871887207

Token 960: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06860332190990448
    2. '<|end|>' → logprob: -2.943603277206421
    3. '               ' → logprob: -4.818603515625
    4. '           ' → logprob: -6.443603515625
    5. '
' → logprob: -7.568603515625
    6. '                       ' → logprob: -7.693603515625
    7. '       ' → logprob: -7.818603515625
    8. '				' → logprob: -7.818603515625
    9. ')' → logprob: -7.818603515625
    10. '                           ' → logprob: -8.318603515625

Token 961: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004784207325428724
    2. '               ' → logprob: -6.004784107208252
    3. '           ' → logprob: -6.754784107208252
    4. '
' → logprob: -8.12978458404541
    5. '<|end|>' → logprob: -8.50478458404541
    6. '       ' → logprob: -8.87978458404541
    7. '                       ' → logprob: -9.00478458404541
    8. '   ' → logprob: -9.87978458404541
    9. '                  ' → logprob: -9.87978458404541
    10. '                    ' → logprob: -10.37978458404541

Token 962: ' d' (ID: 272)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.3256765604019165
    2. ' break' → logprob: -1.3256765604019165
    3. 'f' → logprob: -4.575676441192627
    4. ' f' → logprob: -6.575676441192627
    5. '           ' → logprob: -8.325676918029785
    6. '1' → logprob: -9.075676918029785
    7. '                   ' → logprob: -9.325676918029785
    8. 'd' (adapté à ' d') → logprob: -10.200676918029785
    9. '                           ' → logprob: -10.700676918029785
    10. '```' → logprob: -10.825676918029785

Token 963: 'set' (ID: 977)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.760491132736206
    2. '1' → logprob: -1.385491132736206
    3. 'break' → logprob: -1.760491132736206
    4. ' break' → logprob: -3.760491132736206
    5. '0' → logprob: -3.885491132736206
    6. 'd' → logprob: -4.135491371154785
    7. 'else' → logprob: -4.885491371154785
    8. '+' → logprob: -4.885491371154785
    9. 'ef' → logprob: -5.260491371154785
    10. '-' → logprob: -5.260491371154785

Token 964: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00013572083844337612
    2. 'add' → logprob: -9.62513542175293
    3. '.' → logprob: -10.37513542175293
    4. '.remove' → logprob: -10.62513542175293
    5. '                   ' → logprob: -12.37513542175293
    6. '                       ' → logprob: -12.87513542175293
    7. ' .' → logprob: -13.37513542175293
    8. '           ' → logprob: -13.50013542175293
    9. '.clear' → logprob: -13.87513542175293
    10. '```' → logprob: -13.87513542175293

Token 965: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0002613358374219388
    2. 'i' → logprob: -8.250261306762695
    3. ' i' → logprob: -18.125261306762695
    4. '(
' → logprob: -19.000261306762695
    5. ',i' → logprob: -19.375261306762695
    6. '{i' → logprob: -19.750261306762695
    7. '=i' → logprob: -19.875261306762695
    8. '	i' → logprob: -20.125261306762695
    9. ' (' → logprob: -20.500261306762695
    10. '[i' → logprob: -20.625261306762695

Token 966: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004825145471841097
    2. ')
' → logprob: -5.379825115203857
    3. '                   ' → logprob: -9.254825592041016
    4. '               ' → logprob: -9.629825592041016
    5. '<|end|>' → logprob: -11.129825592041016
    6. '           ' → logprob: -12.254825592041016
    7. ',' → logprob: -12.629825592041016
    8. '       ' → logprob: -12.754825592041016
    9. ' )' → logprob: -12.754825592041016
    10. ')return' → logprob: -12.879825592041016

Token 967: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04133736342191696
    2. '               ' → logprob: -3.416337251663208
    3. '           ' → logprob: -6.041337490081787
    4. '<|end|>' → logprob: -6.041337490081787
    5. '       ' → logprob: -7.541337490081787
    6. ',' → logprob: -7.541337490081787
    7. '                       ' → logprob: -8.041337013244629
    8. '```' → logprob: -8.291337013244629
    9. '                    ' → logprob: -8.791337013244629
    10. '                  ' → logprob: -8.791337013244629

Token 968: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.07002034783363342
    2. ' break' → logprob: -2.6950204372406006
    3. 'continue' → logprob: -10.82002067565918
    4. '                   ' → logprob: -10.94502067565918
    5. '           ' → logprob: -11.69502067565918
    6. 'else' → logprob: -11.82002067565918
    7. '               ' → logprob: -11.94502067565918
    8. '```' → logprob: -12.32002067565918
    9. '	break' → logprob: -12.69502067565918
    10. '       ' → logprob: -12.82002067565918

Token 969: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 970: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04212353006005287
    2. '               ' → logprob: -3.542123556137085
    3. '<|end|>' → logprob: -5.292123317718506
    4. '       ' → logprob: -5.542123317718506
    5. '          ' → logprob: -6.417123317718506
    6. '                   ' → logprob: -7.792123317718506
    7. '   ' → logprob: -8.542123794555664
    8. '            ' → logprob: -8.792123794555664
    9. '```' → logprob: -8.917123794555664
    10. '              ' → logprob: -9.042123794555664

Token 971: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4961339235305786
    2. '           ' → logprob: -1.3711339235305786
    3. ' else' → logprob: -1.9961339235305786
    4. 'f' → logprob: -6.996133804321289
    5. '               ' → logprob: -8.621133804321289
    6. '       ' → logprob: -9.121133804321289
    7. '          ' → logprob: -9.621133804321289
    8. '   ' → logprob: -9.746133804321289
    9. ' f' → logprob: -10.871133804321289
    10. '         ' → logprob: -10.996133804321289

Token 972: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16868463158607483
    2. ' f' → logprob: -2.418684720993042
    3. ':
' → logprob: -4.543684482574463
    4. ':' → logprob: -4.543684482574463
    5. '               ' → logprob: -4.543684482574463
    6. '                    ' → logprob: -4.918684482574463
    7. ' ' → logprob: -4.918684482574463
    8. '                ' → logprob: -5.418684482574463
    9. '   ' → logprob: -5.793684482574463
    10. '{' → logprob: -6.043684482574463

Token 973: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4883388876914978
    2. 'f' → logprob: -1.6133389472961426
    3. ' f' → logprob: -1.7383389472961426
    4. '               ' → logprob: -5.738338947296143
    5. '	f' → logprob: -5.863338947296143
    6. '                    ' → logprob: -6.738338947296143
    7. '   ' → logprob: -6.863338947296143
    8. '				' → logprob: -6.988338947296143
    9. '           ' → logprob: -7.613338947296143
    10. '                ' → logprob: -7.988338947296143

Token 974: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.0001037815964082256
    2. ' f' → logprob: -9.250103950500488
    3. '                   ' → logprob: -12.500103950500488
    4. '```' → logprob: -13.000103950500488
    5. 'break' → logprob: -13.750103950500488
    6. '               ' → logprob: -15.625103950500488
    7. '           ' → logprob: -15.750103950500488
    8. '``' → logprob: -16.750102996826172
    9. '                       ' → logprob: -16.875102996826172
    10. '   ' → logprob: -17.250102996826172

Token 975: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197194382548332
    2. ' =' → logprob: -2.81197190284729
    3. '+=' → logprob: -13.311971664428711
    4. ' +=' → logprob: -13.436971664428711
    5. '   ' → logprob: -14.436971664428711
    6. '           ' → logprob: -15.936971664428711
    7. '    ' → logprob: -16.43697166442871
    8. '                   ' → logprob: -16.43697166442871
    9. '	' → logprob: -16.43697166442871
    10. '=True' → logprob: -16.68697166442871

Token 976: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006717386189848185
    2. ' ' → logprob: -5.006717205047607
    3. '                   ' → logprob: -14.256717681884766
    4. '0' → logprob: -14.881717681884766
    5. '   ' → logprob: -15.256717681884766
    6. '=' → logprob: -15.506717681884766
    7. '               ' → logprob: -15.631717681884766
    8. '           ' → logprob: -16.131717681884766
    9. ' =' → logprob: -16.756717681884766
    10. '2' → logprob: -16.881717681884766

Token 977: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.500011444091797
    3. '0' → logprob: -13.500011444091797
    4. '   ' → logprob: -18.125011444091797
    5. 'True' → logprob: -18.625011444091797
    6. '2' → logprob: -19.125011444091797
    7. '
' → logprob: -20.125011444091797
    8. '           ' → logprob: -20.625011444091797
    9. ' True' → logprob: -20.625011444091797
    10. '```' → logprob: -20.875011444091797

Token 978: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6655078530311584
    2. '<|end|>' → logprob: -1.4155077934265137
    3. '                   ' → logprob: -2.1655077934265137
    4. '           ' → logprob: -2.4155077934265137
    5. '       ' → logprob: -4.540507793426514
    6. '   ' → logprob: -5.040507793426514
    7. '	' → logprob: -5.790507793426514
    8. '		' → logprob: -6.165507793426514
    9. '                               ' → logprob: -6.290507793426514
    10. ' ' → logprob: -6.540507793426514

Token 979: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3540652096271515
    2. '               ' → logprob: -1.354065179824829
    3. '           ' → logprob: -3.354065179824829
    4. '       ' → logprob: -7.104065418243408
    5. '                       ' → logprob: -7.104065418243408
    6. '	           ' → logprob: -7.104065418243408
    7. '   ' → logprob: -7.729065418243408
    8. '<|end|>' → logprob: -8.22906494140625
    9. '				' → logprob: -8.47906494140625
    10. '		' → logprob: -8.60406494140625

Token 980: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.10021745413541794
    2. ' break' → logprob: -2.350217342376709
    3. '                   ' → logprob: -11.850217819213867
    4. '                       ' → logprob: -12.850217819213867
    5. '               ' → logprob: -14.975217819213867
    6. '                           ' → logprob: -15.475217819213867
    7. '	break' → logprob: -15.475217819213867
    8. '           ' → logprob: -16.600217819213867
    9. '                               ' → logprob: -16.850217819213867
    10. '   ' → logprob: -16.850217819213867

Token 981: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 982: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 983: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 984: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07890267670154572
    2. ' f' → logprob: -2.5789027214050293
    3. 'not' → logprob: -11.703902244567871
    4. ' not' → logprob: -13.078902244567871
    5. ' ' → logprob: -14.078902244567871
    6. '   ' → logprob: -14.953902244567871
    7. '0' → logprob: -15.203902244567871
    8. '  ' → logprob: -15.578902244567871
    9. '	f' → logprob: -15.703902244567871
    10. '    ' → logprob: -16.016403198242188

Token 985: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029547621961683035
    2. '<|end|>' → logprob: -6.877954959869385
    3. ':
' → logprob: -7.252954959869385
    4. '           ' → logprob: -8.127954483032227
    5. '=' → logprob: -8.127954483032227
    6. '   ' → logprob: -9.127954483032227
    7. '):' → logprob: -9.252954483032227
    8. '<|end|>' → logprob: -9.752954483032227
    9. '       ' → logprob: -9.877954483032227
    10. '               ' → logprob: -10.127954483032227

Token 986: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4649275243282318
    2. ' break' → logprob: -1.4649275541305542
    3. '               ' → logprob: -2.0899274349212646
    4. 'break' → logprob: -4.339927673339844
    5. '       ' → logprob: -6.714927673339844
    6. '	       ' → logprob: -6.839927673339844
    7. '                   ' → logprob: -8.214927673339844
    8. '   ' → logprob: -8.214927673339844
    9. '		' → logprob: -8.214927673339844
    10. '```' → logprob: -9.089927673339844

Token 987: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001222508290084079
    2. '   ' → logprob: -9.5001220703125
    3. '<|end|>' → logprob: -10.7501220703125
    4. 'return' → logprob: -11.2501220703125
    5. ' return' → logprob: -12.2501220703125
    6. '           ' → logprob: -12.6251220703125
    7. '	' → logprob: -13.5001220703125
    8. ',' → logprob: -14.6251220703125
    9. '        
' → logprob: -14.7501220703125
    10. '	return' → logprob: -14.7501220703125

Token 988: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011450991732999682
    2. '   ' → logprob: -7.001144886016846
    3. '<|end|>' → logprob: -8.751145362854004
    4. ' return' → logprob: -10.626145362854004
    5. '           ' → logprob: -10.876145362854004
    6. '	' → logprob: -11.876145362854004
    7. 'return' → logprob: -12.376145362854004
    8. '
' → logprob: -12.751145362854004
    9. '        
' → logprob: -12.751145362854004
    10. '	return' → logprob: -12.876145362854004

Token 989: ' tot' (ID: 2417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01854296587407589
    2. '<|end|>' → logprob: -4.518542766571045
    3. '   ' → logprob: -5.018542766571045
    4. '	' → logprob: -8.518543243408203
    5. ')' → logprob: -8.893543243408203
    6. '           ' → logprob: -9.393543243408203
    7. '<|end|>' → logprob: -9.643543243408203
    8. 'return' → logprob: -9.643543243408203
    9. '	return' → logprob: -9.893543243408203
    10. '
' → logprob: -10.018543243408203

Token 990: ' +=' (ID: 2757)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 991: ' abs' (ID: 8443)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.31996268033981323
    2. 'abs' → logprob: -1.819962739944458
    3. 'max' → logprob: -3.444962739944458
    4. 'base' → logprob: -3.569962739944458
    5. ' cur' → logprob: -4.194962501525879
    6. '(cur' → logprob: -4.569962501525879
    7. ' abs' → logprob: -4.944962501525879
    8. 'N' → logprob: -5.694962501525879
    9. '1' → logprob: -5.944962501525879
    10. '0' → logprob: -5.944962501525879

Token 992: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.007937824353575706
    2. '(t' → logprob: -5.507937908172607
    3. '(S' → logprob: -5.757937908172607
    4. '(ls' → logprob: -8.13293743133545
    5. '(base' → logprob: -9.50793743133545
    6. '(l' → logprob: -9.50793743133545
    7. '(' → logprob: -9.88293743133545
    8. 'cur' → logprob: -10.00793743133545
    9. '(r' → logprob: -10.50793743133545
    10. '(N' → logprob: -10.63293743133545

Token 993: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.047956254333257675
    2. ' -' → logprob: -3.4229562282562256
    3. '-' → logprob: -4.297956466674805
    4. ')
' → logprob: -7.922956466674805
    5. ' )' → logprob: -9.422956466674805
    6. '-cur' → logprob: -9.922956466674805
    7. '-)' → logprob: -10.422956466674805
    8. '-c' → logprob: -11.297956466674805
    9. '-r' → logprob: -11.422956466674805
    10. '))' → logprob: -11.422956466674805

Token 994: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6417038440704346
    2. '<|end|>' → logprob: -1.0167038440704346
    3. '   ' → logprob: -3.3917038440704346
    4. ')' → logprob: -3.6417038440704346
    5. '+' → logprob: -3.6417038440704346
    6. '<|end|>' → logprob: -5.1417036056518555
    7. ' +' → logprob: -5.6417036056518555
    8. ':' → logprob: -6.3917036056518555
    9. '[' → logprob: -6.3917036056518555
    10. '```' → logprob: -6.6417036056518555

Token 995: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32758140563964844
    2. '<|end|>' → logprob: -1.5775814056396484
    3. '   ' → logprob: -3.4525814056396484
    4. 'return' (adapté à ' return') → logprob: -3.8275814056396484
    5. '	return' → logprob: -5.327581405639648
    6. ')' → logprob: -5.327581405639648
    7. ' return' → logprob: -5.452581405639648
    8. '	' → logprob: -6.452581405639648
    9. '<|end|>' → logprob: -7.327581405639648
    10. ':return' → logprob: -7.952581405639648

Token 996: ' tot' (ID: 2417)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.10021152347326279
    2. ' tot' → logprob: -2.3502116203308105
    3. 'total' → logprob: -12.350211143493652
    4. 't' → logprob: -14.975211143493652
    5. ' total' → logprob: -16.10021209716797
    6. '   ' → logprob: -17.47521209716797
    7. 'tod' → logprob: -17.47521209716797
    8. '	t' → logprob: -17.97521209716797
    9. '_tot' → logprob: -18.47521209716797
    10. 'to' → logprob: -18.47521209716797

Token 997: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44799649715423584
    2. '
' → logprob: -1.6979964971542358
    3. 'def' → logprob: -2.4479966163635254
    4. '    
' → logprob: -3.5729966163635254
    5. '<|end|>' → logprob: -3.9479966163635254
    6. 'if' → logprob: -4.572996616363525
    7. '```' → logprob: -4.822996616363525
    8. ')' → logprob: -4.822996616363525
    9. ',' → logprob: -6.072996616363525
    10. ':' → logprob: -6.322996616363525

Token 998: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19975227117538452
    2. 'print' → logprob: -2.8247523307800293
    3. 'def' → logprob: -3.0747523307800293
    4. 'main' → logprob: -3.9497523307800293
    5. ')' → logprob: -4.074752330780029
    6. 'if' → logprob: -4.199752330780029
    7. '    
' → logprob: -5.074752330780029
    8. '<|end|>' → logprob: -5.824752330780029
    9. 'return' → logprob: -5.949752330780029
    10. '#' → logprob: -6.449752330780029

Token 999: ' tot' (ID: 2417)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6657114028930664
    2. 'print' → logprob: -1.7907114028930664
    3. 'res' → logprob: -2.0407114028930664
    4. 'result' → logprob: -2.2907114028930664
    5. 'ans' → logprob: -3.5407114028930664
    6. 'r' → logprob: -4.040711402893066
    7. 'if' → logprob: -4.665711402893066
    8. 'answer' → logprob: -4.915711402893066
    9. 'rs' → logprob: -5.290711402893066
    10. '
' → logprob: -5.290711402893066

Token 1000: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8945119380950928
    2. '=' → logprob: -1.3945119380950928
    3. ' +=' → logprob: -1.8945119380950928
    4. ',' → logprob: -2.8945119380950928
    5. ')' → logprob: -3.6445119380950928
    6. '<|end|>' → logprob: -3.6445119380950928
    7. '(' → logprob: -3.7695119380950928
    8. '+' → logprob: -4.269512176513672
    9. '   ' → logprob: -4.269512176513672
    10. '<|end|>' → logprob: -4.769512176513672

Token 1001: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2826012074947357
    2. ' =' → logprob: -1.407601237297058
    3. ',' → logprob: -7.032601356506348
    4. '1' → logprob: -7.657601356506348
    5. '_' → logprob: -10.282601356506348
    6. ')' → logprob: -10.907601356506348
    7. '+=' → logprob: -11.657601356506348
    8. ' +=' → logprob: -12.032601356506348
    9. '   ' → logprob: -12.157601356506348
    10. '_=' → logprob: -12.282601356506348

Token 1002: ' complex' (ID: 8012)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.0004306692280806601
    2. ' complex' → logprob: -7.750430583953857
    3. '   ' → logprob: -19.125431060791016
    4. 'com' → logprob: -20.750431060791016
    5. ' complexe' → logprob: -20.875431060791016
    6. '_complex' → logprob: -21.000431060791016
    7. '0' → logprob: -21.250431060791016
    8. 'total' → logprob: -21.500431060791016
    9. ' komplex' → logprob: -21.750431060791016
    10. 'Complex' → logprob: -22.125431060791016

Token 1003: '_game' (ID: 41386)
  Prédit: '_game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_game' → logprob: -0.00010282796574756503
    2. '_' → logprob: -9.875102996826172
    3. '_games' → logprob: -11.000102996826172
    4. '(' → logprob: -11.125102996826172
    5. 'game' → logprob: -12.500102996826172
    6. '```' → logprob: -13.000102996826172
    7. '(_' → logprob: -13.250102996826172
    8. '<Game' → logprob: -13.375102996826172
    9. '('_' → logprob: -13.375102996826172
    10. '_Game' → logprob: -13.500102996826172

Token 1004: '(d' (ID: 2572)
  Prédit: '(ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ls' → logprob: -3.607391408877447e-05
    2. '(' → logprob: -10.500036239624023
    3. 'ls' → logprob: -12.750036239624023
    4. '(l' → logprob: -13.125036239624023
    5. '(lst' → logprob: -13.875036239624023
    6. '(rs' → logprob: -14.125036239624023
    7. '(
' → logprob: -14.250036239624023
    8. '((' → logprob: -15.750036239624023
    9. '(lp' → logprob: -16.125036239624023
    10. ' (' → logprob: -16.375036239624023

Token 1005: 'cp' (ID: 10450)
  Prédit: 'cp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cp' → logprob: -0.0013921386562287807
    2. 'l' → logprob: -7.251392364501953
    3. 'ls' → logprob: -8.126392364501953
    4. 'sc' → logprob: -8.501392364501953
    5. 'c' → logprob: -9.126392364501953
    6. 'scp' → logprob: -10.126392364501953
    7. 'e' → logprob: -11.251392364501953
    8. 's' → logprob: -12.251392364501953
    9. 'd' → logprob: -12.251392364501953
    10. '(cp' → logprob: -12.501392364501953

Token 1006: '(l' (ID: 4179)
  Prédit: '(ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ls' → logprob: -0.020552517846226692
    2. 'ls' → logprob: -3.895552635192871
    3. ' ls' → logprob: -12.520552635192871
    4. '_ls' → logprob: -13.395552635192871
    5. '(lst' → logprob: -13.770552635192871
    6. '(l' → logprob: -13.895552635192871
    7. ')' → logprob: -14.020552635192871
    8. '(rs' → logprob: -14.645552635192871
    9. '```' → logprob: -14.770552635192871
    10. '(' → logprob: -15.020552635192871

Token 1007: 'sc' (ID: 2786)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007658808026462793
    2. 'sc' → logprob: -4.882658958435059
    3. 'c' → logprob: -10.132658958435059
    4. ')' → logprob: -12.632658958435059
    5. 'ls' → logprob: -12.882658958435059
    6. 'scp' → logprob: -13.757658958435059
    7. 'с' → logprob: -13.882658958435059
    8. 'd' → logprob: -14.257658958435059
    9. 'cs' → logprob: -14.632658958435059
    10. ',' → logprob: -14.757658958435059

Token 1008: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00021307668066583574
    2. ',' → logprob: -8.875212669372559
    3. ')' → logprob: -10.500212669372559
    4. ',),' → logprob: -11.375212669372559
    5. '()),' → logprob: -11.625212669372559
    6. ' ),' → logprob: -12.500212669372559
    7. '),(' → logprob: -12.500212669372559
    8. '),
' → logprob: -12.625212669372559
    9. ')),' → logprob: -13.000212669372559
    10. 's' → logprob: -13.375212669372559

Token 1009: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.2200749754119897e-06
    2. ' d' → logprob: -13.125001907348633
    3. 'dcc' → logprob: -16.375001907348633
    4. ' ' → logprob: -17.375001907348633
    5. 'cp' → logprob: -17.625001907348633
    6. 'dc' → logprob: -17.750001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '  ' → logprob: -17.875001907348633
    9. 'complex' → logprob: -19.000001907348633
    10. 'dp' → logprob: -19.250001907348633

Token 1010: 'cp' (ID: 10450)
  Prédit: 'cp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cp' → logprob: -0.002617393620312214
    2. 'c' → logprob: -6.252617359161377
    3. 'd' → logprob: -7.502617359161377
    4. 'scp' → logprob: -9.627617835998535
    5. 'cpy' → logprob: -10.252617835998535
    6. 'eep' → logprob: -11.377617835998535
    7. '(d' → logprob: -11.877617835998535
    8. 'p' → logprob: -12.002617835998535
    9. '(cp' → logprob: -12.127617835998535
    10. 'cpf' → logprob: -13.127617835998535

Token 1011: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.252015084028244
    2. 'r' → logprob: -1.5020151138305664
    3. ' r' → logprob: -9.877015113830566
    4. '[r' → logprob: -10.752015113830566
    5. '(rs' → logprob: -12.252015113830566
    6. '(rc' → logprob: -12.877015113830566
    7. '	r' → logprob: -13.377015113830566
    8. '(' → logprob: -13.877015113830566
    9. '(l' → logprob: -14.002015113830566
    10. 'rs' → logprob: -15.002015113830566

Token 1012: 'sc' (ID: 2786)
  Prédit: 'sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.0018735475605353713
    2. 'r' → logprob: -6.62687349319458
    3. 'c' → logprob: -7.87687349319458
    4. 's' → logprob: -9.251873970031738
    5. 'scp' → logprob: -10.751873970031738
    6. 'psc' → logprob: -10.751873970031738
    7. 'ssc' → logprob: -11.626873970031738
    8. 'scss' → logprob: -11.751873970031738
    9. '(sc' → logprob: -12.376873970031738
    10. 'esc' → logprob: -13.626873970031738

Token 1013: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008716331794857979
    2. ')
' → logprob: -4.758716106414795
    3. ')
' → logprob: -9.883716583251953
    4. '())' → logprob: -10.258716583251953
    5. ')

' → logprob: -12.133716583251953
    6. '())
' → logprob: -13.008716583251953
    7. '))' → logprob: -13.133716583251953
    8. '   ' → logprob: -13.258716583251953
    9. ' )' → logprob: -13.258716583251953
    10. '()' → logprob: -14.633716583251953

Token 1014: '   ' (ID: 271)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.47798314690589905
    2. '   ' → logprob: -0.9779831171035767
    3. '
' → logprob: -6.727982997894287
    4. 'print' → logprob: -6.852982997894287
    5. '```' → logprob: -7.227982997894287
    6. 'total' → logprob: -7.602982997894287
    7. '    
' → logprob: -8.852983474731445
    8. 'ls' → logprob: -9.352983474731445
    9. ' tot' → logprob: -10.477983474731445
    10. 'def' → logprob: -10.602983474731445

Token 1015: ' def' (ID: 1056)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.0025810126680880785
    2. 'print' → logprob: -6.6275811195373535
    3. '   ' → logprob: -6.7525811195373535
    4. 'total' → logprob: -10.002580642700195
    5. 'def' (adapté à ' def') → logprob: -11.127580642700195
    6. 'ls' → logprob: -11.752580642700195
    7. 'if' → logprob: -12.002580642700195
    8. 'rs' → logprob: -12.627580642700195
    9. ' tot' → logprob: -13.252580642700195
    10. '```' → logprob: -13.627580642700195

Token 1016: ' complex' (ID: 8012)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.029081102460622787
    2. ' complex' → logprob: -4.029080867767334
    3. 'main' → logprob: -4.654080867767334
    4. ' main' → logprob: -7.904080867767334
    5. 'reverse' → logprob: -8.654081344604492
    6. 'solve' → logprob: -8.779081344604492
    7. 'def' → logprob: -9.154081344604492
    8. 'calc' → logprob: -9.779081344604492
    9. '_complex' → logprob: -9.904081344604492
    10. 'simple' → logprob: -10.404081344604492

Token 1017: '_game' (ID: 41386)
  Prédit: '_game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_game' → logprob: -4.0126840758603066e-05
    2. 'def' → logprob: -10.625040054321289
    3. 'game' → logprob: -11.875040054321289
    4. '_complex' → logprob: -12.500040054321289
    5. 'Game' → logprob: -13.625040054321289
    6. '_Game' → logprob: -14.125040054321289
    7. '<Game' → logprob: -14.875040054321289
    8. '```' → logprob: -15.000040054321289
    9. 'complex' → logprob: -15.125040054321289
    10. '   ' → logprob: -15.500040054321289

Token 1018: '_reverse' (ID: 112788)
  Prédit: '(ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ls' → logprob: -0.0008920480031520128
    2. '2' → logprob: -7.750892162322998
    3. '(' → logprob: -9.25089168548584
    4. '(d' → logprob: -9.37589168548584
    5. '(l' → logprob: -9.87589168548584
    6. '(lst' → logprob: -10.00089168548584
    7. '1' → logprob: -10.50089168548584
    8. '(rs' → logprob: -10.75089168548584
    9. 'd' → logprob: -11.25089168548584
    10. '(s' → logprob: -11.62589168548584

Token 1019: '(ls' (ID: 128476)
  Prédit: '(ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ls' → logprob: -3.452426608419046e-05
    2. '(rs' → logprob: -10.62503433227539
    3. '(' → logprob: -12.12503433227539
    4. '(
' → logprob: -13.62503433227539
    5. '(lst' → logprob: -13.87503433227539
    6. '(l' → logprob: -14.50003433227539
    7. '(s' → logprob: -15.62503433227539
    8. '(def' → logprob: -15.62503433227539
    9. '```' → logprob: -15.75003433227539
    10. 'ls' → logprob: -15.87503433227539

Token 1020: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003490514063742012
    2. ',d' → logprob: -8.125349044799805
    3. '):
' → logprob: -11.000349044799805
    4. '(d' → logprob: -11.750349044799805
    5. ',
' → logprob: -11.750349044799805
    6. '):' → logprob: -12.375349044799805
    7. '   ' → logprob: -12.750349044799805
    8. ' ,' → logprob: -13.125349044799805
    9. ',l' → logprob: -13.500349044799805
    10. '_reverse' → logprob: -13.500349044799805

Token 1021: ' rs' (ID: 15181)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -0.25577253103256226
    2. 'r' → logprob: -2.130772590637207
    3. 'd' → logprob: -2.255772590637207
    4. ' rs' → logprob: -6.630772590637207
    5. ' d' → logprob: -7.630772590637207
    6. 'rc' → logprob: -9.005772590637207
    7. 'def' → logprob: -9.130772590637207
    8. ' r' → logprob: -9.630772590637207
    9. 'dq' → logprob: -11.255772590637207
    10. '   ' → logprob: -12.255772590637207

Token 1022: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.27822187542915344
    2. '):
' → logprob: -1.528221845626831
    3. ')' → logprob: -4.15322208404541
    4. '(ls' → logprob: -5.15322208404541
    5. '   ' → logprob: -6.77822208404541
    6. ',' → logprob: -6.77822208404541
    7. '):

' → logprob: -7.40322208404541
    8. ':' → logprob: -8.02822208404541
    9. ')(' → logprob: -8.15322208404541
    10. '<|end|>' → logprob: -8.65322208404541

Token 1023: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013210702687501907
    2. '   ' → logprob: -4.763210773468018
    3. 'def' → logprob: -5.638210773468018
    4. 'd' → logprob: -6.888210773468018
    5. '           ' → logprob: -12.88821029663086
    6. '     ' → logprob: -13.76321029663086
    7. '      ' → logprob: -14.38821029663086
    8. '    ' → logprob: -14.63821029663086
    9. ' def' → logprob: -14.88821029663086
    10. '        ' → logprob: -15.01321029663086

Token 1024: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.3267538249492645
    2. '       ' → logprob: -1.451753854751587
    3. 'def' → logprob: -3.951753854751587
    4. '   ' → logprob: -3.951753854751587
    5. ' d' → logprob: -5.326753616333008
    6. 'tot' → logprob: -7.451753616333008
    7. '	d' → logprob: -8.076753616333008
    8. 'f' → logprob: -8.826753616333008
    9. '    ' → logprob: -9.576753616333008
    10. '        ' → logprob: -10.201753616333008

Token 1025: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.003186267102137208
    2. 'def' → logprob: -6.128186225891113
    3. 'ef' → logprob: -7.003186225891113
    4. 'et' → logprob: -10.128186225891113
    5. '   ' → logprob: -10.878186225891113
    6. '=set' → logprob: -11.253186225891113
    7. ' =' → logprob: -12.628186225891113
    8. 'f' → logprob: -12.628186225891113
    9. '=' → logprob: -12.878186225891113
    10. '_set' → logprob: -13.503186225891113

Token 1026: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1732524335384369
    2. '=' → logprob: -2.0482523441314697
    3. ' =' → logprob: -3.5482523441314697
    4. '   ' → logprob: -6.923252582550049
    5. '       ' → logprob: -9.17325210571289
    6. '<|end|>' → logprob: -9.79825210571289
    7. '()' → logprob: -10.29825210571289
    8. ' ,' → logprob: -10.79825210571289
    9. '=[]' → logprob: -10.79825210571289
    10. '    ' → logprob: -11.42325210571289

Token 1027: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.009758567437529564
    2. ' cur' → logprob: -4.634758472442627
    3. 'c' → logprob: -14.134758949279785
    4. '	cur' → logprob: -14.759758949279785
    5. ' ' → logprob: -14.884758949279785
    6. '0' → logprob: -15.134758949279785
    7. '   ' → logprob: -15.259758949279785
    8. '-cur' → logprob: -15.759758949279785
    9. '[cur' → logprob: -17.00975799560547
    10. '...' → logprob: -17.00975799560547

Token 1028: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2682681977748871
    2. '=' → logprob: -1.5182682275772095
    3. ' =' → logprob: -4.14326810836792
    4. '<|end|>' → logprob: -8.768268585205078
    5. ' ,' → logprob: -9.268268585205078
    6. ')' → logprob: -11.018268585205078
    7. '(),' → logprob: -11.018268585205078
    8. '   ' → logprob: -11.518268585205078
    9. '=[],' → logprob: -11.768268585205078
    10. '       ' → logprob: -12.018268585205078

Token 1029: ' tot' (ID: 2417)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05583219975233078
    2. 'tot' → logprob: -3.0558321475982666
    3. ' ' → logprob: -5.305832386016846
    4. ' tot' → logprob: -6.180832386016846
    5. '1' → logprob: -9.930831909179688
    6. 'cur' → logprob: -10.180831909179688
    7. 'max' → logprob: -10.930831909179688
    8. '-' → logprob: -11.055831909179688
    9. '   ' → logprob: -11.305831909179688
    10. 'total' → logprob: -11.430831909179688

Token 1030: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07142859697341919
    2. ',' → logprob: -2.6964285373687744
    3. ' =' → logprob: -6.5714287757873535
    4. '(),' → logprob: -9.696428298950195
    5. '=set' → logprob: -11.071428298950195
    6. ' ,' → logprob: -11.821428298950195
    7. ',set' → logprob: -12.571428298950195
    8. '()' → logprob: -14.196428298950195
    9. '=[],' → logprob: -14.446428298950195
    10. '(' → logprob: -14.696428298950195

Token 1031: ' f' (ID: 285)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021947838366031647
    2. 'f' → logprob: -3.8969478607177734
    3. ' ' → logprob: -7.146947860717773
    4. '=' → logprob: -8.021947860717773
    5. '1' → logprob: -9.146947860717773
    6. ' =' → logprob: -9.771947860717773
    7. 'cur' → logprob: -9.896947860717773
    8. ' f' → logprob: -10.396947860717773
    9. '   ' → logprob: -10.771947860717773
    10. '       ' → logprob: -10.896947860717773

Token 1032: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.043176401406526566
    2. ' =' → logprob: -3.1681764125823975
    3. ',' → logprob: -9.043176651000977
    4. '   ' → logprob: -10.418176651000977
    5. '       ' → logprob: -10.668176651000977
    6. '	' → logprob: -12.918176651000977
    7. '    ' → logprob: -13.543176651000977
    8. '        ' → logprob: -14.043176651000977
    9. '  ' → logprob: -15.418176651000977
    10. ' ' → logprob: -15.543176651000977

Token 1033: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.004631265066564083
    2. ' set' → logprob: -5.379631042480469
    3. '0' → logprob: -11.879631042480469
    4. '(set' → logprob: -13.504631042480469
    5. '1' → logprob: -14.129631042480469
    6. '{' → logprob: -14.879631042480469
    7. '=set' → logprob: -14.879631042480469
    8. '	set' → logprob: -15.129631042480469
    9. '   ' → logprob: -15.254631042480469
    10. ' ' → logprob: -15.629631042480469

Token 1034: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.0054343887604773045
    2. '()' → logprob: -5.255434513092041
    3. '(),
' → logprob: -9.380434036254883
    4. '=' → logprob: -9.505434036254883
    5. ',' → logprob: -10.630434036254883
    6. '(),"' → logprob: -12.380434036254883
    7. '(),'' → logprob: -12.630434036254883
    8. '(' → logprob: -13.005434036254883
    9. ' (),' → logprob: -13.380434036254883
    10. '(),

' → logprob: -13.630434036254883

Token 1035: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0224520992487669
    2. '1' → logprob: -4.272451877593994
    3. 'cur' → logprob: -5.772451877593994
    4. ' ' → logprob: -6.022451877593994
    5. '-' → logprob: -6.147451877593994
    6. 'abs' → logprob: -8.522452354431152
    7. 'N' → logprob: -10.272452354431152
    8. ' -' → logprob: -10.272452354431152
    9. 'len' → logprob: -10.522452354431152
    10. 'd' → logprob: -10.522452354431152

Token 1036: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04005202278494835
    2. '1' → logprob: -3.4150519371032715
    3. '-' → logprob: -5.7900519371032715
    4. 'cur' → logprob: -6.9150519371032715
    5. 'float' → logprob: -7.2900519371032715
    6. 'abs' → logprob: -7.4150519371032715
    7. 'len' → logprob: -8.04005241394043
    8. 'N' → logprob: -8.66505241394043
    9. '10' → logprob: -9.04005241394043
    10. 'sys' → logprob: -9.29005241394043

Token 1037: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24934710562229156
    2. '=' → logprob: -1.6243470907211304
    3. '<|end|>' → logprob: -4.74934720993042
    4. ' =' → logprob: -4.87434720993042
    5. '   ' → logprob: -6.12434720993042
    6. ' ,' → logprob: -6.24934720993042
    7. '(),' → logprob: -6.99934720993042
    8. '0' → logprob: -7.12434720993042
    9. '       ' → logprob: -7.37434720993042
    10. '(' → logprob: -8.374346733093262

Token 1038: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013464801304508
    2. ' ' → logprob: -9.250134468078613
    3. '1' → logprob: -10.250134468078613
    4. 'tot' → logprob: -13.125134468078613
    5. 'abs' → logprob: -15.250134468078613
    6. '-' → logprob: -15.250134468078613
    7. '2' → logprob: -15.750134468078613
    8. '   ' → logprob: -16.62513542175293
    9. '<|end|>' → logprob: -16.62513542175293
    10. '100' → logprob: -17.00013542175293

Token 1039: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00180953333619982
    2. '1' → logprob: -6.376809597015381
    3. '-' → logprob: -9.501809120178223
    4. 'abs' → logprob: -11.251809120178223
    5. 'N' → logprob: -12.001809120178223
    6. '10' → logprob: -12.626809120178223
    7. '100' → logprob: -13.001809120178223
    8. 'tot' → logprob: -13.501809120178223
    9. 'max' → logprob: -13.751809120178223
    10. 'len' → logprob: -13.751809120178223

Token 1040: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010684755630791187
    2. '=' → logprob: -4.635684967041016
    3. ' =' → logprob: -7.135684967041016
    4. '0' → logprob: -10.135684967041016
    5. '   ' → logprob: -10.260684967041016
    6. ' ,' → logprob: -10.510684967041016
    7. '<|end|>' → logprob: -11.510684967041016
    8. '       ' → logprob: -11.885684967041016
    9. ',
' → logprob: -12.135684967041016
    10. ' ' → logprob: -12.885684967041016

Token 1041: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014173506759107113
    2. '1' → logprob: -4.26417350769043
    3. '-' → logprob: -12.13917350769043
    4. ' ' → logprob: -12.76417350769043
    5. 'def' → logprob: -15.07667350769043
    6. 'f' → logprob: -16.01417350769043
    7. '```' → logprob: -16.20167350769043
    8. '2' → logprob: -16.20167350769043
    9. '   ' → logprob: -16.51417350769043
    10. '
' → logprob: -16.82667350769043

Token 1042: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002835780382156372
    2. '1' → logprob: -5.877835750579834
    3. '-' → logprob: -10.502836227416992
    4. ' ' → logprob: -13.127836227416992
    5. 'def' → logprob: -14.940336227416992
    6. '   ' → logprob: -15.377836227416992
    7. '
' → logprob: -15.877836227416992
    8. '2' → logprob: -16.315336227416992
    9. '3' → logprob: -17.065336227416992
    10. '```' → logprob: -17.252836227416992

Token 1043: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2587668299674988
    2. '<|end|>' → logprob: -1.7587668895721436
    3. '       ' → logprob: -3.0087668895721436
    4. '   ' → logprob: -5.3837666511535645
    5. '<|end|>' → logprob: -7.1337666511535645
    6. '
' → logprob: -8.383767127990723
    7. '    
' → logprob: -8.758767127990723
    8. '        
' → logprob: -9.008767127990723
    9. '```' → logprob: -9.883767127990723
    10. '\n' → logprob: -10.008767127990723

Token 1044: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015070072375237942
    2. '<|end|>' → logprob: -4.390069961547852
    3. '	' → logprob: -6.640069961547852
    4. '   ' → logprob: -7.640069961547852
    5. '<|end|>' → logprob: -8.765069961547852
    6. '\t' → logprob: -8.890069961547852
    7. '[' → logprob: -9.515069961547852
    8. '        ' → logprob: -9.640069961547852
    9. '	       ' → logprob: -10.015069961547852
    10. '	   ' → logprob: -10.015069961547852

Token 1045: ' ls' (ID: 41498)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07426178455352783
    2. '   ' → logprob: -2.8242616653442383
    3. 'ls' (adapté à ' ls') → logprob: -4.449261665344238
    4. '```' → logprob: -7.824261665344238
    5. '#' → logprob: -9.949261665344238
    6. ' ls' → logprob: -10.199261665344238
    7. '``' → logprob: -11.699261665344238
    8. '           ' → logprob: -12.199261665344238
    9. 'while' → logprob: -12.324261665344238
    10. '_ls' → logprob: -12.574261665344238

Token 1046: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.006545081734657288
    2. ',' → logprob: -5.881545066833496
    3. ' =' → logprob: -6.256545066833496
    4. '   ' → logprob: -7.131545066833496
    5. '=' → logprob: -7.756545066833496
    6. '_iterator' → logprob: -8.006545066833496
    7. '_iters' → logprob: -10.006545066833496
    8. '_' → logprob: -10.506545066833496
    9. 'def' → logprob: -10.506545066833496
    10. '_,' → logprob: -10.631545066833496

Token 1047: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5235507488250732
    2. '=' → logprob: -0.8985507488250732
    3. '=lambda' → logprob: -7.773550987243652
    4. '   ' → logprob: -12.523550987243652
    5. 'lambda' → logprob: -14.773550987243652
    6. '    ' → logprob: -14.898550987243652
    7. ' ' → logprob: -14.898550987243652
    8. ':' → logprob: -15.773550987243652
    9. '=[]' → logprob: -15.898550987243652
    10. 'def' → logprob: -15.898550987243652

Token 1048: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.024719050154089928
    2. ' lambda' → logprob: -3.774718999862671
    3. '(lambda' → logprob: -6.52471923828125
    4. '   ' → logprob: -12.89971923828125
    5. '=lambda' → logprob: -13.77471923828125
    6. 'lam' → logprob: -14.27471923828125
    7. ' (' → logprob: -14.77471923828125
    8. ' ' → logprob: -15.77471923828125
    9. 'l' → logprob: -15.89971923828125
    10. '(' → logprob: -16.39971923828125

Token 1049: ':' (ID: 25)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.47984522581100464
    2. 'lambda' → logprob: -0.9798452258110046
    3. '(h' → logprob: -5.72984504699707
    4. 'hp' → logprob: -6.97984504699707
    5. ' lambda' → logprob: -7.60484504699707
    6. 'ls' → logprob: -7.97984504699707
    7. '(ls' → logprob: -8.22984504699707
    8. ':' → logprob: -8.72984504699707
    9. '=lambda' → logprob: -9.72984504699707
    10. '()' → logprob: -9.85484504699707

Token 1050: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0002558561391197145
    2. ' (' → logprob: -8.500255584716797
    3. '(lambda' → logprob: -10.500255584716797
    4. '((' → logprob: -12.125255584716797
    5. '(lp' → logprob: -12.250255584716797
    6. '(' → logprob: -13.125255584716797
    7. '   ' → logprob: -13.125255584716797
    8. '(l' → logprob: -13.250255584716797
    9. '(ls' → logprob: -13.875255584716797
    10. 'hp' → logprob: -14.250255584716797

Token 1051: 'hp' (ID: 45478)
  Prédit: 'hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' → logprob: -0.48239418864250183
    2. '(h' → logprob: -0.9823942184448242
    3. '-h' → logprob: -5.357394218444824
    4. '-' → logprob: -6.357394218444824
    5. ' hp' → logprob: -6.857394218444824
    6. '-(' → logprob: -8.357394218444824
    7. '(-' → logprob: -8.607394218444824
    8. 'h' → logprob: -8.982394218444824
    9. ' -' → logprob: -9.982394218444824
    10. ' (' → logprob: -10.732394218444824

Token 1052: '(ls' (ID: 128476)
  Prédit: '(ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ls' → logprob: -0.0006744279526174068
    2. '(rs' → logprob: -7.375674247741699
    3. 'ls' → logprob: -10.2506742477417
    4. '(-' → logprob: -12.3756742477417
    5. '(l' → logprob: -13.1256742477417
    6. '(lst' → logprob: -13.2506742477417
    7. '(' → logprob: -13.5006742477417
    8. '(lp' → logprob: -14.7506742477417
    9. '(lhs' → logprob: -14.8756742477417
    10. '(ld' → logprob: -15.0006742477417

Token 1053: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25712287425994873
    2. ')' → logprob: -1.5071228742599487
    3. 'for' → logprob: -5.632122993469238
    4. '())' → logprob: -6.757122993469238
    5. ' for' → logprob: -8.132122993469238
    6. '(ls' → logprob: -9.132122993469238
    7. ' ()' → logprob: -11.882122993469238
    8. '(' → logprob: -12.757122993469238
    9. ' ' → logprob: -12.882122993469238
    10. 'ls' → logprob: -13.132122993469238

Token 1054: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.127557173371315
    2. ' for' → logprob: -2.1275572776794434
    3. ')' → logprob: -7.877557277679443
    4. '(ls' → logprob: -8.627556800842285
    5. '()' → logprob: -10.002556800842285
    6. '(for' → logprob: -10.877556800842285
    7. ' ' → logprob: -12.752556800842285
    8. '	for' → logprob: -13.502556800842285
    9. '(' → logprob: -14.252556800842285
    10. '   ' → logprob: -15.002556800842285

Token 1055: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0011708177626132965
    2. ' _' → logprob: -6.751170635223389
    3. '_ls' → logprob: -14.626171112060547
    4. '_l' → logprob: -16.251171112060547
    5. '_in' → logprob: -16.751171112060547
    6. '_for' → logprob: -18.376171112060547
    7. '_
' → logprob: -18.751171112060547
    8. ' ' → logprob: -18.751171112060547
    9. ' ' → logprob: -19.001171112060547
    10. '_iter' → logprob: -19.376171112060547

Token 1056: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5931456089019775
    2. 'in' → logprob: -0.9681456089019775
    3. '_' → logprob: -2.7181456089019775
    4. ' _' → logprob: -6.468145370483398
    5. '_in' → logprob: -10.093145370483398
    6. 'for' → logprob: -11.468145370483398
    7. ' ' → logprob: -11.468145370483398
    8. ' i' → logprob: -12.843145370483398
    9. '...' → logprob: -12.968145370483398
    10. 'i' → logprob: -13.343145370483398

Token 1057: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.038970042020082474
    2. ' iter' → logprob: -3.7889699935913086
    3. 'int' → logprob: -4.663969993591309
    4. '_' → logprob: -5.413969993591309
    5. '_iter' → logprob: -6.663969993591309
    6. '(iter' → logprob: -7.913969993591309
    7. ' _' → logprob: -11.038969993591309
    8. '	iter' → logprob: -11.413969993591309
    9. 'ints' → logprob: -11.788969993591309
    10. ' int' → logprob: -12.163969993591309

Token 1058: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20165666937828064
    2. 'int' → logprob: -1.701656699180603
    3. '[int' → logprob: -9.451656341552734
    4. 'ls' → logprob: -9.826656341552734
    5. '=int' → logprob: -10.076656341552734
    6. ',int' → logprob: -10.701656341552734
    7. '<int' → logprob: -10.951656341552734
    8. '```' → logprob: -11.576656341552734
    9. ':int' → logprob: -11.701656341552734
    10. '(ls' → logprob: -12.201656341552734

Token 1059: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6240566083070007e-06
    2. ' ,' → logprob: -13.750001907348633
    3. '(),' → logprob: -14.750001907348633
    4. ',
' → logprob: -16.625001907348633
    5. '(' → logprob: -17.000001907348633
    6. ',int' → logprob: -17.875001907348633
    7. ',None' → logprob: -18.375001907348633
    8. 'in' → logprob: -18.750001907348633
    9. '،' → logprob: -19.000001907348633
    10. ',(' → logprob: -19.250001907348633

Token 1060: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.625030517578125
    4. '(' → logprob: -17.625030517578125
    5. ')' → logprob: -18.250030517578125
    6. '0' → logprob: -18.500030517578125
    7. '_' → logprob: -18.687530517578125
    8. '...' → logprob: -19.000030517578125
    9. '           ' → logprob: -19.000030517578125
    10. '     ' → logprob: -19.312530517578125

Token 1061: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.2166411478538066e-05
    2. ' ' → logprob: -9.875052452087402
    3. '0' → logprob: -15.125052452087402
    4. ')' → logprob: -16.625051498413086
    5. '   ' → logprob: -17.625051498413086
    6. 's' → logprob: -17.750051498413086
    7. '(' → logprob: -18.062551498413086
    8. '  ' → logprob: -18.062551498413086
    9. 'ls' → logprob: -18.187551498413086
    10. '2' → logprob: -18.250051498413086

Token 1062: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2914804518222809
    2. ')' → logprob: -1.4164804220199585
    3. '()' → logprob: -5.166480541229248
    4. 'if' → logprob: -5.541480541229248
    5. '<|end|>' → logprob: -7.541480541229248
    6. ' ' → logprob: -10.66648006439209
    7. '<|end|>' → logprob: -11.41648006439209
    8. ' )' → logprob: -11.66648006439209
    9. '	if' → logprob: -11.91648006439209
    10. '),' → logprob: -11.91648006439209

Token 1063: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.016085751354694366
    2. 'if' → logprob: -4.141085624694824
    3. '           ' → logprob: -11.391085624694824
    4. ')' → logprob: -11.391085624694824
    5. '       ' → logprob: -11.516085624694824
    6. '        ' → logprob: -12.266085624694824
    7. '               ' → logprob: -13.141085624694824
    8. ' ' → logprob: -13.141085624694824
    9. '            ' → logprob: -13.391085624694824
    10. '	if' → logprob: -13.516085624694824

Token 1064: ' ls' (ID: 41498)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.0009164590737782419
    2. ' ls' → logprob: -7.000916481018066
    3. 'rs' → logprob: -12.250916481018066
    4. '(ls' → logprob: -15.875916481018066
    5. ' rs' → logprob: -17.62591552734375
    6. '_ls' → logprob: -17.62591552734375
    7. 'l' → logprob: -19.00091552734375
    8. 'len' → logprob: -20.12591552734375
    9. ' ' → logprob: -20.25091552734375
    10. 'lsx' → logprob: -20.75091552734375

Token 1065: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005488642491400242
    2. ')
' → logprob: -8.50054931640625
    3. '           ' → logprob: -9.37554931640625
    4. '())' → logprob: -9.37554931640625
    5. '       ' → logprob: -9.50054931640625
    6. '()' → logprob: -10.12554931640625
    7. '):
' → logprob: -10.87554931640625
    8. '               ' → logprob: -11.00054931640625
    9. '):' → logprob: -11.00054931640625
    10. ' )' → logprob: -13.25054931640625

Token 1066: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006610688287764788
    2. '<|end|>' → logprob: -5.131610870361328
    3. ')' → logprob: -8.381610870361328
    4. '<|end|>' → logprob: -9.131610870361328
    5. ' for' → logprob: -9.631610870361328
    6. '           ' → logprob: -9.756610870361328
    7. '   ' → logprob: -10.006610870361328
    8. '(' → logprob: -10.006610870361328
    9. ' ' → logprob: -10.506610870361328
    10. '()' → logprob: -10.881610870361328

Token 1067: ' rs' (ID: 15181)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015407484024763107
    2. ' while' → logprob: -5.265407562255859
    3. ' rs' → logprob: -5.640407562255859
    4. 'while' → logprob: -6.265407562255859
    5. '           ' → logprob: -6.390407562255859
    6. 'rs' (adapté à ' rs') → logprob: -6.515407562255859
    7. ' for' → logprob: -7.265407562255859
    8. 'for' → logprob: -8.01540756225586
    9. '   ' → logprob: -8.01540756225586
    10. '               ' → logprob: -10.14040756225586

Token 1068: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.0035560044925659895
    2. '=' → logprob: -5.878555774688721
    3. ' =' → logprob: -7.253555774688721
    4. 'iter' → logprob: -11.628556251525879
    5. 'rs' → logprob: -11.753556251525879
    6. '   ' → logprob: -12.378556251525879
    7. '_itr' → logprob: -12.503556251525879
    8. '(rs' → logprob: -12.878556251525879
    9. '=lambda' → logprob: -12.878556251525879
    10. 'Iter' → logprob: -13.253556251525879

Token 1069: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4755261540412903
    2. '=lambda' → logprob: -0.9755261540412903
    3. ' =' → logprob: -6.725526332855225
    4. 'lambda' → logprob: -8.975525856018066
    5. '(lambda' → logprob: -9.100525856018066
    6. ' lambda' → logprob: -11.725525856018066
    7. '=
' → logprob: -14.850525856018066
    8. 'ambda' → logprob: -15.100525856018066
    9. '=>' → logprob: -16.100526809692383
    10. '=True' → logprob: -16.100526809692383

Token 1070: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.001402848749421537
    2. ' lambda' → logprob: -7.001402854919434
    3. '(lambda' → logprob: -7.626402854919434
    4. '=lambda' → logprob: -12.626402854919434
    5. '   ' → logprob: -15.001402854919434
    6. '```' → logprob: -16.376401901245117
    7. '_lambda' → logprob: -16.501401901245117
    8. 'lam' → logprob: -17.251401901245117
    9. '           ' → logprob: -17.501401901245117
    10. 'λ' → logprob: -18.001401901245117

Token 1071: ':' (ID: 25)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.0218056570738554
    2. '(lambda' → logprob: -3.896805763244629
    3. '=lambda' → logprob: -7.396805763244629
    4. ' lambda' → logprob: -7.396805763244629
    5. '=' → logprob: -10.896805763244629
    6. ':' → logprob: -12.021805763244629
    7. '```' → logprob: -12.771805763244629
    8. '(' → logprob: -13.146805763244629
    9. 'def' → logprob: -13.771805763244629
    10. '   ' → logprob: -14.021805763244629

Token 1072: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -9.610702363715973e-06
    2. 'hp' → logprob: -11.625009536743164
    3. ' (' → logprob: -15.750009536743164
    4. ' hp' → logprob: -15.750009536743164
    5. '(' → logprob: -15.875009536743164
    6. '   ' → logprob: -16.625009536743164
    7. '(lp' → logprob: -17.875009536743164
    8. '(H' → logprob: -17.875009536743164
    9. '  ' → logprob: -18.000009536743164
    10. '(hw' → logprob: -18.125009536743164

Token 1073: 'hp' (ID: 45478)
  Prédit: 'hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' → logprob: -0.0062424298375844955
    2. '(h' → logprob: -5.131242275238037
    3. ' hp' → logprob: -8.131242752075195
    4. 'h' → logprob: -11.506242752075195
    5. '-h' → logprob: -12.631242752075195
    6. '-' → logprob: -13.381242752075195
    7. 'he' → logprob: -14.381242752075195
    8. '
' → logprob: -14.756242752075195
    9. '_hp' → logprob: -14.756242752075195
    10. 'hs' → logprob: -15.006242752075195

Token 1074: '(rs' (ID: 25887)
  Prédit: '(rs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rs' → logprob: -5.438573680294212e-06
    2. 'rs' → logprob: -12.250005722045898
    3. '(r' → logprob: -15.125005722045898
    4. '$rs' → logprob: -15.500005722045898
    5. '	rs' → logprob: -16.8750057220459
    6. '(' → logprob: -18.3750057220459
    7. ' rs' → logprob: -18.7500057220459
    8. '(rc' → logprob: -18.8750057220459
    9. '[' → logprob: -19.2500057220459
    10. '#' → logprob: -19.6250057220459

Token 1075: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7323650121688843
    2. ' for' → logprob: -0.8573650121688843
    3. ')' → logprob: -2.357365131378174
    4. '(rs' → logprob: -8.607364654541016
    5. ' ' → logprob: -10.482364654541016
    6. '(for' → logprob: -10.982364654541016
    7. '   ' → logprob: -11.357364654541016
    8. 'rs' → logprob: -11.607364654541016
    9. '	for' → logprob: -11.607364654541016
    10. '(ls' → logprob: -12.232364654541016

Token 1076: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12693388760089874
    2. ' for' → logprob: -2.1269338130950928
    3. '(for' → logprob: -12.251934051513672
    4. '(ls' → logprob: -14.876934051513672
    5. 'ls' → logprob: -15.876934051513672
    6. ')' → logprob: -16.001934051513672
    7. '	for' → logprob: -16.501934051513672
    8. '   ' → logprob: -16.876934051513672
    9. ' ' → logprob: -16.876934051513672
    10. '```' → logprob: -17.251934051513672

Token 1077: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00833690632134676
    2. '_rs' → logprob: -5.133337020874023
    3. 'rs' → logprob: -6.883337020874023
    4. '_rc' → logprob: -7.008337020874023
    5. '_ls' → logprob: -8.633337020874023
    6. ' _' → logprob: -9.258337020874023
    7. 'int' → logprob: -9.508337020874023
    8. '(rs' → logprob: -10.008337020874023
    9. 'ls' → logprob: -10.383337020874023
    10. 'rc' → logprob: -11.258337020874023

Token 1078: ' in' (ID: 306)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.25599199533462524
    2. ' iter' → logprob: -1.5059919357299805
    3. '(iter' → logprob: -6.0059919357299805
    4. 'in' → logprob: -6.8809919357299805
    5. ' in' → logprob: -8.13099193572998
    6. 'int' → logprob: -9.63099193572998
    7. 'rs' → logprob: -10.38099193572998
    8. '(' → logprob: -10.63099193572998
    9. '_iter' → logprob: -10.63099193572998
    10. 'def' → logprob: -11.00599193572998

Token 1079: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.024374734610319138
    2. '(iter' → logprob: -3.7743747234344482
    3. 'ls' → logprob: -7.274374961853027
    4. ' iter' → logprob: -8.024374961853027
    5. 'int' → logprob: -10.524374961853027
    6. 'rs' → logprob: -10.774374961853027
    7. '(ls' → logprob: -11.274374961853027
    8. 'len' → logprob: -11.524374961853027
    9. 'list' → logprob: -11.899374961853027
    10. '(' → logprob: -12.274374961853027

Token 1080: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004145476501435041
    2. 'int' → logprob: -5.504145622253418
    3. '[int' → logprob: -9.879145622253418
    4. '(rs' → logprob: -12.004145622253418
    5. '=int' → logprob: -12.254145622253418
    6. '<int' → logprob: -13.004145622253418
    7. 'rs' → logprob: -14.004145622253418
    8. '1' → logprob: -14.629145622253418
    9. ',int' → logprob: -15.004145622253418
    10. '```' → logprob: -15.379145622253418

Token 1081: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035687271505594254
    2. '(int' → logprob: -3.660687208175659
    3. '(' → logprob: -4.910687446594238
    4. ',int' → logprob: -6.660687446594238
    5. 'int' → logprob: -7.285687446594238
    6. '[int' → logprob: -12.410687446594238
    7. '=int' → logprob: -12.785687446594238
    8. ' ,' → logprob: -14.285687446594238
    9. '1' → logprob: -14.535687446594238
    10. '(),' → logprob: -14.785687446594238

Token 1082: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.810037742368877e-05
    2. ' ' → logprob: -10.500038146972656
    3. 'int' → logprob: -11.625038146972656
    4. '   ' → logprob: -14.875038146972656
    5. '(' → logprob: -15.187538146972656
    6. '
' → logprob: -15.812538146972656
    7. '           ' → logprob: -16.312538146972656
    8. ')' → logprob: -16.375038146972656
    9. '```' → logprob: -16.750038146972656
    10. '       ' → logprob: -16.875038146972656

Token 1083: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.625000953674316
    3. 'rs' → logprob: -16.375
    4. '0' → logprob: -16.5
    5. '
' → logprob: -17.0
    6. '-' → logprob: -17.1875
    7. ')' → logprob: -17.25
    8. '```' → logprob: -17.3125
    9. '(' → logprob: -17.375
    10. '2' → logprob: -17.6875

Token 1084: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3297297954559326
    2. ',' → logprob: -1.4547297954559326
    3. ' if' → logprob: -3.3297297954559326
    4. 'if' → logprob: -4.954730033874512
    5. '()' → logprob: -5.704730033874512
    6. '   ' → logprob: -8.329730033874512
    7. '=' → logprob: -8.704730033874512
    8. '(),' → logprob: -8.829730033874512
    9. '),' → logprob: -8.829730033874512
    10. '):' → logprob: -8.954730033874512

Token 1085: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32904666662216187
    2. ' for' → logprob: -1.3290467262268066
    3. ')' → logprob: -4.204046726226807
    4. '<|end|>' → logprob: -8.329046249389648
    5. ' if' → logprob: -8.579046249389648
    6. 'if' → logprob: -8.829046249389648
    7. '()' → logprob: -10.329046249389648
    8. '):
' → logprob: -10.579046249389648
    9. '):' → logprob: -10.829046249389648
    10. ':' → logprob: -10.954046249389648

Token 1086: ' rs' (ID: 15181)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -0.00018661346985027194
    2. ' rs' → logprob: -8.750186920166016
    3. 'ls' → logprob: -11.375186920166016
    4. '(rs' → logprob: -11.375186920166016
    5. '$rs' → logprob: -13.500186920166016
    6. '	rs' → logprob: -13.625186920166016
    7. 'True' → logprob: -13.750186920166016
    8. 'rc' → logprob: -14.500186920166016
    9. 'r' → logprob: -14.750186920166016
    10. '   ' → logprob: -15.875186920166016

Token 1087: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9385840892791748
    2. 'for' → logprob: -1.4385840892791748
    3. '()' → logprob: -1.8135840892791748
    4. ' for' → logprob: -1.9385840892791748
    5. '(ls' → logprob: -4.438584327697754
    6. '):
' → logprob: -4.813584327697754
    7. '       ' → logprob: -4.813584327697754
    8. ' if' → logprob: -5.063584327697754
    9. '           ' → logprob: -5.188584327697754
    10. '(rs' → logprob: -5.688584327697754

Token 1088: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025920763611793518
    2. '   ' → logprob: -4.525920867919922
    3. '<|end|>' → logprob: -4.775920867919922
    4. '	while' → logprob: -5.900920867919922
    5. '	   ' → logprob: -6.400920867919922
    6. '	' → logprob: -7.525920867919922
    7. ' while' → logprob: -7.525920867919922
    8. '	       ' → logprob: -8.400920867919922
    9. 'while' → logprob: -8.525920867919922
    10. '<|end|>' → logprob: -9.150920867919922

Token 1089: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6021588444709778
    2. '       ' → logprob: -0.8521588444709778
    3. 'while' (adapté à ' while') → logprob: -4.102159023284912
    4. '   ' → logprob: -4.727159023284912
    5. '	while' → logprob: -7.727159023284912
    6. ' ' → logprob: -11.227158546447754
    7. '<|end|>' → logprob: -11.352158546447754
    8. '           ' → logprob: -11.852158546447754
    9. '    ' → logprob: -11.852158546447754
    10. 'While' → logprob: -13.477158546447754

Token 1090: ' ls' (ID: 41498)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.005845242645591497
    2. 'rs' → logprob: -5.630845069885254
    3. ' ls' → logprob: -6.130845069885254
    4. 'True' → logprob: -10.005845069885254
    5. ' rs' → logprob: -11.380845069885254
    6. '(ls' → logprob: -12.005845069885254
    7. ' True' → logprob: -13.130845069885254
    8. 'len' → logprob: -13.630845069885254
    9. 'l' → logprob: -14.755845069885254
    10. '   ' → logprob: -15.130845069885254

Token 1091: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04859646037220955
    2. 'and' → logprob: -3.0485963821411133
    3. '        ' → logprob: -12.798596382141113
    4. '    ' → logprob: -13.173596382141113
    5. '           ' → logprob: -13.673596382141113
    6. '   ' → logprob: -14.173596382141113
    7. '            ' → logprob: -14.548596382141113
    8. '       ' → logprob: -14.798596382141113
    9. ' or' → logprob: -15.048596382141113
    10. '&&' → logprob: -15.173596382141113

Token 1092: ' rs' (ID: 15181)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -0.0004311460361350328
    2. ' rs' → logprob: -7.750431060791016
    3. '	rs' → logprob: -15.250431060791016
    4. '(rs' → logprob: -16.375431060791016
    5. '$rs' → logprob: -16.375431060791016
    6. '
' → logprob: -18.250431060791016
    7. ' ' → logprob: -19.000431060791016
    8. 'len' → logprob: -19.250431060791016
    9. 'ls' → logprob: -19.375431060791016
    10. 'r' → logprob: -19.500431060791016

Token 1093: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023487014696002007
    2. ':
' → logprob: -3.773487091064453
    3. '       ' → logprob: -9.398487091064453
    4. '<|end|>' → logprob: -9.898487091064453
    5. '=' → logprob: -10.398487091064453
    6. ' and' → logprob: -10.648487091064453
    7. '):' → logprob: -11.398487091064453
    8. '   ' → logprob: -12.023487091064453
    9. '[' → logprob: -12.023487091064453
    10. '<|end|>' → logprob: -12.273487091064453

Token 1094: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006027150084264576
    2. '       ' → logprob: -7.875602722167969
    3. '	       ' → logprob: -9.375602722167969
    4. '
' → logprob: -9.625602722167969
    5. ' for' → logprob: -11.000602722167969
    6. '        ' → logprob: -11.125602722167969
    7. '<|end|>' → logprob: -11.375602722167969
    8. 'for' → logprob: -12.000602722167969
    9. '               ' → logprob: -12.750602722167969
    10. '		' → logprob: -13.000602722167969

Token 1095: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2634125351905823
    2. 'for' (adapté à ' for') → logprob: -2.0134124755859375
    3. '       ' → logprob: -2.3884124755859375
    4. ' for' → logprob: -5.1384124755859375
    5. '   ' → logprob: -8.263412475585938
    6. '```' → logprob: -10.138412475585938
    7. '	for' → logprob: -10.263412475585938
    8. '               ' → logprob: -10.388412475585938
    9. '
' → logprob: -11.888412475585938
    10. ' ' → logprob: -12.388412475585938

Token 1096: ' rc' (ID: 23309)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10299680382013321
    2. ' l' → logprob: -2.352996826171875
    3. 'lc' → logprob: -6.352996826171875
    4. 'rc' → logprob: -6.977996826171875
    5. ' rc' → logprob: -10.102996826171875
    6. 'ls' → logprob: -10.977996826171875
    7. ' lc' → logprob: -11.102996826171875
    8. 'r' → logprob: -11.852996826171875
    9. '(rc' → logprob: -12.602996826171875
    10. '```' → logprob: -12.727996826171875

Token 1097: 'od' (ID: 368)
  Prédit: 'od'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.011109246872365475
    2. 'cod' → logprob: -4.511109352111816
    3. 'oc' → logprob: -10.011109352111816
    4. '_cod' → logprob: -11.886109352111816
    5. 'ode' → logprob: -13.261109352111816
    6. 'од' → logprob: -13.511109352111816
    7. 'c' → logprob: -13.636109352111816
    8. 'rc' → logprob: -14.386109352111816
    9. 'o' → logprob: -14.636109352111816
    10. 'ods' → logprob: -14.761109352111816

Token 1098: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024768433067947626
    2. 'in' → logprob: -6.002476692199707
    3. ' ' → logprob: -14.877476692199707
    4. '	in' → logprob: -15.752476692199707
    5. '<|end|>' → logprob: -16.752477645874023
    6. 's' → logprob: -17.127477645874023
    7. ',' → logprob: -17.314977645874023
    8. '  ' → logprob: -17.377477645874023
    9. ' =' → logprob: -17.439977645874023
    10. '[' → logprob: -17.502477645874023

Token 1099: ' rs' (ID: 15181)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -1.9385402993066236e-05
    2. ' rs' → logprob: -11.125019073486328
    3. 'ls' → logprob: -12.375019073486328
    4. '(rs' → logprob: -15.250019073486328
    5. '$rs' → logprob: -16.375019073486328
    6. '	rs' → logprob: -17.250019073486328
    7. 'r' → logprob: -18.125019073486328
    8. '_rs' → logprob: -19.375019073486328
    9. 're' → logprob: -19.500019073486328
    10. '.rs' → logprob: -19.625019073486328

Token 1100: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.0003992104611825198
    2. '():' → logprob: -7.875399112701416
    3. '_iterator' → logprob: -11.250399589538574
    4. '()' → logprob: -12.875399589538574
    5. ':' → logprob: -13.500399589538574
    6. '():
' → logprob: -14.250399589538574
    7. '):' → logprob: -14.500399589538574
    8. '_ITER' → logprob: -14.750399589538574
    9. '_iters' → logprob: -15.875399589538574
    10. 'iter' → logprob: -16.000398635864258

Token 1101: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004001226741820574
    2. '():
' → logprob: -5.754001140594482
    3. '()' → logprob: -7.129001140594482
    4. ':' → logprob: -11.00400161743164
    5. '():
' → logprob: -13.75400161743164
    6. '();' → logprob: -13.87900161743164
    7. '):' → logprob: -14.50400161743164
    8. '():

' → logprob: -14.75400161743164
    9. ' ():' → logprob: -14.87900161743164
    10. '()>' → logprob: -14.87900161743164

Token 1102: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019726462196558714
    2. '           ' → logprob: -6.626972675323486
    3. '<|end|>' → logprob: -7.751972675323486
    4. ' r' → logprob: -9.126972198486328
    5. '```' → logprob: -11.001972198486328
    6. ',' → logprob: -11.501972198486328
    7. ':' → logprob: -11.626972198486328
    8. 'r' → logprob: -11.751972198486328
    9. '       ' → logprob: -11.751972198486328
    10. '              ' → logprob: -12.001972198486328

Token 1103: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.04523409903049469
    2. '               ' → logprob: -3.170234203338623
    3. ' r' → logprob: -6.170234203338623
    4. '           ' → logprob: -8.920233726501465
    5. '   ' → logprob: -12.795233726501465
    6. '                   ' → logprob: -13.170233726501465
    7. '       ' → logprob: -13.295233726501465
    8. '```' → logprob: -14.545233726501465
    9. '	r' → logprob: -14.920233726501465
    10. ' ' → logprob: -15.545233726501465

Token 1104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.36574100604048e-06
    2. ' ,' → logprob: -12.875004768371582
    3. '               ' → logprob: -14.250004768371582
    4. '=' → logprob: -14.500004768371582
    5. '           ' → logprob: -15.375004768371582
    6. 'r' → logprob: -15.875004768371582
    7. ',r' → logprob: -15.875004768371582
    8. ',i' → logprob: -16.875003814697266
    9. ',
' → logprob: -17.375003814697266
    10. '                   ' → logprob: -17.625003814697266

Token 1105: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014163628220558167
    2. ' i' → logprob: -4.264163494110107
    3. ' ' → logprob: -17.389163970947266
    4. '  ' → logprob: -17.639163970947266
    5. '   ' → logprob: -17.639163970947266
    6. '	i' → logprob: -18.389163970947266
    7. '       ' → logprob: -18.514163970947266
    8. '           ' → logprob: -18.514163970947266
    9. 'I' → logprob: -19.639163970947266
    10. '    ' → logprob: -20.139163970947266

Token 1106: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687169551849365
    2. ' =' → logprob: -1.1368716955184937
    3. ',' → logprob: -15.136871337890625
    4. ')' → logprob: -15.636871337890625
    5. '   ' → logprob: -16.136871337890625
    6. ' in' → logprob: -16.636871337890625
    7. ' ' → logprob: -17.636871337890625
    8. 'in' → logprob: -18.761871337890625
    9. '       ' → logprob: -18.761871337890625
    10. ')=' → logprob: -18.761871337890625

Token 1107: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -7.493430894101039e-05
    2. ' div' → logprob: -9.500075340270996
    3. '<div' → logprob: -19.00007438659668
    4. '	div' → logprob: -19.00007438659668
    5. 'dev' → logprob: -19.75007438659668
    6. '(div' → logprob: -20.00007438659668
    7. 'br' → logprob: -20.62507438659668
    8. 'd' → logprob: -21.25007438659668
    9. '.div' → logprob: -21.62507438659668
    10. 'di' → logprob: -22.00007438659668

Token 1108: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.491498531133402e-06
    2. 'omod' → logprob: -12.625009536743164
    3. 'cod' → logprob: -12.750009536743164
    4. '(mod' → logprob: -13.625009536743164
    5. 'div' → logprob: -13.875009536743164
    6. 'mods' → logprob: -14.125009536743164
    7. '(rc' → logprob: -16.000009536743164
    8. 'om' → logprob: -16.750009536743164
    9. '_mod' → logprob: -16.875009536743164
    10. 'rc' → logprob: -17.125009536743164

Token 1109: '(rc' (ID: 83646)
  Prédit: '(rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rc' → logprob: -0.005236717872321606
    2. 'rc' → logprob: -5.255236625671387
    3. ' rc' → logprob: -13.130236625671387
    4. '	rc' → logprob: -14.255236625671387
    5. '(rs' → logprob: -16.005237579345703
    6. '.rc' → logprob: -16.630237579345703
    7. 'rcode' → logprob: -17.630237579345703
    8. ' (' → logprob: -17.755237579345703
    9. '_rc' → logprob: -17.880237579345703
    10. '(r' → logprob: -18.505237579345703

Token 1110: 'od' (ID: 368)
  Prédit: 'od'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.04183194413781166
    2. 'cod' → logprob: -3.2918319702148438
    3. 'rc' → logprob: -5.916831970214844
    4. 'oc' → logprob: -7.041831970214844
    5. '(rc' → logprob: -9.166831970214844
    6. '(c' → logprob: -10.916831970214844
    7. 'c' → logprob: -11.041831970214844
    8. 'd' → logprob: -11.916831970214844
    9. '_cod' → logprob: -12.041831970214844
    10. 'r' → logprob: -12.291831970214844

Token 1111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.0020742492051795e-05
    2. '               ' → logprob: -10.125049591064453
    3. '           ' → logprob: -12.625049591064453
    4. ' ,' → logprob: -13.000049591064453
    5. ')' → logprob: -13.750049591064453
    6. '=' → logprob: -13.875049591064453
    7. '       ' → logprob: -14.250049591064453
    8. ',r' → logprob: -14.750049591064453
    9. '                   ' → logprob: -15.375049591064453
    10. ',
' → logprob: -15.375049591064453

Token 1112: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0011866572313010693
    2. ' base' → logprob: -7.001186847686768
    3. 'rc' → logprob: -8.25118637084961
    4. 'r' → logprob: -11.37618637084961
    5. 'code' → logprob: -13.62618637084961
    6. '0' → logprob: -14.62618637084961
    7. ' rc' → logprob: -15.12618637084961
    8. '(base' → logprob: -15.50118637084961
    9. 'rcode' → logprob: -16.00118637084961
    10. '```' → logprob: -16.25118637084961

Token 1113: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003309361054562032
    2. '               ' → logprob: -9.000330924987793
    3. ')' → logprob: -9.250330924987793
    4. '           ' → logprob: -10.125330924987793
    5. '       ' → logprob: -10.625330924987793
    6. ',
' → logprob: -11.125330924987793
    7. '```' → logprob: -11.750330924987793
    8. ',r' → logprob: -12.375330924987793
    9. ')
' → logprob: -12.625330924987793
    10. ' ,' → logprob: -12.625330924987793

Token 1114: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003752615302801132
    2. '<|end|>' → logprob: -8.875374794006348
    3. ' if' → logprob: -9.375374794006348
    4. '           ' → logprob: -10.750374794006348
    5. '                   ' → logprob: -10.750374794006348
    6. '                ' → logprob: -10.875374794006348
    7. '                
' → logprob: -11.000374794006348
    8. ' ' → logprob: -11.000374794006348
    9. 'if' → logprob: -11.500374794006348
    10. '```' → logprob: -12.000374794006348

Token 1115: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3989676535129547
    2. '               ' → logprob: -1.1489676237106323
    3. ' if' → logprob: -4.523967742919922
    4. 'r' → logprob: -7.398967742919922
    5. '                   ' → logprob: -8.023967742919922
    6. '           ' → logprob: -9.023967742919922
    7. 'cur' → logprob: -10.023967742919922
    8. '```' → logprob: -10.898967742919922
    9. ' r' → logprob: -11.023967742919922
    10. '              ' → logprob: -11.773967742919922

Token 1116: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0036014977376908064
    2. ' i' → logprob: -5.628601551055908
    3. 'r' → logprob: -14.50360107421875
    4. '   ' → logprob: -15.25360107421875
    5. '(i' → logprob: -16.25360107421875
    6. 'cur' → logprob: -16.50360107421875
    7. ' ' → logprob: -16.50360107421875
    8. 'l' → logprob: -16.62860107421875
    9. 'f' → logprob: -16.62860107421875
    10. '  ' → logprob: -17.06610107421875

Token 1117: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018179206177592278
    2. 'in' → logprob: -4.018179416656494
    3. '<|end|>' → logprob: -10.643178939819336
    4. ' not' → logprob: -12.643178939819336
    5. 'In' → logprob: -14.018178939819336
    6. 'import' → logprob: -15.268178939819336
    7. '<|end|>' → logprob: -15.268178939819336
    8. 'not' → logprob: -15.643178939819336
    9. ')' → logprob: -15.893178939819336
    10. ' ' → logprob: -16.143178939819336

Token 1118: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.451116051815916e-05
    2. ' d' → logprob: -10.625024795532227
    3. '
' → logprob: -16.875024795532227
    4. '...' → logprob: -17.000024795532227
    5. '   ' → logprob: -17.625024795532227
    6. 'set' → logprob: -17.625024795532227
    7. '           ' → logprob: -18.750024795532227
    8. '[' → logprob: -18.750024795532227
    9. '```' → logprob: -19.250024795532227
    10. '       ' → logprob: -19.375024795532227

Token 1119: 'set' (ID: 977)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.009828576818108559
    2. 'set' → logprob: -4.634828567504883
    3. 's' → logprob: -9.759828567504883
    4. ' d' → logprob: -11.259828567504883
    5. 'et' → logprob: -14.009828567504883
    6. 'f' → logprob: -15.134828567504883
    7. 'sets' → logprob: -15.884828567504883
    8. 'aset' → logprob: -16.509828567504883
    9. 't' → logprob: -16.634828567504883
    10. '```' → logprob: -16.884828567504883

Token 1120: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.027389802038669586
    2. '<|end|>' → logprob: -4.402390003204346
    3. ':
' → logprob: -5.277390003204346
    4. ':' → logprob: -5.277390003204346
    5. '               ' → logprob: -5.777390003204346
    6. '                  ' → logprob: -7.652390003204346
    7. '                       ' → logprob: -8.152389526367188
    8. '):
' → logprob: -9.152389526367188
    9. '<|end|>' → logprob: -9.152389526367188
    10. '           ' → logprob: -9.277389526367188

Token 1121: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005048863589763641
    2. '                    
' → logprob: -6.505048751831055
    3. ' ' → logprob: -7.380048751831055
    4. '                    ' → logprob: -7.505048751831055
    5. '                       ' → logprob: -8.005048751831055
    6. '               ' → logprob: -8.005048751831055
    7. 'd' → logprob: -8.255048751831055
    8. '                  ' → logprob: -8.255048751831055
    9. '```' → logprob: -8.630048751831055
    10. ' 
' → logprob: -8.755048751831055

Token 1122: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0013892814749851823
    2. '                   ' → logprob: -6.751389503479004
    3. ' d' → logprob: -8.501389503479004
    4. '               ' → logprob: -11.876389503479004
    5. '                       ' → logprob: -12.251389503479004
    6. '   ' → logprob: -13.376389503479004
    7. '           ' → logprob: -13.626389503479004
    8. '       ' → logprob: -13.876389503479004
    9. '                  ' → logprob: -15.626389503479004
    10. '  ' → logprob: -16.751388549804688

Token 1123: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.3856492842023727e-06
    2. 'et' → logprob: -13.625000953674316
    3. 's' → logprob: -16.500001907348633
    4. 'd' → logprob: -19.250001907348633
    5. 'setq' → logprob: -19.625001907348633
    6. '   ' → logprob: -19.750001907348633
    7. 'setz' → logprob: -19.875001907348633
    8. 'se' → logprob: -20.000001907348633
    9. 'setw' → logprob: -20.250001907348633
    10. '
' → logprob: -20.250001907348633

Token 1124: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.015624522231519222
    2. '.add' → logprob: -4.265624523162842
    3. 'remove' → logprob: -7.390624523162842
    4. '.' → logprob: -7.515624523162842
    5. '.dis' → logprob: -8.515624046325684
    6. '.pop' → logprob: -10.390624046325684
    7. '<|end|>' → logprob: -10.515624046325684
    8. '.clear' → logprob: -10.765624046325684
    9. 'add' → logprob: -12.390624046325684
    10. '   ' → logprob: -12.640624046325684

Token 1125: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.0590548703912646e-05
    2. 'i' → logprob: -10.750030517578125
    3. '                   ' → logprob: -11.625030517578125
    4. '               ' → logprob: -17.000030517578125
    5. '           ' → logprob: -17.875030517578125
    6. '{i' → logprob: -17.875030517578125
    7. ' i' → logprob: -18.375030517578125
    8. '                  ' → logprob: -18.500030517578125
    9. '(' → logprob: -18.750030517578125
    10. '                       ' → logprob: -19.250030517578125

Token 1126: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4930019676685333
    2. '                   ' → logprob: -1.243001937866211
    3. '               ' → logprob: -2.368001937866211
    4. ')
' → logprob: -5.368001937866211
    5. '<|end|>' → logprob: -7.618001937866211
    6. '           ' → logprob: -7.868001937866211
    7. '):
' → logprob: -7.993001937866211
    8. '                       ' → logprob: -8.118001937866211
    9. ',' → logprob: -8.493001937866211
    10. '),' → logprob: -8.743001937866211

Token 1127: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024296673014760017
    2. '                   ' → logprob: -3.774296760559082
    3. ')' → logprob: -7.399296760559082
    4. '           ' → logprob: -8.774296760559082
    5. 'else' → logprob: -8.899296760559082
    6. '       ' → logprob: -10.649296760559082
    7. '```' → logprob: -10.649296760559082
    8. '              ' → logprob: -11.274296760559082
    9. '                       ' → logprob: -11.274296760559082
    10. '                  ' → logprob: -11.399296760559082

Token 1128: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.07986417412757874
    2. '               ' → logprob: -2.579864263534546
    3. 'else' → logprob: -6.954864025115967
    4. ' elif' → logprob: -10.954864501953125
    5. '                   ' → logprob: -13.704864501953125
    6. 'elseif' → logprob: -14.079864501953125
    7. '#elif' → logprob: -15.204864501953125
    8. '           ' → logprob: -16.079864501953125
    9. 'elsif' → logprob: -16.204864501953125
    10. '       ' → logprob: -17.329864501953125

Token 1129: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0003855093673337251
    2. ' cur' → logprob: -7.875385284423828
    3. '   ' → logprob: -12.250385284423828
    4. ' ' → logprob: -16.000385284423828
    5. '	cur' → logprob: -16.000385284423828
    6. '  ' → logprob: -16.750385284423828
    7. '```' → logprob: -16.875385284423828
    8. '
' → logprob: -16.875385284423828
    9. '(cur' → logprob: -17.000385284423828
    10. '-cur' → logprob: -17.125385284423828

Token 1130: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2859402000904083
    2. ' >' → logprob: -1.660940170288086
    3. '<' → logprob: -3.160940170288086
    4. ' <' → logprob: -4.160940170288086
    5. '                   ' → logprob: -7.660940170288086
    6. '               ' → logprob: -8.910940170288086
    7. '>=' → logprob: -10.660940170288086
    8. '                ' → logprob: -10.910940170288086
    9. '                       ' → logprob: -11.035940170288086
    10. '                    ' → logprob: -11.410940170288086

Token 1131: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0019286326132714748
    2. ' r' → logprob: -6.251928806304932
    3. '                   ' → logprob: -16.751928329467773
    4. '```' → logprob: -18.751928329467773
    5. '               ' → logprob: -19.376928329467773
    6. '(r' → logprob: -19.626928329467773
    7. 'cur' → logprob: -20.126928329467773
    8. '   ' → logprob: -20.251928329467773
    9. '           ' → logprob: -20.376928329467773
    10. 'rc' → logprob: -20.501928329467773

Token 1132: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15561948716640472
    2. ':' → logprob: -2.0306193828582764
    3. ':
' → logprob: -4.6556196212768555
    4. ')' → logprob: -7.4056196212768555
    5. '):' → logprob: -7.4056196212768555
    6. '):
' → logprob: -7.4056196212768555
    7. '               ' → logprob: -7.6556196212768555
    8. '                  ' → logprob: -8.030619621276855
    9. '                       ' → logprob: -8.530619621276855
    10. '                    ' → logprob: -9.280619621276855

Token 1133: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09077109396457672
    2. ' cur' → logprob: -3.215771198272705
    3. ' ' → logprob: -3.840771198272705
    4. '               ' → logprob: -4.340771198272705
    5. ' f' → logprob: -6.090771198272705
    6. '                 ' → logprob: -6.340771198272705
    7. 'cur' → logprob: -6.340771198272705
    8. '                  ' → logprob: -6.340771198272705
    9. '                    ' → logprob: -6.590771198272705
    10. '                ' → logprob: -7.090771198272705

Token 1134: ' tot' (ID: 2417)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.47621259093284607
    2. 'tot' (adapté à ' tot') → logprob: -0.9762126207351685
    3. ' tot' → logprob: -7.351212501525879
    4. '                       ' → logprob: -7.476212501525879
    5. '               ' → logprob: -7.851212501525879
    6. 'cur' → logprob: -7.976212501525879
    7. '           ' → logprob: -9.976212501525879
    8. '                  ' → logprob: -10.476212501525879
    9. '   ' → logprob: -10.976212501525879
    10. 'total' → logprob: -11.101212501525879

Token 1135: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5846013426780701
    2. '+=' → logprob: -0.8346013426780701
    3. '                   ' → logprob: -4.834601402282715
    4. '                    ' → logprob: -8.459601402282715
    5. '+' → logprob: -8.959601402282715
    6. '=' → logprob: -9.334601402282715
    7. '                  ' → logprob: -9.584601402282715
    8. '               ' → logprob: -10.084601402282715
    9. ' +' → logprob: -10.584601402282715
    10. '<|end|>' → logprob: -11.334601402282715

Token 1136: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.16023042798042297
    2. ' cur' → logprob: -1.9102303981781006
    3. '(cur' → logprob: -12.41023063659668
    4. '	cur' → logprob: -13.78523063659668
    5. '[cur' → logprob: -14.78523063659668
    6. '```' → logprob: -15.66023063659668
    7. '   ' → logprob: -15.66023063659668
    8. ' ' → logprob: -16.16023063659668
    9. ' ' → logprob: -16.66023063659668
    10. '_cur' → logprob: -16.66023063659668

Token 1137: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.002551527228206396
    2. '-' → logprob: -6.002551555633545
    3. '<|end|>' → logprob: -9.627551078796387
    4. ')' → logprob: -12.877551078796387
    5. ' ' → logprob: -13.002551078796387
    6. '```' → logprob: -13.627551078796387
    7. '...' → logprob: -14.252551078796387
    8. ' ' → logprob: -14.502551078796387
    9. ' -=' → logprob: -14.877551078796387
    10. '<|end|>' → logprob: -15.252551078796387

Token 1138: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00033546582562848926
    2. ' r' → logprob: -8.000335693359375
    3. '   ' → logprob: -19.750335693359375
    4. 'cur' → logprob: -20.375335693359375
    5. '```' → logprob: -20.750335693359375
    6. '<|end|>' → logprob: -21.250335693359375
    7. '(r' → logprob: -21.875335693359375
    8. '	r' → logprob: -21.875335693359375
    9. ' ' → logprob: -22.125335693359375
    10. '_r' → logprob: -22.375335693359375

Token 1139: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0024404549039900303
    2. '
' → logprob: -6.877440452575684
    3. '               ' → logprob: -7.377440452575684
    4. '<|end|>' → logprob: -9.002440452575684
    5. '                    
' → logprob: -9.002440452575684
    6. '           ' → logprob: -9.502440452575684
    7. 'cur' → logprob: -9.502440452575684
    8. '                  ' → logprob: -9.877440452575684
    9. '                       ' → logprob: -9.877440452575684
    10. '```' → logprob: -9.877440452575684

Token 1140: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.030469615012407303
    2. 'cur' → logprob: -3.5304696559906006
    3. '```' → logprob: -8.40546989440918
    4. '               ' → logprob: -8.78046989440918
    5. '
' → logprob: -9.40546989440918
    6. '                  ' → logprob: -9.78046989440918
    7. '                    ' → logprob: -10.40546989440918
    8. '                     ' → logprob: -10.40546989440918
    9. '                       ' → logprob: -10.40546989440918
    10. '``' → logprob: -10.53046989440918

Token 1141: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.00043233807082287967
    2. '                   ' → logprob: -7.75043249130249
    3. '               ' → logprob: -14.000432014465332
    4. ' cur' → logprob: -14.375432014465332
    5. '           ' → logprob: -17.12543296813965
    6. '   ' → logprob: -17.25043296813965
    7. '                       ' → logprob: -17.37543296813965
    8. 'curr' → logprob: -17.50043296813965
    9. '                  ' → logprob: -17.87543296813965
    10. '       ' → logprob: -18.37543296813965

Token 1142: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31327179074287415
    2. ' =' → logprob: -1.3132717609405518
    3. '                   ' → logprob: -12.438271522521973
    4. '   ' → logprob: -12.813271522521973
    5. '    ' → logprob: -13.438271522521973
    6. ',' → logprob: -14.438271522521973
    7. '<|end|>' → logprob: -15.063271522521973
    8. ' ' → logprob: -15.438271522521973
    9. '                    ' → logprob: -15.938271522521973
    10. '=
' → logprob: -16.43827247619629

Token 1143: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005233882926404476
    2. ' r' → logprob: -5.2552337646484375
    3. '                   ' → logprob: -18.880233764648438
    4. '	r' → logprob: -18.880233764648438
    5. '   ' → logprob: -19.255233764648438
    6. '(r' → logprob: -20.380233764648438
    7. '_r' → logprob: -21.005233764648438
    8. '```' → logprob: -21.005233764648438
    9. ' ' → logprob: -21.255233764648438
    10. '<|end|>' → logprob: -21.380233764648438

Token 1144: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -8.97155623533763e-05
    2. '                    ' → logprob: -10.500089645385742
    3. '               ' → logprob: -11.000089645385742
    4. '                    
' → logprob: -11.000089645385742
    5. '                  ' → logprob: -11.625089645385742
    6. ' h' → logprob: -12.125089645385742
    7. '           ' → logprob: -12.375089645385742
    8. '                       ' → logprob: -12.625089645385742
    9. '                   
' → logprob: -13.875089645385742
    10. 'h' → logprob: -13.875089645385742

Token 1145: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -9.198043699143454e-05
    2. '               ' → logprob: -10.375091552734375
    3. '                    
' → logprob: -11.000091552734375
    4. '                    ' → logprob: -11.250091552734375
    5. '                  ' → logprob: -11.250091552734375
    6. '           ' → logprob: -12.500091552734375
    7. '                       ' → logprob: -12.500091552734375
    8. '```' → logprob: -12.875091552734375
    9. '   ' → logprob: -13.250091552734375
    10. '<|end|>' → logprob: -13.875091552734375

Token 1146: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.06198415905237198
    2. '                   ' → logprob: -2.811984062194824
    3. ' d' → logprob: -11.686984062194824
    4. '               ' → logprob: -12.561984062194824
    5. '                  ' → logprob: -13.436984062194824
    6. '   ' → logprob: -13.686984062194824
    7. '           ' → logprob: -13.936984062194824
    8. '       ' → logprob: -14.936984062194824
    9. '                    ' → logprob: -15.436984062194824
    10. '                       ' → logprob: -15.561984062194824

Token 1147: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.9361264946837764e-07
    2. 'et' → logprob: -16.375
    3. 'add' → logprob: -17.625
    4. 'd' → logprob: -19.125
    5. 's' → logprob: -20.0
    6. '   ' → logprob: -20.375
    7. ' set' → logprob: -20.625
    8. ' ' → logprob: -20.875
    9. 'setq' → logprob: -20.875
    10. '```' → logprob: -20.875

Token 1148: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -5.6696149840718135e-05
    2. '.' → logprob: -10.125056266784668
    3. '                   ' → logprob: -11.500056266784668
    4. 'add' → logprob: -12.125056266784668
    5. ' .' → logprob: -15.000056266784668
    6. '.Add' → logprob: -15.250056266784668
    7. '                       ' → logprob: -16.125057220458984
    8. '               ' → logprob: -16.375057220458984
    9. '.remove' → logprob: -16.625057220458984
    10. '_add' → logprob: -17.375057220458984

Token 1149: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.25
    3. '(' → logprob: -19.25
    4. '{i' → logprob: -20.25
    5. ' i' → logprob: -21.125
    6. '(
' → logprob: -21.125
    7. ',i' → logprob: -21.375
    8. '[i' → logprob: -21.75
    9. ' (' → logprob: -22.375
    10. '(ii' → logprob: -22.375

Token 1150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010421103797852993
    2. '                   ' → logprob: -5.010421276092529
    3. ')
' → logprob: -6.260421276092529
    4. '               ' → logprob: -7.510421276092529
    5. '()' → logprob: -7.635421276092529
    6. '(i' → logprob: -7.885421276092529
    7. '(' → logprob: -8.635420799255371
    8. ')i' → logprob: -9.885420799255371
    9. '<|end|>' → logprob: -11.135420799255371
    10. ')return' → logprob: -11.260420799255371

Token 1151: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000708501785993576
    2. 'break' → logprob: -7.62570858001709
    3. '               ' → logprob: -8.75070858001709
    4. ' break' → logprob: -11.00070858001709
    5. '           ' → logprob: -11.50070858001709
    6. '				' → logprob: -12.00070858001709
    7. '```' → logprob: -12.12570858001709
    8. '                       ' → logprob: -12.37570858001709
    9. '                    ' → logprob: -12.75070858001709
    10. '   ' → logprob: -12.87570858001709

Token 1152: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.005117884837090969
    2. ' break' → logprob: -5.505117893218994
    3. '                   ' → logprob: -6.880117893218994
    4. '                       ' → logprob: -12.255117416381836
    5. '               ' → logprob: -13.130117416381836
    6. '
' → logprob: -13.755117416381836
    7. '                    ' → logprob: -14.005117416381836
    8. '                           ' → logprob: -14.505117416381836
    9. '	break' → logprob: -14.630117416381836
    10. '           ' → logprob: -15.380117416381836

Token 1153: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004612757358700037
    2. 'else' → logprob: -5.879612922668457
    3. ' else' → logprob: -6.504612922668457
    4. '           ' → logprob: -9.379612922668457
    5. '                   ' → logprob: -9.629612922668457
    6. '<|end|>' → logprob: -9.629612922668457
    7. '                ' → logprob: -10.379612922668457
    8. '              ' → logprob: -10.629612922668457
    9. '       ' → logprob: -11.504612922668457
    10. '```' → logprob: -11.879612922668457

Token 1154: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18183238804340363
    2. '           ' → logprob: -2.0568323135375977
    3. 'else' → logprob: -3.3068323135375977
    4. ' else' → logprob: -7.431832313537598
    5. '```' → logprob: -7.681832313537598
    6. '                   ' → logprob: -8.306832313537598
    7. 'f' → logprob: -9.056832313537598
    8. '          ' → logprob: -9.181832313537598
    9. '              ' → logprob: -9.431832313537598
    10. '       ' → logprob: -9.556832313537598

Token 1155: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.27602872252464294
    2. '           ' → logprob: -1.5260287523269653
    3. ' else' → logprob: -3.776028633117676
    4. '               ' → logprob: -7.276028633117676
    5. 'f' → logprob: -9.276028633117676
    6. '       ' → logprob: -9.651028633117676
    7. '   ' → logprob: -10.526028633117676
    8. '                   ' → logprob: -11.526028633117676
    9. '             ' → logprob: -13.276028633117676
    10. '          ' → logprob: -13.276028633117676

Token 1156: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002116831485182047
    2. ' f' → logprob: -6.502116680145264
    3. ':
' → logprob: -8.502117156982422
    4. '                    ' → logprob: -9.377117156982422
    5. '   ' → logprob: -9.502117156982422
    6. '
' → logprob: -9.752117156982422
    7. '                       ' → logprob: -10.252117156982422
    8. '               ' → logprob: -10.377117156982422
    9. '                  ' → logprob: -10.502117156982422
    10. '				' → logprob: -10.752117156982422

Token 1157: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03802163526415825
    2. 'f' → logprob: -3.7880215644836426
    3. ' f' → logprob: -4.538021564483643
    4. ' ' → logprob: -6.913021564483643
    5. '	f' → logprob: -7.663021564483643
    6. '               ' → logprob: -7.663021564483643
    7. '                    ' → logprob: -7.663021564483643
    8. '   ' → logprob: -7.913021564483643
    9. '				' → logprob: -8.1630220413208
    10. '                       ' → logprob: -9.0380220413208

Token 1158: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.007064862176775932
    2. '                   ' → logprob: -5.0070648193359375
    3. ' f' → logprob: -8.132064819335938
    4. '               ' → logprob: -10.882064819335938
    5. '	f' → logprob: -11.007064819335938
    6. '                       ' → logprob: -11.507064819335938
    7. '           ' → logprob: -12.757064819335938
    8. '       ' → logprob: -12.757064819335938
    9. '   ' → logprob: -12.882064819335938
    10. '                  ' → logprob: -14.632064819335938

Token 1159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164102263748646
    2. ' =' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.264163970947266
    4. '                   ' → logprob: -15.764163970947266
    5. '               ' → logprob: -17.014163970947266
    6. '+=' → logprob: -17.014163970947266
    7. '=True' → logprob: -17.389163970947266
    8. '           ' → logprob: -17.889163970947266
    9. '=
' → logprob: -18.139163970947266
    10. ' +=' → logprob: -18.264163970947266

Token 1160: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028048718813806772
    2. ' ' → logprob: -5.877804756164551
    3. 'True' → logprob: -17.752805709838867
    4. ' True' → logprob: -18.127805709838867
    5. '   ' → logprob: -18.752805709838867
    6. '0' → logprob: -18.877805709838867
    7. '
' → logprob: -20.252805709838867
    8. ' ' → logprob: -20.252805709838867
    9. '=' → logprob: -20.877805709838867
    10. '           ' → logprob: -21.002805709838867

Token 1161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '           ' → logprob: -18.000003814697266
    4. '   ' → logprob: -18.125003814697266
    5. '                   ' → logprob: -18.750003814697266
    6. '               ' → logprob: -19.500003814697266
    7. '
' → logprob: -19.875003814697266
    8. '0' → logprob: -19.875003814697266
    9. '       ' → logprob: -21.125003814697266
    10. '```' → logprob: -21.125003814697266

Token 1162: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04292896389961243
    2. '               ' → logprob: -3.54292893409729
    3. '<|end|>' → logprob: -4.792929172515869
    4. '				' → logprob: -6.167929172515869
    5. '           ' → logprob: -6.792929172515869
    6. '                       ' → logprob: -8.292928695678711
    7. '       ' → logprob: -8.667928695678711
    8. '                  ' → logprob: -8.917928695678711
    9. '                ' → logprob: -9.167928695678711
    10. '                    ' → logprob: -9.417928695678711

Token 1163: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4068933427333832
    2. '               ' → logprob: -1.2818933725357056
    3. '           ' → logprob: -3.031893253326416
    4. '				' → logprob: -5.781893253326416
    5. '			' → logprob: -6.781893253326416
    6. '		' → logprob: -7.156893253326416
    7. '       ' → logprob: -7.281893253326416
    8. '                       ' → logprob: -7.531893253326416
    9. '                ' → logprob: -8.156893730163574
    10. '	' → logprob: -8.406893730163574

Token 1164: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.043091677129268646
    2. '                   ' → logprob: -3.2930917739868164
    3. ' break' → logprob: -5.293091773986816
    4. '                       ' → logprob: -12.668091773986816
    5. '                    ' → logprob: -12.918091773986816
    6. '```' → logprob: -13.293091773986816
    7. '				' → logprob: -13.668091773986816
    8. '                  ' → logprob: -13.918091773986816
    9. '	break' → logprob: -14.668091773986816
    10. '                     ' → logprob: -14.793091773986816

Token 1165: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1756367712223437e-05
    2. '       ' → logprob: -12.375011444091797
    3. '		' → logprob: -13.250011444091797
    4. '   ' → logprob: -13.500011444091797
    5. '               ' → logprob: -13.500011444091797
    6. '```' → logprob: -14.125011444091797
    7. '          ' → logprob: -14.375011444091797
    8. '
' → logprob: -14.375011444091797
    9. '                   ' → logprob: -15.500011444091797
    10. 'for' → logprob: -15.750011444091797

Token 1166: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.1318875446449965e-05
    2. '       ' → logprob: -10.250041007995605
    3. '
' → logprob: -13.250041007995605
    4. '   ' → logprob: -13.750041007995605
    5. 'if' → logprob: -13.750041007995605
    6. '```' → logprob: -14.750041007995605
    7. '               ' → logprob: -14.875041007995605
    8. 'return' → logprob: -15.125041007995605
    9. '          ' → logprob: -15.250041007995605
    10. 'for' → logprob: -15.500041007995605

Token 1167: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00014132341311778873
    2. '       ' → logprob: -9.125141143798828
    3. 'for' → logprob: -11.500141143798828
    4. '		' → logprob: -11.750141143798828
    5. '   ' → logprob: -12.750141143798828
    6. '
' → logprob: -12.750141143798828
    7. 'return' → logprob: -13.000141143798828
    8. '               ' → logprob: -13.500141143798828
    9. '          ' → logprob: -13.875141143798828
    10. '            
' → logprob: -14.375141143798828

Token 1168: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.38688820600509644
    2. ' f' → logprob: -1.1368882656097412
    3. ' not' → logprob: -11.01188850402832
    4. 'not' → logprob: -14.38688850402832
    5. '   ' → logprob: -16.63688850402832
    6. '	f' → logprob: -17.26188850402832
    7. '(f' → logprob: -18.51188850402832
    8. '    ' → logprob: -18.51188850402832
    9. '           ' → logprob: -18.88688850402832
    10. '       ' → logprob: -19.13688850402832

Token 1169: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012831581756472588
    2. '           ' → logprob: -4.387831687927246
    3. ':
' → logprob: -8.887831687927246
    4. '               ' → logprob: -9.387831687927246
    5. '       ' → logprob: -10.012831687927246
    6. '   ' → logprob: -10.262831687927246
    7. ' :' → logprob: -12.262831687927246
    8. '=' → logprob: -12.887831687927246
    9. ',' → logprob: -13.137831687927246
    10. '                   ' → logprob: -13.262831687927246

Token 1170: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26215440034866333
    2. ' break' → logprob: -2.1371543407440186
    3. '               ' → logprob: -2.2621543407440186
    4. 'break' → logprob: -5.887154579162598
    5. '            ' → logprob: -6.012154579162598
    6. '	       ' → logprob: -7.012154579162598
    7. '		' → logprob: -7.262154579162598
    8. '	           ' → logprob: -7.512154579162598
    9. '                   ' → logprob: -8.762154579162598
    10. '	break' → logprob: -8.887154579162598

Token 1171: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007721725385636091
    2. '       ' → logprob: -4.882721900939941
    3. '​' → logprob: -10.632721900939941
    4. '
' → logprob: -11.132721900939941
    5. '          ' → logprob: -11.257721900939941
    6. '         ' → logprob: -11.757721900939941
    7. '        
' → logprob: -11.882721900939941
    8. '   ' → logprob: -11.882721900939941
    9. '	   ' → logprob: -12.132721900939941
    10. '	       ' → logprob: -12.132721900939941

Token 1172: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013332172529771924
    2. '       ' → logprob: -6.626333236694336
    3. '          ' → logprob: -13.501333236694336
    4. '```' → logprob: -13.501333236694336
    5. 'for' → logprob: -13.626333236694336
    6. '         ' → logprob: -14.001333236694336
    7. '​' → logprob: -14.376333236694336
    8. '   ' → logprob: -14.876333236694336
    9. '        ' → logprob: -15.251333236694336
    10. '	   ' → logprob: -15.251333236694336

Token 1173: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2696612477302551
    2. '       ' → logprob: -2.0196611881256104
    3. 'for' (adapté à ' for') → logprob: -2.2696611881256104
    4. '   ' → logprob: -8.644660949707031
    5. ' for' → logprob: -9.019660949707031
    6. '               ' → logprob: -12.019660949707031
    7. '	for' → logprob: -13.019660949707031
    8. '     ' → logprob: -13.519660949707031
    9. '         ' → logprob: -13.519660949707031
    10. '	   ' → logprob: -13.894660949707031

Token 1174: ' l' (ID: 305)
  Prédit: 'lc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lc' → logprob: -0.029980262741446495
    2. 'l' → logprob: -3.529980182647705
    3. '   ' → logprob: -9.404980659484863
    4. '```' → logprob: -10.279980659484863
    5. 'for' → logprob: -10.654980659484863
    6. 'rc' → logprob: -11.279980659484863
    7. '_l' → logprob: -11.279980659484863
    8. '       ' → logprob: -11.654980659484863
    9. '           ' → logprob: -11.904980659484863
    10. ' l' → logprob: -12.029980659484863

Token 1175: 'cod' (ID: 38134)
  Prédit: 'cod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cod' → logprob: -1.1517960956552997e-05
    2. '_cod' → logprob: -11.875011444091797
    3. 'for' → logprob: -14.125011444091797
    4. '```' → logprob: -14.375011444091797
    5. 'sc' → logprob: -14.500011444091797
    6. 'c' → logprob: -15.000011444091797
    7. 'pc' → logprob: -15.375011444091797
    8. '
' → logprob: -15.375011444091797
    9. 'code' → logprob: -15.625011444091797
    10. '=' → logprob: -15.750011444091797

Token 1176: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16022463142871857
    2. 'in' → logprob: -1.9102246761322021
    3. '	in' → logprob: -15.035224914550781
    4. ' ' → logprob: -16.41022491455078
    5. '```' → logprob: -17.41022491455078
    6. '_' → logprob: -17.66022491455078
    7. '_in' → logprob: -17.66022491455078
    8. 'import' → logprob: -17.91022491455078
    9. '   ' → logprob: -18.28522491455078
    10. ' ' → logprob: -18.53522491455078

Token 1177: ' ls' (ID: 41498)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ls' → logprob: -1.676292231422849e-05
    2. 'rs' → logprob: -11.250017166137695
    3. ' ls' → logprob: -12.500017166137695
    4. '(ls' → logprob: -17.250017166137695
    5. 'l' → logprob: -19.125017166137695
    6. 'lsx' → logprob: -19.500017166137695
    7. 'lc' → logprob: -19.625017166137695
    8. '_ls' → logprob: -20.375017166137695
    9. 'lsi' → logprob: -20.375017166137695
    10. '```' → logprob: -20.625017166137695

Token 1178: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -1.9981420336989686e-05
    2. '_iterator' → logprob: -11.500020027160645
    3. 'iter' → logprob: -12.250020027160645
    4. '_ITER' → logprob: -14.125020027160645
    5. ':' → logprob: -14.500020027160645
    6. ' in' → logprob: -14.750020027160645
    7. 'Iter' → logprob: -14.750020027160645
    8. '_itr' → logprob: -14.750020027160645
    9. '_iters' → logprob: -14.875020027160645
    10. '```' → logprob: -15.125020027160645

Token 1179: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04879378527402878
    2. '():
' → logprob: -3.0487937927246094
    3. '()' → logprob: -8.54879379272461
    4. '():
' → logprob: -12.17379379272461
    5. '()>' → logprob: -12.79879379272461
    6. '():

' → logprob: -13.04879379272461
    7. ' ():' → logprob: -14.17379379272461
    8. '();' → logprob: -14.54879379272461
    9. '()-' → logprob: -14.92379379272461
    10. '()
' → logprob: -15.17379379272461

Token 1180: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018701400607824326
    2. '():
' → logprob: -5.268701553344727
    3. '```' → logprob: -5.393701553344727
    4. '():' → logprob: -5.643701553344727
    5. '()' → logprob: -6.518701553344727
    6. ':' → logprob: -6.518701553344727
    7. ':
' → logprob: -6.893701553344727
    8. '(' → logprob: -7.518701553344727
    9. '           ' → logprob: -8.393701553344727
    10. ' ()' → logprob: -9.768701553344727

Token 1181: ' l' (ID: 305)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31795260310173035
    2. ' l' → logprob: -1.3179526329040527
    3. 'l' (adapté à ' l') → logprob: -5.692952632904053
    4. '                   ' → logprob: -6.942952632904053
    5. '           ' → logprob: -9.067952156066895
    6. '                ' → logprob: -9.442952156066895
    7. '	l' → logprob: -9.692952156066895
    8. '              ' → logprob: -10.817952156066895
    9. '```' → logprob: -11.192952156066895
    10. '   ' → logprob: -11.317952156066895

Token 1182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006958796177059412
    2. '               ' → logprob: -5.506958961486816
    3. ' ,' → logprob: -6.631958961486816
    4. ',c' → logprob: -7.381958961486816
    5. 'cod' → logprob: -8.506958961486816
    6. '                   ' → logprob: -8.756958961486816
    7. '                ' → logprob: -8.756958961486816
    8. '           ' → logprob: -9.506958961486816
    9. '```' → logprob: -9.506958961486816
    10. '              ' → logprob: -10.131958961486816

Token 1183: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.061976201832294464
    2. ' i' → logprob: -2.811976194381714
    3. 'l' → logprob: -12.936976432800293
    4. 'cod' → logprob: -13.311976432800293
    5. 'ic' → logprob: -14.061976432800293
    6. '	i' → logprob: -14.311976432800293
    7. '   ' → logprob: -14.686976432800293
    8. 'icode' → logprob: -15.186976432800293
    9. 'code' → logprob: -15.186976432800293
    10. '(i' → logprob: -15.186976432800293

Token 1184: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00033558503491804004
    2. ' =' → logprob: -8.000335693359375
    3. 'in' → logprob: -17.375335693359375
    4. '=
' → logprob: -18.625335693359375
    5. ')' → logprob: -19.000335693359375
    6. '   ' → logprob: -19.125335693359375
    7. ',' → logprob: -19.250335693359375
    8. 'cod' → logprob: -19.625335693359375
    9. '```' → logprob: -19.750335693359375
    10. '=`' → logprob: -20.250335693359375

Token 1185: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.0280383548888494e-06
    2. ' div' → logprob: -13.875000953674316
    3. '<div' → logprob: -18.625001907348633
    4. 'cod' → logprob: -19.750001907348633
    5. '	div' → logprob: -20.125001907348633
    6. 'dev' → logprob: -20.125001907348633
    7. '(div' → logprob: -20.250001907348633
    8. '
' → logprob: -21.250001907348633
    9. '...' → logprob: -21.875001907348633
    10. 'd' → logprob: -22.125001907348633

Token 1186: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -6.034592388459714e-06
    2. 'cod' → logprob: -12.125005722045898
    3. 'mot' → logprob: -15.375005722045898
    4. 'mods' → logprob: -16.3750057220459
    5. '(l' → logprob: -17.0000057220459
    6. 'mol' → logprob: -17.1250057220459
    7. 'mom' → logprob: -17.2500057220459
    8. '(mod' → logprob: -17.2500057220459
    9. 'mo' → logprob: -18.0000057220459
    10. 'omod' → logprob: -18.5000057220459

Token 1187: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.38880980014801025
    2. 'l' → logprob: -1.1388098001480103
    3. 'lc' → logprob: -6.263809680938721
    4. ' l' → logprob: -11.138810157775879
    5. '	l' → logprob: -11.638810157775879
    6. '(' → logprob: -12.013810157775879
    7. 'lcd' → logprob: -13.513810157775879
    8. '-l' → logprob: -14.638810157775879
    9. '(-' → logprob: -14.888810157775879
    10. '(c' → logprob: -14.888810157775879

Token 1188: 'cod' (ID: 38134)
  Prédit: 'cod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cod' → logprob: -9.674858301877975e-05
    2. 'lc' → logprob: -10.000096321105957
    3. '(' → logprob: -11.000096321105957
    4. 'l' → logprob: -11.625096321105957
    5. '(c' → logprob: -11.875096321105957
    6. 'rc' → logprob: -12.000096321105957
    7. 'cot' → logprob: -12.750096321105957
    8. '(l' → logprob: -12.875096321105957
    9. '```' → logprob: -13.000096321105957
    10. 'oc' → logprob: -13.625096321105957

Token 1189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.97155623533763e-05
    2. ' ,' → logprob: -10.125089645385742
    3. '           ' → logprob: -11.125089645385742
    4. '               ' → logprob: -11.250089645385742
    5. '```' → logprob: -12.000089645385742
    6. ',
' → logprob: -12.375089645385742
    7. '(' → logprob: -12.500089645385742
    8. '[' → logprob: -13.000089645385742
    9. ')' → logprob: -13.750089645385742
    10. '                   ' → logprob: -14.500089645385742

Token 1190: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -4.56102097814437e-05
    2. ' base' → logprob: -10.000045776367188
    3. '(base' → logprob: -16.625045776367188
    4. 'code' → logprob: -17.625045776367188
    5. '-base' → logprob: -18.750045776367188
    6. '	base' → logprob: -18.875045776367188
    7. '/base' → logprob: -18.875045776367188
    8. '.base' → logprob: -19.750045776367188
    9. 'cod' → logprob: -20.000045776367188
    10. ';base' → logprob: -20.000045776367188

Token 1191: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -2.558399319241289e-05
    2. '               ' → logprob: -11.125025749206543
    3. ',
' → logprob: -12.125025749206543
    4. ')' → logprob: -13.125025749206543
    5. ' ,' → logprob: -14.125025749206543
    6. '```' → logprob: -14.250025749206543
    7. '           ' → logprob: -14.625025749206543
    8. '                   ' → logprob: -15.250025749206543
    9. '),' → logprob: -15.375025749206543
    10. '[' → logprob: -15.875025749206543

Token 1192: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03838306665420532
    2. '                ' → logprob: -3.5383830070495605
    3. '```' → logprob: -5.6633830070495605
    4. '                   ' → logprob: -6.2883830070495605
    5. ' l' → logprob: -7.1633830070495605
    6. '			' → logprob: -7.7883830070495605
    7. '                               ' → logprob: -7.7883830070495605
    8. '<|end|>' → logprob: -8.163383483886719
    9. ' ' → logprob: -8.413383483886719
    10. '	               ' → logprob: -8.538383483886719

Token 1193: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.9178967475891113
    2. '               ' → logprob: -1.4178967475891113
    3. '                   ' → logprob: -1.4178967475891113
    4. ' l' → logprob: -2.1678967475891113
    5. '           ' → logprob: -7.042896747589111
    6. '                ' → logprob: -8.042896270751953
    7. '                       ' → logprob: -9.292896270751953
    8. '                    ' → logprob: -9.292896270751953
    9. '                  ' → logprob: -9.417896270751953
    10. '```' → logprob: -9.417896270751953

Token 1194: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.18765130639076233
    2. ' *=' → logprob: -1.81265127658844
    3. '*' → logprob: -5.06265115737915
    4. '=' → logprob: -6.68765115737915
    5. '   ' → logprob: -8.937651634216309
    6. ' =' → logprob: -9.312651634216309
    7. '	' → logprob: -11.312651634216309
    8. ' ' → logprob: -11.437651634216309
    9. ' *' → logprob: -11.562651634216309
    10. ')' → logprob: -11.812651634216309

Token 1195: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.547789674485102e-05
    2. ' -' → logprob: -10.250035285949707
    3. '   ' → logprob: -19.750036239624023
    4. '1' → logprob: -20.250036239624023
    5. '```' → logprob: -21.250036239624023
    6. '−' → logprob: -21.500036239624023
    7. '(-' → logprob: -21.750036239624023
    8. '           ' → logprob: -21.750036239624023
    9. '	' → logprob: -21.875036239624023
    10. '`' → logprob: -22.250036239624023

Token 1196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '-' → logprob: -15.125
    3. ' ' → logprob: -17.875
    4. '```' → logprob: -18.25
    5. '<|end|>' → logprob: -18.375
    6. '   ' → logprob: -19.0
    7. ' -' → logprob: -19.875
    8. '...' → logprob: -21.1875
    9. '' → logprob: -21.375
    10. '
' → logprob: -21.375

Token 1197: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008374267257750034
    2. '<|end|>' → logprob: -5.258374214172363
    3. '
' → logprob: -6.008374214172363
    4. '                ' → logprob: -8.883374214172363
    5. '                
' → logprob: -8.883374214172363
    6. '			' → logprob: -9.258374214172363
    7. '           ' → logprob: -9.633374214172363
    8. '              ' → logprob: -9.883374214172363
    9. '                   ' → logprob: -10.008374214172363
    10. '```' → logprob: -10.258374214172363

Token 1198: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13919611275196075
    2. '<|end|>' → logprob: -3.3891961574554443
    3. '                ' → logprob: -3.7641961574554443
    4. '                   ' → logprob: -4.389195919036865
    5. '                
' → logprob: -4.389195919036865
    6. '[' → logprob: -5.014195919036865
    7. '                    
' → logprob: -5.139195919036865
    8. ' ' → logprob: -5.139195919036865
    9. '			' → logprob: -5.514195919036865
    10. ' 
' → logprob: -5.514195919036865

Token 1199: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1817089468240738
    2. 'if' (adapté à ' if') → logprob: -1.9317089319229126
    3. ' if' → logprob: -3.931709051132202
    4. '                   ' → logprob: -6.806708812713623
    5. '           ' → logprob: -8.306709289550781
    6. '```' → logprob: -8.806709289550781
    7. 'i' → logprob: -10.431709289550781
    8. 'f' → logprob: -10.556709289550781
    9. '              ' → logprob: -10.681709289550781
    10. '                ' → logprob: -10.681709289550781

Token 1200: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033558503491804004
    2. ' i' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.500335693359375
    4. '...' → logprob: -17.875335693359375
    5. '(i' → logprob: -17.875335693359375
    6. '           ' → logprob: -18.125335693359375
    7. '  ' → logprob: -18.875335693359375
    8. '`' → logprob: -18.875335693359375
    9. '                   ' → logprob: -18.875335693359375
    10. '               ' → logprob: -19.000335693359375

Token 1201: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019537294283509254
    2. 'in' → logprob: -6.251953601837158
    3. ' not' → logprob: -11.376954078674316
    4. '<|end|>' → logprob: -11.376954078674316
    5. 'In' → logprob: -14.001954078674316
    6. ' ' → logprob: -15.251954078674316
    7. '<|end|>' → logprob: -15.376954078674316
    8. ' ' → logprob: -15.376954078674316
    9. 'not' → logprob: -16.001953125
    10. ' is' → logprob: -16.001953125

Token 1202: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -8.061054359131958e-06
    2. ' d' → logprob: -11.750007629394531
    3. '
' → logprob: -17.12500762939453
    4. '<|end|>' → logprob: -17.50000762939453
    5. '           ' → logprob: -17.62500762939453
    6. '[' → logprob: -18.00000762939453
    7. '   ' → logprob: -18.62500762939453
    8. '...' → logprob: -18.87500762939453
    9. '```' → logprob: -19.25000762939453
    10. ')d' → logprob: -19.37500762939453

Token 1203: 'set' (ID: 977)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3869113028049469
    2. 'set' → logprob: -1.1369112730026245
    3. 'et' → logprob: -10.636911392211914
    4. 's' → logprob: -11.386911392211914
    5. '{' → logprob: -14.261911392211914
    6. 'def' → logprob: -14.386911392211914
    7. 'sets' → logprob: -14.511911392211914
    8. '(set' → logprob: -14.511911392211914
    9. ' d' → logprob: -14.636911392211914
    10. 'f' → logprob: -14.761911392211914

Token 1204: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8026387095451355
    2. ':' → logprob: -0.9276387095451355
    3. ':
' → logprob: -1.9276387691497803
    4. '               ' → logprob: -5.302638530731201
    5. '<|end|>' → logprob: -5.802638530731201
    6. ',' → logprob: -6.677638530731201
    7. '):
' → logprob: -7.552638530731201
    8. '           ' → logprob: -7.927638530731201
    9. '                  ' → logprob: -8.80263900756836
    10. '==' → logprob: -8.92763900756836

Token 1205: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02784089185297489
    2. 'd' → logprob: -3.6528408527374268
    3. '```' → logprob: -7.402841091156006
    4. ' d' → logprob: -8.027840614318848
    5. '   ' → logprob: -8.152840614318848
    6. '               ' → logprob: -8.777840614318848
    7. '                  ' → logprob: -10.027840614318848
    8. '       ' → logprob: -10.527840614318848
    9. '                       ' → logprob: -10.652840614318848
    10. '           ' → logprob: -10.777840614318848

Token 1206: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0032452051527798176
    2. '                   ' → logprob: -6.0032453536987305
    3. ' d' → logprob: -7.3782453536987305
    4. '               ' → logprob: -9.50324535369873
    5. '           ' → logprob: -10.75324535369873
    6. '```' → logprob: -11.25324535369873
    7. '       ' → logprob: -11.50324535369873
    8. '   ' → logprob: -11.50324535369873
    9. ' ' → logprob: -13.12824535369873
    10. '                  ' → logprob: -13.25324535369873

Token 1207: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -2.522638169466518e-05
    2. 'et' → logprob: -10.625024795532227
    3. 's' → logprob: -14.625024795532227
    4. 'd' → logprob: -15.625024795532227
    5. 'se' → logprob: -16.500024795532227
    6. ' set' → logprob: -16.875024795532227
    7. 'sets' → logprob: -17.250024795532227
    8. '{' → logprob: -18.375024795532227
    9. '```' → logprob: -19.000024795532227
    10. 'def' → logprob: -19.125024795532227

Token 1208: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.005267907399684191
    2. 'remove' → logprob: -5.255268096923828
    3. '.' → logprob: -10.505268096923828
    4. '.add' → logprob: -12.380268096923828
    5. '                   ' → logprob: -14.380268096923828
    6. '               ' → logprob: -14.880268096923828
    7. '```' → logprob: -14.880268096923828
    8. '	remove' → logprob: -15.255268096923828
    9. '           ' → logprob: -15.380268096923828
    10. '   ' → logprob: -15.505268096923828

Token 1209: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.704273118884885e-07
    2. 'i' → logprob: -14.375000953674316
    3. '```' → logprob: -19.25
    4. '[i' → logprob: -19.875
    5. '{i' → logprob: -20.0
    6. '(' → logprob: -20.25
    7. '<|end|>' → logprob: -20.625
    8. ' i' → logprob: -20.75
    9. '(
' → logprob: -21.0
    10. ' (' → logprob: -21.0

Token 1210: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3000112771987915
    2. '                   ' → logprob: -2.300011157989502
    3. ')
' → logprob: -2.425011157989502
    4. '               ' → logprob: -3.050011157989502
    5. '(i' → logprob: -4.300011157989502
    6. ')i' → logprob: -5.425011157989502
    7. 'i' → logprob: -6.175011157989502
    8. '                       ' → logprob: -6.925011157989502
    9. '```' → logprob: -7.425011157989502
    10. '           ' → logprob: -8.17501163482666

Token 1211: '               ' (ID: 506)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010792183689773083
    2. '                   ' → logprob: -4.760792255401611
    3. '```' → logprob: -6.385792255401611
    4. '(i' → logprob: -8.010791778564453
    5. '               ' → logprob: -10.010791778564453
    6. ' i' → logprob: -10.010791778564453
    7. '                       ' → logprob: -10.885791778564453
    8. '                  ' → logprob: -11.510791778564453
    9. '           ' → logprob: -11.885791778564453
    10. '                               ' → logprob: -12.010791778564453

Token 1212: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.00047714399988763034
    2. ' elif' → logprob: -8.375476837158203
    3. '                   ' → logprob: -9.250476837158203
    4. 'else' → logprob: -9.250476837158203
    5. '               ' → logprob: -9.875476837158203
    6. '```' → logprob: -13.500476837158203
    7. '           ' → logprob: -13.750476837158203
    8. 'elseif' → logprob: -15.875476837158203
    9. '                ' → logprob: -16.375476837158203
    10. '#elif' → logprob: -16.750476837158203

Token 1213: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.023248042911291122
    2. ' cur' → logprob: -3.7732479572296143
    3. '                   ' → logprob: -13.648247718811035
    4. '               ' → logprob: -13.898247718811035
    5. '	cur' → logprob: -15.523247718811035
    6. '           ' → logprob: -16.27324867248535
    7. '   ' → logprob: -16.27324867248535
    8. '(cur' → logprob: -16.64824867248535
    9. '[cur' → logprob: -17.52324867248535
    10. '```' → logprob: -17.77324867248535

Token 1214: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.055080413818359375
    2. '<' → logprob: -2.9300804138183594
    3. ' >' → logprob: -8.80508041381836
    4. '>' → logprob: -10.80508041381836
    5. ' ' → logprob: -12.05508041381836
    6. '<int' → logprob: -12.30508041381836
    7. ' ' → logprob: -12.93008041381836
    8. '<class' → logprob: -13.05508041381836
    9. '```' → logprob: -13.18008041381836
    10. '<|end|>' → logprob: -13.55508041381836

Token 1215: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.12692853808403015
    2. ' l' → logprob: -2.1269285678863525
    3. '                   ' → logprob: -15.251928329467773
    4. '	l' → logprob: -16.751928329467773
    5. '               ' → logprob: -17.126928329467773
    6. '           ' → logprob: -17.751928329467773
    7. '```' → logprob: -17.751928329467773
    8. ' ' → logprob: -17.751928329467773
    9. '<|end|>' → logprob: -18.376928329467773
    10. 'code' → logprob: -18.626928329467773

Token 1216: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.39325717091560364
    2. ':' → logprob: -1.3932571411132812
    3. ':
' → logprob: -2.6432571411132812
    4. '               ' → logprob: -5.518257141113281
    5. '                       ' → logprob: -8.143257141113281
    6. '                    ' → logprob: -8.268257141113281
    7. '                  ' → logprob: -8.768257141113281
    8. ',' → logprob: -8.768257141113281
    9. '```' → logprob: -8.893257141113281
    10. ' :' → logprob: -9.393257141113281

Token 1217: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010509932413697243
    2. 'tot' → logprob: -4.635509967803955
    3. ' tot' → logprob: -7.760509967803955
    4. '                       ' → logprob: -9.260509490966797
    5. '                    ' → logprob: -9.385509490966797
    6. '               ' → logprob: -10.260509490966797
    7. '                  ' → logprob: -10.260509490966797
    8. '```' → logprob: -10.385509490966797
    9. '                     ' → logprob: -11.635509490966797
    10. '   ' → logprob: -11.635509490966797

Token 1218: ' tot' (ID: 2417)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tot' (adapté à ' tot') → logprob: -0.046477582305669785
    2. ' tot' → logprob: -3.2964775562286377
    3. '                   ' → logprob: -4.796477794647217
    4. 'total' → logprob: -9.921477317810059
    5. '                           ' → logprob: -10.421477317810059
    6. '               ' → logprob: -10.796477317810059
    7. '                       ' → logprob: -11.296477317810059
    8. ' total' → logprob: -11.796477317810059
    9. '```' → logprob: -12.046477317810059
    10. '           ' → logprob: -12.796477317810059

Token 1219: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.32373878359794617
    2. '+=' → logprob: -1.3237388134002686
    3. '+' → logprob: -5.1987385749816895
    4. '                   ' → logprob: -6.1987385749816895
    5. '                    ' → logprob: -6.6987385749816895
    6. ' +' → logprob: -6.8237385749816895
    7. '```' → logprob: -8.073739051818848
    8. '                ' → logprob: -9.573739051818848
    9. '=' → logprob: -10.573739051818848
    10. '                       ' → logprob: -10.823739051818848

Token 1220: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.10024376213550568
    2. 'l' → logprob: -2.3502438068389893
    3. 'cur' → logprob: -10.35024356842041
    4. ' cur' → logprob: -12.47524356842041
    5. '	l' → logprob: -15.22524356842041
    6. '(l' → logprob: -15.47524356842041
    7. '```' → logprob: -15.85024356842041
    8. '   ' → logprob: -16.100244522094727
    9. ' ' → logprob: -16.100244522094727
    10. ' (' → logprob: -16.350244522094727

Token 1221: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014183246530592442
    2. '-' → logprob: -4.264183044433594
    3. '```' → logprob: -11.639183044433594
    4. '-cur' → logprob: -12.264183044433594
    5. ' ' → logprob: -13.264183044433594
    6. '<|end|>' → logprob: -13.764183044433594
    7. '[cur' → logprob: -14.014183044433594
    8. 'cur' → logprob: -14.764183044433594
    9. ' ' → logprob: -15.014183044433594
    10. '                   ' → logprob: -15.139183044433594

Token 1222: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0001234428636962548
    2. ' cur' → logprob: -9.000123023986816
    3. '```' → logprob: -20.250123977661133
    4. '[cur' → logprob: -20.375123977661133
    5. '	cur' → logprob: -20.750123977661133
    6. '_cur' → logprob: -21.125123977661133
    7. '(cur' → logprob: -21.250123977661133
    8. '.cur' → logprob: -21.500123977661133
    9. '-cur' → logprob: -21.875123977661133
    10. 'Cur' → logprob: -23.750123977661133

Token 1223: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011122355936095119
    2. '<|end|>' → logprob: -8.12611198425293
    3. '```' → logprob: -8.25111198425293
    4. '               ' → logprob: -8.62611198425293
    5. '                       ' → logprob: -9.62611198425293
    6. '           ' → logprob: -9.62611198425293
    7. '                    ' → logprob: -9.62611198425293
    8. '                  ' → logprob: -10.00111198425293
    9. '       ' → logprob: -10.50111198425293
    10. '                    
' → logprob: -10.87611198425293

Token 1224: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0010743727907538414
    2. 'break' → logprob: -7.126074314117432
    3. '```' → logprob: -9.87607479095459
    4. '                    ' → logprob: -10.37607479095459
    5. '               ' → logprob: -10.50107479095459
    6. '                       ' → logprob: -10.50107479095459
    7. '   ' → logprob: -10.75107479095459
    8. '                  ' → logprob: -10.87607479095459
    9. '<|end|>' → logprob: -11.00107479095459
    10. ' ' → logprob: -11.25107479095459

Token 1225: ' d' (ID: 272)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.00022249009634833783
    2. 'd' (adapté à ' d') → logprob: -9.000222206115723
    3. '                   ' → logprob: -9.250222206115723
    4. '               ' → logprob: -13.375222206115723
    5. ' cur' → logprob: -14.000222206115723
    6. 'break' → logprob: -16.12522315979004
    7. '                       ' → logprob: -16.25022315979004
    8. '```' → logprob: -16.37522315979004
    9. '``' → logprob: -16.50022315979004
    10. '   ' → logprob: -16.50022315979004

Token 1226: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.018151700496673584
    2. 'cur' → logprob: -4.018151760101318
    3. 'et' → logprob: -14.01815128326416
    4. 's' → logprob: -14.89315128326416
    5. 'c' → logprob: -15.76815128326416
    6. 'd' → logprob: -15.89315128326416
    7. 'sets' → logprob: -16.018152236938477
    8. 't' → logprob: -17.018152236938477
    9. '   ' → logprob: -17.143152236938477
    10. 'Set' → logprob: -17.518152236938477

Token 1227: '.add' (ID: 1950)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.6677325367927551
    2. '=' → logprob: -0.9177325367927551
    3. '.add' → logprob: -2.9177324771881104
    4. ' =' → logprob: -4.2927327156066895
    5. '+=' → logprob: -5.0427327156066895
    6. '                   ' → logprob: -5.1677327156066895
    7. ' add' → logprob: -5.7927327156066895
    8. '_add' → logprob: -6.4177327156066895
    9. '           ' → logprob: -6.7927327156066895
    10. '               ' → logprob: -7.6677327156066895

Token 1228: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00026646157493814826
    2. '(i' → logprob: -8.250266075134277
    3. ' i' → logprob: -12.500266075134277
    4. '                   ' → logprob: -13.625266075134277
    5. '(' → logprob: -16.625267028808594
    6. '0' → logprob: -16.750267028808594
    7. '           ' → logprob: -16.875267028808594
    8. '               ' → logprob: -17.375267028808594
    9. '```' → logprob: -17.500267028808594
    10. ',i' → logprob: -17.750267028808594

Token 1229: ')
' (ID: 446)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.30884259939193726
    2. ',' → logprob: -2.183842658996582
    3. '                   ' → logprob: -2.308842658996582
    4. ',i' → logprob: -3.058842658996582
    5. '(i' → logprob: -5.558842658996582
    6. ' i' → logprob: -6.308842658996582
    7. '```' → logprob: -8.308842658996582
    8. '                       ' → logprob: -8.683842658996582
    9. ')' → logprob: -8.683842658996582
    10. '               ' → logprob: -9.308842658996582

Token 1230: '                   ' (ID: 699)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.01633956842124462
    2. '                   ' → logprob: -4.2663397789001465
    3. ' cur' → logprob: -6.1413397789001465
    4. '```' → logprob: -11.891339302062988
    5. '               ' → logprob: -12.641339302062988
    6. '[cur' → logprob: -13.391339302062988
    7. ' ' → logprob: -13.641339302062988
    8. '_cur' → logprob: -13.641339302062988
    9. '	cur' → logprob: -13.641339302062988
    10. '           ' → logprob: -13.891339302062988

Token 1231: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.0002557369298301637
    2. '                   ' → logprob: -8.750255584716797
    3. ' cur' → logprob: -9.250255584716797
    4. '               ' → logprob: -14.250255584716797
    5. '           ' → logprob: -15.375255584716797
    6. '   ' → logprob: -16.750255584716797
    7. '                       ' → logprob: -17.750255584716797
    8. '	cur' → logprob: -17.875255584716797
    9. '                  ' → logprob: -18.125255584716797
    10. '                           ' → logprob: -18.625255584716797

Token 1232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014184542931616306
    2. ' =' → logprob: -4.264184474945068
    3. '+=' → logprob: -11.889184951782227
    4. '=
' → logprob: -12.139184951782227
    5. ',' → logprob: -12.264184951782227
    6. '                   ' → logprob: -13.264184951782227
    7. ' +=' → logprob: -14.389184951782227
    8. '<|end|>' → logprob: -15.014184951782227
    9. '=True' → logprob: -15.514184951782227
    10. '               ' → logprob: -15.514184951782227

Token 1233: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.001170460251159966
    2. ' l' → logprob: -6.751170635223389
    3. '           ' → logprob: -15.75117015838623
    4. '	l' → logprob: -16.251171112060547
    5. '                   ' → logprob: -16.501171112060547
    6. '               ' → logprob: -18.626171112060547
    7. '   ' → logprob: -19.376171112060547
    8. '       ' → logprob: -20.876171112060547
    9. '            ' → logprob: -21.001171112060547
    10. '```' → logprob: -21.251171112060547

Token 1234: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00042268994729965925
    2. '				' → logprob: -9.000422477722168
    3. '
' → logprob: -9.375422477722168
    4. '               ' → logprob: -9.500422477722168
    5. '                       ' → logprob: -10.625422477722168
    6. '           ' → logprob: -10.750422477722168
    7. '		           ' → logprob: -11.250422477722168
    8. '<|end|>' → logprob: -11.250422477722168
    9. '                  ' → logprob: -11.375422477722168
    10. ',' → logprob: -11.500422477722168

Token 1235: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010364587418735027
    2. 'break' → logprob: -4.635364532470703
    3. '               ' → logprob: -8.135364532470703
    4. '
' → logprob: -9.260364532470703
    5. '           ' → logprob: -9.760364532470703
    6. '                       ' → logprob: -10.385364532470703
    7. '   ' → logprob: -10.635364532470703
    8. ' break' → logprob: -10.885364532470703
    9. '                           ' → logprob: -11.260364532470703
    10. '				' → logprob: -11.260364532470703

Token 1236: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.03064940869808197
    2. ' break' → logprob: -3.530649423599243
    3. '                   ' → logprob: -7.030649185180664
    4. '                           ' → logprob: -12.530649185180664
    5. '               ' → logprob: -12.780649185180664
    6. '           ' → logprob: -13.030649185180664
    7. '                       ' → logprob: -13.530649185180664
    8. '	break' → logprob: -13.780649185180664
    9. '   ' → logprob: -14.155649185180664
    10. '_break' → logprob: -14.405649185180664

Token 1237: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.057112060487270355
    2. '
' → logprob: -3.557111978530884
    3. '           ' → logprob: -4.182112216949463
    4. '<|end|>' → logprob: -4.932112216949463
    5. '                   ' → logprob: -6.682112216949463
    6. '   ' → logprob: -6.932112216949463
    7. '       ' → logprob: -7.307112216949463
    8. '<|end|>' → logprob: -8.307111740112305
    9. ' ' → logprob: -8.432111740112305
    10. '```' → logprob: -8.557111740112305

Token 1238: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4429277777671814
    2. 'else' → logprob: -1.1929278373718262
    3. '           ' → logprob: -3.317927837371826
    4. '                   ' → logprob: -4.067927837371826
    5. ' else' → logprob: -7.067927837371826
    6. '       ' → logprob: -8.817927360534668
    7. '   ' → logprob: -10.192927360534668
    8. '              ' → logprob: -10.692927360534668
    9. '             ' → logprob: -10.942927360534668
    10. '                       ' → logprob: -10.942927360534668

Token 1239: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.04284525662660599
    2. '           ' → logprob: -3.5428452491760254
    3. '               ' → logprob: -4.417845249176025
    4. ' else' → logprob: -7.292845249176025
    5. '   ' → logprob: -8.917845726013184
    6. '                   ' → logprob: -9.542845726013184
    7. '       ' → logprob: -10.042845726013184
    8. '             ' → logprob: -12.292845726013184
    9. '         ' → logprob: -12.667845726013184
    10. '              ' → logprob: -12.792845726013184

Token 1240: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16662053763866425
    2. ':' → logprob: -2.0416204929351807
    3. ':
' → logprob: -3.7916204929351807
    4. '```' → logprob: -8.416620254516602
    5. '               ' → logprob: -8.666620254516602
    6. '                       ' → logprob: -8.666620254516602
    7. '                    ' → logprob: -8.791620254516602
    8. '           ' → logprob: -9.291620254516602
    9. '                  ' → logprob: -9.291620254516602
    10. '                     ' → logprob: -10.041620254516602

Token 1241: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011910604080185294
    2. 'f' → logprob: -7.876191139221191
    3. ' f' → logprob: -8.376191139221191
    4. '               ' → logprob: -9.251191139221191
    5. '                       ' → logprob: -9.376191139221191
    6. '				' → logprob: -9.501191139221191
    7. '           ' → logprob: -9.501191139221191
    8. '		           ' → logprob: -9.626191139221191
    9. '       ' → logprob: -10.376191139221191
    10. '   ' → logprob: -10.626191139221191

Token 1242: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.002529052784666419
    2. '                   ' → logprob: -6.502529144287109
    3. ' f' → logprob: -7.002529144287109
    4. '               ' → logprob: -10.12752914428711
    5. '           ' → logprob: -10.50252914428711
    6. '   ' → logprob: -11.00252914428711
    7. '       ' → logprob: -11.00252914428711
    8. '	f' → logprob: -11.75252914428711
    9. '                       ' → logprob: -12.75252914428711
    10. '                  ' → logprob: -13.62752914428711

Token 1243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3881323039531708
    2. ' =' → logprob: -1.1381323337554932
    3. '                   ' → logprob: -6.763132095336914
    4. '               ' → logprob: -9.638132095336914
    5. '           ' → logprob: -11.013132095336914
    6. '                       ' → logprob: -12.388132095336914
    7. ':' → logprob: -12.513132095336914
    8. '       ' → logprob: -12.763132095336914
    9. '                ' → logprob: -12.888132095336914
    10. '   ' → logprob: -13.138132095336914

Token 1244: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00861468818038702
    2. ' ' → logprob: -4.758614540100098
    3. '   ' → logprob: -16.758615493774414
    4. '0' → logprob: -16.883615493774414
    5. '           ' → logprob: -18.133615493774414
    6. '
' → logprob: -18.508615493774414
    7. '                   ' → logprob: -18.633615493774414
    8. '               ' → logprob: -19.133615493774414
    9. ' ' → logprob: -19.883615493774414
    10. '```' → logprob: -19.883615493774414

Token 1245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -12.000006675720215
    3. '0' → logprob: -14.000006675720215
    4. '   ' → logprob: -17.50000762939453
    5. '```' → logprob: -19.12500762939453
    6. '           ' → logprob: -19.37500762939453
    7. '
' → logprob: -19.62500762939453
    8. '  ' → logprob: -20.37500762939453
    9. 'True' → logprob: -20.75000762939453
    10. '               ' → logprob: -20.75000762939453

Token 1246: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007718305569142103
    2. '           ' → logprob: -5.132718086242676
    3. '               ' → logprob: -7.132718086242676
    4. '				' → logprob: -7.632718086242676
    5. '                       ' → logprob: -8.507718086242676
    6. '		' → logprob: -9.257718086242676
    7. '		           ' → logprob: -9.382718086242676
    8. '       ' → logprob: -11.007718086242676
    9. '			       ' → logprob: -11.257718086242676
    10. '                  ' → logprob: -11.257718086242676

Token 1247: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010842891409993172
    2. '               ' → logprob: -5.635842800140381
    3. '           ' → logprob: -5.885842800140381
    4. '				' → logprob: -5.885842800140381
    5. '                       ' → logprob: -7.510842800140381
    6. '       ' → logprob: -8.510843276977539
    7. '                  ' → logprob: -8.760843276977539
    8. '   ' → logprob: -8.885843276977539
    9. '
' → logprob: -9.010843276977539
    10. '                ' → logprob: -9.260843276977539

Token 1248: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.015652572736144066
    2. ' break' → logprob: -4.265652656555176
    3. '                   ' → logprob: -6.515652656555176
    4. '                       ' → logprob: -12.765652656555176
    5. '                    ' → logprob: -13.515652656555176
    6. '               ' → logprob: -13.765652656555176
    7. '	break' → logprob: -14.140652656555176
    8. '                  ' → logprob: -14.390652656555176
    9. '```' → logprob: -15.140652656555176
    10. '                     ' → logprob: -15.390652656555176

Token 1249: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004612935590557754
    2. '		' → logprob: -8.12546157836914
    3. '
' → logprob: -9.37546157836914
    4. '       ' → logprob: -10.25046157836914
    5. '   ' → logprob: -11.12546157836914
    6. '<|end|>' → logprob: -11.75046157836914
    7. '	       ' → logprob: -11.87546157836914
    8. '               ' → logprob: -13.37546157836914
    9. '	' → logprob: -13.37546157836914
    10. '	   ' → logprob: -13.50046157836914

Token 1250: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020374519750475883
    2. '		' → logprob: -4.020374298095703
    3. '       ' → logprob: -7.270374298095703
    4. '   ' → logprob: -7.645374298095703
    5. '	       ' → logprob: -8.020374298095703
    6. '
' → logprob: -8.645374298095703
    7. '<|end|>' → logprob: -8.895374298095703
    8. '	return' → logprob: -9.270374298095703
    9. 'return' → logprob: -9.395374298095703
    10. '	   ' → logprob: -9.645374298095703

Token 1251: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.868328920158092e-05
    2. '       ' → logprob: -11.250028610229492
    3. 'if' (adapté à ' if') → logprob: -11.750028610229492
    4. '   ' → logprob: -13.125028610229492
    5. 'return' → logprob: -13.250028610229492
    6. '               ' → logprob: -13.875028610229492
    7. ' if' → logprob: -14.250028610229492
    8. '		' → logprob: -14.500028610229492
    9. '	       ' → logprob: -14.500028610229492
    10. '<|end|>' → logprob: -14.500028610229492

Token 1252: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1515161693096161
    2. ' f' → logprob: -2.2765161991119385
    3. 'False' → logprob: -3.6515161991119385
    4. ' not' → logprob: -5.026515960693359
    5. ' False' → logprob: -5.526515960693359
    6. 'not' → logprob: -7.026515960693359
    7. 'True' → logprob: -8.27651596069336
    8. ' True' → logprob: -8.90151596069336
    9. '0' → logprob: -10.27651596069336
    10. '_f' → logprob: -10.27651596069336

Token 1253: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2460872381925583
    2. ' =' → logprob: -2.7460873126983643
    3. '                   ' → logprob: -2.8710873126983643
    4. '=' → logprob: -3.2460873126983643
    5. '               ' → logprob: -3.4960873126983643
    6. '           ' → logprob: -4.121087074279785
    7. ' :' → logprob: -4.746087074279785
    8. '   ' → logprob: -7.871087074279785
    9. '            ' → logprob: -7.871087074279785
    10. '                ' → logprob: -7.996087074279785

Token 1254: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.05114433914422989
    2. 'break' → logprob: -3.6761443614959717
    3. '           ' → logprob: -4.176144123077393
    4. '                   ' → logprob: -5.051144123077393
    5. '               ' → logprob: -6.051144123077393
    6. '                       ' → logprob: -8.92614459991455
    7. '	break' → logprob: -9.80114459991455
    8. '   ' → logprob: -9.92614459991455
    9. '		' → logprob: -9.92614459991455
    10. ' ' → logprob: -10.80114459991455

Token 1255: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04417909309267998
    2. '       ' → logprob: -3.2941792011260986
    3. '<|end|>' → logprob: -5.5441789627075195
    4. '   ' → logprob: -6.4191789627075195
    5. 'return' → logprob: -8.66917896270752
    6. '		' → logprob: -9.29417896270752
    7. '<|end|>' → logprob: -10.04417896270752
    8. '	return' → logprob: -10.29417896270752
    9. ' return' → logprob: -10.29417896270752
    10. '	       ' → logprob: -10.54417896270752

Token 1256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08059976994991302
    2. '   ' → logprob: -2.580599784851074
    3. '           ' → logprob: -6.455599784851074
    4. '
' → logprob: -9.205599784851074
    5. 'return' → logprob: -10.955599784851074
    6. '    
' → logprob: -11.580599784851074
    7. '        
' → logprob: -12.330599784851074
    8. '```' → logprob: -13.330599784851074
    9. 'def' → logprob: -13.830599784851074
    10. ' return' → logprob: -14.205599784851074

Token 1257: ' tot' (ID: 2417)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3874160349369049
    2. '       ' → logprob: -1.1374160051345825
    3. 'return' → logprob: -7.637415885925293
    4. ' return' → logprob: -10.387415885925293
    5. '           ' → logprob: -10.637415885925293
    6. '	return' → logprob: -12.262415885925293
    7. '     ' → logprob: -14.387415885925293
    8. '    ' → logprob: -14.512415885925293
    9. '               ' → logprob: -14.637415885925293
    10. ' ' → logprob: -15.012415885925293

Token 1258: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.19912201166152954
    2. ' +=' → logprob: -2.4491219520568848
    3. '+' → logprob: -2.5741219520568848
    4. '<|end|>' → logprob: -4.699121952056885
    5. '   ' → logprob: -5.449121952056885
    6. ' +' → logprob: -7.199121952056885
    7. '<|end|>' → logprob: -7.324121952056885
    8. '  ' → logprob: -7.449121952056885
    9. '
' → logprob: -7.449121952056885
    10. 'return' → logprob: -7.699121952056885

Token 1259: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.003178544342517853
    2. ' abs' → logprob: -5.753178596496582
    3. '0' → logprob: -14.253178596496582
    4. '(abs' → logprob: -15.878178596496582
    5. 'cur' → logprob: -17.003177642822266
    6. '   ' → logprob: -18.628177642822266
    7. '.abs' → logprob: -18.753177642822266
    8. ' ' → logprob: -19.628177642822266
    9. '_abs' → logprob: -20.253177642822266
    10. '       ' → logprob: -20.253177642822266

Token 1260: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.008615042082965374
    2. 'cur' → logprob: -4.758615016937256
    3. '[cur' → logprob: -15.008615493774414
    4. ' cur' → logprob: -16.633615493774414
    5. '	cur' → logprob: -16.758615493774414
    6. '(' → logprob: -17.008615493774414
    7. '(c' → logprob: -17.758615493774414
    8. '-cur' → logprob: -18.383615493774414
    9. '_cur' → logprob: -18.508615493774414
    10. '.cur' → logprob: -19.008615493774414

Token 1261: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16034039855003357
    2. ')
' → logprob: -1.910340428352356
    3. ')
' → logprob: -9.535340309143066
    4. '       ' → logprob: -10.285340309143066
    5. ')return' → logprob: -12.410340309143066
    6. '   ' → logprob: -12.785340309143066
    7. ')`
' → logprob: -13.660340309143066
    8. '()' → logprob: -14.660340309143066
    9. ')

' → logprob: -14.910340309143066
    10. ' )' → logprob: -15.285340309143066

Token 1262: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2522711455821991
    2. '       ' → logprob: -1.5022711753845215
    3. 'return' → logprob: -8.877270698547363
    4. '	return' → logprob: -9.127270698547363
    5. ' return' → logprob: -9.627270698547363
    6. '<|end|>' → logprob: -10.752270698547363
    7. '           ' → logprob: -13.627270698547363
    8. '     ' → logprob: -13.627270698547363
    9. ' ' → logprob: -14.002270698547363
    10. '```' → logprob: -14.502270698547363

Token 1263: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3710809051990509
    2. '       ' → logprob: -1.3710808753967285
    3. ' return' → logprob: -3.1210808753967285
    4. '   ' → logprob: -4.6210808753967285
    5. '	return' → logprob: -6.1210808753967285
    6. '	' → logprob: -11.371081352233887
    7. ' ' → logprob: -11.871081352233887
    8. '           ' → logprob: -12.496081352233887
    9. ':return' → logprob: -12.871081352233887
    10. ')return' → logprob: -13.246081352233887

Token 1264: ' tot' (ID: 2417)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tot' → logprob: -7.505351095460355e-05
    2. ' tot' → logprob: -9.500075340270996
    3. 'total' → logprob: -15.625075340270996
    4. 't' → logprob: -17.25007438659668
    5. '   ' → logprob: -19.62507438659668
    6. 'tod' → logprob: -20.00007438659668
    7. '_tot' → logprob: -21.50007438659668
    8. 'to' → logprob: -21.62507438659668
    9. 'tmp' → logprob: -22.12507438659668
    10. '	t' → logprob: -22.12507438659668

Token 1265: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033472444862127304
    2. 'print' → logprob: -3.7834725379943848
    3. '
' → logprob: -5.033472537994385
    4. 'def' → logprob: -6.658472537994385
    5. 'return' → logprob: -7.158472537994385
    6. '    
' → logprob: -7.283472537994385
    7. '```' → logprob: -8.033472061157227
    8. '<|end|>' → logprob: -8.533472061157227
    9. 'if' → logprob: -9.033472061157227
    10. ')' → logprob: -10.033472061157227

Token 1266: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05039399489760399
    2. '   ' → logprob: -3.425394058227539
    3. 'res' → logprob: -4.925394058227539
    4. 'ans' → logprob: -5.425394058227539
    5. 'result' → logprob: -6.550394058227539
    6. 'tot' → logprob: -7.050394058227539
    7. 'return' → logprob: -7.175394058227539
    8. 'answer' → logprob: -7.300394058227539
    9. 'if' → logprob: -7.675394058227539
    10. 'r' → logprob: -8.800394058227539

Token 1267: ' tot' (ID: 2417)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47921037673950195
    2. 'res' → logprob: -1.479210376739502
    3. '   ' → logprob: -2.604210376739502
    4. 'ans' → logprob: -3.479210376739502
    5. 'tot' (adapté à ' tot') → logprob: -3.854210376739502
    6. 'pr' → logprob: -4.604210376739502
    7. 'ret' → logprob: -5.104210376739502
    8. 'result' → logprob: -5.729210376739502
    9. 'r' → logprob: -6.229210376739502
    10. 't' → logprob: -6.479210376739502

Token 1268: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. '2' → logprob: -12.875009536743164
    3. '_' → logprob: -13.000009536743164
    4. '(' → logprob: -13.875009536743164
    5. ')' → logprob: -14.500009536743164
    6. '   ' → logprob: -14.500009536743164
    7. '<|end|>' → logprob: -15.125009536743164
    8. ',' → logprob: -15.375009536743164
    9. '=' → logprob: -15.375009536743164
    10. '```' → logprob: -15.500009536743164

Token 1269: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6328264474868774
    2. '=' → logprob: -0.7578264474868774
    3. ',' → logprob: -9.132826805114746
    4. '(' → logprob: -9.757826805114746
    5. ' +=' → logprob: -10.632826805114746
    6. '   ' → logprob: -11.382826805114746
    7. ')' → logprob: -11.507826805114746
    8. ' ' → logprob: -12.632826805114746
    9. ' =)' → logprob: -13.007826805114746
    10. ' =
' → logprob: -13.257826805114746

Token 1270: ' complex' (ID: 8012)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.0004306692280806601
    2. ' complex' → logprob: -7.750430583953857
    3. '   ' → logprob: -20.000431060791016
    4. ' complexe' → logprob: -21.750431060791016
    5. '复杂' → logprob: -22.375431060791016
    6. ' ' → logprob: -22.500431060791016
    7. '  ' → logprob: -22.625431060791016
    8. ' komplex' → logprob: -22.750431060791016
    9. '_complex' → logprob: -22.750431060791016
    10. 'com' → logprob: -23.250431060791016

Token 1271: '_game' (ID: 41386)
  Prédit: '_game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_game' → logprob: -2.2200749754119897e-06
    2. '_reverse' → logprob: -13.875001907348633
    3. '_g' → logprob: -14.500001907348633
    4. 'game' → logprob: -14.875001907348633
    5. '_' → logprob: -15.500001907348633
    6. '_games' → logprob: -16.750001907348633
    7. 'Game' → logprob: -17.000001907348633
    8. '_code' → logprob: -17.125001907348633
    9. '_Game' → logprob: -17.250001907348633
    10. '1' → logprob: -17.250001907348633

Token 1272: '_reverse' (ID: 112788)
  Prédit: '_reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reverse' → logprob: -0.37327295541763306
    2. '(d' → logprob: -1.3732728958129883
    3. 'reverse' → logprob: -2.9982728958129883
    4. 'd' → logprob: -5.123272895812988
    5. 'Reverse' → logprob: -6.748272895812988
    6. '(reverse' → logprob: -7.498272895812988
    7. '(l' → logprob: -7.873272895812988
    8. 'l' → logprob: -9.123272895812988
    9. 'rev' → logprob: -9.498272895812988
    10. 'r' → logprob: -10.248272895812988

Token 1273: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00018149138486478478
    2. 'd' → logprob: -8.625181198120117
    3. '(de' → logprob: -13.625181198120117
    4. '(l' → logprob: -15.000181198120117
    5. '   ' → logprob: -16.125181198120117
    6. '(' → logprob: -16.750181198120117
    7. ' ' → logprob: -16.875181198120117
    8. 'deep' → logprob: -17.375181198120117
    9. '(dd' → logprob: -17.625181198120117
    10. '(dc' → logprob: -17.625181198120117

Token 1274: 'cp' (ID: 10450)
  Prédit: 'cp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cp' → logprob: -1.6240566083070007e-06
    2. 'c' → logprob: -13.750001907348633
    3. 'd' → logprob: -15.375001907348633
    4. '(cp' → logprob: -16.625001907348633
    5. 'cpy' → logprob: -16.750001907348633
    6. 'l' → logprob: -17.000001907348633
    7. 'p' → logprob: -17.000001907348633
    8. 'scp' → logprob: -19.000001907348633
    9. 'e' → logprob: -19.125001907348633
    10. '(d' → logprob: -19.250001907348633

Token 1275: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.38687458634376526
    2. 'l' → logprob: -1.1368745565414429
    3. '	l' → logprob: -13.511874198913574
    4. '(ls' → logprob: -14.136874198913574
    5. ' l' → logprob: -14.511874198913574
    6. ',l' → logprob: -15.636874198913574
    7. '+l' → logprob: -15.636874198913574
    8. '[l' → logprob: -15.886874198913574
    9. '_l' → logprob: -16.13687515258789
    10. ')' → logprob: -16.76187515258789

Token 1276: 'sc' (ID: 2786)
  Prédit: 'sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.10047224164009094
    2. 'l' → logprob: -2.3504722118377686
    3. 's' → logprob: -8.600472450256348
    4. 'c' → logprob: -10.100472450256348
    5. 'scp' → logprob: -10.850472450256348
    6. '(sc' → logprob: -11.725472450256348
    7. '(l' → logprob: -12.850472450256348
    8. 'ls' → logprob: -12.975472450256348
    9. 'r' → logprob: -12.975472450256348
    10. 'scss' → logprob: -13.725472450256348

Token 1277: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004605783324223012
    2. ',d' → logprob: -8.000460624694824
    3. '),' → logprob: -9.250460624694824
    4. ' ,' → logprob: -10.500460624694824
    5. '   ' → logprob: -14.125460624694824
    6. 'd' → logprob: -14.750460624694824
    7. ',r' → logprob: -15.875460624694824
    8. ',),' → logprob: -16.875459671020508
    9. '>,' → logprob: -17.000459671020508
    10. '<|end|>' → logprob: -17.125459671020508

Token 1278: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.9361264946837764e-07
    2. ' d' → logprob: -15.875
    3. 'dcc' → logprob: -17.75
    4. '   ' → logprob: -20.0
    5. '(d' → logprob: -20.875
    6. 'dc' → logprob: -20.875
    7. '
' → logprob: -21.125
    8. '	d' → logprob: -21.125
    9. 'dp' → logprob: -21.25
    10. ' ' → logprob: -21.5

Token 1279: 'cp' (ID: 10450)
  Prédit: 'cp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cp' → logprob: -0.38744238018989563
    2. 'd' → logprob: -1.1374423503875732
    3. 'c' → logprob: -7.512442588806152
    4. 'cpy' → logprob: -11.637442588806152
    5. 'scp' → logprob: -11.762442588806152
    6. '(d' → logprob: -12.637442588806152
    7. '_cp' → logprob: -13.387442588806152
    8. 'p' → logprob: -13.762442588806152
    9. ' d' → logprob: -14.512442588806152
    10. 'cd' → logprob: -15.262442588806152

Token 1280: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.029763801023364067
    2. 'r' → logprob: -3.529763698577881
    3. 'd' → logprob: -11.904764175415039
    4. '(rs' → logprob: -12.779764175415039
    5. '[r' → logprob: -13.404764175415039
    6. ' r' → logprob: -14.404764175415039
    7. '(
' → logprob: -14.654764175415039
    8. '	r' → logprob: -15.279764175415039
    9. '=r' → logprob: -15.904764175415039
    10. '(d' → logprob: -16.02976417541504

Token 1281: 'sc' (ID: 2786)
  Prédit: 'sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.0033825573045760393
    2. 'r' → logprob: -6.128382682800293
    3. 's' → logprob: -7.128382682800293
    4. 'c' → logprob: -7.878382682800293
    5. 'scr' → logprob: -12.878382682800293
    6. 'scss' → logprob: -12.878382682800293
    7. 'scp' → logprob: -13.253382682800293
    8. '(sc' → logprob: -13.253382682800293
    9. 'rc' → logprob: -13.503382682800293
    10. ' r' → logprob: -13.878382682800293

Token 1282: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005817461642436683
    2. ')
' → logprob: -7.500581741333008
    3. ')

' → logprob: -10.500581741333008
    4. '   ' → logprob: -13.875581741333008
    5. ')
' → logprob: -16.125581741333008
    6. '))' → logprob: -16.625581741333008
    7. '()' → logprob: -17.000581741333008
    8. ' )' → logprob: -17.250581741333008
    9. '())' → logprob: -17.625581741333008
    10. ')`' → logprob: -18.625581741333008

Token 1283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3870384693145752
    2. 'print' → logprob: -1.1370384693145752
    3. '
' → logprob: -9.512038230895996
    4. '```' → logprob: -9.512038230895996
    5. ' print' → logprob: -11.887038230895996
    6. '    
' → logprob: -12.137038230895996
    7. 'return' → logprob: -12.512038230895996
    8. '	print' → logprob: -13.512038230895996
    9. '#print' → logprob: -14.012038230895996
    10. '(print' → logprob: -14.762038230895996

Token 1284: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2529841363430023
    2. 'print' (adapté à ' print') → logprob: -1.5029841661453247
    3. 'return' → logprob: -7.252984046936035
    4. '```' → logprob: -8.752984046936035
    5. '
' → logprob: -9.252984046936035
    6. '    
' → logprob: -10.002984046936035
    7. 'if' → logprob: -10.627984046936035
    8. '#print' → logprob: -12.002984046936035
    9. '	print' → logprob: -12.252984046936035
    10. ' print' → logprob: -12.502984046936035

Token 1285: '(max' (ID: 17178)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -5.8961017202818766e-05
    2. '(t' → logprob: -10.500059127807617
    3. 'min' → logprob: -10.750059127807617
    4. '(max' → logprob: -11.750059127807617
    5. '(' → logprob: -13.625059127807617
    6. '(abs' → logprob: -14.875059127807617
    7. '(m' → logprob: -16.250059127807617
    8. 't' → logprob: -16.375059127807617
    9. '=min' → logprob: -16.750059127807617
    10. '((' → logprob: -16.750059127807617

Token 1286: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -6.0391463193809614e-05
    2. '(' → logprob: -9.750060081481934
    3. '(
' → logprob: -13.625060081481934
    4. 't' → logprob: -14.250060081481934
    5. '	t' → logprob: -16.87506103515625
    6. ')' → logprob: -17.00006103515625
    7. 'tot' → logprob: -17.50006103515625
    8. '((' → logprob: -17.62506103515625
    9. ')t' → logprob: -18.50006103515625
    10. ' (' → logprob: -18.75006103515625

Token 1287: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -2.2723104848410003e-05
    2. 'otal' → logprob: -11.875022888183594
    3. 'o' → logprob: -12.000022888183594
    4. '1' → logprob: -12.125022888183594
    5. '(' → logprob: -13.250022888183594
    6. 'tot' → logprob: -13.750022888183594
    7. '2' → logprob: -14.750022888183594
    8. '{' → logprob: -14.875022888183594
    9. 'otp' → logprob: -16.000022888183594
    10. 'otl' → logprob: -16.375022888183594

Token 1288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020532844064291567
    2. '2' → logprob: -8.500205039978027
    3. '(' → logprob: -13.500205039978027
    4. ',' → logprob: -15.875205039978027
    5. ')' → logprob: -16.250205993652344
    6. '   ' → logprob: -16.625205993652344
    7. '
' → logprob: -16.875205993652344
    8. '```' → logprob: -17.500205993652344
    9. '12' → logprob: -18.000205993652344
    10. '))' → logprob: -18.250205993652344

Token 1289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4140441635390744e-05
    2. ',t' → logprob: -11.500014305114746
    3. ' ,' → logprob: -12.625014305114746
    4. ',
' → logprob: -14.250014305114746
    5. 'tot' → logprob: -19.25001335144043
    6. '(t' → logprob: -20.00001335144043
    7. ',total' → logprob: -20.12501335144043
    8. '(' → logprob: -20.37501335144043
    9. ',\
' → logprob: -20.50001335144043
    10. '   ' → logprob: -20.50001335144043

Token 1290: ' tot' (ID: 2417)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.0031791406217962503
    2. ' tot' → logprob: -5.75317907333374
    3. 'total' → logprob: -14.503179550170898
    4. 't' → logprob: -15.378179550170898
    5. '   ' → logprob: -15.378179550170898
    6. '_tot' → logprob: -16.0031795501709
    7. '0' → logprob: -16.1281795501709
    8. 'tol' → logprob: -16.6281795501709
    9. 'Tot' → logprob: -17.0031795501709
    10. ' ' → logprob: -17.5031795501709

Token 1291: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.375
    3. '```' → logprob: -17.625
    4. ' ' → logprob: -18.0
    5. '   ' → logprob: -18.125
    6. ')' → logprob: -18.375
    7. '２' → logprob: -18.5
    8. '(' → logprob: -19.25
    9. '۲' → logprob: -19.4375
    10. '_' → logprob: -19.5625

Token 1292: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3869134783744812
    2. ')' → logprob: -1.136913537979126
    3. ')))' → logprob: -10.386913299560547
    4. '())' → logprob: -12.386913299560547
    5. '))
' → logprob: -12.511913299560547
    6. '})' → logprob: -14.011913299560547
    7. '()))' → logprob: -14.136913299560547
    8. '   ' → logprob: -14.636913299560547
    9. ')
' → logprob: -15.011913299560547
    10. ',' → logprob: -15.011913299560547

Token 1293: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29412034153938293
    2. '<|end|>' → logprob: -1.5441203117370605
    3. '```' → logprob: -3.7941203117370605
    4. '#' → logprob: -4.1691203117370605
    5. '<|end|>' → logprob: -6.5441203117370605
    6. '
' → logprob: -7.1691203117370605
    7. '%' → logprob: -8.044120788574219
    8. '...' → logprob: -8.919120788574219
    9. '[' → logprob: -9.044120788574219
    10. '}' → logprob: -9.669120788574219

Token 1294: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03865721821784973
    2. '__' → logprob: -3.2886571884155273
    3. '_' → logprob: -7.538657188415527
    4. ' _' → logprob: -9.788657188415527
    5. '___' → logprob: -11.288657188415527
    6. ' ___' → logprob: -11.913657188415527
    7. '"' → logprob: -13.663657188415527
    8. ' ' → logprob: -13.788657188415527
    9. '_name' → logprob: -13.788657188415527
    10. ''' → logprob: -14.038657188415527

Token 1295: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0037497254088521004
    2. '==' → logprob: -6.628749847412109
    3. ' ==' → logprob: -7.128749847412109
    4. '.__' → logprob: -7.503749847412109
    5. ' __' → logprob: -8.00374984741211
    6. '__.__' → logprob: -8.37874984741211
    7. 'if' → logprob: -9.00374984741211
    8. 'name' → logprob: -9.62874984741211
    9. '=="' → logprob: -9.87874984741211
    10. '___' → logprob: -10.37874984741211

Token 1296: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.632542913896032e-05
    2. '__.__' → logprob: -10.500046730041504
    3. '==' → logprob: -11.250046730041504
    4. '=="' → logprob: -12.625046730041504
    5. '__.' → logprob: -14.125046730041504
    6. '__["' → logprob: -14.625046730041504
    7. ' ==' → logprob: -15.000046730041504
    8. '____' → logprob: -15.750046730041504
    9. '__("' → logprob: -15.750046730041504
    10. '__
' → logprob: -15.875046730041504

Token 1297: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9706035852432251
    2. '__' → logprob: -0.9706035852432251
    3. '=="' → logprob: -1.595603585243225
    4. ' ==' → logprob: -3.3456034660339355
    5. '=='' → logprob: -5.4706034660339355
    6. '==
' → logprob: -11.095603942871094
    7. '==="' → logprob: -11.970603942871094
    8. '===' → logprob: -12.220603942871094
    9. '()==' → logprob: -12.345603942871094
    10. '__.__' → logprob: -12.470603942871094

Token 1298: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004080658778548241
    2. ''' → logprob: -5.504080772399902
    3. '__' → logprob: -13.504080772399902
    4. ' "__' → logprob: -14.004080772399902
    5. '"user' → logprob: -17.129079818725586
    6. '"class' → logprob: -17.879079818725586
    7. 'main' → logprob: -18.254079818725586
    8. '   ' → logprob: -18.254079818725586
    9. ''"' → logprob: -18.379079818725586
    10. '"default' → logprob: -18.754079818725586

Token 1299: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12397125363349915
    2. ''' → logprob: -2.4989712238311768
    3. 'main' → logprob: -3.6239712238311768
    4. '"' → logprob: -4.873971462249756
    5. '__":
' → logprob: -10.123970985412598
    6. '__':
' → logprob: -11.498970985412598
    7. '```' → logprob: -11.623970985412598
    8. ''name' → logprob: -11.998970985412598
    9. ''s' → logprob: -12.248970985412598
    10. '__('' → logprob: -12.373970985412598

Token 1300: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.07148220390081406
    2. '__' → logprob: -2.6964821815490723
    3. '__':
' → logprob: -6.696482181549072
    4. '__:' → logprob: -8.19648265838623
    5. '():
' → logprob: -11.07148265838623
    6. '__["' → logprob: -12.32148265838623
    7. '__);
' → logprob: -12.82148265838623
    8. '__
' → logprob: -13.07148265838623
    9. '__()
' → logprob: -13.44648265838623
    10. '__",' → logprob: -13.82148265838623

Token 1301: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5329152345657349
    2. '   ' → logprob: -1.0329152345657349
    3. '	main' → logprob: -2.9079151153564453
    4. ' main' → logprob: -6.032915115356445
    5. '_main' → logprob: -9.532915115356445
    6. ' ' → logprob: -10.282915115356445
    7. '    
' → logprob: -11.657915115356445
    8. '  ' → logprob: -11.657915115356445
    9. '(main' → logprob: -11.782915115356445
    10. '   ' → logprob: -12.032915115356445

Token 1302: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -5.512236498361744e-07
    2. ' main' → logprob: -15.000000953674316
    3. '	main' → logprob: -16.5
    4. '   ' → logprob: -19.0
    5. '(main' → logprob: -19.25
    6. '_main' → logprob: -20.5
    7. 'input' → logprob: -21.125
    8. 'mainwindow' → logprob: -22.5
    9. 'print' → logprob: -22.625
    10. '  ' → logprob: -22.75

Token 1303: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7329531311988831
    2. '<|end|>' → logprob: -0.9829531311988831
    3. '()' → logprob: -3.3579530715942383
    4. '(' → logprob: -3.6079530715942383
    5. '```' → logprob: -3.6079530715942383
    6. '#' → logprob: -3.7329530715942383
    7. ':' → logprob: -4.482953071594238
    8. '
' → logprob: -4.732953071594238
    9. '<|end|>' → logprob: -5.357953071594238
    10. '\' → logprob: -6.232953071594238


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1301
Tokens correctement prédits (1ère position, stricte): 464
Tokens correctement prédits (1ère position, avec adaptation): 505
Tokens correctement prédits (top 10): 1055
Précision stricte (1ère position): 35.66%
Précision adaptée (1ère position): 38.82%
Précision (top 10): 81.09%
================================================================================
