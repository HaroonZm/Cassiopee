================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b, c, k = map(int, input().split())

if k % 2 == 0:
    if abs(a - b) < 10 ** 18:
        print(a - b)
    else:
        print("Unfair")
else:
    if abs(a - b) < 10 ** 18:
        print(b - a)
    else:
        print("Unfair")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21134252846240997
    2. '+' → logprob: -1.7113425731658936
    3. ',' → logprob: -5.3363423347473145
    4. ' =' → logprob: -5.5863423347473145
    5. ' ' → logprob: -8.086342811584473
    6. ' +' → logprob: -8.586342811584473
    7. '*' → logprob: -8.711342811584473
    8. '+=' → logprob: -8.961342811584473
    9. '.' → logprob: -9.086342811584473
    10. ')' → logprob: -9.586342811584473

Token 4: ' c' (ID: 274)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23932603001594543
    2. ',' → logprob: -2.114326000213623
    3. ' =' → logprob: -2.989326000213623
    4. 'c' → logprob: -3.739326000213623
    5. ' ' → logprob: -4.739326000213623
    6. ',c' → logprob: -5.614326000213623
    7. '<|end|>' → logprob: -6.614326000213623
    8. ')' → logprob: -6.864326000213623
    9. '.' → logprob: -7.114326000213623
    10. '_' → logprob: -7.364326000213623

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14467333257198334
    2. '+' → logprob: -2.1446733474731445
    3. ',' → logprob: -4.7696733474731445
    4. ' =' → logprob: -5.0196733474731445
    5. ')' → logprob: -7.0196733474731445
    6. '```' → logprob: -8.519673347473145
    7. '[' → logprob: -8.644673347473145
    8. ' +' → logprob: -8.769673347473145
    9. '+=' → logprob: -8.769673347473145
    10. '<|end|>' → logprob: -8.769673347473145

Token 6: ' k' (ID: 372)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23719529807567596
    2. ' =' → logprob: -2.2371952533721924
    3. 'd' → logprob: -2.7371952533721924
    4. ',' → logprob: -3.7371952533721924
    5. '<|end|>' → logprob: -4.9871954917907715
    6. ',d' → logprob: -5.6121954917907715
    7. ')' → logprob: -6.6121954917907715
    8. ' ' → logprob: -6.6121954917907715
    9. ' d' → logprob: -7.6121954917907715
    10. '.' → logprob: -7.7371954917907715

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04459553211927414
    2. ' =' → logprob: -3.29459547996521
    3. '+' → logprob: -6.044595718383789
    4. ',' → logprob: -6.669595718383789
    5. ')' → logprob: -7.169595718383789
    6. ' ' → logprob: -7.919595718383789
    7. '*' → logprob: -7.919595718383789
    8. ';' → logprob: -8.044595718383789
    9. '(' → logprob: -8.294595718383789
    10. ':' → logprob: -8.919595718383789

Token 8: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49040624499320984
    2. '0' → logprob: -0.9904062747955322
    3. '1' → logprob: -4.240406036376953
    4. 'map' → logprob: -7.990406036376953
    5. '10' → logprob: -8.240406036376953
    6. ' [' → logprob: -8.240406036376953
    7. ' map' → logprob: -8.240406036376953
    8. 'a' → logprob: -8.865406036376953
    9. 'input' → logprob: -8.990406036376953
    10. ' a' → logprob: -9.365406036376953

Token 9: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10371703654527664
    2. '<|end|>' → logprob: -2.728717088699341
    3. '```' → logprob: -3.853717088699341
    4. '(lambda' → logprob: -4.978716850280762
    5. '<|end|>' → logprob: -6.728716850280762
    6. '(token' → logprob: -7.353716850280762
    7. '(int' → logprob: -7.478716850280762
    8. ')' → logprob: -7.478716850280762
    9. '(user' → logprob: -7.853716850280762
    10. 'user' → logprob: -9.228716850280762

Token 10: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2643314301967621
    2. '<|end|>' → logprob: -2.639331340789795
    3. '```' → logprob: -3.014331340789795
    4. '(input' → logprob: -3.389331340789795
    5. '(user' → logprob: -3.764331340789795
    6. '`)' → logprob: -4.139331340789795
    7. '(' → logprob: -4.514331340789795
    8. '<|end|>' → logprob: -5.389331340789795
    9. '(token' → logprob: -5.764331340789795
    10. ')(' → logprob: -5.889331340789795

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018519913777709007
    2. ' input' → logprob: -4.018519878387451
    3. '(input' → logprob: -8.01852035522461
    4. ')' → logprob: -10.26852035522461
    5. '=input' → logprob: -13.26852035522461
    6. ',input' → logprob: -13.64352035522461
    7. '[input' → logprob: -14.39352035522461
    8. '<input' → logprob: -14.51852035522461
    9. '```' → logprob: -14.64352035522461
    10. ' ' → logprob: -15.26852035522461

Token 12: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2364913821220398
    2. '())' → logprob: -1.9864914417266846
    3. '(' → logprob: -3.6114914417266846
    4. '()' → logprob: -4.4864912033081055
    5. '<|end|>' → logprob: -4.6114912033081055
    6. '```' → logprob: -5.4864912033081055
    7. '<|end|>' → logprob: -5.4864912033081055
    8. '`)' → logprob: -5.9864912033081055
    9. '(token' → logprob: -6.2364912033081055
    10. '')' → logprob: -6.6114912033081055

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00014919086243025959
    2. 'strip' → logprob: -8.87514877319336
    3. 'rstrip' → logprob: -12.12514877319336
    4. ' split' → logprob: -12.62514877319336
    5. '(split' → logprob: -15.37514877319336
    6. 'spl' → logprob: -15.50014877319336
    7. 'read' → logprob: -16.37514877319336
    8. ')' → logprob: -16.75014877319336
    9. 'startswith' → logprob: -17.12514877319336
    10. '```' → logprob: -17.25014877319336

Token 14: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03540632873773575
    2. '())' → logprob: -3.5354063510894775
    3. '))' → logprob: -5.285406112670898
    4. '()' → logprob: -8.410406112670898
    5. '`)' → logprob: -8.535406112670898
    6. '()))' → logprob: -10.160406112670898
    7. '(' → logprob: -10.535406112670898
    8. ')`' → logprob: -10.785406112670898
    9. '```' → logprob: -11.660406112670898
    10. '')' → logprob: -11.785406112670898

Token 15: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8004841804504395
    2. 'i' → logprob: -1.0504841804504395
    3. 'd' → logprob: -2.0504841804504395
    4. 'x' → logprob: -4.4254841804504395
    5. '#' → logprob: -4.5504841804504395
    6. '=' → logprob: -4.6754841804504395
    7. 'n' → logprob: -4.6754841804504395
    8. 's' → logprob: -4.9254841804504395
    9. ':' → logprob: -5.0504841804504395
    10. ',' → logprob: -6.0504841804504395

Token 16: ' k' (ID: 372)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0654933825135231
    2. 'a' → logprob: -3.31549334526062
    3. ' ' → logprob: -3.69049334526062
    4. ' k' → logprob: -6.440493583679199
    5. ' b' → logprob: -8.5654935836792
    6. 'k' → logprob: -8.9404935836792
    7. '  ' → logprob: -9.6904935836792
    8. ' (' → logprob: -9.9404935836792
    9. ' not' → logprob: -11.1904935836792
    10. 'b' → logprob: -11.3154935836792

Token 17: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0931367576122284
    2. ' ==' → logprob: -2.718136787414551
    3. ' <' → logprob: -4.843136787414551
    4. ' <=' → logprob: -4.843136787414551
    5. ' ' → logprob: -5.593136787414551
    6. '>' → logprob: -6.468136787414551
    7. ' >=' → logprob: -7.093136787414551
    8. '==' → logprob: -7.593136787414551
    9. ' %' → logprob: -8.84313678741455
    10. ' !=' → logprob: -8.96813678741455

Token 18: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09134041517972946
    2. ' ' → logprob: -2.7163403034210205
    3. '3' → logprob: -4.2163405418396
    4. 'a' → logprob: -5.3413405418396
    5. '4' → logprob: -6.9663405418396
    6. ' a' → logprob: -7.9663405418396
    7. '6' → logprob: -9.216340065002441
    8. 'c' → logprob: -9.716340065002441
    9. 'k' → logprob: -9.841340065002441
    10. '5' → logprob: -10.341340065002441

Token 19: '2' (ID: 17)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5638850927352905
    2. '2' → logprob: -0.9388850927352905
    3. '3' → logprob: -3.31388521194458
    4. 'c' → logprob: -6.18888521194458
    5. '4' → logprob: -7.18888521194458
    6. 'b' → logprob: -8.063884735107422
    7. 'k' → logprob: -8.563884735107422
    8. ' a' → logprob: -9.438884735107422
    9. '5' → logprob: -10.313884735107422
    10. '10' → logprob: -10.688884735107422

Token 20: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0373995378613472
    2. '==' → logprob: -3.5373995304107666
    3. ':' → logprob: -5.537399768829346
    4. ' !=' → logprob: -5.912399768829346
    5. ' :' → logprob: -7.912399768829346
    6. ' =' → logprob: -8.287399291992188
    7. '=' → logprob: -8.287399291992188
    8. '!=' → logprob: -9.787399291992188
    9. ' ' → logprob: -10.287399291992188
    10. ')' → logprob: -12.412399291992188

Token 21: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2254907190799713
    2. '0' → logprob: -1.600490689277649
    3. '1' → logprob: -9.47549057006836
    4. ' a' → logprob: -15.35049057006836
    5. '2' → logprob: -15.53799057006836
    6. ' b' → logprob: -16.10049057006836
    7. ' ' → logprob: -16.10049057006836
    8. ' ,' → logprob: -16.22549057006836
    9. ')' → logprob: -16.35049057006836
    10. 'a' → logprob: -16.41299057006836

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003897464368492365
    2. '1' → logprob: -5.628897666931152
    3. ' ' → logprob: -8.128897666931152
    4. '2' → logprob: -13.503897666931152
    5. 'a' → logprob: -14.253897666931152
    6. '```' → logprob: -15.378897666931152
    7. 'b' → logprob: -16.878896713256836
    8. 'k' → logprob: -17.128896713256836
    9. '   ' → logprob: -17.566396713256836
    10. '  ' → logprob: -18.066396713256836

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00030197695014066994
    2. ' :' → logprob: -8.1253023147583
    3. ':**' → logprob: -13.2503023147583
    4. ':
' → logprob: -13.5003023147583
    5. '):' → logprob: -13.5003023147583
    6. ':return' → logprob: -14.6253023147583
    7. '>:' → logprob: -15.2503023147583
    8. '':'' → logprob: -16.375301361083984
    9. ',' → logprob: -16.625301361083984
    10. '':' → logprob: -16.750301361083984

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.786493182182312
    2. 'print' → logprob: -1.536493182182312
    3. ' print' → logprob: -1.661493182182312
    4. ':' → logprob: -2.1614933013916016
    5. ' :' → logprob: -4.161493301391602
    6. ' ' → logprob: -5.786493301391602
    7. ',' → logprob: -6.536493301391602
    8. '    ' → logprob: -6.911493301391602
    9. ':
' → logprob: -7.411493301391602
    10. ' ,' → logprob: -7.911493301391602

Token 25: ' if' (ID: 538)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.0459020771086216
    2. 'print' → logprob: -3.1709020137786865
    3. ' a' → logprob: -6.420902252197266
    4. ' ' → logprob: -7.295902252197266
    5. '   ' → logprob: -8.670902252197266
    6. 'a' → logprob: -9.170902252197266
    7. ' result' → logprob: -9.795902252197266
    8. ' pass' → logprob: -10.295902252197266
    9. ' b' → logprob: -10.545902252197266
    10. '    ' → logprob: -10.670902252197266

Token 26: ' abs' (ID: 8443)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3016388714313507
    2. 'a' → logprob: -1.6766388416290283
    3. ' (' → logprob: -3.1766388416290283
    4. '(a' → logprob: -4.176639080047607
    5. ' b' → logprob: -4.551639080047607
    6. ' k' → logprob: -6.176639080047607
    7. 'b' → logprob: -6.926639080047607
    8. ' c' → logprob: -7.051639080047607
    9. ' ' → logprob: -7.301639080047607
    10. ' True' → logprob: -8.30163860321045

Token 27: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0002712297427933663
    2. '(' → logprob: -9.12527084350586
    3. '(b' → logprob: -9.25027084350586
    4. '(c' → logprob: -10.00027084350586
    5. '(k' → logprob: -11.62527084350586
    6. 'a' → logprob: -11.75027084350586
    7. '((' → logprob: -13.37527084350586
    8. '(s' → logprob: -13.87527084350586
    9. '(i' → logprob: -14.50027084350586
    10. '(x' → logprob: -15.25027084350586

Token 28: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5134418606758118
    2. '-' → logprob: -1.388441801071167
    3. ')' → logprob: -1.888441801071167
    4. '-b' → logprob: -8.263442039489746
    5. ' )' → logprob: -9.013442039489746
    6. '+' → logprob: -9.513442039489746
    7. ')>' → logprob: -9.638442039489746
    8. '   ' → logprob: -10.138442039489746
    9. ' ' → logprob: -10.138442039489746
    10. '-)' → logprob: -10.138442039489746

Token 29: ' b' (ID: 287)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.31397485733032227
    2. 'b' → logprob: -1.3139748573303223
    3. ' c' → logprob: -7.688974857330322
    4. ' b' → logprob: -9.063974380493164
    5. '   ' → logprob: -9.563974380493164
    6. 'a' → logprob: -10.813974380493164
    7. ')c' → logprob: -11.188974380493164
    8. ' ' → logprob: -11.563974380493164
    9. 'k' → logprob: -12.063974380493164
    10. '0' → logprob: -12.438974380493164

Token 30: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017672323156148195
    2. ' )' → logprob: -8.750176429748535
    3. ')<=' → logprob: -11.750176429748535
    4. ')>' → logprob: -13.125176429748535
    5. ')>=' → logprob: -13.125176429748535
    6. ')==' → logprob: -14.000176429748535
    7. '   ' → logprob: -14.125176429748535
    8. ')`' → logprob: -14.125176429748535
    9. '```' → logprob: -14.375176429748535
    10. ' ' → logprob: -14.375176429748535

Token 31: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5296611785888672
    2. ' >' → logprob: -1.5296611785888672
    3. ' <' → logprob: -2.279661178588867
    4. ' >=' → logprob: -3.154661178588867
    5. ' ==' → logprob: -3.654661178588867
    6. '>' → logprob: -4.654661178588867
    7. '<=' → logprob: -5.154661178588867
    8. ' ' → logprob: -5.654661178588867
    9. '<' → logprob: -6.279661178588867
    10. '==' → logprob: -6.779661178588867

Token 32: ' ' (ID: 220)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.3134271204471588
    2. ' abs' → logprob: -1.9384270906448364
    3. 'c' → logprob: -2.313427209854126
    4. '=' → logprob: -4.063426971435547
    5. ' c' → logprob: -5.563426971435547
    6. 'k' → logprob: -6.313426971435547
    7. '2' → logprob: -6.313426971435547
    8. '(abs' → logprob: -7.563426971435547
    9. '1' → logprob: -8.313426971435547
    10. '=c' → logprob: -8.563426971435547

Token 33: '10' (ID: 702)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.8651268482208252
    2. 'c' → logprob: -1.1151268482208252
    3. 'k' → logprob: -1.4901268482208252
    4. '=' → logprob: -3.990126848220825
    5. '2' → logprob: -5.990126609802246
    6. '=k' → logprob: -6.365126609802246
    7. '=c' → logprob: -6.865126609802246
    8. '1' → logprob: -7.865126609802246
    9. ' abs' → logprob: -7.990126609802246
    10. '100' → logprob: -7.990126609802246

Token 34: ' **' (ID: 6240)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01033780351281166
    2. ' and' → logprob: -4.885337829589844
    3. '0' → logprob: -6.760337829589844
    4. ':
' → logprob: -7.510337829589844
    5. 'and' → logprob: -8.135337829589844
    6. ' :' → logprob: -8.635337829589844
    7. '   ' → logprob: -8.885337829589844
    8. ' or' → logprob: -9.010337829589844
    9. '):' → logprob: -9.010337829589844
    10. '       ' → logprob: -10.635337829589844

Token 35: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0280340276658535
    2. '7' → logprob: -4.778034210205078
    3. '8' → logprob: -5.028034210205078
    4. '-' → logprob: -5.403034210205078
    5. '6' → logprob: -5.403034210205078
    6. '5' → logprob: -6.653034210205078
    7. '18' → logprob: -7.153034210205078
    8. '10' → logprob: -7.653034210205078
    9. ' ' → logprob: -8.028034210205078
    10. '4' → logprob: -8.153034210205078

Token 36: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.06014005094766617
    2. '6' → logprob: -3.8101401329040527
    3. '7' → logprob: -4.185140132904053
    4. '-' → logprob: -4.685140132904053
    5. '8' → logprob: -5.435140132904053
    6. '18' → logprob: -6.060140132904053
    7. '5' → logprob: -6.435140132904053
    8. '3' → logprob: -6.560140132904053
    9. '10' → logprob: -7.185140132904053
    10. '12' → logprob: -7.560140132904053

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021992849186062813
    2. ' and' → logprob: -4.0219926834106445
    3. ' :' → logprob: -6.6469926834106445
    4. '):' → logprob: -7.2719926834106445
    5. 'and' → logprob: -7.3969926834106445
    6. ':
' → logprob: -7.6469926834106445
    7. ' or' → logprob: -7.8969926834106445
    8. ':return' → logprob: -9.146992683410645
    9. '   ' → logprob: -9.271992683410645
    10. '       ' → logprob: -10.021992683410645

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3570939600467682
    2. ':' → logprob: -1.2320939302444458
    3. ' :' → logprob: -6.232093811035156
    4. ':
' → logprob: -6.607093811035156
    5. '<|end|>' → logprob: -6.732093811035156
    6. ',' → logprob: -7.107093811035156
    7. '    ' → logprob: -7.482093811035156
    8. ' and' → logprob: -7.607093811035156
    9. '   ' → logprob: -7.982093811035156
    10. '.' → logprob: -8.232093811035156

Token 39: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22993910312652588
    2. 'print' (adapté à ' print') → logprob: -2.2299389839172363
    3. '
' → logprob: -3.6049389839172363
    4. '\n' → logprob: -3.6049389839172363
    5. ' print' → logprob: -3.9799389839172363
    6. '           ' → logprob: -5.229938983917236
    7. '   ' → logprob: -5.354938983917236
    8. ' 
' → logprob: -6.229938983917236
    9. '    ' → logprob: -6.604938983917236
    10. '        
' → logprob: -6.604938983917236

Token 40: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2137245386838913
    2. '("' → logprob: -2.3387246131896973
    3. '(a' → logprob: -2.5887246131896973
    4. '('' → logprob: -4.588724613189697
    5. '(abs' → logprob: -4.963724613189697
    6. '((' → logprob: -6.463724613189697
    7. '()' → logprob: -7.338724613189697
    8. '(max' → logprob: -7.713724613189697
    9. '("("' → logprob: -8.463724136352539
    10. '(True' → logprob: -8.713724136352539

Token 41: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15417183935642242
    2. '+' → logprob: -2.654171943664551
    3. ' +' → logprob: -3.154171943664551
    4. ' -' → logprob: -4.154171943664551
    5. '-' → logprob: -4.779171943664551
    6. ' )' → logprob: -6.154171943664551
    7. ',' → logprob: -7.029171943664551
    8. '*' → logprob: -7.279171943664551
    9. '+b' → logprob: -7.279171943664551
    10. '-b' → logprob: -7.904171943664551

Token 42: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3257075548171997
    2. ' b' → logprob: -1.3257075548171997
    3. 'c' → logprob: -5.07570743560791
    4. ' c' → logprob: -5.20070743560791
    5. '1' → logprob: -7.95070743560791
    6. 'k' → logprob: -9.32570743560791
    7. ' ' → logprob: -10.07570743560791
    8. ' k' → logprob: -10.07570743560791
    9. ')' → logprob: -10.20070743560791
    10. 'a' → logprob: -11.57570743560791

Token 43: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034273360506631434
    2. ')
' → logprob: -8.50034236907959
    3. '+' → logprob: -9.37534236907959
    4. ' )' → logprob: -10.87534236907959
    5. '))' → logprob: -11.75034236907959
    6. '*' → logprob: -12.00034236907959
    7. '   ' → logprob: -12.25034236907959
    8. '-' → logprob: -12.87534236907959
    9. ')
' → logprob: -13.00034236907959
    10. ' +' → logprob: -13.50034236907959

Token 44: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2901636064052582
    2. ' else' → logprob: -1.7901636362075806
    3. '   ' → logprob: -2.665163516998291
    4. 'elif' → logprob: -5.790163516998291
    5. '	else' → logprob: -6.165163516998291
    6. ')' → logprob: -6.290163516998291
    7. '<|end|>' → logprob: -6.540163516998291
    8. ':' → logprob: -6.665163516998291
    9. '\n' → logprob: -6.790163516998291
    10. '       ' → logprob: -7.040163516998291

Token 45: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10823369026184082
    2. ' else' → logprob: -2.608233690261841
    3. '   ' → logprob: -3.858233690261841
    4. 'elif' → logprob: -5.233233451843262
    5. ' ' → logprob: -7.358233451843262
    6. '	else' → logprob: -7.858233451843262
    7. '<|end|>' → logprob: -7.983233451843262
    8. '       ' → logprob: -8.233233451843262
    9. ')' → logprob: -8.358233451843262
    10. ' elif' → logprob: -8.483233451843262

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00031186718842945993
    2. ':
' → logprob: -8.750311851501465
    3. '       ' → logprob: -9.125311851501465
    4. ' :' → logprob: -10.500311851501465
    5. '   ' → logprob: -11.500311851501465
    6. '    ' → logprob: -13.625311851501465
    7. ',' → logprob: -13.750311851501465
    8. '      ' → logprob: -14.500311851501465
    9. '):' → logprob: -14.625311851501465
    10. '        ' → logprob: -14.875311851501465

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04402146488428116
    2. 'print' → logprob: -3.1690213680267334
    3. '```' → logprob: -7.6690216064453125
    4. '0' → logprob: -9.044021606445312
    5. '   ' → logprob: -9.169021606445312
    6. ' print' → logprob: -9.294021606445312
    7. '           ' → logprob: -9.794021606445312
    8. '`' → logprob: -10.544021606445312
    9. 'c' → logprob: -10.794021606445312
    10. '``' → logprob: -10.794021606445312

Token 48: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0002569289645180106
    2. 'c' → logprob: -8.625256538391113
    3. ' print' → logprob: -10.000256538391113
    4. '       ' → logprob: -10.750256538391113
    5. '   ' → logprob: -12.625256538391113
    6. '0' → logprob: -13.125256538391113
    7. ' ' → logprob: -13.875256538391113
    8. '```' → logprob: -14.125256538391113
    9. 'b' → logprob: -14.375256538391113
    10. 'a' → logprob: -14.375256538391113

Token 49: '("' (ID: 568)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.9255578517913818
    2. '(' → logprob: -1.4255578517913818
    3. '(a' → logprob: -1.4255578517913818
    4. '(c' → logprob: -2.800557851791382
    5. 'b' → logprob: -3.175557851791382
    6. 'a' → logprob: -4.675558090209961
    7. '(abs' → logprob: -5.675558090209961
    8. 'c' → logprob: -5.800558090209961
    9. '0' → logprob: -6.550558090209961
    10. '(-' → logprob: -7.425558090209961

Token 50: 'Un' (ID: 2265)
  Prédit: 'Un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Un' → logprob: -0.9253745079040527
    2. 'Too' → logprob: -1.8003745079040527
    3. 'Overflow' → logprob: -1.9253745079040527
    4. 'Big' → logprob: -3.0503745079040527
    5. 'overflow' → logprob: -3.1753745079040527
    6. '-' → logprob: -3.5503745079040527
    7. 'Large' → logprob: -3.6753745079040527
    8. 'b' → logprob: -3.8003745079040527
    9. 'un' → logprob: -4.050374507904053
    10. 'Undefined' → logprob: -4.425374507904053

Token 51: 'fair' (ID: 53923)
  Prédit: 'bounded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bounded' → logprob: -0.4374518394470215
    2. 'defined' → logprob: -2.0624518394470215
    3. 'known' → logprob: -3.0624518394470215
    4. 'reachable' → logprob: -3.1874518394470215
    5. 'def' → logprob: -3.3124518394470215
    6. 'k' → logprob: -3.5624518394470215
    7. 'b' → logprob: -5.0624518394470215
    8. 'predict' → logprob: -5.3124518394470215
    9. 'print' → logprob: -5.3124518394470215
    10. 'handled' → logprob: -5.5624518394470215

Token 52: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.001852243090979755
    2. ')' → logprob: -6.501852035522461
    3. ')")' → logprob: -8.876852035522461
    4. '")
' → logprob: -9.501852035522461
    5. '")
' → logprob: -10.126852035522461
    6. '!")' → logprob: -10.251852035522461
    7. ' ")' → logprob: -11.501852035522461
    8. '"' → logprob: -11.626852035522461
    9. ' game' → logprob: -12.126852035522461
    10. 'a' → logprob: -12.501852035522461

Token 53: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.02341259829699993
    2. 'elif' → logprob: -4.523412704467773
    3. ' else' → logprob: -4.898412704467773
    4. '```' → logprob: -6.273412704467773
    5. '<|end|>' → logprob: -6.773412704467773
    6. '
' → logprob: -7.398412704467773
    7. '    
' → logprob: -8.148412704467773
    8. '\n' → logprob: -8.523412704467773
    9. '   ' → logprob: -8.648412704467773
    10. ':
' → logprob: -9.398412704467773

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012155943550169468
    2. '   ' → logprob: -6.87621545791626
    3. ':
' → logprob: -8.876215934753418
    4. ' :' → logprob: -11.001215934753418
    5. '<|end|>' → logprob: -11.751215934753418
    6. '    ' → logprob: -12.376215934753418
    7. '```' → logprob: -12.626215934753418
    8. ',' → logprob: -12.626215934753418
    9. '       ' → logprob: -13.126215934753418
    10. '<|end|>' → logprob: -14.376215934753418

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42547371983528137
    2. 'print' → logprob: -1.675473690032959
    3. ' c' → logprob: -3.050473690032959
    4. 'c' → logprob: -3.675473690032959
    5. ' print' → logprob: -3.675473690032959
    6. '    ' → logprob: -4.425473690032959
    7. ' ' → logprob: -4.550473690032959
    8. '       ' → logprob: -4.550473690032959
    9. 'abs' → logprob: -4.550473690032959
    10. '```' → logprob: -5.175473690032959

Token 56: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20308879017829895
    2. 'abs' → logprob: -2.0780887603759766
    3. 'c' → logprob: -4.453088760375977
    4. ' print' → logprob: -4.703088760375977
    5. '   ' → logprob: -4.953088760375977
    6. ' abs' → logprob: -5.078088760375977
    7. ' ' → logprob: -5.203088760375977
    8. 'a' → logprob: -5.453088760375977
    9. ' c' → logprob: -5.703088760375977
    10. 'b' → logprob: -5.953088760375977

Token 57: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.42472901940345764
    2. 'abs' → logprob: -1.5497289896011353
    3. ' a' → logprob: -2.924729108810425
    4. ' c' → logprob: -3.174729108810425
    5. ' (' → logprob: -4.049728870391846
    6. 'a' → logprob: -4.549728870391846
    7. 'c' → logprob: -5.174728870391846
    8. '(abs' → logprob: -6.174728870391846
    9. ' ' → logprob: -7.049728870391846
    10. '(a' → logprob: -7.549728870391846

Token 58: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2951403260231018
    2. '(a' → logprob: -1.420140266418457
    3. '(c' → logprob: -4.295140266418457
    4. '(b' → logprob: -9.420140266418457
    5. 'a' → logprob: -10.045140266418457
    6. '<|end|>' → logprob: -10.170140266418457
    7. '(k' → logprob: -10.670140266418457
    8. '(abs' → logprob: -10.795140266418457
    9. '((' → logprob: -11.920140266418457
    10. '(user' → logprob: -11.920140266418457

Token 59: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.24880589544773102
    2. ' +' → logprob: -2.1238059997558594
    3. '-' → logprob: -2.8738059997558594
    4. '+' → logprob: -3.1238059997558594
    5. ')' → logprob: -9.87380599975586
    6. ' ' → logprob: -10.24880599975586
    7. '+b' → logprob: -10.24880599975586
    8. '+c' → logprob: -10.49880599975586
    9. '-b' → logprob: -11.49880599975586
    10. ' plus' → logprob: -11.68630599975586

Token 60: ' b' (ID: 287)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5782669186592102
    2. 'b' → logprob: -0.9532669186592102
    3. ' c' → logprob: -3.3282668590545654
    4. ' b' → logprob: -4.0782670974731445
    5. '<|end|>' → logprob: -8.078267097473145
    6. ' ' → logprob: -9.328267097473145
    7. '-b' → logprob: -9.328267097473145
    8. '-c' → logprob: -10.078267097473145
    9. ')c' → logprob: -10.078267097473145
    10. ')b' → logprob: -10.078267097473145

Token 61: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013445195509120822
    2. ' )' → logprob: -6.751344680786133
    3. ' >' → logprob: -10.001344680786133
    4. '>' → logprob: -10.626344680786133
    5. ' <' → logprob: -10.626344680786133
    6. ')>' → logprob: -11.126344680786133
    7. '   ' → logprob: -11.501344680786133
    8. '+' → logprob: -11.751344680786133
    9. ' >=' → logprob: -11.751344680786133
    10. ')<' → logprob: -11.751344680786133

Token 62: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.05087653174996376
    2. ' >' → logprob: -3.3008766174316406
    3. ' >=' → logprob: -5.050876617431641
    4. '<' → logprob: -5.425876617431641
    5. ' <=' → logprob: -7.050876617431641
    6. '>' → logprob: -7.300876617431641
    7. ' ' → logprob: -9.17587661743164
    8. ')' → logprob: -9.42587661743164
    9. '>=' → logprob: -10.17587661743164
    10. '   ' → logprob: -10.30087661743164

Token 63: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3547091484069824
    2. '10' → logprob: -1.2297091484069824
    3. 'c' → logprob: -5.479709148406982
    4. ' c' → logprob: -6.479709148406982
    5. '1' → logprob: -8.72970962524414
    6. ' abs' → logprob: -9.22970962524414
    7. '100' → logprob: -10.29220962524414
    8. ' k' → logprob: -10.41720962524414
    9. 'a' → logprob: -10.60470962524414
    10. 'abs' → logprob: -10.66720962524414

Token 64: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.003081690752878785
    2. 'c' → logprob: -5.878081798553467
    3. ' ' → logprob: -8.753081321716309
    4. '1' → logprob: -9.378081321716309
    5. 'a' → logprob: -12.003081321716309
    6. '100' → logprob: -12.378081321716309
    7. ' c' → logprob: -12.378081321716309
    8. '(' → logprob: -12.503081321716309
    9. '```' → logprob: -12.753081321716309
    10. 'k' → logprob: -13.128081321716309

Token 65: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.05017361417412758
    2. ' **' → logprob: -3.30017352104187
    3. '18' → logprob: -4.425173759460449
    4. ' ' → logprob: -9.92517375946045
    5. '*' → logprob: -11.30017375946045
    6. '```' → logprob: -11.55017375946045
    7. '^' → logprob: -12.17517375946045
    8. '​' → logprob: -12.80017375946045
    9. '9' → logprob: -13.42517375946045
    10. '17' → logprob: -13.42517375946045

Token 66: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -3.1424973713001236e-05
    2. '19' → logprob: -11.250031471252441
    3. '17' → logprob: -11.750031471252441
    4. '9' → logprob: -12.625031471252441
    5. ' ' → logprob: -13.250031471252441
    6. '15' → logprob: -14.125031471252441
    7. '```' → logprob: -14.250031471252441
    8. '16' → logprob: -14.375031471252441
    9. '1' → logprob: -14.562531471252441
    10. 'c' → logprob: -14.750031471252441

Token 67: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -6.480199954239652e-05
    2. '1' → logprob: -9.875064849853516
    3. '19' → logprob: -11.875064849853516
    4. '17' → logprob: -13.750064849853516
    5. '9' → logprob: -14.000064849853516
    6. '15' → logprob: -14.375064849853516
    7. '20' → logprob: -14.375064849853516
    8. '```' → logprob: -14.812564849853516
    9. '10' → logprob: -14.937564849853516
    10. '8' → logprob: -15.250064849853516

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014793036505579948
    2. ':
' → logprob: -4.2647929191589355
    3. '       ' → logprob: -7.5147929191589355
    4. ' :' → logprob: -10.264793395996094
    5. '):' → logprob: -11.264793395996094
    6. ' :
' → logprob: -11.639793395996094
    7. '   ' → logprob: -11.639793395996094
    8. '):
' → logprob: -11.889793395996094
    9. ':

' → logprob: -12.639793395996094
    10. ':
' → logprob: -13.014793395996094

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018863992590922862
    2. '<|end|>' → logprob: -10.125188827514648
    3. '   ' → logprob: -10.625188827514648
    4. ':' → logprob: -10.625188827514648
    5. 'print' → logprob: -10.750188827514648
    6. '+' → logprob: -11.625188827514648
    7. '```' → logprob: -11.750188827514648
    8. '      ' → logprob: -12.000188827514648
    9. '        ' → logprob: -12.000188827514648
    10. '(' → logprob: -12.125188827514648

Token 70: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0017530106706544757
    2. '   ' → logprob: -7.126752853393555
    3. ' print' → logprob: -7.626752853393555
    4. '       ' → logprob: -7.751752853393555
    5. '```' → logprob: -11.126752853393555
    6. '	print' → logprob: -11.751752853393555
    7. ' ' → logprob: -12.876752853393555
    8. '  ' → logprob: -14.251752853393555
    9. 'c' → logprob: -14.501752853393555
    10. 'printf' → logprob: -14.626752853393555

Token 71: '(b' (ID: 3229)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2010963410139084
    2. '(b' → logprob: -1.9510962963104248
    3. '(' → logprob: -4.326096534729004
    4. '(c' → logprob: -4.451096534729004
    5. '(abs' → logprob: -4.451096534729004
    6. 'a' → logprob: -5.951096534729004
    7. 'b' → logprob: -7.576096534729004
    8. 'abs' → logprob: -8.326096534729004
    9. 'c' → logprob: -9.951096534729004
    10. '((' → logprob: -10.201096534729004

Token 72: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01252718921750784
    2. '-' → logprob: -4.387526988983154
    3. ')' → logprob: -11.762527465820312
    4. ' ' → logprob: -12.012527465820312
    5. '-a' → logprob: -13.512527465820312
    6. '   ' → logprob: -14.137527465820312
    7. 'a' → logprob: -14.762527465820312
    8. ' -
' → logprob: -14.887527465820312
    9. ' +' → logprob: -15.387527465820312
    10. ',' → logprob: -16.137527465820312

Token 73: ' a' (ID: 261)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5246221423149109
    2. 'a' → logprob: -0.8996221423149109
    3. ' c' → logprob: -6.774621963500977
    4. ' a' → logprob: -8.024621963500977
    5. ' ' → logprob: -11.649621963500977
    6. '-a' → logprob: -12.524621963500977
    7. '   ' → logprob: -12.524621963500977
    8. '-c' → logprob: -12.649621963500977
    9. '  ' → logprob: -13.024621963500977
    10. '	c' → logprob: -13.399621963500977

Token 74: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008926184847950935
    2. ')
' → logprob: -4.7589263916015625
    3. '   ' → logprob: -8.133926391601562
    4. ')
' → logprob: -11.133926391601562
    5. ' )' → logprob: -13.008926391601562
    6. '       ' → logprob: -14.758926391601562
    7. '))' → logprob: -15.508926391601562
    8. ')

' → logprob: -15.758926391601562
    9. ' )
' → logprob: -16.133926391601562
    10. '）' → logprob: -16.383926391601562

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00903263408690691
    2. 'else' → logprob: -4.759032726287842
    3. ' else' → logprob: -8.134032249450684
    4. '       ' → logprob: -9.634032249450684
    5. '<|end|>' → logprob: -10.009032249450684
    6. '	else' → logprob: -12.509032249450684
    7. '```' → logprob: -12.759032249450684
    8. 'elif' → logprob: -12.759032249450684
    9. '  ' → logprob: -13.634032249450684
    10. '<|end|>' → logprob: -14.009032249450684

Token 76: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.03981606289744377
    2. '   ' → logprob: -3.28981614112854
    3. '       ' → logprob: -6.914815902709961
    4. ' else' → logprob: -7.164815902709961
    5. 'elif' → logprob: -12.789815902709961
    6. ' ' → logprob: -13.414815902709961
    7. '	else' → logprob: -13.664815902709961
    8. '```' → logprob: -14.039815902709961
    9. '  ' → logprob: -15.039815902709961
    10. '    ' → logprob: -16.78981590270996

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04607227072119713
    2. '       ' → logprob: -3.171072244644165
    3. ':
' → logprob: -5.796072483062744
    4. '):' → logprob: -11.796072006225586
    5. '   ' → logprob: -12.171072006225586
    6. ' :' → logprob: -12.421072006225586
    7. '):
' → logprob: -13.171072006225586
    8. '```' → logprob: -13.546072006225586
    9. '           ' → logprob: -13.671072006225586
    10. '        ' → logprob: -13.671072006225586

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006109504960477352
    2. 'print' → logprob: -5.131109714508057
    3. '   ' → logprob: -9.006109237670898
    4. ' print' → logprob: -10.006109237670898
    5. '```' → logprob: -12.006109237670898
    6. '           ' → logprob: -12.506109237670898
    7. '     ' → logprob: -14.006109237670898
    8. '      ' → logprob: -14.131109237670898
    9. '	print' → logprob: -14.506109237670898
    10. '    ' → logprob: -15.256109237670898

Token 79: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.309382373117842e-05
    2. '       ' → logprob: -10.750033378601074
    3. '```' → logprob: -12.000033378601074
    4. ' print' → logprob: -12.500033378601074
    5. '   ' → logprob: -13.375033378601074
    6. '``' → logprob: -16.250032424926758
    7. '	print' → logprob: -16.500032424926758
    8. 'pr' → logprob: -17.875032424926758
    9. '           ' → logprob: -18.250032424926758
    10. 'Print' → logprob: -18.375032424926758

Token 80: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.16123433411121368
    2. '(' → logprob: -1.9112343788146973
    3. '"' → logprob: -6.911234378814697
    4. '(Un' → logprob: -11.661233901977539
    5. '("""' → logprob: -13.661233901977539
    6. '('' → logprob: -13.911233901977539
    7. '(
' → logprob: -14.286233901977539
    8. '("("' → logprob: -15.286233901977539
    9. '("")' → logprob: -15.661233901977539
    10. ')' → logprob: -15.911233901977539

Token 81: 'Un' (ID: 2265)
  Prédit: 'Un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Un' → logprob: -0.0003362966235727072
    2. '"' → logprob: -8.000336647033691
    3. '(Un' → logprob: -15.000336647033691
    4. 'Une' → logprob: -15.875336647033691
    5. 'Fair' → logprob: -16.000335693359375
    6. 'U' → logprob: -16.375335693359375
    7. ' Un' → logprob: -16.875335693359375
    8. '")' → logprob: -17.500335693359375
    9. 'Una' → logprob: -17.625335693359375
    10. '_Un' → logprob: -18.000335693359375

Token 82: 'fair' (ID: 53923)
  Prédit: 'fair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fair' → logprob: -0.36970388889312744
    2. 'f' → logprob: -1.8697038888931274
    3. 'fa' → logprob: -1.8697038888931274
    4. 'faire' → logprob: -8.744704246520996
    5. 'fail' → logprob: -8.994704246520996
    6. 'fait' → logprob: -9.244704246520996
    7. 'far' → logprob: -9.369704246520996
    8. '``' → logprob: -10.744704246520996
    9. 'a' → logprob: -10.869704246520996
    10. '"' → logprob: -10.869704246520996

Token 83: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006722471676766872
    2. '")' → logprob: -5.006722450256348
    3. '')' → logprob: -12.631722450256348
    4. ')
' → logprob: -13.256722450256348
    5. ')")' → logprob: -13.881722450256348
    6. '`)' → logprob: -14.506722450256348
    7. '```' → logprob: -15.006722450256348
    8. '}' → logprob: -16.131723403930664
    9. '）' → logprob: -17.256723403930664
    10. ' )' → logprob: -17.381723403930664


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 81
Tokens correctement prédits (1ère position, stricte): 28
Tokens correctement prédits (1ère position, avec adaptation): 33
Tokens correctement prédits (top 10): 68
Précision stricte (1ère position): 34.57%
Précision adaptée (1ère position): 40.74%
Précision (top 10): 83.95%
================================================================================
