================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import copy

N = int(input())
l = []
for i in range(N):
    l.append(int(input()))
M = max(l)
L = copy.copy(l)
l.remove(M)
m = max(l)
for j in range(N):
    if L[j] == M:
        print(m)
    else:
        print(M)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' copy' (ID: 5150)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005103422328829765
    2. '.copy' → logprob: -6.505103588104248
    3. '.deepcopy' → logprob: -7.005103588104248
    4. 'import' → logprob: -7.005103588104248
    5. '\' → logprob: -7.505103588104248
    6. '```' → logprob: -8.38010311126709
    7. ' ' → logprob: -8.38010311126709
    8. '\n' → logprob: -9.13010311126709
    9. '(' → logprob: -9.38010311126709
    10. '[' → logprob: -9.63010311126709

Token 4: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33894282579421997
    2. 'e' → logprob: -2.463942766189575
    3. 'ew' → logprob: -2.713942766189575
    4. 'a' → logprob: -3.088942766189575
    5. 'ame' → logprob: -3.838942766189575
    6. 'umber' → logprob: -4.463943004608154
    7. ' =' → logprob: -4.588943004608154
    8. 'et' → logprob: -4.838943004608154
    9. '_' → logprob: -4.963943004608154
    10. 'E' → logprob: -4.963943004608154

Token 5: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009340228512883186
    2. '10' → logprob: -4.759340286254883
    3. '5' → logprob: -7.634340286254883
    4. '32' → logprob: -9.759340286254883
    5. '100' → logprob: -10.134340286254883
    6. '20' → logprob: -10.259340286254883
    7. '0' → logprob: -10.634340286254883
    8. 'copy' → logprob: -10.884340286254883
    9. '3' → logprob: -11.009340286254883
    10. '4' → logprob: -11.009340286254883

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000286364956991747
    2. '()' → logprob: -9.125286102294922
    3. '('' → logprob: -9.625286102294922
    4. ''' → logprob: -10.500286102294922
    5. ' (' → logprob: -10.875286102294922
    6. '```' → logprob: -10.875286102294922
    7. ')' → logprob: -12.000286102294922
    8. '(copy' → logprob: -12.250286102294922
    9. '(N' → logprob: -12.375286102294922
    10. '`' → logprob: -12.375286102294922

Token 7: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09085971862077713
    2. '()' → logprob: -2.7158596515655518
    3. ')' → logprob: -3.9658596515655518
    4. '())' → logprob: -6.590859889984131
    5. '(
' → logprob: -8.465859413146973
    6. '('' → logprob: -10.215859413146973
    7. '(

' → logprob: -10.590859413146973
    8. '("("' → logprob: -10.840859413146973
    9. '(""))' → logprob: -11.215859413146973
    10. '))' → logprob: -11.590859413146973

Token 8: 'l' (ID: 75)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1595537662506104
    2. 'data' → logprob: -1.1595537662506104
    3. 'arr' → logprob: -1.9095537662506104
    4. 'array' → logprob: -2.9095537662506104
    5. 'matrix' → logprob: -3.2845537662506104
    6. 'lst' → logprob: -3.5345537662506104
    7. 'for' → logprob: -3.6595537662506104
    8. ')' → logprob: -3.9095537662506104
    9. 'dp' → logprob: -4.284553527832031
    10. 'd' → logprob: -5.034553527832031

Token 9: ' =' (ID: 314)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.122983694076538
    2. 'ist' → logprob: -1.122983694076538
    3. 's' → logprob: -2.122983694076538
    4. '_' → logprob: -2.497983694076538
    5. 'is' → logprob: -2.497983694076538
    6. ' =' → logprob: -3.497983694076538
    7. '_i' → logprob: -4.372983932495117
    8. 'st' → logprob: -4.622983932495117
    9. '[i' → logprob: -5.997983932495117
    10. 'ists' → logprob: -6.247983932495117

Token 10: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.0196067094802856
    2. ' [' → logprob: -1.1446067094802856
    3. ' copy' → logprob: -2.269606590270996
    4. ' list' → logprob: -2.644606590270996
    5. '[' → logprob: -2.769606590270996
    6. 'copy' → logprob: -3.269606590270996
    7. 'list' → logprob: -3.894606590270996
    8. '[]' → logprob: -4.144606590270996
    9. ' ' → logprob: -5.269606590270996
    10. '[list' → logprob: -6.769606590270996

Token 11: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002491118386387825
    2. ' for' → logprob: -6.002490997314453
    3. '[' → logprob: -12.127490997314453
    4. ' ' → logprob: -12.752490997314453
    5. '```' → logprob: -12.877490997314453
    6. ' 
' → logprob: -13.002490997314453
    7. '	for' → logprob: -14.877490997314453
    8. '_' → logprob: -15.127490997314453
    9. '  
' → logprob: -15.377490997314453
    10. '`' → logprob: -15.377490997314453

Token 12: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003353566862642765
    2. ' i' → logprob: -6.003353595733643
    3. '  ' → logprob: -7.503353595733643
    4. ' _' → logprob: -8.628353118896484
    5. '_' → logprob: -9.003353118896484
    6. 'i' → logprob: -11.253353118896484
    7. ' ‌' → logprob: -12.628353118896484
    8. ' )' → logprob: -13.253353118896484
    9. ' ' → logprob: -13.378353118896484
    10. ' range' → logprob: -14.128353118896484

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10220445692539215
    2. 'in' → logprob: -2.4772045612335205
    3. ' ' → logprob: -4.477204322814941
    4. 'n' → logprob: -6.602204322814941
    5. '_' → logprob: -8.727204322814941
    6. '  ' → logprob: -9.227204322814941
    7. ' n' → logprob: -9.477204322814941
    8. 'range' → logprob: -10.727204322814941
    9. ' i' → logprob: -11.227204322814941
    10. '	in' → logprob: -11.727204322814941

Token 14: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.023267609998583794
    2. 'range' → logprob: -3.7732675075531006
    3. ' ' → logprob: -10.77326774597168
    4. '_' → logprob: -14.14826774597168
    5. '	range' → logprob: -15.77326774597168
    6. '```' → logprob: -16.27326774597168
    7. '  ' → logprob: -16.77326774597168
    8. ' in' → logprob: -16.89826774597168
    9. ' xrange' → logprob: -17.39826774597168
    10. ' ran' → logprob: -17.77326774597168

Token 15: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03737187013030052
    2. '(N' → logprob: -3.662371873855591
    3. ' (' → logprob: -4.537371635437012
    4. '(n' → logprob: -8.412371635437012
    5. '(len' → logprob: -9.912371635437012
    6. '(range' → logprob: -11.287371635437012
    7. '(
' → logprob: -11.912371635437012
    8. '(i' → logprob: -12.287371635437012
    9. '()' → logprob: -13.037371635437012
    10. '(length' → logprob: -13.537371635437012

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000636308453977108
    2. ')' → logprob: -7.625636100769043
    3. '+' → logprob: -9.750636100769043
    4. '):
' → logprob: -10.000636100769043
    5. ':' → logprob: -10.375636100769043
    6. ' ):' → logprob: -11.375636100769043
    7. ' ' → logprob: -15.375636100769043
    8. ',' → logprob: -15.500636100769043
    9. '```' → logprob: -15.625636100769043
    10. '):
' → logprob: -15.750636100769043

Token 17: '   ' (ID: 271)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4211609959602356
    2. ' ' → logprob: -1.4211609363555908
    3. '   ' → logprob: -2.921160936355591
    4. '    ' → logprob: -3.421160936355591
    5. 'l' → logprob: -4.92116117477417
    6. ' input' → logprob: -5.92116117477417
    7. '     
' → logprob: -6.04616117477417
    8. ' 
' → logprob: -7.29616117477417
    9. '    
' → logprob: -7.67116117477417
    10. ' ' → logprob: -7.67116117477417

Token 18: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.0036670563276857138
    2. 'l' (adapté à ' l') → logprob: -6.753666877746582
    3. ' line' → logprob: -7.128666877746582
    4. ' ' → logprob: -7.628666877746582
    5. ' data' → logprob: -8.503666877746582
    6. '   ' → logprob: -8.753666877746582
    7. '    ' → logprob: -8.878666877746582
    8. ' lst' → logprob: -9.128666877746582
    9. ' s' → logprob: -9.253666877746582
    10. ' input' → logprob: -9.378666877746582

Token 19: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.38693854212760925
    2. '.' → logprob: -1.1369385719299316
    3. '.extend' → logprob: -10.261938095092773
    4. '.app' → logprob: -11.261938095092773
    5. ' .' → logprob: -11.386938095092773
    6. '.ap' → logprob: -12.761938095092773
    7. 'append' → logprob: -13.136938095092773
    8. '.=' → logprob: -14.511938095092773
    9. ' =' → logprob: -14.761938095092773
    10. '.insert' → logprob: -15.261938095092773

Token 20: '(int' (ID: 2742)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.8085629343986511
    2. '(' → logprob: -0.9335629343986511
    3. '(copy' → logprob: -2.058562994003296
    4. '(input' → logprob: -3.933562994003296
    5. '(int' → logprob: -4.683562755584717
    6. '([]' → logprob: -5.808562755584717
    7. '(tuple' → logprob: -7.308562755584717
    8. '([' → logprob: -7.558562755584717
    9. 'list' → logprob: -8.433563232421875
    10. 'copy' → logprob: -9.058563232421875

Token 21: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.100224569439888
    2. '(' → logprob: -2.350224494934082
    3. '()' → logprob: -11.850224494934082
    4. 'input' → logprob: -12.600224494934082
    5. '(
' → logprob: -12.850224494934082
    6. '(

' → logprob: -13.350224494934082
    7. ')' → logprob: -13.725224494934082
    8. ' (' → logprob: -14.475224494934082
    9. '(in' → logprob: -15.475224494934082
    10. ',input' → logprob: -15.725224494934082

Token 22: '()))
' (ID: 24521)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6989037990570068
    2. '()))' → logprob: -0.6989037990570068
    3. '()' → logprob: -5.198904037475586
    4. '(' → logprob: -9.323904037475586
    5. '())))' → logprob: -10.323904037475586
    6. ')' → logprob: -10.698904037475586
    7. '()))
' → logprob: -11.198904037475586
    8. '())
' → logprob: -11.323904037475586
    9. '()));' → logprob: -11.323904037475586
    10. '))' → logprob: -11.323904037475586

Token 23: 'M' (ID: 44)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8119645714759827
    2. 's' → logprob: -1.811964511871338
    3. 'm' → logprob: -2.061964511871338
    4. 'max' → logprob: -2.186964511871338
    5. 'd' → logprob: -3.311964511871338
    6. 'sum' → logprob: -3.811964511871338
    7. 'for' → logprob: -3.936964511871338
    8. 'min' → logprob: -4.686964511871338
    9. 'n' → logprob: -5.061964511871338
    10. 'c' → logprob: -5.061964511871338

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016569044440984726
    2. '=' → logprob: -4.141569137573242
    3. 'a' → logprob: -8.641569137573242
    4. '_' → logprob: -9.266569137573242
    5. 'A' → logprob: -9.266569137573242
    6. 'ax' → logprob: -9.891569137573242
    7. ' ' → logprob: -10.016569137573242
    8. '  ' → logprob: -10.641569137573242
    9. '   ' → logprob: -11.391569137573242
    10. '_a' → logprob: -12.016569137573242

Token 25: ' max' (ID: 2999)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4677455723285675
    2. 'int' → logprob: -1.0927455425262451
    3. ' copy' → logprob: -4.092745780944824
    4. 'copy' → logprob: -4.217745780944824
    5. ' l' → logprob: -6.842745780944824
    6. 'l' → logprob: -6.967745780944824
    7. ' ' → logprob: -6.967745780944824
    8. ' [' → logprob: -7.092745780944824
    9. '[int' → logprob: -7.592745780944824
    10. ' N' → logprob: -7.717745780944824

Token 26: '(l' (ID: 4179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931771039962769
    2. '(l' → logprob: -0.6931771039962769
    3. '(
' → logprob: -11.318177223205566
    4. '(s' → logprob: -12.818177223205566
    5. '(L' → logprob: -13.068177223205566
    6. '(max' → logprob: -13.193177223205566
    7. 'l' → logprob: -13.443177223205566
    8. '(

' → logprob: -13.568177223205566
    9. '(len' → logprob: -13.818177223205566
    10. ' (' → logprob: -14.068177223205566

Token 27: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008645339403301477
    2. '))' → logprob: -7.125864505767822
    3. ' )' → logprob: -10.37586498260498
    4. ')))' → logprob: -11.37586498260498
    5. '[' → logprob: -12.00086498260498
    6. '()' → logprob: -12.37586498260498
    7. '())' → logprob: -13.25086498260498
    8. '])' → logprob: -13.50086498260498
    9. ')
' → logprob: -14.12586498260498
    10. ')])' → logprob: -14.37586498260498

Token 28: 'L' (ID: 43)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6256825923919678
    2. 'l' → logprob: -1.3756825923919678
    3. ' for' → logprob: -3.6256825923919678
    4. ')' → logprob: -3.6256825923919678
    5. 'print' → logprob: -3.6256825923919678
    6. 'm' → logprob: -3.7506825923919678
    7. 'd' → logprob: -3.8756825923919678
    8. ' 
' → logprob: -4.750682830810547
    9. 'max' → logprob: -4.750682830810547
    10. '*' → logprob: -4.875682830810547

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4834168255329132
    2. '=' → logprob: -2.358416795730591
    3. 'en' → logprob: -2.358416795730591
    4. '[:]' → logprob: -2.608416795730591
    5. '.append' → logprob: -3.233416795730591
    6. '.' → logprob: -3.233416795730591
    7. '.extend' → logprob: -4.35841703414917
    8. 'EN' → logprob: -4.73341703414917
    9. '.copy' → logprob: -5.23341703414917
    10. '[' → logprob: -6.23341703414917

Token 30: ' copy' (ID: 5150)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.04390156641602516
    2. ' copy' → logprob: -3.4189016819000244
    3. 'l' → logprob: -5.293901443481445
    4. '[' → logprob: -5.918901443481445
    5. 'len' → logprob: -7.293901443481445
    6. '[l' → logprob: -7.543901443481445
    7. '[]' → logprob: -7.918901443481445
    8. '[len' → logprob: -8.168901443481445
    9. ' l' → logprob: -8.668901443481445
    10. ' [' → logprob: -8.918901443481445

Token 31: '.copy' (ID: 22925)
  Prédit: '.deepcopy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.deepcopy' → logprob: -0.10576217621564865
    2. '.' → logprob: -2.480762243270874
    3. '.copy' → logprob: -4.105762004852295
    4. ' .' → logprob: -9.230762481689453
    5. '.deep' → logprob: -9.980762481689453
    6. '.l' → logprob: -10.605762481689453
    7. '.L' → logprob: -12.730762481689453
    8. '[:]' → logprob: -12.980762481689453
    9. '.tolist' → logprob: -12.980762481689453
    10. '.max' → logprob: -13.105762481689453

Token 32: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0020476016215980053
    2. '(' → logprob: -6.502047538757324
    3. '(L' → logprob: -7.752047538757324
    4. '(s' → logprob: -9.252047538757324
    5. '(M' → logprob: -11.377047538757324
    6. '(list' → logprob: -12.877047538757324
    7. '(m' → logprob: -13.127047538757324
    8. ' (' → logprob: -13.627047538757324
    9. '((' → logprob: -14.627047538757324
    10. '(ls' → logprob: -15.377047538757324

Token 33: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.566264295950532e-05
    2. ' )' → logprob: -9.875085830688477
    3. ')
' → logprob: -10.625085830688477
    4. '))' → logprob: -11.875085830688477
    5. '[' → logprob: -14.375085830688477
    6. '())' → logprob: -14.750085830688477
    7. ')

' → logprob: -14.875085830688477
    8. '()' → logprob: -15.000085830688477
    9. '`)' → logprob: -15.500085830688477
    10. '(' → logprob: -15.750085830688477

Token 34: 'l' (ID: 75)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.5459901094436646
    2. 'for' → logprob: -0.9209901094436646
    3. 'l' → logprob: -3.920989990234375
    4. 'M' → logprob: -7.295989990234375
    5. ' for' → logprob: -7.545989990234375
    6. 's' → logprob: -8.295989990234375
    7. '[' → logprob: -8.295989990234375
    8. 'print' → logprob: -8.420989990234375
    9. '#' → logprob: -9.545989990234375
    10. 'S' → logprob: -9.545989990234375

Token 35: '.remove' (ID: 7986)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: '(M' (ID: 6103)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2520013749599457
    2. '(M' → logprob: -1.502001404762268
    3. '(max' → logprob: -9.877001762390137
    4. '('' → logprob: -11.502001762390137
    5. '(L' → logprob: -13.002001762390137
    6. '(m' → logprob: -13.377001762390137
    7. '((' → logprob: -13.502001762390137
    8. '(MAX' → logprob: -13.627001762390137
    9. '(Max' → logprob: -13.752001762390137
    10. '("("' → logprob: -14.127001762390137

Token 37: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.791440293658525e-05
    2. ')
' → logprob: -9.500078201293945
    3. ' )' → logprob: -13.000078201293945
    4. ')
' → logprob: -15.500078201293945
    5. ')

' → logprob: -15.500078201293945
    6. '))' → logprob: -16.375078201293945
    7. '')' → logprob: -17.000078201293945
    8. ')`' → logprob: -17.375078201293945
    9. '`)' → logprob: -17.375078201293945
    10. '")' → logprob: -17.750078201293945

Token 38: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6263726353645325
    2. 'M' → logprob: -1.7513725757598877
    3. 'l' → logprob: -1.7513725757598877
    4. 'L' → logprob: -3.6263725757598877
    5. 'if' → logprob: -3.6263725757598877
    6. 'min' → logprob: -4.251372814178467
    7. 'print' → logprob: -4.251372814178467
    8. 'max' → logprob: -4.626372814178467
    9. 's' → logprob: -5.501372814178467
    10. 'for' → logprob: -5.501372814178467

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4287441372871399
    2. 'ax' → logprob: -1.8037440776824951
    3. '=' → logprob: -1.9287440776824951
    4. 'a' → logprob: -3.553744077682495
    5. 'in' → logprob: -4.928744316101074
    6. 'i' → logprob: -6.678744316101074
    7. '=M' → logprob: -7.303744316101074
    8. '=a' → logprob: -8.553744316101074
    9. '=max' → logprob: -9.303744316101074
    10. ' ' → logprob: -9.553744316101074

Token 40: ' max' (ID: 2999)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.13993516564369202
    2. 'max' → logprob: -2.639935255050659
    3. ' min' → logprob: -2.889935255050659
    4. ' max' → logprob: -5.63993501663208
    5. 'M' → logprob: -10.014935493469238
    6. '(min' → logprob: -11.764935493469238
    7. 'l' → logprob: -12.014935493469238
    8. 'm' → logprob: -12.389935493469238
    9. ' M' → logprob: -12.639935493469238
    10. 'in' → logprob: -12.639935493469238

Token 41: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00960308313369751
    2. '(' → logprob: -4.759603023529053
    3. '(L' → logprob: -7.259603023529053
    4. 'l' → logprob: -8.259603500366211
    5. '(m' → logprob: -11.259603500366211
    6. '(
' → logprob: -13.009603500366211
    7. '([' → logprob: -13.259603500366211
    8. '(ll' → logprob: -13.384603500366211
    9. '(s' → logprob: -13.634603500366211
    10. '(M' → logprob: -13.884603500366211

Token 42: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016376927960664034
    2. ')
' → logprob: -6.5016374588012695
    3. '))' → logprob: -9.75163745880127
    4. '())' → logprob: -10.75163745880127
    5. ')

' → logprob: -11.37663745880127
    6. '()' → logprob: -11.37663745880127
    7. ' )' → logprob: -11.75163745880127
    8. ')m' → logprob: -11.75163745880127
    9. ')
' → logprob: -12.50163745880127
    10. 'm' → logprob: -12.87663745880127

Token 43: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.038017988204956
    2. '<|end|>' → logprob: -1.163017988204956
    3. 'm' → logprob: -2.288017988204956
    4. 'print' → logprob: -2.413017988204956
    5. 'l' → logprob: -3.413017988204956
    6. '```' → logprob: -3.413017988204956
    7. '#' → logprob: -4.163018226623535
    8. '+' → logprob: -4.288018226623535
    9. '.' → logprob: -4.413018226623535
    10. ' ' → logprob: -4.913018226623535

Token 44: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.003768493188545108
    2. 'i' → logprob: -6.878768444061279
    3. ' _' → logprob: -7.253768444061279
    4. ' ' → logprob: -7.253768444061279
    5. ' x' → logprob: -7.253768444061279
    6. ' j' → logprob: -8.753768920898438
    7. '_' → logprob: -9.253768920898438
    8. ' ' → logprob: -9.378768920898438
    9. ' L' → logprob: -9.628768920898438
    10. ' l' → logprob: -9.628768920898438

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01613524742424488
    2. 'in' → logprob: -4.141135215759277
    3. ' ' → logprob: -9.391135215759277
    4. '	in' → logprob: -12.266135215759277
    5. '  ' → logprob: -13.016135215759277
    6. 'n' → logprob: -13.391135215759277
    7. 'range' → logprob: -13.391135215759277
    8. '_' → logprob: -14.328635215759277
    9. ' i' → logprob: -14.391135215759277
    10. ' ' → logprob: -14.391135215759277

Token 46: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02185080386698246
    2. ' L' → logprob: -4.0218505859375
    3. ' l' → logprob: -6.1468505859375
    4. 'range' → logprob: -6.6468505859375
    5. 'L' → logprob: -9.0218505859375
    6. ' ' → logprob: -9.6468505859375
    7. '  ' → logprob: -11.0218505859375
    8. '(range' → logprob: -11.1468505859375
    9. 'l' → logprob: -11.6468505859375
    10. ' xrange' → logprob: -12.2718505859375

Token 47: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0610441230237484
    2. '(' → logprob: -3.186044216156006
    3. '(len' → logprob: -4.061044216156006
    4. '(M' → logprob: -8.061043739318848
    5. '(n' → logprob: -9.186043739318848
    6. '(L' → logprob: -9.561043739318848
    7. '(l' → logprob: -10.186043739318848
    8. ' (' → logprob: -10.311043739318848
    9. '(s' → logprob: -11.311043739318848
    10. '((' → logprob: -11.561043739318848

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007155534811317921
    2. '):
' → logprob: -5.132155418395996
    3. ':' → logprob: -6.882155418395996
    4. '-' → logprob: -9.132155418395996
    5. ')' → logprob: -9.632155418395996
    6. '+' → logprob: -11.632155418395996
    7. '):
' → logprob: -11.757155418395996
    8. '{' → logprob: -13.257155418395996
    9. ' ):' → logprob: -13.382155418395996
    10. '}:' → logprob: -13.507155418395996

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05321769043803215
    2. '<|end|>' → logprob: -4.303217887878418
    3. ' ' → logprob: -4.428217887878418
    4. 'print' → logprob: -5.178217887878418
    5. ' print' → logprob: -5.178217887878418
    6. ' if' → logprob: -5.428217887878418
    7. '\' → logprob: -6.053217887878418
    8. '    ' → logprob: -6.303217887878418
    9. ' 
' → logprob: -6.428217887878418
    10. '\n' → logprob: -6.428217887878418

Token 50: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3807389736175537
    2. 'print' → logprob: -2.3807389736175537
    3. ' print' → logprob: -2.5057389736175537
    4. ' if' → logprob: -2.5057389736175537
    5. '\n' → logprob: -4.380739212036133
    6. '<|end|>' → logprob: -4.630739212036133
    7. ' ' → logprob: -4.880739212036133
    8. ' 
' → logprob: -4.880739212036133
    9. '    
' → logprob: -5.130739212036133
    10. 'if' (adapté à ' if') → logprob: -5.130739212036133

Token 51: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.060068659484386444
    2. ' l' → logprob: -3.0600686073303223
    3. 'L' → logprob: -4.560068607330322
    4. 'l' → logprob: -7.435068607330322
    5. ' ' → logprob: -8.06006908416748
    6. '    ' → logprob: -10.93506908416748
    7. '   ' → logprob: -11.43506908416748
    8. ' ' → logprob: -11.56006908416748
    9. ' M' → logprob: -12.68506908416748
    10. '  ' → logprob: -13.06006908416748

Token 52: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.875000953674316
    3. '[i' → logprob: -16.5
    4. '```' → logprob: -16.625
    5. ' [' → logprob: -16.875
    6. '[J' → logprob: -17.0
    7. 'j' → logprob: -18.375
    8. '\[' → logprob: -18.375
    9. '[
' → logprob: -19.0
    10. '[m' → logprob: -19.5

Token 53: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20336762070655823
    2. '==' → logprob: -1.7033675909042358
    3. '=' → logprob: -7.203367710113525
    4. ')' → logprob: -7.828367710113525
    5. ']==' → logprob: -7.828367710113525
    6. ')==' → logprob: -8.453367233276367
    7. ' ' → logprob: -9.328367233276367
    8. ' =' → logprob: -10.328367233276367
    9. ' !=' → logprob: -11.078367233276367
    10. '!=' → logprob: -11.203367233276367

Token 54: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6932569146156311
    2. ' ==' → logprob: -0.6932569146156311
    3. '=' → logprob: -10.568257331848145
    4. ' ' → logprob: -10.818257331848145
    5. '<' → logprob: -11.193257331848145
    6. '!=' → logprob: -11.443257331848145
    7. '==
' → logprob: -11.943257331848145
    8. ' !=' → logprob: -12.193257331848145
    9. '   ' → logprob: -12.318257331848145
    10. ']==' → logprob: -12.693257331848145

Token 55: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0001737431448418647
    2. ' M' → logprob: -8.750173568725586
    3. 'm' → logprob: -11.250173568725586
    4. '	M' → logprob: -13.750173568725586
    5. '   ' → logprob: -15.000173568725586
    6. ' ' → logprob: -15.500173568725586
    7. ' ' → logprob: -16.375173568725586
    8. '  ' → logprob: -16.500173568725586
    9. '<M' → logprob: -16.750173568725586
    10. '>M' → logprob: -16.750173568725586

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004322829656302929
    2. ':
' → logprob: -5.5043230056762695
    3. 'print' → logprob: -8.50432300567627
    4. ' print' → logprob: -11.25432300567627
    5. '):' → logprob: -11.62932300567627
    6. ')' → logprob: -12.00432300567627
    7. 'else' → logprob: -12.50432300567627
    8. ' :' → logprob: -13.37932300567627
    9. ' else' → logprob: -13.62932300567627
    10. '):
' → logprob: -13.75432300567627

Token 57: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22325162589550018
    2. ' print' → logprob: -1.9732515811920166
    3. '   ' → logprob: -3.2232515811920166
    4. '<|end|>' → logprob: -4.723251819610596
    5. ':' → logprob: -5.223251819610596
    6. ':
' → logprob: -5.848251819610596
    7. '       ' → logprob: -6.223251819610596
    8. ',' → logprob: -7.473251819610596
    9. ' ' → logprob: -8.223251342773438
    10. '<|end|>' → logprob: -8.473251342773438

Token 58: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0028916557785123587
    2. ' print' → logprob: -5.877891540527344
    3. '<|end|>' → logprob: -9.877891540527344
    4. '   ' → logprob: -11.127891540527344
    5. '```' → logprob: -12.377891540527344
    6. '#print' → logprob: -12.627891540527344
    7. 'm' → logprob: -13.252891540527344
    8. 's' → logprob: -13.627891540527344
    9. ' m' → logprob: -13.752891540527344
    10. '.print' → logprob: -13.877891540527344

Token 59: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.695805549621582
    2. '(m' → logprob: -0.695805549621582
    3. '(' → logprob: -6.570805549621582
    4. ' m' → logprob: -6.695805549621582
    5. ' (' → logprob: -11.320805549621582
    6. '   ' → logprob: -13.820805549621582
    7. '	m' → logprob: -14.445805549621582
    8. ' ' → logprob: -14.570805549621582
    9. '  ' → logprob: -15.070805549621582
    10. '(max' → logprob: -15.320805549621582

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02633722871541977
    2. ')
' → logprob: -3.651337146759033
    3. ' )' → logprob: -10.901337623596191
    4. '   ' → logprob: -12.276337623596191
    5. 'else' → logprob: -12.401337623596191
    6. ')
' → logprob: -12.776337623596191
    7. ' )
' → logprob: -13.526337623596191
    8. '<|end|>' → logprob: -13.776337623596191
    9. ')

' → logprob: -14.401337623596191
    10. ' else' → logprob: -14.526337623596191

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44258037209510803
    2. 'else' → logprob: -1.0675803422927856
    3. '       ' → logprob: -4.692580223083496
    4. ' else' → logprob: -5.442580223083496
    5. ' ' → logprob: -9.442580223083496
    6. '	else' → logprob: -9.442580223083496
    7. '<|end|>' → logprob: -9.817580223083496
    8. '```' → logprob: -9.942580223083496
    9. '     ' → logprob: -12.192580223083496
    10. '  ' → logprob: -12.192580223083496

Token 62: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.020087955519557
    2. '   ' → logprob: -4.270087718963623
    3. ' else' → logprob: -5.145087718963623
    4. '       ' → logprob: -10.145088195800781
    5. '	else' → logprob: -10.770088195800781
    6. ' ' → logprob: -12.270088195800781
    7. '```' → logprob: -12.270088195800781
    8. '  ' → logprob: -12.395088195800781
    9. '_else' → logprob: -13.645088195800781
    10. '<|end|>' → logprob: -14.020088195800781

Token 63: ':
' (ID: 734)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.674515962600708
    2. 'print' → logprob: -0.924515962600708
    3. '       ' → logprob: -2.424515962600708
    4. '    ' → logprob: -6.549515724182129
    5. '   ' → logprob: -6.799515724182129
    6. ' ' → logprob: -7.299515724182129
    7. '(print' → logprob: -7.299515724182129
    8. '<|end|>' → logprob: -7.674515724182129
    9. '        ' → logprob: -8.299515724182129
    10. '.print' → logprob: -8.674515724182129

Token 64: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00471848389133811
    2. ' print' → logprob: -5.37971830368042
    3. '   ' → logprob: -9.379718780517578
    4. '       ' → logprob: -12.004718780517578
    5. 'M' → logprob: -12.254718780517578
    6. '    ' → logprob: -13.879718780517578
    7. '  ' → logprob: -14.254718780517578
    8. ' ' → logprob: -14.629718780517578
    9. '.print' → logprob: -15.129718780517578
    10. ' M' → logprob: -15.629718780517578

Token 65: ' print' (ID: 2123)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.023262832313776016
    2. 'print' (adapté à ' print') → logprob: -3.7732627391815186
    3. ' M' → logprob: -11.398262977600098
    4. ' print' → logprob: -12.273262977600098
    5. '   ' → logprob: -14.398262977600098
    6. 'L' → logprob: -14.773262977600098
    7. '  ' → logprob: -15.523262977600098
    8. ' ' → logprob: -15.773262977600098
    9. '<|end|>' → logprob: -16.77326202392578
    10. 'Print' → logprob: -16.89826202392578

Token 66: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.16175395250320435
    2. 'M' → logprob: -1.9117538928985596
    3. '(L' → logprob: -7.036754131317139
    4. '(' → logprob: -7.411754131317139
    5. ' M' → logprob: -10.53675365447998
    6. 'L' → logprob: -12.28675365447998
    7. ' ' → logprob: -12.53675365447998
    8. ' (' → logprob: -12.78675365447998
    9. '()' → logprob: -12.91175365447998
    10. '   ' → logprob: -13.41175365447998

Token 67: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -13.875000953674316
    3. '))' → logprob: -16.375001907348633
    4. ' )' → logprob: -16.625001907348633
    5. '')' → logprob: -17.125001907348633
    6. '`)' → logprob: -17.250001907348633
    7. ')`' → logprob: -17.875001907348633
    8. '）' → logprob: -18.375001907348633
    9. '")' → logprob: -19.125001907348633
    10. '})' → logprob: -19.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 65
Tokens correctement prédits (1ère position, stricte): 21
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 52
Précision stricte (1ère position): 32.31%
Précision adaptée (1ère position): 35.38%
Précision (top 10): 80.00%
================================================================================
