================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a = int(input())
b = []
for i in range(a+1):
    if i % 3 == 0 and i % 5 == 0:
        continue
    if i % 3 == 0:
        continue
    if i % 5 == 0:
        continue
    b.append(i)
print(sum(b))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005617309361696243
    2. '(a' → logprob: -8.625561714172363
    3. 'a' → logprob: -8.750561714172363
    4. ''' → logprob: -9.375561714172363
    5. ' (' → logprob: -9.625561714172363
    6. '`' → logprob: -11.125561714172363
    7. '[' → logprob: -11.375561714172363
    8. ')' → logprob: -11.500561714172363
    9. '```' → logprob: -11.500561714172363
    10. '('' → logprob: -11.625561714172363

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11548296362161636
    2. ')' → logprob: -2.240483045578003
    3. '()' → logprob: -6.740482807159424
    4. '())' → logprob: -7.990482807159424
    5. '(
' → logprob: -8.865483283996582
    6. '))' → logprob: -9.115483283996582
    7. '```' → logprob: -9.115483283996582
    8. '(a' → logprob: -9.240483283996582
    9. 'a' → logprob: -9.740483283996582
    10. '`' → logprob: -9.740483283996582

Token 5: 'b' (ID: 65)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02199716493487358
    2. '*' → logprob: -4.021996974945068
    3. '\n' → logprob: -6.771996974945068
    4. '%' → logprob: -6.896996974945068
    5. '#' → logprob: -7.646996974945068
    6. '+
' → logprob: -8.146997451782227
    7. 'a' → logprob: -8.646997451782227
    8. '**' → logprob: -8.896997451782227
    9. '\' → logprob: -8.896997451782227
    10. ')' → logprob: -9.396997451782227

Token 6: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17425929009914398
    2. '=' → logprob: -2.5492591857910156
    3. ' ' → logprob: -3.4242591857910156
    4. ' =' → logprob: -3.4242591857910156
    5. '[' → logprob: -5.174259185791016
    6. ')' → logprob: -5.299259185791016
    7. '*' → logprob: -6.549259185791016
    8. ' +' → logprob: -6.549259185791016
    9. ' +=' → logprob: -6.799259185791016
    10. '+=' → logprob: -7.424259185791016

Token 7: ' []
' (ID: 8911)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.006054413039237261
    2. 'int' → logprob: -5.131054401397705
    3. ' a' → logprob: -9.256054878234863
    4. ' input' → logprob: -11.256054878234863
    5. 'a' → logprob: -11.381054878234863
    6. ' ' → logprob: -12.631054878234863
    7. '=int' → logprob: -14.006054878234863
    8. 'input' → logprob: -14.381054878234863
    9. '<int' → logprob: -14.631054878234863
    10. '[int' → logprob: -15.381054878234863

Token 8: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024570059031248093
    2. '(' → logprob: -5.149569988250732
    3. '[' → logprob: -5.149569988250732
    4. ' for' → logprob: -5.274569988250732
    5. '```' → logprob: -5.899569988250732
    6. '\n' → logprob: -6.024569988250732
    7. '`' → logprob: -7.524569988250732
    8. '\' → logprob: -7.524569988250732
    9. 'f' → logprob: -8.27457046508789
    10. 'a' → logprob: -8.52457046508789

Token 9: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004359740763902664
    2. '  ' → logprob: -5.879359722137451
    3. ' i' → logprob: -6.504359722137451
    4. ' a' → logprob: -10.12936019897461
    5. 'i' → logprob: -11.87936019897461
    6. ' ' → logprob: -12.75436019897461
    7. ' ‌' → logprob: -13.00436019897461
    8. 'a' → logprob: -13.87936019897461
    9. ' b' → logprob: -13.87936019897461
    10. ' ▁' → logprob: -14.87936019897461

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.039528824388980865
    2. ' ' → logprob: -3.7895288467407227
    3. 'in' → logprob: -4.539528846740723
    4. 'n' → logprob: -5.914528846740723
    5. '  ' → logprob: -6.539528846740723
    6. ' n' → logprob: -6.789528846740723
    7. ' i' → logprob: -10.039528846740723
    8. '<|end|>' → logprob: -11.039528846740723
    9. '_' → logprob: -11.164528846740723
    10. ')' → logprob: -11.289528846740723

Token 11: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04868660867214203
    2. 'range' → logprob: -3.0486865043640137
    3. ' ' → logprob: -9.673686981201172
    4. ' a' → logprob: -10.423686981201172
    5. 'a' → logprob: -12.298686981201172
    6. '	range' → logprob: -14.048686981201172
    7. '_range' → logprob: -15.423686981201172
    8. ' in' → logprob: -15.548686981201172
    9. '(range' → logprob: -15.923686981201172
    10. '_' → logprob: -15.923686981201172

Token 12: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004431659355759621
    2. '(a' → logprob: -5.62943172454834
    3. ' (' → logprob: -7.25443172454834
    4. '(len' → logprob: -9.62943172454834
    5. '(n' → logprob: -9.87943172454834
    6. '(space' → logprob: -13.12943172454834
    7. '()' → logprob: -13.87943172454834
    8. '(length' → logprob: -14.12943172454834
    9. '(i' → logprob: -14.12943172454834
    10. '(range' → logprob: -14.62943172454834

Token 13: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0059342472814023495
    2. ')' → logprob: -5.255934238433838
    3. '+' → logprob: -8.130934715270996
    4. '):
' → logprob: -8.505934715270996
    5. ':' → logprob: -9.255934715270996
    6. ' ):' → logprob: -9.380934715270996
    7. ',' → logprob: -11.880934715270996
    8. ')):' → logprob: -13.255934715270996
    9. ' )' → logprob: -13.380934715270996
    10. '   ' → logprob: -13.380934715270996

Token 14: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003603394143283367
    2. ' ' → logprob: -5.628603458404541
    3. '2' → logprob: -13.253602981567383
    4. '0' → logprob: -15.003602981567383
    5. '  ' → logprob: -15.253602981567383
    6. '10' → logprob: -15.253602981567383
    7. ')' → logprob: -16.128602981567383
    8. 'a' → logprob: -16.378602981567383
    9. '5' → logprob: -16.503602981567383
    10. '   ' → logprob: -16.503602981567383

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004107965622097254
    2. ')' → logprob: -5.87910795211792
    3. ':' → logprob: -7.00410795211792
    4. '):
' → logprob: -8.004108428955078
    5. ' ):' → logprob: -9.879108428955078
    6. ',' → logprob: -13.504108428955078
    7. '):
' → logprob: -13.629108428955078
    8. ' :' → logprob: -14.004108428955078
    9. ':)' → logprob: -14.254108428955078
    10. '):

' → logprob: -14.379108428955078

Token 16: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6866697669029236
    2. '   ' → logprob: -0.8116697669029236
    3. 'b' → logprob: -3.5616698265075684
    4. '<|end|>' → logprob: -4.561669826507568
    5. '    ' → logprob: -4.686669826507568
    6. ' b' → logprob: -6.311669826507568
    7. '  ' → logprob: -6.686669826507568
    8. '    
' → logprob: -8.18666934967041
    9. '\' → logprob: -8.43666934967041
    10. ' 
' → logprob: -8.68666934967041

Token 17: ' if' (ID: 538)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20075087249279022
    2. ' b' → logprob: -2.4507508277893066
    3. ' ' → logprob: -2.7007508277893066
    4. '    ' → logprob: -3.8257508277893066
    5. '   ' → logprob: -5.200750827789307
    6. ' ```' → logprob: -8.200751304626465
    7. ' ' → logprob: -9.450751304626465
    8. '```' → logprob: -9.450751304626465
    9. ' 
' → logprob: -9.575751304626465
    10. ' ‌' → logprob: -9.700751304626465

Token 18: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04315231367945671
    2. 'i' → logprob: -3.168152332305908
    3. ' ' → logprob: -9.79315185546875
    4. ' a' → logprob: -10.29315185546875
    5. 'a' → logprob: -10.41815185546875
    6. ' b' → logprob: -11.66815185546875
    7. '(i' → logprob: -11.79315185546875
    8. 'b' → logprob: -12.04315185546875
    9. ' ' → logprob: -12.54315185546875
    10. '	i' → logprob: -12.91815185546875

Token 19: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.21262241899967194
    2. '%' → logprob: -1.7126224040985107
    3. ' ' → logprob: -5.21262264251709
    4. ' ==' → logprob: -5.58762264251709
    5. ' <=' → logprob: -6.83762264251709
    6. '==' → logprob: -7.83762264251709
    7. ' >' → logprob: -8.58762264251709
    8. '>' → logprob: -8.71262264251709
    9. '<|end|>' → logprob: -10.33762264251709
    10. '<=' → logprob: -10.58762264251709

Token 20: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3487153947353363
    2. ' ' → logprob: -1.2237154245376587
    3. '3' → logprob: -8.348715782165527
    4. '1' → logprob: -11.098715782165527
    5. '5' → logprob: -12.223715782165527
    6. '4' → logprob: -12.473715782165527
    7. '10' → logprob: -13.098715782165527
    8. '```' → logprob: -13.223715782165527
    9. '==' → logprob: -13.723715782165527
    10. '6' → logprob: -13.973715782165527

Token 21: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23138287663459778
    2. '3' → logprob: -1.6063828468322754
    3. '5' → logprob: -5.731382846832275
    4. '7' → logprob: -6.481382846832275
    5. '10' → logprob: -7.356382846832275
    6. '4' → logprob: -8.981383323669434
    7. '1' → logprob: -8.981383323669434
    8. ' ' → logprob: -9.481383323669434
    9. '15' → logprob: -9.856383323669434
    10. '100' → logprob: -10.356383323669434

Token 22: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10090771317481995
    2. '==' → logprob: -2.350907802581787
    3. ' !=' → logprob: -7.350907802581787
    4. ' ' → logprob: -10.600907325744629
    5. '!=' → logprob: -10.725907325744629
    6. '=' → logprob: -11.975907325744629
    7. ' =' → logprob: -12.600907325744629
    8. ':' → logprob: -13.975907325744629
    9. ')' → logprob: -14.725907325744629
    10. ' ' → logprob: -15.350907325744629

Token 23: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20143799483776093
    2. ' ' → logprob: -1.7014379501342773
    3. '=' → logprob: -11.201437950134277
    4. '1' → logprob: -11.701437950134277
    5. '==' → logprob: -13.826437950134277
    6. '2' → logprob: -14.826437950134277
    7. ' =' → logprob: -15.076437950134277
    8. '  ' → logprob: -15.201437950134277
    9. ' ==' → logprob: -15.388937950134277
    10. '3' → logprob: -15.388937950134277

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026308655738830566
    2. ' ' → logprob: -3.651308536529541
    3. '1' → logprob: -11.7763090133667
    4. '  ' → logprob: -15.7763090133667
    5. '2' → logprob: -16.151308059692383
    6. '3' → logprob: -16.338808059692383
    7. '=' → logprob: -16.526308059692383
    8. '```' → logprob: -17.026308059692383
    9. '==' → logprob: -17.213808059692383
    10. ' ' → logprob: -17.713808059692383

Token 25: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013871431583538651
    2. ' and' → logprob: -6.876387119293213
    3. ' :' → logprob: -8.251387596130371
    4. ' or' → logprob: -10.626387596130371
    5. '):' → logprob: -10.751387596130371
    6. '       ' → logprob: -10.751387596130371
    7. '   ' → logprob: -11.501387596130371
    8. 'and' → logprob: -12.126387596130371
    9. ':
' → logprob: -12.126387596130371
    10. ':**' → logprob: -12.751387596130371

Token 26: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.003779528196901083
    2. 'i' → logprob: -5.628779411315918
    3. ' ' → logprob: -9.003779411315918
    4. ' (' → logprob: -10.378779411315918
    5. ' not' → logprob: -12.003779411315918
    6. '(i' → logprob: -12.253779411315918
    7. '  ' → logprob: -12.753779411315918
    8. ' ' → logprob: -12.753779411315918
    9. ' a' → logprob: -13.003779411315918
    10. ' b' → logprob: -13.878779411315918

Token 27: ' %' (ID: 1851)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.08837372064590454
    2. ' %' → logprob: -3.0883736610412598
    3. '!=' → logprob: -4.08837366104126
    4. '%' → logprob: -4.21337366104126
    5. ' ' → logprob: -5.21337366104126
    6. ' ==' → logprob: -6.46337366104126
    7. '==' → logprob: -8.838374137878418
    8. '<|end|>' → logprob: -9.463374137878418
    9. ' >' → logprob: -9.963374137878418
    10. '=' → logprob: -10.213374137878418

Token 28: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11613070219755173
    2. '5' → logprob: -2.4911305904388428
    3. '2' → logprob: -3.7411305904388428
    4. '4' → logprob: -6.616130828857422
    5. '7' → logprob: -6.991130828857422
    6. '6' → logprob: -7.616130828857422
    7. '3' → logprob: -8.491130828857422
    8. '1' → logprob: -9.866130828857422
    9. '9' → logprob: -10.866130828857422
    10. '<|end|>' → logprob: -11.116130828857422

Token 29: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.007117891684174538
    2. ' ' → logprob: -5.507117748260498
    3. '7' → logprob: -6.382117748260498
    4. '2' → logprob: -6.632117748260498
    5. '4' → logprob: -11.382118225097656
    6. '  ' → logprob: -13.319618225097656
    7. '6' → logprob: -13.319618225097656
    8. '10' → logprob: -13.382118225097656
    9. '   ' → logprob: -13.444618225097656
    10. '3' → logprob: -13.507118225097656

Token 30: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3077520430088043
    2. '==' → logprob: -1.932752013206482
    3. ' !=' → logprob: -2.1827521324157715
    4. '!=' → logprob: -4.9327521324157715
    5. '=' → logprob: -9.182751655578613
    6. ' ' → logprob: -9.557751655578613
    7. '```' → logprob: -11.307751655578613
    8. ' ' → logprob: -11.557751655578613
    9. '<|end|>' → logprob: -11.932751655578613
    10. ' =' → logprob: -12.807751655578613

Token 31: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42870277166366577
    2. '0' → logprob: -1.0537028312683105
    3. '```' → logprob: -14.428702354431152
    4. '1' → logprob: -14.991202354431152
    5. ' ' → logprob: -15.366202354431152
    6. '=' → logprob: -15.678702354431152
    7. '  ' → logprob: -16.11620330810547
    8. 's' → logprob: -16.55370330810547
    9. '3' → logprob: -16.61620330810547
    10. '2' → logprob: -16.80370330810547

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016035307198762894
    2. ' ' → logprob: -4.141035079956055
    3. '  ' → logprob: -15.516035079956055
    4. '1' → logprob: -15.766035079956055
    5. '```' → logprob: -15.766035079956055
    6. '3' → logprob: -15.953535079956055
    7. 'o' → logprob: -16.141035079956055
    8. '5' → logprob: -16.453535079956055
    9. '9' → logprob: -16.766035079956055
    10. '2' → logprob: -16.828535079956055

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.758300438988954e-05
    2. '):' → logprob: -9.500097274780273
    3. ' :' → logprob: -11.375097274780273
    4. ':
' → logprob: -11.750097274780273
    5. ':**' → logprob: -13.250097274780273
    6. ' and' → logprob: -14.625097274780273
    7. '>:' → logprob: -15.375097274780273
    8. '   ' → logprob: -15.750097274780273
    9. ':return' → logprob: -16.000097274780273
    10. '():' → logprob: -16.125097274780273

Token 34: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3138473331928253
    2. ':' → logprob: -1.313847303390503
    3. '   ' → logprob: -9.063847541809082
    4. '):' → logprob: -9.188847541809082
    5. ' :' → logprob: -9.438847541809082
    6. ':
' → logprob: -10.313847541809082
    7. '      ' → logprob: -10.313847541809082
    8. ',' → logprob: -10.563847541809082
    9. '\n' → logprob: -10.688847541809082
    10. '\' → logprob: -10.813847541809082

Token 35: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07000679522752762
    2. '        ' → logprob: -3.695006847381592
    3. '           ' → logprob: -3.820006847381592
    4. 'b' → logprob: -4.195006847381592
    5. ' b' → logprob: -5.695006847381592
    6. '      ' → logprob: -7.820006847381592
    7. 'print' → logprob: -7.820006847381592
    8. '   ' → logprob: -8.070006370544434
    9. '    ' → logprob: -8.445006370544434
    10. ' ' → logprob: -8.570006370544434

Token 36: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025570236146450043
    2. '       ' → logprob: -4.525570392608643
    3. '    
' → logprob: -4.650570392608643
    4. '\n' → logprob: -6.650570392608643
    5. '<|end|>' → logprob: -7.025570392608643
    6. '\' → logprob: -7.275570392608643
    7. ')' → logprob: -7.525570392608643
    8. '        
' → logprob: -7.650570392608643
    9. '
' → logprob: -7.900570392608643
    10. '    ' → logprob: -9.275569915771484

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20927472412586212
    2. 'b' → logprob: -2.0842747688293457
    3. '       ' → logprob: -3.0842747688293457
    4. ')' → logprob: -4.834274768829346
    5. '    
' → logprob: -4.959274768829346
    6. '\' → logprob: -7.709274768829346
    7. '        
' → logprob: -7.959274768829346
    8. ':' → logprob: -7.959274768829346
    9. '```' → logprob: -8.084274291992188
    10. ' ' → logprob: -8.209274291992188

Token 38: ' if' (ID: 538)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07025584578514099
    2. '   ' → logprob: -2.820255756378174
    3. '       ' → logprob: -4.820255756378174
    4. ' b' → logprob: -9.570256233215332
    5. ')' → logprob: -9.820256233215332
    6. '```' → logprob: -11.445256233215332
    7. '    
' → logprob: -11.695256233215332
    8. ' ' → logprob: -11.945256233215332
    9. '<|end|>' → logprob: -12.320256233215332
    10. '  ' → logprob: -12.445256233215332

Token 39: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018630376085639
    2. 'i' → logprob: -4.018630504608154
    3. ' b' → logprob: -8.143630027770996
    4. '(i' → logprob: -9.893630027770996
    5. ' a' → logprob: -10.268630027770996
    6. ' (' → logprob: -10.268630027770996
    7. 'b' → logprob: -10.643630027770996
    8. ' ' → logprob: -11.143630027770996
    9. 'a' → logprob: -11.268630027770996
    10. '<|end|>' → logprob: -12.393630027770996

Token 40: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.018530912697315216
    2. '%' → logprob: -4.01853084564209
    3. ' ' → logprob: -7.89353084564209
    4. '<|end|>' → logprob: -13.01853084564209
    5. ' ==' → logprob: -13.89353084564209
    6. ' ' → logprob: -13.89353084564209
    7. '[' → logprob: -14.51853084564209
    8. ')' → logprob: -14.70603084564209
    9. '  ' → logprob: -14.95603084564209
    10. '```' → logprob: -15.45603084564209

Token 41: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.006785116624087095
    2. ' ' → logprob: -5.131784915924072
    3. '15' → logprob: -7.381784915924072
    4. '2' → logprob: -8.88178539276123
    5. '5' → logprob: -10.88178539276123
    6. '   ' → logprob: -10.88178539276123
    7. '1' → logprob: -11.00678539276123
    8. '    ' → logprob: -11.63178539276123
    9. '7' → logprob: -12.13178539276123
    10. '  ' → logprob: -12.31928539276123

Token 42: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0020117908716201782
    2. '15' → logprob: -6.252011775970459
    3. ' ' → logprob: -10.002012252807617
    4. '2' → logprob: -10.627012252807617
    5. '5' → logprob: -12.377012252807617
    6. '   ' → logprob: -12.877012252807617
    7. '1' → logprob: -13.002012252807617
    8. '10' → logprob: -13.252012252807617
    9. '```' → logprob: -14.502012252807617
    10. '  ' → logprob: -14.877012252807617

Token 43: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.596278965473175
    2. ' !=' → logprob: -1.4712789058685303
    3. '==' → logprob: -1.7212789058685303
    4. '!=' → logprob: -3.2212789058685303
    5. ' ' → logprob: -7.846279144287109
    6. '=' → logprob: -8.34627914428711
    7. '<|end|>' → logprob: -10.47127914428711
    8. '0' → logprob: -10.84627914428711
    9. ')' → logprob: -11.34627914428711
    10. '!' → logprob: -11.59627914428711

Token 44: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42941421270370483
    2. ' ' → logprob: -1.0544142723083496
    3. '1' → logprob: -7.42941427230835
    4. '2' → logprob: -9.554413795471191
    5. '=' → logprob: -11.054413795471191
    6. '3' → logprob: -11.804413795471191
    7. '```' → logprob: -12.304413795471191
    8. ' ' → logprob: -12.554413795471191
    9. ' not' → logprob: -12.616913795471191
    10. '!=' → logprob: -13.054413795471191

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0027089386712759733
    2. ' ' → logprob: -6.002708911895752
    3. '1' → logprob: -8.50270938873291
    4. '=' → logprob: -11.75270938873291
    5. '2' → logprob: -12.31520938873291
    6. '!' → logprob: -12.69020938873291
    7. '!=' → logprob: -12.69020938873291
    8. '5' → logprob: -12.87770938873291
    9. '```' → logprob: -13.06520938873291
    10. '3' → logprob: -13.31520938873291

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007889019907452166
    2. '):' → logprob: -7.875788688659668
    3. ' and' → logprob: -8.500788688659668
    4. ' or' → logprob: -9.000788688659668
    5. '       ' → logprob: -10.375788688659668
    6. ':
' → logprob: -11.125788688659668
    7. 'and' → logprob: -11.250788688659668
    8. '   ' → logprob: -12.250788688659668
    9. ',' → logprob: -12.375788688659668
    10. ')' → logprob: -12.625788688659668

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009836959652602673
    2. 'b' → logprob: -4.7598371505737305
    3. ' b' → logprob: -7.3848371505737305
    4. '   ' → logprob: -8.88483715057373
    5. '      ' → logprob: -9.63483715057373
    6. '        ' → logprob: -9.75983715057373
    7. ' ' → logprob: -9.75983715057373
    8. '```' → logprob: -9.75983715057373
    9. '           ' → logprob: -9.88483715057373
    10. '    ' → logprob: -10.00983715057373

Token 48: ' continue' (ID: 4901)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.18322880566120148
    2. ' b' → logprob: -2.4332287311553955
    3. '       ' → logprob: -2.5582287311553955
    4. '   ' → logprob: -6.308228969573975
    5. '```' → logprob: -8.808228492736816
    6. '    ' → logprob: -9.433228492736816
    7. 'a' → logprob: -10.308228492736816
    8. '           ' → logprob: -10.558228492736816
    9. '        ' → logprob: -10.808228492736816
    10. '`' → logprob: -11.308228492736816

Token 49: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009493148885667324
    2. 'b' → logprob: -5.384493350982666
    3. '    
' → logprob: -5.884493350982666
    4. '```' → logprob: -7.634493350982666
    5. '<|end|>' → logprob: -7.884493350982666
    6. ' ' → logprob: -8.259492874145508
    7. '  ' → logprob: -8.759492874145508
    8. '       ' → logprob: -8.759492874145508
    9. ')' → logprob: -8.884492874145508
    10. '    ' → logprob: -9.509492874145508

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05603453889489174
    2. 'b' → logprob: -3.306034564971924
    3. '    
' → logprob: -5.181034564971924
    4. ' ' → logprob: -5.806034564971924
    5. '       ' → logprob: -6.056034564971924
    6. '```' → logprob: -6.181034564971924
    7. '<|end|>' → logprob: -6.431034564971924
    8. '    ' → logprob: -6.806034564971924
    9. '  ' → logprob: -7.181034564971924
    10. ' b' → logprob: -8.306034088134766

Token 51: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20910616219043732
    2. 'b' → logprob: -1.709106206893921
    3. 'if' (adapté à ' if') → logprob: -5.084105968475342
    4. '```' → logprob: -7.209105968475342
    5. ' if' → logprob: -8.5841064453125
    6. ' ' → logprob: -8.8341064453125
    7. ' b' → logprob: -9.3341064453125
    8. '  ' → logprob: -9.5841064453125
    9. '    ' → logprob: -9.8341064453125
    10. '`' → logprob: -10.2091064453125

Token 52: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0013360745506361127
    2. 'i' → logprob: -6.626336097717285
    3. ' ' → logprob: -12.876336097717285
    4. ' not' → logprob: -13.126336097717285
    5. ' b' → logprob: -13.626336097717285
    6. ' ' → logprob: -14.001336097717285
    7. 'b' → logprob: -14.126336097717285
    8. 'not' → logprob: -14.251336097717285
    9. '(i' → logprob: -14.501336097717285
    10. ' (' → logprob: -14.626336097717285

Token 53: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07891997694969177
    2. '%' → logprob: -2.5789198875427246
    3. ' ' → logprob: -10.953920364379883
    4. '<|end|>' → logprob: -12.453920364379883
    5. ' ' → logprob: -13.203920364379883
    6. 's' → logprob: -13.328920364379883
    7. '[' → logprob: -13.828920364379883
    8. '```' → logprob: -14.391420364379883
    9. '`' → logprob: -15.203920364379883
    10. ')' → logprob: -15.391420364379883

Token 54: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47409847378730774
    2. '5' → logprob: -0.9740984439849854
    3. '1' → logprob: -11.974098205566406
    4. '2' → logprob: -12.474098205566406
    5. '4' → logprob: -13.349098205566406
    6. ' ' → logprob: -13.349098205566406
    7. '  ' → logprob: -13.599098205566406
    8. '<|end|>' → logprob: -13.661598205566406
    9. '```' → logprob: -13.724098205566406
    10. '%' → logprob: -14.474098205566406

Token 55: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.7133641196996905e-05
    2. ' ' → logprob: -10.62502670288086
    3. '1' → logprob: -14.68752670288086
    4. '2' → logprob: -15.06252670288086
    5. '  ' → logprob: -15.25002670288086
    6. '0' → logprob: -15.25002670288086
    7. '```' → logprob: -15.25002670288086
    8. '   ' → logprob: -15.62502670288086
    9. '५' → logprob: -15.93752670288086
    10. '৫' → logprob: -16.00002670288086

Token 56: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47317686676979065
    2. ' !=' → logprob: -1.5981768369674683
    3. '==' → logprob: -1.8481768369674683
    4. '!=' → logprob: -4.098176956176758
    5. ' ' → logprob: -8.098176956176758
    6. '   ' → logprob: -9.598176956176758
    7. '=' → logprob: -9.848176956176758
    8. ':' → logprob: -9.973176956176758
    9. ' not' → logprob: -10.473176956176758
    10. '    ' → logprob: -11.348176956176758

Token 57: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3484556972980499
    2. '0' → logprob: -1.2234556674957275
    3. '1' → logprob: -13.223455429077148
    4. ' not' → logprob: -13.473455429077148
    5. '   ' → logprob: -13.598455429077148
    6. '=' → logprob: -13.598455429077148
    7. '```' → logprob: -13.598455429077148
    8. ' ' → logprob: -13.723455429077148
    9. '  ' → logprob: -13.973455429077148
    10. '    ' → logprob: -14.723455429077148

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001334763248451054
    2. ' ' → logprob: -6.6263346672058105
    3. '1' → logprob: -12.376335144042969
    4. '```' → logprob: -13.001335144042969
    5. '   ' → logprob: -14.813835144042969
    6. '``' → logprob: -15.313835144042969
    7. '==' → logprob: -15.376335144042969
    8. '!=' → logprob: -15.376335144042969
    9. '5' → logprob: -15.563835144042969
    10. 'b' → logprob: -15.938835144042969

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.055183641612529755
    2. '       ' → logprob: -2.9301836490631104
    3. ':
' → logprob: -8.430183410644531
    4. ' continue' → logprob: -10.555183410644531
    5. 'continue' → logprob: -10.555183410644531
    6. '   ' → logprob: -11.305183410644531
    7. '	continue' → logprob: -12.555183410644531
    8. ' continues' → logprob: -12.930183410644531
    9. '):' → logprob: -13.055183410644531
    10. ' :' → logprob: -13.430183410644531

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002953015500679612
    2. ' continue' → logprob: -9.000295639038086
    3. 'continue' → logprob: -9.250295639038086
    4. '```' → logprob: -10.375295639038086
    5. '           ' → logprob: -11.250295639038086
    6. 'b' → logprob: -11.625295639038086
    7. '   ' → logprob: -11.750295639038086
    8. '	continue' → logprob: -12.875295639038086
    9. '     ' → logprob: -13.000295639038086
    10. ' b' → logprob: -13.250295639038086

Token 61: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07091923803091049
    2. 'b' → logprob: -3.8209192752838135
    3. ' b' → logprob: -4.195919036865234
    4. ' continue' → logprob: -4.570919036865234
    5. 'continue' (adapté à ' continue') → logprob: -4.695919036865234
    6. '   ' → logprob: -4.820919036865234
    7. '```' → logprob: -5.820919036865234
    8. '           ' → logprob: -7.320919036865234
    9. '`' → logprob: -9.695919036865234
    10. 'c' → logprob: -9.945919036865234

Token 62: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1598408818244934
    2. '       ' → logprob: -2.1598408222198486
    3. 'b' → logprob: -3.5348408222198486
    4. ' b' → logprob: -7.159841060638428
    5. ' ' → logprob: -7.284841060638428
    6. '    
' → logprob: -7.409841060638428
    7. '```' → logprob: -8.15984058380127
    8. '    ' → logprob: -8.90984058380127
    9. ')' → logprob: -8.90984058380127
    10. '        
' → logprob: -9.15984058380127

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26748353242874146
    2. '       ' → logprob: -1.6424834728240967
    3. 'b' → logprob: -3.2674834728240967
    4. '    
' → logprob: -6.767483711242676
    5. '```' → logprob: -7.017483711242676
    6. '        
' → logprob: -8.642483711242676
    7. 'a' → logprob: -8.642483711242676
    8. ' b' → logprob: -8.892483711242676
    9. ')' → logprob: -9.267483711242676
    10. ' ' → logprob: -9.517483711242676

Token 64: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.18277136981487274
    2. '   ' → logprob: -1.8077713251113892
    3. '```' → logprob: -6.3077712059021
    4. '       ' → logprob: -7.5577712059021
    5. ' b' → logprob: -7.5577712059021
    6. '``' → logprob: -10.432771682739258
    7. ')' → logprob: -10.557771682739258
    8. '    
' → logprob: -10.807771682739258
    9. ' ' → logprob: -10.807771682739258
    10. 'a' → logprob: -10.807771682739258

Token 65: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07890278846025467
    2. '.' → logprob: -2.5789027214050293
    3. '.app' → logprob: -11.953903198242188
    4. 'append' → logprob: -13.078903198242188
    5. '.extend' → logprob: -13.703903198242188
    6. '.ap' → logprob: -14.078903198242188
    7. '.push' → logprob: -14.078903198242188
    8. '.Append' → logprob: -14.703903198242188
    9. '.add' → logprob: -14.828903198242188
    10. ' .' → logprob: -15.203903198242188

Token 66: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.627176768844947e-05
    2. '(' → logprob: -9.250096321105957
    3. 'i' → logprob: -17.75009536743164
    4. '(a' → logprob: -18.62509536743164
    5. '(ii' → logprob: -19.50009536743164
    6. '(
' → logprob: -19.87509536743164
    7. '((' → logprob: -20.25009536743164
    8. '(str' → logprob: -20.37509536743164
    9. '(x' → logprob: -20.75009536743164
    10. '(s' → logprob: -20.75009536743164

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.000000953674316
    3. ')
' → logprob: -16.75
    4. '))' → logprob: -17.0
    5. ')`' → logprob: -18.375
    6. ')b' → logprob: -18.75
    7. '`)' → logprob: -19.375
    8. ')i' → logprob: -19.5
    9. ')a' → logprob: -19.75
    10. '）' → logprob: -19.875

Token 68: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04710131138563156
    2. '
' → logprob: -3.5471012592315674
    3. '<|end|>' → logprob: -4.4221014976501465
    4. '#' → logprob: -6.7971014976501465
    5. ')' → logprob: -6.9221014976501465
    6. '[' → logprob: -7.2971014976501465
    7. 'for' → logprob: -7.7971014976501465
    8. '\n' → logprob: -8.172101020812988
    9. '  
' → logprob: -8.172101020812988
    10. '```' → logprob: -8.422101020812988

Token 69: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08008372783660889
    2. '(b' → logprob: -2.5800838470458984
    3. '(sum' → logprob: -7.205083847045898
    4. '(len' → logprob: -8.205083847045898
    5. '('' → logprob: -8.830083847045898
    6. '(a' → logprob: -11.705083847045898
    7. '("' → logprob: -11.955083847045898
    8. '()' → logprob: -12.205083847045898
    9. 'b' → logprob: -12.955083847045898
    10. ' (' → logprob: -12.955083847045898

Token 70: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0003364158037584275
    2. '(' → logprob: -8.000336647033691
    3. '(a' → logprob: -14.250336647033691
    4. ')' → logprob: -15.625336647033691
    5. ')b' → logprob: -15.875336647033691
    6. ' (' → logprob: -17.375335693359375
    7. 'b' → logprob: -17.500335693359375
    8. '()' → logprob: -18.375335693359375
    9. '(s' → logprob: -19.125335693359375
    10. ' b' → logprob: -19.250335693359375

Token 71: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16022484004497528
    2. '))' → logprob: -1.9102247953414917
    3. ')))' → logprob: -15.160224914550781
    4. ' )' → logprob: -15.660224914550781
    5. ')b' → logprob: -16.41022491455078
    6. ')
' → logprob: -16.66022491455078
    7. ')}' → logprob: -17.28522491455078
    8. ')`' → logprob: -17.41022491455078
    9. ')a' → logprob: -17.53522491455078
    10. '])' → logprob: -17.66022491455078


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 69
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 59
Précision stricte (1ère position): 52.17%
Précision adaptée (1ère position): 53.62%
Précision (top 10): 85.51%
================================================================================
