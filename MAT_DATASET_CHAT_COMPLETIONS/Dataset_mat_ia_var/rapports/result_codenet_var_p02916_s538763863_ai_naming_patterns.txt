================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_length = int(input())
index_list = [value-1 for value in map(int, input().split())]
main_values = list(map(int, input().split()))
bonus_values = list(map(int, input().split()))

total_sum = 0
previous_index = -100
for position in range(input_length):
    current_index = index_list[position]
    total_sum += main_values[current_index]
    if previous_index == current_index - 1:
        total_sum += bonus_values[previous_index]
    previous_index = current_index

print(total_sum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_length' (ID: 11514)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029296448454260826
    2. '32' → logprob: -4.029296398162842
    3. '0' → logprob: -5.279296398162842
    4. ' len' → logprob: -5.529296398162842
    5. '20' → logprob: -7.154296398162842
    6. '10' → logprob: -7.654296398162842
    7. ' input' → logprob: -9.029296875
    8. 'len' → logprob: -9.279296875
    9. 'input' → logprob: -9.279296875
    10. '64' → logprob: -9.529296875

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010742536978796124
    2. ''' → logprob: -8.001073837280273
    3. '(input' → logprob: -8.626073837280273
    4. '('' → logprob: -9.001073837280273
    5. '32' → logprob: -9.251073837280273
    6. '()' → logprob: -9.751073837280273
    7. '```' → logprob: -10.126073837280273
    8. '40' → logprob: -10.251073837280273
    9. '"' → logprob: -10.251073837280273
    10. '("("' → logprob: -10.501073837280273

Token 5: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025785664096474648
    2. ')' → logprob: -3.9007856845855713
    3. '()' → logprob: -5.650785446166992
    4. '())' → logprob: -7.025785446166992
    5. '('' → logprob: -8.650785446166992
    6. '(
' → logprob: -9.275785446166992
    7. '("("' → logprob: -9.525785446166992
    8. '(()' → logprob: -9.775785446166992
    9. '```' → logprob: -9.775785446166992
    10. '<|end|>' → logprob: -10.025785446166992

Token 6: 'index' (ID: 2257)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37261825799942017
    2. '*' → logprob: -2.8726181983947754
    3. 'for' → logprob: -2.9976181983947754
    4. ' if' → logprob: -3.4976181983947754
    5. '#' → logprob: -3.6226181983947754
    6. '>' → logprob: -4.122618198394775
    7. '_' → logprob: -4.247618198394775
    8. '+' → logprob: -4.372618198394775
    9. '`' → logprob: -4.372618198394775
    10. ')' → logprob: -4.497618198394775

Token 7: '_list' (ID: 4162)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21993382275104523
    2. '_' → logprob: -2.2199337482452393
    3. '[]' → logprob: -3.5949337482452393
    4. '```' → logprob: -3.7199337482452393
    5. '+' → logprob: -4.219933986663818
    6. 's' → logprob: -4.969933986663818
    7. ']' → logprob: -5.594933986663818
    8. ' ' → logprob: -5.969933986663818
    9. ')' → logprob: -6.344933986663818
    10. '++' → logprob: -6.969933986663818

Token 8: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3641418516635895
    2. '[' → logprob: -1.489141821861267
    3. '=' → logprob: -3.7391419410705566
    4. '.append' → logprob: -3.7391419410705566
    5. '_' → logprob: -4.989141941070557
    6. ' =' → logprob: -4.989141941070557
    7. '[:]' → logprob: -4.989141941070557
    8. '[]' → logprob: -5.239141941070557
    9. '```' → logprob: -6.239141941070557
    10. '.setdefault' → logprob: -6.989141941070557

Token 9: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.04185514897108078
    2. '[]' → logprob: -3.2918550968170166
    3. '[' → logprob: -5.791855335235596
    4. ' [' → logprob: -7.666855335235596
    5. ' ' → logprob: -8.291854858398438
    6. '[input' → logprob: -10.791854858398438
    7. '[:]' → logprob: -12.541854858398438
    8. 'input' → logprob: -13.041854858398438
    9. '[int' → logprob: -13.416854858398438
    10. 'list' → logprob: -13.416854858398438

Token 10: 'value' (ID: 1594)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012425235472619534
    2. ']' → logprob: -5.137425422668457
    3. 'i' → logprob: -5.262425422668457
    4. ')' → logprob: -7.512425422668457
    5. 'input' → logprob: -8.262425422668457
    6. ' ' → logprob: -8.387425422668457
    7. 'index' → logprob: -9.262425422668457
    8. ' i' → logprob: -9.887425422668457
    9. 'int' → logprob: -10.512425422668457
    10. 'x' → logprob: -10.762425422668457

Token 11: '-' (ID: 12)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.044913556426763535
    2. 'for' → logprob: -3.1699135303497314
    3. ',' → logprob: -7.9199137687683105
    4. ' ' → logprob: -8.044913291931152
    5. ')' → logprob: -8.294913291931152
    6. ']' → logprob: -8.419913291931152
    7. '+' → logprob: -8.794913291931152
    8. '[' → logprob: -9.294913291931152
    9. '  ' → logprob: -9.669913291931152
    10. '   ' → logprob: -9.794913291931152

Token 12: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3484679162502289
    2. ' ' → logprob: -1.2234679460525513
    3. 'input' → logprob: -11.848467826843262
    4. ' input' → logprob: -12.348467826843262
    5. '2' → logprob: -12.973467826843262
    6. '0' → logprob: -12.973467826843262
    7. 's' → logprob: -13.473467826843262
    8. 'index' → logprob: -14.098467826843262
    9. '100' → logprob: -14.473467826843262
    10. '```' → logprob: -14.660967826843262

Token 13: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.015294201672077179
    2. 'for' → logprob: -4.265294075012207
    3. ']' → logprob: -7.265294075012207
    4. ' ' → logprob: -8.640294075012207
    5. ')' → logprob: -8.765294075012207
    6. ' ]' → logprob: -9.890294075012207
    7. ',' → logprob: -11.015294075012207
    8. '<|end|>' → logprob: -11.140294075012207
    9. '	for' → logprob: -11.890294075012207
    10. ' )' → logprob: -13.140294075012207

Token 14: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.6579587459564209
    2. ' range' → logprob: -0.7829587459564209
    3. ' ' → logprob: -4.657958984375
    4. 'range' → logprob: -4.907958984375
    5. 'value' → logprob: -4.907958984375
    6. ' input' → logprob: -7.782958984375
    7. ' _' → logprob: -8.532958984375
    8. ' ' → logprob: -9.532958984375
    9. ' index' → logprob: -10.157958984375
    10. ' i' → logprob: -10.907958984375

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008623674511909485
    2. 'in' → logprob: -4.7586236000061035
    3. ' ' → logprob: -12.383624076843262
    4. '<|end|>' → logprob: -13.008624076843262
    5. 'input' → logprob: -14.883624076843262
    6. 'range' → logprob: -15.008624076843262
    7. 'import' → logprob: -15.008624076843262
    8. 'value' → logprob: -15.133624076843262
    9. '<|end|>' → logprob: -15.508624076843262
    10. ')' → logprob: -15.758624076843262

Token 16: ' map' (ID: 4014)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25293877720832825
    2. ' range' → logprob: -1.5029387474060059
    3. 'input' → logprob: -7.127938747406006
    4. ' input' → logprob: -8.877939224243164
    5. '(range' → logprob: -10.252939224243164
    6. 'index' → logprob: -11.377939224243164
    7. 'value' → logprob: -12.377939224243164
    8. '	range' → logprob: -12.627939224243164
    9. '[' → logprob: -13.127939224243164
    10. ' index' → logprob: -13.252939224243164

Token 17: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14266997575759888
    2. '(int' → logprob: -2.392669916152954
    3. '(lambda' → logprob: -3.392669916152954
    4. '(input' → logprob: -5.267670154571533
    5. '(str' → logprob: -6.892670154571533
    6. '(map' → logprob: -8.017669677734375
    7. '(ord' → logprob: -8.017669677734375
    8. '(range' → logprob: -8.267669677734375
    9. '(list' → logprob: -9.267669677734375
    10. '(user' → logprob: -9.392669677734375

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.021331992000341415
    2. ',input' → logprob: -4.146331787109375
    3. '(' → logprob: -5.646331787109375
    4. ',' → logprob: -6.896331787109375
    5. 'input' → logprob: -7.646331787109375
    6. ')' → logprob: -9.271331787109375
    7. ' (' → logprob: -9.646331787109375
    8. ' input' → logprob: -9.771331787109375
    9. ' ,' → logprob: -10.771331787109375
    10. '=input' → logprob: -11.271331787109375

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.523220956325531
    2. ' input' → logprob: -0.898220956325531
    3. '(input' → logprob: -9.648221015930176
    4. ')' → logprob: -11.398221015930176
    5. ' ' → logprob: -11.898221015930176
    6. ',input' → logprob: -12.773221015930176
    7. '=input' → logprob: -13.023221015930176
    8. '	input' → logprob: -13.273221015930176
    9. 'range' → logprob: -13.398221015930176
    10. ' )' → logprob: -13.773221015930176

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.013830841518938541
    2. '())' → logprob: -4.513830661773682
    3. '()' → logprob: -5.888830661773682
    4. '()]' → logprob: -12.38883113861084
    5. '()))' → logprob: -13.76383113861084
    6. '(' → logprob: -14.13883113861084
    7. '()
' → logprob: -14.26383113861084
    8. ' ().' → logprob: -14.51383113861084
    9. ' ())' → logprob: -14.88883113861084
    10. '()[' → logprob: -15.38883113861084

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.6312321753939614e-05
    2. 'strip' → logprob: -10.250036239624023
    3. ' split' → logprob: -14.750036239624023
    4. 'rstrip' → logprob: -14.750036239624023
    5. '(split' → logprob: -16.125036239624023
    6. 'spl' → logprob: -17.250036239624023
    7. 'read' → logprob: -19.750036239624023
    8. '.split' → logprob: -19.750036239624023
    9. '_split' → logprob: -20.125036239624023
    10. ')' → logprob: -20.375036239624023

Token 22: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00379532715305686
    2. '()))' → logprob: -6.128795146942139
    3. '()' → logprob: -6.753795146942139
    4. '()]' → logprob: -7.878795146942139
    5. ')]' → logprob: -10.878795623779297
    6. ')' → logprob: -11.253795623779297
    7. '(' → logprob: -11.503795623779297
    8. '()),' → logprob: -12.128795623779297
    9. ' ())' → logprob: -12.378795623779297
    10. ')])' → logprob: -13.003795623779297

Token 23: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.33294960856437683
    2. ')]' → logprob: -1.3329496383666992
    3. ')' → logprob: -4.082949638366699
    4. '])' → logprob: -6.082949638366699
    5. '`]' → logprob: -8.8329496383667
    6. '])]' → logprob: -9.2079496383667
    7. ')])' → logprob: -9.7079496383667
    8. '']' → logprob: -10.7079496383667
    9. ' ]' → logprob: -11.9579496383667
    10. '）' → logprob: -12.4579496383667

Token 24: 'main' (ID: 7731)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7657184600830078
    2. 'for' → logprob: -1.7657184600830078
    3. 'result' → logprob: -2.140718460083008
    4. '\n' → logprob: -2.140718460083008
    5. 'output' → logprob: -3.265718460083008
    6. '```' → logprob: -4.265718460083008
    7. '
' → logprob: -4.390718460083008
    8. '\' → logprob: -4.640718460083008
    9. '#' → logprob: -4.765718460083008
    10. ' for' → logprob: -5.265718460083008

Token 25: '_values' (ID: 20393)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0016347164055332541
    2. '(' → logprob: -7.37663459777832
    3. '._' → logprob: -8.50163459777832
    4. '[' → logprob: -8.62663459777832
    5. '.' → logprob: -8.62663459777832
    6. ' _' → logprob: -9.25163459777832
    7. '_.' → logprob: -9.62663459777832
    8. '__' → logprob: -9.75163459777832
    9. '_list' → logprob: -9.75163459777832
    10. '()' → logprob: -10.25163459777832

Token 26: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0020351072307676077
    2. '_' → logprob: -6.627035140991211
    3. '[]' → logprob: -8.502035140991211
    4. '[:]' → logprob: -9.002035140991211
    5. '```' → logprob: -9.002035140991211
    6. '.' → logprob: -10.377035140991211
    7. '[index' → logprob: -10.502035140991211
    8. '=' → logprob: -10.627035140991211
    9. '[...]' → logprob: -11.127035140991211
    10. '\[' → logprob: -11.252035140991211

Token 27: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6881828904151917
    2. ' [' → logprob: -1.4381828308105469
    3. 'list' → logprob: -2.688182830810547
    4. '[' → logprob: -3.063182830810547
    5. '[input' → logprob: -3.063182830810547
    6. ' []' → logprob: -3.188182830810547
    7. '[]' → logprob: -3.313182830810547
    8. '[list' → logprob: -4.313182830810547
    9. '[int' → logprob: -5.688182830810547
    10. ' input' → logprob: -6.063182830810547

Token 28: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03815784677863121
    2. '(range' → logprob: -3.6631579399108887
    3. '(int' → logprob: -5.163157939910889
    4. '(main' → logprob: -5.663157939910889
    5. '(input' → logprob: -6.663157939910889
    6. '()' → logprob: -8.03815746307373
    7. '(map' → logprob: -8.16315746307373
    8. '(values' → logprob: -8.41315746307373
    9. '(str' → logprob: -9.78815746307373
    10. '(value' → logprob: -10.16315746307373

Token 29: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008205882040783763
    2. '(' → logprob: -7.125820636749268
    3. '<int' → logprob: -12.37582015991211
    4. 'int' → logprob: -12.75082015991211
    5. '[int' → logprob: -12.75082015991211
    6. '<|end|>' → logprob: -13.50082015991211
    7. '(str' → logprob: -14.12582015991211
    8. '=int' → logprob: -14.25082015991211
    9. ',int' → logprob: -14.37582015991211
    10. '(
' → logprob: -14.37582015991211

Token 30: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5822531580924988
    2. ',' → logprob: -1.4572532176971436
    3. '(input' → logprob: -1.5822532176971436
    4. '(' → logprob: -6.4572529792785645
    5. 'input' → logprob: -6.7072529792785645
    6. ' ,' → logprob: -9.082253456115723
    7. ' input' → logprob: -10.207253456115723
    8. '(),' → logprob: -11.082253456115723
    9. '=input' → logprob: -12.332253456115723
    10. ' (' → logprob: -12.707253456115723

Token 31: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6326216459274292
    2. 'input' → logprob: -0.7576216459274292
    3. '(input' → logprob: -11.132621765136719
    4. '	input' → logprob: -12.882621765136719
    5. ')' → logprob: -13.257621765136719
    6. ',input' → logprob: -13.632621765136719
    7. '=input' → logprob: -14.382621765136719
    8. ' ' → logprob: -14.507621765136719
    9. '<input' → logprob: -14.632621765136719
    10. '_input' → logprob: -15.382621765136719

Token 32: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002871565520763397
    2. '()' → logprob: -5.877871513366699
    3. '()))' → logprob: -10.1278715133667
    4. '())' → logprob: -10.7528715133667
    5. '()));' → logprob: -13.1278715133667
    6. '())))' → logprob: -14.0028715133667
    7. ')' → logprob: -14.8778715133667
    8. '());' → logprob: -15.1278715133667
    9. '()>' → logprob: -15.6278715133667
    10. '()).' → logprob: -15.6278715133667

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5928495486150496e-05
    2. 'strip' → logprob: -11.250016212463379
    3. 'rstrip' → logprob: -13.000016212463379
    4. ' split' → logprob: -14.625016212463379
    5. '(split' → logprob: -16.500015258789062
    6. 'spl' → logprob: -17.625015258789062
    7. 'read' → logprob: -18.000015258789062
    8. 'plit' → logprob: -18.250015258789062
    9. '.split' → logprob: -18.875015258789062
    10. 'replace' → logprob: -19.000015258789062

Token 34: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.10244573652744293
    2. '())' → logprob: -2.3524458408355713
    3. '()' → logprob: -6.227445602416992
    4. '))' → logprob: -8.852445602416992
    5. '()))
' → logprob: -10.352445602416992
    6. ')' → logprob: -10.352445602416992
    7. '(' → logprob: -10.852445602416992
    8. '()))

' → logprob: -11.602445602416992
    9. '()),' → logprob: -11.977445602416992
    10. ' ())' → logprob: -12.102445602416992

Token 35: 'bonus' (ID: 67446)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1114509180188179
    2. 'for' → logprob: -3.4864509105682373
    3. 'output' → logprob: -3.6114509105682373
    4. 'print' → logprob: -4.486451148986816
    5. '
' → logprob: -5.111451148986816
    6. '[' → logprob: -5.611451148986816
    7. 'results' → logprob: -5.611451148986816
    8. 'selected' → logprob: -5.736451148986816
    9. 'answer' → logprob: -5.861451148986816
    10. '\n' → logprob: -5.986451148986816

Token 36: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.14974746108055115
    2. '_points' → logprob: -2.399747371673584
    3. '_' → logprob: -4.274747371673584
    4. '_scores' → logprob: -4.274747371673584
    5. '_value' → logprob: -4.399747371673584
    6. '_score' → logprob: -5.899747371673584
    7. '_bonus' → logprob: -6.274747371673584
    8. '_val' → logprob: -7.524747371673584
    9. '_amount' → logprob: -7.524747371673584
    10. '_vals' → logprob: -7.649747371673584

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006361489649862051
    2. '=' → logprob: -5.756361484527588
    3. '[' → logprob: -5.881361484527588
    4. '_' → logprob: -8.381361961364746
    5. ' =[' → logprob: -9.506361961364746
    6. '[:]' → logprob: -10.256361961364746
    7. ')' → logprob: -11.631361961364746
    8. '=[' → logprob: -12.131361961364746
    9. '.' → logprob: -12.256361961364746
    10. ' +=' → logprob: -12.381361961364746

Token 38: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.27412644028663635
    2. 'list' → logprob: -1.524126410484314
    3. '[' → logprob: -4.7741265296936035
    4. ' [' → logprob: -4.7741265296936035
    5. ' main' → logprob: -6.0241265296936035
    6. '[]' → logprob: -6.8991265296936035
    7. ' []' → logprob: -7.2741265296936035
    8. 'main' → logprob: -7.5241265296936035
    9. '[list' → logprob: -8.399126052856445
    10. '(list' → logprob: -9.399126052856445

Token 39: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.8852823376655579
    2. '(' → logprob: -1.010282278060913
    3. '(int' → logprob: -1.510282278060913
    4. '(list' → logprob: -6.510282516479492
    5. '(main' → logprob: -8.010282516479492
    6. ' (' → logprob: -8.885282516479492
    7. '((' → logprob: -9.385282516479492
    8. '(lambda' → logprob: -9.510282516479492
    9. '(range' → logprob: -9.760282516479492
    10. '(
' → logprob: -10.135282516479492

Token 40: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00012523093027994037
    2. '(' → logprob: -9.12512493133545
    3. '<int' → logprob: -11.87512493133545
    4. 'int' → logprob: -12.75012493133545
    5. '=int' → logprob: -12.87512493133545
    6. '(lambda' → logprob: -13.62512493133545
    7. '[int' → logprob: -13.87512493133545
    8. ',int' → logprob: -14.62512493133545
    9. '```' → logprob: -14.87512493133545
    10. ' (' → logprob: -15.12512493133545

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19118162989616394
    2. ',int' → logprob: -2.1911816596984863
    3. '(int' → logprob: -2.8161816596984863
    4. 'int' → logprob: -6.566181659698486
    5. ',input' → logprob: -8.316181182861328
    6. '```' → logprob: -8.316181182861328
    7. '(' → logprob: -8.441181182861328
    8. ' ,' → logprob: -9.441181182861328
    9. '<int' → logprob: -9.691181182861328
    10. '`,' → logprob: -10.066181182861328

Token 42: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10030285269021988
    2. ' input' → logprob: -2.3503029346466064
    3. 'int' → logprob: -9.350302696228027
    4. '(input' → logprob: -11.850302696228027
    5. ' int' → logprob: -14.975302696228027
    6. '=input' → logprob: -15.100302696228027
    7. ')' → logprob: -15.350302696228027
    8. ' ' → logprob: -15.600302696228027
    9. '	input' → logprob: -15.600302696228027
    10. ',input' → logprob: -15.600302696228027

Token 43: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008254681597463787
    2. '()' → logprob: -7.12582540512085
    3. '()))' → logprob: -11.500825881958008
    4. '())' → logprob: -12.000825881958008
    5. ' ().' → logprob: -13.250825881958008
    6. '(' → logprob: -14.375825881958008
    7. '(.' → logprob: -15.000825881958008
    8. '.' → logprob: -15.000825881958008
    9. '()));' → logprob: -15.500825881958008
    10. '()[' → logprob: -15.750825881958008

Token 44: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.45848218582978e-06
    2. 'strip' → logprob: -13.25000286102295
    3. ' split' → logprob: -15.00000286102295
    4. ')' → logprob: -15.62500286102295
    5. '(split' → logprob: -17.000001907348633
    6. 'spl' → logprob: -17.625001907348633
    7. 'rstrip' → logprob: -17.750001907348633
    8. '))' → logprob: -18.250001907348633
    9. 'plit' → logprob: -18.625001907348633
    10. 'skip' → logprob: -19.875001907348633

Token 45: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.26641565561294556
    2. '())' → logprob: -1.6414155960083008
    3. '()' → logprob: -4.016415596008301
    4. '))' → logprob: -4.391415596008301
    5. ')' → logprob: -4.641415596008301
    6. '()))
' → logprob: -9.7664155960083
    7. '()),' → logprob: -11.2664155960083
    8. '()));' → logprob: -11.2664155960083
    9. '()))

' → logprob: -11.6414155960083
    10. '(' → logprob: -11.7664155960083

Token 46: 'total' (ID: 9577)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.11045943200588226
    2. 'total' → logprob: -3.735459327697754
    3. 'selected' → logprob: -3.985459327697754
    4. 'output' → logprob: -4.235459327697754
    5. 'valid' → logprob: -5.110459327697754
    6. 'answer' → logprob: -5.235459327697754
    7. 'for' → logprob: -5.235459327697754
    8. 'results' → logprob: -5.360459327697754
    9. 'correct' → logprob: -5.985459327697754
    10. 'max' → logprob: -5.985459327697754

Token 47: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19280284643173218
    2. '_sum' → logprob: -2.567802906036377
    3. '_points' → logprob: -3.317802906036377
    4. '_value' → logprob: -3.692802906036377
    5. '_score' → logprob: -4.067802906036377
    6. '_values' → logprob: -4.567802906036377
    7. '_scores' → logprob: -5.692802906036377
    8. '_amount' → logprob: -6.442802906036377
    9. '_length' → logprob: -7.067802906036377
    10. '_count' → logprob: -7.442802906036377

Token 48: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03152121230959892
    2. '=' → logprob: -4.281521320343018
    3. ' =' → logprob: -4.531521320343018
    4. ' +=' → logprob: -6.156521320343018
    5. '[' → logprob: -6.531521320343018
    6. '(total' → logprob: -7.156521320343018
    7. '<|end|>' → logprob: -7.531521320343018
    8. '()' → logprob: -7.781521320343018
    9. '_' → logprob: -8.15652084350586
    10. '+' → logprob: -8.78152084350586

Token 49: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5185017585754395
    2. ' sum' → logprob: -1.3935017585754395
    3. 'sum' → logprob: -2.3935017585754395
    4. ' ' → logprob: -2.7685017585754395
    5. ' main' → logprob: -6.2685017585754395
    6. 'main' → logprob: -8.268501281738281
    7. '(sum' → logprob: -9.268501281738281
    8. ' max' → logprob: -11.393501281738281
    9. '(' → logprob: -11.768501281738281
    10. '1' → logprob: -11.893501281738281

Token 50: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.13432011008262634
    2. '0' → logprob: -2.384320020675659
    3. ' sum' → logprob: -4.134320259094238
    4. 'main' → logprob: -4.134320259094238
    5. ' main' → logprob: -6.884320259094238
    6. ' ' → logprob: -8.634320259094238
    7. '(sum' → logprob: -8.634320259094238
    8. 'max' → logprob: -9.384320259094238
    9. '(main' → logprob: -11.009320259094238
    10. '(' → logprob: -12.259320259094238

Token 51: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006371794268488884
    2. '
' → logprob: -5.131371974945068
    3. ' for' → logprob: -8.00637149810791
    4. '\n' → logprob: -9.63137149810791
    5. '```' → logprob: -10.25637149810791
    6. '<|end|>' → logprob: -12.38137149810791
    7. '\' → logprob: -13.38137149810791
    8. '
' → logprob: -14.38137149810791
    9. '' → logprob: -14.38137149810791
    10. 'n' → logprob: -14.75637149810791

Token 52: 'previous' (ID: 31068)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015700951917096972
    2. '
' → logprob: -6.501570224761963
    3. '\n' → logprob: -10.376569747924805
    4. ' for' → logprob: -10.751569747924805
    5. '```' → logprob: -11.251569747924805
    6. 'n' → logprob: -13.876569747924805
    7. '\' → logprob: -14.376569747924805
    8. '' → logprob: -16.251569747924805
    9. '``' → logprob: -16.376569747924805
    10. 'f' → logprob: -16.376569747924805

Token 53: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.2765744626522064
    2. '_' → logprob: -1.9015744924545288
    3. '_value' → logprob: -2.4015743732452393
    4. '_sum' → logprob: -7.776574611663818
    5. '_indices' → logprob: -8.40157413482666
    6. '_values' → logprob: -8.52657413482666
    7. ' _' → logprob: -9.02657413482666
    8. '_indexes' → logprob: -9.27657413482666
    9. '_val' → logprob: -9.40157413482666
    10. '_token' → logprob: -9.40157413482666

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014417817816138268
    2. '=' → logprob: -4.26441764831543
    3. '_' → logprob: -8.38941764831543
    4. ' ' → logprob: -11.88941764831543
    5. ')' → logprob: -12.13941764831543
    6. ' ==' → logprob: -12.88941764831543
    7. ' _' → logprob: -12.88941764831543
    8. ',' → logprob: -13.26441764831543
    9. ' +=' → logprob: -13.63941764831543
    10. '_=' → logprob: -13.88941764831543

Token 55: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6358529329299927
    2. ' -' → logprob: -0.7608529329299927
    3. ' None' → logprob: -6.510852813720703
    4. '0' → logprob: -7.135852813720703
    5. 'None' → logprob: -7.510852813720703
    6. ' ' → logprob: -8.760852813720703
    7. ' index' → logprob: -9.260852813720703
    8. 'index' → logprob: -9.385852813720703
    9. '-index' → logprob: -9.885852813720703
    10. '-value' → logprob: -11.885852813720703

Token 56: '100' (ID: 1353)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.644463479053229e-05
    2. ' ' → logprob: -10.250046730041504
    3. '2' → logprob: -11.625046730041504
    4. '```' → logprob: -15.375046730041504
    5. '10' → logprob: -15.437546730041504
    6. '`' → logprob: -15.812546730041504
    7. '0' → logprob: -16.000045776367188
    8. '100' → logprob: -16.062545776367188
    9. '-' → logprob: -16.187545776367188
    10. '3' → logprob: -16.500045776367188

Token 57: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4044998586177826
    2. 'for' → logprob: -1.529499888420105
    3. ' for' → logprob: -2.2794997692108154
    4. '<|end|>' → logprob: -4.9045000076293945
    5. '```' → logprob: -6.0295000076293945
    6. '\n' → logprob: -6.1545000076293945
    7. '
' → logprob: -6.9045000076293945
    8. ' 
' → logprob: -8.654500007629395
    9. 'newline' → logprob: -8.654500007629395
    10. '<|end|>' → logprob: -9.154500007629395

Token 58: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018737556412816048
    2. '
' → logprob: -4.26873779296875
    3. ' for' → logprob: -5.51873779296875
    4. '```' → logprob: -7.89373779296875
    5. '\n' → logprob: -8.76873779296875
    6. 'newline' → logprob: -12.01873779296875
    7. 'n' → logprob: -12.64373779296875
    8. '``' → logprob: -12.76873779296875
    9. '\' → logprob: -12.89373779296875
    10. '	for' → logprob: -13.01873779296875

Token 59: ' position' (ID: 4010)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.5523643493652344
    2. ' i' → logprob: -1.4273643493652344
    3. ' value' → logprob: -2.3023643493652344
    4. 'index' → logprob: -3.4273643493652344
    5. ' ' → logprob: -3.9273643493652344
    6. ' current' → logprob: -4.802364349365234
    7. ' idx' → logprob: -4.927364349365234
    8. ' _' → logprob: -5.052364349365234
    9. 'i' → logprob: -5.302364349365234
    10. 'value' → logprob: -5.552364349365234

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.039528366178274155
    2. 'in' → logprob: -3.2895283699035645
    3. ',' → logprob: -7.1645283699035645
    4. ' ' → logprob: -7.4145283699035645
    5. ' ,' → logprob: -9.414527893066406
    6. '	in' → logprob: -11.289527893066406
    7. ',in' → logprob: -12.664527893066406
    8. '_in' → logprob: -13.039527893066406
    9. '  ' → logprob: -13.664527893066406
    10. 'In' → logprob: -13.914527893066406

Token 61: ' range' (ID: 3352)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.45811960101127625
    2. ' index' → logprob: -1.3331196308135986
    3. 'range' → logprob: -2.9581196308135986
    4. ' range' → logprob: -2.9581196308135986
    5. ' ' → logprob: -11.20811939239502
    6. '	index' → logprob: -12.08311939239502
    7. '(index' → logprob: -12.20811939239502
    8. '[index' → logprob: -12.45811939239502
    9. '  ' → logprob: -13.45811939239502
    10. '(range' → logprob: -13.77061939239502

Token 62: '(input' (ID: 10054)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.35604140162467957
    2. '(' → logprob: -1.356041431427002
    3. '(input' → logprob: -3.356041431427002
    4. ' (' → logprob: -5.731041431427002
    5. '(total' → logprob: -6.231041431427002
    6. '(index' → logprob: -6.481041431427002
    7. '(main' → logprob: -8.606040954589844
    8. '(in' → logprob: -10.231040954589844
    9. '(length' → logprob: -10.731040954589844
    10. '(range' → logprob: -11.731040954589844

Token 63: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00047928967978805304
    2. '(_' → logprob: -8.625479698181152
    3. '_len' → logprob: -9.375479698181152
    4. '_' → logprob: -9.625479698181152
    5. '(' → logprob: -9.750479698181152
    6. '(length' → logprob: -9.875479698181152
    7. 'length' → logprob: -11.375479698181152
    8. '_l' → logprob: -11.875479698181152
    9. '_lengths' → logprob: -12.375479698181152
    10. ')_' → logprob: -12.500479698181152

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06295476108789444
    2. ' ):' → logprob: -2.8129546642303467
    3. ')' → logprob: -7.562954902648926
    4. '):
' → logprob: -8.187954902648926
    5. ' )' → logprob: -9.312954902648926
    6. '+' → logprob: -10.062954902648926
    7. ' ):
' → logprob: -10.312954902648926
    8. ':' → logprob: -11.437954902648926
    9. ' +' → logprob: -12.062954902648926
    10. ' ' → logprob: -12.937954902648926

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5219766497612
    2. ' if' → logprob: -1.5219767093658447
    3. ' ' → logprob: -2.1469767093658447
    4. ':' → logprob: -3.6469767093658447
    5. '<|end|>' → logprob: -4.271976470947266
    6. '    ' → logprob: -4.646976470947266
    7. '[' → logprob: -5.271976470947266
    8. '```' → logprob: -5.396976470947266
    9. '  ' → logprob: -6.396976470947266
    10. ' ```' → logprob: -6.771976470947266

Token 66: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.5444901585578918
    2. ' if' → logprob: -1.044490098953247
    3. ' value' → logprob: -3.794490098953247
    4. ' index' → logprob: -4.169490337371826
    5. 'current' (adapté à ' current') → logprob: -4.669490337371826
    6. ' i' → logprob: -5.169490337371826
    7. ' idx' → logprob: -5.919490337371826
    8. 'if' → logprob: -6.169490337371826
    9. ' selected' → logprob: -6.294490337371826
    10. 'index' → logprob: -6.419490337371826

Token 67: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.02322998456656933
    2. '_value' → logprob: -4.148230075836182
    3. '_' → logprob: -5.023230075836182
    4. '_indices' → logprob: -9.023229598999023
    5. ' =' → logprob: -9.523229598999023
    6. 'index' → logprob: -9.648229598999023
    7. '_values' → logprob: -9.898229598999023
    8. '_idx' → logprob: -10.023229598999023
    9. '_val' → logprob: -10.398229598999023
    10. ' _' → logprob: -10.523229598999023

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020547492429614067
    2. '=' → logprob: -3.895547389984131
    3. ' ' → logprob: -12.895547866821289
    4. '=index' → logprob: -13.395547866821289
    5. ',' → logprob: -14.520547866821289
    6. ')' → logprob: -15.020547866821289
    7. '   ' → logprob: -15.270547866821289
    8. '    ' → logprob: -16.27054786682129
    9. ' ==' → logprob: -16.39554786682129
    10. ' +=' → logprob: -16.52054786682129

Token 69: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.0205562524497509
    2. 'index' → logprob: -3.8955562114715576
    3. ' position' → logprob: -12.520556449890137
    4. '#index' → logprob: -12.895556449890137
    5. '=index' → logprob: -13.270556449890137
    6. ' main' → logprob: -13.395556449890137
    7. '[index' → logprob: -14.145556449890137
    8. '(index' → logprob: -14.520556449890137
    9. ' value' → logprob: -14.520556449890137
    10. '	index' → logprob: -14.520556449890137

Token 70: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.704273118884885e-07
    2. '[_' → logprob: -14.875000953674316
    3. ']_' → logprob: -16.875
    4. ')_' → logprob: -17.0
    5. '[' → logprob: -17.375
    6. ']' → logprob: -17.75
    7. '_lists' → logprob: -17.875
    8. '_List' → logprob: -17.875
    9. 's' → logprob: -18.0
    10. '```' → logprob: -18.0

Token 71: '[position' (ID: 75596)
  Prédit: '[position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[position' → logprob: -0.00010306637705070898
    2. '[current' → logprob: -9.625102996826172
    3. '[' → logprob: -10.250102996826172
    4. '```' → logprob: -13.750102996826172
    5. '   ' → logprob: -15.500102996826172
    6. '[value' → logprob: -15.625102996826172
    7. ' [' → logprob: -16.375102996826172
    8. '[pos' → logprob: -17.125102996826172
    9. '\[' → logprob: -17.375102996826172
    10. '[
' → logprob: -18.000102996826172

Token 72: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11422988027334213
    2. ')
' → logprob: -2.864229917526245
    3. ']' → logprob: -3.114229917526245
    4. ' )' → logprob: -5.864229679107666
    5. '])' → logprob: -6.864229679107666
    6. '   ' → logprob: -6.864229679107666
    7. ' )
' → logprob: -7.239229679107666
    8. ']
' → logprob: -8.114230155944824
    9. ')]' → logprob: -8.739230155944824
    10. '])
' → logprob: -9.239230155944824

Token 73: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' total' (ID: 3609)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11696841567754745
    2. 'if' → logprob: -2.9919683933258057
    3. ' 
' → logprob: -4.241968631744385
    4. ' ' → logprob: -4.241968631744385
    5. '+' → logprob: -4.491968631744385
    6. '<|end|>' → logprob: -5.116968631744385
    7. '```' → logprob: -5.616968631744385
    8. '
' → logprob: -6.241968631744385
    9. '   ' → logprob: -6.616968631744385
    10. 'current' → logprob: -6.616968631744385

Token 75: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0018512967508286238
    2. '_' → logprob: -6.3768510818481445
    3. ' +=' → logprob: -9.876851081848145
    4. '_s' → logprob: -10.251851081848145
    5. '_value' → logprob: -10.751851081848145
    6. '+=' → logprob: -12.001851081848145
    7. '_values' → logprob: -12.126851081848145
    8. '```' → logprob: -12.126851081848145
    9. ' _' → logprob: -12.251851081848145
    10. '_add' → logprob: -12.751851081848145

Token 76: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38858965039253235
    2. '+=' → logprob: -1.13858962059021
    3. '+' → logprob: -6.388589859008789
    4. ' +' → logprob: -10.763589859008789
    5. '+=(' → logprob: -11.888589859008789
    6. '=' → logprob: -12.763589859008789
    7. ']+=' → logprob: -13.263589859008789
    8. '+='' → logprob: -13.888589859008789
    9. '+="' → logprob: -14.013589859008789
    10. ' =' → logprob: -14.513589859008789

Token 77: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.006853311788290739
    2. 'main' → logprob: -5.006853103637695
    3. ' bonus' → logprob: -9.381853103637695
    4. ' current' → logprob: -10.631853103637695
    5. '(main' → logprob: -11.006853103637695
    6. ' max' → logprob: -12.631853103637695
    7. ' ' → logprob: -13.131853103637695
    8. '	main' → logprob: -13.381853103637695
    9. ' previous' → logprob: -13.506853103637695
    10. ' (' → logprob: -13.756853103637695

Token 78: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.375
    3. '_value' → logprob: -16.5
    4. ' _' → logprob: -17.5
    5. '[_' → logprob: -17.625
    6. '_VALUES' → logprob: -18.75
    7. '```' → logprob: -19.375
    8. '_variables' → logprob: -20.0
    9. 'Values' → logprob: -20.125
    10. '__' → logprob: -20.25

Token 79: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.0007205340662039816
    2. '[' → logprob: -7.250720500946045
    3. '```' → logprob: -12.250720977783203
    4. 'current' → logprob: -13.125720977783203
    5. '[
' → logprob: -13.625720977783203
    6. '   ' → logprob: -14.250720977783203
    7. ' [' → logprob: -14.375720977783203
    8. '[cur' → logprob: -14.500720977783203
    9. ' current' → logprob: -15.750720977783203
    10. '[curr' → logprob: -16.000720977783203

Token 80: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00017505438881926239
    2. 'index' → logprob: -9.500175476074219
    3. 'ex' → logprob: -9.750175476074219
    4. 'dex' → logprob: -10.500175476074219
    5. 'Index' → logprob: -12.625175476074219
    6. '_position' → logprob: -13.375175476074219
    7. '_' → logprob: -13.750175476074219
    8. '_idx' → logprob: -13.875175476074219
    9. 'nd' → logprob: -14.000175476074219
    10. '[index' → logprob: -14.000175476074219

Token 81: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006536554079502821
    2. ' ]' → logprob: -5.756536483764648
    3. ')' → logprob: -6.006536483764648
    4. '+' → logprob: -8.131536483764648
    5. ']
' → logprob: -8.506536483764648
    6. '])' → logprob: -9.256536483764648
    7. ' +' → logprob: -9.256536483764648
    8. ']+' → logprob: -9.631536483764648
    9. ' )' → logprob: -10.506536483764648
    10. '   ' → logprob: -10.881536483764648

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5659143328666687
    2. ' if' → logprob: -1.8159143924713135
    3. '<|end|>' → logprob: -2.4409143924713135
    4. '```' → logprob: -2.5659143924713135
    5. '    
' → logprob: -3.5659143924713135
    6. ' ' → logprob: -4.065914154052734
    7. '  
' → logprob: -4.065914154052734
    8. '
' → logprob: -4.440914154052734
    9. ' 
' → logprob: -4.690914154052734
    10. '   
' → logprob: -4.815914154052734

Token 83: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07644907385110855
    2. 'if' (adapté à ' if') → logprob: -2.826449155807495
    3. '   ' → logprob: -5.076448917388916
    4. ' ' → logprob: -5.576448917388916
    5. '
' → logprob: -6.576448917388916
    6. ' 
' → logprob: -6.826448917388916
    7. '    
' → logprob: -7.451448917388916
    8. '```' → logprob: -7.826448917388916
    9. '  
' → logprob: -8.076449394226074
    10. '+' → logprob: -8.951449394226074

Token 84: ' previous' (ID: 5880)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.029278267174959183
    2. 'current' → logprob: -4.02927827835083
    3. ' previous' → logprob: -4.90427827835083
    4. ' abs' → logprob: -6.65427827835083
    5. ' ' → logprob: -7.02927827835083
    6. ' index' → logprob: -7.27927827835083
    7. ' position' → logprob: -8.279277801513672
    8. 'previous' → logprob: -8.404277801513672
    9. ' main' → logprob: -9.154277801513672
    10. 'abs' → logprob: -10.029277801513672

Token 85: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -5.676981345459353e-06
    2. '_' → logprob: -13.250005722045898
    3. 'index' → logprob: -14.000005722045898
    4. '_indices' → logprob: -14.500005722045898
    5. ' _' → logprob: -14.750005722045898
    6. '```' → logprob: -15.000005722045898
    7. '_indexes' → logprob: -15.000005722045898
    8. '_INDEX' → logprob: -15.375005722045898
    9. '[index' → logprob: -15.875005722045898
    10. '_idx' → logprob: -16.0000057220459

Token 86: ' ==' (ID: 951)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25242793560028076
    2. ' +' → logprob: -2.0024280548095703
    3. '==' → logprob: -2.6274280548095703
    4. '!=' → logprob: -4.75242805480957
    5. ' ==' → logprob: -5.12742805480957
    6. ' !=' → logprob: -7.37742805480957
    7. '>' → logprob: -8.12742805480957
    8. ' ' → logprob: -9.00242805480957
    9. '>=' → logprob: -9.37742805480957
    10. '<' → logprob: -10.62742805480957

Token 87: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.6328279376029968
    2. 'current' → logprob: -0.7578279376029968
    3. ' ' → logprob: -9.257827758789062
    4. ' -' → logprob: -10.257827758789062
    5. 'index' → logprob: -10.507827758789062
    6. ' index' → logprob: -11.007827758789062
    7. '-' → logprob: -11.257827758789062
    8. '(current' → logprob: -11.757827758789062
    9. ' main' → logprob: -11.882827758789062
    10. '100' → logprob: -11.882827758789062

Token 88: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0002669384120963514
    2. '_' → logprob: -8.250267028808594
    3. '__' → logprob: -13.000267028808594
    4. '_idx' → logprob: -13.625267028808594
    5. '_value' → logprob: -15.000267028808594
    6. ' _' → logprob: -15.250267028808594
    7. 'index' → logprob: -15.250267028808594
    8. '_

' → logprob: -15.625267028808594
    9. '_list' → logprob: -15.875267028808594
    10. '```' → logprob: -16.125267028808594

Token 89: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4315074384212494
    2. ' +' → logprob: -1.0565074682235718
    3. ' ' → logprob: -6.181507587432861
    4. '-' → logprob: -7.931507587432861
    5. ' -' → logprob: -8.681507110595703
    6. ':' → logprob: -9.181507110595703
    7. ' :' → logprob: -10.931507110595703
    8. '   ' → logprob: -11.431507110595703
    9. ' and' → logprob: -11.431507110595703
    10. '+:' → logprob: -11.431507110595703

Token 90: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00408516637980938
    2. ' ' → logprob: -5.504085063934326
    3. '2' → logprob: -13.004085540771484
    4. '<|end|>' → logprob: -13.379085540771484
    5. '```' → logprob: -14.379085540771484
    6. ' ' → logprob: -15.129085540771484
    7. '3' → logprob: -15.129085540771484
    8. '7' → logprob: -15.379085540771484
    9. '<|end|>' → logprob: -15.504085540771484
    10. '0' → logprob: -15.504085540771484

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.000000953674316
    3. '<|end|>' → logprob: -15.750000953674316
    4. '10' → logprob: -16.500001907348633
    5. '2' → logprob: -16.625001907348633
    6. '```' → logprob: -17.875001907348633
    7. '100' → logprob: -18.500001907348633
    8. '7' → logprob: -18.562501907348633
    9. '9' → logprob: -18.750001907348633
    10. '<|end|>' → logprob: -18.812501907348633

Token 92: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015110508538782597
    2. ' and' → logprob: -7.001511096954346
    3. ':
' → logprob: -7.501511096954346
    4. 'and' → logprob: -10.251510620117188
    5. ' :' → logprob: -12.251510620117188
    6. '+' → logprob: -12.876510620117188
    7. '   ' → logprob: -13.126510620117188
    8. ' ' → logprob: -14.251510620117188
    9. '):' → logprob: -15.376510620117188
    10. '       ' → logprob: -15.501510620117188

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02081490121781826
    2. ' +' → logprob: -5.145814895629883
    3. '+' → logprob: -5.270814895629883
    4. 'total' → logprob: -5.520814895629883
    5. '   ' → logprob: -6.270814895629883
    6. ' total' → logprob: -6.770814895629883
    7. ' ' → logprob: -7.895814895629883
    8. '
' → logprob: -8.020814895629883
    9. '        
' → logprob: -8.145814895629883
    10. '```' → logprob: -8.270814895629883

Token 94: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.0407421700656414
    2. ' total' → logprob: -3.6657421588897705
    3. '       ' → logprob: -5.04074239730835
    4. '+' → logprob: -6.16574239730835
    5. '           ' → logprob: -6.16574239730835
    6. '	total' → logprob: -7.04074239730835
    7. '
' → logprob: -7.16574239730835
    8. ' ' → logprob: -7.66574239730835
    9. '   ' → logprob: -7.91574239730835
    10. '```' → logprob: -8.040741920471191

Token 95: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.7835754988482222e-05
    2. '_' → logprob: -11.875018119812012
    3. '```' → logprob: -12.750018119812012
    4. '_s' → logprob: -13.125018119812012
    5. '_bonus' → logprob: -13.500018119812012
    6. 'sum' → logprob: -14.125018119812012
    7. '+' → logprob: -14.250018119812012
    8. 's' → logprob: -14.625018119812012
    9. ' _' → logprob: -14.625018119812012
    10. ''_' → logprob: -15.125018119812012

Token 96: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0031453967094421387
    2. ' +=' → logprob: -5.878145217895508
    3. '*=' → logprob: -8.253145217895508
    4. '+' → logprob: -9.878145217895508
    5. '*' → logprob: -11.878145217895508
    6. '+=(' → logprob: -12.003145217895508
    7. '+='' → logprob: -12.378145217895508
    8. '	' → logprob: -13.253145217895508
    9. ' *=' → logprob: -13.378145217895508
    10. '=' → logprob: -13.378145217895508

Token 97: ' bonus' (ID: 11181)
  Prédit: 'bonus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bonus' → logprob: -0.05046472325921059
    2. ' bonus' → logprob: -3.050464630126953
    3. 'bon' → logprob: -7.425464630126953
    4. 'main' → logprob: -7.550464630126953
    5. ' ' → logprob: -8.675464630126953
    6. ' main' → logprob: -9.050464630126953
    7. '   ' → logprob: -9.050464630126953
    8. '100' → logprob: -9.550464630126953
    9. 'b' → logprob: -9.800464630126953
    10. '	b' → logprob: -10.050464630126953

Token 98: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -7.97024549683556e-05
    2. '_' → logprob: -9.500080108642578
    3. '_value' → logprob: -13.000080108642578
    4. '__' → logprob: -13.875080108642578
    5. ' _' → logprob: -13.875080108642578
    6. 's' → logprob: -15.625080108642578
    7. '_sum' → logprob: -15.750080108642578
    8. '_points' → logprob: -16.750080108642578
    9. '_vals' → logprob: -17.250080108642578
    10. '_val' → logprob: -17.375080108642578

Token 99: '[' (ID: 58)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.06417501717805862
    2. '[' → logprob: -2.8141751289367676
    3. 'current' → logprob: -6.189175128936768
    4. '   ' → logprob: -9.43917465209961
    5. ' [' → logprob: -10.31417465209961
    6. ' current' → logprob: -11.18917465209961
    7. 'previous' → logprob: -11.81417465209961
    8. '```' → logprob: -11.81417465209961
    9. '[position' → logprob: -12.93917465209961
    10. '[
' → logprob: -13.18917465209961

Token 100: 'previous' (ID: 31068)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0017393168527632952
    2. 'previous' → logprob: -6.626739501953125
    3. ' current' → logprob: -7.876739501953125
    4. 'position' → logprob: -11.001739501953125
    5. '   ' → logprob: -12.376739501953125
    6. ' previous' → logprob: -12.876739501953125
    7. '[current' → logprob: -12.876739501953125
    8. 'main' → logprob: -13.001739501953125
    9. 'index' → logprob: -13.376739501953125
    10. ' ' → logprob: -13.501739501953125

Token 101: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -6.372916686814278e-05
    2. 'index' → logprob: -9.7500638961792
    3. 'Index' → logprob: -13.2500638961792
    4. '_value' → logprob: -13.6250638961792
    5. '_' → logprob: -14.6250638961792
    6. '_token' → logprob: -14.6250638961792
    7. '_position' → logprob: -15.1250638961792
    8. 'position' → logprob: -16.000062942504883
    9. ' index' → logprob: -16.000062942504883
    10. 'token' → logprob: -16.250062942504883

Token 102: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007579309749417007
    2. ' ]' → logprob: -7.625757694244385
    3. '+' → logprob: -8.250758171081543
    4. ' +' → logprob: -12.625758171081543
    5. ']
' → logprob: -13.000758171081543
    6. '   ' → logprob: -13.875758171081543
    7. '+]' → logprob: -15.000758171081543
    8. '[current' → logprob: -15.125758171081543
    9. 'current' → logprob: -15.250758171081543
    10. ')' → logprob: -15.375758171081543

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2634272873401642
    2. 'previous' → logprob: -1.5134272575378418
    3. ' previous' → logprob: -4.513427257537842
    4. '
' → logprob: -8.513427734375
    5. '    
' → logprob: -9.013427734375
    6. 'current' → logprob: -9.388427734375
    7. ' 
' → logprob: -11.263427734375
    8. '_previous' → logprob: -11.638427734375
    9. '.previous' → logprob: -11.763427734375
    10. '(previous' → logprob: -11.763427734375

Token 104: ' previous' (ID: 5880)
  Prédit: 'previous'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'previous' (adapté à ' previous') → logprob: -0.1168360635638237
    2. '   ' → logprob: -2.3668360710144043
    3. ' previous' → logprob: -4.116836071014404
    4. '    
' → logprob: -9.491835594177246
    5. '
' → logprob: -9.866835594177246
    6. '.previous' → logprob: -11.366835594177246
    7. '```' → logprob: -11.491835594177246
    8. 'current' → logprob: -11.866835594177246
    9. ' ' → logprob: -11.991835594177246
    10. '   
' → logprob: -12.116835594177246

Token 105: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00021152703266125172
    2. '_' → logprob: -8.500211715698242
    3. ' _' → logprob: -13.250211715698242
    4. '_idx' → logprob: -13.625211715698242
    5. '_i' → logprob: -14.250211715698242
    6. '_code' → logprob: -14.375211715698242
    7. '__' → logprob: -14.875211715698242
    8. '=_' → logprob: -15.000211715698242
    9. '```' → logprob: -15.125211715698242
    10. '_line' → logprob: -15.125211715698242

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061968132853507996
    2. '=' → logprob: -2.8119680881500244
    3. ' ' → logprob: -16.061967849731445
    4. '＝' → logprob: -16.311967849731445
    5. ' =)' → logprob: -16.436967849731445
    6. '=current' → logprob: -16.686967849731445
    7. ' equals' → logprob: -17.311967849731445
    8. ' ' → logprob: -17.561967849731445
    9. ' =
' → logprob: -18.436967849731445
    10. ' ==' → logprob: -18.686967849731445

Token 107: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.20141421258449554
    2. ' current' → logprob: -1.7014142274856567
    3. '	current' → logprob: -14.826414108276367
    4. '$current' → logprob: -15.451414108276367
    5. '_current' → logprob: -15.701414108276367
    6. '[current' → logprob: -16.201414108276367
    7. 'Current' → logprob: -16.701414108276367
    8. '(current' → logprob: -17.826414108276367
    9. 'urrent' → logprob: -18.451414108276367
    10. '.current' → logprob: -18.826414108276367

Token 108: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -4.961759259458631e-06
    2. '_' → logprob: -12.375004768371582
    3. '_idx' → logprob: -15.000004768371582
    4. 'index' → logprob: -15.625004768371582
    5. ' _' → logprob: -16.3750057220459
    6. 'Index' → logprob: -17.5000057220459
    7. 'nd' → logprob: -17.8750057220459
    8. '_value' → logprob: -18.0000057220459
    9. '_ind' → logprob: -18.2500057220459
    10. '__' → logprob: -18.7500057220459

Token 109: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13448695838451385
    2. '<|end|>' → logprob: -2.1344869136810303
    3. '```' → logprob: -5.884487152099609
    4. ')' → logprob: -6.634487152099609
    5. ' print' → logprob: -6.634487152099609
    6. '#' → logprob: -7.009487152099609
    7. '
' → logprob: -7.384487152099609
    8. '\n' → logprob: -8.25948715209961
    9. '#print' → logprob: -9.50948715209961
    10. '<|end|>' → logprob: -9.63448715209961

Token 110: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023459646850824356
    2. '(total' → logprob: -3.7734596729278564
    3. '("("' → logprob: -9.273459434509277
    4. '()' → logprob: -9.773459434509277
    5. '('' → logprob: -10.023459434509277
    6. 'total' → logprob: -11.398459434509277
    7. '(
' → logprob: -13.023459434509277
    8. ' (' → logprob: -13.023459434509277
    9. '(sum' → logprob: -14.273459434509277
    10. '(

' → logprob: -14.398459434509277

Token 112: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.650518920039758e-06
    2. '_' → logprob: -13.250003814697266
    3. '_s' → logprob: -14.000003814697266
    4. ' _' → logprob: -15.000003814697266
    5. '_total' → logprob: -15.125003814697266
    6. '_)' → logprob: -16.000003814697266
    7. ')_' → logprob: -16.250003814697266
    8. ')' → logprob: -16.375003814697266
    9. 'sum' → logprob: -17.000003814697266
    10. '_S' → logprob: -18.000003814697266

Token 113: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.250000953674316
    3. '))' → logprob: -16.375
    4. ')`' → logprob: -16.375
    5. ')
' → logprob: -18.25
    6. '+' → logprob: -18.5
    7. ')}' → logprob: -19.375
    8. '')' → logprob: -20.25
    9. '),' → logprob: -20.375
    10. '(' → logprob: -20.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 111
Tokens correctement prédits (1ère position, stricte): 55
Tokens correctement prédits (1ère position, avec adaptation): 57
Tokens correctement prédits (top 10): 93
Précision stricte (1ère position): 49.55%
Précision adaptée (1ère position): 51.35%
Précision (top 10): 83.78%
================================================================================
