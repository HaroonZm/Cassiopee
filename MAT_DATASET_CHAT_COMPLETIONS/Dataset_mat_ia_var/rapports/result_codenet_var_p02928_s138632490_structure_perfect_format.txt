================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import bisect
MOD = 10 ** 9 + 7

class Bit:
    def __init__(self, n):
        self.size = n
        self.tree = [0] * (n + 1)

    def sum(self, i):
        s = 0
        while i > 0:
            s += self.tree[i]
            i -= i & -i
        return s

    def add(self, i, x):
        while i <= self.size:
            self.tree[i] += x
            i += i & -i

n, k = [int(item) for item in input().split()]
a = [int(item) for item in input().split()]
bit = Bit(2010 * 2)
ans = 0

for i, p in enumerate(a):
    bit.add(p, 1)
    ans += i + 1 - bit.sum(p)

a.sort()
big = 0
for item in a:
    big += n - bisect.bisect_right(a, item)

times = (k * (k - 1) // 2) % MOD
ans2 = (ans * k) % MOD + (big * times) % MOD
ans2 %= MOD
print(ans2)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00041732576210051775
    2. '(' → logprob: -7.875417232513428
    3. '\' → logprob: -11.750417709350586
    4. '\n' → logprob: -12.375417709350586
    5. '.
' → logprob: -12.875417709350586
    6. '.

' → logprob: -13.000417709350586
    7. 'newline' → logprob: -13.125417709350586
    8. '.e' → logprob: -13.250417709350586
    9. '.\' → logprob: -13.375417709350586
    10. '.b' → logprob: -13.375417709350586

Token 4: 'MOD' (ID: 52135)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0016205495921894908
    2. '(' → logprob: -6.626620769500732
    3. '.
' → logprob: -9.751620292663574
    4. '\' → logprob: -10.001620292663574
    5. '\n' → logprob: -10.001620292663574
    6. '.

' → logprob: -10.501620292663574
    7. '' → logprob: -10.876620292663574
    8. ',' → logprob: -11.501620292663574
    9. '

' → logprob: -11.501620292663574
    10. '```' → logprob: -11.501620292663574

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16571271419525146
    2. '=' → logprob: -2.165712833404541
    3. '_' → logprob: -3.290712833404541
    4. ' ' → logprob: -7.540712833404541
    5. ' _' → logprob: -8.540712356567383
    6. '_=' → logprob: -9.665712356567383
    7. '  ' → logprob: -12.415712356567383
    8. '```' → logprob: -12.915712356567383
    9. '_SPACE' → logprob: -13.040712356567383
    10. ',' → logprob: -13.415712356567383

Token 6: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0891398936510086
    2. '10' → logprob: -2.589139938354492
    3. '100' → logprob: -4.589139938354492
    4. '1' → logprob: -10.589139938354492
    5. 'int' → logprob: -12.214139938354492
    6. '998' → logprob: -13.464139938354492
    7. ' ' → logprob: -13.714139938354492
    8. ' int' → logprob: -13.964139938354492
    9. ' (' → logprob: -14.464139938354492
    10. '`' → logprob: -14.589139938354492

Token 7: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1603696495294571
    2. '100' → logprob: -1.910369634628296
    3. '998' → logprob: -9.160369873046875
    4. '1' → logprob: -10.285369873046875
    5. ' ' → logprob: -12.660369873046875
    6. 'int' → logprob: -13.535369873046875
    7. '200' → logprob: -14.910369873046875
    8. '2' → logprob: -15.410369873046875
    9. '214' → logprob: -15.535369873046875
    10. '(' → logprob: -15.660369873046875

Token 8: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6293802261352539
    2. '0' → logprob: -0.8793802261352539
    3. '^' → logprob: -3.754380226135254
    4. '\' → logprob: -5.004380226135254
    5. ' **' → logprob: -5.379380226135254
    6. '*' → logprob: -5.504380226135254
    7. '=' → logprob: -6.129380226135254
    8. '1' → logprob: -6.379380226135254
    9. '%' → logprob: -6.504380226135254
    10. '_' → logprob: -6.629380226135254

Token 9: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.981667537620524e-06
    2. '09' → logprob: -13.750001907348633
    3. ' ' → logprob: -14.000001907348633
    4. '```' → logprob: -17.750001907348633
    5. '10' → logprob: -19.375001907348633
    6. '   ' → logprob: -20.375001907348633
    7. '+' → logprob: -21.250001907348633
    8. '19' → logprob: -21.500001907348633
    9. '``' → logprob: -21.625001907348633
    10. '4' → logprob: -21.750001907348633

Token 10: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -18.125
    3. ' ' → logprob: -19.375
    4. '```' → logprob: -19.625
    5. '10' → logprob: -20.875
    6. '19' → logprob: -21.25
    7. '``' → logprob: -22.0
    8. 'nine' → logprob: -22.0
    9. '8' → logprob: -22.125
    10. '18' → logprob: -22.375

Token 11: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007671695202589035
    2. ' +' → logprob: -4.88267183303833
    3. '7' → logprob: -10.007671356201172
    4. '+
' → logprob: -11.257671356201172
    5. '```' → logprob: -13.007671356201172
    6. ' +
' → logprob: -13.257671356201172
    7. '+

' → logprob: -13.632671356201172
    8. ' +
' → logprob: -13.882671356201172
    9. '＋' → logprob: -14.382671356201172
    10. 'plus' → logprob: -15.632671356201172

Token 12: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '+' → logprob: -16.750003814697266
    4. '```' → logprob: -17.500003814697266
    5. '07' → logprob: -18.125003814697266
    6. '   ' → logprob: -19.000003814697266
    7. ' ' → logprob: -19.375003814697266
    8. '37' → logprob: -19.375003814697266
    9. '17' → logprob: -19.625003814697266
    10. '9' → logprob: -19.750003814697266

Token 13: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. '+' → logprob: -16.5
    3. ' ' → logprob: -16.875
    4. '```' → logprob: -18.375
    5. '07' → logprob: -18.75
    6. '   ' → logprob: -19.25
    7. '9' → logprob: -19.875
    8. '37' → logprob: -20.0
    9. '``' → logprob: -20.6875
    10. ' ' → logprob: -21.0

Token 14: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07840615510940552
    2. '
' → logprob: -3.2034060955047607
    3. '

' → logprob: -4.57840633392334
    4. '\n' → logprob: -4.70340633392334
    5. '\' → logprob: -5.07840633392334
    6. 'def' → logprob: -5.32840633392334
    7. '' → logprob: -6.32840633392334
    8. '```' → logprob: -6.32840633392334
    9. 'class' → logprob: -8.32840633392334
    10. 'newline' → logprob: -9.20340633392334

Token 15: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04530941694974899
    2. 'n' → logprob: -4.045309543609619
    3. '`' → logprob: -4.795309543609619
    4. 'class' → logprob: -5.045309543609619
    5. '```' → logprob: -6.170309543609619
    6. '(' → logprob: -6.545309543609619
    7. '[' → logprob: -6.670309543609619
    8. '#' → logprob: -7.045309543609619
    9. 'de' → logprob: -7.170309543609619
    10. '\' → logprob: -7.170309543609619

Token 16: ' Bit' (ID: 9422)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.688507080078125
    2. ' Segment' → logprob: -1.438507080078125
    3. ' Seg' → logprob: -2.063507080078125
    4. ' ' → logprob: -2.438507080078125
    5. ' Fen' → logprob: -4.563507080078125
    6. ' My' → logprob: -4.688507080078125
    7. ' Factor' → logprob: -5.438507080078125
    8. ' Num' → logprob: -5.688507080078125
    9. ' Combination' → logprob: -5.813507080078125
    10. ' ' → logprob: -6.063507080078125

Token 17: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0030494853854179382
    2. '():' → logprob: -5.878049373626709
    3. ' :' → logprob: -9.503049850463867
    4. '):' → logprob: -9.753049850463867
    5. '(' → logprob: -10.753049850463867
    6. ':
' → logprob: -11.628049850463867
    7. '(Bit' → logprob: -11.878049850463867
    8. '  ' → logprob: -12.128049850463867
    9. '(bit' → logprob: -12.128049850463867
    10. 'Tree' → logprob: -12.253049850463867

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39626091718673706
    2. ':' → logprob: -1.1462609767913818
    3. ' :' → logprob: -5.521260738372803
    4. '(object' → logprob: -6.021260738372803
    5. '    ' → logprob: -6.896260738372803
    6. ':
' → logprob: -7.646260738372803
    7. '```' → logprob: -7.896260738372803
    8. ' def' → logprob: -8.771261215209961
    9. '    
' → logprob: -9.021261215209961
    10. '():' → logprob: -9.021261215209961

Token 19: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3178405165672302
    2. ':' → logprob: -2.067840576171875
    3. '```' → logprob: -2.317840576171875
    4. '(object' → logprob: -3.942840576171875
    5. '    ' → logprob: -5.067840576171875
    6. 'def' (adapté à ' def') → logprob: -5.067840576171875
    7. ' def' → logprob: -6.192840576171875
    8. '  ' → logprob: -6.317840576171875
    9. ' ' → logprob: -6.442840576171875
    10. '(' → logprob: -6.442840576171875

Token 20: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.013122701086103916
    2. '__' → logprob: -5.13812255859375
    3. 'init' → logprob: -5.38812255859375
    4. ' init' → logprob: -6.01312255859375
    5. '_init' → logprob: -9.13812255859375
    6. ' _' → logprob: -10.88812255859375
    7. '   ' → logprob: -12.26312255859375
    8. '  ' → logprob: -12.26312255859375
    9. 'nit' → logprob: -12.51312255859375
    10. ' def' → logprob: -12.51312255859375

Token 21: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.6240566083070007e-06
    2. ' init' → logprob: -14.500001907348633
    3. 'int' → logprob: -15.000001907348633
    4. 'ini' → logprob: -15.125001907348633
    5. 'in' → logprob: -15.875001907348633
    6. 'i' → logprob: -16.000001907348633
    7. 'nit' → logprob: -16.500001907348633
    8. 'inite' → logprob: -16.875001907348633
    9. 'innit' → logprob: -18.250001907348633
    10. 'n' → logprob: -19.125001907348633

Token 22: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.009825390763580799
    2. '__' → logprob: -4.634825229644775
    3. '(self' → logprob: -10.384825706481934
    4. '__(
' → logprob: -11.134825706481934
    5. '__((' → logprob: -11.384825706481934
    6. '__('' → logprob: -12.009825706481934
    7. '__(*' → logprob: -12.634825706481934
    8. '```' → logprob: -14.134825706481934
    9. '_(' → logprob: -14.259825706481934
    10. '(' → logprob: -14.509825706481934

Token 23: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031985121313482523
    2. ' self' → logprob: -5.753198623657227
    3. 'size' → logprob: -11.378198623657227
    4. ')' → logprob: -12.253198623657227
    5. '   ' → logprob: -13.503198623657227
    6. ' ' → logprob: -13.878198623657227
    7. '       ' → logprob: -14.003198623657227
    8. '	self' → logprob: -14.753198623657227
    9. 'n' → logprob: -15.503198623657227
    10. '(self' → logprob: -15.753198623657227

Token 24: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.22595834732055664
    2. ',' → logprob: -1.6009583473205566
    3. 'self' → logprob: -8.350957870483398
    4. ' ' → logprob: -8.350957870483398
    5. ' self' → logprob: -10.725957870483398
    6. ',self' → logprob: -10.725957870483398
    7. '_,' → logprob: -10.850957870483398
    8. ' )' → logprob: -12.975957870483398
    9. '  ' → logprob: -13.475957870483398
    10. ')' → logprob: -13.850957870483398

Token 25: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7572440505027771
    2. ' self' → logprob: -1.0072441101074219
    3. ' n' → logprob: -2.382244110107422
    4. 'n' → logprob: -2.632244110107422
    5. '   ' → logprob: -7.007244110107422
    6. ' size' → logprob: -7.632244110107422
    7. 'size' → logprob: -9.007244110107422
    8. ' ' → logprob: -10.507244110107422
    9. '    ' → logprob: -12.007244110107422
    10. '	self' → logprob: -12.632244110107422

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003922976087778807
    2. ' ):' → logprob: -5.628922939300537
    3. '):
' → logprob: -8.503923416137695
    4. ')' → logprob: -9.253923416137695
    5. '):
' → logprob: -11.378923416137695
    6. ':' → logprob: -12.503923416137695
    7. ' )' → logprob: -12.753923416137695
    8. ',' → logprob: -12.878923416137695
    9. '   ' → logprob: -13.753923416137695
    10. ' ' → logprob: -14.128923416137695

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018125296628568321
    2. '   ' → logprob: -9.500181198120117
    3. 'self' → logprob: -10.000181198120117
    4. ' self' → logprob: -10.750181198120117
    5. ':' → logprob: -11.375181198120117
    6. '    ' → logprob: -11.500181198120117
    7. ',' → logprob: -12.750181198120117
    8. '        ' → logprob: -13.000181198120117
    9. '     ' → logprob: -13.125181198120117
    10. '<|end|>' → logprob: -13.125181198120117

Token 28: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.07143448293209076
    2. 'self' (adapté à ' self') → logprob: -2.696434497833252
    3. '       ' → logprob: -6.571434497833252
    4. ' [' → logprob: -10.571434020996094
    5. '[self' → logprob: -10.571434020996094
    6. ' super' → logprob: -11.196434020996094
    7. '   ' → logprob: -11.321434020996094
    8. ' ' → logprob: -11.946434020996094
    9. '	self' → logprob: -12.571434020996094
    10. '[' → logprob: -12.696434020996094

Token 29: '.size' (ID: 4463)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.47821155190467834
    2. '.' → logprob: -1.853211522102356
    3. '.size' → logprob: -1.853211522102356
    4. '.data' → logprob: -3.6032116413116455
    5. ' .' → logprob: -3.7282116413116455
    6. '._' → logprob: -4.978211402893066
    7. ' =' → logprob: -6.103211402893066
    8. '.tree' → logprob: -6.353211402893066
    9. ' size' → logprob: -6.728211402893066
    10. '.bit' → logprob: -6.853211402893066

Token 30: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408029437065125
    2. ' =' → logprob: -0.9740803241729736
    3. ' ' → logprob: -13.599080085754395
    4. '   ' → logprob: -14.599080085754395
    5. '       ' → logprob: -14.724080085754395
    6. '=int' → logprob: -14.974080085754395
    7. '    ' → logprob: -15.724080085754395
    8. '=n' → logprob: -15.849080085754395
    9. ')' → logprob: -16.09908103942871
    10. '＝' → logprob: -16.47408103942871

Token 31: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.575941801071167
    2. 'n' → logprob: -0.825941801071167
    3. '	n' → logprob: -14.075942039489746
    4. ' ' → logprob: -14.450942039489746
    5. '   ' → logprob: -14.825942039489746
    6. '[' → logprob: -15.450942039489746
    7. '1' → logprob: -15.950942039489746
    8. ' [' → logprob: -16.20094108581543
    9. '[n' → logprob: -16.82594108581543
    10. '  ' → logprob: -17.20094108581543

Token 32: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033901643473654985
    2. 'self' → logprob: -5.753390312194824
    3. ' self' → logprob: -8.628390312194824
    4. '        ' → logprob: -11.128390312194824
    5. '   ' → logprob: -11.753390312194824
    6. '
' → logprob: -12.003390312194824
    7. '	self' → logprob: -13.753390312194824
    8. '      ' → logprob: -14.503390312194824
    9. ',' → logprob: -14.753390312194824
    10. '    ' → logprob: -14.878390312194824

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005158595158718526
    2. 'self' → logprob: -7.875515937805176
    3. ' self' → logprob: -9.750515937805176
    4. '<|end|>' → logprob: -10.250515937805176
    5. '
' → logprob: -10.625515937805176
    6. '   ' → logprob: -11.875515937805176
    7. ',' → logprob: -12.625515937805176
    8. '	self' → logprob: -13.625515937805176
    9. '           ' → logprob: -14.375515937805176
    10. '        
' → logprob: -14.375515937805176

Token 34: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006277382839471102
    2. 'self' (adapté à ' self') → logprob: -5.131277561187744
    3. ' self' → logprob: -8.381277084350586
    4. '   ' → logprob: -9.256277084350586
    5. '	self' → logprob: -12.256277084350586
    6. '```' → logprob: -12.381277084350586
    7. ',' → logprob: -13.006277084350586
    8. '        ' → logprob: -13.131277084350586
    9. '           ' → logprob: -13.256277084350586
    10. '0' → logprob: -13.381277084350586

Token 35: '.tree' (ID: 49211)
  Prédit: '.data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.7034985423088074
    2. '.tree' → logprob: -0.7034985423088074
    3. 'data' → logprob: -5.203498363494873
    4. 'tree' → logprob: -6.578498363494873
    5. '.' → logprob: -6.953498363494873
    6. '   ' → logprob: -7.578498363494873
    7. '.bit' → logprob: -7.828498363494873
    8. '.c' → logprob: -8.078498840332031
    9. '._' → logprob: -8.203498840332031
    10. ' tree' → logprob: -8.703498840332031

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868715465068817
    2. '=' → logprob: -1.136871576309204
    3. '[' → logprob: -15.386871337890625
    4. '=[]' → logprob: -16.011871337890625
    5. ' =[' → logprob: -16.511871337890625
    6. '=[' → logprob: -16.636871337890625
    7. ' ' → logprob: -16.636871337890625
    8. '＝' → logprob: -17.761871337890625
    9. '[:]' → logprob: -17.886871337890625
    10. '=}' → logprob: -18.136871337890625

Token 37: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1269284337759018
    2. ' [' → logprob: -2.1269283294677734
    3. '[n' → logprob: -15.626928329467773
    4. '[self' → logprob: -16.001928329467773
    5. '[int' → logprob: -18.501928329467773
    6. '[a' → logprob: -18.751928329467773
    7. '[len' → logprob: -19.126928329467773
    8. ' ' → logprob: -19.376928329467773
    9. '[class' → logprob: -19.751928329467773
    10. '[name' → logprob: -20.001928329467773

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '۰' → logprob: -22.75
    4. '０' → logprob: -24.125
    5. '   ' → logprob: -24.375
    6. '00' → logprob: -24.5
    7. '000' → logprob: -25.5
    8. '٠' → logprob: -25.625
    9. '०' → logprob: -26.25
    10. '```' → logprob: -26.625

Token 39: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014019061345607042
    2. ']*(' → logprob: -6.626401901245117
    3. ']*' → logprob: -9.501401901245117
    4. ' ]' → logprob: -14.501401901245117
    5. ',' → logprob: -15.001401901245117
    6. ')' → logprob: -15.501401901245117
    7. ' ' → logprob: -17.126401901245117
    8. ']+' → logprob: -17.126401901245117
    9. '}' → logprob: -18.001401901245117
    10. '*' → logprob: -18.001401901245117

Token 40: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20738081634044647
    2. ' *' → logprob: -2.332380771636963
    3. '*(' → logprob: -2.457380771636963
    4. ']*(' → logprob: -5.582380771636963
    5. ']' → logprob: -7.832380771636963
    6. '*n' → logprob: -8.957381248474121
    7. '*[' → logprob: -9.332381248474121
    8. ']*' → logprob: -9.832381248474121
    9. '[' → logprob: -10.707381248474121
    10. ')' → logprob: -10.832381248474121

Token 41: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.041768160182983e-05
    2. ' (' → logprob: -9.500080108642578
    3. '(self' → logprob: -12.500080108642578
    4. '(' → logprob: -13.500080108642578
    5. '((' → logprob: -16.000080108642578
    6. '   ' → logprob: -16.625080108642578
    7. '(nn' → logprob: -17.125080108642578
    8. '(size' → logprob: -17.375080108642578
    9. '(nx' → logprob: -17.750080108642578
    10. '（' → logprob: -18.250080108642578

Token 42: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006951338145881891
    2. ' (' → logprob: -5.006951332092285
    3. 'n' → logprob: -8.756951332092285
    4. '(' → logprob: -9.631951332092285
    5. ' n' → logprob: -11.881951332092285
    6. '(self' → logprob: -12.131951332092285
    7. '((' → logprob: -15.256951332092285
    8. '   ' → logprob: -16.0069522857666
    9. '[n' → logprob: -16.3819522857666
    10. ' ' → logprob: -16.5069522857666

Token 43: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023245595395565033
    2. ' +' → logprob: -3.7732455730438232
    3. '+
' → logprob: -17.023244857788086
    4. ' +
' → logprob: -17.648244857788086
    5. '+)' → logprob: -18.023244857788086
    6. '＋' → logprob: -18.023244857788086
    7. '+n' → logprob: -18.773244857788086
    8. ' plus' → logprob: -18.773244857788086
    9. '1' → logprob: -19.773244857788086
    10. '+

' → logprob: -20.148244857788086

Token 44: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001422770437784493
    2. ' ' → logprob: -8.875142097473145
    3. '2' → logprob: -13.000142097473145
    4. '   ' → logprob: -16.87514305114746
    5. '```' → logprob: -17.75014305114746
    6. '  ' → logprob: -18.62514305114746
    7. '１' → logprob: -18.75014305114746
    8. '۱' → logprob: -19.50014305114746
    9. '

' → logprob: -19.87514305114746
    10. '' → logprob: -20.50014305114746

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '2' → logprob: -14.500000953674316
    3. ' ' → logprob: -14.500000953674316
    4. '```' → logprob: -17.000001907348633
    5. '１' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.125001907348633
    7. '۱' → logprob: -19.000001907348633
    8. '

' → logprob: -19.250001907348633
    9. '  ' → logprob: -19.750001907348633
    10. '
' → logprob: -19.750001907348633

Token 46: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7014437364414334e-05
    2. ')
' → logprob: -11.00002670288086
    3. ' )' → logprob: -11.62502670288086
    4. '   ' → logprob: -14.50002670288086
    5. '       ' → logprob: -16.00002670288086
    6. '```' → logprob: -16.37502670288086
    7. '))' → logprob: -16.50002670288086
    8. '`)' → logprob: -16.50002670288086
    9. ')

' → logprob: -16.62502670288086
    10. '}' → logprob: -16.62502670288086

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1358119249343872
    2. ' def' → logprob: -2.7608118057250977
    3. 'def' → logprob: -3.8858118057250977
    4. '
' → logprob: -4.010811805725098
    5. '    
' → logprob: -4.010811805725098
    6. ' ' → logprob: -5.885811805725098
    7. ' 
' → logprob: -6.385811805725098
    8. '	def' → logprob: -6.635811805725098
    9. '  
' → logprob: -7.635811805725098
    10. '        
' → logprob: -8.135811805725098

Token 48: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06236188858747482
    2. ' def' → logprob: -2.8123619556427
    3. '   ' → logprob: -8.062361717224121
    4. '
' → logprob: -10.187361717224121
    5. ' ' → logprob: -10.562361717224121
    6. '	def' → logprob: -11.937361717224121
    7. 'de' → logprob: -12.312361717224121
    8. ' 
' → logprob: -13.562361717224121
    9. '    
' → logprob: -13.812361717224121
    10. ')' → logprob: -14.187361717224121

Token 49: ' sum' (ID: 4215)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.04073907434940338
    2. 'update' → logprob: -3.915739059448242
    3. ' add' → logprob: -4.040739059448242
    4. '_update' → logprob: -6.415739059448242
    5. 'add' → logprob: -7.665739059448242
    6. ' query' → logprob: -9.165739059448242
    7. '_add' → logprob: -9.665739059448242
    8. ' sum' → logprob: -10.040739059448242
    9. ' low' → logprob: -10.165739059448242
    10. ' ' → logprob: -11.165739059448242

Token 50: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.853215217590332
    2. '(' → logprob: -0.978215217590332
    3. '_' → logprob: -1.728215217590332
    4. '<|end|>' → logprob: -4.728215217590332
    5. '_up' → logprob: -6.103215217590332
    6. '<|end|>' → logprob: -6.603215217590332
    7. '_query' → logprob: -6.728215217590332
    8. '```' → logprob: -6.853215217590332
    9. '_until' → logprob: -7.353215217590332
    10. '_range' → logprob: -7.353215217590332

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026956256479024887
    2. ')' → logprob: -4.526956081390381
    3. ' ,' → logprob: -4.651956081390381
    4. '(self' → logprob: -5.526956081390381
    5. '):' → logprob: -7.526956081390381
    6. 'self' → logprob: -7.651956081390381
    7. ',index' → logprob: -8.651956558227539
    8. '```' → logprob: -9.026956558227539
    9. ',self' → logprob: -9.151956558227539
    10. ',i' → logprob: -9.276956558227539

Token 52: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5102335214614868
    2. ' i' → logprob: -1.3852335214614868
    3. 'self' → logprob: -2.2602334022521973
    4. ' self' → logprob: -3.2602334022521973
    5. 'idx' → logprob: -5.885233402252197
    6. ' idx' → logprob: -6.510233402252197
    7. 'index' → logprob: -7.260233402252197
    8. 'k' → logprob: -7.385233402252197
    9. 'r' → logprob: -7.885233402252197
    10. ' r' → logprob: -9.010233879089355

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15186525881290436
    2. ')' → logprob: -2.026865243911743
    3. '):
' → logprob: -5.151865482330322
    4. '+' → logprob: -6.651865482330322
    5. ',' → logprob: -7.276865482330322
    6. ' ):' → logprob: -7.776865482330322
    7. ' )' → logprob: -8.026865005493164
    8. '   ' → logprob: -9.026865005493164
    9. '<|end|>' → logprob: -9.026865005493164
    10. ':' → logprob: -9.026865005493164

Token 54: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.23836751282215118
    2. 'res' → logprob: -2.2383675575256348
    3. ' s' → logprob: -2.4883675575256348
    4. ' res' → logprob: -3.9883675575256348
    5. '       ' → logprob: -5.738367557525635
    6. 'result' → logprob: -7.613367557525635
    7. ' result' → logprob: -9.738367080688477
    8. '   ' → logprob: -9.988367080688477
    9. 'r' → logprob: -11.238367080688477
    10. 'ans' → logprob: -11.363367080688477

Token 56: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07945852726697922
    2. '+=' → logprob: -2.829458475112915
    3. ' =' → logprob: -4.329458713531494
    4. '=' → logprob: -5.579458713531494
    5. ' ' → logprob: -7.954458713531494
    6. '  ' → logprob: -11.454458236694336
    7. '   ' → logprob: -11.954458236694336
    8. ' |=' → logprob: -12.579458236694336
    9. ' ' → logprob: -12.829458236694336
    10. '<|end|>' → logprob: -12.954458236694336

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048587486147880554
    2. ' ' → logprob: -3.0485875606536865
    3. '       ' → logprob: -16.173587799072266
    4. '   ' → logprob: -17.173587799072266
    5. ' ' → logprob: -18.923587799072266
    6. '<|end|>' → logprob: -19.298587799072266
    7. '  ' → logprob: -19.423587799072266
    8. ' s' → logprob: -19.798587799072266
    9. '۰' → logprob: -19.923587799072266
    10. '        ' → logprob: -20.298587799072266

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '۰' → logprob: -19.250059127807617
    4. '   ' → logprob: -19.750059127807617
    5. 'i' → logprob: -20.625059127807617
    6. '  ' → logprob: -21.375059127807617
    7. ' ' → logprob: -21.500059127807617
    8. '```' → logprob: -21.562559127807617
    9. '00' → logprob: -21.937559127807617
    10. '０' → logprob: -22.000059127807617

Token 59: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5041127800941467
    2. '<|end|>' → logprob: -1.004112720489502
    3. '
' → logprob: -4.754112720489502
    4. '<|end|>' → logprob: -4.879112720489502
    5. ' ' → logprob: -5.129112720489502
    6. ' while' → logprob: -6.254112720489502
    7. 'while' → logprob: -6.629112720489502
    8. '   ' → logprob: -7.129112720489502
    9. ' 
' → logprob: -7.879112720489502
    10. '  
' → logprob: -8.00411319732666

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06784749031066895
    2. '<|end|>' → logprob: -3.442847490310669
    3. '
' → logprob: -5.19284725189209
    4. ' while' → logprob: -5.56784725189209
    5. '        ' → logprob: -5.56784725189209
    6. '        
' → logprob: -5.81784725189209
    7. '	' → logprob: -6.06784725189209
    8. ' 
' → logprob: -6.06784725189209
    9. '	while' → logprob: -6.69284725189209
    10. ' ' → logprob: -6.69284725189209

Token 61: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.01734844036400318
    2. ' while' → logprob: -4.767348289489746
    3. '       ' → logprob: -4.767348289489746
    4. 'i' → logprob: -9.267348289489746
    5. '	while' → logprob: -9.892348289489746
    6. '   ' → logprob: -10.017348289489746
    7. 'While' → logprob: -12.892348289489746
    8. ' i' → logprob: -14.517348289489746
    9. ' ' → logprob: -15.892348289489746
    10. '```' → logprob: -16.767349243164062

Token 62: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07889319956302643
    2. 'i' → logprob: -2.5788931846618652
    3. '	i' → logprob: -12.828893661499023
    4. ' ' → logprob: -14.328893661499023
    5. '   ' → logprob: -16.828893661499023
    6. ' ' → logprob: -16.953893661499023
    7. '(i' → logprob: -17.703893661499023
    8. '>' → logprob: -17.828893661499023
    9. '  ' → logprob: -18.328893661499023
    10. ',i' → logprob: -18.328893661499023

Token 63: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0052384985610842705
    2. ' >' → logprob: -5.2552385330200195
    3. '>=' → logprob: -13.13023853302002
    4. '&gt' → logprob: -13.25523853302002
    5. '">' → logprob: -14.50523853302002
    6. '＞' → logprob: -16.255237579345703
    7. ' ' → logprob: -16.505237579345703
    8. '0' → logprob: -16.755237579345703
    9. ':' → logprob: -17.505237579345703
    10. '>tag' → logprob: -18.005237579345703

Token 64: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.126929372549057
    2. ' ' → logprob: -2.12692928314209
    3. '=' → logprob: -14.50192928314209
    4. '<|end|>' → logprob: -14.50192928314209
    5. '>' → logprob: -15.37692928314209
    6. ' ' → logprob: -17.251930236816406
    7. '  ' → logprob: -17.251930236816406
    8. '.' → logprob: -18.501930236816406
    9. '
' → logprob: -18.626930236816406
    10. '   ' → logprob: -18.626930236816406

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '<|end|>' → logprob: -16.500030517578125
    4. '>' → logprob: -19.000030517578125
    5. '
' → logprob: -20.125030517578125
    6. '```' → logprob: -20.125030517578125
    7. '=' → logprob: -20.625030517578125
    8. '.' → logprob: -20.750030517578125
    9. 's' → logprob: -21.000030517578125
    10. '  ' → logprob: -21.000030517578125

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014668402262032032
    2. ':
' → logprob: -4.2646684646606445
    3. '       ' → logprob: -8.139668464660645
    4. '           ' → logprob: -8.889668464660645
    5. ' :' → logprob: -10.764668464660645
    6. ',' → logprob: -11.139668464660645
    7. '):' → logprob: -11.764668464660645
    8. ' and' → logprob: -12.264668464660645
    9. '<|end|>' → logprob: -12.389668464660645
    10. ':
' → logprob: -12.514668464660645

Token 67: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0058232140727341175
    2. 's' → logprob: -5.755823135375977
    3. ' s' → logprob: -7.630823135375977
    4. 'i' → logprob: -8.130823135375977
    5. ' ' → logprob: -8.130823135375977
    6. ' 
' → logprob: -8.130823135375977
    7. '
' → logprob: -8.255823135375977
    8. '```' → logprob: -8.755823135375977
    9. '       ' → logprob: -8.880823135375977
    10. '            
' → logprob: -9.380823135375977

Token 68: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.0627252608537674
    2. ' s' → logprob: -2.812725305557251
    3. '           ' → logprob: -7.812725067138672
    4. '               ' → logprob: -8.062725067138672
    5. '<|end|>' → logprob: -10.937725067138672
    6. '```' → logprob: -12.187725067138672
    7. ' ' → logprob: -12.687725067138672
    8. '
' → logprob: -12.812725067138672
    9. '       ' → logprob: -12.937725067138672
    10. '   ' → logprob: -13.187725067138672

Token 69: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3137170374393463
    2. '+=' → logprob: -1.313717007637024
    3. ' ^=' → logprob: -8.313716888427734
    4. '=' → logprob: -9.313716888427734
    5. '+' → logprob: -9.563716888427734
    6. ']+=' → logprob: -11.188716888427734
    7. ' =' → logprob: -11.688716888427734
    8. ' +' → logprob: -12.188716888427734
    9. '^' → logprob: -12.313716888427734
    10. '	' → logprob: -12.313716888427734

Token 70: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014164921827614307
    2. ' self' → logprob: -4.264164924621582
    3. '           ' → logprob: -13.764164924621582
    4. '[self' → logprob: -16.139163970947266
    5. '(self' → logprob: -16.139163970947266
    6. '	self' → logprob: -16.139163970947266
    7. '```' → logprob: -17.889163970947266
    8. '       ' → logprob: -18.264163970947266
    9. '=self' → logprob: -18.764163970947266
    10. '               ' → logprob: -18.764163970947266

Token 71: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.00023643692838959396
    2. '.' → logprob: -8.375236511230469
    3. 'tree' → logprob: -13.000236511230469
    4. ' .' → logprob: -13.125236511230469
    5. '	tree' → logprob: -14.000236511230469
    6. '.t' → logprob: -14.750236511230469
    7. '.Tree' → logprob: -16.87523651123047
    8. '.table' → logprob: -17.12523651123047
    9. '-tree' → logprob: -17.37523651123047
    10. '>.' → logprob: -17.62523651123047

Token 72: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.250001907348633
    3. 'i' → logprob: -17.750001907348633
    4. '```' → logprob: -18.750001907348633
    5. ' [' → logprob: -19.000001907348633
    6. '[I' → logprob: -19.625001907348633
    7. '   ' → logprob: -20.625001907348633
    8. '[
' → logprob: -20.750001907348633
    9. '[index' → logprob: -20.750001907348633
    10. '[j' → logprob: -20.875001907348633

Token 73: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2627504765987396
    2. ']' → logprob: -1.512750506401062
    3. '])' → logprob: -5.762750625610352
    4. ')
' → logprob: -6.387750625610352
    5. ' )' → logprob: -6.512750625610352
    6. ']%' → logprob: -6.637750625610352
    7. ' ]' → logprob: -6.887750625610352
    8. ')%' → logprob: -7.012750625610352
    9. '<|end|>' → logprob: -8.012750625610352
    10. ']
' → logprob: -8.262750625610352

Token 74: '           ' (ID: 352)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.539085328578949
    2. ' %' → logprob: -0.914085328578949
    3. '
' → logprob: -5.164085388183594
    4. '%i' → logprob: -5.164085388183594
    5. '           ' → logprob: -6.164085388183594
    6. '       ' → logprob: -7.414085388183594
    7. ' %=' → logprob: -8.289085388183594
    8. '%n' → logprob: -8.414085388183594
    9. '[i' → logprob: -8.539085388183594
    10. ' &' → logprob: -8.664085388183594

Token 75: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5936324596405029
    2. 'i' (adapté à ' i') → logprob: -0.8436324596405029
    3. '           ' → logprob: -4.843632698059082
    4. ' s' → logprob: -4.843632698059082
    5. 's' → logprob: -6.343632698059082
    6. '            ' → logprob: -11.968632698059082
    7. ' ' → logprob: -12.093632698059082
    8. ' if' → logprob: -12.593632698059082
    9. '   ' → logprob: -12.968632698059082
    10. '       ' → logprob: -13.093632698059082

Token 76: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.636505663394928
    2. '&' → logprob: -1.5115056037902832
    3. '-=' → logprob: -2.511505603790283
    4. ' &' → logprob: -2.511505603790283
    5. ' &=' → logprob: -2.886505603790283
    6. ' >>=' → logprob: -5.011505603790283
    7. ' ' → logprob: -5.136505603790283
    8. '=' → logprob: -5.386505603790283
    9. '-' → logprob: -5.886505603790283
    10. '>' → logprob: -6.011505603790283

Token 77: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001508674118667841
    2. ' i' → logprob: -6.501508712768555
    3. '	i' → logprob: -12.376508712768555
    4. '(i' → logprob: -13.876508712768555
    5. ' ' → logprob: -14.626508712768555
    6. ' (' → logprob: -15.626508712768555
    7. '  ' → logprob: -15.876508712768555
    8. '   ' → logprob: -16.251508712768555
    9. '(' → logprob: -16.376508712768555
    10. '1' → logprob: -16.501508712768555

Token 78: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.12721282243728638
    2. ' &' → logprob: -2.1272127628326416
    3. '&i' → logprob: -8.377212524414062
    4. '&t' → logprob: -10.752212524414062
    5. '&amp' → logprob: -11.002212524414062
    6. '&r' → logprob: -12.877212524414062
    7. '&T' → logprob: -13.002212524414062
    8. '&nbsp' → logprob: -13.002212524414062
    9. '&A' → logprob: -13.377212524414062
    10. '&B' → logprob: -13.627212524414062

Token 79: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.45900335907936096
    2. '-' → logprob: -1.3340033292770386
    3. ' -' → logprob: -2.709003448486328
    4. 'i' → logprob: -3.584003448486328
    5. ' i' → logprob: -4.584003448486328
    6. '	i' → logprob: -9.959003448486328
    7. '(-' → logprob: -11.334003448486328
    8. ' ' → logprob: -11.709003448486328
    9. '(i' → logprob: -12.084003448486328
    10. '```' → logprob: -12.584003448486328

Token 80: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.318681188422488e-05
    2. ' i' → logprob: -11.25001335144043
    3. '	i' → logprob: -15.87501335144043
    4. ' ' → logprob: -17.75001335144043
    5. '_i' → logprob: -18.50001335144043
    6. ''i' → logprob: -18.75001335144043
    7. 'I' → logprob: -19.25001335144043
    8. '   ' → logprob: -19.37501335144043
    9. '-i' → logprob: -19.37501335144043
    10. '```' → logprob: -19.87501335144043

Token 81: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00017994173686020076
    2. ' i' → logprob: -8.6251802444458
    3. '	i' → logprob: -15.3751802444458
    4. '<|end|>' → logprob: -17.000179290771484
    5. '```' → logprob: -17.125179290771484
    6. ' ' → logprob: -17.250179290771484
    7. '(i' → logprob: -18.625179290771484
    8. ''i' → logprob: -18.875179290771484
    9. '1' → logprob: -19.125179290771484
    10. '`' → logprob: -19.250179290771484

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2239025831222534
    2. '\n' → logprob: -1.2239025831222534
    3. '
' → logprob: -2.848902702331543
    4. '```' → logprob: -2.848902702331543
    5. 'i' → logprob: -2.973902702331543
    6. '1' → logprob: -3.223902702331543
    7. '   ' → logprob: -3.348902702331543
    8. '        
' → logprob: -3.848902702331543
    9. ''\' → logprob: -3.848902702331543
    10. ' ' → logprob: -4.223902702331543

Token 83: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1998506784439087
    2. '   ' → logprob: -2.449850559234619
    3. '\n' → logprob: -3.324850559234619
    4. 'return' (adapté à ' return') → logprob: -3.574850559234619
    5. ' ' → logprob: -5.199850559234619
    6. '        
' → logprob: -5.449850559234619
    7. '           ' → logprob: -5.699850559234619
    8. '```' → logprob: -5.824850559234619
    9. '
' → logprob: -5.949850559234619
    10. '    
' → logprob: -6.199850559234619

Token 84: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12692873179912567
    2. ' s' → logprob: -2.1269288063049316
    3. ' ' → logprob: -14.876928329467773
    4. '	s' → logprob: -16.501928329467773
    5. ' ' → logprob: -16.751928329467773
    6. '(s' → logprob: -17.001928329467773
    7. '`s' → logprob: -17.126928329467773
    8. ''s' → logprob: -17.126928329467773
    9. 'int' → logprob: -18.001928329467773
    10. '  ' → logprob: -18.251928329467773

Token 85: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19494421780109406
    2. '   ' → logprob: -1.9449442625045776
    3. '

' → logprob: -3.694944143295288
    4. '    
' → logprob: -5.944944381713867
    5. '<|end|>' → logprob: -6.194944381713867
    6. '  
' → logprob: -6.944944381713867
    7. '```' → logprob: -7.319944381713867
    8. '   
' → logprob: -7.319944381713867
    9. ' 
' → logprob: -7.819944381713867
    10. ' ' → logprob: -7.819944381713867

Token 86: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5629085898399353
    2. '   ' → logprob: -0.9379085898399353
    3. '    
' → logprob: -3.68790864944458
    4. ' 
' → logprob: -4.68790864944458
    5. '   
' → logprob: -6.68790864944458
    6. '  
' → logprob: -6.68790864944458
    7. '<|end|>' → logprob: -7.18790864944458
    8. '

' → logprob: -7.56290864944458
    9. '```' → logprob: -8.062908172607422
    10. '        
' → logprob: -8.437908172607422

Token 87: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004056552425026894
    2. ' def' → logprob: -5.629056453704834
    3. '   ' → logprob: -7.754056453704834
    4. ' ' → logprob: -10.754056930541992
    5. '    
' → logprob: -13.129056930541992
    6. ' 
' → logprob: -13.879056930541992
    7. '
' → logprob: -14.129056930541992
    8. '```' → logprob: -14.504056930541992
    9. '	def' → logprob: -14.629056930541992
    10. '  ' → logprob: -14.629056930541992

Token 88: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.008385499007999897
    2. ' update' → logprob: -5.00838565826416
    3. 'add' → logprob: -6.50838565826416
    4. 'update' → logprob: -9.00838565826416
    5. ' ' → logprob: -10.13338565826416
    6. '_add' → logprob: -12.50838565826416
    7. 'a' → logprob: -13.13338565826416
    8. '.add' → logprob: -13.25838565826416
    9. ' a' → logprob: -13.50838565826416
    10. ' def' → logprob: -14.25838565826416

Token 89: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.38721758127212524
    2. '(' → logprob: -1.1372175216674805
    3. ' (' → logprob: -8.38721752166748
    4. '(s' → logprob: -9.51221752166748
    5. '(
' → logprob: -10.63721752166748
    6. '(i' → logprob: -11.01221752166748
    7. ' ' → logprob: -13.76221752166748
    8. '   ' → logprob: -14.13721752166748
    9. 'self' → logprob: -14.63721752166748
    10. '(sel' → logprob: -14.63721752166748

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0358908548951149
    2. ' ,' → logprob: -3.910890817642212
    3. '(' → logprob: -4.910891056060791
    4. ',i' → logprob: -6.160891056060791
    5. '(self' → logprob: -6.160891056060791
    6. '(i' → logprob: -6.410891056060791
    7. ' (' → logprob: -6.535891056060791
    8. '<|end|>' → logprob: -9.285890579223633
    9. ',self' → logprob: -9.285890579223633
    10. '       ' → logprob: -9.660890579223633

Token 91: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47455230355262756
    2. ' i' → logprob: -0.9745522737503052
    3. ' ' → logprob: -8.599552154541016
    4. '<|end|>' → logprob: -8.974552154541016
    5. 'self' → logprob: -9.349552154541016
    6. '   ' → logprob: -10.474552154541016
    7. ' self' → logprob: -10.474552154541016
    8. 'index' → logprob: -11.974552154541016
    9. ')' → logprob: -12.974552154541016
    10. '       ' → logprob: -13.099552154541016

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037490393151529133
    2. ' ,' → logprob: -8.125374794006348
    3. ',i' → logprob: -9.500374794006348
    4. ',
' → logprob: -14.375374794006348
    5. ',value' → logprob: -14.375374794006348
    6. ',self' → logprob: -14.500374794006348
    7. ',n' → logprob: -14.875374794006348
    8. ',int' → logprob: -15.000374794006348
    9. ',b' → logprob: -15.375374794006348
    10. '+,' → logprob: -15.750374794006348

Token 93: ' x' (ID: 1215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25510114431381226
    2. 'v' → logprob: -1.755101203918457
    3. 'x' → logprob: -3.130101203918457
    4. ' ' → logprob: -6.005101203918457
    5. 'delta' → logprob: -6.130101203918457
    6. ' v' → logprob: -6.505101203918457
    7. 'value' → logprob: -7.005101203918457
    8. 'val' → logprob: -7.130101203918457
    9. ' x' → logprob: -7.755101203918457
    10. 'd' → logprob: -9.130101203918457

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010625827126204967
    2. '):
' → logprob: -6.876062393188477
    3. ' ):' → logprob: -11.001062393188477
    4. ')' → logprob: -11.501062393188477
    5. '):
' → logprob: -13.251062393188477
    6. ':' → logprob: -13.876062393188477
    7. '   ' → logprob: -16.376062393188477
    8. '):

' → logprob: -16.501062393188477
    9. ' ' → logprob: -17.251062393188477
    10. '=' → logprob: -17.876062393188477

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018317768117412925
    2. '<|end|>' → logprob: -6.626832008361816
    3. '   ' → logprob: -9.001832008361816
    4. ' i' → logprob: -9.501832008361816
    5. ' while' → logprob: -9.626832008361816
    6. ' 
' → logprob: -9.751832008361816
    7. '        
' → logprob: -10.001832008361816
    8. ' ' → logprob: -10.251832008361816
    9. '
' → logprob: -10.876832008361816
    10. '      ' → logprob: -11.126832008361816

Token 96: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4203227758407593
    2. 'while' (adapté à ' while') → logprob: -1.1703227758407593
    3. '       ' → logprob: -3.420322895050049
    4. ' i' → logprob: -9.29532241821289
    5. '   ' → logprob: -9.92032241821289
    6. '	while' → logprob: -10.54532241821289
    7. '```' → logprob: -11.29532241821289
    8. 'i' → logprob: -11.54532241821289
    9. ' ' → logprob: -13.04532241821289
    10. '        ' → logprob: -13.54532241821289

Token 97: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2014182209968567
    2. 'i' → logprob: -1.701418161392212
    3. '   ' → logprob: -12.451417922973633
    4. '	i' → logprob: -14.451417922973633
    5. '(i' → logprob: -15.826417922973633
    6. ' ' → logprob: -16.201417922973633
    7. '  ' → logprob: -16.576417922973633
    8. '```' → logprob: -17.326417922973633
    9. '    ' → logprob: -17.576417922973633
    10. 'self' → logprob: -17.826417922973633

Token 98: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.018150413408875465
    2. '<=' → logprob: -4.018150329589844
    3. ' <' → logprob: -15.643150329589844
    4. ' ≤' → logprob: -16.018150329589844
    5. ' ' → logprob: -17.143150329589844
    6. '   ' → logprob: -17.393150329589844
    7. ' +=' → logprob: -17.643150329589844
    8. ')<=' → logprob: -18.518150329589844
    9. '<' → logprob: -18.768150329589844
    10. '≤' → logprob: -19.018150329589844

Token 99: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16022585332393646
    2. ' self' → logprob: -1.9102258682250977
    3. ' ' → logprob: -14.535225868225098
    4. '	self' → logprob: -14.535225868225098
    5. '   ' → logprob: -15.410225868225098
    6. '```' → logprob: -15.910225868225098
    7. '(self' → logprob: -16.28522491455078
    8. '
' → logprob: -16.41022491455078
    9. '=self' → logprob: -17.53522491455078
    10. 'elf' → logprob: -17.53522491455078

Token 100: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -8.061054359131958e-06
    2. 'size' → logprob: -11.750007629394531
    3. '.' → logprob: -16.12500762939453
    4. ' size' → logprob: -17.12500762939453
    5. '	size' → logprob: -18.00000762939453
    6. '<size' → logprob: -18.50000762939453
    7. ' .' → logprob: -18.75000762939453
    8. ':size' → logprob: -19.87500762939453
    9. '.n' → logprob: -20.12500762939453
    10. ',size' → logprob: -20.25000762939453

Token 101: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6330128312110901
    2. ':' → logprob: -0.7580128312110901
    3. '):
' → logprob: -8.758012771606445
    4. '       ' → logprob: -9.008012771606445
    5. '           ' → logprob: -9.383012771606445
    6. ' :
' → logprob: -11.133012771606445
    7. '   ' → logprob: -11.258012771606445
    8. ':
' → logprob: -12.008012771606445
    9. '):' → logprob: -12.258012771606445
    10. ',' → logprob: -12.383012771606445

Token 102: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010597254149615765
    2. ' self' → logprob: -7.626059532165527
    3. 'self' → logprob: -8.376059532165527
    4. '```' → logprob: -8.376059532165527
    5. '   ' → logprob: -10.001059532165527
    6. '
' → logprob: -11.126059532165527
    7. '       ' → logprob: -11.251059532165527
    8. '               ' → logprob: -11.626059532165527
    9. '    
' → logprob: -12.626059532165527
    10. '<|end|>' → logprob: -12.751059532165527

Token 103: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.695493221282959
    2. 'self' (adapté à ' self') → logprob: -0.695493221282959
    3. '           ' → logprob: -6.070493221282959
    4. '               ' → logprob: -11.445493698120117
    5. '	self' → logprob: -11.820493698120117
    6. '   ' → logprob: -11.945493698120117
    7. '       ' → logprob: -12.945493698120117
    8. '(self' → logprob: -13.070493698120117
    9. ' ' → logprob: -13.570493698120117
    10. '```' → logprob: -14.195493698120117

Token 104: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.0012665401445701718
    2. '.' → logprob: -6.7512664794921875
    3. ' .' → logprob: -9.876266479492188
    4. '`.' → logprob: -11.001266479492188
    5. '>.' → logprob: -12.251266479492188
    6. '	tree' → logprob: -12.376266479492188
    7. '].' → logprob: -13.251266479492188
    8. 'tree' → logprob: -13.251266479492188
    9. '   ' → logprob: -13.376266479492188
    10. '```' → logprob: -13.376266479492188

Token 105: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7954958821064793e-05
    2. '[' → logprob: -11.250018119812012
    3. '[I' → logprob: -12.250018119812012
    4. ' [' → logprob: -15.750018119812012
    5. '```' → logprob: -17.750017166137695
    6. '[idx' → logprob: -18.125017166137695
    7. '[int' → logprob: -18.750017166137695
    8. '[index' → logprob: -18.750017166137695
    9. '[ii' → logprob: -19.375017166137695
    10. '[j' → logprob: -19.500017166137695

Token 106: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12499845772981644
    2. '+=' → logprob: -2.2499985694885254
    3. ']' → logprob: -5.124998569488525
    4. ']+=' → logprob: -5.124998569488525
    5. '+' → logprob: -9.249998092651367
    6. '=' → logprob: -10.124998092651367
    7. ' =' → logprob: -10.874998092651367
    8. ')' → logprob: -10.874998092651367
    9. ' ]' → logprob: -10.999998092651367
    10. ' ' → logprob: -12.249998092651367

Token 107: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6821211576461792
    2. ' +=' → logprob: -0.9321211576461792
    3. ' =' → logprob: -2.6821212768554688
    4. '=' → logprob: -3.4321212768554688
    5. '%=' → logprob: -13.682121276855469
    6. '+=(' → logprob: -14.682121276855469
    7. ']+=' → logprob: -14.807121276855469
    8. ' ' → logprob: -15.432121276855469
    9. ' ^=' → logprob: -16.05712127685547
    10. '=(' → logprob: -16.05712127685547

Token 108: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02324547804892063
    2. ' x' → logprob: -3.7732455730438232
    3. '	x' → logprob: -19.523244857788086
    4. '(x' → logprob: -22.898244857788086
    5. ')x' → logprob: -23.148244857788086
    6. '$x' → logprob: -23.773244857788086
    7. '{x' → logprob: -24.648244857788086
    8. '%x' → logprob: -25.023244857788086
    9. '   ' → logprob: -25.148244857788086
    10. '           ' → logprob: -25.523244857788086

Token 109: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04875462129712105
    2. '%' → logprob: -3.5487546920776367
    3. ' %' → logprob: -4.173754692077637
    4. '
' → logprob: -5.798754692077637
    5. '%i' → logprob: -9.173754692077637
    6. '   ' → logprob: -9.298754692077637
    7. '       ' → logprob: -9.423754692077637
    8. '               ' → logprob: -10.298754692077637
    9. ' i' → logprob: -11.173754692077637
    10. ' %=' → logprob: -11.548754692077637

Token 110: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001197370933368802
    2. ' i' → logprob: -7.376197338104248
    3. '%' → logprob: -8.126197814941406
    4. ' %' → logprob: -9.251197814941406
    5. 'i' → logprob: -9.876197814941406
    6. '[i' → logprob: -10.376197814941406
    7. 'mod' → logprob: -11.126197814941406
    8. '%i' → logprob: -11.126197814941406
    9. 'x' → logprob: -11.376197814941406
    10. '   ' → logprob: -11.876197814941406

Token 111: ' i' (ID: 575)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7149065136909485
    2. 'self' → logprob: -0.7149065136909485
    3. '           ' → logprob: -3.8399064540863037
    4. '   ' → logprob: -10.714906692504883
    5. ' ' → logprob: -13.089906692504883
    6. '	self' → logprob: -13.339906692504883
    7. '            ' → logprob: -14.214906692504883
    8. '  ' → logprob: -14.714906692504883
    9. ' i' → logprob: -14.839906692504883
    10. 'i' (adapté à ' i') → logprob: -15.339906692504883

Token 112: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008686194196343422
    2. '+=' → logprob: -4.758686065673828
    3. ' <<=' → logprob: -9.758686065673828
    4. ' |=' → logprob: -11.508686065673828
    5. ' &=' → logprob: -13.383686065673828
    6. ' ' → logprob: -13.883686065673828
    7. ' &' → logprob: -14.258686065673828
    8. ']+=' → logprob: -15.883686065673828
    9. '&' → logprob: -16.008686065673828
    10. '    ' → logprob: -16.633686065673828

Token 113: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.47408992052078247
    2. 'i' → logprob: -0.9740899205207825
    3. '(i' → logprob: -12.474089622497559
    4. '	i' → logprob: -12.724089622497559
    5. ' (' → logprob: -13.349089622497559
    6. '   ' → logprob: -13.599089622497559
    7. ' ' → logprob: -13.724089622497559
    8. '  ' → logprob: -13.724089622497559
    9. '(' → logprob: -15.349089622497559
    10. '```' → logprob: -15.349089622497559

Token 114: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.5034803152084351
    2. '&i' → logprob: -1.503480315208435
    3. '&' → logprob: -1.753480315208435
    4. '&amp' → logprob: -11.003479957580566
    5. '&I' → logprob: -11.503479957580566
    6. '&id' → logprob: -11.503479957580566
    7. '&r' → logprob: -12.128479957580566
    8. '&nbsp' → logprob: -12.753479957580566
    9. '&t' → logprob: -13.503479957580566
    10. ' ' → logprob: -13.628479957580566

Token 115: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.24986086785793304
    2. ' -' → logprob: -1.6248608827590942
    3. '-' → logprob: -3.7498607635498047
    4. ' i' → logprob: -8.124860763549805
    5. 'i' → logprob: -8.124860763549805
    6. '(-' → logprob: -11.624860763549805
    7. ' ' → logprob: -11.749860763549805
    8. '	i' → logprob: -12.124860763549805
    9. '   ' → logprob: -12.374860763549805
    10. '	' → logprob: -12.999860763549805

Token 116: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006272526225075126
    2. ' i' → logprob: -7.375627040863037
    3. '-i' → logprob: -15.000627517700195
    4. '	i' → logprob: -15.375627517700195
    5. ' -' → logprob: -17.500627517700195
    6. '-' → logprob: -17.625627517700195
    7. ' ' → logprob: -18.125627517700195
    8. '_i' → logprob: -18.500627517700195
    9. '<|end|>' → logprob: -19.125627517700195
    10. ''i' → logprob: -19.250627517700195

Token 117: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: 'n' (ID: 77)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39196109771728516
    2. '
' → logprob: -1.6419610977172852
    3. '<|end|>' → logprob: -3.016961097717285
    4. ' ' → logprob: -3.641961097717285
    5. 'def' → logprob: -4.266961097717285
    6. '```' → logprob: -4.391961097717285
    7. 'class' → logprob: -4.641961097717285
    8. '       ' → logprob: -4.766961097717285
    9. ')' → logprob: -6.516961097717285
    10. 'return' → logprob: -6.516961097717285

Token 119: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6185545325279236
    2. '=' → logprob: -1.2435545921325684
    3. ',' → logprob: -1.8685545921325684
    4. ' ' → logprob: -4.243554592132568
    5. ' ,' → logprob: -6.493554592132568
    6. ' n' → logprob: -7.743554592132568
    7. ')' → logprob: -7.993554592132568
    8. ':' → logprob: -8.24355411529541
    9. '+' → logprob: -8.74355411529541
    10. '>' → logprob: -8.74355411529541

Token 120: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9431920051574707
    2. 'a' → logprob: -1.1931920051574707
    3. 'q' → logprob: -2.4431920051574707
    4. ' k' → logprob: -2.5681920051574707
    5. 'm' → logprob: -2.9431920051574707
    6. ' a' → logprob: -3.5681920051574707
    7. ' q' → logprob: -3.9431920051574707
    8. ' m' → logprob: -4.568192005157471
    9. 'arr' → logprob: -5.193192005157471
    10. 'A' → logprob: -5.443192005157471

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14280836284160614
    2. '=' → logprob: -2.017808437347412
    3. ',' → logprob: -9.017807960510254
    4. ' ' → logprob: -11.642807960510254
    5. ' ,' → logprob: -13.642807960510254
    6. ' =
' → logprob: -14.017807960510254
    7. '=input' → logprob: -14.267807960510254
    8. '=int' → logprob: -16.39280891418457
    9. ' =
' → logprob: -16.76780891418457
    10. '  ' → logprob: -16.76780891418457

Token 122: ' [' (ID: 723)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.474103718996048
    2. 'map' → logprob: -0.9741036891937256
    3. ' ' → logprob: -10.974103927612305
    4. ' list' → logprob: -12.724103927612305
    5. 'list' → logprob: -12.974103927612305
    6. 'int' → logprob: -13.599103927612305
    7. '0' → logprob: -13.724103927612305
    8. ' int' → logprob: -14.349103927612305
    9. '	map' → logprob: -14.349103927612305
    10. 'input' → logprob: -15.724103927612305

Token 123: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.1318875446449965e-05
    2. ' int' → logprob: -10.125041007995605
    3. '10' → logprob: -14.375041007995605
    4. 'map' → logprob: -15.000041007995605
    5. ' ' → logprob: -16.125041961669922
    6. '1' → logprob: -16.625041961669922
    7. '5' → logprob: -16.625041961669922
    8. '0' → logprob: -16.875041961669922
    9. ']int' → logprob: -18.000041961669922
    10. '100' → logprob: -18.125041961669922

Token 124: '(item' (ID: 10016)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.007125350181013346
    2. '()]' → logprob: -5.882125377655029
    3. '(i' → logprob: -6.132125377655029
    4. '(' → logprob: -7.007125377655029
    5. '(s' → logprob: -7.007125377655029
    6. ']' → logprob: -9.007124900817871
    7. '(_)' → logprob: -9.757124900817871
    8. '()' → logprob: -9.882124900817871
    9. '(input' → logprob: -10.132124900817871
    10. '(_' → logprob: -11.382124900817871

Token 125: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39869487285614014
    2. '(x' → logprob: -1.5236948728561401
    3. '()' → logprob: -2.7736949920654297
    4. '(i' → logprob: -3.8986949920654297
    5. '(s' → logprob: -4.77369499206543
    6. 'for' → logprob: -5.39869499206543
    7. ' for' → logprob: -5.39869499206543
    8. '(input' → logprob: -5.77369499206543
    9. '(line' → logprob: -6.14869499206543
    10. '(_)' → logprob: -6.64869499206543

Token 126: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36359304189682007
    2. 'for' → logprob: -1.2385931015014648
    3. '(input' → logprob: -4.738593101501465
    4. 'input' → logprob: -6.113593101501465
    5. ' input' → logprob: -6.488593101501465
    6. ')' → logprob: -6.738593101501465
    7. '()' → logprob: -8.238593101501465
    8. '(' → logprob: -8.238593101501465
    9. ' (' → logprob: -8.238593101501465
    10. ']' → logprob: -8.738593101501465

Token 127: ' item' (ID: 2169)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.001502598519437015
    2. 'input' → logprob: -6.501502513885498
    3. ' open' → logprob: -16.376502990722656
    4. '(input' → logprob: -16.501502990722656
    5. ' in' → logprob: -16.626502990722656
    6. '=input' → logprob: -16.626502990722656
    7. ' range' → logprob: -17.876502990722656
    8. ' ' → logprob: -18.626502990722656
    9. '_input' → logprob: -18.626502990722656
    10. '	input' → logprob: -19.001502990722656

Token 128: ' in' (ID: 306)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7674305438995361
    2. ' input' → logprob: -1.1424305438995361
    3. ' in' → logprob: -1.6424305438995361
    4. '(input' → logprob: -3.892430543899536
    5. '=input' → logprob: -6.642430305480957
    6. 'import' → logprob: -7.642430305480957
    7. 'in' → logprob: -7.892430305480957
    8. '(' → logprob: -8.517430305480957
    9. ' ' → logprob: -9.392430305480957
    10. '.input' → logprob: -9.642430305480957

Token 129: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.061968132853507996
    2. ' input' → logprob: -2.8119680881500244
    3. '(input' → logprob: -15.561967849731445
    4. '```' → logprob: -16.186967849731445
    5. '=input' → logprob: -16.811967849731445
    6. '
' → logprob: -16.936967849731445
    7. ' ' → logprob: -16.936967849731445
    8. 'open' → logprob: -17.186967849731445
    9. '   ' → logprob: -17.186967849731445
    10. '<input' → logprob: -17.561967849731445

Token 130: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007363698096014559
    2. '()' → logprob: -7.500736236572266
    3. '()]' → logprob: -8.625736236572266
    4. '()].' → logprob: -13.000736236572266
    5. ' ().' → logprob: -13.875736236572266
    6. '(' → logprob: -14.500736236572266
    7. '())' → logprob: -15.875736236572266
    8. '()[' → logprob: -17.125736236572266
    9. ' ()' → logprob: -17.250736236572266
    10. '()][' → logprob: -17.250736236572266

Token 131: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008624974638223648
    2. 'strip' → logprob: -4.758625030517578
    3. 'rstrip' → logprob: -11.508625030517578
    4. ' split' → logprob: -14.758625030517578
    5. '(split' → logprob: -16.758625030517578
    6. ' strip' → logprob: -18.883625030517578
    7. 'spl' → logprob: -19.133625030517578
    8. '.split' → logprob: -19.883625030517578
    9. 'read' → logprob: -20.258625030517578
    10. 'replace' → logprob: -21.008625030517578

Token 132: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0016832745168358088
    2. '()' → logprob: -6.751683235168457
    3. '('' → logprob: -8.251683235168457
    4. '(' → logprob: -8.751683235168457
    5. '())' → logprob: -9.876683235168457
    6. ']' → logprob: -10.626683235168457
    7. ')]' → logprob: -11.376683235168457
    8. '("' → logprob: -12.501683235168457
    9. '()]
' → logprob: -13.626683235168457
    10. '(',' → logprob: -14.251683235168457

Token 133: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.49890923500061035
    2. 'arr' → logprob: -0.9989092350006104
    3. ' a' → logprob: -4.998908996582031
    4. 'A' → logprob: -5.123908996582031
    5. 'data' → logprob: -5.498908996582031
    6. ' arr' → logprob: -5.998908996582031
    7. 'array' → logprob: -6.748908996582031
    8. 'lst' → logprob: -7.123908996582031
    9. ' A' → logprob: -7.748908996582031
    10. 'v' → logprob: -7.748908996582031

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009845096617937088
    2. '=' → logprob: -4.63484525680542
    3. 's' → logprob: -10.134844779968262
    4. ',' → logprob: -11.509844779968262
    5. ' =[' → logprob: -11.509844779968262
    6. ' ' → logprob: -11.634844779968262
    7. '[' → logprob: -12.259844779968262
    8. '_' → logprob: -12.759844779968262
    9. '[]' → logprob: -13.134844779968262
    10. '.' → logprob: -13.134844779968262

Token 135: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.40705880522727966
    2. '[' → logprob: -1.782058835029602
    3. '[int' → logprob: -2.0320587158203125
    4. '[list' → logprob: -3.5320587158203125
    5. '[input' → logprob: -5.5320587158203125
    6. ' list' → logprob: -7.4070587158203125
    7. '[len' → logprob: -8.157058715820312
    8. '[i' → logprob: -8.532058715820312
    9. 'sorted' → logprob: -8.782058715820312
    10. '[str' → logprob: -9.032058715820312

Token 136: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002114927861839533
    2. '0' → logprob: -6.252114772796631
    3. ']int' → logprob: -9.252115249633789
    4. '*' → logprob: -10.252115249633789
    5. ']' → logprob: -10.752115249633789
    6. '
' → logprob: -11.127115249633789
    7. '[int' → logprob: -12.002115249633789
    8. ' int' → logprob: -12.252115249633789
    9. '(int' → logprob: -13.127115249633789
    10. '1' → logprob: -13.377115249633789

Token 137: '(item' (ID: 10016)
  Prédit: '(item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.34118250012397766
    2. '(x' → logprob: -1.3411824703216553
    3. '(' → logprob: -3.7161824703216553
    4. '(i' → logprob: -5.841182708740234
    5. '()]' → logprob: -9.091182708740234
    6. '(
' → logprob: -9.716182708740234
    7. '(input' → logprob: -10.591182708740234
    8. '()' → logprob: -10.716182708740234
    9. '(_)' → logprob: -10.841182708740234
    10. ' (' → logprob: -11.091182708740234

Token 138: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2791214883327484
    2. '()' → logprob: -1.5291215181350708
    3. 'for' → logprob: -4.279121398925781
    4. ' for' → logprob: -4.404121398925781
    5. '(' → logprob: -7.779121398925781
    6. '(input' → logprob: -9.154121398925781
    7. '(i' → logprob: -9.904121398925781
    8. ' )' → logprob: -10.029121398925781
    9. ' ' → logprob: -10.779121398925781
    10. ' ()' → logprob: -10.779121398925781

Token 139: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31763169169425964
    2. 'for' → logprob: -1.317631721496582
    3. '()' → logprob: -5.692631721496582
    4. ')' → logprob: -7.317631721496582
    5. ' ' → logprob: -8.692631721496582
    6. '(' → logprob: -9.692631721496582
    7. '  ' → logprob: -10.567631721496582
    8. '   ' → logprob: -10.567631721496582
    9. '	for' → logprob: -11.192631721496582
    10. ']' → logprob: -12.067631721496582

Token 140: ' item' (ID: 2169)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.00033581978641450405
    2. 'input' → logprob: -8.000335693359375
    3. '=input' → logprob: -15.875335693359375
    4. ' ' → logprob: -16.125335693359375
    5. '_input' → logprob: -17.375335693359375
    6. '(input' → logprob: -17.500335693359375
    7. ' ' → logprob: -17.625335693359375
    8. '	input' → logprob: -18.250335693359375
    9. ' in' → logprob: -19.500335693359375
    10. ',input' → logprob: -19.500335693359375

Token 141: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.005181935615837574
    2. 'input' → logprob: -5.380181789398193
    3. ' in' → logprob: -7.880181789398193
    4. '(input' → logprob: -8.880182266235352
    5. '=input' → logprob: -10.380182266235352
    6. '_input' → logprob: -13.005182266235352
    7. ' range' → logprob: -13.130182266235352
    8. ' ' → logprob: -13.255182266235352
    9. ',input' → logprob: -13.255182266235352
    10. 'in' → logprob: -13.380182266235352

Token 142: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25192946195602417
    2. ' input' → logprob: -1.501929521560669
    3. '(input' → logprob: -16.001930236816406
    4. ' ' → logprob: -16.376930236816406
    5. '	input' → logprob: -17.126930236816406
    6. 'range' → logprob: -17.126930236816406
    7. '
' → logprob: -17.751930236816406
    8. 'import' → logprob: -17.876930236816406
    9. '_input' → logprob: -17.876930236816406
    10. 'output' → logprob: -18.251930236816406

Token 143: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00026383911608718336
    2. '()' → logprob: -8.250264167785645
    3. '()]' → logprob: -13.750264167785645
    4. ' ().' → logprob: -13.875264167785645
    5. '()].' → logprob: -14.750264167785645
    6. '()
' → logprob: -17.125263214111328
    7. '().'' → logprob: -18.125263214111328
    8. ' ()' → logprob: -18.125263214111328
    9. '(' → logprob: -19.125263214111328
    10. '().__' → logprob: -19.250263214111328

Token 144: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.620622712536715e-05
    2. 'strip' → logprob: -10.000045776367188
    3. ' split' → logprob: -14.500045776367188
    4. 'rstrip' → logprob: -15.500045776367188
    5. '(split' → logprob: -17.250045776367188
    6. 'spl' → logprob: -18.625045776367188
    7. 's' → logprob: -19.750045776367188
    8. 'replace' → logprob: -20.500045776367188
    9. '```' → logprob: -20.625045776367188
    10. 'plit' → logprob: -20.750045776367188

Token 145: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0002270198310725391
    2. '()' → logprob: -8.500226974487305
    3. '(' → logprob: -10.875226974487305
    4. ']' → logprob: -12.625226974487305
    5. '())' → logprob: -14.500226974487305
    6. '()]
' → logprob: -15.000226974487305
    7. ')]' → logprob: -15.750226974487305
    8. '()][' → logprob: -17.000226974487305
    9. ']()' → logprob: -17.125226974487305
    10. '()],' → logprob: -17.125226974487305

Token 146: 'bit' (ID: 6516)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.26413866877555847
    2. '
' → logprob: -2.389138698577881
    3. 'dp' → logprob: -2.514138698577881
    4. 'sorted' → logprob: -4.014138698577881
    5. ' 
' → logprob: -4.639138698577881
    6. 'b' → logprob: -4.764138698577881
    7. '#' → logprob: -5.264138698577881
    8. 'compressed' → logprob: -6.139138698577881
    9. 'result' → logprob: -6.389138698577881
    10. 'c' → logprob: -6.889138698577881

Token 147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0018741434905678034
    2. '=' → logprob: -6.501873970031738
    3. '.' → logprob: -8.251873970031738
    4. '1' → logprob: -9.626873970031738
    5. '_' → logprob: -11.001873970031738
    6. '.add' → logprob: -11.751873970031738
    7. '(' → logprob: -12.126873970031738
    8. ' .' → logprob: -12.251873970031738
    9. 's' → logprob: -12.251873970031738
    10. ' ' → logprob: -13.251873970031738

Token 148: ' Bit' (ID: 9422)
  Prédit: 'Bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bit' → logprob: -0.47438469529151917
    2. ' Bit' → logprob: -0.9743846654891968
    3. '(Bit' → logprob: -8.099384307861328
    4. 'Bi' → logprob: -13.224384307861328
    5. '.Bit' → logprob: -14.724384307861328
    6. 'Bin' → logprob: -15.349384307861328
    7. ' ' → logprob: -15.599384307861328
    8. ' Bi' → logprob: -15.724384307861328
    9. 'Binary' → logprob: -16.099384307861328
    10. 'bit' → logprob: -16.224384307861328

Token 149: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08257359266281128
    2. '(k' → logprob: -2.582573652267456
    3. '(' → logprob: -5.832573413848877
    4. '(len' → logprob: -7.207573413848877
    5. '((' → logprob: -13.082573890686035
    6. '(
' → logprob: -13.957573890686035
    7. '(a' → logprob: -13.957573890686035
    8. 'k' → logprob: -14.832573890686035
    9. '(max' → logprob: -15.082573890686035
    10. ' (' → logprob: -15.207573890686035

Token 150: '201' (ID: 667)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13993193209171295
    2. 'k' → logprob: -2.8899319171905518
    3. 'max' → logprob: -3.2649319171905518
    4. '100' → logprob: -3.7649319171905518
    5. ' n' → logprob: -5.014932155609131
    6. '10' → logprob: -5.764932155609131
    7. ' max' → logprob: -6.014932155609131
    8. '(max' → logprob: -7.764932155609131
    9. 'len' → logprob: -8.139931678771973
    10. '(' → logprob: -8.264931678771973

Token 151: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33344054222106934
    2. '9' → logprob: -1.7084405422210693
    3. '000' → logprob: -2.5834405422210693
    4. '0' → logprob: -3.9584405422210693
    5. '}' → logprob: -5.958440780639648
    6. '8' → logprob: -6.333440780639648
    7. '5' → logprob: -6.458440780639648
    8. '3' → logprob: -8.208440780639648
    9. ')}' → logprob: -8.333440780639648
    10. '800' → logprob: -8.458440780639648

Token 152: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.660315895918757e-05
    2. ')
' → logprob: -10.250076293945312
    3. ' )' → logprob: -10.250076293945312
    4. '0' → logprob: -14.000076293945312
    5. ')

' → logprob: -14.375076293945312
    6. '7' → logprob: -14.500076293945312
    7. '))' → logprob: -14.500076293945312
    8. '3' → logprob: -15.000076293945312
    9. '5' → logprob: -15.000076293945312
    10. '<|end|>' → logprob: -15.125076293945312

Token 153: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.23914463818073273
    2. ' k' → logprob: -2.4891445636749268
    3. '201' → logprob: -2.9891445636749268
    4. ' ' → logprob: -3.7391445636749268
    5. '200' → logprob: -3.9891445636749268
    6. '2' → logprob: -4.364144802093506
    7. 'n' → logprob: -5.114144802093506
    8. '100' → logprob: -5.364144802093506
    9. ' n' → logprob: -5.614144802093506
    10. '202' → logprob: -5.989144802093506

Token 154: '2' (ID: 17)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5334792733192444
    2. '201' → logprob: -1.2834792137145996
    3. '2' → logprob: -2.7834792137145996
    4. 'n' → logprob: -3.5334792137145996
    5. '3' → logprob: -4.1584792137146
    6. '200' → logprob: -4.6584792137146
    7. '10' → logprob: -5.5334792137146
    8. '202' → logprob: -5.5334792137146
    9. '5' → logprob: -5.7834792137146
    10. '20' → logprob: -5.7834792137146

Token 155: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14273065328598022
    2. '+' → logprob: -2.392730712890625
    3. ' )' → logprob: -3.892730712890625
    4. ' +' → logprob: -4.017730712890625
    5. '+)' → logprob: -6.267730712890625
    6. '0' → logprob: -7.267730712890625
    7. '1' → logprob: -7.642730712890625
    8. ')+' → logprob: -10.017730712890625
    9. ' ' → logprob: -10.517730712890625
    10. ')
' → logprob: -10.767730712890625

Token 156: 'ans' (ID: 616)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.184759259223938
    2. 'result' → logprob: -1.684759259223938
    3. 'a' → logprob: -1.809759259223938
    4. '
' → logprob: -2.3097591400146484
    5. 'res' → logprob: -2.5597591400146484
    6. 'for' → logprob: -2.8097591400146484
    7. 'ans' → logprob: -4.184759140014648
    8. 's' → logprob: -4.684759140014648
    9. 'answer' → logprob: -4.809759140014648
    10. 'def' → logprob: -5.059759140014648

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011053952388465405
    2. '=' → logprob: -4.511054039001465
    3. ' ' → logprob: -12.636054039001465
    4. ',' → logprob: -14.011054039001465
    5. ' =
' → logprob: -14.011054039001465
    6. ' +=' → logprob: -14.136054039001465
    7. '_' → logprob: -16.51105308532715
    8. ' =)' → logprob: -16.76105308532715
    9. ' ,' → logprob: -16.88605308532715
    10. 's' → logprob: -17.26105308532715

Token 158: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2820852994918823
    2. ' ' → logprob: -1.4070852994918823
    3. '1' → logprob: -7.032085418701172
    4. ' (' → logprob: -11.782085418701172
    5. '(' → logprob: -12.032085418701172
    6. ' k' → logprob: -12.032085418701172
    7. 'k' → logprob: -12.157085418701172
    8. 'pow' → logprob: -12.532085418701172
    9. ' n' → logprob: -12.657085418701172
    10. ' [' → logprob: -12.719585418701172

Token 159: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016147232381626964
    2. '1' → logprob: -6.626614570617676
    3. ' ' → logprob: -9.126614570617676
    4. '(' → logprob: -9.626614570617676
    5. 'pow' → logprob: -9.876614570617676
    6. 'k' → logprob: -11.376614570617676
    7. 'n' → logprob: -11.376614570617676
    8. '-' → logprob: -11.751614570617676
    9. '[' → logprob: -12.001614570617676
    10. 'len' → logprob: -12.251614570617676

Token 160: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13048823177814484
    2. '
' → logprob: -2.630488157272339
    3. ' for' → logprob: -3.005488157272339
    4. ',' → logprob: -8.630488395690918
    5. ' 
' → logprob: -8.630488395690918
    6. ')' → logprob: -9.505488395690918
    7. '#' → logprob: -10.005488395690918
    8. 'a' → logprob: -10.005488395690918
    9. '' → logprob: -10.380488395690918
    10. '\n' → logprob: -10.630488395690918

Token 161: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005786820314824581
    2. 'a' → logprob: -5.380786895751953
    3. 'sorted' → logprob: -8.630786895751953
    4. 'bit' → logprob: -8.880786895751953
    5. 'left' → logprob: -9.005786895751953
    6. 'l' → logprob: -9.005786895751953
    7. 'dp' → logprob: -9.130786895751953
    8. 'idx' → logprob: -9.505786895751953
    9. 'from' → logprob: -9.755786895751953
    10. ' for' → logprob: -10.130786895751953

Token 162: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4040515124797821
    2. ' x' → logprob: -1.2790515422821045
    3. ' ai' → logprob: -4.029051303863525
    4. ' num' → logprob: -4.529051303863525
    5. ' a' → logprob: -4.654051303863525
    6. ' val' → logprob: -5.154051303863525
    7. ' v' → logprob: -6.279051303863525
    8. ' value' → logprob: -6.279051303863525
    9. ' _' → logprob: -6.404051303863525
    10. 'i' → logprob: -6.404051303863525

Token 163: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018421143293380737
    2. 'in' → logprob: -4.393421173095703
    3. ' ' → logprob: -5.143421173095703
    4. ',' → logprob: -10.518421173095703
    5. ' ,' → logprob: -11.768421173095703
    6. '  ' → logprob: -12.143421173095703
    7. 'range' → logprob: -12.518421173095703
    8. '_' → logprob: -13.268421173095703
    9. ')' → logprob: -13.393421173095703
    10. ' _' → logprob: -13.393421173095703

Token 164: ' p' (ID: 275)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6367371082305908
    2. 'x' → logprob: -1.5117371082305908
    3. ' val' → logprob: -2.261737108230591
    4. ' ai' → logprob: -2.886737108230591
    5. ' v' → logprob: -3.636737108230591
    6. 'val' → logprob: -3.886737108230591
    7. 'v' → logprob: -4.136736869812012
    8. 'ai' → logprob: -4.261736869812012
    9. 'value' → logprob: -5.636736869812012
    10. ' num' → logprob: -6.011736869812012

Token 165: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05078906938433647
    2. 'in' → logprob: -3.0507891178131104
    3. ',' → logprob: -6.675788879394531
    4. ' ' → logprob: -7.050788879394531
    5. ' ,' → logprob: -10.925788879394531
    6. 'r' → logprob: -11.675788879394531
    7. ')' → logprob: -11.800788879394531
    8. 'a' → logprob: -11.925788879394531
    9. 'i' → logprob: -12.425788879394531
    10. '```' → logprob: -12.800788879394531

Token 166: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.0015024791937321424
    2. 'enumer' → logprob: -6.501502513885498
    3. '(en' → logprob: -16.126502990722656
    4. '```' → logprob: -18.376502990722656
    5. '(' → logprob: -18.501502990722656
    6. ' range' → logprob: -18.501502990722656
    7. ' ' → logprob: -18.876502990722656
    8. ' enumer' → logprob: -19.126502990722656
    9. ' en' → logprob: -19.751502990722656
    10. 'Enumer' → logprob: -19.751502990722656

Token 167: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0023548337630927563
    2. '(range' → logprob: -6.377354621887207
    3. '(en' → logprob: -8.377354621887207
    4. '(sorted' → logprob: -8.627354621887207
    5. 'a' → logprob: -9.252354621887207
    6. '(' → logprob: -9.377354621887207
    7. '((' → logprob: -10.752354621887207
    8. 'enumer' → logprob: -11.127354621887207
    9. '([(' → logprob: -11.502354621887207
    10. '(zip' → logprob: -12.752354621887207

Token 168: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018709594383835793
    2. ',' → logprob: -4.018709659576416
    3. ' ):' → logprob: -8.893709182739258
    4. '):
' → logprob: -8.893709182739258
    5. ':' → logprob: -9.143709182739258
    6. ']:' → logprob: -10.393709182739258
    7. ',p' → logprob: -10.393709182739258
    8. ' ,' → logprob: -10.518709182739258
    9. '[' → logprob: -10.643709182739258
    10. '[:' → logprob: -11.018709182739258

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16007928550243378
    2. ':' → logprob: -2.03507924079895
    3. ':
' → logprob: -5.535079479217529
    4. ' for' → logprob: -5.785079479217529
    5. '    
' → logprob: -5.910079479217529
    6. ',' → logprob: -6.285079479217529
    7. ' :' → logprob: -6.910079479217529
    8. ' if' → logprob: -7.160079479217529
    9. ' ' → logprob: -7.410079479217529
    10. '    ' → logprob: -7.410079479217529

Token 170: ' bit' (ID: 3546)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -1.6463078260421753
    2. ' pos' → logprob: -2.146307945251465
    3. 'idx' → logprob: -2.521307945251465
    4. 'pos' → logprob: -2.521307945251465
    5. ' x' → logprob: -3.021307945251465
    6. ' inv' → logprob: -3.021307945251465
    7. ' j' → logprob: -3.146307945251465
    8. ' for' → logprob: -3.271307945251465
    9. 'x' → logprob: -3.396307945251465
    10. 'j' → logprob: -3.646307945251465

Token 171: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.012515183538198471
    2. '.' → logprob: -4.512515068054199
    3. '.sum' → logprob: -6.762515068054199
    4. ' .' → logprob: -8.5125150680542
    5. 'sum' → logprob: -11.0125150680542
    6. '.s' → logprob: -11.1375150680542
    7. 'add' → logprob: -11.3875150680542
    8. ').' → logprob: -11.6375150680542
    9. '`.' → logprob: -11.7625150680542
    10. '.append' → logprob: -12.3875150680542

Token 172: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.021106287837028503
    2. '(' → logprob: -3.896106243133545
    3. '(i' → logprob: -8.021106719970703
    4. '((' → logprob: -8.896106719970703
    5. '(k' → logprob: -9.771106719970703
    6. '(a' → logprob: -11.146106719970703
    7. '(
' → logprob: -11.646106719970703
    8. '(n' → logprob: -12.146106719970703
    9. ' (' → logprob: -12.896106719970703
    10. 'p' → logprob: -13.021106719970703

Token 173: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.40309035778045654
    2. ',' → logprob: -1.6530903577804565
    3. '+' → logprob: -2.028090476989746
    4. ' ,' → logprob: -5.153090476989746
    5. '*' → logprob: -7.028090476989746
    6. ' *' → logprob: -7.153090476989746
    7. '1' → logprob: -7.653090476989746
    8. ')' → logprob: -8.278090476989746
    9. ',
' → logprob: -8.778090476989746
    10. '2' → logprob: -9.028090476989746

Token 174: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018414175137877464
    2. ' ' → logprob: -6.3768415451049805
    3. '   ' → logprob: -9.00184154510498
    4. ')' → logprob: -12.00184154510498
    5. '  ' → logprob: -12.75184154510498
    6. '    ' → logprob: -13.62684154510498
    7. '(' → logprob: -13.87684154510498
    8. 'i' → logprob: -14.37684154510498
    9. 'p' → logprob: -14.37684154510498
    10. 'bit' → logprob: -14.50184154510498

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002302383363712579
    2. ' ' → logprob: -8.625229835510254
    3. 'i' → logprob: -11.250229835510254
    4. ')' → logprob: -11.750229835510254
    5. '   ' → logprob: -11.750229835510254
    6. '(' → logprob: -12.000229835510254
    7. 'bit' → logprob: -12.125229835510254
    8. 'p' → logprob: -12.875229835510254
    9. '  ' → logprob: -13.625229835510254
    10. 'pow' → logprob: -14.000229835510254

Token 176: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043500132858753204
    2. ')
' → logprob: -3.5435001850128174
    3. '   ' → logprob: -4.918499946594238
    4. '
' → logprob: -5.168499946594238
    5. '    
' → logprob: -8.668499946594238
    6. ' ' → logprob: -9.043499946594238
    7. '  
' → logprob: -9.168499946594238
    8. ' )' → logprob: -9.293499946594238
    9. '<|end|>' → logprob: -9.918499946594238
    10. ' 
' → logprob: -10.168499946594238

Token 177: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: ' ans' (ID: 3345)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2666668891906738
    2. 'ans' (adapté à ' ans') → logprob: -1.8916668891906738
    3. 'cnt' → logprob: -1.8916668891906738
    4. 'less' → logprob: -2.141666889190674
    5. 'count' → logprob: -2.141666889190674
    6. 's' → logprob: -2.766666889190674
    7. 'inv' → logprob: -3.141666889190674
    8. 'x' → logprob: -3.391666889190674
    9. 'c' → logprob: -5.016666889190674
    10. 'j' → logprob: -5.141666889190674

Token 179: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.043060969561338425
    2. '+=' → logprob: -3.1680610179901123
    3. '+' → logprob: -10.668061256408691
    4. ' ' → logprob: -11.168061256408691
    5. '=' → logprob: -11.418061256408691
    6. ' =' → logprob: -11.668061256408691
    7. ' +' → logprob: -13.668061256408691
    8. ']+=' → logprob: -13.668061256408691
    9. '+=(' → logprob: -13.918061256408691
    10. ' -=' → logprob: -15.043061256408691

Token 180: ' i' (ID: 575)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.05082498490810394
    2. ' bit' → logprob: -3.0508248805999756
    3. 'i' → logprob: -6.800825119018555
    4. ' i' → logprob: -7.800825119018555
    5. '(bit' → logprob: -8.550825119018555
    6. ' p' → logprob: -8.675825119018555
    7. 'p' → logprob: -8.675825119018555
    8. ' (' → logprob: -10.050825119018555
    9. 'k' → logprob: -10.175825119018555
    10. ' ' → logprob: -10.425825119018555

Token 181: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.261423259973526
    2. ' +' → logprob: -1.8864232301712036
    3. ' -' → logprob: -3.011423349380493
    4. '-' → logprob: -4.386423110961914
    5. '<|end|>' → logprob: -4.886423110961914
    6. ' ' → logprob: -5.761423110961914
    7. '+
' → logprob: -6.011423110961914
    8. ' +
' → logprob: -6.511423110961914
    9. ' *' → logprob: -7.136423110961914
    10. '*' → logprob: -7.761423110961914

Token 182: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003192804753780365
    2. ' ' → logprob: -5.753192901611328
    3. ' bit' → logprob: -12.253192901611328
    4. 'bit' → logprob: -12.378192901611328
    5. '(' → logprob: -13.378192901611328
    6. '2' → logprob: -13.753192901611328
    7. ' -' → logprob: -14.690692901611328
    8. ' p' → logprob: -14.940692901611328
    9. ' (' → logprob: -15.003192901611328
    10. '...' → logprob: -15.003192901611328

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.32392441527918e-05
    2. ' ' → logprob: -10.375053405761719
    3. 'bit' → logprob: -11.125053405761719
    4. '(' → logprob: -12.125053405761719
    5. '(bit' → logprob: -15.000053405761719
    6. 'p' → logprob: -15.000053405761719
    7. '2' → logprob: -15.250053405761719
    8. '0' → logprob: -15.375053405761719
    9. ' bit' → logprob: -15.875053405761719
    10. '
' → logprob: -16.00005340576172

Token 184: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2807922065258026
    2. '<|end|>' → logprob: -1.905792236328125
    3. ' ' → logprob: -3.155792236328125
    4. '-' → logprob: -3.155792236328125
    5. '
' → logprob: -5.905792236328125
    6. ' 
' → logprob: -6.155792236328125
    7. ' -
' → logprob: -6.405792236328125
    8. '+' → logprob: -7.030792236328125
    9. ',' → logprob: -7.655792236328125
    10. '<|end|>' → logprob: -7.780792236328125

Token 185: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.04860372841358185
    2. ' bit' → logprob: -3.0486037731170654
    3. '(bit' → logprob: -11.173604011535645
    4. 'bis' → logprob: -13.673604011535645
    5. 'bi' → logprob: -15.298604011535645
    6. 'bitr' → logprob: -15.548604011535645
    7. ' ' → logprob: -16.173603057861328
    8. ' bis' → logprob: -16.173603057861328
    9. 'b' → logprob: -16.298603057861328
    10. 'bits' → logprob: -16.298603057861328

Token 186: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -0.00010759611177491024
    2. '.s' → logprob: -10.125107765197754
    3. '.bit' → logprob: -10.125107765197754
    4. '.' → logprob: -11.125107765197754
    5. ' .' → logprob: -11.500107765197754
    6. '`.' → logprob: -13.750107765197754
    7. ').' → logprob: -14.875107765197754
    8. 'sum' → logprob: -15.125107765197754
    9. '>.' → logprob: -16.000106811523438
    10. ' `.' → logprob: -16.250106811523438

Token 187: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0021866646129637957
    2. '(' → logprob: -6.1271867752075195
    3. '((' → logprob: -14.75218677520752
    4. ' (' → logprob: -15.00218677520752
    5. '(P' → logprob: -15.12718677520752
    6. '(
' → logprob: -15.25218677520752
    7. 'p' → logprob: -15.75218677520752
    8. ' p' → logprob: -16.627185821533203
    9. '(i' → logprob: -16.752185821533203
    10. '(n' → logprob: -17.252185821533203

Token 188: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19879421591758728
    2. '(p' → logprob: -1.8237942457199097
    3. '(' → logprob: -4.073794364929199
    4. ')p' → logprob: -7.073794364929199
    5. '())' → logprob: -8.0737943649292
    6. '))' → logprob: -8.1987943649292
    7. 'p' → logprob: -8.3237943649292
    8. ' )' → logprob: -9.4487943649292
    9. '(-' → logprob: -10.9487943649292
    10. ')
' → logprob: -10.9487943649292

Token 189: 'a' (ID: 64)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8668399453163147
    2. ' ' → logprob: -1.36683988571167
    3. '<|end|>' → logprob: -1.36683988571167
    4. '
' → logprob: -3.74183988571167
    5. ' 
' → logprob: -3.99183988571167
    6. '```' → logprob: -4.86683988571167
    7. '  
' → logprob: -4.99183988571167
    8. ')' → logprob: -5.74183988571167
    9. '\' → logprob: -6.24183988571167
    10. '0' → logprob: -6.74183988571167

Token 190: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2384127825498581
    2. '<|end|>' → logprob: -1.6134127378463745
    3. ' for' → logprob: -5.613412857055664
    4. 'for' → logprob: -5.988412857055664
    5. ' 
' → logprob: -6.113412857055664
    6. '  
' → logprob: -6.863412857055664
    7. '[' → logprob: -6.988412857055664
    8. ' ' → logprob: -7.238412857055664
    9. '<|end|>' → logprob: -8.113412857055664
    10. ')' → logprob: -8.238412857055664

Token 192: 'big' (ID: 25934)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12134536355733871
    2. 'left' → logprob: -3.621345281600952
    3. 'l' → logprob: -4.246345520019531
    4. 'count' → logprob: -4.496345520019531
    5. 'i' → logprob: -4.621345520019531
    6. 'x' → logprob: -5.496345520019531
    7. 'bit' → logprob: -5.621345520019531
    8. 'inv' → logprob: -5.621345520019531
    9. 'pos' → logprob: -5.746345520019531
    10. 'idx' → logprob: -5.746345520019531

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45197317004203796
    2. '_idx' → logprob: -2.0769731998443604
    3. '_' → logprob: -2.3269731998443604
    4. 'gest' → logprob: -2.7019731998443604
    5. '=' → logprob: -3.7019731998443604
    6. '_index' → logprob: -3.9519731998443604
    7. 'ger' → logprob: -5.576972961425781
    8. '_count' → logprob: -5.576972961425781
    9. 'g' → logprob: -6.076972961425781
    10. 'er' → logprob: -6.201972961425781

Token 194: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25039955973625183
    2. ' a' → logprob: -2.125399589538574
    3. '0' → logprob: -3.625399589538574
    4. ' ' → logprob: -3.750399589538574
    5. '10' → logprob: -4.375399589538574
    6. 'k' → logprob: -4.625399589538574
    7. 'len' → logprob: -5.375399589538574
    8. ' n' → logprob: -5.500399589538574
    9. ' k' → logprob: -5.500399589538574
    10. '200' → logprob: -5.625399589538574

Token 195: '0' (ID: 15)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.42356738448143005
    2. '0' → logprob: -2.673567295074463
    3. '10' → logprob: -2.673567295074463
    4. 'k' → logprob: -3.173567295074463
    5. '1' → logprob: -3.423567295074463
    6. 'len' → logprob: -3.548567295074463
    7. 'n' → logprob: -3.673567295074463
    8. '2' → logprob: -3.798567295074463
    9. '(a' → logprob: -5.048567295074463
    10. '[]' → logprob: -5.173567295074463

Token 196: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007508194539695978
    2. ' for' → logprob: -6.007508277893066
    3. 'i' → logprob: -6.632508277893066
    4. 'left' → logprob: -7.007508277893066
    5. 'from' → logprob: -7.757508277893066
    6. 'count' → logprob: -7.757508277893066
    7. 'l' → logprob: -8.257508277893066
    8. 'stack' → logprob: -8.257508277893066
    9. 'ans' → logprob: -8.632508277893066
    10. 'import' → logprob: -8.882508277893066

Token 197: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04825970530509949
    2. 'j' → logprob: -4.048259735107422
    3. 'left' → logprob: -5.048259735107422
    4. 'l' → logprob: -5.423259735107422
    5. 'from' → logprob: -5.673259735107422
    6. 'stack' → logprob: -5.798259735107422
    7. 'i' → logprob: -6.298259735107422
    8. 'right' → logprob: -6.798259735107422
    9. 'total' → logprob: -6.798259735107422
    10. 'length' → logprob: -6.923259735107422

Token 198: ' item' (ID: 2169)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0927887111902237
    2. ' i' → logprob: -3.2177886962890625
    3. 'x' → logprob: -3.4677886962890625
    4. 'j' → logprob: -4.7177886962890625
    5. ' x' → logprob: -6.3427886962890625
    6. 'v' → logprob: -6.9677886962890625
    7. 'k' → logprob: -6.9677886962890625
    8. 'length' → logprob: -7.0927886962890625
    9. 'p' → logprob: -7.2177886962890625
    10. 'l' → logprob: -7.5927886962890625

Token 199: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020555900409817696
    2. 'in' → logprob: -3.8955559730529785
    3. ' ' → logprob: -11.64555549621582
    4. '  ' → logprob: -13.77055549621582
    5. 's' → logprob: -13.89555549621582
    6. 'a' → logprob: -14.27055549621582
    7. '	in' → logprob: -14.39555549621582
    8. '   ' → logprob: -14.64555549621582
    9. '_in' → logprob: -14.64555549621582
    10. 'In' → logprob: -15.70805549621582

Token 200: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5579411387443542
    2. ' a' → logprob: -1.057941198348999
    3. ' range' → logprob: -2.682941198348999
    4. 'range' → logprob: -4.43294095993042
    5. ' ' → logprob: -9.932941436767578
    6. ' reversed' → logprob: -9.932941436767578
    7. '(a' → logprob: -10.682941436767578
    8. '[a' → logprob: -11.057941436767578
    9. '  ' → logprob: -11.557941436767578
    10. 'enumer' → logprob: -11.620441436767578

Token 201: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005854962393641472
    2. ' :' → logprob: -6.005855083465576
    3. ':
' → logprob: -6.005855083465576
    4. ' in' → logprob: -7.880855083465576
    5. 'in' → logprob: -8.505854606628418
    6. '>' → logprob: -9.380854606628418
    7. ',' → logprob: -10.130854606628418
    8. '+' → logprob: -10.380854606628418
    9. '[' → logprob: -10.505854606628418
    10. '   ' → logprob: -10.630854606628418

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014513568952679634
    2. 'if' → logprob: -5.3895134925842285
    3. 'big' → logprob: -5.3895134925842285
    4. ' if' → logprob: -5.7645134925842285
    5. ' big' → logprob: -6.2645134925842285
    6. '       ' → logprob: -9.764513969421387
    7. 'print' → logprob: -10.264513969421387
    8. '
' → logprob: -10.639513969421387
    9. 'b' → logprob: -10.889513969421387
    10. ' ' → logprob: -11.139513969421387

Token 203: ' big' (ID: 3464)
  Prédit: 'big'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'big' (adapté à ' big') → logprob: -0.842910885810852
    2. 'if' → logprob: -0.967910885810852
    3. '   ' → logprob: -1.717910885810852
    4. ' if' → logprob: -5.9679107666015625
    5. 'bis' → logprob: -6.0929107666015625
    6. ' big' → logprob: -6.4679107666015625
    7. 'while' → logprob: -6.9679107666015625
    8. 'idx' → logprob: -7.2179107666015625
    9. 'for' → logprob: -7.5929107666015625
    10. 'bit' → logprob: -7.9679107666015625

Token 204: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.11677528917789459
    2. '+=' → logprob: -2.2417752742767334
    3. ' =' → logprob: -5.8667755126953125
    4. '=' → logprob: -7.2417755126953125
    5. ' ' → logprob: -8.491775512695312
    6. ',' → logprob: -10.616775512695312
    7. ' ^=' → logprob: -10.616775512695312
    8. ' |=' → logprob: -10.866775512695312
    9. ' <<=' → logprob: -10.866775512695312
    10. '+' → logprob: -11.241775512695312

Token 205: ' n' (ID: 297)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.05049533024430275
    2. ' item' → logprob: -3.4254953861236572
    3. 'pow' → logprob: -5.925495147705078
    4. ' (' → logprob: -6.050495147705078
    5. '201' → logprob: -6.050495147705078
    6. 'k' → logprob: -6.425495147705078
    7. '(' → logprob: -6.550495147705078
    8. '(item' → logprob: -6.550495147705078
    9. 'MOD' → logprob: -6.925495147705078
    10. ' ' → logprob: -7.050495147705078

Token 206: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06998956203460693
    2. ' -' → logprob: -3.5699896812438965
    3. '*' → logprob: -3.9449896812438965
    4. '*(' → logprob: -4.3199896812438965
    5. ' *' → logprob: -5.3199896812438965
    6. ' ' → logprob: -7.9449896812438965
    7. '1' → logprob: -8.069989204406738
    8. '<|end|>' → logprob: -8.319989204406738
    9. '
' → logprob: -9.069989204406738
    10. '-k' → logprob: -9.069989204406738

Token 207: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.0009075298439711332
    2. ' bis' → logprob: -7.2509074211120605
    3. '1' → logprob: -8.750907897949219
    4. '(' → logprob: -10.875907897949219
    5. '(b' → logprob: -11.875907897949219
    6. ' (' → logprob: -12.375907897949219
    7. ' ' → logprob: -12.500907897949219
    8. 'b' → logprob: -13.000907897949219
    9. '   ' → logprob: -14.125907897949219
    10. 'import' → logprob: -14.375907897949219

Token 208: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.008129963040119e-06
    2. 'e' → logprob: -13.500003814697266
    3. 'sect' → logprob: -14.000003814697266
    4. 'ct' → logprob: -14.375003814697266
    5. 'ext' → logprob: -14.625003814697266
    6. 'a' → logprob: -15.500003814697266
    7. 'ec' → logprob: -16.125003814697266
    8. 'c' → logprob: -16.750003814697266
    9. '```' → logprob: -17.250003814697266
    10. '3' → logprob: -17.375003814697266

Token 209: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.5035057067871094
    2. '_left' → logprob: -1.3785057067871094
    3. '_right' → logprob: -2.1285057067871094
    4. 'bis' → logprob: -3.8785057067871094
    5. ' bis' → logprob: -5.628505706787109
    6. 'b' → logprob: -8.25350570678711
    7. 'right' → logprob: -10.75350570678711
    8. 'left' → logprob: -11.00350570678711
    9. ',b' → logprob: -11.62850570678711
    10. 'ins' → logprob: -12.12850570678711

Token 210: 'is' (ID: 276)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.3237684369087219
    2. 'is' → logprob: -1.4487683773040771
    3. 'ct' → logprob: -3.198768377304077
    4. 'ict' → logprob: -8.198768615722656
    5. '_left' → logprob: -9.323768615722656
    6. 'sect' → logprob: -9.448768615722656
    7. 'ins' → logprob: -9.573768615722656
    8. 'ist' → logprob: -9.698768615722656
    9. '_right' → logprob: -9.823768615722656
    10. 'ects' → logprob: -9.948768615722656

Token 211: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.14273861050605774
    2. 'ct' → logprob: -2.0177385807037354
    3. 'e' → logprob: -11.142738342285156
    4. 'c' → logprob: -11.142738342285156
    5. '<' → logprob: -12.392738342285156
    6. '[' → logprob: -12.517738342285156
    7. '{' → logprob: -12.767738342285156
    8. 't' → logprob: -13.142738342285156
    9. '```' → logprob: -13.142738342285156
    10. 'n' → logprob: -13.267738342285156

Token 212: '_right' (ID: 24402)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.40737271308898926
    2. '_right' → logprob: -1.1573727130889893
    3. '(a' → logprob: -4.03237247467041
    4. 'right' → logprob: -6.40737247467041
    5. 'left' → logprob: -7.28237247467041
    6. 'a' → logprob: -8.65737247467041
    7. 'Right' → logprob: -10.28237247467041
    8. 'Left' → logprob: -11.78237247467041
    9. '.a' → logprob: -13.53237247467041
    10. '```' → logprob: -13.53237247467041

Token 213: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.255023956531659e-05
    2. '(' → logprob: -10.250072479248047
    3. 'a' → logprob: -10.375072479248047
    4. '(big' → logprob: -12.500072479248047
    5. '(
' → logprob: -14.250072479248047
    6. '```' → logprob: -15.000072479248047
    7. '<|end|>' → logprob: -15.750072479248047
    8. '(ans' → logprob: -15.875072479248047
    9. 'big' → logprob: -15.875072479248047
    10. ',a' → logprob: -16.000072479248047

Token 214: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0003115095605608076
    2. '(' → logprob: -8.250311851501465
    3. ' (' → logprob: -10.375311851501465
    4. 'a' → logprob: -12.375311851501465
    5. '(item' → logprob: -12.875311851501465
    6. '(
' → logprob: -13.500311851501465
    7. ' ' → logprob: -13.625311851501465
    8. '([' → logprob: -13.750311851501465
    9. '(big' → logprob: -13.750311851501465
    10. '(array' → logprob: -13.875311851501465

Token 215: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.0262316782027483
    2. '2' → logprob: -4.15123176574707
    3. ' item' → logprob: -4.90123176574707
    4. 'k' → logprob: -6.90123176574707
    5. '(item' → logprob: -7.40123176574707
    6. 'big' → logprob: -7.40123176574707
    7. ' ' → logprob: -8.27623176574707
    8. '(' → logprob: -9.02623176574707
    9. ' k' → logprob: -10.02623176574707
    10. '  ' → logprob: -11.52623176574707

Token 216: ')

' (ID: 1029)
  Prédit: '(item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.37748461961746216
    2. ')' → logprob: -1.2524845600128174
    3. '(' → logprob: -3.8774845600128174
    4. '(a' → logprob: -5.8774847984313965
    5. '(big' → logprob: -6.8774847984313965
    6. ',' → logprob: -7.2524847984313965
    7. ')
' → logprob: -7.3774847984313965
    8. ' (' → logprob: -7.8774847984313965
    9. '(
' → logprob: -8.252484321594238
    10. ' -' → logprob: -8.377484321594238

Token 217: 'times' (ID: 32499)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2135656774044037
    2. 'for' → logprob: -2.3385655879974365
    3. 'if' → logprob: -2.5885655879974365
    4. 'ans' → logprob: -4.338565826416016
    5. 'big' → logprob: -6.213565826416016
    6. 'factor' → logprob: -6.713565826416016
    7. 'answer' → logprob: -6.838565826416016
    8. 'pow' → logprob: -7.338565826416016
    9. 'fact' → logprob: -7.713565826416016
    10. ' for' → logprob: -8.338565826416016

Token 218: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3666464388370514
    2. '=' → logprob: -1.241646409034729
    3. '_' → logprob: -4.1166462898254395
    4. ',' → logprob: -8.241646766662598
    5. ' ' → logprob: -8.241646766662598
    6. '_to' → logprob: -8.491646766662598
    7. '_for' → logprob: -8.741646766662598
    8. 's' → logprob: -9.241646766662598
    9. '(' → logprob: -9.366646766662598
    10. '_needed' → logprob: -9.741646766662598

Token 219: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08282085508108139
    2. '(k' → logprob: -3.8328208923339844
    3. 'n' → logprob: -4.332820892333984
    4. ' k' → logprob: -4.457820892333984
    5. 'big' → logprob: -4.707820892333984
    6. '(n' → logprob: -4.957820892333984
    7. '0' → logprob: -5.707820892333984
    8. '(' → logprob: -5.957820892333984
    9. 'ans' → logprob: -6.082820892333984
    10. ' n' → logprob: -6.707820892333984

Token 220: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08032730966806412
    2. 'n' → logprob: -3.580327272415161
    3. 'ans' → logprob: -3.955327272415161
    4. 'big' → logprob: -3.955327272415161
    5. '(k' → logprob: -5.45532751083374
    6. 'pow' → logprob: -5.83032751083374
    7. '(n' → logprob: -6.58032751083374
    8. ' k' → logprob: -7.33032751083374
    9. '(' → logprob: -8.080327033996582
    10. '2' → logprob: -8.205327033996582

Token 221: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.09301413595676422
    2. '*' → logprob: -2.7180142402648926
    3. '*(' → logprob: -3.8430142402648926
    4. '-' → logprob: -7.218014240264893
    5. '+' → logprob: -8.343013763427734
    6. ' -' → logprob: -8.718013763427734
    7. ')' → logprob: -8.718013763427734
    8. '**' → logprob: -10.468013763427734
    9. ' *(' → logprob: -10.718013763427734
    10. ' ' → logprob: -11.718013763427734

Token 222: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.1853605955839157
    2. '(n' → logprob: -1.8103605508804321
    3. '(' → logprob: -5.685360431671143
    4. ' (' → logprob: -6.310360431671143
    5. '(times' → logprob: -9.1853609085083
    6. 'n' → logprob: -9.4353609085083
    7. 'times' → logprob: -9.4353609085083
    8. '2' → logprob: -10.3103609085083
    9. '1' → logprob: -10.9353609085083
    10. '(K' → logprob: -11.1853609085083

Token 223: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08642231673002243
    2. '(k' → logprob: -2.5864222049713135
    3. 'n' → logprob: -5.211422443389893
    4. '(n' → logprob: -6.211422443389893
    5. '(' → logprob: -10.836421966552734
    6. 'times' → logprob: -11.336421966552734
    7. '2' → logprob: -13.086421966552734
    8. '1' → logprob: -13.211421966552734
    9. ' k' → logprob: -13.211421966552734
    10. ' (' → logprob: -13.336421966552734

Token 224: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2847001552581787
    2. '+' → logprob: -1.4097001552581787
    3. ' -' → logprob: -5.784700393676758
    4. ' +' → logprob: -7.784700393676758
    5. '1' → logprob: -10.284700393676758
    6. '```' → logprob: -12.159700393676758
    7. ')' → logprob: -12.284700393676758
    8. ' ' → logprob: -12.784700393676758
    9. '  ' → logprob: -13.909700393676758
    10. '   ' → logprob: -13.909700393676758

Token 225: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8802491215174086e-05
    2. ' ' → logprob: -10.500028610229492
    3. '   ' → logprob: -14.250028610229492
    4. ')' → logprob: -15.750028610229492
    5. '  ' → logprob: -16.125028610229492
    6. '...' → logprob: -16.375028610229492
    7. '
' → logprob: -16.375028610229492
    8. '```' → logprob: -16.875028610229492
    9. '+' → logprob: -17.687528610229492
    10. '    ' → logprob: -17.750028610229492

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.750011444091797
    3. ')' → logprob: -13.625011444091797
    4. '
' → logprob: -14.125011444091797
    5. '   ' → logprob: -14.500011444091797
    6. '```' → logprob: -14.875011444091797
    7. '  ' → logprob: -15.250011444091797
    8. '...' → logprob: -15.500011444091797
    9. '2' → logprob: -16.750011444091797
    10. '    ' → logprob: -16.812511444091797

Token 227: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15075591206550598
    2. ' //' → logprob: -2.2757558822631836
    3. '//' → logprob: -3.6507558822631836
    4. ')//' → logprob: -4.525755882263184
    5. ' )' → logprob: -7.775755882263184
    6. ')>>' → logprob: -14.025755882263184
    7. ' ' → logprob: -14.150755882263184
    8. ' ' → logprob: -14.525755882263184
    9. '")' → logprob: -14.650755882263184
    10. '```' → logprob: -14.775755882263184

Token 228: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.08558671921491623
    2. ')' → logprob: -3.2105867862701416
    3. '//' → logprob: -3.2105867862701416
    4. ')//' → logprob: -6.7105865478515625
    5. ' )' → logprob: -8.960586547851562
    6. ' ' → logprob: -11.335586547851562
    7. ' ' → logprob: -14.210586547851562
    8. ' //
' → logprob: -15.460586547851562
    9. '```' → logprob: -15.585586547851562
    10. '
' → logprob: -15.835586547851562

Token 229: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018006093159783632
    2. ' ' → logprob: -8.6251802444458
    3. ')' → logprob: -14.7501802444458
    4. '   ' → logprob: -16.250179290771484
    5. '1' → logprob: -17.125179290771484
    6. '  ' → logprob: -18.000179290771484
    7. '4' → logprob: -18.125179290771484
    8. '    ' → logprob: -18.750179290771484
    9. '۲' → logprob: -18.750179290771484
    10. '```' → logprob: -19.312679290771484

Token 230: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '1' → logprob: -16.125001907348633
    4. ')' → logprob: -19.125001907348633
    5. '```' → logprob: -19.875001907348633
    6. '   ' → logprob: -20.125001907348633
    7. '3' → logprob: -20.250001907348633
    8. '4' → logprob: -20.875001907348633
    9. '۲' → logprob: -21.375001907348633
    10. '202' → logprob: -21.625001907348633

Token 231: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14251059293746948
    2. ' *' → logprob: -2.1425106525421143
    3. ')%' → logprob: -5.517510414123535
    4. ' )' → logprob: -5.517510414123535
    5. '%' → logprob: -6.017510414123535
    6. '*' → logprob: -6.142510414123535
    7. ' %' → logprob: -6.267510414123535
    8. '*n' → logprob: -7.767510414123535
    9. ' ' → logprob: -7.892510414123535
    10. '%n' → logprob: -9.642510414123535

Token 232: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.21393370628356934
    2. '*' → logprob: -2.2139337062835693
    3. ' %' → logprob: -2.7139337062835693
    4. ' *' → logprob: -4.088933944702148
    5. '%n' → logprob: -8.838933944702148
    6. ')' → logprob: -10.213933944702148
    7. '*n' → logprob: -10.463933944702148
    8. '%=' → logprob: -10.963933944702148
    9. '*(' → logprob: -11.338933944702148
    10. ' %=' → logprob: -11.463933944702148

Token 233: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.688212614681106e-05
    2. ' MOD' → logprob: -11.000017166137695
    3. '(' → logprob: -16.375017166137695
    4. '(M' → logprob: -17.500017166137695
    5. '_MOD' → logprob: -18.375017166137695
    6. 'MO' → logprob: -19.375017166137695
    7. '.MOD' → logprob: -21.500017166137695
    8. 'MD' → logprob: -22.250017166137695
    9. 'MODE' → logprob: -22.250017166137695
    10. '(mod' → logprob: -22.500017166137695

Token 234: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.013320575468242168
    2. '
' → logprob: -5.013320446014404
    3. 'times' → logprob: -5.263320446014404
    4. '*' → logprob: -7.513320446014404
    5. 'print' → logprob: -8.388320922851562
    6. '(ans' → logprob: -8.388320922851562
    7. 'result' → logprob: -9.013320922851562
    8. ' ans' → logprob: -9.263320922851562
    9. 'answer' → logprob: -9.263320922851562
    10. ' times' → logprob: -11.263320922851562

Token 235: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00026336227892898023
    2. 'times' → logprob: -9.500263214111328
    3. 'print' → logprob: -9.625263214111328
    4. '
' → logprob: -10.125263214111328
    5. 'for' → logprob: -11.250263214111328
    6. 'total' → logprob: -11.375263214111328
    7. 'answer' → logprob: -11.375263214111328
    8. 'inv' → logprob: -11.500263214111328
    9. '```' → logprob: -11.750263214111328
    10. 'big' → logprob: -12.250263214111328

Token 236: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08967381715774536
    2. ' =' → logprob: -2.9646737575531006
    3. '%=' → logprob: -3.9646737575531006
    4. '*=' → logprob: -4.33967399597168
    5. '+=' → logprob: -6.46467399597168
    6. ' *=' → logprob: -7.83967399597168
    7. ' %=' → logprob: -8.96467399597168
    8. ' +=' → logprob: -9.96467399597168
    9. '*' → logprob: -10.33967399597168
    10. '=(' → logprob: -11.96467399597168

Token 237: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859509319067001
    2. '=' → logprob: -3.0485951900482178
    3. ' +=' → logprob: -11.923595428466797
    4. ' ' → logprob: -14.673595428466797
    5. ' =(' → logprob: -14.923595428466797
    6. '+=' → logprob: -15.173595428466797
    7. ' =
' → logprob: -16.923595428466797
    8. ' ' → logprob: -17.548595428466797
    9. ' *=' → logprob: -17.673595428466797
    10. '＝' → logprob: -18.298595428466797

Token 238: ' (' (ID: 350)
  Prédit: '(big'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(big' → logprob: -0.75047367811203
    2. '(ans' → logprob: -1.1254737377166748
    3. 'big' → logprob: -2.000473737716675
    4. 'ans' → logprob: -3.375473737716675
    5. '(' → logprob: -3.750473737716675
    6. '(times' → logprob: -5.500473499298096
    7. 'times' → logprob: -5.750473499298096
    8. '((' → logprob: -6.125473499298096
    9. '(b' → logprob: -8.250473976135254
    10. ' (' → logprob: -9.375473976135254

Token 239: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4614105820655823
    2. '(ans' → logprob: -1.0864105224609375
    3. 'big' → logprob: -4.3364105224609375
    4. '(big' → logprob: -4.4614105224609375
    5. 'times' → logprob: -5.3364105224609375
    6. '(times' → logprob: -6.9614105224609375
    7. '(' → logprob: -7.9614105224609375
    8. ' ans' → logprob: -7.9614105224609375
    9. '(n' → logprob: -8.086410522460938
    10. '((' → logprob: -8.461410522460938

Token 240: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.029909692704677582
    2. '*' → logprob: -3.529909610748291
    3. ' +' → logprob: -9.52991008758545
    4. '+' → logprob: -9.77991008758545
    5. ')' → logprob: -10.65491008758545
    6. ' ' → logprob: -13.15491008758545
    7. '%' → logprob: -13.90491008758545
    8. ' ' → logprob: -14.15491008758545
    9. '*)' → logprob: -14.40491008758545
    10. '*k' → logprob: -14.52991008758545

Token 241: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04443260282278061
    2. ' k' → logprob: -3.1694326400756836
    3. '(k' → logprob: -7.044432640075684
    4. 'times' → logprob: -8.544432640075684
    5. ' (' → logprob: -8.669432640075684
    6. ' times' → logprob: -9.044432640075684
    7. '(' → logprob: -10.794432640075684
    8. 'pow' → logprob: -11.169432640075684
    9. 'n' → logprob: -11.419432640075684
    10. '((' → logprob: -11.919432640075684

Token 242: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23221686482429504
    2. '+' → logprob: -2.1072168350219727
    3. ')%' → logprob: -2.9822168350219727
    4. ' +' → logprob: -3.6072168350219727
    5. '%' → logprob: -4.857216835021973
    6. '2' → logprob: -11.107216835021973
    7. '+)' → logprob: -11.857216835021973
    8. ' )' → logprob: -11.982216835021973
    9. ')+' → logprob: -11.982216835021973
    10. '```' → logprob: -12.232216835021973

Token 243: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.003270879853516817
    2. '+' → logprob: -6.378271102905273
    3. ' %' → logprob: -6.628271102905273
    4. ' +' → logprob: -8.378271102905273
    5. ')%' → logprob: -12.128271102905273
    6. '
' → logprob: -12.628271102905273
    7. ')' → logprob: -13.378271102905273
    8. '%=' → logprob: -13.503271102905273
    9. '*' → logprob: -14.253271102905273
    10. '2' → logprob: -14.628271102905273

Token 244: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.935296834039036e-06
    2. ' MOD' → logprob: -12.75000286102295
    3. '_MOD' → logprob: -21.500003814697266
    4. '.MOD' → logprob: -22.625003814697266
    5. 'MO' → logprob: -23.250003814697266
    6. '(M' → logprob: -24.375003814697266
    7. '```' → logprob: -25.000003814697266
    8. 'MD' → logprob: -25.250003814697266
    9. '
' → logprob: -25.375003814697266
    10. 'M' → logprob: -25.625003814697266

Token 245: ' +' (ID: 659)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0014735567383468151
    2. 'print' → logprob: -7.376473426818848
    3. '
' → logprob: -7.876473426818848
    4. '+' → logprob: -8.251473426818848
    5. '+
' → logprob: -8.876473426818848
    6. '(ans' → logprob: -10.501473426818848
    7. 'times' → logprob: -11.876473426818848
    8. ' ans' → logprob: -12.001473426818848
    9. 'answer' → logprob: -12.501473426818848
    10. '	ans' → logprob: -12.626473426818848

Token 246: ' (' (ID: 350)
  Prédit: '(big'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(big' → logprob: -0.6773791313171387
    2. ' (' → logprob: -1.0523791313171387
    3. '(times' → logprob: -2.0523791313171387
    4. '((' → logprob: -5.427379131317139
    5. '(' → logprob: -5.802379131317139
    6. 'big' → logprob: -5.927379131317139
    7. 'times' → logprob: -6.177379131317139
    8. ' times' → logprob: -6.802379131317139
    9. ' ((' → logprob: -7.427379131317139
    10. ' big' → logprob: -8.052379608154297

Token 247: 'big' (ID: 25934)
  Prédit: 'big'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'big' → logprob: -0.024895107373595238
    2. 'times' → logprob: -4.149895191192627
    3. '(big' → logprob: -4.774895191192627
    4. ' big' → logprob: -8.399894714355469
    5. '(times' → logprob: -9.024894714355469
    6. ' times' → logprob: -10.774894714355469
    7. ' (' → logprob: -12.149894714355469
    8. 'b' → logprob: -12.899894714355469
    9. 'Big' → logprob: -12.899894714355469
    10. 'int' → logprob: -13.024894714355469

Token 248: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.004536923486739397
    2. ' times' → logprob: -6.254537105560303
    3. '*' → logprob: -6.379537105560303
    4. 'times' → logprob: -7.129537105560303
    5. ')' → logprob: -9.254536628723145
    6. ' ' → logprob: -12.129536628723145
    7. '_times' → logprob: -13.379536628723145
    8. '*k' → logprob: -13.504536628723145
    9. ' *
' → logprob: -14.504536628723145
    10. '<|end|>' → logprob: -14.504536628723145

Token 249: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.2868862450122833
    2. ' times' → logprob: -1.411886215209961
    3. '(times' → logprob: -5.786886215209961
    4. 'k' → logprob: -7.161886215209961
    5. ' (' → logprob: -7.161886215209961
    6. '(k' → logprob: -7.411886215209961
    7. ' k' → logprob: -7.786886215209961
    8. ' ((' → logprob: -11.411886215209961
    9. '(' → logprob: -11.661886215209961
    10. '((' → logprob: -11.661886215209961

Token 250: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08529745787382126
    2. ' %' → logprob: -2.8352973461151123
    3. '%' → logprob: -4.085297584533691
    4. ' )' → logprob: -5.710297584533691
    5. ')%' → logprob: -5.835297584533691
    6. '
' → logprob: -12.960297584533691
    7. '%n' → logprob: -13.210297584533691
    8. ')
' → logprob: -13.710297584533691
    9. '%)' → logprob: -15.210297584533691
    10. '```' → logprob: -15.585297584533691

Token 251: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2884391248226166
    2. '%' → logprob: -1.413439154624939
    3. ')' → logprob: -5.0384392738342285
    4. ')%' → logprob: -7.9134392738342285
    5. '
' → logprob: -8.53843879699707
    6. 'ans' → logprob: -9.53843879699707
    7. ' ans' → logprob: -9.78843879699707
    8. ' %=' → logprob: -10.16343879699707
    9. '(ans' → logprob: -11.41343879699707
    10. '%n' → logprob: -11.41343879699707

Token 252: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -7.941850526549388e-06
    2. ' MOD' → logprob: -11.750007629394531
    3. '_MOD' → logprob: -18.50000762939453
    4. '.MOD' → logprob: -20.37500762939453
    5. 'MO' → logprob: -21.62500762939453
    6. 'Mod' → logprob: -22.75000762939453
    7. 'mod' → logprob: -23.00000762939453
    8. 'M' → logprob: -23.87500762939453
    9. 'MD' → logprob: -24.00000762939453
    10. '7' → logprob: -24.37500762939453

Token 253: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.16743460297584534
    2. 'print' → logprob: -1.917434573173523
    3. ' ans' → logprob: -5.1674346923828125
    4. '
' → logprob: -6.9174346923828125
    5. '(ans' → logprob: -7.9174346923828125
    6. '```' → logprob: -9.792434692382812
    7. ' print' → logprob: -10.042434692382812
    8. 'answer' → logprob: -12.042434692382812
    9. ')' → logprob: -12.042434692382812
    10. 'ANS' → logprob: -12.167434692382812

Token 254: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.13682880997657776
    2. 'print' → logprob: -2.136828899383545
    3. ' ans' → logprob: -4.636828899383545
    4. '(ans' → logprob: -9.261828422546387
    5. '
' → logprob: -10.636828422546387
    6. ' print' → logprob: -10.886828422546387
    7. '_ans' → logprob: -11.886828422546387
    8. '```' → logprob: -12.136828422546387
    9. 'answer' → logprob: -12.261828422546387
    10. '	ans' → logprob: -12.261828422546387

Token 255: '2' (ID: 17)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.018551861867308617
    2. ' %' → logprob: -4.018551826477051
    3. '
' → logprob: -8.39355182647705
    4. '%
' → logprob: -10.01855182647705
    5. '%=' → logprob: -10.14355182647705
    6. ' %=' → logprob: -10.51855182647705
    7. ')' → logprob: -10.76855182647705
    8. '<|end|>' → logprob: -11.51855182647705
    9. ')%' → logprob: -11.76855182647705
    10. '```' → logprob: -11.89355182647705

Token 256: ' %=' (ID: 117035)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.02463751845061779
    2. ' %' → logprob: -3.774637460708618
    3. '
' → logprob: -6.899637699127197
    4. ')' → logprob: -8.899637222290039
    5. '%=' → logprob: -9.149637222290039
    6. ')%' → logprob: -10.149637222290039
    7. ' %=' → logprob: -10.399637222290039
    8. '%
' → logprob: -10.524637222290039
    9. 'print' → logprob: -11.149637222290039
    10. '<|end|>' → logprob: -11.774637222290039

Token 257: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.0206720617134124e-05
    2. ' MOD' → logprob: -11.50001049041748
    3. 'MO' → logprob: -20.750009536743164
    4. '_MOD' → logprob: -21.750009536743164
    5. '.MOD' → logprob: -23.375009536743164
    6. ' ' → logprob: -24.000009536743164
    7. 'MD' → logprob: -24.125009536743164
    8. '(M' → logprob: -24.375009536743164
    9. 'M' → logprob: -24.750009536743164
    10. 'MODE' → logprob: -25.000009536743164

Token 258: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. '
' → logprob: -14.875000953674316
    3. ' print' → logprob: -16.0
    4. '```' → logprob: -17.5
    5. '<|end|>' → logprob: -19.875
    6. '#print' → logprob: -20.25
    7. '(print' → logprob: -21.125
    8. '
' → logprob: -22.125
    9. '``' → logprob: -22.25
    10. '.print' → logprob: -22.875

Token 259: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -18.5
    3. ' print' → logprob: -20.0
    4. '
' → logprob: -20.875
    5. '(print' → logprob: -22.0
    6. '#print' → logprob: -22.125
    7. 'pr' → logprob: -22.75
    8. 'for' → logprob: -23.25
    9. 'return' → logprob: -23.375
    10. '\' → logprob: -23.75

Token 260: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.607391408877447e-05
    2. 'ans' → logprob: -10.250036239624023
    3. '(' → logprob: -14.250036239624023
    4. '(
' → logprob: -17.000036239624023
    5. '	ans' → logprob: -18.875036239624023
    6. '(answer' → logprob: -19.000036239624023
    7. ' (' → logprob: -20.250036239624023
    8. ' ans' → logprob: -20.500036239624023
    9. '(abs' → logprob: -21.750036239624023
    10. '_ans' → logprob: -21.750036239624023

Token 261: '2' (ID: 17)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06200096756219864
    2. '2' → logprob: -2.8120009899139404
    3. ' )' → logprob: -10.93700122833252
    4. '_)' → logprob: -11.93700122833252
    5. '(' → logprob: -13.31200122833252
    6. ')`' → logprob: -13.31200122833252
    7. '())' → logprob: -13.68700122833252
    8. '))' → logprob: -14.18700122833252
    9. '*)' → logprob: -14.31200122833252
    10. '`)' → logprob: -14.43700122833252

Token 262: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0445127372804563e-05
    2. ' )' → logprob: -11.50001049041748
    3. ')
' → logprob: -16.875009536743164
    4. '```' → logprob: -17.000009536743164
    5. '())' → logprob: -17.250009536743164
    6. '))' → logprob: -17.250009536743164
    7. '()' → logprob: -17.500009536743164
    8. ')#' → logprob: -17.500009536743164
    9. ')`' → logprob: -17.500009536743164
    10. '<|end|>' → logprob: -17.750009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 260
Tokens correctement prédits (1ère position, stricte): 115
Tokens correctement prédits (1ère position, avec adaptation): 121
Tokens correctement prédits (top 10): 227
Précision stricte (1ère position): 44.23%
Précision adaptée (1ère position): 46.54%
Précision (top 10): 87.31%
================================================================================
