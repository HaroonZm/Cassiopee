================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import partial

n_m = input().split()
get_num = lambda s: int(s) - 1
n, m = map(int, n_m)
perm = list(map(get_num, input().split()))
spots = [-42 for _ in range(n)]  # -42 for personal flavor
i = 0
while i < n:
    spots[perm[i]] = i
    i += 1

rootz = [_ for _ in range(n)]

def zfind(w):
    p = rootz[w]
    if p == w: return w
    q = zfind(p)
    rootz[w] = q
    return q

def kunite(a, b):
    za, zb = zfind(a), zfind(b)
    # Personal: unite the max into the min of the roots, or vice versa at random
    (rootz.__setitem__ if za > zb else partial(rootz.__setitem__, zb))(za if za > zb else za, zb if za > zb else za)

for tick in range(m):
    x_, y_ = map(get_num, input().split())
    kunite(spots[x_], spots[y_])

kept = [None]*n
for s in range(n): # flavor: use kept as poor man's array cache
    kept[s] = (spots[perm[s]], spots[s])

count = 0
idx = 0
while idx < n:
    u, v = kept[idx]
    if zfind(u) == zfind(v):
        count += 1
    idx += 1
print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' partial' (ID: 13664)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4356234073638916
    2. '.' → logprob: -1.0606234073638916
    3. '\' → logprob: -5.9356231689453125
    4. '```' → logprob: -6.6856231689453125
    5. '\(' → logprob: -6.9356231689453125
    6. '[' → logprob: -7.9356231689453125
    7. '(
' → logprob: -7.9356231689453125
    8. '`' → logprob: -8.560623168945312
    9. '\n' → logprob: -8.810623168945312
    10. 'import' → logprob: -8.935623168945312

Token 5: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009877558797597885
    2. 'd' → logprob: -5.884877681732178
    3. '\' → logprob: -6.134877681732178
    4. '.' → logprob: -6.384877681732178
    5. '\(' → logprob: -6.509877681732178
    6. 'a' → logprob: -7.759877681732178
    7. 'def' → logprob: -8.38487720489502
    8. '\n' → logprob: -9.13487720489502
    9. '`' → logprob: -9.38487720489502
    10. '[' → logprob: -9.38487720489502

Token 6: '_m' (ID: 1285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3142835199832916
    2. '=' → logprob: -2.439283609390259
    3. 'a' → logprob: -2.439283609390259
    4. 'u' → logprob: -2.564283609390259
    5. ' ' → logprob: -5.31428337097168
    6. ',' → logprob: -5.56428337097168
    7. ' =' → logprob: -6.06428337097168
    8. 'e' → logprob: -6.06428337097168
    9. '.' → logprob: -6.68928337097168
    10. 'um' → logprob: -7.18928337097168

Token 7: ' =' (ID: 314)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.8654005527496338
    2. 'ethod' → logprob: -0.9904005527496338
    3. 'ax' → logprob: -2.490400552749634
    4. 'atch' → logprob: -3.240400552749634
    5. 'odel' → logprob: -3.740400552749634
    6. '_' → logprob: -3.865400552749634
    7. 'e' → logprob: -5.115400314331055
    8. 'apping' → logprob: -5.115400314331055
    9. '=' → logprob: -5.490400314331055
    10. 'a' → logprob: -5.490400314331055

Token 8: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3278689980506897
    2. '10' → logprob: -2.202868938446045
    3. ' partial' → logprob: -2.577868938446045
    4. '5' → logprob: -3.452868938446045
    5. 'partial' → logprob: -4.577868938446045
    6. '100' → logprob: -4.702868938446045
    7. '20' → logprob: -4.827868938446045
    8. ' int' → logprob: -5.327868938446045
    9. '3' → logprob: -5.577868938446045
    10. '50' → logprob: -5.702868938446045

Token 9: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005860374658368528
    2. ''' → logprob: -8.87558650970459
    3. '('' → logprob: -8.87558650970459
    4. '("("' → logprob: -9.00058650970459
    5. ')' → logprob: -10.00058650970459
    6. '"' → logprob: -10.12558650970459
    7. '(
' → logprob: -10.62558650970459
    8. '```' → logprob: -11.12558650970459
    9. 's' → logprob: -12.00058650970459
    10. ' (' → logprob: -12.25058650970459

Token 10: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.002623097039759159
    2. 'split' → logprob: -6.002623081207275
    3. 'lower' → logprob: -9.877623558044434
    4. 'isdigit' → logprob: -10.377623558044434
    5. 'rstrip' → logprob: -10.377623558044434
    6. 'replace' → logprob: -10.627623558044434
    7. 'startswith' → logprob: -12.252623558044434
    8. 'read' → logprob: -12.752623558044434
    9. 'join' → logprob: -14.502623558044434
    10. ' strip' → logprob: -14.877623558044434

Token 11: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012209046632051468
    2. '('' → logprob: -4.887208938598633
    3. '("("' → logprob: -5.887208938598633
    4. '()' → logprob: -7.512208938598633
    5. '((' → logprob: -7.637208938598633
    6. '```' → logprob: -8.637208938598633
    7. '`' → logprob: -8.887208938598633
    8. '(
' → logprob: -9.512208938598633
    9. '(

' → logprob: -9.512208938598633
    10. '(`' → logprob: -9.762208938598633

Token 12: 'get' (ID: 522)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7758696675300598
    2. '=' → logprob: -1.150869607925415
    3. 'n' → logprob: -3.150869607925415
    4. ' =' → logprob: -3.150869607925415
    5. '_' → logprob: -3.650869607925415
    6. ')' → logprob: -3.900869607925415
    7. '.' → logprob: -4.150869846343994
    8. '(' → logprob: -4.150869846343994
    9. '[n' → logprob: -4.150869846343994
    10. 'for' → logprob: -5.025869846343994

Token 13: '_num' (ID: 9834)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0821782648563385
    2. 'attr' → logprob: -3.0821783542633057
    3. '_item' → logprob: -3.7071783542633057
    4. 'item' → logprob: -5.582178115844727
    5. '_n' → logprob: -6.207178115844727
    6. '_m' → logprob: -7.957178115844727
    7. ' _' → logprob: -7.957178115844727
    8. '_attr' → logprob: -7.957178115844727
    9. '_token' → logprob: -8.082178115844727
    10. 's' → logprob: -8.082178115844727

Token 14: ' =' (ID: 314)
  Prédit: 'ber'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ber' → logprob: -0.6643492579460144
    2. '(' → logprob: -1.7893493175506592
    3. '_' → logprob: -2.289349317550659
    4. 's' → logprob: -2.289349317550659
    5. ' =' → logprob: -2.414349317550659
    6. '=' → logprob: -4.03934907913208
    7. 'partial' → logprob: -6.41434907913208
    8. '_from' → logprob: -7.41434907913208
    9. '(_)' → logprob: -7.78934907913208
    10. ')' → logprob: -7.78934907913208

Token 15: ' lambda' (ID: 27871)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.07469485700130463
    2. ' partial' → logprob: -2.949694871902466
    3. 'int' → logprob: -4.199694633483887
    4. ' int' → logprob: -5.449694633483887
    5. 'lambda' → logprob: -8.699694633483887
    6. ' lambda' → logprob: -9.074694633483887
    7. 'part' → logprob: -11.574694633483887
    8. '(part' → logprob: -11.949694633483887
    9. ' ' → logprob: -12.199694633483887
    10. 'get' → logprob: -12.824694633483887

Token 16: ' s' (ID: 265)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.13103002309799194
    2. 'x' → logprob: -2.1310300827026367
    3. ' int' → logprob: -6.631030082702637
    4. ' s' → logprob: -6.756030082702637
    5. 'int' → logprob: -7.256030082702637
    6. 's' → logprob: -8.256030082702637
    7. ' lambda' → logprob: -8.381030082702637
    8. ' n' → logprob: -8.506030082702637
    9. 'lambda' → logprob: -10.131030082702637
    10. 'n' → logprob: -10.131030082702637

Token 17: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017851853743195534
    2. ':s' → logprob: -4.142851829528809
    3. ':int' → logprob: -7.267851829528809
    4. ',' → logprob: -7.267851829528809
    5. ' :' → logprob: -8.267851829528809
    6. 'int' → logprob: -10.142851829528809
    7. ',s' → logprob: -10.642851829528809
    8. ':n' → logprob: -10.892851829528809
    9. 's' → logprob: -11.017851829528809
    10. ':ss' → logprob: -11.517851829528809

Token 18: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5768727660179138
    2. 'int' → logprob: -0.8268727660179138
    3. '[int' → logprob: -7.951872825622559
    4. ' ord' → logprob: -8.451872825622559
    5. '(int' → logprob: -9.576872825622559
    6. ' ' → logprob: -10.201872825622559
    7. ' s' → logprob: -10.576872825622559
    8. 'float' → logprob: -10.701872825622559
    9. 'len' → logprob: -10.826872825622559
    10. ' sum' → logprob: -10.826872825622559

Token 19: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.5769402980804443
    2. '(' → logprob: -0.8269402980804443
    3. '(n' → logprob: -7.951940536499023
    4. 's' → logprob: -8.451940536499023
    5. '('' → logprob: -8.701940536499023
    6. '<|end|>' → logprob: -9.076940536499023
    7. '()' → logprob: -9.826940536499023
    8. '("("' → logprob: -10.951940536499023
    9. '("")' → logprob: -11.826940536499023
    10. '((' → logprob: -11.951940536499023

Token 20: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13061200082302094
    2. '[' → logprob: -2.3806118965148926
    3. '[n' → logprob: -4.255611896514893
    4. '.strip' → logprob: -4.505611896514893
    5. '.split' → logprob: -6.630611896514893
    6. ')n' → logprob: -7.255611896514893
    7. '[int' → logprob: -7.505611896514893
    8. '[len' → logprob: -8.25561237335205
    9. '[])' → logprob: -8.38061237335205
    10. ')>' → logprob: -8.50561237335205

Token 21: ' -' (ID: 533)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0001757144927979
    2. '[' → logprob: -1.7501757144927979
    3. '[int' → logprob: -1.7501757144927979
    4. '[get' → logprob: -2.000175714492798
    5. '[n' → logprob: -2.750175714492798
    6. '(n' → logprob: -3.000175714492798
    7. '(get' → logprob: -4.375175476074219
    8. '(int' → logprob: -5.250175476074219
    9. '[
' → logprob: -5.875175476074219
    10. '[]' → logprob: -5.875175476074219

Token 22: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01252730842679739
    2. ' ' → logprob: -4.3875274658203125
    3. '0' → logprob: -11.512527465820312
    4. '2' → logprob: -13.262527465820312
    5. '  ' → logprob: -14.262527465820312
    6. '100' → logprob: -14.700027465820312
    7. '...' → logprob: -15.012527465820312
    8. '   ' → logprob: -15.012527465820312
    9. '10' → logprob: -15.075027465820312
    10. '<|end|>' → logprob: -15.262527465820312

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.77022064034827e-05
    2. ' ' → logprob: -9.250097274780273
    3. '2' → logprob: -15.125097274780273
    4. '0' → logprob: -15.437597274780273
    5. '100' → logprob: -16.125097274780273
    6. '  ' → logprob: -16.375097274780273
    7. '   ' → logprob: -16.687597274780273
    8. '4' → logprob: -16.812597274780273
    9. '10' → logprob: -16.812597274780273
    10. '3' → logprob: -17.250097274780273

Token 24: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: 'n' (ID: 77)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: ',' (ID: 11)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.4763777554035187
    2. '_' → logprob: -0.9763777256011963
    3. '[' → logprob: -6.851377964019775
    4. '<|end|>' → logprob: -7.601377964019775
    5. ')' → logprob: -8.976377487182617
    6. 'm' → logprob: -9.101377487182617
    7. '<|end|>' → logprob: -9.226377487182617
    8. ',' → logprob: -9.476377487182617
    9. ' _' → logprob: -9.601377487182617
    10. '_,' → logprob: -10.226377487182617

Token 27: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.3139546513557434
    2. 'm' → logprob: -1.3139545917510986
    3. '<|end|>' → logprob: -7.938954830169678
    4. ' ' → logprob: -8.31395435333252
    5. '_m' → logprob: -10.56395435333252
    6. '*m' → logprob: -11.18895435333252
    7. ' ' → logprob: -11.43895435333252
    8. ' *' → logprob: -11.68895435333252
    9. '<|end|>' → logprob: -12.06395435333252
    10. 'space' → logprob: -12.31395435333252

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12708339095115662
    2. '=' → logprob: -2.1270833015441895
    3. ',' → logprob: -8.877083778381348
    4. '<|end|>' → logprob: -11.877083778381348
    5. ' ' → logprob: -13.002083778381348
    6. ')' → logprob: -13.127083778381348
    7. ' ,' → logprob: -14.127083778381348
    8. ' =
' → logprob: -14.252083778381348
    9. '[' → logprob: -14.252083778381348
    10. '<|end|>' → logprob: -15.002083778381348

Token 29: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1687459647655487
    2. ' get' → logprob: -2.668745994567871
    3. 'map' → logprob: -2.793745994567871
    4. 'get' → logprob: -4.293745994567871
    5. ' int' → logprob: -4.793745994567871
    6. 'int' → logprob: -6.668745994567871
    7. ' list' → logprob: -7.168745994567871
    8. '[int' → logprob: -8.293745994567871
    9. '[get' → logprob: -8.418745994567871
    10. ' [' → logprob: -8.668745994567871

Token 30: '(int' (ID: 2742)
  Prédit: '(get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.5857254862785339
    2. '(int' → logprob: -0.8357254862785339
    3. '(' → logprob: -4.7107253074646
    4. '(lambda' → logprob: -7.9607253074646
    5. '(map' → logprob: -8.835725784301758
    6. 'get' → logprob: -9.710725784301758
    7. '(tuple' → logprob: -9.710725784301758
    8. '(list' → logprob: -10.335725784301758
    9. 'int' → logprob: -10.585725784301758
    10. '(input' → logprob: -10.960725784301758

Token 31: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08182264119386673
    2. ',' → logprob: -2.831822633743286
    3. '(' → logprob: -4.456822872161865
    4. ')' → logprob: -5.206822872161865
    5. ',n' → logprob: -6.831822872161865
    6. '(get' → logprob: -6.831822872161865
    7. 'n' → logprob: -8.706822395324707
    8. ',get' → logprob: -9.831822395324707
    9. ')(' → logprob: -9.956822395324707
    10. ')n' → logprob: -10.706822395324707

Token 32: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20144949853420258
    2. ' n' → logprob: -1.7014495134353638
    3. ')' → logprob: -11.326449394226074
    4. ')n' → logprob: -11.576449394226074
    5. ' )' → logprob: -12.701449394226074
    6. ' get' → logprob: -13.201449394226074
    7. ' ' → logprob: -13.326449394226074
    8. '(n' → logprob: -13.451449394226074
    9. 'get' → logprob: -13.576449394226074
    10. '    ' → logprob: -13.701449394226074

Token 33: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0002111694193445146
    2. '_' → logprob: -8.750210762023926
    3. '_)' → logprob: -10.625210762023926
    4. 'm' → logprob: -10.875210762023926
    5. ')' → logprob: -11.875210762023926
    6. '_n' → logprob: -14.000210762023926
    7. '_,' → logprob: -14.750210762023926
    8. ' _' → logprob: -15.250210762023926
    9. ',' → logprob: -15.750210762023926
    10. '_),' → logprob: -15.750210762023926

Token 34: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6286106983898208e-05
    2. ' )' → logprob: -11.500016212463379
    3. '))' → logprob: -12.750016212463379
    4. '[' → logprob: -13.750016212463379
    5. ')
' → logprob: -14.750016212463379
    6. ')`' → logprob: -14.875016212463379
    7. ')<' → logprob: -16.000017166137695
    8. ')

' → logprob: -16.250017166137695
    9. '`)' → logprob: -16.250017166137695
    10. '),' → logprob: -16.250017166137695

Token 35: 'perm' (ID: 34794)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: ' =' (ID: 314)
  Prédit: 'utation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utation' → logprob: -0.4751631021499634
    2. 'utations' → logprob: -1.1001631021499634
    3. '[' → logprob: -3.975162982940674
    4. 's' → logprob: -5.100162982940674
    5. ' =' → logprob: -5.350162982940674
    6. '_' → logprob: -5.475162982940674
    7. 'ut' → logprob: -5.600162982940674
    8. '=' → logprob: -5.850162982940674
    9. '=[]' → logprob: -7.350162982940674
    10. '[:]' → logprob: -7.600162982940674

Token 37: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.13314063847064972
    2. '[]' → logprob: -2.7581405639648438
    3. '[' → logprob: -3.5081405639648438
    4. 'range' → logprob: -3.7581405639648438
    5. '[list' → logprob: -5.258140563964844
    6. 'partial' → logprob: -6.633140563964844
    7. ' list' → logprob: -8.258140563964844
    8. 'lambda' → logprob: -8.383140563964844
    9. '[n' → logprob: -8.633140563964844
    10. '[*' → logprob: -9.008140563964844

Token 38: '(map' (ID: 16946)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.3494604527950287
    2. '(' → logprob: -1.224460482597351
    3. '(map' → logprob: -7.349460601806641
    4. '()' → logprob: -8.59946060180664
    5. '(int' → logprob: -10.09946060180664
    6. '(lambda' → logprob: -10.22446060180664
    7. '(per' → logprob: -10.59946060180664
    8. 'range' → logprob: -11.47446060180664
    9. '((' → logprob: -11.47446060180664
    10. '(
' → logprob: -11.59946060180664

Token 39: '(get' (ID: 7119)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10845640301704407
    2. '(' → logprob: -2.3584563732147217
    3. '<|end|>' → logprob: -5.608456611633301
    4. '(lambda' → logprob: -6.233456611633301
    5. ')' → logprob: -6.983456611633301
    6. 'int' → logprob: -7.358456611633301
    7. '(get' → logprob: -8.4834566116333
    8. '(eval' → logprob: -8.6084566116333
    9. '(
' → logprob: -8.6084566116333
    10. '(str' → logprob: -9.1084566116333

Token 40: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -1.8193366486229934e-05
    2. ')' → logprob: -12.000018119812012
    3. '_token' → logprob: -12.500018119812012
    4. 'num' → logprob: -13.125018119812012
    5. '_NUM' → logprob: -13.375018119812012
    6. '_number' → logprob: -13.625018119812012
    7. '_n' → logprob: -14.125018119812012
    8. '_' → logprob: -14.125018119812012
    9. ')_' → logprob: -15.125018119812012
    10. ',num' → logprob: -15.375018119812012

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12775221467018127
    2. ',input' → logprob: -2.1277523040771484
    3. 'input' → logprob: -7.627752304077148
    4. ' ,' → logprob: -9.127752304077148
    5. ',int' → logprob: -9.127752304077148
    6. '(input' → logprob: -9.627752304077148
    7. '(' → logprob: -11.252752304077148
    8. ' input' → logprob: -11.627752304077148
    9. '))' → logprob: -12.252752304077148
    10. ',(' → logprob: -12.377752304077148

Token 42: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00022189407900441438
    2. ' input' → logprob: -8.875222206115723
    3. 'range' → logprob: -10.000222206115723
    4. '(input' → logprob: -10.375222206115723
    5. '[input' → logprob: -13.000222206115723
    6. 'list' → logprob: -14.250222206115723
    7. '<input' → logprob: -14.375222206115723
    8. ')' → logprob: -14.750222206115723
    9. '   ' → logprob: -15.000222206115723
    10. ' ' → logprob: -15.625222206115723

Token 43: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.563330352306366
    2. '()' → logprob: -1.1883304119110107
    3. '()))' → logprob: -2.3133304119110107
    4. '())' → logprob: -4.063330173492432
    5. '())))' → logprob: -4.938330173492432
    6. '()));' → logprob: -6.063330173492432
    7. '());' → logprob: -9.56333065032959
    8. '()>' → logprob: -9.68833065032959
    9. '()-' → logprob: -10.68833065032959
    10. ')' → logprob: -11.18833065032959

Token 44: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.984787902794778e-05
    2. 'strip' → logprob: -9.750100135803223
    3. ' split' → logprob: -10.375100135803223
    4. '().' → logprob: -11.875100135803223
    5. ')' → logprob: -13.875100135803223
    6. 'rstrip' → logprob: -13.875100135803223
    7. ' ' → logprob: -14.625100135803223
    8. '()' → logprob: -14.875100135803223
    9. 'read' → logprob: -15.250100135803223
    10. '(split' → logprob: -15.500100135803223

Token 45: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02472219057381153
    2. '))' → logprob: -4.649722099304199
    3. '())' → logprob: -4.649722099304199
    4. '()' → logprob: -5.274722099304199
    5. ')' → logprob: -9.8997220993042
    6. '()))
' → logprob: -9.8997220993042
    7. '(' → logprob: -10.1497220993042
    8. '()))

' → logprob: -11.7747220993042
    9. '()));' → logprob: -12.0247220993042
    10. '(),' → logprob: -12.2747220993042

Token 46: 'spots' (ID: 102800)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8242798447608948
    2. 'p' → logprob: -1.57427978515625
    3. ')' → logprob: -1.82427978515625
    4. 'a' → logprob: -2.94927978515625
    5. '#' → logprob: -3.57427978515625
    6. '[' → logprob: -4.19927978515625
    7. 'result' → logprob: -4.69927978515625
    8. 'n' → logprob: -5.07427978515625
    9. 'q' → logprob: -5.07427978515625
    10. '\' → logprob: -5.19927978515625

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05518883094191551
    2. '=' → logprob: -2.9301888942718506
    3. '[' → logprob: -9.68018913269043
    4. ',' → logprob: -10.05518913269043
    5. '_' → logprob: -10.05518913269043
    6. '.' → logprob: -10.18018913269043
    7. '=[]' → logprob: -10.43018913269043
    8. ')' → logprob: -10.43018913269043
    9. '[:]' → logprob: -10.43018913269043
    10. '<|end|>' → logprob: -12.05518913269043

Token 48: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5265812873840332
    2. ' [' → logprob: -1.2765812873840332
    3. '[]' → logprob: -2.526581287384033
    4. 'list' → logprob: -3.776581287384033
    5. ' []' → logprob: -4.276581287384033
    6. ' list' → logprob: -4.651581287384033
    7. '[list' → logprob: -6.401581287384033
    8. '[n' → logprob: -7.401581287384033
    9. '[input' → logprob: -7.776581287384033
    10. '[m' → logprob: -8.151580810546875

Token 49: '42' (ID: 4689)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022129806166049093
    2. '2' → logprob: -9.250221252441406
    3. '-' → logprob: -9.875221252441406
    4. '(' → logprob: -11.250221252441406
    5. 'm' → logprob: -11.375221252441406
    6. '10' → logprob: -11.375221252441406
    7. '100' → logprob: -11.750221252441406
    8. '(-' → logprob: -12.562721252441406
    9. ' ' → logprob: -12.812721252441406
    10. 'n' → logprob: -12.937721252441406

Token 50: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013601898215711117
    2. ']*' → logprob: -5.013601779937744
    3. ' for' → logprob: -5.763601779937744
    4. '7' → logprob: -7.013601779937744
    5. '42' → logprob: -7.138601779937744
    6. ' ]' → logprob: -7.638601779937744
    7. ',' → logprob: -7.888601779937744
    8. '2' → logprob: -8.388602256774902
    9. '1' → logprob: -8.513602256774902
    10. '4' → logprob: -9.013602256774902

Token 51: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.025506678968667984
    2. 'range' → logprob: -4.025506496429443
    3. ' range' → logprob: -5.400506496429443
    4. ' _' → logprob: -6.150506496429443
    5. '_range' → logprob: -7.650506496429443
    6. 'i' → logprob: -8.900506973266602
    7. ' i' → logprob: -11.025506973266602
    8. 'in' → logprob: -11.275506973266602
    9. ' in' → logprob: -11.775506973266602
    10. ' ' → logprob: -11.900506973266602

Token 52: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1130218505859375
    2. ' range' → logprob: -2.3630218505859375
    3. '_' → logprob: -4.8630218505859375
    4. 'in' → logprob: -5.8630218505859375
    5. ' in' → logprob: -6.8630218505859375
    6. ' ' → logprob: -8.113021850585938
    7. 'spots' → logprob: -8.363021850585938
    8. ' _' → logprob: -8.613021850585938
    9. 'perm' → logprob: -9.363021850585938
    10. ' spots' → logprob: -9.488021850585938

Token 53: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012648909352719784
    2. ' range' → logprob: -4.387649059295654
    3. 'perm' → logprob: -9.387648582458496
    4. 'n' → logprob: -11.887648582458496
    5. '[' → logprob: -12.012648582458496
    6. '	range' → logprob: -12.137648582458496
    7. 'per' → logprob: -12.512648582458496
    8. 'rang' → logprob: -12.512648582458496
    9. '(range' → logprob: -12.637648582458496
    10. 'ran' → logprob: -12.887648582458496

Token 54: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005100341513752937
    2. '(m' → logprob: -5.630100250244141
    3. '(' → logprob: -6.505100250244141
    4. ')' → logprob: -14.38010025024414
    5. '(
' → logprob: -14.38010025024414
    6. ' (' → logprob: -14.63010025024414
    7. '((' → logprob: -14.88010025024414
    8. 'n' → logprob: -14.88010025024414
    9. 'm' → logprob: -15.00510025024414
    10. ')n' → logprob: -15.63010025024414

Token 55: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00015312091272789985
    2. ')' → logprob: -10.000153541564941
    3. ')]
' → logprob: -10.125153541564941
    4. ')])' → logprob: -10.125153541564941
    5. ']' → logprob: -11.375153541564941
    6. '])' → logprob: -12.125153541564941
    7. '])]' → logprob: -12.125153541564941
    8. ' )' → logprob: -13.750153541564941
    9. ')],' → logprob: -13.875153541564941
    10. ')]

' → logprob: -14.125153541564941

Token 56: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07143193483352661
    2. '\n' → logprob: -3.696431875228882
    3. '<|end|>' → logprob: -4.321432113647461
    4. 'for' → logprob: -4.571432113647461
    5. ' 
' → logprob: -5.321432113647461
    6. '
' → logprob: -6.196432113647461
    7. '```' → logprob: -6.571432113647461
    8. '  
' → logprob: -6.571432113647461
    9. ' for' → logprob: -6.696432113647461
    10. '[' → logprob: -6.696432113647461

Token 57: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02015361562371254
    2. '
' → logprob: -5.020153522491455
    3. 'for' → logprob: -5.395153522491455
    4. '<|end|>' → logprob: -6.020153522491455
    5. '\n' → logprob: -6.270153522491455
    6. ' 
' → logprob: -7.020153522491455
    7. '```' → logprob: -7.270153522491455
    8. ' for' → logprob: -7.770153522491455
    9. '#' → logprob: -8.020153999328613
    10. '  
' → logprob: -8.270153999328613

Token 58: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44593745470046997
    2. '<|end|>' → logprob: -1.0709373950958252
    3. '#' → logprob: -5.320937633514404
    4. '<|end|>' → logprob: -5.820937633514404
    5. ' spots' → logprob: -6.820937633514404
    6. ' 
' → logprob: -7.070937633514404
    7. ' #' → logprob: -7.070937633514404
    8. '0' → logprob: -7.195937633514404
    9. '_' → logprob: -7.195937633514404
    10. ' n' → logprob: -7.570937633514404

Token 59: '42' (ID: 4689)
  Prédit: '42'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '42' → logprob: -0.05490146577358246
    2. '43' → logprob: -3.429901361465454
    3. '1' → logprob: -3.929901361465454
    4. ' ' → logprob: -7.679901599884033
    5. '100' → logprob: -8.617401123046875
    6. 'in' → logprob: -9.054901123046875
    7. '<|end|>' → logprob: -9.617401123046875
    8. '999' → logprob: -9.929901123046875
    9. '2' → logprob: -10.117401123046875
    10. 'inf' → logprob: -10.179901123046875

Token 60: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' personal' (ID: 3832)
  Prédit: ' empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' empty' → logprob: -0.8808513283729553
    2. ' un' → logprob: -1.5058512687683105
    3. ' unknown' → logprob: -2.1308512687683105
    4. ' spots' → logprob: -2.7558512687683105
    5. ' free' → logprob: -3.3808512687683105
    6. ' not' → logprob: -3.3808512687683105
    7. ' no' → logprob: -4.2558512687683105
    8. ' unavailable' → logprob: -4.3808512687683105
    9. ' ' → logprob: -4.6308512687683105
    10. 'empty' → logprob: -4.8808512687683105

Token 62: ' flavor' (ID: 23341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6117194890975952
    2. '\n' → logprob: -1.7367194890975952
    3. '<|end|>' → logprob: -2.1117196083068848
    4. '
' → logprob: -3.2367196083068848
    5. ' for' → logprob: -3.6117196083068848
    6. ' 
' → logprob: -3.7367196083068848
    7. 'for' → logprob: -3.7367196083068848
    8. '' → logprob: -4.736719608306885
    9. '  
' → logprob: -5.111719608306885
    10. '[' → logprob: -5.361719608306885

Token 64: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.031669981777668
    2. ' for' → logprob: -4.531670093536377
    3. 'i' → logprob: -5.281670093536377
    4. 'pos' → logprob: -6.281670093536377
    5. 'p' → logprob: -6.406670093536377
    6. 'idx' → logprob: -6.531670093536377
    7. 'spots' → logprob: -7.031670093536377
    8. 'def' → logprob: -7.281670093536377
    9. 'positions' → logprob: -7.281670093536377
    10. 'perm' → logprob: -7.406670093536377

Token 65: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46878060698509216
    2. ' =' → logprob: -1.3437806367874146
    3. 'nd' → logprob: -2.593780517578125
    4. 'f' → logprob: -3.468780517578125
    5. 'n' → logprob: -5.343780517578125
    6. 'd' → logprob: -7.093780517578125
    7. 'dx' → logprob: -7.718780517578125
    8. 'nt' → logprob: -7.968780517578125
    9. 's' → logprob: -8.093780517578125
    10. '_' → logprob: -8.968780517578125

Token 66: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007772013545036316
    2. ' ' → logprob: -4.882771968841553
    3. '1' → logprob: -10.007772445678711
    4. ' m' → logprob: -10.132772445678711
    5. 'm' → logprob: -10.132772445678711
    6. 'n' → logprob: -11.132772445678711
    7. '42' → logprob: -12.257772445678711
    8. '-' → logprob: -12.382772445678711
    9. ' n' → logprob: -12.382772445678711
    10. 'perm' → logprob: -12.507772445678711

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004720257129520178
    2. ' ' → logprob: -5.504720211029053
    3. 'n' → logprob: -8.754720687866211
    4. '1' → logprob: -8.879720687866211
    5. 'm' → logprob: -8.879720687866211
    6. 'perm' → logprob: -9.879720687866211
    7. '42' → logprob: -10.004720687866211
    8. '-' → logprob: -10.504720687866211
    9. ' m' → logprob: -11.379720687866211
    10. 'len' → logprob: -11.379720687866211

Token 68: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9738559126853943
    2. '<|end|>' → logprob: -0.9738559126853943
    3. 'while' → logprob: -2.348855972290039
    4. '\n' → logprob: -3.098855972290039
    5. ' 
' → logprob: -3.473855972290039
    6. ' while' → logprob: -3.598855972290039
    7. ' ' → logprob: -4.098855972290039
    8. '<|end|>' → logprob: -5.223855972290039
    9. '  
' → logprob: -5.348855972290039
    10. ',' → logprob: -5.848855972290039

Token 69: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07135845720767975
    2. ' while' → logprob: -2.6963584423065186
    3. 'w' → logprob: -7.946358680725098
    4. '
' → logprob: -8.696358680725098
    5. '```' → logprob: -8.696358680725098
    6. 'for' → logprob: -9.071358680725098
    7. '\n' → logprob: -9.321358680725098
    8. 'While' → logprob: -10.071358680725098
    9. '<|end|>' → logprob: -10.196358680725098
    10. '	while' → logprob: -10.321358680725098

Token 70: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008934690617024899
    2. 'i' → logprob: -4.758934497833252
    3. ' spots' → logprob: -9.13393497467041
    4. ' True' → logprob: -9.25893497467041
    5. 'True' → logprob: -10.38393497467041
    6. '(i' → logprob: -10.75893497467041
    7. ' ' → logprob: -11.00893497467041
    8. ' not' → logprob: -11.13393497467041
    9. 'perm' → logprob: -11.50893497467041
    10. ' perm' → logprob: -11.88393497467041

Token 71: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.09019625186920166
    2. '<' → logprob: -2.465196132659912
    3. '<n' → logprob: -7.215196132659912
    4. '<len' → logprob: -8.71519660949707
    5. ' <=' → logprob: -8.84019660949707
    6. ' ' → logprob: -8.84019660949707
    7. '<=' → logprob: -10.46519660949707
    8. '<m' → logprob: -10.84019660949707
    9. ' less' → logprob: -11.84019660949707
    10. '[' → logprob: -13.09019660949707

Token 72: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7270843386650085
    2. 'n' → logprob: -1.2270843982696533
    3. ' n' → logprob: -1.9770843982696533
    4. ' m' → logprob: -2.4770843982696533
    5. ' len' → logprob: -7.852084159851074
    6. 'len' → logprob: -7.852084159851074
    7. ' ' → logprob: -8.227084159851074
    8. '  ' → logprob: -11.727084159851074
    9. '   ' → logprob: -12.227084159851074
    10. '	n' → logprob: -12.352084159851074

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4955054521560669
    2. ' and' → logprob: -0.9955054521560669
    3. 'and' → logprob: -4.245505332946777
    4. ' :' → logprob: -4.995505332946777
    5. ':
' → logprob: -9.745505332946777
    6. ' ' → logprob: -11.245505332946777
    7. ':**' → logprob: -12.245505332946777
    8. ',' → logprob: -12.745505332946777
    9. '):' → logprob: -12.995505332946777
    10. ' :
' → logprob: -13.120505332946777

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1577785462141037
    2. ' if' → logprob: -2.53277850151062
    3. ' ' → logprob: -4.032778739929199
    4. '    ' → logprob: -4.407778739929199
    5. ' spots' → logprob: -4.532778739929199
    6. ' s' → logprob: -5.157778739929199
    7. '    
' → logprob: -5.657778739929199
    8. ' 
' → logprob: -5.907778739929199
    9. '<|end|>' → logprob: -6.157778739929199
    10. ' i' → logprob: -6.407778739929199

Token 75: ' spots' (ID: 25522)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22672274708747864
    2. 'if' → logprob: -2.4767227172851562
    3. '   ' → logprob: -3.4767227172851562
    4. ' spots' → logprob: -3.8517227172851562
    5. ' j' → logprob: -4.976722717285156
    6. 'j' → logprob: -5.351722717285156
    7. ' current' → logprob: -5.476722717285156
    8. 'pos' → logprob: -5.601722717285156
    9. ' p' → logprob: -5.726722717285156
    10. ' next' → logprob: -5.726722717285156

Token 76: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08927422761917114
    2. '[i' → logprob: -2.4642741680145264
    3. '==' → logprob: -10.214274406433105
    4. '[n' → logprob: -10.214274406433105
    5. 'perm' → logprob: -10.339274406433105
    6. '[pos' → logprob: -10.589274406433105
    7. ' [' → logprob: -10.839274406433105
    8. '[m' → logprob: -11.214274406433105
    9. '[temp' → logprob: -11.464274406433105
    10. '][' → logprob: -11.589274406433105

Token 77: 'perm' (ID: 34794)
  Prédit: 'perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.003618720220401883
    2. ' perm' → logprob: -5.8786187171936035
    3. 'i' → logprob: -7.3786187171936035
    4. ']' → logprob: -9.878619194030762
    5. '[' → logprob: -10.003619194030762
    6. 'per' → logprob: -10.628619194030762
    7. ' i' → logprob: -10.753619194030762
    8. '[i' → logprob: -11.003619194030762
    9. 'n' → logprob: -11.503619194030762
    10. 'perf' → logprob: -13.003619194030762

Token 78: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001434690784662962
    2. '[' → logprob: -9.000143051147461
    3. ']' → logprob: -11.250143051147461
    4. 'i' → logprob: -13.375143051147461
    5. '[
' → logprob: -13.625143051147461
    6. ' [' → logprob: -13.750143051147461
    7. '```' → logprob: -14.125143051147461
    8. ' ' → logprob: -14.625143051147461
    9. '[I' → logprob: -14.875143051147461
    10. '][' → logprob: -15.000143051147461

Token 79: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.10163023322820663
    2. ']' → logprob: -2.351630210876465
    3. ']]=' → logprob: -7.476630210876465
    4. ' ]]' → logprob: -8.226630210876465
    5. ']]]' → logprob: -9.101630210876465
    6. ']+' → logprob: -9.476630210876465
    7. ']=' → logprob: -9.601630210876465
    8. '']]' → logprob: -9.726630210876465
    9. ')]' → logprob: -9.851630210876465
    10. '-' → logprob: -10.476630210876465

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11391941457986832
    2. '=' → logprob: -2.238919496536255
    3. ' ' → logprob: -7.113919258117676
    4. '<|end|>' → logprob: -8.738919258117676
    5. ',' → logprob: -9.988919258117676
    6. ' ==' → logprob: -10.738919258117676
    7. ')' → logprob: -11.238919258117676
    8. '=i' → logprob: -11.613919258117676
    9. '<|end|>' → logprob: -11.863919258117676
    10. ' !=' → logprob: -12.238919258117676

Token 81: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008772778091952205
    2. ' i' → logprob: -7.125877380371094
    3. '<|end|>' → logprob: -11.000877380371094
    4. 'm' → logprob: -11.250877380371094
    5. 'n' → logprob: -11.250877380371094
    6. '0' → logprob: -11.625877380371094
    7. ' ' → logprob: -11.875877380371094
    8. 'perm' → logprob: -12.375877380371094
    9. '   ' → logprob: -13.500877380371094
    10. '	i' → logprob: -13.625877380371094

Token 82: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08479500561952591
    2. '+' → logprob: -3.8347949981689453
    3. ' 
' → logprob: -4.209794998168945
    4. '\n' → logprob: -4.334794998168945
    5. ' i' → logprob: -4.584794998168945
    6. '   ' → logprob: -5.084794998168945
    7. 'i' → logprob: -5.209794998168945
    8. '    
' → logprob: -5.709794998168945
    9. '  
' → logprob: -6.584794998168945
    10. '+i' → logprob: -6.834794998168945

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3771373927593231
    2. ' i' → logprob: -1.5021374225616455
    3. '
' → logprob: -2.7521374225616455
    4. 'i' → logprob: -4.502137184143066
    5. '\n' → logprob: -5.127137184143066
    6. '```' → logprob: -6.252137184143066
    7. '    
' → logprob: -6.502137184143066
    8. ' 
' → logprob: -6.502137184143066
    9. '	i' → logprob: -6.502137184143066
    10. '[i' → logprob: -6.752137184143066

Token 84: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4295491576194763
    2. 'i' (adapté à ' i') → logprob: -1.929549217224121
    3. '
' → logprob: -2.554549217224121
    4. '   ' → logprob: -2.804549217224121
    5. '+' → logprob: -3.929549217224121
    6. '	i' → logprob: -4.179549217224121
    7. '\n' → logprob: -5.054549217224121
    8. ' 
' → logprob: -5.179549217224121
    9. ' ' → logprob: -5.179549217224121
    10. '[i' → logprob: -6.179549217224121

Token 85: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.055239930748939514
    2. '+=' → logprob: -3.0552399158477783
    3. ' +=' → logprob: -5.055240154266357
    4. ' +' → logprob: -8.4302396774292
    5. '<|end|>' → logprob: -11.0552396774292
    6. '=' → logprob: -11.8052396774292
    7. ' ' → logprob: -12.0552396774292
    8. '++' → logprob: -12.8052396774292
    9. '+++' → logprob: -13.5552396774292
    10. '+="' → logprob: -13.8052396774292

Token 86: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024758970830589533
    2. ' ' → logprob: -6.002475738525391
    3. '<|end|>' → logprob: -16.00247573852539
    4. '+' → logprob: -16.25247573852539
    5. '```' → logprob: -17.06497573852539
    6. '0' → logprob: -17.87747573852539
    7. ' ' → logprob: -18.31497573852539
    8. '۱' → logprob: -18.31497573852539
    9. '１' → logprob: -18.62747573852539
    10. '2' → logprob: -19.00247573852539

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -18.2500057220459
    4. '+' → logprob: -19.1875057220459
    5. '2' → logprob: -20.3125057220459
    6. '<|end|>' → logprob: -20.4375057220459
    7. '   ' → logprob: -20.5000057220459
    8. '１' → logprob: -20.5625057220459
    9. '۱' → logprob: -20.9375057220459
    10. '0' → logprob: -21.1250057220459

Token 88: '

' (ID: 279)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.711895227432251
    2. 'for' → logprob: -1.711895227432251
    3. 'n' → logprob: -2.211895227432251
    4. 'while' → logprob: -3.086895227432251
    5. 'p' → logprob: -3.211895227432251
    6. '
' → logprob: -3.711895227432251
    7. 'print' → logprob: -3.836895227432251
    8. '#' → logprob: -3.961895227432251
    9. '\n' → logprob: -4.961894989013672
    10. 'b' → logprob: -5.461894989013672

Token 89: 'root' (ID: 5488)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5057592988014221
    2. 'for' → logprob: -2.0057592391967773
    3. 'p' → logprob: -2.1307592391967773
    4. 'q' → logprob: -3.3807592391967773
    5. 'n' → logprob: -4.255759239196777
    6. 'j' → logprob: -4.380759239196777
    7. 'a' → logprob: -4.505759239196777
    8. 'k' → logprob: -4.505759239196777
    9. 'while' → logprob: -4.880759239196777
    10. 'b' → logprob: -5.130759239196777

Token 90: 'z' (ID: 89)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7432881593704224
    2. 's' → logprob: -1.1182881593704224
    3. '_' → logprob: -1.8682881593704224
    4. '=' → logprob: -3.368288040161133
    5. '(' → logprob: -5.993288040161133
    6. ')' → logprob: -6.243288040161133
    7. ' ' → logprob: -7.493288040161133
    8. '.' → logprob: -7.493288040161133
    9. ',' → logprob: -7.743288040161133
    10. '_s' → logprob: -7.868288040161133

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4353998601436615
    2. 's' → logprob: -1.8103998899459839
    3. '=' → logprob: -2.1853997707366943
    4. '_' → logprob: -2.6853997707366943
    5. '[' → logprob: -5.560400009155273
    6. '(' → logprob: -6.435400009155273
    7. 'es' → logprob: -7.435400009155273
    8. ')' → logprob: -7.685400009155273
    9. '_s' → logprob: -7.685400009155273
    10. '[:]' → logprob: -8.435400009155273

Token 92: ' [_' (ID: 38766)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7058126330375671
    2. ' [' → logprob: -1.580812692642212
    3. '[' → logprob: -1.705812692642212
    4. ' []' → logprob: -2.830812692642212
    5. 'set' → logprob: -4.330812454223633
    6. '[n' → logprob: -4.955812454223633
    7. '0' → logprob: -5.080812454223633
    8. '[-' → logprob: -5.205812454223633
    9. '[i' → logprob: -5.455812454223633
    10. 'range' → logprob: -6.080812454223633

Token 93: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.497526079416275
    2. ' for' → logprob: -1.2475260496139526
    3. '-' → logprob: -2.622526168823242
    4. 'i' → logprob: -4.747526168823242
    5. ']' → logprob: -4.997526168823242
    6. '0' → logprob: -5.372526168823242
    7. '[]' → logprob: -5.747526168823242
    8. 'f' → logprob: -6.622526168823242
    9. ' -' → logprob: -6.747526168823242
    10. '#' → logprob: -7.747526168823242

Token 94: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5365450978279114
    2. 'range' → logprob: -1.1615450382232666
    3. '_' → logprob: -2.2865450382232666
    4. ' _' → logprob: -7.536545276641846
    5. ' in' → logprob: -10.161544799804688
    6. '_range' → logprob: -10.411544799804688
    7. '(range' → logprob: -12.411544799804688
    8. ' ' → logprob: -12.536544799804688
    9. '	range' → logprob: -13.536544799804688
    10. 'in' → logprob: -13.536544799804688

Token 95: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6952328085899353
    2. ' in' → logprob: -0.6952328085899353
    3. 'range' → logprob: -6.32023286819458
    4. ' range' → logprob: -8.445232391357422
    5. ' ' → logprob: -9.695232391357422
    6. '(range' → logprob: -12.695232391357422
    7. '  ' → logprob: -13.195232391357422
    8. '_' → logprob: -14.070232391357422
    9. '0' → logprob: -15.320232391357422
    10. 'import' → logprob: -15.570232391357422

Token 96: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020544808357954025
    2. ' range' → logprob: -3.8955447673797607
    3. 'spots' → logprob: -13.89554500579834
    4. '(range' → logprob: -14.89554500579834
    5. '	range' → logprob: -15.27054500579834
    6. ' ' → logprob: -15.27054500579834
    7. 'rang' → logprob: -15.39554500579834
    8. 'r' → logprob: -15.77054500579834
    9. 'ran' → logprob: -16.020544052124023
    10. '  ' → logprob: -16.520544052124023

Token 97: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0013159511145204306
    2. '(m' → logprob: -7.376316070556641
    3. 'n' → logprob: -7.876316070556641
    4. '(' → logprob: -8.25131607055664
    5. ' (' → logprob: -10.25131607055664
    6. ' n' → logprob: -12.00131607055664
    7. 'm' → logprob: -12.37631607055664
    8. '(len' → logprob: -13.00131607055664
    9. '((' → logprob: -15.62631607055664
    10. '(
' → logprob: -16.37631607055664

Token 98: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.001243444043211639
    2. ']' → logprob: -6.751243591308594
    3. ')' → logprob: -9.626243591308594
    4. ')]
' → logprob: -13.001243591308594
    5. ' )' → logprob: -13.376243591308594
    6. ' ]' → logprob: -13.376243591308594
    7. '])' → logprob: -14.376243591308594
    8. '}]' → logprob: -15.001243591308594
    9. '])]' → logprob: -15.376243591308594
    10. ')],' → logprob: -15.501243591308594

Token 99: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00696767820045352
    2. 'parent' → logprob: -5.256967544555664
    3. 'rank' → logprob: -6.631967544555664
    4. 'find' → logprob: -8.756967544555664
    5. 'par' → logprob: -10.006967544555664
    6. 'p' → logprob: -10.631967544555664
    7. 'size' → logprob: -10.756967544555664
    8. 'root' → logprob: -10.756967544555664
    9. 'parents' → logprob: -10.881967544555664
    10. '```' → logprob: -10.881967544555664

Token 100: ' z' (ID: 579)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.2891797423362732
    2. 'find' → logprob: -1.539179801940918
    3. ' root' → logprob: -4.039179801940918
    4. 'root' → logprob: -4.289179801940918
    5. ' union' → logprob: -5.914179801940918
    6. 'union' → logprob: -7.039179801940918
    7. ' get' → logprob: -7.914179801940918
    8. 'get' → logprob: -8.039179801940918
    9. '_find' → logprob: -8.914179801940918
    10. 'roots' → logprob: -9.539179801940918

Token 101: 'find' (ID: 6555)
  Prédit: '_find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_find' → logprob: -0.4268651306629181
    2. 'find' → logprob: -2.1768651008605957
    3. 'ip' → logprob: -2.4268651008605957
    4. '_union' → logprob: -2.6768651008605957
    5. 'a' → logprob: -4.301865100860596
    6. '_func' → logprob: -4.426865100860596
    7. 'union' → logprob: -4.551865100860596
    8. '_function' → logprob: -5.426865100860596
    9. '_' → logprob: -5.676865100860596
    10. '_root' → logprob: -5.926865100860596

Token 102: '(w' (ID: 7420)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.008321534842252731
    2. '(' → logprob: -5.508321762084961
    3. '(root' → logprob: -6.008321762084961
    4. '(a' → logprob: -6.758321762084961
    5. '(p' → logprob: -8.508321762084961
    6. '(u' → logprob: -9.258321762084961
    7. '(node' → logprob: -9.258321762084961
    8. '(r' → logprob: -9.258321762084961
    9. '(v' → logprob: -9.883321762084961
    10. '(z' → logprob: -10.508321762084961

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023361360654234886
    2. 'root' → logprob: -4.2733612060546875
    3. ')' → logprob: -5.5233612060546875
    4. 'u' → logprob: -6.5233612060546875
    5. '):
' → logprob: -7.3983612060546875
    6. '_root' → logprob: -7.3983612060546875
    7. '(x' → logprob: -7.5233612060546875
    8. 'x' → logprob: -7.6483612060546875
    9. 'a' → logprob: -8.023361206054688
    10. '(' → logprob: -8.523361206054688

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4099177122116089
    2. ' if' → logprob: -1.1599177122116089
    3. ' while' → logprob: -3.9099178314208984
    4. 'if' → logprob: -6.284917831420898
    5. ' ' → logprob: -7.534917831420898
    6. '	if' → logprob: -9.159917831420898
    7. 'while' → logprob: -9.784917831420898
    8. 'i' → logprob: -10.159917831420898
    9. '  ' → logprob: -10.159917831420898
    10. ' i' → logprob: -10.659917831420898

Token 105: ' p' (ID: 275)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08876015245914459
    2. 'while' → logprob: -2.8387601375579834
    3. ' if' → logprob: -3.9637601375579834
    4. ' while' → logprob: -5.3387603759765625
    5. 'p' (adapté à ' p') → logprob: -6.2137603759765625
    6. 'r' → logprob: -7.7137603759765625
    7. 'root' → logprob: -9.213760375976562
    8. 'return' → logprob: -10.963760375976562
    9. '   ' → logprob: -11.463760375976562
    10. ' p' → logprob: -11.463760375976562

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3339906930923462
    2. '=' → logprob: -1.3339906930923462
    3. 'ar' → logprob: -5.083990573883057
    4. '=root' → logprob: -5.083990573883057
    5. 'root' → logprob: -5.208990573883057
    6. '=w' → logprob: -6.833990573883057
    7. 'def' → logprob: -7.833990573883057
    8. 'w' → logprob: -8.083991050720215
    9. '_root' → logprob: -8.333991050720215
    10. '=p' → logprob: -8.583991050720215

Token 107: ' root' (ID: 6577)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.044767554849386215
    2. 'root' → logprob: -3.1697676181793213
    3. ' root' → logprob: -6.919767379760742
    4. ' w' → logprob: -7.169767379760742
    5. 'roots' → logprob: -13.294767379760742
    6. ' ' → logprob: -13.419767379760742
    7. 'parent' → logprob: -13.919767379760742
    8. '[root' → logprob: -14.044767379760742
    9. '	w' → logprob: -14.232267379760742
    10. '	root' → logprob: -14.294767379760742

Token 108: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -5.319370302458992e-06
    2. 's' → logprob: -13.375005722045898
    3. 'w' → logprob: -13.875005722045898
    4. '[root' → logprob: -14.000005722045898
    5. 'root' → logprob: -14.250005722045898
    6. 'roots' → logprob: -15.125005722045898
    7. 'з' → logprob: -15.250005722045898
    8. '[z' → logprob: -15.375005722045898
    9. '```' → logprob: -15.625005722045898
    10. 'x' → logprob: -16.5000057220459

Token 109: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -8.2994620242971e-06
    2. 'w' → logprob: -11.875008583068848
    3. '[p' → logprob: -13.750008583068848
    4. '[' → logprob: -15.625008583068848
    5. '	w' → logprob: -18.12500762939453
    6. '[word' → logprob: -19.25000762939453
    7. '(w' → logprob: -19.37500762939453
    8. '[u' → logprob: -19.50000762939453
    9. '[root' → logprob: -19.50000762939453
    10. '[
' → logprob: -20.00000762939453

Token 110: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.25299495458602905
    2. ']' → logprob: -1.5029950141906738
    3. ']
' → logprob: -7.127995014190674
    4. ')
' → logprob: -9.377994537353516
    5. ']

' → logprob: -9.377994537353516
    6. ')' → logprob: -10.627994537353516
    7. ' ]
' → logprob: -10.752994537353516
    8. ' ]' → logprob: -11.002994537353516
    9. '])' → logprob: -11.002994537353516
    10. '])
' → logprob: -11.752994537353516

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5544817447662354
    2. ' if' → logprob: -1.6794817447662354
    3. ' while' → logprob: -1.8044817447662354
    4. 'while' → logprob: -3.1794817447662354
    5. 'if' → logprob: -3.9294817447662354
    6. '
' → logprob: -4.679481506347656
    7. '<|end|>' → logprob: -6.679481506347656
    8. ' ' → logprob: -6.679481506347656
    9. '	while' → logprob: -7.804481506347656
    10. '  ' → logprob: -8.429481506347656

Token 112: ' if' (ID: 538)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6170754432678223
    2. 'while' → logprob: -1.4920754432678223
    3. '   ' → logprob: -1.6170754432678223
    4. ' if' → logprob: -3.7420754432678223
    5. 'if' (adapté à ' if') → logprob: -4.367075443267822
    6. ' ' → logprob: -7.617075443267822
    7. '
' → logprob: -9.742074966430664
    8. '	while' → logprob: -9.992074966430664
    9. '  ' → logprob: -10.367074966430664
    10. '    ' → logprob: -10.867074966430664

Token 113: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.012538257986307144
    2. ' p' → logprob: -4.387538433074951
    3. 'w' → logprob: -10.637537956237793
    4. 'root' → logprob: -13.012537956237793
    5. ' root' → logprob: -13.262537956237793
    6. ' w' → logprob: -14.762537956237793
    7. ' ' → logprob: -15.637537956237793
    8. '	p' → logprob: -16.63753890991211
    9. '   ' → logprob: -17.38753890991211
    10. ' ' → logprob: -18.51253890991211

Token 114: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3931170105934143
    2. '==' → logprob: -1.1431169509887695
    3. ' !=' → logprob: -5.3931169509887695
    4. ' ==' → logprob: -6.3931169509887695
    5. '=' → logprob: -12.51811695098877
    6. ' ' → logprob: -14.26811695098877
    7. '==
' → logprob: -14.39311695098877
    8. '!==' → logprob: -15.14311695098877
    9. '===' → logprob: -15.89311695098877
    10. ' ' → logprob: -16.143117904663086

Token 115: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.676292231422849e-05
    2. ' w' → logprob: -11.000017166137695
    3. '   ' → logprob: -18.875017166137695
    4. '	w' → logprob: -19.375017166137695
    5. ' ' → logprob: -19.625017166137695
    6. '
' → logprob: -20.125017166137695
    7. '_w' → logprob: -20.750017166137695
    8. '  ' → logprob: -21.875017166137695
    9. 'root' → logprob: -22.125017166137695
    10. '<w' → logprob: -22.125017166137695

Token 116: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49826112389564514
    2. ':
' → logprob: -0.9982610940933228
    3. ':return' → logprob: -3.7482612133026123
    4. '   ' → logprob: -8.248261451721191
    5. ' return' → logprob: -10.373261451721191
    6. 'return' → logprob: -11.748261451721191
    7. '):
' → logprob: -11.748261451721191
    8. ' :' → logprob: -11.748261451721191
    9. '):' → logprob: -12.123261451721191
    10. ' :
' → logprob: -12.873261451721191

Token 117: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12180456519126892
    2. ' return' → logprob: -2.2468044757843018
    3. 'return' → logprob: -4.871804714202881
    4. '   ' → logprob: -6.746804714202881
    5. '	return' → logprob: -9.621804237365723
    6. ':return' → logprob: -10.871804237365723
    7. ',' → logprob: -12.246804237365723
    8. '	' → logprob: -12.996804237365723
    9. '	   ' → logprob: -13.246804237365723
    10. ' ' → logprob: -13.246804237365723

Token 118: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0006348780007101595
    2. ' w' → logprob: -7.750634670257568
    3. 'p' → logprob: -8.500635147094727
    4. ' p' → logprob: -14.375635147094727
    5. ' ' → logprob: -16.125635147094727
    6. '   ' → logprob: -16.875635147094727
    7. '	w' → logprob: -16.875635147094727
    8. '  ' → logprob: -18.750635147094727
    9. '[w' → logprob: -19.500635147094727
    10. 'root' → logprob: -19.625635147094727

Token 119: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00026288547087460756
    2. '
' → logprob: -9.250263214111328
    3. '    
' → logprob: -9.500263214111328
    4. 'p' → logprob: -10.625263214111328
    5. ' p' → logprob: -11.125263214111328
    6. ' while' → logprob: -11.375263214111328
    7. 'while' → logprob: -12.000263214111328
    8. 'root' → logprob: -12.125263214111328
    9. 's' → logprob: -12.125263214111328
    10. ' 
' → logprob: -12.500263214111328

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3564818799495697
    2. ' root' → logprob: -1.856481909751892
    3. 'root' → logprob: -1.981481909751892
    4. 'else' → logprob: -6.106482028961182
    5. ' else' → logprob: -6.981482028961182
    6. '
' → logprob: -7.231482028961182
    7. 'p' → logprob: -7.606482028961182
    8. ' p' → logprob: -7.606482028961182
    9. '    
' → logprob: -8.231481552124023
    10. ' ' → logprob: -8.731481552124023

Token 121: ' q' (ID: 2335)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.1237611323595047
    2. ' root' → logprob: -2.2487611770629883
    3. '   ' → logprob: -4.623761177062988
    4. 'else' → logprob: -7.998761177062988
    5. 'return' → logprob: -8.373761177062988
    6. '
' → logprob: -8.623761177062988
    7. 'r' → logprob: -9.748761177062988
    8. ' else' → logprob: -9.873761177062988
    9. '    
' → logprob: -10.248761177062988
    10. 'z' → logprob: -10.498761177062988

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14269499480724335
    2. '=' → logprob: -2.0176949501037598
    3. '=root' → logprob: -11.392695426940918
    4. ' ' → logprob: -12.517695426940918
    5. ' =
' → logprob: -13.517695426940918
    6. ',' → logprob: -13.767695426940918
    7. '=find' → logprob: -14.392695426940918
    8. ')' → logprob: -14.892695426940918
    9. '=get' → logprob: -15.392695426940918
    10. '=
' → logprob: -15.767695426940918

Token 123: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.015425324440002441
    2. 'root' → logprob: -4.890425205230713
    3. ' z' → logprob: -4.890425205230713
    4. ' root' → logprob: -8.265425682067871
    5. '   ' → logprob: -11.890425682067871
    6. ' ' → logprob: -13.515425682067871
    7. '	z' → logprob: -14.140425682067871
    8. '
' → logprob: -14.515425682067871
    9. '  ' → logprob: -14.640425682067871
    10. 'p' → logprob: -14.765425682067871

Token 124: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.00019531534053385258
    2. 'root' → logprob: -9.750195503234863
    3. 'p' → logprob: -10.125195503234863
    4. '[p' → logprob: -11.000195503234863
    5. '_find' → logprob: -11.125195503234863
    6. 'w' → logprob: -11.125195503234863
    7. 'f' → logprob: -11.625195503234863
    8. '[i' → logprob: -11.875195503234863
    9. '(find' → logprob: -12.000195503234863
    10. '[' → logprob: -12.625195503234863

Token 125: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.5120287066092715e-05
    2. '(' → logprob: -10.750035285949707
    3. '(root' → logprob: -11.250035285949707
    4. 'root' → logprob: -14.875035285949707
    5. '(
' → logprob: -16.00003433227539
    6. 'p' → logprob: -16.62503433227539
    7. '(parent' → logprob: -16.87503433227539
    8. '(q' → logprob: -19.50003433227539
    9. '((' → logprob: -19.62503433227539
    10. ' (' → logprob: -19.87503433227539

Token 126: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07892140746116638
    2. ')
' → logprob: -2.578921318054199
    3. ')
' → logprob: -10.7039213180542
    4. ' )' → logprob: -12.4539213180542
    5. ')

' → logprob: -12.5789213180542
    6. ' )
' → logprob: -13.5789213180542
    7. ')`' → logprob: -15.9539213180542
    8. ')p' → logprob: -16.078922271728516
    9. ')`
' → logprob: -16.578922271728516
    10. ')#' → logprob: -16.703922271728516

Token 127: '   ' (ID: 271)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.05235917493700981
    2. ' root' → logprob: -3.552359104156494
    3. '   ' → logprob: -3.802359104156494
    4. '	root' → logprob: -10.427359580993652
    5. '[root' → logprob: -12.302359580993652
    6. '(root' → logprob: -13.552359580993652
    7. '
' → logprob: -14.427359580993652
    8. ' ' → logprob: -14.802359580993652
    9. '    
' → logprob: -15.802359580993652
    10. '_root' → logprob: -16.052358627319336

Token 128: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' (adapté à ' root') → logprob: -0.00012368128227535635
    2. ' root' → logprob: -9.000123977661133
    3. '
' → logprob: -16.750123977661133
    4. '   ' → logprob: -16.875123977661133
    5. '[root' → logprob: -17.500123977661133
    6. '	root' → logprob: -17.625123977661133
    7. '(root' → logprob: -18.125123977661133
    8. '_root' → logprob: -20.500123977661133
    9. 'roots' → logprob: -20.625123977661133
    10. 'return' → logprob: -21.500123977661133

Token 129: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -9.088346359931165e-07
    2. '[z' → logprob: -15.250000953674316
    3. '<|end|>' → logprob: -15.500000953674316
    4. ' z' → logprob: -15.625000953674316
    5. 'w' → logprob: -16.0
    6. 's' → logprob: -16.5
    7. 'x' → logprob: -17.125
    8. '[' → logprob: -17.625
    9. '	z' → logprob: -18.0
    10. 'root' → logprob: -18.125

Token 130: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.38978952169418335
    2. '.__' → logprob: -1.1397895812988281
    3. '[' → logprob: -6.139789581298828
    4. 'w' → logprob: -8.264789581298828
    5. '.setdefault' → logprob: -8.764789581298828
    6. '__' → logprob: -9.264789581298828
    7. ').__' → logprob: -9.639789581298828
    8. '<|end|>' → logprob: -9.889789581298828
    9. '```' → logprob: -10.014789581298828
    10. '[word' → logprob: -11.639789581298828

Token 131: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15648789703845978
    2. '=' → logprob: -2.4064879417419434
    3. ']=' → logprob: -2.9064879417419434
    4. ')' → logprob: -10.531487464904785
    5. ' ]' → logprob: -10.781487464904785
    6. ')=' → logprob: -11.781487464904785
    7. ' =' → logprob: -12.656487464904785
    8. '])' → logprob: -15.156487464904785
    9. ')]' → logprob: -15.906487464904785
    10. '[' → logprob: -16.0314884185791

Token 132: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407856583595276
    2. ' =' → logprob: -0.9740785360336304
    3. '=q' → logprob: -13.974078178405762
    4. ' ' → logprob: -14.724078178405762
    5. '=p' → logprob: -15.849078178405762
    6. '=w' → logprob: -16.099079132080078
    7. ' =
' → logprob: -16.849079132080078
    8. '＝' → logprob: -17.099079132080078
    9. ']' → logprob: -17.974079132080078
    10. '=

' → logprob: -17.974079132080078

Token 133: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0015023599844425917
    2. ' q' → logprob: -6.501502513885498
    3. '	q' → logprob: -18.501502990722656
    4. ' ' → logprob: -20.001502990722656
    5. '[q' → logprob: -21.001502990722656
    6. '?q' → logprob: -21.251502990722656
    7. '(q' → logprob: -22.001502990722656
    8. '$q' → logprob: -23.376502990722656
    9. '_q' → logprob: -23.626502990722656
    10. ''q' → logprob: -23.626502990722656

Token 134: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024955807253718376
    2. ' return' → logprob: -5.024955749511719
    3. '	return' → logprob: -5.399955749511719
    4. 'return' → logprob: -5.399955749511719
    5. '<|end|>' → logprob: -5.524955749511719
    6. '
' → logprob: -5.649955749511719
    7. ' ' → logprob: -7.774955749511719
    8. ')' → logprob: -8.149955749511719
    9. '\n' → logprob: -8.524955749511719
    10. '    
' → logprob: -8.649955749511719

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01342655997723341
    2. ' return' → logprob: -4.638426780700684
    3. 'return' → logprob: -5.888426780700684
    4. '	return' → logprob: -7.263426780700684
    5. ' ' → logprob: -10.013426780700684
    6. '  ' → logprob: -10.263426780700684
    7. '<|end|>' → logprob: -10.263426780700684
    8. ')' → logprob: -10.513426780700684
    9. ':return' → logprob: -11.638426780700684
    10. ',' → logprob: -11.888426780700684

Token 136: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.029014864936470985
    2. ' return' → logprob: -4.029015064239502
    3. '   ' → logprob: -4.529015064239502
    4. '	return' → logprob: -11.279014587402344
    5. ' ' → logprob: -14.029014587402344
    6. ':return' → logprob: -14.154014587402344
    7. '  ' → logprob: -14.904014587402344
    8. 'eturn' → logprob: -16.154014587402344
    9. ')return' → logprob: -16.654014587402344
    10. 'q' → logprob: -17.779014587402344

Token 137: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.7610454708337784e-05
    2. ' q' → logprob: -10.500027656555176
    3. '	q' → logprob: -19.25002670288086
    4. '(q' → logprob: -20.50002670288086
    5. ' ' → logprob: -21.62502670288086
    6. '[q' → logprob: -22.25002670288086
    7. '?q' → logprob: -22.75002670288086
    8. '  ' → logprob: -22.75002670288086
    9. '   ' → logprob: -23.12502670288086
    10. ' ' → logprob: -23.25002670288086

Token 138: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014136354438960552
    2. '<|end|>' → logprob: -5.13913631439209
    3. '_' → logprob: -6.01413631439209
    4. ')' → logprob: -6.13913631439209
    5. 'for' → logprob: -7.38913631439209
    6. 'w' → logprob: -7.63913631439209
    7. 'while' → logprob: -8.01413631439209
    8. ' def' → logprob: -8.13913631439209
    9. '
' → logprob: -8.26413631439209
    10. ' 
' → logprob: -8.26413631439209

Token 139: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019749760627746582
    2. 'for' → logprob: -4.144749641418457
    3. '_' → logprob: -6.769749641418457
    4. 'while' → logprob: -6.769749641418457
    5. 'u' → logprob: -7.894749641418457
    6. 'j' → logprob: -8.394749641418457
    7. 'w' → logprob: -8.519749641418457
    8. 'n' → logprob: -9.144749641418457
    9. 'b' → logprob: -9.394749641418457
    10. 'i' → logprob: -9.769749641418457

Token 140: ' kun' (ID: 4157)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.09846587479114532
    2. 'z' → logprob: -3.348465919494629
    3. ' zun' → logprob: -3.848465919494629
    4. ' union' → logprob: -4.098465919494629
    5. '_union' → logprob: -6.473465919494629
    6. ' run' → logprob: -6.598465919494629
    7. ' zd' → logprob: -6.598465919494629
    8. ' zu' → logprob: -6.723465919494629
    9. ' zum' → logprob: -6.848465919494629
    10. ' zv' → logprob: -6.973465919494629

Token 141: 'ite' (ID: 651)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.8450403809547424
    2. 'n' → logprob: -1.3450403213500977
    3. 'ction' → logprob: -1.9700403213500977
    4. 'h' → logprob: -3.7200403213500977
    5. 'ion' → logprob: -3.8450403213500977
    6. 'c' → logprob: -3.8450403213500977
    7. 'ck' → logprob: -3.9700403213500977
    8. 'ch' → logprob: -4.470040321350098
    9. 'nel' → logprob: -4.470040321350098
    10. '```' → logprob: -5.220040321350098

Token 142: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.02699686400592327
    2. '(w' → logprob: -4.276997089385986
    3. '(' → logprob: -4.776997089385986
    4. '(u' → logprob: -5.776997089385986
    5. '(x' → logprob: -7.151997089385986
    6. '(l' → logprob: -8.151996612548828
    7. '(p' → logprob: -9.776996612548828
    8. '(root' → logprob: -10.901996612548828
    9. '(A' → logprob: -11.401996612548828
    10. '(s' → logprob: -11.401996612548828

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023627322167158127
    2. ',b' → logprob: -3.773627281188965
    3. ' ,' → logprob: -7.898627281188965
    4. 'b' → logprob: -11.773627281188965
    5. ' b' → logprob: -13.898627281188965
    6. ',
' → logprob: -14.148627281188965
    7. ',a' → logprob: -14.148627281188965
    8. '_,' → logprob: -16.14862823486328
    9. ' ' → logprob: -16.52362823486328
    10. ',w' → logprob: -16.89862823486328

Token 144: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07889143377542496
    2. ' b' → logprob: -2.5788915157318115
    3. ' ' → logprob: -14.07889175415039
    4. '   ' → logprob: -14.95389175415039
    5. '	b' → logprob: -15.20389175415039
    6. ')b' → logprob: -15.82889175415039
    7. '  ' → logprob: -16.32889175415039
    8. 'a' → logprob: -17.07889175415039
    9. ',b' → logprob: -17.20389175415039
    10. ')' → logprob: -17.32889175415039

Token 145: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006404805462807417
    2. '):
' → logprob: -7.375640392303467
    3. ')' → logprob: -11.750640869140625
    4. ' ):' → logprob: -12.625640869140625
    5. ':' → logprob: -13.125640869140625
    6. '):
' → logprob: -14.500640869140625
    7. '):

' → logprob: -16.500640869140625
    8. ',' → logprob: -17.625640869140625
    9. ' ' → logprob: -17.625640869140625
    10. '   ' → logprob: -18.125640869140625

Token 146: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1356515884399414
    2. 'a' → logprob: -1.2606515884399414
    3. ' root' → logprob: -1.2606515884399414
    4. '   ' → logprob: -2.5106515884399414
    5. 'root' → logprob: -4.510651588439941
    6. 'ra' → logprob: -5.260651588439941
    7. ' ra' → logprob: -5.635651588439941
    8. '```' → logprob: -5.885651588439941
    9. ' ' → logprob: -6.885651588439941
    10. ' pa' → logprob: -7.260651588439941

Token 147: ' za' (ID: 3984)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.36446613073349
    2. 'root' → logprob: -1.8644661903381348
    3. 'ra' → logprob: -1.9894661903381348
    4. 'pa' → logprob: -4.489466190338135
    5. 'ar' → logprob: -7.614466190338135
    6. 'aa' → logprob: -7.864466190338135
    7. 'x' → logprob: -8.364465713500977
    8. 'if' → logprob: -8.489465713500977
    9. 'r' → logprob: -8.489465713500977
    10. 'fa' → logprob: -9.114465713500977

Token 148: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026340708136558533
    2. ' =' → logprob: -3.6513407230377197
    3. '=a' → logprob: -11.27634048461914
    4. '=z' → logprob: -11.52634048461914
    5. 'a' → logprob: -12.02634048461914
    6. ',' → logprob: -12.52634048461914
    7. ')' → logprob: -13.15134048461914
    8. 'z' → logprob: -13.77634048461914
    9. ']' → logprob: -13.77634048461914
    10. '=
' → logprob: -13.90134048461914

Token 149: ' zb' (ID: 70456)
  Prédit: 'zb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zb' → logprob: -0.16184724867343903
    2. ' zb' → logprob: -1.9118472337722778
    3. 'z' → logprob: -7.036847114562988
    4. ' z' → logprob: -7.786847114562988
    5. ' =' → logprob: -8.536847114562988
    6. '=' → logprob: -9.911847114562988
    7. ' ' → logprob: -10.036847114562988
    8. '  ' → logprob: -10.911847114562988
    9. '   ' → logprob: -12.786847114562988
    10. '
' → logprob: -13.036847114562988

Token 150: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931498050689697
    2. ' =' → logprob: -0.6931498050689697
    3. '=z' → logprob: -13.81814956665039
    4. ')' → logprob: -14.69314956665039
    5. ',' → logprob: -14.94314956665039
    6. ' ' → logprob: -15.31814956665039
    7. '=find' → logprob: -16.19314956665039
    8. ' =
' → logprob: -16.19314956665039
    9. '=w' → logprob: -16.69314956665039
    10. ')=' → logprob: -16.81814956665039

Token 151: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.4740840196609497
    2. ' z' → logprob: -0.9740840196609497
    3. '(z' → logprob: -12.47408390045166
    4. '[z' → logprob: -13.47408390045166
    5. '	z' → logprob: -14.34908390045166
    6. ' ' → logprob: -14.34908390045166
    7. '   ' → logprob: -15.34908390045166
    8. '  ' → logprob: -16.474084854125977
    9. 'root' → logprob: -16.974084854125977
    10. ''z' → logprob: -17.349084854125977

Token 152: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -9.088346359931165e-07
    2. '(a' → logprob: -15.250000953674316
    3. 'a' → logprob: -15.375000953674316
    4. '[a' → logprob: -15.625000953674316
    5. ' find' → logprob: -16.0
    6. '(find' → logprob: -16.125
    7. '_find' → logprob: -16.875
    8. 'f' → logprob: -17.875
    9. '.find' → logprob: -19.125
    10. '=find' → logprob: -19.5

Token 153: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.173704271830502e-06
    2. 'a' → logprob: -12.75000286102295
    3. '(' → logprob: -15.37500286102295
    4. '(
' → logprob: -18.750003814697266
    5. ' (' → logprob: -19.500003814697266
    6. '((' → logprob: -20.250003814697266
    7. '```' → logprob: -20.875003814697266
    8. ' a' → logprob: -21.250003814697266
    9. '(b' → logprob: -21.750003814697266
    10. '   ' → logprob: -21.875003814697266

Token 154: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -4.227250610711053e-05
    2. ' ),' → logprob: -10.750041961669922
    3. ')' → logprob: -10.875041961669922
    4. ')
' → logprob: -13.625041961669922
    5. ',' → logprob: -15.250041961669922
    6. '),
' → logprob: -15.750041961669922
    7. 'b' → logprob: -17.375041961669922
    8. '],' → logprob: -17.875041961669922
    9. ')b' → logprob: -17.875041961669922
    10. ' ' → logprob: -18.000041961669922

Token 155: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.16022585332393646
    2. ' z' → logprob: -1.9102258682250977
    3. '   ' → logprob: -14.160225868225098
    4. '  ' → logprob: -14.410225868225098
    5. '	z' → logprob: -15.160225868225098
    6. ' ' → logprob: -15.785225868225098
    7. 'b' → logprob: -16.41022491455078
    8. '    ' → logprob: -17.91022491455078
    9. ' b' → logprob: -19.16022491455078
    10. '<|end|>' → logprob: -19.16022491455078

Token 156: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.00456624198704958
    2. 'b' → logprob: -5.504566192626953
    3. '(b' → logprob: -8.254566192626953
    4. 'ind' → logprob: -9.504566192626953
    5. '[b' → logprob: -9.754566192626953
    6. '(find' → logprob: -11.004566192626953
    7. 'nd' → logprob: -11.254566192626953
    8. 'z' → logprob: -11.254566192626953
    9. 'f' → logprob: -11.379566192626953
    10. ' b' → logprob: -11.379566192626953

Token 157: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -8.061054359131958e-06
    2. 'b' → logprob: -11.875007629394531
    3. '(' → logprob: -13.875007629394531
    4. ' (' → logprob: -16.62500762939453
    5. ')b' → logprob: -18.00000762939453
    6. ' b' → logprob: -18.75000762939453
    7. '(
' → logprob: -19.25000762939453
    8. ')(' → logprob: -19.62500762939453
    9. ')' → logprob: -19.62500762939453
    10. '<|end|>' → logprob: -20.00000762939453

Token 158: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25196316838264465
    2. ')
' → logprob: -1.5019631385803223
    3. ')
' → logprob: -10.50196361541748
    4. '   ' → logprob: -12.75196361541748
    5. ')

' → logprob: -13.62696361541748
    6. ' )' → logprob: -14.25196361541748
    7. ' )
' → logprob: -14.37696361541748
    8. '):
' → logprob: -14.62696361541748
    9. ')return' → logprob: -15.75196361541748
    10. 'if' → logprob: -16.001962661743164

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5308301448822021
    2. ' if' → logprob: -1.0308301448822021
    3. 'if' → logprob: -2.905830144882202
    4. ')' → logprob: -9.405830383300781
    5. '
' → logprob: -9.655830383300781
    6. '	if' → logprob: -9.655830383300781
    7. '<|end|>' → logprob: -9.780830383300781
    8. '```' → logprob: -10.155830383300781
    9. ' ' → logprob: -10.280830383300781
    10. ',' → logprob: -10.280830383300781

Token 160: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06636323034763336
    2. ' if' → logprob: -2.8163633346557617
    3. '   ' → logprob: -6.066363334655762
    4. 'root' → logprob: -6.316363334655762
    5. ' root' → logprob: -8.816363334655762
    6. '
' → logprob: -9.316363334655762
    7. '    
' → logprob: -11.191363334655762
    8. ' 
' → logprob: -12.816363334655762
    9. '	if' → logprob: -13.191363334655762
    10. '```' → logprob: -13.941363334655762

Token 161: ' Personal' (ID: 19086)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0015483066672459245
    2. ' if' → logprob: -6.6265482902526855
    3. '   ' → logprob: -9.001548767089844
    4. 'root' → logprob: -9.376548767089844
    5. 'return' → logprob: -11.376548767089844
    6. ' root' → logprob: -14.001548767089844
    7. '```' → logprob: -14.376548767089844
    8. 'z' → logprob: -15.001548767089844
    9. '
' → logprob: -15.001548767089844
    10. '	if' → logprob: -15.251548767089844

Token 162: ':' (ID: 25)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17016300559043884
    2. 'fl' → logprob: -2.2951629161834717
    3. 'pre' → logprob: -3.7951629161834717
    4. 'preferences' → logprob: -4.795163154602051
    5. 'taste' → logprob: -5.420163154602051
    6. ' preference' → logprob: -5.920163154602051
    7. '#' → logprob: -6.045163154602051
    8. 'favorite' → logprob: -6.045163154602051
    9. 'return' → logprob: -6.170163154602051
    10. 'note' → logprob: -6.670163154602051

Token 163: ' unite' (ID: 96146)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.030543841421604156
    2. 'root' → logprob: -3.780543804168701
    3. ' if' → logprob: -5.030543804168701
    4. ' root' → logprob: -8.03054428100586
    5. '   ' → logprob: -8.53054428100586
    6. 'return' → logprob: -8.53054428100586
    7. '
' → logprob: -12.15554428100586
    8. '```' → logprob: -12.78054428100586
    9. 'pass' → logprob: -13.15554428100586
    10. ' return' → logprob: -13.53054428100586

Token 164: ' the' (ID: 290)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.39558982849121094
    2. 'if' → logprob: -1.270589828491211
    3. '   ' → logprob: -3.520589828491211
    4. 'root' → logprob: -4.770589828491211
    5. ' root' → logprob: -5.895589828491211
    6. '<|end|>' → logprob: -6.520589828491211
    7. '=' → logprob: -7.020589828491211
    8. '
' → logprob: -7.770589828491211
    9. '(root' → logprob: -7.770589828491211
    10. ' =' → logprob: -7.895589828491211

Token 165: ' max' (ID: 2999)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.9278671145439148
    2. 'if' → logprob: -1.1778671741485596
    3. 'roots' → logprob: -2.0528671741485596
    4. ' if' → logprob: -2.4278671741485596
    5. ' roots' → logprob: -3.5528671741485596
    6. ' root' → logprob: -3.8028671741485596
    7. ' spots' → logprob: -4.4278669357299805
    8. 'spots' → logprob: -5.0528669357299805
    9. '   ' → logprob: -6.0528669357299805
    10. 'right' → logprob: -6.9278669357299805

Token 166: ' into' (ID: 1511)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7143012881278992
    2. 'root' → logprob: -1.214301347732544
    3. '(root' → logprob: -1.964301347732544
    4. ' root' → logprob: -3.839301347732544
    5. '<|end|>' → logprob: -3.839301347732544
    6. '(z' → logprob: -4.839301109313965
    7. ' of' → logprob: -4.964301109313965
    8. 'of' → logprob: -6.339301109313965
    9. 'roots' → logprob: -6.339301109313965
    10. '_root' → logprob: -6.589301109313965

Token 167: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0814052820205688
    2. 'the' → logprob: -1.0814052820205688
    3. 'min' → logprob: -1.5814052820205688
    4. 'root' → logprob: -2.5814051628112793
    5. ' min' → logprob: -3.8314051628112793
    6. ' root' → logprob: -4.331405162811279
    7. 'za' → logprob: -6.206405162811279
    8. '   ' → logprob: -6.831405162811279
    9. ' ' → logprob: -7.331405162811279
    10. 'z' → logprob: -7.581405162811279

Token 168: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.20306512713432312
    2. ' min' → logprob: -2.0780651569366455
    3. 'root' → logprob: -3.0780651569366455
    4. ' root' → logprob: -4.953064918518066
    5. 'sm' → logprob: -6.828064918518066
    6. 'max' → logprob: -6.953064918518066
    7. 'z' → logprob: -7.703064918518066
    8. ' ' → logprob: -7.703064918518066
    9. 'za' → logprob: -7.703064918518066
    10. 'minimum' → logprob: -7.953064918518066

Token 169: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9633306264877319
    2. ' if' → logprob: -1.213330626487732
    3. 'if' → logprob: -1.213330626487732
    4. '
' → logprob: -4.4633307456970215
    5. '<|end|>' → logprob: -4.7133307456970215
    6. ',' → logprob: -6.8383307456970215
    7. '	if' → logprob: -7.0883307456970215
    8. ' ' → logprob: -8.213330268859863
    9. '    
' → logprob: -8.713330268859863
    10. '  ' → logprob: -8.713330268859863

Token 170: ' the' (ID: 290)
  Prédit: 'za'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'za' → logprob: -0.6998184323310852
    2. 'the' → logprob: -1.0748183727264404
    3. 'root' → logprob: -1.9498183727264404
    4. '(' → logprob: -4.9498186111450195
    5. ' the' → logprob: -5.5748186111450195
    6. '(root' → logprob: -6.5748186111450195
    7. '{' → logprob: -7.0748186111450195
    8. '[' → logprob: -7.0748186111450195
    9. 'two' → logprob: -7.1998186111450195
    10. 'both' → logprob: -7.3248186111450195

Token 171: ' roots' (ID: 29895)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.019472485408186913
    2. ' two' → logprob: -4.644472599029541
    3. 'roots' → logprob: -5.394472599029541
    4. 'pair' → logprob: -6.269472599029541
    5. 'root' → logprob: -6.644472599029541
    6. 'set' → logprob: -7.394472599029541
    7. 'array' → logprob: -8.519472122192383
    8. 'def' → logprob: -8.519472122192383
    9. 'union' → logprob: -9.019472122192383
    10. 'cluster' → logprob: -9.269472122192383

Token 172: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4048830270767212
    2. ' if' → logprob: -1.7798830270767212
    3. 'if' → logprob: -2.2798829078674316
    4. '
' → logprob: -3.1548829078674316
    5. '<|end|>' → logprob: -4.029882907867432
    6. '	if' → logprob: -7.779882907867432
    7. ',' → logprob: -8.52988338470459
    8. '```' → logprob: -8.65488338470459
    9. ' ' → logprob: -9.15488338470459
    10. '    
' → logprob: -9.15488338470459

Token 173: ' or' (ID: 503)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3318186402320862
    2. ' if' → logprob: -1.5818185806274414
    3. '   ' → logprob: -2.5818185806274414
    4. 'root' → logprob: -7.081818580627441
    5. ' root' → logprob: -8.581818580627441
    6. '    
' → logprob: -10.331818580627441
    7. '
' → logprob: -10.956818580627441
    8. ' ' → logprob: -11.081818580627441
    9. '  ' → logprob: -11.831818580627441
    10. '...' → logprob: -12.081818580627441

Token 174: ' vice' (ID: 22625)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6589263081550598
    2. 'if' → logprob: -1.033926248550415
    3. 'root' → logprob: -2.533926248550415
    4. '   ' → logprob: -3.533926248550415
    5. 'za' → logprob: -5.283926486968994
    6. 'roots' → logprob: -6.283926486968994
    7. 'reverse' → logprob: -6.533926486968994
    8. '...' → logprob: -6.783926486968994
    9. ' return' → logprob: -7.033926486968994
    10. '#' → logprob: -7.158926486968994

Token 175: ' versa' (ID: 74153)
  Prédit: 'versa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versa' → logprob: -0.07905679196119308
    2. ' versa' → logprob: -2.579056739807129
    3. 'ersa' → logprob: -8.954056739807129
    4. 'vers' → logprob: -11.454056739807129
    5. '-' → logprob: -11.954056739807129
    6. 'a' → logprob: -12.079056739807129
    7. '```' → logprob: -12.454056739807129
    8. '   ' → logprob: -12.454056739807129
    9. 'ves' → logprob: -12.829056739807129
    10. ':' → logprob: -13.954056739807129

Token 176: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5398712158203125
    2. ' if' → logprob: -1.5398712158203125
    3. '<|end|>' → logprob: -2.0398712158203125
    4. '
' → logprob: -2.9148712158203125
    5. 'if' → logprob: -4.4148712158203125
    6. ',' → logprob: -6.0398712158203125
    7. ' ' → logprob: -6.9148712158203125
    8. ')' → logprob: -7.7898712158203125
    9. '    
' → logprob: -8.039871215820312
    10. '	if' → logprob: -8.039871215820312

Token 177: ' random' (ID: 7526)
  Prédit: 'your'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'your' → logprob: -0.8312124013900757
    2. 'will' → logprob: -2.0812125205993652
    3. 'return' → logprob: -2.4562125205993652
    4. '#' → logprob: -2.7062125205993652
    5. '   ' → logprob: -2.8312125205993652
    6. 'the' → logprob: -3.4562125205993652
    7. 'root' → logprob: -3.4562125205993652
    8. ' your' → logprob: -3.5812125205993652
    9. ' will' → logprob: -3.5812125205993652
    10. '...' → logprob: -3.9562125205993652

Token 178: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6398627758026123
    2. ' if' → logprob: -1.1398627758026123
    3. 'if' → logprob: -2.5148627758026123
    4. '
' → logprob: -2.7648627758026123
    5. '<|end|>' → logprob: -5.139863014221191
    6. '	if' → logprob: -6.764863014221191
    7. ',' → logprob: -7.389863014221191
    8. 'def' → logprob: -8.264863014221191
    9. '    
' → logprob: -8.264863014221191
    10. '```' → logprob: -8.639863014221191

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28706619143486023
    2. ' if' → logprob: -1.9120662212371826
    3. 'if' → logprob: -2.9120662212371826
    4. '
' → logprob: -3.1620662212371826
    5. '<|end|>' → logprob: -6.2870659828186035
    6. '    
' → logprob: -6.5370659828186035
    7. '	if' → logprob: -7.5370659828186035
    8. ' ' → logprob: -8.162066459655762
    9. ' 
' → logprob: -8.162066459655762
    10. ',' → logprob: -8.912066459655762

Token 180: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21401390433311462
    2. ' if' → logprob: -1.714013934135437
    3. '   ' → logprob: -4.714014053344727
    4. 'root' → logprob: -5.839014053344727
    5. ' root' → logprob: -7.464014053344727
    6. '```' → logprob: -11.589014053344727
    7. 'return' → logprob: -11.714014053344727
    8. '
' → logprob: -11.839014053344727
    9. '	if' → logprob: -11.964014053344727
    10. ' ' → logprob: -11.964014053344727

Token 181: 'root' (ID: 5488)
  Prédit: 'za'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'za' → logprob: -0.12818415462970734
    2. 'zb' → logprob: -2.1281840801239014
    3. 'root' → logprob: -8.25318431854248
    4. ' za' → logprob: -8.87818431854248
    5. 'min' → logprob: -9.12818431854248
    6. '   ' → logprob: -9.12818431854248
    7. ' zb' → logprob: -9.25318431854248
    8. 'z' → logprob: -9.37818431854248
    9. '(' → logprob: -9.50318431854248
    10. '(z' → logprob: -9.62818431854248

Token 182: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0026389146223664284
    2. 's' → logprob: -6.127638816833496
    3. 'a' → logprob: -7.752638816833496
    4. 'zs' → logprob: -11.752638816833496
    5. ')' → logprob: -12.127638816833496
    6. ',' → logprob: -12.877638816833496
    7. 'za' → logprob: -13.127638816833496
    8. 'b' → logprob: -13.252638816833496
    9. 'sz' → logprob: -13.502638816833496
    10. 'x' → logprob: -14.252638816833496

Token 183: '.__' (ID: 10210)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04796920344233513
    2. '[a' → logprob: -3.672969102859497
    3. '[z' → logprob: -4.922969341278076
    4. ')[' → logprob: -5.422969341278076
    5. 'za' → logprob: -5.797969341278076
    6. '[b' → logprob: -6.047969341278076
    7. ')' → logprob: -6.422969341278076
    8. ',' → logprob: -6.922969341278076
    9. '[root' → logprob: -6.922969341278076
    10. '   ' → logprob: -8.547968864440918

Token 184: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.002496110275387764
    2. 'getitem' → logprob: -6.002496242523193
    3. 'sets' → logprob: -10.877495765686035
    4. ' set' → logprob: -14.127495765686035
    5. 'len' → logprob: -15.127495765686035
    6. 'del' → logprob: -16.25249671936035
    7. 'get' → logprob: -16.25249671936035
    8. 'contains' → logprob: -16.37749671936035
    9. '```' → logprob: -16.62749671936035
    10. 'swap' → logprob: -17.75249671936035

Token 185: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -7.505351095460355e-05
    2. 'attr' → logprob: -9.500075340270996
    3. '_item' → logprob: -16.62507438659668
    4. '__(' → logprob: -17.37507438659668
    5. ' item' → logprob: -17.50007438659668
    6. '(item' → logprob: -17.87507438659668
    7. '__' → logprob: -18.25007438659668
    8. '__((' → logprob: -19.37507438659668
    9. '-item' → logprob: -20.25007438659668
    10. 'attribute' → logprob: -20.37507438659668

Token 186: '__' (ID: 771)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10468786954879761
    2. '(z' → logprob: -2.7296879291534424
    3. ')(' → logprob: -3.7296879291534424
    4. '(root' → logprob: -4.729687690734863
    5. ')' → logprob: -7.354687690734863
    6. ',' → logprob: -7.979687690734863
    7. 'root' → logprob: -9.604687690734863
    8. 'za' → logprob: -9.979687690734863
    9. ')((' → logprob: -10.104687690734863
    10. ',z' → logprob: -10.229687690734863

Token 187: ' if' (ID: 538)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05009107664227486
    2. '(z' → logprob: -3.300091028213501
    3. ')(' → logprob: -4.55009126663208
    4. ',' → logprob: -7.67509126663208
    5. '(root' → logprob: -7.80009126663208
    6. ')' → logprob: -8.175090789794922
    7. 'za' → logprob: -9.050090789794922
    8. ',z' → logprob: -10.175090789794922
    9. ' (' → logprob: -10.800090789794922
    10. 'root' → logprob: -11.550090789794922

Token 188: ' za' (ID: 3984)
  Prédit: 'za'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'za' → logprob: -0.6527300477027893
    2. '(' → logprob: -1.2777299880981445
    3. '(z' → logprob: -2.2777299880981445
    4. ' za' → logprob: -3.1527299880981445
    5. ')' → logprob: -3.6527299880981445
    6. ')(' → logprob: -5.1527299880981445
    7. '(True' → logprob: -5.2777299880981445
    8. '(root' → logprob: -5.4027299880981445
    9. 'root' → logprob: -6.4027299880981445
    10. '(len' → logprob: -6.4027299880981445

Token 189: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4645485281944275
    2. ' >' → logprob: -2.0895485877990723
    3. '>' → logprob: -2.3395485877990723
    4. '<' → logprob: -2.3395485877990723
    5. '[' → logprob: -4.464548587799072
    6. '==' → logprob: -4.464548587799072
    7. ' ==' → logprob: -5.214548587799072
    8. ' !=' → logprob: -5.214548587799072
    9. '!=' → logprob: -5.589548587799072
    10. 'else' → logprob: -5.714548587799072

Token 190: ' zb' (ID: 70456)
  Prédit: 'zb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zb' → logprob: -0.4743223190307617
    2. ' zb' → logprob: -0.9743223190307617
    3. '=' → logprob: -8.474322319030762
    4. ' ' → logprob: -10.724322319030762
    5. ' z' → logprob: -12.224322319030762
    6. '0' → logprob: -13.349322319030762
    7. 'z' → logprob: -13.724322319030762
    8. '<' → logprob: -13.724322319030762
    9. '  ' → logprob: -13.724322319030762
    10. '>' → logprob: -14.099322319030762

Token 191: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.13679376244544983
    2. 'else' → logprob: -2.136793851852417
    3. ')(' → logprob: -4.886793613433838
    4. ')' → logprob: -6.636793613433838
    5. ' ' → logprob: -7.886793613433838
    6. '   ' → logprob: -8.136794090270996
    7. '  ' → logprob: -9.386794090270996
    8. '    ' → logprob: -9.511794090270996
    9. ' )' → logprob: -10.261794090270996
    10. '        ' → logprob: -11.511794090270996

Token 192: ' partial' (ID: 13664)
  Prédit: ' root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' root' → logprob: -0.3536660969257355
    2. 'root' → logprob: -1.228666067123413
    3. ' lambda' → logprob: -5.853666305541992
    4. 'lambda' → logprob: -6.603666305541992
    5. ' (' → logprob: -8.853666305541992
    6. '(root' → logprob: -8.853666305541992
    7. ')' → logprob: -9.228666305541992
    8. ' ' → logprob: -9.603666305541992
    9. ' spots' → logprob: -9.978666305541992
    10. 'spots' → logprob: -9.978666305541992

Token 193: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.25959739089012146
    2. ')(' → logprob: -2.0095973014831543
    3. 'root' → logprob: -2.7595973014831543
    4. ')' → logprob: -3.5095973014831543
    5. '[root' → logprob: -7.009597301483154
    6. ')(__' → logprob: -9.384597778320312
    7. ')(
' → logprob: -9.634597778320312
    8. ' root' → logprob: -9.759597778320312
    9. ')set' → logprob: -10.259597778320312
    10. '   ' → logprob: -10.384597778320312

Token 194: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00015908108616713434
    2. 'set' → logprob: -9.25015926361084
    3. 's' → logprob: -11.25015926361084
    4. '__' → logprob: -11.37515926361084
    5. '.__' → logprob: -11.50015926361084
    6. 'zs' → logprob: -12.62515926361084
    7. '[root' → logprob: -12.75015926361084
    8. 'sz' → logprob: -12.87515926361084
    9. '_set' → logprob: -13.00015926361084
    10. '[z' → logprob: -13.12515926361084

Token 195: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -3.464347173576243e-05
    2. '.' → logprob: -10.50003433227539
    3. ' .' → logprob: -13.25003433227539
    4. '__.__' → logprob: -13.25003433227539
    5. ').__' → logprob: -13.37503433227539
    6. '.append' → logprob: -14.37503433227539
    7. '.setdefault' → logprob: -15.12503433227539
    8. '[' → logprob: -15.50003433227539
    9. '__' → logprob: -15.62503433227539
    10. '.set' → logprob: -15.62503433227539

Token 196: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00018780550453811884
    2. 'getitem' → logprob: -8.625187873840332
    3. '__' → logprob: -12.875187873840332
    4. '_set' → logprob: -13.375187873840332
    5. ' set' → logprob: -13.500187873840332
    6. ' ' → logprob: -14.250187873840332
    7. '.set' → logprob: -14.500187873840332
    8. 'sets' → logprob: -15.125187873840332
    9. '   ' → logprob: -15.500187873840332
    10. '  ' → logprob: -15.875187873840332

Token 197: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -1.282920129597187e-05
    2. 'set' → logprob: -11.875012397766113
    3. 'attr' → logprob: -13.125012397766113
    4. '__' → logprob: -13.500012397766113
    5. '_item' → logprob: -14.000012397766113
    6. 'root' → logprob: -14.375012397766113
    7. 'obj' → logprob: -15.250012397766113
    8. 'et' → logprob: -15.750012397766113
    9. 'tem' → logprob: -15.875012397766113
    10. 'it' → logprob: -15.875012397766113

Token 198: '__,' (ID: 23783)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.000591874762903899
    2. ')' → logprob: -7.87559175491333
    3. '(root' → logprob: -9.625592231750488
    4. ')(
' → logprob: -9.750592231750488
    5. ',' → logprob: -10.750592231750488
    6. '   ' → logprob: -10.875592231750488
    7. ')((' → logprob: -11.000592231750488
    8. ' )(' → logprob: -11.125592231750488
    9. ')(__' → logprob: -12.375592231750488
    10. ' ' → logprob: -13.000592231750488

Token 199: ' zb' (ID: 70456)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.0036961587611585855
    2. ' root' → logprob: -6.503695964813232
    3. 'za' → logprob: -7.253695964813232
    4. ')' → logprob: -7.628695964813232
    5. '(root' → logprob: -7.878695964813232
    6. 'zb' → logprob: -8.62869644165039
    7. '   ' → logprob: -9.12869644165039
    8. 'z' → logprob: -9.62869644165039
    9. '[root' → logprob: -9.87869644165039
    10. ')(' → logprob: -10.12869644165039

Token 200: '))(' (ID: 72297)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03279215097427368
    2. ')(' → logprob: -3.782792091369629
    3. '))(' → logprob: -5.282792091369629
    4. '))' → logprob: -6.782792091369629
    5. ')' → logprob: -6.782792091369629
    6. '   ' → logprob: -7.282792091369629
    7. '(' → logprob: -7.657792091369629
    8. '),' → logprob: -8.407792091369629
    9. ' ,' → logprob: -8.532792091369629
    10. 'za' → logprob: -9.032792091369629

Token 201: 'za' (ID: 2051)
  Prédit: 'za'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'za' → logprob: -0.005798197817057371
    2. '(' → logprob: -5.63079833984375
    3. '  ' → logprob: -7.75579833984375
    4. '   ' → logprob: -7.88079833984375
    5. ')' → logprob: -8.00579833984375
    6. ' ' → logprob: -8.25579833984375
    7. ',' → logprob: -8.50579833984375
    8. 'a' → logprob: -9.00579833984375
    9. '          ' → logprob: -9.25579833984375
    10. ' za' → logprob: -9.50579833984375

Token 202: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005716538988053799
    2. ')' → logprob: -5.380716323852539
    3. ' ,' → logprob: -7.130716323852539
    4. ',)' → logprob: -9.255716323852539
    5. '),' → logprob: -9.630716323852539
    6. ' )' → logprob: -9.755716323852539
    7. '   ' → logprob: -11.005716323852539
    8. ' ' → logprob: -11.380716323852539
    9. ',b' → logprob: -11.755716323852539
    10. '])' → logprob: -11.880716323852539

Token 203: ' za' (ID: 3984)
  Prédit: 'zb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zb' → logprob: -0.9688302874565125
    2. 'za' → logprob: -1.4688303470611572
    3. ' za' → logprob: -2.2188303470611572
    4. 'root' → logprob: -2.4688303470611572
    5. ' zb' → logprob: -2.4688303470611572
    6. ' root' → logprob: -2.9688303470611572
    7. ' ' → logprob: -4.343830108642578
    8. '0' → logprob: -4.843830108642578
    9. ' not' → logprob: -5.468830108642578
    10. '  ' → logprob: -5.593830108642578

Token 204: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.1855289936065674
    2. ' >' → logprob: -1.5605289936065674
    3. '>' → logprob: -1.6855289936065674
    4. '<' → logprob: -1.8105289936065674
    5. 'else' → logprob: -2.4355289936065674
    6. ' else' → logprob: -3.3105289936065674
    7. ' ' → logprob: -5.810528755187988
    8. ')' → logprob: -6.560528755187988
    9. ',' → logprob: -6.935528755187988
    10. '<=' → logprob: -6.935528755187988

Token 205: ' zb' (ID: 70456)
  Prédit: 'zb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zb' → logprob: -0.4740796685218811
    2. ' zb' → logprob: -0.9740796685218811
    3. ' ' → logprob: -13.349080085754395
    4. 'za' → logprob: -14.974080085754395
    5. '0' → logprob: -15.724080085754395
    6. '=' → logprob: -16.349079132080078
    7. '  ' → logprob: -16.599079132080078
    8. '    ' → logprob: -16.849079132080078
    9. '   ' → logprob: -16.974079132080078
    10. '
' → logprob: -17.224079132080078

Token 206: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6662411689758301
    2. ',' → logprob: -0.9162411689758301
    3. 'else' → logprob: -2.79124116897583
    4. ')' → logprob: -4.04124116897583
    5. ' ,' → logprob: -5.04124116897583
    6. ' ' → logprob: -7.91624116897583
    7. ' )' → logprob: -8.291240692138672
    8. '),' → logprob: -8.541240692138672
    9. '   ' → logprob: -10.791240692138672
    10. ',
' → logprob: -11.041240692138672

Token 207: ' za' (ID: 3984)
  Prédit: 'za'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'za' → logprob: -0.0006324975984171033
    2. ' za' → logprob: -7.375632286071777
    3. 'a' → logprob: -13.125632286071777
    4. ',' → logprob: -14.000632286071777
    5. ')' → logprob: -14.250632286071777
    6. ' ' → logprob: -14.250632286071777
    7. '  ' → logprob: -15.250632286071777
    8. '.za' → logprob: -15.250632286071777
    9. 'zb' → logprob: -15.625632286071777
    10. '          ' → logprob: -15.625632286071777

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17727091908454895
    2. ')' → logprob: -2.0522708892822266
    3. ' if' → logprob: -4.552270889282227
    4. ' ,' → logprob: -4.927270889282227
    5. ',b' → logprob: -5.302270889282227
    6. ' ' → logprob: -6.302270889282227
    7. '<|end|>' → logprob: -6.302270889282227
    8. '),' → logprob: -6.302270889282227
    9. '   ' → logprob: -6.677270889282227
    10. ' )' → logprob: -7.427270889282227

Token 209: ' zb' (ID: 70456)
  Prédit: 'za'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'za' → logprob: -0.5239068865776062
    2. 'zb' → logprob: -1.273906946182251
    3. ' zb' → logprob: -2.773906946182251
    4. ' za' → logprob: -4.398906707763672
    5. 'b' → logprob: -4.648906707763672
    6. 'root' → logprob: -4.648906707763672
    7. '0' → logprob: -4.773906707763672
    8. '(' → logprob: -5.023906707763672
    9. 'a' → logprob: -5.523906707763672
    10. ' root' → logprob: -5.523906707763672

Token 210: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13496869802474976
    2. ' if' → logprob: -2.7599687576293945
    3. ',' → logprob: -3.8849687576293945
    4. '])' → logprob: -4.0099687576293945
    5. 'if' → logprob: -4.8849687576293945
    6. '[' → logprob: -5.1349687576293945
    7. 'za' → logprob: -5.8849687576293945
    8. ')])' → logprob: -6.5099687576293945
    9. ')]' → logprob: -6.7599687576293945
    10. '(' → logprob: -6.8849687576293945

Token 211: ' za' (ID: 3984)
  Prédit: 'za'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'za' → logprob: -0.23002776503562927
    2. ' za' → logprob: -1.6050277948379517
    3. 'zb' → logprob: -5.980027675628662
    4. ' zb' → logprob: -6.355027675628662
    5. ' ' → logprob: -9.60502815246582
    6. '   ' → logprob: -9.98002815246582
    7. ' not' → logprob: -9.98002815246582
    8. '```' → logprob: -10.60502815246582
    9. '  ' → logprob: -10.73002815246582
    10. '(' → logprob: -11.23002815246582

Token 212: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1316375583410263
    2. '>' → logprob: -2.7566375732421875
    3. ' <' → logprob: -3.0066375732421875
    4. ' <=' → logprob: -5.2566375732421875
    5. '<' → logprob: -5.8816375732421875
    6. '<=' → logprob: -6.1316375732421875
    7. 'else' → logprob: -9.881637573242188
    8. '>b' → logprob: -10.381637573242188
    9. ' ' → logprob: -10.631637573242188
    10. '   ' → logprob: -10.881637573242188

Token 213: ' zb' (ID: 70456)
  Prédit: 'zb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zb' → logprob: -0.100216805934906
    2. ' zb' → logprob: -2.350216865539551
    3. 'za' → logprob: -12.10021686553955
    4. ' ' → logprob: -13.10021686553955
    5. 'z' → logprob: -15.10021686553955
    6. '  ' → logprob: -15.22521686553955
    7. '0' → logprob: -15.35021686553955
    8. '   ' → logprob: -15.35021686553955
    9. ' za' → logprob: -15.60021686553955
    10. '<' → logprob: -15.60021686553955

Token 214: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.16102369129657745
    2. 'else' → logprob: -1.911023736000061
    3. ' ' → logprob: -8.16102409362793
    4. ' !=' → logprob: -9.03602409362793
    5. ')' → logprob: -9.78602409362793
    6. '!=' → logprob: -9.91102409362793
    7. '==' → logprob: -10.16102409362793
    8. ' <' → logprob: -10.41102409362793
    9. '  ' → logprob: -10.41102409362793
    10. '   ' → logprob: -10.53602409362793

Token 215: ' za' (ID: 3984)
  Prédit: 'za'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'za' → logprob: -0.0003500050224829465
    2. ' za' → logprob: -8.125349998474121
    3. 'root' → logprob: -10.875349998474121
    4. ' ' → logprob: -12.125349998474121
    5. ' ' → logprob: -12.375349998474121
    6. '(' → logprob: -12.750349998474121
    7. '   ' → logprob: -12.750349998474121
    8. '```' → logprob: -12.875349998474121
    9. 'zb' → logprob: -13.375349998474121
    10. ')' → logprob: -13.375349998474121

Token 216: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003430912329349667
    2. ')
' → logprob: -8.750343322753906
    3. ' )' → logprob: -9.500343322753906
    4. '[' → logprob: -10.875343322753906
    5. '))' → logprob: -11.000343322753906
    6. ',' → logprob: -11.500343322753906
    7. ' ' → logprob: -11.750343322753906
    8. '   ' → logprob: -12.000343322753906
    9. ')[' → logprob: -12.250343322753906
    10. '])' → logprob: -12.500343322753906

Token 217: 'for' (ID: 1938)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0364103317260742
    2. ')' → logprob: -1.0364103317260742
    3. 'za' → logprob: -2.411410331726074
    4. '<|end|>' → logprob: -2.411410331726074
    5. ',' → logprob: -3.161410331726074
    6. 'a' → logprob: -3.911410331726074
    7. '0' → logprob: -4.786410331726074
    8. ')(' → logprob: -5.161410331726074
    9. '[' → logprob: -5.411410331726074
    10. ' ' → logprob: -5.536410331726074

Token 218: ' tick' (ID: 27693)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.269181489944458
    2. 'i' → logprob: -1.519181489944458
    3. '_' → logprob: -4.394181251525879
    4. ' _' → logprob: -5.519181251525879
    5. '_i' → logprob: -8.519181251525879
    6. ' j' → logprob: -9.019181251525879
    7. ' ' → logprob: -9.269181251525879
    8. ' in' → logprob: -10.269181251525879
    9. ' spot' → logprob: -10.519181251525879
    10. 'j' → logprob: -10.519181251525879

Token 219: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016559073701500893
    2. 'in' → logprob: -4.14155912399292
    3. ' ' → logprob: -8.516558647155762
    4. '_' → logprob: -8.641558647155762
    5. ',' → logprob: -10.141558647155762
    6. 'n' → logprob: -10.766558647155762
    7. ' _' → logprob: -10.891558647155762
    8. 'range' → logprob: -11.766558647155762
    9. '   ' → logprob: -11.891558647155762
    10. ' i' → logprob: -11.891558647155762

Token 220: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07890741527080536
    2. ' range' → logprob: -2.5789074897766113
    3. '_' → logprob: -11.828907012939453
    4. 'n' → logprob: -13.203907012939453
    5. 'in' → logprob: -13.328907012939453
    6. '(range' → logprob: -13.328907012939453
    7. '	range' → logprob: -13.828907012939453
    8. '```' → logprob: -14.203907012939453
    9. '[' → logprob: -14.453907012939453
    10. '_range' → logprob: -14.453907012939453

Token 221: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0460655577480793
    2. '(' → logprob: -3.17106556892395
    3. '(n' → logprob: -5.796065330505371
    4. 'm' → logprob: -12.046065330505371
    5. ' (' → logprob: -12.171065330505371
    6. '(len' → logprob: -12.546065330505371
    7. '1' → logprob: -13.171065330505371
    8. ' m' → logprob: -13.796065330505371
    9. '((' → logprob: -14.046065330505371
    10. '(
' → logprob: -14.546065330505371

Token 222: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017383632948622108
    2. ' ):' → logprob: -6.751738548278809
    3. ':' → logprob: -7.876738548278809
    4. '):
' → logprob: -9.251738548278809
    5. '+' → logprob: -9.751738548278809
    6. ',' → logprob: -11.501738548278809
    7. ' :' → logprob: -11.626738548278809
    8. ')' → logprob: -12.126738548278809
    9. '():' → logprob: -12.501738548278809
    10. ' +' → logprob: -13.126738548278809

Token 223: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4320517778396606
    2. ' a' → logprob: -1.4320517778396606
    3. '   ' → logprob: -2.557051658630371
    4. ' line' → logprob: -2.557051658630371
    5. ' n' → logprob: -2.557051658630371
    6. 'n' → logprob: -3.057051658630371
    7. ' input' → logprob: -3.182051658630371
    8. ' s' → logprob: -4.057051658630371
    9. ' l' → logprob: -4.182051658630371
    10. 's' → logprob: -4.432051658630371

Token 224: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18078358471393585
    2. 'l' → logprob: -2.55578351020813
    3. 'x' (adapté à ' x') → logprob: -3.30578351020813
    4. ' a' → logprob: -3.80578351020813
    5. 'u' → logprob: -4.180783748626709
    6. ' l' → logprob: -5.430783748626709
    7. 'i' → logprob: -6.305783748626709
    8. ' u' → logprob: -6.555783748626709
    9. 'p' → logprob: -6.680783748626709
    10. ' x' → logprob: -7.055783748626709

Token 225: '_,' (ID: 14152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011343943886458874
    2. ',y' → logprob: -5.136343955993652
    3. ' ,' → logprob: -5.636343955993652
    4. ' =' → logprob: -7.136343955993652
    5. '=' → logprob: -7.761343955993652
    6. ',x' → logprob: -8.511343955993652
    7. '1' → logprob: -9.386343955993652
    8. '_,' → logprob: -9.511343955993652
    9. ' ' → logprob: -10.011343955993652
    10. 'y' → logprob: -10.386343955993652

Token 226: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.027139227837324142
    2. ' y' → logprob: -3.652139186859131
    3. '*y' → logprob: -8.152139663696289
    4. 'x' → logprob: -9.027139663696289
    5. '*' → logprob: -9.527139663696289
    6. '_y' → logprob: -9.652139663696289
    7. '_=' → logprob: -10.277139663696289
    8. '   ' → logprob: -10.527139663696289
    9. 'a' → logprob: -10.527139663696289
    10. 'z' → logprob: -10.652139663696289

Token 227: '_' (ID: 62)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4206377863883972
    2. ' =' → logprob: -1.420637845993042
    3. '_' → logprob: -2.295637845993042
    4. '_=' → logprob: -7.420637607574463
    5. ',' → logprob: -7.920637607574463
    6. ')' → logprob: -9.170638084411621
    7. ' ' → logprob: -10.920638084411621
    8. '_,' → logprob: -11.920638084411621
    9. '   ' → logprob: -12.420638084411621
    10. '_)' → logprob: -12.670638084411621

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6625985503196716
    2. '=' → logprob: -0.7875985503196716
    3. ',' → logprob: -3.5375986099243164
    4. '   ' → logprob: -8.662598609924316
    5. ' ,' → logprob: -9.287598609924316
    6. ' ' → logprob: -9.412598609924316
    7. ',x' → logprob: -9.912598609924316
    8. '    ' → logprob: -10.537598609924316
    9. 'x' → logprob: -11.412598609924316
    10. '  ' → logprob: -11.537598609924316

Token 229: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.07179079949855804
    2. 'input' → logprob: -2.8217906951904297
    3. ' map' → logprob: -4.69679069519043
    4. ' input' → logprob: -7.44679069519043
    5. 'list' → logprob: -10.19679069519043
    6. '[' → logprob: -11.44679069519043
    7. 'get' → logprob: -11.82179069519043
    8. '(map' → logprob: -12.07179069519043
    9. '   ' → logprob: -13.69679069519043
    10. 'tuple' → logprob: -13.69679069519043

Token 230: '(get' (ID: 7119)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002905443077906966
    2. 'int' → logprob: -5.877905368804932
    3. '(get' → logprob: -9.87790584564209
    4. '(str' → logprob: -11.00290584564209
    5. '(' → logprob: -11.12790584564209
    6. 'get' → logprob: -11.25290584564209
    7. ' int' → logprob: -13.50290584564209
    8. 'str' → logprob: -13.62790584564209
    9. '[int' → logprob: -14.37790584564209
    10. '(input' → logprob: -14.62790584564209

Token 231: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.6809284090995789
    2. 'int' → logprob: -0.8059284090995789
    3. 'num' → logprob: -3.6809284687042236
    4. 'input' → logprob: -3.9309284687042236
    5. '(int' → logprob: -6.6809282302856445
    6. 'lambda' → logprob: -8.305928230285645
    7. ' int' → logprob: -9.055928230285645
    8. '(input' → logprob: -9.055928230285645
    9. 'str' → logprob: -9.180928230285645
    10. ')' → logprob: -9.305928230285645

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031347133219242096
    2. ',input' → logprob: -3.5313470363616943
    3. 'input' → logprob: -6.656347274780273
    4. '(input' → logprob: -8.531347274780273
    5. ' ,' → logprob: -10.281347274780273
    6. '   ' → logprob: -10.906347274780273
    7. ' input' → logprob: -11.031347274780273
    8. ')' → logprob: -11.031347274780273
    9. ',x' → logprob: -12.031347274780273
    10. '(),' → logprob: -12.406347274780273

Token 233: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00975998304784298
    2. ' input' → logprob: -4.634759902954102
    3. '   ' → logprob: -12.759759902954102
    4. '(input' → logprob: -14.134759902954102
    5. ' ' → logprob: -15.759759902954102
    6. '[input' → logprob: -16.6347599029541
    7. '	input' → logprob: -16.7597599029541
    8. '  ' → logprob: -17.2597599029541
    9. '<input' → logprob: -17.6347599029541
    10. '    ' → logprob: -17.6347599029541

Token 234: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00016766376211307943
    2. '()' → logprob: -8.750167846679688
    3. '())' → logprob: -11.625167846679688
    4. '()
' → logprob: -16.125167846679688
    5. ')' → logprob: -16.250167846679688
    6. '(' → logprob: -17.125167846679688
    7. ' ().' → logprob: -17.375167846679688
    8. '()[' → logprob: -18.875167846679688
    9. '());' → logprob: -19.125167846679688
    10. '();)' → logprob: -19.375167846679688

Token 235: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011105479672551155
    2. '().' → logprob: -4.511105537414551
    3. ')' → logprob: -10.26110553741455
    4. ' split' → logprob: -11.76110553741455
    5. '())' → logprob: -12.63610553741455
    6. '()' → logprob: -12.63610553741455
    7. '.split' → logprob: -12.76110553741455
    8. ').' → logprob: -13.01110553741455
    9. '.' → logprob: -13.88610553741455
    10. 'strip' → logprob: -14.26110553741455

Token 236: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.13129788637161255
    2. ')' → logprob: -2.1312978267669678
    3. '()' → logprob: -5.506298065185547
    4. '())
' → logprob: -8.381298065185547
    5. '(' → logprob: -10.381298065185547
    6. ')
' → logprob: -10.756298065185547
    7. ' )' → logprob: -12.381298065185547
    8. '()
' → logprob: -12.506298065185547
    9. ' ())' → logprob: -12.756298065185547
    10. '))' → logprob: -13.131298065185547

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4570496678352356
    2. ')' → logprob: -1.8320496082305908
    3. '<|end|>' → logprob: -2.207049608230591
    4. ' x' → logprob: -3.457049608230591
    5. 'x' → logprob: -4.08204984664917
    6. ' ' → logprob: -4.83204984664917
    7. '(x' → logprob: -4.83204984664917
    8. '  ' → logprob: -5.20704984664917
    9. '[' → logprob: -5.45704984664917
    10. '(
' → logprob: -5.95704984664917

Token 238: ' kun' (ID: 4157)
  Prédit: 'kun'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kun' (adapté à ' kun') → logprob: -0.04658123850822449
    2. 'if' → logprob: -4.046581268310547
    3. 'root' → logprob: -4.921581268310547
    4. 'a' → logprob: -4.921581268310547
    5. ' kun' → logprob: -5.296581268310547
    6. 'z' → logprob: -6.171581268310547
    7. '   ' → logprob: -6.671581268310547
    8. 'x' → logprob: -7.046581268310547
    9. 'k' → logprob: -7.296581268310547
    10. 'za' → logprob: -7.546581268310547

Token 239: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -4.179569077678025e-05
    2. 'x' → logprob: -11.750041961669922
    3. '(x' → logprob: -11.750041961669922
    4. ' ite' → logprob: -12.000041961669922
    5. 'it' → logprob: -12.500041961669922
    6. '```' → logprob: -13.250041961669922
    7. '
' → logprob: -13.500041961669922
    8. 'itet' → logprob: -13.750041961669922
    9. '   ' → logprob: -13.875041961669922
    10. ' x' → logprob: -13.875041961669922

Token 240: '(sp' (ID: 33591)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -8.542423165636137e-05
    2. '(' → logprob: -9.500085830688477
    3. 'x' → logprob: -12.000085830688477
    4. '(sp' → logprob: -12.625085830688477
    5. '(
' → logprob: -14.375085830688477
    6. '((' → logprob: -16.000085830688477
    7. ' x' → logprob: -16.250085830688477
    8. ' spots' → logprob: -16.750085830688477
    9. '(per' → logprob: -16.875085830688477
    10. '(y' → logprob: -17.000085830688477

Token 241: 'ots' (ID: 2677)
  Prédit: 'ots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ots' → logprob: -0.012643614783883095
    2. 'ot' → logprob: -4.387643814086914
    3. '[' → logprob: -10.512643814086914
    4. 't' → logprob: -10.512643814086914
    5. '   ' → logprob: -11.012643814086914
    6. 'x' → logprob: -11.137643814086914
    7. '```' → logprob: -11.637643814086914
    8. '#' → logprob: -12.012643814086914
    9. 'o' → logprob: -12.512643814086914
    10. 'ts' → logprob: -12.637643814086914

Token 242: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0004647504829335958
    2. 'x' → logprob: -8.12546443939209
    3. '[y' → logprob: -9.12546443939209
    4. '[' → logprob: -10.00046443939209
    5. '   ' → logprob: -12.00046443939209
    6. ' [' → logprob: -12.87546443939209
    7. ' x' → logprob: -13.87546443939209
    8. ',x' → logprob: -14.00046443939209
    9. '[
' → logprob: -14.12546443939209
    10. '```' → logprob: -14.12546443939209

Token 243: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10638604313135147
    2. '[x' → logprob: -2.6063859462738037
    3. '],' → logprob: -3.7313859462738037
    4. '[' → logprob: -6.981386184692383
    5. '_[' → logprob: -6.981386184692383
    6. '[y' → logprob: -7.731386184692383
    7. '[i' → logprob: -8.481386184692383
    8. '[_' → logprob: -8.606386184692383
    9. '[t' → logprob: -8.856386184692383
    10. '[]' → logprob: -9.231386184692383

Token 244: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -9.65101717156358e-05
    2. ']' → logprob: -10.250096321105957
    3. '   ' → logprob: -10.500096321105957
    4. ' ],' → logprob: -11.125096321105957
    5. '+' → logprob: -12.250096321105957
    6. ' ' → logprob: -12.875096321105957
    7. '],
' → logprob: -13.250096321105957
    8. '       ' → logprob: -13.500096321105957
    9. ' +' → logprob: -14.125096321105957
    10. 'y' → logprob: -14.250096321105957

Token 245: ' spots' (ID: 25522)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.012688344344496727
    2. ' spots' → logprob: -4.387688159942627
    3. '   ' → logprob: -9.387688636779785
    4. 'spot' → logprob: -10.512688636779785
    5. '       ' → logprob: -10.512688636779785
    6. 'sp' → logprob: -12.012688636779785
    7. '  ' → logprob: -12.137688636779785
    8. 'slots' → logprob: -12.387688636779785
    9. '    ' → logprob: -12.637688636779785
    10. ' ' → logprob: -12.887688636779785

Token 246: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0251317135989666
    2. '[x' → logprob: -4.025131702423096
    3. '[' → logprob: -5.525131702423096
    4. 'y' → logprob: -6.400131702423096
    5. '(y' → logprob: -7.900131702423096
    6. '],' → logprob: -8.025132179260254
    7. '),' → logprob: -8.525132179260254
    8. '[i' → logprob: -9.525132179260254
    9. 'spots' → logprob: -9.775132179260254
    10. '[
' → logprob: -10.150132179260254

Token 247: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008669999428093433
    2. '])' → logprob: -4.758669853210449
    3. '_]' → logprob: -10.25866985321045
    4. '_)' → logprob: -12.88366985321045
    5. '])
' → logprob: -13.00866985321045
    6. '__' → logprob: -13.00866985321045
    7. '+' → logprob: -13.25866985321045
    8. ']+' → logprob: -13.75866985321045
    9. ''])' → logprob: -14.00866985321045
    10. '   ' → logprob: -14.00866985321045

Token 248: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0010005362564697862
    2. ')' → logprob: -8.00100040435791
    3. '_' → logprob: -8.00100040435791
    4. '])
' → logprob: -9.12600040435791
    5. '],' → logprob: -9.37600040435791
    6. ')])' → logprob: -10.37600040435791
    7. ']' → logprob: -10.50100040435791
    8. ''])' → logprob: -11.12600040435791
    9. ')]' → logprob: -11.12600040435791
    10. ' ])' → logprob: -11.75100040435791

Token 249: 'ke' (ID: 1272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6553583741188049
    2. '<|end|>' → logprob: -1.0303583145141602
    3. '[' → logprob: -3.65535831451416
    4. '   ' → logprob: -4.03035831451416
    5. ' ' → logprob: -4.28035831451416
    6. 'root' → logprob: -4.53035831451416
    7. '0' → logprob: -5.03035831451416
    8. 'x' → logprob: -5.28035831451416
    9. '[root' → logprob: -5.65535831451416
    10. '(' → logprob: -5.65535831451416

Token 250: 'pt' (ID: 555)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5327140688896179
    2. 'ys' → logprob: -1.5327141284942627
    3. 'ep' → logprob: -1.7827141284942627
    4. 'eps' → logprob: -4.657713890075684
    5. 'eper' → logprob: -5.907713890075684
    6. 'r' → logprob: -6.032713890075684
    7. 'pt' → logprob: -6.532713890075684
    8. 'eping' → logprob: -6.657713890075684
    9. 'yn' → logprob: -6.657713890075684
    10. 'epers' → logprob: -6.907713890075684

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029112137854099274
    2. '=' → logprob: -3.6541121006011963
    3. '_count' → logprob: -6.904112339019775
    4. 's' → logprob: -7.779112339019775
    5. 'count' → logprob: -8.029111862182617
    6. '_indices' → logprob: -8.779111862182617
    7. ' ' → logprob: -8.904111862182617
    8. ',' → logprob: -9.529111862182617
    9. 'root' → logprob: -9.654111862182617
    10. 'roots' → logprob: -10.154111862182617

Token 252: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0176905393600464
    2. '[' → logprob: -1.5176905393600464
    3. 'sum' → logprob: -2.142690658569336
    4. '{' → logprob: -2.267690658569336
    5. 'set' → logprob: -2.392690658569336
    6. '[n' → logprob: -3.642690658569336
    7. 'len' → logprob: -4.392690658569336
    8. '[]' → logprob: -4.517690658569336
    9. '[len' → logprob: -4.767690658569336
    10. '[root' → logprob: -5.017690658569336

Token 253: 'None' (ID: 8505)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.0917938947677612
    2. 'False' → logprob: -1.2167938947677612
    3. 'True' → logprob: -1.9667938947677612
    4. '0' → logprob: -1.9667938947677612
    5. 'i' → logprob: -3.091794013977051
    6. 'root' → logprob: -3.966794013977051
    7. '1' → logprob: -4.841794013977051
    8. 'spot' → logprob: -6.091794013977051
    9. '(i' → logprob: -6.341794013977051
    10. 'spots' → logprob: -6.591794013977051

Token 254: ']*' (ID: 18579)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4439653754234314
    2. ' for' → logprob: -1.0689654350280762
    3. ']' → logprob: -4.318965435028076
    4. '()' → logprob: -6.818965435028076
    5. ')' → logprob: -7.943965435028076
    6. ']*' → logprob: -8.568964958190918
    7. '(' → logprob: -10.068964958190918
    8. '   ' → logprob: -10.693964958190918
    9. ' ' → logprob: -10.943964958190918
    10. 'None' → logprob: -11.193964958190918

Token 255: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00609931256622076
    2. 'm' → logprob: -5.881099224090576
    3. '(n' → logprob: -5.881099224090576
    4. '(' → logprob: -8.506099700927734
    5. 'len' → logprob: -8.881099700927734
    6. '(m' → logprob: -9.381099700927734
    7. '(len' → logprob: -10.631099700927734
    8. ' n' → logprob: -11.381099700927734
    9. 'root' → logprob: -12.631099700927734
    10. ' ' → logprob: -12.631099700927734

Token 256: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27269524335861206
    2. 'count' → logprob: -2.772695302963257
    3. 'idx' → logprob: -3.397695302963257
    4. 'pos' → logprob: -3.397695302963257
    5. 'max' → logprob: -3.897695302963257
    6. 'i' → logprob: -4.022695064544678
    7. 'cnt' → logprob: -4.147695064544678
    8. 'rank' → logprob: -5.147695064544678
    9. 'order' → logprob: -5.272695064544678
    10. 'cur' → logprob: -5.897695064544678

Token 257: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16247205436229706
    2. 'i' → logprob: -2.4124720096588135
    3. 'idx' → logprob: -3.5374720096588135
    4. 'count' → logprob: -4.912472248077393
    5. 'pos' → logprob: -5.037472248077393
    6. 'cnt' → logprob: -5.912472248077393
    7. 'max' → logprob: -6.537472248077393
    8. 'cur' → logprob: -6.662472248077393
    9. 'j' → logprob: -6.787472248077393
    10. ' for' → logprob: -7.037472248077393

Token 258: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06073702126741409
    2. ' i' → logprob: -3.060737133026123
    3. 'idx' → logprob: -5.435737133026123
    4. 'v' → logprob: -6.810737133026123
    5. ' idx' → logprob: -6.810737133026123
    6. 'j' → logprob: -6.935737133026123
    7. 'x' → logprob: -7.060737133026123
    8. 'k' → logprob: -7.310737133026123
    9. '_' → logprob: -7.310737133026123
    10. 'pos' → logprob: -7.810737133026123

Token 259: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.43178579211235046
    2. ' in' → logprob: -1.0567858219146729
    3. 'i' → logprob: -6.056785583496094
    4. ',' → logprob: -8.056785583496094
    5. 's' → logprob: -8.431785583496094
    6. ' i' → logprob: -10.306785583496094
    7. 'x' → logprob: -10.431785583496094
    8. 'n' → logprob: -10.556785583496094
    9. ' ' → logprob: -10.556785583496094
    10. 'idx' → logprob: -11.431785583496094

Token 260: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000611763505730778
    2. ' range' → logprob: -7.625611782073975
    3. 'spots' → logprob: -9.125611305236816
    4. 'root' → logprob: -11.375611305236816
    5. 'perm' → logprob: -13.375611305236816
    6. '(range' → logprob: -14.750611305236816
    7. ' spots' → logprob: -15.500611305236816
    8. '	range' → logprob: -15.625611305236816
    9. 'roots' → logprob: -15.875611305236816
    10. 'rang' → logprob: -15.875611305236816

Token 261: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06248564273118973
    2. 'n' → logprob: -2.812485694885254
    3. ' n' → logprob: -7.937485694885254
    4. '(' → logprob: -8.812485694885254
    5. '(len' → logprob: -12.437485694885254
    6. 'root' → logprob: -13.437485694885254
    7. 'range' → logprob: -13.562485694885254
    8. ',n' → logprob: -13.687485694885254
    9. '   ' → logprob: -13.937485694885254
    10. ' (' → logprob: -14.562485694885254

Token 262: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06283353269100189
    2. '):' → logprob: -2.812833547592163
    3. '):
' → logprob: -8.687833786010742
    4. ':' → logprob: -8.812833786010742
    5. ',' → logprob: -8.937833786010742
    6. ')' → logprob: -9.062833786010742
    7. ':
' → logprob: -9.437833786010742
    8. 'n' → logprob: -9.562833786010742
    9. '   ' → logprob: -10.187833786010742
    10. ',n' → logprob: -10.312833786010742

Token 263: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2429087609052658
    2. 'ke' → logprob: -1.6179087162017822
    3. ' kept' → logprob: -5.742908954620361
    4. 'root' → logprob: -6.117908954620361
    5. ' ke' → logprob: -6.242908954620361
    6. ' if' → logprob: -6.367908954620361
    7. 'if' → logprob: -6.367908954620361
    8. ' root' → logprob: -6.617908954620361
    9. ' p' → logprob: -7.117908954620361
    10. 'k' → logprob: -7.367908954620361

Token 264: ' flavor' (ID: 23341)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8480754494667053
    2. 'root' → logprob: -1.3480753898620605
    3. 'ke' → logprob: -2.4730753898620605
    4. 'p' → logprob: -2.5980753898620605
    5. 'if' → logprob: -2.5980753898620605
    6. 'k' → logprob: -3.8480753898620605
    7. '   ' → logprob: -4.5980753898620605
    8. 'rt' → logprob: -5.3480753898620605
    9. 'par' → logprob: -5.4730753898620605
    10. 'rep' → logprob: -5.5980753898620605

Token 265: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02481767162680626
    2. 'ke' → logprob: -4.64981746673584
    3. ' if' → logprob: -6.02481746673584
    4. 'root' → logprob: -6.27481746673584
    5. ' root' → logprob: -6.39981746673584
    6. ' s' → logprob: -7.02481746673584
    7. 'if' → logprob: -7.14981746673584
    8. ' kept' → logprob: -7.14981746673584
    9. 'r' → logprob: -7.39981746673584
    10. 'k' → logprob: -7.39981746673584

Token 266: ' use' (ID: 1199)
  Prédit: 'ke'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ke' → logprob: -0.09820462018251419
    2. '   ' → logprob: -3.2232046127319336
    3. 'if' → logprob: -4.473204612731934
    4. 'r' → logprob: -4.598204612731934
    5. 'root' → logprob: -4.598204612731934
    6. 'p' → logprob: -5.473204612731934
    7. ' kept' → logprob: -5.723204612731934
    8. 'for' → logprob: -6.098204612731934
    9. 'k' → logprob: -6.098204612731934
    10. ' ' → logprob: -6.723204612731934

Token 267: ' kept' (ID: 13185)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7261896729469299
    2. 'z' → logprob: -0.9761896729469299
    3. 'root' → logprob: -2.101189613342285
    4. 'spots' → logprob: -5.226189613342285
    5. 'ke' → logprob: -5.726189613342285
    6. ' z' → logprob: -6.226189613342285
    7. ' range' → logprob: -6.226189613342285
    8. ' root' → logprob: -6.726189613342285
    9. '   ' → logprob: -7.101189613342285
    10. 'enumer' → logprob: -7.351189613342285

Token 268: ' as' (ID: 472)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.8727576732635498
    2. '[root' → logprob: -1.2477576732635498
    3. '[' → logprob: -1.8727576732635498
    4. '[z' → logprob: -2.62275767326355
    5. 'root' → logprob: -3.87275767326355
    6. 's' → logprob: -4.372757911682129
    7. '=' → logprob: -4.747757911682129
    8. 'ke' → logprob: -4.997757911682129
    9. ' =' → logprob: -5.622757911682129
    10. 'z' → logprob: -5.872757911682129

Token 269: ' poor' (ID: 12530)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0749670267105103
    2. 'root' → logprob: -1.6999670267105103
    3. 'z' → logprob: -2.3249669075012207
    4. 'ke' → logprob: -2.4499669075012207
    5. '[' → logprob: -2.5749669075012207
    6. '   ' → logprob: -2.9499669075012207
    7. 'a' → logprob: -3.5749669075012207
    8. 's' → logprob: -3.6999669075012207
    9. '[z' → logprob: -3.8249669075012207
    10. 'index' → logprob: -4.449966907501221

Token 270: ' man's' (ID: 84071)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5693797469139099
    2. 'for' → logprob: -2.8193798065185547
    3. 's' → logprob: -2.9443798065185547
    4. 'indices' → logprob: -3.5693798065185547
    5. 'visited' → logprob: -3.6943798065185547
    6. '[' → logprob: -3.8193798065185547
    7. 'index' → logprob: -4.069379806518555
    8. 'ans' → logprob: -4.069379806518555
    9. 'keys' → logprob: -4.444379806518555
    10. 'tracker' → logprob: -4.444379806518555

Token 271: ' array' (ID: 2644)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.46694719791412354
    2. 'root' → logprob: -2.591947078704834
    3. 'ke' → logprob: -2.716947078704834
    4. 'union' → logprob: -3.341947078704834
    5. 'visited' → logprob: -3.466947078704834
    6. 'z' → logprob: -3.716947078704834
    7. 'parent' → logprob: -3.966947078704834
    8. 'list' → logprob: -4.341947078704834
    9. 'ds' → logprob: -4.466947078704834
    10. 'array' → logprob: -4.591947078704834

Token 272: ' cache' (ID: 11956)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10630832612514496
    2. '[' → logprob: -3.2313082218170166
    3. 'ke' → logprob: -4.606308460235596
    4. ',' → logprob: -4.856308460235596
    5. '[i' → logprob: -4.981308460235596
    6. ' if' → logprob: -5.106308460235596
    7. ':
' → logprob: -5.231308460235596
    8. '[root' → logprob: -5.481308460235596
    9. ':' → logprob: -6.106308460235596
    10. ' for' → logprob: -6.231308460235596

Token 273: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13223983347415924
    2. 'p' → logprob: -3.757239818572998
    3. ' p' → logprob: -4.007239818572998
    4. 'r' → logprob: -4.382239818572998
    5. 'root' → logprob: -4.382239818572998
    6. 'ke' → logprob: -4.757239818572998
    7. 'if' → logprob: -4.882239818572998
    8. ' root' → logprob: -5.007239818572998
    9. ' if' → logprob: -5.132239818572998
    10. 'k' → logprob: -5.507239818572998

Token 274: '   ' (ID: 271)
  Prédit: 'ke'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ke' → logprob: -0.11492075026035309
    2. '   ' → logprob: -2.4899208545684814
    3. 'root' → logprob: -4.489920616149902
    4. 'if' → logprob: -5.739920616149902
    5. ' kept' → logprob: -5.739920616149902
    6. ' ' → logprob: -6.489920616149902
    7. 'r' → logprob: -6.614920616149902
    8. ' ke' → logprob: -7.239920616149902
    9. ' root' → logprob: -7.239920616149902
    10. 'k' → logprob: -7.364920616149902

Token 275: ' kept' (ID: 13185)
  Prédit: 'ke'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ke' → logprob: -0.3553749918937683
    2. 'r' → logprob: -2.730375051498413
    3. 'root' → logprob: -2.855375051498413
    4. 'p' → logprob: -2.855375051498413
    5. 'k' → logprob: -3.105375051498413
    6. '   ' → logprob: -4.230374813079834
    7. 'if' → logprob: -4.355374813079834
    8. 'i' → logprob: -5.105374813079834
    9. ' kept' → logprob: -5.605374813079834
    10. 'idx' → logprob: -5.855374813079834

Token 276: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.8063639998435974
    2. '[' → logprob: -1.0563640594482422
    3. '[z' → logprob: -1.9313640594482422
    4. '[root' → logprob: -2.931364059448242
    5. '=' → logprob: -5.556364059448242
    6. 'root' → logprob: -6.681364059448242
    7. 'ke' → logprob: -6.931364059448242
    8. 's' → logprob: -8.181364059448242
    9. ' =' → logprob: -8.931364059448242
    10. 'z' → logprob: -9.056364059448242

Token 277: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.227248877286911
    2. '=' → logprob: -1.8522489070892334
    3. ']=' → logprob: -3.2272489070892334
    4. ' =' → logprob: -5.102248668670654
    5. ' ]' → logprob: -7.602248668670654
    6. ')' → logprob: -11.102249145507812
    7. ' ' → logprob: -11.352249145507812
    8. '=z' → logprob: -11.602249145507812
    9. '==' → logprob: -11.727249145507812
    10. '!=' → logprob: -11.852249145507812

Token 278: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014257407747209072
    2. ' =' → logprob: -4.264257431030273
    3. '=root' → logprob: -9.514257431030273
    4. '=z' → logprob: -12.514257431030273
    5. '==' → logprob: -12.889257431030273
    6. 'root' → logprob: -12.889257431030273
    7. '=None' → logprob: -13.139257431030273
    8. '=
' → logprob: -13.389257431030273
    9. '=

' → logprob: -13.514257431030273
    10. ' is' → logprob: -14.264257431030273

Token 279: ' (' (ID: 350)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.028744671493768692
    2. 'spots' → logprob: -4.028744697570801
    3. 'root' → logprob: -5.403744697570801
    4. ' z' → logprob: -5.778744697570801
    5. 's' → logprob: -7.403744697570801
    6. 'perm' → logprob: -7.653744697570801
    7. ' spots' → logprob: -7.778744697570801
    8. '(z' → logprob: -8.1537446975708
    9. 'max' → logprob: -8.5287446975708
    10. 'spot' → logprob: -8.9037446975708

Token 280: 'spots' (ID: 102800)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.10768858343362808
    2. 'spots' → logprob: -2.7326886653900146
    3. 'root' → logprob: -4.1076884269714355
    4. 's' → logprob: -4.2326884269714355
    5. '(z' → logprob: -6.3576884269714355
    6. 'perm' → logprob: -6.8576884269714355
    7. '(' → logprob: -7.2326884269714355
    8. ' z' → logprob: -7.3576884269714355
    9. ' spots' → logprob: -7.8576884269714355
    10. '(s' → logprob: -8.357688903808594

Token 281: '[' (ID: 58)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.007308684289455414
    2. ',' → logprob: -5.882308483123779
    3. 's' → logprob: -6.507308483123779
    4. '[' → logprob: -6.757308483123779
    5. '[z' → logprob: -7.257308483123779
    6. '])' → logprob: -7.757308483123779
    7. '],' → logprob: -8.757308959960938
    8. ']' → logprob: -9.007308959960938
    9. ',s' → logprob: -9.507308959960938
    10. '[root' → logprob: -10.007308959960938

Token 282: 'perm' (ID: 34794)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005886606406420469
    2. '])' → logprob: -6.255886554718018
    3. 'root' → logprob: -7.005886554718018
    4. 'n' → logprob: -7.005886554718018
    5. 'z' → logprob: -7.255886554718018
    6. 'ke' → logprob: -8.380887031555176
    7. ']' → logprob: -8.630887031555176
    8. '[s' → logprob: -9.005887031555176
    9. 'perm' → logprob: -9.130887031555176
    10. ' s' → logprob: -9.255887031555176

Token 283: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.008729803375899792
    2. '[' → logprob: -5.008729934692383
    3. 's' → logprob: -7.133729934692383
    4. '[i' → logprob: -7.133729934692383
    5. '])' → logprob: -8.758729934692383
    6. '[n' → logprob: -9.758729934692383
    7. ']' → logprob: -10.633729934692383
    8. '][' → logprob: -10.883729934692383
    9. '(s' → logprob: -11.133729934692383
    10. '[(' → logprob: -11.258729934692383

Token 284: ']],' (ID: 37171)
  Prédit: ']],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']],' → logprob: -0.41855329275131226
    2. '[s' → logprob: -1.668553352355957
    3. ']]' → logprob: -1.918553352355957
    4. ']' → logprob: -6.043553352355957
    5. ']])' → logprob: -6.043553352355957
    6. '],' → logprob: -7.043553352355957
    7. 's' → logprob: -8.668553352355957
    8. ']+' → logprob: -8.668553352355957
    9. '[' → logprob: -8.668553352355957
    10. ']]]' → logprob: -9.293553352355957

Token 285: ' spots' (ID: 25522)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.19808094203472137
    2. 'root' → logprob: -2.8230810165405273
    3. 's' → logprob: -3.1980810165405273
    4. 'perm' → logprob: -3.1980810165405273
    5. 'spots' → logprob: -3.4480810165405273
    6. 'ke' → logprob: -6.073081016540527
    7. ' z' → logprob: -6.573081016540527
    8. 'n' → logprob: -7.698081016540527
    9. 'spot' → logprob: -7.823081016540527
    10. ' spots' → logprob: -7.823081016540527

Token 286: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.3898048400878906
    2. '[' → logprob: -1.1398048400878906
    3. 's' → logprob: -6.764804840087891
    4. '[n' → logprob: -7.389804840087891
    5. 'perm' → logprob: -8.13980484008789
    6. '])' → logprob: -8.51480484008789
    7. ')' → logprob: -9.13980484008789
    8. '[x' → logprob: -9.63980484008789
    9. '[_' → logprob: -9.63980484008789
    10. '(s' → logprob: -10.26480484008789

Token 287: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0011558164842426777
    2. ']' → logprob: -7.376155853271484
    3. '],' → logprob: -8.751155853271484
    4. '])
' → logprob: -8.876155853271484
    5. ']+' → logprob: -9.751155853271484
    6. ')' → logprob: -10.626155853271484
    7. ']))' → logprob: -10.626155853271484
    8. '])+' → logprob: -10.626155853271484
    9. '])]' → logprob: -10.751155853271484
    10. ']])' → logprob: -10.751155853271484

Token 288: 'count' (ID: 5420)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5464940071105957
    2. ']' → logprob: -1.4214940071105957
    3. '<|end|>' → logprob: -2.5464940071105957
    4. '[' → logprob: -2.9214940071105957
    5. ' ' → logprob: -5.171494007110596
    6. 's' → logprob: -5.171494007110596
    7. '.' → logprob: -5.421494007110596
    8. '   ' → logprob: -5.546494007110596
    9. 'for' → logprob: -5.796494007110596
    10. '.sort' → logprob: -6.046494007110596

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.503892719745636
    2. '=' → logprob: -1.0038926601409912
    3. 's' → logprob: -3.878892660140991
    4. '(' → logprob: -6.25389289855957
    5. '_set' → logprob: -6.25389289855957
    6. '_' → logprob: -6.87889289855957
    7. 'ed' → logprob: -7.00389289855957
    8. 'set' → logprob: -7.62889289855957
    9. ')' → logprob: -7.75389289855957
    10. '=set' → logprob: -7.75389289855957

Token 290: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.028523404151201248
    2. ' ' → logprob: -3.6535234451293945
    3. 'len' → logprob: -7.4035234451293945
    4. 'n' → logprob: -8.153523445129395
    5. 'sum' → logprob: -8.153523445129395
    6. '{}' → logprob: -8.278523445129395
    7. ' n' → logprob: -8.653523445129395
    8. ' len' → logprob: -8.903523445129395
    9. ' sum' → logprob: -9.278523445129395
    10. '[' → logprob: -9.403523445129395

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029411738738417625
    2. '{}' → logprob: -4.029411792755127
    3. 'sum' → logprob: -5.529411792755127
    4. 'len' → logprob: -5.529411792755127
    5. 'n' → logprob: -6.529411792755127
    6. '{}
' → logprob: -7.779411792755127
    7. 'default' → logprob: -8.029411315917969
    8. 'dict' → logprob: -8.279411315917969
    9. '{' → logprob: -8.654411315917969
    10. '[' → logprob: -8.779411315917969

Token 292: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005983900744467974
    2. ' for' → logprob: -5.755983829498291
    3. 'i' → logprob: -6.255983829498291
    4. '
' → logprob: -7.505983829498291
    5. 's' → logprob: -9.25598430633545
    6. '<|end|>' → logprob: -9.38098430633545
    7. '```' → logprob: -10.25598430633545
    8. 'while' → logprob: -10.75598430633545
    9. ')' → logprob: -10.88098430633545
    10. '   ' → logprob: -11.25598430633545

Token 293: 'idx' (ID: 13196)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010902655776590109
    2. 'i' → logprob: -9.75010871887207
    3. ' for' → logprob: -10.25010871887207
    4. 's' → logprob: -11.25010871887207
    5. '
' → logprob: -13.62510871887207
    6. '```' → logprob: -15.00010871887207
    7. ')' → logprob: -15.75010871887207
    8. 'n' → logprob: -16.00010871887207
    9. 'range' → logprob: -16.25010871887207
    10. '<|end|>' → logprob: -16.25010871887207

Token 294: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132953345775604
    2. '=' → logprob: -1.3132953643798828
    3. 's' → logprob: -10.813295364379883
    4. ' ' → logprob: -12.313295364379883
    5. '_' → logprob: -13.313295364379883
    6. 'for' → logprob: -13.563295364379883
    7. '0' → logprob: -13.688295364379883
    8. ',' → logprob: -14.188295364379883
    9. 'x' → logprob: -14.313295364379883
    10. ')' → logprob: -14.563295364379883

Token 295: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00868205912411213
    2. ' ' → logprob: -4.7586822509765625
    3. 'n' → logprob: -9.883682250976562
    4. '1' → logprob: -12.008682250976562
    5. ' n' → logprob: -12.258682250976562
    6. '[' → logprob: -13.633682250976562
    7. 'm' → logprob: -13.758682250976562
    8. ' [' → logprob: -14.758682250976562
    9. '```' → logprob: -14.758682250976562
    10. '   ' → logprob: -14.883682250976562

Token 296: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006017650011926889
    2. 'n' → logprob: -8.125601768493652
    3. ' ' → logprob: -8.375601768493652
    4. '1' → logprob: -9.750601768493652
    5. '-' → logprob: -12.375601768493652
    6. 's' → logprob: -13.188101768493652
    7. 'm' → logprob: -13.188101768493652
    8. '[' → logprob: -13.563101768493652
    9. ' n' → logprob: -13.875601768493652
    10. '[n' → logprob: -14.250601768493652

Token 297: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03487781435251236
    2. ' while' → logprob: -4.034877777099609
    3. 'n' → logprob: -4.659877777099609
    4. '<|end|>' → logprob: -5.284877777099609
    5. '
' → logprob: -6.534877777099609
    6. 'for' → logprob: -8.90987777709961
    7. '<n' → logprob: -9.15987777709961
    8. 'count' → logprob: -9.90987777709961
    9. '(n' → logprob: -10.40987777709961
    10. ')' → logprob: -10.40987777709961

Token 298: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.007152814418077469
    2. 'n' → logprob: -5.382153034210205
    3. ' while' → logprob: -6.257153034210205
    4. '<|end|>' → logprob: -8.132152557373047
    5. '```' → logprob: -8.757152557373047
    6. 'for' → logprob: -9.757152557373047
    7. 'count' → logprob: -10.132152557373047
    8. '
' → logprob: -10.882152557373047
    9. '<n' → logprob: -11.132152557373047
    10. '(n' → logprob: -11.757152557373047

Token 299: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.10054480284452438
    2. ' idx' → logprob: -2.3505446910858154
    3. 'n' → logprob: -8.225544929504395
    4. ' n' → logprob: -9.850544929504395
    5. '	idx' → logprob: -11.725544929504395
    6. 'count' → logprob: -12.725544929504395
    7. '   ' → logprob: -13.100544929504395
    8. 'index' → logprob: -13.475544929504395
    9. '(idx' → logprob: -13.475544929504395
    10. ' ' → logprob: -14.600544929504395

Token 300: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03627433627843857
    2. '<n' → logprob: -3.5362744331359863
    3. '<' → logprob: -5.036274433135986
    4. ' ' → logprob: -13.536273956298828
    5. ' n' → logprob: -13.911273956298828
    6. 'n' → logprob: -13.911273956298828
    7. '<len' → logprob: -14.286273956298828
    8. ' <=' → logprob: -14.661273956298828
    9. '<count' → logprob: -15.411273956298828
    10. '[n' → logprob: -16.161273956298828

Token 301: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.583550642360933e-05
    2. ' n' → logprob: -10.250036239624023
    3. 'len' → logprob: -15.000036239624023
    4. 'count' → logprob: -16.875036239624023
    5. 'm' → logprob: -17.000036239624023
    6. '   ' → logprob: -18.375036239624023
    7. ' ' → logprob: -18.875036239624023
    8. '```' → logprob: -19.000036239624023
    9. '	n' → logprob: -19.375036239624023
    10. '  ' → logprob: -19.750036239624023

Token 302: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3298620879650116
    2. ' and' → logprob: -1.454862117767334
    3. ':' → logprob: -3.329862117767334
    4. 'and' → logprob: -4.454862117767334
    5. '   ' → logprob: -9.579861640930176
    6. ' :
' → logprob: -10.704861640930176
    7. ':

' → logprob: -10.954861640930176
    8. '):
' → logprob: -11.954861640930176
    9. ' ' → logprob: -13.079861640930176
    10. ':
' → logprob: -13.454861640930176

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01182506512850523
    2. 'root' → logprob: -5.261825084686279
    3. 'r' → logprob: -5.761825084686279
    4. 'if' → logprob: -6.386825084686279
    5. 'p' → logprob: -7.761825084686279
    6. 'z' → logprob: -7.886825084686279
    7. 'w' → logprob: -8.636824607849121
    8. 'j' → logprob: -9.011824607849121
    9. 'count' → logprob: -9.011824607849121
    10. 'cur' → logprob: -9.511824607849121

Token 304: ' u' (ID: 337)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -1.0567092895507812
    2. 'end' → logprob: -1.5567092895507812
    3. 'r' → logprob: -1.9317092895507812
    4. '   ' → logprob: -2.0567092895507812
    5. 'if' → logprob: -2.9317092895507812
    6. 'j' → logprob: -3.1817092895507812
    7. 'z' → logprob: -3.9317092895507812
    8. 'cur' → logprob: -3.9317092895507812
    9. 'max' → logprob: -4.681709289550781
    10. 'group' → logprob: -5.806709289550781

Token 305: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6947769522666931
    2. ' =' → logprob: -0.6947769522666931
    3. 'root' → logprob: -6.944777011871338
    4. '_root' → logprob: -7.819777011871338
    5. '=root' → logprob: -9.06977653503418
    6. '   ' → logprob: -9.94477653503418
    7. 'z' → logprob: -10.56977653503418
    8. 'f' → logprob: -11.69477653503418
    9. '=u' → logprob: -11.94477653503418
    10. 'u' → logprob: -12.19477653503418

Token 306: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00840641837567091
    2. 'idx' → logprob: -6.008406639099121
    3. ' v' → logprob: -6.258406639099121
    4. 'ke' → logprob: -6.383406639099121
    5. 'root' → logprob: -6.883406639099121
    6. 'u' → logprob: -7.633406639099121
    7. '_' → logprob: -8.633406639099121
    8. 'count' → logprob: -8.883406639099121
    9. 'z' → logprob: -9.383406639099121
    10. ' idx' → logprob: -9.883406639099121

Token 307: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889430224895477
    2. ' =' → logprob: -2.5788943767547607
    3. ',' → logprob: -12.82889461517334
    4. '=u' → logprob: -13.70389461517334
    5. 'u' → logprob: -15.20389461517334
    6. '=user' → logprob: -16.078893661499023
    7. '=_' → logprob: -16.328893661499023
    8. '   ' → logprob: -16.828893661499023
    9. '_=' → logprob: -16.953893661499023
    10. ')' → logprob: -16.953893661499023

Token 308: ' kept' (ID: 13185)
  Prédit: 'ke'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ke' → logprob: -0.6549603939056396
    2. 'z' → logprob: -0.7799603939056396
    3. 'root' → logprob: -4.779960632324219
    4. ' z' → logprob: -5.029960632324219
    5. ' kept' → logprob: -5.529960632324219
    6. '(' → logprob: -7.154960632324219
    7. '(z' → logprob: -7.279960632324219
    8. ' root' → logprob: -8.404960632324219
    9. 'idx' → logprob: -8.529960632324219
    10. '  ' → logprob: -8.904960632324219

Token 309: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.8889261304575484e-06
    2. 'idx' → logprob: -12.625003814697266
    3. '[' → logprob: -15.125003814697266
    4. '[index' → logprob: -16.625003814697266
    5. '[id' → logprob: -16.875003814697266
    6. '```' → logprob: -17.750003814697266
    7. ' idx' → logprob: -18.250003814697266
    8. '	idx' → logprob: -18.875003814697266
    9. '   ' → logprob: -19.500003814697266
    10. '[i' → logprob: -19.500003814697266

Token 310: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5760088562965393
    2. ']' → logprob: -0.8260088562965393
    3. '   ' → logprob: -10.201008796691895
    4. ']
' → logprob: -11.326008796691895
    5. ' ]
' → logprob: -12.326008796691895
    6. ']

' → logprob: -12.451008796691895
    7. ' ]' → logprob: -12.576008796691895
    8. '[idx' → logprob: -12.701008796691895
    9. '[' → logprob: -12.826008796691895
    10. '][' → logprob: -13.826008796691895

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04042532667517662
    2. 'if' → logprob: -3.4154253005981445
    3. ' if' → logprob: -6.5404253005981445
    4. 'root' → logprob: -6.7904253005981445
    5. '    
' → logprob: -6.7904253005981445
    6. 'idx' → logprob: -6.9154253005981445
    7. '
' → logprob: -7.4154253005981445
    8. 'z' → logprob: -7.9154253005981445
    9. '```' → logprob: -8.165425300598145
    10. 'while' → logprob: -8.290425300598145

Token 312: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014892044477164745
    2. '   ' → logprob: -5.264892101287842
    3. 'idx' → logprob: -5.264892101287842
    4. 'root' → logprob: -6.014892101287842
    5. 'while' → logprob: -7.014892101287842
    6. 'u' → logprob: -7.389892101287842
    7. 'z' → logprob: -8.389891624450684
    8. 'count' → logprob: -9.264891624450684
    9. ' if' → logprob: -9.764891624450684
    10. 'r' → logprob: -10.764891624450684

Token 313: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.004379567224532366
    2. 'u' → logprob: -5.629379749298096
    3. 'root' → logprob: -7.504379749298096
    4. ' z' → logprob: -9.379379272460938
    5. 'v' → logprob: -9.629379272460938
    6. 'idx' → logprob: -10.504379272460938
    7. '   ' → logprob: -11.879379272460938
    8. '  ' → logprob: -12.379379272460938
    9. '(u' → logprob: -12.379379272460938
    10. 'x' → logprob: -12.379379272460938

Token 314: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.9361264946837764e-07
    2. '.find' → logprob: -16.625
    3. '=find' → logprob: -17.125
    4. ' find' → logprob: -17.625
    5. '(find' → logprob: -18.0
    6. '_find' → logprob: -19.625
    7. '[' → logprob: -20.5
    8. 'f' → logprob: -20.625
    9. '	find' → logprob: -20.625
    10. 'count' → logprob: -21.25

Token 315: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.00042543161544017494
    2. '(v' → logprob: -8.000425338745117
    3. 'u' → logprob: -9.625425338745117
    4. '(' → logprob: -10.875425338745117
    5. '(s' → logprob: -13.250425338745117
    6. '(root' → logprob: -14.125425338745117
    7. ' (' → logprob: -14.500425338745117
    8. '(sp' → logprob: -14.875425338745117
    9. '(idx' → logprob: -15.125425338745117
    10. '((' → logprob: -15.250425338745117

Token 316: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010621058754622936
    2. ')==' → logprob: -7.126061916351318
    3. '==' → logprob: -8.376062393188477
    4. ' ==' → logprob: -11.126062393188477
    5. ' )' → logprob: -11.876062393188477
    6. '()' → logprob: -12.376062393188477
    7. '())' → logprob: -14.501062393188477
    8. '()==' → logprob: -15.501062393188477
    9. ')
' → logprob: -15.751062393188477
    10. ')!=' → logprob: -16.001062393188477

Token 317: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.004660572856664658
    2. ' ==' → logprob: -5.379660606384277
    3. '!=' → logprob: -10.379660606384277
    4. '=' → logprob: -11.754660606384277
    5. '==
' → logprob: -14.379660606384277
    6. ' !=' → logprob: -15.379660606384277
    7. ')==' → logprob: -15.504660606384277
    8. '===' → logprob: -16.25465965270996
    9. ')' → logprob: -16.25465965270996
    10. '()==' → logprob: -16.25465965270996

Token 318: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0007152927573770285
    2. ' z' → logprob: -8.250715255737305
    3. 'u' → logprob: -8.500715255737305
    4. 'v' → logprob: -8.750715255737305
    5. 'root' → logprob: -9.375715255737305
    6. '   ' → logprob: -13.125715255737305
    7. '	z' → logprob: -13.875715255737305
    8. ' ' → logprob: -14.125715255737305
    9. 'spots' → logprob: -14.250715255737305
    10. ' root' → logprob: -14.375715255737305

Token 319: 'find' (ID: 6555)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9177632331848145
    2. 'find' → logprob: -1.0427632331848145
    3. 'z' → logprob: -1.5427632331848145
    4. '(v' → logprob: -3.5427632331848145
    5. '(z' → logprob: -5.6677632331848145
    6. '(find' → logprob: -6.7927632331848145
    7. 'root' → logprob: -8.417762756347656
    8. ' v' → logprob: -9.042762756347656
    9. '=find' → logprob: -9.667762756347656
    10. ' z' → logprob: -10.042762756347656

Token 320: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -8.41866585687967e-06
    2. 'v' → logprob: -12.125008583068848
    3. '(' → logprob: -13.375008583068848
    4. '(u' → logprob: -13.750008583068848
    5. ' (' → logprob: -16.37500762939453
    6. '   ' → logprob: -16.87500762939453
    7. '```' → logprob: -17.12500762939453
    8. '(
' → logprob: -17.37500762939453
    9. '
' → logprob: -17.62500762939453
    10. '[v' → logprob: -18.12500762939453

Token 321: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1603275090456009
    2. '):
' → logprob: -1.9103275537490845
    3. ')' → logprob: -9.535327911376953
    4. ':' → logprob: -11.410327911376953
    5. '):
' → logprob: -12.035327911376953
    6. '   ' → logprob: -12.160327911376953
    7. ' ):' → logprob: -12.285327911376953
    8. '):

' → logprob: -13.285327911376953
    9. ' ):
' → logprob: -13.660327911376953
    10. ':
' → logprob: -14.785327911376953

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20555076003074646
    2. 'count' → logprob: -1.7055507898330688
    3. '   ' → logprob: -5.830550670623779
    4. ' count' → logprob: -7.205550670623779
    5. '
' → logprob: -8.330551147460938
    6. '	count' → logprob: -8.830551147460938
    7. '```' → logprob: -11.080551147460938
    8. '	' → logprob: -11.955551147460938
    9. ',count' → logprob: -12.455551147460938
    10. '	   ' → logprob: -12.580551147460938

Token 323: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.00012106612848583609
    2. '       ' → logprob: -9.875121116638184
    3. '   ' → logprob: -10.375121116638184
    4. ' count' → logprob: -11.250121116638184
    5. 'idx' → logprob: -11.375121116638184
    6. '
' → logprob: -11.500121116638184
    7. '	count' → logprob: -12.875121116638184
    8. '```' → logprob: -14.500121116638184
    9. 'index' → logprob: -15.500121116638184
    10. '.count' → logprob: -16.250120162963867

Token 324: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10033100098371506
    2. '+=' → logprob: -2.3503310680389404
    3. '=' → logprob: -9.72533130645752
    4. ' =' → logprob: -10.35033130645752
    5. '+' → logprob: -11.10033130645752
    6. ' ' → logprob: -11.35033130645752
    7. ')' → logprob: -13.47533130645752
    8. ']+=' → logprob: -13.72533130645752
    9. ' +' → logprob: -13.97533130645752
    10. '<|end|>' → logprob: -14.10033130645752

Token 325: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.250017166137695
    4. '```' → logprob: -19.125017166137695
    5. '
' → logprob: -19.250017166137695
    6. ' ' → logprob: -19.750017166137695
    7. '  ' → logprob: -20.000017166137695
    8. '+' → logprob: -20.250017166137695
    9. 'n' → logprob: -20.750017166137695
    10. '2' → logprob: -20.812517166137695

Token 326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.500001907348633
    3. 'n' → logprob: -15.250001907348633
    4. 'idx' → logprob: -15.375001907348633
    5. 'perm' → logprob: -17.250001907348633
    6. 'v' → logprob: -17.375001907348633
    7. '   ' → logprob: -18.000001907348633
    8. 'u' → logprob: -18.000001907348633
    9. '(' → logprob: -18.125001907348633
    10. 'len' → logprob: -18.375001907348633

Token 327: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003651152830570936
    2. ' idx' → logprob: -6.128651142120361
    3. 'idx' → logprob: -7.003651142120361
    4. '
' → logprob: -8.50365161895752
    5. '	idx' → logprob: -8.50365161895752
    6. '[idx' → logprob: -9.75365161895752
    7. '```' → logprob: -10.12865161895752
    8. '    
' → logprob: -10.62865161895752
    9. '       ' → logprob: -12.12865161895752
    10. ',' → logprob: -12.12865161895752

Token 328: '   ' (ID: 271)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3881974220275879
    2. '   ' → logprob: -1.138197422027588
    3. ' idx' → logprob: -6.638197422027588
    4. '
' → logprob: -12.13819694519043
    5. '```' → logprob: -12.26319694519043
    6. '	idx' → logprob: -12.63819694519043
    7. '    
' → logprob: -14.01319694519043
    8. 'index' → logprob: -14.51319694519043
    9. '       ' → logprob: -14.88819694519043
    10. '_idx' → logprob: -15.01319694519043

Token 329: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02987140230834484
    2. 'idx' (adapté à ' idx') → logprob: -3.5298714637756348
    3. ' idx' → logprob: -9.404870986938477
    4. '	idx' → logprob: -10.529870986938477
    5. '```' → logprob: -12.029870986938477
    6. '
' → logprob: -13.029870986938477
    7. '[idx' → logprob: -13.404870986938477
    8. '    
' → logprob: -13.904870986938477
    9. '_idx' → logprob: -15.029870986938477
    10. '       ' → logprob: -15.404870986938477

Token 330: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5064672827720642
    2. '+=' → logprob: -1.006467342376709
    3. ' +=' → logprob: -3.506467342376709
    4. '++' → logprob: -6.631467342376709
    5. '=' → logprob: -7.756467342376709
    6. '1' → logprob: -10.25646686553955
    7. ' +' → logprob: -10.38146686553955
    8. '+++' → logprob: -10.50646686553955
    9. '+
' → logprob: -12.25646686553955
    10. '   ' → logprob: -12.25646686553955

Token 331: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -17.750001907348633
    4. '   ' → logprob: -19.250001907348633
    5. '１' → logprob: -21.125001907348633
    6. '+' → logprob: -21.437501907348633
    7. '۱' → logprob: -21.687501907348633
    8. '  ' → logprob: -22.125001907348633
    9. ' ' → logprob: -22.437501907348633
    10. '
' → logprob: -22.437501907348633

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -18.75
    4. '１' → logprob: -21.875
    5. '   ' → logprob: -21.875
    6. '۱' → logprob: -22.1875
    7. '१' → logprob: -23.0625
    8. '১' → logprob: -23.8125
    9. '  ' → logprob: -23.875
    10. '+' → logprob: -23.875

Token 333: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7432603272027336e-06
    2. '
' → logprob: -13.375001907348633
    3. ' print' → logprob: -16.250001907348633
    4. '```' → logprob: -17.125001907348633
    5. '#print' → logprob: -19.000001907348633
    6. 'pr' → logprob: -19.750001907348633
    7. '``' → logprob: -20.375001907348633
    8. '    
' → logprob: -20.625001907348633
    9. '(print' → logprob: -20.625001907348633
    10. '#' → logprob: -20.750001907348633

Token 334: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.0
    3. ' print' → logprob: -17.625
    4. '#print' → logprob: -19.625
    5. '``' → logprob: -19.625
    6. '
' → logprob: -20.375
    7. ')' → logprob: -21.75
    8. '\' → logprob: -22.125
    9. '#' → logprob: -22.125
    10. '`' → logprob: -22.375

Token 335: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -6.20603168499656e-05
    2. '(' → logprob: -9.750061988830566
    3. 'count' → logprob: -12.500061988830566
    4. '(c' → logprob: -18.500062942504883
    5. '(
' → logprob: -18.625062942504883
    6. '=count' → logprob: -18.750062942504883
    7. ',count' → logprob: -19.250062942504883
    8. ' count' → logprob: -19.250062942504883
    9. ' (' → logprob: -19.375062942504883
    10. '('' → logprob: -19.750062942504883

Token 336: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.625000953674316
    3. ' )' → logprob: -15.000000953674316
    4. '))' → logprob: -16.375001907348633
    5. ')`' → logprob: -16.750001907348633
    6. '+' → logprob: -17.250001907348633
    7. '())' → logprob: -17.500001907348633
    8. ')#' → logprob: -17.750001907348633
    9. '()' → logprob: -17.875001907348633
    10. '```' → logprob: -18.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 334
Tokens correctement prédits (1ère position, stricte): 122
Tokens correctement prédits (1ère position, avec adaptation): 127
Tokens correctement prédits (top 10): 253
Précision stricte (1ère position): 36.53%
Précision adaptée (1ère position): 38.02%
Précision (top 10): 75.75%
================================================================================
