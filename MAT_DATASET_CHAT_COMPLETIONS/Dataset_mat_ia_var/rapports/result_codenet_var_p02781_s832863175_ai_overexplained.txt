================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:27:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys  # Le module sys fournit des fonctions et des variables utiles pour manipuler l'environnement d'exécution Python
import collections as cl  # collections est un module standard, ici abrégé 'cl', souvent utilisé pour des structures de données avancées
import bisect as bs  # bisect est un module pour gérer efficacement les tris et recherches dans les listes, ici abrégé 'bs'

# Augmente la limite de récursion pour autoriser des appels récursifs plus profonds que la limite standard (par défaut ~1000)
sys.setrecursionlimit(100000)

# Redéfinit la fonction d'entrée pour récupérer plus facilement des lignes depuis stdin (entrée standard)
input = sys.stdin.readline

# Définit une constante 'mod' à 10^9 + 7, communément utilisée comme modulateur dans des problèmes pour éviter les débordements d'entiers
mod = 10**9+7

# Définit 'Max' comme la plus grande valeur d'entier supportée par ce système (utilisée pour initialiser des bornes hautes)
Max = sys.maxsize

# Fonction qui retourne une liste d'entiers, après découpage de l'entrée sur les espaces
def l():
    # Prend une ligne d'entrée, la découpe sur les espaces, convertit chaque morceau en entier, et retourne la liste résultante
    return list(map(int, input().split()))

# Fonction qui retourne un map des entiers (permet d'accéder en itérateur directement)
def m():
    # Prend une ligne d'entrée, la découpe sur les espaces, convertit et retourne un itérateur d'entiers
    return map(int, input().split())

# Fonction qui lit et retourne directement un entier (utile pour lire les coordonnées ou longueurs)
def onem():
    # Prend une ligne d'entrée, la convertit en entier et la retourne
    return int(input())

# Fonction de "compression": compte et regroupe les valeurs consécutives dans une liste ou chaîne
def s(x):
    # Initialise une liste vide pour stocker le résultat compressé
    a = []
    # Prend le premier élément comme élément courant à compresser
    aa = x[0]
    # Initialise le compteur pour le nombre d'éléments consécutifs identiques
    su = 1
    # Parcourt la liste de l'index 0 à l'avant-dernier index
    for i in range(len(x)-1):
        # Vérifie si la valeur courante et la prochaine sont différentes
        if aa != x[i+1]:
            # Ajoute le couple (valeur, nombre de répétitions consécutives) au tableau des résultats
            a.append([aa, su])
            # Redéfinit l'élément courant (pour la prochaine série consécutive)
            aa = x[i+1]
            # Réinitialise le compteur
            su = 1
        else:
            # Si la même valeur se répète, augmente le compteur
            su += 1
    # Après la boucle, ajoute le dernier bloc compressé
    a.append([aa, su])
    # Retourne la liste des blocs compressés
    return a

# Fonction qui rassemble les éléments d'une liste en chaîne de caractères, séparées par un espace
def jo(x):
    # Utilise la fonction map pour convertir chaque élément de la liste en chaîne, puis les joint avec un espace entre eux
    return " ".join(map(str, x))

# Fonction pour trouver la plus grande valeur dans une liste de listes à deux dimensions
def max2(x):
    # Applique 'max' à chaque liste (trouve le maximum de chaque ligne) puis prend le maximum général
    return max(map(max, x))

# Fonction qui vérifie si 'x' est présent dans une liste 'a' supposée triée, en utilisant la recherche dichotomique
def In(x, a):
    # Cherche la première position où insérer x dans a pour maintenir l'ordre trié
    k = bs.bisect_left(a, x)
    # Si l'indice trouvé n'est pas hors limite et que l'élément à cet indice est bien 'x', alors il existe dans a
    if k != len(a) and a[k] == x:
        return True
    else:
        return False

"""
# Exemple de squelette pour une recherche binaire personnalisée, utilisé couramment pour chercher des valeurs ou bornes dans une plage
def nibu(x, n, r):
    ll = 0  # Borne basse de la plage recherchée
    rr = r  # Borne haute de la plage recherchée
    while True:
        mid = (ll + rr) // 2  # Calcule le point à tester (milieu)
        # Il manque ici la condition (par exemple, si ok(mid): rr = mid else: ll = mid + 1)
    if rr == mid:
        return ll
    if (ici mettre la condition de coupure):
        rr = mid
    else:
        ll = mid + 1
"""

# Lit un entier 'n' depuis l'entrée standard ; cela sert généralement de borne supérieure ou de quantité
n = onem()

# Lit un entier 'k', valeur de référence ou contrainte pour le problème
k = onem()

# Convertit l'entier 'n' en chaîne de caractères pour pouvoir accéder à chaque chiffre individuellement
s = str(n)

# Crée une table dp0 pour les cas "plus petits" que le préfixe de n, dimensions : [longueur de n + 1][4]
dp0 = [[0 for j in range(4)] for i in range(len(str(n)) + 1)]

# Crée une table dp1 pour les cas "égaux" au préfixe de n, dimensions : [longueur de n + 1][4]
dp1 = [[0 for j in range(4)] for i in range(len(str(n)) + 1)]

# Initialise un compteur 'po' à 0, utilisé pour compter les occurrences d'un chiffre ‘0’ parmi les chiffres parcourus
po = 0

# Initialise le point de départ pour les états ‘dp’ :
# dp0 à l'indice 0 et pour 0 chiffre non-zéro est bien 0 ; il n'y a aucune façon de former un nombre en partant de rien
dp0[0][0] = 0
# dp1 à l'indice 0 et pour 0 chiffre non-zéro est 1 ; il y a exactement une façon de former un "nombre vide"
dp1[0][0] = 1

# Boucle sur chaque position de chiffre de la gauche vers la droite (i de 1 jusqu'à longueur de s incluse)
for i in range(1, len(str(n)) + 1):
    # Calcule l'indice du chiffre actuel (i-1 car les index de chaînes commencent à 0)
    point = i - 1
    # Convertit le chiffre courant en entier
    np = int(s[point])
    # Si le chiffre courant est égal à 0, incrémente le compteur de zéros rencontrés jusqu'ici
    po += 1 if np == 0 else 0

    # Il y a exactement 1 façon de conserver un nombre vide lors du passage à la position suivante
    dp0[i][0] = 1
    # Quand on est dans la branche "égale à n", il n'y a aucune façon d'avoir 0 chiffre non-zéro sauf au tout début
    dp1[i][0] = 0

    # Pour 1 chiffre non-zéro :
    #   - dp1[i-1][0] * max(0, np-1): nombres ayant 0 chiffre non-zéro et dont le chiffre courant est strictement inférieur à np et non nul
    #   - dp0[i-1][0]*9: nombres strictement inférieurs à n à la position précédente et ajouter 1..9 ici (toujours un chiffre non-zéro)
    #   - dp0[i-1][1]: nombres strictement inférieurs à n déjà avec 1 chiffre non-zéro, on peut ajouter un zéro ici
    #   - (dp1[i-1][1] if np != 0 else 0): nombres "égaux" à n avec déjà 1 chiffre non-zéro, il est possible de poursuivre seulement si np!=0
    dp0[i][1] = (
        dp1[i-1][0] * (max(0, np-1)) +  # Prend tous les chiffres de 1 jusqu’à (np-1)
        dp0[i-1][0] * 9 +               # Ajoute un chiffre non-zéro à une séquence déjà plus petite que n
        dp0[i-1][1] +                   # Ajoute un zéro à une séquence déjà plus petite avec 1 chiffre non-zéro
        (dp1[i-1][1] if np != 0 else 0) # Continue la séquence égale si possible
    )
    # Il y a exactement 1 façon d'avoir exactement 1 chiffre non-zéro, c'est quand on a placé autant de chiffres que (i == 1 + nombre de 0)
    dp1[i][1] = 1 if i == 1 + po else 0

    # Pour 2 chiffres non-zéro, raisonnement analogue mais commence à partir d’avoir déjà 1 chiffre non-zéro
    dp0[i][2] = (
        dp1[i-1][1] * (max(0, np-1)) +  # Prend tous les chiffres < np pour la deuxième non-zero
        dp0[i-1][1] * 9 +               # Ajoute n'importe quel chiffre non-zéro à une séquence déjà plus petite avec 1 chiffre non-zéro
        dp0[i-1][2] +                   # Ajoute un zéro à une séquence déjà plus petite avec 2 chiffres non-zéro
        (dp1[i-1][2] if np != 0 else 0) # Continue la séquence égale si possible
    )
    # Il n'existe qu'une seule façon d'avoir 2 chiffres non-zéro si on a avancé sur (2 + nombre de 0) positions
    dp1[i][2] = 1 if i == 2 + po else 0

    # Pour 3 chiffres non-zéro, itération supplémentaire, selon la même logique
    dp0[i][3] = (
        dp1[i-1][2] * (max(0, np-1)) +  # Prend toutes les possibilités de la branche égale avant dernière non-zero
        dp0[i-1][2] * 9 +               # Ajoute n'importe quel chiffre non-zéro à une séquence déjà plus petite avec 2 chiffres non-zéro
        dp0[i-1][3] +                   # Ajoute un zéro à une séquence déjà plus petite avec 3 chiffres non-zéro
        (dp1[i-1][3] if np != 0 else 0) # Continue la séquence égale si possible
    )
    # Exactement une possibilité si on est sur la position (3 + nombre de 0 parcourt jusque là)
    dp1[i][3] = 1 if i == 3 + po else 0

# Affiche le nombre total de possibilités pour les chaînes de longueur égale à n, ayant k chiffres non-zéro
# On ajoute les deux cas : "strictement plus petit que n" et "exactement égal à n"
print(dp0[-1][k] + dp1[-1][k])  # -1 indique le dernier index de la table, soit tous les chiffres considérés
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00017624642350710928
    2. '\' → logprob: -10.000176429748535
    3. '\n' → logprob: -10.375176429748535
    4. 'import' → logprob: -11.250176429748535
    5. '.readline' → logprob: -11.250176429748535
    6. '.\' → logprob: -11.500176429748535
    7. '[' → logprob: -11.625176429748535
    8. '<|end|>' → logprob: -11.625176429748535
    9. 'newline' → logprob: -12.125176429748535
    10. '.import' → logprob: -12.375176429748535

Token 4: ' Le' (ID: 2018)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04196225851774216
    2. '<|end|>' → logprob: -4.291962146759033
    3. '  ' → logprob: -4.541962146759033
    4. '.' → logprob: -4.541962146759033
    5. '<|end|>' → logprob: -6.291962146759033
    6. 'import' → logprob: -7.166962146759033
    7. ' .' → logprob: -7.291962146759033
    8. 'space' → logprob: -8.166962623596191
    9. '.system' → logprob: -8.291962623596191
    10. '  

' → logprob: -8.666962623596191

Token 5: ' module' (ID: 8827)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.17599070072174072
    2. 'e' → logprob: -3.550990581512451
    3. 'n' → logprob: -4.050990581512451
    4. 'ss' → logprob: -4.050990581512451
    5. 'vel' → logprob: -4.300990581512451
    6. 'v' → logprob: -4.425990581512451
    7. 'a' → logprob: -4.800990581512451
    8. 'ng' → logprob: -4.925990581512451
    9. '#' → logprob: -5.050990581512451
    10. 'x' → logprob: -5.175990581512451

Token 6: ' sys' (ID: 12228)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7718228697776794
    2. '.' → logprob: -1.1468229293823242
    3. '_' → logprob: -2.646822929382324
    4. ',' → logprob: -2.771822929382324
    5. ' space' → logprob: -4.021822929382324
    6. ' sys' → logprob: -4.146822929382324
    7. 'space' → logprob: -4.271822929382324
    8. ' est' → logprob: -4.896822929382324
    9. '  ' → logprob: -5.396822929382324
    10. ' ' → logprob: -5.646822929382324

Token 7: ' fournit' (ID: 123615)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.006220163311809301
    2. 'import' → logprob: -5.63122034072876
    3. '.import' → logprob: -7.13122034072876
    4. '\n' → logprob: -7.63122034072876
    5. '<|end|>' → logprob: -8.631219863891602
    6. '.readline' → logprob: -8.881219863891602
    7. 'newline' → logprob: -8.881219863891602
    8. ',' → logprob: -9.131219863891602
    9. '\' → logprob: -9.381219863891602
    10. '<|end|>' → logprob: -9.506219863891602

Token 8: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33776214718818665
    2. ' des' → logprob: -1.7127621173858643
    3. '.' → logprob: -2.9627621173858643
    4. ' ' → logprob: -4.837762355804443
    5. '_' → logprob: -4.962762355804443
    6. '  ' → logprob: -4.962762355804443
    7. 'import' → logprob: -5.212762355804443
    8. ' .' → logprob: -5.337762355804443
    9. 'des' → logprob: -5.337762355804443
    10. ' un' → logprob: -5.462762355804443

Token 9: ' fonctions' (ID: 87283)
  Prédit: ' fonctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctions' → logprob: -1.2185176610946655
    2. 'fon' → logprob: -1.3435176610946655
    3. ' fonctionnalités' → logprob: -2.218517780303955
    4. ' modules' → logprob: -2.718517780303955
    5. ' moyens' → logprob: -3.343517780303955
    6. ' mécan' → logprob: -3.343517780303955
    7. 'fonction' → logprob: -3.343517780303955
    8. ' systèmes' → logprob: -3.843517780303955
    9. 's' → logprob: -3.968517780303955
    10. 'modules' → logprob: -3.968517780303955

Token 10: ' et' (ID: 859)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.012131096795201302
    2. '<|end|>' → logprob: -5.637131214141846
    3. 'import' → logprob: -5.887131214141846
    4. ',' → logprob: -6.012131214141846
    5. ' .' → logprob: -6.262131214141846
    6. '.import' → logprob: -8.387130737304688
    7. '<|end|>' → logprob: -8.887130737304688
    8. '```' → logprob: -9.387130737304688
    9. '.readline' → logprob: -9.512130737304688
    10. ')' → logprob: -9.512130737304688

Token 11: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.021467702463269234
    2. 'des' → logprob: -4.271467685699463
    3. ' variables' → logprob: -5.396467685699463
    4. 'variables' → logprob: -7.021467685699463
    5. ' ' → logprob: -7.896467685699463
    6. 'import' → logprob: -8.146468162536621
    7. ' espaces' → logprob: -8.271468162536621
    8. ' une' → logprob: -8.896468162536621
    9. ' constantes' → logprob: -9.396468162536621
    10. 'une' → logprob: -9.396468162536621

Token 12: ' variables' (ID: 13955)
  Prédit: 'variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variables' → logprob: -0.020873747766017914
    2. ' variables' → logprob: -4.020873546600342
    3. 'modules' → logprob: -6.895873546600342
    4. 'variable' → logprob: -7.395873546600342
    5. 'classes' → logprob: -8.0208740234375
    6. 'vari' → logprob: -8.2708740234375
    7. 'mé' → logprob: -8.8958740234375
    8. 'obj' → logprob: -9.1458740234375
    9. 'val' → logprob: -9.5208740234375
    10. 'd' → logprob: -10.6458740234375

Token 13: ' utiles' (ID: 121161)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.7214540839195251
    2. 'import' → logprob: -0.8464540839195251
    3. '_util' → logprob: -4.34645414352417
    4. '```' → logprob: -4.34645414352417
    5. 's' → logprob: -4.72145414352417
    6. ' supplémentaires' → logprob: -4.84645414352417
    7. ',' → logprob: -4.84645414352417
    8. 'sys' → logprob: -5.09645414352417
    9. 'sup' → logprob: -5.09645414352417
    10. ' complémentaires' → logprob: -5.97145414352417

Token 14: ' pour' (ID: 1930)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6370581388473511
    2. '.' → logprob: -1.262058138847351
    3. ',' → logprob: -2.0120582580566406
    4. '```' → logprob: -3.7620582580566406
    5. '<|end|>' → logprob: -4.387058258056641
    6. '\n' → logprob: -5.137058258056641
    7. '\' → logprob: -5.262058258056641
    8. '
' → logprob: -5.762058258056641
    9. '

' → logprob: -7.387058258056641
    10. '<|end|>' → logprob: -8.01205825805664

Token 15: ' manip' (ID: 20526)
  Prédit: ' inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inter' → logprob: -0.6242035031318665
    2. ' manip' → logprob: -0.9992035031318665
    3. ' l' → logprob: -3.2492034435272217
    4. 'inter' → logprob: -3.9992034435272217
    5. ' gérer' → logprob: -4.124203681945801
    6. ' travailler' → logprob: -4.624203681945801
    7. '_' → logprob: -6.374203681945801
    8. ' manipulation' → logprob: -6.374203681945801
    9. ' manipulating' → logprob: -6.624203681945801
    10. ' ' → logprob: -6.624203681945801

Token 16: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.2513239085674286
    2. 'u' → logprob: -2.501323938369751
    3. '```' → logprob: -3.001323938369751
    4. 'ule' → logprob: -4.126323699951172
    5. 'ulation' → logprob: -4.126323699951172
    6. 'import' → logprob: -4.376323699951172
    7. 'ul' → logprob: -5.126323699951172
    8. 'r' → logprob: -5.376323699951172
    9. 'lation' → logprob: -5.626323699951172
    10. 'str' → logprob: -5.876323699951172

Token 17: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27841833233833313
    2. '_' → logprob: -1.9034183025360107
    3. 'le' → logprob: -3.2784183025360107
    4. 'l' → logprob: -4.52841854095459
    5. ' l' → logprob: -4.52841854095459
    6. ' le' → logprob: -4.65341854095459
    7. '  ' → logprob: -5.40341854095459
    8. ' ' → logprob: -5.40341854095459
    9. '_l' → logprob: -6.15341854095459
    10. 'les' → logprob: -6.27841854095459

Token 18: ''environnement' (ID: 145835)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8030310869216919
    2. 'e' → logprob: -1.553031086921692
    3. 'es' → logprob: -2.1780309677124023
    4. ''espace' → logprob: -2.1780309677124023
    5. 'a' → logprob: -2.9280309677124023
    6. ''environnement' → logprob: -3.6780309677124023
    7. ''a' → logprob: -4.553030967712402
    8. ''e' → logprob: -5.178030967712402
    9. ''import' → logprob: -6.303030967712402
    10. ''inter' → logprob: -6.428030967712402

Token 19: ' d' (ID: 272)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1613852977752686
    2. '_' → logprob: -1.1613852977752686
    3. '.' → logprob: -1.4113852977752686
    4. 'import' → logprob: -2.1613852977752686
    5. ' ' → logprob: -5.411385536193848
    6. '\' → logprob: -5.786385536193848
    7. ' import' → logprob: -6.786385536193848
    8. '```' → logprob: -6.911385536193848
    9. ' ,' → logprob: -7.036385536193848
    10. 'e' → logprob: -7.286385536193848

Token 20: ''ex' (ID: 23472)
  Prédit: ''ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ex' → logprob: -0.00188901845831424
    2. ''' → logprob: -7.376889228820801
    3. ''import' → logprob: -7.751889228820801
    4. 'ex' → logprob: -8.0018892288208
    5. 'e' → logprob: -8.5018892288208
    6. ''exploitation' → logprob: -9.5018892288208
    7. ''é' → logprob: -9.6268892288208
    8. ''inter' → logprob: -10.5018892288208
    9. 'execution' → logprob: -10.6268892288208
    10. ''application' → logprob: -10.8768892288208

Token 21: 'écution' (ID: 122423)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.6548869609832764
    2. 'c' → logprob: -1.4048869609832764
    3. 'ecution' → logprob: -2.7798869609832764
    4. 'p' → logprob: -3.1548869609832764
    5. 'éc' → logprob: -3.5298869609832764
    6. 'écution' → logprob: -3.5298869609832764
    7. 'e' → logprob: -3.7798869609832764
    8. 't' → logprob: -4.0298871994018555
    9. 'ec' → logprob: -4.7798871994018555
    10. 'ecute' → logprob: -5.0298871994018555

Token 22: ' Python' (ID: 26534)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.419573426246643
    2. 'import' → logprob: -1.419573426246643
    3. ',' → logprob: -1.669573426246643
    4. '\n' → logprob: -1.919573426246643
    5. '
' → logprob: -2.1695733070373535
    6. '\' → logprob: -3.4195733070373535
    7. '```' → logprob: -4.0445733070373535
    8. '' → logprob: -5.7945733070373535
    9. '

' → logprob: -5.7945733070373535
    10. '<|end|>' → logprob: -6.0445733070373535

Token 23: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15754874050617218
    2. ',' → logprob: -3.407548666000366
    3. 'import' → logprob: -3.407548666000366
    4. '\n' → logprob: -3.407548666000366
    5. '
' → logprob: -3.657548666000366
    6. '\' → logprob: -4.532548904418945
    7. '' → logprob: -5.782548904418945
    8. 'newline' → logprob: -6.657548904418945
    9. '```' → logprob: -6.657548904418945
    10. '

' → logprob: -6.907548904418945

Token 24: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5172407627105713
    2. '
' → logprob: -1.1422407627105713
    3. 'import' → logprob: -2.8922407627105713
    4. ',' → logprob: -4.767240524291992
    5. '.' → logprob: -5.392240524291992
    6. '```' → logprob: -5.392240524291992
    7. '

' → logprob: -5.642240524291992
    8. '\' → logprob: -5.642240524291992
    9. '<|end|>' → logprob: -6.892240524291992
    10. '' → logprob: -7.017240524291992

Token 25: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00026300468016415834
    2. 'os' → logprob: -8.250263214111328
    3. ' math' → logprob: -13.625263214111328
    4. '"os' → logprob: -16.125263214111328
    5. ' argparse' → logprob: -16.500263214111328
    6. ' re' → logprob: -16.625263214111328
    7. '_os' → logprob: -16.625263214111328
    8. '	os' → logprob: -16.875263214111328
    9. ' io' → logprob: -17.125263214111328
    10. ' time' → logprob: -17.375263214111328

Token 26: ' as' (ID: 472)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -1.265394687652588
    2. '
' → logprob: -1.390394687652588
    3. ' 

' → logprob: -2.140394687652588
    4. 'import' → logprob: -2.390394687652588
    5. '.' → logprob: -2.515394687652588
    6. ',' → logprob: -2.640394687652588
    7. ' ' → logprob: -3.015394687652588
    8. ' as' → logprob: -4.640394687652588
    9. '  

' → logprob: -4.890394687652588
    10. ' 
' → logprob: -5.140394687652588

Token 27: ' cl' (ID: 567)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9206729531288147
    2. ' col' → logprob: -1.04567289352417
    3. ' cole' → logprob: -1.92067289352417
    4. 'col' → logprob: -3.42067289352417
    5. ' collections' → logprob: -3.42067289352417
    6. 'collections' → logprob: -4.79567289352417
    7. ' co' → logprob: -4.79567289352417
    8. ' ' → logprob: -5.29567289352417
    9. ' coll' → logprob: -5.29567289352417
    10. ' c' → logprob: -5.42067289352417

Token 28: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9913390874862671
    2. 'e' → logprob: -2.4913392066955566
    3. 'ect' → logprob: -2.6163392066955566
    4. ' ' → logprob: -2.7413392066955566
    5. 'ection' → logprob: -3.2413392066955566
    6. '\' → logprob: -3.3663392066955566
    7. 'n' → logprob: -3.3663392066955566
    8. '#' → logprob: -3.4913392066955566
    9. 'ections' → logprob: -3.4913392066955566
    10. '\n' → logprob: -3.7413392066955566

Token 29: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '' → logprob: -1.1461635828018188
    2. '
' → logprob: -1.6461635828018188
    3. '\n' → logprob: -2.7711634635925293
    4. 'a' → logprob: -2.7711634635925293
    5. '

' → logprob: -2.7711634635925293
    6. '#' → logprob: -3.1461634635925293
    7. 'ass' → logprob: -3.7711634635925293
    8. 'f' → logprob: -3.8961634635925293
    9. '\' → logprob: -3.8961634635925293
    10. 'import' → logprob: -4.021163463592529

Token 30: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.13505004346370697
    2. 'collections' → logprob: -2.635050058364868
    3. ' col' → logprob: -4.760049819946289
    4. ' ' → logprob: -5.135049819946289
    5. ' c' → logprob: -5.572549819946289
    6. 'c' → logprob: -6.072549819946289
    7. ' cl' → logprob: -6.197549819946289
    8. ' os' → logprob: -6.447549819946289
    9. ' import' → logprob: -6.510049819946289
    10. ' sys' → logprob: -6.635049819946289

Token 31: ' est' (ID: 893)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.23893624544143677
    2. 'import' → logprob: -2.613936185836792
    3. '```' → logprob: -3.738936185836792
    4. '<|end|>' → logprob: -3.988936185836792
    5. ' ' → logprob: -4.363936424255371
    6. '
' → logprob: -4.488936424255371
    7. '<|end|>' → logprob: -4.738936424255371
    8. '.Counter' → logprob: -5.363936424255371
    9. 'collections' → logprob: -5.488936424255371
    10. '

' → logprob: -5.488936424255371

Token 32: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.1597670018672943
    2. ' une' → logprob: -2.409766912460327
    3. 'un' → logprob: -3.284766912460327
    4. 'une' → logprob: -4.034767150878906
    5. 'a' → logprob: -6.534767150878906
    6. ' ' → logprob: -8.534767150878906
    7. ''un' → logprob: -8.659767150878906
    8. ' a' → logprob: -8.909767150878906
    9. 'import' → logprob: -8.909767150878906
    10. ' ' → logprob: -9.409767150878906

Token 33: ' module' (ID: 8827)
  Prédit: 'module'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'module' → logprob: -0.04307318106293678
    2. 'mod' → logprob: -3.5430731773376465
    3. ' module' → logprob: -4.4180731773376465
    4. 'm' → logprob: -8.293073654174805
    5. 'odule' → logprob: -8.293073654174805
    6. 'e' → logprob: -9.418073654174805
    7. 'package' → logprob: -9.793073654174805
    8. 'ensemble' → logprob: -9.793073654174805
    9. 'lib' → logprob: -10.043073654174805
    10. 's' → logprob: -10.043073654174805

Token 34: ' standard' (ID: 7024)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0163389444351196
    2. '<|end|>' → logprob: -1.0163389444351196
    3. ' ' → logprob: -2.64133882522583
    4. 'import' → logprob: -2.76633882522583
    5. ' .' → logprob: -3.51633882522583
    6. ',' → logprob: -3.64133882522583
    7. ' import' → logprob: -3.89133882522583
    8. '<|end|>' → logprob: -4.26633882522583
    9. '_' → logprob: -4.76633882522583
    10. '```' → logprob: -4.89133882522583

Token 35: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7829133868217468
    2. '
' → logprob: -1.5329134464263916
    3. '.' → logprob: -2.1579134464263916
    4. '

' → logprob: -2.2829134464263916
    5. '```' → logprob: -4.0329132080078125
    6. '<|end|>' → logprob: -4.2829132080078125
    7. ' ' → logprob: -4.5329132080078125
    8. ',' → logprob: -4.6579132080078125
    9. ' 

' → logprob: -4.6579132080078125
    10. '\n' → logprob: -4.7829132080078125

Token 36: ' ici' (ID: 27994)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -1.127192497253418
    2. ' collections' → logprob: -1.377192497253418
    3. 'import' → logprob: -2.252192497253418
    4. '<|end|>' → logprob: -3.002192497253418
    5. ' qui' → logprob: -3.127192497253418
    6. ' notamment' → logprob: -3.252192497253418
    7. ' ' → logprob: -3.377192497253418
    8. 'provid' → logprob: -3.752192497253418
    9. 'qui' → logprob: -4.002192497253418
    10. ' spécialisé' → logprob: -4.502192497253418

Token 37: ' abr' (ID: 47914)
  Prédit: ' utilisé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.23034235835075378
    2. ' import' → logprob: -2.730342388153076
    3. 'util' → logprob: -3.480342388153076
    4. ' ' → logprob: -3.855342388153076
    5. ' pour' → logprob: -3.980342388153076
    6. 'import' → logprob: -4.105342388153076
    7. ' as' → logprob: -4.730342388153076
    8. ',' → logprob: -5.480342388153076
    9. ' qui' → logprob: -5.730342388153076
    10. ' util' → logprob: -5.980342388153076

Token 38: 'égé' (ID: 106915)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5652354955673218
    2. 'égé' → logprob: -1.0652354955673218
    3. 'év' → logprob: -3.1902356147766113
    4. 'e' → logprob: -4.315235614776611
    5. 'ég' → logprob: -4.690235614776611
    6. 'v' → logprob: -5.315235614776611
    7. 'égi' → logprob: -5.440235614776611
    8. 'vi' → logprob: -5.690235614776611
    9. 'eg' → logprob: -5.690235614776611
    10. 'ev' → logprob: -5.940235614776611

Token 39: ' '' (ID: 461)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.3404909074306488
    2. 'as' → logprob: -1.3404909372329712
    3. ' en' → logprob: -3.8404908180236816
    4. 'en' → logprob: -5.715490818023682
    5. 'import' → logprob: -6.840490818023682
    6. 'es' → logprob: -8.21549129486084
    7. '```' → logprob: -8.59049129486084
    8. '<|end|>' → logprob: -8.59049129486084
    9. ' comme' → logprob: -9.71549129486084
    10. 'comme' → logprob: -10.09049129486084

Token 40: 'cl' (ID: 565)
  Prédit: 'cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.012549798004329205
    2. 'collections' → logprob: -4.637549877166748
    3. ' cl' → logprob: -6.512549877166748
    4. 'col' → logprob: -6.762549877166748
    5. ' collections' → logprob: -9.63754940032959
    6. 'c' → logprob: -11.01254940032959
    7. 'coll' → logprob: -11.13754940032959
    8. '	cl' → logprob: -11.26254940032959
    9. 'co' → logprob: -11.88754940032959
    10. ' ' → logprob: -12.51254940032959

Token 41: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2271949201822281
    2. ')'' → logprob: -1.852194905281067
    3. '')' → logprob: -3.4771950244903564
    4. ')' → logprob: -4.852194786071777
    5. '.'' → logprob: -5.977194786071777
    6. ']'' → logprob: -6.852194786071777
    7. '}'' → logprob: -6.977194786071777
    8. '```' → logprob: -7.852194786071777
    9. 'module' → logprob: -8.227194786071777
    10. '>'' → logprob: -8.352194786071777

Token 42: ' souvent' (ID: 28137)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.059882402420044
    2. 'import' → logprob: -1.309882402420044
    3. ' 
' → logprob: -1.559882402420044
    4. ' import' → logprob: -3.559882402420044
    5. ',' → logprob: -3.809882402420044
    6. ' permettant' → logprob: -4.309882164001465
    7. ' 

' → logprob: -4.684882164001465
    8. '
' → logprob: -4.684882164001465
    9. ' notamment' → logprob: -4.684882164001465
    10. '<|end|>' → logprob: -4.934882164001465

Token 43: ' utilisé' (ID: 53138)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.1455000787973404
    2. ' utilisé' → logprob: -2.0205001831054688
    3. 'import' → logprob: -7.270500183105469
    4. ' ut' → logprob: -8.145500183105469
    5. '_util' → logprob: -8.145500183105469
    6. ' utilisées' → logprob: -8.270500183105469
    7. ' utilisés' → logprob: -8.645500183105469
    8. ' used' → logprob: -8.770500183105469
    9. 'u' → logprob: -9.270500183105469
    10. ' util' → logprob: -9.270500183105469

Token 44: ' pour' (ID: 1930)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.162950873374939
    2. '

' → logprob: -1.287950873374939
    3. '
' → logprob: -1.537950873374939
    4. '.' → logprob: -3.0379509925842285
    5. ',' → logprob: -3.1629509925842285
    6. '<|end|>' → logprob: -4.1629509925842285
    7. '```' → logprob: -4.4129509925842285
    8. '' → logprob: -4.4129509925842285
    9. ' 

' → logprob: -5.0379509925842285
    10. ' ' → logprob: -5.0379509925842285

Token 45: ' des' (ID: 731)
  Prédit: ' gérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.4017760157585144
    2. ' manip' → logprob: -1.6517760753631592
    3. 'man' → logprob: -3.901776075363159
    4. ' travailler' → logprob: -3.901776075363159
    5. 'util' → logprob: -4.02677583694458
    6. ' créer' → logprob: -4.52677583694458
    7. 'collections' → logprob: -4.65177583694458
    8. ' utiliser' → logprob: -4.65177583694458
    9. ' fournir' → logprob: -5.02677583694458
    10. ' collections' → logprob: -5.02677583694458

Token 46: ' structures' (ID: 21207)
  Prédit: 'structures'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'structures' → logprob: -0.670600175857544
    2. ' structures' → logprob: -0.795600175857544
    3. 'conten' → logprob: -4.545599937438965
    4. ' types' → logprob: -4.920599937438965
    5. 'types' → logprob: -4.920599937438965
    6. 'containers' → logprob: -5.670599937438965
    7. 'collections' → logprob: -6.045599937438965
    8. 'estruct' → logprob: -7.295599937438965
    9. 'cont' → logprob: -7.420599937438965
    10. 'truct' → logprob: -7.420599937438965

Token 47: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.03379403427243233
    2. 'de' → logprob: -3.5337939262390137
    3. 'd' → logprob: -6.033793926239014
    4. '_de' → logprob: -7.283793926239014
    5. 'data' → logprob: -8.658794403076172
    6. 'deque' → logprob: -8.658794403076172
    7. 's' → logprob: -8.783794403076172
    8. ' data' → logprob: -9.158794403076172
    9. ' d' → logprob: -9.908794403076172
    10. '_' → logprob: -9.908794403076172

Token 48: ' données' (ID: 30580)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.037561215460300446
    2. ' données' → logprob: -3.4125611782073975
    3. 'data' → logprob: -5.662561416625977
    4. 'don' → logprob: -8.787561416625977
    5. ' data' → logprob: -8.912561416625977
    6. 'datas' → logprob: -10.537561416625977
    7. '```' → logprob: -10.787561416625977
    8. '-' → logprob: -11.412561416625977
    9. ' donnée' → logprob: -11.537561416625977
    10. 'collections' → logprob: -11.662561416625977

Token 49: ' avanc' (ID: 87985)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.32016298174858093
    2. '
' → logprob: -1.4451630115509033
    3. '


' → logprob: -4.070162773132324
    4. 'import' → logprob: -4.820162773132324
    5. '#' → logprob: -6.070162773132324
    6. '' → logprob: -6.445162773132324
    7. '



' → logprob: -6.445162773132324
    8. ',' → logprob: -6.945162773132324
    9. '```' → logprob: -6.945162773132324
    10. '\n' → logprob: -7.070162773132324

Token 50: 'ées' (ID: 5161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1185165643692017
    2. 'ées' → logprob: -1.8685165643692017
    3. 'ices' → logprob: -2.493516445159912
    4. 'é' → logprob: -3.118516445159912
    5. 'import' → logprob: -3.368516445159912
    6. '#' → logprob: -3.493516445159912
    7. 'antage' → logprob: -3.743516445159912
    8. 'érieures' → logprob: -3.868516445159912
    9. 'antages' → logprob: -3.868516445159912
    10. '.' → logprob: -3.993516445159912

Token 51: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.13314136862754822
    2. '
' → logprob: -2.133141279220581
    3. '


' → logprob: -6.13314151763916
    4. '' → logprob: -7.25814151763916
    5. '\n' → logprob: -7.25814151763916
    6. '
' → logprob: -7.75814151763916
    7. '```' → logprob: -7.75814151763916
    8. 'import' → logprob: -8.00814151763916
    9. ' 

' → logprob: -8.00814151763916
    10. '

' → logprob: -8.38314151763916

Token 52: 'import' (ID: 561)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3743076026439667
    2. '
' → logprob: -1.499307632446289
    3. 'import' → logprob: -2.749307632446289
    4. 'class' → logprob: -4.999307632446289
    5. 'def' → logprob: -5.874307632446289
    6. '#' → logprob: -5.999307632446289
    7. '' → logprob: -6.249307632446289
    8. '<|end|>' → logprob: -6.249307632446289
    9. '```' → logprob: -6.249307632446289
    10. '\n' → logprob: -6.374307632446289

Token 53: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.09115597605705261
    2. ' itertools' → logprob: -3.466156005859375
    3. ' math' → logprob: -3.841156005859375
    4. ' re' → logprob: -3.966156005859375
    5. ' numpy' → logprob: -4.716156005859375
    6. ' random' → logprob: -6.466156005859375
    7. ' json' → logprob: -6.591156005859375
    8. ' threading' → logprob: -7.341156005859375
    9. 'os' → logprob: -7.591156005859375
    10. ' heap' → logprob: -7.716156005859375

Token 54: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.1080467781284824e-05
    2. 'e' → logprob: -10.375041007995605
    3. 'ec' → logprob: -11.750041007995605
    4. 'ects' → logprob: -14.625041007995605
    5. 't' → logprob: -14.750041007995605
    6. 'ected' → logprob: -15.000041007995605
    7. ' ' → logprob: -16.000041961669922
    8. 'c' → logprob: -16.250041961669922
    9. 'ectl' → logprob: -16.375041961669922
    10. 'ection' → logprob: -16.500041961669922

Token 55: ' as' (ID: 472)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01167084276676178
    2. '<|end|>' → logprob: -4.88667106628418
    3. '<|end|>' → logprob: -6.76167106628418
    4. ' 

' → logprob: -7.26167106628418
    5. '  ' → logprob: -7.51167106628418
    6. ' 
' → logprob: -7.88667106628418
    7. '_' → logprob: -8.51167106628418
    8. '.' → logprob: -8.63667106628418
    9. ' as' → logprob: -8.88667106628418
    10. 'import' → logprob: -9.63667106628418

Token 56: ' bs' (ID: 35414)
  Prédit: ' bs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bs' → logprob: -0.6604189872741699
    2. ' b' → logprob: -1.28541898727417
    3. ' bis' → logprob: -2.66041898727417
    4. 'b' → logprob: -2.78541898727417
    5. ' bi' → logprob: -3.28541898727417
    6. ' ' → logprob: -3.78541898727417
    7. 'bs' → logprob: -4.66041898727417
    8. 'bis' → logprob: -5.66041898727417
    9. '	b' → logprob: -7.53541898727417
    10. ' bsp' → logprob: -8.285419464111328

Token 57: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0029844753444194794
    2. ' 
' → logprob: -6.252984523773193
    3. '  ' → logprob: -7.752984523773193
    4. ' 

' → logprob: -8.127984046936035
    5. '  
' → logprob: -8.377984046936035
    6. '  

' → logprob: -10.002984046936035
    7. '<|end|>' → logprob: -11.627984046936035
    8. '
' → logprob: -11.752984046936035
    9. ' 
' → logprob: -12.127984046936035
    10. '' → logprob: -12.252984046936035

Token 58: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.048314906656742096
    2. ' 
' → logprob: -4.173315048217773
    3. ' #' → logprob: -4.798315048217773
    4. ' 

' → logprob: -4.923315048217773
    5. '#' → logprob: -5.048315048217773
    6. '  
' → logprob: -5.548315048217773
    7. '
' → logprob: -6.423315048217773
    8. '  ' → logprob: -6.923315048217773
    9. '<|end|>' → logprob: -6.923315048217773
    10. '  

' → logprob: -7.173315048217773

Token 59: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.22018158435821533
    2. ' ' → logprob: -2.095181465148926
    3. ' ' → logprob: -3.845181465148926
    4. ' bs' → logprob: -3.970181465148926
    5. ' collections' → logprob: -4.345181465148926
    6. 'bis' → logprob: -4.345181465148926
    7. ' sys' → logprob: -5.345181465148926
    8. 'collections' → logprob: -7.595181465148926
    9. 'bs' → logprob: -7.720181465148926
    10. ' import' → logprob: -7.970181465148926

Token 60: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0021150470711290836
    2. 'e' → logprob: -6.752115249633789
    3. 'ec' → logprob: -7.252115249633789
    4. 'ex' → logprob: -9.252115249633789
    5. '```' → logprob: -11.127115249633789
    6. 'ectl' → logprob: -11.252115249633789
    7. '﻿' → logprob: -11.502115249633789
    8. 'sect' → logprob: -11.627115249633789
    9. 'ected' → logprob: -11.752115249633789
    10. 'ection' → logprob: -11.752115249633789

Token 61: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.766822099685669
    2. '<|end|>' → logprob: -0.891822099685669
    3. ' is' → logprob: -3.141822099685669
    4. ' provides' → logprob: -3.516822099685669
    5. ' #' → logprob: -4.14182186126709
    6. '<|end|>' → logprob: -4.26682186126709
    7. ' as' → logprob: -4.64182186126709
    8. ' ' → logprob: -5.76682186126709
    9. ' est' → logprob: -6.14182186126709
    10. '  ' → logprob: -6.14182186126709

Token 62: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.04070359468460083
    2. ' a' → logprob: -4.415703773498535
    3. ' une' → logprob: -4.665703773498535
    4. '<|end|>' → logprob: -4.665703773498535
    5. ' ' → logprob: -5.290703773498535
    6. ' ' → logprob: -6.415703773498535
    7. 'un' → logprob: -7.165703773498535
    8. 'a' → logprob: -7.790703773498535
    9. ' le' → logprob: -8.540703773498535
    10. ' utilisé' → logprob: -8.665703773498535

Token 63: ' module' (ID: 8827)
  Prédit: ' module'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' module' → logprob: -0.01310846395790577
    2. 'module' → logprob: -4.388108253479004
    3. '	module' → logprob: -9.013108253479004
    4. ' standard' → logprob: -9.263108253479004
    5. ' ' → logprob: -9.513108253479004
    6. ' outil' → logprob: -9.638108253479004
    7. ' espace' → logprob: -10.388108253479004
    8. 'e' → logprob: -10.388108253479004
    9. 'outil' → logprob: -10.388108253479004
    10. ' modu' → logprob: -10.763108253479004

Token 64: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' gérer' (ID: 86786)
  Prédit: ' ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ins' → logprob: -0.636451005935669
    2. ' l' → logprob: -1.136451005935669
    3. ' effectuer' → logprob: -3.511451005935669
    4. ' gérer' → logprob: -3.511451005935669
    5. ' manip' → logprob: -4.13645076751709
    6. 'ins' → logprob: -4.13645076751709
    7. ' tr' → logprob: -4.88645076751709
    8. ' ' → logprob: -5.51145076751709
    9. 'tr' → logprob: -5.51145076751709
    10. ' insertion' → logprob: -5.51145076751709

Token 66: ' efficacement' (ID: 155449)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9460341334342957
    2. ' l' → logprob: -1.0710341930389404
    3. ' des' → logprob: -1.6960341930389404
    4. ' les' → logprob: -2.9460341930389404
    5. 's' → logprob: -5.071033954620361
    6. '<|end|>' → logprob: -5.196033954620361
    7. ' le' → logprob: -5.571033954620361
    8. ' la' → logprob: -5.571033954620361
    9. 'l' → logprob: -5.571033954620361
    10. '  ' → logprob: -6.071033954620361

Token 68: ' tris' (ID: 183328)
  Prédit: ' listes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' listes' → logprob: -0.9312490224838257
    2. ' tableaux' → logprob: -1.8062490224838257
    3. 'e' → logprob: -2.1812491416931152
    4. 'list' → logprob: -2.1812491416931152
    5. 'table' → logprob: -3.3062491416931152
    6. 'es' → logprob: -3.4312491416931152
    7. 'élé' → logprob: -4.056249141693115
    8. ' list' → logprob: -4.306249141693115
    9. 'in' → logprob: -4.681249141693115
    10. 's' → logprob: -4.806249141693115

Token 69: ' et' (ID: 859)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6693871021270752
    2. '
' → logprob: -1.2943871021270752
    3. ' 

' → logprob: -2.794387102127075
    4. 'import' → logprob: -3.169387102127075
    5. '<|end|>' → logprob: -3.294387102127075
    6. ' ' → logprob: -3.794387102127075
    7. ' 
' → logprob: -4.669386863708496
    8. '' → logprob: -5.044386863708496
    9. '


' → logprob: -5.169386863708496
    10. '#' → logprob: -5.169386863708496

Token 70: ' recherches' (ID: 93304)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.17528145015239716
    2. ' les' → logprob: -2.925281524658203
    3. ' insertion' → logprob: -3.925281524658203
    4. ' la' → logprob: -4.050281524658203
    5. 'l' → logprob: -4.050281524658203
    6. ' insert' → logprob: -4.300281524658203
    7. ' recherches' → logprob: -4.925281524658203
    8. ' ins' → logprob: -5.425281524658203
    9. 'les' → logprob: -5.550281524658203
    10. ' des' → logprob: -5.862781524658203

Token 71: ' dans' (ID: 2671)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.23635134100914001
    2. '
' → logprob: -1.8613513708114624
    3. ' 

' → logprob: -4.111351490020752
    4. '


' → logprob: -4.611351490020752
    5. '' → logprob: -5.111351490020752
    6. 'import' → logprob: -5.611351490020752
    7. '#' → logprob: -5.736351490020752
    8. '  

' → logprob: -6.111351490020752
    9. '```' → logprob: -6.486351490020752
    10. '\n' → logprob: -6.611351490020752

Token 72: ' les' (ID: 1341)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3617612421512604
    2. ' les' → logprob: -1.736761212348938
    3. ' ' → logprob: -2.7367613315582275
    4. ' listes' → logprob: -3.8617613315582275
    5. ' lists' → logprob: -4.486761093139648
    6. ' list' → logprob: -5.611761093139648
    7. 'list' → logprob: -5.736761093139648
    8. 'les' → logprob: -5.986761093139648
    9. ' ' → logprob: -5.986761093139648
    10. ' l' → logprob: -5.986761093139648

Token 73: ' listes' (ID: 179198)
  Prédit: ' listes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' listes' → logprob: -0.5560451745986938
    2. 'list' → logprob: -1.5560451745986938
    3. 's' → logprob: -3.5560450553894043
    4. 'e' → logprob: -3.6810450553894043
    5. ' ' → logprob: -3.8060450553894043
    6. 'lst' → logprob: -3.9310450553894043
    7. 'liste' → logprob: -4.181045055389404
    8. 'lists' → logprob: -4.306045055389404
    9. ' lists' → logprob: -4.306045055389404
    10. ' list' → logprob: -4.431045055389404

Token 74: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.07332770526409149
    2. '
' → logprob: -2.6983277797698975
    3. '


' → logprob: -6.073327541351318
    4. '' → logprob: -7.823327541351318
    5. ' 

' → logprob: -8.448328018188477
    6. '
' → logprob: -9.448328018188477
    7. '



' → logprob: -9.573328018188477
    8. '#' → logprob: -9.948328018188477
    9. '```' → logprob: -10.198328018188477
    10. '

' → logprob: -10.323328018188477

Token 75: ' ici' (ID: 27994)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6178779006004333
    2. ' ' → logprob: -1.1178779602050781
    3. '  
' → logprob: -2.992877960205078
    4. ' 

' → logprob: -3.617877960205078
    5. '<|end|>' → logprob: -4.742877960205078
    6. 'import' → logprob: -5.117877960205078
    7. ' utilisé' → logprob: -5.617877960205078
    8. ' mais' → logprob: -5.992877960205078
    9. ',' → logprob: -6.117877960205078
    10. ' notamment' → logprob: -6.242877960205078

Token 76: ' abr' (ID: 47914)
  Prédit: ' abr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abr' → logprob: -1.0235222578048706
    2. '_' → logprob: -1.7735222578048706
    3. ' ' → logprob: -1.8985222578048706
    4. '<|end|>' → logprob: -1.8985222578048706
    5. ' utilisé' → logprob: -2.89852237701416
    6. ' import' → logprob: -3.77352237701416
    7. 'import' → logprob: -3.89852237701416
    8. ' ' → logprob: -3.89852237701416
    9. ' souvent' → logprob: -5.14852237701416
    10. ' utilisés' → logprob: -5.77352237701416

Token 77: 'égé' (ID: 106915)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.2953270971775055
    2. 'e' → logprob: -2.0453271865844727
    3. 'eg' → logprob: -3.1703271865844727
    4. 'eft' → logprob: -4.545327186584473
    5. 'ec' → logprob: -4.795327186584473
    6. 'er' → logprob: -4.795327186584473
    7. 'es' → logprob: -4.920327186584473
    8. 'ert' → logprob: -4.920327186584473
    9. 'egt' → logprob: -4.920327186584473
    10. 'sect' → logprob: -5.045327186584473

Token 78: ' '' (ID: 461)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.1899050921201706
    2. 'as' → logprob: -1.939905047416687
    3. ' ' → logprob: -3.8149051666259766
    4. ''' → logprob: -7.064905166625977
    5. '_' → logprob: -7.314905166625977
    6. ' en' → logprob: -7.314905166625977
    7. ' '' → logprob: -7.439905166625977
    8. ''as' → logprob: -7.564905166625977
    9. 'es' → logprob: -7.689905166625977
    10. 'import' → logprob: -8.064905166625977

Token 79: 'bs' (ID: 6229)
  Prédit: 'bs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.011162775568664074
    2. ' bs' → logprob: -4.511162757873535
    3. 'b' → logprob: -9.261162757873535
    4. ' b' → logprob: -10.886162757873535
    5. ' ' → logprob: -14.761162757873535
    6. '_bs' → logprob: -14.886162757873535
    7. '-bs' → logprob: -16.63616371154785
    8. 'bst' → logprob: -16.76116371154785
    9. '.bs' → logprob: -17.01116371154785
    10. 'bis' → logprob: -17.13616371154785

Token 80: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002572090830653906
    2. ')' → logprob: -6.627572059631348
    3. ')'' → logprob: -7.252572059631348
    4. '')' → logprob: -7.752572059631348
    5. ' '' → logprob: -9.752572059631348
    6. '```' → logprob: -11.377572059631348
    7. '"' → logprob: -11.752572059631348
    8. ''''' → logprob: -12.377572059631348
    9. ''
' → logprob: -12.627572059631348
    10. ' )' → logprob: -12.627572059631348

Token 81: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1529853343963623
    2. 'def' → logprob: -1.1529853343963623
    3. 'd' → logprob: -1.9029853343963623
    4. 'class' → logprob: -2.7779853343963623
    5. '

' → logprob: -2.9029853343963623
    6. '#' → logprob: -3.0279853343963623
    7. '' → logprob: -3.6529853343963623
    8. 'n' → logprob: -4.777985572814941
    9. '


' → logprob: -5.902985572814941
    10. 'import' → logprob: -6.027985572814941

Token 82: ' Aug' (ID: 6025)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22883079946041107
    2. 'd' → logprob: -1.8538308143615723
    3. 'def' → logprob: -3.7288308143615723
    4. '#' → logprob: -4.603830814361572
    5. ' #' → logprob: -6.228830814361572
    6. ' def' → logprob: -6.728830814361572
    7. 'I' → logprob: -6.853830814361572
    8. 'i' → logprob: -6.978830814361572
    9. 'import' → logprob: -7.103830814361572
    10. ' ' → logprob: -7.228830814361572

Token 83: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.013268934562802315
    2. 'mentation' → logprob: -4.888268947601318
    3. 'm' → logprob: -6.263268947601318
    4. 'mented' → logprob: -6.888268947601318
    5. 'ement' → logprob: -7.388268947601318
    6. 'mente' → logprob: -7.388268947601318
    7. 'ument' → logprob: -7.513268947601318
    8. 'me' → logprob: -8.26326847076416
    9. 'men' → logprob: -8.38826847076416
    10. '#' → logprob: -9.26326847076416

Token 84: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003562773345038295
    2. '_' → logprob: -6.003562927246094
    3. ' ' → logprob: -7.378562927246094
    4. 's' → logprob: -8.753562927246094
    5. ' r' → logprob: -9.003562927246094
    6. 'z' → logprob: -10.128562927246094
    7. ' la' → logprob: -10.253562927246094
    8. 'd' → logprob: -10.503562927246094
    9. 'l' → logprob: -11.253562927246094
    10. 'n' → logprob: -11.253562927246094

Token 85: ' limite' (ID: 48939)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.467140793800354
    2. ' taille' → logprob: -2.2171406745910645
    3. ' vitesse' → logprob: -2.3421406745910645
    4. 'tail' → logprob: -2.4671406745910645
    5. ' performance' → logprob: -2.8421406745910645
    6. ' limite' → logprob: -3.2171406745910645
    7. 's' → logprob: -3.2171406745910645
    8. '  ' → logprob: -3.3421406745910645
    9. 'performance' → logprob: -3.7171406745910645
    10. 'v' → logprob: -3.7171406745910645

Token 86: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02271166443824768
    2. 's' → logprob: -4.647711753845215
    3. ' ' → logprob: -5.522711753845215
    4. ' de' → logprob: -6.272711753845215
    5. 'd' → logprob: -6.897711753845215
    6. '(' → logprob: -6.897711753845215
    7. 'sys' → logprob: -7.022711753845215
    8. '_sys' → logprob: -7.272711753845215
    9. '(sys' → logprob: -7.522711753845215
    10. ')' → logprob: -7.647711753845215

Token 87: ' réc' (ID: 36254)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.3527306914329529
    2. ' recursion' → logprob: -1.8527307510375977
    3. 'r' → logprob: -2.6027307510375977
    4. ' réc' → logprob: -3.7277307510375977
    5. '_rec' → logprob: -4.352730751037598
    6. '_' → logprob: -4.727730751037598
    7. 're' → logprob: -4.852730751037598
    8. ' la' → logprob: -5.727730751037598
    9. 'l' → logprob: -5.977730751037598
    10. 'la' → logprob: -6.227730751037598

Token 88: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0014671307289972901
    2. 'urs' → logprob: -6.876467227935791
    3. 'ur' → logprob: -8.251466751098633
    4. 'u' → logprob: -9.501466751098633
    5. 'ursive' → logprob: -9.626466751098633
    6. 'usion' → logprob: -11.126466751098633
    7. '```' → logprob: -12.376466751098633
    8. 'urrence' → logprob: -12.751466751098633
    9. 'usr' → logprob: -13.251466751098633
    10. '##' → logprob: -13.376466751098633

Token 89: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.037159617990255356
    2. '(' → logprob: -3.9121596813201904
    3. ':' → logprob: -5.037159442901611
    4. '\' → logprob: -5.537159442901611
    5. 'import' → logprob: -6.662159442901611
    6. ')' → logprob: -6.912159442901611
    7. 's' → logprob: -7.287159442901611
    8. ' (' → logprob: -8.03715991973877
    9. '()' → logprob: -8.16215991973877
    10. '`' → logprob: -8.41215991973877

Token 90: ' autor' (ID: 13432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5291825532913208
    2. ' sys' → logprob: -1.0291825532913208
    3. '100' → logprob: -4.404182434082031
    4. ' l' → logprob: -4.779182434082031
    5. ' la' → logprob: -4.779182434082031
    6. ' les' → logprob: -4.904182434082031
    7. ' le' → logprob: -4.904182434082031
    8. ' ' → logprob: -5.654182434082031
    9. ' recursion' → logprob: -7.154182434082031
    10. ' permettre' → logprob: -7.654182434082031

Token 91: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.01718733087182045
    2. 'er' → logprob: -4.142187118530273
    3. 'ise' → logprob: -7.892187118530273
    4. 'ser' → logprob: -8.517187118530273
    5. '```' → logprob: -9.017187118530273
    6. 'e' → logprob: -9.267187118530273
    7. 'isé' → logprob: -9.517187118530273
    8. '#' → logprob: -9.892187118530273
    9. 'mer' → logprob: -10.267187118530273
    10. 'i' → logprob: -10.392187118530273

Token 92: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015497635118663311
    2. ' l' → logprob: -5.51549768447876
    3. ' ' → logprob: -5.89049768447876
    4. '  ' → logprob: -6.39049768447876
    5. ' la' → logprob: -6.39049768447876
    6. ' sys' → logprob: -6.64049768447876
    7. ' le' → logprob: -7.26549768447876
    8. '_' → logprob: -7.39049768447876
    9. ' les' → logprob: -7.64049768447876
    10. ' davantage' → logprob: -7.76549768447876

Token 93: ' appels' (ID: 133870)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.317024827003479
    2. ' des' → logprob: -1.442024827003479
    3. ' l' → logprob: -4.4420247077941895
    4. ' la' → logprob: -5.6920247077941895
    5. ' une' → logprob: -5.8170247077941895
    6. ' les' → logprob: -6.0670247077941895
    7. '_' → logprob: -6.0670247077941895
    8. ' davantage' → logprob: -6.1920247077941895
    9. ' ' → logprob: -6.3170247077941895
    10. ' un' → logprob: -6.4420247077941895

Token 94: ' réc' (ID: 36254)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1784399300813675
    2. ' _' → logprob: -2.0534398555755615
    3. ' sys' → logprob: -4.553440093994141
    4. 's' → logprob: -5.428440093994141
    5. '_recursive' → logprob: -5.428440093994141
    6. '_rec' → logprob: -5.553440093994141
    7. ' réc' → logprob: -5.803440093994141
    8. ' de' → logprob: -6.303440093994141
    9. 'sys' → logprob: -7.053440093994141
    10. '_de' → logprob: -7.303440093994141

Token 95: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.5984439253807068
    2. 'ur' → logprob: -1.4734439849853516
    3. 'u' → logprob: -1.9734439849853516
    4. 'ursion' → logprob: -2.5984439849853516
    5. 'ursive' → logprob: -5.723443984985352
    6. '```' → logprob: -6.848443984985352
    7. '_' → logprob: -7.848443984985352
    8. 'us' → logprob: -8.098443984985352
    9. '   ' → logprob: -8.098443984985352
    10. '
' → logprob: -8.473443984985352

Token 96: 'ifs' (ID: 14119)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.43469786643981934
    2. 's' → logprob: -1.4346978664398193
    3. 'ifs' → logprob: -3.0596978664398193
    4. 'ions' → logprob: -3.5596978664398193
    5. 'ive' → logprob: -4.434698104858398
    6. 'a' → logprob: -5.059698104858398
    7. 'if' → logprob: -5.309698104858398
    8. 'es' → logprob: -5.809698104858398
    9. 'i' → logprob: -6.059698104858398
    10. 'ives' → logprob: -6.184698104858398

Token 97: ' plus' (ID: 2932)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.06711450219154358
    2. ' sys' → logprob: -2.8171145915985107
    3. 'import' → logprob: -5.942114353179932
    4. '(sys' → logprob: -6.192114353179932
    5. '=sys' → logprob: -8.69211483001709
    6. ':' → logprob: -9.19211483001709
    7. '_sys' → logprob: -10.19211483001709
    8. '```' → logprob: -10.19211483001709
    9. 'rec' → logprob: -11.06711483001709
    10. ' (' → logprob: -11.06711483001709

Token 98: ' prof' (ID: 1915)
  Prédit: 'prof'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prof' → logprob: -0.2877826988697052
    2. ' profond' → logprob: -2.037782669067383
    3. ' prof' → logprob: -2.162782669067383
    4. 'pro' → logprob: -5.912782669067383
    5. 'import' → logprob: -7.412782669067383
    6. ' profondeur' → logprob: -7.662782669067383
    7. ' profund' → logprob: -8.162782669067383
    8. ' profonde' → logprob: -8.662782669067383
    9. ' profondément' → logprob: -8.912782669067383
    10. ' pro' → logprob: -10.287782669067383

Token 99: 'onds' (ID: 20754)
  Prédit: 'onds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onds' → logprob: -0.2718295753002167
    2. 'onde' → logprob: -1.896829605102539
    3. 'ondes' → logprob: -2.646829605102539
    4. 'ond' → logprob: -4.521829605102539
    5. 'on' → logprob: -5.146829605102539
    6. '```' → logprob: -8.646829605102539
    7. 'ons' → logprob: -9.896829605102539
    8. '#' → logprob: -10.521829605102539
    9. '   ' → logprob: -10.521829605102539
    10. 'onda' → logprob: -11.146829605102539

Token 100: ' que' (ID: 661)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.023897740989923477
    2. '
' → logprob: -4.398897647857666
    3. ':' → logprob: -5.273897647857666
    4. ' sys' → logprob: -5.773897647857666
    5. '(sys' → logprob: -7.023897647857666
    6. '\' → logprob: -7.148897647857666
    7. '' → logprob: -8.148898124694824
    8. '  
' → logprob: -8.523898124694824
    9. 'import' → logprob: -8.648898124694824
    10. '

' → logprob: -9.273898124694824

Token 101: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6612517833709717
    2. ' l' → logprob: -1.7862517833709717
    3. 'la' → logprob: -2.0362517833709717
    4. ' sys' → logprob: -2.7862517833709717
    5. ' par' → logprob: -2.9112517833709717
    6. 'l' → logprob: -4.036252021789551
    7. ' Python' → logprob: -4.661252021789551
    8. ' the' → logprob: -5.036252021789551
    9. 'par' → logprob: -5.036252021789551
    10. '100' → logprob: -5.536252021789551

Token 102: ' limite' (ID: 48939)
  Prédit: ' défaut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' défaut' → logprob: -0.5034255981445312
    2. 'val' → logprob: -1.6284255981445312
    3. 'dé' → logprob: -2.1284255981445312
    4. ' sys' → logprob: -3.8784255981445312
    5. 'def' → logprob: -4.378425598144531
    6. 'default' → logprob: -4.628425598144531
    7. ' default' → logprob: -4.878425598144531
    8. 'd' → logprob: -5.003425598144531
    9. 'sys' → logprob: -5.003425598144531
    10. 'par' → logprob: -5.253425598144531

Token 103: ' standard' (ID: 7024)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.023472808301448822
    2. 'import' → logprob: -4.148472785949707
    3. ' sys' → logprob: -5.023472785949707
    4. '_sys' → logprob: -7.398472785949707
    5. '(sys' → logprob: -9.148472785949707
    6. '=sys' → logprob: -10.398472785949707
    7. 's' → logprob: -10.773472785949707
    8. ' import' → logprob: -11.648472785949707
    9. '	sys' → logprob: -11.648472785949707
    10. '_' → logprob: -12.023472785949707

Token 104: ' (' (ID: 350)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0064075663685798645
    2. '
' → logprob: -5.756407737731934
    3. '(sys' → logprob: -6.631407737731934
    4. 'import' → logprob: -7.506407737731934
    5. ' sys' → logprob: -7.881407737731934
    6. '(
' → logprob: -8.381407737731934
    7. ':' → logprob: -8.881407737731934
    8. '(' → logprob: -8.881407737731934
    9. '\' → logprob: -9.006407737731934
    10. '' → logprob: -9.506407737731934

Token 105: 'par' (ID: 796)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48585575819015503
    2. '100' → logprob: -2.2358558177948
    3. 'sys' → logprob: -2.7358558177948
    4. ' )' → logprob: -2.9858558177948
    5. ' ' → logprob: -2.9858558177948
    6. ' sys' → logprob: -3.1108558177948
    7. '10' → logprob: -3.6108558177948
    8. ' :' → logprob: -4.485855579376221
    9. ':' → logprob: -5.235855579376221
    10. ',' → logprob: -5.735855579376221

Token 106: ' défaut' (ID: 79375)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.0647670030593872
    2. 'def' → logprob: -1.4397670030593872
    3. ' défaut' → logprob: -1.5647670030593872
    4. 'dé' → logprob: -1.6897670030593872
    5. ' default' → logprob: -4.689766883850098
    6. 'ex' → logprob: -5.439766883850098
    7. ' def' → logprob: -5.564766883850098
    8. 'fois' → logprob: -5.689766883850098
    9. 'd' → logprob: -6.564766883850098
    10. 'import' → logprob: -6.814766883850098

Token 107: ' ~' (ID: 6574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.523435115814209
    2. '100' → logprob: -1.523435115814209
    3. ' de' → logprob: -2.773435115814209
    4. '=' → logprob: -3.023435115814209
    5. ' )' → logprob: -3.148435115814209
    6. ' =' → logprob: -4.898435115814209
    7. ' ' → logprob: -5.023435115814209
    8. ' à' → logprob: -5.523435115814209
    9. ' of' → logprob: -5.648435115814209
    10. ':' → logprob: -5.773435115814209

Token 108: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.22796055674552917
    2. '10' → logprob: -1.6029605865478516
    3. ' ' → logprob: -6.477960586547852
    4. '1' → logprob: -7.352960586547852
    5. '300' → logprob: -8.227960586547852
    6. '  ' → logprob: -10.477960586547852
    7. 'limit' → logprob: -10.852960586547852
    8. 'sys' → logprob: -12.102960586547852
    9. 'python' → logprob: -12.227960586547852
    10. 'int' → logprob: -12.602960586547852

Token 109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013797098770737648
    2. '00' → logprob: -4.638797283172607
    3. '000' → logprob: -5.513797283172607
    4. ' ' → logprob: -13.88879680633545
    5. '_' → logprob: -14.76379680633545
    6. '```' → logprob: -16.201297760009766
    7. 'K' → logprob: -16.576297760009766
    8. '０' → logprob: -16.763797760009766
    9. 'k' → logprob: -16.763797760009766
    10. '[' → logprob: -16.826297760009766

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18893449008464813
    2. 'sys' → logprob: -2.188934564590454
    3. ')
' → logprob: -3.063934564590454
    4. '
' → logprob: -5.063934326171875
    5. ')
' → logprob: -6.563934326171875
    6. 'import' → logprob: -7.188934326171875
    7. ' sys' → logprob: -7.438934326171875
    8. '
' → logprob: -7.563934326171875
    9. ' )' → logprob: -7.688934326171875
    10. '' → logprob: -7.688934326171875

Token 111: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0022897832095623016
    2. 'import' → logprob: -6.127289772033691
    3. ' sys' → logprob: -9.752289772033691
    4. '
' → logprob: -10.127289772033691
    5. '(sys' → logprob: -12.877289772033691
    6. '_sys' → logprob: -14.002289772033691
    7. '.sys' → logprob: -14.127289772033691
    8. '=sys' → logprob: -14.252289772033691
    9. '
' → logprob: -14.502289772033691
    10. '	sys' → logprob: -15.252289772033691

Token 112: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3719691038131714
    2. '.set' → logprob: -1.2469691038131714
    3. '.setdefault' → logprob: -4.496969223022461
    4. '.argv' → logprob: -5.621969223022461
    5. '.exit' → logprob: -5.746969223022461
    6. '.stdout' → logprob: -5.996969223022461
    7. '.stdin' → logprob: -6.496969223022461
    8. '.stderr' → logprob: -7.621969223022461
    9. ' .' → logprob: -9.496969223022461
    10. '.s' → logprob: -9.871969223022461

Token 113: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.008538920432329178
    2. '_rec' → logprob: -5.383538722991943
    3. '_' → logprob: -5.758538722991943
    4. 'limit' → logprob: -8.383539199829102
    5. ' recursion' → logprob: -8.883539199829102
    6. 'ursion' → logprob: -9.508539199829102
    7. ' _' → logprob: -9.508539199829102
    8. '_limit' → logprob: -10.633539199829102
    9. '_recursive' → logprob: -10.758539199829102
    10. 'ection' → logprob: -10.758539199829102

Token 114: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -6.153795766294934e-06
    2. '_' → logprob: -13.125005722045898
    3. 'urs' → logprob: -14.125005722045898
    4. 'usion' → logprob: -14.125005722045898
    5. 'ur' → logprob: -14.375005722045898
    6. 'ursive' → logprob: -14.625005722045898
    7. 'limit' → logprob: -14.750005722045898
    8. '_limit' → logprob: -15.000005722045898
    9. '[' → logprob: -15.750005722045898
    10. '(' → logprob: -16.0000057220459

Token 115: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.009508618153631687
    2. 'ault' → logprob: -6.0095086097717285
    3. 'al' → logprob: -6.2595086097717285
    4. 'el' → logprob: -6.5095086097717285
    5. 't' → logprob: -7.2595086097717285
    6. 'lim' → logprob: -7.3845086097717285
    7. 'rl' → logprob: -7.5095086097717285
    8. 'e' → logprob: -7.6345086097717285
    9. 'l' → logprob: -8.759509086608887
    10. 'ult' → logprob: -9.259509086608887

Token 116: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.961759259458631e-06
    2. '(
' → logprob: -12.875004768371582
    3. '(

' → logprob: -13.750004768371582
    4. ' (' → logprob: -13.875004768371582
    5. '()' → logprob: -16.3750057220459
    6. '((' → logprob: -16.5000057220459
    7. '(
' → logprob: -17.0000057220459
    8. '(int' → logprob: -18.5000057220459
    9. '("("' → logprob: -18.5000057220459
    10. '40' → logprob: -18.7500057220459

Token 117: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.018228726461529732
    2. '100' → logprob: -4.018228530883789
    3. '200' → logprob: -10.518228530883789
    4. '300' → logprob: -10.518228530883789
    5. ' ' → logprob: -11.518228530883789
    6. '500' → logprob: -12.143228530883789
    7. '250' → logprob: -12.268228530883789
    8. '400' → logprob: -13.018228530883789
    9. '999' → logprob: -14.018228530883789
    10. '150' → logprob: -14.768228530883789

Token 118: '000' (ID: 1302)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.011049470864236355
    2. '000' → logprob: -4.511049270629883
    3. '0' → logprob: -14.261049270629883
    4. '005' → logprob: -15.136049270629883
    5. '50' → logprob: -15.886049270629883
    6. '050' → logprob: -16.011049270629883
    7. '007' → logprob: -16.136049270629883
    8. '001' → logprob: -16.136049270629883
    9. '010' → logprob: -16.136049270629883
    10. '002' → logprob: -16.386049270629883

Token 119: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011423612013459206
    2. '0' → logprob: -6.876142501831055
    3. ' )' → logprob: -9.126142501831055
    4. ')
' → logprob: -15.251142501831055
    5. '1' → logprob: -16.126142501831055
    6. ' ' → logprob: -16.126142501831055
    7. '))' → logprob: -16.501142501831055
    8. '00' → logprob: -17.626142501831055
    9. '()' → logprob: -17.751142501831055
    10. '')' → logprob: -17.876142501831055

Token 120: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02351321280002594
    2. 'n' → logprob: -4.648513317108154
    3. 'class' → logprob: -4.648513317108154
    4. '
' → logprob: -6.523513317108154
    5. 'd' → logprob: -7.023513317108154
    6. '#' → logprob: -7.398513317108154
    7. '

' → logprob: -7.523513317108154
    8. '\' → logprob: -9.398512840270996
    9. 'from' → logprob: -9.398512840270996
    10. 'de' → logprob: -9.523512840270996

Token 121: ' Red' (ID: 5952)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009385104291141033
    2. 'class' → logprob: -5.634385108947754
    3. '#' → logprob: -6.134385108947754
    4. 'n' → logprob: -6.759385108947754
    5. 'input' → logprob: -7.134385108947754
    6. 'from' → logprob: -7.134385108947754
    7. ' def' → logprob: -7.634385108947754
    8. 'd' → logprob: -9.634385108947754
    9. 'de' → logprob: -9.759385108947754
    10. 'N' → logprob: -9.884385108947754

Token 122: 'éf' (ID: 126246)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.22858895361423492
    2. 'éf' → logprob: -2.4785890579223633
    3. 'ir' → logprob: -3.7285890579223633
    4. 'irect' → logprob: -3.9785890579223633
    5. '#' → logprob: -4.478589057922363
    6. 'é' → logprob: -4.728589057922363
    7. 'irection' → logprob: -4.853589057922363
    8. 'e' → logprob: -5.103589057922363
    9. 'uire' → logprob: -5.228589057922363
    10. 'if' → logprob: -5.228589057922363

Token 123: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.07816971093416214
    2. 'inir' → logprob: -2.953169822692871
    3. 'inition' → logprob: -4.578169822692871
    4. 'in' → logprob: -5.703169822692871
    5. '_init' → logprob: -5.703169822692871
    6. 'ini' → logprob: -6.328169822692871
    7. '_' → logprob: -7.078169822692871
    8. 'inis' → logprob: -7.328169822692871
    9. '```' → logprob: -7.578169822692871
    10. 'ine' → logprob: -7.828169822692871

Token 124: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.36436206102371216
    2. ' def' → logprob: -2.1143620014190674
    3. 'def' → logprob: -2.8643620014190674
    4. ' une' → logprob: -3.4893620014190674
    5. ' sys' → logprob: -4.2393622398376465
    6. ' l' → logprob: -4.6143622398376465
    7. ' le' → logprob: -4.6143622398376465
    8. ' ' → logprob: -4.7393622398376465
    9. ' input' → logprob: -4.8643622398376465
    10. ' les' → logprob: -5.1143622398376465

Token 125: ' fonction' (ID: 17610)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.2439556121826172
    2. 'input' → logprob: -1.8689556121826172
    3. 'def' → logprob: -1.9939556121826172
    4. 'print' → logprob: -2.243955612182617
    5. ' sys' → logprob: -2.493955612182617
    6. ' def' → logprob: -2.493955612182617
    7. ' print' → logprob: -3.118955612182617
    8. ' recursion' → logprob: -3.868955612182617
    9. 'sys' → logprob: -4.368955612182617
    10. 'range' → logprob: -4.868955612182617

Token 126: ' d' (ID: 272)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.3828009366989136
    2. ' sys' → logprob: -1.3828009366989136
    3. ' input' → logprob: -1.7578009366989136
    4. 'print' → logprob: -2.507801055908203
    5. ' max' → logprob: -3.007801055908203
    6. 'max' → logprob: -3.132801055908203
    7. 'sys' → logprob: -3.382801055908203
    8. ' print' → logprob: -3.382801055908203
    9. 'range' → logprob: -4.132801055908203
    10. 'sorted' → logprob: -4.507801055908203

Token 127: ''entrée' (ID: 115820)
  Prédit: 'éf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'éf' → logprob: -0.13899901509284973
    2. 'ef' → logprob: -2.1389989852905273
    3. 'é' → logprob: -4.638998985290527
    4. 'e' → logprob: -6.763998985290527
    5. 'f' → logprob: -7.763998985290527
    6. 'eff' → logprob: -8.513998985290527
    7. 'iv' → logprob: -8.638998985290527
    8. 'éc' → logprob: -10.138998985290527
    9. 'efi' → logprob: -10.263998985290527
    10. '
' → logprob: -10.638998985290527

Token 128: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47818073630332947
    2. '=' → logprob: -0.9781807661056519
    3. '=input' → logprob: -5.853180885314941
    4. 'input' → logprob: -6.853180885314941
    5. ' ' → logprob: -9.728180885314941
    6. 'def' → logprob: -10.603180885314941
    7. '=lambda' → logprob: -10.853180885314941
    8. 's' → logprob: -11.353180885314941
    9. 'n' → logprob: -11.353180885314941
    10. '_input' → logprob: -12.228180885314941

Token 129: ' récupérer' (ID: 120406)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3144267499446869
    2. 'input' → logprob: -1.3144267797470093
    3. 'lambda' → logprob: -7.689426898956299
    4. ' lambda' → logprob: -7.689426898956299
    5. ' raw' → logprob: -10.31442642211914
    6. 'int' → logprob: -10.43942642211914
    7. ' lire' → logprob: -10.68942642211914
    8. 'raw' → logprob: -10.81442642211914
    9. '=input' → logprob: -10.81442642211914
    10. 'sys' → logprob: -11.43942642211914

Token 130: ' plus' (ID: 2932)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5545802712440491
    2. 'input' → logprob: -1.0545802116394043
    3. ' une' → logprob: -3.1795802116394043
    4. ' la' → logprob: -4.929580211639404
    5. ' l' → logprob: -5.179580211639404
    6. '=input' → logprob: -5.679580211639404
    7. ' les' → logprob: -5.929580211639404
    8. ' ' → logprob: -6.054580211639404
    9. 'l' → logprob: -6.054580211639404
    10. '()' → logprob: -6.179580211639404

Token 131: ' facilement' (ID: 54086)
  Prédit: ' rapidement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rapidement' → logprob: -0.7280144095420837
    2. ' efficacement' → logprob: -1.2280144691467285
    3. ' de' → logprob: -2.8530144691467285
    4. 'ieurs' → logprob: -3.2280144691467285
    5. ' input' → logprob: -3.4780144691467285
    6. ' d' → logprob: -3.7280144691467285
    7. ' vite' → logprob: -3.8530144691467285
    8. '_' → logprob: -4.4780144691467285
    9. '_input' → logprob: -5.2280144691467285
    10. 'input' → logprob: -5.3530144691467285

Token 132: ' des' (ID: 731)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.020074987784028053
    2. ' input' → logprob: -4.020074844360352
    3. '(input' → logprob: -7.020074844360352
    4. '=input' → logprob: -7.020074844360352
    5. '_input' → logprob: -10.270074844360352
    6. 'int' → logprob: -10.895074844360352
    7. '()' → logprob: -10.895074844360352
    8. ' =' → logprob: -11.270074844360352
    9. 'lambda' → logprob: -11.770074844360352
    10. '	input' → logprob: -12.020074844360352

Token 133: ' lignes' (ID: 81687)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.6729089021682739
    2. ' lignes' → logprob: -1.047908902168274
    3. ' l' → logprob: -2.9229087829589844
    4. ' entr' → logprob: -3.7979087829589844
    5. ' ' → logprob: -4.047908782958984
    6. ' input' → logprob: -4.547908782958984
    7. ' inputs' → logprob: -4.672908782958984
    8. ' chaînes' → logprob: -4.922908782958984
    9. ' ' → logprob: -5.047908782958984
    10. 'l' → logprob: -5.672908782958984

Token 134: ' depuis' (ID: 16277)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.21916191279888153
    2. '=input' → logprob: -2.0941619873046875
    3. ' =' → logprob: -3.3441619873046875
    4. '=' → logprob: -3.5941619873046875
    5. '()' → logprob: -4.9691619873046875
    6. '_input' → logprob: -6.5941619873046875
    7. ' input' → logprob: -7.0941619873046875
    8. '=lambda' → logprob: -8.094161987304688
    9. 's' → logprob: -8.219161987304688
    10. '=sys' → logprob: -8.219161987304688

Token 135: ' stdin' (ID: 75143)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4433746933937073
    2. ' sys' → logprob: -1.5683746337890625
    3. ' stdin' → logprob: -2.9433746337890625
    4. 'stdin' → logprob: -2.9433746337890625
    5. 'l' → logprob: -3.9433746337890625
    6. ' l' → logprob: -4.3183746337890625
    7. 'input' → logprob: -5.1933746337890625
    8. ' input' → logprob: -5.9433746337890625
    9. 'standard' → logprob: -7.3183746337890625
    10. '=sys' → logprob: -7.3183746337890625

Token 136: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31040188670158386
    2. ' =' → logprob: -1.8104019165039062
    3. 'input' → logprob: -2.8104019165039062
    4. '=input' → logprob: -3.1854019165039062
    5. '_input' → logprob: -7.435401916503906
    6. '=
' → logprob: -7.810401916503906
    7. '=sys' → logprob: -7.810401916503906
    8. ' =
' → logprob: -9.310401916503906
    9. '=lambda' → logprob: -9.310401916503906
    10. 'def' → logprob: -10.685401916503906

Token 137: 'entrée' (ID: 68707)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.020370781421661377
    2. ')' → logprob: -4.395370960235596
    3. 'lambda' → logprob: -5.645370960235596
    4. ' input' → logprob: -5.895370960235596
    5. 'sys' → logprob: -7.520370960235596
    6. 'stdin' → logprob: -8.145370483398438
    7. '
' → logprob: -8.395370483398438
    8. ')
' → logprob: -9.020370483398438
    9. ' lambda' → logprob: -9.145370483398438
    10. ' )' → logprob: -10.020370483398438

Token 138: ' standard' (ID: 7024)
  Prédit: '=sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=sys' → logprob: -1.0886410474777222
    2. ')' → logprob: -1.5886410474777222
    3. ' =' → logprob: -1.5886410474777222
    4. '=' → logprob: -1.8386410474777222
    5. '()' → logprob: -2.9636411666870117
    6. '=input' → logprob: -3.8386411666870117
    7. '=lambda' → logprob: -4.213641166687012
    8. '())' → logprob: -6.713641166687012
    9. 'sys' → logprob: -6.713641166687012
    10. 'input' → logprob: -7.338641166687012

Token 139: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02882111258804798
    2. ')
' → logprob: -3.7788212299346924
    3. 'input' → logprob: -6.028820991516113
    4. ',' → logprob: -6.903820991516113
    5. ' =' → logprob: -7.278820991516113
    6. '()' → logprob: -7.903820991516113
    7. '=' → logprob: -8.403820991516113
    8. ' )' → logprob: -8.528820991516113
    9. '=sys' → logprob: -9.278820991516113
    10. ')

' → logprob: -9.403820991516113

Token 140: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -6.392202976712724e-06
    2. ' input' → logprob: -12.250006675720215
    3. '
' → logprob: -14.625006675720215
    4. 'inp' → logprob: -15.250006675720215
    5. 'def' → logprob: -15.375006675720215
    6. 'in' → logprob: -16.0000057220459
    7. 'raw' → logprob: -16.1250057220459
    8. 'import' → logprob: -16.2500057220459
    9. 'sys' → logprob: -16.2500057220459
    10. 'read' → logprob: -16.6250057220459

Token 141: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6330503225326538
    2. ' =' → logprob: -0.7580503225326538
    3. '=sys' → logprob: -8.758049964904785
    4. '=lambda' → logprob: -9.133049964904785
    5. ' ' → logprob: -9.883049964904785
    6. '()' → logprob: -10.633049964904785
    7. ')' → logprob: -10.758049964904785
    8. '(' → logprob: -10.758049964904785
    9. '=input' → logprob: -11.758049964904785
    10. 's' → logprob: -11.758049964904785

Token 142: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.06198505312204361
    2. ' sys' → logprob: -2.8119850158691406
    3. '	sys' → logprob: -11.56198501586914
    4. 'lambda' → logprob: -12.43698501586914
    5. '=sys' → logprob: -13.06198501586914
    6. 'input' → logprob: -13.56198501586914
    7. '(sys' → logprob: -15.18698501586914
    8. ' lambda' → logprob: -15.93698501586914
    9. 'stdin' → logprob: -16.93698501586914
    10. ' input' → logprob: -17.31198501586914

Token 143: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.362307223957032e-05
    2. '.stdout' → logprob: -10.125073432922363
    3. '.' → logprob: -10.500073432922363
    4. '.std' → logprob: -12.500073432922363
    5. ' .' → logprob: -13.875073432922363
    6. '._' → logprob: -14.250073432922363
    7. '.readline' → logprob: -15.250073432922363
    8. '.argv' → logprob: -16.12507438659668
    9. '.stderr' → logprob: -16.25007438659668
    10. '.__' → logprob: -16.37507438659668

Token 144: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.1637164789135568e-05
    2. '.' → logprob: -12.000011444091797
    3. '.buffer' → logprob: -13.000011444091797
    4. '.read' → logprob: -13.375011444091797
    5. '.readlines' → logprob: -13.375011444091797
    6. ' readline' → logprob: -17.375011444091797
    7. 'buffer' → logprob: -18.250011444091797
    8. 'read' → logprob: -18.875011444091797
    9. '.re' → logprob: -20.250011444091797
    10. ' .' → logprob: -20.500011444091797

Token 145: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06534933298826218
    2. '
' → logprob: -2.9403493404388428
    3. '(' → logprob: -5.440349102020264
    4. '()
' → logprob: -6.315349102020264
    5. '(
' → logprob: -6.565349102020264
    6. ')' → logprob: -6.690349102020264
    7. '#' → logprob: -8.065349578857422
    8. '<|end|>' → logprob: -8.065349578857422
    9. '

' → logprob: -8.315349578857422
    10. '().' → logprob: -8.565349578857422

Token 146: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24906882643699646
    2. 'n' → logprob: -1.7490688562393188
    3. 'class' → logprob: -3.3740687370300293
    4. '#' → logprob: -4.749068737030029
    5. '
' → logprob: -6.124068737030029
    6. '

' → logprob: -7.749068737030029
    7. 'N' → logprob: -7.999068737030029
    8. 'from' → logprob: -8.874069213867188
    9. 'd' → logprob: -9.249069213867188
    10. 'import' → logprob: -9.874069213867188

Token 147: ' Déf' (ID: 180635)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0910772904753685
    2. 'n' → logprob: -2.7160773277282715
    3. '#' → logprob: -4.7160773277282715
    4. 'class' → logprob: -5.3410773277282715
    5. 'N' → logprob: -6.2160773277282715
    6. ' def' → logprob: -6.8410773277282715
    7. ' n' → logprob: -6.9660773277282715
    8. 'data' → logprob: -7.0910773277282715
    9. 'from' → logprob: -7.2160773277282715
    10. 'T' → logprob: -7.9660773277282715

Token 148: 'init' (ID: 3287)
  Prédit: 'inition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inition' → logprob: -0.8294356465339661
    2. 'inis' → logprob: -1.8294355869293213
    3. 'ine' → logprob: -1.9544355869293213
    4. 'init' → logprob: -2.3294355869293213
    5. 'ini' → logprob: -2.4544355869293213
    6. 'inir' → logprob: -3.4544355869293213
    7. 'inie' → logprob: -4.4544358253479
    8. 'ault' → logprob: -4.7044358253479
    9. 'initions' → logprob: -4.9544358253479
    10. 'initi' → logprob: -5.2044358253479

Token 149: ' une' (ID: 2463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7307734489440918
    2. ' la' → logprob: -2.105773448944092
    3. ' a' → logprob: -2.230773448944092
    4. ' une' → logprob: -2.355773448944092
    5. '()' → logprob: -2.480773448944092
    6. 'a' → logprob: -3.730773448944092
    7. '(' → logprob: -3.730773448944092
    8. 'la' → logprob: -3.855773448944092
    9. ' un' → logprob: -4.605773448944092
    10. ' the' → logprob: -5.105773448944092

Token 150: ' constante' (ID: 49652)
  Prédit: ' fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonction' → logprob: -0.4671931862831116
    2. ' function' → logprob: -2.592193126678467
    3. 'fonction' → logprob: -2.592193126678467
    4. ' class' → logprob: -3.342193126678467
    5. ' variable' → logprob: -3.467193126678467
    6. 'ction' → logprob: -3.717193126678467
    7. 'def' → logprob: -4.342193126678467
    8. ' liste' → logprob: -4.342193126678467
    9. ' classe' → logprob: -4.467193126678467
    10. ' constante' → logprob: -4.717193126678467

Token 151: ' '' (ID: 461)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.7390161752700806
    2. 'MOD' → logprob: -1.4890161752700806
    3. 'INF' → logprob: -2.114016056060791
    4. ' =' → logprob: -2.614016056060791
    5. 'N' → logprob: -2.864016056060791
    6. '=' → logprob: -4.864016056060791
    7. '(' → logprob: -4.864016056060791
    8. ' MAX' → logprob: -5.114016056060791
    9. '(MAX' → logprob: -5.364016056060791
    10. ' INF' → logprob: -5.614016056060791

Token 152: 'mod' (ID: 4847)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.5625048279762268
    2. 'MAX' → logprob: -1.437504768371582
    3. 'INF' → logprob: -1.812504768371582
    4. ' MOD' → logprob: -4.562504768371582
    5. ' INF' → logprob: -4.812504768371582
    6. 'M' → logprob: -5.812504768371582
    7. ' MAX' → logprob: -5.812504768371582
    8. 'N' → logprob: -5.937504768371582
    9. 'LIMIT' → logprob: -8.062504768371582
    10. 'IN' → logprob: -8.312504768371582

Token 153: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06845036894083023
    2. 'ule' → logprob: -3.818450450897217
    3. '=' → logprob: -4.193450450897217
    4. ''' → logprob: -4.193450450897217
    5. 'ULO' → logprob: -4.693450450897217
    6. 'ulo' → logprob: -5.943450450897217
    7. 'ulus' → logprob: -6.943450450897217
    8. 'uler' → logprob: -8.193449974060059
    9. 'e' → logprob: -9.193449974060059
    10. '`' → logprob: -9.193449974060059

Token 154: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14294323325157166
    2. '=' → logprob: -2.0179431438446045
    3. ' =
' → logprob: -8.767943382263184
    4. ' ' → logprob: -9.267943382263184
    5. ',' → logprob: -11.642943382263184
    6. '=
' → logprob: -13.142943382263184
    7. 'mod' → logprob: -13.517943382263184
    8. '=

' → logprob: -13.517943382263184
    9. ':' → logprob: -13.767943382263184
    10. '_' → logprob: -14.392943382263184

Token 155: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06321900337934494
    2. '10' → logprob: -2.8132190704345703
    3. '100' → logprob: -6.93821907043457
    4. '1' → logprob: -8.43821907043457
    5. 'int' → logprob: -11.43821907043457
    6. ' int' → logprob: -11.56321907043457
    7. '2' → logprob: -12.06321907043457
    8. '32' → logprob: -12.31321907043457
    9. '20' → logprob: -12.31321907043457
    10. ' =' → logprob: -12.43821907043457

Token 156: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3579608201980591
    2. '100' → logprob: -1.232960820198059
    3. '998' → logprob: -5.1079607009887695
    4. ' ' → logprob: -5.9829607009887695
    5. '1' → logprob: -7.6079607009887695
    6. 'int' → logprob: -8.10796070098877
    7. '(' → logprob: -9.98296070098877
    8. '999' → logprob: -10.85796070098877
    9. '123' → logprob: -11.48296070098877
    10. '0' → logprob: -12.48296070098877

Token 157: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.002761606127023697
    2. ' **' → logprob: -6.2527618408203125
    3. '000' → logprob: -7.1277618408203125
    4. '9' → logprob: -11.377761840820312
    5. '00' → logprob: -11.877761840820312
    6. '7' → logprob: -11.877761840820312
    7. ' ' → logprob: -13.127761840820312
    8. '0' → logprob: -14.127761840820312
    9. '6' → logprob: -14.127761840820312
    10. ' ' → logprob: -14.627761840820312

Token 158: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -15.875001907348633
    4. '09' → logprob: -16.250001907348633
    5. '+' → logprob: -18.375001907348633
    6. '**' → logprob: -20.125001907348633
    7. '``' → logprob: -20.500001907348633
    8. '^' → logprob: -20.500001907348633
    9. '10' → logprob: -20.625001907348633
    10. '   ' → logprob: -20.625001907348633

Token 159: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003178306156769395
    2. ' +' → logprob: -5.753178119659424
    3. '+
' → logprob: -15.003178596496582
    4. '7' → logprob: -15.878178596496582
    5. ' ' → logprob: -16.878177642822266
    6. '＋' → logprob: -17.253177642822266
    7. ' ' → logprob: -17.503177642822266
    8. '9' → logprob: -17.878177642822266
    9. ' +
' → logprob: -18.003177642822266
    10. ' plus' → logprob: -18.128177642822266

Token 160: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -7.553032628493384e-05
    2. ' ' → logprob: -9.500075340270996
    3. '+' → logprob: -14.875075340270996
    4. '9' → logprob: -16.250076293945312
    5. '```' → logprob: -17.125076293945312
    6. '  ' → logprob: -17.375076293945312
    7. '   ' → logprob: -18.500076293945312
    8. ' ' → logprob: -18.625076293945312
    9. ' +' → logprob: -18.750076293945312
    10. '1' → logprob: -19.937576293945312

Token 161: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '+' → logprob: -16.125
    4. '```' → logprob: -18.5
    5. '07' → logprob: -20.875
    6. ' +' → logprob: -21.0
    7. '9' → logprob: -21.4375
    8. '   ' → logprob: -21.5
    9. '' → logprob: -21.75
    10. '  ' → logprob: -21.9375

Token 162: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36619019508361816
    2. 'mod' → logprob: -1.3661901950836182
    3. '=' → logprob: -3.241190195083618
    4. '
' → logprob: -5.116189956665039
    5. ' mod' → logprob: -5.116189956665039
    6. ' =
' → logprob: -8.866189956665039
    7. '_mod' → logprob: -8.991189956665039
    8. ' 
' → logprob: -9.991189956665039
    9. ' ' → logprob: -10.616189956665039
    10. '
' → logprob: -10.741189956665039

Token 163: ' commun' (ID: 2797)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8790679574012756
    2. ' mod' → logprob: -1.2540678977966309
    3. 'mod' → logprob: -2.004067897796631
    4. ' 
' → logprob: -2.129067897796631
    5. '
' → logprob: -4.004067897796631
    6. '  
' → logprob: -4.254067897796631
    7. ' =' → logprob: -5.004067897796631
    8. '   
' → logprob: -6.504067897796631
    9. '10' → logprob: -6.879067897796631
    10. ' )' → logprob: -7.879067897796631

Token 164: 'ément' (ID: 17645)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16332055628299713
    2. '=' → logprob: -1.913320541381836
    3. ' ' → logprob: -6.413320541381836
    4. ' mod' → logprob: -7.413320541381836
    5. 'mod' → logprob: -7.663320541381836
    6. 'e' → logprob: -8.538320541381836
    7. ',' → logprob: -10.163320541381836
    8. '.' → logprob: -10.913320541381836
    9. '_mod' → logprob: -11.038320541381836
    10. ')' → logprob: -11.288320541381836

Token 165: ' utilisée' (ID: 106548)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5646685361862183
    2. ' =' → logprob: -0.9396685361862183
    3. 'mod' → logprob: -4.064668655395508
    4. ' mod' → logprob: -4.564668655395508
    5. '+' → logprob: -5.064668655395508
    6. '_' → logprob: -5.939668655395508
    7. ' used' → logprob: -6.814668655395508
    8. ' ' → logprob: -6.939668655395508
    9. ' +' → logprob: -7.314668655395508
    10. '_mod' → logprob: -8.689668655395508

Token 166: ' comme' (ID: 7971)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.529399573802948
    2. '=' → logprob: -1.5293996334075928
    3. 'mod' → logprob: -1.9043996334075928
    4. ' ' → logprob: -3.5293996334075928
    5. ' mod' → logprob: -4.654399394989014
    6. ',' → logprob: -6.654399394989014
    7. '
' → logprob: -6.779399394989014
    8. '_mod' → logprob: -7.279399394989014
    9. '_' → logprob: -7.529399394989014
    10. ')' → logprob: -7.529399394989014

Token 167: ' mod' (ID: 1812)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015526407398283482
    2. ' mod' → logprob: -4.640526294708252
    3. 'mod' → logprob: -5.640526294708252
    4. ' ' → logprob: -7.640526294708252
    5. ' modulus' → logprob: -7.765526294708252
    6. ' )' → logprob: -8.14052677154541
    7. ' modulo' → logprob: -8.26552677154541
    8. '1' → logprob: -8.64052677154541
    9. '100' → logprob: -8.64052677154541
    10. '10' → logprob: -9.01552677154541

Token 168: 'ulate' (ID: 10111)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8487699031829834
    2. ' =' → logprob: -1.3487699031829834
    3. 'ule' → logprob: -1.4737699031829834
    4. 'ulo' → logprob: -3.3487699031829834
    5. '7' → logprob: -4.3487701416015625
    6. 'mod' → logprob: -4.5987701416015625
    7. '
' → logprob: -5.2237701416015625
    8. '```' → logprob: -5.3487701416015625
    9. 'ULO' → logprob: -6.0987701416015625
    10. 'uler' → logprob: -6.2237701416015625

Token 169: 'ur' (ID: 330)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5438759922981262
    2. ' ' → logprob: -1.2938759326934814
    3. ' =' → logprob: -2.7938759326934814
    4. '=' → logprob: -2.9188759326934814
    5. ' r' → logprob: -5.1688761711120605
    6. 'e' → logprob: -5.2938761711120605
    7. ' mod' → logprob: -6.2938761711120605
    8. 'er' → logprob: -6.5438761711120605
    9. 'or' → logprob: -6.5438761711120605
    10. 'd' → logprob: -6.5438761711120605

Token 170: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5463589429855347
    2. 'mod' → logprob: -1.2963589429855347
    3. '=' → logprob: -2.046359062194824
    4. ' mod' → logprob: -4.421359062194824
    5. '
' → logprob: -5.921359062194824
    6. '_mod' → logprob: -6.421359062194824
    7. '(mod' → logprob: -7.296359062194824
    8. ' ' → logprob: -7.921359062194824
    9. ' (' → logprob: -8.046359062194824
    10. '(' → logprob: -8.671359062194824

Token 171: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.001038287067785859
    2. ' )' → logprob: -7.626038074493408
    3. '10' → logprob: -8.501038551330566
    4. '  ' → logprob: -9.626038551330566
    5. ' 
' → logprob: -9.626038551330566
    6. ')' → logprob: -10.376038551330566
    7. '1' → logprob: -10.626038551330566
    8. '_' → logprob: -10.626038551330566
    9. '100' → logprob: -10.626038551330566
    10. ' a' → logprob: -11.001038551330566

Token 172: ' problèmes' (ID: 49822)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1841961145401001
    2. ' )' → logprob: -2.6841959953308105
    3. ' ' → logprob: -3.8091959953308105
    4. ' mod' → logprob: -4.0591959953308105
    5. 'mod' → logprob: -5.0591959953308105
    6. ' calculations' → logprob: -5.1841959953308105
    7. '_' → logprob: -5.3091959953308105
    8. ' modulo' → logprob: -5.3091959953308105
    9. ' math' → logprob: -5.6841959953308105
    10. ' code' → logprob: -5.8091959953308105

Token 173: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0652621984481812
    2. 'mod' → logprob: -1.6902621984481812
    3. '=' → logprob: -2.0652623176574707
    4. ' ' → logprob: -2.0652623176574707
    5. '_' → logprob: -2.1902623176574707
    6. ' mod' → logprob: -2.8152623176574707
    7. ' (' → logprob: -3.9402623176574707
    8. '_mod' → logprob: -4.940262317657471
    9. '(' → logprob: -5.940262317657471
    10. ' de' → logprob: -6.065262317657471

Token 174: ' éviter' (ID: 64013)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.8357529640197754
    2. ' ' → logprob: -1.8357529640197754
    3. 'int' → logprob: -1.8357529640197754
    4. 'mod' → logprob: -3.0857529640197754
    5. '100' → logprob: -3.3357529640197754
    6. ' int' → logprob: -3.5857529640197754
    7. ' l' → logprob: -3.5857529640197754
    8. '998' → logprob: -3.5857529640197754
    9. '10' → logprob: -3.9607529640197754
    10. ' le' → logprob: -4.085752964019775

Token 175: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002106363419443369
    2. '_' → logprob: -7.127106189727783
    3. ' )' → logprob: -7.752106189727783
    4. '1' → logprob: -8.127106666564941
    5. ' (' → logprob: -9.502106666564941
    6. '  ' → logprob: -9.752106666564941
    7. '<|end|>' → logprob: -9.752106666564941
    8. ')' → logprob: -10.127106666564941
    9. ' ' → logprob: -10.127106666564941
    10. ' =' → logprob: -10.502106666564941

Token 176: ' déb' (ID: 37874)
  Prédit: ' overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overflow' → logprob: -0.31951114535331726
    2. ' déb' → logprob: -2.4445111751556396
    3. ' ent' → logprob: -2.9445111751556396
    4. ' dépasse' → logprob: -3.0695111751556396
    5. ' integer' → logprob: -3.6945111751556396
    6. ' ' → logprob: -4.1945109367370605
    7. ' over' → logprob: -4.6945109367370605
    8. 'overflow' → logprob: -4.6945109367370605
    9. ' espaces' → logprob: -5.1945109367370605
    10. ' ' → logprob: -5.1945109367370605

Token 177: 'ord' (ID: 604)
  Prédit: 'ug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ug' → logprob: -0.07780208438634872
    2. 'uts' → logprob: -3.7028021812438965
    3. 'f' → logprob: -4.4528021812438965
    4. 't' → logprob: -4.7028021812438965
    5. 'ut' → logprob: -5.3278021812438965
    6. 'ts' → logprob: -6.0778021812438965
    7. 'ugs' → logprob: -6.0778021812438965
    8. 'it' → logprob: -6.2028021812438965
    9. 'u' → logprob: -6.2028021812438965
    10. '``' → logprob: -6.8278021812438965

Token 178: 'ements' (ID: 4507)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3765950202941895
    2. '=' → logprob: -1.5015950202941895
    3. '_' → logprob: -2.3765950202941895
    4. ' =' → logprob: -2.6265950202941895
    5. 'uler' → logprob: -3.1265950202941895
    6. 'ular' → logprob: -3.3765950202941895
    7. '100' → logprob: -3.6265950202941895
    8. '1' → logprob: -3.8765950202941895
    9. 'ule' → logprob: -4.0015950202941895
    10. '   ' → logprob: -4.0015950202941895

Token 179: ' d' (ID: 272)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.35099634528160095
    2. ' =' → logprob: -1.6009963750839233
    3. ' mod' → logprob: -3.100996255874634
    4. '=' → logprob: -3.475996255874634
    5. '
' → logprob: -4.600996494293213
    6. '_mod' → logprob: -6.100996494293213
    7. ' ' → logprob: -6.475996494293213
    8. ' (' → logprob: -6.725996494293213
    9. '(' → logprob: -6.725996494293213
    10. '(mod' → logprob: -7.225996494293213

Token 180: ''ent' (ID: 53422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09926357865333557
    2. ' integers' → logprob: -3.0992636680603027
    3. ' int' → logprob: -3.5992636680603027
    4. ' )' → logprob: -5.474263668060303
    5. ' integer' → logprob: -6.224263668060303
    6. ' modulo' → logprob: -6.474263668060303
    7. '_' → logprob: -6.599263668060303
    8. 'inte' → logprob: -6.849263668060303
    9. ' space' → logprob: -6.974263668060303
    10. '  ' → logprob: -7.224263668060303

Token 181: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.009958420880138874
    2. 'ières' → logprob: -5.259958267211914
    3. 'ier' → logprob: -5.759958267211914
    4. 'ers' → logprob: -8.009958267211914
    5. 'ires' → logprob: -8.259958267211914
    6. 'éros' → logprob: -8.759958267211914
    7. 'er' → logprob: -8.884958267211914
    8. 'ités' → logprob: -9.634958267211914
    9. 't' → logprob: -9.634958267211914
    10. 'érés' → logprob: -9.884958267211914

Token 182: '
' (ID: 198)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.8324725031852722
    2. '(' → logprob: -1.582472562789917
    3. ' =' → logprob: -1.582472562789917
    4. ' ' → logprob: -3.207472562789917
    5. ' mod' → logprob: -3.332472562789917
    6. '=' → logprob: -3.582472562789917
    7. '(mod' → logprob: -4.082472324371338
    8. ' (' → logprob: -4.707472324371338
    9. '(
' → logprob: -5.082472324371338
    10. ' 
' → logprob: -5.707472324371338

Token 183: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.007702684495598078
    2. ' mod' → logprob: -4.882702827453613
    3. '
' → logprob: -9.632702827453613
    4. ' =' → logprob: -11.007702827453613
    5. 'MOD' → logprob: -12.382702827453613
    6. '=' → logprob: -12.882702827453613
    7. '_mod' → logprob: -13.257702827453613
    8. ' 
' → logprob: -13.632702827453613
    9. '(mod' → logprob: -13.757702827453613
    10. '10' → logprob: -14.132702827453613

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029762184247374535
    2. '=' → logprob: -3.5297622680664062
    3. ' ' → logprob: -11.404762268066406
    4. ' =
' → logprob: -15.029762268066406
    5. ' ' → logprob: -16.279762268066406
    6. ',' → logprob: -16.404762268066406
    7. '=int' → logprob: -16.904762268066406
    8. '  ' → logprob: -17.779762268066406
    9. ' ,' → logprob: -18.154762268066406
    10. '=

' → logprob: -18.779762268066406

Token 185: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48541662096977234
    2. '10' → logprob: -0.9854166507720947
    3. '100' → logprob: -4.485416412353516
    4. 'int' → logprob: -13.360416412353516
    5. '1' → logprob: -13.610416412353516
    6. ' int' → logprob: -15.235416412353516
    7. ' ' → logprob: -15.360416412353516
    8. '109' → logprob: -17.735416412353516
    9. 'pow' → logprob: -18.360416412353516
    10. ' (' → logprob: -18.485416412353516

Token 186: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.030076274648308754
    2. '100' → logprob: -3.530076265335083
    3. ' ' → logprob: -8.030076026916504
    4. 'int' → logprob: -15.655076026916504
    5. '1' → logprob: -16.28007698059082
    6. '(' → logprob: -18.28007698059082
    7. '109' → logprob: -18.65507698059082
    8. '  ' → logprob: -21.15507698059082
    9. ' ' → logprob: -21.28007698059082
    10. 'pow' → logprob: -21.40507698059082

Token 187: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.001041978714056313
    2. ' **' → logprob: -7.251041889190674
    3. '9' → logprob: -8.126042366027832
    4. '+' → logprob: -10.626042366027832
    5. '000' → logprob: -11.876042366027832
    6. '*' → logprob: -12.751042366027832
    7. ' ' → logprob: -14.251042366027832
    8. '_' → logprob: -14.376042366027832
    9. ' +' → logprob: -15.626042366027832
    10. '```' → logprob: -15.751042366027832

Token 188: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '09' → logprob: -18.875
    4. '９' → logprob: -21.125
    5. '```' → logprob: -22.25
    6. '۹' → logprob: -23.0
    7. '+' → logprob: -23.75
    8. '९' → logprob: -24.25
    9. '٩' → logprob: -24.625
    10. '
' → logprob: -24.75

Token 189: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048589076846838
    2. ' +' → logprob: -3.048588991165161
    3. '7' → logprob: -14.173588752746582
    4. ' ' → logprob: -14.798588752746582
    5. ' ' → logprob: -15.048588752746582
    6. '+
' → logprob: -15.173588752746582
    7. ' +
' → logprob: -16.6735897064209
    8. '
' → logprob: -17.2985897064209
    9. '＋' → logprob: -17.5485897064209
    10. '9' → logprob: -17.9235897064209

Token 190: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -19.125
    3. '07' → logprob: -19.125
    4. '' → logprob: -21.625
    5. '۷' → logprob: -22.0
    6. '```' → logprob: -22.0
    7. '007' → logprob: -22.375
    8. '७' → logprob: -22.375
    9. '٧' → logprob: -22.375
    10. '７' → logprob: -22.5

Token 191: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04633885249495506
    2. '

' → logprob: -3.5463387966156006
    3. '<|end|>' → logprob: -4.42133903503418
    4. 'def' → logprob: -6.04633903503418
    5. '#' → logprob: -8.17133903503418
    6. '
' → logprob: -8.29633903503418
    7. '
 
' → logprob: -8.29633903503418
    8. '<|end|>' → logprob: -8.29633903503418
    9. '\n' → logprob: -8.42133903503418
    10. 'n' → logprob: -8.79633903503418

Token 192: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.038650453090667725
    2. 'n' → logprob: -3.2886505126953125
    3. 'class' → logprob: -8.163650512695312
    4. 'N' → logprob: -9.038650512695312
    5. '#' → logprob: -9.288650512695312
    6. 'from' → logprob: -10.413650512695312
    7. '\' → logprob: -10.788650512695312
    8. '
' → logprob: -11.288650512695312
    9. ' def' → logprob: -11.288650512695312
    10. '

' → logprob: -11.788650512695312

Token 193: ' Déf' (ID: 180635)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01109261903911829
    2. 'n' → logprob: -4.886092662811279
    3. 'from' → logprob: -6.136092662811279
    4. '#' → logprob: -7.511092662811279
    5. 'class' → logprob: -8.511092185974121
    6. 'N' → logprob: -8.761092185974121
    7. 'INF' → logprob: -8.761092185974121
    8. 'input' → logprob: -9.761092185974121
    9. ' def' → logprob: -10.386092185974121
    10. 'MAX' → logprob: -10.886092185974121

Token 194: 'init' (ID: 3287)
  Prédit: 'ini'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -1.494075059890747
    2. '#' → logprob: -1.619075059890747
    3. 'init' → logprob: -1.994075059890747
    4. '```' → logprob: -2.619075059890747
    5. 'def' → logprob: -2.744075059890747
    6. 'f' → logprob: -2.994075059890747
    7. '=' → logprob: -2.994075059890747
    8. 'inis' → logprob: -3.119075059890747
    9. 'inir' → logprob: -3.244075059890747
    10. 'ine' → logprob: -3.369075059890747

Token 195: ' '' (ID: 461)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9246321320533752
    2. 'n' → logprob: -1.1746320724487305
    3. ' n' → logprob: -1.9246320724487305
    4. ' def' → logprob: -3.2996320724487305
    5. ' la' → logprob: -3.2996320724487305
    6. ' a' → logprob: -3.4246320724487305
    7. ' une' → logprob: -3.4246320724487305
    8. 'a' → logprob: -5.9246320724487305
    9. ' ' → logprob: -6.2996320724487305
    10. ' un' → logprob: -6.4246320724487305

Token 196: 'Max' (ID: 6499)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3769809901714325
    2. 'def' → logprob: -1.3769810199737549
    3. ' n' → logprob: -3.751981019973755
    4. 'input' → logprob: -5.001980781555176
    5. 'range' → logprob: -5.126980781555176
    6. 'N' → logprob: -5.251980781555176
    7. ' def' → logprob: -5.501980781555176
    8. 'INF' → logprob: -5.501980781555176
    9. 'deque' → logprob: -6.251980781555176
    10. 't' → logprob: -6.501980781555176

Token 197: ''' (ID: 6)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5253061056137085
    2. 'n' → logprob: -1.6503061056137085
    3. '_val' → logprob: -2.150306224822998
    4. '_n' → logprob: -3.150306224822998
    5. 'Val' → logprob: -4.275306224822998
    6. 'val' → logprob: -4.525306224822998
    7. '_len' → logprob: -5.025306224822998
    8. 'A' → logprob: -5.400306224822998
    9. ' =' → logprob: -5.650306224822998
    10. 'V' → logprob: -6.025306224822998

Token 198: ' comme' (ID: 7971)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08908985555171967
    2. '=' → logprob: -2.464089870452881
    3. ' ' → logprob: -9.339089393615723
    4. '=int' → logprob: -10.589089393615723
    5. ',' → logprob: -10.714089393615723
    6. '_' → logprob: -12.214089393615723
    7. 'int' → logprob: -13.214089393615723
    8. '  ' → logprob: -13.589089393615723
    9. '=max' → logprob: -13.839089393615723
    10. ' ,' → logprob: -14.214089393615723

Token 199: ' la' (ID: 557)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.23639342188835144
    2. ' ' → logprob: -1.6113934516906738
    3. '100' → logprob: -4.736393451690674
    4. 'int' → logprob: -6.861393451690674
    5. '1' → logprob: -8.236392974853516
    6. '200' → logprob: -8.611392974853516
    7. '0' → logprob: -8.736392974853516
    8. '2' → logprob: -9.236392974853516
    9. ' int' → logprob: -9.236392974853516
    10. '500' → logprob: -9.486392974853516

Token 200: ' plus' (ID: 2932)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5211061835289001
    2. ' ' → logprob: -1.021106243133545
    3. 'int' → logprob: -4.021106243133545
    4. '100' → logprob: -4.396106243133545
    5. ' int' → logprob: -4.771106243133545
    6. 'max' → logprob: -6.646106243133545
    7. ' max' → logprob: -6.771106243133545
    8. '1' → logprob: -6.896106243133545
    9. ' maximum' → logprob: -7.146106243133545
    10. '=' → logprob: -7.396106243133545

Token 201: ' grande' (ID: 10094)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18071721494197845
    2. ' _' → logprob: -2.5557172298431396
    3. '_val' → logprob: -3.1807172298431396
    4. ' grande' → logprob: -4.1807169914245605
    5. '_large' → logprob: -5.0557169914245605
    6. '_possible' → logprob: -5.1807169914245605
    7. ' large' → logprob: -6.0557169914245605
    8. '_value' → logprob: -6.0557169914245605
    9. '_s' → logprob: -6.5557169914245605
    10. '
' → logprob: -6.5557169914245605

Token 202: ' valeur' (ID: 41664)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8895134329795837
    2. '_val' → logprob: -1.5145134925842285
    3. 'tail' → logprob: -2.7645134925842285
    4. 'val' → logprob: -2.7645134925842285
    5. '=' → logprob: -3.0145134925842285
    6. 'int' → logprob: -3.0145134925842285
    7. '_' → logprob: -3.1395134925842285
    8. '_possible' → logprob: -4.3895134925842285
    9. '_ent' → logprob: -4.6395134925842285
    10. '_int' → logprob: -5.0145134925842285

Token 203: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.306880921125412
    2. '=' → logprob: -2.4318809509277344
    3. '_possible' → logprob: -3.0568809509277344
    4. 'int' → logprob: -3.5568809509277344
    5. '_int' → logprob: -3.6818809509277344
    6. '_' → logprob: -3.8068809509277344
    7. '=int' → logprob: -4.056880950927734
    8. '_des' → logprob: -4.806880950927734
    9. 'possible' → logprob: -4.806880950927734
    10. 'd' → logprob: -5.806880950927734

Token 204: ''ent' (ID: 53422)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.5156618356704712
    2. 'e' → logprob: -2.6406617164611816
    3. 'u' → logprob: -2.8906617164611816
    4. 'es' → logprob: -3.1406617164611816
    5. 'éf' → logprob: -3.2656617164611816
    6. ''un' → logprob: -3.6406617164611816
    7. ''une' → logprob: -4.015661716461182
    8. ' =' → logprob: -4.015661716461182
    9. 'éc' → logprob: -4.265661716461182
    10. ' possible' → logprob: -4.640661716461182

Token 205: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.0034809205681085587
    2. 'iers' → logprob: -6.253480911254883
    3. 'ity' → logprob: -7.003480911254883
    4. 'er' → logprob: -7.878480911254883
    5. 'ité' → logprob: -9.628480911254883
    6. 'e' → logprob: -10.378480911254883
    7. 'iable' → logprob: -10.753480911254883
    8. 'eg' → logprob: -11.128480911254883
    9. 'ropy' → logprob: -11.253480911254883
    10. 'ière' → logprob: -11.253480911254883

Token 206: ' support' (ID: 2498)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1103484183549881
    2. '=' → logprob: -2.4853484630584717
    3. 'int' → logprob: -4.735348224639893
    4. '=int' → logprob: -4.985348224639893
    5. '_' → logprob: -6.485348224639893
    6. '32' → logprob: -6.985348224639893
    7. ' ' → logprob: -7.235348224639893
    8. 'possible' → logprob: -7.360348224639893
    9. '_possible' → logprob: -7.735348224639893
    10. ' possible' → logprob: -7.985348224639893

Token 207: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.03867075964808464
    2. 'é' → logprob: -3.288670778274536
    3. 'able' → logprob: -7.788670539855957
    4. 'ee' → logprob: -8.913670539855957
    5. 'e' → logprob: -10.038670539855957
    6. '=' → logprob: -10.663670539855957
    7. 'É' → logprob: -13.038670539855957
    8. ' =' → logprob: -13.038670539855957
    9. '#' → logprob: -13.788670539855957
    10. 'née' → logprob: -13.913670539855957

Token 208: ' par' (ID: 686)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15310586988925934
    2. ' =' → logprob: -2.2781059741973877
    3. '=sys' → logprob: -3.6531059741973877
    4. '=int' → logprob: -4.528105735778809
    5. 'int' → logprob: -6.653105735778809
    6. 'import' → logprob: -6.903105735778809
    7. 'sys' → logprob: -8.528105735778809
    8. '_int' → logprob: -9.278105735778809
    9. '=max' → logprob: -9.528105735778809
    10. '=
' → logprob: -11.028105735778809

Token 209: ' ce' (ID: 2357)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.592010498046875
    2. ' sys' → logprob: -0.842010498046875
    3. 'int' → logprob: -4.217010498046875
    4. ' int' → logprob: -7.717010498046875
    5. '=sys' → logprob: -8.342010498046875
    6. ' Python' → logprob: -8.592010498046875
    7. ' la' → logprob: -9.592010498046875
    8. 'import' → logprob: -9.717010498046875
    9. 'Python' → logprob: -10.342010498046875
    10. 'python' → logprob: -10.467010498046875

Token 210: ' système' (ID: 30034)
  Prédit: ' système'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' système' → logprob: -0.1476866751909256
    2. 's' → logprob: -3.022686719894409
    3. ' Python' → logprob: -3.772686719894409
    4. 'Python' → logprob: -4.02268648147583
    5. ' sys' → logprob: -4.77268648147583
    6. 'int' → logprob: -5.14768648147583
    7. 'e' → logprob: -5.39768648147583
    8. ' code' → logprob: -5.52268648147583
    9. 'py' → logprob: -5.89768648147583
    10. 'sys' → logprob: -6.02268648147583

Token 211: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.051463015377521515
    2. '=sys' → logprob: -3.6764631271362305
    3. ' =' → logprob: -3.9264631271362305
    4. 'import' → logprob: -5.9264631271362305
    5. 'sys' → logprob: -6.4264631271362305
    6. '_max' → logprob: -7.9264631271362305
    7. 'Max' → logprob: -8.67646312713623
    8. '=
' → logprob: -9.55146312713623
    9. 'max' → logprob: -9.67646312713623
    10. '=int' → logprob: -9.92646312713623

Token 212: 'util' (ID: 2056)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.8444860577583313
    2. 'import' → logprob: -1.7194859981536865
    3. ')' → logprob: -1.8444859981536865
    4. ' sys' → logprob: -1.9694859981536865
    5. ' =' → logprob: -3.4694859981536865
    6. '=sys' → logprob: -3.4694859981536865
    7. '=' → logprob: -4.344486236572266
    8. 'int' → logprob: -5.719486236572266
    9. ')
' → logprob: -6.094486236572266
    10. ' ' → logprob: -6.219486236572266

Token 213: 'isée' (ID: 59331)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.2630282640457153
    2. 'sys' → logprob: -1.6380282640457153
    3. '=sys' → logprob: -1.8880282640457153
    4. 'isé' → logprob: -2.138028144836426
    5. '=' → logprob: -2.888028144836426
    6. 'ze' → logprob: -3.013028144836426
    7. 'import' → logprob: -3.388028144836426
    8. ' =' → logprob: -4.263028144836426
    9. 'isée' → logprob: -4.263028144836426
    10. 'm' → logprob: -4.638028144836426

Token 214: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5579892992973328
    2. '=sys' → logprob: -1.4329893589019775
    3. '=' → logprob: -2.0579893589019775
    4. ' par' → logprob: -3.8079893589019775
    5. ')' → logprob: -4.432989120483398
    6. 'import' → logprob: -4.932989120483398
    7. 'par' → logprob: -4.932989120483398
    8. '=int' → logprob: -5.682989120483398
    9. ' pour' → logprob: -5.682989120483398
    10. ' en' → logprob: -6.182989120483398

Token 215: ' initial' (ID: 4871)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.4674230813980103
    2. 'initial' → logprob: -1.8424230813980103
    3. ' initial' → logprob: -2.2174229621887207
    4. ' l' → logprob: -2.2174229621887207
    5. 'bs' → logprob: -2.2174229621887207
    6. 'int' → logprob: -3.0924229621887207
    7. ' la' → logprob: -3.0924229621887207
    8. ' bs' → logprob: -3.4674229621887207
    9. 'float' → logprob: -3.7174229621887207
    10. ' représ' → logprob: -3.9674229621887207

Token 216: 'iser' (ID: 7466)
  Prédit: 'isé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.8261231184005737
    2. 'iser' → logprob: -1.3261231184005737
    3. 'isée' → logprob: -1.9511231184005737
    4. 'izer' → logprob: -2.9511232376098633
    5. 'e' → logprob: -3.5761232376098633
    6. '_value' → logprob: -3.8261232376098633
    7. 'ization' → logprob: -4.326123237609863
    8. 'isation' → logprob: -4.826123237609863
    9. 'value' → logprob: -5.701123237609863
    10. 'ized' → logprob: -5.701123237609863

Token 217: ' des' (ID: 731)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5621721148490906
    2. ' l' → logprob: -1.8121721744537354
    3. ')' → logprob: -2.9371721744537354
    4. 'float' → logprob: -3.3121721744537354
    5. ' les' → logprob: -3.4371721744537354
    6. ' la' → logprob: -3.8121721744537354
    7. ' float' → logprob: -3.8121721744537354
    8. 'int' → logprob: -3.9371721744537354
    9. 'une' → logprob: -4.187171936035156
    10. 'l' → logprob: -4.312171936035156

Token 218: ' born' (ID: 12275)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.0942633152008057
    2. 'float' → logprob: -2.3442633152008057
    3. 'inf' → logprob: -2.7192633152008057
    4. 'e' → logprob: -2.8442633152008057
    5. 'i' → logprob: -2.8442633152008057
    6. ' float' → logprob: -2.9692633152008057
    7. 'int' → logprob: -3.0942633152008057
    8. '=' → logprob: -3.2192633152008057
    9. 'val' → logprob: -3.3442633152008057
    10. ')' → logprob: -3.4692633152008057

Token 219: 'es' (ID: 268)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.37131258845329285
    2. 'ier' → logprob: -1.9963126182556152
    3. 'ière' → logprob: -2.8713126182556152
    4. 'es' → logprob: -3.7463126182556152
    5. 'age' → logprob: -4.371312618255615
    6. 'd' → logprob: -4.621312618255615
    7. 'ières' → logprob: -4.621312618255615
    8. 'er' → logprob: -4.871312618255615
    9. 'iers' → logprob: -4.871312618255615
    10. 'aire' → logprob: -4.996312618255615

Token 220: ' haut' (ID: 28223)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6625059247016907
    2. ' =' → logprob: -1.162505865097046
    3. '=' → logprob: -2.287505865097046
    4. ',' → logprob: -3.412505865097046
    5. '=sys' → logprob: -3.662505865097046
    6. '=int' → logprob: -5.662506103515625
    7. 'import' → logprob: -6.287506103515625
    8. ' )' → logprob: -7.037506103515625
    9. '_max' → logprob: -7.162506103515625
    10. ' ' → logprob: -7.287506103515625

Token 221: 'es' (ID: 268)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008195620030164719
    2. '=' → logprob: -5.633195400238037
    3. ')' → logprob: -6.133195400238037
    4. ' =' → logprob: -7.633195400238037
    5. 'eur' → logprob: -8.258195877075195
    6. ')
' → logprob: -8.383195877075195
    7. 'es' → logprob: -8.383195877075195
    8. 'er' → logprob: -9.008195877075195
    9. ',' → logprob: -9.008195877075195
    10. '=int' → logprob: -9.508195877075195

Token 222: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05048251897096634
    2. ',' → logprob: -3.6754825115203857
    3. ' =' → logprob: -4.050482749938965
    4. '=' → logprob: -5.675482749938965
    5. ' )' → logprob: -7.050482749938965
    6. 'import' → logprob: -7.175482749938965
    7. 'int' → logprob: -7.925482749938965
    8. ')
' → logprob: -8.925482749938965
    9. '=sys' → logprob: -8.925482749938965
    10. ' ,' → logprob: -9.175482749938965

Token 223: 'Max' (ID: 6499)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.45217251777648926
    2. 'import' → logprob: -1.5771725177764893
    3. 'Max' → logprob: -2.4521725177764893
    4. ' sys' → logprob: -3.0771725177764893
    5. 'max' → logprob: -4.57717227935791
    6. 'int' → logprob: -5.32717227935791
    7. ' =' → logprob: -5.70217227935791
    8. ' Max' → logprob: -6.07717227935791
    9. '=sys' → logprob: -7.07717227935791
    10. ' (' → logprob: -7.32717227935791

Token 224: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03833281621336937
    2. ' =' → logprob: -3.28833270072937
    3. '=sys' → logprob: -8.53833293914795
    4. '=int' → logprob: -9.28833293914795
    5. ',' → logprob: -13.78833293914795
    6. 'int' → logprob: -14.16333293914795
    7. '＝' → logprob: -14.78833293914795
    8. '=float' → logprob: -15.28833293914795
    9. ' ' → logprob: -15.78833293914795
    10. 'sys' → logprob: -15.78833293914795

Token 225: ' sys' (ID: 12228)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2826977074146271
    2. 'sys' → logprob: -1.5326976776123047
    3. 'float' → logprob: -4.282697677612305
    4. '922' → logprob: -4.782697677612305
    5. 'int' → logprob: -5.407697677612305
    6. '214' → logprob: -6.532697677612305
    7. ' ' → logprob: -7.282697677612305
    8. ' sys' → logprob: -7.782697677612305
    9. '2' → logprob: -7.782697677612305
    10. '1' → logprob: -8.157697677612305

Token 226: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -2.4391956685576588e-05
    2. '.' → logprob: -11.500024795532227
    3. '.Max' → logprob: -12.000024795532227
    4. ' .' → logprob: -12.375024795532227
    5. 'max' → logprob: -13.250024795532227
    6. '.MAX' → logprob: -13.750024795532227
    7. '.m' → logprob: -15.250024795532227
    8. '.float' → logprob: -15.625024795532227
    9. '.version' → logprob: -15.625024795532227
    10. '.maximum' → logprob: -16.375024795532227

Token 227: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0005056116497144103
    2. 'int' → logprob: -7.625505447387695
    3. 'max' → logprob: -11.000505447387695
    4. '_size' → logprob: -15.500505447387695
    5. 'imax' → logprob: -15.875505447387695
    6. 'siz' → logprob: -15.875505447387695
    7. ' size' → logprob: -16.000505447387695
    8. 'ize' → logprob: -16.625505447387695
    9. 'integer' → logprob: -16.750505447387695
    10. '_max' → logprob: -17.750505447387695

Token 228: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05934379622340202
    2. '

' → logprob: -3.1843438148498535
    3. '
' → logprob: -4.6843438148498535
    4. '<|end|>' → logprob: -5.4343438148498535
    5. '' → logprob: -7.1843438148498535
    6. ' 
' → logprob: -8.309343338012695
    7. '<|end|>' → logprob: -8.434343338012695
    8. '  
' → logprob: -8.434343338012695
    9. '#' → logprob: -8.684343338012695
    10. '
 
' → logprob: -8.934343338012695

Token 229: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.027024712413549423
    2. 'n' → logprob: -3.902024745941162
    3. '
' → logprob: -5.652024745941162
    4. '#' → logprob: -6.527024745941162
    5. 'class' → logprob: -7.402024745941162
    6. '

' → logprob: -8.152024269104004
    7. 'N' → logprob: -8.402024269104004
    8. 'from' → logprob: -8.777024269104004
    9. 'deque' → logprob: -10.402024269104004
    10. ' 
' → logprob: -10.527024269104004

Token 230: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008022394962608814
    2. 'from' → logprob: -5.383022308349609
    3. ' def' → logprob: -7.008022308349609
    4. 'class' → logprob: -7.258022308349609
    5. '#' → logprob: -7.383022308349609
    6. 'n' → logprob: -7.383022308349609
    7. 'INF' → logprob: -8.63302230834961
    8. 'N' → logprob: -9.88302230834961
    9. ' from' → logprob: -10.50802230834961
    10. 'DEBUG' → logprob: -10.50802230834961

Token 231: ' qui' (ID: 2780)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.41116568446159363
    2. 'def' → logprob: -1.536165714263916
    3. ' ' → logprob: -2.286165714263916
    4. ' de' → logprob: -4.286165714263916
    5. ' ' → logprob: -5.911165714263916
    6. ' d' → logprob: -7.661165714263916
    7. 's' → logprob: -7.786165714263916
    8. '  ' → logprob: -8.161165237426758
    9. '<|end|>' → logprob: -8.161165237426758
    10. ' )' → logprob: -8.286165237426758

Token 232: ' retourne' (ID: 178818)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.772903323173523
    2. ' calc' → logprob: -0.772903323173523
    3. 'factor' → logprob: -3.7729034423828125
    4. ' def' → logprob: -4.0229034423828125
    5. ' prend' → logprob: -5.0229034423828125
    6. ' factorial' → logprob: -5.5229034423828125
    7. 'calc' → logprob: -5.8979034423828125
    8. 'f' → logprob: -6.1479034423828125
    9. ' calcul' → logprob: -6.2729034423828125
    10. 's' → logprob: -6.6479034423828125

Token 233: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2059730738401413
    2. ' l' → logprob: -2.9559731483459473
    3. ' le' → logprob: -3.0809731483459473
    4. 'def' → logprob: -3.7059731483459473
    5. ' True' → logprob: -4.205973148345947
    6. ' ' → logprob: -4.455973148345947
    7. ' une' → logprob: -4.455973148345947
    8. 'True' → logprob: -5.205973148345947
    9. 'la' → logprob: -5.455973148345947
    10. ' len' → logprob: -6.205973148345947

Token 234: ' liste' (ID: 31719)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24739578366279602
    2. 'liste' → logprob: -2.6223957538604736
    3. ' liste' → logprob: -3.3723957538604736
    4. ' list' → logprob: -3.7473957538604736
    5. 'list' → logprob: -3.8723957538604736
    6. 'dict' → logprob: -4.872395992279053
    7. ' def' → logprob: -4.872395992279053
    8. 'deque' → logprob: -4.997395992279053
    9. 'int' → logprob: -5.122395992279053
    10. 'sorted' → logprob: -5.122395992279053

Token 235: ' d' (ID: 272)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.45330846309661865
    2. '(' → logprob: -1.2033084630966187
    3. '_' → logprob: -4.078308582305908
    4. '[]' → logprob: -4.328308582305908
    5. '(range' → logprob: -4.578308582305908
    6. '(
' → logprob: -5.453308582305908
    7. '[:]' → logprob: -5.828308582305908
    8. '([]' → logprob: -5.828308582305908
    9. ',' → logprob: -5.953308582305908
    10. '[int' → logprob: -5.953308582305908

Token 236: ''ent' (ID: 53422)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9462099671363831
    2. ''ent' → logprob: -1.5712099075317383
    3. 'es' → logprob: -2.3212099075317383
    4. '[int' → logprob: -2.4462099075317383
    5. '(int' → logprob: -2.6962099075317383
    6. 'int' → logprob: -3.1962099075317383
    7. 'ent' → logprob: -3.6962099075317383
    8. ''un' → logprob: -4.321209907531738
    9. 'range' → logprob: -4.696209907531738
    10. ''int' → logprob: -4.696209907531738

Token 237: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00046284322161227465
    2. 'ières' → logprob: -8.125462532043457
    3. 'i' → logprob: -9.125462532043457
    4. 'ier' → logprob: -11.125462532043457
    5. 'ités' → logprob: -11.500462532043457
    6. 'r' → logprob: -11.625462532043457
    7. '```' → logprob: -11.750462532043457
    8. 't' → logprob: -12.375462532043457
    9. 'ers' → logprob: -12.500462532043457
    10. 'er' → logprob: -13.500462532043457

Token 238: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10498585551977158
    2. '(' → logprob: -2.6049859523773193
    3. '(
' → logprob: -4.10498571395874
    4. ' def' → logprob: -5.97998571395874
    5. 's' → logprob: -6.47998571395874
    6. ':' → logprob: -6.47998571395874
    7. '(n' → logprob: -6.97998571395874
    8. '[]' → logprob: -7.22998571395874
    9. '(range' → logprob: -7.97998571395874
    10. '[' → logprob: -8.104986190795898

Token 239: ' après' (ID: 16460)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13793574273586273
    2. ' def' → logprob: -2.8879356384277344
    3. 'n' → logprob: -3.0129356384277344
    4. ' n' → logprob: -3.8879356384277344
    5. 'indices' → logprob: -7.762935638427734
    6. 'range' → logprob: -8.137935638427734
    7. 's' → logprob: -8.387935638427734
    8. 'start' → logprob: -8.637935638427734
    9. ' ' → logprob: -8.887935638427734
    10. 'tokens' → logprob: -9.137935638427734

Token 240: ' décou' (ID: 68302)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.8602584600448608
    2. 'split' → logprob: -2.1102585792541504
    3. ' une' → logprob: -2.1102585792541504
    4. 'une' → logprob: -2.2352585792541504
    5. 'la' → logprob: -2.6102585792541504
    6. 'tr' → logprob: -2.7352585792541504
    7. 'tri' → logprob: -2.7352585792541504
    8. 'l' → logprob: -2.8602585792541504
    9. ' la' → logprob: -3.4852585792541504
    10. ' avoir' → logprob: -3.9852585792541504

Token 241: 'page' (ID: 5342)
  Prédit: 'page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.0027330745942890644
    2. 'per' → logprob: -6.00273323059082
    3. 'p' → logprob: -9.00273323059082
    4. 'pe' → logprob: -9.25273323059082
    5. ' page' → logprob: -10.50273323059082
    6. 'Page' → logprob: -12.62773323059082
    7. 'pag' → logprob: -12.62773323059082
    8. 'pa' → logprob: -13.87773323059082
    9. 'PAGE' → logprob: -14.37773323059082
    10. '_page' → logprob: -14.37773323059082

Token 242: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08186725527048111
    2. '(input' → logprob: -3.081867218017578
    3. '(s' → logprob: -4.331867218017578
    4. '(
' → logprob: -4.706867218017578
    5. '(line' → logprob: -5.081867218017578
    6. '(string' → logprob: -6.081867218017578
    7. 's' → logprob: -7.831867218017578
    8. '(str' → logprob: -7.956867218017578
    9. 'input' → logprob: -8.331867218017578
    10. '('' → logprob: -8.456867218017578

Token 243: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9899130463600159
    2. 'input' → logprob: -1.489912986755371
    3. 'l' → logprob: -2.114912986755371
    4. ' l' → logprob: -2.239912986755371
    5. ' input' → logprob: -2.614912986755371
    6. 'la' → logprob: -2.739912986755371
    7. ' une' → logprob: -4.489912986755371
    8. 'chaine' → logprob: -4.864912986755371
    9. 'une' → logprob: -5.114912986755371
    10. 's' → logprob: -5.614912986755371

Token 244: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.14060799777507782
    2. ' input' → logprob: -2.140608072280884
    3. 'la' → logprob: -5.765607833862305
    4. '(input' → logprob: -6.390607833862305
    5. 'e' → logprob: -6.640607833862305
    6. '()' → logprob: -6.640607833862305
    7. 'a' → logprob: -6.890607833862305
    8. 'l' → logprob: -6.890607833862305
    9. '=input' → logprob: -6.890607833862305
    10. 'une' → logprob: -7.015607833862305

Token 245: ' sur' (ID: 1512)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1682257056236267
    2. 'def' → logprob: -2.1682257652282715
    3. '(' → logprob: -3.6682257652282715
    4. '(
' → logprob: -4.7932257652282715
    5. '_list' → logprob: -6.4182257652282715
    6. '()
' → logprob: -6.7932257652282715
    7. 's' → logprob: -7.4182257652282715
    8. '().' → logprob: -7.5432257652282715
    9. ' =' → logprob: -7.6682257652282715
    10. ' ()' → logprob: -8.043225288391113

Token 246: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010210209293290973
    2. ''' → logprob: -7.251020908355713
    3. 'None' → logprob: -8.751021385192871
    4. '(' → logprob: -10.126021385192871
    5. '()
' → logprob: -10.126021385192871
    6. '"' → logprob: -10.626021385192871
    7. '('' → logprob: -10.751021385192871
    8. ' ()' → logprob: -12.126021385192871
    9. '(None' → logprob: -12.376021385192871
    10. '().' → logprob: -12.501021385192871

Token 247: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.45831137895584106
    2. ' espaces' → logprob: -1.0833113193511963
    3. '()' → logprob: -4.333311557769775
    4. 'es' → logprob: -5.083311557769775
    5. 'spaces' → logprob: -5.708311557769775
    6. 'space' → logprob: -7.208311557769775
    7. ' espace' → logprob: -7.333311557769775
    8. ''' → logprob: -7.458311557769775
    9. ' ' → logprob: -7.458311557769775
    10. ''esp' → logprob: -7.458311557769775

Token 248: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15475083887577057
    2. '(' → logprob: -2.4047508239746094
    3. '(
' → logprob: -3.0297508239746094
    4. '_' → logprob: -6.029750823974609
    5. '()' → logprob: -7.529750823974609
    6. ' def' → logprob: -7.654750823974609
    7. 'input' → logprob: -8.77975082397461
    8. '[' → logprob: -8.90475082397461
    9. '(int' → logprob: -8.90475082397461
    10. '=' → logprob: -9.15475082397461

Token 249: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00016396844875998795
    2. ' def' → logprob: -9.000164031982422
    3. '
' → logprob: -11.500164031982422
    4. 'd' → logprob: -11.750164031982422
    5. 'lambda' → logprob: -12.500164031982422
    6. 'int' → logprob: -12.875164031982422
    7. 'list' → logprob: -13.000164031982422
    8. '(
' → logprob: -13.375164031982422
    9. 'de' → logprob: -13.625164031982422
    10. '()' → logprob: -13.625164031982422

Token 250: ' l' (ID: 305)
  Prédit: 'ints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ints' → logprob: -0.74822998046875
    2. 'list' → logprob: -2.49822998046875
    3. 'map' → logprob: -2.74822998046875
    4. 'I' → logprob: -2.87322998046875
    5. 'l' → logprob: -2.99822998046875
    6. 'LI' → logprob: -3.12322998046875
    7. 'lis' → logprob: -3.12322998046875
    8. 'li' → logprob: -3.24822998046875
    9. ' list' → logprob: -3.24822998046875
    10. ' map' → logprob: -3.49822998046875

Token 251: '():
' (ID: 8595)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.005744148511439562
    2. 'ine' → logprob: -6.130743980407715
    3. 'iste' → logprob: -6.380743980407715
    4. 'is' → logprob: -6.880743980407715
    5. 'i' → logprob: -7.505743980407715
    6. 'ambda' → logprob: -8.380743980407715
    7. 'in' → logprob: -11.130743980407715
    8. 'ista' → logprob: -11.380743980407715
    9. 'a' → logprob: -12.005743980407715
    10. 'ists' → logprob: -13.255743980407715

Token 252: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5145151019096375
    2. ' return' → logprob: -1.0145151615142822
    3. '   ' → logprob: -3.2645151615142822
    4. 'eturn' → logprob: -7.389514923095703
    5. '	return' → logprob: -7.889514923095703
    6. ' ' → logprob: -8.389514923095703
    7. '   ' → logprob: -9.764514923095703
    8. '    
' → logprob: -10.014514923095703
    9. '   ' → logprob: -10.139514923095703
    10. ' ' → logprob: -10.389514923095703

Token 253: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0019298245897516608
    2. ' return' → logprob: -6.251929759979248
    3. '   ' → logprob: -13.751930236816406
    4. '	return' → logprob: -16.501930236816406
    5. 'ret' → logprob: -16.876930236816406
    6. ' ' → logprob: -17.126930236816406
    7. 'r' → logprob: -19.001930236816406
    8. 'list' → logprob: -19.376930236816406
    9. ' ' → logprob: -19.626930236816406
    10. '  ' → logprob: -20.376930236816406

Token 254: ' Pr' (ID: 2284)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0005541055579669774
    2. ' return' → logprob: -7.500554084777832
    3. '   ' → logprob: -14.750554084777832
    4. 'ret' → logprob: -14.875554084777832
    5. 'r' → logprob: -15.625554084777832
    6. 'list' → logprob: -16.37555503845215
    7. '	return' → logprob: -17.00055503845215
    8. ' ' → logprob: -17.87555503845215
    9. 'eturn' → logprob: -19.00055503845215
    10. '  ' → logprob: -19.62555503845215

Token 255: 'end' (ID: 419)
  Prédit: 'eturn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eturn' → logprob: -0.0047489795833826065
    2. 'return' → logprob: -5.879748821258545
    3. '   ' → logprob: -7.254748821258545
    4. 'int' → logprob: -7.879748821258545
    5. 'ef' → logprob: -8.129749298095703
    6. 'es' → logprob: -8.504749298095703
    7. 'urn' → logprob: -8.879749298095703
    8. 'et' → logprob: -10.129749298095703
    9. 'ec' → logprob: -10.129749298095703
    10. 'ist' → logprob: -10.504749298095703

Token 256: ' une' (ID: 2463)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7750271558761597
    2. 'list' → logprob: -0.9000271558761597
    3. 'map' → logprob: -2.900027275085449
    4. ' list' → logprob: -3.650027275085449
    5. ' return' → logprob: -3.775027275085449
    6. 'input' → logprob: -4.150027275085449
    7. '   ' → logprob: -4.775027275085449
    8. ' map' → logprob: -6.400027275085449
    9. ' ' → logprob: -6.775027275085449
    10. ' input' → logprob: -7.150027275085449

Token 257: ' ligne' (ID: 19583)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.042268335819244385
    2. 'map' → logprob: -3.7922682762145996
    3. 'liste' → logprob: -4.6672682762146
    4. 'input' → logprob: -6.0422682762146
    5. ' list' → logprob: -6.2922682762146
    6. 'int' → logprob: -6.2922682762146
    7. 'l' → logprob: -6.6672682762146
    8. 'line' → logprob: -8.292268753051758
    9. 'entrée' → logprob: -8.292268753051758
    10. 'ligne' → logprob: -8.417268753051758

Token 258: ' d' (ID: 272)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.05054689571261406
    2. '()' → logprob: -3.050546884536743
    3. '.' → logprob: -6.800547122955322
    4. '.strip' → logprob: -8.300546646118164
    5. '.split' → logprob: -8.800546646118164
    6. '=' → logprob: -8.800546646118164
    7. ')' → logprob: -9.175546646118164
    8. 'return' → logprob: -10.300546646118164
    9. ' =' → logprob: -10.800546646118164
    10. 'split' → logprob: -11.175546646118164

Token 259: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.24746327102184296
    2. 'entrée' → logprob: -1.7474632263183594
    3. ''entrée' → logprob: -3.4974632263183594
    4. ' input' → logprob: -4.872463226318359
    5. 'e' → logprob: -5.622463226318359
    6. '=input' → logprob: -6.747463226318359
    7. '()' → logprob: -7.872463226318359
    8. 'in' → logprob: -8.24746322631836
    9. ' entrée' → logprob: -8.74746322631836
    10. 'stdin' → logprob: -8.74746322631836

Token 260: ',' (ID: 11)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.022961599752306938
    2. '()' → logprob: -4.147961616516113
    3. '=' → logprob: -6.022961616516113
    4. 'return' → logprob: -6.147961616516113
    5. ' =' → logprob: -7.147961616516113
    6. '.' → logprob: -7.897961616516113
    7. '   ' → logprob: -7.897961616516113
    8. '():' → logprob: -8.022961616516113
    9. ')' → logprob: -8.647961616516113
    10. ':' → logprob: -9.522961616516113

Token 261: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3791278302669525
    2. ' return' → logprob: -1.379127860069275
    3. '   ' → logprob: -2.7541277408599854
    4. 'r' → logprob: -11.004127502441406
    5. '	return' → logprob: -11.004127502441406
    6. '    ' → logprob: -11.379127502441406
    7. 'ret' → logprob: -11.504127502441406
    8. ' retour' → logprob: -12.004127502441406
    9. ' ' → logprob: -12.504127502441406
    10. '    
' → logprob: -12.879127502441406

Token 262: ' décou' (ID: 68302)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.005320089403539896
    2. 'rstrip' → logprob: -5.505320072174072
    3. 'return' → logprob: -7.130320072174072
    4. 'split' → logprob: -7.880320072174072
    5. ' strip' → logprob: -10.25532054901123
    6. '.strip' → logprob: -10.75532054901123
    7. 'replace' → logprob: -13.25532054901123
    8. ' return' → logprob: -13.75532054901123
    9. 'decode' → logprob: -14.38032054901123
    10. 'ret' → logprob: -14.50532054901123

Token 263: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.0014613081002607942
    2. 'p' → logprob: -7.626461505889893
    3. 'page' → logprob: -7.751461505889893
    4. 'per' → logprob: -7.876461505889893
    5. 'pte' → logprob: -9.751461029052734
    6. 'e' → logprob: -10.626461029052734
    7. 'ppe' → logprob: -11.251461029052734
    8. 'pa' → logprob: -11.501461029052734
    9. 'pé' → logprob: -11.626461029052734
    10. 'pie' → logprob: -12.001461029052734

Token 264: ' sur' (ID: 1512)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.10034296661615372
    2. '()' → logprob: -2.3503429889678955
    3. '()[' → logprob: -9.100342750549316
    4. '(),' → logprob: -11.975342750549316
    5. ' ()' → logprob: -12.100342750549316
    6. '(' → logprob: -12.225342750549316
    7. '.' → logprob: -12.975342750549316
    8. '()
' → logprob: -13.975342750549316
    9. ' ().' → logprob: -14.225342750549316
    10. '();' → logprob: -14.475342750549316

Token 265: ' les' (ID: 1341)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12665033340454102
    2. '()' → logprob: -2.626650333404541
    3. ' '' → logprob: -4.126650333404541
    4. '"' → logprob: -4.376650333404541
    5. ' les' → logprob: -5.376650333404541
    6. ' la' → logprob: -5.626650333404541
    7. ' ' → logprob: -5.751650333404541
    8. ' l' → logprob: -7.001650333404541
    9. ' )' → logprob: -7.501650333404541
    10. ' le' → logprob: -7.501650333404541

Token 266: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.09266942739486694
    2. 'esp' → logprob: -2.5926694869995117
    3. ''esp' → logprob: -4.467669486999512
    4. 'spaces' → logprob: -6.967669486999512
    5. ''espace' → logprob: -8.092669486999512
    6. ' espace' → logprob: -8.342669486999512
    7. ''' → logprob: -8.467669486999512
    8. '"' → logprob: -9.217669486999512
    9. ' spaces' → logprob: -9.592669486999512
    10. 'es' → logprob: -9.717669486999512

Token 267: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.282054603099823
    2. '()' → logprob: -2.1570546627044678
    3. 'return' → logprob: -2.6570546627044678
    4. '().' → logprob: -3.0320546627044678
    5. ' return' → logprob: -5.157054424285889
    6. ',' → logprob: -6.032054424285889
    7. ')' → logprob: -7.032054424285889
    8. '.' → logprob: -7.532054424285889
    9. '()
' → logprob: -8.032054901123047
    10. '    ' → logprob: -8.157054901123047

Token 268: ' convert' (ID: 8452)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9723321199417114
    2. ' map' → logprob: -0.9723321199417114
    3. 'return' → logprob: -1.8473321199417114
    4. 'map' → logprob: -3.097332000732422
    5. '   ' → logprob: -3.222332000732422
    6. '    ' → logprob: -8.972332000732422
    7. ' retourne' → logprob: -9.222332000732422
    8. ' retour' → logprob: -9.347332000732422
    9. ' ' → logprob: -9.472332000732422
    10. 'split' → logprob: -9.472332000732422

Token 269: 'it' (ID: 278)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -1.0552499294281006
    2. 'e' → logprob: -1.5552499294281006
    3. 'it' → logprob: -1.9302499294281006
    4. 'i' → logprob: -2.9302499294281006
    5. 'list' → logprob: -3.5552499294281006
    6. '=' → logprob: -3.5552499294281006
    7. 'map' → logprob: -3.6802499294281006
    8. ' en' → logprob: -4.05525016784668
    9. 'ir' → logprob: -4.30525016784668
    10. '(lambda' → logprob: -4.30525016784668

Token 270: ' chaque' (ID: 21194)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.1202518939971924
    2. 'en' → logprob: -1.4952518939971924
    3. ' chaque' → logprob: -1.8702518939971924
    4. '()' → logprob: -2.1202518939971924
    5. 'int' → logprob: -3.1202518939971924
    6. 'la' → logprob: -3.2452518939971924
    7. 'les' → logprob: -3.7452518939971924
    8. ' les' → logprob: -3.9952518939971924
    9. 'cha' → logprob: -4.870251655578613
    10. ' la' → logprob: -4.995251655578613

Token 271: ' morceau' (ID: 160026)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3399289846420288
    2. 'élé' → logprob: -1.8399289846420288
    3. ' élément' → logprob: -3.7149291038513184
    4. ' mot' → logprob: -4.089929103851318
    5. 'element' → logprob: -4.089929103851318
    6. ' token' → logprob: -4.214929103851318
    7. '(' → logprob: -4.464929103851318
    8. 'x' → logprob: -4.839929103851318
    9. '()' → logprob: -4.839929103851318
    10. ' int' → logprob: -5.089929103851318

Token 272: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3079753816127777
    2. ' en' → logprob: -2.0579752922058105
    3. ',' → logprob: -2.9329752922058105
    4. 'en' → logprob: -3.4329752922058105
    5. '(' → logprob: -4.1829752922058105
    6. '   ' → logprob: -4.3079752922058105
    7. '(),' → logprob: -5.1829752922058105
    8. 'map' → logprob: -5.1829752922058105
    9. 'int' → logprob: -5.3079752922058105
    10. ' ' → logprob: -6.1829752922058105

Token 273: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014217919670045376
    2. ' int' → logprob: -4.264217853546143
    3. 'ent' → logprob: -9.8892183303833
    4. ' entier' → logprob: -13.7642183303833
    5. '=int' → logprob: -14.1392183303833
    6. '(int' → logprob: -14.7642183303833
    7. ' ent' → logprob: -15.0142183303833
    8. '[int' → logprob: -15.6392183303833
    9. '<int' → logprob: -16.014217376708984
    10. ' ' → logprob: -16.139217376708984

Token 274: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06604021787643433
    2. 'return' → logprob: -3.566040277481079
    3. '()' → logprob: -3.691040277481079
    4. ' return' → logprob: -5.1910400390625
    5. '():' → logprob: -5.9410400390625
    6. ',' → logprob: -6.9410400390625
    7. ':' → logprob: -7.8160400390625
    8. ' ' → logprob: -8.8160400390625
    9. '	return' → logprob: -9.0660400390625
    10. '    ' → logprob: -9.0660400390625

Token 275: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8632707595825195
    2. 'return' → logprob: -1.1132707595825195
    3. ' return' → logprob: -1.4882707595825195
    4. ')' → logprob: -4.9882707595825195
    5. ' )' → logprob: -5.7382707595825195
    6. ' map' → logprob: -5.8632707595825195
    7. ' ' → logprob: -5.9882707595825195
    8. '    ' → logprob: -6.3632707595825195
    9. '    
' → logprob: -6.7382707595825195
    10. ' and' → logprob: -6.8632707595825195

Token 276: ' retourne' (ID: 178818)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.223019078373909
    2. 'return' → logprob: -2.0980191230773926
    3. ' retourne' → logprob: -2.5980191230773926
    4. ' retour' → logprob: -6.598019123077393
    5. ' les' → logprob: -7.473019123077393
    6. ' returns' → logprob: -8.098018646240234
    7. ' revient' → logprob: -9.098018646240234
    8. 'ret' → logprob: -9.098018646240234
    9. ' ren' → logprob: -9.473018646240234
    10. ' ret' → logprob: -10.348018646240234

Token 277: ' la' (ID: 557)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3872218132019043
    2. ' list' → logprob: -1.1372218132019043
    3. '[list' → logprob: -8.262222290039062
    4. '[' → logprob: -10.137222290039062
    5. '   ' → logprob: -10.387222290039062
    6. ' [' → logprob: -11.262222290039062
    7. ' ' → logprob: -13.012222290039062
    8. '	list' → logprob: -13.137222290039062
    9. '[int' → logprob: -13.512222290039062
    10. '[]' → logprob: -13.887222290039062

Token 278: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4329666197299957
    2. ' list' → logprob: -1.1829665899276733
    3. '[' → logprob: -3.432966709136963
    4. ' [' → logprob: -5.557966709136963
    5. 'liste' → logprob: -5.807966709136963
    6. '[int' → logprob: -6.307966709136963
    7. ' liste' → logprob: -6.432966709136963
    8. '[list' → logprob: -6.932966709136963
    9. '[
' → logprob: -7.182966709136963
    10. 'map' → logprob: -8.057966232299805

Token 279: ' résult' (ID: 31657)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030419543385505676
    2. 'return' → logprob: -3.7804195880889893
    3. ' return' → logprob: -5.40541934967041
    4. '()' → logprob: -6.40541934967041
    5. '():' → logprob: -7.90541934967041
    6. '	return' → logprob: -8.53041934967041
    7. '[]' → logprob: -9.28041934967041
    8. ':' → logprob: -9.40541934967041
    9. ':return' → logprob: -9.53041934967041
    10. ' ' → logprob: -9.90541934967041

Token 280: 'ante' (ID: 2116)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4660496413707733
    2. '[' → logprob: -2.2160496711730957
    3. 'ue' → logprob: -2.5910496711730957
    4. '()' → logprob: -3.0910496711730957
    5. ']' → logprob: -3.4660496711730957
    6. 'ur' → logprob: -4.091049671173096
    7. 'urée' → logprob: -4.091049671173096
    8. '[]' → logprob: -4.216049671173096
    9. 'def' → logprob: -4.591049671173096
    10. 'uré' → logprob: -4.716049671173096

Token 281: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08066783845424652
    2. 'return' → logprob: -2.955667734146118
    3. '():' → logprob: -4.330667972564697
    4. ' return' → logprob: -5.080667972564697
    5. '()' → logprob: -6.205667972564697
    6. ':' → logprob: -6.455667972564697
    7. '():
' → logprob: -6.955667972564697
    8. ':return' → logprob: -7.205667972564697
    9. '	return' → logprob: -8.455667495727539
    10. ':
' → logprob: -9.205667495727539

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018598902970552444
    2. 'return' → logprob: -4.518599033355713
    3. ' return' → logprob: -4.893599033355713
    4. '	return' → logprob: -10.768598556518555
    5. '    ' → logprob: -13.268598556518555
    6. 'def' → logprob: -13.643598556518555
    7. '   ' → logprob: -14.018598556518555
    8. '       ' → logprob: -14.143598556518555
    9. ' ' → logprob: -14.518598556518555
    10. '  ' → logprob: -14.518598556518555

Token 283: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00016885579680092633
    2. ' return' → logprob: -8.750168800354004
    3. '   ' → logprob: -11.500168800354004
    4. '	return' → logprob: -16.25016975402832
    5. 'list' → logprob: -16.50016975402832
    6. 'ret' → logprob: -18.25016975402832
    7. ' ' → logprob: -19.50016975402832
    8. '  ' → logprob: -20.00016975402832
    9. '    
' → logprob: -20.25016975402832
    10. 'r' → logprob: -20.37516975402832

Token 284: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00027444821898825467
    2. ' list' → logprob: -8.250274658203125
    3. '[list' → logprob: -11.250274658203125
    4. '[' → logprob: -16.000274658203125
    5. 'map' → logprob: -16.625274658203125
    6. '	list' → logprob: -17.625274658203125
    7. '(list' → logprob: -18.250274658203125
    8. '=list' → logprob: -19.375274658203125
    9. '   ' → logprob: -19.500274658203125
    10. '[int' → logprob: -20.500274658203125

Token 285: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0002036595979006961
    2. '(' → logprob: -8.500204086303711
    3. '(
' → logprob: -16.75020408630371
    4. 'map' → logprob: -17.00020408630371
    5. '	map' → logprob: -17.25020408630371
    6. '(int' → logprob: -17.62520408630371
    7. '(m' → logprob: -17.62520408630371
    8. ' map' → logprob: -18.00020408630371
    9. '(ma' → logprob: -18.25020408630371
    10. '()' → logprob: -18.37520408630371

Token 286: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.889424836728722e-05
    2. '(' → logprob: -9.625099182128906
    3. 'int' → logprob: -10.375099182128906
    4. ',int' → logprob: -14.000099182128906
    5. ' int' → logprob: -15.625099182128906
    6. '(
' → logprob: -16.125099182128906
    7. '   ' → logprob: -16.375099182128906
    8. '<int' → logprob: -16.750099182128906
    9. ' (' → logprob: -16.875099182128906
    10. '	int' → logprob: -17.000099182128906

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31362390518188477
    2. ',input' → logprob: -1.3136239051818848
    3. 'input' → logprob: -8.438623428344727
    4. '(input' → logprob: -8.938623428344727
    5. '(' → logprob: -11.938623428344727
    6. ' ,' → logprob: -12.188623428344727
    7. ' input' → logprob: -13.688623428344727
    8. ',(' → logprob: -13.938623428344727
    9. ',
' → logprob: -15.438623428344727
    10. ' (' → logprob: -15.938623428344727

Token 288: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023246292024850845
    2. ' input' → logprob: -3.7732462882995605
    3. '   ' → logprob: -14.898246765136719
    4. ' ' → logprob: -15.773246765136719
    5. '(input' → logprob: -16.02324676513672
    6. '	input' → logprob: -16.02324676513672
    7. ',input' → logprob: -16.64824676513672
    8. '  ' → logprob: -17.77324676513672
    9. '<input' → logprob: -18.14824676513672
    10. '=input' → logprob: -18.52324676513672

Token 289: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.981667537620524e-06
    2. '()' → logprob: -13.250001907348633
    3. ' ().' → logprob: -16.375001907348633
    4. '(' → logprob: -20.125001907348633
    5. '.strip' → logprob: -21.125001907348633
    6. '()
' → logprob: -21.375001907348633
    7. '())))' → logprob: -21.875001907348633
    8. '()))' → logprob: -22.375001907348633
    9. '().
' → logprob: -23.375001907348633
    10. '("").' → logprob: -23.625001907348633

Token 290: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20154403150081635
    2. 'strip' → logprob: -1.7015440464019775
    3. 'rstrip' → logprob: -8.951543807983398
    4. ' split' → logprob: -14.451543807983398
    5. ' strip' → logprob: -15.076543807983398
    6. '().' → logprob: -15.326543807983398
    7. 'read' → logprob: -16.0765438079834
    8. '(split' → logprob: -16.0765438079834
    9. 'spl' → logprob: -17.2015438079834
    10. '(strip' → logprob: -18.2015438079834

Token 291: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.006497228052467108
    2. '()' → logprob: -5.131497383117676
    3. '))' → logprob: -7.631497383117676
    4. '())))' → logprob: -10.006497383117676
    5. '(' → logprob: -11.256497383117676
    6. '()))
' → logprob: -11.381497383117676
    7. '())' → logprob: -11.381497383117676
    8. '()));' → logprob: -13.756497383117676
    9. ')))' → logprob: -14.881497383117676
    10. '()))
' → logprob: -15.006497383117676

Token 292: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0037722932174801826
    2. '#' → logprob: -5.753772258758545
    3. 'n' → logprob: -8.128772735595703
    4. 'class' → logprob: -8.878772735595703
    5. 'd' → logprob: -9.878772735595703
    6. 'from' → logprob: -10.378772735595703
    7. 'N' → logprob: -10.503772735595703
    8. 't' → logprob: -11.003772735595703
    9. 's' → logprob: -11.253772735595703
    10. 'for' → logprob: -12.753772735595703

Token 294: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8033718466758728
    2. '()' → logprob: -1.3033719062805176
    3. '():' → logprob: -1.4283719062805176
    4. '(' → logprob: -4.053371906280518
    5. 's' → logprob: -4.678371906280518
    6. ' def' → logprob: -5.553371906280518
    7. '():
' → logprob: -5.678371906280518
    8. '(
' → logprob: -6.803371906280518
    9. ' ()' → logprob: -7.178371906280518
    10. ':' → logprob: -7.178371906280518

Token 295: ' retourne' (ID: 178818)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9719992876052856
    2. 'def' → logprob: -1.3469992876052856
    3. 'returns' → logprob: -2.346999168395996
    4. '()' → logprob: -2.971999168395996
    5. ' returns' → logprob: -2.971999168395996
    6. ' s' → logprob: -3.596999168395996
    7. 'int' → logprob: -4.096999168395996
    8. 'reads' → logprob: -4.096999168395996
    9. ' retourne' → logprob: -4.221999168395996
    10. 'return' → logprob: -4.346999168395996

Token 296: ' un' (ID: 537)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0798211395740509
    2. 'un' → logprob: -3.0798211097717285
    3. ' un' → logprob: -4.4548211097717285
    4. 'l' → logprob: -4.5798211097717285
    5. 'une' → logprob: -5.3298211097717285
    6. ' une' → logprob: -6.8298211097717285
    7. 'list' → logprob: -7.0798211097717285
    8. ' int' → logprob: -7.0798211097717285
    9. '(int' → logprob: -7.9548211097717285
    10. 'str' → logprob: -8.954821586608887

Token 297: ' map' (ID: 4014)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07823474705219269
    2. 'ent' → logprob: -3.4532346725463867
    3. ' int' → logprob: -3.8282346725463867
    4. 'tuple' → logprob: -4.578234672546387
    5. ' entier' → logprob: -5.703234672546387
    6. ' tuple' → logprob: -5.953234672546387
    7. '=int' → logprob: -6.953234672546387
    8. 'e' → logprob: -7.328234672546387
    9. 'single' → logprob: -7.453234672546387
    10. 'str' → logprob: -7.828234672546387

Token 298: ' des' (ID: 731)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005976904183626175
    2. '(lambda' → logprob: -5.630976676940918
    3. '(' → logprob: -7.005976676940918
    4. 'int' → logprob: -7.505976676940918
    5. 'object' → logprob: -7.630976676940918
    6. '<int' → logprob: -8.880976676940918
    7. '(object' → logprob: -9.505976676940918
    8. 'list' → logprob: -10.255976676940918
    9. '(
' → logprob: -10.505976676940918
    10. '=int' → logprob: -10.880976676940918

Token 299: ' ent' (ID: 1121)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01985880360007286
    2. '(int' → logprob: -4.6448588371276855
    3. 'l' → logprob: -5.5198588371276855
    4. ' int' → logprob: -5.6448588371276855
    5. 'ints' → logprob: -6.8948588371276855
    6. 'inte' → logprob: -7.5198588371276855
    7. 'str' → logprob: -7.5198588371276855
    8. ' integers' → logprob: -9.019858360290527
    9. 'list' → logprob: -10.144858360290527
    10. 'map' → logprob: -10.144858360290527

Token 300: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.08620284497737885
    2. 'ier' → logprob: -3.71120285987854
    3. 'ières' → logprob: -4.086202621459961
    4. '(int' → logprob: -4.211202621459961
    5. 'ries' → logprob: -4.336202621459961
    6. 'ires' → logprob: -5.336202621459961
    7. 'ière' → logprob: -6.461202621459961
    8. 'rees' → logprob: -6.586202621459961
    9. '(input' → logprob: -6.836202621459961
    10. 'r' → logprob: -7.086202621459961

Token 301: ' (' (ID: 350)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02342226728796959
    2. 'def' → logprob: -4.3984222412109375
    3. '(lambda' → logprob: -5.1484222412109375
    4. '(
' → logprob: -6.0234222412109375
    5. '(' → logprob: -6.5234222412109375
    6. 'int' → logprob: -6.8984222412109375
    7. '[int' → logprob: -10.773422241210938
    8. '(input' → logprob: -10.898422241210938
    9. '   ' → logprob: -11.023422241210938
    10. '<int' → logprob: -11.648422241210938

Token 302: 'per' (ID: 543)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.13392741978168488
    2. 'lambda' → logprob: -2.508927345275879
    3. ')' → logprob: -4.008927345275879
    4. 'input' → logprob: -4.258927345275879
    5. ' int' → logprob: -5.758927345275879
    6. ' lambda' → logprob: -6.133927345275879
    7. '(int' → logprob: -6.258927345275879
    8. 'def' → logprob: -6.383927345275879
    9. '(lambda' → logprob: -6.508927345275879
    10. '):' → logprob: -7.883927345275879

Token 303: 'met' (ID: 3001)
  Prédit: 'haps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haps' → logprob: -0.4608933925628662
    2. 'map' → logprob: -2.210893392562866
    3. ')' → logprob: -2.460893392562866
    4. 'met' → logprob: -3.210893392562866
    5. '(int' → logprob: -3.835893392562866
    6. '=lambda' → logprob: -3.835893392562866
    7. 'int' → logprob: -4.210893630981445
    8. '=int' → logprob: -4.460893630981445
    9. '```' → logprob: -4.460893630981445
    10. 'def' → logprob: -5.085893630981445

Token 304: ' d' (ID: 272)
  Prédit: '=int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.8142262697219849
    2. '(int' → logprob: -1.4392262697219849
    3. ' de' → logprob: -2.4392261505126953
    4. '=lambda' → logprob: -2.6892261505126953
    5. 'int' → logprob: -3.4392261505126953
    6. '(lambda' → logprob: -3.5642261505126953
    7. 'def' → logprob: -3.5642261505126953
    8. '   ' → logprob: -3.8142261505126953
    9. ')' → logprob: -4.314226150512695
    10. ' lambda' → logprob: -4.439226150512695

Token 305: ''acc' (ID: 46331)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.46952173113822937
    2. '(int' → logprob: -1.8445217609405518
    3. 'lambda' → logprob: -2.2195217609405518
    4. '(lambda' → logprob: -2.5945217609405518
    5. '=int' → logprob: -4.469521522521973
    6. ' int' → logprob: -4.969521522521973
    7. ' lambda' → logprob: -5.094521522521973
    8. '=lambda' → logprob: -5.844521522521973
    9. '[int' → logprob: -6.094521522521973
    10. ')' → logprob: -6.844521522521973

Token 306: 'éder' (ID: 56640)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0266221761703491
    2. 'eter' → logprob: -2.4016222953796387
    3. 'érer' → logprob: -3.1516222953796387
    4. 'ès' → logprob: -3.4016222953796387
    5. 'cept' → logprob: -3.4016222953796387
    6. 'es' → logprob: -3.4016222953796387
    7. 'etter' → logprob: -3.4016222953796387
    8. 'ar' → logprob: -3.5266222953796387
    9. 'ur' → logprob: -3.6516222953796387
    10. 'er' → logprob: -3.9016222953796387

Token 307: ' en' (ID: 469)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.013192471116781235
    2. 'int' → logprob: -5.138192653656006
    3. '(' → logprob: -5.388192653656006
    4. ')' → logprob: -6.763192653656006
    5. '(lambda' → logprob: -8.013192176818848
    6. ' int' → logprob: -8.263192176818848
    7. '(
' → logprob: -8.388192176818848
    8. '=int' → logprob: -8.888192176818848
    9. '[int' → logprob: -8.888192176818848
    10. ' (' → logprob: -9.263192176818848

Token 308: ' it' (ID: 480)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.18044495582580566
    2. 'map' → logprob: -1.9304449558258057
    3. 'input' → logprob: -5.305444717407227
    4. ' map' → logprob: -5.680444717407227
    5. 'ent' → logprob: -5.805444717407227
    6. ' int' → logprob: -5.805444717407227
    7. 'lambda' → logprob: -6.430444717407227
    8. 'iter' → logprob: -6.555444717407227
    9. 'iterator' → logprob: -8.055444717407227
    10. 'inte' → logprob: -8.055444717407227

Token 309: 'érateur' (ID: 108528)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6715140342712402
    2. 'té' → logprob: -2.1715140342712402
    3. 'put' → logprob: -2.4215140342712402
    4. 'ot' → logprob: -3.1715140342712402
    5. 'map' → logprob: -3.5465140342712402
    6. 'é' → logprob: -3.9215140342712402
    7. 'utable' → logprob: -3.9215140342712402
    8. 'able' → logprob: -3.9215140342712402
    9. 'erm' → logprob: -4.17151403427124
    10. 'er' → logprob: -4.29651403427124

Token 310: ' directement' (ID: 52317)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.030471699312329292
    2. 'int' → logprob: -4.5304718017578125
    3. ',' → logprob: -4.9054718017578125
    4. ')' → logprob: -5.4054718017578125
    5. ',int' → logprob: -5.4054718017578125
    6. '),' → logprob: -7.0304718017578125
    7. '[int' → logprob: -7.6554718017578125
    8. '(lambda' → logprob: -7.9054718017578125
    9. '=int' → logprob: -8.405471801757812
    10. '<int' → logprob: -8.530471801757812

Token 311: ')
' (ID: 446)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01658756285905838
    2. ')' → logprob: -5.141587734222412
    3. 'int' → logprob: -5.516587734222412
    4. ',' → logprob: -6.266587734222412
    5. '(lambda' → logprob: -6.641587734222412
    6. '(' → logprob: -7.016587734222412
    7. '(map' → logprob: -7.141587734222412
    8. ',int' → logprob: -7.516587734222412
    9. '(input' → logprob: -7.891587734222412
    10. '),' → logprob: -8.641587257385254

Token 312: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.7755875129951164e-05
    2. 'lambda' → logprob: -10.25004768371582
    3. ' def' → logprob: -11.75004768371582
    4. '(lambda' → logprob: -12.62504768371582
    5. '
' → logprob: -15.00004768371582
    6. 'int' → logprob: -15.25004768371582
    7. '=lambda' → logprob: -15.50004768371582
    8. ' lambda' → logprob: -17.00004768371582
    9. '(
' → logprob: -17.25004768371582
    10. 'return' → logprob: -17.62504768371582

Token 313: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06529875099658966
    2. 'l' → logprob: -3.5652987957000732
    3. 'li' → logprob: -5.065298557281494
    4. 'I' → logprob: -5.190298557281494
    5. 'mi' → logprob: -5.815298557281494
    6. 'ints' → logprob: -5.940298557281494
    7. 'i' → logprob: -6.190298557281494
    8. 'mp' → logprob: -6.190298557281494
    9. 'lm' → logprob: -6.440298557281494
    10. 'in' → logprob: -6.565298557281494

Token 314: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.693310558795929
    2. '():' → logprob: -0.693310558795929
    3. '()' → logprob: -8.818310737609863
    4. '():
' → logprob: -11.568310737609863
    5. ' ():' → logprob: -12.943310737609863
    6. '():

' → logprob: -13.693310737609863
    7. 'ap' → logprob: -14.193310737609863
    8. 'def' → logprob: -14.443310737609863
    9. '()):
' → logprob: -15.068310737609863
    10. ' ()' → logprob: -15.443310737609863

Token 315: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.020826226100325584
    2. '   ' → logprob: -4.27082633972168
    3. ' return' → logprob: -5.02082633972168
    4. '():
' → logprob: -10.77082633972168
    5. ':return' → logprob: -11.77082633972168
    6. '	return' → logprob: -12.02082633972168
    7. '():' → logprob: -13.14582633972168
    8. ':
' → logprob: -13.27082633972168
    9. '()' → logprob: -13.64582633972168
    10. '):
' → logprob: -15.02082633972168

Token 316: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3875496983528137
    2. 'map' → logprob: -1.137549638748169
    3. '   ' → logprob: -7.637549877166748
    4. ' return' → logprob: -8.76254940032959
    5. ' map' → logprob: -10.26254940032959
    6. ' ' → logprob: -13.01254940032959
    7. '  ' → logprob: -13.38754940032959
    8. 'm' → logprob: -14.13754940032959
    9. '    ' → logprob: -14.88754940032959
    10. '
' → logprob: -16.387550354003906

Token 317: ' Pr' (ID: 2284)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4743351340293884
    2. 'map' → logprob: -0.9743351340293884
    3. ' return' → logprob: -8.474334716796875
    4. '   ' → logprob: -10.474334716796875
    5. ' map' → logprob: -10.849334716796875
    6. 'm' → logprob: -14.099334716796875
    7. '  ' → logprob: -14.849334716796875
    8. ' ' → logprob: -15.224334716796875
    9. 'def' → logprob: -15.724334716796875
    10. '    ' → logprob: -16.349334716796875

Token 318: 'end' (ID: 419)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.00013738969573751092
    2. 'return' → logprob: -9.250137329101562
    3. 'eturn' → logprob: -10.500137329101562
    4. 'def' → logprob: -11.375137329101562
    5. 'apy' → logprob: -14.875137329101562
    6. 'map' → logprob: -15.000137329101562
    7. 'app' → logprob: -15.000137329101562
    8. 'a' → logprob: -15.125137329101562
    9. 'aps' → logprob: -15.375137329101562
    10. ' ap' → logprob: -15.625137329101562

Token 319: ' une' (ID: 2463)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0007651951164007187
    2. ' map' → logprob: -7.500765323638916
    3. 'int' → logprob: -9.000764846801758
    4. 'lambda' → logprob: -9.875764846801758
    5. '   ' → logprob: -10.375764846801758
    6. 'return' → logprob: -12.875764846801758
    7. 'm' → logprob: -13.625764846801758
    8. '  ' → logprob: -14.000764846801758
    9. ' ' → logprob: -14.000764846801758
    10. '	map' → logprob: -15.625764846801758

Token 320: ' ligne' (ID: 19583)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0015843777218833566
    2. ' map' → logprob: -6.501584529876709
    3. 'ap' → logprob: -9.75158405303955
    4. 'm' → logprob: -10.87658405303955
    5. 'ma' → logprob: -12.50158405303955
    6. 'return' → logprob: -14.50158405303955
    7. 'imap' → logprob: -16.001585006713867
    8. 'mp' → logprob: -16.126585006713867
    9. 'lambda' → logprob: -16.376585006713867
    10. 'app' → logprob: -16.751585006713867

Token 321: ' d' (ID: 272)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -1.235692024230957
    2. 'return' → logprob: -1.485692024230957
    3. '()' → logprob: -1.735692024230957
    4. '(map' → logprob: -2.110692024230957
    5. '(int' → logprob: -2.485692024230957
    6. 'map' → logprob: -2.610692024230957
    7. '   ' → logprob: -5.110692024230957
    8. 'int' → logprob: -5.360692024230957
    9. ' return' → logprob: -5.485692024230957
    10. 'def' → logprob: -6.360692024230957

Token 322: ''entrée' (ID: 115820)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.15981842577457428
    2. 'input' → logprob: -2.284818410873413
    3. 'entrée' → logprob: -4.159818649291992
    4. '()' → logprob: -4.284818649291992
    5. '=input' → logprob: -4.784818649291992
    6. '(input' → logprob: -5.784818649291992
    7. ''entrée' → logprob: -6.159818649291992
    8. '()
' → logprob: -7.409818649291992
    9. ' input' → logprob: -7.534818649291992
    10. '_input' → logprob: -7.909818649291992

Token 323: ',' (ID: 11)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.7199221253395081
    2. '()' → logprob: -1.8449220657348633
    3. 'return' → logprob: -2.0949220657348633
    4. '   ' → logprob: -2.0949220657348633
    5. '().' → logprob: -2.9699220657348633
    6. '():
' → logprob: -3.2199220657348633
    7. ' return' → logprob: -4.594922065734863
    8. '=' → logprob: -6.469922065734863
    9. ':' → logprob: -6.469922065734863
    10. 'def' → logprob: -6.594922065734863

Token 324: ' la' (ID: 557)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6370750069618225
    2. 'return' → logprob: -0.7620750069618225
    3. ' map' → logprob: -5.637074947357178
    4. 'map' → logprob: -7.137074947357178
    5. '   ' → logprob: -9.262075424194336
    6. ' ' → logprob: -12.262075424194336
    7. '	return' → logprob: -12.512075424194336
    8. 'eturn' → logprob: -14.387075424194336
    9. '  ' → logprob: -14.637075424194336
    10. '    ' → logprob: -14.637075424194336

Token 325: ' décou' (ID: 68302)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.010204589925706387
    2. ' return' → logprob: -5.135204792022705
    3. 'map' → logprob: -5.510204792022705
    4. 'ret' → logprob: -9.260204315185547
    5. 'split' → logprob: -9.510204315185547
    6. ' retour' → logprob: -10.385204315185547
    7. ' retourne' → logprob: -11.760204315185547
    8. ' map' → logprob: -11.760204315185547
    9. 'strip' → logprob: -13.510204315185547
    10. 'm' → logprob: -14.260204315185547

Token 326: 'pe' (ID: 424)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0228073596954346
    2. '.split' → logprob: -2.6478073596954346
    3. ')' → logprob: -2.7728073596954346
    4. 'ale' → logprob: -3.1478073596954346
    5. 'ute' → logprob: -3.2728073596954346
    6. 'plit' → logprob: -3.5228073596954346
    7. 'oupe' → logprob: -3.5228073596954346
    8. 'ote' → logprob: -3.6478073596954346
    9. '().' → logprob: -3.7728073596954346
    10. 'uple' → logprob: -4.1478071212768555

Token 327: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.5687950253486633
    2. ',' → logprob: -2.0687949657440186
    3. '()' → logprob: -2.3187949657440186
    4. ' sur' → logprob: -2.8187949657440186
    5. '(),' → logprob: -3.3187949657440186
    6. '   ' → logprob: -3.4437949657440186
    7. '().' → logprob: -3.5687949657440186
    8. '(int' → logprob: -3.9437949657440186
    9. 'def' → logprob: -4.943795204162598
    10. 'on' → logprob: -5.068795204162598

Token 328: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.2053702175617218
    2. 'input' → logprob: -2.5803701877593994
    3. ' les' → logprob: -2.7053701877593994
    4. 'int' → logprob: -3.7053701877593994
    5. 'l' → logprob: -5.0803704261779785
    6. '()' → logprob: -6.0803704261779785
    7. ' input' → logprob: -6.2053704261779785
    8. ')' → logprob: -6.7053704261779785
    9. 'la' → logprob: -6.7053704261779785
    10. 'spaces' → logprob: -6.8303704261779785

Token 329: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.024086061865091324
    2. 'es' → logprob: -4.399085998535156
    3. 'spaces' → logprob: -4.899085998535156
    4. ' espaces' → logprob: -5.524085998535156
    5. 'sp' → logprob: -11.149085998535156
    6. ''esp' → logprob: -11.274085998535156
    7. 'b' → logprob: -11.899085998535156
    8. 's' → logprob: -11.899085998535156
    9. ')' → logprob: -12.649085998535156
    10. ' spaces' → logprob: -12.649085998535156

Token 330: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3201179802417755
    2. ',' → logprob: -1.3201179504394531
    3. 'return' → logprob: -5.195117950439453
    4. ')' → logprob: -6.945117950439453
    5. ' return' → logprob: -8.445117950439453
    6. ' ,' → logprob: -10.445117950439453
    7. '  ' → logprob: -10.570117950439453
    8. ' ' → logprob: -11.070117950439453
    9. ',
' → logprob: -11.570117950439453
    10. '    ' → logprob: -11.945117950439453

Token 331: ' convert' (ID: 8452)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20727220177650452
    2. ' return' → logprob: -1.7072721719741821
    3. 'map' → logprob: -5.457272052764893
    4. ' map' → logprob: -6.457272052764893
    5. '   ' → logprob: -12.08227252960205
    6. ' ' → logprob: -13.70727252960205
    7. '    ' → logprob: -15.70727252960205
    8. 'm' → logprob: -15.83227252960205
    9. ' retur' → logprob: -16.332271575927734
    10. 'def' → logprob: -16.457271575927734

Token 332: 'it' (ID: 278)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0292587280273438
    2. 'it' → logprob: -1.5292587280273438
    3. 'map' → logprob: -1.5292587280273438
    4. '()' → logprob: -2.5292587280273438
    5. 'er' → logprob: -3.0292587280273438
    6. 'e' → logprob: -4.404258728027344
    7. 'return' → logprob: -4.904258728027344
    8. 'def' → logprob: -4.904258728027344
    9. 'et' → logprob: -5.029258728027344
    10. 'ite' → logprob: -5.654258728027344

Token 333: ' et' (ID: 859)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2894558310508728
    2. '(int' → logprob: -1.4144558906555176
    3. ',int' → logprob: -5.664455890655518
    4. '   ' → logprob: -6.414455890655518
    5. 'map' → logprob: -6.539455890655518
    6. ' ' → logprob: -7.039455890655518
    7. ' int' → logprob: -8.66445541381836
    8. '=int' → logprob: -9.03945541381836
    9. ',' → logprob: -9.16445541381836
    10. '  ' → logprob: -9.41445541381836

Token 334: ' retourne' (ID: 178818)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.1947871595621109
    2. 'return' → logprob: -2.3197872638702393
    3. ' map' → logprob: -2.6947872638702393
    4. ' return' → logprob: -5.19478702545166
    5. ' retourne' → logprob: -5.56978702545166
    6. 'ret' → logprob: -7.19478702545166
    7. 'int' → logprob: -8.31978702545166
    8. 'ren' → logprob: -8.81978702545166
    9. ' ren' → logprob: -9.19478702545166
    10. 'yield' → logprob: -9.44478702545166

Token 335: ' un' (ID: 537)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.003991254139691591
    2. ' map' → logprob: -6.00399112701416
    3. '(map' → logprob: -6.50399112701416
    4. '	map' → logprob: -11.50399112701416
    5. '(' → logprob: -13.12899112701416
    6. 'm' → logprob: -13.87899112701416
    7. ',map' → logprob: -14.00399112701416
    8. 'int' → logprob: -14.50399112701416
    9. ' ' → logprob: -14.75399112701416
    10. '   ' → logprob: -14.75399112701416

Token 336: ' it' (ID: 480)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.011048642918467522
    2. ' map' → logprob: -4.511048793792725
    3. 'm' → logprob: -15.261048316955566
    4. '	map' → logprob: -15.261048316955566
    5. ' ' → logprob: -15.511048316955566
    6. '
' → logprob: -16.386049270629883
    7. '  ' → logprob: -17.136049270629883
    8. '   ' → logprob: -17.136049270629883
    9. '(map' → logprob: -17.636049270629883
    10. 'imap' → logprob: -17.886049270629883

Token 337: 'érateur' (ID: 108528)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.004045394714921713
    2. 'map' → logprob: -6.129045486450195
    3. '(map' → logprob: -7.379045486450195
    4. 'ermap' → logprob: -7.504045486450195
    5. 'érateur' → logprob: -8.379045486450195
    6. 'erar' → logprob: -8.879045486450195
    7. 'ér' → logprob: -9.254045486450195
    8. ' map' → logprob: -10.254045486450195
    9. 'era' → logprob: -10.504045486450195
    10. 'err' → logprob: -10.754045486450195

Token 338: ' d' (ID: 272)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.26370003819465637
    2. 'map' → logprob: -2.388700008392334
    3. 'return' → logprob: -2.513700008392334
    4. '(map' → logprob: -2.888700008392334
    5. 'int' → logprob: -6.138700008392334
    6. '(' → logprob: -6.888700008392334
    7. '(
' → logprob: -9.888700485229492
    8. ' map' → logprob: -10.263700485229492
    9. ' return' → logprob: -10.388700485229492
    10. '(return' → logprob: -10.638700485229492

Token 339: ''ent' (ID: 53422)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5508904457092285
    2. 'int' → logprob: -0.9258904457092285
    3. 'ints' → logprob: -4.1758904457092285
    4. 'ent' → logprob: -4.6758904457092285
    5. 'inte' → logprob: -7.3008904457092285
    6. ' int' → logprob: -7.6758904457092285
    7. '=int' → logprob: -7.8008904457092285
    8. '<int' → logprob: -8.05088996887207
    9. 'ents' → logprob: -8.17588996887207
    10. '[int' → logprob: -8.92588996887207

Token 340: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.24211809039115906
    2. 't' → logprob: -1.6171181201934814
    3. 'er' → logprob: -5.492117881774902
    4. 'ants' → logprob: -6.367117881774902
    5. 'erg' → logprob: -6.867117881774902
    6. 'érents' → logprob: -6.867117881774902
    7. 'ints' → logprob: -6.992117881774902
    8. 'ents' → logprob: -7.242117881774902
    9. 'e' → logprob: -7.492117881774902
    10. 'ieurs' → logprob: -7.867117881774902

Token 341: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29278916120529175
    2. 'return' → logprob: -1.4177892208099365
    3. ' return' → logprob: -4.542788982391357
    4. ':return' → logprob: -9.042789459228516
    5. '():
' → logprob: -9.292789459228516
    6. '	return' → logprob: -9.417789459228516
    7. ':' → logprob: -9.542789459228516
    8. '(int' → logprob: -9.667789459228516
    9. '(return' → logprob: -9.792789459228516
    10. '():' → logprob: -9.792789459228516

Token 342: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4181927442550659
    2. '   ' → logprob: -1.543192744255066
    3. ' return' → logprob: -2.1681928634643555
    4. ':' → logprob: -5.4181928634643555
    5. ':return' → logprob: -5.9181928634643555
    6. '():
' → logprob: -6.0431928634643555
    7. '():' → logprob: -6.5431928634643555
    8. ':
' → logprob: -6.9181928634643555
    9. 'def' → logprob: -7.5431928634643555
    10. '=' → logprob: -7.7931928634643555

Token 343: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0019759766291826963
    2. 'map' → logprob: -6.251976013183594
    3. ' return' → logprob: -10.001976013183594
    4. '   ' → logprob: -13.126976013183594
    5. 'm' → logprob: -16.876976013183594
    6. ' map' → logprob: -17.376976013183594
    7. '	return' → logprob: -17.501976013183594
    8. ' ' → logprob: -19.626976013183594
    9. '  ' → logprob: -19.876976013183594
    10. '    ' → logprob: -20.876976013183594

Token 344: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0052377874962985516
    2. ' map' → logprob: -5.255237579345703
    3. '   ' → logprob: -13.380237579345703
    4. '	map' → logprob: -13.380237579345703
    5. ' ' → logprob: -14.755237579345703
    6. '  ' → logprob: -15.255237579345703
    7. 'm' → logprob: -15.755237579345703
    8. '    ' → logprob: -17.630237579345703
    9. '(map' → logprob: -18.380237579345703
    10. ' ' → logprob: -19.005237579345703

Token 345: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00018196819291915745
    2. '(' → logprob: -8.625182151794434
    3. ' (' → logprob: -14.250182151794434
    4. 'int' → logprob: -14.750182151794434
    5. '(
' → logprob: -14.750182151794434
    6. '(in' → logprob: -15.125182151794434
    7. '<int' → logprob: -15.125182151794434
    8. '=int' → logprob: -16.125181198120117
    9. '[int' → logprob: -16.625181198120117
    10. '(i' → logprob: -16.875181198120117

Token 346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025648376904428005
    2. ',input' → logprob: -6.002564907073975
    3. '(input' → logprob: -10.127564430236816
    4. '(' → logprob: -10.377564430236816
    5. ' ,' → logprob: -11.377564430236816
    6. 'input' → logprob: -12.252564430236816
    7. '(),' → logprob: -14.127564430236816
    8. ' (' → logprob: -14.627564430236816
    9. ' input' → logprob: -15.252564430236816
    10. ',
' → logprob: -15.752564430236816

Token 347: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0619712732732296
    2. ' input' → logprob: -2.8119711875915527
    3. '(input' → logprob: -12.811971664428711
    4. ')' → logprob: -15.061971664428711
    5. ' ' → logprob: -15.811971664428711
    6. ',input' → logprob: -16.06197166442871
    7. '=input' → logprob: -16.31197166442871
    8. '	input' → logprob: -16.56197166442871
    9. '<input' → logprob: -17.31197166442871
    10. '[input' → logprob: -17.31197166442871

Token 348: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.6087021473795176e-05
    2. '()' → logprob: -10.000045776367188
    3. ' ().' → logprob: -14.625045776367188
    4. '(' → logprob: -16.250045776367188
    5. '.' → logprob: -16.625045776367188
    6. '().__' → logprob: -19.500045776367188
    7. '()
' → logprob: -19.625045776367188
    8. ')' → logprob: -20.125045776367188
    9. ' ' → logprob: -20.250045776367188
    10. '()[' → logprob: -20.375045776367188

Token 349: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. 'strip' → logprob: -14.750000953674316
    3. ' split' → logprob: -16.5
    4. ')' → logprob: -19.375
    5. 'spl' → logprob: -19.5
    6. '(split' → logprob: -20.875
    7. 'rstrip' → logprob: -21.25
    8. 'plit' → logprob: -21.625
    9. '.split' → logprob: -21.875
    10. 's' → logprob: -22.75

Token 350: '())

' (ID: 27654)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.9756777286529541
    2. '())' → logprob: -0.9756777286529541
    3. ')' → logprob: -1.725677728652954
    4. '()))' → logprob: -2.725677728652954
    5. '()' → logprob: -5.975677490234375
    6. '(' → logprob: -10.850677490234375
    7. ' ))' → logprob: -12.850677490234375
    8. ' )' → logprob: -13.225677490234375
    9. ' ())' → logprob: -13.225677490234375
    10. '())
' → logprob: -13.350677490234375

Token 351: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6217164397239685
    2. 'def' → logprob: -1.6217164993286133
    3. '<|end|>' → logprob: -1.9967164993286133
    4. 'n' → logprob: -2.6217164993286133
    5. '
' → logprob: -3.1217164993286133
    6. '<|end|>' → logprob: -5.496716499328613
    7. '```' → logprob: -6.246716499328613
    8. '\n' → logprob: -6.496716499328613
    9. 'class' → logprob: -6.996716499328613
    10. '\' → logprob: -7.496716499328613

Token 352: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005737509578466415
    2. '#' → logprob: -5.3807373046875
    3. 'n' → logprob: -7.7557373046875
    4. 'd' → logprob: -8.0057373046875
    5. 'from' → logprob: -8.7557373046875
    6. 'class' → logprob: -9.0057373046875
    7. 't' → logprob: -11.3807373046875
    8. 'for' → logprob: -11.5057373046875
    9. 's' → logprob: -11.5057373046875
    10. 'a' → logprob: -12.2557373046875

Token 353: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01104204822331667
    2. ' def' → logprob: -5.38604211807251
    3. '()' → logprob: -5.38604211807251
    4. '(' → logprob: -7.26104211807251
    5. 's' → logprob: -8.011041641235352
    6. '#' → logprob: -8.136041641235352
    7. '[]' → logprob: -9.386041641235352
    8. 'd' → logprob: -9.636041641235352
    9. 'de' → logprob: -9.761041641235352
    10. '(
' → logprob: -9.761041641235352

Token 354: ' lit' (ID: 11980)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2514967918395996
    2. 's' → logprob: -1.2514967918395996
    3. 'n' → logprob: -1.5014967918395996
    4. 'def' → logprob: -2.6264967918395996
    5. 'p' → logprob: -3.0014967918395996
    6. 'r' → logprob: -3.3764967918395996
    7. 'i' → logprob: -3.7514967918395996
    8. ' s' → logprob: -5.3764967918396
    9. ' n' → logprob: -5.6264967918396
    10. 'a' → logprob: -5.7514967918396

Token 355: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.56540447473526
    2. '():' → logprob: -1.5654044151306152
    3. 'n' → logprob: -2.8154044151306152
    4. 'une' → logprob: -2.9404044151306152
    5. ' une' → logprob: -3.9404044151306152
    6. 'int' → logprob: -4.065404415130615
    7. '():
' → logprob: -4.190404415130615
    8. 'a' → logprob: -4.315404415130615
    9. 'def' → logprob: -4.440404415130615
    10. ' un' → logprob: -4.690404415130615

Token 356: ' retourne' (ID: 178818)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7202705144882202
    2. 'ren' → logprob: -1.7202705144882202
    3. 'return' → logprob: -2.3452706336975098
    4. ' ren' → logprob: -3.0952706336975098
    5. 'def' → logprob: -3.3452706336975098
    6. 'ret' → logprob: -3.5952706336975098
    7. 'r' → logprob: -3.9702706336975098
    8. ' retourne' → logprob: -4.22027063369751
    9. 'stock' → logprob: -4.59527063369751
    10. 'print' → logprob: -4.59527063369751

Token 357: ' directement' (ID: 52317)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.278915137052536
    2. '()' → logprob: -2.0289151668548584
    3. 'une' → logprob: -3.2789151668548584
    4. 'l' → logprob: -3.4039151668548584
    5. ' un' → logprob: -3.9039151668548584
    6. 'int' → logprob: -4.028914928436279
    7. 'a' → logprob: -6.653914928436279
    8. 'n' → logprob: -7.278914928436279
    9. ' une' → logprob: -8.028915405273438
    10. 'la' → logprob: -8.778915405273438

Token 358: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.11339496076107025
    2. ' un' → logprob: -2.3633949756622314
    3. 'l' → logprob: -4.988394737243652
    4. 'une' → logprob: -5.738394737243652
    5. 'int' → logprob: -6.363394737243652
    6. ' une' → logprob: -7.238394737243652
    7. 'la' → logprob: -8.738394737243652
    8. 'n' → logprob: -9.363394737243652
    9. 'an' → logprob: -9.488394737243652
    10. 'le' → logprob: -9.488394737243652

Token 359: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03629111871123314
    2. 'ent' → logprob: -3.5362911224365234
    3. 'n' → logprob: -6.036291122436523
    4. 'single' → logprob: -6.661291122436523
    5. 'se' → logprob: -7.286291122436523
    6. 'e' → logprob: -7.286291122436523
    7. ' entier' → logprob: -7.911291122436523
    8. ' seul' → logprob: -8.411291122436523
    9. ' int' → logprob: -8.786291122436523
    10. ' single' → logprob: -8.911291122436523

Token 360: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01782316155731678
    2. '()' → logprob: -4.267823219299316
    3. '():' → logprob: -5.892823219299316
    4. '():
' → logprob: -7.142823219299316
    5. ' def' → logprob: -9.517823219299316
    6. '()
' → logprob: -10.642823219299316
    7. ':' → logprob: -12.642823219299316
    8. ' ()' → logprob: -14.642823219299316
    9. ':def' → logprob: -14.767823219299316
    10. '()`' → logprob: -15.017823219299316

Token 361: 'utile' (ID: 113576)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04429018869996071
    2. ')' → logprob: -3.16929030418396
    3. ')
' → logprob: -7.294290065765381
    4. '()' → logprob: -7.919290065765381
    5. ' def' → logprob: -9.544290542602539
    6. '):
' → logprob: -9.794290542602539
    7. '):' → logprob: -10.044290542602539
    8. 'int' → logprob: -10.294290542602539
    9. '
' → logprob: -11.169290542602539
    10. '()
' → logprob: -11.419290542602539

Token 362: ' pour' (ID: 1930)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0028374455869197845
    2. ')' → logprob: -6.002837657928467
    3. '())' → logprob: -9.002837181091309
    4. '()
' → logprob: -9.127837181091309
    5. '=' → logprob: -10.377837181091309
    6. 'pour' → logprob: -10.627837181091309
    7. 'for' → logprob: -10.752837181091309
    8. ' ()' → logprob: -11.002837181091309
    9. 'def' → logprob: -11.627837181091309
    10. ' =' → logprob: -11.877837181091309

Token 363: ' lire' (ID: 46082)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1350296288728714
    2. 'les' → logprob: -3.3850295543670654
    3. ' des' → logprob: -4.0100297927856445
    4. ' les' → logprob: -4.0100297927856445
    5. ' int' → logprob: -4.2600297927856445
    6. 'l' → logprob: -4.8850297927856445
    7. 'n' → logprob: -5.0100297927856445
    8. 'cas' → logprob: -5.5100297927856445
    9. 'une' → logprob: -5.6350297927856445
    10. ' n' → logprob: -5.7600297927856445

Token 364: ' les' (ID: 1341)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44575998187065125
    2. '()' → logprob: -1.6957600116729736
    3. ' une' → logprob: -2.5707600116729736
    4. 'une' → logprob: -2.9457600116729736
    5. '())' → logprob: -3.3207600116729736
    6. 'la' → logprob: -5.5707597732543945
    7. ' )' → logprob: -6.1957597732543945
    8. ' un' → logprob: -6.5707597732543945
    9. ' la' → logprob: -6.6957597732543945
    10. 'l' → logprob: -7.4457597732543945

Token 365: ' coordonnées' (ID: 181895)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.3434080481529236
    2. 'n' → logprob: -2.3434081077575684
    3. 'int' → logprob: -2.8434081077575684
    4. 'nombre' → logprob: -3.3434081077575684
    5. 'val' → logprob: -3.9684081077575684
    6. ' ent' → logprob: -4.218408107757568
    7. 'cas' → logprob: -4.593408107757568
    8. 'l' → logprob: -4.843408107757568
    9. 'inputs' → logprob: -4.968408107757568
    10. ' nombres' → logprob: -4.968408107757568

Token 366: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09701254963874817
    2. 'def' → logprob: -2.472012519836426
    3. '()' → logprob: -5.222012519836426
    4. 'n' → logprob: -7.347012519836426
    5. ' )' → logprob: -7.472012519836426
    6. ',' → logprob: -8.222012519836426
    7. ')n' → logprob: -8.347012519836426
    8. 'ou' → logprob: -8.597012519836426
    9. '())' → logprob: -8.722012519836426
    10. 'x' → logprob: -9.472012519836426

Token 367: ' longue' (ID: 59564)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.417027473449707
    2. 'les' → logprob: -1.792027473449707
    3. 'des' → logprob: -2.167027473449707
    4. 'un' → logprob: -2.167027473449707
    5. 'une' → logprob: -2.167027473449707
    6. 'n' → logprob: -2.667027473449707
    7. 'val' → logprob: -3.542027473449707
    8. 'indices' → logprob: -3.917027473449707
    9. 'la' → logprob: -4.042027473449707
    10. ' des' → logprob: -4.167027473449707

Token 368: 'urs' (ID: 1628)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07423432916402817
    2. 'urs' → logprob: -2.9492342472076416
    3. 'ur' → logprob: -4.074234485626221
    4. 'eurs' → logprob: -7.199234485626221
    5. 'ueur' → logprob: -7.449234485626221
    6. 'rs' → logprob: -8.949234008789062
    7. 'reur' → logprob: -8.949234008789062
    8. 'e' → logprob: -9.324234008789062
    9. 'eur' → logprob: -9.449234008789062
    10. 'reurs' → logprob: -9.574234008789062

Token 369: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03579574078321457
    2. '()' → logprob: -3.7857956886291504
    3. 'def' → logprob: -4.66079568862915
    4. 'd' → logprob: -6.78579568862915
    5. ')
' → logprob: -7.28579568862915
    6. '())' → logprob: -7.28579568862915
    7. ' )' → logprob: -9.285796165466309
    8. 'n' → logprob: -9.535796165466309
    9. 'de' → logprob: -9.785796165466309
    10. '()
' → logprob: -9.910796165466309

Token 370: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -17.125
    3. 'd' → logprob: -21.25
    4. '	def' → logprob: -22.5
    5. '
' → logprob: -23.75
    6. '```' → logprob: -24.25
    7. 'int' → logprob: -24.375
    8. ':def' → logprob: -24.625
    9. '-def' → logprob: -24.875
    10. '#' → logprob: -25.375

Token 371: ' on' (ID: 402)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.7044000029563904
    2. 'i' → logprob: -1.3294000625610352
    3. 'n' → logprob: -1.7044000625610352
    4. 'd' → logprob: -3.579400062561035
    5. 'in' → logprob: -5.204400062561035
    6. 'int' → logprob: -5.329400062561035
    7. 'r' → logprob: -5.329400062561035
    8. 'a' → logprob: -5.704400062561035
    9. 'ni' → logprob: -5.954400062561035
    10. 'ii' → logprob: -5.954400062561035

Token 372: 'em' (ID: 347)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -2.5776860184123507e-06
    2. 'ce' → logprob: -13.37500286102295
    3. 'el' → logprob: -15.00000286102295
    4. 'eline' → logprob: -15.50000286102295
    5. 'ee' → logprob: -15.87500286102295
    6. '()' → logprob: -16.750001907348633
    7. '(e' → logprob: -16.875001907348633
    8. 'eil' → logprob: -16.875001907348633
    9. 'E' → logprob: -18.000001907348633
    10. ' e' → logprob: -18.125001907348633

Token 373: '():
' (ID: 8595)
  Prédit: 'ore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ore' → logprob: -0.8021100759506226
    2. '()' → logprob: -1.5521100759506226
    3. 'um' → logprob: -1.8021100759506226
    4. 'e' → logprob: -2.802110195159912
    5. 'line' → logprob: -3.552110195159912
    6. 'o' → logprob: -4.427110195159912
    7. ')' → logprob: -4.552110195159912
    8. 'ine' → logprob: -4.552110195159912
    9. 'a' → logprob: -4.927110195159912
    10. 'l' → logprob: -5.302110195159912

Token 374: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2632920742034912
    2. 'int' → logprob: -1.5132920742034912
    3. '():' → logprob: -4.88829231262207
    4. '()' → logprob: -5.88829231262207
    5. '():
' → logprob: -7.88829231262207
    6. ' return' → logprob: -7.88829231262207
    7. '   ' → logprob: -9.13829231262207
    8. '(int' → logprob: -10.01329231262207
    9. 'def' → logprob: -10.13829231262207
    10. '()
' → logprob: -10.63829231262207

Token 375: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01868419535458088
    2. ' return' → logprob: -4.018684387207031
    3. 'int' → logprob: -7.643684387207031
    4. '   ' → logprob: -10.768684387207031
    5. '
' → logprob: -11.268684387207031
    6. '()' → logprob: -11.643684387207031
    7. ':return' → logprob: -12.518684387207031
    8. ')' → logprob: -13.018684387207031
    9. '{return' → logprob: -13.768684387207031
    10. '()
' → logprob: -13.768684387207031

Token 376: ' Pr' (ID: 2284)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0011720098555088043
    2. ' return' → logprob: -6.751172065734863
    3. '
' → logprob: -13.876172065734863
    4. '   ' → logprob: -14.751172065734863
    5. 'def' → logprob: -15.501172065734863
    6. 'int' → logprob: -15.751172065734863
    7. 'ret' → logprob: -17.751171112060547
    8. '{return' → logprob: -18.126171112060547
    9. 'eturn' → logprob: -18.751171112060547
    10. '	return' → logprob: -18.751171112060547

Token 377: 'end' (ID: 419)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7209547758102417
    2. '()' → logprob: -2.0959548950195312
    3. 'def' → logprob: -2.2209548950195312
    4. '=' → logprob: -2.3459548950195312
    5. '=int' → logprob: -2.4709548950195312
    6. ' =' → logprob: -3.7209548950195312
    7. 'eturn' → logprob: -3.7209548950195312
    8. 'return' → logprob: -3.8459548950195312
    9. 'int' → logprob: -4.970954895019531
    10. '().' → logprob: -5.220954895019531

Token 378: ' une' (ID: 2463)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.33099499344825745
    2. '()' → logprob: -1.705994963645935
    3. ')' → logprob: -2.3309950828552246
    4. '=int' → logprob: -7.330995082855225
    5. '():' → logprob: -7.705995082855225
    6. '   ' → logprob: -7.705995082855225
    7. '):' → logprob: -8.705994606018066
    8. ']int' → logprob: -8.955994606018066
    9. '()
' → logprob: -9.080994606018066
    10. 'lambda' → logprob: -9.080994606018066

Token 379: ' ligne' (ID: 19583)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00594479450955987
    2. '()' → logprob: -6.255944728851318
    3. 'line' → logprob: -6.255944728851318
    4. 'ent' → logprob: -7.255944728851318
    5. ')' → logprob: -7.880944728851318
    6. '=int' → logprob: -8.255945205688477
    7. 'integer' → logprob: -8.255945205688477
    8. ' int' → logprob: -8.880945205688477
    9. 'single' → logprob: -10.130945205688477
    10. 'ligne' → logprob: -10.255945205688477

Token 380: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.044620394706726074
    2. '().' → logprob: -3.1696205139160156
    3. '()
' → logprob: -7.294620513916016
    4. ')' → logprob: -8.419620513916016
    5. '())' → logprob: -8.419620513916016
    6. 'int' → logprob: -8.419620513916016
    7. '=int' → logprob: -9.669620513916016
    8. '(),' → logprob: -9.794620513916016
    9. '=' → logprob: -10.794620513916016
    10. '(int' → logprob: -11.044620513916016

Token 381: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014782353304326534
    2. 'entrée' → logprob: -4.889782428741455
    3. ' input' → logprob: -5.639782428741455
    4. '()' → logprob: -6.389782428741455
    5. 'put' → logprob: -6.889782428741455
    6. '().' → logprob: -7.889782428741455
    7. '(input' → logprob: -8.889781951904297
    8. 'int' → logprob: -9.389781951904297
    9. ')' → logprob: -9.639781951904297
    10. '=input' → logprob: -9.889781951904297

Token 382: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25860220193862915
    2. '().' → logprob: -2.2586021423339844
    3. '():
' → logprob: -3.2586021423339844
    4. ')' → logprob: -3.5086021423339844
    5. '():' → logprob: -3.8836021423339844
    6. '()
' → logprob: -5.008602142333984
    7. '   ' → logprob: -5.633602142333984
    8. 'return' → logprob: -5.633602142333984
    9. ':
' → logprob: -5.758602142333984
    10. ':' → logprob: -6.133602142333984

Token 383: ' la' (ID: 557)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4703381657600403
    2. 'return' → logprob: -1.0953381061553955
    3. 'int' → logprob: -3.5953381061553955
    4. ')' → logprob: -4.970338344573975
    5. 'rstrip' → logprob: -6.470338344573975
    6. '   ' → logprob: -6.720338344573975
    7. '()' → logprob: -7.345338344573975
    8. '@return' → logprob: -7.595338344573975
    9. ' int' → logprob: -7.970338344573975
    10. ')return' → logprob: -8.470337867736816

Token 384: ' convert' (ID: 8452)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004157702904194593
    2. ' return' → logprob: -5.754157543182373
    3. 'strip' → logprob: -7.254157543182373
    4. 'rstrip' → logprob: -8.879158020019531
    5. 'int' → logprob: -9.129158020019531
    6. 'ret' → logprob: -11.629158020019531
    7. 'r' → logprob: -12.379158020019531
    8. 'split' → logprob: -12.629158020019531
    9. ' retour' → logprob: -13.129158020019531
    10. 'def' → logprob: -14.254158020019531

Token 385: 'it' (ID: 278)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.8052324652671814
    2. '()' → logprob: -1.0552325248718262
    3. '=int' → logprob: -2.055232524871826
    4. 'int' → logprob: -2.805232524871826
    5. '(int' → logprob: -5.930232524871826
    6. '=' → logprob: -5.930232524871826
    7. '()==' → logprob: -6.180232524871826
    8. ')' → logprob: -6.555232524871826
    9. '   ' → logprob: -6.930232524871826
    10. '())' → logprob: -7.055232524871826

Token 386: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.38347625732421875
    2. 'int' → logprob: -1.7584762573242188
    3. '().' → logprob: -2.1334762573242188
    4. '(int' → logprob: -4.008476257324219
    5. '=int' → logprob: -5.383476257324219
    6. '[int' → logprob: -7.008476257324219
    7. '()
' → logprob: -7.258476257324219
    8. '<int' → logprob: -7.258476257324219
    9. '()[' → logprob: -7.383476257324219
    10. '();' → logprob: -8.383476257324219

Token 387: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0003540542966220528
    2. 'ent' → logprob: -8.125353813171387
    3. ' int' → logprob: -9.875353813171387
    4. ' entier' → logprob: -12.375353813171387
    5. 'integer' → logprob: -13.750353813171387
    6. '=int' → logprob: -14.500353813171387
    7. 'un' → logprob: -14.875353813171387
    8. '[int' → logprob: -15.500353813171387
    9. '<int' → logprob: -15.625353813171387
    10. '(int' → logprob: -17.250354766845703

Token 388: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0036130205262452364
    2. '().' → logprob: -6.003612995147705
    3. 'return' → logprob: -8.003613471984863
    4. '   ' → logprob: -8.378613471984863
    5. '()
' → logprob: -8.503613471984863
    6. ')' → logprob: -9.253613471984863
    7. ' ()' → logprob: -9.878613471984863
    8. '(),' → logprob: -10.003613471984863
    9. ',' → logprob: -10.378613471984863
    10. 'def' → logprob: -10.628613471984863

Token 389: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9914858341217041
    2. 'strip' → logprob: -1.241485834121704
    3. 'rstrip' → logprob: -1.491485834121704
    4. ' return' → logprob: -2.241485834121704
    5. ' retourne' → logprob: -5.616485595703125
    6. ' strip' → logprob: -5.991485595703125
    7. '.strip' → logprob: -7.241485595703125
    8. 'r' → logprob: -7.991485595703125
    9. ' retour' → logprob: -8.491485595703125
    10. 'int' → logprob: -8.491485595703125

Token 390: ' retourne' (ID: 178818)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0010390023235231638
    2. '.strip' → logprob: -7.501039028167725
    3. 'rstrip' → logprob: -7.751039028167725
    4. ' strip' → logprob: -9.876038551330566
    5. 'return' → logprob: -12.751038551330566
    6. 'str' → logprob: -14.751038551330566
    7. '.rstrip' → logprob: -14.876038551330566
    8. '(strip' → logprob: -15.251038551330566
    9. '-strip' → logprob: -15.626038551330566
    10. '_strip' → logprob: -15.876038551330566

Token 391: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6881134510040283
    2. '():' → logprob: -0.9381134510040283
    3. '   ' → logprob: -2.9381134510040283
    4. '():
' → logprob: -3.0631134510040283
    5. 'return' → logprob: -5.813113212585449
    6. '()
' → logprob: -6.313113212585449
    7. ':' → logprob: -7.688113212585449
    8. ' return' → logprob: -8.06311321258545
    9. ')' → logprob: -8.68811321258545
    10. ' ()' → logprob: -8.93811321258545

Token 392: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.44964146614074707
    2. 'def' → logprob: -1.949641466140747
    3. '():
' → logprob: -2.074641466140747
    4. '   ' → logprob: -2.574641466140747
    5. '()' → logprob: -4.324641227722168
    6. 'return' → logprob: -5.824641227722168
    7. ':' → logprob: -7.324641227722168
    8. ':
' → logprob: -7.824641227722168
    9. ':return' → logprob: -8.449641227722168
    10. ' return' → logprob: -9.074641227722168

Token 393: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005550591740757227
    2. ' return' → logprob: -7.500555038452148
    3. '   ' → logprob: -13.250555038452148
    4. '	return' → logprob: -15.500555038452148
    5. '{return' → logprob: -17.12555503845215
    6. 'int' → logprob: -18.50055503845215
    7. ':return' → logprob: -18.75055503845215
    8. '
' → logprob: -18.87555503845215
    9. 'eturn' → logprob: -19.00055503845215
    10. 'ret' → logprob: -19.50055503845215

Token 394: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04858771339058876
    2. ' int' → logprob: -3.0485877990722656
    3. '(int' → logprob: -15.673587799072266
    4. '	int' → logprob: -16.048587799072266
    5. ' ' → logprob: -18.298587799072266
    6. '=int' → logprob: -18.548587799072266
    7. '  ' → logprob: -18.548587799072266
    8. '[int' → logprob: -18.673587799072266
    9. 'in' → logprob: -18.798587799072266
    10. '<int' → logprob: -18.923587799072266

Token 395: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00408647395670414
    2. '(' → logprob: -5.504086494445801
    3. 'input' → logprob: -12.7540864944458
    4. ' (' → logprob: -12.8790864944458
    5. '(
' → logprob: -13.1290864944458
    6. '(in' → logprob: -16.004085540771484
    7. '()' → logprob: -16.129085540771484
    8. '(s' → logprob: -16.754085540771484
    9. '(sys' → logprob: -16.879085540771484
    10. '=input' → logprob: -18.004085540771484

Token 396: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.38767582178115845
    2. '().' → logprob: -1.1376757621765137
    3. '()' → logprob: -7.137675762176514
    4. ' ())' → logprob: -12.762676239013672
    5. '()))' → logprob: -12.887676239013672
    6. '()
' → logprob: -13.762676239013672
    7. '(' → logprob: -13.762676239013672
    8. '())
' → logprob: -13.762676239013672
    9. '();)' → logprob: -14.012676239013672
    10. '())

' → logprob: -16.512676239013672

Token 397: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06205708906054497
    2. '#' → logprob: -3.0620570182800293
    3. 'n' → logprob: -4.562057018280029
    4. '
' → logprob: -6.937057018280029
    5. '<|end|>' → logprob: -7.062057018280029
    6. '```' → logprob: -8.687057495117188
    7. 'a' → logprob: -8.937057495117188
    8. 't' → logprob: -8.937057495117188
    9. 'N' → logprob: -9.187057495117188
    10. 'class' → logprob: -9.437057495117188

Token 398: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0038398560136556625
    2. 'n' → logprob: -6.12883996963501
    3. '#' → logprob: -6.62883996963501
    4. 'N' → logprob: -9.128839492797852
    5. 'from' → logprob: -9.503839492797852
    6. 'class' → logprob: -9.753839492797852
    7. 't' → logprob: -10.128839492797852
    8. 'd' → logprob: -11.128839492797852
    9. 'T' → logprob: -12.003839492797852
    10. '(n' → logprob: -12.253839492797852

Token 399: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009210657328367233
    2. ' def' → logprob: -5.384210586547852
    3. '(' → logprob: -5.884210586547852
    4. '()' → logprob: -7.009210586547852
    5. '#' → logprob: -7.884210586547852
    6. 'de' → logprob: -9.009210586547852
    7. '[]' → logprob: -9.259210586547852
    8. 's' → logprob: -9.634210586547852
    9. '(
' → logprob: -10.009210586547852
    10. 'l' → logprob: -10.759210586547852

Token 400: ' "' (ID: 392)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5187973976135254
    2. ' main' → logprob: -2.0187973976135254
    3. 'def' → logprob: -2.2687973976135254
    4. 'dfs' → logprob: -3.3937973976135254
    5. 'range' → logprob: -3.8937973976135254
    6. 'f' → logprob: -3.8937973976135254
    7. 'tri' → logprob: -4.268797397613525
    8. 's' → logprob: -5.143797397613525
    9. 'b' → logprob: -5.143797397613525
    10. 'factor' → logprob: -5.393797397613525

Token 401: 'compression' (ID: 157910)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4036332964897156
    2. 'dfs' → logprob: -1.5286333560943604
    3. 'dp' → logprob: -3.9036333560943604
    4. 'fact' → logprob: -4.153633117675781
    5. 'def' → logprob: -4.403633117675781
    6. 'tri' → logprob: -4.528633117675781
    7. 'debug' → logprob: -4.778633117675781
    8. 'memo' → logprob: -4.903633117675781
    9. 'test' → logprob: -5.028633117675781
    10. ' main' → logprob: -5.278633117675781

Token 402: '":' (ID: 1243)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5119671821594238
    2. 'coordinate' → logprob: -2.136967182159424
    3. 'coord' → logprob: -3.011967182159424
    4. '_coordinate' → logprob: -3.386967182159424
    5. '(coord' → logprob: -3.511967182159424
    6. '```' → logprob: -3.511967182159424
    7. '()' → logprob: -3.636967182159424
    8. 'coords' → logprob: -4.011967182159424
    9. '_coordinates' → logprob: -4.136967182159424
    10. 'des' → logprob: -4.511967182159424

Token 403: ' compte' (ID: 19657)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00020354038861114532
    2. ' def' → logprob: -8.500203132629395
    3. '
' → logprob: -17.37520408630371
    4. 'de' → logprob: -18.87520408630371
    5. 'from' → logprob: -19.50020408630371
    6. 'd' → logprob: -19.62520408630371
    7. '#' → logprob: -20.62520408630371
    8. 'class' → logprob: -21.37520408630371
    9. '```' → logprob: -21.37520408630371
    10. ')' → logprob: -21.62520408630371

Token 404: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6481124758720398
    2. 'des' → logprob: -2.8981125354766846
    3. 'les' → logprob: -3.1481125354766846
    4. '(arr' → logprob: -3.2731125354766846
    5. 'arr' → logprob: -3.3981125354766846
    6. 's' → logprob: -3.5231125354766846
    7. ' des' → logprob: -3.7731125354766846
    8. '(lst' → logprob: -3.7731125354766846
    9. '_elements' → logprob: -3.8981125354766846
    10. '()' → logprob: -4.0231122970581055

Token 405: ' reg' (ID: 1324)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.3490983247756958
    2. ' comp' → logprob: -1.9740983247756958
    3. 'index' → logprob: -2.3490982055664062
    4. 'rank' → logprob: -2.5990982055664062
    5. 'def' → logprob: -2.7240982055664062
    6. 'compress' → logprob: -3.0990982055664062
    7. 'map' → logprob: -3.2240982055664062
    8. 'encode' → logprob: -3.4740982055664062
    9. 'rem' → logprob: -3.5990982055664062
    10. '#' → logprob: -3.9740982055664062

Token 406: 'roupe' (ID: 23290)
  Prédit: 'roupe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roupe' → logprob: -0.41345685720443726
    2. 'roup' → logprob: -1.163456916809082
    3. 'rou' → logprob: -3.663456916809082
    4. 'roups' → logprob: -8.288456916809082
    5. 'oupe' → logprob: -9.038456916809082
    6. 'oup' → logprob: -9.288456916809082
    7. 'ro' → logprob: -10.788456916809082
    8. 'r' → logprob: -11.163456916809082
    9. 'ROUP' → logprob: -11.288456916809082
    10. 'ou' → logprob: -11.788456916809082

Token 407: ' les' (ID: 1341)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8982222676277161
    2. 'les' → logprob: -1.0232222080230713
    3. 'des' → logprob: -2.2732222080230713
    4. ' les' → logprob: -3.6482222080230713
    5. 'elements' → logprob: -3.6482222080230713
    6. ' des' → logprob: -4.77322244644165
    7. 'the' → logprob: -4.89822244644165
    8. 'arr' → logprob: -5.02322244644165
    9. '(elements' → logprob: -5.14822244644165
    10. 's' → logprob: -5.52322244644165

Token 408: ' valeurs' (ID: 73668)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.20904803276062012
    2. 'val' → logprob: -2.83404803276062
    3. ' occurrences' → logprob: -3.08404803276062
    4. ' éléments' → logprob: -3.45904803276062
    5. ' valeurs' → logprob: -4.334048271179199
    6. 'indices' → logprob: -4.709048271179199
    7. 'elements' → logprob: -4.834048271179199
    8. ' elements' → logprob: -5.084048271179199
    9. 'occ' → logprob: -5.334048271179199
    10. 'les' → logprob: -6.209048271179199

Token 409: ' cons' (ID: 1473)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00023226479243021458
    2. '(arr' → logprob: -9.875232696533203
    3. ' def' → logprob: -10.500232696533203
    4. 'from' → logprob: -10.750232696533203
    5. '#' → logprob: -11.250232696533203
    6. 'arr' → logprob: -11.375232696533203
    7. '(lst' → logprob: -11.375232696533203
    8. 'de' → logprob: -11.500232696533203
    9. 'd' → logprob: -11.625232696533203
    10. ' =' → logprob: -11.875232696533203

Token 410: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.006716913543641567
    2. 'ecut' → logprob: -5.381716728210449
    3. 'cut' → logprob: -7.006716728210449
    4. 'éc' → logprob: -7.506716728210449
    5. 't' → logprob: -8.50671672821045
    6. 'secut' → logprob: -9.50671672821045
    7. 'équ' → logprob: -9.50671672821045
    8. 'ec' → logprob: -10.25671672821045
    9. 'tr' → logprob: -10.38171672821045
    10. '```' → logprob: -10.75671672821045

Token 411: 'ives' (ID: 2264)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.10247209668159485
    2. 'ées' → logprob: -2.8524720668792725
    3. 'def' → logprob: -4.852472305297852
    4. 'nées' → logprob: -4.852472305297852
    5. 'e' → logprob: -5.352472305297852
    6. 'atives' → logprob: -5.477472305297852
    7. '_' → logprob: -6.602472305297852
    8. 'adj' → logprob: -6.602472305297852
    9. '_adj' → logprob: -6.727472305297852
    10. 's' → logprob: -7.102472305297852

Token 412: ' dans' (ID: 2671)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0033432363998144865
    2. 'from' → logprob: -5.753343105316162
    3. '(' → logprob: -10.12834358215332
    4. ' def' → logprob: -10.37834358215332
    5. '(
' → logprob: -11.12834358215332
    6. '#' → logprob: -11.12834358215332
    7. 'de' → logprob: -11.12834358215332
    8. ',' → logprob: -11.37834358215332
    9. 's' → logprob: -12.00334358215332
    10. '
' → logprob: -12.12834358215332

Token 413: ' une' (ID: 2463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2389925867319107
    2. 'a' → logprob: -2.113992691040039
    3. 'l' → logprob: -3.613992691040039
    4. 'une' → logprob: -4.238992691040039
    5. 'la' → logprob: -4.238992691040039
    6. 'arr' → logprob: -4.363992691040039
    7. ' une' → logprob: -5.613992691040039
    8. 'lst' → logprob: -5.613992691040039
    9. '
' → logprob: -5.988992691040039
    10. ' def' → logprob: -6.113992691040039

Token 414: ' liste' (ID: 31719)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1886058896780014
    2. 'from' → logprob: -1.9386059045791626
    3. 'import' → logprob: -4.188605785369873
    4. '
' → logprob: -4.938605785369873
    5. 'it' → logprob: -5.938605785369873
    6. 'iter' → logprob: -7.188605785369873
    7. ' def' → logprob: -7.313605785369873
    8. 'cl' → logprob: -8.188606262207031
    9. '#' → logprob: -8.688606262207031
    10. '```' → logprob: -8.688606262207031

Token 415: ' ou' (ID: 2031)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026424305513501167
    2. 'from' → logprob: -3.6514244079589844
    3. ' def' → logprob: -9.651424407958984
    4. '
' → logprob: -10.401424407958984
    5. 'import' → logprob: -10.901424407958984
    6. ' from' → logprob: -11.901424407958984
    7. '#' → logprob: -13.526424407958984
    8. 'de' → logprob: -14.401424407958984
    9. '```' → logprob: -14.401424407958984
    10. '(def' → logprob: -14.901424407958984

Token 416: ' chaîne' (ID: 89288)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.31760045886039734
    2. 'str' → logprob: -2.1926004886627197
    3. 'iter' → logprob: -2.9426004886627197
    4. ' itertools' → logprob: -4.817600250244141
    5. 'tuple' → logprob: -4.942600250244141
    6. 'def' → logprob: -4.942600250244141
    7. '[]' → logprob: -5.067600250244141
    8. 'une' → logprob: -5.442600250244141
    9. ' iterable' → logprob: -5.442600250244141
    10. ' str' → logprob: -5.442600250244141

Token 417: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14304231107234955
    2. 'from' → logprob: -2.0180423259735107
    3. ' def' → logprob: -8.26804256439209
    4. ' from' → logprob: -9.89304256439209
    5. 'import' → logprob: -10.14304256439209
    6. '
' → logprob: -11.01804256439209
    7. '```' → logprob: -14.01804256439209
    8. 'de' → logprob: -14.64304256439209
    9. '(def' → logprob: -14.89304256439209
    10. ',' → logprob: -14.89304256439209

Token 418: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06202862784266472
    2. 'from' → logprob: -2.812028646469116
    3. 'import' → logprob: -9.812028884887695
    4. '
' → logprob: -13.062028884887695
    5. ' from' → logprob: -13.312028884887695
    6. ' def' → logprob: -13.437028884887695
    7. 'class' → logprob: -14.687028884887695
    8. 'de' → logprob: -15.187028884887695
    9. '#' → logprob: -15.562028884887695
    10. '  
' → logprob: -17.687028884887695

Token 419: ' s' (ID: 265)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.16574493050575256
    2. 'group' → logprob: -2.9157450199127197
    3. 'r' → logprob: -3.1657450199127197
    4. 'compress' → logprob: -3.5407450199127197
    5. 'it' → logprob: -3.9157450199127197
    6. ' run' → logprob: -5.915744781494141
    7. 'rc' → logprob: -6.415744781494141
    8. 'acc' → logprob: -7.040744781494141
    9. '_r' → logprob: -8.29074478149414
    10. ' itertools' → logprob: -8.41574478149414

Token 420: '(x' (ID: 4061)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6771209836006165
    2. 'group' → logprob: -3.6771209239959717
    3. 'td' → logprob: -3.6771209239959717
    4. 'tu' → logprob: -3.6771209239959717
    5. 'g' → logprob: -3.7396209239959717
    6. 'u' → logprob: -3.8021209239959717
    7. 'ame' → logprob: -3.8646209239959717
    8. 'queeze' → logprob: -3.8646209239959717
    9. 'olve' → logprob: -3.9896209239959717
    10. 'can' → logprob: -4.114621162414551

Token 421: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3162047266960144
    2. '):
' → logprob: -1.3162047863006592
    3. '):
' → logprob: -6.56620454788208
    4. ')' → logprob: -6.81620454788208
    5. ' ):' → logprob: -8.066205024719238
    6. ' ):
' → logprob: -9.316205024719238
    7. '):

' → logprob: -10.941205024719238
    8. '[]):' → logprob: -12.441205024719238
    9. ')：' → logprob: -13.566205024719238
    10. ' )' → logprob: -13.691205024719238

Token 422: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035515397787094116
    2. ' ' → logprob: -4.035515308380127
    3. '[(' → logprob: -5.535515308380127
    4. '[]' → logprob: -6.160515308380127
    5. 'res' → logprob: -6.410515308380127
    6. 'from' → logprob: -6.535515308380127
    7. 'result' → logprob: -6.535515308380127
    8. 'ret' → logprob: -7.035515308380127
    9. '[' → logprob: -7.410515308380127
    10. 'r' → logprob: -7.535515308380127

Token 423: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7524493336677551
    2. 'from' → logprob: -1.7524492740631104
    3. 'return' → logprob: -2.2524492740631104
    4. ' res' → logprob: -2.5024492740631104
    5. 'ret' → logprob: -3.2524492740631104
    6. ' return' → logprob: -3.6274492740631104
    7. 'result' → logprob: -3.8774492740631104
    8. 'it' → logprob: -3.8774492740631104
    9. 'ans' → logprob: -4.0024495124816895
    10. 'r' → logprob: -4.6274495124816895

Token 424: ' Initialise' (ID: 179601)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.184596985578537
    2. 'res' → logprob: -2.1845970153808594
    3. 'ret' → logprob: -3.8095970153808594
    4. ' return' → logprob: -4.434597015380859
    5. 'from' → logprob: -4.809597015380859
    6. 'result' → logprob: -5.309597015380859
    7. 'ans' → logprob: -5.309597015380859
    8. 'r' → logprob: -6.809597015380859
    9. ' res' → logprob: -7.559597015380859
    10. 'import' → logprob: -7.559597015380859

Token 425: ' une' (ID: 2463)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6084926128387451
    2. '[]' → logprob: -1.6084926128387451
    3. 'ret' → logprob: -2.983492612838745
    4. ' res' → logprob: -2.983492612838745
    5. 'ans' → logprob: -3.233492612838745
    6. 'from' → logprob: -3.358492612838745
    7. 'result' → logprob: -4.108492851257324
    8. 'prev' → logprob: -4.233492851257324
    9. 'r' → logprob: -5.233492851257324
    10. ' ans' → logprob: -5.483492851257324

Token 426: ' liste' (ID: 31719)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cl' → logprob: -1.006771206855774
    2. 'deque' → logprob: -1.006771206855774
    3. 'res' → logprob: -2.1317710876464844
    4. 'result' → logprob: -2.5067710876464844
    5. '[]' → logprob: -3.2567710876464844
    6. 'ret' → logprob: -4.006771087646484
    7. 'it' → logprob: -6.006771087646484
    8. 'lst' → logprob: -6.256771087646484
    9. 'r' → logprob: -6.381771087646484
    10. '=[]' → logprob: -7.256771087646484

Token 427: ' vide' (ID: 21835)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.3350095748901367
    2. ' =' → logprob: -2.5850095748901367
    3. '=' → logprob: -2.8350095748901367
    4. '()' → logprob: -3.4600095748901367
    5. '([]' → logprob: -3.4600095748901367
    6. 'res' → logprob: -3.7100095748901367
    7. '=[]
' → logprob: -3.8350095748901367
    8. '([(' → logprob: -3.9600095748901367
    9. 'result' → logprob: -4.835009574890137
    10. '[]' → logprob: -5.710009574890137

Token 428: ' pour' (ID: 1930)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3968954086303711
    2. '   ' → logprob: -2.521895408630371
    3. 'ret' → logprob: -2.771895408630371
    4. 'result' → logprob: -3.146895408630371
    5. ',' → logprob: -3.396895408630371
    6. '()' → logprob: -3.396895408630371
    7. '=[]' → logprob: -4.646895408630371
    8. 'ans' → logprob: -4.896895408630371
    9. 'r' → logprob: -5.021895408630371
    10. '[]' → logprob: -5.146895408630371

Token 429: ' stock' (ID: 6546)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6770359873771667
    2. 'result' → logprob: -0.9270359873771667
    3. 'rés' → logprob: -3.1770360469818115
    4. ' res' → logprob: -4.427035808563232
    5. 'les' → logprob: -4.552035808563232
    6. 'r' → logprob: -4.552035808563232
    7. 'y' → logprob: -5.052035808563232
    8. 'ret' → logprob: -5.677035808563232
    9. ' result' → logprob: -6.052035808563232
    10. ' y' → logprob: -6.427035808563232

Token 430: 'er' (ID: 259)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.27412182092666626
    2. 'res' → logprob: -2.3991217613220215
    3. '=[]' → logprob: -3.0241217613220215
    4. 'es' → logprob: -3.7741217613220215
    5. ' result' → logprob: -4.7741217613220215
    6. '   ' → logprob: -4.7741217613220215
    7. 'e' → logprob: -5.0241217613220215
    8. 'des' → logprob: -5.0241217613220215
    9. '[]' → logprob: -5.1491217613220215
    10. '=[]
' → logprob: -5.3991217613220215

Token 431: ' le' (ID: 505)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.28953811526298523
    2. 'result' → logprob: -2.0395381450653076
    3. ' res' → logprob: -2.7895381450653076
    4. 'ans' → logprob: -3.7895381450653076
    5. '[]' → logprob: -4.5395379066467285
    6. ' ans' → logprob: -5.1645379066467285
    7. ' result' → logprob: -5.9145379066467285
    8. 'rés' → logprob: -6.0395379066467285
    9. 'r' → logprob: -6.1645379066467285
    10. 'y' → logprob: -6.5395379066467285

Token 432: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.49364280700683594
    2. '[(' → logprob: -1.993642807006836
    3. 'res' → logprob: -2.368642807006836
    4. 'rés' → logprob: -3.243642807006836
    5. ' result' → logprob: -3.368642807006836
    6. ' résultats' → logprob: -3.493642807006836
    7. ' résultat' → logprob: -4.493642807006836
    8. 's' → logprob: -4.993642807006836
    9. '[
' → logprob: -5.118642807006836
    10. ' res' → logprob: -5.118642807006836

Token 433: ' compress' (ID: 34112)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18997026979923248
    2. 'res' → logprob: -2.0649702548980713
    3. ',' → logprob: -3.6899702548980713
    4. 'result' → logprob: -4.93997049331665
    5. ' res' → logprob: -5.56497049331665
    6. '
' → logprob: -6.43997049331665
    7. ' ' → logprob: -6.68997049331665
    8. ' ans' → logprob: -6.93997049331665
    9. 'ret' → logprob: -7.06497049331665
    10. 'ans' → logprob: -7.06497049331665

Token 434: 'é' (ID: 377)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.02861017733812332
    2. 'e' → logprob: -3.9036102294921875
    3. 'é' → logprob: -5.0286102294921875
    4. 'ée' → logprob: -7.1536102294921875
    5. '=[]' → logprob: -8.153610229492188
    6. 'es' → logprob: -9.278610229492188
    7. 'ées' → logprob: -9.653610229492188
    8. 'és' → logprob: -9.653610229492188
    9. 'éd' → logprob: -9.778610229492188
    10. 'ee' → logprob: -10.528610229492188

Token 435: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08598770946264267
    2. 'res' → logprob: -2.5859878063201904
    3. ' res' → logprob: -5.710987567901611
    4. ',' → logprob: -6.835987567901611
    5. 'result' → logprob: -6.835987567901611
    6. 'ret' → logprob: -8.21098804473877
    7. ' ' → logprob: -8.21098804473877
    8. ' ans' → logprob: -8.71098804473877
    9. 'ans' → logprob: -8.71098804473877
    10. '  ' → logprob: -8.96098804473877

Token 436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00655633257701993
    2. 'res' → logprob: -5.256556510925293
    3. ' res' → logprob: -7.631556510925293
    4. 'result' → logprob: -8.506556510925293
    5. ' ' → logprob: -8.881556510925293
    6. ',' → logprob: -9.506556510925293
    7. '  ' → logprob: -9.506556510925293
    8. 'r' → logprob: -9.881556510925293
    9. ' ans' → logprob: -9.881556510925293
    10. '	res' → logprob: -10.006556510925293

Token 437: ' a' (ID: 261)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.30044910311698914
    2. 'ret' → logprob: -2.0504491329193115
    3. 'ans' → logprob: -2.3004491329193115
    4. 'result' → logprob: -4.050448894500732
    5. 'arr' → logprob: -5.550448894500732
    6. 'r' → logprob: -5.675448894500732
    7. 'cl' → logprob: -7.300448894500732
    8. '[]' → logprob: -7.675448894500732
    9. 'lst' → logprob: -7.800448894500732
    10. 'out' → logprob: -8.05044937133789

Token 438: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5691865682601929
    2. ' =' → logprob: -1.3191865682601929
    3. '=[]' → logprob: -2.0691866874694824
    4. ',' → logprob: -3.9441866874694824
    5. '=[]
' → logprob: -3.9441866874694824
    6. '=[' → logprob: -8.069186210632324
    7. '=[]
' → logprob: -8.569186210632324
    8. '=[],' → logprob: -8.694186210632324
    9. ',a' → logprob: -9.319186210632324
    10. ',p' → logprob: -9.694186210632324

Token 439: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06505158543586731
    2. 'cl' → logprob: -2.815051555633545
    3. '[]
' → logprob: -5.940051555633545
    4. '[(' → logprob: -8.440052032470703
    5. ' []' → logprob: -9.190052032470703
    6. '[' → logprob: -9.440052032470703
    7. ' cl' → logprob: -10.565052032470703
    8. '[]

' → logprob: -11.315052032470703
    9. '[]}' → logprob: -12.565052032470703
    10. '[]"' → logprob: -14.065052032470703

Token 440: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09005692601203918
    2. ' for' → logprob: -3.465056896209717
    3. 'for' → logprob: -3.465056896209717
    4. ' if' → logprob: -4.965056896209717
    5. 'n' → logprob: -5.090056896209717
    6. 'if' → logprob: -5.465056896209717
    7. 'def' → logprob: -6.590056896209717
    8. ',' → logprob: -6.965056896209717
    9. 'prev' → logprob: -6.965056896209717
    10. 'i' → logprob: -7.465056896209717

Token 441: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6366807222366333
    2. '   ' → logprob: -1.1366807222366333
    3. 'if' → logprob: -2.7616806030273438
    4. ' for' → logprob: -3.0116806030273438
    5. 'prev' → logprob: -4.636680603027344
    6. 'i' → logprob: -4.886680603027344
    7. ' if' → logprob: -5.386680603027344
    8. 'n' → logprob: -5.761680603027344
    9. 'p' → logprob: -5.761680603027344
    10. ' ' → logprob: -6.261680603027344

Token 442: ' Pr' (ID: 2284)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1519678831100464
    2. 'if' → logprob: -2.776968002319336
    3. 'i' → logprob: -3.526968002319336
    4. 'p' → logprob: -3.901968002319336
    5. 'pre' → logprob: -4.901968002319336
    6. 'prev' → logprob: -5.401968002319336
    7. 'b' → logprob: -5.776968002319336
    8. 'cur' → logprob: -6.526968002319336
    9. 'l' → logprob: -6.776968002319336
    10. ' for' → logprob: -6.776968002319336

Token 443: 'end' (ID: 419)
  Prédit: 'ev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ev' → logprob: -0.22727632522583008
    2. 'e' → logprob: -1.72727632522583
    3. 'eval' → logprob: -4.72727632522583
    4. 'ec' → logprob: -5.35227632522583
    5. 'enumer' → logprob: -5.72727632522583
    6. 'event' → logprob: -6.10227632522583
    7. 'ed' → logprob: -6.10227632522583
    8. 'é' → logprob: -6.35227632522583
    9. 'edef' → logprob: -7.60227632522583
    10. 'edict' → logprob: -7.72727632522583

Token 444: ' le' (ID: 505)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.29245448112487793
    2. '(x' → logprob: -2.417454481124878
    3. ' x' → logprob: -2.792454481124878
    4. 'from' → logprob: -2.917454481124878
    5. 'prev' → logprob: -5.042454719543457
    6. '[x' → logprob: -5.292454719543457
    7. ' (' → logprob: -5.417454719543457
    8. ' from' → logprob: -5.667454719543457
    9. 'le' → logprob: -5.792454719543457
    10. 'l' → logprob: -5.917454719543457

Token 445: ' premier' (ID: 15506)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6184821724891663
    2. 'from' → logprob: -1.7434821128845215
    3. 'for' → logprob: -2.4934821128845215
    4. 'it' → logprob: -2.6184821128845215
    5. 'prev' → logprob: -3.6184821128845215
    6. 'i' → logprob: -3.9934821128845215
    7. '_' → logprob: -4.7434821128845215
    8. ' from' → logprob: -5.1184821128845215
    9. 'iter' → logprob: -5.1184821128845215
    10. 'current' → logprob: -5.4934821128845215

Token 446: ' élément' (ID: 99627)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3204644918441772
    2. 'élé' → logprob: -1.9454644918441772
    3. ' if' → logprob: -1.9454644918441772
    4. 'element' → logprob: -2.445464611053467
    5. ' element' → logprob: -2.820464611053467
    6. 'prev' → logprob: -2.820464611053467
    7. 'x' → logprob: -3.570464611053467
    8. 'v' → logprob: -3.695464611053467
    9. 'c' → logprob: -3.945464611053467
    10. 'elem' → logprob: -4.070464611053467

Token 447: ' comme' (ID: 7971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6605486869812012
    2. ',' → logprob: -1.1605486869812012
    3. 'x' → logprob: -2.285548686981201
    4. ' x' → logprob: -3.910548686981201
    5. ' de' → logprob: -4.160548686981201
    6. ' =' → logprob: -5.035548686981201
    7. ' ,' → logprob: -5.285548686981201
    8. 'e' → logprob: -5.285548686981201
    9. ' y' → logprob: -5.910548686981201
    10. 's' → logprob: -6.535548686981201

Token 448: ' élément' (ID: 99627)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.66824871301651
    2. 'prev' → logprob: -2.1682486534118652
    3. 'x' → logprob: -2.4182486534118652
    4. 'y' → logprob: -2.9182486534118652
    5. 'p' → logprob: -3.6682486534118652
    6. 'c' → logprob: -3.7932486534118652
    7. 'val' → logprob: -3.7932486534118652
    8. 'last' → logprob: -3.7932486534118652
    9. 'b' → logprob: -3.9182486534118652
    10. 'cur' → logprob: -4.168248653411865

Token 449: ' courant' (ID: 74694)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.07729055732488632
    2. 'cour' → logprob: -3.4522905349731445
    3. 'cur' → logprob: -4.2022905349731445
    4. '   ' → logprob: -4.7022905349731445
    5. ' précédent' → logprob: -4.9522905349731445
    6. 'prev' → logprob: -5.5772905349731445
    7. 'current' → logprob: -5.8272905349731445
    8. ' courant' → logprob: -7.0772905349731445
    9. 'pré' → logprob: -7.0772905349731445
    10. 'preced' → logprob: -7.3272905349731445

Token 450: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04403971880674362
    2. ',' → logprob: -3.294039726257324
    3. 'v' → logprob: -6.544039726257324
    4. ' if' → logprob: -7.044039726257324
    5. ' cur' → logprob: -7.669039726257324
    6. 'cur' → logprob: -7.919039726257324
    7. 'prev' → logprob: -7.919039726257324
    8. 'if' → logprob: -8.419039726257324
    9. 't' → logprob: -8.544039726257324
    10. 'e' → logprob: -8.669039726257324

Token 451: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.34426361322402954
    2. 'com' → logprob: -1.3442635536193848
    3. 'part' → logprob: -4.594263553619385
    4. 'val' → logprob: -5.219263553619385
    5. 'trait' → logprob: -5.344263553619385
    6. 'su' → logprob: -5.719263553619385
    7. 'x' → logprob: -6.844263553619385
    8. 'a' → logprob: -7.094263553619385
    9. ' compter' → logprob: -7.094263553619385
    10. 'count' → logprob: -7.344263553619385

Token 452: 'resser' (ID: 48872)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.12832120060920715
    2. 'ré' → logprob: -3.7533211708068848
    3. 'rés' → logprob: -3.8783211708068848
    4. 'ur' → logprob: -4.003321170806885
    5. 'a' → logprob: -4.753321170806885
    6. 'rev' → logprob: -4.878321170806885
    7. 'urer' → logprob: -5.253321170806885
    8. 'rès' → logprob: -5.753321170806885
    9. ' =' → logprob: -5.878321170806885
    10. 'urr' → logprob: -6.003321170806885

Token 453: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06686320155858994
    2. 'c' → logprob: -4.316863059997559
    3. 'v' → logprob: -4.816863059997559
    4. ' c' → logprob: -4.941863059997559
    5. 'e' → logprob: -5.066863059997559
    6. ' cur' → logprob: -5.441863059997559
    7. 't' → logprob: -5.566863059997559
    8. ' t' → logprob: -5.816863059997559
    9. 'cur' → logprob: -5.816863059997559
    10. ' y' → logprob: -6.191863059997559

Token 454: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05844367295503616
    2. ',' → logprob: -3.433443784713745
    3. ' cur' → logprob: -4.933443546295166
    4. ' ,' → logprob: -5.808443546295166
    5. ' current' → logprob: -5.933443546295166
    6. ' c' → logprob: -5.933443546295166
    7. ' x' → logprob: -6.683443546295166
    8. 'c' → logprob: -6.808443546295166
    9. '	c' → logprob: -7.308443546295166
    10. 'x' → logprob: -7.433443546295166

Token 455: ' aa' (ID: 40260)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.4034589529037476
    2. 'cur' → logprob: -1.4034589529037476
    3. 'now' → logprob: -1.4034589529037476
    4. 'p' → logprob: -3.153459072113037
    5. 'w' → logprob: -3.653459072113037
    6. 'q' → logprob: -3.778459072113037
    7. 't' → logprob: -3.778459072113037
    8. 'pre' → logprob: -3.778459072113037
    9. 'y' → logprob: -4.028459072113037
    10. 'v' → logprob: -4.028459072113037

Token 456: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3514263331890106
    2. ' =' → logprob: -1.226426362991333
    3. '=x' → logprob: -6.476426124572754
    4. ',' → logprob: -6.601426124572754
    5. ' ' → logprob: -10.851426124572754
    6. 'x' → logprob: -11.351426124572754
    7. ',x' → logprob: -11.601426124572754
    8. '=
' → logprob: -12.101426124572754
    9. '=a' → logprob: -12.101426124572754
    10. '   ' → logprob: -12.226426124572754

Token 457: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002993155037984252
    2. ' x' → logprob: -5.877993106842041
    3. 'None' → logprob: -8.6279935836792
    4. ' None' → logprob: -11.8779935836792
    5. '0' → logprob: -14.2529935836792
    6. '	x' → logprob: -14.8779935836792
    7. ' ' → logprob: -15.0029935836792
    8. '(x' → logprob: -15.1279935836792
    9. '"x' → logprob: -15.3779935836792
    10. '   ' → logprob: -16.252992630004883

Token 458: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00017028623551595956
    2. '   ' → logprob: -9.750170707702637
    3. '=' → logprob: -10.625170707702637
    4. ',' → logprob: -10.875170707702637
    5. '.pop' → logprob: -11.125170707702637
    6. ' =' → logprob: -11.250170707702637
    7. '0' → logprob: -11.250170707702637
    8. ' ' → logprob: -12.250170707702637
    9. ' [' → logprob: -12.750170707702637
    10. 'def' → logprob: -12.750170707702637

Token 459: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4378848391061183e-05
    2. ' ' → logprob: -11.250014305114746
    3. '[' → logprob: -14.500014305114746
    4. '   ' → logprob: -15.812514305114746
    5. ':' → logprob: -15.875014305114746
    6. '
' → logprob: -16.312515258789062
    7. '00' → logprob: -17.000015258789062
    8. '-' → logprob: -17.312515258789062
    9. '1' → logprob: -17.437515258789062
    10. '#' → logprob: -17.500015258789062

Token 460: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6937460899353027
    2. ']
' → logprob: -0.6937460899353027
    3. ']
' → logprob: -8.443746566772461
    4. ' ]
' → logprob: -8.818746566772461
    5. ' ]' → logprob: -9.443746566772461
    6. '   ' → logprob: -9.568746566772461
    7. ',' → logprob: -10.568746566772461
    8. ' ' → logprob: -10.693746566772461
    9. ')' → logprob: -11.693746566772461
    10. ')
' → logprob: -11.818746566772461

Token 461: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06734934449195862
    2. 'count' → logprob: -4.317349433898926
    3. 'cnt' → logprob: -4.317349433898926
    4. ',' → logprob: -4.567349433898926
    5. 'a' → logprob: -4.817349433898926
    6. ' count' → logprob: -4.942349433898926
    7. ' cnt' → logprob: -5.817349433898926
    8. ' a' → logprob: -6.567349433898926
    9. 'c' → logprob: -6.692349433898926
    10. '	count' → logprob: -6.817349433898926

Token 462: ' #' (ID: 1069)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.3343462646007538
    2. 'count' → logprob: -2.459346294403076
    3. '   ' → logprob: -2.584346294403076
    4. 'c' → logprob: -3.084346294403076
    5. 'ac' → logprob: -3.334346294403076
    6. ' cnt' → logprob: -3.709346294403076
    7. ' c' → logprob: -5.584346294403076
    8. ' count' → logprob: -5.584346294403076
    9. 'n' → logprob: -6.334346294403076
    10. 'a' → logprob: -6.709346294403076

Token 463: ' Initialise' (ID: 179601)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -1.1780476570129395
    2. 'c' → logprob: -1.5530476570129395
    3. 'cnt' → logprob: -1.5530476570129395
    4. 'count' → logprob: -2.4280476570129395
    5. 'num' → logprob: -3.5530476570129395
    6. 'co' → logprob: -3.5530476570129395
    7. 'n' → logprob: -3.9280476570129395
    8. 'bb' → logprob: -4.1780476570129395
    9. 'cou' → logprob: -4.4280476570129395
    10. 'nu' → logprob: -4.6780476570129395

Token 464: ' le' (ID: 505)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.7128798961639404
    2. 'count' → logprob: -1.7128798961639404
    3. 'ac' → logprob: -2.0878798961639404
    4. 'c' → logprob: -2.3378798961639404
    5. 'k' → logprob: -3.7128798961639404
    6. 'n' → logprob: -3.7128798961639404
    7. 'q' → logprob: -4.4628801345825195
    8. ' cnt' → logprob: -5.2128801345825195
    9. 'a' → logprob: -5.3378801345825195
    10. 'an' → logprob: -5.4628801345825195

Token 465: ' compteur' (ID: 163344)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.5107547640800476
    2. 'count' → logprob: -1.5107548236846924
    3. 'c' → logprob: -2.0107548236846924
    4. 'n' → logprob: -5.010754585266113
    5. 'ac' → logprob: -5.010754585266113
    6. ' cnt' → logprob: -5.385754585266113
    7. ' count' → logprob: -5.510754585266113
    8. 'comp' → logprob: -5.510754585266113
    9. 'k' → logprob: -5.635754585266113
    10. ' c' → logprob: -6.135754585266113

Token 466: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6341654658317566
    2. ' =' → logprob: -1.0091655254364014
    3. 'cnt' → logprob: -2.8841655254364014
    4. '   ' → logprob: -4.259165287017822
    5. ' cnt' → logprob: -4.259165287017822
    6. 'count' → logprob: -5.384165287017822
    7. 'a' → logprob: -5.384165287017822
    8. ' a' → logprob: -6.259165287017822
    9. ' à' → logprob: -6.259165287017822
    10. ' count' → logprob: -6.384165287017822

Token 467: ' le' (ID: 505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14348351955413818
    2. ' ' → logprob: -2.0184836387634277
    3. ' aa' → logprob: -8.39348316192627
    4. 'aa' → logprob: -9.01848316192627
    5. ' le' → logprob: -9.14348316192627
    6. ' cnt' → logprob: -10.26848316192627
    7. 'count' → logprob: -10.39348316192627
    8. ' compter' → logprob: -10.39348316192627
    9. '0' → logprob: -10.51848316192627
    10. ' un' → logprob: -10.64348316192627

Token 468: ' nombre' (ID: 9733)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.32004353404045105
    2. 'comp' → logprob: -1.5700435638427734
    3. 'nombre' → logprob: -3.4450435638427734
    4. 'aa' → logprob: -4.695043563842773
    5. ' ' → logprob: -5.570043563842773
    6. 'cnt' → logprob: -5.695043563842773
    7. ' nombre' → logprob: -5.820043563842773
    8. 'prem' → logprob: -5.820043563842773
    9. ' aa' → logprob: -5.945043563842773
    10. 'count' → logprob: -6.070043563842773

Token 469: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.625271201133728
    2. '=' → logprob: -1.750271201133728
    3. 'de' → logprob: -1.875271201133728
    4. ' de' → logprob: -2.0002713203430176
    5. ' =' → logprob: -2.3752713203430176
    6. 'aa' → logprob: -3.0002713203430176
    7. 'd' → logprob: -3.1252713203430176
    8. '   ' → logprob: -3.2502713203430176
    9. ' d' → logprob: -3.7502713203430176
    10. ' aa' → logprob: -3.7502713203430176

Token 470: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.757032573223114
    2. '<|end|>' → logprob: -1.6320326328277588
    3. '_con' → logprob: -2.257032632827759
    4. '_' → logprob: -2.632032632827759
    5. ' aa' → logprob: -3.382032632827759
    6. '_current' → logprob: -4.00703239440918
    7. 'con' → logprob: -4.13203239440918
    8. ' current' → logprob: -4.25703239440918
    9. 'aa' → logprob: -4.88203239440918
    10. ' consecutive' → logprob: -4.88203239440918

Token 471: 'élé' (ID: 15228)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.30257636308670044
    2. ' aa' → logprob: -1.4275763034820557
    3. ' ' → logprob: -4.177576541900635
    4. 'con' → logprob: -6.552576541900635
    5. '1' → logprob: -7.052576541900635
    6. ' repetitions' → logprob: -7.427576541900635
    7. ' a' → logprob: -7.677576541900635
    8. 'a' → logprob: -7.927576541900635
    9. ' cons' → logprob: -7.927576541900635
    10. ' fois' → logprob: -8.177576065063477

Token 472: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.0002060436672763899
    2. 'm' → logprob: -9.125205993652344
    3. 'ements' → logprob: -10.250205993652344
    4. 'éments' → logprob: -10.375205993652344
    5. 'ment' → logprob: -10.875205993652344
    6. 'MENTS' → logprob: -12.750205993652344
    7. 'nements' → logprob: -14.125205993652344
    8. '```' → logprob: -14.125205993652344
    9. '#' → logprob: -14.250205993652344
    10. 'e' → logprob: -14.375205993652344

Token 473: ' cons' (ID: 1473)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -1.2657097578048706
    2. '   ' → logprob: -1.3907097578048706
    3. ' cons' → logprob: -1.6407097578048706
    4. 'aa' → logprob: -2.01570987701416
    5. ' ' → logprob: -3.51570987701416
    6. ' aa' → logprob: -3.76570987701416
    7. 'cnt' → logprob: -4.26570987701416
    8. 'cons' → logprob: -4.26570987701416
    9. 'cour' → logprob: -4.39070987701416
    10. 'cont' → logprob: -4.64070987701416

Token 474: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0007416110602207482
    2. 'éc' → logprob: -8.250741958618164
    3. 'é' → logprob: -8.500741958618164
    4. 'ecut' → logprob: -8.625741958618164
    5. 't' → logprob: -11.000741958618164
    6. 'équ' → logprob: -11.250741958618164
    7. 'q' → logprob: -11.500741958618164
    8. 'secut' → logprob: -11.875741958618164
    9. '__' → logprob: -11.875741958618164
    10. 'cut' → logprob: -12.000741958618164

Token 475: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.0628499835729599
    2. 'if' → logprob: -3.437849998474121
    3. 's' → logprob: -4.687849998474121
    4. '   ' → logprob: -5.437849998474121
    5. 'a' → logprob: -5.562849998474121
    6. ' ' → logprob: -5.687849998474121
    7. 'ieux' → logprob: -6.812849998474121
    8. 'atifs' → logprob: -6.812849998474121
    9. 'és' → logprob: -6.937849998474121
    10. 'airs' → logprob: -7.437849998474121

Token 476: ' ident' (ID: 3951)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.8459222316741943
    2. 'aa' → logprob: -1.4709222316741943
    3. ' cnt' → logprob: -2.4709222316741943
    4. ' ' → logprob: -2.7209222316741943
    5. ' aa' → logprob: -2.7209222316741943
    6. '   ' → logprob: -3.0959222316741943
    7. 'count' → logprob: -3.7209222316741943
    8. 'a' → logprob: -4.595922470092773
    9. '=' → logprob: -4.970922470092773
    10. ' =' → logprob: -4.970922470092773

Token 477: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.00047416388406418264
    2. 'ique' → logprob: -7.875473976135254
    3. 'ques' → logprob: -9.500473976135254
    4. 'que' → logprob: -12.000473976135254
    5. 'tiques' → logprob: -12.875473976135254
    6. '```' → logprob: -13.000473976135254
    7. 'iqu' → logprob: -13.750473976135254
    8. '#' → logprob: -14.000473976135254
    9. 't' → logprob: -14.125473976135254
    10. '``' → logprob: -14.375473976135254

Token 478: '
' (ID: 198)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.17330242693424225
    2. ' cnt' → logprob: -2.423302412033081
    3. '   ' → logprob: -3.298302412033081
    4. ',' → logprob: -4.67330265045166
    5. 'count' → logprob: -5.42330265045166
    6. ' ' → logprob: -5.54830265045166
    7. 'c' → logprob: -5.67330265045166
    8. ' c' → logprob: -6.29830265045166
    9. '	cnt' → logprob: -6.42330265045166
    10. ' =' → logprob: -6.42330265045166

Token 479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7832021713256836
    2. ' =' → logprob: -1.6582021713256836
    3. '=' → logprob: -2.0332021713256836
    4. ' ' → logprob: -2.9082021713256836
    5. 'count' → logprob: -3.5332021713256836
    6. 'cnt' → logprob: -3.6582021713256836
    7. ',' → logprob: -3.7832021713256836
    8. ' count' → logprob: -3.7832021713256836
    9. ' cnt' → logprob: -3.9082021713256836
    10. ' i' → logprob: -4.033202171325684

Token 480: ' su' (ID: 593)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6980650424957275
    2. 'cnt' → logprob: -1.4480650424957275
    3. 'count' → logprob: -2.3230650424957275
    4. 'ac' → logprob: -3.1980650424957275
    5. 'num' → logprob: -3.4480650424957275
    6. 'n' → logprob: -4.198064804077148
    7. 'b' → logprob: -4.698064804077148
    8. 'ca' → logprob: -4.948064804077148
    9. 'now' → logprob: -5.323064804077148
    10. 'ct' → logprob: -5.323064804077148

Token 481: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07012738287448883
    2. 'm' → logprob: -2.820127487182617
    3. ' =' → logprob: -4.820127487182617
    4. 'mm' → logprob: -10.445127487182617
    5. '=m' → logprob: -11.570127487182617
    6. 'r' → logprob: -12.195127487182617
    7. '   ' → logprob: -12.320127487182617
    8. 'ma' → logprob: -12.820127487182617
    9. ' ' → logprob: -13.195127487182617
    10. 'b' → logprob: -13.445127487182617

Token 482: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030654144939035177
    2. '0' → logprob: -5.878065586090088
    3. ' ' → logprob: -8.25306510925293
    4. ' ' → logprob: -18.06556510925293
    5. '   ' → logprob: -18.94056510925293
    6. '  ' → logprob: -19.25306510925293
    7. '１' → logprob: -19.50306510925293
    8. '01' → logprob: -19.69056510925293
    9. '```' → logprob: -19.81556510925293
    10. '=' → logprob: -19.87806510925293

Token 483: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006432149093598127
    2. '0' → logprob: -7.375643253326416
    3. ' ' → logprob: -11.000642776489258
    4. '   ' → logprob: -18.500642776489258
    5. ' ' → logprob: -18.500642776489258
    6. '１' → logprob: -18.813142776489258
    7. '01' → logprob: -19.250642776489258
    8. '=' → logprob: -19.563142776489258
    9. '  ' → logprob: -20.000642776489258
    10. '	' → logprob: -20.188142776489258

Token 484: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.722951352596283
    2. '
' → logprob: -0.847951352596283
    3. ' for' → logprob: -2.8479514122009277
    4. 'for' → logprob: -4.097951412200928
    5. '	for' → logprob: -4.722951412200928
    6. '	
' → logprob: -7.347951412200928
    7. '  
' → logprob: -7.597951412200928
    8. '    
' → logprob: -7.722951412200928
    9. ' 
' → logprob: -7.847951412200928
    10. '\n' → logprob: -8.34795093536377

Token 485: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03144555538892746
    2. ' for' → logprob: -4.281445503234863
    3. '	for' → logprob: -4.656445503234863
    4. '
' → logprob: -5.531445503234863
    5. 'for' → logprob: -5.906445503234863
    6. '	
' → logprob: -8.281445503234863
    7. '    
' → logprob: -8.531445503234863
    8. ' ' → logprob: -8.781445503234863
    9. '  ' → logprob: -9.406445503234863
    10. '\t' → logprob: -9.531445503234863

Token 486: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4406099319458008
    2. 'for' → logprob: -1.8156099319458008
    3. '
' → logprob: -2.065609931945801
    4. '   ' → logprob: -3.815609931945801
    5. ' ' → logprob: -3.815609931945801
    6. '	for' → logprob: -4.690609931945801
    7. ' 
' → logprob: -5.065609931945801
    8. '\n' → logprob: -5.690609931945801
    9. '  
' → logprob: -6.940609931945801
    10. '	
' → logprob: -7.440609931945801

Token 487: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015031944494694471
    2. ' for' → logprob: -6.501502990722656
    3. 'i' → logprob: -14.501502990722656
    4. 'n' → logprob: -15.751502990722656
    5. '   ' → logprob: -16.626502990722656
    6. '	for' → logprob: -16.626502990722656
    7. 'fo' → logprob: -17.001502990722656
    8. ' i' → logprob: -17.376502990722656
    9. ' ' → logprob: -18.126502990722656
    10. 'from' → logprob: -19.501502990722656

Token 488: 'ourt' (ID: 38600)
  Prédit: 'ours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.7693967819213867
    2. 'our' → logprob: -0.8943967819213867
    3. 'ourt' → logprob: -2.2693967819213867
    4. 'for' → logprob: -4.769396781921387
    5. 's' → logprob: -5.394396781921387
    6. 'o' → logprob: -6.144396781921387
    7. 'i' → logprob: -6.144396781921387
    8. 'er' → logprob: -6.644396781921387
    9. 'e' → logprob: -6.894396781921387
    10. 'ou' → logprob: -7.144396781921387

Token 489: ' la' (ID: 557)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.23412369191646576
    2. ' x' → logprob: -1.734123706817627
    3. 'range' → logprob: -3.859123706817627
    4. 'x' → logprob: -4.734123706817627
    5. ' i' → logprob: -6.359123706817627
    6. ' ' → logprob: -8.109123229980469
    7. ' xrange' → logprob: -9.484123229980469
    8. 'i' → logprob: -9.859123229980469
    9. ' for' → logprob: -9.859123229980469
    10. '_' → logprob: -10.859123229980469

Token 490: ' liste' (ID: 31719)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16334526240825653
    2. ' range' → logprob: -2.2883453369140625
    3. 'x' → logprob: -3.0383453369140625
    4. ' x' → logprob: -6.6633453369140625
    5. 'for' → logprob: -9.788345336914062
    6. ' for' → logprob: -11.788345336914062
    7. ' xrange' → logprob: -12.538345336914062
    8. '1' → logprob: -13.163345336914062
    9. ' ' → logprob: -13.413345336914062
    10. 'len' → logprob: -13.538345336914062

Token 491: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7061651349067688
    2. 'for' → logprob: -0.7061651349067688
    3. ' range' → logprob: -5.081165313720703
    4. 'range' → logprob: -5.956165313720703
    5. '   ' → logprob: -7.081165313720703
    6. 'x' → logprob: -7.331165313720703
    7. '	for' → logprob: -7.331165313720703
    8. '(range' → logprob: -7.706165313720703
    9. '(x' → logprob: -7.831165313720703
    10. ' x' → logprob: -8.206165313720703

Token 492: ' l' (ID: 305)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5884780287742615
    2. 'range' → logprob: -0.8384780287742615
    3. 'x' → logprob: -4.588478088378906
    4. ' x' → logprob: -6.088478088378906
    5. 'i' → logprob: -11.463478088378906
    6. ' ' → logprob: -12.338478088378906
    7. ' i' → logprob: -12.838478088378906
    8. ' xrange' → logprob: -13.088478088378906
    9. '1' → logprob: -13.213478088378906
    10. '(range' → logprob: -15.088478088378906

Token 493: ''' (ID: 6)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.685986340045929
    2. 'en' → logprob: -0.935986340045929
    3. 'x' → logprob: -3.060986280441284
    4. 'a' → logprob: -3.935986280441284
    5. 'ong' → logprob: -4.435986518859863
    6. 'ength' → logprob: -4.560986518859863
    7. 'ange' → logprob: -5.435986518859863
    8. '[' → logprob: -5.810986518859863
    9. ' range' → logprob: -6.060986518859863
    10. 'e' → logprob: -7.185986518859863

Token 494: 'index' (ID: 2257)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17186115682125092
    2. 'range' → logprob: -2.421861171722412
    3. 'x' → logprob: -3.046861171722412
    4. '2' → logprob: -5.171861171722412
    5. 'i' → logprob: -5.421861171722412
    6. 'de' → logprob: -5.671861171722412
    7. 'index' → logprob: -6.171861171722412
    8. '[' → logprob: -6.546861171722412
    9. ' range' → logprob: -7.171861171722412
    10. 'indice' → logprob: -7.671861171722412

Token 495: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.039282649755477905
    2. 'range' → logprob: -4.53928279876709
    3. ' range' → logprob: -4.66428279876709
    4. '1' → logprob: -4.91428279876709
    5. 's' → logprob: -5.28928279876709
    6. ' (' → logprob: -6.16428279876709
    7. ',' → logprob: -7.28928279876709
    8. ' ' → logprob: -7.53928279876709
    9. ' =' → logprob: -7.53928279876709
    10. '=' → logprob: -7.78928279876709

Token 496: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22811146080493927
    2. ' range' → logprob: -1.7281115055084229
    3. '1' → logprob: -3.978111505508423
    4. '(' → logprob: -5.228111267089844
    5. '(range' → logprob: -7.353111267089844
    6. 'i' → logprob: -7.978111267089844
    7. ' i' → logprob: -7.978111267089844
    8. ' ' → logprob: -8.103111267089844
    9. 'for' → logprob: -9.103111267089844
    10. '
' → logprob: -9.103111267089844

Token 497: ' à' (ID: 1221)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09186480194330215
    2. '1' → logprob: -2.716864824295044
    3. ' +' → logprob: -4.341864585876465
    4. ',' → logprob: -5.341864585876465
    5. 'range' → logprob: -6.216864585876465
    6. ':' → logprob: -7.841864585876465
    7. 'for' → logprob: -7.966864585876465
    8. '[' → logprob: -8.091864585876465
    9. ' range' → logprob: -8.591864585876465
    10. '
' → logprob: -9.216864585876465

Token 498: ' l' (ID: 305)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.31462961435317993
    2. ' len' → logprob: -1.5646295547485352
    3. '1' → logprob: -2.814629554748535
    4. ' ' → logprob: -7.189629554748535
    5. '(len' → logprob: -10.314629554748535
    6. '
' → logprob: -11.814629554748535
    7. '0' → logprob: -11.939629554748535
    8. '  ' → logprob: -12.189629554748535
    9. '	len' → logprob: -12.189629554748535
    10. '[len' → logprob: -12.314629554748535

Token 499: ''avant' (ID: 161711)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6092529296875
    2. 'en' → logprob: -1.2342529296875
    3. 'ength' → logprob: -2.4842529296875
    4. 'len' → logprob: -3.1092529296875
    5. '+' → logprob: -3.9842529296875
    6. '-' → logprob: -4.8592529296875
    7. 'ent' → logprob: -5.8592529296875
    8. 'e' → logprob: -6.4842529296875
    9. ' len' → logprob: -6.6092529296875
    10. '[len' → logprob: -6.7342529296875

Token 500: '-' (ID: 12)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7807631492614746
    2. '+' → logprob: -1.2807631492614746
    3. '-' → logprob: -1.5307631492614746
    4. ' -' → logprob: -3.9057631492614746
    5. ' +' → logprob: -4.780763149261475
    6. ' i' → logprob: -4.905763149261475
    7. 'i' → logprob: -5.780763149261475
    8. ' ' → logprob: -5.780763149261475
    9. 's' → logprob: -6.280763149261475
    10. 'ure' → logprob: -6.530763149261475

Token 501: 'dern' (ID: 19098)
  Prédit: 'dern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.041566554456949234
    2. 'der' → logprob: -3.9165666103363037
    3. '1' → logprob: -4.416566371917725
    4. '-' → logprob: -4.916566371917725
    5. 'len' → logprob: -7.291566371917725
    6. 'last' → logprob: -7.916566371917725
    7. '`' → logprob: -9.166566848754883
    8. '```' → logprob: -9.666566848754883
    9. 'i' → logprob: -10.416566848754883
    10. ' ' → logprob: -11.291566848754883

Token 502: 'ier' (ID: 905)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.09616789221763611
    2. 'der' → logprob: -2.596167802810669
    3. '-' → logprob: -4.096168041229248
    4. '```' → logprob: -8.09616756439209
    5. ' ' → logprob: -9.34616756439209
    6. ' dernier' → logprob: -10.97116756439209
    7. '_der' → logprob: -11.34616756439209
    8. 'ier' → logprob: -11.47116756439209
    9. 'i' → logprob: -11.72116756439209
    10. '
' → logprob: -11.84616756439209

Token 503: ' index' (ID: 3472)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.27667519450187683
    2. 'for' → logprob: -2.526675224304199
    3. ':' → logprob: -2.901675224304199
    4. ' for' → logprob: -3.276675224304199
    5. ' +' → logprob: -4.026675224304199
    6. '1' → logprob: -4.276675224304199
    7. ':
' → logprob: -4.526675224304199
    8. ',' → logprob: -5.401675224304199
    9. ' i' → logprob: -5.526675224304199
    10. 'range' → logprob: -5.526675224304199

Token 504: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2575913071632385
    2. 'for' → logprob: -1.6325912475585938
    3. '   ' → logprob: -4.007591247558594
    4. '
' → logprob: -5.507591247558594
    5. ' range' → logprob: -5.632591247558594
    6. ',' → logprob: -6.257591247558594
    7. '	for' → logprob: -6.507591247558594
    8. 'range' → logprob: -6.632591247558594
    9. ':' → logprob: -8.132591247558594
    10. ' ' → logprob: -8.257591247558594

Token 505: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3826746344566345
    2. '   ' → logprob: -1.6326746940612793
    3. 'for' → logprob: -2.2576746940612793
    4. '
' → logprob: -4.507674694061279
    5. '	for' → logprob: -6.007674694061279
    6. ',' → logprob: -6.382674694061279
    7. ' range' → logprob: -7.507674694061279
    8. ' ' → logprob: -7.757674694061279
    9. '\n' → logprob: -8.507674217224121
    10. ':' → logprob: -8.507674217224121

Token 506: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5764867663383484
    2. 'for' (adapté à ' for') → logprob: -0.8264867663383484
    3. '   ' → logprob: -8.076486587524414
    4. ' range' → logprob: -9.201486587524414
    5. '	for' → logprob: -9.326486587524414
    6. 'range' → logprob: -11.076486587524414
    7. '
' → logprob: -11.201486587524414
    8. ' ' → logprob: -12.576486587524414
    9. ' ' → logprob: -12.951486587524414
    10. ' i' → logprob: -13.076486587524414

Token 507: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03366483002901077
    2. ' i' → logprob: -3.4086649417877197
    3. '_' → logprob: -12.15866470336914
    4. '_i' → logprob: -12.28366470336914
    5. '	i' → logprob: -12.53366470336914
    6. ' ' → logprob: -12.78366470336914
    7. 'I' → logprob: -13.78366470336914
    8. 'ii' → logprob: -15.15866470336914
    9. 'e' → logprob: -15.28366470336914
    10. '   ' → logprob: -15.40866470336914

Token 508: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026498496532440186
    2. 'in' → logprob: -3.651498556137085
    3. ' ' → logprob: -9.026498794555664
    4. '1' → logprob: -10.151498794555664
    5. ',' → logprob: -11.776498794555664
    6. '	in' → logprob: -11.776498794555664
    7. '  ' → logprob: -11.901498794555664
    8. ' i' → logprob: -12.901498794555664
    9. 'range' → logprob: -12.901498794555664
    10. '+' → logprob: -12.901498794555664

Token 509: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889385521411896
    2. ' range' → logprob: -2.5788938999176025
    3. ' ' → logprob: -12.578893661499023
    4. '	range' → logprob: -15.453893661499023
    5. '   ' → logprob: -15.703893661499023
    6. '  ' → logprob: -15.703893661499023
    7. 'ra' → logprob: -16.953893661499023
    8. '(range' → logprob: -17.453893661499023
    9. '[' → logprob: -17.578893661499023
    10. 'x' → logprob: -17.828893661499023

Token 510: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.4741118848323822
    2. '(' → logprob: -0.9741119146347046
    3. '1' → logprob: -10.849111557006836
    4. 'len' → logprob: -11.099111557006836
    5. '(
' → logprob: -15.974111557006836
    6. ' len' → logprob: -16.849111557006836
    7. ' (' → logprob: -17.224111557006836
    8. '(l' → logprob: -18.599111557006836
    9. ',len' → logprob: -19.099111557006836
    10. '	len' → logprob: -19.099111557006836

Token 511: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00010664248111424968
    2. '(' → logprob: -9.750106811523438
    3. 'x' → logprob: -10.000106811523438
    4. '(
' → logprob: -13.375106811523438
    5. ' x' → logprob: -14.000106811523438
    6. '(a' → logprob: -15.625106811523438
    7. ' (' → logprob: -15.625106811523438
    8. 'a' → logprob: -16.500106811523438
    9. ' ' → logprob: -17.125106811523438
    10. '(s' → logprob: -17.250106811523438

Token 512: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.4789358973503113
    2. ')' → logprob: -0.9789358973503113
    3. '-' → logprob: -5.478935718536377
    4. '()-' → logprob: -8.478936195373535
    5. ' -' → logprob: -8.728936195373535
    6. ' )' → logprob: -9.228936195373535
    7. '1' → logprob: -9.853936195373535
    8. ' ' → logprob: -9.978936195373535
    9. '()' → logprob: -10.228936195373535
    10. 'x' → logprob: -10.853936195373535

Token 513: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.75009536743164
    4. '  ' → logprob: -19.12509536743164
    5. '１' → logprob: -19.37509536743164
    6. '2' → logprob: -20.18759536743164
    7. '' → logprob: -20.31259536743164
    8. '
' → logprob: -20.43759536743164
    9. ' ' → logprob: -20.43759536743164
    10. '    ' → logprob: -20.43759536743164

Token 514: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02276841178536415
    2. '):
' → logprob: -4.147768497467041
    3. ' ):' → logprob: -5.022768497467041
    4. ' ):
' → logprob: -9.772768020629883
    5. ')' → logprob: -9.897768020629883
    6. '):
' → logprob: -11.147768020629883
    7. ':' → logprob: -13.772768020629883
    8. ' ' → logprob: -14.272768020629883
    9. '   ' → logprob: -14.522768020629883
    10. ' )' → logprob: -15.022768020629883

Token 515: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16477088630199432
    2. '       ' → logprob: -2.0397708415985107
    3. ' if' → logprob: -5.03977108001709
    4. '    ' → logprob: -5.41477108001709
    5. '	if' → logprob: -5.66477108001709
    6. '	' → logprob: -6.16477108001709
    7. ',' → logprob: -6.53977108001709
    8. ' ' → logprob: -6.78977108001709
    9. '<|end|>' → logprob: -7.41477108001709
    10. '	   ' → logprob: -7.91477108001709

Token 516: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18072357773780823
    2. ' if' → logprob: -1.9307235479354858
    3. '	if' → logprob: -4.680723667144775
    4. '       ' → logprob: -5.555723667144775
    5. 'if' → logprob: -6.430723667144775
    6. ' ' → logprob: -6.555723667144775
    7. '    ' → logprob: -6.555723667144775
    8. '
' → logprob: -7.055723667144775
    9. '    
' → logprob: -7.930723667144775
    10. '\t' → logprob: -8.555723190307617

Token 517: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04389061778783798
    2. ' if' → logprob: -3.1688907146453857
    3. '   ' → logprob: -7.543890476226807
    4. ' ' → logprob: -9.043890953063965
    5. 'b' → logprob: -9.418890953063965
    6. 'j' → logprob: -9.918890953063965
    7. '	if' → logprob: -9.918890953063965
    8. 'i' → logprob: -10.293890953063965
    9. ' j' → logprob: -11.918890953063965
    10. 'n' → logprob: -13.043890953063965

Token 518: 'ifie' (ID: 46409)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1289377510547638
    2. ' if' → logprob: -3.0039377212524414
    3. '   ' → logprob: -3.1289377212524414
    4. 'i' → logprob: -4.753937721252441
    5. '       ' → logprob: -5.128937721252441
    6. 'er' → logprob: -5.378937721252441
    7. 'ifie' → logprob: -5.503937721252441
    8. ' x' → logprob: -6.753937721252441
    9. ' i' → logprob: -7.003937721252441
    10. 'x' → logprob: -7.378937721252441

Token 519: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2450622171163559
    2. ' x' → logprob: -1.745062232017517
    3. 'x' → logprob: -3.9950621128082275
    4. 'if' → logprob: -4.245062351226807
    5. ' ' → logprob: -4.870062351226807
    6. '   ' → logprob: -6.620062351226807
    7. ' ' → logprob: -7.995062351226807
    8. '	if' → logprob: -8.370061874389648
    9. '    ' → logprob: -8.995061874389648
    10. '  ' → logprob: -9.120061874389648

Token 520: ' la' (ID: 557)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.31337472796440125
    2. 'x' → logprob: -1.3133747577667236
    3. ' ' → logprob: -9.438374519348145
    4. '	x' → logprob: -11.313374519348145
    5. ' ' → logprob: -11.438374519348145
    6. ' aa' → logprob: -12.563374519348145
    7. '(x' → logprob: -12.938374519348145
    8. '   ' → logprob: -13.188374519348145
    9. '  ' → logprob: -14.563374519348145
    10. ' xx' → logprob: -15.188374519348145

Token 521: ' valeur' (ID: 41664)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5760006904602051
    2. ' x' → logprob: -0.8260006904602051
    3. ' ' → logprob: -10.576000213623047
    4. ' ' → logprob: -12.076000213623047
    5. '	x' → logprob: -12.201000213623047
    6. '    ' → logprob: -12.576000213623047
    7. '(x' → logprob: -12.951000213623047
    8. '  ' → logprob: -13.201000213623047
    9. 'space' → logprob: -13.451000213623047
    10. '   ' → logprob: -13.451000213623047

Token 522: ' cour' (ID: 2871)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.47140514850616455
    2. 'x' → logprob: -1.3464051485061646
    3. ' x' → logprob: -2.221405029296875
    4. '[' → logprob: -5.971405029296875
    5. 's' → logprob: -7.096405029296875
    6. '(x' → logprob: -7.221405029296875
    7. ' i' → logprob: -7.221405029296875
    8. '[x' → logprob: -7.346405029296875
    9. '   ' → logprob: -7.721405029296875
    10. ' suivante' → logprob: -7.971405029296875

Token 523: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.014584053307771683
    2. '[i' → logprob: -5.014584064483643
    3. '   ' → logprob: -5.764584064483643
    4. 'ente' → logprob: -6.639584064483643
    5. ' ' → logprob: -7.764584064483643
    6. '    ' → logprob: -8.139583587646484
    7. '       ' → logprob: -8.139583587646484
    8. '```' → logprob: -8.139583587646484
    9. ' suivante' → logprob: -8.514583587646484
    10. '`' → logprob: -8.639583587646484

Token 524: ' et' (ID: 859)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13189741969108582
    2. '==' → logprob: -2.631897449493408
    3. ' ' → logprob: -3.381897449493408
    4. '[i' → logprob: -5.131897449493408
    5. '[' → logprob: -5.381897449493408
    6. ']==' → logprob: -5.756897449493408
    7. 's' → logprob: -7.006897449493408
    8. 'x' → logprob: -7.381897449493408
    9. ')==' → logprob: -7.381897449493408
    10. ' =' → logprob: -8.50689697265625

Token 525: ' la' (ID: 557)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.030181650072336197
    2. 'x' → logprob: -3.530181646347046
    3. ' ' → logprob: -8.655181884765625
    4. '	x' → logprob: -9.655181884765625
    5. '(x' → logprob: -9.780181884765625
    6. ' ' → logprob: -10.405181884765625
    7. ' l' → logprob: -10.655181884765625
    8. ' la' → logprob: -10.655181884765625
    9. 's' → logprob: -10.655181884765625
    10. '   ' → logprob: -12.530181884765625

Token 526: ' prochaine' (ID: 78876)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.029502833262085915
    2. ' i' → logprob: -4.029502868652344
    3. 'i' → logprob: -4.654502868652344
    4. '[' → logprob: -7.279502868652344
    5. ' [' → logprob: -7.404502868652344
    6. '1' → logprob: -8.904502868652344
    7. ' ' → logprob: -9.529502868652344
    8. '
' → logprob: -9.779502868652344
    9. '(i' → logprob: -10.154502868652344
    10. '[
' → logprob: -10.279502868652344

Token 527: ' sont' (ID: 5242)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.15085218846797943
    2. ' ' → logprob: -2.4008522033691406
    3. '[' → logprob: -4.525852203369141
    4. ' are' → logprob: -4.900852203369141
    5. ' ==' → logprob: -4.900852203369141
    6. '==' → logprob: -5.025852203369141
    7. ' i' → logprob: -5.400852203369141
    8. ' sont' → logprob: -5.775852203369141
    9. ']==' → logprob: -6.400852203369141
    10. '  ' → logprob: -6.900852203369141

Token 528: ' différentes' (ID: 41398)
  Prédit: ' ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.29197582602500916
    2. ' ident' → logprob: -2.291975736618042
    3. 'ég' → logprob: -2.541975736618042
    4. 'ident' → logprob: -2.666975736618042
    5. ' eg' → logprob: -6.291975975036621
    6. ' iguales' → logprob: -7.666975975036621
    7. 'eg' → logprob: -8.291975975036621
    8. ' the' → logprob: -8.541975975036621
    9. 'égal' → logprob: -8.541975975036621
    10. 'équ' → logprob: -8.666975975036621

Token 529: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.26860517263412476
    2. ':' → logprob: -1.7686052322387695
    3. '       ' → logprob: -4.3936052322387695
    4. ',' → logprob: -4.5186052322387695
    5. ':
' → logprob: -4.5186052322387695
    6. ' or' → logprob: -4.7686052322387695
    7. ' :
' → logprob: -5.0186052322387695
    8. '   ' → logprob: -5.3936052322387695
    9. 'and' → logprob: -5.6436052322387695
    10. ' :' → logprob: -5.7686052322387695

Token 530: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5510898232460022
    2. ':' → logprob: -1.9260897636413574
    3. '       ' → logprob: -2.3010897636413574
    4. '   ' → logprob: -2.5510897636413574
    5. ' or' → logprob: -3.4260897636413574
    6. ',' → logprob: -3.8010897636413574
    7. ' ' → logprob: -3.9260897636413574
    8. ' :' → logprob: -5.051089763641357
    9. ' if' → logprob: -5.801089763641357
    10. '    ' → logprob: -5.926089763641357

Token 531: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11539893597364426
    2. 'if' (adapté à ' if') → logprob: -2.86539888381958
    3. '       ' → logprob: -3.11539888381958
    4. '   ' → logprob: -5.49039888381958
    5. '	if' → logprob: -6.36539888381958
    6. '	' → logprob: -7.11539888381958
    7. ' ' → logprob: -7.36539888381958
    8. '    ' → logprob: -8.490399360656738
    9. '           ' → logprob: -9.865399360656738
    10. '	   ' → logprob: -9.990399360656738

Token 532: ' aa' (ID: 40260)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.43718990683555603
    2. ' x' → logprob: -1.0621899366378784
    3. ' aa' → logprob: -5.062190055847168
    4. 'aa' → logprob: -6.187190055847168
    5. ' ' → logprob: -10.937190055847168
    6. '	x' → logprob: -11.437190055847168
    7. 'xaa' → logprob: -11.437190055847168
    8. '(x' → logprob: -11.937190055847168
    9. 'a' → logprob: -12.187190055847168
    10. ' ' → logprob: -12.812190055847168

Token 533: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.029781728982925415
    2. ' !=' → logprob: -3.5297818183898926
    3. '==' → logprob: -11.529781341552734
    4. '!=(' → logprob: -11.654781341552734
    5. ' ' → logprob: -11.904781341552734
    6. ']!=' → logprob: -13.279781341552734
    7. ')!=' → logprob: -13.779781341552734
    8. ' ' → logprob: -13.779781341552734
    9. '!' → logprob: -14.654781341552734
    10. '()!=' → logprob: -14.779781341552734

Token 534: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004309076175559312
    2. ' x' → logprob: -7.750431060791016
    3. '	x' → logprob: -15.250431060791016
    4. '   ' → logprob: -18.500431060791016
    5. ' ' → logprob: -18.750431060791016
    6. '(x' → logprob: -20.625431060791016
    7. '
' → logprob: -20.875431060791016
    8. '"x' → logprob: -21.000431060791016
    9. ')x' → logprob: -21.375431060791016
    10. ' ' → logprob: -21.375431060791016

Token 535: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7835754988482222e-05
    2. '[' → logprob: -11.125018119812012
    3. ' [' → logprob: -13.000018119812012
    4. '[
' → logprob: -15.000018119812012
    5. 'i' → logprob: -15.500018119812012
    6. '[I' → logprob: -15.875018119812012
    7. ' ' → logprob: -16.750017166137695
    8. '   ' → logprob: -18.000017166137695
    9. '```' → logprob: -18.000017166137695
    10. ' i' → logprob: -18.500017166137695

Token 536: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0025304758455604315
    2. ' +' → logprob: -6.002530574798584
    3. ']' → logprob: -10.127530097961426
    4. '1' → logprob: -12.002530097961426
    5. '+
' → logprob: -12.252530097961426
    6. ']+' → logprob: -13.002530097961426
    7. ' +
' → logprob: -14.752530097961426
    8. ' ' → logprob: -15.127530097961426
    9. ']:
' → logprob: -15.627530097961426
    10. ' ]' → logprob: -15.752530097961426

Token 537: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023321842309087515
    2. ' ' → logprob: -8.37523365020752
    3. '   ' → logprob: -13.87523365020752
    4. '+' → logprob: -14.25023365020752
    5. ']' → logprob: -15.68773365020752
    6. '
' → logprob: -15.75023365020752
    7. '```' → logprob: -16.000232696533203
    8. '  ' → logprob: -16.062732696533203
    9. 'i' → logprob: -17.000232696533203
    10. '    ' → logprob: -17.187732696533203

Token 538: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38626524806022644
    2. '):' → logprob: -1.6362652778625488
    3. '):
' → logprob: -2.636265277862549
    4. '       ' → logprob: -3.636265277862549
    5. ']:' → logprob: -4.386265277862549
    6. ':
' → logprob: -4.511265277862549
    7. ']:
' → logprob: -6.636265277862549
    8. '   ' → logprob: -7.386265277862549
    9. '           ' → logprob: -8.13626480102539
    10. ' ):' → logprob: -8.13626480102539

Token 539: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13227106630802155
    2. '           ' → logprob: -2.8822710514068604
    3. 'a' → logprob: -3.1322710514068604
    4. ':' → logprob: -4.1322712898254395
    5. ':
' → logprob: -5.7572712898254395
    6. '   ' → logprob: -6.6322712898254395
    7. '):' → logprob: -7.1322712898254395
    8. '):
' → logprob: -7.2572712898254395
    9. ' a' → logprob: -7.7572712898254395
    10. ',' → logprob: -7.8822712898254395

Token 540: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005303958430886269
    2. '       ' → logprob: -5.380303859710693
    3. '   ' → logprob: -8.005304336547852
    4. ' a' → logprob: -8.130304336547852
    5. '           ' → logprob: -10.130304336547852
    6. '	a' → logprob: -11.380304336547852
    7. ' ' → logprob: -14.005304336547852
    8. '  ' → logprob: -14.380304336547852
    9. '               ' → logprob: -14.505304336547852
    10. '#a' → logprob: -14.630304336547852

Token 541: ' Aj' (ID: 28294)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00011188744247192517
    2. ' a' → logprob: -9.37511157989502
    3. '   ' → logprob: -10.75011157989502
    4. '       ' → logprob: -13.00011157989502
    5. '           ' → logprob: -13.75011157989502
    6. '	a' → logprob: -14.00011157989502
    7. '#' → logprob: -14.37511157989502
    8. ' ' → logprob: -15.00011157989502
    9. '  ' → logprob: -15.87511157989502
    10. '    ' → logprob: -16.125112533569336

Token 542: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.3667823374271393
    2. 'outer' → logprob: -1.241782307624817
    3. 'outez' → logprob: -4.241782188415527
    4. 'out' → logprob: -6.241782188415527
    5. 'a' → logprob: -6.866782188415527
    6. 'outes' → logprob: -8.366782188415527
    7. '   ' → logprob: -8.991782188415527
    8. '.append' → logprob: -9.366782188415527
    9. '       ' → logprob: -9.616782188415527
    10. '[a' → logprob: -9.866782188415527

Token 543: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004873300436884165
    2. '(a' → logprob: -5.879873275756836
    3. ' (' → logprob: -6.379873275756836
    4. '(ai' → logprob: -8.129873275756836
    5. '[' → logprob: -10.379873275756836
    6. '(ans' → logprob: -11.629873275756836
    7. '(s' → logprob: -11.754873275756836
    8. '(i' → logprob: -12.254873275756836
    9. '(ab' → logprob: -12.629873275756836
    10. '(ac' → logprob: -12.754873275756836

Token 544: ' couple' (ID: 7167)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14375187456607819
    2. 'aa' → logprob: -2.393751859664917
    3. '[' → logprob: -4.393752098083496
    4. '(a' → logprob: -4.643752098083496
    5. ' (' → logprob: -5.018752098083496
    6. ' aa' → logprob: -5.018752098083496
    7. 'a' → logprob: -5.268752098083496
    8. 'su' → logprob: -7.018752098083496
    9. '(s' → logprob: -7.518752098083496
    10. 'au' → logprob: -8.393752098083496

Token 545: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10045219212770462
    2. ' (' → logprob: -2.350452184677124
    3. '           ' → logprob: -9.225452423095703
    4. '(a' → logprob: -9.725452423095703
    5. '[' → logprob: -10.850452423095703
    6. '   ' → logprob: -11.350452423095703
    7. '(ai' → logprob: -11.600452423095703
    8. '  ' → logprob: -12.350452423095703
    9. ' [' → logprob: -12.350452423095703
    10. '([' → logprob: -12.475452423095703

Token 546: 'val' (ID: 1105)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47557610273361206
    2. 'aa' → logprob: -0.9755761027336121
    3. ' aa' → logprob: -7.100575923919678
    4. '[' → logprob: -7.850575923919678
    5. ' (' → logprob: -8.600576400756836
    6. '#aa' → logprob: -10.600576400756836
    7. '   ' → logprob: -10.725576400756836
    8. '  ' → logprob: -11.100576400756836
    9. ' ' → logprob: -11.350576400756836
    10. 'aaa' → logprob: -12.225576400756836

Token 547: 'eur' (ID: 8671)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13366159796714783
    2. ',' → logprob: -2.2586615085601807
    3. 'ue' → logprob: -4.13366174697876
    4. '(a' → logprob: -6.50866174697876
    5. 'eur' → logprob: -7.00866174697876
    6. ',(' → logprob: -7.63366174697876
    7. 'uer' → logprob: -7.88366174697876
    8. ' (' → logprob: -8.383661270141602
    9. 'a' → logprob: -8.508661270141602
    10. 'aa' → logprob: -8.758661270141602

Token 548: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05879082530736923
    2. '(' → logprob: -2.933790922164917
    3. ' ,' → logprob: -5.808790683746338
    4. ' (' → logprob: -8.308791160583496
    5. ',
' → logprob: -8.558791160583496
    6. 'aa' → logprob: -9.308791160583496
    7. '           ' → logprob: -10.308791160583496
    8. 'a' → logprob: -10.558791160583496
    9. '         ' → logprob: -10.558791160583496
    10. '          ' → logprob: -10.558791160583496

Token 549: ' nombre' (ID: 9733)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.3223535716533661
    2. 'comp' → logprob: -2.0723536014556885
    3. 'nombre' → logprob: -2.9473536014556885
    4. 'count' → logprob: -3.0723536014556885
    5. ' compteur' → logprob: -3.5723536014556885
    6. ' nombre' → logprob: -4.197353363037109
    7. ' su' → logprob: -6.322353363037109
    8. ' compte' → logprob: -6.572353363037109
    9. ' count' → logprob: -6.697353363037109
    10. 'com' → logprob: -7.447353363037109

Token 550: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6426877975463867
    2. ')' → logprob: -1.0176877975463867
    3. ',' → logprob: -2.5176877975463867
    4. ' de' → logprob: -4.517687797546387
    5. '_de' → logprob: -5.267687797546387
    6. '(' → logprob: -5.892687797546387
    7. 'su' → logprob: -6.017687797546387
    8. '
' → logprob: -6.267687797546387
    9. ' ' → logprob: -7.017687797546387
    10. ')
' → logprob: -7.142687797546387

Token 551: ' répét' (ID: 156936)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.14820465445518494
    2. ',' → logprob: -2.2732045650482178
    3. 'aa' → logprob: -4.898204803466797
    4. ')' → logprob: -4.898204803466797
    5. ' ,' → logprob: -5.148204803466797
    6. ' su' → logprob: -5.273204803466797
    7. ' ' → logprob: -5.398204803466797
    8. ' aa' → logprob: -7.148204803466797
    9. 'con' → logprob: -7.398204803466797
    10. ' ' → logprob: -7.523204803466797

Token 552: 'itions' (ID: 5500)
  Prédit: 'itions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itions' → logprob: -0.11329224705696106
    2. 'ations' → logprob: -3.1132922172546387
    3. 'a' → logprob: -3.7382922172546387
    4. 'ections' → logprob: -4.488292217254639
    5. 'es' → logprob: -4.988292217254639
    6. '(' → logprob: -5.238292217254639
    7. 's' → logprob: -5.363292217254639
    8. 'e' → logprob: -5.988292217254639
    9. 'é' → logprob: -6.238292217254639
    10. 'és' → logprob: -6.988292217254639

Token 553: ' cons' (ID: 1473)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4810643494129181
    2. '(' → logprob: -1.1060643196105957
    3. ',' → logprob: -3.9810643196105957
    4. ' (' → logprob: -4.106064319610596
    5. ')
' → logprob: -5.606064319610596
    6. '),' → logprob: -6.606064319610596
    7. ' )' → logprob: -6.731064319610596
    8. '           ' → logprob: -6.731064319610596
    9. '(s' → logprob: -6.856064319610596
    10. '   ' → logprob: -6.856064319610596

Token 554: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.05362926423549652
    2. 'é' → logprob: -3.178629159927368
    3. 'ecut' → logprob: -4.928629398345947
    4. 'éc' → logprob: -6.178629398345947
    5. 'ect' → logprob: -8.428628921508789
    6. ')' → logprob: -8.803628921508789
    7. ',' → logprob: -9.178628921508789
    8. '[' → logprob: -9.428628921508789
    9. 'équ' → logprob: -9.428628921508789
    10. 'èques' → logprob: -9.678628921508789

Token 555: 'ives' (ID: 2264)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7518541216850281
    2. 'ées' → logprob: -1.1268541812896729
    3. 'es' → logprob: -2.001854181289673
    4. ')' → logprob: -3.626854181289673
    5. 'ions' → logprob: -4.376853942871094
    6. ' ,' → logprob: -4.876853942871094
    7. 'és' → logprob: -5.251853942871094
    8. 'é' → logprob: -5.501853942871094
    9. '   ' → logprob: -5.876853942871094
    10. 's' → logprob: -6.001853942871094

Token 556: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00965385977178812
    2. '(' → logprob: -4.8846540451049805
    3. '(a' → logprob: -7.5096540451049805
    4. ',' → logprob: -8.38465404510498
    5. ')
' → logprob: -8.63465404510498
    6. 'aa' → logprob: -8.75965404510498
    7. ' (' → logprob: -8.88465404510498
    8. 'à' → logprob: -8.88465404510498
    9. ' )' → logprob: -9.00965404510498
    10. '),' → logprob: -9.00965404510498

Token 557: ' au' (ID: 2791)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19008353352546692
    2. '(a' → logprob: -2.5650835037231445
    3. ' (' → logprob: -3.6900835037231445
    4. '.append' → logprob: -3.9400835037231445
    5. '               ' → logprob: -4.4400835037231445
    6. 'to' → logprob: -4.6900835037231445
    7. '(' → logprob: -4.8150835037231445
    8. ',' → logprob: -5.1900835037231445
    9. ' à' → logprob: -5.5650835037231445
    10. 'à' → logprob: -5.8150835037231445

Token 558: ' tableau' (ID: 67053)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019299437990412116
    2. ' a' → logprob: -6.251929759979248
    3. ' ' → logprob: -15.126930236816406
    4. '	a' → logprob: -15.126930236816406
    5. '   ' → logprob: -15.126930236816406
    6. '(a' → logprob: -16.001930236816406
    7. '[a' → logprob: -16.751930236816406
    8. '[(' → logprob: -16.876930236816406
    9. '  ' → logprob: -17.001930236816406
    10. ''a' → logprob: -17.126930236816406

Token 559: ' des' (ID: 731)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.7477002143859863
    2. ' (' → logprob: -1.4977002143859863
    3. '.append' → logprob: -2.1227002143859863
    4. 'a' → logprob: -2.4977002143859863
    5. '(' → logprob: -2.9977002143859863
    6. ' a' → logprob: -3.7477002143859863
    7. '           ' → logprob: -3.9977002143859863
    8. '   ' → logprob: -5.747700214385986
    9. '               ' → logprob: -6.997700214385986
    10. '
' → logprob: -7.122700214385986

Token 560: ' résultats' (ID: 48985)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12068819254636765
    2. ' a' → logprob: -2.9956881999969482
    3. 'élé' → logprob: -3.6206881999969482
    4. ' tuples' → logprob: -4.620687961578369
    5. 'rés' → logprob: -5.245687961578369
    6. 'tokens' → logprob: -5.370687961578369
    7. 'pairs' → logprob: -5.495687961578369
    8. ' pairs' → logprob: -6.120687961578369
    9. ' résultats' → logprob: -6.245687961578369
    10. 'tu' → logprob: -6.495687961578369

Token 561: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029876865446567535
    2. 'a' → logprob: -6.127987861633301
    3. ',' → logprob: -8.1279878616333
    4. ' a' → logprob: -8.3779878616333
    5. '(a' → logprob: -8.8779878616333
    6. '       ' → logprob: -10.0029878616333
    7. '               ' → logprob: -10.6279878616333
    8. '		' → logprob: -11.0029878616333
    9. ':' → logprob: -11.5029878616333
    10. ' (' → logprob: -11.6279878616333

Token 562: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007425479590892792
    2. 'a' → logprob: -5.132425308227539
    3. ' a' → logprob: -7.007425308227539
    4. '(a' → logprob: -8.257425308227539
    5. ',' → logprob: -9.257425308227539
    6. '               ' → logprob: -9.257425308227539
    7. ' (' → logprob: -9.507425308227539
    8. '(' → logprob: -10.632425308227539
    9. '          ' → logprob: -11.632425308227539
    10. '		' → logprob: -11.757425308227539

Token 563: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0008068907191045582
    2. ' a' → logprob: -7.37580680847168
    3. '       ' → logprob: -9.25080680847168
    4. '   ' → logprob: -9.75080680847168
    5. '	a' → logprob: -10.75080680847168
    6. '(a' → logprob: -12.50080680847168
    7. '           ' → logprob: -14.12580680847168
    8. '[a' → logprob: -16.00080680847168
    9. ' ' → logprob: -17.00080680847168
    10. '  ' → logprob: -17.37580680847168

Token 564: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005237906239926815
    2. '.' → logprob: -5.255238056182861
    3. '.ap' → logprob: -13.380237579345703
    4. ' .' → logprob: -13.630237579345703
    5. '.app' → logprob: -13.630237579345703
    6. 'append' → logprob: -16.380237579345703
    7. '.extend' → logprob: -16.880237579345703
    8. '.Append' → logprob: -17.505237579345703
    9. '.a' → logprob: -17.880237579345703
    10. '+=' → logprob: -18.130237579345703

Token 565: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.006782046519219875
    2. '(' → logprob: -5.006782054901123
    3. '([' → logprob: -9.631781578063965
    4. '(
' → logprob: -13.881781578063965
    5. ' (' → logprob: -16.50678253173828
    6. '(tuple' → logprob: -17.38178253173828
    7. ' ((' → logprob: -17.88178253173828
    8. ' ' → logprob: -18.00678253173828
    9. '(a' → logprob: -18.50678253173828
    10. '[(' → logprob: -18.75678253173828

Token 566: 'aa' (ID: 3545)
  Prédit: 'aa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -6.2729995988775045e-06
    2. ' aa' → logprob: -12.000006675720215
    3. 'aaa' → logprob: -18.3750057220459
    4. '#aa' → logprob: -18.3750057220459
    5. '[' → logprob: -18.8750057220459
    6. '   ' → logprob: -19.0000057220459
    7. '(' → logprob: -19.1250057220459
    8. ' ' → logprob: -19.7500057220459
    9. '  ' → logprob: -21.0000057220459
    10. '-aa' → logprob: -21.8750057220459

Token 567: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008239185553975403
    2. ',s' → logprob: -7.625823974609375
    3. ' ,' → logprob: -8.000823974609375
    4. ',
' → logprob: -14.625823974609375
    5. ',n' → logprob: -16.125823974609375
    6. ',y' → logprob: -17.625823974609375
    7. ',num' → logprob: -17.750823974609375
    8. ',b' → logprob: -17.875823974609375
    9. ',v' → logprob: -17.875823974609375
    10. ',c' → logprob: -18.000823974609375

Token 568: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.00029685118352063
    2. ' su' → logprob: -8.125296592712402
    3. 's' → logprob: -15.875296592712402
    4. ' ' → logprob: -15.875296592712402
    5. '   ' → logprob: -16.00029754638672
    6. '	s' → logprob: -16.37529754638672
    7. ' ' → logprob: -16.87529754638672
    8. '
' → logprob: -17.50029754638672
    9. 'Su' → logprob: -17.50029754638672
    10. 'SU' → logprob: -17.87529754638672

Token 569: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6939377188682556
    2. '])
' → logprob: -0.6939377188682556
    3. '])
' → logprob: -8.443937301635742
    4. ' ])
' → logprob: -8.443937301635742
    5. ' ])' → logprob: -8.568937301635742
    6. ',' → logprob: -9.068937301635742
    7. ']);' → logprob: -11.318937301635742
    8. '])

' → logprob: -11.693937301635742
    9. ')
' → logprob: -12.068937301635742
    10. '   ' → logprob: -12.193937301635742

Token 570: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1023242399096489
    2. '       ' → logprob: -2.3523242473602295
    3. '		' → logprob: -6.60232400894165
    4. '               ' → logprob: -8.727324485778809
    5. 'aa' → logprob: -8.852324485778809
    6. '	' → logprob: -9.102324485778809
    7. '          ' → logprob: -9.102324485778809
    8. '   ' → logprob: -9.602324485778809
    9. 'su' → logprob: -9.977324485778809
    10. '	       ' → logprob: -10.602324485778809

Token 571: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7308259606361389
    2. 'aa' → logprob: -0.7308259606361389
    3. 'su' → logprob: -3.355825901031494
    4. '       ' → logprob: -6.480825901031494
    5. '		' → logprob: -8.730826377868652
    6. '   ' → logprob: -8.980826377868652
    7. '               ' → logprob: -8.980826377868652
    8. ' aa' → logprob: -10.105826377868652
    9. '          ' → logprob: -10.355826377868652
    10. 'au' → logprob: -11.355826377868652

Token 572: ' Red' (ID: 5952)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aa' → logprob: -2.7252845029579476e-05
    2. 'su' → logprob: -10.625027656555176
    3. ' aa' → logprob: -13.625027656555176
    4. '#aa' → logprob: -14.000027656555176
    5. '   ' → logprob: -14.500027656555176
    6. 'aaa' → logprob: -15.750027656555176
    7. ' ' → logprob: -17.25002670288086
    8. '           ' → logprob: -17.50002670288086
    9. '       ' → logprob: -17.87502670288086
    10. '  ' → logprob: -18.12502670288086

Token 573: 'éf' (ID: 126246)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.7011100053787231
    2. '       ' → logprob: -1.7011100053787231
    3. '   ' → logprob: -2.9511098861694336
    4. 'é' → logprob: -3.0761098861694336
    5. ' aa' → logprob: -3.0761098861694336
    6. '           ' → logprob: -3.4511098861694336
    7. 'éf' → logprob: -3.8261098861694336
    8. 'ef' → logprob: -3.9511098861694336
    9. '     ' → logprob: -4.076109886169434
    10. '=' → logprob: -4.201109886169434

Token 574: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.37556570768356323
    2. '_init' → logprob: -1.250565767288208
    3. '_' → logprob: -4.375565528869629
    4. 'ini' → logprob: -5.750565528869629
    5. 'inir' → logprob: -6.625565528869629
    6. 'nit' → logprob: -6.875565528869629
    7. 'ine' → logprob: -6.875565528869629
    8. 'aa' → logprob: -6.875565528869629
    9. ' aa' → logprob: -7.250565528869629
    10. 'i' → logprob: -7.375565528869629

Token 575: ' l' (ID: 305)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.0020295155700296164
    2. ' aa' → logprob: -6.2520294189453125
    3. 'x' → logprob: -9.252029418945312
    4. ' x' → logprob: -12.752029418945312
    5. '   ' → logprob: -14.127029418945312
    6. 'xaa' → logprob: -14.377029418945312
    7. ' ' → logprob: -14.752029418945312
    8. '#aa' → logprob: -15.877029418945312
    9. 'aaa' → logprob: -16.627029418945312
    10. '	' → logprob: -16.877029418945312

Token 576: ''' (ID: 6)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.04417578503489494
    2. ' aa' → logprob: -3.294175863265991
    3. 'a' → logprob: -5.294175624847412
    4. 'x' → logprob: -7.044175624847412
    5. ' x' → logprob: -9.41917610168457
    6. '=' → logprob: -10.16917610168457
    7. 'xaa' → logprob: -11.29417610168457
    8. 'aaa' → logprob: -11.66917610168457
    9. '(x' → logprob: -11.66917610168457
    10. ' =' → logprob: -11.66917610168457

Token 577: 'élé' (ID: 15228)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.0010350722586736083
    2. 'x' → logprob: -7.001035213470459
    3. 'a' → logprob: -9.3760347366333
    4. ' aa' → logprob: -10.2510347366333
    5. 'aaa' → logprob: -14.3760347366333
    6. '   ' → logprob: -14.8760347366333
    7. '```' → logprob: -15.1260347366333
    8. ' x' → logprob: -15.1260347366333
    9. 'ax' → logprob: -15.6260347366333
    10. '#aa' → logprob: -15.6260347366333

Token 578: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.00233176676556468
    2. 'ement' → logprob: -7.002331733703613
    3. 'ément' → logprob: -8.002331733703613
    4. 'a' → logprob: -8.752331733703613
    5. 'ent' → logprob: -8.877331733703613
    6. 'aa' → logprob: -9.127331733703613
    7. 'em' → logprob: -9.252331733703613
    8. '   ' → logprob: -9.377331733703613
    9. 'va' → logprob: -9.752331733703613
    10. 'me' → logprob: -10.002331733703613

Token 579: ' courant' (ID: 74694)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.3297737240791321
    2. '=' → logprob: -1.8297736644744873
    3. ' aa' → logprob: -2.2047736644744873
    4. ' =' → logprob: -4.954773902893066
    5. 'x' → logprob: -5.954773902893066
    6. '=x' → logprob: -8.829773902893066
    7. ' x' → logprob: -9.204773902893066
    8. ' ' → logprob: -9.579773902893066
    9. 'a' → logprob: -9.829773902893066
    10. 'AA' → logprob: -10.454773902893066

Token 580: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04872918501496315
    2. ' =' → logprob: -3.048729181289673
    3. 'aa' → logprob: -9.673728942871094
    4. 'x' → logprob: -9.923728942871094
    5. '=x' → logprob: -10.548728942871094
    6. ' aa' → logprob: -13.548728942871094
    7. ',' → logprob: -14.423728942871094
    8. ' x' → logprob: -14.673728942871094
    9. 'a' → logprob: -14.798728942871094
    10. ' ' → logprob: -15.298728942871094

Token 581: 'pour' (ID: 52723)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.49027061462402344
    2. 'aa' → logprob: -0.9902706146240234
    3. ' x' → logprob: -4.365270614624023
    4. ' aa' → logprob: -6.490270614624023
    5. '=' → logprob: -7.240270614624023
    6. ' =' → logprob: -7.365270614624023
    7. 'xaa' → logprob: -8.240270614624023
    8. ')' → logprob: -9.865270614624023
    9. '=x' → logprob: -10.115270614624023
    10. '   ' → logprob: -10.365270614624023

Token 582: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2051268070936203
    2. ' x' → logprob: -2.2051267623901367
    3. 'aa' → logprob: -2.7051267623901367
    4. ' aa' → logprob: -5.330126762390137
    5. 'a' → logprob: -6.580126762390137
    6. 'i' → logprob: -7.205126762390137
    7. ')' → logprob: -7.705126762390137
    8. ' i' → logprob: -8.830126762390137
    9. 's' → logprob: -8.955126762390137
    10. ' ' → logprob: -9.330126762390137

Token 583: ' prochaine' (ID: 78876)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47539374232292175
    2. ' x' → logprob: -1.1003937721252441
    3. ' prochaine' → logprob: -4.725393772125244
    4. ' next' → logprob: -4.850393772125244
    5. 'nou' → logprob: -5.225393772125244
    6. ' i' → logprob: -5.350393772125244
    7. 'i' → logprob: -5.850393772125244
    8. 'pro' → logprob: -5.850393772125244
    9. ' prochain' → logprob: -6.100393772125244
    10. 'next' → logprob: -6.225393772125244

Token 584: ' série' (ID: 22079)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.7959177494049072
    2. ' )' → logprob: -1.7959177494049072
    3. 'val' → logprob: -2.4209177494049072
    4. ' x' → logprob: -2.5459177494049072
    5. ' ' → logprob: -2.5459177494049072
    6. ')' → logprob: -2.6709177494049072
    7. ' valeur' → logprob: -2.6709177494049072
    8. 'élé' → logprob: -2.6709177494049072
    9. ' iteration' → logprob: -3.4209177494049072
    10. ' element' → logprob: -3.6709177494049072

Token 585: ' cons' (ID: 1473)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26995596289634705
    2. '=' → logprob: -1.8949559926986694
    3. ')' → logprob: -3.01995587348938
    4. ',' → logprob: -4.269956111907959
    5. ' x' → logprob: -4.644956111907959
    6. 'x' → logprob: -5.769956111907959
    7. '           ' → logprob: -6.394956111907959
    8. '   ' → logprob: -6.519956111907959
    9. ' )' → logprob: -6.644956111907959
    10. '       ' → logprob: -6.894956111907959

Token 586: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.027001507580280304
    2. 'ecut' → logprob: -3.9020016193389893
    3. 'éc' → logprob: -5.77700138092041
    4. 'é' → logprob: -6.52700138092041
    5. 'équ' → logprob: -6.90200138092041
    6. 'ec' → logprob: -8.77700138092041
    7. 'cut' → logprob: -9.15200138092041
    8. '#' → logprob: -9.40200138092041
    9. 'ecu' → logprob: -9.40200138092041
    10. 'equ' → logprob: -9.90200138092041

Token 587: 'ive' (ID: 585)
  Prédit: 'ive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.46443456411361694
    2. 'utive' → logprob: -1.2144346237182617
    3. 'u' → logprob: -2.7144346237182617
    4. 'uve' → logprob: -5.589434623718262
    5. 'ut' → logprob: -6.339434623718262
    6. 'if' → logprob: -6.589434623718262
    7. 'ifs' → logprob: -8.464434623718262
    8. 'ivée' → logprob: -8.714434623718262
    9. 'uite' → logprob: -8.964434623718262
    10. 'iv' → logprob: -9.464434623718262

Token 588: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08702371269464493
    2. ',' → logprob: -3.9620237350463867
    3. '           ' → logprob: -4.087023735046387
    4. ' =' → logprob: -4.212023735046387
    5. '=' → logprob: -4.337023735046387
    6. ')
' → logprob: -5.337023735046387
    7. 'x' → logprob: -5.587023735046387
    8. '       ' → logprob: -5.837023735046387
    9. '   ' → logprob: -6.337023735046387
    10. ' )' → logprob: -6.337023735046387

Token 589: '           ' (ID: 352)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143651962280273
    2. ' =' → logprob: -1.7014365196228027
    3. '           ' → logprob: -11.826436996459961
    4. 'x' → logprob: -11.951436996459961
    5. 'aa' → logprob: -12.576436996459961
    6. '=
' → logprob: -12.576436996459961
    7. '=x' → logprob: -13.701436996459961
    8. ' =
' → logprob: -14.576436996459961
    9. '   ' → logprob: -15.701436996459961
    10. '          ' → logprob: -15.826436996459961

Token 590: ' aa' (ID: 40260)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' (adapté à ' aa') → logprob: -0.00019102399528492242
    2. 'x' → logprob: -8.625190734863281
    3. '   ' → logprob: -12.000190734863281
    4. ' aa' → logprob: -12.750190734863281
    5. 'xaa' → logprob: -14.125190734863281
    6. '       ' → logprob: -14.750190734863281
    7. 'aaa' → logprob: -14.750190734863281
    8. 'a' → logprob: -15.250190734863281
    9. '#aa' → logprob: -15.625190734863281
    10. '           ' → logprob: -16.12519073486328

Token 591: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014172444120049477
    2. ' =' → logprob: -4.264172554016113
    3. '=x' → logprob: -11.639172554016113
    4. '=
' → logprob: -16.764171600341797
    5. '＝' → logprob: -17.014171600341797
    6. '=a' → logprob: -17.014171600341797
    7. '=

' → logprob: -17.889171600341797
    8. '=i' → logprob: -18.764171600341797
    9. '=b' → logprob: -18.764171600341797
    10. 'x' → logprob: -18.889171600341797

Token 592: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005233763717114925
    2. ' x' → logprob: -5.2552337646484375
    3. '	x' → logprob: -17.130233764648438
    4. '(x' → logprob: -20.130233764648438
    5. ' ' → logprob: -20.505233764648438
    6. ' ' → logprob: -21.630233764648438
    7. ')x' → logprob: -21.755233764648438
    8. '$x' → logprob: -21.755233764648438
    9. '"x' → logprob: -22.130233764648438
    10. '   ' → logprob: -22.380233764648438

Token 593: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1517960956552997e-05
    2. '[' → logprob: -11.375011444091797
    3. ' [' → logprob: -18.000011444091797
    4. 'i' → logprob: -18.250011444091797
    5. '[
' → logprob: -18.750011444091797
    6. '[I' → logprob: -19.375011444091797
    7. '(i' → logprob: -20.250011444091797
    8. '   ' → logprob: -20.375011444091797
    9. '```' → logprob: -20.750011444091797
    10. '	' → logprob: -21.500011444091797

Token 594: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.841743303695694e-05
    2. ' +' → logprob: -9.37509822845459
    3. ']+' → logprob: -11.87509822845459
    4. ']' → logprob: -12.12509822845459
    5. '+
' → logprob: -14.12509822845459
    6. '1' → logprob: -15.75009822845459
    7. '+]' → logprob: -16.375099182128906
    8. '+i' → logprob: -18.250099182128906
    9. '   ' → logprob: -18.375099182128906
    10. '＋' → logprob: -18.625099182128906

Token 595: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.309382373117842e-05
    2. ' ' → logprob: -10.375033378601074
    3. '   ' → logprob: -14.000033378601074
    4. '+' → logprob: -14.500033378601074
    5. '```' → logprob: -16.000032424926758
    6. '2' → logprob: -16.312532424926758
    7. '  ' → logprob: -16.937532424926758
    8. ']' → logprob: -17.187532424926758
    9. '
' → logprob: -17.437532424926758
    10. '<|end|>' → logprob: -17.750032424926758

Token 596: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.235446035861969
    2. ')' → logprob: -2.610445976257324
    3. ')
' → logprob: -2.610445976257324
    4. '       ' → logprob: -3.110445976257324
    5. ',' → logprob: -4.735445976257324
    6. ']' → logprob: -5.235445976257324
    7. ']
' → logprob: -5.985445976257324
    8. '               ' → logprob: -7.610445976257324
    9. '            
' → logprob: -8.485445976257324
    10. '   ' → logprob: -8.735445976257324

Token 597: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003862781682983041
    2. 'su' → logprob: -6.0038628578186035
    3. '       ' → logprob: -6.6288628578186035
    4. '               ' → logprob: -11.003862380981445
    5. '		' → logprob: -11.128862380981445
    6. '   ' → logprob: -11.753862380981445
    7. '          ' → logprob: -12.003862380981445
    8. '                   ' → logprob: -12.253862380981445
    9. ',' → logprob: -12.628862380981445
    10. '```' → logprob: -13.253862380981445

Token 598: ' #' (ID: 1069)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.0015298592625185847
    2. '           ' → logprob: -6.751529693603516
    3. ' su' → logprob: -8.251529693603516
    4. '       ' → logprob: -9.376529693603516
    5. '   ' → logprob: -11.251529693603516
    6. '               ' → logprob: -15.001529693603516
    7. '	s' → logprob: -15.251529693603516
    8. '          ' → logprob: -16.001529693603516
    9. '            ' → logprob: -16.251529693603516
    10. '
' → logprob: -16.501529693603516

Token 599: ' Ré' (ID: 27181)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'su' → logprob: -4.961759259458631e-06
    2. ' su' → logprob: -12.250004768371582
    3. '           ' → logprob: -16.8750057220459
    4. '       ' → logprob: -18.3750057220459
    5. '   ' → logprob: -18.6250057220459
    6. 'sur' → logprob: -21.0000057220459
    7. 'Su' → logprob: -21.2500057220459
    8. ' ' → logprob: -21.3750057220459
    9. '```' → logprob: -21.6250057220459
    10. 's' → logprob: -21.7500057220459

Token 600: 'initial' (ID: 17493)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.001599844777956605
    2. 'initial' → logprob: -6.7515997886657715
    3. 'set' → logprob: -8.62660026550293
    4. '   ' → logprob: -9.12660026550293
    5. ' su' → logprob: -10.12660026550293
    6. '       ' → logprob: -10.50160026550293
    7. '=' → logprob: -11.00160026550293
    8. 'sum' → logprob: -11.00160026550293
    9. 'init' → logprob: -11.12660026550293
    10. ' ' → logprob: -12.12660026550293

Token 601: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.4826986491680145
    2. 'iser' → logprob: -0.9826986789703369
    3. 'is' → logprob: -5.982698440551758
    4. '=' → logprob: -6.232698440551758
    5. 'er' → logprob: -6.732698440551758
    6. 'isé' → logprob: -7.357698440551758
    7. 'ize' → logprob: -7.482698440551758
    8. 'e' → logprob: -7.607698440551758
    9. '   ' → logprob: -7.857698440551758
    10. 'aise' → logprob: -8.357698440551758

Token 602: ' le' (ID: 505)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.0005277725285850465
    2. ' su' → logprob: -7.750527858734131
    3. '1' → logprob: -9.250527381896973
    4. '0' → logprob: -13.875527381896973
    5. ' ' → logprob: -16.12552833557129
    6. '   ' → logprob: -18.12552833557129
    7. '
' → logprob: -18.50052833557129
    8. 'sur' → logprob: -18.87552833557129
    9. '	s' → logprob: -19.00052833557129
    10. 'si' → logprob: -19.25052833557129

Token 603: ' compteur' (ID: 163344)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'su' → logprob: -2.15310683415737e-05
    2. ' su' → logprob: -10.750021934509277
    3. 's' → logprob: -17.37502098083496
    4. ' ' → logprob: -18.50002098083496
    5. '   ' → logprob: -18.62502098083496
    6. '1' → logprob: -19.12502098083496
    7. '	s' → logprob: -19.87502098083496
    8. '```' → logprob: -19.87502098083496
    9. '
' → logprob: -20.00002098083496
    10. 'si' → logprob: -20.12502098083496

Token 604: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35252007842063904
    2. 'su' → logprob: -1.3525201082229614
    3. ' =' → logprob: -3.352519989013672
    4. ' su' → logprob: -6.352519989013672
    5. ' à' → logprob: -6.852519989013672
    6. '           ' → logprob: -7.977519989013672
    7. 'à' → logprob: -8.602519989013672
    8. ' to' → logprob: -8.977519989013672
    9. 'to' → logprob: -10.852519989013672
    10. '       ' → logprob: -11.852519989013672

Token 605: '           ' (ID: 352)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09856849908828735
    2. 'su' → logprob: -2.5985684394836426
    3. ' =' → logprob: -3.9735684394836426
    4. '           ' → logprob: -8.4735689163208
    5. ' to' → logprob: -8.5985689163208
    6. ' su' → logprob: -9.0985689163208
    7. ' à' → logprob: -9.5985689163208
    8. 'à' → logprob: -10.2235689163208
    9. 'to' → logprob: -10.4735689163208
    10. '1' → logprob: -10.9735689163208

Token 606: ' su' (ID: 593)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.49817681312561035
    2. 'su' (adapté à ' su') → logprob: -0.9981768131256104
    3. '0' → logprob: -3.7481768131256104
    4. ' ' → logprob: -8.623176574707031
    5. ' su' → logprob: -9.623176574707031
    6. '   ' → logprob: -12.748176574707031
    7. 's' → logprob: -14.123176574707031
    8. 'Su' → logprob: -14.623176574707031
    9. '=' → logprob: -15.373176574707031
    10. '  ' → logprob: -15.873176574707031

Token 607: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005530327325686812
    2. ' =' → logprob: -7.500553131103516
    3. '1' → logprob: -18.000553131103516
    4. '＝' → logprob: -19.000553131103516
    5. '=
' → logprob: -20.000553131103516
    6. '0' → logprob: -20.375553131103516
    7. ' ' → logprob: -21.000553131103516
    8. '=

' → logprob: -21.125553131103516
    9. '=int' → logprob: -22.000553131103516
    10. '.=' → logprob: -22.500553131103516

Token 608: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '0' → logprob: -15.500005722045898
    4. '   ' → logprob: -18.2500057220459
    5. '' → logprob: -20.0000057220459
    6. '```' → logprob: -20.2500057220459
    7. '  ' → logprob: -20.3750057220459
    8. '	' → logprob: -21.1250057220459
    9. ' ' → logprob: -21.3750057220459
    10. '
' → logprob: -21.7500057220459

Token 609: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '0' → logprob: -18.875
    4. '   ' → logprob: -19.875
    5. '' → logprob: -20.5
    6. '```' → logprob: -20.875
    7. '  ' → logprob: -21.375
    8. '۱' → logprob: -21.625
    9. '１' → logprob: -22.0
    10. '১' → logprob: -22.375

Token 610: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012913727201521397
    2. 'else' → logprob: -4.387913703918457
    3. ' else' → logprob: -8.012913703918457
    4. '<|end|>' → logprob: -10.262913703918457
    5. '	' → logprob: -11.137913703918457
    6. '   ' → logprob: -11.387913703918457
    7. '           ' → logprob: -12.512913703918457
    8. '	else' → logprob: -13.387913703918457
    9. 'continue' → logprob: -14.012913703918457
    10. '	   ' → logprob: -14.137913703918457

Token 611: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04891254007816315
    2. 'else' → logprob: -3.048912525177002
    3. ' else' → logprob: -8.42391300201416
    4. '<|end|>' → logprob: -10.04891300201416
    5. '   ' → logprob: -11.29891300201416
    6. '	' → logprob: -11.29891300201416
    7. 'continue' → logprob: -11.67391300201416
    8. '```' → logprob: -11.92391300201416
    9. '	else' → logprob: -12.04891300201416
    10. 'elif' → logprob: -12.17391300201416

Token 612: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48085343837738037
    2. 'else' (adapté à ' else') → logprob: -0.9808534383773804
    3. ' else' → logprob: -5.10585355758667
    4. '	else' → logprob: -7.85585355758667
    5. '	' → logprob: -8.855853080749512
    6. '   ' → logprob: -9.230853080749512
    7. '```' → logprob: -11.355853080749512
    8. '           ' → logprob: -11.480853080749512
    9. '<|end|>' → logprob: -11.980853080749512
    10. '	       ' → logprob: -12.230853080749512

Token 613: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03174861893057823
    2. ':' → logprob: -3.7817485332489014
    3. ':
' → logprob: -5.1567487716674805
    4. '               ' → logprob: -6.5317487716674805
    5. '       ' → logprob: -6.9067487716674805
    6. '          ' → logprob: -9.40674877166748
    7. '   ' → logprob: -9.90674877166748
    8. '         ' → logprob: -10.03174877166748
    9. '                   ' → logprob: -11.03174877166748
    10. 'su' → logprob: -11.40674877166748

Token 614: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07940732687711716
    2. 'su' → logprob: -2.579407215118408
    3. '       ' → logprob: -8.829407691955566
    4. '               ' → logprob: -8.954407691955566
    5. ' su' → logprob: -8.954407691955566
    6. '		' → logprob: -9.829407691955566
    7. '   ' → logprob: -10.329407691955566
    8. '          ' → logprob: -11.579407691955566
    9. '	       ' → logprob: -12.704407691955566
    10. '            ' → logprob: -12.829407691955566

Token 615: ' #' (ID: 1069)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'su' → logprob: -7.553032628493384e-05
    2. ' su' → logprob: -9.500075340270996
    3. '           ' → logprob: -14.875075340270996
    4. '               ' → logprob: -15.500075340270996
    5. 's' → logprob: -18.500076293945312
    6. '       ' → logprob: -18.625076293945312
    7. '            ' → logprob: -18.750076293945312
    8. 'Su' → logprob: -19.000076293945312
    9. '   ' → logprob: -19.750076293945312
    10. '	s' → logprob: -19.750076293945312

Token 616: ' Si' (ID: 7832)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.0001483564410591498
    2. ' su' → logprob: -9.12514877319336
    3. '           ' → logprob: -10.62514877319336
    4. '   ' → logprob: -11.87514877319336
    5. '       ' → logprob: -12.12514877319336
    6. '               ' → logprob: -13.25014877319336
    7. '     ' → logprob: -15.50014877319336
    8. '    ' → logprob: -15.87514877319336
    9. '  ' → logprob: -16.37514877319336
    10. '         ' → logprob: -16.62514877319336

Token 617: ' la' (ID: 557)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.018406514078378677
    2. ' su' → logprob: -4.018406391143799
    3. '               ' → logprob: -9.018406867980957
    4. '           ' → logprob: -9.393406867980957
    5. '            ' → logprob: -11.143406867980957
    6. ' ' → logprob: -11.268406867980957
    7. '   ' → logprob: -11.393406867980957
    8. '                   ' → logprob: -13.143406867980957
    9. 's' → logprob: -13.268406867980957
    10. '	s' → logprob: -13.393406867980957

Token 618: ' même' (ID: 9679)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.0013317868579179049
    2. ' su' → logprob: -6.626331806182861
    3. 's' → logprob: -12.501331329345703
    4. '   ' → logprob: -14.126331329345703
    5. '```' → logprob: -15.126331329345703
    6. '    ' → logprob: -15.251331329345703
    7. '	s' → logprob: -15.376331329345703
    8. ' ' → logprob: -15.626331329345703
    9. ' ' → logprob: -15.626331329345703
    10. '  ' → logprob: -15.876331329345703

Token 619: ' valeur' (ID: 41664)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.04207232594490051
    2. ' su' → logprob: -3.792072296142578
    3. '+' → logprob: -4.542072296142578
    4. ':' → logprob: -5.417072296142578
    5. '+=' → logprob: -7.042072296142578
    6. ' +=' → logprob: -7.417072296142578
    7. '   ' → logprob: -7.417072296142578
    8. '[' → logprob: -7.667072296142578
    9. ' ' → logprob: -8.667072296142578
    10. '	' → logprob: -9.292072296142578

Token 620: ' se' (ID: 458)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.013836243189871311
    2. ' +=' → logprob: -4.38883638381958
    3. ':' → logprob: -6.76383638381958
    4. '==' → logprob: -9.513835906982422
    5. '           ' → logprob: -10.388835906982422
    6. '=' → logprob: -10.763835906982422
    7. '   ' → logprob: -11.013835906982422
    8. '!=' → logprob: -11.763835906982422
    9. ']+=' → logprob: -12.388835906982422
    10. '+' → logprob: -12.638835906982422

Token 621: ' rép' (ID: 64372)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6640889048576355
    2. 'in' → logprob: -1.0390889644622803
    3. 'increment' → logprob: -2.5390889644622803
    4. 'u' → logprob: -3.4140889644622803
    5. '++' → logprob: -5.414088726043701
    6. 'a' → logprob: -5.914088726043701
    7. ' +=' → logprob: -6.039088726043701
    8. '+' → logprob: -6.164088726043701
    9. 'au' → logprob: -6.664088726043701
    10. '==' → logprob: -7.164088726043701

Token 622: 'ète' (ID: 28789)
  Prédit: 'ète'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ète' → logprob: -0.4727719724178314
    2. 't' → logprob: -1.3477720022201538
    3. 'ete' → logprob: -3.0977718830108643
    4. 'te' → logprob: -4.097772121429443
    5. 'nd' → logprob: -4.597772121429443
    6. 'et' → logprob: -4.722772121429443
    7. 'é' → logprob: -5.472772121429443
    8. 'unit' → logprob: -5.722772121429443
    9. 'and' → logprob: -5.722772121429443
    10. 's' → logprob: -5.847772121429443

Token 623: ',' (ID: 11)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1978558897972107
    2. ' +=' → logprob: -2.4478559494018555
    3. '           ' → logprob: -2.9478559494018555
    4. '               ' → logprob: -3.8228559494018555
    5. 'su' → logprob: -4.8228559494018555
    6. ':' → logprob: -5.8228559494018555
    7. '=' → logprob: -6.0728559494018555
    8. '+' → logprob: -6.3228559494018555
    9. '   ' → logprob: -6.9478559494018555
    10. '                   ' → logprob: -7.6978559494018555

Token 624: ' augmente' (ID: 150199)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.10620585829019547
    2. ' su' → logprob: -2.356205940246582
    3. '               ' → logprob: -5.606205940246582
    4. '           ' → logprob: -6.356205940246582
    5. '            ' → logprob: -7.981205940246582
    6. ' ' → logprob: -9.106205940246582
    7. '	s' → logprob: -10.731205940246582
    8. '			' → logprob: -10.856205940246582
    9. '		' → logprob: -11.231205940246582
    10. '             ' → logprob: -11.731205940246582

Token 625: ' le' (ID: 505)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.012526480481028557
    2. ' su' → logprob: -4.387526512145996
    3. '1' → logprob: -11.637526512145996
    4. 'le' → logprob: -12.887526512145996
    5. ' ' → logprob: -13.387526512145996
    6. '   ' → logprob: -13.387526512145996
    7. ' ' → logprob: -14.637526512145996
    8. 's' → logprob: -14.762526512145996
    9. '           ' → logprob: -14.762526512145996
    10. '(s' → logprob: -15.387526512145996

Token 626: ' compteur' (ID: 163344)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.00026634239475242794
    2. ' su' → logprob: -8.250266075134277
    3. ' ' → logprob: -13.375266075134277
    4. 's' → logprob: -13.500266075134277
    5. '1' → logprob: -14.125266075134277
    6. ' ' → logprob: -14.375266075134277
    7. '```' → logprob: -15.625266075134277
    8. '   ' → logprob: -16.375267028808594
    9. 'si' → logprob: -16.500267028808594
    10. '  ' → logprob: -17.000267028808594

Token 627: '
' (ID: 198)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.18292874097824097
    2. '           ' → logprob: -2.8079288005828857
    3. ' +=' → logprob: -3.0579288005828857
    4. 'su' → logprob: -3.3079288005828857
    5. ' su' → logprob: -4.682928562164307
    6. '+' → logprob: -4.932928562164307
    7. '               ' → logprob: -5.682928562164307
    8. '=' → logprob: -6.057928562164307
    9. '   ' → logprob: -7.932928562164307
    10. '            ' → logprob: -8.307929039001465

Token 628: '           ' (ID: 352)
  Prédit: ' su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' su' → logprob: -0.875937283039093
    2. 'su' → logprob: -1.0009372234344482
    3. '           ' → logprob: -1.6259372234344482
    4. '+=' → logprob: -4.875937461853027
    5. '               ' → logprob: -5.125937461853027
    6. '=' → logprob: -5.875937461853027
    7. ' +=' → logprob: -6.250937461853027
    8. '            ' → logprob: -8.125937461853027
    9. '   ' → logprob: -8.500937461853027
    10. '+' → logprob: -9.625937461853027

Token 629: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' (adapté à ' su') → logprob: -3.173704271830502e-06
    2. ' su' → logprob: -12.75000286102295
    3. '           ' → logprob: -15.50000286102295
    4. '               ' → logprob: -18.875003814697266
    5. '   ' → logprob: -19.875003814697266
    6. '       ' → logprob: -20.875003814697266
    7. 'Su' → logprob: -21.250003814697266
    8. '            ' → logprob: -21.250003814697266
    9. '	s' → logprob: -21.875003814697266
    10. 's' → logprob: -22.375003814697266

Token 630: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0067167943343520164
    2. ' +=' → logprob: -5.006716728210449
    3. '=' → logprob: -13.63171672821045
    4. ']+=' → logprob: -16.131717681884766
    5. '+' → logprob: -16.381717681884766
    6. '+='' → logprob: -17.381717681884766
    7. '+="' → logprob: -17.756717681884766
    8. '+=(' → logprob: -17.881717681884766
    9. ' =' → logprob: -20.256717681884766
    10. '   ' → logprob: -20.256717681884766

Token 631: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -23.5000057220459
    4. '１' → logprob: -23.6250057220459
    5. '۱' → logprob: -24.0000057220459
    6. '```' → logprob: -24.1250057220459
    7. '<|end|>' → logprob: -24.2500057220459
    8. ' ' → logprob: -24.2500057220459
    9. '  ' → logprob: -24.7500057220459
    10. '
' → logprob: -25.1250057220459

Token 632: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '１' → logprob: -22.75
    4. '```' → logprob: -22.875
    5. '<|end|>' → logprob: -23.0
    6. '۱' → logprob: -23.625
    7. '१' → logprob: -24.5
    8. '১' → logprob: -25.0
    9. '0' → logprob: -25.75
    10. '١' → logprob: -26.0

Token 633: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20160619914531708
    2. 'a' → logprob: -1.7016061544418335
    3. ' a' → logprob: -8.701605796813965
    4. '#' → logprob: -11.826605796813965
    5. 'return' → logprob: -12.326605796813965
    6. '	a' → logprob: -12.451605796813965
    7. '  ' → logprob: -12.701605796813965
    8. '#a' → logprob: -12.951605796813965
    9. '
' → logprob: -13.201605796813965
    10. '```' → logprob: -14.451605796813965

Token 634: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7123351693153381
    2. '   ' → logprob: -0.7123351693153381
    3. 'return' → logprob: -4.337335109710693
    4. 'if' → logprob: -5.337335109710693
    5. '#' → logprob: -7.712335109710693
    6. ' return' → logprob: -7.962335109710693
    7. ' if' → logprob: -8.837335586547852
    8. ' a' → logprob: -9.087335586547852
    9. '```' → logprob: -10.212335586547852
    10. '#a' → logprob: -11.712335586547852

Token 635: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00014180023572407663
    2. '   ' → logprob: -9.000142097473145
    3. '#' (adapté à ' #') → logprob: -11.250142097473145
    4. ' a' → logprob: -12.875142097473145
    5. 'return' → logprob: -12.875142097473145
    6. '#a' → logprob: -15.625142097473145
    7. 'if' → logprob: -16.750141143798828
    8. '	a' → logprob: -17.500141143798828
    9. '```' → logprob: -17.625141143798828
    10. ' return' → logprob: -19.000141143798828

Token 636: ' Après' (ID: 47562)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.696889623621246e-06
    2. '#' → logprob: -13.00000286102295
    3. '   ' → logprob: -15.25000286102295
    4. ' a' → logprob: -16.125001907348633
    5. '#a' → logprob: -17.125001907348633
    6. 'return' → logprob: -18.500001907348633
    7. 'if' → logprob: -19.125001907348633
    8. '	a' → logprob: -19.625001907348633
    9. ' ' → logprob: -21.000001907348633
    10. '```' → logprob: -22.000001907348633

Token 637: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.000580792548134923
    2. '#' → logprob: -7.750580787658691
    3. ' a' → logprob: -8.875580787658691
    4. '#a' → logprob: -12.125580787658691
    5. 'la' → logprob: -13.125580787658691
    6. ' the' → logprob: -14.375580787658691
    7. 'bou' → logprob: -14.375580787658691
    8. 'the' → logprob: -14.625580787658691
    9. ' #' → logprob: -15.125580787658691
    10. '   ' → logprob: -15.625580787658691

Token 638: ' boucle' (ID: 174211)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.1024836003780365
    2. 'for' → logprob: -2.3524835109710693
    3. ' boucle' → logprob: -6.227483749389648
    4. 'loop' → logprob: -8.852483749389648
    5. 'der' → logprob: -9.602483749389648
    6. 'fin' → logprob: -10.477483749389648
    7. '
' → logprob: -11.102483749389648
    8. '#' → logprob: -11.477483749389648
    9. 'Bou' → logprob: -11.727483749389648
    10. ' for' → logprob: -12.102483749389648

Token 639: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.013451962731778622
    2. '   ' → logprob: -5.013452053070068
    3. ' a' → logprob: -5.013452053070068
    4. ' if' → logprob: -10.38845157623291
    5. 'if' → logprob: -10.63845157623291
    6. ',' → logprob: -12.13845157623291
    7. '#' → logprob: -13.01345157623291
    8. ',a' → logprob: -13.88845157623291
    9. '	a' → logprob: -14.01345157623291
    10. '#a' → logprob: -14.26345157623291

Token 640: ' ajoute' (ID: 91611)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004019521293230355
    2. ' a' → logprob: -8.000401496887207
    3. '   ' → logprob: -9.625401496887207
    4. '	a' → logprob: -15.375401496887207
    5. '#' → logprob: -16.500402450561523
    6. ' ' → logprob: -17.500402450561523
    7. '#a' → logprob: -18.125402450561523
    8. '```' → logprob: -18.250402450561523
    9. 'if' → logprob: -18.625402450561523
    10. '  ' → logprob: -19.000402450561523

Token 641: ' le' (ID: 505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6967357993125916
    2. '([' → logprob: -0.6967357993125916
    3. ' [' → logprob: -6.321735858917236
    4. '(' → logprob: -6.946735858917236
    5. ' le' → logprob: -7.321735858917236
    6. 'le' → logprob: -10.071735382080078
    7. ' la' → logprob: -10.321735382080078
    8. '[a' → logprob: -10.446735382080078
    9. '[last' → logprob: -10.821735382080078
    10. ' (' → logprob: -11.821735382080078

Token 642: ' dernier' (ID: 27982)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06327282637357712
    2. 'dern' → logprob: -2.813272714614868
    3. ' dernier' → logprob: -6.813272953033447
    4. ' [' → logprob: -8.938272476196289
    5. 'last' → logprob: -10.313272476196289
    6. 'Dern' → logprob: -11.063272476196289
    7. '[last' → logprob: -11.563272476196289
    8. 'der' → logprob: -11.688272476196289
    9. ' last' → logprob: -13.063272476196289
    10. ' ' → logprob: -13.813272476196289

Token 643: ' bloc' (ID: 51218)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008029716089367867
    2. 'élé' → logprob: -5.383029937744141
    3. '([' → logprob: -6.383029937744141
    4. ' [' → logprob: -7.008029937744141
    5. '[a' → logprob: -7.633029937744141
    6. ' élément' → logprob: -9.00802993774414
    7. '(' → logprob: -9.63302993774414
    8. 'element' → logprob: -10.00802993774414
    9. '[
' → logprob: -10.50802993774414
    10. '[element' → logprob: -10.75802993774414

Token 644: ' compress' (ID: 34112)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.24144767224788666
    2. '(' → logprob: -2.116447687149048
    3. '[' → logprob: -2.366447687149048
    4. '(a' → logprob: -9.491447448730469
    5. ' [' → logprob: -9.616447448730469
    6. ' (' → logprob: -10.116447448730469
    7. '   ' → logprob: -10.241447448730469
    8. '[a' → logprob: -11.991447448730469
    9. 'a' → logprob: -12.741447448730469
    10. '((' → logprob: -12.866447448730469

Token 645: 'é' (ID: 377)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.3427906334400177
    2. 'é' → logprob: -1.8427906036376953
    3. 'a' → logprob: -2.3427906036376953
    4. '[' → logprob: -3.9677906036376953
    5. '   ' → logprob: -4.217790603637695
    6. 'ed' → logprob: -7.467790603637695
    7. '[e' → logprob: -8.217790603637695
    8. '[i' → logprob: -8.717790603637695
    9. '[
' → logprob: -8.842790603637695
    10. 'éd' → logprob: -9.092790603637695

Token 646: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7159284353256226
    2. 'a' → logprob: -0.9659284353256226
    3. '(a' → logprob: -2.965928554534912
    4. ' a' → logprob: -3.340928554534912
    5. '[a' → logprob: -3.340928554534912
    6. '[' → logprob: -5.090928554534912
    7. '(' → logprob: -6.840928554534912
    8. '([' → logprob: -7.465928554534912
    9. ' à' → logprob: -9.090928077697754
    10. '
' → logprob: -9.215928077697754

Token 647: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31451377272605896
    2. '   ' → logprob: -1.3145138025283813
    3. ' a' → logprob: -7.064513683319092
    4. '[a' → logprob: -7.939513683319092
    5. '[' → logprob: -10.81451416015625
    6. '(a' → logprob: -11.68951416015625
    7. '
' → logprob: -12.68951416015625
    8. ',' → logprob: -12.81451416015625
    9. '	a' → logprob: -13.06451416015625
    10. '```' → logprob: -14.18951416015625

Token 648: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -2.2200749754119897e-06
    2. '   ' → logprob: -13.750001907348633
    3. ' a' → logprob: -13.750001907348633
    4. '	a' → logprob: -20.250001907348633
    5. '```' → logprob: -21.250001907348633
    6. '[a' → logprob: -21.750001907348633
    7. '
' → logprob: -22.125001907348633
    8. ' ' → logprob: -23.750001907348633
    9. '(a' → logprob: -23.875001907348633
    10. '#a' → logprob: -25.000001907348633

Token 649: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00016313401283696294
    2. '.' → logprob: -8.750163078308105
    3. 'append' → logprob: -12.500163078308105
    4. '.app' → logprob: -14.875163078308105
    5. ' .' → logprob: -15.375163078308105
    6. '.ap' → logprob: -15.375163078308105
    7. '​.' → logprob: -17.125164031982422
    8. '.extend' → logprob: -18.250164031982422
    9. '.Append' → logprob: -18.250164031982422
    10. ').' → logprob: -18.500164031982422

Token 650: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -1.3425219549390022e-05
    2. '[' → logprob: -11.25001335144043
    3. '(' → logprob: -15.50001335144043
    4. '((' → logprob: -16.12501335144043
    5. '(([' → logprob: -20.37501335144043
    6. ' ([' → logprob: -20.62501335144043
    7. '(
' → logprob: -20.75001335144043
    8. '([[' → logprob: -21.50001335144043
    9. '([
' → logprob: -21.50001335144043
    10. '```' → logprob: -22.12501335144043

Token 651: 'aa' (ID: 3545)
  Prédit: 'aa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -1.1472419600977446e-06
    2. ' aa' → logprob: -13.750000953674316
    3. 'aaa' → logprob: -21.125001907348633
    4. '
' → logprob: -21.375001907348633
    5. '   ' → logprob: -21.375001907348633
    6. '#aa' → logprob: -21.625001907348633
    7. '(' → logprob: -22.000001907348633
    8. 'a' → logprob: -22.250001907348633
    9. '```' → logprob: -22.500001907348633
    10. ' ' → logprob: -22.750001907348633

Token 652: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.8889261304575484e-06
    2. ' ,' → logprob: -12.500003814697266
    3. ',
' → logprob: -16.125003814697266
    4. ',s' → logprob: -19.250003814697266
    5. '،' → logprob: -21.375003814697266
    6. ',\
' → logprob: -21.500003814697266
    7. '‌,' → logprob: -22.125003814697266
    8. '，' → logprob: -22.375003814697266
    9. ',
' → logprob: -22.625003814697266
    10. '
' → logprob: -23.000003814697266

Token 653: ' su' (ID: 593)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.0010328111238777637
    2. ' su' → logprob: -6.876032829284668
    3. 's' → logprob: -17.62603187561035
    4. ' ' → logprob: -18.00103187561035
    5. ' ' → logprob: -18.12603187561035
    6. 'sur' → logprob: -18.12603187561035
    7. 'si' → logprob: -18.62603187561035
    8. 'Su' → logprob: -19.12603187561035
    9. '
' → logprob: -19.50103187561035
    10. 'sus' → logprob: -19.50103187561035

Token 654: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5283522009849548
    2. ')' → logprob: -1.0283522605895996
    3. ')
' → logprob: -3.2783522605895996
    4. '])
' → logprob: -4.2783522605896
    5. ']' → logprob: -6.7783522605896
    6. ')return' → logprob: -10.153351783752441
    7. '   ' → logprob: -10.278351783752441
    8. ']
' → logprob: -10.653351783752441
    9. ')
' → logprob: -11.528351783752441
    10. ')]' → logprob: -11.653351783752441

Token 655: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023266678676009178
    2. 'return' → logprob: -3.7732667922973633
    3. ' return' → logprob: -10.898266792297363
    4. '	return' → logprob: -13.398266792297363
    5. '```' → logprob: -13.648266792297363
    6. ':return' → logprob: -16.898265838623047
    7. ' ' → logprob: -17.648265838623047
    8. '       ' → logprob: -17.773265838623047
    9. '{return' → logprob: -17.773265838623047
    10. '  ' → logprob: -18.023265838623047

Token 656: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008821379393339157
    2. '   ' → logprob: -4.758821487426758
    3. ' return' → logprob: -8.508821487426758
    4. '	return' → logprob: -12.258821487426758
    5. '```' → logprob: -15.383821487426758
    6. ':return' → logprob: -16.258821487426758
    7. '{return' → logprob: -16.758821487426758
    8. ' ' → logprob: -17.008821487426758
    9. '  ' → logprob: -17.008821487426758
    10. '_return' → logprob: -18.758821487426758

Token 657: ' Retour' (ID: 146830)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1994775377388578e-05
    2. ' return' → logprob: -11.500012397766113
    3. '   ' → logprob: -13.250012397766113
    4. '	return' → logprob: -18.125011444091797
    5. 'ret' → logprob: -21.875011444091797
    6. ':return' → logprob: -21.875011444091797
    7. '
' → logprob: -22.000011444091797
    8. 'Return' → logprob: -22.125011444091797
    9. '{return' → logprob: -22.500011444091797
    10. '```' → logprob: -22.875011444091797

Token 658: 'ne' (ID: 611)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3107031285762787
    2. 'a' → logprob: -2.1857030391693115
    3. 'n' → logprob: -2.6857030391693115
    4. 'ne' → logprob: -2.6857030391693115
    5. 'ner' → logprob: -4.810703277587891
    6. '   ' → logprob: -5.560703277587891
    7. ' return' → logprob: -5.810703277587891
    8. 'return' → logprob: -6.560703277587891
    9. 'na' → logprob: -7.685703277587891
    10. 'nez' → logprob: -8.06070327758789

Token 659: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005233763717114925
    2. ' a' → logprob: -5.2552337646484375
    3. '	a' → logprob: -18.630233764648438
    4. ' ' → logprob: -20.880233764648438
    5. '   ' → logprob: -21.130233764648438
    6. '#a' → logprob: -22.130233764648438
    7. ' ' → logprob: -22.380233764648438
    8. '_a' → logprob: -23.005233764648438
    9. ''a' → logprob: -23.005233764648438
    10. 'return' → logprob: -23.005233764648438

Token 660: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.8624639324116288e-06
    2. ' a' → logprob: -13.250001907348633
    3. '
' → logprob: -20.750001907348633
    4. 'result' → logprob: -21.125001907348633
    5. '[a' → logprob: -21.125001907348633
    6. '	a' → logprob: -21.250001907348633
    7. '   ' → logprob: -21.625001907348633
    8. 'return' → logprob: -21.750001907348633
    9. '#' → logprob: -22.000001907348633
    10. '#a' → logprob: -22.125001907348633

Token 661: ' des' (ID: 731)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0044600279070436954
    2. 'return' → logprob: -5.754459857940674
    3. ' a' → logprob: -6.754459857940674
    4. ' return' → logprob: -9.379460334777832
    5. '   ' → logprob: -10.379460334777832
    6. ':return' → logprob: -15.754460334777832
    7. '	a' → logprob: -17.129459381103516
    8. '
' → logprob: -17.254459381103516
    9. ' ' → logprob: -17.379459381103516
    10. '[a' → logprob: -18.004459381103516

Token 662: ' blocs' (ID: 182599)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0008882334805093706
    2. ' a' → logprob: -7.250888347625732
    3. 'compressed' → logprob: -9.625887870788574
    4. 'group' → logprob: -10.750887870788574
    5. 'pairs' → logprob: -10.875887870788574
    6. 'compress' → logprob: -11.250887870788574
    7. ' tuples' → logprob: -11.500887870788574
    8. ' groupes' → logprob: -11.625887870788574
    9. 'segments' → logprob: -11.875887870788574
    10. 'élé' → logprob: -12.000887870788574

Token 663: ' compress' (ID: 34112)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06644688546657562
    2. '   ' → logprob: -2.8164467811584473
    3. ' return' → logprob: -5.441446781158447
    4. 'a' → logprob: -9.691447257995605
    5. '	return' → logprob: -10.316447257995605
    6. ':return' → logprob: -10.691447257995605
    7. '  ' → logprob: -11.816447257995605
    8. '
' → logprob: -12.441447257995605
    9. ' ' → logprob: -13.441447257995605
    10. '{return' → logprob: -13.691447257995605

Token 664: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.03558063134551048
    2. 'é' → logprob: -3.535580635070801
    3. 'es' → logprob: -6.160580635070801
    4. 'ed' → logprob: -6.160580635070801
    5. 'ée' → logprob: -7.535580635070801
    6. '[a' → logprob: -7.785580635070801
    7. 'éd' → logprob: -8.5355806350708
    8. 'a' → logprob: -8.6605806350708
    9. 'ées' → logprob: -9.5355806350708
    10. '[' → logprob: -9.6605806350708

Token 665: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43042242527008057
    2. 'return' → logprob: -1.1804224252700806
    3. ' return' → logprob: -3.180422306060791
    4. '	return' → logprob: -7.180422306060791
    5. ':return' → logprob: -8.43042278289795
    6. '
' → logprob: -10.68042278289795
    7. ' ' → logprob: -11.68042278289795
    8. '    
' → logprob: -11.80542278289795
    9. '  ' → logprob: -12.05542278289795
    10. 'a' → logprob: -12.68042278289795

Token 666: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030552862212061882
    2. 'return' → logprob: -3.530552864074707
    3. ' return' → logprob: -7.155552864074707
    4. '	return' → logprob: -10.905552864074707
    5. '```' → logprob: -13.405552864074707
    6. ':return' → logprob: -13.905552864074707
    7. '  ' → logprob: -15.155552864074707
    8. '{return' → logprob: -15.780552864074707
    9. ' ' → logprob: -15.905552864074707
    10. '    ' → logprob: -16.65555191040039

Token 667: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -7.588793960167095e-05
    2. ' return' → logprob: -9.500076293945312
    3. 'a' → logprob: -14.625076293945312
    4. '   ' → logprob: -14.625076293945312
    5. '	return' → logprob: -16.625076293945312
    6. ':return' → logprob: -20.375076293945312
    7. '{return' → logprob: -21.000076293945312
    8. 'eturn' → logprob: -21.500076293945312
    9. '
' → logprob: -21.750076293945312
    10. '  ' → logprob: -22.250076293945312

Token 668: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020354038861114532
    2. ' a' → logprob: -8.500203132629395
    3. '	a' → logprob: -19.37520408630371
    4. '_a' → logprob: -22.75020408630371
    5. '(a' → logprob: -23.37520408630371
    6. '[a' → logprob: -23.62520408630371
    7. ' ' → logprob: -24.12520408630371
    8. '#a' → logprob: -24.62520408630371
    9. 'а' → logprob: -25.00020408630371
    10. '
' → logprob: -26.75020408630371

Token 669: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0695575401186943
    2. '<|end|>' → logprob: -2.9445574283599854
    3. '#' → logprob: -4.3195576667785645
    4. '```' → logprob: -7.1945576667785645
    5. '[' → logprob: -8.944557189941406
    6. '
' → logprob: -9.194557189941406
    7. ')' → logprob: -10.194557189941406
    8. '<|end|>' → logprob: -10.194557189941406
    9. '[]' → logprob: -10.819557189941406
    10. 'a' → logprob: -10.819557189941406

Token 670: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07111023366451263
    2. '#' → logprob: -2.696110248565674
    3. 'n' → logprob: -7.696110248565674
    4. '
' → logprob: -9.571109771728516
    5. 'if' → logprob: -9.696109771728516
    6. 'class' → logprob: -9.946109771728516
    7. '[' → logprob: -9.946109771728516
    8. 'x' → logprob: -9.946109771728516
    9. 'from' → logprob: -10.071109771728516
    10. 'for' → logprob: -10.321109771728516

Token 671: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000474521511932835
    2. '#' → logprob: -8.25047492980957
    3. 'from' → logprob: -8.62547492980957
    4. 'if' → logprob: -11.50047492980957
    5. 'class' → logprob: -12.00047492980957
    6. 'n' → logprob: -12.50047492980957
    7. 'import' → logprob: -12.50047492980957
    8. 'd' → logprob: -13.00047492980957
    9. 'N' → logprob: -13.12547492980957
    10. 'for' → logprob: -13.37547492980957

Token 672: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002261355984956026
    2. '#' → logprob: -6.252261161804199
    3. 's' → logprob: -9.1272611618042
    4. ' def' → logprob: -9.3772611618042
    5. 'd' → logprob: -11.0022611618042
    6. 'de' → logprob: -11.1272611618042
    7. '(s' → logprob: -11.2522611618042
    8. 'from' → logprob: -11.3772611618042
    9. '(x' → logprob: -11.6272611618042
    10. 'import' → logprob: -11.8772611618042

Token 673: ' rassemble' (ID: 158483)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.182918518781662
    2. 'calcul' → logprob: -2.8079185485839844
    3. 'reads' → logprob: -3.4329185485839844
    4. ' calculates' → logprob: -4.807918548583984
    5. 'main' → logprob: -4.932918548583984
    6. ' reads' → logprob: -4.932918548583984
    7. 'counts' → logprob: -5.057918548583984
    8. 'calc' → logprob: -5.432918548583984
    9. 'g' → logprob: -5.682918548583984
    10. 'f' → logprob: -5.682918548583984

Token 674: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.0526065826416016
    2. 'def' → logprob: -1.3026065826416016
    3. '(x' → logprob: -1.3026065826416016
    4. ' les' → logprob: -3.5526065826416016
    5. 'des' → logprob: -3.8026065826416016
    6. 'une' → logprob: -4.052606582641602
    7. 'l' → logprob: -4.802606582641602
    8. 'la' → logprob: -4.927606582641602
    9. 'a' → logprob: -5.177606582641602
    10. 's' → logprob: -5.677606582641602

Token 675: ' éléments' (ID: 57375)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8477102518081665
    2. 'tokens' → logprob: -2.347710132598877
    3. 'def' → logprob: -2.722710132598877
    4. 'élé' → logprob: -2.847710132598877
    5. 'chain' → logprob: -2.972710132598877
    6. 'a' → logprob: -2.972710132598877
    7. 'diff' → logprob: -3.722710132598877
    8. 'elements' → logprob: -3.847710132598877
    9. 'chunks' → logprob: -3.847710132598877
    10. 'sorted' → logprob: -4.097710132598877

Token 676: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1032315269112587
    2. '(x' → logprob: -2.478231430053711
    3. '(' → logprob: -4.978231430053711
    4. '(s' → logprob: -6.353231430053711
    5. 'de' → logprob: -6.478231430053711
    6. '#' → logprob: -7.228231430053711
    7. '(a' → logprob: -7.853231430053711
    8. '(l' → logprob: -8.228231430053711
    9. 's' → logprob: -8.353231430053711
    10. ',' → logprob: -8.478231430053711

Token 677: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.3767954409122467
    2. ''un' → logprob: -1.5017954111099243
    3. 'une' → logprob: -2.501795530319214
    4. 'un' → logprob: -6.251795291900635
    5. 'e' → logprob: -6.501795291900635
    6. 'es' → logprob: -6.751795291900635
    7. ''' → logprob: -6.751795291900635
    8. 'u' → logprob: -6.876795291900635
    9. '#' → logprob: -7.501795291900635
    10. ''u' → logprob: -7.751795291900635

Token 678: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.3874507248401642
    2. 'list' → logprob: -1.3874506950378418
    3. ' iterable' → logprob: -4.262450695037842
    4. ' liste' → logprob: -4.512450695037842
    5. ' list' → logprob: -4.887450695037842
    6. 'print' → logprob: -5.137450695037842
    7. 'def' → logprob: -5.387450695037842
    8. '#' → logprob: -5.637450695037842
    9. 'a' → logprob: -5.637450695037842
    10. 'string' → logprob: -5.762450695037842

Token 679: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.756989700486884e-05
    2. 'd' → logprob: -10.37508773803711
    3. ' def' → logprob: -10.50008773803711
    4. 'de' → logprob: -11.62508773803711
    5. '#' → logprob: -12.25008773803711
    6. '(x' → logprob: -12.37508773803711
    7. 'a' → logprob: -13.12508773803711
    8. 'print' → logprob: -13.37508773803711
    9. '(s' → logprob: -14.12508773803711
    10. 'dé' → logprob: -14.25008773803711

Token 680: ' chaîne' (ID: 89288)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.18444116413593292
    2. 'chaine' → logprob: -2.309441089630127
    3. ' une' → logprob: -3.309441089630127
    4. ''' → logprob: -3.809441089630127
    5. 'string' → logprob: -5.809441089630127
    6. 'un' → logprob: -6.434441089630127
    7. ' chaîne' → logprob: -6.559441089630127
    8. ' string' → logprob: -6.934441089630127
    9. 'str' → logprob: -7.184441089630127
    10. ''une' → logprob: -7.309441089630127

Token 681: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.842555426876061e-06
    2. ' def' → logprob: -12.500004768371582
    3. '"' → logprob: -14.375004768371582
    4. ''' → logprob: -15.500004768371582
    5. 'str' → logprob: -17.0000057220459
    6. '
' → logprob: -17.2500057220459
    7. '''.' → logprob: -17.2500057220459
    8. 'd' → logprob: -17.7500057220459
    9. '('' → logprob: -17.7500057220459
    10. 's' → logprob: -18.0000057220459

Token 682: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.022698841989040375
    2. ' caractères' → logprob: -4.022698879241943
    3. 'chars' → logprob: -6.647698879241943
    4. 'str' → logprob: -6.647698879241943
    5. 'chaine' → logprob: -7.272698879241943
    6. 'string' → logprob: -7.897698879241943
    7. 'char' → logprob: -8.147698402404785
    8. 'cha' → logprob: -8.647698402404785
    9. '```' → logprob: -9.022698402404785
    10. 'strings' → logprob: -10.022698402404785

Token 683: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.512236498361744e-07
    2. ' def' → logprob: -14.625000953674316
    3. '
' → logprob: -16.25
    4. 'd' → logprob: -21.375
    5. '```' → logprob: -21.375
    6. '(def' → logprob: -22.0
    7. 'de' → logprob: -22.625
    8. '#' → logprob: -22.875
    9. ':def' → logprob: -23.125
    10. '"' → logprob: -23.25

Token 684: ' sépar' (ID: 97160)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.21743111312389374
    2. ' sep' → logprob: -1.7174310684204102
    3. 'def' → logprob: -4.21743106842041
    4. 'separator' → logprob: -7.21743106842041
    5. ' def' → logprob: -8.96743106842041
    6. 'delimiter' → logprob: -8.96743106842041
    7. ' separator' → logprob: -9.46743106842041
    8. 'se' → logprob: -10.59243106842041
    9. 'del' → logprob: -11.21743106842041
    10. ' ' → logprob: -11.46743106842041

Token 685: 'ées' (ID: 5161)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.501390814781189
    2. 'ateur' → logprob: -2.2513909339904785
    3. 'ator' → logprob: -2.3763909339904785
    4. 'par' → logprob: -2.6263909339904785
    5. 'ée' → logprob: -3.1263909339904785
    6. 'by' → logprob: -3.7513909339904785
    7. 'é' → logprob: -3.7513909339904785
    8. 'e' → logprob: -5.0013909339904785
    9. 'er' → logprob: -5.0013909339904785
    10. 'join' → logprob: -5.1263909339904785

Token 686: ' par' (ID: 686)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.1619296818971634
    2. 'by' → logprob: -2.2869296073913574
    3. 'par' → logprob: -3.7869296073913574
    4. '("' → logprob: -3.9119296073913574
    5. '(' → logprob: -6.036929607391357
    6. ''' → logprob: -6.911929607391357
    7. '()' → logprob: -7.786929607391357
    8. '"' → logprob: -7.786929607391357
    9. ' par' → logprob: -8.411930084228516
    10. '(par' → logprob: -8.661930084228516

Token 687: ' un' (ID: 537)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15126770734786987
    2. '"' → logprob: -2.4012677669525146
    3. ''espace' → logprob: -4.1512675285339355
    4. ''un' → logprob: -4.2762675285339355
    5. ''esp' → logprob: -4.4012675285339355
    6. 'es' → logprob: -6.0262675285339355
    7. 'un' → logprob: -6.0262675285339355
    8. 'esp' → logprob: -6.2762675285339355
    9. 'space' → logprob: -7.6512675285339355
    10. ''es' → logprob: -9.776268005371094

Token 688: ' espace' (ID: 66004)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.21947495639324188
    2. '"' → logprob: -1.8444749116897583
    3. ''espace' → logprob: -3.469475030899048
    4. 'space' → logprob: -5.844474792480469
    5. 'es' → logprob: -6.094474792480469
    6. ''esp' → logprob: -6.719474792480469
    7. 'esp' → logprob: -7.344474792480469
    8. ' espace' → logprob: -8.594474792480469
    9. 'sep' → logprob: -9.094474792480469
    10. '’espace' → logprob: -9.469474792480469

Token 689: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.7432603272027336e-06
    2. ' def' → logprob: -13.750001907348633
    3. '
' → logprob: -14.250001907348633
    4. '```' → logprob: -20.625001907348633
    5. 'print' → logprob: -20.875001907348633
    6. '  
' → logprob: -21.375001907348633
    7. '(def' → logprob: -21.375001907348633
    8. ' 
' → logprob: -21.875001907348633
    9. '
' → logprob: -22.375001907348633
    10. '    
' → logprob: -22.375001907348633

Token 690: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.088346359931165e-07
    2. ' def' → logprob: -14.000000953674316
    3. '
' → logprob: -19.875
    4. 'd' → logprob: -21.5
    5. '```' → logprob: -23.5
    6. '	def' → logprob: -23.75
    7. 'de' → logprob: -24.25
    8. '_def' → logprob: -25.25
    9. ':def' → logprob: -25.625
    10. ' 
' → logprob: -25.75

Token 691: ' jo' (ID: 8483)
  Prédit: 'join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.7831436991691589
    2. 'print' → logprob: -1.5331437587738037
    3. 'pr' → logprob: -1.9081437587738037
    4. 's' → logprob: -2.7831437587738037
    5. 'out' → logprob: -3.4081437587738037
    6. 'p' → logprob: -4.033143520355225
    7. 'prt' → logprob: -4.908143520355225
    8. 'j' → logprob: -5.158143520355225
    9. 'ans' → logprob: -5.658143520355225
    10. 'w' → logprob: -5.783143520355225

Token 692: '(x' (ID: 4061)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0009383779251947999
    2. '('' → logprob: -7.375938415527344
    3. 'i' → logprob: -9.625938415527344
    4. '()' → logprob: -10.250938415527344
    5. ''' → logprob: -10.250938415527344
    6. '"' → logprob: -10.625938415527344
    7. '```' → logprob: -10.750938415527344
    8. 'int' → logprob: -10.875938415527344
    9. 'join' → logprob: -10.875938415527344
    10. '("' → logprob: -11.125938415527344

Token 693: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16170598566532135
    2. '):
' → logprob: -2.03670597076416
    3. ')' → logprob: -4.03670597076416
    4. ',' → logprob: -7.53670597076416
    5. '):
' → logprob: -8.66170597076416
    6. ' ):' → logprob: -8.66170597076416
    7. '(x' → logprob: -9.16170597076416
    8. 'x' → logprob: -10.53670597076416
    9. '   ' → logprob: -10.78670597076416
    10. 'a' → logprob: -10.91170597076416

Token 694: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.84478360414505
    2. 'return' → logprob: -0.84478360414505
    3. '   ' → logprob: -1.9697835445404053
    4. ''' → logprob: -7.719783782958984
    5. '"' → logprob: -7.844783782958984
    6. '	return' → logprob: -8.094783782958984
    7. ' ' → logprob: -11.094783782958984
    8. ':' → logprob: -11.219783782958984
    9. ':
' → logprob: -11.594783782958984
    10. ':return' → logprob: -11.594783782958984

Token 695: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02975071594119072
    2. ' return' → logprob: -3.5297508239746094
    3. '   ' → logprob: -16.65475082397461
    4. ''' → logprob: -16.90475082397461
    5. '"' → logprob: -17.77975082397461
    6. '	return' → logprob: -18.52975082397461
    7. ' ' → logprob: -19.90475082397461
    8. 'print' → logprob: -20.40475082397461
    9. 'eturn' → logprob: -21.27975082397461
    10. 'ret' → logprob: -22.02975082397461

Token 696: ' Util' (ID: 13564)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0019288709154352546
    2. ' return' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.876928329467773
    4. 'print' → logprob: -17.001928329467773
    5. '	return' → logprob: -17.626928329467773
    6. ' ' → logprob: -17.751928329467773
    7. 'eturn' → logprob: -18.126928329467773
    8. '"' → logprob: -18.126928329467773
    9. 'ret' → logprob: -18.376928329467773
    10. '
' → logprob: -18.876928329467773

Token 697: 'ise' (ID: 1096)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.5172210335731506
    2. 'def' → logprob: -1.7672209739685059
    3. 'ise' → logprob: -2.142220973968506
    4. 'e' → logprob: -3.142220973968506
    5. 'isez' → logprob: -4.017220973968506
    6. 'es' → logprob: -4.267220973968506
    7. 's' → logprob: -4.642220973968506
    8. 'isateur' → logprob: -4.892220973968506
    9. 'ze' → logprob: -5.267220973968506
    10. '```' → logprob: -5.642220973968506

Token 698: ' la' (ID: 557)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.580800473690033
    2. ''' → logprob: -0.830800473690033
    3. 'return' → logprob: -5.455800533294678
    4. ' return' → logprob: -8.45580005645752
    5. ' '' → logprob: -8.95580005645752
    6. 'print' → logprob: -9.33080005645752
    7. 'str' → logprob: -9.45580005645752
    8. ' "' → logprob: -9.70580005645752
    9. '
' → logprob: -13.08080005645752
    10. ''s' → logprob: -13.08080005645752

Token 699: ' fonction' (ID: 17610)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10067987442016602
    2. ''' → logprob: -2.350679874420166
    3. 'str' → logprob: -8.100679397583008
    4. ' "' → logprob: -9.350679397583008
    5. 'return' → logprob: -9.975679397583008
    6. ' '' → logprob: -10.600679397583008
    7. 'print' → logprob: -11.850679397583008
    8. ''s' → logprob: -13.350679397583008
    9. ' return' → logprob: -14.100679397583008
    10. 'join' → logprob: -14.600679397583008

Token 700: ' map' (ID: 4014)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03124522604048252
    2. ''' → logprob: -3.531245231628418
    3. 'return' → logprob: -6.906245231628418
    4. 'print' → logprob: -8.281245231628418
    5. ' "' → logprob: -9.531245231628418
    6. 'join' → logprob: -9.531245231628418
    7. 'str' → logprob: -10.031245231628418
    8. ' return' → logprob: -10.406245231628418
    9. ' '' → logprob: -11.281245231628418
    10. ''s' → logprob: -12.531245231628418

Token 701: ' pour' (ID: 1930)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00015920029545668513
    2. 'str' → logprob: -8.75015926361084
    3. '=str' → logprob: -15.25015926361084
    4. '[str' → logprob: -15.62515926361084
    5. ' str' → logprob: -15.87515926361084
    6. '(' → logprob: -16.125158309936523
    7. '(lambda' → logprob: -17.375158309936523
    8. '	str' → logprob: -17.500158309936523
    9. '
' → logprob: -18.375158309936523
    10. '```' → logprob: -18.500158309936523

Token 702: ' convertir' (ID: 79223)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0019294669618830085
    2. ' str' → logprob: -6.25192928314209
    3. '(str' → logprob: -14.00192928314209
    4. '	str' → logprob: -17.251930236816406
    5. 'map' → logprob: -18.501930236816406
    6. 'lambda' → logprob: -19.251930236816406
    7. ' ' → logprob: -19.626930236816406
    8. '
' → logprob: -19.876930236816406
    9. '[str' → logprob: -19.876930236816406
    10. '=str' → logprob: -20.001930236816406

Token 703: ' chaque' (ID: 21194)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.3132699131965637
    2. 'str' → logprob: -1.313269853591919
    3. ' str' → logprob: -12.06326961517334
    4. '=str' → logprob: -14.43826961517334
    5. '```' → logprob: -14.43826961517334
    6. '
' → logprob: -14.56326961517334
    7. '	str' → logprob: -14.68826961517334
    8. '[str' → logprob: -15.31326961517334
    9. '(
' → logprob: -17.188270568847656
    10. ',str' → logprob: -17.438270568847656

Token 704: ' élément' (ID: 99627)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -6.301394023466855e-05
    2. ' str' → logprob: -10.250062942504883
    3. '(str' → logprob: -10.500062942504883
    4. '```' → logprob: -17.250062942504883
    5. '	str' → logprob: -17.875062942504883
    6. '=str' → logprob: -18.000062942504883
    7. ':str' → logprob: -19.000062942504883
    8. '[str' → logprob: -19.125062942504883
    9. '
' → logprob: -19.375062942504883
    10. '   ' → logprob: -20.000062942504883

Token 705: ' de' (ID: 334)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0040835049003362656
    2. 'str' → logprob: -5.504083633422852
    3. ' str' → logprob: -12.629083633422852
    4. '(' → logprob: -14.129083633422852
    5. '=str' → logprob: -15.004083633422852
    6. '(
' → logprob: -15.379083633422852
    7. '
' → logprob: -15.629083633422852
    8. '[str' → logprob: -16.12908363342285
    9. '```' → logprob: -16.12908363342285
    10. '	str' → logprob: -16.75408363342285

Token 706: ' la' (ID: 557)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -9.627176768844947e-05
    2. ' str' → logprob: -9.250096321105957
    3. 'x' → logprob: -17.00009536743164
    4. 'map' → logprob: -17.50009536743164
    5. '(str' → logprob: -17.62509536743164
    6. '	str' → logprob: -18.75009536743164
    7. 'string' → logprob: -19.25009536743164
    8. '
' → logprob: -20.37509536743164
    9. '```' → logprob: -20.37509536743164
    10. '=str' → logprob: -20.62509536743164

Token 707: ' liste' (ID: 31719)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.06225862354040146
    2. 'x' → logprob: -2.812258720397949
    3. 'list' → logprob: -8.43725872039795
    4. 'map' → logprob: -9.81225872039795
    5. ' str' → logprob: -11.18725872039795
    6. ' x' → logprob: -12.81225872039795
    7. '```' → logprob: -13.18725872039795
    8. '(str' → logprob: -15.56225872039795
    9. 'liste' → logprob: -15.68725872039795
    10. '	str' → logprob: -15.93725872039795

Token 708: ' en' (ID: 469)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.02975604310631752
    2. 'str' → logprob: -3.5297560691833496
    3. ' str' → logprob: -13.029755592346191
    4. '
' → logprob: -13.654755592346191
    5. '=str' → logprob: -14.404755592346191
    6. '```' → logprob: -14.529755592346191
    7. '	str' → logprob: -15.029755592346191
    8. '[str' → logprob: -15.279755592346191
    9. '(' → logprob: -15.529755592346191
    10. '(
' → logprob: -16.279756546020508

Token 709: ' chaîne' (ID: 89288)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0009115827269852161
    2. ' str' → logprob: -7.000911712646484
    3. 'string' → logprob: -17.125911712646484
    4. '(str' → logprob: -17.125911712646484
    5. '	str' → logprob: -19.375911712646484
    6. '```' → logprob: -19.500911712646484
    7. '=str' → logprob: -20.375911712646484
    8. '[str' → logprob: -20.750911712646484
    9. '
' → logprob: -20.875911712646484
    10. '_str' → logprob: -22.500911712646484

Token 710: ',' (ID: 11)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.08059141039848328
    2. '(str' → logprob: -2.5805914402008057
    3. ' str' → logprob: -6.580591201782227
    4. '=str' → logprob: -8.330591201782227
    5. '	str' → logprob: -10.705591201782227
    6. '[str' → logprob: -10.955591201782227
    7. '   ' → logprob: -11.080591201782227
    8. 'def' → logprob: -12.205591201782227
    9. ',str' → logprob: -12.455591201782227
    10. '```' → logprob: -12.705591201782227

Token 711: ' puis' (ID: 18766)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.008654399774968624
    2. ' str' → logprob: -4.758654594421387
    3. '   ' → logprob: -10.633654594421387
    4. 'lambda' → logprob: -11.758654594421387
    5. 'return' → logprob: -12.758654594421387
    6. '	str' → logprob: -12.758654594421387
    7. ' lambda' → logprob: -14.633654594421387
    8. 'map' → logprob: -14.633654594421387
    9. '
' → logprob: -15.133654594421387
    10. ' ' → logprob: -15.133654594421387

Token 712: ' les' (ID: 1341)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3204348087310791
    2. ''' → logprob: -1.320434808731079
    3. 'return' → logprob: -5.0704345703125
    4. ' '' → logprob: -8.1954345703125
    5. 'join' → logprob: -8.3204345703125
    6. ' return' → logprob: -8.6954345703125
    7. ' "' → logprob: -9.0704345703125
    8. 'str' → logprob: -10.0704345703125
    9. ''s' → logprob: -11.1954345703125
    10. ' join' → logprob: -12.8204345703125

Token 713: ' joint' (ID: 14585)
  Prédit: 'join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.04905544966459274
    2. '"' → logprob: -3.549055337905884
    3. ' join' → logprob: -4.549055576324463
    4. '.join' → logprob: -5.174055576324463
    5. ''' → logprob: -5.924055576324463
    6. 'print' → logprob: -9.799055099487305
    7. 'return' → logprob: -9.924055099487305
    8. '.' → logprob: -10.549055099487305
    9. ')' → logprob: -10.674055099487305
    10. ' "' → logprob: -10.924055099487305

Token 714: ' avec' (ID: 3937)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.10363397002220154
    2. '("' → logprob: -2.7286338806152344
    3. '(' → logprob: -3.9786338806152344
    4. '"' → logprob: -4.978633880615234
    5. ''' → logprob: -5.978633880615234
    6. '(str' → logprob: -6.353633880615234
    7. 'str' → logprob: -6.603633880615234
    8. ')' → logprob: -7.103633880615234
    9. 'join' → logprob: -7.853633880615234
    10. 'map' → logprob: -9.603633880615234

Token 715: ' un' (ID: 537)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.25196197628974915
    2. '"' → logprob: -1.5019619464874268
    3. ' '' → logprob: -10.501961708068848
    4. ' "' → logprob: -12.876961708068848
    5. 'str' → logprob: -14.126961708068848
    6. ''s' → logprob: -14.626961708068848
    7. ''un' → logprob: -14.751961708068848
    8. ''espace' → logprob: -14.751961708068848
    9. ''esp' → logprob: -15.876961708068848
    10. ''a' → logprob: -16.001962661743164

Token 716: ' espace' (ID: 66004)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20181061327457428
    2. ''' → logprob: -1.701810598373413
    3. ' "' → logprob: -8.951810836791992
    4. ''espace' → logprob: -9.076810836791992
    5. ' '' → logprob: -9.201810836791992
    6. 'space' → logprob: -10.326810836791992
    7. ''esp' → logprob: -12.076810836791992
    8. ' espace' → logprob: -13.076810836791992
    9. '`' → logprob: -13.201810836791992
    10. '"""' → logprob: -13.326810836791992

Token 717: ' entre' (ID: 3853)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4492886960506439
    2. 'return' → logprob: -1.3242887258529663
    3. '("' → logprob: -3.8242886066436768
    4. '.' → logprob: -3.9492886066436768
    5. '.join' → logprob: -3.9492886066436768
    6. ' return' → logprob: -4.074288845062256
    7. ''' → logprob: -4.824288845062256
    8. ')' → logprob: -5.824288845062256
    9. '"' → logprob: -5.824288845062256
    10. '   ' → logprob: -6.449288845062256

Token 718: ' eux' (ID: 36371)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.386981725692749
    2. '"' → logprob: -1.136981725692749
    3. 'return' → logprob: -9.636981964111328
    4. ')' → logprob: -11.011981964111328
    5. ' '' → logprob: -11.511981964111328
    6. '`' → logprob: -12.011981964111328
    7. '('' → logprob: -12.636981964111328
    8. ' "' → logprob: -12.636981964111328
    9. 'x' → logprob: -13.886981964111328
    10. '```' → logprob: -14.136981964111328

Token 719: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2532964050769806
    2. '('' → logprob: -2.503296375274658
    3. ' return' → logprob: -2.753296375274658
    4. '   ' → logprob: -2.878296375274658
    5. '("' → logprob: -5.003296375274658
    6. ')' → logprob: -5.253296375274658
    7. '(' → logprob: -5.753296375274658
    8. '.join' → logprob: -5.878296375274658
    9. ''' → logprob: -6.878296375274658
    10. '"' → logprob: -7.253296375274658

Token 720: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6810199618339539
    2. '   ' → logprob: -1.1810200214385986
    3. ' return' → logprob: -1.6810200214385986
    4. 'def' → logprob: -7.9310197830200195
    5. '	return' → logprob: -8.43101978302002
    6. ')' → logprob: -9.68101978302002
    7. ':return' → logprob: -9.80601978302002
    8. '):
' → logprob: -10.93101978302002
    9. '):' → logprob: -11.18101978302002
    10. ')return' → logprob: -12.30601978302002

Token 721: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011058545671403408
    2. ' return' → logprob: -4.511058330535889
    3. '"' → logprob: -12.136058807373047
    4. ''' → logprob: -12.261058807373047
    5. '   ' → logprob: -14.511058807373047
    6. ')return' → logprob: -16.886058807373047
    7. '	return' → logprob: -17.011058807373047
    8. 'def' → logprob: -17.511058807373047
    9. '
' → logprob: -18.761058807373047
    10. '`' → logprob: -19.011058807373047

Token 722: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.31326404213905334
    2. ''' → logprob: -1.313264012336731
    3. ' "' → logprob: -13.438263893127441
    4. ' '' → logprob: -14.313263893127441
    5. ''s' → logprob: -16.063264846801758
    6. ' ' → logprob: -17.563264846801758
    7. ''m' → logprob: -17.563264846801758
    8. 'str' → logprob: -17.813264846801758
    9. ''"' → logprob: -18.688264846801758
    10. 'print' → logprob: -18.813264846801758

Token 723: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7052543759346008
    2. ' ".' → logprob: -0.7052543759346008
    3. ''' → logprob: -5.330254554748535
    4. '".' → logprob: -5.580254554748535
    5. ' "' → logprob: -5.705254554748535
    6. 'join' → logprob: -9.705254554748535
    7. ' '.' → logprob: -11.705254554748535
    8. 'print' → logprob: -12.580254554748535
    9. 'str' → logprob: -12.705254554748535
    10. ''.' → logprob: -13.080254554748535

Token 724: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.128163257315464e-07
    2. ' join' → logprob: -15.25
    3. '.join' → logprob: -16.875
    4. 'jo' → logprob: -18.375
    5. 'joint' → logprob: -18.75
    6. 'j' → logprob: -19.625
    7. '(join' → logprob: -20.0
    8. '".' → logprob: -21.625
    9. '.' → logprob: -21.625
    10. '"' → logprob: -21.75

Token 725: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00027015688829123974
    2. 'map' → logprob: -8.750269889831543
    3. '(str' → logprob: -9.250269889831543
    4. '(list' → logprob: -11.500269889831543
    5. '(' → logprob: -12.250269889831543
    6. ' map' → logprob: -14.875269889831543
    7. 'str' → logprob: -16.37527084350586
    8. '	map' → logprob: -16.37527084350586
    9. 'list' → logprob: -17.12527084350586
    10. ',map' → logprob: -17.50027084350586

Token 726: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0019294669618830085
    2. 'str' → logprob: -6.25192928314209
    3. '=str' → logprob: -15.12692928314209
    4. ' str' → logprob: -15.25192928314209
    5. '(' → logprob: -15.62692928314209
    6. '[str' → logprob: -16.501930236816406
    7. '```' → logprob: -17.126930236816406
    8. ',str' → logprob: -18.001930236816406
    9. '	str' → logprob: -18.501930236816406
    10. ':str' → logprob: -18.501930236816406

Token 727: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2018512487411499
    2. ',x' → logprob: -1.95185124874115
    3. '(x' → logprob: -3.2018513679504395
    4. ' ,' → logprob: -10.076850891113281
    5. 'x' → logprob: -10.826850891113281
    6. '(' → logprob: -11.201850891113281
    7. ',
' → logprob: -11.951850891113281
    8. ',(' → logprob: -14.076850891113281
    9. ' x' → logprob: -14.201850891113281
    10. '
' → logprob: -14.826850891113281

Token 728: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004306692280806601
    2. ' x' → logprob: -7.750430583953857
    3. '(x' → logprob: -16.750431060791016
    4. '	x' → logprob: -19.000431060791016
    5. ',x' → logprob: -20.250431060791016
    6. ')x' → logprob: -21.000431060791016
    7. '{x' → logprob: -22.000431060791016
    8. '   ' → logprob: -22.375431060791016
    9. ' ' → logprob: -22.375431060791016
    10. '[x' → logprob: -22.375431060791016

Token 729: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -9.014684110297821e-06
    2. '()))' → logprob: -12.375008583068848
    3. ')' → logprob: -13.500008583068848
    4. '))
' → logprob: -13.750008583068848
    5. ' ))' → logprob: -13.750008583068848
    6. ')))' → logprob: -13.750008583068848
    7. '()' → logprob: -16.500009536743164
    8. '))

' → logprob: -18.000009536743164
    9. '));' → logprob: -18.000009536743164
    10. ' ' → logprob: -18.125009536743164

Token 730: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19304966926574707
    2. '<|end|>' → logprob: -1.943049669265747
    3. '#' → logprob: -4.068049430847168
    4. '
' → logprob: -4.318049430847168
    5. '```' → logprob: -7.443049430847168
    6. '<|end|>' → logprob: -7.693049430847168
    7. 'n' → logprob: -8.943049430847168
    8. ')' → logprob: -9.318049430847168
    9. 'x' → logprob: -9.443049430847168
    10. '\n' → logprob: -9.568049430847168

Token 731: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006384541047737002
    2. '#' → logprob: -7.375638484954834
    3. 'from' → logprob: -12.000638008117676
    4. 'n' → logprob: -13.750638008117676
    5. 'if' → logprob: -13.875638008117676
    6. 'import' → logprob: -14.375638008117676
    7. 'd' → logprob: -14.625638008117676
    8. 'N' → logprob: -15.000638008117676
    9. 'class' → logprob: -15.000638008117676
    10. '```' → logprob: -15.000638008117676

Token 732: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0027273711748421192
    2. ' def' → logprob: -6.377727508544922
    3. '#' → logprob: -7.752727508544922
    4. 's' → logprob: -8.127727508544922
    5. 'd' → logprob: -9.752727508544922
    6. 'de' → logprob: -9.752727508544922
    7. '(s' → logprob: -11.127727508544922
    8. ' s' → logprob: -11.127727508544922
    9. 'print' → logprob: -11.377727508544922
    10. '(' → logprob: -11.502727508544922

Token 733: ' trouver' (ID: 23195)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.347954273223877
    2. 'def' → logprob: -1.847954273223877
    3. 'pow' → logprob: -1.972954273223877
    4. ' main' → logprob: -2.222954273223877
    5. 'dfs' → logprob: -2.847954273223877
    6. 'print' → logprob: -3.097954273223877
    7. 'factor' → logprob: -3.347954273223877
    8. 'solve' → logprob: -3.972954273223877
    9. 'comb' → logprob: -4.222954273223877
    10. ' factorial' → logprob: -4.597954273223877

Token 734: ' la' (ID: 557)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4447482228279114
    2. 'def' → logprob: -2.1947481632232666
    3. 'bs' → logprob: -2.9447481632232666
    4. 'l' → logprob: -3.3197481632232666
    5. 'a' → logprob: -3.6947481632232666
    6. '(bs' → logprob: -3.6947481632232666
    7. ' the' → logprob: -4.069748401641846
    8. '(x' → logprob: -4.069748401641846
    9. 'la' → logprob: -4.194748401641846
    10. '#' → logprob: -4.194748401641846

Token 735: ' plus' (ID: 2932)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.9417667984962463
    2. ' index' → logprob: -2.3167667388916016
    3. 'k' → logprob: -2.5667667388916016
    4. ' k' → logprob: -2.9417667388916016
    5. 'lower' → logprob: -2.9417667388916016
    6. 'minimum' → logprob: -2.9417667388916016
    7. 'bis' → logprob: -3.0667667388916016
    8. 'lowest' → logprob: -3.6917667388916016
    9. '#' → logprob: -3.8167667388916016
    10. 'min' → logprob: -3.9417667388916016

Token 736: ' grande' (ID: 10094)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0497978925704956
    2. 'pro' → logprob: -1.4247978925704956
    3. 'long' → logprob: -1.9247978925704956
    4. ' proche' → logprob: -2.049798011779785
    5. 'large' → logprob: -3.049798011779785
    6. ' long' → logprob: -4.674798011779785
    7. 'b' → logprob: -4.674798011779785
    8. 'import' → logprob: -4.924798011779785
    9. '_' → logprob: -5.049798011779785
    10. 'près' → logprob: -5.299798011779785

Token 737: ' valeur' (ID: 41664)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.9441881775856018
    2. 'def' → logprob: -1.569188117980957
    3. 'element' → logprob: -1.944188117980957
    4. 'élé' → logprob: -2.944188117980957
    5. 'sub' → logprob: -3.319188117980957
    6. 'value' → logprob: -4.069188117980957
    7. '(x' → logprob: -4.319188117980957
    8. 'val' → logprob: -4.444188117980957
    9. '_div' → logprob: -4.444188117980957
    10. '_element' → logprob: -4.694188117980957

Token 738: ' dans' (ID: 2671)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0034171282313764095
    2. '(x' → logprob: -5.878417015075684
    3. 'de' → logprob: -8.503417015075684
    4. '(lst' → logprob: -9.128417015075684
    5. '(arr' → logprob: -10.128417015075684
    6. 'd' → logprob: -10.253417015075684
    7. '_' → logprob: -10.378417015075684
    8. ' (' → logprob: -10.503417015075684
    9. ' def' → logprob: -10.628417015075684
    10. '(' → logprob: -10.753417015075684

Token 739: ' une' (ID: 2463)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.19157710671424866
    2. 'l' → logprob: -2.316577196121216
    3. 'a' → logprob: -3.816577196121216
    4. 'la' → logprob: -4.066576957702637
    5. 'def' → logprob: -4.691576957702637
    6. 'lst' → logprob: -4.941576957702637
    7. 'range' → logprob: -4.941576957702637
    8. '(x' → logprob: -5.441576957702637
    9. 'une' → logprob: -6.191576957702637
    10. 'arr' → logprob: -6.566576957702637

Token 740: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7210673093795776
    2. 'def' → logprob: -0.9710673093795776
    3. 'liste' → logprob: -2.721067428588867
    4. 'x' → logprob: -2.971067428588867
    5. 'range' → logprob: -4.721067428588867
    6. ')' → logprob: -5.846067428588867
    7. 'lst' → logprob: -6.596067428588867
    8. ' list' → logprob: -6.971067428588867
    9. '```' → logprob: -7.971067428588867
    10. 'max' → logprob: -8.096067428588867

Token 741: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.392202976712724e-06
    2. '(x' → logprob: -12.375006675720215
    3. '(
' → logprob: -14.375006675720215
    4. ' def' → logprob: -14.750006675720215
    5. 'd' → logprob: -15.000006675720215
    6. '
' → logprob: -15.375006675720215
    7. '#' → logprob: -15.500006675720215
    8. '(' → logprob: -15.500006675720215
    9. '(def' → logprob: -16.2500057220459
    10. '\' → logprob: -17.2500057220459

Token 742: ' listes' (ID: 179198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.015838798135519028
    2. 'l' → logprob: -4.890838623046875
    3. 'def' → logprob: -5.890838623046875
    4. ' x' → logprob: -6.140838623046875
    5. 'lst' → logprob: -6.765838623046875
    6. '(x' → logprob: -7.140838623046875
    7. ' l' → logprob: -8.140838623046875
    8. 'arr' → logprob: -8.640838623046875
    9. ')' → logprob: -8.765838623046875
    10. 'int' → logprob: -8.890838623046875

Token 743: ' à' (ID: 1221)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.896309739408025e-07
    2. '
' → logprob: -14.750000953674316
    3. '#' → logprob: -15.625000953674316
    4. ' def' → logprob: -15.875000953674316
    5. '(def' → logprob: -18.5
    6. '```' → logprob: -19.125
    7. '\' → logprob: -19.875
    8. '#
' → logprob: -19.875
    9. 'from' → logprob: -20.125
    10. '_def' → logprob: -20.625

Token 744: ' deux' (ID: 10301)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11620128899812698
    2. 'lambda' → logprob: -2.616201400756836
    3. 'key' → logprob: -4.366201400756836
    4. ' x' → logprob: -4.491201400756836
    5. ' key' → logprob: -5.866201400756836
    6. 'l' → logprob: -6.616201400756836
    7. ' lambda' → logprob: -6.866201400756836
    8. '[' → logprob: -6.991201400756836
    9. ' une' → logprob: -7.116201400756836
    10. '#' → logprob: -7.241201400756836

Token 745: ' dimensions' (ID: 23995)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.30275577306747437
    2. '[' → logprob: -3.177755832672119
    3. 'elements' → logprob: -3.177755832672119
    4. 'elem' → logprob: -3.427755832672119
    5. ' éléments' → logprob: -3.427755832672119
    6. 'def' → logprob: -3.552755832672119
    7. ']' → logprob: -3.802755832672119
    8. 'indices' → logprob: -4.052755832672119
    9. '#' → logprob: -4.427755832672119
    10. 'x' → logprob: -5.427755832672119

Token 746: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5048530030981055e-06
    2. ' def' → logprob: -13.625001907348633
    3. '
' → logprob: -15.750001907348633
    4. '#' → logprob: -17.750001907348633
    5. '(def' → logprob: -18.875001907348633
    6. ':def' → logprob: -19.000001907348633
    7. '```' → logprob: -19.500001907348633
    8. 'd' → logprob: -20.000001907348633
    9. 'from' → logprob: -20.375001907348633
    10. ':' → logprob: -20.375001907348633

Token 747: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. ' def' → logprob: -16.375
    3. '
' → logprob: -20.125
    4. '```' → logprob: -20.125
    5. '#' → logprob: -21.0
    6. 'd' → logprob: -22.25
    7. '	def' → logprob: -23.0
    8. '``' → logprob: -23.5
    9. ':def' → logprob: -23.875
    10. '_def' → logprob: -24.75

Token 748: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.531428873538971
    2. ' max' → logprob: -2.281428813934326
    3. 'ma' → logprob: -2.531428813934326
    4. 'mx' → logprob: -3.281428813934326
    5. ' mx' → logprob: -3.781428813934326
    6. 'Max' → logprob: -3.781428813934326
    7. 'g' → logprob: -4.031428813934326
    8. 'f' → logprob: -4.156428813934326
    9. 's' → logprob: -4.531428813934326
    10. ' ma' → logprob: -4.656428813934326

Token 749: '2' (ID: 17)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7209146022796631
    2. '(x' → logprob: -1.095914602279663
    3. '_' → logprob: -2.970914602279663
    4. '(a' → logprob: -3.095914602279663
    5. '(lambda' → logprob: -4.220914840698242
    6. '(' → logprob: -4.595914840698242
    7. '(l' → logprob: -4.845914840698242
    8. '(lst' → logprob: -5.220914840698242
    9. '2' → logprob: -5.470914840698242
    10. 'a' → logprob: -5.720914840698242

Token 750: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.012936320155858994
    2. '(lst' → logprob: -4.887936115264893
    3. '(l' → logprob: -5.762936115264893
    4. '(a' → logprob: -7.262936115264893
    5. '(arr' → logprob: -7.762936115264893
    6. '(L' → logprob: -7.887936115264893
    7. '(' → logprob: -8.13793659210205
    8. 'def' → logprob: -9.26293659210205
    9. '(list' → logprob: -9.76293659210205
    10. '(ls' → logprob: -9.88793659210205

Token 751: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3134119510650635
    2. '):
' → logprob: -1.3134119510650635
    3. ')' → logprob: -9.563411712646484
    4. '):
' → logprob: -10.063411712646484
    5. ' ):' → logprob: -10.813411712646484
    6. '   ' → logprob: -12.438411712646484
    7. ' ):
' → logprob: -12.563411712646484
    8. '):

' → logprob: -12.688411712646484
    9. 'def' → logprob: -13.313411712646484
    10. '(x' → logprob: -13.813411712646484

Token 752: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00481469975784421
    2. 'return' → logprob: -6.504814624786377
    3. '():' → logprob: -6.504814624786377
    4. ' return' → logprob: -7.379814624786377
    5. '):' → logprob: -8.129815101623535
    6. '():
' → logprob: -8.379815101623535
    7. ':' → logprob: -8.879815101623535
    8. '):
' → logprob: -9.004815101623535
    9. 'a' → logprob: -9.379815101623535
    10. ':
' → logprob: -9.754815101623535

Token 753: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1064116582274437
    2. '   ' → logprob: -2.6064116954803467
    3. ' return' → logprob: -3.8564116954803467
    4. 'max' → logprob: -5.231411457061768
    5. 'r' → logprob: -8.731411933898926
    6. 'ans' → logprob: -9.106411933898926
    7. 'Max' → logprob: -9.356411933898926
    8. 'ret' → logprob: -9.481411933898926
    9. ' max' → logprob: -9.606411933898926
    10. 'm' → logprob: -10.106411933898926

Token 754: ' Ap' (ID: 6537)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002600268693640828
    2. 'max' → logprob: -7.127600193023682
    3. ' return' → logprob: -7.377600193023682
    4. '   ' → logprob: -7.502600193023682
    5. 'res' → logprob: -8.62760066986084
    6. 'ret' → logprob: -8.75260066986084
    7. 'ans' → logprob: -9.12760066986084
    8. 'r' → logprob: -9.62760066986084
    9. 'm' → logprob: -10.50260066986084
    10. 'mx' → logprob: -10.75260066986084

Token 755: 'plique' (ID: 71193)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8228998184204102
    2. 'ply' → logprob: -1.5728998184204102
    3. 'pend' → logprob: -2.07289981842041
    4. 'max' → logprob: -3.07289981842041
    5. 'def' → logprob: -3.19789981842041
    6. 'prox' → logprob: -3.44789981842041
    7. ' return' → logprob: -3.57289981842041
    8. '   ' → logprob: -3.57289981842041
    9. 'x' → logprob: -3.94789981842041
    10. 'eturn' → logprob: -5.19789981842041

Token 756: ' '' (ID: 461)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0032292907126247883
    2. 'lambda' → logprob: -5.753229141235352
    3. ' max' → logprob: -10.003229141235352
    4. '(max' → logprob: -12.628229141235352
    5. '(lambda' → logprob: -13.128229141235352
    6. ' lambda' → logprob: -14.503229141235352
    7. '   ' → logprob: -16.12822914123535
    8. 'map' → logprob: -16.25322914123535
    9. '[max' → logprob: -16.37822914123535
    10. 'bs' → logprob: -17.25322914123535

Token 757: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.002253387589007616
    2. 'lambda' → logprob: -6.127253532409668
    3. ' max' → logprob: -9.627253532409668
    4. '   ' → logprob: -14.502253532409668
    5. ' lambda' → logprob: -14.752253532409668
    6. 'map' → logprob: -14.752253532409668
    7. '(max' → logprob: -15.002253532409668
    8. 'bs' → logprob: -15.752253532409668
    9. 'maximum' → logprob: -15.877253532409668
    10. '
' → logprob: -16.00225257873535

Token 758: ''' (ID: 6)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.4369124174118042
    2. 'max' → logprob: -1.1869124174118042
    3. '(lambda' → logprob: -3.3119125366210938
    4. 'map' → logprob: -5.186912536621094
    5. '(' → logprob: -6.436912536621094
    6. 'lambda' → logprob: -6.561912536621094
    7. '(map' → logprob: -6.686912536621094
    8. '(x' → logprob: -7.436912536621094
    9. ' max' → logprob: -7.561912536621094
    10. '   ' → logprob: -8.061912536621094

Token 759: ' à' (ID: 1221)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.15029165148735046
    2. '(x' → logprob: -3.025291681289673
    3. 'max' → logprob: -3.150291681289673
    4. '(' → logprob: -3.900291681289673
    5. '(map' → logprob: -4.775291442871094
    6. 'map' → logprob: -4.775291442871094
    7. '([' → logprob: -5.400291442871094
    8. '(lambda' → logprob: -6.275291442871094
    9. '(
' → logprob: -6.775291442871094
    10. 'def' → logprob: -7.150291442871094

Token 760: ' chaque' (ID: 21194)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4993181824684143
    2. 'max' → logprob: -1.4993181228637695
    3. 'x' → logprob: -2.8743181228637695
    4. '[x' → logprob: -2.9993181228637695
    5. '[max' → logprob: -3.7493181228637695
    6. '[' → logprob: -4.2493181228637695
    7. '[i' → logprob: -4.3743181228637695
    8. '(max' → logprob: -5.4993181228637695
    9. '(x' → logprob: -6.1243181228637695
    10. ' map' → logprob: -6.3743181228637695

Token 761: ' liste' (ID: 31719)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8264936208724976
    2. 'sub' → logprob: -1.0764936208724976
    3. 'row' → logprob: -2.701493740081787
    4. '(x' → logprob: -3.076493740081787
    5. 'map' → logprob: -3.201493740081787
    6. 'elem' → logprob: -3.826493740081787
    7. ' x' → logprob: -4.951493740081787
    8. 'item' → logprob: -4.951493740081787
    9. 'range' → logprob: -4.951493740081787
    10. 'i' → logprob: -5.326493740081787

Token 762: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.07090714573860168
    2. '(i' → logprob: -3.3209071159362793
    3. '(row' → logprob: -4.445907115936279
    4. 'x' → logprob: -5.320907115936279
    5. ' in' → logprob: -5.445907115936279
    6. '(' → logprob: -6.695907115936279
    7. 'def' → logprob: -6.820907115936279
    8. ',' → logprob: -7.070907115936279
    9. '(l' → logprob: -7.070907115936279
    10. 'sub' → logprob: -7.320907115936279

Token 763: 'tr' (ID: 371)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09204573929309845
    2. 'lambda' → logprob: -2.467045783996582
    3. 'i' → logprob: -6.467045783996582
    4. 'xi' → logprob: -7.592045783996582
    5. 'row' → logprob: -8.092045783996582
    6. ' x' → logprob: -8.717045783996582
    7. ' lambda' → logprob: -8.717045783996582
    8. 'range' → logprob: -9.467045783996582
    9. 'l' → logprob: -9.467045783996582
    10. 'y' → logprob: -9.967045783996582

Token 764: 'ouve' (ID: 44982)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.043901920318603516
    2. ' x' → logprob: -3.2939019203186035
    3. '(x' → logprob: -5.9189019203186035
    4. '[' → logprob: -7.0439019203186035
    5. 'ow' → logprob: -7.7939019203186035
    6. '[x' → logprob: -8.043901443481445
    7. '   ' → logprob: -8.418901443481445
    8. ')' → logprob: -8.418901443481445
    9. 'el' → logprob: -8.793901443481445
    10. 'ip' → logprob: -8.918901443481445

Token 765: ' le' (ID: 505)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5403516292572021
    2. 'lambda' → logprob: -0.9153516292572021
    3. ' lambda' → logprob: -4.790351867675781
    4. '(lambda' → logprob: -5.290351867675781
    5. ' max' → logprob: -5.790351867675781
    6. '(max' → logprob: -8.290351867675781
    7. 'x' → logprob: -9.040351867675781
    8. '   ' → logprob: -9.415351867675781
    9. 'l' → logprob: -10.165351867675781
    10. 'key' → logprob: -10.290351867675781

Token 766: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.016134431585669518
    2. ' max' → logprob: -4.141134262084961
    3. 'len' → logprob: -10.766134262084961
    4. 'x' → logprob: -10.891134262084961
    5. '(max' → logprob: -11.141134262084961
    6. ')' → logprob: -11.641134262084961
    7. 'maximum' → logprob: -11.641134262084961
    8. '[max' → logprob: -12.141134262084961
    9. '0' → logprob: -12.516134262084961
    10. 'lambda' → logprob: -12.766134262084961

Token 767: ' de' (ID: 334)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4409925639629364
    2. ')' → logprob: -1.5659925937652588
    3. 'x' → logprob: -3.315992593765259
    4. ' dans' → logprob: -3.690992593765259
    5. 'dans' → logprob: -3.940992593765259
    6. ' de' → logprob: -4.19099235534668
    7. 'de' → logprob: -4.94099235534668
    8. '[' → logprob: -5.31599235534668
    9. ',' → logprob: -5.56599235534668
    10. 'max' → logprob: -5.69099235534668

Token 768: ' chaque' (ID: 21194)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5149778723716736
    2. 'i' → logprob: -2.0149779319763184
    3. 'l' → logprob: -2.0149779319763184
    4. 'sub' → logprob: -3.3899779319763184
    5. ' x' → logprob: -4.014977931976318
    6. 'xi' → logprob: -4.264977931976318
    7. ' la' → logprob: -4.389977931976318
    8. 's' → logprob: -4.514977931976318
    9. ' l' → logprob: -5.139977931976318
    10. ' i' → logprob: -5.389977931976318

Token 769: ' ligne' (ID: 19583)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3064497411251068
    2. 's' → logprob: -1.5564497709274292
    3. 'élé' → logprob: -3.9314496517181396
    4. 'sub' → logprob: -4.056449890136719
    5. 'ligne' → logprob: -5.681449890136719
    6. 'l' → logprob: -5.806449890136719
    7. ')' → logprob: -6.056449890136719
    8. 'liste' → logprob: -6.181449890136719
    9. '[' → logprob: -7.431449890136719
    10. ' x' → logprob: -7.431449890136719

Token 770: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06288300454616547
    2. '),' → logprob: -3.437882900238037
    3. '   ' → logprob: -3.687882900238037
    4. ')
' → logprob: -6.562882900238037
    5. '(x' → logprob: -7.312882900238037
    6. ' )' → logprob: -7.562882900238037
    7. ',' → logprob: -7.812882900238037
    8. ' x' → logprob: -9.062883377075195
    9. 'def' → logprob: -9.062883377075195
    10. ')x' → logprob: -9.437883377075195

Token 771: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1317588835954666
    2. ',' → logprob: -2.75675892829895
    3. '(x' → logprob: -3.50675892829895
    4. 'return' → logprob: -4.631758689880371
    5. ')' → logprob: -5.006758689880371
    6. ' return' → logprob: -6.131758689880371
    7. 'max' → logprob: -6.381758689880371
    8. 'def' → logprob: -6.381758689880371
    9. '(max' → logprob: -7.006758689880371
    10. 'for' → logprob: -7.131758689880371

Token 772: ' prend' (ID: 37463)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.41282761096954346
    2. ' max' → logprob: -1.2878276109695435
    3. 'return' → logprob: -3.412827491760254
    4. ' return' → logprob: -3.537827491760254
    5. ' returns' → logprob: -9.287827491760254
    6. ')' → logprob: -9.537827491760254
    7. ',' → logprob: -10.412827491760254
    8. '
' → logprob: -10.537827491760254
    9. ' retour' → logprob: -10.537827491760254
    10. '   ' → logprob: -10.662827491760254

Token 773: ' le' (ID: 505)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009799322579056025
    2. ' max' → logprob: -7.000979900360107
    3. '(max' → logprob: -10.125980377197266
    4. 'le' → logprob: -10.750980377197266
    5. 'la' → logprob: -13.250980377197266
    6. 'maximum' → logprob: -13.375980377197266
    7. 'min' → logprob: -14.250980377197266
    8. 'l' → logprob: -14.250980377197266
    9. '_max' → logprob: -14.375980377197266
    10. '=max' → logprob: -14.500980377197266

Token 774: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.024770688265562057
    2. ' max' → logprob: -3.774770736694336
    3. ' maximum' → logprob: -7.024770736694336
    4. 'maximum' → logprob: -7.399770736694336
    5. '(max' → logprob: -11.274770736694336
    6. ' maximale' → logprob: -12.524770736694336
    7. ' maxi' → logprob: -13.024770736694336
    8. '_max' → logprob: -13.774770736694336
    9. '	max' → logprob: -14.149770736694336
    10. ' maximal' → logprob: -14.149770736694336

Token 775: ' général' (ID: 30475)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.3542989194393158
    2. 'max' → logprob: -2.2292988300323486
    3. '(' → logprob: -2.9792988300323486
    4. '([' → logprob: -2.9792988300323486
    5. '(
' → logprob: -3.2292988300323486
    6. '(map' → logprob: -3.4792988300323486
    7. '(list' → logprob: -4.979299068450928
    8. '(x' → logprob: -5.354299068450928
    9. 'x' → logprob: -6.729299068450928
    10. 'map' → logprob: -6.729299068450928

Token 776: '
' (ID: 198)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.43692052364349365
    2. '([' → logprob: -2.061920642852783
    3. 'return' → logprob: -2.561920642852783
    4. 'max' → logprob: -2.936920642852783
    5. '(x' → logprob: -3.436920642852783
    6. '(
' → logprob: -3.811920642852783
    7. '(list' → logprob: -4.561920642852783
    8. '   ' → logprob: -4.936920642852783
    9. '(' → logprob: -5.186920642852783
    10. '(map' → logprob: -5.436920642852783

Token 777: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5325261950492859
    2. '   ' → logprob: -0.9075261950492859
    3. ' return' → logprob: -4.782526016235352
    4. '=' → logprob: -8.282526016235352
    5. ' =' → logprob: -8.782526016235352
    6. 'max' → logprob: -9.032526016235352
    7. 'def' → logprob: -9.407526016235352
    8. 'x' → logprob: -10.032526016235352
    9. '(x' → logprob: -10.157526016235352
    10. '(max' → logprob: -10.157526016235352

Token 778: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.013051874935626984
    2. 'max' → logprob: -4.388051986694336
    3. ' return' → logprob: -7.763051986694336
    4. '   ' → logprob: -9.138051986694336
    5. ' max' → logprob: -11.763051986694336
    6. 'def' → logprob: -14.888051986694336
    7. '
' → logprob: -14.888051986694336
    8. '(max' → logprob: -15.263051986694336
    9. ' ' → logprob: -15.638051986694336
    10. '	return' → logprob: -16.138051986694336

Token 779: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04858816787600517
    2. ' max' → logprob: -3.048588275909424
    3. '(max' → logprob: -14.798587799072266
    4. '	max' → logprob: -15.923587799072266
    5. ' ' → logprob: -16.548587799072266
    6. 'Max' → logprob: -16.673587799072266
    7. '   ' → logprob: -16.923587799072266
    8. '_max' → logprob: -17.923587799072266
    9. ',max' → logprob: -18.048587799072266
    10. '  ' → logprob: -18.298587799072266

Token 780: '(map' (ID: 16946)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.010018020868301392
    2. '(map' → logprob: -4.7600178718566895
    3. '([' → logprob: -6.7600178718566895
    4. '(' → logprob: -8.510018348693848
    5. 'max' → logprob: -10.385018348693848
    6. '(x' → logprob: -12.385018348693848
    7. '[max' → logprob: -13.010018348693848
    8. 'map' → logprob: -13.385018348693848
    9. '(
' → logprob: -13.510018348693848
    10. '(list' → logprob: -14.885018348693848

Token 781: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.029934344813227654
    2. 'max' → logprob: -3.5299344062805176
    3. '(lambda' → logprob: -8.65493392944336
    4. '(' → logprob: -12.40493392944336
    5. ' max' → logprob: -12.65493392944336
    6. 'lambda' → logprob: -14.15493392944336
    7. '(
' → logprob: -14.40493392944336
    8. ',max' → logprob: -14.90493392944336
    9. '[max' → logprob: -15.40493392944336
    10. '=max' → logprob: -15.40493392944336

Token 782: ',' (ID: 11)
  Prédit: ',x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.5778815746307373
    2. ',' → logprob: -0.8278815746307373
    3. '(x' → logprob: -6.327881813049316
    4. ' ,' → logprob: -9.202881813049316
    5. '(' → logprob: -11.452881813049316
    6. ',(' → logprob: -11.577881813049316
    7. ',
' → logprob: -12.452881813049316
    8. ',row' → logprob: -12.452881813049316
    9. ',List' → logprob: -12.702881813049316
    10. 'x' → logprob: -12.952881813049316

Token 783: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.15310683415737e-05
    2. ' x' → logprob: -10.750021934509277
    3. '(x' → logprob: -17.25002098083496
    4. '	x' → logprob: -19.25002098083496
    5. '   ' → logprob: -20.00002098083496
    6. ')x' → logprob: -20.25002098083496
    7. ' ' → logprob: -20.50002098083496
    8. '[x' → logprob: -20.62502098083496
    9. '  ' → logprob: -21.37502098083496
    10. ')' → logprob: -22.12502098083496

Token 784: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -3.786196975852363e-05
    2. '))
' → logprob: -11.000038146972656
    3. ' ))' → logprob: -11.625038146972656
    4. '()))' → logprob: -11.750038146972656
    5. ')' → logprob: -13.125038146972656
    6. ')))' → logprob: -13.750038146972656
    7. ' ' → logprob: -14.875038146972656
    8. '(x' → logprob: -15.000038146972656
    9. '));' → logprob: -15.625038146972656
    10. '(' → logprob: -16.250038146972656

Token 785: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 786: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00883473176509142
    2. '#' → logprob: -4.7588348388671875
    3. 'from' → logprob: -9.508834838867188
    4. 'class' → logprob: -10.258834838867188
    5. '
' → logprob: -10.508834838867188
    6. '```' → logprob: -10.508834838867188
    7. 'import' → logprob: -11.008834838867188
    8. 'n' → logprob: -11.633834838867188
    9. 'Explain' → logprob: -12.508834838867188
    10. 'print' → logprob: -13.008834838867188

Token 787: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03266075626015663
    2. ' def' → logprob: -3.657660722732544
    3. 'max' → logprob: -6.282660961151123
    4. ' max' → logprob: -6.282660961151123
    5. '#' → logprob: -6.782660961151123
    6. 's' → logprob: -8.282660484313965
    7. ' s' → logprob: -9.282660484313965
    8. ' factorial' → logprob: -9.282660484313965
    9. 'from' → logprob: -9.657660484313965
    10. ' min' → logprob: -9.907660484313965

Token 788: ' vér' (ID: 42524)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4649181663990021
    2. ' calc' → logprob: -2.0899181365966797
    3. ' retourne' → logprob: -3.3399181365966797
    4. 'calc' → logprob: -3.9649181365966797
    5. ' prend' → logprob: -4.21491813659668
    6. 'calcul' → logprob: -4.46491813659668
    7. 'tr' → logprob: -4.71491813659668
    8. 'lit' → logprob: -4.71491813659668
    9. '#' → logprob: -4.71491813659668
    10. 'max' → logprob: -4.83991813659668

Token 789: 'ifie' (ID: 46409)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.42916139960289
    2. 'et' → logprob: -2.179161310195923
    3. 'e' → logprob: -2.804161310195923
    4. 'ert' → logprob: -3.179161310195923
    5. 'o' → logprob: -3.804161310195923
    6. 'ifie' → logprob: -4.054161548614502
    7. 'f' → logprob: -4.179161548614502
    8. 'oit' → logprob: -4.554161548614502
    9. 'ret' → logprob: -4.804161548614502
    10. 'def' → logprob: -4.804161548614502

Token 790: ' si' (ID: 1784)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7375407814979553
    2. 'if' → logprob: -2.2375407218933105
    3. 'si' → logprob: -2.2375407218933105
    4. '(x' → logprob: -2.3625407218933105
    5. ' if' → logprob: -2.9875407218933105
    6. ' si' → logprob: -3.2375407218933105
    7. ' la' → logprob: -3.4875407218933105
    8. '(' → logprob: -3.4875407218933105
    9. 'la' → logprob: -3.6125407218933105
    10. 'l' → logprob: -4.9875407218933105

Token 791: ' '' (ID: 461)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5077069997787476
    2. ' x' → logprob: -1.8827069997787476
    3. ' un' → logprob: -2.507707118988037
    4. 'a' → logprob: -3.507707118988037
    5. 'un' → logprob: -3.507707118988037
    6. ' une' → logprob: -3.507707118988037
    7. 'une' → logprob: -3.507707118988037
    8. 'l' → logprob: -4.757707118988037
    9. 'le' → logprob: -5.007707118988037
    10. ' le' → logprob: -5.382707118988037

Token 792: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2989359200000763
    2. 'a' → logprob: -2.173935890197754
    3. ' x' → logprob: -2.798935890197754
    4. 'un' → logprob: -4.673935890197754
    5. 'y' → logprob: -4.798935890197754
    6. 'val' → logprob: -4.923935890197754
    7. 'une' → logprob: -4.923935890197754
    8. ' a' → logprob: -5.173935890197754
    9. 'c' → logprob: -5.298935890197754
    10. 'l' → logprob: -5.673935890197754

Token 793: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31917715072631836
    2. 'in' → logprob: -1.3191771507263184
    3. ' ==' → logprob: -6.069177150726318
    4. '==' → logprob: -6.819177150726318
    5. ')' → logprob: -7.694177150726318
    6. ' not' → logprob: -8.194177627563477
    7. ' est' → logprob: -8.319177627563477
    8. ' is' → logprob: -8.444177627563477
    9. 'not' → logprob: -8.694177627563477
    10. '[' → logprob: -9.069177627563477

Token 794: ' est' (ID: 893)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5877662897109985
    2. 'in' → logprob: -0.8377662897109985
    3. '==' → logprob: -4.962766170501709
    4. ' ==' → logprob: -6.212766170501709
    5. ' is' → logprob: -7.712766170501709
    6. '(x' → logprob: -8.087766647338867
    7. ' isinstance' → logprob: -8.337766647338867
    8. 'is' → logprob: -8.337766647338867
    9. ' est' → logprob: -8.587766647338867
    10. 'def' → logprob: -9.087766647338867

Token 795: ' présent' (ID: 24129)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.5106368064880371
    2. 'None' → logprob: -1.135636806488037
    3. 'in' → logprob: -3.260636806488037
    4. 'instance' → logprob: -4.260636806488037
    5. ' iterable' → logprob: -4.885636806488037
    6. ' in' → logprob: -5.385636806488037
    7. 'int' → logprob: -5.885636806488037
    8. ' une' → logprob: -6.010636806488037
    9. 'dans' → logprob: -6.135636806488037
    10. 'une' → logprob: -6.260636806488037

Token 796: ' dans' (ID: 2671)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3540498614311218
    2. ' in' → logprob: -1.2290499210357666
    3. '(' → logprob: -5.3540496826171875
    4. ')' → logprob: -7.7290496826171875
    5. ' (' → logprob: -9.104049682617188
    6. '(x' → logprob: -9.354049682617188
    7. '(
' → logprob: -9.604049682617188
    8. 's' → logprob: -11.104049682617188
    9. '_in' → logprob: -11.229049682617188
    10. ' ' → logprob: -11.229049682617188

Token 797: ' une' (ID: 2463)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3114085793495178
    2. 'a' → logprob: -1.561408519744873
    3. 'y' → logprob: -3.436408519744873
    4. 's' → logprob: -4.811408519744873
    5. 'l' → logprob: -5.061408519744873
    6. ' x' → logprob: -5.436408519744873
    7. ' a' → logprob: -6.436408519744873
    8. ' y' → logprob: -6.936408519744873
    9. 'list' → logprob: -6.936408519744873
    10. ' l' → logprob: -7.311408519744873

Token 798: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8746578693389893
    2. 'set' → logprob: -1.6246578693389893
    3. 'x' → logprob: -1.7496578693389893
    4. ' list' → logprob: -2.6246578693389893
    5. ' set' → logprob: -3.2496578693389893
    6. ' x' → logprob: -3.2496578693389893
    7. ' collection' → logprob: -4.49965763092041
    8. 'collection' → logprob: -4.62465763092041
    9. ' container' → logprob: -4.99965763092041
    10. 's' → logprob: -5.24965763092041

Token 799: ' '' (ID: 461)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006856293766759336
    2. '(x' → logprob: -7.875685691833496
    3. '
' → logprob: -8.500685691833496
    4. ' def' → logprob: -10.000685691833496
    5. 'in' → logprob: -10.625685691833496
    6. 'x' → logprob: -12.625685691833496
    7. '#' → logprob: -12.625685691833496
    8. '=' → logprob: -12.750685691833496
    9. '(
' → logprob: -12.875685691833496
    10. '(' → logprob: -12.875685691833496

Token 800: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8398735523223877
    2. 'l' → logprob: -0.9648735523223877
    3. 'y' → logprob: -2.8398735523223877
    4. 'lst' → logprob: -2.9648735523223877
    5. '(lst' → logprob: -3.7148735523223877
    6. '(l' → logprob: -4.089873313903809
    7. 'x' → logprob: -4.839873313903809
    8. '(x' → logprob: -5.089873313903809
    9. '(a' → logprob: -5.089873313903809
    10. '(ls' → logprob: -6.339873313903809

Token 801: ''' (ID: 6)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9453017711639404
    2. ')' → logprob: -1.0703017711639404
    3. ''' → logprob: -2.4453017711639404
    4. ',' → logprob: -2.5703017711639404
    5. '):' → logprob: -3.9453017711639404
    6. '',' → logprob: -4.3203020095825195
    7. '):
' → logprob: -4.3203020095825195
    8. ' def' → logprob: -4.8203020095825195
    9. 'a' → logprob: -5.0703020095825195
    10. '')' → logprob: -5.0703020095825195

Token 802: ' suppos' (ID: 167611)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.580929347255733e-05
    2. ' def' → logprob: -11.125016212463379
    3. '
' → logprob: -14.375016212463379
    4. ':' → logprob: -15.625016212463379
    5. ':
' → logprob: -16.375015258789062
    6. '=' → logprob: -17.125015258789062
    7. '#' → logprob: -17.250015258789062
    8. ':def' → logprob: -17.250015258789062
    9. ' =' → logprob: -17.625015258789062
    10. '(x' → logprob: -17.875015258789062

Token 803: 'ée' (ID: 2894)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -1.373334527015686
    2. 'ée' → logprob: -1.623334527015686
    3. 'e' → logprob: -2.2483344078063965
    4. 'ument' → logprob: -2.4983344078063965
    5. 'um' → logprob: -2.6233344078063965
    6. 'é' → logprob: -2.7483344078063965
    7. 'u' → logprob: -2.8733344078063965
    8. 'ue' → logprob: -3.1233344078063965
    9. 'umé' → logprob: -3.7483344078063965
    10. '   ' → logprob: -4.1233344078063965

Token 804: ' tri' (ID: 12665)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024946052581071854
    2. '(a' → logprob: -4.149946212768555
    3. 'a' → logprob: -5.649946212768555
    4. 'in' → logprob: -5.774946212768555
    5. '(' → logprob: -7.524946212768555
    6. ' def' → logprob: -7.774946212768555
    7. '#' → logprob: -8.274946212768555
    8. '#a' → logprob: -8.649946212768555
    9. ',' → logprob: -8.774946212768555
    10. '(x' → logprob: -8.899946212768555

Token 805: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.03086237981915474
    2. 'é' → logprob: -4.280862331390381
    3. 'ed' → logprob: -4.905862331390381
    4. 'ted' → logprob: -5.530862331390381
    5. 'e' → logprob: -7.030862331390381
    6. 'ee' → logprob: -7.530862331390381
    7. 'rt' → logprob: -7.530862331390381
    8. 'f' → logprob: -7.530862331390381
    9. 'ff' → logprob: -7.780862331390381
    10. 'éd' → logprob: -7.905862331390381

Token 806: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.096126576769166e-05
    2. ' def' → logprob: -11.000041007995605
    3. 'bs' → logprob: -11.500041007995605
    4. '(bs' → logprob: -11.625041007995605
    5. ':' → logprob: -12.750041007995605
    6. '#' → logprob: -14.250041007995605
    7. '(' → logprob: -15.000041007995605
    8. '(x' → logprob: -15.125041007995605
    9. 'bis' → logprob: -16.12504005432129
    10. '(a' → logprob: -16.25004005432129

Token 807: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03827982395887375
    2. 'a' → logprob: -3.4132797718048096
    3. ' def' → logprob: -5.663280010223389
    4. ' a' → logprob: -7.288280010223389
    5. 'x' → logprob: -8.41327953338623
    6. '#' → logprob: -9.28827953338623
    7. ' x' → logprob: -9.91327953338623
    8. 'arr' → logprob: -10.53827953338623
    9. '#a' → logprob: -10.66327953338623
    10. ')' → logprob: -11.66327953338623

Token 808: ' utilisant' (ID: 92474)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02241329476237297
    2. ' def' → logprob: -4.77241325378418
    3. ' a' → logprob: -5.64741325378418
    4. ' x' → logprob: -6.14741325378418
    5. '#' → logprob: -6.77241325378418
    6. 'a' → logprob: -6.77241325378418
    7. ' utilisant' → logprob: -7.39741325378418
    8. ' bis' → logprob: -7.52241325378418
    9. 'bis' → logprob: -8.02241325378418
    10. 'x' → logprob: -8.14741325378418

Token 809: ' la' (ID: 557)
  Prédit: 'bs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.014294074848294258
    2. 'a' → logprob: -4.264294147491455
    3. 'def' → logprob: -9.139293670654297
    4. ' bs' → logprob: -11.139293670654297
    5. '(bs' → logprob: -12.889293670654297
    6. ' a' → logprob: -13.264293670654297
    7. 'x' → logprob: -13.389293670654297
    8. 'lambda' → logprob: -13.514293670654297
    9. '
' → logprob: -14.764293670654297
    10. '_bs' → logprob: -15.389293670654297

Token 810: ' recherche' (ID: 24975)
  Prédit: 'bs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.6617274284362793
    2. 'bis' → logprob: -0.9117274284362793
    3. ' bis' → logprob: -3.1617274284362793
    4. 'def' → logprob: -4.161727428436279
    5. 'b' → logprob: -4.911727428436279
    6. 'in' → logprob: -5.286727428436279
    7. 'import' → logprob: -5.536727428436279
    8. ' bs' → logprob: -5.536727428436279
    9. ' in' → logprob: -6.786727428436279
    10. '.b' → logprob: -7.911727428436279

Token 811: ' dich' (ID: 16637)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.3285219669342041
    2. '(a' → logprob: -1.953521966934204
    3. 'def' → logprob: -2.078521966934204
    4. 'bis' → logprob: -5.203521728515625
    5. 'a' → logprob: -5.578521728515625
    6. '_sorted' → logprob: -6.203521728515625
    7. '_left' → logprob: -7.078521728515625
    8. '(sorted' → logprob: -7.953521728515625
    9. '(b' → logprob: -8.453521728515625
    10. 'b' → logprob: -10.078521728515625

Token 812: 'otom' (ID: 195780)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.488739013671875
    2. 'ct' → logprob: -0.988739013671875
    3. 't' → logprob: -5.238739013671875
    4. 'sect' → logprob: -5.238739013671875
    5. 'ected' → logprob: -6.613739013671875
    6. 'te' → logprob: -6.988739013671875
    7. 'def' → logprob: -7.363739013671875
    8. 'cut' → logprob: -8.613739013671875
    9. 'sert' → logprob: -9.113739013671875
    10. 'c' → logprob: -9.113739013671875

Token 813: 'ique' (ID: 2222)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.38919633626937866
    2. 'ise' → logprob: -2.3891963958740234
    3. 'se' → logprob: -2.5141963958740234
    4. 'e' → logprob: -3.1391963958740234
    5. 's' → logprob: -3.3891963958740234
    6. 'x' → logprob: -3.8891963958740234
    7. 'sect' → logprob: -4.764196395874023
    8. 'is' → logprob: -4.889196395874023
    9. 'ect' → logprob: -5.264196395874023
    10. '#' → logprob: -5.264196395874023

Token 814: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00011474833445390686
    2. ':' → logprob: -9.625114440917969
    3. ' def' → logprob: -10.500114440917969
    4. '(x' → logprob: -11.250114440917969
    5. '(' → logprob: -13.250114440917969
    6. ':def' → logprob: -13.500114440917969
    7. ':
' → logprob: -13.750114440917969
    8. 'a' → logprob: -14.250114440917969
    9. '(a' → logprob: -14.375114440917969
    10. '.' → logprob: -14.750114440917969

Token 815: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.8624639324116288e-06
    2. ' def' → logprob: -13.250001907348633
    3. '
' → logprob: -19.500001907348633
    4. '#' → logprob: -20.375001907348633
    5. ':def' → logprob: -21.375001907348633
    6. '	def' → logprob: -22.125001907348633
    7. '_def' → logprob: -22.375001907348633
    8. 'ndef' → logprob: -22.750001907348633
    9. 'a' → logprob: -22.875001907348633
    10. '```' → logprob: -22.875001907348633

Token 816: ' In' (ID: 730)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -1.635865330696106
    2. 'in' → logprob: -1.885865330696106
    3. 'f' → logprob: -2.2608652114868164
    4. 'bs' → logprob: -2.3858652114868164
    5. 'is' → logprob: -2.5108652114868164
    6. 'ch' → logprob: -3.2608652114868164
    7. 'b' → logprob: -3.2608652114868164
    8. 'c' → logprob: -3.6358652114868164
    9. 'i' → logprob: -3.7608652114868164
    10. 'isin' → logprob: -4.010865211486816

Token 817: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.010220167227089405
    2. 'def' → logprob: -5.260220050811768
    3. '(' → logprob: -5.885220050811768
    4. '(bs' → logprob: -6.385220050811768
    5. '(x' → logprob: -8.885220527648926
    6. '(
' → logprob: -9.135220527648926
    7. 'a' → logprob: -9.885220527648926
    8. 'range' → logprob: -10.385220527648926
    9. 'bs' → logprob: -11.135220527648926
    10. '(b' → logprob: -11.135220527648926

Token 818: ',' (ID: 11)
  Prédit: ',a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.6729134917259216
    2. ',' → logprob: -0.7979134917259216
    3. '(a' → logprob: -3.4229135513305664
    4. 'a' → logprob: -5.422913551330566
    5. ' ,' → logprob: -6.797913551330566
    6. 'def' → logprob: -8.047913551330566
    7. ')' → logprob: -8.672913551330566
    8. '):' → logprob: -9.172913551330566
    9. ',(' → logprob: -9.172913551330566
    10. ',
' → logprob: -9.297913551330566

Token 819: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.77022064034827e-05
    2. ' a' → logprob: -9.250097274780273
    3. ')' → logprob: -14.375097274780273
    4. 'x' → logprob: -15.375097274780273
    5. '   ' → logprob: -15.875097274780273
    6. ')a' → logprob: -15.875097274780273
    7. '	a' → logprob: -16.000097274780273
    8. 'arr' → logprob: -16.875097274780273
    9. '  ' → logprob: -17.000097274780273
    10. ' ' → logprob: -17.125097274780273

Token 820: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9281448125839233
    2. ',' → logprob: -1.0531448125839233
    3. '):' → logprob: -1.4281448125839233
    4. ')' → logprob: -4.178144931793213
    5. '):
' → logprob: -8.053144454956055
    6. '   ' → logprob: -8.553144454956055
    7. ',x' → logprob: -8.928144454956055
    8. '):

' → logprob: -10.803144454956055
    9. ' ,' → logprob: -10.928144454956055
    10. ' ):' → logprob: -10.928144454956055

Token 821: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36543357372283936
    2. 'return' → logprob: -1.9904335737228394
    3. ' return' → logprob: -2.365433692932129
    4. '	return' → logprob: -2.615433692932129
    5. ' ind' → logprob: -8.240433692932129
    6. '	i' → logprob: -8.240433692932129
    7. 'idx' → logprob: -8.365433692932129
    8. '	idx' → logprob: -8.615433692932129
    9. 'bis' → logprob: -8.615433692932129
    10. 'index' → logprob: -8.740433692932129

Token 822: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21483807265758514
    2. 'return' → logprob: -2.3398380279541016
    3. 'idx' → logprob: -3.4648380279541016
    4. 'import' → logprob: -3.8398380279541016
    5. 'bis' → logprob: -3.9648380279541016
    6. 'index' → logprob: -4.839838027954102
    7. 'k' → logprob: -5.339838027954102
    8. 'ind' → logprob: -5.589838027954102
    9. 'pos' → logprob: -5.839838027954102
    10. 'l' → logprob: -6.089838027954102

Token 823: ' Cher' (ID: 48756)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7061997056007385
    2. 'return' → logprob: -0.8311997056007385
    3. 'idx' → logprob: -3.7061996459960938
    4. 'index' → logprob: -4.331199645996094
    5. 'ind' → logprob: -4.331199645996094
    6. 'k' → logprob: -4.706199645996094
    7. 'pos' → logprob: -5.706199645996094
    8. 'l' → logprob: -5.956199645996094
    9. 'ii' → logprob: -6.456199645996094
    10. 'import' → logprob: -7.581199645996094

Token 824: 'che' (ID: 926)
  Prédit: 'ck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ck' → logprob: -0.4793628752231598
    2. 'ect' → logprob: -0.9793628454208374
    3. 'ct' → logprob: -7.604362964630127
    4. 'ef' → logprob: -7.604362964630127
    5. 't' → logprob: -7.729362964630127
    6. 'import' → logprob: -7.979362964630127
    7. 'eft' → logprob: -7.979362964630127
    8. 'k' → logprob: -8.104362487792969
    9. 'ker' → logprob: -8.479362487792969
    10. 'ift' → logprob: -8.479362487792969

Token 825: ' la' (ID: 557)
  Prédit: 'bs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.07673858851194382
    2. ' bs' → logprob: -3.0767385959625244
    3. 'idx' → logprob: -4.826738357543945
    4. 'index' → logprob: -4.951738357543945
    5. 'a' → logprob: -5.576738357543945
    6. '(bs' → logprob: -5.701738357543945
    7. 'x' → logprob: -5.951738357543945
    8. 'import' → logprob: -6.826738357543945
    9. 'left' → logprob: -7.451738357543945
    10. 'pos' → logprob: -7.826738357543945

Token 826: ' première' (ID: 23423)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9551052451133728
    2. 'position' → logprob: -1.5801053047180176
    3. 'bs' → logprob: -1.7051053047180176
    4. 'bis' → logprob: -1.8301053047180176
    5. 'index' → logprob: -3.0801053047180176
    6. 'idx' → logprob: -5.080105304718018
    7. 'import' → logprob: -5.705105304718018
    8. ' bs' → logprob: -6.080105304718018
    9. ' position' → logprob: -6.205105304718018
    10. 'a' → logprob: -6.330105304718018

Token 827: ' position' (ID: 4010)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.3387906551361084
    2. 'position' → logprob: -2.0887906551361084
    3. '_left' → logprob: -2.3387906551361084
    4. '_index' → logprob: -2.4637906551361084
    5. '_' → logprob: -2.5887906551361084
    6. 'pos' → logprob: -2.8387906551361084
    7. 'import' → logprob: -2.9637906551361084
    8. 'a' → logprob: -2.9637906551361084
    9. 'left' → logprob: -3.4637906551361084
    10. 'bis' → logprob: -3.5887906551361084

Token 828: ' où' (ID: 15113)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.7033215165138245
    2. '(a' → logprob: -1.2033214569091797
    3. '_right' → logprob: -2.9533214569091797
    4. '(x' → logprob: -2.9533214569091797
    5. 'left' → logprob: -3.8283214569091797
    6. 'import' → logprob: -4.20332145690918
    7. 'bis' → logprob: -4.45332145690918
    8. 'a' → logprob: -4.57832145690918
    9. '=' → logprob: -5.07832145690918
    10. '(' → logprob: -5.07832145690918

Token 829: ' ins' (ID: 2215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08051123470067978
    2. ' x' → logprob: -2.5805113315582275
    3. 'bs' → logprob: -6.455511093139648
    4. ' bs' → logprob: -10.205511093139648
    5. 'import' → logprob: -12.580511093139648
    6. 'bis' → logprob: -13.080511093139648
    7. 'a' → logprob: -13.580511093139648
    8. '	x' → logprob: -13.955511093139648
    9. ' ' → logprob: -14.455511093139648
    10. ' BS' → logprob: -14.455511093139648

Token 830: 'érer' (ID: 29097)
  Prédit: 'ert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ert' → logprob: -0.0005247961380518973
    2. 'ort' → logprob: -8.125524520874023
    3. 'rt' → logprob: -9.250524520874023
    4. 'er' → logprob: -9.625524520874023
    5. 'sert' → logprob: -10.375524520874023
    6. 't' → logprob: -11.625524520874023
    7. 'ерт' → logprob: -12.625524520874023
    8. 'a' → logprob: -12.625524520874023
    9. '(x' → logprob: -12.875524520874023
    10. ' ert' → logprob: -12.875524520874023

Token 831: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47527721524238586
    2. ' x' → logprob: -1.2252771854400635
    3. '(x' → logprob: -2.4752771854400635
    4. ' (' → logprob: -8.100276947021484
    5. 'a' → logprob: -9.100276947021484
    6. ' a' → logprob: -10.975276947021484
    7. '	x' → logprob: -11.225276947021484
    8. '(' → logprob: -11.850276947021484
    9. ',x' → logprob: -12.350276947021484
    10. 'l' → logprob: -12.475276947021484

Token 832: ' dans' (ID: 2671)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.009059805423021317
    2. 'a' → logprob: -5.384059906005859
    3. '(x' → logprob: -5.759059906005859
    4. '(' → logprob: -7.509059906005859
    5. 'bis' → logprob: -8.75905990600586
    6. '=' → logprob: -8.88405990600586
    7. 'right' → logprob: -8.88405990600586
    8. ',a' → logprob: -9.50905990600586
    9. '=a' → logprob: -9.88405990600586
    10. ')' → logprob: -10.63405990600586

Token 833: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015023599844425917
    2. ' a' → logprob: -6.501502513885498
    3. '	a' → logprob: -18.001502990722656
    4. '_a' → logprob: -19.001502990722656
    5. '(a' → logprob: -20.501502990722656
    6. '
' → logprob: -20.626502990722656
    7. ''a' → logprob: -20.876502990722656
    8. '#a' → logprob: -20.876502990722656
    9. ',a' → logprob: -21.251502990722656
    10. 'а' → logprob: -21.376502990722656

Token 834: ' pour' (ID: 1930)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.05156118422746658
    2. 'a' → logprob: -3.676561117172241
    3. 'bis' → logprob: -4.42656135559082
    4. '(x' → logprob: -4.92656135559082
    5. ',a' → logprob: -6.55156135559082
    6. '   ' → logprob: -6.67656135559082
    7. ',' → logprob: -6.80156135559082
    8. ' bis' → logprob: -8.30156135559082
    9. ')' → logprob: -8.42656135559082
    10. '(' → logprob: -8.55156135559082

Token 835: ' maintenir' (ID: 105693)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.028463972732424736
    2. 'x' → logprob: -4.278463840484619
    3. ' a' → logprob: -4.903463840484619
    4. ' x' → logprob: -5.028463840484619
    5. 'import' → logprob: -9.278464317321777
    6. 'maint' → logprob: -9.653464317321777
    7. ' garder' → logprob: -11.153464317321777
    8. ' maintenir' → logprob: -11.153464317321777
    9. ' garantir' → logprob: -11.903464317321777
    10. ' assurer' → logprob: -12.653464317321777

Token 836: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001170225441455841
    2. ' a' → logprob: -6.7511701583862305
    3. '_a' → logprob: -17.251171112060547
    4. 'x' → logprob: -17.501171112060547
    5. ' ' → logprob: -18.876171112060547
    6. '	a' → logprob: -19.251171112060547
    7. '(a' → logprob: -19.751171112060547
    8. ',a' → logprob: -20.626171112060547
    9. ' x' → logprob: -20.876171112060547
    10. 'l' → logprob: -21.626171112060547

Token 837: ''ordre' (ID: 124753)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11405748873949051
    2. ''ordre' → logprob: -2.9890575408935547
    3. ' a' → logprob: -3.2390575408935547
    4. ' sorted' → logprob: -4.989057540893555
    5. 'sorted' → logprob: -5.739057540893555
    6. 'ordre' → logprob: -6.364057540893555
    7. '_sorted' → logprob: -6.489057540893555
    8. ' order' → logprob: -6.864057540893555
    9. '’ordre' → logprob: -7.364057540893555
    10. ''a' → logprob: -7.489057540893555

Token 838: ' tri' (ID: 12665)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3408137261867523
    2. 'a' → logprob: -1.9658137559890747
    3. 'return' → logprob: -2.465813636779785
    4. '(x' → logprob: -3.465813636779785
    5. 'bis' → logprob: -4.090813636779785
    6. '   ' → logprob: -5.590813636779785
    7. 'right' → logprob: -5.715813636779785
    8. 'pos' → logprob: -6.090813636779785
    9. '(' → logprob: -6.340813636779785
    10. '=' → logprob: -7.340813636779785

Token 839: 'é' (ID: 377)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.17102999985218048
    2. '(a' → logprob: -2.296030044555664
    3. 'ght' → logprob: -3.921030044555664
    4. 'a' → logprob: -4.046030044555664
    5. 'ort' → logprob: -5.046030044555664
    6. 't' → logprob: -5.546030044555664
    7. 'sta' → logprob: -6.421030044555664
    8. 'ist' → logprob: -6.796030044555664
    9. 'ert' → logprob: -6.921030044555664
    10. ' a' → logprob: -6.921030044555664

Token 840: '
' (ID: 198)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.014446130953729153
    2. 'a' → logprob: -5.264446258544922
    3. '(x' → logprob: -5.764446258544922
    4. 'return' → logprob: -5.889446258544922
    5. '(' → logprob: -6.139446258544922
    6. '   ' → logprob: -7.639446258544922
    7. ')' → logprob: -8.389446258544922
    8. ',' → logprob: -9.014446258544922
    9. ' return' → logprob: -9.889446258544922
    10. ' (' → logprob: -10.014446258544922

Token 841: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6076810359954834
    2. 'pos' → logprob: -1.1076810359954834
    3. '   ' → logprob: -2.3576810359954834
    4. 'r' → logprob: -4.6076812744140625
    5. ' return' → logprob: -5.2326812744140625
    6. 'ind' → logprob: -5.3576812744140625
    7. 'i' → logprob: -5.3576812744140625
    8. 'idx' → logprob: -6.3576812744140625
    9. 'l' → logprob: -6.4826812744140625
    10. ' pos' → logprob: -7.3576812744140625

Token 842: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.838252067565918
    2. 'pos' → logprob: -1.588252067565918
    3. 'ind' → logprob: -2.713252067565918
    4. 'idx' → logprob: -2.713252067565918
    5. 'return' → logprob: -2.838252067565918
    6. 'p' → logprob: -3.088252067565918
    7. 'k' (adapté à ' k') → logprob: -3.338252067565918
    8. 'r' → logprob: -3.588252067565918
    9. 'l' → logprob: -3.963252067565918
    10. 't' → logprob: -4.838252067565918

Token 843: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693335115909576
    2. ' =' → logprob: -2.1269333362579346
    3. '＝' → logprob: -13.626933097839355
    4. ',' → logprob: -14.251933097839355
    5. 'a' → logprob: -15.126933097839355
    6. 'u' → logprob: -15.376933097839355
    7. ')' → logprob: -15.376933097839355
    8. '=
' → logprob: -15.626933097839355
    9. 'er' → logprob: -15.626933097839355
    10. '=b' → logprob: -15.751933097839355

Token 844: ' bs' (ID: 35414)
  Prédit: 'bs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -9.662937372922897e-05
    2. ' bs' → logprob: -9.250096321105957
    3. 'a' → logprob: -15.125096321105957
    4. 'b' → logprob: -16.000097274780273
    5. '(bs' → logprob: -16.000097274780273
    6. '.bs' → logprob: -17.250097274780273
    7. '_bs' → logprob: -18.125097274780273
    8. '-bs' → logprob: -19.500097274780273
    9. 's' → logprob: -19.875097274780273
    10. 'BS' → logprob: -20.500097274780273

Token 845: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.06270119547843933
    2. '_left' → logprob: -2.8127012252807617
    3. '.ins' → logprob: -7.437701225280762
    4. '_right' → logprob: -9.562701225280762
    5. '.' → logprob: -10.187701225280762
    6. '.left' → logprob: -10.937701225280762
    7. 'Left' → logprob: -12.437701225280762
    8. '.Left' → logprob: -12.687701225280762
    9. '.a' → logprob: -12.812701225280762
    10. 'bis' → logprob: -13.312701225280762

Token 846: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -9.088346359931165e-07
    2. 's' → logprob: -15.500000953674316
    3. 'i' → logprob: -16.125
    4. '_left' → logprob: -16.625
    5. 'efore' → logprob: -16.625
    6. 'search' → logprob: -16.75
    7. 'isl' → logprob: -17.125
    8. 'iselect' → logprob: -17.125
    9. 'ис' → logprob: -17.25
    10. 'r' → logprob: -17.375

Token 847: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: 0.0
    2. 'e' → logprob: -18.0
    3. 'ort' → logprob: -20.5
    4. '_left' → logprob: -20.5
    5. 'sect' → logprob: -20.625
    6. 'eft' → logprob: -20.625
    7. 't' → logprob: -20.625
    8. 'left' → logprob: -20.875
    9. 'ec' → logprob: -21.125
    10. 'ects' → logprob: -21.25

Token 848: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.01893034763634205
    2. '(a' → logprob: -4.018930435180664
    3. '_right' → logprob: -7.393930435180664
    4. 'left' → logprob: -8.893930435180664
    5. 'Left' → logprob: -11.018930435180664
    6. 'a' → logprob: -11.643930435180664
    7. 'right' → logprob: -14.018930435180664
    8. '[a' → logprob: -15.018930435180664
    9. '(x' → logprob: -15.143930435180664
    10. '.a' → logprob: -15.268930435180664

Token 849: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -9.088346359931165e-07
    2. 'a' → logprob: -14.375000953674316
    3. '(' → logprob: -15.125000953674316
    4. '(
' → logprob: -18.625
    5. ' (' → logprob: -19.375
    6. '(x' → logprob: -19.5
    7. '```' → logprob: -21.0
    8. '#a' → logprob: -22.75
    9. '((' → logprob: -23.0
    10. '(A' → logprob: -23.125

Token 850: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008248005993664265
    2. ',x' → logprob: -4.8832478523254395
    3. '(x' → logprob: -7.3832478523254395
    4. ' ,' → logprob: -11.133248329162598
    5. '(' → logprob: -12.508248329162598
    6. ',k' → logprob: -14.008248329162598
    7. 'x' → logprob: -15.008248329162598
    8. ',
' → logprob: -15.633248329162598
    9. ',(' → logprob: -16.38324737548828
    10. ',a' → logprob: -16.63324737548828

Token 851: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002613358374219388
    2. ' x' → logprob: -8.250261306762695
    3. '(x' → logprob: -18.125261306762695
    4. ')' → logprob: -18.500261306762695
    5. ')x' → logprob: -19.375261306762695
    6. '	x' → logprob: -20.250261306762695
    7. '   ' → logprob: -20.750261306762695
    8. ' ' → logprob: -22.625261306762695
    9. ')
' → logprob: -23.125261306762695
    10. '
' → logprob: -23.375261306762695

Token 852: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022037860471755266
    2. ')
' → logprob: -6.127203941345215
    3. ' )' → logprob: -11.752203941345215
    4. '   ' → logprob: -12.002203941345215
    5. ')return' → logprob: -13.127203941345215
    6. ')
' → logprob: -13.502203941345215
    7. ')#' → logprob: -14.877203941345215
    8. ',' → logprob: -15.377203941345215
    9. ')`' → logprob: -16.2522029876709
    10. ' ' → logprob: -16.2522029876709

Token 853: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025535463355481625
    2. 'if' → logprob: -7.002553462982178
    3. 'return' → logprob: -7.252553462982178
    4. ' return' → logprob: -7.502553462982178
    5. ' if' → logprob: -8.127553939819336
    6. '	return' → logprob: -9.752553939819336
    7. '	if' → logprob: -11.377553939819336
    8. '  ' → logprob: -11.877553939819336
    9. '    ' → logprob: -12.502553939819336
    10. ' ' → logprob: -13.127553939819336

Token 854: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06280732899904251
    2. 'if' → logprob: -2.812807321548462
    3. '   ' → logprob: -7.812807559967041
    4. ' return' → logprob: -7.812807559967041
    5. ' if' → logprob: -10.437807083129883
    6. '	return' → logprob: -14.062807083129883
    7. '#' (adapté à ' #') → logprob: -17.062807083129883
    8. 'try' → logprob: -17.312807083129883
    9. '	if' → logprob: -17.437807083129883
    10. '```' → logprob: -17.562807083129883

Token 855: ' Si' (ID: 7832)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0008010497549548745
    2. 'if' → logprob: -7.250801086425781
    3. ' return' → logprob: -9.375801086425781
    4. '   ' → logprob: -12.125801086425781
    5. '#' → logprob: -14.125801086425781
    6. '	return' → logprob: -15.875801086425781
    7. ' if' → logprob: -16.87580108642578
    8. 'try' → logprob: -17.37580108642578
    9. '{return' → logprob: -18.87580108642578
    10. '```' → logprob: -18.87580108642578

Token 856: ' l' (ID: 305)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.033723849803209305
    2. ' k' → logprob: -3.408723831176758
    3. '0' → logprob: -10.033723831176758
    4. '(k' → logprob: -10.533723831176758
    5. ' ' → logprob: -12.908723831176758
    6. '	k' → logprob: -13.658723831176758
    7. 'a' → logprob: -13.783723831176758
    8. 'x' → logprob: -13.908723831176758
    9. ' ' → logprob: -15.033723831176758
    10. ' (' → logprob: -15.158723831176758

Token 857: ''ind' (ID: 82245)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06238025799393654
    2. ' k' → logprob: -2.812380313873291
    3. '0' → logprob: -8.312379837036133
    4. '(k' → logprob: -9.062379837036133
    5. 'a' → logprob: -11.312379837036133
    6. ' ' → logprob: -11.437379837036133
    7. '	k' → logprob: -11.562379837036133
    8. '=k' → logprob: -11.812379837036133
    9. 'x' → logprob: -12.687379837036133
    10. '1' → logprob: -13.312379837036133

Token 858: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.23543256521224976
    2. 'k' → logprob: -2.3604326248168945
    3. 'ice' → logprob: -3.7354326248168945
    4. 'e' → logprob: -3.8604326248168945
    5. 'x' → logprob: -4.3604326248168945
    6. '(k' → logprob: -4.6104326248168945
    7. '#' → logprob: -4.8604326248168945
    8. 'é' → logprob: -4.8604326248168945
    9. 'a' → logprob: -5.2354326248168945
    10. 'eks' → logprob: -5.4854326248168945

Token 859: ' trouvé' (ID: 60081)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2227591574192047
    2. 'k' → logprob: -2.347759246826172
    3. ' <' → logprob: -3.222759246826172
    4. '!=' → logprob: -3.722759246826172
    5. '<len' → logprob: -3.722759246826172
    6. ' k' → logprob: -4.597759246826172
    7. ' !=' → logprob: -5.972759246826172
    8. 'a' → logprob: -6.347759246826172
    9. '==' → logprob: -7.722759246826172
    10. '0' → logprob: -8.472759246826172

Token 860: ' n' (ID: 297)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2758021056652069
    2. '<len' → logprob: -1.9008021354675293
    3. '!=' → logprob: -2.4008021354675293
    4. ' <' → logprob: -7.650802135467529
    5. ' !=' → logprob: -8.650801658630371
    6. '==' → logprob: -9.275801658630371
    7. 'len' → logprob: -10.150801658630371
    8. '<size' → logprob: -10.275801658630371
    9. '>=' → logprob: -10.775801658630371
    10. '<n' → logprob: -11.025801658630371

Token 861: ''est' (ID: 6616)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.18677623569965363
    2. '<len' → logprob: -1.8117762804031372
    3. ' <' → logprob: -5.061776161193848
    4. '==' → logprob: -8.311776161193848
    5. '!=' → logprob: -8.686776161193848
    6. 'a' → logprob: -9.936776161193848
    7. '<size' → logprob: -10.561776161193848
    8. '>=' → logprob: -10.936776161193848
    9. '=' → logprob: -11.186776161193848
    10. 'len' → logprob: -11.311776161193848

Token 862: ' pas' (ID: 2173)
  Prédit: '<len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<len' → logprob: -0.3804287910461426
    2. 'len' → logprob: -1.2554287910461426
    3. '<' → logprob: -4.255428791046143
    4. ' len' → logprob: -4.755428791046143
    5. '0' → logprob: -5.755428791046143
    6. 'not' → logprob: -6.380428791046143
    7. '(len' → logprob: -7.005428791046143
    8. ' moins' → logprob: -7.630428791046143
    9. 'moins' → logprob: -7.630428791046143
    10. ' inférieur' → logprob: -8.130428314208984

Token 863: ' hors' (ID: 26087)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.03006424941122532
    2. ' len' → logprob: -3.655064344406128
    3. '<len' → logprob: -6.030064105987549
    4. '0' → logprob: -6.905064105987549
    5. '(len' → logprob: -8.655064582824707
    6. '=len' → logprob: -9.030064582824707
    7. '	len' → logprob: -10.905064582824707
    8. '<' → logprob: -11.655064582824707
    9. '<|end|>' → logprob: -12.280064582824707
    10. '[len' → logprob: -12.280064582824707

Token 864: ' limite' (ID: 48939)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7784368395805359
    2. 'len' → logprob: -1.7784368991851807
    3. 'de' → logprob: -2.0284368991851807
    4. 'bounds' → logprob: -2.1534368991851807
    5. ' de' → logprob: -2.7784368991851807
    6. 'lim' → logprob: -4.028436660766602
    7. ' range' → logprob: -4.403436660766602
    8. ' limites' → logprob: -5.028436660766602
    9. 'limits' → logprob: -5.028436660766602
    10. ' bounds' → logprob: -5.528436660766602

Token 865: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1269530951976776
    2. 'and' → logprob: -2.126953125
    3. ' or' → logprob: -11.126953125
    4. 'or' → logprob: -13.126953125
    5. '0' → logprob: -13.251953125
    6. 'a' → logprob: -13.626953125
    7. ',' → logprob: -13.876953125
    8. '<len' → logprob: -13.876953125
    9. ')' → logprob: -14.876953125
    10. ' ' → logprob: -15.001953125

Token 866: ' que' (ID: 661)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.209481343626976
    2. ' a' → logprob: -1.7094813585281372
    3. 'k' → logprob: -4.959481239318848
    4. ' k' → logprob: -6.959481239318848
    5. '0' → logprob: -10.459481239318848
    6. 'x' → logprob: -11.334481239318848
    7. ' ' → logprob: -12.334481239318848
    8. '   ' → logprob: -12.334481239318848
    9. 'len' → logprob: -12.584481239318848
    10. '  ' → logprob: -12.709481239318848

Token 867: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00761218648403883
    2. ' a' → logprob: -4.882612228393555
    3. 'k' → logprob: -12.257612228393555
    4. ' k' → logprob: -14.882612228393555
    5. '   ' → logprob: -14.882612228393555
    6. 'x' → logprob: -15.632612228393555
    7. ' ' → logprob: -16.132612228393555
    8. '
' → logprob: -16.257612228393555
    9. '(a' → logprob: -16.382612228393555
    10. '	a' → logprob: -16.882612228393555

Token 868: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008732284419238567
    2. ' a' → logprob: -4.758732318878174
    3. 'k' → logprob: -9.133731842041016
    4. ' k' → logprob: -12.883731842041016
    5. '_a' → logprob: -13.133731842041016
    6. 'x' → logprob: -13.383731842041016
    7. '#a' → logprob: -14.133731842041016
    8. '[a' → logprob: -14.383731842041016
    9. '(a' → logprob: -14.508731842041016
    10. '0' → logprob: -14.883731842041016

Token 869: 'élé' (ID: 15228)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0006496482528746128
    2. ' a' → logprob: -7.625649452209473
    3. 'k' → logprob: -8.750649452209473
    4. ' k' → logprob: -13.750649452209473
    5. 'x' → logprob: -13.875649452209473
    6. '0' → logprob: -14.375649452209473
    7. ' ' → logprob: -16.00065040588379
    8. '[' → logprob: -16.62565040588379
    9. '   ' → logprob: -16.62565040588379
    10. '`' → logprob: -16.62565040588379

Token 870: 'ment' (ID: 508)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7837056517601013
    2. 'ment' → logprob: -1.033705711364746
    3. 'ement' → logprob: -2.283705711364746
    4. 'ément' → logprob: -3.158705711364746
    5. 'em' → logprob: -3.908705711364746
    6. 'm' → logprob: -5.033705711364746
    7. '[a' → logprob: -5.658705711364746
    8. 'ém' → logprob: -5.658705711364746
    9. 'e' → logprob: -6.158705711364746
    10. 't' → logprob: -6.283705711364746

Token 871: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09966979920864105
    2. 'k' → logprob: -2.8496696949005127
    3. ' a' → logprob: -3.4746696949005127
    4. ' k' → logprob: -6.599669933319092
    5. 'at' → logprob: -6.974669933319092
    6. ' at' → logprob: -7.224669933319092
    7. ' ==' → logprob: -7.349669933319092
    8. '==' → logprob: -7.724669933319092
    9. '[k' → logprob: -7.849669933319092
    10. ' <' → logprob: -8.474669456481934

Token 872: ' cet' (ID: 19505)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00714547885581851
    2. 'a' → logprob: -5.007145404815674
    3. 'index' → logprob: -8.757145881652832
    4. 'l' → logprob: -8.882145881652832
    5. 'indice' → logprob: -9.757145881652832
    6. 'position' → logprob: -10.132145881652832
    7. ' k' → logprob: -10.882145881652832
    8. '[k' → logprob: -11.882145881652832
    9. 'x' → logprob: -12.882145881652832
    10. '```' → logprob: -13.257145881652832

Token 873: ' indice' (ID: 90848)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5896197557449341
    2. 'index' → logprob: -1.464619755744934
    3. 'indice' → logprob: -1.964619755744934
    4. 'a' → logprob: -3.2146196365356445
    5. '<|end|>' → logprob: -4.5896196365356445
    6. '[' → logprob: -5.0896196365356445
    7. 'x' → logprob: -5.2146196365356445
    8. 'indices' → logprob: -6.0896196365356445
    9. '[k' → logprob: -6.5896196365356445
    10. 'idx' → logprob: -6.8396196365356445

Token 874: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7872480750083923
    2. ']==' → logprob: -1.412248134613037
    3. ' ==' → logprob: -1.537248134613037
    4. ']' → logprob: -2.912248134613037
    5. 'a' → logprob: -3.912248134613037
    6. ' est' → logprob: -6.037248134613037
    7. 'est' → logprob: -6.287248134613037
    8. ' a' → logprob: -6.537248134613037
    9. ')==' → logprob: -6.912248134613037
    10. ' ' → logprob: -7.037248134613037

Token 875: ' bien' (ID: 5340)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01417714636772871
    2. ' x' → logprob: -4.264177322387695
    3. 'a' → logprob: -12.389177322387695
    4. '==' → logprob: -12.389177322387695
    5. '=x' → logprob: -13.014177322387695
    6. ' ==' → logprob: -14.014177322387695
    7. '=' → logprob: -14.389177322387695
    8. 'k' → logprob: -14.639177322387695
    9. '	x' → logprob: -15.264177322387695
    10. ' exactly' → logprob: -15.389177322387695

Token 876: ' '' (ID: 461)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.6087021473795176e-05
    2. ' x' → logprob: -10.000045776367188
    3. 'a' → logprob: -14.625045776367188
    4. '==' → logprob: -17.000045776367188
    5. '   ' → logprob: -17.500045776367188
    6. '=x' → logprob: -18.375045776367188
    7. '  ' → logprob: -18.375045776367188
    8. '	x' → logprob: -18.500045776367188
    9. ' ' → logprob: -18.750045776367188
    10. '=' → logprob: -19.250045776367188

Token 877: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001398929744027555
    2. ' x' → logprob: -8.875140190124512
    3. 'a' → logprob: -19.125139236450195
    4. ''x' → logprob: -20.000139236450195
    5. '	x' → logprob: -20.125139236450195
    6. '"x' → logprob: -20.625139236450195
    7. ' ' → logprob: -20.750139236450195
    8. '(x' → logprob: -20.875139236450195
    9. '`' → logprob: -21.000139236450195
    10. ')x' → logprob: -21.125139236450195

Token 878: '',' (ID: 787)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7145128846168518
    2. '',' → logprob: -1.339512825012207
    3. ')' → logprob: -2.964512825012207
    4. ''' → logprob: -2.964512825012207
    5. ':' → logprob: -3.339512825012207
    6. '==' → logprob: -3.714512825012207
    7. ' ==' → logprob: -3.714512825012207
    8. '':' → logprob: -3.964512825012207
    9. ']' → logprob: -4.964512825012207
    10. ',' → logprob: -5.089512825012207

Token 879: ' alors' (ID: 17971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39400970935821533
    2. ' return' → logprob: -1.6440097093582153
    3. 'return' → logprob: -2.144009590148926
    4. '	return' → logprob: -4.394009590148926
    5. '       ' → logprob: -5.894009590148926
    6. '    ' → logprob: -10.269009590148926
    7. ':return' → logprob: -10.394009590148926
    8. '  ' → logprob: -10.644009590148926
    9. '
' → logprob: -10.769009590148926
    10. ' ' → logprob: -11.019009590148926

Token 880: ' il' (ID: 1793)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04835239425301552
    2. '   ' → logprob: -3.5483524799346924
    3. ' return' → logprob: -4.298352241516113
    4. 'True' → logprob: -5.423352241516113
    5. '	return' → logprob: -8.673352241516113
    6. ' True' → logprob: -8.923352241516113
    7. '       ' → logprob: -9.173352241516113
    8. '
' → logprob: -11.798352241516113
    9. ':return' → logprob: -12.798352241516113
    10. '  ' → logprob: -13.423352241516113

Token 881: ' existe' (ID: 19498)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.497363418340683
    2. ' return' → logprob: -0.9973634481430054
    3. ':return' → logprob: -4.247363567352295
    4. '   ' → logprob: -5.747363567352295
    5. ' is' → logprob: -6.372363567352295
    6. ' est' → logprob: -6.872363567352295
    7. '{return' → logprob: -7.247363567352295
    8. 'eturn' → logprob: -7.497363567352295
    9. '	return' → logprob: -7.622363567352295
    10. ' retourne' → logprob: -7.997363567352295

Token 882: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01586753875017166
    2. 'return' → logprob: -5.390867710113525
    3. ':' → logprob: -5.765867710113525
    4. ':return' → logprob: -5.890867710113525
    5. ' and' → logprob: -6.265867710113525
    6. ' return' → logprob: -6.390867710113525
    7. '       ' → logprob: -7.390867710113525
    8. '	return' → logprob: -7.640867710113525
    9. 'and' → logprob: -8.890867233276367
    10. '  ' → logprob: -9.140867233276367

Token 883: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004307884373702109
    2. ' a' → logprob: -7.750430583953857
    3. '(a' → logprob: -17.000431060791016
    4. '#a' → logprob: -17.500431060791016
    5. '_a' → logprob: -17.750431060791016
    6. 'а' → logprob: -18.000431060791016
    7. '	a' → logprob: -18.125431060791016
    8. '>a' → logprob: -18.250431060791016
    9. '[a' → logprob: -18.750431060791016
    10. ''a' → logprob: -19.125431060791016

Token 884: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09801074117422104
    2. ':' → logprob: -2.473010778427124
    3. ':return' → logprob: -5.223010540008545
    4. ' and' → logprob: -6.723010540008545
    5. ' return' → logprob: -7.098010540008545
    6. 'return' → logprob: -7.723010540008545
    7. '       ' → logprob: -7.848010540008545
    8. ':
' → logprob: -8.348011016845703
    9. '	return' → logprob: -8.723011016845703
    10. '  ' → logprob: -9.473011016845703

Token 885: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008295211009681225
    2. ' and' → logprob: -8.250829696655273
    3. ' return' → logprob: -8.500829696655273
    4. '	return' → logprob: -9.250829696655273
    5. '       ' → logprob: -9.625829696655273
    6. 'return' → logprob: -9.625829696655273
    7. ':' → logprob: -9.875829696655273
    8. ':return' → logprob: -10.500829696655273
    9. '.' → logprob: -11.125829696655273
    10. '  ' → logprob: -11.625829696655273

Token 886: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10579294711351395
    2. 'return' → logprob: -2.355792999267578
    3. ' return' → logprob: -5.480792999267578
    4. 'if' (adapté à ' if') → logprob: -7.105792999267578
    5. '	return' → logprob: -7.730792999267578
    6. ' if' → logprob: -9.105792999267578
    7. '       ' → logprob: -11.355792999267578
    8. ':return' → logprob: -11.480792999267578
    9. '	if' → logprob: -12.605792999267578
    10. '  ' → logprob: -13.105792999267578

Token 887: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02351636067032814
    2. ' k' → logprob: -3.7735164165496826
    3. '0' → logprob: -8.273516654968262
    4. ' ' → logprob: -11.148516654968262
    5. '(k' → logprob: -14.898516654968262
    6. '	k' → logprob: -14.898516654968262
    7. ' ' → logprob: -15.648516654968262
    8. 'x' → logprob: -15.648516654968262
    9. 'a' → logprob: -16.523515701293945
    10. '   ' → logprob: -16.648515701293945

Token 888: ' !=' (ID: 1666)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.33552098274230957
    2. '<len' → logprob: -1.3355209827423096
    3. '!=' → logprob: -4.3355207443237305
    4. ' <' → logprob: -4.8355207443237305
    5. '<size' → logprob: -8.58552074432373
    6. ' !=' → logprob: -8.58552074432373
    7. '<int' → logprob: -9.46052074432373
    8. '>=' → logprob: -9.46052074432373
    9. '0' → logprob: -9.58552074432373
    10. 'len' → logprob: -9.58552074432373

Token 889: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0002622894535306841
    2. ' len' → logprob: -8.250262260437012
    3. 'Len' → logprob: -14.500262260437012
    4. '	len' → logprob: -15.125262260437012
    5. '(len' → logprob: -16.750263214111328
    6. 'Max' → logprob: -17.125263214111328
    7. '0' → logprob: -17.375263214111328
    8. ' ' → logprob: -17.750263214111328
    9. 'l' → logprob: -17.750263214111328
    10. '   ' → logprob: -18.250263214111328

Token 890: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0003357006062287837
    2. 'a' → logprob: -8.000335693359375
    3. ' a' → logprob: -16.250335693359375
    4. '(' → logprob: -16.500335693359375
    5. ' (' → logprob: -18.000335693359375
    6. '(
' → logprob: -19.500335693359375
    7. '```' → logprob: -21.125335693359375
    8. '	a' → logprob: -21.875335693359375
    9. ')a' → logprob: -21.875335693359375
    10. 'а' → logprob: -22.250335693359375

Token 891: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003637097543105483
    2. ' )' → logprob: -8.75036334991455
    3. 'and' → logprob: -9.00036334991455
    4. 'a' → logprob: -10.00036334991455
    5. ' and' → logprob: -10.75036334991455
    6. '):' → logprob: -11.75036334991455
    7. '):
' → logprob: -13.00036334991455
    8. ')a' → logprob: -13.37536334991455
    9. '   ' → logprob: -14.25036334991455
    10. '")' → logprob: -15.00036334991455

Token 892: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.25193002820014954
    2. ' and' → logprob: -1.5019299983978271
    3. ' ' → logprob: -14.876930236816406
    4. '	and' → logprob: -15.626930236816406
    5. 'a' → logprob: -15.876930236816406
    6. '   ' → logprob: -16.001930236816406
    7. '0' → logprob: -16.251930236816406
    8. ' и' → logprob: -17.001930236816406
    9. '
' → logprob: -18.001930236816406
    10. ' a' → logprob: -18.501930236816406

Token 893: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0024756586644798517
    2. ' a' → logprob: -6.002475738525391
    3. '	a' → logprob: -18.25247573852539
    4. '   ' → logprob: -18.37747573852539
    5. '
' → logprob: -18.87747573852539
    6. 'x' → logprob: -19.00247573852539
    7. ' ' → logprob: -20.75247573852539
    8. '(a' → logprob: -21.00247573852539
    9. '_a' → logprob: -21.37747573852539
    10. '#a' → logprob: -21.37747573852539

Token 894: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.375
    3. 'k' → logprob: -16.875
    4. '[
' → logprob: -17.375
    5. '
' → logprob: -19.0
    6. '[key' → logprob: -19.125
    7. ' [' → logprob: -19.75
    8. '[i' → logprob: -20.0
    9. '(k' → logprob: -20.25
    10. '{k' → logprob: -20.75

Token 895: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5878986716270447
    2. ']==' → logprob: -0.8378986716270447
    3. '==' → logprob: -4.4628987312316895
    4. ' ==' → logprob: -8.087898254394531
    5. ' ]' → logprob: -10.337898254394531
    6. ')==' → logprob: -11.837898254394531
    7. '[' → logprob: -12.587898254394531
    8. ')' → logprob: -12.837898254394531
    9. '']==' → logprob: -12.962898254394531
    10. ']=' → logprob: -13.837898254394531

Token 896: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.011065744794905186
    2. ' ==' → logprob: -4.51106595993042
    3. '=' → logprob: -11.761065483093262
    4. ']==' → logprob: -12.261065483093262
    5. '==
' → logprob: -12.386065483093262
    6. '===' → logprob: -14.511065483093262
    7. ')==' → logprob: -15.011065483093262
    8. '()==' → logprob: -16.011066436767578
    9. 'x' → logprob: -16.261066436767578
    10. '[' → logprob: -17.636066436767578

Token 897: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.306760805164231e-05
    2. ' x' → logprob: -11.25001335144043
    3. '	x' → logprob: -21.75001335144043
    4. '(x' → logprob: -25.00001335144043
    5. '"x' → logprob: -25.25001335144043
    6. ' ' → logprob: -25.37501335144043
    7. '   ' → logprob: -25.75001335144043
    8. ''x' → logprob: -25.87501335144043
    9. ')x' → logprob: -26.12501335144043
    10. '$x' → logprob: -26.25001335144043

Token 898: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01923244446516037
    2. ':return' → logprob: -4.394232273101807
    3. ':
' → logprob: -5.019232273101807
    4. '   ' → logprob: -10.019232749938965
    5. '):' → logprob: -10.894232749938965
    6. 'return' → logprob: -11.894232749938965
    7. ' return' → logprob: -12.144232749938965
    8. '       ' → logprob: -12.519232749938965
    9. ' :' → logprob: -12.519232749938965
    10. ')' → logprob: -12.519232749938965

Token 899: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009399275877512991
    2. '   ' → logprob: -7.625939846038818
    3. ' return' → logprob: -8.125940322875977
    4. 'return' → logprob: -8.875940322875977
    5. '	return' → logprob: -11.500940322875977
    6. ':return' → logprob: -13.500940322875977
    7. '	' → logprob: -13.625940322875977
    8. '	   ' → logprob: -13.875940322875977
    9. '           ' → logprob: -14.750940322875977
    10. '     ' → logprob: -14.875940322875977

Token 900: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4054655134677887
    2. '       ' → logprob: -1.1554654836654663
    3. ' return' → logprob: -4.030465602874756
    4. '   ' → logprob: -7.780465602874756
    5. '	return' → logprob: -8.530465126037598
    6. 'True' → logprob: -11.655465126037598
    7. '           ' → logprob: -11.655465126037598
    8. ':return' → logprob: -11.655465126037598
    9. '	   ' → logprob: -12.655465126037598
    10. 'true' → logprob: -12.780465126037598

Token 901: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.001170225441455841
    2. ' True' → logprob: -6.7511701583862305
    3. '(True' → logprob: -18.376171112060547
    4. '1' → logprob: -20.501171112060547
    5. '   ' → logprob: -21.001171112060547
    6. 'Tr' → logprob: -21.876171112060547
    7. 'true' → logprob: -22.501171112060547
    8. '=True' → logprob: -22.751171112060547
    9. 'TRUE' → logprob: -23.126171112060547
    10. 'False' → logprob: -23.876171112060547

Token 902: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010723850573413074
    2. '	return' → logprob: -10.000106811523438
    3. 'return' → logprob: -10.750106811523438
    4. 'else' → logprob: -11.000106811523438
    5. '	else' → logprob: -11.375106811523438
    6. ' else' → logprob: -12.500106811523438
    7. ' return' → logprob: -12.625106811523438
    8. '       ' → logprob: -13.875106811523438
    9. '<|end|>' → logprob: -14.125106811523438
    10. '    ' → logprob: -14.250106811523438

Token 903: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.370294846012257e-05
    2. 'return' → logprob: -11.000043869018555
    3. '	return' → logprob: -11.375043869018555
    4. '<|end|>' → logprob: -11.750043869018555
    5. ' return' → logprob: -12.125043869018555
    6. '  ' → logprob: -14.625043869018555
    7. '
' → logprob: -15.250043869018555
    8. '    ' → logprob: -15.250043869018555
    9. 'else' → logprob: -15.375043869018555
    10. '    
' → logprob: -15.750043869018555

Token 904: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08778481930494308
    2. 'return' → logprob: -2.837784767150879
    3. 'else' (adapté à ' else') → logprob: -3.712784767150879
    4. ' return' → logprob: -7.462784767150879
    5. ' else' → logprob: -8.587784767150879
    6. '<|end|>' → logprob: -8.837784767150879
    7. '	return' → logprob: -9.212784767150879
    8. '{return' → logprob: -11.712784767150879
    9. '.' → logprob: -11.712784767150879
    10. '[]' → logprob: -11.962784767150879

Token 905: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09923604130744934
    2. ':' → logprob: -3.099236011505127
    3. ':
' → logprob: -3.349236011505127
    4. '   ' → logprob: -4.599236011505127
    5. ':return' → logprob: -6.224236011505127
    6. ' return' → logprob: -7.099236011505127
    7. 'False' → logprob: -7.849236011505127
    8. 'return' → logprob: -7.849236011505127
    9. ' False' → logprob: -8.349236488342285
    10. ' :
' → logprob: -8.974236488342285

Token 906: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2569965720176697
    2. 'return' → logprob: -1.7569966316223145
    3. ' return' → logprob: -3.5069966316223145
    4. '   ' → logprob: -3.7569966316223145
    5. '	return' → logprob: -7.2569966316223145
    6. '	' → logprob: -11.756996154785156
    7. '	   ' → logprob: -12.131996154785156
    8. ':return' → logprob: -13.131996154785156
    9. '{return' → logprob: -13.256996154785156
    10. '    ' → logprob: -13.381996154785156

Token 907: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0018091757083311677
    2. ' return' → logprob: -6.501809120178223
    3. 'False' → logprob: -8.501809120178223
    4. '       ' → logprob: -9.251809120178223
    5. '   ' → logprob: -12.251809120178223
    6. '	return' → logprob: -13.126809120178223
    7. ' False' → logprob: -14.251809120178223
    8. ':return' → logprob: -16.00181007385254
    9. '0' → logprob: -17.00181007385254
    10. 'Return' → logprob: -17.87681007385254

Token 908: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.15310683415737e-05
    2. ' False' → logprob: -10.750021934509277
    3. '(False' → logprob: -21.50002098083496
    4. 'false' → logprob: -24.00002098083496
    5. 'None' → logprob: -24.12502098083496
    6. '=False' → logprob: -24.37502098083496
    7. 'F' → logprob: -24.50002098083496
    8. '_false' → logprob: -25.25002098083496
    9. '   ' → logprob: -25.50002098083496
    10. '.False' → logprob: -25.50002098083496

Token 909: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 910: '"""
' (ID: 15611)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32298803329467773
    2. '#' → logprob: -1.9479880332946777
    3. '<|end|>' → logprob: -2.0729880332946777
    4. '<|end|>' → logprob: -5.947988033294678
    5. '```' → logprob: -6.447988033294678
    6. '
' → logprob: -7.072988033294678
    7. 'class' → logprob: -7.447988033294678
    8. 'x' → logprob: -8.197988510131836
    9. ' ' → logprob: -8.197988510131836
    10. '\n' → logprob: -8.447988510131836

Token 911: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.035089392215013504
    2. '#' → logprob: -3.5350894927978516
    3. '"""' → logprob: -6.160089492797852
    4. 'class' → logprob: -6.285089492797852
    5. 'import' → logprob: -6.785089492797852
    6. 'from' → logprob: -9.535089492797852
    7. ' def' → logprob: -10.035089492797852
    8. '"""
' → logprob: -10.910089492797852
    9. '""' → logprob: -11.285089492797852
    10. '```' → logprob: -11.285089492797852

Token 912: ' Exemple' (ID: 142783)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3293449580669403
    2. 'def' → logprob: -2.0793449878692627
    3. '#' → logprob: -2.7043449878692627
    4. 'import' → logprob: -3.5793449878692627
    5. '""' → logprob: -4.454344749450684
    6. '```' → logprob: -4.704344749450684
    7. '!' → logprob: -4.954344749450684
    8. '#!/' → logprob: -5.829344749450684
    9. ' """' → logprob: -5.829344749450684
    10. ''''' → logprob: -5.954344749450684

Token 913: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8146743178367615
    2. '#' → logprob: -0.9396743178367615
    3. '[' → logprob: -2.9396743774414062
    4. '"""' → logprob: -3.4396743774414062
    5. '```' → logprob: -3.9396743774414062
    6. '<|end|>' → logprob: -4.564674377441406
    7. 'a' → logprob: -5.314674377441406
    8. '<|end|>' → logprob: -5.439674377441406
    9. 'n' → logprob: -5.564674377441406
    10. 's' → logprob: -5.689674377441406

Token 914: ' sque' (ID: 53600)
  Prédit: ' usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' usage' → logprob: -0.43917331099510193
    2. 'usage' → logprob: -1.5641733407974243
    3. 'util' → logprob: -2.3141732215881348
    4. ' code' → logprob: -3.4391732215881348
    5. 'code' → logprob: -4.814173221588135
    6. ' test' → logprob: -6.689173221588135
    7. ' utilisation' → logprob: -6.814173221588135
    8. '#' → logprob: -6.939173221588135
    9. ' use' → logprob: -7.439173221588135
    10. 'use' → logprob: -7.814173221588135

Token 915: 'lette' (ID: 17195)
  Prédit: 'lette'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lette' → logprob: -0.036742810159921646
    2. 'tte' → logprob: -3.786742925643921
    3. 'l' → logprob: -4.786742687225342
    4. 'let' → logprob: -6.286742687225342
    5. 'ttle' → logprob: -6.911742687225342
    6. 't' → logprob: -7.036742687225342
    7. 'lle' → logprob: -7.786742687225342
    8. 'lt' → logprob: -8.5367431640625
    9. 'ton' → logprob: -8.6617431640625
    10. 'leton' → logprob: -9.4117431640625

Token 916: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25265446305274963
    2. ' """' → logprob: -3.252654552459717
    3. ' def' → logprob: -3.502654552459717
    4. ' 
' → logprob: -3.627654552459717
    5. '"""' → logprob: -4.127654552459717
    6. 'de' → logprob: -4.127654552459717
    7. ' de' → logprob: -4.377654552459717
    8. ' """
' → logprob: -4.502654552459717
    9. 's' → logprob: -4.752654552459717
    10. ' ' → logprob: -5.002654552459717

Token 917: ' une' (ID: 2463)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rés' → logprob: -1.3834713697433472
    2. ' résoudre' → logprob: -1.5084713697433472
    3. 'def' → logprob: -2.1334714889526367
    4. 'une' → logprob: -2.1334714889526367
    5. 'la' → logprob: -2.6334714889526367
    6. 'un' → logprob: -2.7584714889526367
    7. ' un' → logprob: -3.5084714889526367
    8. 'le' → logprob: -3.5084714889526367
    9. 'res' → logprob: -3.8834714889526367
    10. ' la' → logprob: -4.133471488952637

Token 918: ' recherche' (ID: 24975)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3482828736305237
    2. ' solution' → logprob: -2.098282814025879
    3. 'solution' → logprob: -2.348282814025879
    4. ' def' → logprob: -3.973282814025879
    5. ' ' → logprob: -4.973282814025879
    6. 'problem' → logprob: -5.348282814025879
    7. 's' → logprob: -5.348282814025879
    8. 'proble' → logprob: -5.598282814025879
    9. 'fonction' → logprob: -5.598282814025879
    10. 'd' → logprob: -5.723282814025879

Token 919: ' b' (ID: 287)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.338117390871048
    2. 'b' → logprob: -1.9631173610687256
    3. 'binary' → logprob: -2.5881173610687256
    4. 'd' → logprob: -3.7131173610687256
    5. '#' → logprob: -3.9631173610687256
    6. 'bin' → logprob: -4.963117599487305
    7. 'class' → logprob: -5.713117599487305
    8. ' b' → logprob: -5.713117599487305
    9. 'de' → logprob: -6.213117599487305
    10. 'dé' → logprob: -6.338117599487305

Token 920: 'inaire' (ID: 41465)
  Prédit: 'inary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inary' → logprob: -0.8091127872467041
    2. 'inaire' → logprob: -1.184112787246704
    3. 'in' → logprob: -1.434112787246704
    4. 'inar' → logprob: -5.934112548828125
    5. 'is' → logprob: -6.434112548828125
    6. 'ina' → logprob: -7.184112548828125
    7. 'search' → logprob: -7.559112548828125
    8. 'al' → logprob: -7.684112548828125
    9. 'i' → logprob: -7.934112548828125
    10. 'y' → logprob: -8.059112548828125

Token 921: ' personnalis' (ID: 77405)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013084234669804573
    2. '#' → logprob: -4.638084411621094
    3. '"""
' → logprob: -6.138084411621094
    4. '#
' → logprob: -8.138084411621094
    5. '"""' → logprob: -8.513084411621094
    6. '
' → logprob: -8.888084411621094
    7. ' def' → logprob: -8.888084411621094
    8. '"""

' → logprob: -9.138084411621094
    9. ''''
' → logprob: -9.388084411621094
    10. ':' → logprob: -10.388084411621094

Token 922: 'ée' (ID: 2894)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33288586139678955
    2. 'in' → logprob: -2.2078857421875
    3. '"""
' → logprob: -2.9578857421875
    4. 'inaire' → logprob: -3.5828857421875
    5. 'inary' → logprob: -4.0828857421875
    6. 'n' → logprob: -4.2078857421875
    7. 'r' → logprob: -4.7078857421875
    8. '"""' → logprob: -4.9578857421875
    9. 'function' → logprob: -5.2078857421875
    10. 'search' → logprob: -5.2078857421875

Token 923: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12809103727340698
    2. '#' → logprob: -2.2530910968780518
    3. '"""
' → logprob: -4.503090858459473
    4. '#
' → logprob: -6.378090858459473
    5. '
' → logprob: -7.003090858459473
    6. '"""' → logprob: -7.253090858459473
    7. ''''
' → logprob: -8.003090858459473
    8. '"""

' → logprob: -8.753090858459473
    9. ' def' → logprob: -10.003090858459473
    10. ':' → logprob: -10.128090858459473

Token 924: ' utilisé' (ID: 53138)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45426395535469055
    2. '#' → logprob: -1.2042639255523682
    3. '"""
' → logprob: -2.829263925552368
    4. '"""' → logprob: -5.704264163970947
    5. '#
' → logprob: -6.954264163970947
    6. ''''
' → logprob: -7.329264163970947
    7. 'class' → logprob: -7.704264163970947
    8. '
' → logprob: -7.954264163970947
    9. '"""

' → logprob: -8.579263687133789
    10. ' def' → logprob: -10.579263687133789

Token 925: ' cour' (ID: 2871)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6179624199867249
    2. 'pour' → logprob: -1.11796236038208
    3. 'dans' → logprob: -2.86796236038208
    4. '#' → logprob: -2.99296236038208
    5. ' pour' → logprob: -4.11796236038208
    6. 'for' → logprob: -5.74296236038208
    7. ' dans' → logprob: -6.24296236038208
    8. 'en' → logprob: -6.74296236038208
    9. '"""' → logprob: -6.86796236038208
    10. '"""
' → logprob: -7.24296236038208

Token 926: 'amment' (ID: 23443)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.5271179676055908
    2. 'amment' → logprob: -1.6521179676055908
    3. 'ment' → logprob: -1.7771179676055908
    4. 'te' → logprob: -2.152117967605591
    5. '#' → logprob: -2.277117967605591
    6. 'rement' → logprob: -3.527117967605591
    7. '```' → logprob: -3.777117967605591
    8. 'iert' → logprob: -4.277117729187012
    9. 'e' → logprob: -4.402117729187012
    10. 'ément' → logprob: -4.527117729187012

Token 927: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18856601417064667
    2. '#' → logprob: -2.188565969467163
    3. '"""
' → logprob: -3.188565969467163
    4. '"""' → logprob: -4.438566207885742
    5. '
' → logprob: -5.938566207885742
    6. '#
' → logprob: -6.313566207885742
    7. '"""

' → logprob: -7.063566207885742
    8. 'for' → logprob: -8.063566207885742
    9. ' def' → logprob: -8.063566207885742
    10. ''''
' → logprob: -9.313566207885742

Token 928: ' chercher' (ID: 79602)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.271510511636734
    2. '#' → logprob: -2.771510601043701
    3. 'le' → logprob: -3.521510601043701
    4. 'rés' → logprob: -4.021510601043701
    5. 'pro' → logprob: -4.396510601043701
    6. 'la' → logprob: -4.396510601043701
    7. 'chercher' → logprob: -4.521510601043701
    8. 'une' → logprob: -4.521510601043701
    9. 'un' → logprob: -4.646510601043701
    10. 'binary' → logprob: -4.771510601043701

Token 929: ' des' (ID: 731)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8803032636642456
    2. 'def' → logprob: -1.6303032636642456
    3. 'une' → logprob: -2.005303382873535
    4. ' une' → logprob: -2.255303382873535
    5. 'un' → logprob: -2.630303382873535
    6. ' un' → logprob: -4.005303382873535
    7. '"""
' → logprob: -4.130303382873535
    8. 'l' → logprob: -4.755303382873535
    9. 'la' → logprob: -4.880303382873535
    10. ' #' → logprob: -5.380303382873535

Token 930: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.39439162611961365
    2. '#' → logprob: -2.2693915367126465
    3. 'pro' → logprob: -2.5193915367126465
    4. 'param' → logprob: -3.1443915367126465
    5. '"""' → logprob: -4.6443915367126465
    6. 'condition' → logprob: -4.7693915367126465
    7. 'élé' → logprob: -5.0193915367126465
    8. '"""
' → logprob: -5.0193915367126465
    9. 'def' → logprob: -5.1443915367126465
    10. 'borne' → logprob: -5.1443915367126465

Token 931: ' ou' (ID: 2031)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2884044647216797
    2. '#' → logprob: -1.7884044647216797
    3. '"""
' → logprob: -2.6634044647216797
    4. '#
' → logprob: -6.16340446472168
    5. '"""' → logprob: -6.28840446472168
    6. ' def' → logprob: -6.78840446472168
    7. 'dans' → logprob: -6.78840446472168
    8. ' #' → logprob: -7.03840446472168
    9. '
' → logprob: -7.03840446472168
    10. 'x' → logprob: -7.28840446472168

Token 932: ' born' (ID: 12275)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5454607605934143
    2. 'tr' → logprob: -1.0454607009887695
    3. ' résoudre' → logprob: -4.9204607009887695
    4. ' trouver' → logprob: -5.0454607009887695
    5. '```' → logprob: -5.1704607009887695
    6. 'dé' → logprob: -5.4204607009887695
    7. 'rés' → logprob: -5.6704607009887695
    8. 'def' → logprob: -5.9204607009887695
    9. ' #' → logprob: -6.0454607009887695
    10. 'tester' → logprob: -6.1704607009887695

Token 933: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.03506498783826828
    2. 'e' → logprob: -3.785064935684204
    3. '#' → logprob: -5.410065174102783
    4. 'ed' → logprob: -5.660065174102783
    5. 'nées' → logprob: -6.785065174102783
    6. 'def' → logprob: -7.035065174102783
    7. 'ées' → logprob: -7.910065174102783
    8. 'é' → logprob: -8.160064697265625
    9. 'és' → logprob: -8.285064697265625
    10. 'd' → logprob: -8.535064697265625

Token 934: ' dans' (ID: 2671)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6716176867485046
    2. '#' → logprob: -1.4216177463531494
    3. '"""
' → logprob: -1.6716177463531494
    4. '"""' → logprob: -3.5466177463531494
    5. '"""

' → logprob: -4.29661750793457
    6. '
' → logprob: -5.67161750793457
    7. 'dans' → logprob: -6.04661750793457
    8. '#
' → logprob: -6.29661750793457
    9. '"""


' → logprob: -6.42161750793457
    10. 'x' → logprob: -7.04661750793457

Token 935: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.1671620607376099
    2. '"""
' → logprob: -1.5421620607376099
    3. 'range' → logprob: -2.2921619415283203
    4. '#' → logprob: -2.4171619415283203
    5. 'les' → logprob: -2.7921619415283203
    6. 'le' → logprob: -2.9171619415283203
    7. 'la' → logprob: -3.1671619415283203
    8. 'un' → logprob: -3.5421619415283203
    9. ' une' → logprob: -3.7921619415283203
    10. '"""' → logprob: -4.04216194152832

Token 936: ' plage' (ID: 78241)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.86017245054245
    2. 'range' → logprob: -1.7351725101470947
    3. 'def' → logprob: -2.4851725101470947
    4. '#' → logprob: -2.7351725101470947
    5. 'liste' → logprob: -2.8601725101470947
    6. 'fonction' → logprob: -2.8601725101470947
    7. 'interval' → logprob: -3.7351725101470947
    8. 'borne' → logprob: -3.9851725101470947
    9. 'val' → logprob: -4.485172271728516
    10. 'sorted' → logprob: -4.610172271728516

Token 937: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35524219274520874
    2. '#' → logprob: -1.9802422523498535
    3. '"""
' → logprob: -1.9802422523498535
    4. '"""' → logprob: -4.9802422523498535
    5. '"""

' → logprob: -5.4802422523498535
    6. '
' → logprob: -5.4802422523498535
    7. '#
' → logprob: -5.7302422523498535
    8. ''''
' → logprob: -7.1052422523498535
    9. 'x' → logprob: -7.2302422523498535
    10. ' def' → logprob: -7.3552422523498535

Token 938: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005481813568621874
    2. '#' → logprob: -5.755481719970703
    3. '"""
' → logprob: -6.880481719970703
    4. '"""' → logprob: -7.255481719970703
    5. 'for' → logprob: -8.380481719970703
    6. '
' → logprob: -8.880481719970703
    7. ' def' → logprob: -9.380481719970703
    8. 'from' → logprob: -10.630481719970703
    9. '"""

' → logprob: -10.630481719970703
    10. '```' → logprob: -11.505481719970703

Token 939: ' n' (ID: 297)
  Prédit: ' binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.3684576153755188
    2. 'binary' → logprob: -2.493457555770874
    3. ' bis' → logprob: -2.618457555770874
    4. ' f' → logprob: -2.743457555770874
    5. ' b' → logprob: -3.868457555770874
    6. ' bs' → logprob: -3.993457555770874
    7. ' bin' → logprob: -4.993457794189453
    8. ' search' → logprob: -5.368457794189453
    9. 'bis' → logprob: -5.743457794189453
    10. 'Binary' → logprob: -5.868457794189453

Token 940: 'ibu' (ID: 27546)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.1308329105377197
    2. '(x' → logprob: -2.2558329105377197
    3. '_' → logprob: -2.3808329105377197
    4. 'umber' → logprob: -3.1308329105377197
    5. 'bin' → logprob: -3.3808329105377197
    6. 'eg' → logprob: -3.5058329105377197
    7. 'o' → logprob: -3.5058329105377197
    8. 'binary' → logprob: -3.7558329105377197
    9. 'e' → logprob: -3.8808329105377197
    10. 'search' → logprob: -4.005832672119141

Token 941: '(x' (ID: 4061)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5778024196624756
    2. 'n' → logprob: -2.3278024196624756
    3. 'nd' → logprob: -2.4528024196624756
    4. '(x' → logprob: -3.0778024196624756
    5. 'search' → logprob: -3.2028024196624756
    6. '_search' → logprob: -3.5778024196624756
    7. '(l' → logprob: -4.327802658081055
    8. '_' → logprob: -4.452802658081055
    9. '(a' → logprob: -4.577802658081055
    10. 'm' → logprob: -4.827802658081055

Token 942: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5126250386238098
    2. '):' → logprob: -1.012624979019165
    3. '):
' → logprob: -3.887624979019165
    4. ')' → logprob: -5.762625217437744
    5. '(lo' → logprob: -6.012625217437744
    6. 'lo' → logprob: -6.762625217437744
    7. ' ,' → logprob: -6.887625217437744
    8. '(n' → logprob: -7.012625217437744
    9. ',k' → logprob: -7.262625217437744
    10. 'def' → logprob: -7.262625217437744

Token 943: ' n' (ID: 297)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5424543023109436
    2. 'a' → logprob: -2.417454242706299
    3. 'ok' → logprob: -2.417454242706299
    4. 'lo' → logprob: -3.042454242706299
    5. 'lb' → logprob: -3.417454242706299
    6. 'left' → logprob: -3.667454242706299
    7. 'L' → logprob: -4.167454242706299
    8. 'ng' → logprob: -4.292454242706299
    9. 'low' → logprob: -4.292454242706299
    10. 'y' → logprob: -4.667454242706299

Token 944: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8379219174385071
    2. '):' → logprob: -0.8379219174385071
    3. '):
' → logprob: -2.0879218578338623
    4. 'def' → logprob: -5.462922096252441
    5. ')' → logprob: -5.962922096252441
    6. '):
' → logprob: -7.212922096252441
    7. '   ' → logprob: -7.462922096252441
    8. ',y' → logprob: -7.587922096252441
    9. ',x' → logprob: -8.212922096252441
    10. ',k' → logprob: -8.337922096252441

Token 945: ' r' (ID: 428)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1709357500076294
    2. 'ok' → logprob: -1.6709357500076294
    3. 'lb' → logprob: -2.67093563079834
    4. 'lo' → logprob: -3.42093563079834
    5. 'a' → logprob: -3.42093563079834
    6. 'm' → logprob: -3.67093563079834
    7. 'left' → logprob: -3.67093563079834
    8. 'f' → logprob: -3.79593563079834
    9. 'k' → logprob: -3.79593563079834
    10. 'low' → logprob: -4.04593563079834

Token 946: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019893044605851173
    2. '):
' → logprob: -4.144893169403076
    3. ')' → logprob: -6.644893169403076
    4. ',' → logprob: -7.019893169403076
    5. '):
' → logprob: -7.144893169403076
    6. 'r' → logprob: -8.019892692565918
    7. 'e' → logprob: -8.894892692565918
    8. 'ight' → logprob: -9.019892692565918
    9. '+' → logprob: -9.894892692565918
    10. ' ):' → logprob: -10.144892692565918

Token 947: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039762333035469055
    2. '):' → logprob: -4.039762496948242
    3. '#' → logprob: -4.664762496948242
    4. '):
' → logprob: -5.664762496948242
    5. ':' → logprob: -5.789762496948242
    6. 'def' → logprob: -6.414762496948242
    7. ')' → logprob: -7.164762496948242
    8. ',' → logprob: -7.539762496948242
    9. ' #' → logprob: -8.039762496948242
    10. '"""' → logprob: -8.164762496948242

Token 948: ' ll' (ID: 11475)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.831737756729126
    2. ' while' → logprob: -1.581737756729126
    3. '   ' → logprob: -1.706737756729126
    4. 'l' → logprob: -2.081737756729126
    5. ' l' → logprob: -3.706737756729126
    6. ' mid' → logprob: -4.706737518310547
    7. 'mid' → logprob: -5.081737518310547
    8. '#' → logprob: -6.081737518310547
    9. 'if' → logprob: -6.456737518310547
    10. 'm' → logprob: -6.581737518310547

Token 949: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8463791012763977
    2. ' =' → logprob: -0.9713791012763977
    3. ',' → logprob: -2.096379041671753
    4. '   ' → logprob: -3.846379041671753
    5. ',r' → logprob: -3.971379041671753
    6. 'eft' → logprob: -4.846379280090332
    7. 'f' → logprob: -4.971379280090332
    8. ' ,' → logprob: -5.721379280090332
    9. '=r' → logprob: -6.346379280090332
    10. 'e' → logprob: -6.346379280090332

Token 950: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21295641362667084
    2. 'l' → logprob: -2.462956428527832
    3. 'n' → logprob: -3.087956428527832
    4. 'x' → logprob: -3.212956428527832
    5. 'r' → logprob: -4.212956428527832
    6. ' ' → logprob: -5.962956428527832
    7. ' l' → logprob: -6.837956428527832
    8. ' n' → logprob: -7.337956428527832
    9. '1' → logprob: -7.462956428527832
    10. ' x' → logprob: -7.712956428527832

Token 951: '0' (ID: 15)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1743837594985962
    2. '0' → logprob: -1.2993837594985962
    3. 'x' → logprob: -1.5493837594985962
    4. 'n' → logprob: -1.6743837594985962
    5. 'r' → logprob: -4.174383640289307
    6. '1' → logprob: -6.674383640289307
    7. '-' → logprob: -7.174383640289307
    8. 'max' → logprob: -8.674384117126465
    9. 'm' → logprob: -9.049384117126465
    10. '(x' → logprob: -9.049384117126465

Token 952: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2795323133468628
    2. 'r' → logprob: -2.1545324325561523
    3. '   ' → logprob: -3.2795324325561523
    4. ' ' → logprob: -4.154532432556152
    5. ' 
' → logprob: -4.279532432556152
    6. '+' → logprob: -4.779532432556152
    7. '<|end|>' → logprob: -4.779532432556152
    8. ',' → logprob: -5.029532432556152
    9. '#' → logprob: -5.029532432556152
    10. ' r' → logprob: -5.154532432556152

Token 953: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9962235689163208
    2. ',' → logprob: -1.6212235689163208
    3. 'r' → logprob: -1.9962235689163208
    4. 'while' → logprob: -2.7462234497070312
    5. '
' → logprob: -3.2462234497070312
    6. 'rr' → logprob: -3.6212234497070312
    7. '#' → logprob: -3.7462234497070312
    8. '(rr' → logprob: -3.9962234497070312
    9. ')' → logprob: -4.121223449707031
    10. ',r' → logprob: -4.371223449707031

Token 954: ' B' (ID: 418)
  Prédit: ' rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rr' → logprob: -0.40494057536125183
    2. 'rr' → logprob: -2.029940605163574
    3. 'ur' → logprob: -2.529940605163574
    4. ' while' → logprob: -3.529940605163574
    5. ' ur' → logprob: -3.904940605163574
    6. 'r' → logprob: -4.029940605163574
    7. ' r' → logprob: -4.529940605163574
    8. 'while' → logprob: -4.529940605163574
    9. 'ul' → logprob: -4.904940605163574
    10. '   ' → logprob: -5.404940605163574

Token 955: 'orne' (ID: 24020)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03652814030647278
    2. 'while' → logprob: -4.03652811050415
    3. ' while' → logprob: -4.66152811050415
    4. ' r' → logprob: -5.78652811050415
    5. 'l' → logprob: -6.53652811050415
    6. 'e' → logprob: -7.41152811050415
    7. 'hile' → logprob: -7.53652811050415
    8. 'ile' → logprob: -8.536528587341309
    9. 'ef' → logprob: -8.536528587341309
    10. 'f' → logprob: -8.661528587341309

Token 956: ' basse' (ID: 110686)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4427452087402344
    2. ',' → logprob: -1.4427452087402344
    3. ' r' → logprob: -3.4427452087402344
    4. '=' → logprob: -4.567745208740234
    5. ' =' → logprob: -4.567745208740234
    6. '   ' → logprob: -4.817745208740234
    7. ' ' → logprob: -5.067745208740234
    8. 'n' → logprob: -5.192745208740234
    9. 'mid' → logprob: -5.192745208740234
    10. ' ,' → logprob: -5.192745208740234

Token 957: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43631380796432495
    2. '
' → logprob: -2.3113138675689697
    3. '<|end|>' → logprob: -2.6863138675689697
    4. '	while' → logprob: -3.1863138675689697
    5. 'while' → logprob: -3.1863138675689697
    6. '<|end|>' → logprob: -3.6863138675689697
    7. '+' → logprob: -4.311313629150391
    8. ' while' → logprob: -4.436313629150391
    9. '#' → logprob: -4.436313629150391
    10. 'r' → logprob: -4.561313629150391

Token 958: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02468043565750122
    2. ' r' → logprob: -3.7746803760528564
    3. 'n' → logprob: -7.3996806144714355
    4. '1' → logprob: -7.6496806144714355
    5. 'x' → logprob: -8.649680137634277
    6. ' n' → logprob: -9.774680137634277
    7. ' x' → logprob: -11.149680137634277
    8. '(r' → logprob: -11.149680137634277
    9. 'rr' → logprob: -11.399680137634277
    10. 'l' → logprob: -11.524680137634277

Token 959: ' plage' (ID: 78241)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.037289299070835114
    2. ' r' → logprob: -4.037289142608643
    3. 'n' → logprob: -4.287289142608643
    4. 'x' → logprob: -6.412289142608643
    5. 'while' → logprob: -6.912289142608643
    6. ' while' → logprob: -7.287289142608643
    7. ' n' → logprob: -8.0372896194458
    8. '=r' → logprob: -8.1622896194458
    9. ' x' → logprob: -8.7872896194458
    10. 'rn' → logprob: -9.1622896194458

Token 960: ' recherch' (ID: 116148)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0240098275244236
    2. ' while' → logprob: -5.024009704589844
    3. '<|end|>' → logprob: -5.149009704589844
    4. '
' → logprob: -5.774009704589844
    5. '	while' → logprob: -5.899009704589844
    6. '<|end|>' → logprob: -6.899009704589844
    7. ' ' → logprob: -7.024009704589844
    8. 'while' → logprob: -7.399009704589844
    9. '  ' → logprob: -7.399009704589844
    10. '#' → logprob: -8.149009704589844

Token 961: 'ée' (ID: 2894)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.3173391819000244
    2. 'ound' → logprob: -1.8173391819000244
    3. '   ' → logprob: -1.8173391819000244
    4. 'e' → logprob: -2.1923391819000244
    5. ')' → logprob: -2.8173391819000244
    6. 'ase' → logprob: -2.8173391819000244
    7. ',' → logprob: -2.9423391819000244
    8. 'orne' → logprob: -2.9423391819000244
    9. 'nd' → logprob: -3.9423391819000244
    10. 'asse' → logprob: -4.317338943481445

Token 962: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01621982455253601
    2. '<|end|>' → logprob: -5.141219615936279
    3. ' while' → logprob: -5.641219615936279
    4. '	while' → logprob: -5.891219615936279
    5. 'while' → logprob: -7.266219615936279
    6. '
' → logprob: -7.391219615936279
    7. ')' → logprob: -7.516219615936279
    8. '#' → logprob: -8.016220092773438
    9. '  ' → logprob: -8.266220092773438
    10. '<|end|>' → logprob: -8.516220092773438

Token 963: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048766881227493286
    2. 'r' → logprob: -5.04876708984375
    3. ' ' → logprob: -5.04876708984375
    4. '	' → logprob: -5.54876708984375
    5. 'n' → logprob: -5.67376708984375
    6. '	l' → logprob: -5.92376708984375
    7. '       ' → logprob: -6.04876708984375
    8. '  ' → logprob: -6.17376708984375
    9. '	while' → logprob: -6.29876708984375
    10. 'l' → logprob: -6.42376708984375

Token 964: ' rr' (ID: 54129)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' (adapté à ' rr') → logprob: -0.4191164970397949
    2. 'ur' → logprob: -1.169116497039795
    3. '   ' → logprob: -4.044116497039795
    4. ' rr' → logprob: -4.669116497039795
    5. 'while' → logprob: -6.294116497039795
    6. 'ul' → logprob: -7.044116497039795
    7. 'lr' → logprob: -7.544116497039795
    8. ' ur' → logprob: -7.544116497039795
    9. ' while' → logprob: -8.794116973876953
    10. 'hh' → logprob: -8.794116973876953

Token 965: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16031713783740997
    2. '=' → logprob: -1.9103171825408936
    3. '   ' → logprob: -9.785317420959473
    4. ' ' → logprob: -10.660317420959473
    5. '  ' → logprob: -12.785317420959473
    6. '    ' → logprob: -12.910317420959473
    7. '#' → logprob: -13.035317420959473
    8. ' #' → logprob: -13.535317420959473
    9. 'r' → logprob: -13.785317420959473
    10. '=r' → logprob: -14.035317420959473

Token 966: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.15568163990974426
    2. 'n' → logprob: -2.655681610107422
    3. ' r' → logprob: -2.905681610107422
    4. ' n' → logprob: -5.030681610107422
    5. 'len' → logprob: -5.405681610107422
    6. 'x' → logprob: -5.530681610107422
    7. '100' → logprob: -6.280681610107422
    8. '10' → logprob: -7.280681610107422
    9. '0' → logprob: -7.780681610107422
    10. ' x' → logprob: -8.030681610107422

Token 967: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1837124228477478
    2. '
' → logprob: -2.8087124824523926
    3. ' +' → logprob: -2.9337124824523926
    4. '#' → logprob: -3.6837124824523926
    5. ' ' → logprob: -4.433712482452393
    6. ' #' → logprob: -5.183712482452393
    7. '   ' → logprob: -5.183712482452393
    8. '<|end|>' → logprob: -5.808712482452393
    9. '  ' → logprob: -7.183712482452393
    10. ' 
' → logprob: -7.933712482452393

Token 968: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.45255953073501587
    2. '   ' → logprob: -1.327559471130371
    3. ' ' → logprob: -3.452559471130371
    4. '
' → logprob: -3.827559471130371
    5. '<|end|>' → logprob: -4.202559471130371
    6. ')' → logprob: -4.952559471130371
    7. '#' → logprob: -5.077559471130371
    8. '  ' → logprob: -5.202559471130371
    9. ' +' → logprob: -5.452559471130371
    10. '<|end|>' → logprob: -6.327559471130371

Token 969: ' B' (ID: 418)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8974809050559998
    2. 'while' → logprob: -1.6474809646606445
    3. 'n' → logprob: -2.0224809646606445
    4. ' while' → logprob: -2.2724809646606445
    5. '   ' → logprob: -3.0224809646606445
    6. 'r' → logprob: -3.5224809646606445
    7. '#' → logprob: -3.6474809646606445
    8. ' ' → logprob: -3.7724809646606445
    9. ' n' → logprob: -4.2724809646606445
    10. ' r' → logprob: -5.3974809646606445

Token 970: 'orne' (ID: 24020)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.409284234046936
    2. '   ' → logprob: -1.909284234046936
    3. 'r' → logprob: -2.0342841148376465
    4. '+' → logprob: -2.0342841148376465
    5. '  ' → logprob: -2.6592841148376465
    6. 'n' → logprob: -2.7842841148376465
    7. 'ound' → logprob: -2.9092841148376465
    8. ' ' → logprob: -3.4092841148376465
    9. ')' → logprob: -3.6592841148376465
    10. '=' → logprob: -4.1592841148376465

Token 971: ' haute' (ID: 49646)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5615718364715576
    2. '=' → logprob: -0.9365718364715576
    3. '   ' → logprob: -4.311572074890137
    4. ' ' → logprob: -4.811572074890137
    5. '  ' → logprob: -5.311572074890137
    6. '+' → logprob: -5.686572074890137
    7. 'high' → logprob: -6.561572074890137
    8. '    ' → logprob: -6.936572074890137
    9. 'b' → logprob: -7.186572074890137
    10. ' -' → logprob: -7.436572074890137

Token 972: ' de' (ID: 334)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3016854226589203
    2. '   ' → logprob: -2.051685333251953
    3. ' +' → logprob: -2.926685333251953
    4. '#' → logprob: -3.176685333251953
    5. ' ' → logprob: -4.801685333251953
    6. ' #' → logprob: -4.926685333251953
    7. '<|end|>' → logprob: -4.926685333251953
    8. '  ' → logprob: -5.176685333251953
    9. '-' → logprob: -5.551685333251953
    10. '<|end|>' → logprob: -6.301685333251953

Token 973: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.37266165018081665
    2. 'r' → logprob: -1.6226615905761719
    3. ' n' → logprob: -3.247661590576172
    4. 'x' → logprob: -3.622661590576172
    5. ' r' → logprob: -3.872661590576172
    6. '100' → logprob: -4.497661590576172
    7. 'rr' → logprob: -5.372661590576172
    8. ' x' → logprob: -6.122661590576172
    9. ' ' → logprob: -6.247661590576172
    10. 'len' → logprob: -6.622661590576172

Token 974: ' plage' (ID: 78241)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2229791134595871
    2. 'r' → logprob: -2.3479790687561035
    3. 'x' → logprob: -3.2229790687561035
    4. ' n' → logprob: -3.7229790687561035
    5. ' x' → logprob: -4.5979790687561035
    6. ' r' → logprob: -4.5979790687561035
    7. ' ' → logprob: -5.3479790687561035
    8. 'range' → logprob: -5.5979790687561035
    9. ')' → logprob: -6.3479790687561035
    10. '   ' → logprob: -6.8479790687561035

Token 975: ' recherch' (ID: 116148)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15351279079914093
    2. '+' → logprob: -2.528512716293335
    3. ' +' → logprob: -3.903512716293335
    4. '<|end|>' → logprob: -4.528512954711914
    5. ' ' → logprob: -4.653512954711914
    6. '
' → logprob: -4.903512954711914
    7. '#' → logprob: -4.903512954711914
    8. ' #' → logprob: -5.903512954711914
    9. '  ' → logprob: -6.028512954711914
    10. '    ' → logprob: -7.778512954711914

Token 976: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.02308928221464157
    2. '   ' → logprob: -5.148089408874512
    3. ')' → logprob: -5.523089408874512
    4. 'ase' → logprob: -5.648089408874512
    5. 'limit' → logprob: -6.648089408874512
    6. 'ale' → logprob: -6.773089408874512
    7. '=' → logprob: -6.898089408874512
    8. 'ight' → logprob: -7.023089408874512
    9. 'ue' → logprob: -7.523089408874512
    10. 'te' → logprob: -7.523089408874512

Token 977: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002268493641167879
    2. '
' → logprob: -6.877268314361572
    3. '<|end|>' → logprob: -7.377268314361572
    4. ' while' → logprob: -8.37726879119873
    5. '	while' → logprob: -8.87726879119873
    6. ' ' → logprob: -10.12726879119873
    7. 'while' → logprob: -10.25226879119873
    8. '    
' → logprob: -10.25226879119873
    9. '#' → logprob: -10.62726879119873
    10. '<|end|>' → logprob: -10.75226879119873

Token 978: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004517108201980591
    2. '	while' → logprob: -6.004517078399658
    3. ' while' → logprob: -6.379517078399658
    4. 'while' → logprob: -8.629517555236816
    5. '<|end|>' → logprob: -9.754517555236816
    6. '    
' → logprob: -10.379517555236816
    7. '       ' → logprob: -11.254517555236816
    8. ')' → logprob: -11.629517555236816
    9. '	' → logprob: -12.004517555236816
    10. '#' → logprob: -12.004517555236816

Token 979: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.517170786857605
    2. 'while' (adapté à ' while') → logprob: -1.267170786857605
    3. ' while' → logprob: -2.1421709060668945
    4. '	while' → logprob: -5.5171709060668945
    5. '#' → logprob: -8.017170906066895
    6. ' ' → logprob: -8.767170906066895
    7. '
' → logprob: -9.892170906066895
    8. ' #' → logprob: -10.142170906066895
    9. '  ' → logprob: -10.392170906066895
    10. '    ' → logprob: -10.767170906066895

Token 980: ' True' (ID: 6432)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.2520815134048462
    2. ' ll' → logprob: -1.5020815134048462
    3. 'rr' → logprob: -9.377081871032715
    4. '(ll' → logprob: -10.377081871032715
    5. '	ll' → logprob: -10.752081871032715
    6. ' rr' → logprob: -11.377081871032715
    7. ' ' → logprob: -13.377081871032715
    8. '_ll' → logprob: -14.502081871032715
    9. '<ll' → logprob: -14.752081871032715
    10. '   ' → logprob: -14.752081871032715

Token 981: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.653770923614502
    2. ':' → logprob: -0.778770923614502
    3. ':
' → logprob: -4.153770923614502
    4. '   ' → logprob: -5.778770923614502
    5. '
' → logprob: -7.653770923614502
    6. '<|end|>' → logprob: -7.903770923614502
    7. ' :' → logprob: -8.028770446777344
    8. '	' → logprob: -9.028770446777344
    9. ',' → logprob: -9.028770446777344
    10. '    ' → logprob: -9.153770446777344

Token 982: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015506102703511715
    2. '   ' → logprob: -5.015506267547607
    3. ':' → logprob: -5.390506267547607
    4. '    ' → logprob: -6.265506267547607
    5. '<|end|>' → logprob: -7.390506267547607
    6. ' :' → logprob: -8.39050579071045
    7. '	' → logprob: -8.64050579071045
    8. '      ' → logprob: -8.64050579071045
    9. '#' → logprob: -8.76550579071045
    10. '     ' → logprob: -9.26550579071045

Token 983: ' mid' (ID: 6959)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8909386992454529
    2. 'mid' (adapté à ' mid') → logprob: -1.2659387588500977
    3. ' mid' → logprob: -1.3909387588500977
    4. ' m' → logprob: -3.7659387588500977
    5. '   ' → logprob: -4.390938758850098
    6. 'mm' → logprob: -4.765938758850098
    7. 'mi' → logprob: -5.765938758850098
    8. ' mm' → logprob: -5.890938758850098
    9. 'md' → logprob: -6.015938758850098
    10. '       ' → logprob: -6.515938758850098

Token 984: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12701043486595154
    2. '=' → logprob: -2.1270103454589844
    3. ' ' → logprob: -10.002010345458984
    4. '=(' → logprob: -11.252010345458984
    5. ':' → logprob: -12.627010345458984
    6. '=int' → logprob: -12.752010345458984
    7. '=((' → logprob: -13.252010345458984
    8. '   ' → logprob: -13.627010345458984
    9. '<|end|>' → logprob: -13.627010345458984
    10. '    ' → logprob: -13.627010345458984

Token 985: ' (' (ID: 350)
  Prédit: '(ll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ll' → logprob: -0.003322557546198368
    2. ' (' → logprob: -6.378322601318359
    3. '(rr' → logprob: -6.503322601318359
    4. 'll' → logprob: -9.62832260131836
    5. '(' → logprob: -10.62832260131836
    6. ' ' → logprob: -12.00332260131836
    7. '(ls' → logprob: -12.12832260131836
    8. '(l' → logprob: -12.25332260131836
    9. '
' → logprob: -13.12832260131836
    10. ' ll' → logprob: -13.37832260131836

Token 986: 'll' (ID: 680)
  Prédit: 'll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.00017886889690998942
    2. 'rr' → logprob: -8.875179290771484
    3. ' ll' → logprob: -10.500179290771484
    4. '(ll' → logprob: -11.625179290771484
    5. 'lll' → logprob: -14.000179290771484
    6. 'rl' → logprob: -14.500179290771484
    7. '	ll' → logprob: -14.625179290771484
    8. 'lr' → logprob: -15.500179290771484
    9. 'l' → logprob: -15.750179290771484
    10. '_ll' → logprob: -15.875179290771484

Token 987: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014178908430039883
    2. ' +' → logprob: -4.26417875289917
    3. '+r' → logprob: -11.139179229736328
    4. '+
' → logprob: -14.514179229736328
    5. ' ' → logprob: -15.889179229736328
    6. '
' → logprob: -15.889179229736328
    7. ' rr' → logprob: -18.139179229736328
    8. '＋' → logprob: -18.139179229736328
    9. '	' → logprob: -18.264179229736328
    10. ' ' → logprob: -18.389179229736328

Token 988: ' rr' (ID: 54129)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.0007317355484701693
    2. ' rr' → logprob: -7.250731945037842
    3. '(rr' → logprob: -10.750731468200684
    4. 'r' → logprob: -15.000731468200684
    5. '
' → logprob: -16.250732421875
    6. '_rr' → logprob: -17.250732421875
    7. 'rrrr' → logprob: -18.000732421875
    8. ' ' → logprob: -19.000732421875
    9. '   ' → logprob: -19.250732421875
    10. 'rl' → logprob: -20.125732421875

Token 989: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16123756766319275
    2. ')//' → logprob: -1.9112375974655151
    3. ')>>' → logprob: -6.911237716674805
    4. ' )' → logprob: -11.161237716674805
    5. ')
' → logprob: -13.911237716674805
    6. ')#' → logprob: -14.411237716674805
    7. '//' → logprob: -15.536237716674805
    8. ')<<' → logprob: -15.536237716674805
    9. '   ' → logprob: -16.161237716674805
    10. '+' → logprob: -16.411237716674805

Token 990: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1426669806241989
    2. ')//' → logprob: -2.642667055130005
    3. '>>' → logprob: -3.892667055130005
    4. '//' → logprob: -4.142666816711426
    5. ')>>' → logprob: -4.142666816711426
    6. ' //' → logprob: -4.892666816711426
    7. ' >>' → logprob: -6.642666816711426
    8. ' )' → logprob: -7.392666816711426
    9. '   ' → logprob: -9.892666816711426
    10. '
' → logprob: -9.892666816711426

Token 991: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '=' → logprob: -19.00010871887207
    4. '２' → logprob: -19.50010871887207
    5. '   ' → logprob: -19.87510871887207
    6. '۲' → logprob: -20.25010871887207
    7. '
' → logprob: -20.50010871887207
    8. '```' → logprob: -20.87510871887207
    9. '٢' → logprob: -21.18760871887207
    10. '    ' → logprob: -21.50010871887207

Token 992: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '=' → logprob: -19.875009536743164
    4. '
' → logprob: -20.125009536743164
    5. '２' → logprob: -20.125009536743164
    6. '۲' → logprob: -20.625009536743164
    7. '```' → logprob: -20.875009536743164
    8. '23' → logprob: -21.312509536743164
    9. '٢' → logprob: -21.437509536743164
    10. '२' → logprob: -21.437509536743164

Token 993: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1084376871585846
    2. '<|end|>' → logprob: -2.3584377765655518
    3. ')' → logprob: -5.108437538146973
    4. '
' → logprob: -6.983437538146973
    5. '<|end|>' → logprob: -7.358437538146973
    6. '	' → logprob: -9.233437538146973
    7. '   ' → logprob: -9.358437538146973
    8. ' ' → logprob: -9.358437538146973
    9. '#' → logprob: -10.233437538146973
    10. '        
' → logprob: -10.358437538146973

Token 994: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32042813301086426
    2. '<|end|>' → logprob: -1.3204281330108643
    3. '
' → logprob: -5.695427894592285
    4. '<|end|>' → logprob: -6.695427894592285
    5. ')' → logprob: -6.820427894592285
    6. '	' → logprob: -7.820427894592285
    7. '#' → logprob: -8.570427894592285
    8. '   ' → logprob: -8.695427894592285
    9. ' ' → logprob: -9.070427894592285
    10. '...' → logprob: -9.195427894592285

Token 995: ' Cal' (ID: 4453)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38862085342407227
    2. 'if' → logprob: -1.2636208534240723
    3. ' if' → logprob: -3.6386208534240723
    4. '#' → logprob: -4.888620853424072
    5. '   ' → logprob: -6.138620853424072
    6. '<|end|>' → logprob: -6.263620853424072
    7. '	' → logprob: -7.763620853424072
    8. '	if' → logprob: -8.638620376586914
    9. '...' → logprob: -9.138620376586914
    10. 'return' → logprob: -9.263620376586914

Token 996: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.13568994402885437
    2. 'cul' → logprob: -2.7606899738311768
    3. 'culate' → logprob: -3.7606899738311768
    4. '       ' → logprob: -3.7606899738311768
    5. 'c' → logprob: -4.510689735412598
    6. '   ' → logprob: -5.885689735412598
    7. 'culated' → logprob: -7.260689735412598
    8. 'cula' → logprob: -7.385689735412598
    9. 'cules' → logprob: -7.885689735412598
    10. 'cu' → logprob: -8.135689735412598

Token 997: ' le' (ID: 505)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.6221968531608582
    2. '(mid' → logprob: -1.622196912765503
    3. '<|end|>' → logprob: -1.622196912765503
    4. ' mid' → logprob: -3.872196912765503
    5. '       ' → logprob: -4.247196674346924
    6. '        ' → logprob: -4.747196674346924
    7. 'll' → logprob: -5.122196674346924
    8. '[mid' → logprob: -5.497196674346924
    9. ' ' → logprob: -5.997196674346924
    10. '(ll' → logprob: -6.122196674346924

Token 998: ' point' (ID: 2438)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.09348425269126892
    2. 'mil' → logprob: -3.2184841632843018
    3. ' mid' → logprob: -3.7184841632843018
    4. '(mid' → logprob: -4.093484401702881
    5. 'm' → logprob: -5.968484401702881
    6. 'll' → logprob: -6.593484401702881
    7. ' midpoint' → logprob: -6.718484401702881
    8. 'mi' → logprob: -6.843484401702881
    9. ' milieu' → logprob: -7.843484401702881
    10. 'middle' → logprob: -7.968484401702881

Token 999: ' à' (ID: 1221)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.7081719040870667
    2. '       ' → logprob: -1.7081718444824219
    3. '=' → logprob: -3.083171844482422
    4. '        ' → logprob: -3.083171844482422
    5. 'middle' → logprob: -3.458171844482422
    6. ' =' → logprob: -3.833171844482422
    7. ' milieu' → logprob: -3.833171844482422
    8. '<|end|>' → logprob: -3.833171844482422
    9. '    ' → logprob: -3.958171844482422
    10. 'mil' → logprob: -3.958171844482422

Token 1000: ' tester' (ID: 51819)
  Prédit: 'mil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mil' → logprob: -0.3198217451572418
    2. 'mi' → logprob: -1.5698217153549194
    3. 'mid' → logprob: -3.694821834564209
    4. '(mid' → logprob: -3.819821834564209
    5. '(ll' → logprob: -4.319821834564209
    6. '(l' → logprob: -5.944821834564209
    7. 'll' → logprob: -7.194821834564209
    8. '(mi' → logprob: -7.819821834564209
    9. ' milieu' → logprob: -7.944821834564209
    10. '(m' → logprob: -8.19482135772705

Token 1001: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051150910556316376
    2. '<|end|>' → logprob: -3.0511507987976074
    3. '
' → logprob: -6.926150798797607
    4. ')' → logprob: -7.551150798797607
    5. '<|end|>' → logprob: -7.551150798797607
    6. '	' → logprob: -9.176151275634766
    7. '   ' → logprob: -9.301151275634766
    8. '#' → logprob: -9.301151275634766
    9. '        
' → logprob: -10.301151275634766
    10. '...' → logprob: -10.426151275634766

Token 1002: 'mil' (ID: 42335)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1409578025341034
    2. '       ' → logprob: -2.140957832336426
    3. ' )' → logprob: -5.265957832336426
    4. ')
' → logprob: -5.765957832336426
    5. 'if' → logprob: -6.515957832336426
    6. '#' → logprob: -7.140957832336426
    7. 'll' → logprob: -7.265957832336426
    8. '   ' → logprob: -7.515957832336426
    9. ' ' → logprob: -8.140957832336426
    10. '<|end|>' → logprob: -8.265957832336426

Token 1003: 'ieu' (ID: 15541)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05141499638557434
    2. 'id' → logprob: -3.426414966583252
    3. 'ieu' → logprob: -4.676414966583252
    4. 'di' → logprob: -5.426414966583252
    5. 'de' → logprob: -6.551414966583252
    6. 'dl' → logprob: -7.051414966583252
    7. 'div' → logprob: -8.05141544342041
    8. 'dd' → logprob: -8.05141544342041
    9. 'oy' → logprob: -9.05141544342041
    10. 'mid' → logprob: -9.17641544342041

Token 1004: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006960689090192318
    2. ')
' → logprob: -5.381960868835449
    3. ' )' → logprob: -6.381960868835449
    4. '       ' → logprob: -8.38196086883545
    5. '<|end|>' → logprob: -8.50696086883545
    6. ')

' → logprob: -10.75696086883545
    7. ' entre' → logprob: -11.00696086883545
    8. ' )
' → logprob: -11.25696086883545
    9. ')
' → logprob: -11.38196086883545
    10. '=' → logprob: -11.38196086883545

Token 1005: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012336693704128265
    2. '<|end|>' → logprob: -4.512336730957031
    3. ')' → logprob: -7.887336730957031
    4. '   ' → logprob: -8.137336730957031
    5. '<|end|>' → logprob: -8.762336730957031
    6. '        ' → logprob: -9.262336730957031
    7. '	' → logprob: -9.887336730957031
    8. '#' → logprob: -9.887336730957031
    9. ' ' → logprob: -10.012336730957031
    10. '    ' → logprob: -10.262336730957031

Token 1006: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13010773062705994
    2. 'if' → logprob: -2.8801076412200928
    3. '#' (adapté à ' #') → logprob: -3.0051076412200928
    4. ' if' → logprob: -4.380107879638672
    5. '<|end|>' → logprob: -6.630107879638672
    6. '	' → logprob: -6.880107879638672
    7. '   ' → logprob: -7.755107879638672
    8. 'def' → logprob: -8.380107879638672
    9. ' #' → logprob: -9.130107879638672
    10. '...' → logprob: -9.380107879638672

Token 1007: ' Il' (ID: 5329)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48573997616767883
    2. '       ' → logprob: -1.2357399463653564
    3. ' if' → logprob: -2.8607399463653564
    4. '#' → logprob: -3.3607399463653564
    5. '   ' → logprob: -6.9857401847839355
    6. ' #' → logprob: -7.7357401847839355
    7. '...' → logprob: -9.110739707946777
    8. '<|end|>' → logprob: -9.110739707946777
    9. '	' → logprob: -9.235739707946777
    10. '	if' → logprob: -9.610739707946777

Token 1008: ' manque' (ID: 56490)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01623752899467945
    2. 'if' → logprob: -5.516237735748291
    3. ' if' → logprob: -5.641237735748291
    4. '   ' → logprob: -6.141237735748291
    5. '        
' → logprob: -6.141237735748291
    6. '#' → logprob: -6.516237735748291
    7. ' faut' → logprob: -7.766237735748291
    8. '    ' → logprob: -7.891237735748291
    9. ' #' → logprob: -8.016237258911133
    10. '        ' → logprob: -8.016237258911133

Token 1009: ' ici' (ID: 27994)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1987024545669556
    2. '       ' → logprob: -1.3237024545669556
    3. 'if' → logprob: -1.5737024545669556
    4. '<|end|>' → logprob: -2.198702335357666
    5. ' ' → logprob: -3.573702335357666
    6. '    ' → logprob: -3.823702335357666
    7. '        ' → logprob: -4.073702335357666
    8. '   ' → logprob: -4.573702335357666
    9. '#' → logprob: -4.573702335357666
    10. '...' → logprob: -4.948702335357666

Token 1010: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05010468512773514
    2. '<|end|>' → logprob: -3.1751046180725098
    3. ' if' → logprob: -5.67510461807251
    4. '   ' → logprob: -6.92510461807251
    5. '#' → logprob: -7.42510461807251
    6. '	' → logprob: -7.80010461807251
    7. 'if' → logprob: -7.92510461807251
    8. '...' → logprob: -8.300105094909668
    9. '<|end|>' → logprob: -8.425105094909668
    10. ' #' → logprob: -8.425105094909668

Token 1011: ' condition' (ID: 7060)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.7091407775878906
    2. '#' → logprob: -1.0841407775878906
    3. ' condition' → logprob: -1.9591407775878906
    4. ' #' → logprob: -5.084140777587891
    5. 'fonction' → logprob: -5.209140777587891
    6. 'pass' → logprob: -5.584140777587891
    7. '"""' → logprob: -6.084140777587891
    8. 'if' → logprob: -6.334140777587891
    9. '   ' → logprob: -6.709140777587891
    10. 'check' → logprob: -6.709140777587891

Token 1012: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1487204134464264
    2. '<|end|>' → logprob: -2.0237205028533936
    3. '#' → logprob: -6.0237202644348145
    4. '<|end|>' → logprob: -7.1487202644348145
    5. '   ' → logprob: -7.2737202644348145
    6. '        ' → logprob: -7.6487202644348145
    7. ')' → logprob: -8.398720741271973
    8. '...' → logprob: -8.398720741271973
    9. '	' → logprob: -8.523720741271973
    10. '           ' → logprob: -8.773720741271973

Token 1013: 'par' (ID: 796)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35980337858200073
    2. '       ' → logprob: -1.3598034381866455
    3. ' if' → logprob: -4.359803199768066
    4. ' )' → logprob: -4.734803199768066
    5. 'if' → logprob: -4.859803199768066
    6. '   ' → logprob: -5.359803199768066
    7. '<|end|>' → logprob: -5.609803199768066
    8. '...' → logprob: -5.984803199768066
    9. '#' → logprob: -6.484803199768066
    10. '...)' → logprob: -6.734803199768066

Token 1014: ' exemple' (ID: 26320)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7931666374206543
    2. 'if' → logprob: -2.1681666374206543
    3. 'def' → logprob: -2.2931666374206543
    4. 'rapport' → logprob: -2.2931666374206543
    5. 'continue' → logprob: -2.6681666374206543
    6. 'ex' → logprob: -2.7931666374206543
    7. ' rapport' → logprob: -4.418166637420654
    8. '...' → logprob: -4.543166637420654
    9. 'mid' → logprob: -4.543166637420654
    10. 'fois' → logprob: -4.918166637420654

Token 1015: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5855476260185242
    2. '       ' → logprob: -1.835547685623169
    3. 'if' → logprob: -1.960547685623169
    4. ' if' → logprob: -2.210547685623169
    5. '#' → logprob: -4.46054744720459
    6. '<|end|>' → logprob: -4.83554744720459
    7. '...' → logprob: -5.21054744720459
    8. ' )' → logprob: -6.21054744720459
    9. '   ' → logprob: -6.58554744720459
    10. '...)' → logprob: -7.08554744720459

Token 1016: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6733817458152771
    2. ' if' → logprob: -1.5483818054199219
    3. '#' → logprob: -1.6733818054199219
    4. '       ' → logprob: -2.548381805419922
    5. ' #' → logprob: -4.673381805419922
    6. '   ' → logprob: -7.798381805419922
    7. ')' → logprob: -7.923381805419922
    8. '...' → logprob: -8.298381805419922
    9. '"""' → logprob: -8.798381805419922
    10. 'x' → logprob: -8.923381805419922

Token 1017: ' ok' (ID: 4763)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.8822203874588013
    2. 'mid' → logprob: -1.1322203874588013
    3. ' condition' → logprob: -3.0072202682495117
    4. 'x' → logprob: -3.1322202682495117
    5. 'some' → logprob: -3.6322202682495117
    6. ' x' → logprob: -3.7572202682495117
    7. ' mid' → logprob: -3.8822202682495117
    8. '...' → logprob: -3.8822202682495117
    9. 'f' → logprob: -4.507220268249512
    10. ')' → logprob: -4.632220268249512

Token 1018: '(mid' (ID: 121498)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20378638803958893
    2. ')' → logprob: -2.2037863731384277
    3. '(mid' → logprob: -3.7037863731384277
    4. 'mid' → logprob: -3.8287863731384277
    5. ':' → logprob: -4.203786373138428
    6. '):
' → logprob: -6.078786373138428
    7. '(ll' → logprob: -6.453786373138428
    8. 'll' → logprob: -6.578786373138428
    9. '==' → logprob: -6.703786373138428
    10. '(x' → logprob: -6.953786373138428

Token 1019: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07998699694871902
    2. ')' → logprob: -3.204987049102783
    3. ')):' → logprob: -3.704987049102783
    4. '):
' → logprob: -5.579987049102783
    5. '))' → logprob: -6.204987049102783
    6. '   ' → logprob: -6.454987049102783
    7. ':' → logprob: -6.954987049102783
    8. '==' → logprob: -7.204987049102783
    9. '       ' → logprob: -7.329987049102783
    10. ')==' → logprob: -7.579987049102783

Token 1020: ' rr' (ID: 54129)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15104079246520996
    2. ')' → logprob: -2.65104079246521
    3. '           ' → logprob: -3.77604079246521
    4. ' if' → logprob: -3.90104079246521
    5. 'if' → logprob: -4.776041030883789
    6. '#' → logprob: -4.776041030883789
    7. '<|end|>' → logprob: -6.151041030883789
    8. '   ' → logprob: -6.401041030883789
    9. 'return' → logprob: -6.776041030883789
    10. '...' → logprob: -7.401041030883789

Token 1021: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11251683533191681
    2. ' =' → logprob: -2.3625168800354004
    3. 'else' → logprob: -4.8625168800354
    4. ' else' → logprob: -6.4875168800354
    5. '   ' → logprob: -7.3625168800354
    6. ')' → logprob: -7.8625168800354
    7. '>' → logprob: -7.9875168800354
    8. '#' → logprob: -8.112516403198242
    9. '       ' → logprob: -8.362516403198242
    10. ' >' → logprob: -8.487516403198242

Token 1022: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.05492967367172241
    2. ' mid' → logprob: -2.929929733276367
    3. '[mid' → logprob: -11.179929733276367
    4. ' ' → logprob: -11.804929733276367
    5. ' ' → logprob: -11.929929733276367
    6. 'm' → logprob: -12.179929733276367
    7. '(mid' → logprob: -12.804929733276367
    8. 'midt' → logprob: -13.554929733276367
    9. ')' → logprob: -13.679929733276367
    10. 'mi' → logprob: -13.679929733276367

Token 1023: ' else' (ID: 1203)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40301164984703064
    2. ' else' → logprob: -2.0280115604400635
    3. '       ' → logprob: -2.2780115604400635
    4. '<|end|>' → logprob: -2.9030115604400635
    5. 'else' → logprob: -4.153011798858643
    6. ';' → logprob: -4.528011798858643
    7. '#' → logprob: -5.403011798858643
    8. ' or' → logprob: -6.278011798858643
    9. ' elif' → logprob: -6.528011798858643
    10. '
' → logprob: -6.653011798858643

Token 1024: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2438843250274658
    2. 'll' → logprob: -1.2438843250274658
    3. ' ll' → logprob: -1.6188843250274658
    4. '       ' → logprob: -1.7438843250274658
    5. 'rr' → logprob: -4.243884086608887
    6. '	ll' → logprob: -4.743884086608887
    7. '   ' → logprob: -4.868884086608887
    8. '           ' → logprob: -5.493884086608887
    9. '<ll' → logprob: -6.618884086608887
    10. 'else' → logprob: -6.868884086608887

Token 1025: ' ll' (ID: 11475)
  Prédit: ' ll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ll' → logprob: -0.2862352728843689
    2. 'll' → logprob: -1.4112353324890137
    3. '       ' → logprob: -6.161235332489014
    4. 'rr' → logprob: -7.286235332489014
    5. ' rr' → logprob: -7.536235332489014
    6. '	ll' → logprob: -7.536235332489014
    7. ',ll' → logprob: -8.286234855651855
    8. '           ' → logprob: -8.661234855651855
    9. '<ll' → logprob: -8.911234855651855
    10. ')' → logprob: -9.536234855651855

Token 1026: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9679056406021118
    2. '=' → logprob: -1.2179056406021118
    3. ' +=' → logprob: -1.8429056406021118
    4. ')' → logprob: -2.7179055213928223
    5. '+=' → logprob: -2.7179055213928223
    6. '+' → logprob: -3.7179055213928223
    7. ' )' → logprob: -5.217905521392822
    8. ' +' → logprob: -6.467905521392822
    9. '   ' → logprob: -7.842905521392822
    10. '       ' → logprob: -8.09290599822998

Token 1027: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.03507949039340019
    2. ' mid' → logprob: -3.5350794792175293
    3. 'll' → logprob: -5.910079479217529
    4. 'rr' → logprob: -6.160079479217529
    5. ' ll' → logprob: -8.410079956054688
    6. ' rr' → logprob: -9.410079956054688
    7. 'rl' → logprob: -9.785079956054688
    8. 'r' → logprob: -10.535079956054688
    9. '[mid' → logprob: -10.535079956054688
    10. '+' → logprob: -11.160079956054688

Token 1028: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03271254524588585
    2. '       ' → logprob: -4.032712459564209
    3. '<|end|>' → logprob: -5.282712459564209
    4. ' )' → logprob: -5.407712459564209
    5. '   ' → logprob: -6.157712459564209
    6. '#' → logprob: -6.657712459564209
    7. '    ' → logprob: -8.157712936401367
    8. ' else' → logprob: -8.532712936401367
    9. '...' → logprob: -8.907712936401367
    10. ' ' → logprob: -9.282712936401367

Token 1029: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.458980300929397e-05
    2. ')' → logprob: -10.12508487701416
    3. ' ' → logprob: -10.12508487701416
    4. '<|end|>' → logprob: -13.62508487701416
    5. '+' → logprob: -14.00008487701416
    6. '```' → logprob: -14.25008487701416
    7. '...' → logprob: -15.25008487701416
    8. ' ' → logprob: -15.37508487701416
    9. '")' → logprob: -15.37508487701416
    10. '<|end|>' → logprob: -15.62508487701416

Token 1030: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. ')' → logprob: -11.750017166137695
    3. ' ' → logprob: -11.875017166137695
    4. '<|end|>' → logprob: -14.375017166137695
    5. '")' → logprob: -14.625017166137695
    6. '"""' → logprob: -15.500017166137695
    7. '">' → logprob: -15.500017166137695
    8. '<|end|>' → logprob: -16.000017166137695
    9. '+' → logprob: -16.125017166137695
    10. '...' → logprob: -16.500017166137695

Token 1031: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1223958358168602
    2. '<|end|>' → logprob: -2.9973957538604736
    3. '       ' → logprob: -3.1223957538604736
    4. '#' → logprob: -4.747395992279053
    5. '   ' → logprob: -4.872395992279053
    6. '")' → logprob: -6.247395992279053
    7. '<|end|>' → logprob: -7.622395992279053
    8. ' )' → logprob: -7.622395992279053
    9. '...' → logprob: -7.747395992279053
    10. '"""' → logprob: -8.122395515441895

Token 1032: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1033: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38213491439819336
    2. '<|end|>' → logprob: -1.5071349143981934
    3. '        ' → logprob: -3.5071349143981934
    4. ' pass' → logprob: -3.7571349143981934
    5. ' ' → logprob: -4.507134914398193
    6. '    ' → logprob: -4.882134914398193
    7. '   ' → logprob: -5.132134914398193
    8. '	' → logprob: -5.257134914398193
    9. 'pass' → logprob: -5.882134914398193
    10. '#' → logprob: -6.257134914398193

Token 1034: ' rr' (ID: 54129)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.9170098900794983
    2. ' ll' → logprob: -1.6670098304748535
    3. 'mid' → logprob: -2.0420098304748535
    4. 'll' → logprob: -2.1670098304748535
    5. ' x' → logprob: -3.5420098304748535
    6. ' ok' → logprob: -3.5420098304748535
    7. ' rr' → logprob: -3.9170098304748535
    8. 'ok' → logprob: -4.0420098304748535
    9. 'False' → logprob: -4.2920098304748535
    10. 'rr' → logprob: -4.5420098304748535

Token 1035: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.1432286500930786
    2. '<=' → logprob: -1.6432286500930786
    3. '=' → logprob: -1.8932286500930786
    4. ' ==' → logprob: -2.518228530883789
    5. '   ' → logprob: -2.768228530883789
    6. '==' → logprob: -3.143228530883789
    7. ' =' → logprob: -3.143228530883789
    8. '<|end|>' → logprob: -3.268228530883789
    9. ' >' → logprob: -3.393228530883789
    10. '>' → logprob: -5.268228530883789

Token 1036: ' mid' (ID: 6959)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.00565572502091527
    2. ' ll' → logprob: -5.380655765533447
    3. 'rr' → logprob: -7.755655765533447
    4. 'mid' → logprob: -8.130655288696289
    5. '	ll' → logprob: -9.630655288696289
    6. ' ' → logprob: -10.005655288696289
    7. ' mid' → logprob: -10.380655288696289
    8. '0' → logprob: -10.505655288696289
    9. '   ' → logprob: -10.505655288696289
    10. 'n' → logprob: -11.380655288696289

Token 1037: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5905727744102478
    2. ':' → logprob: -0.8405727744102478
    3. ':
' → logprob: -4.840572834014893
    4. '   ' → logprob: -6.090572834014893
    5. '<|end|>' → logprob: -6.715572834014893
    6. ' or' → logprob: -7.590572834014893
    7. ':return' → logprob: -8.090572357177734
    8. '	' → logprob: -8.340572357177734
    9. '           ' → logprob: -8.340572357177734
    10. '      ' → logprob: -8.340572357177734

Token 1038: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09774309396743774
    2. ':' → logprob: -2.722743034362793
    3. '	' → logprob: -4.222743034362793
    4. '   ' → logprob: -5.722743034362793
    5. '<|end|>' → logprob: -6.472743034362793
    6. '    ' → logprob: -6.722743034362793
    7. '        ' → logprob: -7.097743034362793
    8. '           ' → logprob: -7.347743034362793
    9. '
' → logprob: -7.472743034362793
    10. ':
' → logprob: -7.597743034362793

Token 1039: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08381543308496475
    2. 'break' → logprob: -3.208815336227417
    3. '           ' → logprob: -3.583815336227417
    4. 'return' (adapté à ' return') → logprob: -5.583815574645996
    5. ' break' → logprob: -5.708815574645996
    6. '   ' → logprob: -6.958815574645996
    7. 'll' → logprob: -7.083815574645996
    8. '        ' → logprob: -7.833815574645996
    9. '	' → logprob: -7.958815574645996
    10. ' return' → logprob: -8.083815574645996

Token 1040: ' ll' (ID: 11475)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.3725328743457794
    2. ' ll' → logprob: -1.372532844543457
    3. 'rr' → logprob: -3.247532844543457
    4. ' rr' → logprob: -4.497532844543457
    5. 'mid' → logprob: -6.122532844543457
    6. ' mid' → logprob: -6.497532844543457
    7. ' ' → logprob: -7.122532844543457
    8. '	ll' → logprob: -7.497532844543457
    9. '    ' → logprob: -7.622532844543457
    10. 'None' → logprob: -7.872532844543457

Token 1041: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21605214476585388
    2. '<|end|>' → logprob: -1.9660521745681763
    3. '
' → logprob: -3.7160520553588867
    4. '	' → logprob: -3.9660520553588867
    5. '   ' → logprob: -5.216052055358887
    6. '<|end|>' → logprob: -6.341052055358887
    7. '    ' → logprob: -7.216052055358887
    8. '        ' → logprob: -7.591052055358887
    9. ' ' → logprob: -7.716052055358887
    10. '		' → logprob: -7.966052055358887

Token 1042: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10364310443401337
    2. '<|end|>' → logprob: -2.7286431789398193
    3. '	' → logprob: -3.8536431789398193
    4. '   ' → logprob: -5.22864294052124
    5. '    ' → logprob: -6.72864294052124
    6. '
' → logprob: -6.72864294052124
    7. '<|end|>' → logprob: -7.10364294052124
    8. '        ' → logprob: -7.22864294052124
    9. ' ' → logprob: -7.60364294052124
    10. '		' → logprob: -7.85364294052124

Token 1043: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028235111385583878
    2. ':' → logprob: -4.403234958648682
    3. '   ' → logprob: -5.653234958648682
    4. '    ' → logprob: -6.278234958648682
    5. '
' → logprob: -6.403234958648682
    6. '<|end|>' → logprob: -6.403234958648682
    7. '        ' → logprob: -6.653234958648682
    8. '	' → logprob: -6.903234958648682
    9. '           ' → logprob: -7.028234958648682
    10. ' ' → logprob: -7.403234958648682

Token 1044: ' (' (ID: 350)
  Prédit: ' rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rr' → logprob: -0.5572929978370667
    2. ' ll' → logprob: -1.3072929382324219
    3. ' mid' → logprob: -2.682292938232422
    4. 'rr' → logprob: -3.182292938232422
    5. 'll' → logprob: -3.807292938232422
    6. 'mid' → logprob: -5.307292938232422
    7. '    ' → logprob: -5.682292938232422
    8. '   ' → logprob: -6.057292938232422
    9. ' ' → logprob: -6.307292938232422
    10. ' ok' → logprob: -6.307292938232422

Token 1045: 'ici' (ID: 3757)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.7405232787132263
    2. 'll' → logprob: -0.8655232787132263
    3. ' ok' → logprob: -3.115523338317871
    4. ' ll' → logprob: -3.615523338317871
    5. 'mid' → logprob: -4.740523338317871
    6. 'rr' → logprob: -4.865523338317871
    7. '   ' → logprob: -5.490523338317871
    8. ' mid' → logprob: -5.865523338317871
    9. 'False' → logprob: -6.740523338317871
    10. 'True' → logprob: -6.865523338317871

Token 1046: ' mettre' (ID: 25339)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3851696252822876
    2. ' <' → logprob: -2.010169506072998
    3. ' <=' → logprob: -2.260169506072998
    4. '   ' → logprob: -2.260169506072998
    5. ')' → logprob: -2.385169506072998
    6. 'll' → logprob: -2.635169506072998
    7. '<ll' → logprob: -3.885169506072998
    8. '<=' → logprob: -3.885169506072998
    9. ' ll' → logprob: -3.885169506072998
    10. ' ' → logprob: -4.010169506072998

Token 1047: ' la' (ID: 557)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.5640429258346558
    2. ' ok' → logprob: -1.3140429258346558
    3. 'll' → logprob: -2.8140430450439453
    4. 'rr' → logprob: -3.4390430450439453
    5. ' ll' → logprob: -4.064043045043945
    6. ' rr' → logprob: -4.439043045043945
    7. ')' → logprob: -5.064043045043945
    8. 'mid' → logprob: -5.314043045043945
    9. 'not' → logprob: -5.439043045043945
    10. 'condition' → logprob: -5.564043045043945

Token 1048: ' condition' (ID: 7060)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.3631479740142822
    2. ')' → logprob: -2.3631479740142822
    3. 'ok' → logprob: -2.9881479740142822
    4. ' condition' → logprob: -3.1131479740142822
    5. ' )' → logprob: -4.488147735595703
    6. 'cond' → logprob: -4.488147735595703
    7. '):' → logprob: -4.613147735595703
    8. ':' → logprob: -4.863147735595703
    9. ' ' → logprob: -4.863147735595703
    10. 'code' → logprob: -4.988147735595703

Token 1049: ' de' (ID: 334)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2799886167049408
    2. '       ' → logprob: -2.2799885272979736
    3. ')' → logprob: -2.5299885272979736
    4. '):
' → logprob: -3.2799885272979736
    5. ':' → logprob: -4.529988765716553
    6. ' ):' → logprob: -5.154988765716553
    7. '   ' → logprob: -6.154988765716553
    8. ' )' → logprob: -6.279988765716553
    9. '    ' → logprob: -7.529988765716553
    10. ' ):
' → logprob: -7.529988765716553

Token 1050: ' coup' (ID: 25465)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.09102504700422287
    2. 'mid' → logprob: -3.7160251140594482
    3. 'mil' → logprob: -3.9660251140594482
    4. ' ok' → logprob: -4.341024875640869
    5. 'fin' → logprob: -5.091024875640869
    6. 'l' → logprob: -5.466024875640869
    7. 'mi' → logprob: -6.091024875640869
    8. ' mid' → logprob: -6.341024875640869
    9. 'condition' → logprob: -6.966024875640869
    10. 'continue' → logprob: -6.966024875640869

Token 1051: 'ure' (ID: 627)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10886351764202118
    2. 'ure' → logprob: -2.858863592147827
    3. ')' → logprob: -3.733863592147827
    4. ' mid' → logprob: -5.108863353729248
    5. 'p' → logprob: -5.858863353729248
    6. 'r' → logprob: -5.983863353729248
    7. 'pe' → logprob: -6.608863353729248
    8. 'mid' → logprob: -6.733863353729248
    9. 't' → logprob: -6.858863353729248
    10. '   ' → logprob: -7.233863353729248

Token 1052: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19350577890872955
    2. '       ' → logprob: -3.0685057640075684
    3. '):' → logprob: -3.3185057640075684
    4. ':' → logprob: -3.3185057640075684
    5. '<|end|>' → logprob: -3.4435057640075684
    6. ' )' → logprob: -4.568505764007568
    7. '   ' → logprob: -5.443505764007568
    8. '    ' → logprob: -6.193505764007568
    9. ' :' → logprob: -6.318505764007568
    10. ' ' → logprob: -6.568505764007568

Token 1053: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3076005280017853
    2. '<|end|>' → logprob: -1.932600498199463
    3. '	' → logprob: -3.182600498199463
    4. ' ' → logprob: -3.807600498199463
    5. '        ' → logprob: -3.932600498199463
    6. '   ' → logprob: -4.682600498199463
    7. '    ' → logprob: -5.182600498199463
    8. '		' → logprob: -5.932600498199463
    9. ' ' → logprob: -5.932600498199463
    10. ':' → logprob: -6.057600498199463

Token 1054: ' rr' (ID: 54129)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06518037617206573
    2. 'break' → logprob: -4.06518030166626
    3. '        ' → logprob: -4.19018030166626
    4. 'll' → logprob: -4.94018030166626
    5. '           ' → logprob: -5.44018030166626
    6. '    ' → logprob: -5.56518030166626
    7. ' break' → logprob: -5.69018030166626
    8. ' ll' → logprob: -5.81518030166626
    9. '   ' → logprob: -6.31518030166626
    10. 'pass' → logprob: -6.81518030166626

Token 1055: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34869664907455444
    2. ' =' → logprob: -1.2236967086791992
    3. 'else' → logprob: -9.4736967086792
    4. '       ' → logprob: -9.5986967086792
    5. '   ' → logprob: -10.3486967086792
    6. '           ' → logprob: -10.5986967086792
    7. ' else' → logprob: -11.3486967086792
    8. '=
' → logprob: -11.7236967086792
    9. ' =
' → logprob: -12.5986967086792
    10. '<|end|>' → logprob: -12.7236967086792

Token 1056: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.2521263360977173
    2. ' mid' → logprob: -1.5021263360977173
    3. 'll' → logprob: -9.002126693725586
    4. ' ll' → logprob: -10.752126693725586
    5. '[mid' → logprob: -11.127126693725586
    6. ' midpoint' → logprob: -11.502126693725586
    7. '(mid' → logprob: -12.127126693725586
    8. '_mid' → logprob: -13.002126693725586
    9. 'Mid' → logprob: -13.127126693725586
    10. '<|end|>' → logprob: -13.252126693725586

Token 1057: '
' (ID: 198)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6095560193061829
    2. '       ' → logprob: -0.9845560193061829
    3. 'else' → logprob: -2.734555959701538
    4. '<|end|>' → logprob: -4.484556198120117
    5. '   ' → logprob: -5.734556198120117
    6. '<|end|>' → logprob: -6.984556198120117
    7. '	else' → logprob: -7.234556198120117
    8. '	' → logprob: -7.859556198120117
    9. '    ' → logprob: -7.984556198120117
    10. '
' → logprob: -8.109556198120117

Token 1058: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4198538064956665
    2. ' else' → logprob: -1.2948538064956665
    3. 'else' → logprob: -2.794853687286377
    4. '<|end|>' → logprob: -5.544853687286377
    5. '   ' → logprob: -6.169853687286377
    6. '	' → logprob: -7.044853687286377
    7. '	else' → logprob: -7.669853687286377
    8. '<|end|>' → logprob: -9.544854164123535
    9. '    ' → logprob: -9.794854164123535
    10. '
' → logprob: -10.044854164123535

Token 1059: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5541588664054871
    2. ' else' → logprob: -1.3041589260101318
    3. 'else' (adapté à ' else') → logprob: -2.054158926010132
    4. '   ' → logprob: -4.929158687591553
    5. ' ' → logprob: -5.054158687591553
    6. '<|end|>' → logprob: -5.054158687591553
    7. '    ' → logprob: -6.054158687591553
    8. ':' → logprob: -7.554158687591553
    9. '           ' → logprob: -8.179159164428711
    10. '        ' → logprob: -8.304159164428711

Token 1060: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09338685870170593
    2. ':' → logprob: -2.4683868885040283
    3. ' :' → logprob: -6.968386650085449
    4. ' ' → logprob: -7.218386650085449
    5. '	' → logprob: -7.343386650085449
    6. ' ll' → logprob: -8.09338665008545
    7. ':
' → logprob: -8.34338665008545
    8. ' ' → logprob: -8.34338665008545
    9. '   ' → logprob: -8.46838665008545
    10. '<|end|>' → logprob: -8.46838665008545

Token 1061: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2564428150653839
    2. '	' → logprob: -2.3814427852630615
    3. ' ' → logprob: -3.0064427852630615
    4. ' ' → logprob: -3.5064427852630615
    5. '		' → logprob: -4.381443023681641
    6. ' ll' → logprob: -4.506443023681641
    7. '        ' → logprob: -4.756443023681641
    8. ' 	' → logprob: -5.131443023681641
    9. '           ' → logprob: -6.006443023681641
    10. '   ' → logprob: -6.631443023681641

Token 1062: ' ll' (ID: 11475)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' (adapté à ' ll') → logprob: -0.003042004769667983
    2. ' ll' → logprob: -5.878042221069336
    3. '       ' → logprob: -9.003042221069336
    4. '	ll' → logprob: -9.503042221069336
    5. '           ' → logprob: -10.878042221069336
    6. '   ' → logprob: -11.878042221069336
    7. ' ' → logprob: -13.503042221069336
    8. '    ' → logprob: -13.628042221069336
    9. 'lll' → logprob: -13.628042221069336
    10. ',ll' → logprob: -13.628042221069336

Token 1063: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055515140295028687
    2. '=' → logprob: -2.9305150508880615
    3. ' +=' → logprob: -7.430515289306641
    4. '+=' → logprob: -10.43051528930664
    5. '+' → logprob: -11.80551528930664
    6. ' ' → logprob: -13.93051528930664
    7. ' +' → logprob: -14.18051528930664
    8. '<|end|>' → logprob: -15.18051528930664
    9. '        ' → logprob: -15.43051528930664
    10. '		' → logprob: -16.05551528930664

Token 1064: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.07889242470264435
    2. 'mid' → logprob: -2.578892469406128
    3. '(mid' → logprob: -14.078892707824707
    4. '[mid' → logprob: -14.578892707824707
    5. ' midpoint' → logprob: -14.578892707824707
    6. ' ll' → logprob: -15.453892707824707
    7. ' ' → logprob: -15.578892707824707
    8. '_mid' → logprob: -15.828892707824707
    9. ' ' → logprob: -16.32889175415039
    10. 'm' → logprob: -17.07889175415039

Token 1065: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13732792437076569
    2. ' +' → logprob: -2.6373279094696045
    3. '<|end|>' → logprob: -2.8873279094696045
    4. ' ' → logprob: -7.762328147888184
    5. '<|end|>' → logprob: -8.137328147888184
    6. '       ' → logprob: -9.137328147888184
    7. '
' → logprob: -9.762328147888184
    8. '+
' → logprob: -10.387328147888184
    9. '        ' → logprob: -10.887328147888184
    10. '	' → logprob: -11.012328147888184

Token 1066: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043126524542458355
    2. ' ' → logprob: -7.750431060791016
    3. '```' → logprob: -14.875431060791016
    4. '   ' → logprob: -16.375431060791016
    5. '0' → logprob: -16.500431060791016
    6. ')' → logprob: -17.500431060791016
    7. '<|end|>' → logprob: -17.875431060791016
    8. '`' → logprob: -18.062931060791016
    9. ' ' → logprob: -18.312931060791016
    10. '2' → logprob: -18.625431060791016

Token 1067: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -15.625005722045898
    4. '   ' → logprob: -17.0000057220459
    5. '0' → logprob: -18.6875057220459
    6. '  ' → logprob: -18.8125057220459
    7. '' → logprob: -19.1875057220459
    8. '`' → logprob: -19.3750057220459
    9. '
' → logprob: -19.5625057220459
    10. '2' → logprob: -19.8750057220459

Token 1068: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1069: '"""

' (ID: 34508)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1070: '#' (ID: 2)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16973978281021118
    2. '        ' → logprob: -2.6697397232055664
    3. '<|end|>' → logprob: -3.1697397232055664
    4. ' ' → logprob: -4.044739723205566
    5. '   ' → logprob: -4.669739723205566
    6. ':' → logprob: -5.044739723205566
    7. '    ' → logprob: -5.669739723205566
    8. '#' → logprob: -6.544739723205566
    9. ' pass' → logprob: -7.044739723205566
    10. '	' → logprob: -7.169739723205566

Token 1071: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2128634452819824
    2. '<|end|>' → logprob: -1.2128634452819824
    3. ' ' → logprob: -1.4628634452819824
    4. '#' → logprob: -2.7128634452819824
    5. ' pass' → logprob: -2.9628634452819824
    6. '    ' → logprob: -3.8378634452819824
    7. '       ' → logprob: -4.837863445281982
    8. ' #' → logprob: -5.587863445281982
    9. 'pass' → logprob: -5.587863445281982
    10. '  ' → logprob: -5.712863445281982

Token 1072: ' un' (ID: 537)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.26531368494033813
    2. '()' → logprob: -2.7653136253356934
    3. 'x' → logprob: -2.7653136253356934
    4. 'a' → logprob: -3.2653136253356934
    5. '=' → logprob: -3.7653136253356934
    6. ' =' → logprob: -4.140313625335693
    7. 'N' → logprob: -4.640313625335693
    8. 'def' → logprob: -5.265313625335693
    9. 't' → logprob: -5.390313625335693
    10. 'q' → logprob: -6.140313625335693

Token 1073: ' entier' (ID: 80473)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6345381140708923
    2. ' =' → logprob: -1.259538173675537
    3. '=int' → logprob: -1.759538173675537
    4. '=[]' → logprob: -5.759538173675537
    5. 'n' → logprob: -6.009538173675537
    6. '()' → logprob: -6.384538173675537
    7. 'def' → logprob: -7.259538173675537
    8. '<|end|>' → logprob: -7.384538173675537
    9. 'int' → logprob: -7.509538173675537
    10. 's' → logprob: -7.509538173675537

Token 1074: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11370270699262619
    2. 'N' → logprob: -2.2387027740478516
    3. 'a' → logprob: -7.988702774047852
    4. 't' → logprob: -8.363702774047852
    5. '=' → logprob: -8.988702774047852
    6. 'x' → logprob: -9.863702774047852
    7. ' =' → logprob: -10.238702774047852
    8. 'q' → logprob: -10.738702774047852
    9. 'A' → logprob: -10.988702774047852
    10. 'T' → logprob: -11.613702774047852

Token 1075: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16867969930171967
    2. 'N' → logprob: -1.9186797142028809
    3. 'x' → logprob: -5.668679714202881
    4. 't' → logprob: -6.168679714202881
    5. 'q' → logprob: -7.043679714202881
    6. 'Q' → logprob: -7.168679714202881
    7. 'a' → logprob: -7.793679714202881
    8. 'T' → logprob: -7.918679714202881
    9. 'k' → logprob: -8.668679237365723
    10. 'X' → logprob: -9.793679237365723

Token 1076: ''' (ID: 6)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.044490985572338104
    2. ' =' → logprob: -3.9194910526275635
    3. '()' → logprob: -4.544490814208984
    4. ')' → logprob: -5.169490814208984
    5. '=n' → logprob: -5.294490814208984
    6. '=int' → logprob: -6.794490814208984
    7. 'n' → logprob: -6.919490814208984
    8. '=input' → logprob: -10.294490814208984
    9. ')n' → logprob: -10.419490814208984
    10. '=
' → logprob: -10.544490814208984

Token 1077: ' depuis' (ID: 16277)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02341446280479431
    2. '=' → logprob: -3.773414373397827
    3. '=n' → logprob: -9.023414611816406
    4. ' =' → logprob: -10.023414611816406
    5. '=
' → logprob: -13.148414611816406
    6. '
' → logprob: -13.273414611816406
    7. ' n' → logprob: -15.273414611816406
    8. '(n' → logprob: -17.023414611816406
    9. '```' → logprob: -17.148414611816406
    10. ':' → logprob: -17.648414611816406

Token 1078: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5258148312568665
    2. 'on' → logprob: -0.9008148312568665
    3. ' input' → logprob: -6.525815010070801
    4. 'l' → logprob: -7.525815010070801
    5. 'stdin' → logprob: -7.650815010070801
    6. ' on' → logprob: -9.6508150100708
    7. 'sys' → logprob: -10.0258150100708
    8. 'n' → logprob: -10.9008150100708
    9. 'entrée' → logprob: -11.2758150100708
    10. 'la' → logprob: -11.7758150100708

Token 1079: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023184556514024734
    2. 'on' → logprob: -4.523184776306152
    3. 'stdin' → logprob: -5.023184776306152
    4. '=input' → logprob: -5.898184776306152
    5. 'a' → logprob: -8.148184776306152
    6. '#' → logprob: -8.273184776306152
    7. '(stdin' → logprob: -8.273184776306152
    8. '()' → logprob: -8.273184776306152
    9. '(input' → logprob: -8.398184776306152
    10. 'n' → logprob: -8.523184776306152

Token 1080: ' standard' (ID: 7024)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.1928003813372925e-05
    2. '=' → logprob: -10.000051498413086
    3. ' =' → logprob: -12.500051498413086
    4. '
' → logprob: -13.250051498413086
    5. '=n' → logprob: -14.000051498413086
    6. ' n' → logprob: -16.875051498413086
    7. '=
' → logprob: -18.000051498413086
    8. '```' → logprob: -18.125051498413086
    9. ':' → logprob: -18.500051498413086
    10. '_n' → logprob: -19.375051498413086

Token 1081: ' ;' (ID: 4605)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.2200749754119897e-06
    2. '
' → logprob: -13.125001907348633
    3. ' n' → logprob: -16.500001907348633
    4. ' =' → logprob: -18.750001907348633
    5. '=' → logprob: -19.125001907348633
    6. '```' → logprob: -19.500001907348633
    7. '

' → logprob: -19.625001907348633
    8. '  
' → logprob: -20.875001907348633
    9. '	n' → logprob: -20.875001907348633
    10. '=n' → logprob: -20.875001907348633

Token 1082: ' cela' (ID: 17542)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.512236498361744e-07
    2. '
' → logprob: -14.875000953674316
    3. ' n' → logprob: -16.5
    4. '	n' → logprob: -20.125
    5. '```' → logprob: -20.5
    6. '

' → logprob: -20.625
    7. ')n' → logprob: -20.75
    8. '
' → logprob: -21.0
    9. '﻿' → logprob: -21.125
    10. '#' → logprob: -21.375

Token 1083: ' sert' (ID: 52405)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00180024653673172
    2. ' =' → logprob: -6.751800060272217
    3. 'n' → logprob: -7.876800060272217
    4. '=n' → logprob: -8.376800537109375
    5. '=
' → logprob: -11.376800537109375
    6. '=#' → logprob: -12.876800537109375
    7. '=int' → logprob: -13.001800537109375
    8. '=

' → logprob: -14.376800537109375
    9. '.' → logprob: -14.501800537109375
    10. '=[]' → logprob: -14.751800537109375

Token 1084: ' généralement' (ID: 67075)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8456588387489319
    2. '=' → logprob: -1.220658779144287
    3. 'n' → logprob: -1.345658779144287
    4. ' =' → logprob: -4.345658779144287
    5. '(' → logprob: -7.345658779144287
    6. '=n' → logprob: -7.470658779144287
    7. '(n' → logprob: -7.970658779144287
    8. ')' → logprob: -8.095659255981445
    9. 'pour' → logprob: -9.470659255981445
    10. 'a' → logprob: -9.720659255981445

Token 1085: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34382832050323486
    2. 'n' → logprob: -1.7188283205032349
    3. '()' → logprob: -2.3438282012939453
    4. ' =' → logprob: -4.843828201293945
    5. '(n' → logprob: -5.968828201293945
    6. '=n' → logprob: -5.968828201293945
    7. '(' → logprob: -6.218828201293945
    8. 'for' → logprob: -7.843828201293945
    9. '=int' → logprob: -9.843828201293945
    10. 'def' → logprob: -10.218828201293945

Token 1086: ' borne' (ID: 111819)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0025012213736772537
    2. 'on' → logprob: -7.002501010894775
    3. 't' → logprob: -7.252501010894775
    4. 'nombre' → logprob: -7.377501010894775
    5. '#' → logprob: -9.377501487731934
    6. 'N' → logprob: -9.877501487731934
    7. 'tail' → logprob: -10.377501487731934
    8. ' n' → logprob: -10.502501487731934
    9. 'int' → logprob: -10.877501487731934
    10. 'nb' → logprob: -11.752501487731934

Token 1087: ' supérieure' (ID: 106336)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14568795263767242
    2. 'n' → logprob: -2.020688056945801
    3. '=n' → logprob: -6.270688056945801
    4. ' =' → logprob: -6.895688056945801
    5. '(n' → logprob: -9.5206880569458
    6. '=
' → logprob: -10.7706880569458
    7. '()' → logprob: -13.3956880569458
    8. '(' → logprob: -13.6456880569458
    9. '=int' → logprob: -13.6456880569458
    10. ':' → logprob: -14.0206880569458

Token 1088: ' ou' (ID: 2031)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08274787664413452
    2. 'n' → logprob: -2.5827479362487793
    3. '=n' → logprob: -5.957747936248779
    4. ' =' → logprob: -6.707747936248779
    5. '=
' → logprob: -10.207747459411621
    6. '(n' → logprob: -12.332747459411621
    7. '=int' → logprob: -14.707747459411621
    8. '
' → logprob: -14.707747459411621
    9. ' n' → logprob: -14.957747459411621
    10. '=

' → logprob: -15.707747459411621

Token 1089: ' de' (ID: 334)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1020389199256897
    2. 'point' → logprob: -3.852038860321045
    3. 'une' → logprob: -4.352038860321045
    4. 'n' → logprob: -4.602038860321045
    5. 'd' → logprob: -4.852038860321045
    6. 'un' → logprob: -4.852038860321045
    7. 'lim' → logprob: -4.977038860321045
    8. 'de' → logprob: -5.102038860321045
    9. 'tail' → logprob: -5.102038860321045
    10. 'pl' → logprob: -5.102038860321045

Token 1090: ' quantité' (ID: 89219)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.8473411202430725
    2. 'tail' → logprob: -1.3473410606384277
    3. 'n' → logprob: -1.7223410606384277
    4. 'point' → logprob: -2.9723410606384277
    5. 'val' → logprob: -4.097341060638428
    6. '#' → logprob: -4.222341060638428
    7. 'nombre' → logprob: -4.222341060638428
    8. 't' → logprob: -4.722341060638428
    9. 'indice' → logprob: -4.847341060638428
    10. 'x' → logprob: -6.222341060638428

Token 1091: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25380879640579224
    2. '=' → logprob: -1.5038087368011475
    3. ' =' → logprob: -6.878808975219727
    4. '=n' → logprob: -7.128808975219727
    5. '=
' → logprob: -10.378808975219727
    6. '
' → logprob: -12.128808975219727
    7. '(n' → logprob: -12.253808975219727
    8. ' n' → logprob: -13.128808975219727
    9. ')n' → logprob: -14.878808975219727
    10. '<|end|>' → logprob: -15.378808975219727

Token 1092: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -15.875
    3. '```' → logprob: -16.375
    4. ' n' → logprob: -16.875
    5. '`' → logprob: -20.5
    6. '	n' → logprob: -20.875
    7. '﻿' → logprob: -21.0
    8. ')n' → logprob: -21.25
    9. '#' → logprob: -21.5
    10. '``' → logprob: -21.75

Token 1093: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815415732562542
    2. ' =' → logprob: -4.018154144287109
    3. '=n' → logprob: -12.76815414428711
    4. '=int' → logprob: -14.01815414428711
    5. '=
' → logprob: -15.01815414428711
    6. '=input' → logprob: -15.76815414428711
    7. ',' → logprob: -16.14315414428711
    8. ' =
' → logprob: -17.14315414428711
    9. '=

' → logprob: -17.14315414428711
    10. ';' → logprob: -17.39315414428711

Token 1094: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.007656677160412073
    2. ' on' → logprob: -4.882656574249268
    3. 'int' → logprob: -10.007657051086426
    4. '	on' → logprob: -13.007657051086426
    5. ' int' → logprob: -13.882657051086426
    6. ' ' → logprob: -14.382657051086426
    7. 'ont' → logprob: -15.007657051086426
    8. 'one' → logprob: -16.00765609741211
    9. '​' → logprob: -16.07015609741211
    10. ' ' → logprob: -16.25765609741211

Token 1095: 'em' (ID: 347)
  Prédit: 'em'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'em' → logprob: -3.03521392197581e-05
    2. 'm' → logprob: -10.500030517578125
    3. '```' → logprob: -14.375030517578125
    4. 'en' → logprob: -14.750030517578125
    5. 'om' → logprob: -15.000030517578125
    6. 'e' → logprob: -15.000030517578125
    7. 'ем' → logprob: -15.250030517578125
    8. 'n' → logprob: -15.375030517578125
    9. 'emq' → logprob: -15.500030517578125
    10. 'on' → logprob: -15.875030517578125

Token 1096: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31710028648376465
    2. '<|end|>' → logprob: -1.9421002864837646
    3. '(n' → logprob: -3.3171002864837646
    4. ')' → logprob: -3.5671002864837646
    5. 'n' → logprob: -3.5671002864837646
    6. '
' → logprob: -4.192100524902344
    7. 'a' → logprob: -5.317100524902344
    8. '#' → logprob: -5.692100524902344
    9. '(' → logprob: -6.067100524902344
    10. '()
' → logprob: -6.192100524902344

Token 1097: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0431458055973053
    2. 'x' → logprob: -3.2931458950042725
    3. 'arr' → logprob: -6.168145656585693
    4. 'data' → logprob: -7.043145656585693
    5. 'A' → logprob: -7.293145656585693
    6. 'lst' → logprob: -7.918145656585693
    7. '#' → logprob: -8.168146133422852
    8. 's' → logprob: -8.293146133422852
    9. 'l' → logprob: -8.668146133422852
    10. 'd' → logprob: -8.793146133422852

Token 1098: ' Lit' (ID: 45595)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03531669080257416
    2. 'arr' → logprob: -4.160316467285156
    3. 'x' → logprob: -4.660316467285156
    4. 'lst' → logprob: -5.660316467285156
    5. 'data' → logprob: -5.910316467285156
    6. 'A' → logprob: -6.285316467285156
    7. 'l' → logprob: -7.410316467285156
    8. 'd' → logprob: -8.410316467285156
    9. 's' → logprob: -8.660316467285156
    10. 'v' → logprob: -8.785316467285156

Token 1099: ' un' (ID: 537)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07507842779159546
    2. 'a' → logprob: -3.2000784873962402
    3. 's' → logprob: -4.82507848739624
    4. 'x' → logprob: -4.95007848739624
    5. 'm' → logprob: -5.32507848739624
    6. '()' → logprob: -5.82507848739624
    7. 'n' → logprob: -6.07507848739624
    8. 'lst' → logprob: -6.45007848739624
    9. '(a' → logprob: -7.07507848739624
    10. 'la' → logprob: -7.07507848739624

Token 1100: ' entier' (ID: 80473)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0414700508117676
    2. '()' → logprob: -1.5414700508117676
    3. 'l' → logprob: -1.7914700508117676
    4. '=' → logprob: -1.7914700508117676
    5. ' =' → logprob: -3.7914700508117676
    6. 's' → logprob: -4.166470050811768
    7. 'a' → logprob: -4.291470050811768
    8. 'liste' → logprob: -4.291470050811768
    9. 'list' → logprob: -4.666470050811768
    10. 'lst' → logprob: -4.791470050811768

Token 1101: ' '' (ID: 461)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0157344341278076
    2. '(n' → logprob: -1.3907344341278076
    3. '('' → logprob: -2.3907344341278076
    4. 'a' → logprob: -2.5157344341278076
    5. '(' → logprob: -2.7657344341278076
    6. 'n' → logprob: -3.6407344341278076
    7. '(k' → logprob: -3.6407344341278076
    8. 't' → logprob: -4.015734672546387
    9. '()' → logprob: -4.140734672546387
    10. 'm' → logprob: -4.265734672546387

Token 1102: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5352157950401306
    2. 'm' → logprob: -1.1602158546447754
    3. 'x' → logprob: -2.7852158546447754
    4. 'q' → logprob: -4.535215854644775
    5. 't' → logprob: -5.035215854644775
    6. 'a' → logprob: -5.035215854644775
    7. 'n' → logprob: -5.410215854644775
    8. 'p' → logprob: -6.410215854644775
    9. 'l' → logprob: -6.410215854644775
    10. 's' → logprob: -6.535215854644775

Token 1103: '',' (ID: 787)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36514943838119507
    2. ' =' → logprob: -1.6151494979858398
    3. '()' → logprob: -2.24014949798584
    4. ')' → logprob: -8.74014949798584
    5. '=k' → logprob: -8.74014949798584
    6. '=n' → logprob: -8.86514949798584
    7. 'n' → logprob: -10.11514949798584
    8. 'k' → logprob: -10.49014949798584
    9. ',' → logprob: -11.36514949798584
    10. '()
' → logprob: -11.36514949798584

Token 1104: ' valeur' (ID: 41664)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0382208414375782
    2. ' k' → logprob: -3.2882208824157715
    3. ' =' → logprob: -9.038220405578613
    4. '=' → logprob: -10.538220405578613
    5. ' on' → logprob: -11.288220405578613
    6. '=k' → logprob: -11.663220405578613
    7. 'on' → logprob: -11.913220405578613
    8. 'n' → logprob: -13.038220405578613
    9. 'm' → logprob: -13.663220405578613
    10. ' ' → logprob: -14.038220405578613

Token 1105: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001961224712431431
    2. ' =' → logprob: -6.2519612312316895
    3. '=k' → logprob: -10.876960754394531
    4. '=n' → logprob: -11.376960754394531
    5. 'k' → logprob: -13.751960754394531
    6. 'n' → logprob: -14.376960754394531
    7. ',' → logprob: -15.001960754394531
    8. '=int' → logprob: -16.00196075439453
    9. ',k' → logprob: -17.12696075439453
    10. '=
' → logprob: -17.75196075439453

Token 1106: ' référence' (ID: 76252)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.0006644221721217036
    2. ' on' → logprob: -7.500664234161377
    3. 'n' → logprob: -9.750664710998535
    4. 'l' → logprob: -10.375664710998535
    5. 'm' → logprob: -11.000664710998535
    6. 'k' → logprob: -13.250664710998535
    7. 'input' → logprob: -13.500664710998535
    8. ' n' → logprob: -14.625664710998535
    9. ' ' → logprob: -15.000664710998535
    10. '	on' → logprob: -15.500664710998535

Token 1107: ' ou' (ID: 2031)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03385084867477417
    2. ' =' → logprob: -3.408850908279419
    3. 'k' → logprob: -9.28385066986084
    4. '(' → logprob: -10.03385066986084
    5. '()' → logprob: -10.03385066986084
    6. '=k' → logprob: -10.90885066986084
    7. 'n' → logprob: -13.03385066986084
    8. '(k' → logprob: -13.90885066986084
    9. ',' → logprob: -14.40885066986084
    10. '=
' → logprob: -14.53385066986084

Token 1108: ' contr' (ID: 6030)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -1.1913542747497559
    2. 'on' → logprob: -1.9413542747497559
    3. 'lim' → logprob: -2.316354274749756
    4. 'val' → logprob: -2.691354274749756
    5. 'clé' → logprob: -2.941354274749756
    6. 'param' → logprob: -3.066354274749756
    7. 'threshold' → logprob: -3.316354274749756
    8. 'target' → logprob: -3.441354274749756
    9. 'm' → logprob: -3.691354274749756
    10. 'key' → logprob: -3.941354274749756

Token 1109: 'ainte' (ID: 48434)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46732813119888306
    2. 'act' → logprob: -1.8423280715942383
    3. 'ainte' → logprob: -2.5923280715942383
    4. ' =' → logprob: -2.8423280715942383
    5. 'aint' → logprob: -3.0923280715942383
    6. 'ra' → logprob: -4.467328071594238
    7. '=int' → logprob: -5.092328071594238
    8. 'ol' → logprob: -5.342328071594238
    9. 'tra' → logprob: -6.342328071594238
    10. 'ôle' → logprob: -6.342328071594238

Token 1110: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00048298496403731406
    2. ' =' → logprob: -7.75048303604126
    3. 'k' → logprob: -10.500482559204102
    4. '=k' → logprob: -10.625482559204102
    5. '=n' → logprob: -15.625482559204102
    6. 'n' → logprob: -16.1254825592041
    7. '=
' → logprob: -16.3754825592041
    8. '(k' → logprob: -16.7504825592041
    9. '()' → logprob: -18.1254825592041
    10. '(' → logprob: -18.5004825592041

Token 1111: ' le' (ID: 505)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.00275792577303946
    2. ' on' → logprob: -6.252758026123047
    3. 'm' → logprob: -7.627758026123047
    4. 'n' → logprob: -8.252758026123047
    5. 'l' → logprob: -9.877758026123047
    6. 'input' → logprob: -11.377758026123047
    7. 'k' → logprob: -12.627758026123047
    8. ' n' → logprob: -12.627758026123047
    9. ' m' → logprob: -12.877758026123047
    10. 's' → logprob: -13.627758026123047

Token 1112: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.2919294238090515
    2. 'proble' → logprob: -2.1669294834136963
    3. 'calcul' → logprob: -3.2919294834136963
    4. 'n' → logprob: -3.7919294834136963
    5. 'range' → logprob: -4.416929244995117
    6. 'k' → logprob: -4.541929244995117
    7. ' problème' → logprob: -4.541929244995117
    8. 'problem' → logprob: -4.666929244995117
    9. ' k' → logprob: -4.791929244995117
    10. 'jeu' → logprob: -5.666929244995117

Token 1113: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0023938443046063185
    2. ' =' → logprob: -6.37739372253418
    3. 'k' → logprob: -7.75239372253418
    4. '=k' → logprob: -8.25239372253418
    5. '=
' → logprob: -14.00239372253418
    6. '(k' → logprob: -16.25239372253418
    7. '=n' → logprob: -16.62739372253418
    8. ',k' → logprob: -17.37739372253418
    9. '()' → logprob: -17.37739372253418
    10. 'n' → logprob: -17.87739372253418

Token 1114: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0004430627159308642
    2. '=' → logprob: -7.750442981719971
    3. ' =' → logprob: -11.500443458557129
    4. '=k' → logprob: -13.250443458557129
    5. '
' → logprob: -15.375443458557129
    6. '=
' → logprob: -15.875443458557129
    7. ' k' → logprob: -16.125442504882812
    8. '_k' → logprob: -21.125442504882812
    9. '```' → logprob: -21.375442504882812
    10. 'n' → logprob: -21.625442504882812

Token 1115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009115827269852161
    2. ' =' → logprob: -7.000911712646484
    3. '=n' → logprob: -16.750911712646484
    4. '=k' → logprob: -17.000911712646484
    5. '＝' → logprob: -18.250911712646484
    6. '=int' → logprob: -19.500911712646484
    7. '=}' → logprob: -20.125911712646484
    8. '=

' → logprob: -20.500911712646484
    9. 'k' → logprob: -20.750911712646484
    10. '=
' → logprob: -20.875911712646484

Token 1116: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.0006271334132179618
    2. ' on' → logprob: -7.375627040863037
    3. '	on' → logprob: -15.000627517700195
    4. 'n' → logprob: -16.375627517700195
    5. 'int' → logprob: -16.625627517700195
    6. ' ' → logprob: -18.125627517700195
    7. 'ont' → logprob: -18.375627517700195
    8. '(on' → logprob: -19.000627517700195
    9. '  ' → logprob: -19.125627517700195
    10. '   ' → logprob: -19.250627517700195

Token 1117: 'em' (ID: 347)
  Prédit: 'em'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'em' → logprob: -4.3464544432936236e-05
    2. 'm' → logprob: -10.125043869018555
    3. 'om' → logprob: -14.000043869018555
    4. 'ем' → logprob: -14.375043869018555
    5. 'um' → logprob: -15.000043869018555
    6. 'e' → logprob: -15.125043869018555
    7. '()' → logprob: -15.625043869018555
    8. '(em' → logprob: -15.750043869018555
    9. 'am' → logprob: -15.875043869018555
    10. '```' → logprob: -16.000043869018555

Token 1118: '()

' (ID: 5874)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4589024782180786
    2. '<|end|>' → logprob: -1.4589024782180786
    3. '
' → logprob: -3.083902359008789
    4. '#' → logprob: -3.833902359008789
    5. 'data' → logprob: -4.208902359008789
    6. ')' → logprob: -4.833902359008789
    7. 'n' → logprob: -4.833902359008789
    8. 'arr' → logprob: -5.208902359008789
    9. 'x' → logprob: -5.208902359008789
    10. 'def' → logprob: -5.333902359008789

Token 1119: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07356695830821991
    2. 'arr' → logprob: -2.9485669136047363
    3. 'x' → logprob: -5.073566913604736
    4. 'A' → logprob: -5.573566913604736
    5. 'data' → logprob: -5.698566913604736
    6. 'lst' → logprob: -6.198566913604736
    7. 's' → logprob: -6.698566913604736
    8. 'l' → logprob: -7.698566913604736
    9. 'd' → logprob: -8.323567390441895
    10. 'h' → logprob: -8.573567390441895

Token 1120: ' Convert' (ID: 15629)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11539139598608017
    2. 'arr' → logprob: -2.365391492843628
    3. 'lst' → logprob: -5.240391254425049
    4. 'data' → logprob: -5.490391254425049
    5. 'A' → logprob: -5.615391254425049
    6. 'x' → logprob: -7.240391254425049
    7. 'l' → logprob: -8.240391731262207
    8. 'v' → logprob: -8.365391731262207
    9. 'dp' → logprob: -9.240391731262207
    10. 'd' → logprob: -9.240391731262207

Token 1121: 'it' (ID: 278)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3781840801239014
    2. 'vert' → logprob: -1.7531840801239014
    3. 'verted' → logprob: -2.0031840801239014
    4. 't' → logprob: -2.3781840801239014
    5. 'firm' → logprob: -2.3781840801239014
    6. 'st' → logprob: -2.5031840801239014
    7. 'version' → logprob: -2.6281840801239014
    8. 'v' → logprob: -3.3781840801239014
    9. 'tin' → logprob: -4.3781843185424805
    10. 'verts' → logprob: -4.5031843185424805

Token 1122: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.22175723314285278
    2. 'm' → logprob: -1.971757173538208
    3. 'n' → logprob: -3.721757173538208
    4. 's' → logprob: -4.096757411956787
    5. 'k' → logprob: -5.096757411956787
    6. 'list' → logprob: -5.471757411956787
    7. 'input' → logprob: -5.721757411956787
    8. 'a' → logprob: -6.596757411956787
    9. 'cl' → logprob: -7.096757411956787
    10. '[]' → logprob: -8.221756935119629

Token 1123: ''ent' (ID: 53422)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2246673107147217
    2. 'n' → logprob: -1.8496673107147217
    3. 'input' → logprob: -2.2246673107147217
    4. '=input' → logprob: -2.5996673107147217
    5. '=' → logprob: -2.8496673107147217
    6. '(input' → logprob: -2.9746673107147217
    7. 's' → logprob: -3.0996673107147217
    8. 'on' → logprob: -3.4746673107147217
    9. ' =' → logprob: -3.4746673107147217
    10. 'a' → logprob: -3.7246673107147217

Token 1124: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.03146149963140488
    2. 'ire' → logprob: -4.281461715698242
    3. 'er' → logprob: -5.156461715698242
    4. 're' → logprob: -5.656461715698242
    5. 'rée' → logprob: -6.531461715698242
    6. 'ree' → logprob: -6.656461715698242
    7. 'r' → logprob: -6.781461715698242
    8. 'ière' → logprob: -6.781461715698242
    9. 'iers' → logprob: -6.906461715698242
    10. 'ered' → logprob: -8.031461715698242

Token 1125: ' '' (ID: 461)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.49255961179733276
    2. 'n' → logprob: -1.4925596714019775
    3. '(k' → logprob: -2.8675596714019775
    4. 'en' → logprob: -3.1175596714019775
    5. '(n' → logprob: -3.7425596714019775
    6. 'input' → logprob: -4.867559432983398
    7. 'to' → logprob: -4.867559432983398
    8. 's' → logprob: -5.367559432983398
    9. 'into' → logprob: -6.242559432983398
    10. '(input' → logprob: -6.492559432983398

Token 1126: 'n' (ID: 77)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.048931606113910675
    2. 'n' → logprob: -3.54893159866333
    3. 'input' → logprob: -4.04893159866333
    4. 'on' → logprob: -7.54893159866333
    5. 'str' → logprob: -7.54893159866333
    6. '(k' → logprob: -8.798932075500488
    7. '(input' → logprob: -9.048932075500488
    8. 'sys' → logprob: -9.548932075500488
    9. '(n' → logprob: -10.048932075500488
    10. ' k' → logprob: -11.048932075500488

Token 1127: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.5158956050872803
    2. '=' → logprob: -2.1408956050872803
    3. ',' → logprob: -2.3908956050872803
    4. 'str' → logprob: -2.3908956050872803
    5. 'to' → logprob: -2.5158956050872803
    6. ' en' → logprob: -2.7658956050872803
    7. '**' → logprob: -3.0158956050872803
    8. ' to' → logprob: -3.2658956050872803
    9. ' into' → logprob: -3.3908956050872803
    10. '=str' → logprob: -3.8908956050872803

Token 1128: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09792588651180267
    2. '+=' → logprob: -3.597925901412964
    3. '=str' → logprob: -4.097925662994385
    4. '-=' → logprob: -4.222925662994385
    5. 'str' → logprob: -4.972925662994385
    6. 'to' → logprob: -5.097925662994385
    7. ' =' → logprob: -5.222925662994385
    8. '**' → logprob: -5.222925662994385
    9. 'into' → logprob: -5.722925662994385
    10. '=int' → logprob: -6.472925662994385

Token 1129: ' chaîne' (ID: 89288)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.12008069455623627
    2. 'bin' → logprob: -2.3700807094573975
    3. 'list' → logprob: -3.9950807094573975
    4. 'b' → logprob: -8.120080947875977
    5. 's' → logprob: -8.620080947875977
    6. 'bs' → logprob: -8.745080947875977
    7. 'l' → logprob: -9.120080947875977
    8. 'k' → logprob: -9.245080947875977
    9. 'int' → logprob: -9.370080947875977
    10. 'n' → logprob: -9.370080947875977

Token 1130: ' de' (ID: 334)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.019825609400868416
    2. 's' → logprob: -4.769825458526611
    3. 'n' → logprob: -5.394825458526611
    4. '=' → logprob: -5.769825458526611
    5. ' =' → logprob: -6.269825458526611
    6. '=str' → logprob: -6.644825458526611
    7. '(str' → logprob: -8.51982593536377
    8. '(n' → logprob: -10.89482593536377
    9. 'bin' → logprob: -11.51982593536377
    10. ')' → logprob: -11.51982593536377

Token 1131: ' caractères' (ID: 183106)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.004600415471941233
    2. 'bin' → logprob: -5.754600524902344
    3. 'car' → logprob: -7.504600524902344
    4. 'chars' → logprob: -8.629600524902344
    5. 'string' → logprob: -8.879600524902344
    6. 'b' → logprob: -8.879600524902344
    7. 'bits' → logprob: -9.004600524902344
    8. ' str' → logprob: -9.504600524902344
    9. 's' → logprob: -9.629600524902344
    10. 'binary' → logprob: -10.379600524902344

Token 1132: ' pour' (ID: 1930)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3021300435066223
    2. 'str' → logprob: -1.5521299839019775
    3. 'N' → logprob: -3.9271299839019775
    4. 'sn' → logprob: -4.427130222320557
    5. 'n' → logprob: -4.552130222320557
    6. 'a' → logprob: -5.552130222320557
    7. 'ns' → logprob: -7.302130222320557
    8. 'x' → logprob: -7.552130222320557
    9. 'st' → logprob: -7.802130222320557
    10. 't' → logprob: -8.052129745483398

Token 1133: ' pouvoir' (ID: 27197)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.008273892104625702
    2. ' str' → logprob: -5.258274078369141
    3. 's' → logprob: -6.133274078369141
    4. '_' → logprob: -7.758274078369141
    5. 'input' → logprob: -8.38327407836914
    6. 'n' → logprob: -9.63327407836914
    7. 'list' → logprob: -10.00827407836914
    8. 'l' → logprob: -10.25827407836914
    9. 'x' → logprob: -12.00827407836914
    10. ' input' → logprob: -12.00827407836914

Token 1134: ' accéder' (ID: 120555)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.1649806648492813
    2. 's' → logprob: -2.28998064994812
    3. '_' → logprob: -3.66498064994812
    4. 'n' → logprob: -4.414980888366699
    5. ' str' → logprob: -5.914980888366699
    6. 'list' → logprob: -6.289980888366699
    7. 'x' → logprob: -6.664980888366699
    8. 'a' → logprob: -6.789980888366699
    9. 'len' → logprob: -6.789980888366699
    10. 'iter' → logprob: -7.414980888366699

Token 1135: ' à' (ID: 1221)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.2923181354999542
    2. '(str' → logprob: -1.7923181056976318
    3. '(n' → logprob: -3.042318105697632
    4. 's' → logprob: -4.542318344116211
    5. 'n' → logprob: -4.667318344116211
    6. 'string' → logprob: -4.917318344116211
    7. '=str' → logprob: -6.292318344116211
    8. ' =' → logprob: -6.417318344116211
    9. 'a' → logprob: -6.667318344116211
    10. '(' → logprob: -6.667318344116211

Token 1136: ' chaque' (ID: 21194)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.010323172435164452
    2. 'list' → logprob: -5.1353230476379395
    3. 'input' → logprob: -6.0103230476379395
    4. 's' → logprob: -6.7603230476379395
    5. 'n' → logprob: -7.5103230476379395
    6. 'the' → logprob: -9.635323524475098
    7. ' str' → logprob: -9.635323524475098
    8. '[str' → logprob: -9.885323524475098
    9. 'string' → logprob: -11.260323524475098
    10. '`' → logprob: -12.010323524475098

Token 1137: ' chiffre' (ID: 107420)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.4644373059272766
    2. 'str' → logprob: -1.7144372463226318
    3. 'c' → logprob: -2.089437246322632
    4. 's' → logprob: -3.714437246322632
    5. 'd' → logprob: -3.839437246322632
    6. 'ch' → logprob: -4.839437484741211
    7. 'character' → logprob: -5.339437484741211
    8. 'char' → logprob: -5.839437484741211
    9. 'car' → logprob: -6.839437484741211
    10. 'i' → logprob: -7.214437484741211

Token 1138: ' individ' (ID: 3928)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03988169506192207
    2. 'N' → logprob: -4.039881706237793
    3. 'str' → logprob: -4.664881706237793
    4. 'n' → logprob: -5.289881706237793
    5. 'a' → logprob: -6.414881706237793
    6. 'sn' → logprob: -6.664881706237793
    7. 't' → logprob: -7.039881706237793
    8. 'c' → logprob: -7.539881706237793
    9. 'num' → logprob: -7.664881706237793
    10. 'S' → logprob: -7.664881706237793

Token 1139: 'uellement' (ID: 36026)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.46625393629074097
    2. 'ual' → logprob: -1.2162539958953857
    3. 'uel' → logprob: -3.8412539958953857
    4. 'er' → logprob: -4.091253757476807
    5. 'uellement' → logprob: -4.091253757476807
    6. 'éral' → logprob: -4.841253757476807
    7. 'éralement' → logprob: -5.716253757476807
    8. 'ué' → logprob: -6.466253757476807
    9. 'al' → logprob: -6.466253757476807
    10. 'ère' → logprob: -6.966253757476807

Token 1140: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.191484272480011
    2. 'N' → logprob: -2.316484212875366
    3. 'a' → logprob: -4.066484451293945
    4. 'sn' → logprob: -4.066484451293945
    5. 'n' → logprob: -4.316484451293945
    6. 'S' → logprob: -5.316484451293945
    7. 'str' → logprob: -5.316484451293945
    8. 'A' → logprob: -5.441484451293945
    9. 'x' → logprob: -5.566484451293945
    10. 'st' → logprob: -6.441484451293945

Token 1141: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3084290325641632
    2. 'N' → logprob: -2.183429002761841
    3. 'sn' → logprob: -3.183429002761841
    4. 'n' → logprob: -3.933429002761841
    5. 'a' → logprob: -3.933429002761841
    6. 'ns' → logprob: -4.30842924118042
    7. 'x' → logprob: -4.68342924118042
    8. 'str' → logprob: -4.80842924118042
    9. 'nn' → logprob: -4.80842924118042
    10. 'S' → logprob: -5.05842924118042

Token 1142: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0129680633544922
    2. 'tr' → logprob: -1.0129680633544922
    3. 's' → logprob: -2.012968063354492
    4. 'str' → logprob: -2.762968063354492
    5. '_n' → logprob: -3.512968063354492
    6. ' =' → logprob: -4.012968063354492
    7. '_str' → logprob: -4.512968063354492
    8. '(n' → logprob: -5.012968063354492
    9. '=' → logprob: -5.512968063354492
    10. '(str' → logprob: -6.387968063354492

Token 1143: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00018041854491457343
    2. ' str' → logprob: -8.7501802444458
    3. 'input' → logprob: -10.7501802444458
    4. 'list' → logprob: -15.2501802444458
    5. 's' → logprob: -16.625181198120117
    6. '(str' → logprob: -17.375181198120117
    7. 'string' → logprob: -18.125181198120117
    8. ' input' → logprob: -18.375181198120117
    9. '	str' → logprob: -19.250181198120117
    10. 'st' → logprob: -20.750181198120117

Token 1144: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00016396844875998795
    2. 'n' → logprob: -8.750164031982422
    3. '(' → logprob: -12.125164031982422
    4. ' (' → logprob: -17.500164031982422
    5. '(
' → logprob: -17.500164031982422
    6. ' n' → logprob: -17.875164031982422
    7. '	n' → logprob: -18.625164031982422
    8. '_n' → logprob: -20.125164031982422
    9. 'a' → logprob: -20.125164031982422
    10. ')n' → logprob: -20.375164031982422

Token 1145: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2603901015827432e-05
    2. ' )' → logprob: -11.000022888183594
    3. ')[' → logprob: -13.375022888183594
    4. ')#' → logprob: -14.375022888183594
    5. ')
' → logprob: -14.500022888183594
    6. '[' → logprob: -14.625022888183594
    7. '))' → logprob: -14.750022888183594
    8. ').' → logprob: -14.750022888183594
    9. ')`' → logprob: -15.000022888183594
    10. ')n' → logprob: -15.125022888183594

Token 1146: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0729379653930664
    2. 'dp' → logprob: -1.1979379653930664
    3. 'l' → logprob: -1.5729379653930664
    4. 'res' → logprob: -3.0729379653930664
    5. 'd' → logprob: -3.0729379653930664
    6. 'cnt' → logprob: -4.072937965393066
    7. 'c' → logprob: -5.197937965393066
    8. 'if' → logprob: -5.197937965393066
    9. 'a' → logprob: -5.822937965393066
    10. 'for' → logprob: -5.947937965393066

Token 1147: ' Cr' (ID: 5790)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.783449649810791
    2. 'ans' → logprob: -1.158449649810791
    3. 'l' → logprob: -2.158449649810791
    4. 'res' → logprob: -3.408449649810791
    5. 'd' → logprob: -3.658449649810791
    6. 'from' → logprob: -4.908449649810791
    7. 'if' → logprob: -5.033449649810791
    8. 'length' → logprob: -5.033449649810791
    9. 'cnt' → logprob: -5.158449649810791
    10. 'a' → logprob: -5.283449649810791

Token 1148: 'ée' (ID: 2894)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.4155927896499634
    2. 'ur' → logprob: -1.7905927896499634
    3. '#' → logprob: -2.290592670440674
    4. 's' → logprob: -2.665592670440674
    5. 'i' → logprob: -2.790592670440674
    6. 'nt' → logprob: -2.915592670440674
    7. '=' → logprob: -3.040592670440674
    8. 'u' → logprob: -3.290592670440674
    9. 'l' → logprob: -3.665592670440674
    10. 'e' → logprob: -3.915592670440674

Token 1149: ' une' (ID: 2463)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6144928336143494
    2. 'a' → logprob: -1.6144928932189941
    3. 'l' → logprob: -1.8644928932189941
    4. 'd' → logprob: -2.989492893218994
    5. 'ans' → logprob: -3.614492893218994
    6. 'c' → logprob: -4.864492893218994
    7. 'res' → logprob: -6.114492893218994
    8. 'ls' → logprob: -6.239492893218994
    9. 'arr' → logprob: -6.239492893218994
    10. 'li' → logprob: -6.239492893218994

Token 1150: ' table' (ID: 3293)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5152719616889954
    2. 'l' → logprob: -1.5152719020843506
    3. 'lst' → logprob: -3.2652719020843506
    4. 'd' → logprob: -3.3902719020843506
    5. 'li' → logprob: -3.5152719020843506
    6. 'a' → logprob: -4.14027214050293
    7. 'list' → logprob: -4.26527214050293
    8. 'liste' → logprob: -4.51527214050293
    9. 'cnt' → logprob: -4.64027214050293
    10. 'tmp' → logprob: -5.64027214050293

Token 1151: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08865128457546234
    2. ' =' → logprob: -2.713651180267334
    3. '=' → logprob: -4.338651180267334
    4. 'd' → logprob: -6.588651180267334
    5. 't' → logprob: -6.838651180267334
    6. '=[' → logprob: -7.588651180267334
    7. '=[]' → logprob: -7.588651180267334
    8. 'cnt' → logprob: -8.213651657104492
    9. '_dp' → logprob: -8.463651657104492
    10. ' dp' → logprob: -8.463651657104492

Token 1152: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22593770921230316
    2. '=' → logprob: -1.6009377241134644
    3. '=[' → logprob: -7.850937843322754
    4. 'dp' → logprob: -10.100937843322754
    5. '=[]' → logprob: -10.100937843322754
    6. '=[[' → logprob: -10.225937843322754
    7. '[' → logprob: -13.100937843322754
    8. ' =[' → logprob: -13.225937843322754
    9. '0' → logprob: -13.600937843322754
    10. '＝' → logprob: -13.725937843322754

Token 1153: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3875470459461212
    2. '=' → logprob: -1.1375470161437988
    3. '=[' → logprob: -7.512547016143799
    4. '=[[' → logprob: -9.637547492980957
    5. '=[]' → logprob: -10.387547492980957
    6. '[' → logprob: -12.012547492980957
    7. 's' → logprob: -12.387547492980957
    8. '0' → logprob: -12.387547492980957
    9. ',' → logprob: -12.512547492980957
    10. 'dp' → logprob: -12.637547492980957

Token 1154: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.48898428678512573
    2. '[n' → logprob: -1.4889843463897705
    3. '[[' → logprob: -1.9889843463897705
    4. '[k' → logprob: -4.363984107971191
    5. '[s' → logprob: -4.863984107971191
    6. '[len' → logprob: -5.863984107971191
    7. '[i' → logprob: -8.113984107971191
    8. '[-' → logprob: -8.488984107971191
    9. '[int' → logprob: -8.613984107971191
    10. '[l' → logprob: -9.738984107971191

Token 1155: ' cas' (ID: 2108)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.0589826107025146
    2. '[[' → logprob: -1.1839826107025146
    3. '[k' → logprob: -1.5589826107025146
    4. '[' → logprob: -2.1839826107025146
    5. '[len' → logprob: -4.433982849121094
    6. 'len' → logprob: -5.683982849121094
    7. '[int' → logprob: -6.183982849121094
    8. '[s' → logprob: -6.308982849121094
    9. 'k' → logprob: -6.433982849121094
    10. 'n' → logprob: -7.183982849121094

Token 1156: ' "' (ID: 392)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4748542010784149
    2. '=' → logprob: -1.8498542308807373
    3. '[' → logprob: -2.4748542308807373
    4. '=[' → logprob: -2.9748542308807373
    5. 'de' → logprob: -3.4748542308807373
    6. 'dp' → logprob: -4.849853992462158
    7. '[n' → logprob: -5.224853992462158
    8. 's' → logprob: -5.349853992462158
    9. ' de' → logprob: -5.974853992462158
    10. '[[' → logprob: -5.974853992462158

Token 1157: 'plus' (ID: 11601)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.570567786693573
    2. '[' → logprob: -1.4455678462982178
    3. 'False' → logprob: -2.5705678462982178
    4. '[n' → logprob: -2.8205678462982178
    5. '0' → logprob: -3.8205678462982178
    6. 'n' → logprob: -4.320567607879639
    7. ' [' → logprob: -5.445567607879639
    8. '[
' → logprob: -5.570567607879639
    9. '[s' → logprob: -5.695567607879639
    10. ' [[' → logprob: -5.820567607879639

Token 1158: ' petits' (ID: 38141)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33270901441574097
    2. '=' → logprob: -3.3327090740203857
    3. 'pet' → logprob: -3.4577090740203857
    4. 'large' → logprob: -4.082708835601807
    5. ' petit' → logprob: -4.082708835601807
    6. 'inf' → logprob: -4.082708835601807
    7. 'grand' → logprob: -4.082708835601807
    8. '_' → logprob: -4.832708835601807
    9. 'small' → logprob: -4.832708835601807
    10. '+' → logprob: -4.832708835601807

Token 1159: '"' (ID: 1)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16756273806095123
    2. '=[' → logprob: -2.41756272315979
    3. '=' → logprob: -3.04256272315979
    4. 'de' → logprob: -5.417562961578369
    5. 'et' → logprob: -5.542562961578369
    6. ']' → logprob: -6.417562961578369
    7. 'possible' → logprob: -6.667562961578369
    8. '=[[' → logprob: -6.792562961578369
    9. ',' → logprob: -7.417562961578369
    10. 'plus' → logprob: -7.917562961578369

Token 1160: ' que' (ID: 661)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6334242224693298
    2. '=' → logprob: -0.7584242224693298
    3. '=[' → logprob: -7.383424282073975
    4. '=[[' → logprob: -9.258423805236816
    5. ',' → logprob: -10.133423805236816
    6. ' =[' → logprob: -11.383423805236816
    7. '[' → logprob: -11.508423805236816
    8. 'et' → logprob: -11.633423805236816
    9. 'de' → logprob: -11.758423805236816
    10. '=[]' → logprob: -12.383423805236816

Token 1161: ' le' (ID: 505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6453127264976501
    2. 'len' → logprob: -1.520312786102295
    3. 'k' → logprob: -2.270312786102295
    4. '[' → logprob: -2.770312786102295
    5. 's' → logprob: -3.270312786102295
    6. '[len' → logprob: -4.145312786102295
    7. '[n' → logprob: -4.645312786102295
    8. '(len' → logprob: -5.395312786102295
    9. '(n' → logprob: -5.645312786102295
    10. '[s' → logprob: -5.770312786102295

Token 1162: ' pré' (ID: 9424)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.42248186469078064
    2. 's' → logprob: -1.672481894493103
    3. 'k' → logprob: -2.2974817752838135
    4. 'len' → logprob: -3.0474817752838135
    5. 'nombre' → logprob: -5.297482013702393
    6. 'str' → logprob: -7.172482013702393
    7. 'int' → logprob: -7.547482013702393
    8. 'length' → logprob: -7.797482013702393
    9. 'num' → logprob: -7.922482013702393
    10. 'prefix' → logprob: -8.797481536865234

Token 1163: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.19558164477348328
    2. 'c' → logprob: -1.8205816745758057
    3. 'cis' → logprob: -4.570581436157227
    4. 'ced' → logprob: -6.945581436157227
    5. 's' → logprob: -6.945581436157227
    6. '_c' → logprob: -7.070581436157227
    7. 'cision' → logprob: -7.445581436157227
    8. 'f' → logprob: -8.070581436157227
    9. 'sent' → logprob: -8.195581436157227
    10. 'cé' → logprob: -8.570581436157227

Token 1164: 'e' (ID: 68)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.41540074348449707
    2. 's' → logprob: -2.040400743484497
    3. 'x' → logprob: -3.415400743484497
    4. 'd' → logprob: -3.790400743484497
    5. 'is' → logprob: -3.790400743484497
    6. 'c' → logprob: -3.790400743484497
    7. 'ur' → logprob: -4.165400505065918
    8. 'ixe' → logprob: -4.290400505065918
    9. 'de' → logprob: -4.290400505065918
    10. 'def' → logprob: -4.415400505065918

Token 1165: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2885028123855591
    2. '=' → logprob: -1.663502812385559
    3. '=[' → logprob: -2.9135026931762695
    4. 'de' → logprob: -5.2885026931762695
    5. '[' → logprob: -7.7885026931762695
    6. ',' → logprob: -8.03850269317627
    7. '=[[' → logprob: -8.28850269317627
    8. 's' → logprob: -9.28850269317627
    9. '=[]' → logprob: -9.28850269317627
    10. ' de' → logprob: -9.78850269317627

Token 1166: ' n' (ID: 297)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11138063669204712
    2. 'n' → logprob: -2.3613805770874023
    3. 'k' → logprob: -5.236380577087402
    4. 'la' → logprob: -5.361380577087402
    5. 'l' → logprob: -7.236380577087402
    6. 'nombre' → logprob: -9.236380577087402
    7. 'len' → logprob: -9.986380577087402
    8. 'long' → logprob: -10.236380577087402
    9. 'length' → logprob: -10.361380577087402
    10. '#' → logprob: -10.486380577087402

Token 1167: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1287103295326233
    2. '=' → logprob: -2.3787102699279785
    3. '=[' → logprob: -3.6287102699279785
    4. ',' → logprob: -7.6287102699279785
    5. '=[[' → logprob: -7.6287102699279785
    6. 's' → logprob: -9.253710746765137
    7. ' =[' → logprob: -9.253710746765137
    8. 'de' → logprob: -9.253710746765137
    9. '#' → logprob: -10.253710746765137
    10. '=[]' → logprob: -10.378710746765137

Token 1168: ' dimensions' (ID: 23995)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.001559258671477437
    2. ' [[' → logprob: -7.001559257507324
    3. '[' → logprob: -7.376559257507324
    4. '[s' → logprob: -11.001559257507324
    5. ' [[[' → logprob: -13.876559257507324
    6. '#' → logprob: -14.001559257507324
    7. '([[' → logprob: -14.001559257507324
    8. 'dp' → logprob: -14.501559257507324
    9. '[n' → logprob: -14.751559257507324
    10. ' [' → logprob: -15.126559257507324

Token 1169: ' :' (ID: 712)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.5615622401237488
    2. '=' → logprob: -1.8115622997283936
    3. ' =' → logprob: -1.8115622997283936
    4. '=(' → logprob: -3.6865622997283936
    5. '=[[' → logprob: -3.6865622997283936
    6. '(' → logprob: -4.1865620613098145
    7. '(n' → logprob: -4.5615620613098145
    8. '(k' → logprob: -5.1865620613098145
    9. '(len' → logprob: -5.3115620613098145
    10. '(s' → logprob: -5.6865620613098145

Token 1170: ' [' (ID: 723)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.08826972544193268
    2. '11' → logprob: -3.4632697105407715
    3. '(len' → logprob: -3.4632697105407715
    4. '[len' → logprob: -4.7132697105407715
    5. '2' → logprob: -5.5882697105407715
    6. '10' → logprob: -6.0882697105407715
    7. '[' → logprob: -6.8382697105407715
    8. '(' → logprob: -6.8382697105407715
    9. ' len' → logprob: -6.9632697105407715
    10. '(k' → logprob: -7.3382697105407715

Token 1171: 'long' (ID: 8431)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0030101498123258352
    2. '11' → logprob: -6.378010272979736
    3. '(len' → logprob: -8.128009796142578
    4. '10' → logprob: -8.378009796142578
    5. '2' → logprob: -8.628009796142578
    6. ' len' → logprob: -8.753009796142578
    7. '12' → logprob: -8.878009796142578
    8. '[len' → logprob: -9.128009796142578
    9. '13' → logprob: -10.003009796142578
    10. 'k' → logprob: -10.003009796142578

Token 1172: 'ueur' (ID: 43728)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.0019084083614870906
    2. '(s' → logprob: -7.501908302307129
    3. '+' → logprob: -8.376908302307129
    4. '(len' → logprob: -8.376908302307129
    5. '=len' → logprob: -8.751908302307129
    6. 'e' → logprob: -8.876908302307129
    7. 'h' → logprob: -9.376908302307129
    8. 'g' → logprob: -9.376908302307129
    9. 's' → logprob: -9.751908302307129
    10. 't' → logprob: -10.126908302307129

Token 1173: ' de' (ID: 334)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8460780382156372
    2. '(s' → logprob: -1.3460780382156372
    3. '][' → logprob: -1.4710780382156372
    4. '(len' → logprob: -3.3460779190063477
    5. 's' → logprob: -4.471077919006348
    6. ' +' → logprob: -4.721077919006348
    7. 'len' → logprob: -5.096077919006348
    8. '=' → logprob: -5.221077919006348
    9. '(k' → logprob: -5.971077919006348
    10. '(n' → logprob: -6.221077919006348

Token 1174: ' n' (ID: 297)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014259527437388897
    2. '(s' → logprob: -4.264259338378906
    3. 'k' → logprob: -10.139259338378906
    4. ' s' → logprob: -10.139259338378906
    5. '(' → logprob: -11.639259338378906
    6. '(k' → logprob: -13.264259338378906
    7. '[s' → logprob: -13.264259338378906
    8. ' (' → logprob: -13.889259338378906
    9. '_s' → logprob: -14.389259338378906
    10. '#' → logprob: -14.514259338378906

Token 1175: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.017603807151317596
    2. ' +' → logprob: -4.392603874206543
    3. '][' → logprob: -5.392603874206543
    4. 's' → logprob: -7.767603874206543
    5. '[' → logprob: -10.767603874206543
    6. '＋' → logprob: -10.767603874206543
    7. '+s' → logprob: -11.767603874206543
    8. 'len' → logprob: -12.017603874206543
    9. '
' → logprob: -12.017603874206543
    10. 'plus' → logprob: -12.267603874206543

Token 1176: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012654215970542282
    2. ' ' → logprob: -9.625126838684082
    3. '2' → logprob: -9.750126838684082
    4. '
' → logprob: -13.875126838684082
    5. '3' → logprob: -14.875126838684082
    6. '```' → logprob: -15.875126838684082
    7. ' ' → logprob: -15.875126838684082
    8. 's' → logprob: -16.375125885009766
    9. '10' → logprob: -16.375125885009766
    10. '7' → logprob: -16.500125885009766

Token 1177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012085650814697146
    2. '2' → logprob: -6.751208782196045
    3. ' ' → logprob: -10.751208305358887
    4. '3' → logprob: -11.876208305358887
    5. '10' → logprob: -12.376208305358887
    6. '
' → logprob: -13.626208305358887
    7. 's' → logprob: -14.313708305358887
    8. '```' → logprob: -14.376208305358887
    9. '][' → logprob: -14.813708305358887
    10. '   ' → logprob: -15.313708305358887

Token 1178: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005439769593067467
    2. '+' → logprob: -7.75054407119751
    3. ' ][' → logprob: -9.375543594360352
    4. ' +' → logprob: -11.500543594360352
    5. ']' → logprob: -12.250543594360352
    6. ',' → logprob: -12.500543594360352
    7. 'for' → logprob: -12.750543594360352
    8. '   ' → logprob: -14.000543594360352
    9. ')][' → logprob: -14.125543594360352
    10. '][_' → logprob: -14.125543594360352

Token 1179: '4' (ID: 19)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6794023513793945
    2. '2' → logprob: -0.8044023513793945
    3. '11' → logprob: -3.3044023513793945
    4. '(k' → logprob: -5.9294023513793945
    5. '3' → logprob: -6.0544023513793945
    6. '101' → logprob: -6.8044023513793945
    7. '10' → logprob: -7.1794023513793945
    8. '21' → logprob: -7.8044023513793945
    9. '102' → logprob: -8.054402351379395
    10. '12' → logprob: -8.179402351379395

Token 1180: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007056408794596791
    2. ']' → logprob: -7.750705718994141
    3. ' ][' → logprob: -8.25070571899414
    4. '+' → logprob: -11.87570571899414
    5. '][]' → logprob: -12.75070571899414
    6. '][:' → logprob: -13.50070571899414
    7. ' +' → logprob: -14.75070571899414
    8. '][-' → logprob: -14.75070571899414
    9. '][_' → logprob: -15.00070571899414
    10. ' ]' → logprob: -15.00070571899414

Token 1181: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07862270623445511
    2. '[[' → logprob: -2.703622817993164
    3. ' =' → logprob: -5.078622817993164
    4. '=' → logprob: -6.578622817993164
    5. '=[[' → logprob: -7.703622817993164
    6. '[' → logprob: -8.078622817993164
    7. '0' → logprob: -9.703622817993164
    8. '=[' → logprob: -9.953622817993164
    9. ' [[' → logprob: -10.578622817993164
    10. '
' → logprob: -10.828622817993164

Token 1182: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5056204199790955
    2. '=' → logprob: -1.0056204795837402
    3. '0' → logprob: -3.5056204795837402
    4. '=[' → logprob: -7.38062047958374
    5. '=[[' → logprob: -8.255620002746582
    6. '[' → logprob: -10.255620002746582
    7. ' ' → logprob: -10.630620002746582
    8. '_' → logprob: -10.755620002746582
    9. ' =[' → logprob: -11.755620002746582
    10. 's' → logprob: -11.880620002746582

Token 1183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16038395464420319
    2. ' =' → logprob: -1.910383939743042
    3. '=[' → logprob: -9.285384178161621
    4. '=[[' → logprob: -9.660384178161621
    5. ' =[' → logprob: -14.160384178161621
    6. '[' → logprob: -14.410384178161621
    7. ',' → logprob: -14.660384178161621
    8. '=[]' → logprob: -14.660384178161621
    9. '＝' → logprob: -14.910384178161621
    10. ']' → logprob: -15.285384178161621

Token 1184: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -8.2994620242971e-06
    2. '[' → logprob: -11.750008583068848
    3. ' [[' → logprob: -14.750008583068848
    4. '[['' → logprob: -19.62500762939453
    5. '([[' → logprob: -21.37500762939453
    6. '0' → logprob: -21.37500762939453
    7. '[(' → logprob: -21.50000762939453
    8. '[n' → logprob: -21.75000762939453
    9. '[s' → logprob: -22.37500762939453
    10. '[
' → logprob: -22.37500762939453

Token 1185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0051344926469028
    2. 'False' → logprob: -6.005134582519531
    3. 'Max' → logprob: -6.505134582519531
    4. '[' → logprob: -7.630134582519531
    5. '(' → logprob: -7.880134582519531
    6. '10' → logprob: -9.630134582519531
    7. '-' → logprob: -10.130134582519531
    8. 'int' → logprob: -10.380134582519531
    9. 'mod' → logprob: -10.630134582519531
    10. 'max' → logprob: -10.880134582519531

Token 1186: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.592832088470459
    2. ' for' → logprob: -1.467832088470459
    3. ',' → logprob: -2.217832088470459
    4. ']*' → logprob: -2.717832088470459
    5. 'for' → logprob: -3.217832088470459
    6. '][' → logprob: -7.217832088470459
    7. ']*(' → logprob: -7.592832088470459
    8. ']+' → logprob: -8.467832565307617
    9. '0' → logprob: -8.717832565307617
    10. ' ]' → logprob: -8.967832565307617

Token 1187: ' j' (ID: 441)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0024707785341888666
    2. 'in' → logprob: -6.877470970153809
    3. 'i' → logprob: -7.752470970153809
    4. '_j' → logprob: -8.127470970153809
    5. '_in' → logprob: -8.502470970153809
    6. ' in' → logprob: -8.752470970153809
    7. 'range' → logprob: -8.877470970153809
    8. '_i' → logprob: -9.002470970153809
    9. ' _' → logprob: -10.252470970153809
    10. '_range' → logprob: -11.002470970153809

Token 1188: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.34846287965774536
    2. ' in' → logprob: -1.2234628200531006
    3. 'range' → logprob: -11.59846305847168
    4. ' ' → logprob: -12.72346305847168
    5. '	in' → logprob: -13.22346305847168
    6. 'for' → logprob: -13.59846305847168
    7. ')' → logprob: -13.97346305847168
    8. ']' → logprob: -14.34846305847168
    9. '  ' → logprob: -15.59846305847168
    10. 'inthe' → logprob: -15.84846305847168

Token 1189: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006267757853493094
    2. ' range' → logprob: -7.375626564025879
    3. ' ' → logprob: -16.250627517700195
    4. '
' → logprob: -17.250627517700195
    5. '   ' → logprob: -17.375627517700195
    6. 'ran' → logprob: -17.750627517700195
    7. '  ' → logprob: -17.875627517700195
    8. '	range' → logprob: -18.000627517700195
    9. '(range' → logprob: -18.375627517700195
    10. 'r' → logprob: -18.875627517700195

Token 1190: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00024084746837615967
    2. '4' → logprob: -8.37524127960205
    3. ' (' → logprob: -12.25024127960205
    4. 'range' → logprob: -12.37524127960205
    5. '(
' → logprob: -14.50024127960205
    6. '(range' → logprob: -15.37524127960205
    7. '((' → logprob: -15.87524127960205
    8. '5' → logprob: -16.125240325927734
    9. '
' → logprob: -16.500240325927734
    10. ']' → logprob: -16.750240325927734

Token 1191: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.01835712604224682
    2. '5' → logprob: -4.018357276916504
    3. '7' → logprob: -9.018357276916504
    4. '(' → logprob: -10.893357276916504
    5. '6' → logprob: -11.018357276916504
    6. '10' → logprob: -11.143357276916504
    7. '3' → logprob: -11.643357276916504
    8. '8' → logprob: -12.393357276916504
    9. '11' → logprob: -12.393357276916504
    10. '(k' → logprob: -12.643357276916504

Token 1192: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.611323624383658e-05
    2. ')' → logprob: -10.375065803527832
    3. ' )' → logprob: -10.875065803527832
    4. ']' → logprob: -11.125065803527832
    5. ' ]' → logprob: -14.750065803527832
    6. ')]
' → logprob: -15.000065803527832
    7. ' ' → logprob: -16.25006675720215
    8. '])' → logprob: -16.37506675720215
    9. '   ' → logprob: -16.87506675720215
    10. ']]' → logprob: -17.00006675720215

Token 1193: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1273360550403595
    2. 'for' → logprob: -2.127336025238037
    3. ']' → logprob: -8.002336502075195
    4. '	for' → logprob: -10.252336502075195
    5. '   ' → logprob: -10.377336502075195
    6. ' ]' → logprob: -12.752336502075195
    7. ' ' → logprob: -13.002336502075195
    8. '    ' → logprob: -14.002336502075195
    9. '  ' → logprob: -15.002336502075195
    10. ')' → logprob: -15.752336502075195

Token 1194: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008986006141640246
    2. '_' → logprob: -7.500898838043213
    3. ' i' → logprob: -8.000898361206055
    4. '_i' → logprob: -11.500898361206055
    5. 'range' → logprob: -15.500898361206055
    6. 'in' → logprob: -17.000898361206055
    7. ' ' → logprob: -17.375898361206055
    8. ' range' → logprob: -17.500898361206055
    9. ' _' → logprob: -17.875898361206055
    10. '	i' → logprob: -18.375898361206055

Token 1195: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11288874596357346
    2. 'in' → logprob: -2.237888813018799
    3. 'range' → logprob: -10.23788833618164
    4. '(range' → logprob: -10.73788833618164
    5. '(' → logprob: -11.98788833618164
    6. ' range' → logprob: -13.73788833618164
    7. '(in' → logprob: -14.48788833618164
    8. ' (' → logprob: -15.36288833618164
    9. ' ' → logprob: -15.86288833618164
    10. '	in' → logprob: -15.86288833618164

Token 1196: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. '(range' → logprob: -16.750553131103516
    4. '	range' → logprob: -22.250553131103516
    5. 's' → logprob: -23.750553131103516
    6. ' ' → logprob: -24.750553131103516
    7. 'Range' → logprob: -25.500553131103516
    8. '(' → logprob: -26.000553131103516
    9. '   ' → logprob: -26.250553131103516
    10. '.range' → logprob: -26.625553131103516

Token 1197: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.17291194200515747
    2. '(range' → logprob: -2.4229118824005127
    3. 'range' → logprob: -2.6729118824005127
    4. 'len' → logprob: -7.172912120819092
    5. ' range' → logprob: -8.547911643981934
    6. '[len' → logprob: -9.172911643981934
    7. '((' → logprob: -12.422911643981934
    8. '(' → logprob: -12.547911643981934
    9. ' (' → logprob: -14.297911643981934
    10. '(length' → logprob: -14.672911643981934

Token 1198: '(str' (ID: 7946)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00019197762594558299
    2. 's' → logprob: -8.625191688537598
    3. '(' → logprob: -11.500191688537598
    4. ' (' → logprob: -13.625191688537598
    5. ' s' → logprob: -15.500191688537598
    6. ')' → logprob: -15.500191688537598
    7. '(
' → logprob: -15.625191688537598
    8. '(dp' → logprob: -15.625191688537598
    9. 'dp' → logprob: -16.875192642211914
    10. '(n' → logprob: -17.375192642211914

Token 1199: '(n' (ID: 2406)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.04917813092470169
    2. 's' → logprob: -3.674178123474121
    3. '(n' → logprob: -3.799178123474121
    4. 'n' → logprob: -8.424178123474121
    5. '(' → logprob: -12.424178123474121
    6. '_s' → logprob: -13.049178123474121
    7. ' s' → logprob: -14.049178123474121
    8. ' (' → logprob: -14.299178123474121
    9. ')' → logprob: -14.799178123474121
    10. '_n' → logprob: -15.174178123474121

Token 1200: '))' (ID: 915)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.028530243784189224
    2. ')' → logprob: -4.528530120849609
    3. 's' → logprob: -4.778530120849609
    4. '))+' → logprob: -5.153530120849609
    5. '))' → logprob: -6.778530120849609
    6. '(s' → logprob: -6.903530120849609
    7. '())' → logprob: -7.653530120849609
    8. '+' → logprob: -8.52853012084961
    9. '(n' → logprob: -8.77853012084961
    10. '()+' → logprob: -10.27853012084961

Token 1201: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31490397453308105
    2. ')]' → logprob: -1.314903974533081
    3. ' +' → logprob: -6.43990421295166
    4. ')' → logprob: -10.93990421295166
    5. '+[' → logprob: -12.06490421295166
    6. ')])' → logprob: -12.56490421295166
    7. ']' → logprob: -12.56490421295166
    8. ')][' → logprob: -13.06490421295166
    9. ' )' → logprob: -13.18990421295166
    10. ')],' → logprob: -13.56490421295166

Token 1202: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -12.000012397766113
    3. '2' → logprob: -12.125012397766113
    4. '0' → logprob: -15.875012397766113
    5. '10' → logprob: -16.562511444091797
    6. '3' → logprob: -16.875011444091797
    7. '
' → logprob: -17.187511444091797
    8. '   ' → logprob: -17.312511444091797
    9. '5' → logprob: -18.062511444091797
    10. '7' → logprob: -18.062511444091797

Token 1203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7133641196996905e-05
    2. '2' → logprob: -10.62502670288086
    3. ' ' → logprob: -13.25002670288086
    4. '3' → logprob: -15.00002670288086
    5. '10' → logprob: -15.12502670288086
    6. '
' → logprob: -16.43752670288086
    7. '5' → logprob: -16.81252670288086
    8. '4' → logprob: -17.56252670288086
    9. '１' → logprob: -17.62502670288086
    10. '   ' → logprob: -17.75002670288086

Token 1204: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0015081972815096378
    2. ']' → logprob: -6.5015082359313965
    3. ' ]' → logprob: -13.001507759094238
    4. ']]' → logprob: -14.126507759094238
    5. '}]' → logprob: -14.626507759094238
    6. ')' → logprob: -14.626507759094238
    7. '>]' → logprob: -14.876507759094238
    8. '])]' → logprob: -14.876507759094238
    9. ')]
' → logprob: -15.501507759094238
    10. ')][' → logprob: -15.626507759094238

Token 1205: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004587011411786079
    2. '[' → logprob: -6.379587173461914
    3. 's' → logprob: -6.629587173461914
    4. 'for' → logprob: -6.879587173461914
    5. '#' → logprob: -8.629587173461914
    6. '0' → logprob: -9.879587173461914
    7. 'i' → logprob: -10.004587173461914
    8. ']' → logprob: -10.254587173461914
    9. ')' → logprob: -10.379587173461914
    10. ' dp' → logprob: -10.504587173461914

Token 1206: ' Cr' (ID: 5790)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.869017852295656e-06
    2. '#' → logprob: -12.500006675720215
    3. 's' → logprob: -12.875006675720215
    4. 'for' → logprob: -15.625006675720215
    5. '```' → logprob: -16.12500762939453
    6. 'd' → logprob: -16.87500762939453
    7. ' dp' → logprob: -17.25000762939453
    8. '	dp' → logprob: -17.87500762939453
    9. 'cnt' → logprob: -18.12500762939453
    10. 'def' → logprob: -18.25000762939453

Token 1207: 'ée' (ID: 2894)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.48198699951171875
    2. 'p' → logprob: -1.1069869995117188
    3. '0' → logprob: -4.356986999511719
    4. 'e' → logprob: -4.856986999511719
    5. '#' → logprob: -4.856986999511719
    6. 'for' → logprob: -4.981986999511719
    7. 'ep' → logprob: -5.106986999511719
    8. 'ép' → logprob: -5.856986999511719
    9. 'é' → logprob: -6.231986999511719
    10. 'ate' → logprob: -6.731986999511719

Token 1208: ' une' (ID: 2463)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0056449430994689465
    2. '[[' → logprob: -5.255644798278809
    3. ' dp' → logprob: -9.130644798278809
    4. '#' → logprob: -9.380644798278809
    5. '([[' → logprob: -9.755644798278809
    6. '(dp' → logprob: -9.880644798278809
    7. '[' → logprob: -10.130644798278809
    8. 's' → logprob: -11.380644798278809
    9. 'd' → logprob: -11.505644798278809
    10. ' [[' → logprob: -12.255644798278809

Token 1209: ' table' (ID: 3293)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009009475819766521
    2. '[[' → logprob: -5.25900936126709
    3. '[' → logprob: -6.50900936126709
    4. 's' → logprob: -7.13400936126709
    5. '0' → logprob: -8.13400936126709
    6. '1' → logprob: -8.63400936126709
    7. '2' → logprob: -8.75900936126709
    8. ' dp' → logprob: -9.00900936126709
    9. '
' → logprob: -9.38400936126709
    10. 'list' → logprob: -9.75900936126709

Token 1210: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0014153540832921863
    2. '[[' → logprob: -7.126415252685547
    3. '0' → logprob: -8.751415252685547
    4. ' =' → logprob: -8.876415252685547
    5. ' dp' → logprob: -9.376415252685547
    6. '=[[' → logprob: -9.501415252685547
    7. '
' → logprob: -10.501415252685547
    8. '=' → logprob: -10.751415252685547
    9. '([[' → logprob: -10.751415252685547
    10. 's' → logprob: -11.001415252685547

Token 1211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04977604001760483
    2. '=' → logprob: -3.799776077270508
    3. ' =' → logprob: -4.049776077270508
    4. '=[[' → logprob: -4.924776077270508
    5. '[[' → logprob: -7.299776077270508
    6. '=[' → logprob: -8.299776077270508
    7. '0' → logprob: -8.924776077270508
    8. 's' → logprob: -9.924776077270508
    9. '3' → logprob: -10.299776077270508
    10. '```' → logprob: -10.299776077270508

Token 1212: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07020295411348343
    2. ' =' → logprob: -2.6952030658721924
    3. '=[[' → logprob: -8.445202827453613
    4. '=[' → logprob: -10.445202827453613
    5. '[' → logprob: -11.820202827453613
    6. '[[' → logprob: -12.320202827453613
    7. '=
' → logprob: -12.695202827453613
    8. '0' → logprob: -13.195202827453613
    9. '([[' → logprob: -13.820202827453613
    10. ']' → logprob: -13.945202827453613

Token 1213: ' les' (ID: 1341)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -9.491498531133402e-06
    2. ' [[' → logprob: -12.000009536743164
    3. '[' → logprob: -13.125009536743164
    4. '[len' → logprob: -14.250009536743164
    5. '=[[' → logprob: -14.875009536743164
    6. '([[' → logprob: -16.000009536743164
    7. '[n' → logprob: -16.625009536743164
    8. '[i' → logprob: -17.000009536743164
    9. 'range' → logprob: -17.375009536743164
    10. '0' → logprob: -17.625009536743164

Token 1214: ' cas' (ID: 2108)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -1.5451681974809617e-05
    2. ' [[' → logprob: -11.625015258789062
    3. '[' → logprob: -12.625015258789062
    4. '[len' → logprob: -13.000015258789062
    5. '[i' → logprob: -15.500015258789062
    6. '0' → logprob: -15.500015258789062
    7. '([[' → logprob: -16.125015258789062
    8. '[
' → logprob: -16.250015258789062
    9. 'range' → logprob: -16.875015258789062
    10. '=[[' → logprob: -17.250015258789062

Token 1215: ' "' (ID: 392)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0008779930067248642
    2. '=[[' → logprob: -8.00087833404541
    3. '[' → logprob: -8.12587833404541
    4. 'for' → logprob: -9.62587833404541
    5. 'plus' → logprob: -10.00087833404541
    6. '=' → logprob: -10.12587833404541
    7. ' [[' → logprob: -10.12587833404541
    8. ' =' → logprob: -10.87587833404541
    9. 'import' → logprob: -12.37587833404541
    10. 'exact' → logprob: -12.50087833404541

Token 1216: 'ég' (ID: 6634)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.11053052544593811
    2. '[' → logprob: -2.4855306148529053
    3. 'exact' → logprob: -4.610530376434326
    4. '[[' → logprob: -4.985530376434326
    5. 'for' → logprob: -6.360530376434326
    6. 'égal' → logprob: -7.360530376434326
    7. '[i' → logprob: -8.110530853271484
    8. 'not' → logprob: -8.110530853271484
    9. '+' → logprob: -8.360530853271484
    10. 'equal' → logprob: -8.485530853271484

Token 1217: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.3195804953575134
    2. 'ale' → logprob: -1.3195805549621582
    3. 'ales' → logprob: -5.194580554962158
    4. 'al' → logprob: -7.444580554962158
    5. '[' → logprob: -9.694580078125
    6. 'als' → logprob: -10.194580078125
    7. 'a' → logprob: -10.319580078125
    8. 'alee' → logprob: -11.944580078125
    9. '```' → logprob: -11.944580078125
    10. 'aler' → logprob: -12.569580078125

Token 1218: '"' (ID: 1)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47682949900627136
    2. ' for' → logprob: -0.9768295288085938
    3. '[' → logprob: -6.726829528808594
    4. '<|end|>' → logprob: -7.101829528808594
    5. 'import' → logprob: -8.351829528808594
    6. '[len' → logprob: -8.601829528808594
    7. ' [' → logprob: -10.226829528808594
    8. '
' → logprob: -10.226829528808594
    9. ' pour' → logprob: -10.351829528808594
    10. '#' → logprob: -10.601829528808594

Token 1219: ' au' (ID: 2791)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.079289510846138
    2. ' =' → logprob: -2.579289436340332
    3. '=[[' → logprob: -8.204289436340332
    4. '=[' → logprob: -9.579289436340332
    5. 'for' → logprob: -10.579289436340332
    6. 'dp' → logprob: -11.204289436340332
    7. '[[' → logprob: -11.954289436340332
    8. ' for' → logprob: -12.704289436340332
    9. '0' → logprob: -12.829289436340332
    10. ']' → logprob: -13.954289436340332

Token 1220: ' pré' (ID: 9424)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.2845727801322937
    2. '[len' → logprob: -1.7845728397369385
    3. 'len' → logprob: -2.5345728397369385
    4. 'range' → logprob: -8.90957260131836
    5. 'for' → logprob: -9.40957260131836
    6. 's' → logprob: -9.78457260131836
    7. ' len' → logprob: -9.78457260131836
    8. '<len' → logprob: -9.90957260131836
    9. 'n' → logprob: -10.15957260131836
    10. ' (' → logprob: -11.03457260131836

Token 1221: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.002917095785960555
    2. 's' → logprob: -6.127917289733887
    3. 'n' → logprob: -8.627917289733887
    4. 'c' → logprob: -8.627917289733887
    5. 'cis' → logprob: -9.252917289733887
    6. 'f' → logprob: -9.752917289733887
    7. ']' → logprob: -10.377917289733887
    8. 'refix' → logprob: -10.502917289733887
    9. '0' → logprob: -10.627917289733887
    10. 'fi' → logprob: -10.877917289733887

Token 1222: 'e' (ID: 68)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7776145339012146
    2. 'fix' → logprob: -2.0276145935058594
    3. 'ix' → logprob: -2.1526145935058594
    4. 'is' → logprob: -2.7776145935058594
    5. 'x' → logprob: -2.7776145935058594
    6. '[' → logprob: -3.0276145935058594
    7. 'ixe' → logprob: -4.152614593505859
    8. 'sis' → logprob: -4.652614593505859
    9. 'es' → logprob: -4.777614593505859
    10. 'if' → logprob: -5.027614593505859

Token 1223: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6730747818946838
    2. ' =' → logprob: -1.298074722290039
    3. '[[' → logprob: -1.923074722290039
    4. '=[[' → logprob: -3.048074722290039
    5. 'dp' → logprob: -4.923074722290039
    6. '([[' → logprob: -5.298074722290039
    7. 'for' → logprob: -5.923074722290039
    8. '[len' → logprob: -6.048074722290039
    9. '=[' → logprob: -6.173074722290039
    10. '0' → logprob: -6.798074722290039

Token 1224: ' n' (ID: 297)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10603968054056168
    2. 'n' → logprob: -2.7310397624969482
    3. 'str' → logprob: -3.3560397624969482
    4. ' s' → logprob: -8.106040000915527
    5. '(str' → logprob: -9.231040000915527
    6. '(s' → logprob: -9.731040000915527
    7. '(n' → logprob: -10.106040000915527
    8. ' n' → logprob: -10.231040000915527
    9. ' str' → logprob: -10.731040000915527
    10. '[str' → logprob: -12.356040000915527

Token 1225: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16079989075660706
    2. ' =' → logprob: -1.9107998609542847
    3. '=[[' → logprob: -7.910799980163574
    4. 'dp' → logprob: -8.910799980163574
    5. '=[' → logprob: -10.160799980163574
    6. '[[' → logprob: -11.535799980163574
    7. ']' → logprob: -12.160799980163574
    8. 'for' → logprob: -12.160799980163574
    9. '0' → logprob: -12.410799980163574
    10. '([[' → logprob: -12.785799980163574

Token 1226: ' dimensions' (ID: 23995)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.000205566844670102
    2. ' [[' → logprob: -8.500205993652344
    3. '[' → logprob: -13.750205993652344
    4. '=[[' → logprob: -15.000205993652344
    5. 'for' → logprob: -15.125205993652344
    6. 'dp' → logprob: -15.750205993652344
    7. '([[' → logprob: -16.375205993652344
    8. '0' → logprob: -17.125205993652344
    9. '
' → logprob: -17.375205993652344
    10. ' for' → logprob: -17.750205993652344

Token 1227: ' :' (ID: 712)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.6428655982017517
    2. ' =' → logprob: -1.6428656578063965
    3. '=' → logprob: -2.2678656578063965
    4. '=[[' → logprob: -2.6428656578063965
    5. '(len' → logprob: -3.2678656578063965
    6. '[len' → logprob: -3.2678656578063965
    7. '([[' → logprob: -3.6428656578063965
    8. '=len' → logprob: -6.6428656578063965
    9. ' [[' → logprob: -7.3928656578063965
    10. 'len' → logprob: -7.8928656578063965

Token 1228: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -1.5213274309644476e-05
    2. '[len' → logprob: -11.250015258789062
    3. ' [[' → logprob: -14.125015258789062
    4. '0' → logprob: -14.250015258789062
    5. 'len' → logprob: -15.000015258789062
    6. '
' → logprob: -15.375015258789062
    7. '[' → logprob: -15.750015258789062
    8. '1' → logprob: -17.625015258789062
    9. '([[' → logprob: -17.625015258789062
    10. '[(' → logprob: -18.000015258789062

Token 1229: 'long' (ID: 8431)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.31572508811950684
    2. '[len' → logprob: -1.3157250881195068
    3. '(len' → logprob: -6.065725326538086
    4. ' len' → logprob: -9.065725326538086
    5. '0' → logprob: -10.940725326538086
    6. '[' → logprob: -13.065725326538086
    7. '[i' → logprob: -13.065725326538086
    8. '<len' → logprob: -14.315725326538086
    9. 'i' → logprob: -15.065725326538086
    10. 'for' → logprob: -15.565725326538086

Token 1230: 'ueur' (ID: 43728)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2375945746898651
    2. '(len' → logprob: -1.9875946044921875
    3. 'en' → logprob: -3.4875946044921875
    4. 'e' → logprob: -4.6125946044921875
    5. 't' → logprob: -4.7375946044921875
    6. '(' → logprob: -5.6125946044921875
    7. 'gest' → logprob: -5.8625946044921875
    8. 'th' → logprob: -6.2375946044921875
    9. 'ueur' → logprob: -6.2375946044921875
    10. '=len' → logprob: -6.2375946044921875

Token 1231: ' de' (ID: 334)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.9748414158821106
    2. 'of' → logprob: -1.2248413562774658
    3. '(str' → logprob: -1.8498413562774658
    4. 's' → logprob: -2.599841356277466
    5. 'de' → logprob: -3.599841356277466
    6. '(len' → logprob: -3.724841356277466
    7. ' of' → logprob: -3.974841356277466
    8. ' de' → logprob: -4.349841594696045
    9. '[str' → logprob: -5.224841594696045
    10. '0' → logprob: -6.099841594696045

Token 1232: ' n' (ID: 297)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4048396050930023
    2. 'str' → logprob: -1.1548396348953247
    3. '(str' → logprob: -4.279839515686035
    4. '(s' → logprob: -5.904839515686035
    5. ' str' → logprob: -7.154839515686035
    6. ' s' → logprob: -7.904839515686035
    7. 'n' → logprob: -10.029839515686035
    8. '[str' → logprob: -10.904839515686035
    9. 'dp' → logprob: -11.654839515686035
    10. ' (' → logprob: -13.154839515686035

Token 1233: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.055748775601387024
    2. ' +' → logprob: -3.305748701095581
    3. 's' → logprob: -4.30574893951416
    4. '(s' → logprob: -5.55574893951416
    5. '(str' → logprob: -9.55574893951416
    6. '()+' → logprob: -10.18074893951416
    7. 'str' → logprob: -10.93074893951416
    8. '+s' → logprob: -11.80574893951416
    9. '(' → logprob: -12.05574893951416
    10. '0' → logprob: -12.18074893951416

Token 1234: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013285996101330966
    2. ' ' → logprob: -9.25013256072998
    3. 'str' → logprob: -10.87513256072998
    4. 's' → logprob: -12.12513256072998
    5. '[' → logprob: -12.75013256072998
    6. '[str' → logprob: -13.50013256072998
    7. '+' → logprob: -13.87513256072998
    8. '(' → logprob: -13.87513256072998
    9. '(str' → logprob: -14.00013256072998
    10. '```' → logprob: -14.25013256072998

Token 1235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000851201475597918
    2. '(len' → logprob: -7.250851154327393
    3. 'len' → logprob: -9.87585163116455
    4. 's' → logprob: -10.62585163116455
    5. '(str' → logprob: -10.87585163116455
    6. '+' → logprob: -11.12585163116455
    7. '(s' → logprob: -11.25085163116455
    8. 'str' → logprob: -12.25085163116455
    9. ' ' → logprob: -12.75085163116455
    10. ' (' → logprob: -13.50085163116455

Token 1236: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -2.7610454708337784e-05
    2. 'for' → logprob: -11.500027656555176
    3. ' ][' → logprob: -11.875027656555176
    4. '[' → logprob: -12.000027656555176
    5. ']' → logprob: -12.750027656555176
    6. ' for' → logprob: -14.750027656555176
    7. '+' → logprob: -14.875027656555176
    8. '"][' → logprob: -16.00002670288086
    9. '[len' → logprob: -16.12502670288086
    10. ')][' → logprob: -16.62502670288086

Token 1237: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.2723104848410003e-05
    2. '5' → logprob: -11.250022888183594
    3. ' ' → logprob: -12.125022888183594
    4. '(' → logprob: -13.375022888183594
    5. '3' → logprob: -13.500022888183594
    6. '7' → logprob: -15.187522888183594
    7. '```' → logprob: -15.250022888183594
    8. '6' → logprob: -16.062522888183594
    9. '
' → logprob: -16.125022888183594
    10. '[' → logprob: -16.250022888183594

Token 1238: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002398938377154991
    2. 'for' → logprob: -8.500240325927734
    3. ' ]' → logprob: -11.125240325927734
    4. ' for' → logprob: -11.250240325927734
    5. ')]' → logprob: -12.625240325927734
    6. '][' → logprob: -12.750240325927734
    7. ']]' → logprob: -14.000240325927734
    8. '][]' → logprob: -14.375240325927734
    9. ']
' → logprob: -14.500240325927734
    10. '[]' → logprob: -16.125240325927734

Token 1239: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -9.686778503237292e-05
    2. '[[' → logprob: -9.250097274780273
    3. ' dp' → logprob: -14.125097274780273
    4. '=[[' → logprob: -18.625097274780273
    5. '[' → logprob: -18.750097274780273
    6. ' [[' → logprob: -18.875097274780273
    7. '_dp' → logprob: -18.875097274780273
    8. '
' → logprob: -19.125097274780273
    9. '	dp' → logprob: -19.750097274780273
    10. ' =' → logprob: -20.000097274780273

Token 1240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006452414090745151
    2. ' =' → logprob: -8.000645637512207
    3. '=' → logprob: -8.375645637512207
    4. '_' → logprob: -10.000645637512207
    5. '=[' → logprob: -11.750645637512207
    6. '=[[' → logprob: -11.875645637512207
    7. '[' → logprob: -12.000645637512207
    8. '0' → logprob: -12.250645637512207
    9. '' → logprob: -13.625645637512207
    10. 's' → logprob: -13.875645637512207

Token 1241: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0789022371172905
    2. ' =' → logprob: -2.578902244567871
    3. '=[[' → logprob: -11.328902244567871
    4. '=[' → logprob: -14.578902244567871
    5. '＝' → logprob: -17.203901290893555
    6. '[[' → logprob: -17.578901290893555
    7. '=
' → logprob: -18.078901290893555
    8. '=[]' → logprob: -18.328901290893555
    9. ' ' → logprob: -18.828901290893555
    10. '[' → logprob: -18.953901290893555

Token 1242: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -2.1008713702030946e-06
    2. ' [[' → logprob: -13.125001907348633
    3. '[' → logprob: -18.250001907348633
    4. '0' → logprob: -19.125001907348633
    5. '([[' → logprob: -20.375001907348633
    6. 'dp' → logprob: -21.625001907348633
    7. '[['' → logprob: -23.125001907348633
    8. '[
' → logprob: -23.125001907348633
    9. '=[[' → logprob: -23.250001907348633
    10. '
' → logprob: -23.750001907348633

Token 1243: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '[' → logprob: -16.625
    4. '1' → logprob: -18.25
    5. '۰' → logprob: -19.375
    6. '
' → logprob: -19.375
    7. 'int' → logprob: -20.25
    8. '-' → logprob: -20.375
    9. '(' → logprob: -20.625
    10. 'for' → logprob: -21.0625

Token 1244: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06196869537234306
    2. ' for' → logprob: -2.8119688034057617
    3. '[j' → logprob: -14.811968803405762
    4. '[' → logprob: -14.936968803405762
    5. '	for' → logprob: -15.186968803405762
    6. '   ' → logprob: -17.561967849731445
    7. ' ' → logprob: -18.061967849731445
    8. ' [' → logprob: -18.686967849731445
    9. '
' → logprob: -18.936967849731445
    10. '[i' → logprob: -19.936967849731445

Token 1245: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.47495681833243e-05
    2. ' j' → logprob: -10.625024795532227
    3. '_j' → logprob: -15.000024795532227
    4. 'i' → logprob: -17.125024795532227
    5. '_' → logprob: -19.000024795532227
    6. '	j' → logprob: -20.250024795532227
    7. '
' → logprob: -21.375024795532227
    8. ' _' → logprob: -22.500024795532227
    9. '$j' → logprob: -22.625024795532227
    10. '[j' → logprob: -22.875024795532227

Token 1246: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1602255403995514
    2. ' in' → logprob: -1.910225510597229
    3. 'for' → logprob: -14.160225868225098
    4. 'range' → logprob: -15.535225868225098
    5. 'n' → logprob: -15.785225868225098
    6. ' ' → logprob: -16.41022491455078
    7. '```' → logprob: -16.53522491455078
    8. 'i' → logprob: -16.66022491455078
    9. '	in' → logprob: -17.28522491455078
    10. 'inthe' → logprob: -17.41022491455078

Token 1247: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001234428636962548
    2. ' range' → logprob: -9.000123023986816
    3. '(range' → logprob: -18.500123977661133
    4. '4' → logprob: -19.125123977661133
    5. 'in' → logprob: -19.500123977661133
    6. '
' → logprob: -20.375123977661133
    7. ' ' → logprob: -20.750123977661133
    8. ' in' → logprob: -21.625123977661133
    9. '	range' → logprob: -22.000123977661133
    10. '  ' → logprob: -23.125123977661133

Token 1248: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31374168395996094
    2. 'range' → logprob: -1.313741683959961
    3. '(range' → logprob: -7.813741683959961
    4. ' range' → logprob: -10.188741683959961
    5. '4' → logprob: -10.313741683959961
    6. 'in' → logprob: -12.438741683959961
    7. 'for' → logprob: -14.813741683959961
    8. '
' → logprob: -14.938741683959961
    9. ' (' → logprob: -16.06374168395996
    10. 'Range' → logprob: -16.81374168395996

Token 1249: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. 'range' → logprob: -16.000001907348633
    4. '(' → logprob: -17.125001907348633
    5. '   ' → logprob: -17.750001907348633
    6. '
' → logprob: -18.375001907348633
    7. 'len' → logprob: -18.875001907348633
    8. '  ' → logprob: -19.500001907348633
    9. '```' → logprob: -19.937501907348633
    10. ')' → logprob: -20.000001907348633

Token 1250: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3613196313381195
    2. ')' → logprob: -1.236319661140442
    3. ']' → logprob: -4.361319541931152
    4. ' )' → logprob: -11.611319541931152
    5. '])' → logprob: -11.861319541931152
    6. 'for' → logprob: -12.611319541931152
    7. ' ]' → logprob: -13.111319541931152
    8. ']]' → logprob: -13.236319541931152
    9. ' ' → logprob: -13.736319541931152
    10. ')])' → logprob: -14.111319541931152

Token 1251: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31326213479042053
    2. ' for' → logprob: -1.3132621049880981
    3. '	for' → logprob: -15.438261985778809
    4. 'in' → logprob: -16.438262939453125
    5. ']' → logprob: -16.813262939453125
    6. ' in' → logprob: -17.563262939453125
    7. ')' → logprob: -17.938262939453125
    8. ' ' → logprob: -18.063262939453125
    9. 'range' → logprob: -18.063262939453125
    10. '<|end|>' → logprob: -18.813262939453125

Token 1252: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0013271415373310447
    2. ' i' → logprob: -6.626327037811279
    3. 'range' → logprob: -13.876327514648438
    4. ' range' → logprob: -15.751327514648438
    5. ' ' → logprob: -17.376327514648438
    6. '   ' → logprob: -17.376327514648438
    7. 'in' → logprob: -17.376327514648438
    8. ' in' → logprob: -17.501327514648438
    9. '	i' → logprob: -17.501327514648438
    10. '_i' → logprob: -18.001327514648438

Token 1253: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16023559868335724
    2. 'in' → logprob: -1.9102356433868408
    3. 'range' → logprob: -11.910235404968262
    4. '(in' → logprob: -13.160235404968262
    5. '(range' → logprob: -13.535235404968262
    6. ' ' → logprob: -14.785235404968262
    7. '(' → logprob: -14.910235404968262
    8. '	in' → logprob: -15.785235404968262
    9. 'import' → logprob: -16.410236358642578
    10. '
' → logprob: -16.410236358642578

Token 1254: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -8.77627644513268e-06
    2. ' range' → logprob: -11.750008583068848
    3. '(range' → logprob: -14.000008583068848
    4. '	range' → logprob: -22.875009536743164
    5. ' ' → logprob: -23.750009536743164
    6. '
' → logprob: -23.875009536743164
    7. '(' → logprob: -24.250009536743164
    8. '   ' → logprob: -25.375009536743164
    9. '.range' → logprob: -26.500009536743164
    10. 'rang' → logprob: -26.500009536743164

Token 1255: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0005972352810204029
    2. '(range' → logprob: -7.50059700012207
    3. 'range' → logprob: -10.12559700012207
    4. '[len' → logprob: -13.00059700012207
    5. '((' → logprob: -14.00059700012207
    6. '(' → logprob: -14.87559700012207
    7. ' range' → logprob: -15.12559700012207
    8. 'len' → logprob: -16.12559700012207
    9. ' (' → logprob: -16.25059700012207
    10. '<len' → logprob: -16.50059700012207

Token 1256: '(str' (ID: 7946)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.037867721170186996
    2. '(str' → logprob: -3.412867784500122
    3. 's' → logprob: -5.787867546081543
    4. 'str' → logprob: -6.787867546081543
    5. '(' → logprob: -11.662867546081543
    6. '(dp' → logprob: -11.912867546081543
    7. 'dp' → logprob: -13.162867546081543
    8. 'Str' → logprob: -13.537867546081543
    9. ' (' → logprob: -14.787867546081543
    10. ' str' → logprob: -14.787867546081543

Token 1257: '(n' (ID: 2406)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.18040592968463898
    2. '(n' → logprob: -1.8054059743881226
    3. 's' → logprob: -7.430406093597412
    4. 'n' → logprob: -10.180405616760254
    5. '(str' → logprob: -11.180405616760254
    6. '(' → logprob: -11.305405616760254
    7. 'str' → logprob: -14.430405616760254
    8. '_s' → logprob: -14.805405616760254
    9. ' s' → logprob: -15.180405616760254
    10. ' (' → logprob: -15.180405616760254

Token 1258: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03831298649311066
    2. 's' → logprob: -3.4133129119873047
    3. ')+' → logprob: -5.663312911987305
    4. '(s' → logprob: -6.788312911987305
    5. '))' → logprob: -10.788312911987305
    6. ' s' → logprob: -11.163312911987305
    7. ' )' → logprob: -12.413312911987305
    8. '.s' → logprob: -12.413312911987305
    9. '))+' → logprob: -12.913312911987305
    10. '(n' → logprob: -13.038312911987305

Token 1259: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24938713014125824
    2. '+' → logprob: -1.7493871450424194
    3. ')+' → logprob: -3.49938702583313
    4. ' +' → logprob: -4.124387264251709
    5. 's' → logprob: -8.12438678741455
    6. '()' → logprob: -10.12438678741455
    7. '(s' → logprob: -10.12438678741455
    8. '()+' → logprob: -10.62438678741455
    9. ' s' → logprob: -10.74938678741455
    10. '+s' → logprob: -12.12438678741455

Token 1260: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004574863996822387
    2. ' ' → logprob: -7.750457286834717
    3. 's' → logprob: -11.000457763671875
    4. ' s' → logprob: -12.750457763671875
    5. 'n' → logprob: -13.000457763671875
    6. '(' → logprob: -13.000457763671875
    7. ' n' → logprob: -14.625457763671875
    8. ')' → logprob: -15.375457763671875
    9. ' (' → logprob: -15.375457763671875
    10. '(n' → logprob: -15.375457763671875

Token 1261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00162043038289994
    2. ' ' → logprob: -6.876620292663574
    3. 's' → logprob: -8.126620292663574
    4. '(' → logprob: -9.001620292663574
    5. 'n' → logprob: -10.001620292663574
    6. '(n' → logprob: -10.501620292663574
    7. ' s' → logprob: -10.626620292663574
    8. '(len' → logprob: -10.876620292663574
    9. '(s' → logprob: -11.376620292663574
    10. ' (' → logprob: -11.751620292663574

Token 1262: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.4617256056226324e-05
    2. ']' → logprob: -11.625014305114746
    3. ')' → logprob: -12.875014305114746
    4. '])]' → logprob: -13.875014305114746
    5. ')]
' → logprob: -14.500014305114746
    6. ']]' → logprob: -14.500014305114746
    7. ')][' → logprob: -15.000014305114746
    8. ')]

' → logprob: -15.750014305114746
    9. '+' → logprob: -16.375015258789062
    10. ')])' → logprob: -16.375015258789062

Token 1263: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.869017852295656e-06
    2. 's' → logprob: -13.000006675720215
    3. ']' → logprob: -13.125006675720215
    4. ']
' → logprob: -14.000006675720215
    5. '#' → logprob: -14.125006675720215
    6. '
' → logprob: -14.875006675720215
    7. '```' → logprob: -15.750006675720215
    8. ' dp' → logprob: -15.875006675720215
    9. '][' → logprob: -16.00000762939453
    10. '(dp' → logprob: -16.12500762939453

Token 1264: ' Initialise' (ID: 179601)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.9361264946837764e-07
    2. '#' → logprob: -15.875
    3. ' dp' → logprob: -17.625
    4. 's' → logprob: -18.625
    5. '	dp' → logprob: -19.0
    6. 'for' → logprob: -19.125
    7. 'if' → logprob: -19.5
    8. 'd' → logprob: -19.5
    9. '```' → logprob: -19.875
    10. '(dp' → logprob: -20.0

Token 1265: ' un' (ID: 537)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.339278580620885e-06
    2. ' dp' → logprob: -13.250001907348633
    3. '#' → logprob: -15.375001907348633
    4. 'la' → logprob: -16.375001907348633
    5. '(dp' → logprob: -16.500001907348633
    6. '
' → logprob: -17.500001907348633
    7. '[' → logprob: -18.000001907348633
    8. '	dp' → logprob: -18.000001907348633
    9. 'le' → logprob: -18.750001907348633
    10. 'for' → logprob: -19.000001907348633

Token 1266: ' compteur' (ID: 163344)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001983236987143755
    2. ' dp' → logprob: -7.376983165740967
    3. 's' → logprob: -7.876983165740967
    4. '[' → logprob: -8.251983642578125
    5. '_dp' → logprob: -8.501983642578125
    6. '0' → logprob: -9.001983642578125
    7. '=' → logprob: -9.626983642578125
    8. '#' → logprob: -9.626983642578125
    9. 'd' → logprob: -10.251983642578125
    10. '(dp' → logprob: -10.376983642578125

Token 1267: ' '' (ID: 461)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13416677713394165
    2. '=' → logprob: -3.259166717529297
    3. ' =' → logprob: -3.509166717529297
    4. '[' → logprob: -4.009166717529297
    5. 'count' → logprob: -4.259166717529297
    6. '0' → logprob: -5.009166717529297
    7. 'cnt' → logprob: -5.009166717529297
    8. 'for' → logprob: -5.884166717529297
    9. 'i' → logprob: -5.884166717529297
    10. '
' → logprob: -6.384166717529297

Token 1268: 'po' (ID: 2519)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005974062252789736
    2. '1' → logprob: -6.505974292755127
    3. '0' → logprob: -6.880974292755127
    4. 'total' → logprob: -7.505974292755127
    5. 's' → logprob: -7.630974292755127
    6. 'count' → logprob: -7.880974292755127
    7. 'ans' → logprob: -8.130973815917969
    8. 'cnt' → logprob: -8.505973815917969
    9. 'i' → logprob: -8.630973815917969
    10. '#' → logprob: -8.630973815917969

Token 1269: ''' (ID: 6)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01822146773338318
    2. 'ss' → logprob: -4.893221378326416
    3. 'int' → logprob: -5.393221378326416
    4. 'p' → logprob: -5.768221378326416
    5. 'w' → logprob: -7.518221378326416
    6. 'inter' → logprob: -7.643221378326416
    7. 'i' → logprob: -7.768221378326416
    8. 'ints' → logprob: -8.268221855163574
    9. '=' → logprob: -8.518221855163574
    10. 'sit' → logprob: -8.643221855163574

Token 1270: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38691121339797974
    2. ' =' → logprob: -1.136911153793335
    3. '[' → logprob: -11.511911392211914
    4. 'po' → logprob: -11.636911392211914
    5. '0' → logprob: -12.011911392211914
    6. ' po' → logprob: -12.636911392211914
    7. '=
' → logprob: -12.761911392211914
    8. ',' → logprob: -13.261911392211914
    9. ' =
' → logprob: -13.761911392211914
    10. '=[' → logprob: -13.761911392211914

Token 1271: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3144468367099762
    2. '0' → logprob: -1.3144468069076538
    3. '[' → logprob: -7.189446926116943
    4. '-' → logprob: -8.689446449279785
    5. '4' → logprob: -9.314446449279785
    6. ' ' → logprob: -10.314446449279785
    7. 'len' → logprob: -10.689446449279785
    8. '3' → logprob: -10.814446449279785
    9. '2' → logprob: -10.939446449279785
    10. 'k' → logprob: -11.439446449279785

Token 1272: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6329125165939331
    2. '0' → logprob: -0.7579125165939331
    3. '[' → logprob: -8.507912635803223
    4. '-' → logprob: -9.757912635803223
    5. 'len' → logprob: -11.257912635803223
    6. '4' → logprob: -11.632912635803223
    7. 'k' → logprob: -12.257912635803223
    8. 'int' → logprob: -12.882912635803223
    9. 's' → logprob: -12.882912635803223
    10. 'n' → logprob: -13.132912635803223

Token 1273: ',' (ID: 11)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -6.384836888173595e-05
    2. ' po' → logprob: -10.2500638961792
    3. '
' → logprob: -10.6250638961792
    4. 'p' → logprob: -12.7500638961792
    5. '#' → logprob: -15.2500638961792
    6. 'for' → logprob: -15.8750638961792
    7. '=' → logprob: -15.8750638961792
    8. '0' → logprob: -16.125062942504883
    9. ' =' → logprob: -16.250062942504883
    10. 'i' → logprob: -16.375062942504883

Token 1274: ' utilisé' (ID: 53138)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.5552908182144165
    2. 'dp' → logprob: -1.5552908182144165
    3. ' po' → logprob: -1.6802908182144165
    4. '
' → logprob: -4.680290699005127
    5. ' dp' → logprob: -5.055290699005127
    6. '#' → logprob: -5.180290699005127
    7. 'p' → logprob: -6.180290699005127
    8. ' 
' → logprob: -6.180290699005127
    9. 'for' → logprob: -7.180290699005127
    10. ' #' → logprob: -7.430290699005127

Token 1275: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.035001277923584
    2. 'for' → logprob: -1.535001277923584
    3. '
' → logprob: -1.910001277923584
    4. ' for' → logprob: -2.410001277923584
    5. '<|end|>' → logprob: -2.660001277923584
    6. ' =' → logprob: -3.410001277923584
    7. '=' → logprob: -3.535001277923584
    8. ')' → logprob: -3.785001277923584
    9. ' 
' → logprob: -5.035001277923584
    10. '<|end|>' → logprob: -5.785001277923584

Token 1276: ' compter' (ID: 81694)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5690001249313354
    2. 'po' → logprob: -1.8190001249313354
    3. ' compter' → logprob: -2.319000244140625
    4. 'count' → logprob: -2.944000244140625
    5. '0' → logprob: -3.069000244140625
    6. 'comp' → logprob: -4.194000244140625
    7. ' i' → logprob: -4.319000244140625
    8. 'l' → logprob: -4.444000244140625
    9. 'p' → logprob: -5.444000244140625
    10. '1' → logprob: -6.069000244140625

Token 1277: ' les' (ID: 1341)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.5468552708625793
    2. '<|end|>' → logprob: -1.1718552112579346
    3. ' po' → logprob: -3.2968552112579346
    4. '
' → logprob: -3.5468552112579346
    5. '0' → logprob: -3.9218552112579346
    6. 'dp' → logprob: -4.671855449676514
    7. 'for' → logprob: -5.421855449676514
    8. '4' → logprob: -6.046855449676514
    9. ')' → logprob: -6.046855449676514
    10. '<|end|>' → logprob: -6.671855449676514

Token 1278: ' occurrences' (ID: 108073)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14353027939796448
    2. 'po' → logprob: -2.6435303688049316
    3. 'digits' → logprob: -3.1435303688049316
    4. '#' → logprob: -6.143530368804932
    5. 'poss' → logprob: -6.143530368804932
    6. 'places' → logprob: -6.393530368804932
    7. 'positions' → logprob: -6.643530368804932
    8. '0' → logprob: -6.643530368804932
    9. 'nombre' → logprob: -6.643530368804932
    10. 'digit' → logprob: -6.643530368804932

Token 1279: ' d' (ID: 272)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.0001295222609769553
    2. ' po' → logprob: -9.875129699707031
    3. '
' → logprob: -10.000129699707031
    4. 'dp' → logprob: -10.875129699707031
    5. 'for' → logprob: -12.375129699707031
    6. '#' → logprob: -13.000129699707031
    7. 'p' → logprob: -13.500129699707031
    8. '0' → logprob: -13.500129699707031
    9. '=' → logprob: -13.750129699707031
    10. '(po' → logprob: -14.125129699707031

Token 1280: ''un' (ID: 9788)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.833228349685669
    2. 'l' → logprob: -1.958228349685669
    3. 'p' → logprob: -2.458228349685669
    4. 'u' → logprob: -2.583228349685669
    5. 'digits' → logprob: -2.833228349685669
    6. 'o' → logprob: -2.958228349685669
    7. '0' → logprob: -2.958228349685669
    8. 'os' → logprob: -3.208228349685669
    9. 'pos' → logprob: -3.458228349685669
    10. 'print' → logprob: -3.958228349685669

Token 1281: ' chiffre' (ID: 107420)
  Prédit: 'certain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'certain' → logprob: -0.3294728398323059
    2. 'ch' → logprob: -2.204472780227661
    3. 'nombre' → logprob: -2.704472780227661
    4. 'digit' → logprob: -3.704472780227661
    5. '0' → logprob: -3.829472780227661
    6. 'car' → logprob: -4.82947301864624
    7. 'for' → logprob: -5.07947301864624
    8. 'd' → logprob: -5.07947301864624
    9. 'z' → logprob: -5.57947301864624
    10. 'trip' → logprob: -5.70447301864624

Token 1282: ' ‘' (ID: 2476)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.3621852993965149
    2. 'dp' → logprob: -1.9871852397918701
    3. '0' → logprob: -3.23718523979187
    4. 'for' → logprob: -3.48718523979187
    5. 'd' → logprob: -3.48718523979187
    6. '
' → logprob: -3.61218523979187
    7. 'digit' → logprob: -4.237185478210449
    8. 's' → logprob: -4.737185478210449
    9. ' po' → logprob: -5.612185478210449
    10. '<|end|>' → logprob: -5.987185478210449

Token 1283: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12475477159023285
    2. ''' → logprob: -3.6247546672821045
    3. '1' → logprob: -3.6247546672821045
    4. '9' → logprob: -4.124754905700684
    5. '7' → logprob: -4.499754905700684
    6. '4' → logprob: -4.749754905700684
    7. ' ' → logprob: -4.999754905700684
    8. 's' → logprob: -5.499754905700684
    9. ' '' → logprob: -5.499754905700684
    10. '=' → logprob: -6.249754905700684

Token 1284: '’' (ID: 438)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5060401558876038
    2. '<|end|>' → logprob: -1.381040096282959
    3. ')' → logprob: -3.131040096282959
    4. ' ' → logprob: -3.631040096282959
    5. ' ]' → logprob: -4.256040096282959
    6. 's' → logprob: -4.506040096282959
    7. ' or' → logprob: -4.631040096282959
    8. '0' → logprob: -4.881040096282959
    9. 'x' → logprob: -4.881040096282959
    10. '
' → logprob: -5.631040096282959

Token 1285: ' parmi' (ID: 51713)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.13733218610286713
    2. '
' → logprob: -2.2623322010040283
    3. ' po' → logprob: -4.512331962585449
    4. 'for' → logprob: -5.512331962585449
    5. '0' → logprob: -5.762331962585449
    6. 'p' → logprob: -6.512331962585449
    7. 'dp' → logprob: -6.637331962585449
    8. '#' → logprob: -7.762331962585449
    9. ',' → logprob: -7.887331962585449
    10. ' for' → logprob: -8.38733196258545

Token 1286: ' les' (ID: 1341)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10013635456562042
    2. 'la' → logprob: -3.6001362800598145
    3. 'dp' → logprob: -3.9751362800598145
    4. 'les' → logprob: -4.4751362800598145
    5. '[s' → logprob: -4.6001362800598145
    6. '[' → logprob: -4.9751362800598145
    7. 'the' → logprob: -4.9751362800598145
    8. 'digits' → logprob: -5.6001362800598145
    9. ' s' → logprob: -6.1001362800598145
    10. 'le' → logprob: -6.4751362800598145

Token 1287: ' chiffres' (ID: 105565)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.14812345802783966
    2. 'ch' → logprob: -3.0231235027313232
    3. 'd' → logprob: -3.1481235027313232
    4. 'qu' → logprob: -4.398123264312744
    5. 'positions' → logprob: -5.273123264312744
    6. '0' → logprob: -5.523123264312744
    7. ' chiffres' → logprob: -5.523123264312744
    8. 'c' → logprob: -5.773123264312744
    9. ' digits' → logprob: -5.773123264312744
    10. 'car' → logprob: -6.273123264312744

Token 1288: ' parcour' (ID: 130642)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.4169004261493683
    2. '0' → logprob: -1.791900396347046
    3. 's' → logprob: -2.416900396347046
    4. 'for' → logprob: -4.416900634765625
    5. ' po' → logprob: -4.541900634765625
    6. 'd' → logprob: -4.541900634765625
    7. ' =' → logprob: -4.541900634765625
    8. '=' → logprob: -4.791900634765625
    9. '
' → logprob: -5.416900634765625
    10. 'dp' → logprob: -5.541900634765625

Token 1289: 'us' (ID: 385)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.48693692684173584
    2. 's' → logprob: -1.2369369268417358
    3. ' s' → logprob: -3.1119370460510254
    4. 'i' → logprob: -4.236937046051025
    5. '   ' → logprob: -4.861937046051025
    6. ' =' → logprob: -5.361937046051025
    7. ' ' → logprob: -5.486937046051025
    8. 'er' → logprob: -5.486937046051025
    9. 'é' → logprob: -5.486937046051025
    10. 'e' → logprob: -6.111937046051025

Token 1290: '
' (ID: 198)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.0005799580831080675
    2. '
' → logprob: -7.750579833984375
    3. ' po' → logprob: -9.500579833984375
    4. '0' → logprob: -10.375579833984375
    5. 'p' → logprob: -11.000579833984375
    6. 'pos' → logprob: -11.500579833984375
    7. 'i' → logprob: -12.750579833984375
    8. '
' → logprob: -12.750579833984375
    9. 'for' → logprob: -13.125579833984375
    10. 'dp' → logprob: -13.125579833984375

Token 1291: 'po' (ID: 2519)
  Prédit: 'po'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -6.034592388459714e-06
    2. 'for' → logprob: -13.000005722045898
    3. 'dp' → logprob: -13.500005722045898
    4. ' po' → logprob: -14.000005722045898
    5. '0' → logprob: -14.625005722045898
    6. 'p' → logprob: -14.750005722045898
    7. 'pos' → logprob: -15.875005722045898
    8. 'count' → logprob: -16.6250057220459
    9. 'zero' → logprob: -16.7500057220459
    10. '(po' → logprob: -17.0000057220459

Token 1292: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020720958709717
    2. ' =' → logprob: -2.3502073287963867
    3. '+=' → logprob: -15.100207328796387
    4. ' +=' → logprob: -15.350207328796387
    5. ' ' → logprob: -16.97520637512207
    6. ',' → logprob: -16.97520637512207
    7. '=int' → logprob: -18.10020637512207
    8. '＝' → logprob: -18.10020637512207
    9. '.=' → logprob: -19.22520637512207
    10. '=
' → logprob: -19.47520637512207

Token 1293: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.945094355614856e-05
    2. ' ' → logprob: -9.750069618225098
    3. '1' → logprob: -11.500069618225098
    4. 's' → logprob: -15.500069618225098
    5. 'int' → logprob: -16.25006866455078
    6. ' ' → logprob: -16.62506866455078
    7. '[' → logprob: -16.68756866455078
    8. '(' → logprob: -16.81256866455078
    9. '-' → logprob: -17.37506866455078
    10. '4' → logprob: -17.43756866455078

Token 1294: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.380904672667384e-05
    2. '1' → logprob: -10.750033378601074
    3. ' ' → logprob: -11.625033378601074
    4. '-' → logprob: -13.000033378601074
    5. 's' → logprob: -15.250033378601074
    6. '[' → logprob: -15.625033378601074
    7. 'int' → logprob: -15.875033378601074
    8. '4' → logprob: -17.18753433227539
    9. '(' → logprob: -17.25003433227539
    10. 'a' → logprob: -17.37503433227539

Token 1295: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3181934356689453
    2. 'for' → logprob: -1.3181934356689453
    3. 'if' → logprob: -6.068193435668945
    4. 'i' → logprob: -7.068193435668945
    5. '#' → logprob: -7.693193435668945
    6. 'po' → logprob: -7.943193435668945
    7. ' for' → logprob: -8.068193435668945
    8. 'pos' → logprob: -8.693193435668945
    9. 's' → logprob: -9.318193435668945
    10. '
' → logprob: -9.568193435668945

Token 1296: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03834164887666702
    2. 'for' → logprob: -3.288341760635376
    3. 'po' → logprob: -8.413341522216797
    4. '#' → logprob: -10.038341522216797
    5. 'pos' → logprob: -11.288341522216797
    6. 'if' → logprob: -11.538341522216797
    7. 's' → logprob: -13.163341522216797
    8. ' for' → logprob: -13.663341522216797
    9. '0' → logprob: -13.788341522216797
    10. 'p' → logprob: -14.163341522216797

Token 1297: ' Initialise' (ID: 179601)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011345475912094116
    2. 'for' → logprob: -4.511345386505127
    3. 'po' → logprob: -8.886345863342285
    4. '#' → logprob: -9.386345863342285
    5. 'ans' → logprob: -11.136345863342285
    6. 'pos' → logprob: -11.136345863342285
    7. 'p' → logprob: -12.511345863342285
    8. 's' → logprob: -12.511345863342285
    9. 'res' → logprob: -12.636345863342285
    10. 'if' → logprob: -12.636345863342285

Token 1298: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4132510721683502
    2. 'dp' → logprob: -1.5382510423660278
    3. 'po' → logprob: -3.4132511615753174
    4. 'pos' → logprob: -3.6632511615753174
    5. 'res' → logprob: -4.288250923156738
    6. 'ans' → logprob: -4.538250923156738
    7. '0' → logprob: -4.913250923156738
    8. 'p' → logprob: -5.038250923156738
    9. 'for' → logprob: -5.163250923156738
    10. 'a' → logprob: -5.913250923156738

Token 1299: ' point' (ID: 2438)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5655196309089661
    2. 'pos' → logprob: -2.1905195713043213
    3. 'ans' → logprob: -2.5655195713043213
    4. 'po' → logprob: -2.9405195713043213
    5. 'i' → logprob: -3.0655195713043213
    6. 'p' → logprob: -3.3155195713043213
    7. 'j' → logprob: -4.0655198097229
    8. 'res' → logprob: -4.3155198097229
    9. 'for' → logprob: -4.5655198097229
    10. '0' → logprob: -4.6905198097229

Token 1300: ' de' (ID: 334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05003392696380615
    2. '_' → logprob: -4.550034046173096
    3. ' i' → logprob: -4.550034046173096
    4. ' =' → logprob: -4.925034046173096
    5. 's' → logprob: -5.425034046173096
    6. '=' → logprob: -5.800034046173096
    7. 'd' → logprob: -5.925034046173096
    8. 'ind' → logprob: -6.925034046173096
    9. 'for' → logprob: -6.925034046173096
    10. 't' → logprob: -7.175034046173096

Token 1301: ' départ' (ID: 32693)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.10227226465940475
    2. 'vue' → logprob: -2.7272722721099854
    3. 'd' → logprob: -4.602272033691406
    4. 'dp' → logprob: -4.852272033691406
    5. 'depart' → logprob: -4.977272033691406
    6. 'i' → logprob: -5.352272033691406
    7. 'pivot' → logprob: -7.602272033691406
    8. 'vu' → logprob: -7.852272033691406
    9. 'v' → logprob: -7.977272033691406
    10. 'position' → logprob: -8.602272033691406

Token 1302: ' pour' (ID: 1930)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5308365821838379
    2. 'for' → logprob: -1.280836582183838
    3. '0' → logprob: -3.155836582183838
    4. '=' → logprob: -3.280836582183838
    5. ' =' → logprob: -3.655836582183838
    6. ' for' → logprob: -4.655836582183838
    7. 'dp' → logprob: -4.905836582183838
    8. 'po' → logprob: -5.530836582183838
    9. ' i' → logprob: -6.280836582183838
    10. 'pos' → logprob: -7.030836582183838

Token 1303: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03465986251831055
    2. ' i' → logprob: -4.4096598625183105
    3. '0' → logprob: -5.1596598625183105
    4. 'for' → logprob: -5.4096598625183105
    5. 'dp' → logprob: -6.0346598625183105
    6. '_' → logprob: -6.1596598625183105
    7. 'pos' → logprob: -6.2846598625183105
    8. 'l' → logprob: -6.6596598625183105
    9. 'po' → logprob: -6.7846598625183105
    10. 'p' → logprob: -7.7846598625183105

Token 1304: ' états' (ID: 184259)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.21045343577861786
    2. 'for' → logprob: -2.335453510284424
    3. 'i' → logprob: -2.835453510284424
    4. '0' → logprob: -4.460453510284424
    5. ' for' → logprob: -5.335453510284424
    6. ' dp' → logprob: -5.585453510284424
    7. 'po' → logprob: -5.710453510284424
    8. 'pos' → logprob: -6.335453510284424
    9. 'digit' → logprob: -6.585453510284424
    10. 'digits' → logprob: -6.585453510284424

Token 1305: ' ‘' (ID: 2476)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7750993967056274
    2. '0' → logprob: -1.6500993967056274
    3. 'dp' → logprob: -1.9000993967056274
    4. '=' → logprob: -2.150099277496338
    5. ' =' → logprob: -2.900099277496338
    6. 'for' → logprob: -4.150099277496338
    7. '[' → logprob: -5.150099277496338
    8. ',' → logprob: -6.775099277496338
    9. '```' → logprob: -7.650099277496338
    10. 'po' → logprob: -7.650099277496338

Token 1306: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14172814786434174
    2. '0' → logprob: -2.766728162765503
    3. 'i' → logprob: -3.391728162765503
    4. 'pos' → logprob: -5.016727924346924
    5. ' dp' → logprob: -5.016727924346924
    6. '=' → logprob: -5.516727924346924
    7. 'for' → logprob: -5.641727924346924
    8. 'dé' → logprob: -6.516727924346924
    9. ' =' → logprob: -6.766727924346924
    10. 'po' → logprob: -6.891727924346924

Token 1307: '’' (ID: 438)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12204759567975998
    2. '0' → logprob: -2.4970476627349854
    3. ']' → logprob: -4.122047424316406
    4. '][' → logprob: -4.372047424316406
    5. '[' → logprob: -6.247047424316406
    6. 'dp' → logprob: -7.872047424316406
    7. 's' → logprob: -7.997047424316406
    8. 'po' → logprob: -8.372047424316406
    9. '_' → logprob: -9.372047424316406
    10. '#' → logprob: -9.622047424316406

Token 1308: ' :
' (ID: 10039)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0014495177892968059
    2. 'i' → logprob: -7.3764495849609375
    3. 'po' → logprob: -8.001449584960938
    4. '[' → logprob: -9.126449584960938
    5. 'for' → logprob: -9.251449584960938
    6. '
' → logprob: -9.501449584960938
    7. 'pos' → logprob: -9.751449584960938
    8. '0' → logprob: -10.126449584960938
    9. ' dp' → logprob: -10.501449584960938
    10. ' =' → logprob: -10.751449584960938

Token 1309: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -3.650518920039758e-06
    2. 'if' → logprob: -12.875003814697266
    3. 'for' → logprob: -14.250003814697266
    4. ' dp' → logprob: -15.125003814697266
    5. '#' → logprob: -16.375003814697266
    6. '```' → logprob: -18.500003814697266
    7. '	dp' → logprob: -18.500003814697266
    8. '
' → logprob: -18.625003814697266
    9. '(dp' → logprob: -19.250003814697266
    10. 'd' → logprob: -19.375003814697266

Token 1310: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.034592388459714e-06
    2. 'for' → logprob: -12.875005722045898
    3. 'if' → logprob: -13.125005722045898
    4. '#' → logprob: -14.500005722045898
    5. ' dp' → logprob: -15.000005722045898
    6. '```' → logprob: -15.500005722045898
    7. '	dp' → logprob: -16.8750057220459
    8. 'd' → logprob: -17.0000057220459
    9. 'po' → logprob: -17.1250057220459
    10. '(dp' → logprob: -17.2500057220459

Token 1311: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010838405229151249
    2. '0' → logprob: -4.635838508605957
    3. '[' → logprob: -6.885838508605957
    4. 'dp' → logprob: -11.010838508605957
    5. 's' → logprob: -11.135838508605957
    6. ' =' → logprob: -12.010838508605957
    7. '][' → logprob: -12.385838508605957
    8. '
' → logprob: -12.885838508605957
    9. '_' → logprob: -13.010838508605957
    10. 'i' → logprob: -13.510838508605957

Token 1312: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009566723369061947
    2. 'dp' → logprob: -4.759566783905029
    3. '][' → logprob: -7.009566783905029
    4. ' dp' → logprob: -11.259566307067871
    5. ']' → logprob: -11.634566307067871
    6. '0' → logprob: -11.884566307067871
    7. ' [' → logprob: -12.259566307067871
    8. '#' → logprob: -13.009566307067871
    9. '
' → logprob: -13.134566307067871
    10. '_dp' → logprob: -13.509566307067871

Token 1313: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7950490713119507
    2. 'dp' → logprob: -1.1700490713119507
    3. '[' → logprob: -1.7950490713119507
    4. '1' → logprob: -2.7950491905212402
    5. '[[' → logprob: -5.79504919052124
    6. 'po' → logprob: -6.29504919052124
    7. '...' → logprob: -6.42004919052124
    8. '#' → logprob: -7.17004919052124
    9. 's' → logprob: -7.29504919052124
    10. '4' → logprob: -7.67004919052124

Token 1314: ''ind' (ID: 82245)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8039355874061584
    2. 'dp' → logprob: -1.3039355278015137
    3. '[' → logprob: -1.8039355278015137
    4. '1' → logprob: -2.9289355278015137
    5. 'po' → logprob: -4.178935527801514
    6. '][' → logprob: -4.803935527801514
    7. 'i' → logprob: -4.803935527801514
    8. 's' → logprob: -4.803935527801514
    9. ']' → logprob: -4.928935527801514
    10. 'len' → logprob: -5.428935527801514

Token 1315: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.000260382192209363
    2. '0' → logprob: -9.000260353088379
    3. 'e' → logprob: -9.750260353088379
    4. '#' → logprob: -10.625260353088379
    5. 'é' → logprob: -10.625260353088379
    6. 'i' → logprob: -11.375260353088379
    7. '[' → logprob: -11.875260353088379
    8. 'dp' → logprob: -12.750260353088379
    9. '```' → logprob: -13.125260353088379
    10. ']' → logprob: -14.250260353088379

Token 1316: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14279627799987793
    2. '0' → logprob: -2.017796277999878
    3. ' [' → logprob: -9.642796516418457
    4. '1' → logprob: -11.142796516418457
    5. '][' → logprob: -11.517796516418457
    6. ' ' → logprob: -11.767796516418457
    7. '#' → logprob: -12.017796516418457
    8. '\[' → logprob: -13.142796516418457
    9. '
' → logprob: -13.267796516418457
    10. '[i' → logprob: -13.392796516418457

Token 1317: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3491678237915039
    2. '0' → logprob: -1.224167823791504
    3. '1' → logprob: -7.474167823791504
    4. ' [' → logprob: -9.349167823791504
    5. 'dp' → logprob: -10.849167823791504
    6. '
' → logprob: -11.224167823791504
    7. ' ' → logprob: -11.974167823791504
    8. '#' → logprob: -11.974167823791504
    9. 'po' → logprob: -12.099167823791504
    10. '[i' → logprob: -12.849167823791504

Token 1318: ' et' (ID: 859)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24676059186458588
    2. 'dp' → logprob: -1.621760606765747
    3. '][' → logprob: -3.871760606765747
    4. ' dp' → logprob: -8.871760368347168
    5. ']' → logprob: -9.121760368347168
    6. '(dp' → logprob: -11.621760368347168
    7. '#' → logprob: -11.871760368347168
    8. '_dp' → logprob: -11.996760368347168
    9. '
' → logprob: -12.246760368347168
    10. ' [' → logprob: -12.371760368347168

Token 1319: ' pour' (ID: 1930)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013827897608280182
    2. 'dp' → logprob: -4.888827800750732
    3. '1' → logprob: -5.513827800750732
    4. '3' → logprob: -6.513827800750732
    5. 'po' → logprob: -8.26382827758789
    6. 'j' → logprob: -8.88882827758789
    7. '2' → logprob: -9.01382827758789
    8. '
' → logprob: -9.88882827758789
    9. '[' → logprob: -10.13882827758789
    10. '#' → logprob: -10.76382827758789

Token 1320: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04666395112872124
    2. 'po' → logprob: -3.796663999557495
    3. '1' → logprob: -4.421663761138916
    4. '3' → logprob: -4.546663761138916
    5. '2' → logprob: -7.671663761138916
    6. '
' → logprob: -10.921664237976074
    7. 'k' → logprob: -11.296664237976074
    8. ' po' → logprob: -11.421664237976074
    9. '[' → logprob: -12.671664237976074
    10. '(po' → logprob: -12.921664237976074

Token 1321: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3354399502277374
    2. 'po' → logprob: -1.335439920425415
    3. '1' → logprob: -4.460440158843994
    4. '3' → logprob: -4.710440158843994
    5. '2' → logprob: -7.085440158843994
    6. 'k' → logprob: -7.835440158843994
    7. '[' → logprob: -9.460439682006836
    8. '
' → logprob: -10.585439682006836
    9. ' po' → logprob: -11.585439682006836
    10. '(po' → logprob: -11.960439682006836

Token 1322: ' chiffre' (ID: 107420)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08209722489118576
    2. '[' → logprob: -2.582097291946411
    3. ']' → logprob: -6.457097053527832
    4. ' ][' → logprob: -6.957097053527832
    5. 'dp' → logprob: -8.332097053527832
    6. ' [' → logprob: -8.832097053527832
    7. '0' → logprob: -9.082097053527832
    8. ']=' → logprob: -10.207097053527832
    9. '#' → logprob: -10.582097053527832
    10. 'po' → logprob: -10.582097053527832

Token 1323: ' non' (ID: 2893)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6687010526657104
    2. '[' → logprob: -1.4187010526657104
    3. 'dp' → logprob: -1.4187010526657104
    4. ']' → logprob: -6.043701171875
    5. ' dp' → logprob: -7.918701171875
    6. '#' → logprob: -8.293701171875
    7. '0' → logprob: -9.168701171875
    8. '
' → logprob: -9.293701171875
    9. ' ][' → logprob: -9.543701171875
    10. ' [' → logprob: -10.168701171875

Token 1324: '-z' (ID: 16826)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.30397191643714905
    2. 'zero' → logprob: -2.928972005844116
    3. 'used' → logprob: -3.053972005844116
    4. 'z' → logprob: -3.178972005844116
    5. 'po' → logprob: -3.303972005844116
    6. 'dé' → logprob: -4.428971767425537
    7. 'de' → logprob: -5.553971767425537
    8. 'd' → logprob: -6.053971767425537
    9. 'con' → logprob: -6.053971767425537
    10. 'j' → logprob: -6.053971767425537

Token 1325: 'éro' (ID: 28155)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.23518091440200806
    2. '#' → logprob: -2.9851808547973633
    3. 'éro' → logprob: -2.9851808547973633
    4. 'éros' → logprob: -3.7351808547973633
    5. '```' → logprob: -3.8601808547973633
    6. 'ros' → logprob: -4.360180854797363
    7. 'e' → logprob: -4.985180854797363
    8. 'r' → logprob: -5.235180854797363
    9. '_ro' → logprob: -5.485180854797363
    10. '
' → logprob: -5.735180854797363

Token 1326: ' est' (ID: 893)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.043473780155181885
    2. '[' → logprob: -3.293473720550537
    3. ' dp' → logprob: -6.168473720550537
    4. ']' → logprob: -6.168473720550537
    5. '][' → logprob: -6.918473720550537
    6. '
' → logprob: -9.543474197387695
    7. '(dp' → logprob: -10.043474197387695
    8. '   ' → logprob: -11.043474197387695
    9. '_dp' → logprob: -11.293474197387695
    10. '.dp' → logprob: -11.418474197387695

Token 1327: ' bien' (ID: 5340)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.48411673307418823
    2. 'dp' → logprob: -0.9841167330741882
    3. '0' → logprob: -4.859116554260254
    4. ' dp' → logprob: -7.234116554260254
    5. '=' → logprob: -7.484116554260254
    6. ' ' → logprob: -7.859116554260254
    7. 'po' → logprob: -8.109116554260254
    8. ' =' → logprob: -8.734116554260254
    9. '   ' → logprob: -10.109116554260254
    10. '[' → logprob: -11.484116554260254

Token 1328: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43015944957733154
    2. 'dp' → logprob: -1.1801594495773315
    3. '=' → logprob: -4.055159568786621
    4. '0' → logprob: -4.055159568786621
    5. '[' → logprob: -5.680159568786621
    6. 'set' → logprob: -6.305159568786621
    7. 'po' → logprob: -6.680159568786621
    8. ' =' → logprob: -8.055159568786621
    9. ' dp' → logprob: -8.180159568786621
    10. ' ' → logprob: -8.305159568786621

Token 1329: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010201864643022418
    2. 'dp' → logprob: -7.0010199546813965
    3. '0' → logprob: -9.501020431518555
    4. ' ' → logprob: -11.251020431518555
    5. 'po' → logprob: -11.376020431518555
    6. '=' → logprob: -12.251020431518555
    7. ' =' → logprob: -13.751020431518555
    8. '[' → logprob: -14.001020431518555
    9. ' dp' → logprob: -14.251020431518555
    10. 'set' → logprob: -14.376020431518555

Token 1330: ' ;' (ID: 4605)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00019781860464718193
    2. '
' → logprob: -9.125197410583496
    3. ']' → logprob: -9.625197410583496
    4. ' dp' → logprob: -11.750197410583496
    5. '[' → logprob: -12.125197410583496
    6. 'for' → logprob: -13.500197410583496
    7. '(dp' → logprob: -13.500197410583496
    8. '][' → logprob: -13.625197410583496
    9. '.dp' → logprob: -14.125197410583496
    10. '=' → logprob: -14.250197410583496

Token 1331: ' il' (ID: 1793)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -5.88418151892256e-05
    2. ' dp' → logprob: -10.375059127807617
    3. '0' → logprob: -11.750059127807617
    4. '#' → logprob: -12.000059127807617
    5. 'for' → logprob: -12.625059127807617
    6. ']' → logprob: -12.750059127807617
    7. ')' → logprob: -13.250059127807617
    8. '
' → logprob: -13.625059127807617
    9. '[' → logprob: -14.250059127807617
    10. '(dp' → logprob: -14.500059127807617

Token 1332: ' n' (ID: 297)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2863001525402069
    2. ']' → logprob: -2.2863001823425293
    3. '=' → logprob: -3.0363001823425293
    4. '[' → logprob: -3.2863001823425293
    5. ']=' → logprob: -3.4113001823425293
    6. '#' → logprob: -4.536300182342529
    7. '][' → logprob: -4.786300182342529
    8. '0' → logprob: -6.161300182342529
    9. ' dp' → logprob: -6.661300182342529
    10. ' =' → logprob: -6.786300182342529

Token 1333: ''y' (ID: 27913)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9521355628967285
    2. '=' → logprob: -1.4521355628967285
    3. '[' → logprob: -1.7021355628967285
    4. ']' → logprob: -2.5771355628967285
    5. ']=' → logprob: -2.5771355628967285
    6. '][' → logprob: -3.7021355628967285
    7. '0' → logprob: -4.8271355628967285
    8. ']+=' → logprob: -6.0771355628967285
    9. ' =' → logprob: -6.2021355628967285
    10. ',' → logprob: -6.5771355628967285

Token 1334: ' a' (ID: 261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5037903785705566
    2. 's' → logprob: -1.5037903785705566
    3. 'a' → logprob: -1.5037903785705566
    4. 'pas' → logprob: -2.1287903785705566
    5. '#' → logprob: -2.5037903785705566
    6. ' a' → logprob: -3.5037903785705566
    7. 'is' → logprob: -4.378790378570557
    8. 'n' → logprob: -4.628790378570557
    9. 'dp' → logprob: -4.753790378570557
    10. 'initialized' → logprob: -4.878790378570557

Token 1335: ' aucune' (ID: 51173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.7338634133338928
    2. '0' → logprob: -1.483863353729248
    3. '=' → logprob: -2.858863353729248
    4. '1' → logprob: -3.108863353729248
    5. 'dp' → logprob: -3.233863353729248
    6. ' pas' → logprob: -3.983863353729248
    7. 's' → logprob: -3.983863353729248
    8. '#' → logprob: -4.233863353729248
    9. 'auc' → logprob: -4.233863353729248
    10. 'a' → logprob: -4.608863353729248

Token 1336: ' façon' (ID: 33381)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.021753869950771332
    2. '0' → logprob: -4.521753787994385
    3. '[' → logprob: -5.896753787994385
    4. ' dp' → logprob: -5.896753787994385
    5. '1' → logprob: -6.646753787994385
    6. 'po' → logprob: -7.021753787994385
    7. 's' → logprob: -7.021753787994385
    8. ']' → logprob: -7.271753787994385
    9. '#' → logprob: -7.646753787994385
    10. '[
' → logprob: -8.646754264831543

Token 1337: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1735415905714035
    2. '=' → logprob: -2.67354154586792
    3. '[' → logprob: -3.04854154586792
    4. ' to' → logprob: -4.54854154586792
    5. 'to' → logprob: -4.54854154586792
    6. '0' → logprob: -5.67354154586792
    7. ')' → logprob: -5.67354154586792
    8. ' =' → logprob: -5.67354154586792
    9. '
' → logprob: -6.29854154586792
    10. ']' → logprob: -6.29854154586792

Token 1338: ' former' (ID: 9254)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.8518235683441162
    2. '0' → logprob: -1.4768235683441162
    3. 'mettre' → logprob: -1.4768235683441162
    4. '1' → logprob: -3.226823568344116
    5. 'arr' → logprob: -4.101823806762695
    6. ' faire' → logprob: -4.476823806762695
    7. ' mettre' → logprob: -4.476823806762695
    8. 'placer' → logprob: -4.851823806762695
    9. 'avoir' → logprob: -5.101823806762695
    10. '
' → logprob: -5.476823806762695

Token 1339: ' un' (ID: 537)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7282357811927795
    2. '0' → logprob: -1.3532357215881348
    3. 'dp' → logprob: -1.3532357215881348
    4. ' ' → logprob: -9.103236198425293
    5. ' dp' → logprob: -9.478236198425293
    6. 's' → logprob: -9.603236198425293
    7. '#' → logprob: -9.978236198425293
    8. '[' → logprob: -10.353236198425293
    9. '100' → logprob: -10.853236198425293
    10. '
' → logprob: -11.353236198425293

Token 1340: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.15725480020046234
    2. 'number' → logprob: -2.532254695892334
    3. '1' → logprob: -2.907254695892334
    4. '0' → logprob: -5.657254695892334
    5. ' nombre' → logprob: -5.657254695892334
    6. 'non' → logprob: -7.157254695892334
    7. 'chaine' → logprob: -7.657254695892334
    8. 'num' → logprob: -7.782254695892334
    9. 's' → logprob: -7.907254695892334
    10. 'n' → logprob: -8.032255172729492

Token 1341: ' en' (ID: 469)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0003811025235336274
    2. '
' → logprob: -8.750381469726562
    3. ']' → logprob: -9.750381469726562
    4. ' dp' → logprob: -10.500381469726562
    5. '[' → logprob: -10.750381469726562
    6. '0' → logprob: -11.000381469726562
    7. '=' → logprob: -11.000381469726562
    8. 'for' → logprob: -11.375381469726562
    9. '#' → logprob: -11.625381469726562
    10. ')' → logprob: -11.750381469726562

Token 1342: ' part' (ID: 997)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002935983007773757
    2. '0' → logprob: -6.127935886383057
    3. '#' → logprob: -8.127936363220215
    4. '```' → logprob: -9.752936363220215
    5. ' dp' → logprob: -10.127936363220215
    6. '1' → logprob: -10.627936363220215
    7. 'd' → logprob: -11.127936363220215
    8. 'f' → logprob: -11.127936363220215
    9. 'val' → logprob: -11.127936363220215
    10. 'ce' → logprob: -11.127936363220215

Token 1343: 'ant' (ID: 493)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008853754960000515
    2. '   ' → logprob: -6.258853912353516
    3. 'out' → logprob: -6.383853912353516
    4. '#' → logprob: -6.633853912353516
    5. ' dp' → logprob: -7.508853912353516
    6. 'vide' → logprob: -7.633853912353516
    7. 'ant' → logprob: -7.758853912353516
    8. 'à' → logprob: -8.133853912353516
    9. '       ' → logprob: -8.258853912353516
    10. '0' → logprob: -8.633853912353516

Token 1344: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20529070496559143
    2. '[' → logprob: -1.705290675163269
    3. 'from' → logprob: -6.080290794372559
    4. ' dp' → logprob: -7.205290794372559
    5. '0' → logprob: -8.330290794372559
    6. ' [' → logprob: -8.705290794372559
    7. '][' → logprob: -9.330290794372559
    8. '(dp' → logprob: -9.455290794372559
    9. 's' → logprob: -10.330290794372559
    10. ']' → logprob: -10.455290794372559

Token 1345: ' rien' (ID: 23082)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3818214237689972
    2. 'dp' → logprob: -1.2568213939666748
    3. '1' → logprob: -3.631821393966675
    4. '[' → logprob: -5.631821632385254
    5. '#' → logprob: -6.506821632385254
    6. '```' → logprob: -8.131821632385254
    7. 'po' → logprob: -9.006821632385254
    8. ' ' → logprob: -9.006821632385254
    9. '...' → logprob: -9.006821632385254
    10. 'zero' → logprob: -9.256821632385254

Token 1346: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.5213274309644476e-05
    2. ']' → logprob: -11.375015258789062
    3. ' dp' → logprob: -13.750015258789062
    4. ')' → logprob: -14.250015258789062
    5. '
' → logprob: -14.250015258789062
    6. '[' → logprob: -15.250015258789062
    7. '][' → logprob: -15.375015258789062
    8. 'for' → logprob: -15.875015258789062
    9. '#' → logprob: -16.000015258789062
    10. '0' → logprob: -16.250015258789062

Token 1347: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -5.512236498361744e-07
    2. '#' → logprob: -15.125000953674316
    3. 'for' → logprob: -15.625000953674316
    4. ' dp' → logprob: -16.375
    5. ']' → logprob: -18.125
    6. '(dp' → logprob: -18.25
    7. '0' → logprob: -18.25
    8. '
' → logprob: -19.0
    9. '	dp' → logprob: -19.125
    10. '[' → logprob: -19.5

Token 1348: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0486019104719162
    2. '0' → logprob: -3.0486018657684326
    3. '[' → logprob: -11.798602104187012
    4. '```' → logprob: -14.173602104187012
    5. '_' → logprob: -14.236102104187012
    6. '=' → logprob: -14.236102104187012
    7. '
' → logprob: -14.736102104187012
    8. ' =' → logprob: -14.923602104187012
    9. '１' → logprob: -15.236102104187012
    10. ' ' → logprob: -15.298602104187012

Token 1349: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.341087570646778e-05
    2. '][' → logprob: -9.375093460083008
    3. ' [' → logprob: -12.625093460083008
    4. ']' → logprob: -13.500093460083008
    5. '0' → logprob: -13.750093460083008
    6. '=' → logprob: -14.125093460083008
    7. '
' → logprob: -15.000093460083008
    8. ' =' → logprob: -15.125093460083008
    9. ')[' → logprob: -15.250093460083008
    10. '}[' → logprob: -15.375093460083008

Token 1350: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '[' → logprob: -16.125001907348633
    4. '1' → logprob: -16.875001907348633
    5. '00' → logprob: -17.500001907348633
    6. '   ' → logprob: -18.375001907348633
    7. '000' → logprob: -18.437501907348633
    8. '۰' → logprob: -18.437501907348633
    9. '
' → logprob: -18.500001907348633
    10. '#' → logprob: -18.500001907348633

Token 1351: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00017791526624932885
    2. ']' → logprob: -9.375178337097168
    3. '[' → logprob: -9.500178337097168
    4. ' ][' → logprob: -11.000178337097168
    5. '0' → logprob: -14.625178337097168
    6. ']=' → logprob: -15.125178337097168
    7. '
' → logprob: -15.750178337097168
    8. '   ' → logprob: -15.750178337097168
    9. '1' → logprob: -16.87517738342285
    10. ']
' → logprob: -17.00017738342285

Token 1352: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0484450437361374e-05
    2. '3' → logprob: -10.750040054321289
    3. '1' → logprob: -11.000040054321289
    4. '2' → logprob: -13.750040054321289
    5. 'po' → logprob: -14.125040054321289
    6. 'k' → logprob: -15.000040054321289
    7. ' ' → logprob: -17.00004005432129
    8. '4' → logprob: -17.25004005432129
    9. '
' → logprob: -18.18754005432129
    10. '۰' → logprob: -18.81254005432129

Token 1353: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005557744298130274
    2. ']=' → logprob: -7.500555992126465
    3. ']+=' → logprob: -13.125555992126465
    4. ' ]' → logprob: -14.500555992126465
    5. '=' → logprob: -15.500555992126465
    6. ')' → logprob: -18.87555503845215
    7. ']
' → logprob: -19.62555503845215
    8. ']={' → logprob: -19.62555503845215
    9. ']==' → logprob: -20.00055503845215
    10. ']=(' → logprob: -20.37555503845215

Token 1354: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00018041854491457343
    2. ' =' → logprob: -8.6251802444458
    3. '+=' → logprob: -14.2501802444458
    4. ']=' → logprob: -17.000181198120117
    5. '=True' → logprob: -17.500181198120117
    6. '=}' → logprob: -17.625181198120117
    7. '＝' → logprob: -17.750181198120117
    8. '=

' → logprob: -18.000181198120117
    9. '.=' → logprob: -18.500181198120117
    10. ']' → logprob: -18.875181198120117

Token 1355: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '0' → logprob: -13.375001907348633
    3. ' ' → logprob: -19.000001907348633
    4. '１' → logprob: -21.750001907348633
    5. ' ' → logprob: -22.125001907348633
    6. '۱' → logprob: -22.500001907348633
    7. 'int' → logprob: -22.875001907348633
    8. '' → logprob: -23.250001907348633
    9. '   ' → logprob: -23.750001907348633
    10. '﻿' → logprob: -23.750001907348633

Token 1356: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. '0' → logprob: -11.50001049041748
    3. ' ' → logprob: -18.000009536743164
    4. '１' → logprob: -20.875009536743164
    5. 'int' → logprob: -21.500009536743164
    6. ' ' → logprob: -21.812509536743164
    7. 'True' → logprob: -22.250009536743164
    8. '#' → logprob: -22.375009536743164
    9. 'true' → logprob: -22.500009536743164
    10. '۱' → logprob: -22.500009536743164

Token 1357: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.34035250544548035
    2. '<|end|>' → logprob: -1.4653525352478027
    3. '
' → logprob: -2.9653525352478027
    4. ')' → logprob: -6.215352535247803
    5. '<|end|>' → logprob: -7.215352535247803
    6. '#' → logprob: -7.215352535247803
    7. '(dp' → logprob: -7.340352535247803
    8. ' dp' → logprob: -8.090352058410645
    9. '[' → logprob: -8.340352058410645
    10. '	dp' → logprob: -8.340352058410645

Token 1358: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00047654795343987644
    2. '<|end|>' → logprob: -8.000476837158203
    3. 'po' → logprob: -9.500476837158203
    4. ' dp' → logprob: -11.250476837158203
    5. 'd' → logprob: -11.625476837158203
    6. '#' → logprob: -11.625476837158203
    7. '	dp' → logprob: -11.750476837158203
    8. '(dp' → logprob: -11.875476837158203
    9. 'n' → logprob: -12.250476837158203
    10. '```' → logprob: -12.625476837158203

Token 1359: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.320199877838604e-07
    2. '#' → logprob: -15.75
    3. 'po' → logprob: -17.25
    4. '0' → logprob: -17.5
    5. ' dp' → logprob: -17.5
    6. 'for' → logprob: -18.125
    7. '	dp' → logprob: -18.625
    8. '
' → logprob: -19.0
    9. '```' → logprob: -19.0
    10. 'd' → logprob: -19.875

Token 1360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. '0' → logprob: -13.125003814697266
    3. '[' → logprob: -13.750003814697266
    4. '１' → logprob: -15.687503814697266
    5. '
' → logprob: -16.000003814697266
    6. '_' → logprob: -17.312503814697266
    7. '۱' → logprob: -17.312503814697266
    8. '১' → logprob: -17.375003814697266
    9. '```' → logprob: -17.375003814697266
    10. 's' → logprob: -17.437503814697266

Token 1361: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5776860184123507e-06
    2. '1' → logprob: -13.50000286102295
    3. '0' → logprob: -14.50000286102295
    4. '```' → logprob: -15.12500286102295
    5. '][' → logprob: -15.75000286102295
    6. ' [' → logprob: -17.000001907348633
    7. '#' → logprob: -17.625001907348633
    8. '   ' → logprob: -17.875001907348633
    9. '<|end|>' → logprob: -18.000001907348633
    10. '[
' → logprob: -18.125001907348633

Token 1362: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024799390230327845
    2. '[' → logprob: -6.0024800300598145
    3. ' ' → logprob: -12.377479553222656
    4. '1' → logprob: -16.377479553222656
    5. '```' → logprob: -17.752479553222656
    6. ' [' → logprob: -18.002479553222656
    7. '#' → logprob: -18.877479553222656
    8. '   ' → logprob: -18.877479553222656
    9. '
' → logprob: -19.002479553222656
    10. 's' → logprob: -19.002479553222656

Token 1363: ''ind' (ID: 82245)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12718185782432556
    2. '[' → logprob: -2.1271817684173584
    3. ' ' → logprob: -9.252182006835938
    4. ' [' → logprob: -9.877182006835938
    5. '][' → logprob: -10.127182006835938
    6. '1' → logprob: -10.752182006835938
    7. '
' → logprob: -12.002182006835938
    8. '`' → logprob: -12.127182006835938
    9. 's' → logprob: -12.127182006835938
    10. '```' → logprob: -12.502182006835938

Token 1364: 'ice' (ID: 603)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7597168684005737
    2. '[' → logprob: -0.7597168684005737
    3. 'ex' → logprob: -2.8847169876098633
    4. 'dex' → logprob: -6.134716987609863
    5. 'i' → logprob: -6.509716987609863
    6. 'x' → logprob: -6.759716987609863
    7. ']' → logprob: -7.384716987609863
    8. '][' → logprob: -7.634716987609863
    9. 'ice' → logprob: -7.759716987609863
    10. 'é' → logprob: -7.884716987609863

Token 1365: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001170132018160075
    2. '[' → logprob: -9.125117301940918
    3. ' ' → logprob: -11.750117301940918
    4. '```' → logprob: -15.750117301940918
    5. ' [' → logprob: -17.6251163482666
    6. '1' → logprob: -17.8751163482666
    7. '(' → logprob: -18.3751163482666
    8. '#' → logprob: -18.5001163482666
    9. '０' → logprob: -18.7501163482666
    10. '`' → logprob: -18.7501163482666

Token 1366: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.250001907348633
    3. ' ' → logprob: -15.625001907348633
    4. '```' → logprob: -18.375001907348633
    5. '1' → logprob: -20.000001907348633
    6. '#' → logprob: -20.750001907348633
    7. '۰' → logprob: -21.375001907348633
    8. '...' → logprob: -21.562501907348633
    9. '０' → logprob: -21.812501907348633
    10. '(' → logprob: -21.812501907348633

Token 1367: ' et' (ID: 859)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00023250321100931615
    2. '][' → logprob: -8.375232696533203
    3. '0' → logprob: -13.750232696533203
    4. '```' → logprob: -15.375232696533203
    5. ')[' → logprob: -15.625232696533203
    6. '1' → logprob: -16.250232696533203
    7. '#' → logprob: -16.500232696533203
    8. ' [' → logprob: -16.500232696533203
    9. 'dp' → logprob: -16.500232696533203
    10. '[][' → logprob: -16.750232696533203

Token 1368: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03808784484863281
    2. '0' → logprob: -3.288087844848633
    3. '1' → logprob: -10.163087844848633
    4. ' [' → logprob: -13.288087844848633
    5. '```' → logprob: -13.538087844848633
    6. '][' → logprob: -14.163087844848633
    7. '3' → logprob: -14.413087844848633
    8. '
' → logprob: -14.413087844848633
    9. ' ' → logprob: -14.663087844848633
    10. '[
' → logprob: -15.163087844848633

Token 1369: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005473146447911859
    2. '1' → logprob: -7.625547409057617
    3. '[' → logprob: -10.750547409057617
    4. 'po' → logprob: -10.875547409057617
    5. 'k' → logprob: -12.000547409057617
    6. ' ' → logprob: -12.625547409057617
    7. 'dp' → logprob: -13.500547409057617
    8. 's' → logprob: -13.500547409057617
    9. '```' → logprob: -13.875547409057617
    10. '
' → logprob: -14.000547409057617

Token 1370: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004329341172706336
    2. '1' → logprob: -7.750432968139648
    3. '3' → logprob: -14.500432968139648
    4. '
' → logprob: -14.750432968139648
    5. 'k' → logprob: -14.750432968139648
    6. '[' → logprob: -15.125432968139648
    7. ' ' → logprob: -15.750432968139648
    8. '4' → logprob: -16.00043296813965
    9. 'po' → logprob: -16.31293296813965
    10. '(' → logprob: -17.18793296813965

Token 1371: ' chiffre' (ID: 107420)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.47505494952201843
    2. '[' → logprob: -0.9750549793243408
    3. '0' → logprob: -7.100054740905762
    4. ' ][' → logprob: -10.100054740905762
    5. ']' → logprob: -10.350054740905762
    6. ' [' → logprob: -11.350054740905762
    7. 'po' → logprob: -11.725054740905762
    8. '1' → logprob: -11.850054740905762
    9. '[][' → logprob: -11.850054740905762
    10. '#' → logprob: -12.475054740905762

Token 1372: ' non' (ID: 2893)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5236796736717224
    2. '][' → logprob: -0.8986796736717224
    3. '0' → logprob: -8.273679733276367
    4. '1' → logprob: -8.398679733276367
    5. ']' → logprob: -10.273679733276367
    6. '```' → logprob: -11.648679733276367
    7. ' ][' → logprob: -12.273679733276367
    8. '#' → logprob: -12.273679733276367
    9. ')[' → logprob: -12.523679733276367
    10. '=' → logprob: -13.023679733276367

Token 1373: '-z' (ID: 16826)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04839805141091347
    2. 'zero' → logprob: -3.923398017883301
    3. '-' → logprob: -4.548398017883301
    4. '-zero' → logprob: -4.673398017883301
    5. '-z' → logprob: -5.423398017883301
    6. 'z' → logprob: -6.173398017883301
    7. '_zero' → logprob: -8.0483980178833
    8. ' zéro' → logprob: -8.5483980178833
    9. '_' → logprob: -8.9233980178833
    10. '=' → logprob: -9.4233980178833

Token 1374: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.011330267414450645
    2. '0' → logprob: -5.6363301277160645
    3. 'ero' → logprob: -6.2613301277160645
    4. 'éros' → logprob: -6.5113301277160645
    5. 'é' → logprob: -6.6363301277160645
    6. '_' → logprob: -7.3863301277160645
    7. 'éo' → logprob: -7.5113301277160645
    8. '=' → logprob: -8.261330604553223
    9. '[' → logprob: -8.386330604553223
    10. ' ' → logprob: -8.636330604553223

Token 1375: ' est' (ID: 893)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.017205024138092995
    2. '][' → logprob: -4.142205238342285
    3. '=' → logprob: -7.267205238342285
    4. ']' → logprob: -8.267205238342285
    5. '0' → logprob: -8.892205238342285
    6. ']=' → logprob: -10.642205238342285
    7. ' =' → logprob: -10.642205238342285
    8. '```' → logprob: -11.392205238342285
    9. 'dp' → logprob: -11.642205238342285
    10. '#' → logprob: -12.642205238342285

Token 1376: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.91732100979425e-05
    2. '=' → logprob: -10.625039100646973
    3. '0' → logprob: -11.750039100646973
    4. ' ' → logprob: -12.250039100646973
    5. ' =' → logprob: -13.250039100646973
    6. 'dp' → logprob: -15.875039100646973
    7. '...' → logprob: -16.37504005432129
    8. '   ' → logprob: -16.75004005432129
    9. 's' → logprob: -17.50004005432129
    10. '[' → logprob: -17.62504005432129

Token 1377: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '0' → logprob: -14.875000953674316
    3. ' ' → logprob: -16.25
    4. '[' → logprob: -18.75
    5. '   ' → logprob: -20.625
    6. '=' → logprob: -20.625
    7. '...' → logprob: -20.8125
    8. '```' → logprob: -21.125
    9. '۱' → logprob: -21.1875
    10. 'dp' → logprob: -21.1875

Token 1378: ' ;' (ID: 4605)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005730479606427252
    2. '
' → logprob: -7.50057315826416
    3. '(dp' → logprob: -11.75057315826416
    4. ' dp' → logprob: -12.00057315826416
    5. '	dp' → logprob: -13.12557315826416
    6. '```' → logprob: -13.37557315826416
    7. '.dp' → logprob: -14.62557315826416
    8. '_dp' → logprob: -14.87557315826416
    9. '=' → logprob: -15.25057315826416
    10. '#' → logprob: -15.37557315826416

Token 1379: ' il' (ID: 1793)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0002707529056351632
    2. ' dp' → logprob: -9.50027084350586
    3. '<|end|>' → logprob: -9.62527084350586
    4. '1' → logprob: -9.75027084350586
    5. '0' → logprob: -10.62527084350586
    6. '#' → logprob: -10.75027084350586
    7. '(dp' → logprob: -12.00027084350586
    8. '
' → logprob: -12.25027084350586
    9. '	dp' → logprob: -13.00027084350586
    10. '```' → logprob: -13.37527084350586

Token 1380: ' y' (ID: 342)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1381: ' a' (ID: 261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007597753312438726
    2. ' =' → logprob: -5.007597923278809
    3. '+=' → logprob: -8.132597923278809
    4. '<|end|>' → logprob: -8.632597923278809
    5. '[' → logprob: -9.632597923278809
    6. ')' → logprob: -9.632597923278809
    7. ' ' → logprob: -10.007597923278809
    8. '.' → logprob: -10.007597923278809
    9. '#' → logprob: -10.132597923278809
    10. ' +=' → logprob: -10.132597923278809

Token 1382: ' exactement' (ID: 108701)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018863992590922862
    2. 'dp' → logprob: -9.125188827514648
    3. ' ' → logprob: -9.750188827514648
    4. '
' → logprob: -11.875188827514648
    5. '0' → logprob: -12.625188827514648
    6. 'exact' → logprob: -13.000188827514648
    7. '<|end|>' → logprob: -13.125188827514648
    8. 'une' → logprob: -13.250188827514648
    9. 'd' → logprob: -14.500188827514648
    10. '```' → logprob: -14.750188827514648

Token 1383: ' une' (ID: 2463)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024427161552011967
    2. 'une' → logprob: -7.252442836761475
    3. ' ' → logprob: -7.377442836761475
    4. '<|end|>' → logprob: -7.627442836761475
    5. 'one' → logprob: -8.127442359924316
    6. '0' → logprob: -9.752442359924316
    7. '```' → logprob: -10.002442359924316
    8. ' une' → logprob: -10.002442359924316
    9. 'dp' → logprob: -10.502442359924316
    10. 'exact' → logprob: -10.502442359924316

Token 1384: ' façon' (ID: 33381)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1385: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00700141629204154
    2. '<|end|>' → logprob: -5.5070013999938965
    3. 'to' → logprob: -6.7570013999938965
    4. '(dp' → logprob: -7.8820013999938965
    5. ' dp' → logprob: -8.882001876831055
    6. '   ' → logprob: -8.882001876831055
    7. '[' → logprob: -8.882001876831055
    8. '_dp' → logprob: -9.007001876831055
    9. ')' → logprob: -9.132001876831055
    10. '1' → logprob: -9.257001876831055

Token 1386: ' former' (ID: 9254)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.15596990287303925
    2. '1' → logprob: -2.5309698581695557
    3. 'former' → logprob: -3.7809698581695557
    4. 'form' → logprob: -3.7809698581695557
    5. ' faire' → logprob: -5.030970096588135
    6. 'cho' → logprob: -5.405970096588135
    7. 'mettre' → logprob: -5.405970096588135
    8. 'dp' → logprob: -7.030970096588135
    9. 'penser' → logprob: -7.280970096588135
    10. '0' → logprob: -8.030969619750977

Token 1387: ' un' (ID: 537)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016055485233664513
    2. 'dp' → logprob: -4.141055583953857
    3. ' ' → logprob: -11.7660551071167
    4. '0' → logprob: -12.5160551071167
    5. 'une' → logprob: -12.8910551071167
    6. ' dp' → logprob: -13.1410551071167
    7. 'un' → logprob: -13.8910551071167
    8. '```' → logprob: -14.0160551071167
    9. '...' → logprob: -14.1410551071167
    10. 'l' → logprob: -14.5160551071167

Token 1388: ' "' (ID: 392)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.17215454578399658
    2. '1' → logprob: -1.9221545457839966
    3. 'number' → logprob: -5.047154426574707
    4. ' nombre' → logprob: -5.922154426574707
    5. '0' → logprob: -6.297154426574707
    6. 'num' → logprob: -8.172154426574707
    7. 'name' → logprob: -8.297154426574707
    8. 'cho' → logprob: -9.547154426574707
    9. 'chaine' → logprob: -9.797154426574707
    10. '```' → logprob: -9.922154426574707

Token 1389: 'nombre' (ID: 28576)
  Prédit: 'nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.26070404052734375
    2. 'number' → logprob: -2.2607040405273438
    3. '1' → logprob: -2.3857040405273438
    4. '0' → logprob: -3.6357040405273438
    5. ' nombre' → logprob: -5.760704040527344
    6. 'num' → logprob: -7.260704040527344
    7. '```' → logprob: -7.260704040527344
    8. 'cho' → logprob: -7.385704040527344
    9. 'name' → logprob: -7.635704040527344
    10. 'n' → logprob: -8.260704040527344

Token 1390: ' vide' (ID: 21835)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1391: '"
' (ID: 1092)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14439870417118073
    2. '(dp' → logprob: -3.7693986892700195
    3. '0' → logprob: -4.1443986892700195
    4. '[' → logprob: -4.2693986892700195
    5. '
' → logprob: -4.2693986892700195
    6. '1' → logprob: -4.3943986892700195
    7. ']' → logprob: -4.7693986892700195
    8. '"' → logprob: -4.8943986892700195
    9. ')' → logprob: -4.8943986892700195
    10. '<|end|>' → logprob: -4.8943986892700195

Token 1392: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.127333340875339e-06
    2. '(dp' → logprob: -13.125003814697266
    3. ' dp' → logprob: -13.875003814697266
    4. '
' → logprob: -14.500003814697266
    5. '```' → logprob: -14.875003814697266
    6. '	dp' → logprob: -16.250003814697266
    7. '#' → logprob: -16.250003814697266
    8. '0' → logprob: -17.625003814697266
    9. '.dp' → logprob: -17.750003814697266
    10. '[' → logprob: -17.875003814697266

Token 1393: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.750001907348633
    3. 's' → logprob: -15.312501907348633
    4. '0' → logprob: -15.437501907348633
    5. '```' → logprob: -16.187501907348633
    6. '_' → logprob: -16.250001907348633
    7. '
' → logprob: -16.625001907348633
    8. '' → logprob: -17.062501907348633
    9. '１' → logprob: -17.187501907348633
    10. '=' → logprob: -17.187501907348633

Token 1394: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. '0' → logprob: -14.125001907348633
    3. ' [' → logprob: -14.625001907348633
    4. '][' → logprob: -15.125001907348633
    5. '```' → logprob: -15.625001907348633
    6. '
' → logprob: -16.625001907348633
    7. '[][' → logprob: -16.875001907348633
    8. ')[' → logprob: -17.125001907348633
    9. '=' → logprob: -17.125001907348633
    10. '\[' → logprob: -17.500001907348633

Token 1395: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.375
    3. ' ' → logprob: -15.625
    4. '][' → logprob: -17.0
    5. '```' → logprob: -19.75
    6. '
' → logprob: -20.375
    7. ']' → logprob: -20.75
    8. '۰' → logprob: -20.875
    9. '０' → logprob: -21.5
    10. '   ' → logprob: -21.625

Token 1396: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -4.453737710718997e-05
    2. '[' → logprob: -11.000044822692871
    3. ']' → logprob: -11.000044822692871
    4. ' ][' → logprob: -11.500044822692871
    5. '0' → logprob: -14.625044822692871
    6. '   ' → logprob: -16.375043869018555
    7. '"][' → logprob: -16.500043869018555
    8. ''][' → logprob: -16.750043869018555
    9. ']
' → logprob: -17.375043869018555
    10. '1' → logprob: -17.375043869018555

Token 1397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001705175032839179
    2. '1' → logprob: -6.376705169677734
    3. ' ' → logprob: -12.751705169677734
    4. '```' → logprob: -17.751705169677734
    5. ']' → logprob: -17.876705169677734
    6. '۰' → logprob: -18.939205169677734
    7. '[' → logprob: -19.001705169677734
    8. '
' → logprob: -19.314205169677734
    9. '000' → logprob: -19.501705169677734
    10. '   ' → logprob: -19.564205169677734

Token 1398: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.5954712075181305e-05
    2. ']=' → logprob: -10.250036239624023
    3. ' ]' → logprob: -15.125036239624023
    4. '=' → logprob: -15.250036239624023
    5. ')' → logprob: -18.625036239624023
    6. ']
' → logprob: -19.750036239624023
    7. '']' → logprob: -20.000036239624023
    8. ']+=' → logprob: -21.375036239624023
    9. ' =' → logprob: -21.750036239624023
    10. '"]' → logprob: -21.875036239624023

Token 1399: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.5491004129871726e-05
    2. ' =' → logprob: -10.000045776367188
    3. ']=' → logprob: -19.500045776367188
    4. '＝' → logprob: -20.125045776367188
    5. ']' → logprob: -20.750045776367188
    6. '.=' → logprob: -21.250045776367188
    7. '[' → logprob: -21.250045776367188
    8. '=

' → logprob: -21.500045776367188
    9. '+=' → logprob: -22.000045776367188
    10. '=True' → logprob: -22.000045776367188

Token 1400: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '```' → logprob: -22.25
    4. '１' → logprob: -23.0
    5. '   ' → logprob: -23.25
    6. '۱' → logprob: -23.375
    7. '0' → logprob: -23.625
    8. '' → logprob: -24.25
    9. '`' → logprob: -24.25
    10. '১' → logprob: -24.625

Token 1401: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '１' → logprob: -21.75
    4. '0' → logprob: -22.25
    5. '۱' → logprob: -22.625
    6. '   ' → logprob: -22.75
    7. '' → logprob: -22.875
    8. '```' → logprob: -23.625
    9. '১' → logprob: -23.75
    10. '`' → logprob: -24.5625

Token 1402: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004189946048427373
    2. ' for' → logprob: -8.375418663024902
    3. 'i' → logprob: -10.000418663024902
    4. '<|end|>' → logprob: -10.500418663024902
    5. '#' → logprob: -10.625418663024902
    6. ')' → logprob: -10.625418663024902
    7. 'length' → logprob: -10.750418663024902
    8. '
' → logprob: -11.000418663024902
    9. 'n' → logprob: -11.375418663024902
    10. 'l' → logprob: -12.250418663024902

Token 1403: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.611323624383658e-05
    2. ' for' → logprob: -10.250065803527832
    3. '#' → logprob: -11.125065803527832
    4. 'l' → logprob: -11.875065803527832
    5. 'i' → logprob: -12.375065803527832
    6. 'length' → logprob: -12.750065803527832
    7. 'len' → logprob: -14.750065803527832
    8. 'fo' → logprob: -15.500065803527832
    9. 'm' → logprob: -15.625065803527832
    10. 'pos' → logprob: -15.875065803527832

Token 1404: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2471589798224159e-05
    2. '#' → logprob: -12.125012397766113
    3. 'i' → logprob: -12.750012397766113
    4. 'l' → logprob: -13.875012397766113
    5. ' for' → logprob: -14.250012397766113
    6. 'length' → logprob: -14.500012397766113
    7. '
' → logprob: -15.250012397766113
    8. 'ans' → logprob: -15.625012397766113
    9. 'm' → logprob: -15.875012397766113
    10. 'pos' → logprob: -15.875012397766113

Token 1405: 'cle' (ID: 3170)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0527186393737793
    2. 'r' → logprob: -3.4277186393737793
    3. 'i' → logprob: -4.052718639373779
    4. ' for' → logprob: -7.552718639373779
    5. '#' → logprob: -8.052719116210938
    6. 'k' → logprob: -8.552719116210938
    7. 'f' → logprob: -8.677719116210938
    8. 'x' → logprob: -9.677719116210938
    9. 't' → logprob: -10.052719116210938
    10. 'c' → logprob: -10.052719116210938

Token 1406: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11306241154670715
    2. ' for' → logprob: -2.2380623817443848
    3. 'i' → logprob: -9.363062858581543
    4. '
' → logprob: -9.363062858581543
    5. ' =' → logprob: -11.863062858581543
    6. '=' → logprob: -11.863062858581543
    7. ' i' → logprob: -11.988062858581543
    8. ':' → logprob: -12.238062858581543
    9. '#' → logprob: -12.363062858581543
    10. '(len' → logprob: -12.363062858581543

Token 1407: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04887200891971588
    2. ' range' → logprob: -3.2988719940185547
    3. 'i' → logprob: -4.548871994018555
    4. ' i' → logprob: -8.798871994018555
    5. 'len' → logprob: -10.673871994018555
    6. '_' → logprob: -12.423871994018555
    7. 'r' → logprob: -12.798871994018555
    8. 'length' → logprob: -13.173871994018555
    9. 'index' → logprob: -13.298871994018555
    10. 'idx' → logprob: -13.923871994018555

Token 1408: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5803000926971436
    2. ' i' → logprob: -0.8303000926971436
    3. ' in' → logprob: -6.330300331115723
    4. 'for' → logprob: -7.705300331115723
    5. 'digit' → logprob: -8.080300331115723
    6. ' _' → logprob: -8.205300331115723
    7. '_' → logprob: -8.330300331115723
    8. ' for' → logprob: -8.705300331115723
    9. 'pos' → logprob: -8.955300331115723
    10. ' digit' → logprob: -9.080300331115723

Token 1409: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6049306988716125
    2. 'in' → logprob: -1.3549306392669678
    3. 'i' → logprob: -2.1049306392669678
    4. 'for' → logprob: -3.3549306392669678
    5. ' i' → logprob: -3.3549306392669678
    6. ' for' → logprob: -6.104930877685547
    7. ',' → logprob: -6.979930877685547
    8. '[i' → logprob: -7.979930877685547
    9. '(i' → logprob: -8.604930877685547
    10. '_' → logprob: -9.104930877685547

Token 1410: ' chiffre' (ID: 107420)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1940903216600418
    2. 's' → logprob: -2.4440903663635254
    3. ' range' → logprob: -2.4440903663635254
    4. ' s' → logprob: -5.944090366363525
    5. ' la' → logprob: -10.069089889526367
    6. 'la' → logprob: -10.069089889526367
    7. 'len' → logprob: -10.319089889526367
    8. 'l' → logprob: -11.444089889526367
    9. 'i' → logprob: -11.444089889526367
    10. 'r' → logprob: -11.694089889526367

Token 1411: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3698389530181885
    2. 'i' → logprob: -2.2448389530181885
    3. 'in' → logprob: -2.3698389530181885
    4. ' in' → logprob: -2.9948389530181885
    5. ' for' → logprob: -3.1198389530181885
    6. ' i' → logprob: -5.494838714599609
    7. ',' → logprob: -5.494838714599609
    8. 'range' → logprob: -6.119838714599609
    9. '(i' → logprob: -6.244838714599609
    10. ':' → logprob: -6.494838714599609

Token 1412: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13013285398483276
    2. 'range' → logprob: -2.6301329135894775
    3. ' range' → logprob: -3.6301329135894775
    4. ' s' → logprob: -3.7551329135894775
    5. ' la' → logprob: -11.255132675170898
    6. 'la' → logprob: -12.130132675170898
    7. 'l' → logprob: -12.630132675170898
    8. '(s' → logprob: -12.755132675170898
    9. ' ' → logprob: -12.880132675170898
    10. 'len' → logprob: -13.130132675170898

Token 1413: ' gauche' (ID: 58367)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0070147947408258915
    2. ' s' → logprob: -5.132014751434326
    3. 'for' → logprob: -7.507014751434326
    4. 'range' → logprob: -8.757015228271484
    5. ' for' → logprob: -8.882015228271484
    6. ' range' → logprob: -9.132015228271484
    7. 'n' → logprob: -9.507015228271484
    8. 'string' → logprob: -11.819515228271484
    9. 'str' → logprob: -12.069515228271484
    10. '```' → logprob: -12.632015228271484

Token 1414: ' vers' (ID: 3640)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7136114835739136
    2. ' in' → logprob: -1.3386114835739136
    3. 'in' → logprob: -2.713611602783203
    4. ' for' → logprob: -2.713611602783203
    5. ' i' → logprob: -3.338611602783203
    6. 'i' → logprob: -3.713611602783203
    7. ',' → logprob: -4.088611602783203
    8. ':' → logprob: -4.213611602783203
    9. 's' → logprob: -4.838611602783203
    10. '(i' → logprob: -5.338611602783203

Token 1415: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7003289461135864
    2. 'la' → logprob: -1.3253289461135864
    3. '1' → logprob: -2.325328826904297
    4. 'le' → logprob: -3.075328826904297
    5. 'range' → logprob: -3.075328826904297
    6. ' la' → logprob: -3.575328826904297
    7. 'i' → logprob: -5.325328826904297
    8. '0' → logprob: -5.450328826904297
    9. 'l' → logprob: -5.575328826904297
    10. ' len' → logprob: -5.950328826904297

Token 1416: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.13536536693572998
    2. 'right' → logprob: -2.1353654861450195
    3. '```' → logprob: -5.6353654861450195
    4. 'd' → logprob: -6.6353654861450195
    5. ' droite' → logprob: -6.7603654861450195
    6. '1' → logprob: -6.7603654861450195
    7. 'haut' → logprob: -8.26036548614502
    8. 'bas' → logprob: -8.26036548614502
    9. '
' → logprob: -8.88536548614502
    10. 'r' → logprob: -9.51036548614502

Token 1417: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014603088609874249
    2. ' for' → logprob: -4.264603137969971
    3. '
' → logprob: -7.889603137969971
    4. ':' → logprob: -10.514602661132812
    5. 'i' → logprob: -11.264602661132812
    6. ')' → logprob: -11.264602661132812
    7. ':
' → logprob: -12.764602661132812
    8. 'n' → logprob: -13.514602661132812
    9. ',' → logprob: -13.514602661132812
    10. 'range' → logprob: -14.014602661132812

Token 1418: 'i' (ID: 72)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9681742191314697
    2. ' range' → logprob: -1.3431742191314697
    3. 'len' → logprob: -1.7181742191314697
    4. ' len' → logprob: -3.0931742191314697
    5. ')' → logprob: -3.2181742191314697
    6. 'for' → logprob: -3.3431742191314697
    7. 'i' → logprob: -3.8431742191314697
    8. ' for' → logprob: -4.468173980712891
    9. '):' → logprob: -4.968173980712891
    10. '):
' → logprob: -5.093173980712891

Token 1419: ' de' (ID: 334)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4369989335536957
    2. ')' → logprob: -1.686998963356018
    3. ' in' → logprob: -2.4369988441467285
    4. 'in' → logprob: -3.6869988441467285
    5. ' +' → logprob: -3.8119988441467285
    6. '):' → logprob: -3.9369988441467285
    7. ',' → logprob: -5.8119988441467285
    8. ')+' → logprob: -5.9369988441467285
    9. ' )' → logprob: -6.3119988441467285
    10. '):
' → logprob: -6.8119988441467285

Token 1420: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.025948522612452507
    2. '1' → logprob: -3.9009485244750977
    3. 'range' → logprob: -6.150948524475098
    4. ' range' → logprob: -6.275948524475098
    5. ' ' → logprob: -6.775948524475098
    6. 'len' → logprob: -8.525948524475098
    7. ' len' → logprob: -10.775948524475098
    8. '```' → logprob: -13.275948524475098
    9. 'i' → logprob: -13.400948524475098
    10. ')' → logprob: -13.525948524475098

Token 1421: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002003580564633012
    2. '1' → logprob: -6.7520036697387695
    3. 'range' → logprob: -7.2520036697387695
    4. ' ' → logprob: -9.62700366973877
    5. ' range' → logprob: -10.00200366973877
    6. 'len' → logprob: -11.50200366973877
    7. 'i' → logprob: -14.37700366973877
    8. '
' → logprob: -14.50200366973877
    9. '```' → logprob: -15.25200366973877
    10. ')' → logprob: -15.37700366973877

Token 1422: ' jusqu' (ID: 21961)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.162329912185669
    2. ')' → logprob: -1.912329912185669
    3. ' à' → logprob: -2.537329912185669
    4. '):
' → logprob: -2.662329912185669
    5. ' jusqu' → logprob: -2.662329912185669
    6. 'in' → logprob: -2.912329912185669
    7. '):' → logprob: -3.037329912185669
    8. ' in' → logprob: -3.162329912185669
    9. 'to' → logprob: -3.537329912185669
    10. 'à' → logprob: -3.662329912185669

Token 1423: ''à' (ID: 33688)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0844012126326561
    2. '(' → logprob: -2.8344011306762695
    3. ' len' → logprob: -5.3344011306762695
    4. ',' → logprob: -5.5844011306762695
    5. 'len' → logprob: -5.8344011306762695
    6. '=len' → logprob: -5.9594011306762695
    7. ' à' → logprob: -6.3344011306762695
    8. '=' → logprob: -7.0844011306762695
    9. ' to' → logprob: -7.4594011306762695
    10. ')' → logprob: -7.5844011306762695

Token 1424: ' longueur' (ID: 104613)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00014060820103622973
    2. ' len' → logprob: -8.875140190124512
    3. '(len' → logprob: -14.875140190124512
    4. '```' → logprob: -16.250141143798828
    5. 'length' → logprob: -16.500141143798828
    6. 'n' → logprob: -17.250141143798828
    7. '[len' → logprob: -17.375141143798828
    8. 'le' → logprob: -17.625141143798828
    9. 'l' → logprob: -17.625141143798828
    10. '	len' → logprob: -17.875141143798828

Token 1425: ' de' (ID: 334)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.7412745952606201
    2. '(' → logprob: -1.4912745952606201
    3. '+' → logprob: -2.49127459526062
    4. '(n' → logprob: -2.49127459526062
    5. 's' → logprob: -2.99127459526062
    6. '(len' → logprob: -4.241274833679199
    7. '(i' → logprob: -4.366274833679199
    8. 'de' → logprob: -4.616274833679199
    9. '(
' → logprob: -4.991274833679199
    10. 'of' → logprob: -5.116274833679199

Token 1426: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0018290533917024732
    2. ' s' → logprob: -6.376829147338867
    3. '(s' → logprob: -9.001829147338867
    4. 'n' → logprob: -13.501829147338867
    5. ')' → logprob: -14.501829147338867
    6. '```' → logprob: -14.876829147338867
    7. '`s' → logprob: -15.126829147338867
    8. 'str' → logprob: -15.126829147338867
    9. '_s' → logprob: -15.751829147338867
    10. ' ' → logprob: -16.251829147338867

Token 1427: ' incl' (ID: 11368)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09782731533050537
    2. '):
' → logprob: -3.347827434539795
    3. '+' → logprob: -3.472827434539795
    4. ')' → logprob: -3.847827434539795
    5. ':' → logprob: -6.847827434539795
    6. ' ):' → logprob: -6.972827434539795
    7. 's' → logprob: -7.597827434539795
    8. ',' → logprob: -7.597827434539795
    9. ')+' → logprob: -7.597827434539795
    10. ' +' → logprob: -7.847827434539795

Token 1428: 'use' (ID: 1821)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.0642818883061409
    2. 'u' → logprob: -3.064281940460205
    3. '+' → logprob: -5.439281940460205
    4. 'usive' → logprob: -6.439281940460205
    5. 'ude' → logprob: -6.564281940460205
    6. '```' → logprob: -6.564281940460205
    7. '   ' → logprob: -6.939281940460205
    8. 'ué' → logprob: -7.064281940460205
    9. '(' → logprob: -7.564281940460205
    10. '#' → logprob: -7.564281940460205

Token 1429: ')
' (ID: 446)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05542266368865967
    2. '):' → logprob: -3.430422782897949
    3. 'for' → logprob: -4.055422782897949
    4. 'in' → logprob: -6.680422782897949
    5. ':
' → logprob: -6.805422782897949
    6. ' for' → logprob: -7.555422782897949
    7. '):
' → logprob: -8.18042278289795
    8. ')' → logprob: -8.68042278289795
    9. ' :' → logprob: -8.80542278289795
    10. ':i' → logprob: -9.05542278289795

Token 1430: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012589824385941029
    2. ' for' → logprob: -5.012589931488037
    3. 'i' → logprob: -5.512589931488037
    4. ':' → logprob: -6.387589931488037
    5. ')' → logprob: -10.262589454650879
    6. '```' → logprob: -10.762589454650879
    7. '
' → logprob: -11.137589454650879
    8. 'in' → logprob: -11.387589454650879
    9. '[' → logprob: -11.762589454650879
    10. '[i' → logprob: -11.887589454650879

Token 1431: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2811771631240845
    2. ' i' → logprob: -1.4061771631240845
    3. ' in' → logprob: -12.406177520751953
    4. ' ' → logprob: -12.781177520751953
    5. '	i' → logprob: -12.781177520751953
    6. '   ' → logprob: -13.156177520751953
    7. '```' → logprob: -13.156177520751953
    8. ')' → logprob: -13.281177520751953
    9. '_i' → logprob: -13.406177520751953
    10. 'in' → logprob: -13.531177520751953

Token 1432: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28121522068977356
    2. 'in' → logprob: -1.4062151908874512
    3. '	in' → logprob: -10.90621566772461
    4. ' ' → logprob: -11.40621566772461
    5. '1' → logprob: -12.03121566772461
    6. 'In' → logprob: -12.15621566772461
    7. ')' → logprob: -12.40621566772461
    8. '(' → logprob: -12.65621566772461
    9. ',' → logprob: -13.15621566772461
    10. '```' → logprob: -13.28121566772461

Token 1433: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03365181013941765
    2. ' range' → logprob: -3.408651828765869
    3. ' ' → logprob: -13.158651351928711
    4. '   ' → logprob: -13.783651351928711
    5. '(range' → logprob: -13.783651351928711
    6. 'in' → logprob: -14.408651351928711
    7. '	range' → logprob: -15.033651351928711
    8. '1' → logprob: -15.033651351928711
    9. '  ' → logprob: -15.408651351928711
    10. ')' → logprob: -15.533651351928711

Token 1434: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007448295946232975
    2. '(len' → logprob: -7.250744819641113
    3. '1' → logprob: -10.375744819641113
    4. ' (' → logprob: -13.000744819641113
    5. 'len' → logprob: -13.750744819641113
    6. ' ' → logprob: -16.12574577331543
    7. '(
' → logprob: -16.62574577331543
    8. '(length' → logprob: -17.12574577331543
    9. '   ' → logprob: -17.25074577331543
    10. '(l' → logprob: -17.50074577331543

Token 1435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04301003739237785
    2. 'len' → logprob: -3.1680099964141846
    3. '(len' → logprob: -12.418009757995605
    4. '(' → logprob: -13.168009757995605
    5. ' len' → logprob: -13.418009757995605
    6. ' ' → logprob: -13.668009757995605
    7. '   ' → logprob: -15.168009757995605
    8. '0' → logprob: -15.293009757995605
    9. '10' → logprob: -15.855509757995605
    10. 'Len' → logprob: -15.918009757995605

Token 1436: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35007452964782715
    2. ',len' → logprob: -1.7250745296478271
    3. '(len' → logprob: -2.350074529647827
    4. '):' → logprob: -4.225074768066406
    5. '):
' → logprob: -5.850074768066406
    6. ' ,' → logprob: -5.975074768066406
    7. '=len' → logprob: -8.225074768066406
    8. '   ' → logprob: -8.350074768066406
    9. ' len' → logprob: -8.350074768066406
    10. '(' → logprob: -8.475074768066406

Token 1437: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.060365608893335e-05
    2. ' len' → logprob: -10.125041007995605
    3. '   ' → logprob: -15.375041007995605
    4. '(len' → logprob: -15.500041007995605
    5. '[len' → logprob: -18.25004005432129
    6. '	len' → logprob: -18.37504005432129
    7. 'length' → logprob: -19.00004005432129
    8. '
' → logprob: -19.37504005432129
    9. ' ' → logprob: -19.75004005432129
    10. '  ' → logprob: -19.87504005432129

Token 1438: '(str' (ID: 7946)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0002658655575942248
    2. 's' → logprob: -8.500266075134277
    3. '(' → logprob: -9.875266075134277
    4. ' (' → logprob: -11.625266075134277
    5. ' s' → logprob: -13.625266075134277
    6. '(
' → logprob: -14.375266075134277
    7. ' ' → logprob: -17.25026512145996
    8. ')' → logprob: -17.25026512145996
    9. '_s' → logprob: -17.37526512145996
    10. '+' → logprob: -18.12526512145996

Token 1439: '(n' (ID: 2406)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.003588668070733547
    2. '(n' → logprob: -6.128588676452637
    3. 's' → logprob: -6.628588676452637
    4. '(' → logprob: -9.503588676452637
    5. '(
' → logprob: -13.003588676452637
    6. 'n' → logprob: -13.503588676452637
    7. ' (' → logprob: -14.128588676452637
    8. ')' → logprob: -14.253588676452637
    9. ' s' → logprob: -14.753588676452637
    10. '_s' → logprob: -15.503588676452637

Token 1440: '))' (ID: 915)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.4747936725616455
    2. ')' → logprob: -0.9747936725616455
    3. 's' → logprob: -7.849793434143066
    4. '))+' → logprob: -8.974793434143066
    5. '+' → logprob: -9.974793434143066
    6. '))' → logprob: -10.099793434143066
    7. '(s' → logprob: -10.224793434143066
    8. ')):
' → logprob: -10.599793434143066
    9. ')):' → logprob: -11.474793434143066
    10. ')
' → logprob: -11.974793434143066

Token 1441: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011126694269478321
    2. ' +' → logprob: -4.511126518249512
    3. '()+' → logprob: -10.636126518249512
    4. ')+' → logprob: -10.886126518249512
    5. '   ' → logprob: -11.261126518249512
    6. '):
' → logprob: -11.511126518249512
    7. '+
' → logprob: -12.261126518249512
    8. '):' → logprob: -13.261126518249512
    9. ')' → logprob: -13.386126518249512
    10. 's' → logprob: -13.511126518249512

Token 1442: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.554343366995454e-05
    2. ' ' → logprob: -9.375085830688477
    3. '   ' → logprob: -15.250085830688477
    4. ')' → logprob: -15.625085830688477
    5. '2' → logprob: -16.687585830688477
    6. '
' → logprob: -16.812585830688477
    7. '```' → logprob: -16.875085830688477
    8. '+' → logprob: -18.000085830688477
    9. '１' → logprob: -18.062585830688477
    10. '):
' → logprob: -18.125085830688477

Token 1443: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.546478935983032e-05
    2. ' ' → logprob: -10.750025749206543
    3. '2' → logprob: -12.875025749206543
    4. '   ' → logprob: -14.750025749206543
    5. 'i' → logprob: -15.125025749206543
    6. ')' → logprob: -15.250025749206543
    7. '
' → logprob: -16.250024795532227
    8. '```' → logprob: -16.437524795532227
    9. '+' → logprob: -17.437524795532227
    10. '(' → logprob: -17.875024795532227

Token 1444: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3418888747692108
    2. ':' → logprob: -1.3418889045715332
    3. '):
' → logprob: -3.591888904571533
    4. ':
' → logprob: -8.091888427734375
    5. ')' → logprob: -8.466888427734375
    6. '   ' → logprob: -9.591888427734375
    7. ']:' → logprob: -10.341888427734375
    8. '):
' → logprob: -10.466888427734375
    9. ',' → logprob: -11.216888427734375
    10. '}:' → logprob: -12.216888427734375

Token 1445: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16576270759105682
    2. 'd' → logprob: -2.5407626628875732
    3. 'for' → logprob: -3.9157626628875732
    4. 'digit' → logprob: -4.165762901306152
    5. 'c' → logprob: -4.415762901306152
    6. ' for' → logprob: -4.665762901306152
    7. ' d' → logprob: -5.415762901306152
    8. ' c' → logprob: -5.790762901306152
    9. ' digit' → logprob: -5.915762901306152
    10. 'dig' → logprob: -6.665762901306152

Token 1446: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44528424739837646
    2. 'c' → logprob: -1.4452842473983765
    3. 'd' → logprob: -2.320284366607666
    4. 'digit' → logprob: -3.945284366607666
    5. 'num' → logprob: -5.695284366607666
    6. 'x' → logprob: -7.320284366607666
    7. ' for' → logprob: -7.445284366607666
    8. 'ci' → logprob: -8.445283889770508
    9. '   ' → logprob: -8.570283889770508
    10. 'dig' → logprob: -8.695283889770508

Token 1447: ' Cal' (ID: 4453)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9163889288902283
    2. 'for' → logprob: -1.166388988494873
    3. 'c' → logprob: -2.041388988494873
    4. 'digit' → logprob: -2.041388988494873
    5. 'num' → logprob: -4.291388988494873
    6. 'x' → logprob: -5.291388988494873
    7. 'dig' → logprob: -6.041388988494873
    8. 'ni' → logprob: -6.541388988494873
    9. 'ci' → logprob: -6.791388988494873
    10. 'nd' → logprob: -7.291388988494873

Token 1448: 'cule' (ID: 45017)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14598806202411652
    2. 's' → logprob: -2.5209879875183105
    3. 'cule' → logprob: -3.7709879875183105
    4. 'c' → logprob: -4.6459879875183105
    5. 'cul' → logprob: -4.7709879875183105
    6. '=' → logprob: -5.5209879875183105
    7. 'cules' → logprob: -5.6459879875183105
    8. ' for' → logprob: -6.7709879875183105
    9. ' =' → logprob: -6.7709879875183105
    10. '   ' → logprob: -7.0209879875183105

Token 1449: ' l' (ID: 305)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8370241522789001
    2. 'c' → logprob: -1.087024211883545
    3. 'digit' → logprob: -2.712024211883545
    4. 'x' → logprob: -2.837024211883545
    5. '   ' → logprob: -3.337024211883545
    6. 'num' → logprob: -3.712024211883545
    7. 'for' → logprob: -3.837024211883545
    8. 'nd' → logprob: -5.587024211883545
    9. 'dig' → logprob: -5.837024211883545
    10. 'ch' → logprob: -5.962024211883545

Token 1450: ''ind' (ID: 82245)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1033682823181152
    2. 'x' → logprob: -1.7283682823181152
    3. 'c' → logprob: -1.8533682823181152
    4. 'digit' → logprob: -1.9783682823181152
    5. 'int' → logprob: -2.6033682823181152
    6. 'dig' → logprob: -3.6033682823181152
    7. 'num' → logprob: -3.9783682823181152
    8. 'v' → logprob: -4.228368282318115
    9. 't' → logprob: -4.478368282318115
    10. 'a' → logprob: -5.353368282318115

Token 1451: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.6115006804466248
    2. 'ice' → logprob: -0.8615006804466248
    3. 'x' → logprob: -5.3615007400512695
    4. 'e' → logprob: -5.7365007400512695
    5. 'é' → logprob: -5.8615007400512695
    6. 'éf' → logprob: -5.8615007400512695
    7. 'ent' → logprob: -6.1115007400512695
    8. 't' → logprob: -6.1115007400512695
    9. 'ique' → logprob: -6.2365007400512695
    10. 'ic' → logprob: -6.6115007400512695

Token 1452: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20331799983978271
    2. '=' → logprob: -2.3283181190490723
    3. 'd' → logprob: -3.0783181190490723
    4. 's' → logprob: -4.328318119049072
    5. '   ' → logprob: -4.578318119049072
    6. 'i' → logprob: -5.328318119049072
    7. 'digit' → logprob: -6.078318119049072
    8. 'c' → logprob: -6.828318119049072
    9. 'for' → logprob: -6.828318119049072
    10. 'num' → logprob: -6.953318119049072

Token 1453: ' chiffre' (ID: 107420)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.4624522924423218
    2. 'i' → logprob: -1.8374522924423218
    3. 'c' → logprob: -2.8374524116516113
    4. 'digit' → logprob: -2.8374524116516113
    5. 'd' → logprob: -3.4624524116516113
    6. 's' → logprob: -3.9624524116516113
    7. 'car' → logprob: -4.587452411651611
    8. 'num' → logprob: -5.087452411651611
    9. ' chiffre' → logprob: -5.462452411651611
    10. 'j' → logprob: -5.712452411651611

Token 1454: ' actuel' (ID: 113646)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47108525037765503
    2. '=' → logprob: -1.0960853099822998
    3. '   ' → logprob: -4.596085071563721
    4. 'c' → logprob: -4.721085071563721
    5. 'i' → logprob: -4.971085071563721
    6. 'ch' → logprob: -5.471085071563721
    7. 'd' → logprob: -5.721085071563721
    8. '=i' → logprob: -6.221085071563721
    9. 'digit' → logprob: -6.471085071563721
    10. 'cur' → logprob: -6.596085071563721

Token 1455: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19945955276489258
    2. '=' → logprob: -2.0744595527648926
    3. '   ' → logprob: -3.4494595527648926
    4. 'c' → logprob: -4.574459552764893
    5. 'd' → logprob: -4.949459552764893
    6. 'digit' → logprob: -6.574459552764893
    7. 'ch' → logprob: -6.824459552764893
    8. ' c' → logprob: -7.074459552764893
    9. ',' → logprob: -7.949459552764893
    10. 'i' → logprob: -8.449459075927734

Token 1456: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007330321241170168
    2. ' i' → logprob: -8.000733375549316
    3. 'int' → logprob: -8.375733375549316
    4. '   ' → logprob: -9.000733375549316
    5. 'digit' → logprob: -11.250733375549316
    6. 's' → logprob: -12.125733375549316
    7. '0' → logprob: -12.500733375549316
    8. 'd' → logprob: -13.000733375549316
    9. 'ord' → logprob: -13.000733375549316
    10. 'num' → logprob: -13.000733375549316

Token 1457: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10478727519512177
    2. ' -' → logprob: -2.3547873497009277
    3. ')' → logprob: -6.104787349700928
    4. '   ' → logprob: -6.604787349700928
    5. ')-' → logprob: -8.22978687286377
    6. '):
' → logprob: -8.35478687286377
    7. '):' → logprob: -9.60478687286377
    8. '-)' → logprob: -9.60478687286377
    9. ' ' → logprob: -9.97978687286377
    10. 's' → logprob: -10.22978687286377

Token 1458: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -16.250003814697266
    4. '   ' → logprob: -16.625003814697266
    5. ')' → logprob: -17.000003814697266
    6. 'i' → logprob: -18.250003814697266
    7. 's' → logprob: -19.687503814697266
    8. '0' → logprob: -19.750003814697266
    9. '  ' → logprob: -20.000003814697266
    10. 'space' → logprob: -20.000003814697266

Token 1459: ' car' (ID: 1669)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9017525315284729
    2. ']' → logprob: -1.1517524719238281
    3. '])' → logprob: -1.4017524719238281
    4. ')]' → logprob: -4.901752471923828
    5. ')])' → logprob: -5.026752471923828
    6. '   ' → logprob: -5.151752471923828
    7. ')
' → logprob: -5.276752471923828
    8. ']
' → logprob: -5.651752471923828
    9. ' )' → logprob: -7.151752471923828
    10. '])
' → logprob: -7.776752471923828

Token 1460: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.42763763666152954
    2. 's' → logprob: -1.9276375770568848
    3. '0' → logprob: -2.5526375770568848
    4. ' i' → logprob: -2.5526375770568848
    5. ' s' → logprob: -3.8026375770568848
    6. ')' → logprob: -5.177637577056885
    7. 'str' → logprob: -6.427637577056885
    8. ' ' → logprob: -6.552637577056885
    9. '```' → logprob: -6.552637577056885
    10. 'index' → logprob: -6.802637577056885

Token 1461: ' index' (ID: 3472)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8308013677597046
    2. 's' → logprob: -1.0808013677597046
    3. ' code' → logprob: -2.330801486968994
    4. ' digits' → logprob: -3.955801486968994
    5. ' indices' → logprob: -3.955801486968994
    6. 'digits' → logprob: -4.205801486968994
    7. 'indices' → logprob: -4.330801486968994
    8. ']' → logprob: -4.705801486968994
    9. ')' → logprob: -4.830801486968994
    10. 'i' → logprob: -5.205801486968994

Token 1462: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3439997136592865
    2. ']' → logprob: -1.7189997434616089
    3. 's' → logprob: -3.2189996242523193
    4. ')]' → logprob: -4.343999862670898
    5. ' )' → logprob: -4.468999862670898
    6. '])' → logprob: -5.218999862670898
    7. ' s' → logprob: -5.468999862670898
    8. ' ]' → logprob: -5.968999862670898
    9. ' in' → logprob: -6.218999862670898
    10. 'import' → logprob: -6.218999862670898

Token 1463: ' chaînes' (ID: 179904)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14279399812221527
    2. ' s' → logprob: -2.017793893814087
    3. 'str' → logprob: -10.517793655395508
    4. ' la' → logprob: -10.517793655395508
    5. 'string' → logprob: -11.392793655395508
    6. '```' → logprob: -11.517793655395508
    7. 'chaine' → logprob: -11.517793655395508
    8. '0' → logprob: -11.642793655395508
    9. ' ' → logprob: -12.017793655395508
    10. ' string' → logprob: -12.517793655395508

Token 1464: ' commencent' (ID: 184941)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2516184449195862
    2. ')' → logprob: -2.3766183853149414
    3. ')]' → logprob: -3.0016183853149414
    4. ']+' → logprob: -3.8766183853149414
    5. 's' → logprob: -4.126618385314941
    6. '])' → logprob: -4.251618385314941
    7. ' ]' → logprob: -5.626618385314941
    8. ')])' → logprob: -6.001618385314941
    9. ']==' → logprob: -6.001618385314941
    10. ']+=' → logprob: -6.001618385314941

Token 1465: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.017057031393051147
    2. ' =' → logprob: -4.767056941986084
    3. '=i' → logprob: -5.392056941986084
    4. ')' → logprob: -6.642056941986084
    5. '0' → logprob: -7.642056941986084
    6. ']' → logprob: -8.392057418823242
    7. '-' → logprob: -8.517057418823242
    8. 'à' → logprob: -8.642057418823242
    9. ']=' → logprob: -9.017057418823242
    10. '[i' → logprob: -9.267057418823242

Token 1466: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004091342911124229
    2. 'i' → logprob: -5.504091262817383
    3. 'zero' → logprob: -12.129091262817383
    4. ' ' → logprob: -12.254091262817383
    5. ' i' → logprob: -13.254091262817383
    6. ' zéro' → logprob: -15.004091262817383
    7. 'z' → logprob: -15.629091262817383
    8. ' zero' → logprob: -16.129091262817383
    9. '[i' → logprob: -16.504091262817383
    10. '
' → logprob: -16.629091262817383

Token 1467: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0683535037969705e-05
    2. 'i' → logprob: -11.50001049041748
    3. 'zero' → logprob: -15.12501049041748
    4. '```' → logprob: -16.125011444091797
    5. ' ' → logprob: -16.125011444091797
    6. 's' → logprob: -17.125011444091797
    7. 'z' → logprob: -17.125011444091797
    8. ' zéro' → logprob: -17.875011444091797
    9. '1' → logprob: -19.000011444091797
    10. '
' → logprob: -19.500011444091797

Token 1468: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03211209550499916
    2. ' )' → logprob: -4.532112121582031
    3. ']' → logprob: -4.657112121582031
    4. '])' → logprob: -5.532112121582031
    5. '   ' → logprob: -5.782112121582031
    6. ')]' → logprob: -6.407112121582031
    7. ')
' → logprob: -7.157112121582031
    8. ')])' → logprob: -7.157112121582031
    9. ')+' → logprob: -8.657112121582031
    10. ' ])' → logprob: -8.782112121582031

Token 1469: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5665417909622192
    2. '   ' → logprob: -1.5665417909622192
    3. 'c' → logprob: -1.9415417909622192
    4. 'digit' → logprob: -3.1915416717529297
    5. 'num' → logprob: -4.06654167175293
    6. 'x' → logprob: -5.19154167175293
    7. 'dig' → logprob: -5.31654167175293
    8. 'for' → logprob: -5.44154167175293
    9. 'cur' → logprob: -6.19154167175293
    10. 'now' → logprob: -6.69154167175293

Token 1470: ' point' (ID: 2438)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5576817393302917
    2. 'c' → logprob: -1.4326817989349365
    3. 'digit' → logprob: -2.5576817989349365
    4. 'x' → logprob: -3.1826817989349365
    5. 'num' → logprob: -3.4326817989349365
    6. 'cur' → logprob: -4.682681560516357
    7. 'dig' → logprob: -4.932681560516357
    8. 'now' → logprob: -5.057681560516357
    9. 'v' → logprob: -5.932681560516357
    10. '   ' → logprob: -6.182681560516357

Token 1471: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2256578803062439
    2. ' =' → logprob: -1.6006579399108887
    3. '-' → logprob: -9.22565746307373
    4. '=i' → logprob: -9.60065746307373
    5. '=
' → logprob: -10.35065746307373
    6. '   ' → logprob: -10.85065746307373
    7. 's' → logprob: -11.72565746307373
    8. ' ' → logprob: -12.22565746307373
    9. ' =
' → logprob: -12.60065746307373
    10. '=int' → logprob: -12.97565746307373

Token 1472: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008716096170246601
    2. ' i' → logprob: -4.883716106414795
    3. 'int' → logprob: -7.008716106414795
    4. '   ' → logprob: -8.758715629577637
    5. 's' → logprob: -10.758715629577637
    6. ' int' → logprob: -10.758715629577637
    7. '	i' → logprob: -13.758715629577637
    8. ' ' → logprob: -13.883715629577637
    9. '  ' → logprob: -14.008715629577637
    10. ' s' → logprob: -14.133715629577637

Token 1473: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04300136864185333
    2. ' -' → logprob: -3.168001413345337
    3. '   ' → logprob: -13.293001174926758
    4. ' ' → logprob: -16.168001174926758
    5. '()-' → logprob: -16.293001174926758
    6. '-
' → logprob: -16.293001174926758
    7. '```' → logprob: -17.043001174926758
    8. ')' → logprob: -17.168001174926758
    9. '−' → logprob: -17.293001174926758
    10. '#' → logprob: -17.543001174926758

Token 1474: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -18.8750057220459
    4. '   ' → logprob: -19.1875057220459
    5. '<|end|>' → logprob: -20.5625057220459
    6. '１' → logprob: -20.6875057220459
    7. '  ' → logprob: -20.8750057220459
    8. '۱' → logprob: -20.8750057220459
    9. '...' → logprob: -21.0625057220459
    10. '2' → logprob: -21.1250057220459

Token 1475: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -18.500001907348633
    4. '```' → logprob: -19.625001907348633
    5. '0' → logprob: -20.312501907348633
    6. '<|end|>' → logprob: -20.562501907348633
    7. '১' → logprob: -20.625001907348633
    8. '１' → logprob: -20.687501907348633
    9. '  ' → logprob: -20.750001907348633
    10. '2' → logprob: -20.750001907348633

Token 1476: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007954268716275692
    2. '
' → logprob: -5.632954120635986
    3. '    
' → logprob: -5.632954120635986
    4. '#' → logprob: -7.882954120635986
    5. '  ' → logprob: -10.007954597473145
    6. '	
' → logprob: -10.007954597473145
    7. '   
' → logprob: -10.132954597473145
    8. ' #' → logprob: -10.257954597473145
    9. '  
' → logprob: -10.257954597473145
    10. ')' → logprob: -10.507954597473145

Token 1477: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05469810217618942
    2. 'd' → logprob: -3.8046979904174805
    3. 'digit' → logprob: -4.0546979904174805
    4. 'for' → logprob: -5.0546979904174805
    5. 'num' → logprob: -5.9296979904174805
    6. 'c' → logprob: -6.5546979904174805
    7. 'cur' → logprob: -7.4296979904174805
    8. 'dig' → logprob: -7.5546979904174805
    9. 'x' → logprob: -7.9296979904174805
    10. 'ch' → logprob: -8.30469799041748

Token 1478: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7953644394874573
    2. 'digit' → logprob: -1.4203643798828125
    3. 'd' → logprob: -2.0453643798828125
    4. 'c' → logprob: -2.7953643798828125
    5. 'num' → logprob: -2.9203643798828125
    6. 'dig' → logprob: -4.0453643798828125
    7. 'x' → logprob: -4.1703643798828125
    8. 'cur' → logprob: -5.0453643798828125
    9. 'now' → logprob: -5.4203643798828125
    10. 'current' → logprob: -5.9203643798828125

Token 1479: ' Convert' (ID: 15629)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digit' → logprob: -1.1829376220703125
    2. 'd' → logprob: -1.8079376220703125
    3. 'for' → logprob: -1.9329376220703125
    4. 'num' → logprob: -2.0579376220703125
    5. 'c' → logprob: -2.0579376220703125
    6. 'x' → logprob: -3.4329376220703125
    7. 'now' → logprob: -3.6829376220703125
    8. 'cur' → logprob: -3.9329376220703125
    9. 'dig' → logprob: -4.3079376220703125
    10. 'current' → logprob: -5.4329376220703125

Token 1480: 'it' (ID: 278)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1313941478729248
    2. ' =' → logprob: -2.006394147872925
    3. '   ' → logprob: -2.131394147872925
    4. '_digit' → logprob: -2.256394147872925
    5. '=' → logprob: -2.881394147872925
    6. '_' → logprob: -3.381394147872925
    7. '_ch' → logprob: -3.631394147872925
    8. 'ch' → logprob: -3.756394147872925
    9. 'digit' → logprob: -3.881394147872925
    10. 'it' → logprob: -4.006394386291504

Token 1481: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.203062042593956
    2. 'int' → logprob: -1.7030620574951172
    3. 'digit' → logprob: -7.078062057495117
    4. 'd' → logprob: -8.203062057495117
    5. 'c' → logprob: -8.203062057495117
    6. 'num' → logprob: -9.578062057495117
    7. '   ' → logprob: -10.328062057495117
    8. 'ch' → logprob: -10.453062057495117
    9. ' s' → logprob: -10.578062057495117
    10. 'digits' → logprob: -11.203062057495117

Token 1482: ' chiffre' (ID: 107420)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2742573022842407
    2. 'digit' → logprob: -2.149257183074951
    3. 'ch' → logprob: -3.024257183074951
    4. 'int' → logprob: -3.399257183074951
    5. 'c' → logprob: -3.899257183074951
    6. 'd' → logprob: -4.024257183074951
    7. 'num' → logprob: -7.149257183074951
    8. ' s' → logprob: -7.149257183074951
    9. 'current' → logprob: -8.02425765991211
    10. ' digit' → logprob: -8.39925765991211

Token 1483: ' courant' (ID: 74694)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09004134684801102
    2. ' =' → logprob: -3.465041399002075
    3. 'int' → logprob: -3.715041399002075
    4. '(s' → logprob: -4.215041160583496
    5. '=' → logprob: -5.590041160583496
    6. '=int' → logprob: -5.715041160583496
    7. 'de' → logprob: -6.340041160583496
    8. 'cur' → logprob: -6.965041160583496
    9. 'digit' → logprob: -6.965041160583496
    10. '(int' → logprob: -7.340041160583496

Token 1484: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32230979204177856
    2. ' =' → logprob: -1.3223097324371338
    3. '=int' → logprob: -5.697309970855713
    4. 'd' → logprob: -6.697309970855713
    5. 'int' → logprob: -6.822309970855713
    6. 's' → logprob: -6.822309970855713
    7. 'digit' → logprob: -7.447309970855713
    8. '=s' → logprob: -7.572309970855713
    9. '   ' → logprob: -8.072309494018555
    10. 'ch' → logprob: -8.572309494018555

Token 1485: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.2987729102605954e-05
    2. ' int' → logprob: -11.000042915344238
    3. 'num' → logprob: -11.250042915344238
    4. 'digit' → logprob: -11.625042915344238
    5. 'd' → logprob: -12.875042915344238
    6. 'ch' → logprob: -14.875042915344238
    7. 's' → logprob: -15.000042915344238
    8. 'val' → logprob: -15.375042915344238
    9. 'n' → logprob: -15.625042915344238
    10. '=int' → logprob: -15.750042915344238

Token 1486: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.37817123532295227
    2. '   ' → logprob: -1.8781712055206299
    3. 'c' → logprob: -3.12817120552063
    4. 'x' → logprob: -3.62817120552063
    5. 'num' → logprob: -3.62817120552063
    6. 'now' → logprob: -3.75317120552063
    7. 'a' → logprob: -4.628171443939209
    8. 'cur' → logprob: -4.753171443939209
    9. 'v' → logprob: -5.003171443939209
    10. 'digit' → logprob: -5.503171443939209

Token 1487: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2873327434062958
    2. '   ' → logprob: -2.162332773208618
    3. 'c' → logprob: -2.662332773208618
    4. 'x' → logprob: -3.912332773208618
    5. 'num' → logprob: -4.162332534790039
    6. 'a' → logprob: -4.537332534790039
    7. 'v' → logprob: -5.537332534790039
    8. 'now' → logprob: -5.662332534790039
    9. 'cur' → logprob: -5.787332534790039
    10. 'digit' → logprob: -6.162332534790039

Token 1488: ' np' (ID: 5374)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7092098593711853
    2. 'c' → logprob: -1.83420991897583
    3. 'x' → logprob: -2.20920991897583
    4. 'num' → logprob: -2.70920991897583
    5. 'now' → logprob: -3.20920991897583
    6. 'int' → logprob: -3.83420991897583
    7. 'a' → logprob: -3.95920991897583
    8. 'v' → logprob: -3.95920991897583
    9. 'digit' → logprob: -3.95920991897583
    10. 'cur' → logprob: -4.33420991897583

Token 1489: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20287206768989563
    2. ' =' → logprob: -1.7028720378875732
    3. '=int' → logprob: -7.077872276306152
    4. 'int' → logprob: -8.077872276306152
    5. 'w' → logprob: -9.577872276306152
    6. 'd' → logprob: -9.952872276306152
    7. '   ' → logprob: -9.952872276306152
    8. 's' → logprob: -10.202872276306152
    9. '[int' → logprob: -11.077872276306152
    10. 'oint' → logprob: -11.202872276306152

Token 1490: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0206720617134124e-05
    2. ' int' → logprob: -11.50001049041748
    3. 'ord' → logprob: -17.125009536743164
    4. ' ' → logprob: -20.500009536743164
    5. '	int' → logprob: -20.875009536743164
    6. '(int' → logprob: -20.875009536743164
    7. '   ' → logprob: -21.250009536743164
    8. '  ' → logprob: -21.875009536743164
    9. '[int' → logprob: -22.125009536743164
    10. '0' → logprob: -22.375009536743164

Token 1491: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0011723674833774567
    2. 's' → logprob: -6.7511725425720215
    3. '(' → logprob: -13.501172065734863
    4. '(
' → logprob: -14.376172065734863
    5. ' s' → logprob: -16.87617301940918
    6. ')' → logprob: -18.62617301940918
    7. '`s' → logprob: -18.87617301940918
    8. '#' → logprob: -19.37617301940918
    9. '[s' → logprob: -19.37617301940918
    10. 'a' → logprob: -19.37617301940918

Token 1492: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.670925358776003e-05
    2. ')' → logprob: -9.875066757202148
    3. '[i' → logprob: -12.375066757202148
    4. '(point' → logprob: -12.750066757202148
    5. ')[' → logprob: -12.750066757202148
    6. ' [' → logprob: -13.625066757202148
    7. '   ' → logprob: -13.750066757202148
    8. 'point' → logprob: -14.000066757202148
    9. '[
' → logprob: -14.125066757202148
    10. '[s' → logprob: -14.250066757202148

Token 1493: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.0007949740393087268
    2. 'i' → logprob: -7.250794887542725
    3. ' point' → logprob: -9.750795364379883
    4. '[' → logprob: -11.375795364379883
    5. 's' → logprob: -12.000795364379883
    6. '(point' → logprob: -12.500795364379883
    7. ' i' → logprob: -13.250795364379883
    8. ']' → logprob: -13.750795364379883
    9. ' ' → logprob: -14.500795364379883
    10. ')' → logprob: -14.625795364379883

Token 1494: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00011522514978423715
    2. '])
' → logprob: -10.000115394592285
    3. '[i' → logprob: -10.875115394592285
    4. '[' → logprob: -10.875115394592285
    5. ' ])' → logprob: -11.000115394592285
    6. '[p' → logprob: -11.875115394592285
    7. ')' → logprob: -12.875115394592285
    8. ']' → logprob: -13.625115394592285
    9. '])
' → logprob: -14.000115394592285
    10. '   ' → logprob: -14.250115394592285

Token 1495: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4774167835712433
    2. 'for' → logprob: -0.9774167537689209
    3. ' for' → logprob: -5.7274169921875
    4. '#' → logprob: -9.8524169921875
    5. '	for' → logprob: -11.3524169921875
    6. ',' → logprob: -12.3524169921875
    7. 'if' → logprob: -13.4774169921875
    8. ')' → logprob: -13.6024169921875
    9. '  ' → logprob: -13.8524169921875
    10. ' ' → logprob: -13.9774169921875

Token 1496: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.391962468624115
    2. '   ' → logprob: -1.1419625282287598
    3. ' for' → logprob: -5.51696252822876
    4. '	for' → logprob: -6.89196252822876
    5. '#' (adapté à ' #') → logprob: -11.016962051391602
    6. 'if' → logprob: -11.766962051391602
    7. ' ' → logprob: -12.516962051391602
    8. '   ' → logprob: -12.516962051391602
    9. '```' → logprob: -12.766962051391602
    10. '  ' → logprob: -13.016962051391602

Token 1497: ' Si' (ID: 7832)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006970656104385853
    2. 'dp' → logprob: -7.750697135925293
    3. 'po' → logprob: -9.125697135925293
    4. '#' → logprob: -9.500697135925293
    5. 'if' → logprob: -10.125697135925293
    6. '   ' → logprob: -11.125697135925293
    7. ' for' → logprob: -11.500697135925293
    8. 'fo' → logprob: -12.125697135925293
    9. 'np' → logprob: -13.250697135925293
    10. '```' → logprob: -13.875697135925293

Token 1498: ' le' (ID: 505)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.08921218663454056
    2. ' np' → logprob: -2.71421217918396
    3. 'po' → logprob: -4.214212417602539
    4. 'k' → logprob: -6.714212417602539
    5. ' po' → logprob: -6.964212417602539
    6. 'dp' → logprob: -7.089212417602539
    7. 'n' → logprob: -7.964212417602539
    8. 's' → logprob: -8.464212417602539
    9. 'i' → logprob: -8.714212417602539
    10. 'point' → logprob: -8.964212417602539

Token 1499: ' chiffre' (ID: 107420)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.0037521019112318754
    2. 'po' → logprob: -6.6287522315979
    3. 'i' → logprob: -6.7537522315979
    4. 'point' → logprob: -7.2537522315979
    5. 'dp' → logprob: -8.253751754760742
    6. ' np' → logprob: -9.128751754760742
    7. 's' → logprob: -9.753751754760742
    8. 'k' → logprob: -9.878751754760742
    9. 'n' → logprob: -10.128751754760742
    10. '#' → logprob: -12.128751754760742

Token 1500: ' courant' (ID: 74694)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5695160627365112
    2. ' ==' → logprob: -1.1945160627365112
    3. '!=' → logprob: -2.444516181945801
    4. ' !=' → logprob: -3.194516181945801
    5. '>' → logprob: -6.819516181945801
    6. '=' → logprob: -7.569516181945801
    7. ' ' → logprob: -7.694516181945801
    8. '[' → logprob: -8.3195161819458
    9. '<=' → logprob: -8.3195161819458
    10. '==
' → logprob: -8.5695161819458

Token 1501: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5289301872253418
    2. ' ==' → logprob: -0.9039301872253418
    3. '!=' → logprob: -5.778930187225342
    4. ' !=' → logprob: -6.028930187225342
    5. '<=' → logprob: -9.2789306640625
    6. '=' → logprob: -9.9039306640625
    7. '>' → logprob: -9.9039306640625
    8. ':' → logprob: -10.6539306640625
    9. ' <=' → logprob: -10.9039306640625
    10. ' ' → logprob: -11.7789306640625

Token 1502: ' égal' (ID: 15059)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006631145952269435
    2. ' ' → logprob: -8.000662803649902
    3. '=' → logprob: -9.375662803649902
    4. 'not' → logprob: -9.500662803649902
    5. '==' → logprob: -10.375662803649902
    6. '<' → logprob: -10.375662803649902
    7. '1' → logprob: -10.625662803649902
    8. ' not' → logprob: -10.625662803649902
    9. '<=' → logprob: -11.000662803649902
    10. '>' → logprob: -11.875662803649902

Token 1503: ' à' (ID: 1221)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0373929925262928
    2. 'k' → logprob: -3.662393093109131
    3. '=' → logprob: -4.787393093109131
    4. ' ' → logprob: -6.912393093109131
    5. ' k' → logprob: -7.412393093109131
    6. 'to' → logprob: -8.287392616271973
    7. '1' → logprob: -8.912392616271973
    8. '   ' → logprob: -8.912392616271973
    9. ' =' → logprob: -9.162392616271973
    10. ' to' → logprob: -9.287392616271973

Token 1504: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007064753444865346
    2. 'k' → logprob: -7.500706672668457
    3. ' ' → logprob: -9.000706672668457
    4. '1' → logprob: -10.625706672668457
    5. '9' → logprob: -13.625706672668457
    6. '6' → logprob: -14.250706672668457
    7. ' k' → logprob: -14.250706672668457
    8. '4' → logprob: -14.938206672668457
    9. '
' → logprob: -15.188206672668457
    10. '2' → logprob: -15.313206672668457

Token 1505: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007216068916022778
    2. 'k' → logprob: -7.375721454620361
    3. ' ' → logprob: -9.37572193145752
    4. '1' → logprob: -12.00072193145752
    5. ' k' → logprob: -14.62572193145752
    6. '9' → logprob: -14.62572193145752
    7. '6' → logprob: -15.06322193145752
    8. 'zero' → logprob: -15.12572193145752
    9. 'int' → logprob: -15.12572193145752
    10. '4' → logprob: -15.56322193145752

Token 1506: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0035183525178581476
    2. ':
' → logprob: -6.378518581390381
    3. ' and' → logprob: -6.628518581390381
    4. '   ' → logprob: -8.003518104553223
    5. 'and' → logprob: -10.128518104553223
    6. ' :' → logprob: -10.128518104553223
    7. '       ' → logprob: -10.378518104553223
    8. '==' → logprob: -11.253518104553223
    9. ' or' → logprob: -11.503518104553223
    10. '<|end|>' → logprob: -12.253518104553223

Token 1507: ' incr' (ID: 52395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2948928773403168
    2. ' po' → logprob: -2.0448927879333496
    3. '       ' → logprob: -3.0448927879333496
    4. 'po' → logprob: -3.1698927879333496
    5. '	' → logprob: -3.4198927879333496
    6. '   ' → logprob: -6.29489278793335
    7. '    ' → logprob: -7.66989278793335
    8. '\t' → logprob: -7.91989278793335
    9. '	   ' → logprob: -9.044893264770508
    10. ' ' → logprob: -9.169893264770508

Token 1508: 'é' (ID: 377)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8189861178398132
    2. 'e' → logprob: -1.818986177444458
    3. ' po' → logprob: -1.943986177444458
    4. 'er' → logprob: -2.318986177444458
    5. 'po' → logprob: -2.443986177444458
    6. 'o' → logprob: -4.318985939025879
    7. '       ' → logprob: -4.318985939025879
    8. 'é' → logprob: -4.443985939025879
    9. '(po' → logprob: -5.318985939025879
    10. ' ' → logprob: -5.943985939025879

Token 1509: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.4564540684223175
    2. 'ment' → logprob: -1.0814540386199951
    3. 'me' → logprob: -4.331454277038574
    4. 'ments' → logprob: -4.831454277038574
    5. 'men' → logprob: -6.206454277038574
    6. 'mented' → logprob: -6.456454277038574
    7. 'mentation' → logprob: -7.331454277038574
    8. 'nte' → logprob: -7.581454277038574
    9. 'm' → logprob: -7.831454277038574
    10. 's' → logprob: -8.706454277038574

Token 1510: ' le' (ID: 505)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -5.240481914370321e-05
    2. ' po' → logprob: -9.875052452087402
    3. '(po' → logprob: -14.000052452087402
    4. '   ' → logprob: -17.625051498413086
    5. 'Po' → logprob: -18.500051498413086
    6. '`' → logprob: -19.125051498413086
    7. '1' → logprob: -19.125051498413086
    8. '```' → logprob: -19.250051498413086
    9. '0' → logprob: -19.500051498413086
    10. 'p' → logprob: -19.500051498413086

Token 1511: ' compteur' (ID: 163344)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.007608040235936642
    2. ' po' → logprob: -4.882607936859131
    3. ' ' → logprob: -14.257608413696289
    4. ' ' → logprob: -15.132608413696289
    5. '`' → logprob: -15.632608413696289
    6. 'p' → logprob: -15.757608413696289
    7. '(po' → logprob: -15.757608413696289
    8. '```' → logprob: -16.25760841369629
    9. '   ' → logprob: -16.38260841369629
    10. 'Po' → logprob: -16.75760841369629

Token 1512: ' de' (ID: 334)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.19389502704143524
    2. ' po' → logprob: -1.8188949823379517
    3. '   ' → logprob: -4.943894863128662
    4. '(po' → logprob: -5.193894863128662
    5. ':' → logprob: -7.193894863128662
    6. ' if' → logprob: -8.44389533996582
    7. 'if' → logprob: -8.69389533996582
    8. ':
' → logprob: -9.69389533996582
    9. '_po' → logprob: -10.06889533996582
    10. '       ' → logprob: -10.94389533996582

Token 1513: ' z' (ID: 579)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.0009962485637515783
    2. '0' → logprob: -7.375996112823486
    3. ' po' → logprob: -8.500996589660645
    4. '1' → logprob: -8.750996589660645
    5. ' ' → logprob: -12.500996589660645
    6. 'zero' → logprob: -13.875996589660645
    7. '```' → logprob: -14.625996589660645
    8. '(po' → logprob: -14.750996589660645
    9. '`' → logprob: -14.875996589660645
    10. 'pos' → logprob: -14.875996589660645

Token 1514: 'éros' (ID: 120888)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.44411468505859375
    2. 'ero' → logprob: -1.0691146850585938
    3. 'éro' → logprob: -5.569114685058594
    4. 'ro' → logprob: -5.694114685058594
    5. 'eros' → logprob: -5.819114685058594
    6. 'er' → logprob: -6.694114685058594
    7. '0' → logprob: -6.819114685058594
    8. 'e' → logprob: -6.819114685058594
    9. 'p' → logprob: -7.569114685058594
    10. 'éros' → logprob: -7.819114685058594

Token 1515: ' rencontr' (ID: 49751)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057803235948085785
    2. 'po' → logprob: -3.682803153991699
    3. ' po' → logprob: -4.307803153991699
    4. ':' → logprob: -4.807803153991699
    5. ' if' → logprob: -5.557803153991699
    6. '       ' → logprob: -5.932803153991699
    7. 'if' → logprob: -6.682803153991699
    8. '(po' → logprob: -7.307803153991699
    9. ':
' → logprob: -7.682803153991699
    10. '    ' → logprob: -9.6828031539917

Token 1516: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.11912750452756882
    2. 'u' → logprob: -2.2441275119781494
    3. 'és' → logprob: -5.74412727355957
    4. 'i' → logprob: -6.74412727355957
    5. 'e' → logprob: -7.49412727355957
    6. 'ent' → logprob: -7.86912727355957
    7. 'ée' → logprob: -8.11912727355957
    8. 'es' → logprob: -8.61912727355957
    9. 'er' → logprob: -9.11912727355957
    10. 'is' → logprob: -9.49412727355957

Token 1517: ' jusqu' (ID: 21961)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02641431801021099
    2. 'if' → logprob: -4.651414394378662
    3. ' if' → logprob: -4.901414394378662
    4. ':' → logprob: -5.026414394378662
    5. ':
' → logprob: -7.151414394378662
    6. '       ' → logprob: -7.276414394378662
    7. '	if' → logprob: -7.526414394378662
    8. '  ' → logprob: -8.901413917541504
    9. '    ' → logprob: -9.276413917541504
    10. ' ' → logprob: -9.526413917541504

Token 1518: ''ici' (ID: 162066)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.387019544839859
    2. '1' → logprob: -1.3870195150375366
    3. 'à' → logprob: -3.512019634246826
    4. 'au' → logprob: -4.637019634246826
    5. '`' → logprob: -5.137019634246826
    6. '+' → logprob: -5.512019634246826
    7. 'po' → logprob: -5.762019634246826
    8. ''à' → logprob: -5.762019634246826
    9. '=' → logprob: -5.887019634246826
    10. '```' → logprob: -6.137019634246826

Token 1519: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005534812342375517
    2. ' if' → logprob: -6.005534648895264
    3. 'if' → logprob: -6.755534648895264
    4. ':' → logprob: -7.255534648895264
    5. '
' → logprob: -7.380534648895264
    6. '  ' → logprob: -9.255535125732422
    7. ':
' → logprob: -9.380535125732422
    8. '```' → logprob: -9.505535125732422
    9. '       ' → logprob: -9.630535125732422
    10. 'po' → logprob: -9.880535125732422

Token 1520: '   ' (ID: 271)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.37268710136413574
    2. '   ' → logprob: -1.3726871013641357
    3. ' po' → logprob: -2.8726871013641357
    4. ':' → logprob: -7.247687339782715
    5. '(po' → logprob: -8.622687339782715
    6. '       ' → logprob: -8.997687339782715
    7. ':
' → logprob: -10.622687339782715
    8. '	' → logprob: -10.872687339782715
    9. '  ' → logprob: -11.122687339782715
    10. ' ' → logprob: -11.247687339782715

Token 1521: ' po' (ID: 2482)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' (adapté à ' po') → logprob: -0.006820747163146734
    2. ' po' → logprob: -5.5068206787109375
    3. '   ' → logprob: -6.1318206787109375
    4. 'if' → logprob: -7.6318206787109375
    5. ' if' → logprob: -9.631820678710938
    6. '       ' → logprob: -11.381820678710938
    7. '```' → logprob: -13.506820678710938
    8. ' ' → logprob: -14.256820678710938
    9. '(po' → logprob: -14.506820678710938
    10. '    ' → logprob: -14.631820678710938

Token 1522: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02326015569269657
    2. ' +=' → logprob: -3.7732601165771484
    3. '=' → logprob: -11.773260116577148
    4. '==' → logprob: -12.648260116577148
    5. '   ' → logprob: -13.648260116577148
    6. '+' → logprob: -13.648260116577148
    7. ']+=' → logprob: -14.148260116577148
    8. 'if' → logprob: -15.148260116577148
    9. '+=(' → logprob: -15.148260116577148
    10. '	' → logprob: -16.89826011657715

Token 1523: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05757829546928406
    2. '(s' → logprob: -4.057578086853027
    3. '(np' → logprob: -4.182578086853027
    4. 'np' → logprob: -4.682578086853027
    5. ' ' → logprob: -5.057578086853027
    6. ' (' → logprob: -5.557578086853027
    7. ' np' → logprob: -6.557578086853027
    8. 's' → logprob: -6.682578086853027
    9. '(' → logprob: -7.432578086853027
    10. '(n' → logprob: -8.557578086853027

Token 1524: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043496055877767503
    2. '(s' → logprob: -8.500434875488281
    3. ' ' → logprob: -8.875434875488281
    4. '(' → logprob: -10.625434875488281
    5. '(np' → logprob: -11.000434875488281
    6. 's' → logprob: -11.500434875488281
    7. '(int' → logprob: -11.625434875488281
    8. ' (' → logprob: -11.625434875488281
    9. 'np' → logprob: -12.000434875488281
    10. '(n' → logprob: -12.375434875488281

Token 1525: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1526: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.006722944788634777
    2. ' np' → logprob: -5.006722927093506
    3. '(np' → logprob: -12.131723403930664
    4. 's' → logprob: -13.506723403930664
    5. '[np' → logprob: -14.756723403930664
    6. ' ' → logprob: -15.506723403930664
    7. ' s' → logprob: -16.381723403930664
    8. 'n' → logprob: -16.381723403930664
    9. '_np' → logprob: -16.881723403930664
    10. '   ' → logprob: -17.381723403930664

Token 1527: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759552121162415
    2. '==' → logprob: -0.8259552121162415
    3. ' ' → logprob: -11.950955390930176
    4. '==
' → logprob: -12.200955390930176
    5. '=' → logprob: -13.075955390930176
    6. ')==' → logprob: -14.825955390930176
    7. ' ' → logprob: -15.075955390930176
    8. ' =' → logprob: -15.325955390930176
    9. '[' → logprob: -15.325955390930176
    10. ']==' → logprob: -15.700955390930176

Token 1528: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -19.75037956237793
    4. ' ' → logprob: -20.37537956237793
    5. '۰' → logprob: -20.50037956237793
    6. '  ' → logprob: -20.75037956237793
    7. '=' → logprob: -21.00037956237793
    8. '1' → logprob: -21.75037956237793
    9. '	' → logprob: -21.87537956237793
    10. '```' → logprob: -21.87537956237793

Token 1529: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '=' → logprob: -19.000036239624023
    4. '   ' → logprob: -19.625036239624023
    5. '۰' → logprob: -19.625036239624023
    6. '  ' → logprob: -19.750036239624023
    7. ''' → logprob: -20.062536239624023
    8. ' ' → logprob: -20.687536239624023
    9. '1' → logprob: -20.750036239624023
    10. '```' → logprob: -20.875036239624023

Token 1530: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5656049251556396
    2. 'else' → logprob: -1.4406049251556396
    3. '   ' → logprob: -1.9406049251556396
    4. '<|end|>' → logprob: -3.1906049251556396
    5. '
' → logprob: -5.065605163574219
    6. '    
' → logprob: -6.565605163574219
    7. '<|end|>' → logprob: -7.315605163574219
    8. '	else' → logprob: -7.565605163574219
    9. ' ' → logprob: -7.690605163574219
    10. '  ' → logprob: -8.565605163574219

Token 1531: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006268949946388602
    2. ' ' → logprob: -7.375627040863037
    3. '   ' → logprob: -15.875626564025879
    4. ' ' → logprob: -16.750627517700195
    5. '  ' → logprob: -17.500627517700195
    6. 'po' → logprob: -17.500627517700195
    7. '    ' → logprob: -18.625627517700195
    8. '1' → logprob: -18.625627517700195
    9. '	' → logprob: -19.250627517700195
    10. '۰' → logprob: -19.500627517700195

Token 1532: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '1' → logprob: -15.500031471252441
    4. 'po' → logprob: -17.000030517578125
    5. '-' → logprob: -18.000030517578125
    6. '   ' → logprob: -18.625030517578125
    7. ' ' → logprob: -18.875030517578125
    8. '	' → logprob: -20.375030517578125
    9. '```' → logprob: -20.375030517578125
    10. '​' → logprob: -20.625030517578125

Token 1533: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1534: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000958627846557647
    2. ' for' → logprob: -7.500958442687988
    3. '#' → logprob: -8.000958442687988
    4. '   ' → logprob: -9.875958442687988
    5. 'dp' → logprob: -11.875958442687988
    6. 'if' → logprob: -13.500958442687988
    7. '```' → logprob: -13.625958442687988
    8. '	for' → logprob: -13.875958442687988
    9. 'max' → logprob: -13.875958442687988
    10. 'j' → logprob: -14.500958442687988

Token 1535: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006355931982398033
    2. ' for' → logprob: -8.500635147094727
    3. '   ' → logprob: -8.625635147094727
    4. '#' (adapté à ' #') → logprob: -9.125635147094727
    5. 'digit' → logprob: -9.625635147094727
    6. 'd' → logprob: -10.750635147094727
    7. 'max' → logprob: -10.875635147094727
    8. 'num' → logprob: -11.375635147094727
    9. 'dp' → logprob: -12.000635147094727
    10. 'limit' → logprob: -13.000635147094727

Token 1536: ' Il' (ID: 5329)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00038467496051453054
    2. '#' → logprob: -8.250384330749512
    3. ' for' → logprob: -9.750384330749512
    4. 'dp' → logprob: -11.000384330749512
    5. 'np' → logprob: -11.000384330749512
    6. 'digit' → logprob: -12.000384330749512
    7. 'num' → logprob: -12.375384330749512
    8. 'd' → logprob: -12.750384330749512
    9. '   ' → logprob: -12.875384330749512
    10. 'max' → logprob: -13.125384330749512

Token 1537: ' y' (ID: 342)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009694593027234077
    2. 'for' → logprob: -5.884694576263428
    3. ' for' → logprob: -5.884694576263428
    4. ' =' → logprob: -6.259694576263428
    5. '#' → logprob: -7.384694576263428
    6. '  ' → logprob: -8.009695053100586
    7. ' #' → logprob: -8.134695053100586
    8. ' ' → logprob: -8.259695053100586
    9. '	for' → logprob: -9.134695053100586
    10. '=' → logprob: -9.259695053100586

Token 1538: ' a' (ID: 261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49984848499298096
    2. 'for' → logprob: -1.874848484992981
    3. '#' → logprob: -2.2498483657836914
    4. '   ' → logprob: -2.7498483657836914
    5. ' =' → logprob: -3.3748483657836914
    6. 'n' → logprob: -5.374848365783691
    7. 's' → logprob: -5.499848365783691
    8. '       ' → logprob: -5.874848365783691
    9. 'continue' → logprob: -5.874848365783691
    10. ':' → logprob: -5.999848365783691

Token 1539: ' exactement' (ID: 108701)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5452519059181213
    2. 'for' → logprob: -1.4202518463134766
    3. '   ' → logprob: -2.9202518463134766
    4. ' ' → logprob: -3.1702518463134766
    5. ' four' → logprob: -3.6702518463134766
    6. ' for' → logprob: -4.295251846313477
    7. ' quatre' → logprob: -4.545251846313477
    8. '3' → logprob: -4.795251846313477
    9. '#' → logprob: -5.420251846313477
    10. ' trois' → logprob: -5.795251846313477

Token 1540: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.1021774485707283
    2. '   ' → logprob: -3.477177381515503
    3. '1' → logprob: -3.977177381515503
    4. '2' → logprob: -4.102177619934082
    5. ' ' → logprob: -4.477177619934082
    6. 'for' → logprob: -4.602177619934082
    7. '0' → logprob: -6.102177619934082
    8. '3' → logprob: -6.477177619934082
    9. ' for' → logprob: -7.102177619934082
    10. ')' → logprob: -7.102177619934082

Token 1541: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.21407732367515564
    2. '2' → logprob: -2.3390772342681885
    3. '1' → logprob: -2.8390772342681885
    4. '0' → logprob: -4.089077472686768
    5. ' ' → logprob: -5.214077472686768
    6. 'for' → logprob: -5.589077472686768
    7. '```' → logprob: -6.214077472686768
    8. '#' → logprob: -6.339077472686768
    9. '3' → logprob: -6.339077472686768
    10. 'dp' → logprob: -6.714077472686768

Token 1542: ' façon' (ID: 33381)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.012512445449829
    2. ')' → logprob: -1.762512445449829
    3. '<|end|>' → logprob: -2.262512445449829
    4. '       ' → logprob: -2.887512445449829
    5. ' for' → logprob: -2.887512445449829
    6. 'for' → logprob: -2.887512445449829
    7. '<<' → logprob: -3.637512445449829
    8. ':' → logprob: -3.762512445449829
    9. ' <<' → logprob: -3.887512445449829
    10. '    ' → logprob: -4.01251220703125

Token 1543: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05568394064903259
    2. '<|end|>' → logprob: -4.3056840896606445
    3. '[' → logprob: -4.4306840896606445
    4. ')' → logprob: -4.5556840896606445
    5. ' ' → logprob: -4.9306840896606445
    6. '    ' → logprob: -5.8056840896606445
    7. ':' → logprob: -6.6806840896606445
    8. 'for' → logprob: -6.8056840896606445
    9. 'dp' → logprob: -6.9306840896606445
    10. '  ' → logprob: -7.1806840896606445

Token 1544: ' conserver' (ID: 116877)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.8390001058578491
    2. 'faire' → logprob: -1.4640001058578491
    3. 'mettre' → logprob: -2.2140002250671387
    4. 're' → logprob: -2.8390002250671387
    5. 'cho' → logprob: -3.2140002250671387
    6. 'placer' → logprob: -3.9640002250671387
    7. 'contin' → logprob: -3.9640002250671387
    8. 'former' → logprob: -4.089000225067139
    9. 'arr' → logprob: -4.339000225067139
    10. 'dp' → logprob: -4.464000225067139

Token 1545: ' un' (ID: 537)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.27470648288726807
    2. '   ' → logprob: -1.899706482887268
    3. 'le' → logprob: -3.6497063636779785
    4. 'la' → logprob: -4.1497063636779785
    5. '0' → logprob: -4.3997063636779785
    6. 'les' → logprob: -4.7747063636779785
    7. 'l' → logprob: -4.8997063636779785
    8. 'de' → logprob: -5.5247063636779785
    9. '[' → logprob: -6.1497063636779785
    10. 'd' → logprob: -6.2747063636779785

Token 1546: ' nombre' (ID: 9733)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33849355578422546
    2. 'nombre' → logprob: -2.088493585586548
    3. 'ch' → logprob: -2.213493585586548
    4. 'z' → logprob: -3.338493585586548
    5. 'zero' → logprob: -5.963493347167969
    6. 'digit' → logprob: -6.088493347167969
    7. 'dp' → logprob: -6.213493347167969
    8. 'for' → logprob: -6.338493347167969
    9. '#' → logprob: -6.963493347167969
    10. ' nombre' → logprob: -7.088493347167969

Token 1547: ' vide' (ID: 21835)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2586766481399536
    2. 'dp' → logprob: -1.8836766481399536
    3. '[' → logprob: -3.633676528930664
    4. ' dp' → logprob: -4.383676528930664
    5. ' for' → logprob: -4.883676528930664
    6. '0' → logprob: -4.883676528930664
    7. 'for' → logprob: -4.883676528930664
    8. '[i' → logprob: -5.508676528930664
    9. '#' → logprob: -6.008676528930664
    10. ' ' → logprob: -6.758676528930664

Token 1548: ' lors' (ID: 15456)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050061143934726715
    2. '<|end|>' → logprob: -3.3000612258911133
    3. 'dp' → logprob: -5.175061225891113
    4. '	dp' → logprob: -6.175061225891113
    5. '
' → logprob: -7.300061225891113
    6. '.' → logprob: -7.550061225891113
    7. ',' → logprob: -7.925061225891113
    8. ' ' → logprob: -8.300061225891113
    9. '[' → logprob: -8.300061225891113
    10. '<|end|>' → logprob: -8.425061225891113

Token 1549: ' du' (ID: 1462)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.6000087261199951
    2. '   ' → logprob: -1.7250087261199951
    3. 'l' → logprob: -1.9750087261199951
    4. 'le' → logprob: -2.350008726119995
    5. 'la' → logprob: -2.350008726119995
    6. '#' → logprob: -2.725008726119995
    7. 'd' → logprob: -2.975008726119995
    8. 'que' → logprob: -3.475008726119995
    9. 'qu' → logprob: -3.850008726119995
    10. 'les' → logprob: -3.850008726119995

Token 1550: ' passage' (ID: 26368)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.0877271890640259
    2. 'par' → logprob: -1.2127271890640259
    3. 'for' → logprob: -2.2127270698547363
    4. 'i' → logprob: -2.2127270698547363
    5. 'trait' → logprob: -2.8377270698547363
    6. 'prem' → logprob: -3.8377270698547363
    7. 'bou' → logprob: -4.837727069854736
    8. 'trans' → logprob: -5.087727069854736
    9. '0' → logprob: -5.212727069854736
    10. ' parcours' → logprob: -5.212727069854736

Token 1551: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000169332604855299
    2. '<|end|>' → logprob: -9.50016975402832
    3. '#' → logprob: -11.12516975402832
    4. ',' → logprob: -11.37516975402832
    5. '   ' → logprob: -11.50016975402832
    6. '[' → logprob: -11.75016975402832
    7. 'for' → logprob: -11.75016975402832
    8. '       ' → logprob: -12.50016975402832
    9. '    
' → logprob: -12.50016975402832
    10. ' =' → logprob: -12.62516975402832

Token 1552: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22606104612350464
    2. 'dp' → logprob: -2.2260611057281494
    3. 'l' → logprob: -2.6010611057281494
    4. 'la' → logprob: -4.22606086730957
    5. '#' → logprob: -6.47606086730957
    6. ' i' → logprob: -7.47606086730957
    7. '[i' → logprob: -7.60106086730957
    8. 'j' → logprob: -7.72606086730957
    9. '0' → logprob: -7.72606086730957
    10. '   ' → logprob: -8.35106086730957

Token 1553: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04496746510267258
    2. 'for' → logprob: -4.5449676513671875
    3. 'position' → logprob: -4.5449676513671875
    4. 'ligne' → logprob: -5.2949676513671875
    5. 'nou' → logprob: -6.1699676513671875
    6. 'pas' → logprob: -6.4199676513671875
    7. 'next' → logprob: -6.5449676513671875
    8. 'ét' → logprob: -6.6699676513671875
    9. '[i' → logprob: -6.7949676513671875
    10. '#' → logprob: -6.9199676513671875

Token 1554: ' suivante' (ID: 107439)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2547812461853027
    2. ' for' → logprob: -1.5047812461853027
    3. '[' → logprob: -2.2547812461853027
    4. 'for' → logprob: -2.2547812461853027
    5. '   ' → logprob: -2.3797812461853027
    6. 'dp' → logprob: -2.6297812461853027
    7. '[i' → logprob: -3.8797812461853027
    8. ' ' → logprob: -4.129781246185303
    9. ' [' → logprob: -4.254781246185303
    10. 'i' → logprob: -4.504781246185303

Token 1555: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31954577565193176
    2. 'dp' → logprob: -1.3195457458496094
    3. ' dp' → logprob: -6.194545745849609
    4. '
' → logprob: -6.319545745849609
    5. '	dp' → logprob: -6.319545745849609
    6. '    
' → logprob: -8.81954574584961
    7. 'for' → logprob: -9.06954574584961
    8. '(dp' → logprob: -9.31954574584961
    9. ' ' → logprob: -10.31954574584961
    10. '  ' → logprob: -10.31954574584961

Token 1556: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3555110692977905
    2. '   ' → logprob: -1.2305110692977905
    3. ' dp' → logprob: -4.98051118850708
    4. 'for' → logprob: -9.730510711669922
    5. '	dp' → logprob: -9.855510711669922
    6. ' for' → logprob: -10.605510711669922
    7. ' ' → logprob: -11.355510711669922
    8. '(dp' → logprob: -11.730510711669922
    9. '  ' → logprob: -12.855510711669922
    10. '```' → logprob: -12.980510711669922

Token 1557: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00035512709291651845
    2. 'for' → logprob: -8.000354766845703
    3. ' dp' → logprob: -11.375354766845703
    4. '   ' → logprob: -11.875354766845703
    5. '#' → logprob: -14.625354766845703
    6. '	dp' → logprob: -15.250354766845703
    7. ' for' → logprob: -15.625354766845703
    8. '```' → logprob: -15.875354766845703
    9. '       ' → logprob: -16.500354766845703
    10. '(dp' → logprob: -16.750354766845703

Token 1558: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3868858814239502
    2. '1' → logprob: -1.1368858814239502
    3. '[' → logprob: -12.511885643005371
    4. '```' → logprob: -13.324385643005371
    5. 's' → logprob: -13.699385643005371
    6. '_' → logprob: -13.699385643005371
    7. '#' → logprob: -14.574385643005371
    8. '`' → logprob: -14.886885643005371
    9. 'o' → logprob: -14.949385643005371
    10. '01' → logprob: -15.324385643005371

Token 1559: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013304755557328463
    2. '[' → logprob: -6.626330375671387
    3. ' [' → logprob: -13.876330375671387
    4. '[I' → logprob: -14.501330375671387
    5. '[p' → logprob: -14.626330375671387
    6. '[pos' → logprob: -14.751330375671387
    7. 'i' → logprob: -14.876330375671387
    8. '[ip' → logprob: -15.251330375671387
    9. '```' → logprob: -16.001331329345703
    10. '[int' → logprob: -16.001331329345703

Token 1560: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004093358293175697
    2. ']' → logprob: -5.629093170166016
    3. ' ][' → logprob: -8.629093170166016
    4. '   ' → logprob: -9.254093170166016
    5. ']=' → logprob: -9.254093170166016
    6. '[' → logprob: -10.004093170166016
    7. '][:' → logprob: -10.629093170166016
    8. '][]' → logprob: -10.629093170166016
    9. '       ' → logprob: -12.254093170166016
    10. '[i' → logprob: -12.379093170166016

Token 1561: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.729906196298543e-06
    2. '3' → logprob: -12.250009536743164
    3. '1' → logprob: -12.375009536743164
    4. 'po' → logprob: -15.000009536743164
    5. ' ' → logprob: -16.500009536743164
    6. '2' → logprob: -16.500009536743164
    7. ']' → logprob: -17.250009536743164
    8. '4' → logprob: -17.437509536743164
    9. '
' → logprob: -17.937509536743164
    10. 'j' → logprob: -18.000009536743164

Token 1562: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020216628909111023
    2. ']=' → logprob: -6.252021789550781
    3. ']+=' → logprob: -9.377021789550781
    4. '   ' → logprob: -12.502021789550781
    5. ' ]' → logprob: -13.002021789550781
    6. '=' → logprob: -13.002021789550781
    7. ']+' → logprob: -16.50202178955078
    8. ')' → logprob: -17.00202178955078
    9. ']
' → logprob: -17.12702178955078
    10. '	' → logprob: -17.12702178955078

Token 1563: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00047690561041235924
    2. '+=' → logprob: -7.875476837158203
    3. ' =' → logprob: -9.250476837158203
    4. ' +=' → logprob: -14.250476837158203
    5. ']+=' → logprob: -17.625476837158203
    6. '=True' → logprob: -17.875476837158203
    7. '.=' → logprob: -18.625476837158203
    8. '=int' → logprob: -19.000476837158203
    9. '   ' → logprob: -19.125476837158203
    10. ']=' → logprob: -19.250476837158203

Token 1564: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39019113779067993
    2. 'dp' → logprob: -1.1401910781860352
    3. '0' → logprob: -5.765191078186035
    4. '(dp' → logprob: -9.515191078186035
    5. '(' → logprob: -9.765191078186035
    6. ' dp' → logprob: -11.265191078186035
    7. 'sum' → logprob: -11.515191078186035
    8. ' ' → logprob: -12.140191078186035
    9. 'po' → logprob: -12.702691078186035
    10. 'max' → logprob: -13.452691078186035

Token 1565: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5329352617263794
    2. 'dp' → logprob: -0.9079352617263794
    3. '0' → logprob: -4.65793514251709
    4. '(' → logprob: -9.15793514251709
    5. '(dp' → logprob: -9.53293514251709
    6. 'sum' → logprob: -9.65793514251709
    7. ' dp' → logprob: -11.78293514251709
    8. 'int' → logprob: -12.97043514251709
    9. 'max' → logprob: -13.03293514251709
    10. ' ' → logprob: -13.09543514251709

Token 1566: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1567: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1568: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2794480323791504
    2. 'for' → logprob: -1.9044480323791504
    3. ' for' → logprob: -3.1544480323791504
    4. '	for' → logprob: -3.6544480323791504
    5. 'dp' → logprob: -3.9044480323791504
    6. '<|end|>' → logprob: -5.77944803237915
    7. ')' → logprob: -6.52944803237915
    8. '	dp' → logprob: -7.15444803237915
    9. '#' (adapté à ' #') → logprob: -8.529447555541992
    10. '.' → logprob: -9.529447555541992

Token 1569: ' Quand' (ID: 67052)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038483213633298874
    2. 'dp' → logprob: -3.288483142852783
    3. '   ' → logprob: -7.913483142852783
    4. ' for' → logprob: -9.788483619689941
    5. '#' → logprob: -11.913483619689941
    6. '```' → logprob: -12.288483619689941
    7. '	for' → logprob: -13.288483619689941
    8. 'j' → logprob: -13.663483619689941
    9. 'if' → logprob: -13.913483619689941
    10. '
' → logprob: -14.538483619689941

Token 1570: ' on' (ID: 402)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9743443131446838
    2. 'i' → logprob: -1.849344253540039
    3. ' i' → logprob: -2.474344253540039
    4. 'np' → logprob: -2.849344253540039
    5. 'po' → logprob: -2.974344253540039
    6. ' dp' → logprob: -3.099344253540039
    7. 's' → logprob: -3.724344253540039
    8. 'k' → logprob: -3.974344253540039
    9. ' po' → logprob: -4.099344253540039
    10. 'for' → logprob: -4.224344253540039

Token 1571: ' est' (ID: 893)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8703793883323669
    2. 'for' → logprob: -0.8703793883323669
    3. ' for' → logprob: -1.9953794479370117
    4. ' continue' → logprob: -4.495379447937012
    5. '[' → logprob: -5.370379447937012
    6. 'continue' → logprob: -5.370379447937012
    7. '   ' → logprob: -5.870379447937012
    8. ' continues' → logprob: -7.995379447937012
    9. '	for' → logprob: -7.995379447937012
    10. '       ' → logprob: -7.995379447937012

Token 1572: ' dans' (ID: 2671)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3013068437576294
    2. 'dp' → logprob: -1.8013068437576294
    3. 'dans' → logprob: -2.17630672454834
    4. ' in' → logprob: -2.42630672454834
    5. 'in' → logprob: -2.92630672454834
    6. ' dans' → logprob: -2.92630672454834
    7. 'à' → logprob: -3.30130672454834
    8. ' à' → logprob: -3.42630672454834
    9. ' i' → logprob: -3.67630672454834
    10. ' dp' → logprob: -4.05130672454834

Token 1573: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.012607011944055557
    2. ' dp' → logprob: -5.262607097625732
    3. 'range' → logprob: -5.762607097625732
    4. 'i' → logprob: -6.512607097625732
    5. '[i' → logprob: -7.637607097625732
    6. 'la' → logprob: -8.137606620788574
    7. ' range' → logprob: -8.512606620788574
    8. 'the' → logprob: -8.637606620788574
    9. '1' → logprob: -8.637606620788574
    10. '[' → logprob: -8.762606620788574

Token 1574: ' branche' (ID: 101958)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36217764019966125
    2. 'range' → logprob: -1.7371776103973389
    3. 'dp' → logprob: -2.987177610397339
    4. '0' → logprob: -3.237177610397339
    5. 'i' → logprob: -3.987177610397339
    6. ' for' → logprob: -5.362177848815918
    7. ' range' → logprob: -5.487177848815918
    8. '1' → logprob: -5.612177848815918
    9. '#' → logprob: -6.612177848815918
    10. '...' → logprob: -6.987177848815918

Token 1575: ' "' (ID: 392)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8161008954048157
    2. ' dp' → logprob: -1.691100835800171
    3. '1' → logprob: -2.691100835800171
    4. ' equal' → logprob: -2.816100835800171
    5. '   ' → logprob: -3.316100835800171
    6. ' ég' → logprob: -3.441100835800171
    7. 'else' → logprob: -3.941100835800171
    8. ' ==' → logprob: -4.19110107421875
    9. 'equal' → logprob: -4.19110107421875
    10. '==' → logprob: -4.31610107421875

Token 1576: 'ég' (ID: 6634)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.45933106541633606
    2. 'equal' → logprob: -1.4593310356140137
    3. '1' → logprob: -3.0843310356140137
    4. 'égalité' → logprob: -3.9593310356140137
    5. 'strict' → logprob: -4.209331035614014
    6. 'égal' → logprob: -4.459331035614014
    7. 'egal' → logprob: -5.209331035614014
    8. '0' → logprob: -5.209331035614014
    9. 'e' → logprob: -5.334331035614014
    10. 'ég' → logprob: -5.459331035614014

Token 1577: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.7630255222320557
    2. 'aux' → logprob: -0.8880255222320557
    3. 'al' → logprob: -2.1380255222320557
    4. 'alité' → logprob: -7.013025283813477
    5. 'ales' → logprob: -7.888025283813477
    6. '```' → logprob: -8.138025283813477
    7. 'als' → logprob: -8.638025283813477
    8. '}' → logprob: -8.825525283813477
    9. '</' → logprob: -8.888025283813477
    10. '#' → logprob: -8.950525283813477

Token 1578: ' à' (ID: 1221)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.7845103144645691
    2. '"' → logprob: -0.9095103144645691
    3. '":' → logprob: -3.034510374069214
    4. '   ' → logprob: -3.034510374069214
    5. '[i' → logprob: -4.409510135650635
    6. ' à' → logprob: -5.284510135650635
    7. ' "' → logprob: -5.659510135650635
    8. ' ' → logprob: -5.909510135650635
    9. ' ",' → logprob: -6.284510135650635
    10. ',"' → logprob: -6.534510135650635

Token 1579: ' n' (ID: 297)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6074070930480957
    2. 'n' → logprob: -0.8574070930480957
    3. ' s' → logprob: -4.232407093048096
    4. ' n' → logprob: -5.232407093048096
    5. 'l' → logprob: -5.482407093048096
    6. 'la' → logprob: -6.607407093048096
    7. 'dp' → logprob: -6.732407093048096
    8. 'i' → logprob: -6.982407093048096
    9. 'str' → logprob: -7.357407093048096
    10. '   ' → logprob: -7.732407093048096

Token 1580: '",' (ID: 672)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7342735528945923
    2. '",' → logprob: -0.8592735528945923
    3. '"' → logprob: -3.2342734336853027
    4. '":' → logprob: -3.2342734336853027
    5. '1' → logprob: -5.234273433685303
    6. ')",' → logprob: -5.734273433685303
    7. ']",' → logprob: -6.734273433685303
    8. '0' → logprob: -6.734273433685303
    9. 's' → logprob: -6.984273433685303
    10. '":
' → logprob: -7.234273433685303

Token 1581: ' il' (ID: 1793)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09579067677259445
    2. 'dp' → logprob: -3.3457906246185303
    3. ' for' → logprob: -3.4707906246185303
    4. '   ' → logprob: -3.7207906246185303
    5. ' dp' → logprob: -7.220790863037109
    6. '	for' → logprob: -10.84579086303711
    7. ' ' → logprob: -11.47079086303711
    8. '#' → logprob: -11.84579086303711
    9. '       ' → logprob: -11.84579086303711
    10. 'if' → logprob: -12.22079086303711

Token 1582: ' n' (ID: 297)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9588887691497803
    2. '[' → logprob: -1.0838887691497803
    3. ' for' → logprob: -2.3338887691497803
    4. 'dp' → logprob: -2.7088887691497803
    5. '0' → logprob: -2.8338887691497803
    6. '#' → logprob: -4.083889007568359
    7. ' dp' → logprob: -4.833889007568359
    8. '   ' → logprob: -4.958889007568359
    9. '[i' → logprob: -5.583889007568359
    10. 's' → logprob: -5.958889007568359

Token 1583: ''y' (ID: 27913)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.3726061582565308
    2. ''y' → logprob: -1.3726061582565308
    3. 'pas' → logprob: -2.3726062774658203
    4. '['' → logprob: -2.8726062774658203
    5. ''est' → logprob: -2.9976062774658203
    6. '[' → logprob: -3.1226062774658203
    7. 'e' → logprob: -3.1226062774658203
    8. 'y' → logprob: -3.2476062774658203
    9. '[i' → logprob: -3.7476062774658203
    10. ']' → logprob: -4.12260627746582

Token 1584: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14118090271949768
    2. 'pas' → logprob: -2.266180992126465
    3. ' a' → logprob: -3.891180992126465
    4. ' pas' → logprob: -5.516180992126465
    5. 'f' → logprob: -6.766180992126465
    6. ''a' → logprob: -7.391180992126465
    7. ' faut' → logprob: -8.266180992126465
    8. '[' → logprob: -8.266180992126465
    9. '...' → logprob: -8.641180992126465
    10. 'y' → logprob: -9.016180992126465

Token 1585: ' aucune' (ID: 51173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.03457971289753914
    2. ' pas' → logprob: -3.6595797538757324
    3. ' rien' → logprob: -6.159579753875732
    4. ' que' → logprob: -6.409579753875732
    5. 'que' → logprob: -6.409579753875732
    6. 'plus' → logprob: -7.534579753875732
    7. ' ' → logprob: -7.534579753875732
    8. ' aucune' → logprob: -8.159579277038574
    9. ' aucun' → logprob: -8.409579277038574
    10. 'qu' → logprob: -8.534579277038574

Token 1586: ' façon' (ID: 33381)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6977894306182861
    2. '   ' → logprob: -2.197789430618286
    3. 'for' → logprob: -2.197789430618286
    4. 'dp' → logprob: -2.197789430618286
    5. '[' → logprob: -2.697789430618286
    6. ' ' → logprob: -3.072789430618286
    7. '=' → logprob: -3.197789430618286
    8. 's' → logprob: -3.447789430618286
    9. ' =' → logprob: -3.572789430618286
    10. ' for' → logprob: -3.572789430618286

Token 1587: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35663968324661255
    2. '<|end|>' → logprob: -1.8566396236419678
    3. '[' → logprob: -2.8566396236419678
    4. 'for' → logprob: -3.6066396236419678
    5. ' for' → logprob: -4.106639862060547
    6. 'dp' → logprob: -4.356639862060547
    7. '<|end|>' → logprob: -5.731639862060547
    8. '[
' → logprob: -5.981639862060547
    9. '
' → logprob: -6.106639862060547
    10. ')' → logprob: -6.231639862060547

Token 1588: ''avoir' (ID: 55863)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13050109148025513
    2. ' dp' → logprob: -2.2555010318756104
    3. 'for' → logprob: -5.8805012702941895
    4. '[' → logprob: -6.0055012702941895
    5. 'mettre' → logprob: -6.5055012702941895
    6. '#' → logprob: -6.6305012702941895
    7. 'e' → logprob: -7.0055012702941895
    8. ' continuer' → logprob: -7.2555012702941895
    9. 'faire' → logprob: -7.5055012702941895
    10. '(dp' → logprob: -7.5055012702941895

Token 1589: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17842607200145721
    2. 'dp' → logprob: -1.9284260272979736
    3. ' ' → logprob: -4.678426265716553
    4. '1' → logprob: -5.428426265716553
    5. ' dp' → logprob: -5.928426265716553
    6. '   ' → logprob: -7.178426265716553
    7. '[' → logprob: -8.178425788879395
    8. '[]' → logprob: -9.303425788879395
    9. 'un' → logprob: -9.678425788879395
    10. '#' → logprob: -9.928425788879395

Token 1590: '0' (ID: 15)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14677345752716064
    2. '0' → logprob: -2.396773338317871
    3. '1' → logprob: -3.271773338317871
    4. 'un' → logprob: -5.396773338317871
    5. 'une' → logprob: -7.021773338317871
    6. 'de' → logprob: -7.271773338317871
    7. 'le' → logprob: -8.521773338317871
    8. ' dp' → logprob: -8.896773338317871
    9. 'des' → logprob: -9.271773338317871
    10. '#' → logprob: -9.396773338317871

Token 1591: ' chiffre' (ID: 107420)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3467007875442505
    2. ' non' → logprob: -1.3467007875442505
    3. 'dp' → logprob: -1.7217007875442505
    4. ' dp' → logprob: -2.721700668334961
    5. '   ' → logprob: -2.846700668334961
    6. 'non' → logprob: -3.221700668334961
    7. '[i' → logprob: -3.721700668334961
    8. ']' → logprob: -3.971700668334961
    9. 'for' → logprob: -4.096700668334961
    10. ' [' → logprob: -4.221700668334961

Token 1592: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.7823383212089539
    2. '   ' → logprob: -1.5323383808135986
    3. '0' → logprob: -2.1573383808135986
    4. ' non' → logprob: -2.5323383808135986
    5. '_non' → logprob: -3.0323383808135986
    6. '[' → logprob: -4.0323381423950195
    7. '    ' → logprob: -4.6573381423950195
    8. '       ' → logprob: -4.9073381423950195
    9. '=' → logprob: -5.0323381423950195
    10. ' =' → logprob: -5.2823381423950195

Token 1593: '-z' (ID: 16826)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5870204567909241
    2. 'z' → logprob: -1.7120203971862793
    3. 'zero' → logprob: -1.7120203971862793
    4. ' zéro' → logprob: -2.7120203971862793
    5. '-z' → logprob: -5.212020397186279
    6. ' zero' → logprob: -5.962020397186279
    7. 'nul' → logprob: -5.962020397186279
    8. 'n' → logprob: -6.712020397186279
    9. ' z' → logprob: -6.837020397186279
    10. '-zero' → logprob: -7.087020397186279

Token 1594: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.09002085775136948
    2. 'ero' → logprob: -2.4650208950042725
    3. 'éros' → logprob: -7.965020656585693
    4. 'ro' → logprob: -8.215021133422852
    5. 'é' → logprob: -9.090021133422852
    6. '_ro' → logprob: -10.090021133422852
    7. '"' → logprob: -10.215021133422852
    8. '\' → logprob: -10.590021133422852
    9. '0' → logprob: -10.715021133422852
    10. 'éo' → logprob: -10.840021133422852

Token 1595: ' sauf' (ID: 87919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.061676347395405e-05
    2. ' =' → logprob: -11.50005054473877
    3. 'dp' → logprob: -11.75005054473877
    4. '[' → logprob: -11.87505054473877
    5. '
' → logprob: -12.25005054473877
    6. '  ' → logprob: -12.62505054473877
    7. ' ' → logprob: -12.62505054473877
    8. '0' → logprob: -12.75005054473877
    9. '	dp' → logprob: -13.12505054473877
    10. '=' → logprob: -13.50005054473877

Token 1596: ' au' (ID: 2791)
  Prédit: 'si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'si' → logprob: -1.0505454540252686
    2. 'pour' → logprob: -1.3005454540252686
    3. 'que' → logprob: -1.9255454540252686
    4. 'dans' → logprob: -2.6755454540252686
    5. 'dp' → logprob: -2.8005454540252686
    6. 'if' → logprob: -2.9255454540252686
    7. 'for' → logprob: -4.300545692443848
    8. ' si' → logprob: -4.675545692443848
    9. 'à' → logprob: -5.675545692443848
    10. ' pour' → logprob: -5.800545692443848

Token 1597: ' tout' (ID: 5501)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9906826615333557
    2. 'dé' → logprob: -1.615682601928711
    3. '0' → logprob: -1.740682601928711
    4. 'point' → logprob: -2.490682601928711
    5. 'dp' → logprob: -2.490682601928711
    6. '#' → logprob: -3.865682601928711
    7. 'j' → logprob: -3.865682601928711
    8. 'start' → logprob: -3.990682601928711
    9. 'prem' → logprob: -6.115682601928711
    10. 'previous' → logprob: -6.115682601928711

Token 1598: ' début' (ID: 29589)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.4607769250869751
    2. 'prem' → logprob: -1.085776925086975
    3. 'start' → logprob: -4.5857768058776855
    4. '0' → logprob: -4.7107768058776855
    5. ' début' → logprob: -5.2107768058776855
    6. 'd' → logprob: -6.0857768058776855
    7. '#' → logprob: -7.0857768058776855
    8. 'begin' → logprob: -7.5857768058776855
    9. 'deb' → logprob: -7.5857768058776855
    10. 'de' → logprob: -7.7107768058776855

Token 1599: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008577430271543562
    2. 'dp' → logprob: -7.500857830047607
    3. '	dp' → logprob: -8.37585735321045
    4. '<|end|>' → logprob: -10.50085735321045
    5. '(dp' → logprob: -11.62585735321045
    6. ' dp' → logprob: -11.75085735321045
    7. '
' → logprob: -11.75085735321045
    8. '  ' → logprob: -12.25085735321045
    9. '```' → logprob: -12.25085735321045
    10. ' ' → logprob: -13.00085735321045

Token 1600: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5387863516807556
    2. '   ' → logprob: -1.1637864112854004
    3. '	dp' → logprob: -2.2887864112854004
    4. ' dp' → logprob: -6.6637864112854
    5. '(dp' → logprob: -7.7887864112854
    6. '```' → logprob: -8.163785934448242
    7. '_dp' → logprob: -8.663785934448242
    8. '\t' → logprob: -8.913785934448242
    9. '<|end|>' → logprob: -9.288785934448242
    10. '[' → logprob: -9.288785934448242

Token 1601: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -1.7954958821064793e-05
    2. '#' → logprob: -11.875018119812012
    3. 'for' → logprob: -12.250018119812012
    4. ' dp' → logprob: -12.625018119812012
    5. '   ' → logprob: -13.750018119812012
    6. '0' → logprob: -14.250018119812012
    7. '```' → logprob: -14.375018119812012
    8. 'continue' → logprob: -15.500018119812012
    9. '	dp' → logprob: -15.625018119812012
    10. '(dp' → logprob: -16.375017166137695

Token 1602: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000204851632588543
    2. '0' → logprob: -8.500205039978027
    3. '[' → logprob: -14.750205039978027
    4. '１' → logprob: -14.937705039978027
    5. '_' → logprob: -16.25020408630371
    6. '' → logprob: -16.37520408630371
    7. '```' → logprob: -16.56270408630371
    8. '১' → logprob: -16.68770408630371
    9. '१' → logprob: -16.75020408630371
    10. '[i' → logprob: -17.00020408630371

Token 1603: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3676733690081164e-05
    2. '[' → logprob: -11.00002384185791
    3. '   ' → logprob: -12.37502384185791
    4. ' [' → logprob: -13.87502384185791
    5. '][' → logprob: -14.25002384185791
    6. '[I' → logprob: -14.75002384185791
    7. ')[' → logprob: -16.000022888183594
    8. '[][' → logprob: -16.250022888183594
    9. '```' → logprob: -16.375022888183594
    10. 'i' → logprob: -16.500022888183594

Token 1604: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0022273333743214607
    2. '[' → logprob: -6.127227306365967
    3. ']' → logprob: -11.002227783203125
    4. ' ][' → logprob: -11.252227783203125
    5. '   ' → logprob: -12.002227783203125
    6. '>[' → logprob: -14.002227783203125
    7. ' ' → logprob: -14.252227783203125
    8. ')[' → logprob: -14.377227783203125
    9. '#' → logprob: -14.627227783203125
    10. '0' → logprob: -14.627227783203125

Token 1605: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.8590300139039755e-05
    2. '1' → logprob: -10.625048637390137
    3. '4' → logprob: -12.000048637390137
    4. ']' → logprob: -12.375048637390137
    5. 'False' → logprob: -12.875048637390137
    6. '-' → logprob: -13.000048637390137
    7. 'i' → logprob: -13.187548637390137
    8. ' ' → logprob: -13.500048637390137
    9. '```' → logprob: -13.875048637390137
    10. '   ' → logprob: -14.125048637390137

Token 1606: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030551699921488762
    2. ' =' → logprob: -3.5305516719818115
    3. ']' → logprob: -7.655551910400391
    4. ']=' → logprob: -8.03055191040039
    5. '   ' → logprob: -14.40555191040039
    6. ')' → logprob: -14.90555191040039
    7. ')=' → logprob: -15.15555191040039
    8. '	' → logprob: -15.15555191040039
    9. ',' → logprob: -15.65555191040039
    10. ' ' → logprob: -15.90555191040039

Token 1607: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234002135694027
    2. ' =' → logprob: -5.2552337646484375
    3. '+=' → logprob: -15.630233764648438
    4. '	' → logprob: -17.130233764648438
    5. '   ' → logprob: -17.755233764648438
    6. ' +=' → logprob: -17.880233764648438
    7. '＝' → logprob: -17.880233764648438
    8. '=
' → logprob: -18.505233764648438
    9. ' ' → logprob: -18.505233764648438
    10. ']=' → logprob: -19.005233764648438

Token 1608: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.921253225300461e-05
    2. ' ' → logprob: -9.875069618225098
    3. '1' → logprob: -11.125069618225098
    4. 'dp' → logprob: -13.250069618225098
    5. ' ' → logprob: -15.750069618225098
    6. '(' → logprob: -15.875069618225098
    7. '۰' → logprob: -16.18756866455078
    8. 'int' → logprob: -16.25006866455078
    9. 'po' → logprob: -16.31256866455078
    10. '	' → logprob: -16.43756866455078

Token 1609: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2471589798224159e-05
    2. '1' → logprob: -11.875012397766113
    3. ' ' → logprob: -12.250012397766113
    4. 'dp' → logprob: -15.375012397766113
    5. '۰' → logprob: -16.31251335144043
    6. '(' → logprob: -16.31251335144043
    7. 'int' → logprob: -17.12501335144043
    8. 's' → logprob: -18.18751335144043
    9. ' ' → logprob: -18.43751335144043
    10. '０' → logprob: -18.43751335144043

Token 1610: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1611: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007374596782028675
    2. ' for' → logprob: -5.0073747634887695
    3. '   ' → logprob: -7.3823747634887695
    4. '	for' → logprob: -10.38237476348877
    5. '#' → logprob: -12.63237476348877
    6. ')' → logprob: -14.00737476348877
    7. '```' → logprob: -14.38237476348877
    8. 'dp' → logprob: -15.13237476348877
    9. '<|end|>' → logprob: -16.007373809814453
    10. 'if' → logprob: -16.007373809814453

Token 1612: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011173023842275143
    2. '   ' → logprob: -4.511173248291016
    3. ' for' → logprob: -9.011173248291016
    4. '	for' → logprob: -12.886173248291016
    5. '```' → logprob: -14.636173248291016
    6. '#' (adapté à ' #') → logprob: -15.886173248291016
    7. '    
' → logprob: -17.511173248291016
    8. '
' → logprob: -17.886173248291016
    9. ' ' → logprob: -18.011173248291016
    10. 'from' → logprob: -18.011173248291016

Token 1613: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.947715832618997e-05
    2. '   ' → logprob: -9.625089645385742
    3. ' for' → logprob: -10.750089645385742
    4. '#' → logprob: -13.875089645385742
    5. '```' → logprob: -14.750089645385742
    6. 'j' → logprob: -15.250089645385742
    7. '	for' → logprob: -15.625089645385742
    8. '
' → logprob: -16.375089645385742
    9. ' ' → logprob: -17.375089645385742
    10. '    
' → logprob: -18.000089645385742

Token 1614: ' ' (ID: 220)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0582275390625
    2. ' j' → logprob: -3.1832275390625
    3. 'x' → logprob: -5.3082275390625
    4. 'c' → logprob: -6.1832275390625
    5. 'k' → logprob: -7.1832275390625
    6. 't' → logprob: -7.1832275390625
    7. 'z' → logprob: -7.9332275390625
    8. 'a' → logprob: -7.9332275390625
    9. 'cnt' → logprob: -7.9332275390625
    10. 'd' → logprob: -8.1832275390625

Token 1615: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011339700780808926
    2. 'x' → logprob: -5.5113396644592285
    3. 'k' → logprob: -7.1363396644592285
    4. 'c' → logprob: -7.1363396644592285
    5. 'p' → logprob: -7.1363396644592285
    6. 'l' → logprob: -7.5113396644592285
    7. 'non' → logprob: -7.6363396644592285
    8. 't' → logprob: -8.011340141296387
    9. 'num' → logprob: -8.011340141296387
    10. 'cnt' → logprob: -8.261340141296387

Token 1616: ' chiffre' (ID: 107420)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.22359313070774078
    2. 'j' → logprob: -2.848593235015869
    3. ' range' → logprob: -3.848593235015869
    4. 'range' → logprob: -3.848593235015869
    5. ' in' → logprob: -3.973593235015869
    6. ',' → logprob: -4.223593235015869
    7. ' ' → logprob: -4.223593235015869
    8. '    ' → logprob: -4.598593235015869
    9. ' for' → logprob: -5.098593235015869
    10. '0' → logprob: -5.348593235015869

Token 1617: ' non' (ID: 2893)
  Prédit: ' non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' non' → logprob: -0.9308717250823975
    2. ' à' → logprob: -1.3058717250823975
    3. '   ' → logprob: -1.8058717250823975
    4. 'non' → logprob: -2.4308717250823975
    5. ' to' → logprob: -3.9308717250823975
    6. ' jusqu' → logprob: -4.305871963500977
    7. 'à' → logprob: -4.555871963500977
    8. ' in' → logprob: -5.305871963500977
    9. '    ' → logprob: -5.555871963500977
    10. ',' → logprob: -5.930871963500977

Token 1618: '-z' (ID: 16826)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6046215891838074
    2. '-' → logprob: -1.3546216487884521
    3. ' zéro' → logprob: -2.729621648788452
    4. 'zero' → logprob: -3.229621648788452
    5. '-zero' → logprob: -3.229621648788452
    6. '_zero' → logprob: -3.604621648788452
    7. ' zero' → logprob: -5.229621410369873
    8. '_' → logprob: -5.729621410369873
    9. '   ' → logprob: -5.729621410369873
    10. ' ' → logprob: -5.854621410369873

Token 1619: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.025607075542211533
    2. 'ero' → logprob: -4.025607109069824
    3. '0' → logprob: -5.150607109069824
    4. 'éros' → logprob: -6.525607109069824
    5. 'o' → logprob: -10.400607109069824
    6. '   ' → logprob: -10.650607109069824
    7. ' zéro' → logprob: -11.025607109069824
    8. 'é' → logprob: -11.025607109069824
    9. 'éo' → logprob: -11.150607109069824
    10. ' ' → logprob: -11.650607109069824

Token 1620: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20036350190639496
    2. ' for' → logprob: -2.0753633975982666
    3. 'for' → logprob: -3.3253633975982666
    4. '   ' → logprob: -4.200363636016846
    5. ' in' → logprob: -6.325363636016846
    6. ':
' → logprob: -7.075363636016846
    7. ' :' → logprob: -7.575363636016846
    8. 'in' → logprob: -7.700363636016846
    9. '<|end|>' → logprob: -7.825363636016846
    10. ',' → logprob: -7.950363636016846

Token 1621: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026641394942998886
    2. ' for' → logprob: -3.651641368865967
    3. '   ' → logprob: -8.776641845703125
    4. 'dp' → logprob: -9.276641845703125
    5. '	for' → logprob: -9.401641845703125
    6. 'j' → logprob: -11.776641845703125
    7. ' dp' → logprob: -14.526641845703125
    8. ' ' → logprob: -14.651641845703125
    9. '0' → logprob: -14.776641845703125
    10. ' j' → logprob: -14.776641845703125

Token 1622: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.050408393144607544
    2. 'dp' → logprob: -3.175408363342285
    3. 'if' → logprob: -5.050408363342285
    4. ' for' → logprob: -7.425408363342285
    5. '   ' → logprob: -8.175408363342285
    6. 'j' → logprob: -9.675408363342285
    7. '#' (adapté à ' #') → logprob: -11.175408363342285
    8. ' dp' → logprob: -12.050408363342285
    9. ' if' → logprob: -12.300408363342285
    10. '	for' → logprob: -13.425408363342285

Token 1623: '  ' (ID: 256)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0026848025154322386
    2. 'dp' → logprob: -6.002684593200684
    3. ' for' → logprob: -9.252684593200684
    4. 'j' → logprob: -9.752684593200684
    5. 'if' → logprob: -10.127684593200684
    6. '   ' → logprob: -11.502684593200684
    7. '#' → logprob: -13.127684593200684
    8. 'from' → logprob: -15.377684593200684
    9. '	for' → logprob: -15.377684593200684
    10. 'k' → logprob: -15.627684593200684

Token 1624: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003298632800579071
    2. ' for' → logprob: -8.250329971313477
    3. 'dp' → logprob: -10.375329971313477
    4. '   ' → logprob: -10.625329971313477
    5. 'j' → logprob: -11.500329971313477
    6. 'if' → logprob: -13.500329971313477
    7. '#' → logprob: -14.375329971313477
    8. ' ' → logprob: -15.625329971313477
    9. '	for' → logprob: -15.750329971313477
    10. '0' → logprob: -16.000329971313477

Token 1625: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008717396296560764
    2. ' for' → logprob: -4.7587175369262695
    3. 'dp' → logprob: -10.00871753692627
    4. 'j' → logprob: -10.75871753692627
    5. '   ' → logprob: -11.50871753692627
    6. 'if' → logprob: -11.63371753692627
    7. 'range' → logprob: -12.00871753692627
    8. '#' → logprob: -12.75871753692627
    9. ' j' → logprob: -12.88371753692627
    10. '0' → logprob: -13.63371753692627

Token 1626: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029996460303664207
    2. '1' → logprob: -3.654996395111084
    3. 'for' → logprob: -5.779996395111084
    4. ' for' → logprob: -8.404996871948242
    5. '   ' → logprob: -8.779996871948242
    6. '[' → logprob: -9.529996871948242
    7. '[i' → logprob: -9.904996871948242
    8. ' ' → logprob: -11.154996871948242
    9. '```' → logprob: -11.279996871948242
    10. 'i' → logprob: -11.529996871948242

Token 1627: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003918699454516172
    2. '[' → logprob: -6.378918647766113
    3. 'for' → logprob: -6.753918647766113
    4. '][' → logprob: -8.128918647766113
    5. '   ' → logprob: -8.253918647766113
    6. ' [' → logprob: -9.003918647766113
    7. ' for' → logprob: -9.378918647766113
    8. '#' → logprob: -10.128918647766113
    9. '
' → logprob: -10.378918647766113
    10. 'i' → logprob: -10.503918647766113

Token 1628: '-' (ID: 12)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0020659223664551973
    2. '-' → logprob: -7.002066135406494
    3. '[' → logprob: -7.752066135406494
    4. '   ' → logprob: -8.752065658569336
    5. '[i' → logprob: -9.252065658569336
    6. '#' → logprob: -9.377065658569336
    7. ' ][' → logprob: -9.377065658569336
    8. ']' → logprob: -9.627065658569336
    9. 'for' → logprob: -9.877065658569336
    10. '
' → logprob: -10.502065658569336

Token 1629: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014847563579678535
    2. '][' → logprob: -9.00014877319336
    3. 'i' → logprob: -10.75014877319336
    4. ' ' → logprob: -13.37514877319336
    5. '   ' → logprob: -13.87514877319336
    6. ']' → logprob: -15.12514877319336
    7. '0' → logprob: -15.75014877319336
    8. '#' → logprob: -15.75014877319336
    9. 'j' → logprob: -15.75014877319336
    10. ' ][' → logprob: -16.50014877319336

Token 1630: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003402167232707143
    2. '[' → logprob: -6.003402233123779
    3. ']' → logprob: -8.253401756286621
    4. '#' → logprob: -8.503401756286621
    5. '   ' → logprob: -9.378401756286621
    6. '1' → logprob: -9.378401756286621
    7. 'for' → logprob: -9.628401756286621
    8. '])' → logprob: -10.378401756286621
    9. ' ][' → logprob: -10.378401756286621
    10. '0' → logprob: -10.878401756286621

Token 1631: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5232086777687073
    2. '0' → logprob: -0.8982086777687073
    3. 'j' → logprob: -9.648208618164062
    4. 'k' → logprob: -12.273208618164062
    5. '3' → logprob: -12.898208618164062
    6. ']' → logprob: -13.085708618164062
    7. ' ' → logprob: -13.148208618164062
    8. '   ' → logprob: -13.585708618164062
    9. '
' → logprob: -13.773208618164062
    10. '2' → logprob: -14.210708618164062

Token 1632: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14075277745723724
    2. ']+' → logprob: -2.3907527923583984
    3. ']+=' → logprob: -4.140752792358398
    4. '+' → logprob: -4.890752792358398
    5. '   ' → logprob: -5.015752792358398
    6. '[' → logprob: -5.890752792358398
    7. '][' → logprob: -6.140752792358398
    8. ' ]' → logprob: -6.890752792358398
    9. '],' → logprob: -7.765752792358398
    10. ']=' → logprob: -7.890752792358398

Token 1633: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.49830421805381775
    2. ' +' → logprob: -1.1233042478561401
    3. '   ' → logprob: -3.7483041286468506
    4. 'dp' → logprob: -4.12330436706543
    5. '+=' → logprob: -4.99830436706543
    6. ' +=' → logprob: -5.12330436706543
    7. ']+' → logprob: -5.62330436706543
    8. ']' → logprob: -6.37330436706543
    9. ')+' → logprob: -6.49830436706543
    10. ' dp' → logprob: -6.74830436706543

Token 1634: ' max' (ID: 2999)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.17845000326633453
    2. '(np' → logprob: -2.303450107574463
    3. '1' → logprob: -3.428450107574463
    4. '(' → logprob: -4.053450107574463
    5. 'max' → logprob: -5.428450107574463
    6. '(max' → logprob: -5.553450107574463
    7. '(n' → logprob: -6.053450107574463
    8. '9' → logprob: -6.803450107574463
    9. '10' → logprob: -7.928450107574463
    10. '(min' → logprob: -8.428449630737305

Token 1635: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11365897208452225
    2. '(np' → logprob: -2.238658905029297
    3. 'np' → logprob: -7.988658905029297
    4. '((' → logprob: -9.238658905029297
    5. '0' → logprob: -9.238658905029297
    6. '(i' → logprob: -10.113658905029297
    7. '(max' → logprob: -10.363658905029297
    8. '(dp' → logprob: -10.363658905029297
    9. '(
' → logprob: -10.738658905029297
    10. 's' → logprob: -10.863658905029297

Token 1636: '0' (ID: 15)
  Prédit: '(np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(np' → logprob: -0.5912606716156006
    2. 'np' → logprob: -0.9662606716156006
    3. '(' → logprob: -2.9662606716156006
    4. '0' → logprob: -4.59126091003418
    5. '1' → logprob: -5.84126091003418
    6. '(max' → logprob: -7.71626091003418
    7. '10' → logprob: -8.71626091003418
    8. 'max' → logprob: -8.84126091003418
    9. ' np' → logprob: -8.84126091003418
    10. '9' → logprob: -9.46626091003418

Token 1637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22235418856143951
    2. ',np' → logprob: -1.7223541736602783
    3. '(np' → logprob: -4.597354412078857
    4. ' ,' → logprob: -5.347354412078857
    5. '[np' → logprob: -5.597354412078857
    6. ',n' → logprob: -6.972354412078857
    7. ',(' → logprob: -7.472354412078857
    8. '(' → logprob: -9.3473539352417
    9. '   ' → logprob: -9.5973539352417
    10. 'np' → logprob: -9.8473539352417

Token 1638: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.001420472632162273
    2. 'k' → logprob: -6.751420497894287
    3. 'min' → logprob: -8.626420021057129
    4. ' np' → logprob: -10.251420021057129
    5. '(np' → logprob: -11.126420021057129
    6. '1' → logprob: -12.251420021057129
    7. 'max' → logprob: -12.376420021057129
    8. '(' → logprob: -13.001420021057129
    9. 'dp' → logprob: -13.001420021057129
    10. '10' → logprob: -13.876420021057129

Token 1639: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.49594205617904663
    2. ' -' → logprob: -0.9959420561790466
    3. ')' → logprob: -4.870942115783691
    4. '-n' → logprob: -5.120942115783691
    5. '[i' → logprob: -5.870942115783691
    6. '-i' → logprob: -6.495942115783691
    7. '   ' → logprob: -7.745942115783691
    8. '1' → logprob: -7.870942115783691
    9. '-k' → logprob: -7.995942115783691
    10. ']' → logprob: -8.120942115783691

Token 1640: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20333707332611084
    2. '0' → logprob: -1.7033370733261108
    3. '(' → logprob: -7.4533371925354
    4. 'dp' → logprob: -7.5783371925354
    5. ')' → logprob: -8.203336715698242
    6. ' ' → logprob: -8.953336715698242
    7. '(dp' → logprob: -9.078336715698242
    8. 'int' → logprob: -9.703336715698242
    9. '9' → logprob: -10.015836715698242
    10. ' (' → logprob: -10.953336715698242

Token 1641: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01823762245476246
    2. '+' → logprob: -4.393237590789795
    3. ' )' → logprob: -6.018237590789795
    4. ')+' → logprob: -6.643237590789795
    5. ' +' → logprob: -7.268237590789795
    6. ')]' → logprob: -8.018238067626953
    7. ']' → logprob: -8.143238067626953
    8. ')])' → logprob: -8.518238067626953
    9. '),' → logprob: -8.893238067626953
    10. '])' → logprob: -9.393238067626953

Token 1642: ' nombres' (ID: 76205)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15218721330165863
    2. ' dp' → logprob: -2.0271871089935303
    3. 'for' → logprob: -5.277187347412109
    4. ' for' → logprob: -6.777187347412109
    5. '(dp' → logprob: -7.027187347412109
    6. '   ' → logprob: -7.152187347412109
    7. 'max' → logprob: -7.527187347412109
    8. ')' → logprob: -8.65218734741211
    9. '0' → logprob: -8.77718734741211
    10. '+' → logprob: -9.27718734741211

Token 1643: ' ayant' (ID: 45436)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4581987857818604
    2. ')' → logprob: -1.8331987857818604
    3. '[i' → logprob: -2.3331987857818604
    4. '+' → logprob: -2.5831987857818604
    5. '   ' → logprob: -2.5831987857818604
    6. ' +' → logprob: -2.7081987857818604
    7. '0' → logprob: -3.0831987857818604
    8. ']' → logprob: -3.5831987857818604
    9. ',' → logprob: -3.7081987857818604
    10. ' ' → logprob: -3.8331987857818604

Token 1644: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2954981327056885
    2. '0' → logprob: -1.4204981327056885
    3. 'non' → logprob: -2.4204981327056885
    4. 's' → logprob: -2.7954981327056885
    5. 'dp' → logprob: -3.0454981327056885
    6. ' choisi' → logprob: -3.1704981327056885
    7. ' non' → logprob: -3.7954981327056885
    8. 'des' → logprob: -3.9204981327056885
    9. ' ' → logprob: -4.045497894287109
    10. 'possible' → logprob: -4.420497894287109

Token 1645: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.699880838394165
    2. '0' → logprob: -1.949880838394165
    3. 'un' → logprob: -2.199880838394165
    4. 'non' → logprob: -2.199880838394165
    5. 'cho' → logprob: -3.574880838394165
    6. 'dé' → logprob: -4.574880599975586
    7. ' choisi' → logprob: -4.824880599975586
    8. 'max' → logprob: -4.949880599975586
    9. 'une' → logprob: -4.949880599975586
    10. 'de' → logprob: -5.199880599975586

Token 1646: ' chiffre' (ID: 107420)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2859240770339966
    2. 'non' → logprob: -1.7859240770339966
    3. ' non' → logprob: -1.7859240770339966
    4. ']' → logprob: -2.535923957824707
    5. '[' → logprob: -2.910923957824707
    6. '+' → logprob: -2.910923957824707
    7. ',' → logprob: -3.410923957824707
    8. ' +' → logprob: -3.410923957824707
    9. '[j' → logprob: -4.035923957824707
    10. ' ,' → logprob: -4.535923957824707

Token 1647: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.6101412773132324
    2. ' non' → logprob: -0.9851412773132324
    3. '_non' → logprob: -3.6101412773132324
    4. '   ' → logprob: -4.485141277313232
    5. '0' → logprob: -4.735141277313232
    6. '1' → logprob: -5.235141277313232
    7. ']' → logprob: -5.235141277313232
    8. ')' → logprob: -5.485141277313232
    9. 'not' → logprob: -5.610141277313232
    10. '][' → logprob: -6.110141277313232

Token 1648: '-z' (ID: 16826)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3615582287311554
    2. '-z' → logprob: -1.611558198928833
    3. '-zero' → logprob: -2.736558198928833
    4. 'zero' → logprob: -3.986558198928833
    5. '-' → logprob: -4.611558437347412
    6. ' zéro' → logprob: -5.236558437347412
    7. 'z' → logprob: -6.486558437347412
    8. '-n' → logprob: -7.236558437347412
    9. ' zero' → logprob: -7.486558437347412
    10. '=' → logprob: -7.861558437347412

Token 1649: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.009032515808939934
    2. 'é' → logprob: -5.759032726287842
    3. 'éo' → logprob: -6.509032726287842
    4. 'ero' → logprob: -6.509032726287842
    5. '0' → logprob: -7.009032726287842
    6. 'éros' → logprob: -7.634032726287842
    7. ' ' → logprob: -8.384032249450684
    8. '_' → logprob: -8.759032249450684
    9. '```' → logprob: -8.884032249450684
    10. 'o' → logprob: -8.884032249450684

Token 1650: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0730650424957275
    2. ' +' → logprob: -1.1980650424957275
    3. '+' → logprob: -1.3230650424957275
    4. ')+' → logprob: -3.4480650424957275
    5. '   ' → logprob: -3.8230650424957275
    6. ' )' → logprob: -4.323064804077148
    7. ']' → logprob: -4.823064804077148
    8. ']+' → logprob: -6.073064804077148
    9. 'for' → logprob: -6.323064804077148
    10. ' +
' → logprob: -6.573064804077148

Token 1651: ' dont' (ID: 11562)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.069304347038269
    2. '0' → logprob: -1.194304347038269
    3. '1' → logprob: -1.819304347038269
    4. 'max' → logprob: -2.5693044662475586
    5. 'np' → logprob: -2.9443044662475586
    6. ' ' → logprob: -4.319304466247559
    7. ' dp' → logprob: -4.569304466247559
    8. 'i' → logprob: -5.194304466247559
    9. '(' → logprob: -5.819304466247559
    10. 'j' → logprob: -5.819304466247559

Token 1652: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.052295148372650146
    2. 'les' → logprob: -3.677295207977295
    3. 'la' → logprob: -4.927295207977295
    4. ' le' → logprob: -5.427295207977295
    5. 'np' → logprob: -5.677295207977295
    6. 'dp' → logprob: -5.802295207977295
    7. 'leur' → logprob: -6.552295207977295
    8. '0' → logprob: -6.677295207977295
    9. 'ch' → logprob: -7.052295207977295
    10. 'max' → logprob: -7.177295207977295

Token 1653: ' chiffre' (ID: 107420)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.08915507048368454
    2. 'dern' → logprob: -3.2141549587249756
    3. 'val' → logprob: -3.5891549587249756
    4. 'digit' → logprob: -5.089155197143555
    5. 'd' → logprob: -5.589155197143555
    6. 'max' → logprob: -6.589155197143555
    7. 'prem' → logprob: -6.714155197143555
    8. 'c' → logprob: -7.089155197143555
    9. 'num' → logprob: -7.339155197143555
    10. 'dp' → logprob: -7.464155197143555

Token 1654: ' courant' (ID: 74694)
  Prédit: ' choisi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choisi' → logprob: -1.2315430641174316
    2. ' précédent' → logprob: -1.3565430641174316
    3. ' est' → logprob: -2.3565430641174316
    4. ' courant' → logprob: -2.9815430641174316
    5. ' suivant' → logprob: -3.1065430641174316
    6. ' actuel' → logprob: -3.4815430641174316
    7. 's' → logprob: -3.7315430641174316
    8. ' n' → logprob: -3.8565430641174316
    9. 'possible' → logprob: -3.9815430641174316
    10. ' vaut' → logprob: -3.9815430641174316

Token 1655: ' est' (ID: 893)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8109886050224304
    2. ')' → logprob: -1.4359886646270752
    3. ' +' → logprob: -2.185988664627075
    4. ' !=' → logprob: -3.435988664627075
    5. '!=' → logprob: -3.685988664627075
    6. ' )' → logprob: -4.060988426208496
    7. ' ' → logprob: -4.685988426208496
    8. ' <' → logprob: -4.685988426208496
    9. ']' → logprob: -4.810988426208496
    10. '<|end|>' → logprob: -5.248488426208496

Token 1656: ' strict' (ID: 12035)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20097923278808594
    2. '1' → logprob: -2.825979232788086
    3. 'strict' → logprob: -3.950979232788086
    4. ' ' → logprob: -4.200979232788086
    5. 'less' → logprob: -4.575979232788086
    6. ' un' → logprob: -4.825979232788086
    7. ' inférieur' → logprob: -4.825979232788086
    8. '<' → logprob: -5.075979232788086
    9. ' moins' → logprob: -5.075979232788086
    10. 'non' → logprob: -5.075979232788086

Token 1657: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.006350704003125429
    2. 'ly' → logprob: -5.381350517272949
    3. 'lement' → logprob: -7.131350517272949
    4. 'ment' → logprob: -7.381350517272949
    5. 'ément' → logprob: -8.63135051727295
    6. '   ' → logprob: -10.13135051727295
    7. 'nement' → logprob: -11.13135051727295
    8. '<' → logprob: -11.75635051727295
    9. 'emment' → logprob: -11.88135051727295
    10. ' inférieur' → logprob: -12.00635051727295

Token 1658: ' inférieur' (ID: 191498)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2013195902109146
    2. '1' → logprob: -2.576319694519043
    3. 'dp' → logprob: -3.076319694519043
    4. ' less' → logprob: -3.951319694519043
    5. ')' → logprob: -4.326319694519043
    6. ' dp' → logprob: -4.576319694519043
    7. ' ' → logprob: -4.576319694519043
    8. ' smaller' → logprob: -6.576319694519043
    9. 'less' → logprob: -7.326319694519043
    10. ' )' → logprob: -7.826319694519043

Token 1659: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18507809937000275
    2. '+' → logprob: -2.4350781440734863
    3. ' +' → logprob: -3.6850781440734863
    4. '   ' → logprob: -4.185078144073486
    5. ' )' → logprob: -4.560078144073486
    6. 'if' → logprob: -5.310078144073486
    7. ' if' → logprob: -5.810078144073486
    8. '0' → logprob: -6.060078144073486
    9. 'dp' → logprob: -6.310078144073486
    10. ')+' → logprob: -6.435078144073486

Token 1660: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -2.129266067640856e-05
    2. ' np' → logprob: -11.250020980834961
    3. 'max' → logprob: -11.750020980834961
    4. 'n' → logprob: -15.500020980834961
    5. '
' → logprob: -16.37502098083496
    6. 'num' → logprob: -17.12502098083496
    7. '=np' → logprob: -17.50002098083496
    8. 'point' → logprob: -17.75002098083496
    9. '_np' → logprob: -17.75002098083496
    10. '1' → logprob: -17.87502098083496

Token 1661: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37826859951019287
    2. ')' → logprob: -1.3782685995101929
    3. '<|end|>' → logprob: -3.8782687187194824
    4. 'for' → logprob: -4.128268718719482
    5. '+' → logprob: -4.878268718719482
    6. ' for' → logprob: -5.003268718719482
    7. '<|end|>' → logprob: -6.003268718719482
    8. '  ' → logprob: -6.378268718719482
    9. '
' → logprob: -6.753268718719482
    10. '    ' → logprob: -6.753268718719482

Token 1662: ' non' (ID: 2893)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.3473414182662964
    2. 'max' → logprob: -1.4723414182662964
    3. '#' → logprob: -2.472341537475586
    4. 'not' → logprob: -2.722341537475586
    5. ' dp' → logprob: -2.847341537475586
    6. '1' → logprob: -2.847341537475586
    7. '0' → logprob: -3.097341537475586
    8. ' not' → logprob: -3.847341537475586
    9. ' #' → logprob: -3.847341537475586
    10. ' max' → logprob: -4.097341537475586

Token 1663: ' nul' (ID: 64435)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19620180130004883
    2. 'zero' → logprob: -2.321201801300049
    3. 'n' → logprob: -3.946201801300049
    4. 'nul' → logprob: -3.946201801300049
    5. 'z' → logprob: -4.446201801300049
    6. ' zéro' → logprob: -4.821201801300049
    7. ' zero' → logprob: -5.321201801300049
    8. '=' → logprob: -5.446201801300049
    9. ' nul' → logprob: -5.571201801300049
    10. 'null' → logprob: -6.571201801300049

Token 1664: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10977625101804733
    2. ')' → logprob: -3.359776258468628
    3. 'for' → logprob: -3.484776258468628
    4. '<|end|>' → logprob: -4.234776020050049
    5. ' for' → logprob: -4.359776020050049
    6. '+' → logprob: -5.359776020050049
    7. '<|end|>' → logprob: -6.234776020050049
    8. ',' → logprob: -7.234776020050049
    9. ' +' → logprob: -7.609776020050049
    10. '
' → logprob: -7.734776020050049

Token 1665: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5232123136520386
    2. ')' → logprob: -1.6482123136520386
    3. 'for' → logprob: -2.773212432861328
    4. '+' → logprob: -2.773212432861328
    5. ' for' → logprob: -2.898212432861328
    6. ' +' → logprob: -4.273212432861328
    7. '<|end|>' → logprob: -5.398212432861328
    8. ')+' → logprob: -6.023212432861328
    9. ' )' → logprob: -6.148212432861328
    10. '    ' → logprob: -6.398212432861328

Token 1666: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19365087151527405
    2. '+' → logprob: -2.943650960922241
    3. ' for' → logprob: -3.318650960922241
    4. 'for' → logprob: -3.443650960922241
    5. ')' → logprob: -4.068650722503662
    6. ' +' → logprob: -4.318650722503662
    7. 'dp' → logprob: -4.568650722503662
    8. '       ' → logprob: -5.818650722503662
    9. '    ' → logprob: -6.818650722503662
    10. '*' → logprob: -6.818650722503662

Token 1667: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5398168563842773
    2. '+' → logprob: -1.4148168563842773
    3. ' +' → logprob: -2.2898168563842773
    4. 'dp' → logprob: -3.5398168563842773
    5. ')' → logprob: -3.6648168563842773
    6. '```' → logprob: -5.664816856384277
    7. ')+' → logprob: -5.789816856384277
    8. 'for' → logprob: -6.414816856384277
    9. ' dp' → logprob: -6.414816856384277
    10. '+
' → logprob: -6.789816856384277

Token 1668: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0643246173858643
    2. 'dp' → logprob: -1.1893246173858643
    3. '   ' → logprob: -1.3143246173858643
    4. ' for' → logprob: -2.6893246173858643
    5. ' dp' → logprob: -5.564324378967285
    6. '+' → logprob: -5.814324378967285
    7. '#' → logprob: -5.814324378967285
    8. ')' → logprob: -7.314324378967285
    9. ' ' → logprob: -7.314324378967285
    10. ' +' → logprob: -8.064324378967285

Token 1669: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009260615333914757
    2. ' dp' → logprob: -4.759260654449463
    3. '(dp' → logprob: -8.259260177612305
    4. '   ' → logprob: -8.384260177612305
    5. 'max' → logprob: -9.509260177612305
    6. '(' → logprob: -11.259260177612305
    7. '       ' → logprob: -11.634260177612305
    8. ' ' → logprob: -11.634260177612305
    9. '	dp' → logprob: -11.634260177612305
    10. ' ' → logprob: -11.884260177612305

Token 1670: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38706114888191223
    2. '0' → logprob: -1.1370611190795898
    3. '[i' → logprob: -8.88706111907959
    4. '```' → logprob: -11.07456111907959
    5. '[' → logprob: -12.01206111907959
    6. 'i' → logprob: -12.07456111907959
    7. '
' → logprob: -12.69956111907959
    8. ' ' → logprob: -12.88706111907959
    9. '_' → logprob: -13.44956111907959
    10. '`' → logprob: -13.69956111907959

Token 1671: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.603335638530552e-05
    2. '[' → logprob: -9.875096321105957
    3. 'i' → logprob: -10.875096321105957
    4. '```' → logprob: -12.000096321105957
    5. '
' → logprob: -12.875096321105957
    6. '[j' → logprob: -13.125096321105957
    7. '#' → logprob: -13.250096321105957
    8. '[I' → logprob: -13.375096321105957
    9. '   ' → logprob: -13.500096321105957
    10. ' [' → logprob: -13.500096321105957

Token 1672: '-' (ID: 12)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013344056205824018
    2. '-' → logprob: -7.126334190368652
    3. '[i' → logprob: -8.126334190368652
    4. '   ' → logprob: -9.626334190368652
    5. ' ][' → logprob: -9.626334190368652
    6. ']' → logprob: -10.376334190368652
    7. '[' → logprob: -11.251334190368652
    8. 'i' → logprob: -11.626334190368652
    9. '       ' → logprob: -12.126334190368652
    10. '#' → logprob: -12.126334190368652

Token 1673: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. '0' → logprob: -12.000014305114746
    3. '   ' → logprob: -12.875014305114746
    4. '][' → logprob: -13.125014305114746
    5. ' ' → logprob: -13.750014305114746
    6. '-' → logprob: -14.000014305114746
    7. 'i' → logprob: -15.125014305114746
    8. 'j' → logprob: -15.750014305114746
    9. 'prev' → logprob: -16.00001335144043
    10. '#' → logprob: -16.00001335144043

Token 1674: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001284875557757914
    2. '[' → logprob: -7.376285076141357
    3. '[i' → logprob: -7.751285076141357
    4. ' ][' → logprob: -9.1262845993042
    5. '[j' → logprob: -10.8762845993042
    6. '#' → logprob: -10.8762845993042
    7. '   ' → logprob: -11.1262845993042
    8. ']' → logprob: -11.2512845993042
    9. ')[' → logprob: -11.8762845993042
    10. '           ' → logprob: -12.0012845993042

Token 1675: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09056336432695389
    2. '1' → logprob: -2.4655632972717285
    3. '3' → logprob: -6.4655632972717285
    4. ' ' → logprob: -10.465563774108887
    5. '   ' → logprob: -11.965563774108887
    6. ']' → logprob: -12.215563774108887
    7. '2' → logprob: -12.340563774108887
    8. 'j' → logprob: -12.465563774108887
    9. '
' → logprob: -12.465563774108887
    10. 'k' → logprob: -12.840563774108887

Token 1676: ']*' (ID: 18579)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005291392095386982
    2. '[' → logprob: -6.25529146194458
    3. ']' → logprob: -6.38029146194458
    4. '   ' → logprob: -7.13029146194458
    5. ' ][' → logprob: -7.75529146194458
    6. '[i' → logprob: -9.005290985107422
    7. ']*' → logprob: -9.380290985107422
    8. '[j' → logprob: -10.005290985107422
    9. '       ' → logprob: -10.380290985107422
    10. '           ' → logprob: -10.505290985107422

Token 1677: '9' (ID: 24)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.3825448453426361
    2. 'max' → logprob: -1.3825448751449585
    3. '(np' → logprob: -3.382544755935669
    4. '(max' → logprob: -4.007544994354248
    5. '(' → logprob: -4.382544994354248
    6. ' np' → logprob: -7.257544994354248
    7. 'min' → logprob: -7.382544994354248
    8. ' max' → logprob: -8.38254451751709
    9. '0' → logprob: -8.50754451751709
    10. '(min' → logprob: -8.63254451751709

Token 1678: ':' (ID: 25)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.46930599212646484
    2. ' +' → logprob: -1.0943059921264648
    3. ')' → logprob: -4.594305992126465
    4. '[i' → logprob: -5.094305992126465
    5. '-' → logprob: -5.219305992126465
    6. '   ' → logprob: -5.344305992126465
    7. ')+' → logprob: -5.969305992126465
    8. ' -' → logprob: -6.094305992126465
    9. '[' → logprob: -6.344305992126465
    10. ']' → logprob: -6.719305992126465

Token 1679: ' nombres' (ID: 76205)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.4641719460487366
    2. 'dp' → logprob: -1.2141718864440918
    3. ' dp' → logprob: -3.339171886444092
    4. '(' → logprob: -4.464171886444092
    5. '+' → logprob: -4.839171886444092
    6. ' ' → logprob: -4.964171886444092
    7. '(dp' → logprob: -5.964171886444092
    8. ' +' → logprob: -6.089171886444092
    9. ' (' → logprob: -6.214171886444092
    10. '0' → logprob: -6.464171886444092

Token 1680: ' strict' (ID: 12035)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.305399090051651
    2. '[' → logprob: -1.8053990602493286
    3. '[j' → logprob: -3.180399179458618
    4. '   ' → logprob: -3.555399179458618
    5. ' +' → logprob: -5.180398941040039
    6. '+' → logprob: -5.430398941040039
    7. ')' → logprob: -5.680398941040039
    8. ' [' → logprob: -5.930398941040039
    9. ' ' → logprob: -6.430398941040039
    10. '*' → logprob: -7.055398941040039

Token 1681: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.008531245402991772
    2. 'ly' → logprob: -5.008531093597412
    3. 'ément' → logprob: -7.133531093597412
    4. 'rement' → logprob: -7.758531093597412
    5. 'iquement' → logprob: -8.00853157043457
    6. '   ' → logprob: -10.38353157043457
    7. 'ivement' → logprob: -10.38353157043457
    8. 'e' → logprob: -10.63353157043457
    9. 'ment' → logprob: -10.63353157043457
    10. 'ument' → logprob: -10.63353157043457

Token 1682: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.021734734997153282
    2. ' inf' → logprob: -4.146734714508057
    3. 'infer' → logprob: -6.021734714508057
    4. 'moins' → logprob: -6.521734714508057
    5. 'plus' → logprob: -6.646734714508057
    6. ' plus' → logprob: -8.521735191345215
    7. ' inférieur' → logprob: -9.271735191345215
    8. 'in' → logprob: -9.271735191345215
    9. '_inf' → logprob: -10.646735191345215
    10. 'mo' → logprob: -10.771735191345215

Token 1683: 'érieurs' (ID: 97672)
  Prédit: 'érieurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieurs' → logprob: -0.0032763411290943623
    2. 'érieur' → logprob: -6.128276348114014
    3. 'érieure' → logprob: -7.253276348114014
    4. 'érieures' → logprob: -9.003275871276855
    5. 'dp' → logprob: -9.628275871276855
    6. 'érés' → logprob: -9.628275871276855
    7. 'er' → logprob: -10.128275871276855
    8. 'é' → logprob: -10.378275871276855
    9. '[' → logprob: -11.128275871276855
    10. '0' → logprob: -11.378275871276855

Token 1684: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7662000060081482
    2. ')' → logprob: -1.141200065612793
    3. ' -' → logprob: -2.641200065612793
    4. '[i' → logprob: -3.266200065612793
    5. ' +' → logprob: -4.266200065612793
    6. '-' → logprob: -4.266200065612793
    7. '+' → logprob: -4.766200065612793
    8. ' ' → logprob: -5.266200065612793
    9. ' if' → logprob: -5.266200065612793
    10. 'dp' → logprob: -5.266200065612793

Token 1685: ' n' (ID: 297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8598712682723999
    2. '9' → logprob: -1.2348712682724
    3. '10' → logprob: -1.4848712682724
    4. 'dp' → logprob: -4.2348713874816895
    5. 'k' → logprob: -4.4848713874816895
    6. ' ' → logprob: -4.9848713874816895
    7. 's' → logprob: -5.1098713874816895
    8. ' i' → logprob: -5.3598713874816895
    9. 'point' → logprob: -5.4848713874816895
    10. 'np' → logprob: -6.2348713874816895

Token 1686: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05112157016992569
    2. ' +' → logprob: -3.426121473312378
    3. '+' → logprob: -5.051121711730957
    4. ')' → logprob: -5.301121711730957
    5. '
' → logprob: -7.426121711730957
    6. ']' → logprob: -7.551121711730957
    7. ' -' → logprob: -7.676121711730957
    8. ')+' → logprob: -7.676121711730957
    9. ' if' → logprob: -7.801121711730957
    10. 'for' → logprob: -7.801121711730957

Token 1687: ' la' (ID: 557)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.10322647541761398
    2. ' ' → logprob: -2.85322642326355
    3. '1' → logprob: -4.603226661682129
    4. '[' → logprob: -4.853226661682129
    5. '0' → logprob: -5.103226661682129
    6. '[i' → logprob: -5.853226661682129
    7. 'i' → logprob: -5.978226661682129
    8. '```' → logprob: -6.603226661682129
    9. 'l' → logprob: -6.728226661682129
    10. 'dp' → logprob: -7.103226661682129

Token 1688: ' position' (ID: 4010)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.49183350801467896
    2. 'i' → logprob: -2.241833448410034
    3. '[' → logprob: -2.366833448410034
    4. '0' → logprob: -3.366833448410034
    5. '1' → logprob: -3.616833448410034
    6. '[i' → logprob: -3.741833448410034
    7. ' ' → logprob: -3.866833448410034
    8. 'dp' → logprob: -3.991833448410034
    9. 'j' → logprob: -4.491833686828613
    10. '```' → logprob: -4.741833686828613

Token 1689: ' précédente' (ID: 177319)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3747925758361816
    2. '+' → logprob: -1.4997925758361816
    3. ']' → logprob: -1.6247925758361816
    4. ' +' → logprob: -2.6247925758361816
    5. '[i' → logprob: -3.6247925758361816
    6. ' ' → logprob: -3.8747925758361816
    7. ' courant' → logprob: -3.8747925758361816
    8. ']+' → logprob: -3.9997925758361816
    9. '[' → logprob: -4.124792575836182
    10. ')' → logprob: -4.249792575836182

Token 1690: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09870221465826035
    2. 'dp' → logprob: -3.4737021923065186
    3. 'for' → logprob: -3.7237021923065186
    4. '+' → logprob: -4.098702430725098
    5. ' +' → logprob: -5.223702430725098
    6. ' for' → logprob: -5.348702430725098
    7. '
' → logprob: -5.848702430725098
    8. ')' → logprob: -5.973702430725098
    9. '```' → logprob: -6.348702430725098
    10. ' dp' → logprob: -6.848702430725098

Token 1691: ' ajouter' (ID: 78457)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0483059398829937
    2. ' ' → logprob: -3.5483059883117676
    3. 'dp' → logprob: -5.048305988311768
    4. '(' → logprob: -5.548305988311768
    5. '#' → logprob: -6.173305988311768
    6. '   ' → logprob: -6.673305988311768
    7. ' (' → logprob: -6.673305988311768
    8. '1' → logprob: -7.548305988311768
    9. ' dp' → logprob: -7.923305988311768
    10. '```' → logprob: -8.17330551147461

Token 1692: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.608327329158783
    2. '9' → logprob: -1.3583273887634277
    3. ' ' → logprob: -2.3583273887634277
    4. '   ' → logprob: -4.108327388763428
    5. ' un' → logprob: -4.233327388763428
    6. '    ' → logprob: -4.358327388763428
    7. ' une' → logprob: -4.733327388763428
    8. ' neuf' → logprob: -4.733327388763428
    9. 'max' → logprob: -5.233327388763428
    10. '0' → logprob: -5.608327388763428

Token 1693: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20850391685962677
    2. '9' → logprob: -2.4585039615631104
    3. ' ' → logprob: -3.4585039615631104
    4. '(' → logprob: -3.8335039615631104
    5. '0' → logprob: -4.583503723144531
    6. 'np' → logprob: -5.333503723144531
    7. '[' → logprob: -5.458503723144531
    8. 'dp' → logprob: -5.583503723144531
    9. '   ' → logprob: -5.958503723144531
    10. 'i' → logprob: -6.083503723144531

Token 1694: '..' (ID: 485)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0849534273147583
    2. ' +' → logprob: -1.0849534273147583
    3. '0' → logprob: -2.2099533081054688
    4. '+' → logprob: -3.0849533081054688
    5. ')' → logprob: -3.4599533081054688
    6. ')+' → logprob: -3.7099533081054688
    7. '    ' → logprob: -3.9599533081054688
    8. ' ' → logprob: -3.9599533081054688
    9. ' *' → logprob: -4.209953308105469
    10. ' )' → logprob: -4.709953308105469

Token 1695: '9' (ID: 24)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7185449600219727
    2. '0' → logprob: -0.9685449600219727
    3. '9' → logprob: -2.4685449600219727
    4. '1' → logprob: -3.8435449600219727
    5. '2' → logprob: -5.093544960021973
    6. ' )' → logprob: -5.843544960021973
    7. '   ' → logprob: -5.843544960021973
    8. ' ,' → logprob: -6.718544960021973
    9. '```' → logprob: -6.843544960021973
    10. '  ' → logprob: -6.968544960021973

Token 1696: ' ici' (ID: 27994)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14118742942810059
    2. '+' → logprob: -3.0161874294281006
    3. ' +' → logprob: -3.6411874294281006
    4. 'dp' → logprob: -4.01618766784668
    5. 'for' → logprob: -4.39118766784668
    6. '
' → logprob: -5.01618766784668
    7. ')' → logprob: -5.01618766784668
    8. ' for' → logprob: -5.89118766784668
    9. ')+' → logprob: -6.01618766784668
    10. ']' → logprob: -6.76618766784668

Token 1697: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029436858370900154
    2. ' +' → logprob: -4.154437065124512
    3. '
' → logprob: -5.154437065124512
    4. '+' → logprob: -6.029437065124512
    5. 'dp' → logprob: -6.154437065124512
    6. 'for' → logprob: -6.779437065124512
    7. ' for' → logprob: -7.279437065124512
    8. ')' → logprob: -7.779437065124512
    9. '    
' → logprob: -9.029437065124512
    10. ' dp' → logprob: -9.529437065124512

Token 1698: 'tou' (ID: 143506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037379679270088673
    2. ' )' → logprob: -6.253737926483154
    3. ')+' → logprob: -7.878737926483154
    4. '+' → logprob: -7.878737926483154
    5. ')
' → logprob: -8.003738403320312
    6. '   ' → logprob: -8.503738403320312
    7. ')*' → logprob: -9.003738403320312
    8. '9' → logprob: -9.378738403320312
    9. ' +' → logprob: -10.753738403320312
    10. '#' → logprob: -10.753738403320312

Token 1699: 'jours' (ID: 15650)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5011718273162842
    2. ' )' → logprob: -1.6261718273162842
    3. '+' → logprob: -2.626171827316284
    4. '9' → logprob: -3.751171827316284
    5. '0' → logprob: -4.126172065734863
    6. ',' → logprob: -4.376172065734863
    7. '#' → logprob: -4.626172065734863
    8. ' ' → logprob: -4.751172065734863
    9. '   ' → logprob: -4.751172065734863
    10. '])' → logprob: -5.001172065734863

Token 1700: ' un' (ID: 537)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.116729974746704
    2. ' *' → logprob: -1.366729974746704
    3. '9' → logprob: -1.491729974746704
    4. ')' → logprob: -2.866729974746704
    5. '   ' → logprob: -3.366729974746704
    6. '+' → logprob: -3.741729974746704
    7. '```' → logprob: -4.366729736328125
    8. ' +' → logprob: -4.866729736328125
    9. '    ' → logprob: -4.991729736328125
    10. ' ' → logprob: -5.241729736328125

Token 1701: ' chiffre' (ID: 107420)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.9986376166343689
    2. 'digit' → logprob: -1.4986376762390137
    3. ' chiffre' → logprob: -1.7486376762390137
    4. ' digit' → logprob: -2.9986376762390137
    5. ')' → logprob: -3.4986376762390137
    6. ' ' → logprob: -3.7486376762390137
    7. ' espace' → logprob: -3.9986376762390137
    8. '```' → logprob: -4.123637676239014
    9. '9' → logprob: -4.748637676239014
    10. 'multip' → logprob: -4.998637676239014

Token 1702: ' non' (ID: 2893)
  Prédit: ' non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' non' → logprob: -0.7608564496040344
    2. ')' → logprob: -0.8858564496040344
    3. 'non' → logprob: -3.1358563899993896
    4. ' )' → logprob: -3.8858563899993896
    5. '   ' → logprob: -4.760856628417969
    6. ' compris' → logprob: -4.885856628417969
    7. '<|end|>' → logprob: -4.885856628417969
    8. ' entre' → logprob: -5.510856628417969
    9. ' différent' → logprob: -5.760856628417969
    10. ' ' → logprob: -6.260856628417969

Token 1703: '-z' (ID: 16826)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09313209354877472
    2. ' zéro' → logprob: -3.3431320190429688
    3. '_' → logprob: -4.343132019042969
    4. 'z' → logprob: -4.968132019042969
    5. '=' → logprob: -5.093132019042969
    6. ' ' → logprob: -5.218132019042969
    7. 'zero' → logprob: -5.218132019042969
    8. ')' → logprob: -5.843132019042969
    9. ' zero' → logprob: -5.843132019042969
    10. ' ' → logprob: -6.093132019042969

Token 1704: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.00148307834751904
    2. 'éros' → logprob: -7.876482963562012
    3. 'é' → logprob: -8.251482963562012
    4. '0' → logprob: -8.501482963562012
    5. '_' → logprob: -8.751482963562012
    6. 'ero' → logprob: -9.001482963562012
    7. ' ' → logprob: -9.876482963562012
    8. '   ' → logprob: -10.501482963562012
    9. 'ro' → logprob: -10.501482963562012
    10. ' ' → logprob: -10.626482963562012

Token 1705: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026073265820741653
    2. ']' → logprob: -4.651073455810547
    3. '   ' → logprob: -5.026073455810547
    4. '])' → logprob: -5.651073455810547
    5. ' )' → logprob: -6.151073455810547
    6. ')]' → logprob: -6.901073455810547
    7. ')+' → logprob: -7.276073455810547
    8. '#' → logprob: -7.776073455810547
    9. '+' → logprob: -8.276073455810547
    10. ')])' → logprob: -8.526073455810547

Token 1706: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007442755158990622
    2. '
' → logprob: -5.882442951202393
    3. ' for' → logprob: -6.132442951202393
    4. 'for' → logprob: -6.882442951202393
    5. '+' → logprob: -8.257442474365234
    6. ' +' → logprob: -8.257442474365234
    7. '    
' → logprob: -8.507442474365234
    8. ')' → logprob: -8.757442474365234
    9. '<|end|>' → logprob: -9.257442474365234
    10. '```' → logprob: -9.507442474365234

Token 1707: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039959024637937546
    2. ' for' → logprob: -3.789958953857422
    3. 'for' → logprob: -4.164958953857422
    4. 'dp' → logprob: -7.414958953857422
    5. '	for' → logprob: -8.789958953857422
    6. '
' → logprob: -10.039958953857422
    7. ' +' → logprob: -10.414958953857422
    8. '  ' → logprob: -10.539958953857422
    9. ' ' → logprob: -10.664958953857422
    10. ')' → logprob: -10.664958953857422

Token 1708: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40079033374786377
    2. 'for' → logprob: -1.1507903337478638
    3. 'dp' → logprob: -4.775790214538574
    4. ' for' → logprob: -5.275790214538574
    5. '```' → logprob: -9.400790214538574
    6. '	for' → logprob: -9.650790214538574
    7. '
' → logprob: -10.650790214538574
    8. '#' → logprob: -10.775790214538574
    9. '       ' → logprob: -10.900790214538574
    10. ' dp' → logprob: -11.025790214538574

Token 1709: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1380736380815506
    2. 'dp' → logprob: -2.138073682785034
    3. ' for' → logprob: -5.138073444366455
    4. '   ' → logprob: -5.638073444366455
    5. '#' → logprob: -7.888073444366455
    6. '```' → logprob: -8.263073921203613
    7. '+' → logprob: -8.638073921203613
    8. '=' → logprob: -8.763073921203613
    9. ' dp' → logprob: -8.763073921203613
    10. '
' → logprob: -9.388073921203613

Token 1710: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.013944054953753948
    2. '   ' → logprob: -5.013944149017334
    3. 'for' → logprob: -5.138944149017334
    4. ' dp' → logprob: -6.888944149017334
    5. 'if' → logprob: -8.888943672180176
    6. ' for' → logprob: -9.888943672180176
    7. '
' → logprob: -10.138943672180176
    8. '(dp' → logprob: -10.513943672180176
    9. '0' → logprob: -11.763943672180176
    10. '#' → logprob: -11.763943672180176

Token 1711: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2520367503166199
    2. '1' → logprob: -1.5020368099212646
    3. '[i' → logprob: -10.502037048339844
    4. '```' → logprob: -10.752037048339844
    5. '[' → logprob: -11.252037048339844
    6. '_' → logprob: -11.939537048339844
    7. ' ' → logprob: -12.002037048339844
    8. 'i' → logprob: -12.689537048339844
    9. '
' → logprob: -13.064537048339844
    10. '   ' → logprob: -13.064537048339844

Token 1712: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.763666947837919e-05
    2. '   ' → logprob: -10.87504768371582
    3. '[' → logprob: -11.37504768371582
    4. 'i' → logprob: -12.00004768371582
    5. '
' → logprob: -13.25004768371582
    6. ' [' → logprob: -13.62504768371582
    7. '[I' → logprob: -13.87504768371582
    8. '```' → logprob: -13.87504768371582
    9. '][' → logprob: -14.00004768371582
    10. 'import' → logprob: -14.12504768371582

Token 1713: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.32435762882232666
    2. '-' → logprob: -1.8243576288223267
    3. '][' → logprob: -2.199357509613037
    4. '   ' → logprob: -6.324357509613037
    5. '[' → logprob: -6.949357509613037
    6. 'i' → logprob: -7.199357509613037
    7. '1' → logprob: -8.199357986450195
    8. ' -' → logprob: -8.699357986450195
    9. '       ' → logprob: -9.199357986450195
    10. '#' → logprob: -9.449357986450195

Token 1714: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005854414775967598
    2. 'i' → logprob: -7.625585556030273
    3. '   ' → logprob: -9.625585556030273
    4. '```' → logprob: -11.875585556030273
    5. '-' → logprob: -12.250585556030273
    6. 'prev' → logprob: -13.250585556030273
    7. '       ' → logprob: -13.375585556030273
    8. '#' → logprob: -13.375585556030273
    9. '][' → logprob: -13.375585556030273
    10. ' ' → logprob: -13.500585556030273

Token 1715: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08034029603004456
    2. '[i' → logprob: -2.5803403854370117
    3. ' ][' → logprob: -7.330340385437012
    4. '[' → logprob: -7.580340385437012
    5. '   ' → logprob: -8.955340385437012
    6. ']' → logprob: -10.580340385437012
    7. ')[' → logprob: -10.830340385437012
    8. ' ' → logprob: -11.455340385437012
    9. '#' → logprob: -11.580340385437012
    10. 'i' → logprob: -11.705340385437012

Token 1716: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03379069268703461
    2. '0' → logprob: -3.4087905883789062
    3. '3' → logprob: -9.033790588378906
    4. 'i' → logprob: -11.658790588378906
    5. 'j' → logprob: -12.408790588378906
    6. '2' → logprob: -12.908790588378906
    7. '[' → logprob: -13.096290588378906
    8. '
' → logprob: -13.158790588378906
    9. 'k' → logprob: -14.158790588378906
    10. ' ' → logprob: -14.221290588378906

Token 1717: ']:' (ID: 12433)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02364153228700161
    2. '[' → logprob: -3.773641586303711
    3. ']' → logprob: -8.273641586303711
    4. '   ' → logprob: -10.023641586303711
    5. ' ][' → logprob: -10.273641586303711
    6. '#' → logprob: -11.398641586303711
    7. '[j' → logprob: -11.523641586303711
    8. '[i' → logprob: -11.648641586303711
    9. ')[' → logprob: -11.898641586303711
    10. '       ' → logprob: -12.773641586303711

Token 1718: ' nombres' (ID: 76205)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004334575962275267
    2. ' dp' → logprob: -6.004334449768066
    3. '0' → logprob: -7.129334449768066
    4. '9' → logprob: -8.129334449768066
    5. '(dp' → logprob: -8.254334449768066
    6. '(' → logprob: -8.879334449768066
    7. 'max' → logprob: -8.879334449768066
    8. '1' → logprob: -9.129334449768066
    9. '+' → logprob: -9.629334449768066
    10. '=' → logprob: -11.004334449768066

Token 1719: ' strict' (ID: 12035)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3047935962677002
    2. '[' → logprob: -1.4297935962677002
    3. '   ' → logprob: -4.054793357849121
    4. '[j' → logprob: -6.304793357849121
    5. ' [' → logprob: -6.429793357849121
    6. 'for' → logprob: -6.929793357849121
    7. ' ' → logprob: -8.554793357849121
    8. '```' → logprob: -8.804793357849121
    9. '#' → logprob: -8.929793357849121
    10. '       ' → logprob: -9.054793357849121

Token 1720: 'ement' (ID: 962)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27393338084220886
    2. '       ' → logprob: -3.1489334106445312
    3. '           ' → logprob: -3.1489334106445312
    4. '1' → logprob: -3.6489334106445312
    5. 'for' → logprob: -3.7739334106445312
    6. '[' → logprob: -4.648933410644531
    7. '          ' → logprob: -4.773933410644531
    8. ']' → logprob: -5.023933410644531
    9. 'y' → logprob: -5.023933410644531
    10. '   ' → logprob: -5.023933410644531

Token 1721: ' inf' (ID: 5603)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6655920147895813
    2. '][' → logprob: -1.1655919551849365
    3. ']' → logprob: -2.7905919551849365
    4. 'non' → logprob: -3.2905919551849365
    5. ' non' → logprob: -3.5405919551849365
    6. '[j' → logprob: -4.040592193603516
    7. '[' → logprob: -4.915592193603516
    8. '+' → logprob: -5.290592193603516
    9. 'for' → logprob: -5.790592193603516
    10. '0' → logprob: -6.290592193603516

Token 1722: 'érieurs' (ID: 97672)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14399686455726624
    2. '1' → logprob: -2.2689969539642334
    3. '   ' → logprob: -3.6439969539642334
    4. '       ' → logprob: -6.893996715545654
    5. '[' → logprob: -7.018996715545654
    6. '[i' → logprob: -8.018997192382812
    7. 'érieur' → logprob: -8.518997192382812
    8. 'orm' → logprob: -8.893997192382812
    9. 'er' → logprob: -9.268997192382812
    10. 'o' → logprob: -9.393997192382812

Token 1723: ' à' (ID: 1221)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.35692039132118225
    2. '[' → logprob: -1.3569203615188599
    3. '][' → logprob: -3.8569204807281494
    4. '   ' → logprob: -4.23192024230957
    5. '[j' → logprob: -5.98192024230957
    6. ']' → logprob: -6.35692024230957
    7. ')' → logprob: -7.48192024230957
    8. ' [' → logprob: -7.48192024230957
    9. '0' → logprob: -7.98192024230957
    10. '```' → logprob: -8.23192024230957

Token 1724: ' n' (ID: 297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010693108662962914
    2. '[i' → logprob: -5.635693073272705
    3. ' i' → logprob: -5.885693073272705
    4. '9' → logprob: -6.385693073272705
    5. 'n' → logprob: -6.510693073272705
    6. '1' → logprob: -8.385693550109863
    7. 'dp' → logprob: -8.760693550109863
    8. '(i' → logprob: -9.260693550109863
    9. '   ' → logprob: -9.510693550109863
    10. 's' → logprob: -9.635693550109863

Token 1725: ' déjà' (ID: 21229)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5341774225234985
    2. '[i' → logprob: -1.6591774225234985
    3. '[' → logprob: -2.034177303314209
    4. 'for' → logprob: -3.409177303314209
    5. ' for' → logprob: -3.784177303314209
    6. ' +' → logprob: -4.659177303314209
    7. 'dp' → logprob: -5.534177303314209
    8. ')' → logprob: -5.784177303314209
    9. '+' → logprob: -5.909177303314209
    10. '][' → logprob: -6.034177303314209

Token 1726: ' avec' (ID: 3937)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5348682999610901
    2. '[i' → logprob: -0.9098682999610901
    3. 'dp' → logprob: -5.784868240356445
    4. ' [' → logprob: -6.159868240356445
    5. '   ' → logprob: -6.409868240356445
    6. '[j' → logprob: -6.534868240356445
    7. '1' → logprob: -7.534868240356445
    8. ']' → logprob: -8.159868240356445
    9. ' présents' → logprob: -8.159868240356445
    10. ' ' → logprob: -8.284868240356445

Token 1727: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00388355809263885
    2. ' ' → logprob: -6.128883361816406
    3. 'dp' → logprob: -7.378883361816406
    4. '9' → logprob: -7.753883361816406
    5. '0' → logprob: -8.003883361816406
    6. '   ' → logprob: -8.378883361816406
    7. ' dp' → logprob: -11.128883361816406
    8. '  ' → logprob: -11.378883361816406
    9. '```' → logprob: -11.628883361816406
    10. '       ' → logprob: -12.003883361816406

Token 1728: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006214152672328055
    2. '0' → logprob: -8.125621795654297
    3. 'dp' → logprob: -8.875621795654297
    4. '9' → logprob: -9.500621795654297
    5. ' ' → logprob: -9.500621795654297
    6. '   ' → logprob: -11.500621795654297
    7. '
' → logprob: -12.250621795654297
    8. '#' → logprob: -12.625621795654297
    9. '[' → logprob: -12.750621795654297
    10. 'i' → logprob: -12.875621795654297

Token 1729: ' chiffre' (ID: 107420)
  Prédit: ' non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' non' → logprob: -0.20176932215690613
    2. 'non' → logprob: -2.3267693519592285
    3. ']' → logprob: -3.9517693519592285
    4. '[' → logprob: -4.4517693519592285
    5. ' ' → logprob: -4.7017693519592285
    6. ' [' → logprob: -4.8267693519592285
    7. 'dp' → logprob: -5.3267693519592285
    8. '   ' → logprob: -5.3267693519592285
    9. '[j' → logprob: -5.3267693519592285
    10. '1' → logprob: -5.7017693519592285

Token 1730: ' non' (ID: 2893)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.168567180633545
    2. 'non' → logprob: -1.418567180633545
    3. '0' → logprob: -2.168567180633545
    4. ' non' → logprob: -2.293567180633545
    5. '][' → logprob: -2.668567180633545
    6. '   ' → logprob: -3.168567180633545
    7. '[i' → logprob: -3.418567180633545
    8. '_non' → logprob: -3.418567180633545
    9. '1' → logprob: -3.793567180633545
    10. ']' → logprob: -4.293567180633545

Token 1731: '-z' (ID: 16826)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.6247409582138062
    2. '0' → logprob: -0.8747409582138062
    3. 'zero' → logprob: -3.2497410774230957
    4. '-z' → logprob: -4.999741077423096
    5. ' zéro' → logprob: -7.124741077423096
    6. '   ' → logprob: -7.749741077423096
    7. '1' → logprob: -8.624740600585938
    8. '-' → logprob: -8.749740600585938
    9. '-zero' → logprob: -8.749740600585938
    10. '```' → logprob: -9.249740600585938

Token 1732: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.001550332992337644
    2. 'éros' → logprob: -7.126550197601318
    3. '0' → logprob: -8.376550674438477
    4. 'é' → logprob: -8.751550674438477
    5. 'ero' → logprob: -9.126550674438477
    6. 'z' → logprob: -10.001550674438477
    7. 'ro' → logprob: -10.001550674438477
    8. ' zéro' → logprob: -10.751550674438477
    9. 'o' → logprob: -11.126550674438477
    10. ' ' → logprob: -11.251550674438477

Token 1733: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5323601961135864
    2. 'for' → logprob: -1.0323601961135864
    3. 'dp' → logprob: -3.282360076904297
    4. ' for' → logprob: -4.282360076904297
    5. '+' → logprob: -5.907360076904297
    6. '=' → logprob: -7.407360076904297
    7. '+
' → logprob: -8.657360076904297
    8. '
' → logprob: -8.657360076904297
    9. '#' → logprob: -8.782360076904297
    10. '[' → logprob: -8.782360076904297

Token 1734: ' on' (ID: 402)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4361632764339447
    2. ' dp' → logprob: -1.561163306236267
    3. '   ' → logprob: -2.0611631870269775
    4. ' for' → logprob: -5.436163425445557
    5. 'for' → logprob: -5.561163425445557
    6. '+' → logprob: -6.561163425445557
    7. ' +' → logprob: -6.811163425445557
    8. '9' → logprob: -6.936163425445557
    9. ')' → logprob: -7.436163425445557
    10. '1' → logprob: -7.561163425445557

Token 1735: ' peut' (ID: 9216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0423771142959595
    2. '   ' → logprob: -1.5423771142959595
    3. ' +=' → logprob: -1.7923771142959595
    4. '[' → logprob: -2.66737699508667
    5. ' continue' → logprob: -3.29237699508667
    6. ']+=' → logprob: -3.54237699508667
    7. '+=' → logprob: -3.66737699508667
    8. ' for' → logprob: -3.91737699508667
    9. '[i' → logprob: -3.91737699508667
    10. '+' → logprob: -4.41737699508667

Token 1736: ' ajouter' (ID: 78457)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6493369340896606
    2. '[' → logprob: -2.149336814880371
    3. 'dp' → logprob: -2.274336814880371
    4. '#' → logprob: -2.649336814880371
    5. ' ajouter' → logprob: -2.649336814880371
    6. ' continuer' → logprob: -2.774336814880371
    7. 'for' → logprob: -2.899336814880371
    8. '```' → logprob: -3.149336814880371
    9. 'mettre' → logprob: -3.274336814880371
    10. '+' → logprob: -3.399336814880371

Token 1737: ' un' (ID: 537)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3263331353664398
    2. '9' → logprob: -1.8263331651687622
    3. ' ' → logprob: -2.5763330459594727
    4. '0' → logprob: -3.8263330459594727
    5. 'dp' → logprob: -4.576333045959473
    6. ' dp' → logprob: -5.701333045959473
    7. '[' → logprob: -6.326333045959473
    8. '   ' → logprob: -6.701333045959473
    9. ' [' → logprob: -7.701333045959473
    10. '10' → logprob: -8.451333045959473

Token 1738: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05132950842380524
    2. '9' → logprob: -4.551329612731934
    3. 'non' → logprob: -4.676329612731934
    4. '1' → logprob: -5.051329612731934
    5. ' ' → logprob: -5.301329612731934
    6. 'digit' → logprob: -5.301329612731934
    7. ' non' → logprob: -5.551329612731934
    8. '[' → logprob: -6.426329612731934
    9. 'zero' → logprob: -6.676329612731934
    10. '   ' → logprob: -6.676329612731934

Token 1739: ' ici' (ID: 27994)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010333440266549587
    2. '[i' → logprob: -5.63533353805542
    3. 'for' → logprob: -6.01033353805542
    4. 'dp' → logprob: -6.38533353805542
    5. '+' → logprob: -7.38533353805542
    6. ' for' → logprob: -7.51033353805542
    7. '[' → logprob: -7.76033353805542
    8. ' +' → logprob: -8.510333061218262
    9. '
' → logprob: -8.760333061218262
    10. '][' → logprob: -9.385333061218262

Token 1740: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015419689938426018
    2. ' +' → logprob: -5.0154194831848145
    3. '+' → logprob: -5.6404194831848145
    4. 'dp' → logprob: -6.3904194831848145
    5. '
' → logprob: -7.0154194831848145
    6. 'for' → logprob: -7.1404194831848145
    7. ' for' → logprob: -7.7654194831848145
    8. ' +=' → logprob: -8.390419960021973
    9. ' =' → logprob: -8.765419960021973
    10. '```' → logprob: -8.765419960021973

Token 1741: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05471695214509964
    2. 'dp' → logprob: -3.1797170639038086
    3. ' dp' → logprob: -5.554717063903809
    4. ' for' → logprob: -5.554717063903809
    5. 'for' → logprob: -6.054717063903809
    6. '```' → logprob: -7.554717063903809
    7. '	dp' → logprob: -8.554717063903809
    8. ' +' → logprob: -8.679717063903809
    9. '
' → logprob: -9.179717063903809
    10. '+' → logprob: -9.429717063903809

Token 1742: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013978567440062761
    2. 'dp' → logprob: -7.126398086547852
    3. 'for' → logprob: -8.626398086547852
    4. ' for' → logprob: -9.251398086547852
    5. '```' → logprob: -9.251398086547852
    6. '	for' → logprob: -10.251398086547852
    7. '	dp' → logprob: -10.376398086547852
    8. '
' → logprob: -10.501398086547852
    9. '    
' → logprob: -10.751398086547852
    10. '       ' → logprob: -10.751398086547852

Token 1743: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035914432257413864
    2. 'for' → logprob: -4.285914421081543
    3. 'dp' → logprob: -4.410914421081543
    4. ' for' → logprob: -5.535914421081543
    5. '```' → logprob: -6.035914421081543
    6. '+' → logprob: -7.285914421081543
    7. '=' → logprob: -7.535914421081543
    8. ' =' → logprob: -8.535914421081543
    9. ' dp' → logprob: -8.535914421081543
    10. '       ' → logprob: -8.660914421081543

Token 1744: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3218774199485779
    2. 'dp' → logprob: -2.0718774795532227
    3. 'for' → logprob: -2.3218774795532227
    4. '=' → logprob: -4.196877479553223
    5. ' for' → logprob: -4.196877479553223
    6. '+' → logprob: -4.821877479553223
    7. ' =' → logprob: -6.071877479553223
    8. '```' → logprob: -6.071877479553223
    9. '+=' → logprob: -6.821877479553223
    10. ' dp' → logprob: -6.946877479553223

Token 1745: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09604542702436447
    2. '   ' → logprob: -2.59604549407959
    3. ' dp' → logprob: -4.09604549407959
    4. '(dp' → logprob: -8.97104549407959
    5. 'for' → logprob: -9.47104549407959
    6. '	dp' → logprob: -10.22104549407959
    7. ' ' → logprob: -10.22104549407959
    8. '  ' → logprob: -10.97104549407959
    9. '       ' → logprob: -11.59604549407959
    10. '    ' → logprob: -11.72104549407959

Token 1746: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0205268282443285
    2. ' dp' → logprob: -4.520526885986328
    3. '   ' → logprob: -6.020526885986328
    4. '1' → logprob: -6.645526885986328
    5. 'max' → logprob: -6.895526885986328
    6. 'i' → logprob: -6.895526885986328
    7. '0' → logprob: -7.395526885986328
    8. ')' → logprob: -7.645526885986328
    9. 'np' → logprob: -7.770526885986328
    10. 'for' → logprob: -8.145526885986328

Token 1747: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10026609152555466
    2. '0' → logprob: -2.3502659797668457
    3. '[i' → logprob: -10.975266456604004
    4. '[' → logprob: -11.600266456604004
    5. '   ' → logprob: -11.975266456604004
    6. 'i' → logprob: -12.537766456604004
    7. ' ' → logprob: -12.600266456604004
    8. '```' → logprob: -12.912766456604004
    9. '_' → logprob: -13.100266456604004
    10. 'p' → logprob: -13.787766456604004

Token 1748: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004273315134923905
    2. ')[' → logprob: -8.37542724609375
    3. 'i' → logprob: -10.00042724609375
    4. '[' → logprob: -10.25042724609375
    5. '   ' → logprob: -10.62542724609375
    6. '```' → logprob: -10.62542724609375
    7. '][' → logprob: -11.00042724609375
    8. ')' → logprob: -11.25042724609375
    9. '[I' → logprob: -12.00042724609375
    10. ')i' → logprob: -12.62542724609375

Token 1749: '-' (ID: 12)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.480538547039032
    2. '[i' → logprob: -1.2305386066436768
    3. '-' → logprob: -2.6055386066436768
    4. ')[' → logprob: -4.855538368225098
    5. '   ' → logprob: -5.480538368225098
    6. ' ][' → logprob: -6.730538368225098
    7. ' -' → logprob: -7.605538368225098
    8. '[' → logprob: -8.230538368225098
    9. 'i' → logprob: -8.355538368225098
    10. ' ' → logprob: -8.355538368225098

Token 1750: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024346397258341312
    2. 'i' → logprob: -6.127434730529785
    3. '   ' → logprob: -8.627434730529785
    4. ' ' → logprob: -10.252434730529785
    5. '-' → logprob: -11.002434730529785
    6. '][' → logprob: -11.377434730529785
    7. '  ' → logprob: -13.127434730529785
    8. '       ' → logprob: -13.877434730529785
    9. '```' → logprob: -13.877434730529785
    10. '           ' → logprob: -14.002434730529785

Token 1751: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2212296426296234
    2. '][' → logprob: -2.0962295532226562
    3. ')[' → logprob: -2.5962295532226562
    4. '   ' → logprob: -8.346229553222656
    5. ')' → logprob: -8.846229553222656
    6. ' )[' → logprob: -8.846229553222656
    7. '[' → logprob: -9.221229553222656
    8. ' ][' → logprob: -9.346229553222656
    9. ' ' → logprob: -9.971229553222656
    10. '           ' → logprob: -10.346229553222656

Token 1752: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14270181953907013
    2. '0' → logprob: -2.0177018642425537
    3. '   ' → logprob: -11.767702102661133
    4. '
' → logprob: -12.142702102661133
    5. ' ' → logprob: -12.392702102661133
    6. '2' → logprob: -13.517702102661133
    7. ']' → logprob: -13.767702102661133
    8. '3' → logprob: -13.830202102661133
    9. '  ' → logprob: -14.080202102661133
    10. '][' → logprob: -14.267702102661133

Token 1753: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16858473420143127
    2. '[i' → logprob: -2.2935848236083984
    3. '[' → logprob: -3.6685848236083984
    4. ']' → logprob: -5.043584823608398
    5. '*' → logprob: -5.668584823608398
    6. ')[' → logprob: -5.668584823608398
    7. ']*' → logprob: -5.668584823608398
    8. '   ' → logprob: -6.168584823608398
    9. '-' → logprob: -6.418584823608398
    10. '+' → logprob: -6.543584823608398

Token 1754: ' if' (ID: 538)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9491705894470215
    2. '[' → logprob: -0.9491705894470215
    3. ' *' → logprob: -2.4491705894470215
    4. '*[' → logprob: -3.1991705894470215
    5. ')*' → logprob: -3.4491705894470215
    6. '[i' → logprob: -3.5741705894470215
    7. '[max' → logprob: -5.0741705894470215
    8. ')' → logprob: -5.0741705894470215
    9. '   ' → logprob: -5.1991705894470215
    10. ')*(' → logprob: -5.1991705894470215

Token 1755: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.06821968406438828
    2. ' np' → logprob: -2.8182196617126465
    3. 'i' → logprob: -5.3182196617126465
    4. ' i' → logprob: -7.5682196617126465
    5. 'point' → logprob: -7.9432196617126465
    6. 'po' → logprob: -8.068220138549805
    7. '0' → logprob: -10.193220138549805
    8. ' point' → logprob: -10.443220138549805
    9. 'dp' → logprob: -11.193220138549805
    10. '(np' → logprob: -11.193220138549805

Token 1756: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.15870091319084167
    2. ' >' → logprob: -2.658700942993164
    3. '>=' → logprob: -2.908700942993164
    4. ' >=' → logprob: -4.408700942993164
    5. ' <' → logprob: -5.783700942993164
    6. ')' → logprob: -6.283700942993164
    7. '<i' → logprob: -6.658700942993164
    8. '==' → logprob: -7.033700942993164
    9. '<=' → logprob: -7.408700942993164
    10. '!=' → logprob: -7.908700942993164

Token 1757: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029482474201358855
    2. ' ' → logprob: -8.87529468536377
    3. '1' → logprob: -9.00029468536377
    4. '   ' → logprob: -10.62529468536377
    5. '  ' → logprob: -13.50029468536377
    6. ')' → logprob: -13.62529468536377
    7. '    ' → logprob: -14.00029468536377
    8. '>' → logprob: -14.37529468536377
    9. '     ' → logprob: -14.87529468536377
    10. '=' → logprob: -14.93779468536377

Token 1758: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009057454881258309
    2. '1' → logprob: -7.250905513763428
    3. ' ' → logprob: -9.000905990600586
    4. '   ' → logprob: -10.125905990600586
    5. ')' → logprob: -12.375905990600586
    6. '>' → logprob: -12.438405990600586
    7. '
' → logprob: -12.438405990600586
    8. 'i' → logprob: -12.625905990600586
    9. '  ' → logprob: -12.750905990600586
    10. '9' → logprob: -13.188405990600586

Token 1759: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6959196329116821
    2. 'else' → logprob: -0.6959196329116821
    3. ')' → logprob: -5.945919513702393
    4. '   ' → logprob: -9.19591999053955
    5. '```' → logprob: -11.57091999053955
    6. 'if' → logprob: -12.32091999053955
    7. '           ' → logprob: -12.32091999053955
    8. ' ' → logprob: -12.32091999053955
    9. ' )' → logprob: -12.32091999053955
    10. '    ' → logprob: -12.94591999053955

Token 1760: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0710291713476181
    2. 'dp' → logprob: -2.8210291862487793
    3. ' dp' → logprob: -5.196029186248779
    4. ' ' → logprob: -5.821029186248779
    5. '1' → logprob: -8.071028709411621
    6. '   ' → logprob: -9.946028709411621
    7. ' ' → logprob: -10.446028709411621
    8. ')' → logprob: -10.821028709411621
    9. '(dp' → logprob: -11.133528709411621
    10. '(' → logprob: -11.446028709411621

Token 1761: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03861982747912407
    2. 'dp' → logprob: -3.2886197566986084
    3. '1' → logprob: -8.538619995117188
    4. ' ' → logprob: -8.663619995117188
    5. ' dp' → logprob: -9.038619995117188
    6. '(dp' → logprob: -11.163619995117188
    7. '   ' → logprob: -11.288619995117188
    8. '(' → logprob: -11.413619995117188
    9. '9' → logprob: -12.351119995117188
    10. 'po' → logprob: -12.788619995117188

Token 1762: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10029379278421402
    2. '   ' → logprob: -3.3502938747406006
    3. ')*' → logprob: -3.8502938747406006
    4. ')+' → logprob: -4.1002936363220215
    5. '+' → logprob: -5.2252936363220215
    6. ' +' → logprob: -5.3502936363220215
    7. 'if' → logprob: -5.9752936363220215
    8. '))' → logprob: -5.9752936363220215
    9. ')]' → logprob: -6.7252936363220215
    10. ')])' → logprob: -6.8502936363220215

Token 1763: ' nombres' (ID: 76205)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18197748064994812
    2. ' dp' → logprob: -1.8069775104522705
    3. '   ' → logprob: -7.056977272033691
    4. '(dp' → logprob: -7.056977272033691
    5. ')' → logprob: -9.306977272033691
    6. '+' → logprob: -9.431977272033691
    7. ' ' → logprob: -9.431977272033691
    8. '	dp' → logprob: -9.431977272033691
    9. ' (' → logprob: -10.181977272033691
    10. '(' → logprob: -11.056977272033691

Token 1764: ' "' (ID: 392)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20797066390514374
    2. '1' → logprob: -2.08297061920166
    3. '   ' → logprob: -2.95797061920166
    4. '       ' → logprob: -6.58297061920166
    5. 'if' → logprob: -6.58297061920166
    6. '```' → logprob: -6.70797061920166
    7. '           ' → logprob: -6.83297061920166
    8. ' ' → logprob: -6.95797061920166
    9. '	' → logprob: -7.33297061920166
    10. '[' → logprob: -7.70797061920166

Token 1765: 'ég' (ID: 6634)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5278916358947754
    2. '1' → logprob: -2.1528916358947754
    3. 'dp' → logprob: -2.1528916358947754
    4. 'i' → logprob: -2.4028916358947754
    5. '0' → logprob: -2.6528916358947754
    6. '   ' → logprob: -4.902891635894775
    7. ' i' → logprob: -6.027891635894775
    8. ' ' → logprob: -6.652891635894775
    9. ' dp' → logprob: -6.652891635894775
    10. '_' → logprob: -7.527891635894775

Token 1766: 'aux' (ID: 5454)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.6678718328475952
    2. 'aux' → logprob: -1.1678718328475952
    3. 'ale' → logprob: -1.7928718328475952
    4. '   ' → logprob: -5.917871952056885
    5. 'ales' → logprob: -6.417871952056885
    6. '1' → logprob: -6.792871952056885
    7. 'alité' → logprob: -7.042871952056885
    8. '       ' → logprob: -7.667871952056885
    9. '=' → logprob: -7.792871952056885
    10. 'u' → logprob: -8.292871475219727

Token 1767: '"' (ID: 1)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04788966849446297
    2. 'if' → logprob: -4.047889709472656
    3. '   ' → logprob: -4.172889709472656
    4. '1' → logprob: -5.672889709472656
    5. '       ' → logprob: -6.297889709472656
    6. ' if' → logprob: -6.547889709472656
    7. ']' → logprob: -6.797889709472656
    8. '           ' → logprob: -7.047889709472656
    9. '][' → logprob: -7.172889709472656
    10. '```' → logprob: -7.297889709472656

Token 1768: ' à' (ID: 1221)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03198348730802536
    2. '   ' → logprob: -3.9069833755493164
    3. '[' → logprob: -5.281983375549316
    4. ' [' → logprob: -6.531983375549316
    5. ')' → logprob: -6.656983375549316
    6. '```' → logprob: -6.656983375549316
    7. '][' → logprob: -7.781983375549316
    8. ')[' → logprob: -8.531983375549316
    9. 'if' → logprob: -8.906983375549316
    10. '
' → logprob: -8.906983375549316

Token 1769: ' n' (ID: 297)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.027544284239411354
    2. ' dp' → logprob: -3.6525442600250244
    3. 'np' → logprob: -7.0275444984436035
    4. 'n' → logprob: -9.027544021606445
    5. 'i' → logprob: -9.527544021606445
    6. '1' → logprob: -9.527544021606445
    7. '   ' → logprob: -11.152544021606445
    8. ' np' → logprob: -11.152544021606445
    9. ' i' → logprob: -11.402544021606445
    10. ' n' → logprob: -11.527544021606445

Token 1770: ' avec' (ID: 3937)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6508532762527466
    2. '   ' → logprob: -0.7758532762527466
    3. '][' → logprob: -5.650853157043457
    4. '[' → logprob: -5.650853157043457
    5. ')' → logprob: -6.275853157043457
    6. 'dp' → logprob: -6.275853157043457
    7. '```' → logprob: -6.650853157043457
    8. ']' → logprob: -6.775853157043457
    9. ' +' → logprob: -7.150853157043457
    10. '
' → logprob: -7.400853157043457

Token 1771: ' déjà' (ID: 21229)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7412497997283936
    2. 'np' → logprob: -1.1162497997283936
    3. 'dp' → logprob: -2.3662497997283936
    4. ' np' → logprob: -2.7412497997283936
    5. ' dp' → logprob: -3.6162497997283936
    6. ' ' → logprob: -5.116250038146973
    7. '0' → logprob: -6.116250038146973
    8. ')' → logprob: -7.366250038146973
    9. '   ' → logprob: -7.616250038146973
    10. 'i' → logprob: -7.866250038146973

Token 1772: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.41680753231048584
    2. '1' → logprob: -1.5418075323104858
    3. ' dp' → logprob: -2.5418076515197754
    4. 'np' → logprob: -3.4168076515197754
    5. ' ' → logprob: -4.791807651519775
    6. ' np' → logprob: -5.666807651519775
    7. '   ' → logprob: -6.791807651519775
    8. 'po' → logprob: -6.791807651519775
    9. ' po' → logprob: -8.791807174682617
    10. '  ' → logprob: -8.916807174682617

Token 1773: '1' (ID: 16)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6179190874099731
    2. '1' → logprob: -0.8679190874099731
    3. 'np' → logprob: -3.9929189682006836
    4. '0' → logprob: -4.367918968200684
    5. 'i' → logprob: -5.492918968200684
    6. ' dp' → logprob: -5.492918968200684
    7. ' ' → logprob: -7.492918968200684
    8. '   ' → logprob: -7.742918968200684
    9. ' i' → logprob: -9.242918968200684
    10. ' np' → logprob: -9.492918968200684

Token 1774: ' chiffre' (ID: 107420)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2577308118343353
    2. '[i' → logprob: -2.007730722427368
    3. ']' → logprob: -3.382730722427368
    4. ' ][' → logprob: -4.507730960845947
    5. ' non' → logprob: -4.882730960845947
    6. ' chiffre' → logprob: -4.882730960845947
    7. 'non' → logprob: -5.507730960845947
    8. 'dp' → logprob: -5.632730960845947
    9. '   ' → logprob: -5.882730960845947
    10. '```' → logprob: -6.257730960845947

Token 1775: ' non' (ID: 2893)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.36421602964401245
    2. '][' → logprob: -2.6142160892486572
    3. 'non' → logprob: -2.9892160892486572
    4. '   ' → logprob: -3.1142160892486572
    5. ' non' → logprob: -3.1142160892486572
    6. '```' → logprob: -3.4892160892486572
    7. ' [' → logprob: -3.6142160892486572
    8. '[' → logprob: -4.864215850830078
    9. '_non' → logprob: -5.239215850830078
    10. '1' → logprob: -5.489215850830078

Token 1776: '-z' (ID: 16826)
  Prédit: '-z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.4329192042350769
    2. '0' → logprob: -2.0579192638397217
    3. '-zero' → logprob: -2.1829192638397217
    4. '-' → logprob: -2.5579192638397217
    5. '_zero' → logprob: -4.807919025421143
    6. 'zero' → logprob: -4.932919025421143
    7. '-n' → logprob: -5.182919025421143
    8. '_' → logprob: -5.307919025421143
    9. '   ' → logprob: -6.182919025421143
    10. ' zéro' → logprob: -6.432919025421143

Token 1777: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.13662521541118622
    2. '0' → logprob: -2.511625289916992
    3. 'éros' → logprob: -4.636625289916992
    4. '-zero' → logprob: -4.886625289916992
    5. ' zéro' → logprob: -5.511625289916992
    6. 'ro' → logprob: -5.511625289916992
    7. '1' → logprob: -5.761625289916992
    8. 'zo' → logprob: -6.136625289916992
    9. '-ro' → logprob: -6.261625289916992
    10. 'o' → logprob: -6.386625289916992

Token 1778: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02404521405696869
    2. 'dp' → logprob: -3.89904522895813
    3. ' dp' → logprob: -6.899044990539551
    4. '=' → logprob: -7.524044990539551
    5. ' =' → logprob: -7.899044990539551
    6. ')' → logprob: -7.899044990539551
    7. '
' → logprob: -8.27404499053955
    8. '```' → logprob: -8.52404499053955
    9. ']' → logprob: -9.02404499053955
    10. '    
' → logprob: -9.14904499053955

Token 1779: ' il' (ID: 1793)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9744223356246948
    2. ')' → logprob: -1.8494223356246948
    3. '   ' → logprob: -1.8494223356246948
    4. ' dp' → logprob: -1.9744223356246948
    5. '):' → logprob: -3.5994224548339844
    6. ')+' → logprob: -4.099422454833984
    7. ' +' → logprob: -4.349422454833984
    8. ' +=' → logprob: -4.349422454833984
    9. '+' → logprob: -4.349422454833984
    10. '```' → logprob: -4.349422454833984

Token 1780: ' est' (ID: 893)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20064114034175873
    2. ' +=' → logprob: -1.82564115524292
    3. ')' → logprob: -4.82564115524292
    4. '=' → logprob: -4.82564115524292
    5. '+' → logprob: -6.45064115524292
    6. ']+=' → logprob: -6.82564115524292
    7. '   ' → logprob: -7.70064115524292
    8. ')+' → logprob: -7.95064115524292
    9. 'if' → logprob: -8.575640678405762
    10. '!=' → logprob: -8.575640678405762

Token 1781: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5322527885437012
    2. '       ' → logprob: -2.157252788543701
    3. '    ' → logprob: -2.282252788543701
    4. ' ' → logprob: -2.532252788543701
    5. '```' → logprob: -3.032252788543701
    6. ')' → logprob: -3.157252788543701
    7. ' )' → logprob: -3.532252788543701
    8. ' ' → logprob: -3.657252788543701
    9. '    ' → logprob: -3.657252788543701
    10. '           ' → logprob: -3.782252788543701

Token 1782: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5306776762008667
    2. 'dp' → logprob: -2.0306777954101562
    3. '+' → logprob: -2.5306777954101562
    4. '       ' → logprob: -2.5306777954101562
    5. '*' → logprob: -3.5306777954101562
    6. 'if' → logprob: -3.6556777954101562
    7. ' +' → logprob: -4.030677795410156
    8. ' dp' → logprob: -4.780677795410156
    9. '           ' → logprob: -5.030677795410156
    10. ' *' → logprob: -5.280677795410156

Token 1783: ' poursuivre' (ID: 138348)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.40122541785240173
    2. ' dp' → logprob: -2.1512253284454346
    3. '0' → logprob: -2.9012253284454346
    4. 'continue' → logprob: -3.1512253284454346
    5. 'add' → logprob: -3.7762253284454346
    6. ' continuer' → logprob: -4.026225566864014
    7. ' ajouter' → logprob: -4.651225566864014
    8. '```' → logprob: -4.651225566864014
    9. '
' → logprob: -5.026225566864014
    10. ' add' → logprob: -5.151225566864014

Token 1784: ' seulement' (ID: 32072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053415924310684204
    2. 'dp' → logprob: -3.5534160137176514
    3. '+' → logprob: -4.678415775299072
    4. ' +' → logprob: -5.553415775299072
    5. ')' → logprob: -5.803415775299072
    6. '```' → logprob: -6.178415775299072
    7. ' dp' → logprob: -6.553415775299072
    8. '*' → logprob: -7.928415775299072
    9. ']' → logprob: -8.05341625213623
    10. ':' → logprob: -8.30341625213623

Token 1785: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2973639667034149
    2. '+' → logprob: -2.5473639965057373
    3. ' +' → logprob: -2.5473639965057373
    4. ' if' → logprob: -3.4223639965057373
    5. 'if' → logprob: -3.9223639965057373
    6. 'dp' → logprob: -4.047363758087158
    7. '       ' → logprob: -4.547363758087158
    8. '*' → logprob: -5.672363758087158
    9. '           ' → logprob: -6.422363758087158
    10. ' *' → logprob: -6.422363758087158

Token 1786: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.2014920711517334
    2. ' np' → logprob: -1.7014920711517334
    3. '1' → logprob: -10.701492309570312
    4. '0' → logprob: -11.326492309570312
    5. ' ' → logprob: -11.326492309570312
    6. '   ' → logprob: -11.826492309570312
    7. '(np' → logprob: -12.076492309570312
    8. 'dp' → logprob: -12.326492309570312
    9. ' ' → logprob: -12.701492309570312
    10. 'n' → logprob: -12.951492309570312

Token 1787: '!=' (ID: 11408)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4761742353439331
    2. '!=' → logprob: -0.9761742353439331
    3. '>' → logprob: -7.351174354553223
    4. ')' → logprob: -7.476174354553223
    5. '   ' → logprob: -8.101174354553223
    6. ' >' → logprob: -8.351174354553223
    7. ')!=' → logprob: -8.851174354553223
    8. '```' → logprob: -10.351174354553223
    9. 'else' → logprob: -10.476174354553223
    10. '       ' → logprob: -11.351174354553223

Token 1788: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015943869948387146
    2. ' ' → logprob: -8.75015926361084
    3. '1' → logprob: -14.87515926361084
    4. '   ' → logprob: -15.62515926361084
    5. '
' → logprob: -15.75015926361084
    6. '=' → logprob: -16.125160217285156
    7. '```' → logprob: -16.250160217285156
    8. ' ' → logprob: -16.500160217285156
    9. '  ' → logprob: -17.750160217285156
    10. ' ' → logprob: -18.750160217285156

Token 1789: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005741306114941835
    2. 'dp' → logprob: -5.505741119384766
    3. '+' → logprob: -8.255741119384766
    4. ')' → logprob: -8.380741119384766
    5. '```' → logprob: -8.380741119384766
    6. 'for' → logprob: -8.505741119384766
    7. '
' → logprob: -8.755741119384766
    8. '    
' → logprob: -9.505741119384766
    9. '=' → logprob: -9.630741119384766
    10. '+
' → logprob: -9.880741119384766

Token 1790: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008084330474957824
    2. 'dp' → logprob: -7.250808238983154
    3. '```' → logprob: -9.625808715820312
    4. ' dp' → logprob: -10.875808715820312
    5. '	dp' → logprob: -11.625808715820312
    6. '   ' → logprob: -13.500808715820312
    7. '(dp' → logprob: -14.500808715820312
    8. '
' → logprob: -14.750808715820312
    9. '       ' → logprob: -14.875808715820312
    10. 'for' → logprob: -15.000808715820312

Token 1791: ' dp' (ID: 21546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05164801701903343
    2. 'dp' (adapté à ' dp') → logprob: -3.051647901535034
    3. ' dp' → logprob: -6.676648139953613
    4. '```' → logprob: -6.676648139953613
    5. '	dp' → logprob: -7.926648139953613
    6. ')' → logprob: -10.676648139953613
    7. '``' → logprob: -10.676648139953613
    8. '   ' → logprob: -11.051648139953613
    9. '       ' → logprob: -11.051648139953613
    10. 'for' → logprob: -11.301648139953613

Token 1792: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12694837152957916
    2. '1' → logprob: -2.126948356628418
    3. '[' → logprob: -12.439448356628418
    4. '```' → logprob: -12.876948356628418
    5. '_' → logprob: -13.064448356628418
    6. '#' → logprob: -13.564448356628418
    7. '[i' → logprob: -13.751948356628418
    8. 'for' → logprob: -14.064448356628418
    9. '   ' → logprob: -14.251948356628418
    10. 'i' → logprob: -14.501948356628418

Token 1793: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4021237802808173e-05
    2. '[' → logprob: -12.000014305114746
    3. '   ' → logprob: -12.625014305114746
    4. '[I' → logprob: -12.750014305114746
    5. '\[' → logprob: -14.750014305114746
    6. '```' → logprob: -15.000014305114746
    7. '][' → logprob: -15.000014305114746
    8. ' [' → logprob: -15.250014305114746
    9. 'i' → logprob: -16.12501335144043
    10. '
' → logprob: -17.00001335144043

Token 1794: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0025548539124429226
    2. '[i' → logprob: -6.252554893493652
    3. '[' → logprob: -8.377554893493652
    4. ' ][' → logprob: -8.627554893493652
    5. '   ' → logprob: -9.127554893493652
    6. ']' → logprob: -9.627554893493652
    7. '       ' → logprob: -11.252554893493652
    8. '][:' → logprob: -12.627554893493652
    9. ' ' → logprob: -12.752554893493652
    10. 'i' → logprob: -12.877554893493652

Token 1795: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014165391214191914
    2. '0' → logprob: -4.26416540145874
    3. '
' → logprob: -13.514164924621582
    4. '   ' → logprob: -15.764164924621582
    5. '```' → logprob: -16.0141658782959
    6. ' ' → logprob: -16.6391658782959
    7. '

' → logprob: -17.4516658782959
    8. '01' → logprob: -17.6391658782959
    9. '１' → logprob: -17.7016658782959
    10. '``' → logprob: -18.0141658782959

Token 1796: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2138448804616928
    2. ' +=' → logprob: -1.963844895362854
    3. ']+=' → logprob: -3.5888447761535645
    4. ']' → logprob: -3.9638447761535645
    5. '=' → logprob: -5.3388447761535645
    6. '   ' → logprob: -7.9638447761535645
    7. ' =' → logprob: -8.213845252990723
    8. '+' → logprob: -9.463845252990723
    9. '+=(' → logprob: -10.463845252990723
    10. ')' → logprob: -10.838845252990723

Token 1797: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03169307857751846
    2. '=' → logprob: -3.5316929817199707
    3. ' +=' → logprob: -6.281692981719971
    4. ' =' → logprob: -10.156693458557129
    5. '+=(' → logprob: -10.531693458557129
    6. '   ' → logprob: -13.031693458557129
    7. '+' → logprob: -13.656693458557129
    8. ']+=' → logprob: -13.906693458557129
    9. '=(' → logprob: -15.031693458557129
    10. '=
' → logprob: -16.531692504882812

Token 1798: ' (
' (ID: 4112)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.016703756526112556
    2. '(dp' → logprob: -4.5167036056518555
    3. ' dp' → logprob: -5.6417036056518555
    4. 'max' → logprob: -6.5167036056518555
    5. '(' → logprob: -7.8917036056518555
    6. '(max' → logprob: -10.016703605651855
    7. '   ' → logprob: -10.141703605651855
    8. ' (' → logprob: -10.141703605651855
    9. ' ' → logprob: -11.141703605651855
    10. '(
' → logprob: -11.141703605651855

Token 1799: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0028895139694213867
    2. ' dp' → logprob: -6.752889633178711
    3. '(dp' → logprob: -7.127889633178711
    4. 'max' → logprob: -7.377889633178711
    5. '   ' → logprob: -9.002889633178711
    6. '0' → logprob: -10.627889633178711
    7. '           ' → logprob: -10.877889633178711
    8. ' ' → logprob: -11.252889633178711
    9. '(' → logprob: -11.252889633178711
    10. '	dp' → logprob: -11.377889633178711

Token 1800: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.000676096766255796
    2. ' dp' → logprob: -8.250676155090332
    3. 'max' → logprob: -8.375676155090332
    4. '(dp' → logprob: -8.750676155090332
    5. '   ' → logprob: -11.875676155090332
    6. '0' → logprob: -12.375676155090332
    7. '(' → logprob: -13.000676155090332
    8. ' ' → logprob: -13.125676155090332
    9. '	dp' → logprob: -13.625676155090332
    10. '       ' → logprob: -13.750676155090332

Token 1801: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01252154540270567
    2. '1' → logprob: -4.387521743774414
    3. '[' → logprob: -12.762521743774414
    4. '[i' → logprob: -13.575021743774414
    5. 'i' → logprob: -13.887521743774414
    6. '```' → logprob: -13.887521743774414
    7. '_' → logprob: -14.075021743774414
    8. '۰' → logprob: -14.637521743774414
    9. '   ' → logprob: -14.825021743774414
    10. ' ' → logprob: -15.012521743774414

Token 1802: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.961759259458631e-06
    2. '[' → logprob: -13.000004768371582
    3. 'i' → logprob: -13.375004768371582
    4. '```' → logprob: -14.625004768371582
    5. ' [' → logprob: -15.250004768371582
    6. '   ' → logprob: -16.1250057220459
    7. '[I' → logprob: -17.2500057220459
    8. '(i' → logprob: -17.3750057220459
    9. '{i' → logprob: -17.3750057220459
    10. '[
' → logprob: -17.6250057220459

Token 1803: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.314625690924004e-05
    2. ' -' → logprob: -10.500073432922363
    3. '[i' → logprob: -10.625073432922363
    4. '][' → logprob: -11.250073432922363
    5. '[' → logprob: -12.125073432922363
    6. '   ' → logprob: -13.500073432922363
    7. 'i' → logprob: -14.625073432922363
    8. '       ' → logprob: -15.000073432922363
    9. '-i' → logprob: -15.750073432922363
    10. '```' → logprob: -15.750073432922363

Token 1804: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. '   ' → logprob: -13.125004768371582
    3. '```' → logprob: -13.625004768371582
    4. ' ' → logprob: -14.500004768371582
    5. '-' → logprob: -15.125004768371582
    6. '       ' → logprob: -15.375004768371582
    7. '           ' → logprob: -15.625004768371582
    8. '     ' → logprob: -17.312503814697266
    9. '  ' → logprob: -17.625003814697266
    10. '
' → logprob: -17.812503814697266

Token 1805: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00029351349803619087
    2. '[' → logprob: -8.375293731689453
    3. ']' → logprob: -10.375293731689453
    4. ' ][' → logprob: -10.875293731689453
    5. '   ' → logprob: -11.750293731689453
    6. ']
' → logprob: -14.000293731689453
    7. ' ' → logprob: -14.125293731689453
    8. '       ' → logprob: -14.125293731689453
    9. '           ' → logprob: -15.125293731689453
    10. '	' → logprob: -15.250293731689453

Token 1806: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -15.000000953674316
    3. '
' → logprob: -15.750000953674316
    4. '   ' → logprob: -16.125
    5. '1' → logprob: -16.3125
    6. '
' → logprob: -18.0
    7. '[' → logprob: -18.1875
    8. '    
' → logprob: -18.25
    9. ']' → logprob: -18.4375
    10. '```' → logprob: -18.4375

Token 1807: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.018211284652352333
    2. ' *' → logprob: -4.018211364746094
    3. '*(' → logprob: -10.018211364746094
    4. '   ' → logprob: -12.018211364746094
    5. ' ' → logprob: -12.518211364746094
    6. '*
' → logprob: -12.643211364746094
    7. '**' → logprob: -13.893211364746094
    8. ' ' → logprob: -14.143211364746094
    9. ')*' → logprob: -14.518211364746094
    10. '       ' → logprob: -14.768211364746094

Token 1808: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.007718897890299559
    2. ' *' → logprob: -4.882719039916992
    3. '*(' → logprob: -9.257719039916992
    4. '*
' → logprob: -11.382719039916992
    5. ' ' → logprob: -13.007719039916992
    6. '   ' → logprob: -13.632719039916992
    7. '**' → logprob: -14.507719039916992
    8. '*
' → logprob: -15.507719039916992
    9. '*[' → logprob: -15.507719039916992
    10. ' *
' → logprob: -15.632719039916992

Token 1809: ' (' (ID: 350)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0019361276645213366
    2. '(max' → logprob: -6.251935958862305
    3. ' max' → logprob: -11.876935958862305
    4. 'np' → logprob: -15.251935958862305
    5. '(' → logprob: -16.251935958862305
    6. '[max' → logprob: -16.626935958862305
    7. '	max' → logprob: -18.001935958862305
    8. '
' → logprob: -18.001935958862305
    9. 'min' → logprob: -18.126935958862305
    10. '(n' → logprob: -18.501935958862305

Token 1810: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004710414446890354
    2. '(max' → logprob: -5.7547101974487305
    3. 'np' → logprob: -6.5047101974487305
    4. '(np' → logprob: -10.50471019744873
    5. ' max' → logprob: -11.87971019744873
    6. 'min' → logprob: -15.12971019744873
    7. '(' → logprob: -16.254711151123047
    8. ' (' → logprob: -16.504711151123047
    9. '(n' → logprob: -16.504711151123047
    10. '[max' → logprob: -16.504711151123047

Token 1811: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019028165843337774
    2. '0' → logprob: -7.0019025802612305
    3. '(np' → logprob: -7.5019025802612305
    4. '(
' → logprob: -7.7519025802612305
    5. ' (' → logprob: -12.25190258026123
    6. '((' → logprob: -13.25190258026123
    7. 'np' → logprob: -13.75190258026123
    8. '(

' → logprob: -15.12690258026123
    9. '
' → logprob: -15.25190258026123
    10. '(max' → logprob: -15.75190258026123

Token 1812: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005081149865873158
    2. '(' → logprob: -7.6255083084106445
    3. 'np' → logprob: -11.250508308410645
    4. ' ' → logprob: -12.125508308410645
    5. '(np' → logprob: -13.875508308410645
    6. '(
' → logprob: -15.375508308410645
    7. '
' → logprob: -15.625508308410645
    8. '   ' → logprob: -15.750508308410645
    9. ' (' → logprob: -16.875507354736328
    10. '1' → logprob: -17.250507354736328

Token 1813: ',' (ID: 11)
  Prédit: '(np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(np' → logprob: -0.12373164296150208
    2. ',' → logprob: -2.2487316131591797
    3. ',np' → logprob: -4.74873161315918
    4. '(' → logprob: -6.37373161315918
    5. ',
' → logprob: -8.49873161315918
    6. '[np' → logprob: -9.24873161315918
    7. '(
' → logprob: -9.49873161315918
    8. ' (' → logprob: -10.12373161315918
    9. ',(' → logprob: -11.12373161315918
    10. ' ,' → logprob: -11.24873161315918

Token 1814: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.008682293817400932
    2. ' np' → logprob: -4.7586822509765625
    3. '(np' → logprob: -9.633682250976562
    4. '   ' → logprob: -14.133682250976562
    5. '[np' → logprob: -14.633682250976562
    6. ' ' → logprob: -15.633682250976562
    7. '_np' → logprob: -15.633682250976562
    8. '       ' → logprob: -15.758682250976562
    9. '    ' → logprob: -15.758682250976562
    10. '  ' → logprob: -16.008682250976562

Token 1815: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018156616017222404
    2. ' -' → logprob: -4.0181565284729
    3. '-
' → logprob: -12.643157005310059
    4. ')' → logprob: -14.018157005310059
    5. '   ' → logprob: -14.018157005310059
    6. '       ' → logprob: -14.518157005310059
    7. ' ' → logprob: -15.018157005310059
    8. '[' → logprob: -15.893157005310059
    9. '−' → logprob: -15.893157005310059
    10. ')-' → logprob: -16.018156051635742

Token 1816: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.750006675720215
    3. '-' → logprob: -12.875006675720215
    4. '   ' → logprob: -14.875006675720215
    5. '```' → logprob: -14.875006675720215
    6. '
' → logprob: -16.00000762939453
    7. ')' → logprob: -16.12500762939453
    8. '``' → logprob: -16.93750762939453
    9. '  ' → logprob: -17.12500762939453
    10. ' -' → logprob: -18.06250762939453

Token 1817: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008263258263468742
    2. '+' → logprob: -5.133263111114502
    3. ')
' → logprob: -6.633263111114502
    4. ')+' → logprob: -7.258263111114502
    5. ' +' → logprob: -8.88326358795166
    6. ' )' → logprob: -9.25826358795166
    7. '   ' → logprob: -10.50826358795166
    8. '))' → logprob: -11.25826358795166
    9. '       ' → logprob: -11.50826358795166
    10. '+
' → logprob: -12.13326358795166

Token 1818: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16040730476379395
    2. ' +' → logprob: -1.910407304763794
    3. '+
' → logprob: -8.910407066345215
    4. ' +
' → logprob: -10.535407066345215
    5. '       ' → logprob: -10.910407066345215
    6. ')' → logprob: -14.035407066345215
    7. ')+' → logprob: -14.660407066345215
    8. '        ' → logprob: -14.785407066345215
    9. '   ' → logprob: -14.785407066345215
    10. '```' → logprob: -15.035407066345215

Token 1819: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -3.833878508885391e-05
    2. '       ' → logprob: -10.750038146972656
    3. ' dp' → logprob: -11.000038146972656
    4. '(dp' → logprob: -16.125038146972656
    5. '	dp' → logprob: -17.125038146972656
    6. '   ' → logprob: -19.750038146972656
    7. '           ' → logprob: -19.750038146972656
    8. 'dt' → logprob: -20.625038146972656
    9. '      ' → logprob: -21.125038146972656
    10. '_dp' → logprob: -21.625038146972656

Token 1820: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -9.088346359931165e-07
    2. ' dp' → logprob: -14.250000953674316
    3. '           ' → logprob: -16.875
    4. '       ' → logprob: -17.0
    5. '   ' → logprob: -17.625
    6. '(dp' → logprob: -18.125
    7. '          ' → logprob: -18.875
    8. '	dp' → logprob: -19.25
    9. '         ' → logprob: -19.5
    10. '      ' → logprob: -19.625

Token 1821: ' Pr' (ID: 2284)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.629921436891891e-05
    2. '       ' → logprob: -10.75002670288086
    3. ' dp' → logprob: -12.75002670288086
    4. '(dp' → logprob: -13.50002670288086
    5. '           ' → logprob: -14.87502670288086
    6. '	dp' → logprob: -17.37502670288086
    7. '               ' → logprob: -17.62502670288086
    8. '        ' → logprob: -18.25002670288086
    9. '   ' → logprob: -18.37502670288086
    10. '      ' → logprob: -18.50002670288086

Token 1822: 'end' (ID: 419)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6129405498504639
    2. 'ep' → logprob: -1.2379405498504639
    3. 'ev' → logprob: -2.612940549850464
    4. '#' → logprob: -3.612940549850464
    5. 'e' → logprob: -3.737940549850464
    6. 'ec' → logprob: -4.362940788269043
    7. 'op' → logprob: -5.112940788269043
    8. 'éc' → logprob: -5.362940788269043
    9. '       ' → logprob: -5.487940788269043
    10. 'ef' → logprob: -6.237940788269043

Token 1823: ' tous' (ID: 10688)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.000533967511728406
    2. '       ' → logprob: -8.250534057617188
    3. ' dp' → logprob: -8.250534057617188
    4. '(dp' → logprob: -11.625534057617188
    5. '           ' → logprob: -13.750534057617188
    6. '   ' → logprob: -14.625534057617188
    7. '	dp' → logprob: -15.500534057617188
    8. '      ' → logprob: -15.500534057617188
    9. '        ' → logprob: -15.625534057617188
    10. '               ' → logprob: -16.000534057617188

Token 1824: ' les' (ID: 1341)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.021546218544244766
    2. ' dp' → logprob: -4.396546363830566
    3. '(dp' → logprob: -4.771546363830566
    4. '(' → logprob: -8.896546363830566
    5. '   ' → logprob: -9.271546363830566
    6. '9' → logprob: -9.896546363830566
    7. '       ' → logprob: -10.021546363830566
    8. ' (' → logprob: -10.271546363830566
    9. '(
' → logprob: -10.521546363830566
    10. ')' → logprob: -10.896546363830566

Token 1825: ' chiffres' (ID: 105565)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018521903082728386
    2. '9' → logprob: -4.893521785736084
    3. 'ch' → logprob: -5.268521785736084
    4. '0' → logprob: -5.893521785736084
    5. 'digits' → logprob: -6.143521785736084
    6. ' dp' → logprob: -8.768522262573242
    7. '(dp' → logprob: -8.893522262573242
    8. '1' → logprob: -9.143522262573242
    9. ')' → logprob: -9.268522262573242
    10. ' chiffres' → logprob: -9.893522262573242

Token 1826: ' de' (ID: 334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1022320985794067
    2. '1' → logprob: -1.8522320985794067
    3. '[' → logprob: -1.9772320985794067
    4. 'dp' → logprob: -2.477231979370117
    5. '9' → logprob: -2.602231979370117
    6. 'range' → logprob: -2.852231979370117
    7. '   ' → logprob: -3.352231979370117
    8. 'from' → logprob: -3.977231979370117
    9. '       ' → logprob: -3.977231979370117
    10. 'de' → logprob: -4.727231979370117

Token 1827: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.509297251701355
    2. '1' → logprob: -1.509297251701355
    3. 'dp' → logprob: -2.6342973709106445
    4. 'range' → logprob: -2.7592973709106445
    5. '[' → logprob: -4.2592973709106445
    6. ' ' → logprob: -4.5092973709106445
    7. '9' → logprob: -4.7592973709106445
    8. ' dp' → logprob: -5.5092973709106445
    9. ' range' → logprob: -6.1342973709106445
    10. 'digits' → logprob: -7.5092973709106445

Token 1828: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31194695830345154
    2. '0' → logprob: -1.561946988105774
    3. 'range' → logprob: -3.5619468688964844
    4. 'dp' → logprob: -4.561946868896484
    5. '9' → logprob: -5.061946868896484
    6. '[' → logprob: -5.186946868896484
    7. 'l' → logprob: -6.186946868896484
    8. ' ' → logprob: -6.311946868896484
    9. 'la' → logprob: -7.561946868896484
    10. 'digits' → logprob: -7.686946868896484

Token 1829: ' jusqu' (ID: 21961)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.635237991809845
    2. ' à' → logprob: -2.0102379322052
    3. '9' → logprob: -2.1352379322052
    4. ',' → logprob: -2.8852379322052
    5. 'dp' → logprob: -3.0102379322052
    6. 'à' → logprob: -4.135238170623779
    7. '       ' → logprob: -4.135238170623779
    8. '   ' → logprob: -4.385238170623779
    9. '#' → logprob: -4.510238170623779
    10. '0' → logprob: -4.885238170623779

Token 1830: '’à' (ID: 32891)
  Prédit: ''à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.3189922571182251
    2. 'à' → logprob: -1.318992257118225
    3. '’à' → logprob: -6.3189921379089355
    4. 'a' → logprob: -6.6939921379089355
    5. 'au' → logprob: -6.9439921379089355
    6. ''au' → logprob: -7.1939921379089355
    7. 'np' → logprob: -7.9439921379089355
    8. '`' → logprob: -8.068992614746094
    9. ' à' → logprob: -9.068992614746094
    10. '   ' → logprob: -9.568992614746094

Token 1831: ' (' (ID: 350)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.0008082019630819559
    2. ' np' → logprob: -7.750808238983154
    3. '(np' → logprob: -8.250807762145996
    4. 'max' → logprob: -10.000807762145996
    5. '   ' → logprob: -10.750807762145996
    6. ' (' → logprob: -11.250807762145996
    7. '[np' → logprob: -12.125807762145996
    8. '       ' → logprob: -12.125807762145996
    9. '  ' → logprob: -12.875807762145996
    10. '_np' → logprob: -13.000807762145996

Token 1832: 'np' (ID: 12766)
  Prédit: 'np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.00010914575977949426
    2. ' np' → logprob: -9.25010871887207
    3. '(np' → logprob: -11.62510871887207
    4. '   ' → logprob: -13.12510871887207
    5. '[np' → logprob: -14.00010871887207
    6. '       ' → logprob: -15.12510871887207
    7. '_np' → logprob: -15.37510871887207
    8. '           ' → logprob: -15.50010871887207
    9. '
' → logprob: -16.62510871887207
    10. 'max' → logprob: -16.62510871887207

Token 1833: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07631423324346542
    2. ' -' → logprob: -2.7013142108917236
    3. ')' → logprob: -5.076314449310303
    4. '-)' → logprob: -9.826313972473145
    5. ' )' → logprob: -10.326313972473145
    6. ')-' → logprob: -11.701313972473145
    7. '-
' → logprob: -12.326313972473145
    8. '))' → logprob: -12.951313972473145
    9. '   ' → logprob: -12.951313972473145
    10. '```' → logprob: -13.201313972473145

Token 1834: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018422940047457814
    2. ')' → logprob: -8.875184059143066
    3. ' ' → logprob: -10.125184059143066
    4. '   ' → logprob: -13.875184059143066
    5. ' )' → logprob: -14.250184059143066
    6. '```' → logprob: -14.500184059143066
    7. '2' → logprob: -14.750184059143066
    8. '`' → logprob: -14.875184059143066
    9. ' ' → logprob: -15.375184059143066
    10. '),' → logprob: -15.375184059143066

Token 1835: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003145873546600342
    2. ' )' → logprob: -6.628145694732666
    3. ')
' → logprob: -7.003145694732666
    4. ')+' → logprob: -7.878145694732666
    5. '   ' → logprob: -8.378146171569824
    6. '       ' → logprob: -9.003146171569824
    7. '+' → logprob: -9.128146171569824
    8. '))' → logprob: -11.378146171569824
    9. ')*' → logprob: -11.503146171569824
    10. '           ' → logprob: -11.628146171569824

Token 1836: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10578575730323792
    2. ' dp' → logprob: -2.855785846710205
    3. '+' → logprob: -3.480785846710205
    4. ' +' → logprob: -5.230785846710205
    5. '       ' → logprob: -5.730785846710205
    6. '(dp' → logprob: -6.355785846710205
    7. '9' → logprob: -6.730785846710205
    8. '+
' → logprob: -8.605785369873047
    9. ')+' → logprob: -8.980785369873047
    10. '        ' → logprob: -9.980785369873047

Token 1837: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -5.438573680294212e-06
    2. '       ' → logprob: -12.625005722045898
    3. ' dp' → logprob: -13.375005722045898
    4. '           ' → logprob: -14.875005722045898
    5. '(dp' → logprob: -15.750005722045898
    6. '   ' → logprob: -17.0000057220459
    7. '         ' → logprob: -18.2500057220459
    8. '               ' → logprob: -18.2500057220459
    9. '        ' → logprob: -18.5000057220459
    10. '	dp' → logprob: -18.6250057220459

Token 1838: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '[' → logprob: -19.125
    4. '۰' → logprob: -19.25
    5. '[i' → logprob: -19.375
    6. '０' → logprob: -19.625
    7. '```' → logprob: -19.75
    8. '   ' → logprob: -20.0
    9. '1' → logprob: -20.375
    10. 'O' → logprob: -20.375

Token 1839: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '   ' → logprob: -14.125000953674316
    3. '```' → logprob: -15.500000953674316
    4. 'i' → logprob: -16.000001907348633
    5. '
' → logprob: -17.750001907348633
    6. '``' → logprob: -17.875001907348633
    7. ' [' → logprob: -18.000001907348633
    8. '       ' → logprob: -18.250001907348633
    9. ' ' → logprob: -18.625001907348633
    10. '[' → logprob: -18.750001907348633

Token 1840: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00011224505578866228
    2. ' -' → logprob: -9.500112533569336
    3. '[i' → logprob: -10.500112533569336
    4. '][' → logprob: -12.750112533569336
    5. '[' → logprob: -12.875112533569336
    6. 'i' → logprob: -13.250112533569336
    7. '   ' → logprob: -13.500112533569336
    8. '[-' → logprob: -15.125112533569336
    9. '−' → logprob: -15.750112533569336
    10. '       ' → logprob: -15.875112533569336

Token 1841: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000104616025055293
    2. '-' → logprob: -9.750104904174805
    3. 'i' → logprob: -10.375104904174805
    4. '   ' → logprob: -11.875104904174805
    5. '```' → logprob: -12.375104904174805
    6. ' ' → logprob: -13.250104904174805
    7. '
' → logprob: -14.375104904174805
    8. '       ' → logprob: -14.875104904174805
    9. 'prev' → logprob: -14.875104904174805
    10. '``' → logprob: -16.000104904174805

Token 1842: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002561864908784628
    2. '[' → logprob: -6.377562046051025
    3. '[i' → logprob: -7.627562046051025
    4. '       ' → logprob: -9.627561569213867
    5. ' ][' → logprob: -9.752561569213867
    6. '   ' → logprob: -9.877561569213867
    7. ']' → logprob: -9.877561569213867
    8. '           ' → logprob: -10.002561569213867
    9. ')[' → logprob: -10.127561569213867
    10. 'i' → logprob: -11.127561569213867

Token 1843: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018167035654187202
    2. '0' → logprob: -4.018167018890381
    3. '9' → logprob: -11.518167495727539
    4. '
' → logprob: -12.393167495727539
    5. '3' → logprob: -13.268167495727539
    6. '(' → logprob: -15.018167495727539
    7. '```' → logprob: -15.018167495727539
    8. '2' → logprob: -16.08066749572754
    9. '   ' → logprob: -16.14316749572754
    10. '``' → logprob: -16.45566749572754

Token 1844: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.792201042175293
    2. '*' → logprob: -0.917201042175293
    3. ' *' → logprob: -2.542201042175293
    4. ']*' → logprob: -2.917201042175293
    5. '   ' → logprob: -5.167201042175293
    6. ')' → logprob: -5.292201042175293
    7. '[' → logprob: -6.417201042175293
    8. '][' → logprob: -7.417201042175293
    9. ')*' → logprob: -7.542201042175293
    10. '*[' → logprob: -7.667201042175293

Token 1845: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.038047123700380325
    2. ' *' → logprob: -3.2880470752716064
    3. '   ' → logprob: -12.413046836853027
    4. '**' → logprob: -14.913046836853027
    5. '       ' → logprob: -15.038046836853027
    6. '*(' → logprob: -15.288046836853027
    7. '*[' → logprob: -15.288046836853027
    8. ' ' → logprob: -15.663046836853027
    9. ' ' → logprob: -16.413047790527344
    10. '    ' → logprob: -17.038047790527344

Token 1846: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.125000953674316
    3. '(' → logprob: -16.25
    4. '   ' → logprob: -16.5
    5. '
' → logprob: -18.875
    6. '    ' → logprob: -20.0
    7. '９' → logprob: -20.125
    8. '     ' → logprob: -20.625
    9. '```' → logprob: -20.625
    10. '  ' → logprob: -20.625

Token 1847: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '10' → logprob: -16.625
    3. ' ' → logprob: -16.75
    4. '(' → logprob: -18.5
    5. '1' → logprob: -19.875
    6. '   ' → logprob: -20.5
    7. '
' → logprob: -21.0
    8. '8' → logprob: -21.25
    9. '９' → logprob: -21.25
    10. '```' → logprob: -21.25

Token 1848: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2521530091762543
    2. ' +' → logprob: -1.5021530389785767
    3. '+
' → logprob: -9.252153396606445
    4. '       ' → logprob: -9.627153396606445
    5. ' +
' → logprob: -9.752153396606445
    6. ' +
' → logprob: -13.877153396606445
    7. '   ' → logprob: -14.377153396606445
    8. ')' → logprob: -14.502153396606445
    9. ')+' → logprob: -14.627153396606445
    10. '        ' → logprob: -15.002153396606445

Token 1849: '              ' (ID: 4442)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.029829049482941628
    2. ' dp' → logprob: -3.7798290252685547
    3. '       ' → logprob: -5.029829025268555
    4. '(dp' → logprob: -11.529829025268555
    5. '	dp' → logprob: -11.779829025268555
    6. '
' → logprob: -14.029829025268555
    7. '+' → logprob: -14.404829025268555
    8. '   ' → logprob: -14.529829025268555
    9. ' ' → logprob: -14.529829025268555
    10. '\
' → logprob: -14.904829025268555

Token 1850: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01425364799797535
    2. '       ' → logprob: -4.264253616333008
    3. ' dp' → logprob: -9.389253616333008
    4. '	dp' → logprob: -12.514253616333008
    5. '(dp' → logprob: -14.014253616333008
    6. '   ' → logprob: -14.014253616333008
    7. '           ' → logprob: -15.639253616333008
    8. '+' → logprob: -15.889253616333008
    9. '        ' → logprob: -16.139253616333008
    10. '	' → logprob: -16.139253616333008

Token 1851: ' Aj' (ID: 28294)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0008682293118909001
    2. '0' → logprob: -7.125868320465088
    3. ' dp' → logprob: -10.37586784362793
    4. '       ' → logprob: -11.12586784362793
    5. '(dp' → logprob: -11.37586784362793
    6. '9' → logprob: -13.12586784362793
    7. '           ' → logprob: -13.87586784362793
    8. '   ' → logprob: -14.12586784362793
    9. '1' → logprob: -15.00086784362793
    10. '(' → logprob: -15.12586784362793

Token 1852: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.0012332071783021092
    2. 'out' → logprob: -6.876233100891113
    3. 'outez' → logprob: -9.001233100891113
    4. 'outer' → logprob: -10.501233100891113
    5. '#' → logprob: -11.751233100891113
    6. 'd' → logprob: -11.751233100891113
    7. 'outes' → logprob: -12.126233100891113
    8. 'o' → logprob: -12.251233100891113
    9. '[' → logprob: -12.376233100891113
    10. 'dp' → logprob: -13.126233100891113

Token 1853: ' un' (ID: 537)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.015065844170749187
    2. ' dp' → logprob: -4.265065670013428
    3. '       ' → logprob: -7.640065670013428
    4. '   ' → logprob: -8.890066146850586
    5. '(dp' → logprob: -8.890066146850586
    6. '9' → logprob: -10.265066146850586
    7. '1' → logprob: -10.390066146850586
    8. '0' → logprob: -10.640066146850586
    9. '(' → logprob: -11.390066146850586
    10. ' (' → logprob: -11.640066146850586

Token 1854: ' chiffre' (ID: 107420)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.058622099459171295
    2. 'ch' → logprob: -3.433622121810913
    3. '9' → logprob: -4.558621883392334
    4. ' ' → logprob: -5.433621883392334
    5. '(' → logprob: -5.933621883392334
    6. 'digit' → logprob: -6.433621883392334
    7. ' chiffre' → logprob: -6.683621883392334
    8. 'dp' → logprob: -6.933621883392334
    9. '0' → logprob: -7.183621883392334
    10. '[' → logprob: -7.308621883392334

Token 1855: ' non' (ID: 2893)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8058165907859802
    2. '[' → logprob: -1.555816650390625
    3. '   ' → logprob: -2.430816650390625
    4. 'non' → logprob: -3.055816650390625
    5. ' non' → logprob: -3.305816650390625
    6. ' ' → logprob: -3.680816650390625
    7. ')' → logprob: -4.180816650390625
    8. ' [' → logprob: -4.180816650390625
    9. ' (' → logprob: -4.180816650390625
    10. '       ' → logprob: -4.305816650390625

Token 1856: '-z' (ID: 16826)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3580947518348694
    2. '-' → logprob: -1.4830946922302246
    3. '-zero' → logprob: -2.9830946922302246
    4. 'zero' → logprob: -4.608094692230225
    5. '-z' → logprob: -5.358094692230225
    6. ' zéro' → logprob: -5.483094692230225
    7. ' zero' → logprob: -6.108094692230225
    8. ' -' → logprob: -7.233094692230225
    9. '   ' → logprob: -7.483094692230225
    10. ' ' → logprob: -7.733094692230225

Token 1857: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.0390249565243721
    2. '0' → logprob: -3.789025068283081
    3. 'ero' → logprob: -4.289024829864502
    4. ' zéro' → logprob: -7.164024829864502
    5. ' ' → logprob: -7.414024829864502
    6. 'éros' → logprob: -7.664024829864502
    7. '   ' → logprob: -10.53902530670166
    8. ' zero' → logprob: -10.78902530670166
    9. 'zero' → logprob: -11.53902530670166
    10. '  ' → logprob: -12.28902530670166

Token 1858: ' à' (ID: 1221)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.40031400322914124
    2. ' +' → logprob: -1.1503139734268188
    3. '+
' → logprob: -4.650313854217529
    4. ' +
' → logprob: -5.900313854217529
    5. ')' → logprob: -7.400313854217529
    6. '       ' → logprob: -8.400314331054688
    7. ')+' → logprob: -9.275314331054688
    8. '*' → logprob: -10.275314331054688
    9. '   ' → logprob: -10.900314331054688
    10. '<|end|>' → logprob: -11.400314331054688

Token 1859: ' une' (ID: 2463)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.3406004011631012
    2. 'dp' → logprob: -1.5906003713607788
    3. ' dp' → logprob: -3.2156004905700684
    4. ' ' → logprob: -3.2156004905700684
    5. '1' → logprob: -5.590600490570068
    6. '(dp' → logprob: -8.21560001373291
    7. '```' → logprob: -8.84060001373291
    8. '   ' → logprob: -9.09060001373291
    9. '0' → logprob: -9.21560001373291
    10. '(' → logprob: -10.34060001373291

Token 1860: ' sé' (ID: 7462)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5667213201522827
    2. ' dp' → logprob: -1.0667213201522827
    3. '9' → logprob: -3.3167214393615723
    4. '[' → logprob: -4.191721439361572
    5. ' range' → logprob: -5.066721439361572
    6. 'range' → logprob: -5.191721439361572
    7. ' ' → logprob: -5.566721439361572
    8. '1' → logprob: -5.566721439361572
    9. '(dp' → logprob: -5.941721439361572
    10. '[i' → logprob: -6.316721439361572

Token 1861: 'quence' (ID: 6975)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3644828498363495
    2. 'quence' → logprob: -2.489482879638672
    3. '[i' → logprob: -2.739482879638672
    4. 'p' → logprob: -3.364482879638672
    5. '[' → logprob: -3.489482879638672
    6. '0' → logprob: -3.614482879638672
    7. ' dp' → logprob: -4.114482879638672
    8. 'u' → logprob: -4.239482879638672
    9. '   ' → logprob: -4.864482879638672
    10. '1' → logprob: -4.864482879638672

Token 1862: ' déjà' (ID: 21229)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3911651372909546
    2. '[' → logprob: -2.516165256500244
    3. '+' → logprob: -3.016165256500244
    4. ')' → logprob: -3.266165256500244
    5. ' précédente' → logprob: -3.391165256500244
    6. '       ' → logprob: -3.641165256500244
    7. '   ' → logprob: -4.016165256500244
    8. '<|end|>' → logprob: -4.141165256500244
    9. '```' → logprob: -5.016165256500244
    10. '0' → logprob: -5.391165256500244

Token 1863: ' plus' (ID: 2932)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5519710183143616
    2. 'strict' → logprob: -1.5519709587097168
    3. ' dp' → logprob: -2.551970958709717
    4. '1' → logprob: -3.176970958709717
    5. '[' → logprob: -3.676970958709717
    6. '9' → logprob: -3.801970958709717
    7. '```' → logprob: -3.801970958709717
    8. 'pr' → logprob: -5.176970958709717
    9. ' strict' → logprob: -5.801970958709717
    10. '0' → logprob: -6.176970958709717

Token 1864: ' petite' (ID: 28119)
  Prédit: ' petit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' petit' → logprob: -1.2374390363693237
    2. ' petite' → logprob: -1.3624390363693237
    3. '0' → logprob: -2.3624391555786133
    4. ' small' → logprob: -2.6124391555786133
    5. ' -' → logprob: -2.8624391555786133
    6. 'pet' → logprob: -3.2374391555786133
    7. '-' → logprob: -3.3624391555786133
    8. ' faible' → logprob: -3.3624391555786133
    9. '_small' → logprob: -4.237439155578613
    10. '1' → logprob: -4.487439155578613

Token 1865: ' que' (ID: 661)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22245573997497559
    2. ' +' → logprob: -1.8474557399749756
    3. '+
' → logprob: -3.5974557399749756
    4. '       ' → logprob: -5.222455978393555
    5. ')' → logprob: -5.722455978393555
    6. ' +
' → logprob: -5.972455978393555
    7. '[' → logprob: -6.847455978393555
    8. '   ' → logprob: -7.097455978393555
    9. ')+' → logprob: -7.347455978393555
    10. '```' → logprob: -8.222455978393555

Token 1866: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00884938519448042
    2. ' n' → logprob: -4.883849620819092
    3. '9' → logprob: -7.008849620819092
    4. 'l' → logprob: -8.883849143981934
    5. '   ' → logprob: -9.633849143981934
    6. ' ' → logprob: -10.133849143981934
    7. 'k' → logprob: -11.008849143981934
    8. '```' → logprob: -11.258849143981934
    9. '	n' → logprob: -11.633849143981934
    10. ' ' → logprob: -11.758849143981934

Token 1867: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3177071809768677
    2. ' +' → logprob: -1.3177071809768677
    3. '+
' → logprob: -5.692707061767578
    4. ' +
' → logprob: -7.567707061767578
    5. '       ' → logprob: -7.942707061767578
    6. ')' → logprob: -9.317707061767578
    7. '   ' → logprob: -9.442707061767578
    8. ')+' → logprob: -11.442707061767578
    9. '```' → logprob: -12.192707061767578
    10. ' +
' → logprob: -12.942707061767578

Token 1868: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.21573755145072937
    2. ' dp' → logprob: -2.0907375812530518
    3. '       ' → logprob: -2.7157375812530518
    4. '+' → logprob: -5.965737342834473
    5. ' +' → logprob: -6.465737342834473
    6. '(dp' → logprob: -9.965737342834473
    7. ' ' → logprob: -10.215737342834473
    8. '	dp' → logprob: -10.715737342834473
    9. '   ' → logprob: -10.840737342834473
    10. '+
' → logprob: -11.215737342834473

Token 1869: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -2.176947600673884e-05
    2. ' dp' → logprob: -11.000021934509277
    3. '       ' → logprob: -12.250021934509277
    4. '   ' → logprob: -16.25002098083496
    5. '	dp' → logprob: -17.00002098083496
    6. '(dp' → logprob: -17.12502098083496
    7. '           ' → logprob: -17.25002098083496
    8. '      ' → logprob: -19.50002098083496
    9. '        ' → logprob: -19.62502098083496
    10. '
' → logprob: -20.00002098083496

Token 1870: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. '1' → logprob: -12.625004768371582
    3. '[i' → logprob: -14.375004768371582
    4. ' ' → logprob: -15.000004768371582
    5. '[' → logprob: -15.250004768371582
    6. '   ' → logprob: -16.1250057220459
    7. '０' → logprob: -16.1250057220459
    8. '```' → logprob: -16.2500057220459
    9. '۰' → logprob: -17.3750057220459
    10. 'o' → logprob: -17.7500057220459

Token 1871: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. 'i' → logprob: -15.125000953674316
    3. '[' → logprob: -15.500000953674316
    4. '   ' → logprob: -15.750000953674316
    5. '```' → logprob: -15.875000953674316
    6. ' [' → logprob: -16.875
    7. '[I' → logprob: -17.875
    8. '[u' → logprob: -18.25
    9. '
' → logprob: -18.5
    10. '[int' → logprob: -19.25

Token 1872: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00011403311509639025
    2. '[i' → logprob: -9.625114440917969
    3. '][' → logprob: -11.125114440917969
    4. 'i' → logprob: -11.250114440917969
    5. ' -' → logprob: -11.500114440917969
    6. '[' → logprob: -12.000114440917969
    7. '   ' → logprob: -13.250114440917969
    8. '-[' → logprob: -14.125114440917969
    9. '```' → logprob: -15.000114440917969
    10. '-i' → logprob: -15.375114440917969

Token 1873: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07411711663007736
    2. '-' → logprob: -2.6991171836853027
    3. 'i' → logprob: -5.574117183685303
    4. '```' → logprob: -8.699116706848145
    5. 'prev' → logprob: -8.824116706848145
    6. '   ' → logprob: -10.449116706848145
    7. 'j' → logprob: -12.574116706848145
    8. 'p' → logprob: -12.699116706848145
    9. '[i' → logprob: -12.699116706848145
    10. '``' → logprob: -12.824116706848145

Token 1874: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006265539210289717
    2. '[' → logprob: -5.506265640258789
    3. '[i' → logprob: -6.506265640258789
    4. '   ' → logprob: -8.506265640258789
    5. '       ' → logprob: -9.006265640258789
    6. ' ][' → logprob: -9.006265640258789
    7. ')[' → logprob: -9.131265640258789
    8. '           ' → logprob: -9.756265640258789
    9. '}[' → logprob: -11.256265640258789
    10. '	' → logprob: -11.256265640258789

Token 1875: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. '0' → logprob: -11.250015258789062
    3. ' ' → logprob: -13.750015258789062
    4. '
' → logprob: -14.750015258789062
    5. '   ' → logprob: -15.625015258789062
    6. '[' → logprob: -16.125015258789062
    7. '```' → logprob: -18.187515258789062
    8. '     ' → logprob: -18.250015258789062
    9. '(' → logprob: -18.312515258789062
    10. '１' → logprob: -18.437515258789062

Token 1876: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47530028223991394
    2. '+' → logprob: -1.9753003120422363
    3. ']' → logprob: -2.3503003120422363
    4. ' +' → logprob: -2.9753003120422363
    5. '   ' → logprob: -3.2253003120422363
    6. ')' → logprob: -3.7253003120422363
    7. '       ' → logprob: -4.350300312042236
    8. ']+' → logprob: -4.725300312042236
    9. ')+' → logprob: -5.725300312042236
    10. '+[' → logprob: -6.725300312042236

Token 1877: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25208142399787903
    2. ' +' → logprob: -1.5020813941955566
    3. '+
' → logprob: -9.877081871032715
    4. ')' → logprob: -10.002081871032715
    5. '   ' → logprob: -11.252081871032715
    6. ')+' → logprob: -11.252081871032715
    7. ' +
' → logprob: -11.752081871032715
    8. '       ' → logprob: -12.002081871032715
    9. '+=' → logprob: -12.127081871032715
    10. '    ' → logprob: -13.252081871032715

Token 1878: '                  ' (ID: 8854)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.058811165392398834
    2. '(dp' → logprob: -3.0588111877441406
    3. ' dp' → logprob: -5.058811187744141
    4. '(' → logprob: -6.308811187744141
    5. '       ' → logprob: -6.933811187744141
    6. ' (' → logprob: -7.308811187744141
    7. '(
' → logprob: -8.93381118774414
    8. '   ' → logprob: -9.93381118774414
    9. '(d' → logprob: -10.05881118774414
    10. 'max' → logprob: -10.30881118774414

Token 1879: ' #' (ID: 1069)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.2969367504119873
    2. 'dp' → logprob: -1.6719367504119873
    3. '       ' → logprob: -2.7969367504119873
    4. '(
' → logprob: -5.671936988830566
    5. ' (' → logprob: -6.046936988830566
    6. '(' → logprob: -6.546936988830566
    7. '(d' → logprob: -8.046936988830566
    8. ' dp' → logprob: -8.546936988830566
    9. '((' → logprob: -9.046936988830566
    10. '   ' → logprob: -10.296936988830566

Token 1880: ' Aj' (ID: 28294)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.04451311007142067
    2. 'dp' → logprob: -3.16951322555542
    3. ' (' → logprob: -7.29451322555542
    4. '(d' → logprob: -8.044512748718262
    5. '(' → logprob: -8.169512748718262
    6. ' dp' → logprob: -9.544512748718262
    7. '((' → logprob: -9.919512748718262
    8. '(
' → logprob: -10.419512748718262
    9. '       ' → logprob: -11.044512748718262
    10. '(max' → logprob: -11.044512748718262

Token 1881: 'oute' (ID: 3509)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.41677799820899963
    2. '(dp' → logprob: -2.291778087615967
    3. '       ' → logprob: -2.541778087615967
    4. '=' → logprob: -2.916778087615967
    5. ' dp' → logprob: -3.666778087615967
    6. '(' → logprob: -3.666778087615967
    7. '0' → logprob: -3.916778087615967
    8. '(
' → logprob: -4.666778087615967
    9. '1' → logprob: -4.666778087615967
    10. ' (' → logprob: -4.791778087615967

Token 1882: ' un' (ID: 537)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4122043550014496
    2. '0' → logprob: -1.537204384803772
    3. '(dp' → logprob: -2.2872042655944824
    4. ' dp' → logprob: -4.287204265594482
    5. ' (' → logprob: -5.537204265594482
    6. '(' → logprob: -6.162204265594482
    7. ' ' → logprob: -7.037204265594482
    8. '(
' → logprob: -8.28720474243164
    9. '   ' → logprob: -9.16220474243164
    10. '       ' → logprob: -9.78720474243164

Token 1883: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018301078816875815
    2. 'dp' → logprob: -7.126830101013184
    3. 'zero' → logprob: -7.376830101013184
    4. '1' → logprob: -9.001830101013184
    5. '[' → logprob: -10.126830101013184
    6. 'digit' → logprob: -10.126830101013184
    7. '```' → logprob: -10.251830101013184
    8. 'ch' → logprob: -10.626830101013184
    9. 'token' → logprob: -10.751830101013184
    10. '(' → logprob: -11.126830101013184

Token 1884: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7079330086708069
    2. ')' → logprob: -1.332932949066162
    3. ' +' → logprob: -1.832932949066162
    4. '+' → logprob: -2.957932949066162
    5. '       ' → logprob: -4.457932949066162
    6. '<|end|>' → logprob: -4.582932949066162
    7. ' )' → logprob: -5.082932949066162
    8. ')+' → logprob: -6.457932949066162
    9. '<|end|>' → logprob: -7.082932949066162
    10. '    ' → logprob: -8.45793342590332

Token 1885: ' une' (ID: 2463)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.016111554577946663
    2. ' dp' → logprob: -4.141111373901367
    3. '(dp' → logprob: -10.391111373901367
    4. '	dp' → logprob: -11.141111373901367
    5. '   ' → logprob: -11.516111373901367
    6. '```' → logprob: -12.516111373901367
    7. '       ' → logprob: -12.891111373901367
    8. '...' → logprob: -13.266111373901367
    9. ' ' → logprob: -13.391111373901367
    10. '#' → logprob: -13.516111373901367

Token 1886: ' sé' (ID: 7462)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.42869943380355835
    2. '0' → logprob: -2.053699493408203
    3. '[i' → logprob: -2.803699493408203
    4. ' dp' → logprob: -2.928699493408203
    5. '[' → logprob: -3.178699493408203
    6. 'sequence' → logprob: -4.428699493408203
    7. '```' → logprob: -4.553699493408203
    8. '1' → logprob: -4.678699493408203
    9. 'zero' → logprob: -5.303699493408203
    10. ' sequence' → logprob: -5.678699493408203

Token 1887: 'quence' (ID: 6975)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39515236020088196
    2. '[' → logprob: -2.2701523303985596
    3. 'dp' → logprob: -2.5201523303985596
    4. '   ' → logprob: -2.8951523303985596
    5. '1' → logprob: -3.6451523303985596
    6. '       ' → logprob: -4.645152568817139
    7. '][' → logprob: -4.770152568817139
    8. '[i' → logprob: -5.145152568817139
    9. ']' → logprob: -5.145152568817139
    10. ' ' → logprob: -5.270152568817139

Token 1888: ' déjà' (ID: 21229)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.9553588032722473
    2. '[i' → logprob: -1.7053587436676025
    3. 'plus' → logprob: -2.0803587436676025
    4. '[' → logprob: -2.2053587436676025
    5. 'strict' → logprob: -2.4553587436676025
    6. '   ' → logprob: -3.5803587436676025
    7. ' plus' → logprob: -3.5803587436676025
    8. '       ' → logprob: -3.9553587436676025
    9. 'qui' → logprob: -4.580358982086182
    10. '0' → logprob: -4.580358982086182

Token 1889: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.001089735422283411
    2. ' plus' → logprob: -6.876089572906494
    3. '[' → logprob: -10.626090049743652
    4. 'moins' → logprob: -10.876090049743652
    5. '```' → logprob: -12.376090049743652
    6. 'more' → logprob: -12.626090049743652
    7. 'strict' → logprob: -13.751090049743652
    8. 'inf' → logprob: -14.001090049743652
    9. 'sm' → logprob: -14.126090049743652
    10. 'pl' → logprob: -14.251090049743652

Token 1890: ' petite' (ID: 28119)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.04389198124408722
    2. 'sm' → logprob: -4.043891906738281
    3. 'small' → logprob: -4.043891906738281
    4. 'inf' → logprob: -5.543891906738281
    5. '[' → logprob: -6.668891906738281
    6. 'plus' → logprob: -7.293891906738281
    7. ' petite' → logprob: -7.543891906738281
    8. ' petit' → logprob: -8.043891906738281
    9. '0' → logprob: -8.293891906738281
    10. '<' → logprob: -8.543891906738281

Token 1891: ' avec' (ID: 3937)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5509277582168579
    2. '[i' → logprob: -1.675927758216858
    3. '       ' → logprob: -1.675927758216858
    4. '   ' → logprob: -3.9259276390075684
    5. '```' → logprob: -4.300927639007568
    6. ')' → logprob: -5.425927639007568
    7. '<|end|>' → logprob: -5.550927639007568
    8. '+' → logprob: -6.550927639007568
    9. '           ' → logprob: -6.800927639007568
    10. '[
' → logprob: -7.300927639007568

Token 1892: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013439236208796501
    2. 'un' → logprob: -6.626343727111816
    3. ' ' → logprob: -11.876343727111816
    4. 'une' → logprob: -12.001343727111816
    5. '   ' → logprob: -13.251343727111816
    6. 'au' → logprob: -13.876343727111816
    7. '```' → logprob: -14.251343727111816
    8. 'dp' → logprob: -14.501343727111816
    9. ' un' → logprob: -15.501343727111816
    10. '  ' → logprob: -15.501343727111816

Token 1893: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.106736039626412e-05
    2. ' ' → logprob: -11.125031471252441
    3. '0' → logprob: -12.625031471252441
    4. 'dp' → logprob: -12.625031471252441
    5. '   ' → logprob: -12.875031471252441
    6. '#' → logprob: -13.687531471252441
    7. '(' → logprob: -13.937531471252441
    8. '```' → logprob: -14.125031471252441
    9. '
' → logprob: -14.437531471252441
    10. '  ' → logprob: -14.562531471252441

Token 1894: ' chiffre' (ID: 107420)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.054463088512420654
    2. '[i' → logprob: -3.0544631481170654
    3. ' [' → logprob: -5.929462909698486
    4. '][' → logprob: -6.429462909698486
    5. ']' → logprob: -6.929462909698486
    6. '   ' → logprob: -9.054463386535645
    7. '[j' → logprob: -9.429463386535645
    8. '[
' → logprob: -9.554463386535645
    9. '```' → logprob: -10.304463386535645
    10. '[ind' → logprob: -10.554463386535645

Token 1895: ' non' (ID: 2893)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3668648600578308
    2. 'non' → logprob: -1.2418649196624756
    3. ' non' → logprob: -4.9918646812438965
    4. ' [' → logprob: -5.1168646812438965
    5. '```' → logprob: -5.9918646812438965
    6. '_non' → logprob: -6.6168646812438965
    7. '   ' → logprob: -6.9918646812438965
    8. '][' → logprob: -8.616865158081055
    9. '0' → logprob: -8.741865158081055
    10. '非' → logprob: -9.866865158081055

Token 1896: '-z' (ID: 16826)
  Prédit: '-z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.1469186693429947
    2. '0' → logprob: -2.271918773651123
    3. 'z' → logprob: -3.521918773651123
    4. '-zero' → logprob: -6.146918773651123
    5. '-' → logprob: -7.271918773651123
    6. 'zero' → logprob: -7.896918773651123
    7. ' zéro' → logprob: -8.021918296813965
    8. '```' → logprob: -8.396918296813965
    9. '   ' → logprob: -8.896918296813965
    10. '       ' → logprob: -11.271918296813965

Token 1897: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.002150380751118064
    2. 'ro' → logprob: -6.377150535583496
    3. 'ero' → logprob: -9.377150535583496
    4. 'éros' → logprob: -9.377150535583496
    5. '0' → logprob: -10.127150535583496
    6. 'ро' → logprob: -10.377150535583496
    7. '_ro' → logprob: -10.502150535583496
    8. '%C' → logprob: -10.877150535583496
    9. '©' → logprob: -11.377150535583496
    10. 'o' → logprob: -11.377150535583496

Token 1898: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13062244653701782
    2. ' +' → logprob: -2.130622386932373
    3. '+
' → logprob: -6.005622386932373
    4. '       ' → logprob: -6.880622386932373
    5. ' +
' → logprob: -9.005622863769531
    6. ')' → logprob: -10.255622863769531
    7. '   ' → logprob: -10.755622863769531
    8. 'dp' → logprob: -12.005622863769531
    9. ')+' → logprob: -13.130622863769531
    10. '```' → logprob: -13.630622863769531

Token 1899: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14893130958080292
    2. 'dp' → logprob: -2.0239312648773193
    3. ' dp' → logprob: -5.148931503295898
    4. '+' → logprob: -8.273931503295898
    5. '(dp' → logprob: -10.023931503295898
    6. ' +' → logprob: -10.148931503295898
    7. '   ' → logprob: -10.523931503295898
    8. '      ' → logprob: -11.023931503295898
    9. '        ' → logprob: -11.148931503295898
    10. '	dp' → logprob: -11.273931503295898

Token 1900: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.18123210966587067
    2. 'dp' → logprob: -1.8062320947647095
    3. ' (' → logprob: -7.55623197555542
    4. '(' (adapté à ' (') → logprob: -7.55623197555542
    5. ' dp' → logprob: -8.806232452392578
    6. '(
' → logprob: -9.181232452392578
    7. '       ' → logprob: -9.806232452392578
    8. '((' → logprob: -9.931232452392578
    9. '(d' → logprob: -10.306232452392578
    10. '   ' → logprob: -11.181232452392578

Token 1901: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00020580526324920356
    2. ' dp' → logprob: -8.750205993652344
    3. '(dp' → logprob: -10.000205993652344
    4. '(' → logprob: -13.750205993652344
    5. '0' → logprob: -15.125205993652344
    6. '   ' → logprob: -15.750205993652344
    7. '           ' → logprob: -15.875205993652344
    8. ' (' → logprob: -16.500205993652344
    9. '	dp' → logprob: -16.500205993652344
    10. '       ' → logprob: -16.625205993652344

Token 1902: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.125000953674316
    3. '[' → logprob: -15.500000953674316
    4. '_' → logprob: -16.500001907348633
    5. '
' → logprob: -17.062501907348633
    6. '１' → logprob: -17.687501907348633
    7. '[i' → logprob: -17.875001907348633
    8. 'user' → logprob: -18.500001907348633
    9. '...' → logprob: -18.562501907348633
    10. '' → logprob: -18.562501907348633

Token 1903: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.15310683415737e-05
    2. '[' → logprob: -11.875021934509277
    3. '```' → logprob: -12.000021934509277
    4. 'i' → logprob: -13.000021934509277
    5. '   ' → logprob: -13.375021934509277
    6. ' [' → logprob: -13.375021934509277
    7. '[I' → logprob: -14.375021934509277
    8. '[int' → logprob: -14.750021934509277
    9. '[user' → logprob: -15.250021934509277
    10. ')[' → logprob: -15.250021934509277

Token 1904: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00011117222311440855
    2. '   ' → logprob: -10.50011157989502
    3. ' -' → logprob: -10.62511157989502
    4. '1' → logprob: -10.87511157989502
    5. '[i' → logprob: -10.87511157989502
    6. '[' → logprob: -12.12511157989502
    7. '```' → logprob: -12.25011157989502
    8. '][' → logprob: -12.37511157989502
    9. '[-' → logprob: -13.00011157989502
    10. '-[' → logprob: -13.50011157989502

Token 1905: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0026334458962082863
    2. '-' → logprob: -6.002633571624756
    3. '```' → logprob: -9.377633094787598
    4. 'i' → logprob: -10.002633094787598
    5. '   ' → logprob: -11.752633094787598
    6. '[' → logprob: -12.127633094787598
    7. 'prev' → logprob: -12.627633094787598
    8. ' ' → logprob: -12.877633094787598
    9. '       ' → logprob: -13.877633094787598
    10. '[i' → logprob: -14.002633094787598

Token 1906: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6220844388008118
    2. '[i' → logprob: -0.8720844388008118
    3. '[' → logprob: -3.872084379196167
    4. ')[' → logprob: -3.872084379196167
    5. '   ' → logprob: -6.622084617614746
    6. '           ' → logprob: -7.372084617614746
    7. '       ' → logprob: -7.372084617614746
    8. ' ][' → logprob: -9.247084617614746
    9. '```' → logprob: -9.247084617614746
    10. ' [' → logprob: -9.372084617614746

Token 1907: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '
' → logprob: -14.500000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '0' → logprob: -15.375000953674316
    5. '   ' → logprob: -15.750000953674316
    6. 'i' → logprob: -16.125001907348633
    7. '```' → logprob: -16.375001907348633
    8. '[' → logprob: -17.375001907348633
    9. '][' → logprob: -17.750001907348633
    10. '  ' → logprob: -18.250001907348633

Token 1908: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17279790341854095
    2. 'if' → logprob: -2.547797918319702
    3. ')' → logprob: -3.297797918319702
    4. ']' → logprob: -4.047797679901123
    5. '*' → logprob: -4.797797679901123
    6. '   ' → logprob: -4.797797679901123
    7. ' *' → logprob: -5.672797679901123
    8. '])' → logprob: -5.797797679901123
    9. '       ' → logprob: -6.422797679901123
    10. '    ' → logprob: -7.922797679901123

Token 1909: ' if' (ID: 538)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5451740622520447
    2. '*' → logprob: -0.9201740622520447
    3. ' if' → logprob: -4.0451741218566895
    4. 'if' → logprob: -5.7951741218566895
    5. ')' → logprob: -7.6701741218566895
    6. '   ' → logprob: -7.7951741218566895
    7. ')*' → logprob: -9.045173645019531
    8. '       ' → logprob: -9.545173645019531
    9. '*(' → logprob: -10.170173645019531
    10. '    ' → logprob: -10.545173645019531

Token 1910: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.0005530327325686812
    2. ' np' → logprob: -7.500553131103516
    3. '(np' → logprob: -17.375553131103516
    4. '[np' → logprob: -17.625553131103516
    5. '   ' → logprob: -18.000553131103516
    6. '_np' → logprob: -18.875553131103516
    7. ' ' → logprob: -19.125553131103516
    8. 'n' → logprob: -19.250553131103516
    9. '  ' → logprob: -19.875553131103516
    10. 'npc' → logprob: -20.250553131103516

Token 1911: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6931963562965393
    2. '!=' → logprob: -0.6931963562965393
    3. ')!=' → logprob: -10.568196296691895
    4. ']!=' → logprob: -11.318196296691895
    5. '()!=' → logprob: -12.693196296691895
    6. '!=-' → logprob: -13.318196296691895
    7. '!="' → logprob: -13.318196296691895
    8. '!='' → logprob: -13.568196296691895
    9. ' ' → logprob: -14.068196296691895
    10. '```' → logprob: -14.443196296691895

Token 1912: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.3358446166384965e-05
    2. ' ' → logprob: -10.000053405761719
    3. '=' → logprob: -11.875053405761719
    4. '   ' → logprob: -14.375053405761719
    5. '```' → logprob: -15.750053405761719
    6. '۰' → logprob: -17.37505340576172
    7. '  ' → logprob: -17.62505340576172
    8. '       ' → logprob: -18.18755340576172
    9. '	' → logprob: -18.37505340576172
    10. '>' → logprob: -18.50005340576172

Token 1913: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -11.875007629394531
    3. '=' → logprob: -15.000007629394531
    4. '```' → logprob: -16.37500762939453
    5. '   ' → logprob: -17.18750762939453
    6. '۰' → logprob: -17.93750762939453
    7. ' ' → logprob: -18.12500762939453
    8. '1' → logprob: -18.75000762939453
    9. '  ' → logprob: -19.00000762939453
    10. '>' → logprob: -19.00000762939453

Token 1914: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.08496540039777756
    2. ' else' → logprob: -2.709965467453003
    3. ')' → logprob: -4.209965229034424
    4. '       ' → logprob: -10.334965705871582
    5. '        ' → logprob: -11.209965705871582
    6. ' )' → logprob: -12.084965705871582
    7. '   ' → logprob: -12.209965705871582
    8. '),' → logprob: -12.584965705871582
    9. '           ' → logprob: -13.334965705871582
    10. '))' → logprob: -13.584965705871582

Token 1915: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.75009536743164
    4. ' ' → logprob: -16.87509536743164
    5. '           ' → logprob: -18.37509536743164
    6. ')' → logprob: -18.75009536743164
    7. '       ' → logprob: -18.75009536743164
    8. '	' → logprob: -19.00009536743164
    9. '۰' → logprob: -19.12509536743164
    10. '  ' → logprob: -19.12509536743164

Token 1916: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -18.000017166137695
    4. ' ' → logprob: -19.000017166137695
    5. '۰' → logprob: -19.937517166137695
    6. '  ' → logprob: -20.125017166137695
    7. ')' → logprob: -20.125017166137695
    8. '00' → logprob: -20.250017166137695
    9. '０' → logprob: -20.312517166137695
    10. '	' → logprob: -20.437517166137695

Token 1917: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04875359311699867
    2. '   ' → logprob: -3.048753499984741
    3. '))' → logprob: -8.92375373840332
    4. '       ' → logprob: -10.79875373840332
    5. ')
' → logprob: -11.54875373840332
    6. ' )' → logprob: -14.42375373840332
    7. ')))' → logprob: -14.54875373840332
    8. '   ' → logprob: -14.92375373840332
    9. ')`' → logprob: -15.67375373840332
    10. '),' → logprob: -15.67375373840332

Token 1918: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38688749074935913
    2. '   ' → logprob: -1.136887550354004
    3. ' )' → logprob: -11.886887550354004
    4. '   ' → logprob: -12.761887550354004
    5. '	' → logprob: -13.011887550354004
    6. '       ' → logprob: -13.386887550354004
    7. ')
' → logprob: -13.511887550354004
    8. '```' → logprob: -15.011887550354004
    9. ')*' → logprob: -15.761887550354004
    10. '  ' → logprob: -15.886887550354004

Token 1919: ' Continue' (ID: 16958)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006035919301211834
    2. ' dp' → logprob: -5.256035804748535
    3. '0' → logprob: -7.881035804748535
    4. '(dp' → logprob: -8.256035804748535
    5. ')' → logprob: -9.381035804748535
    6. ' (' → logprob: -10.631035804748535
    7. '1' → logprob: -11.006035804748535
    8. '(' → logprob: -11.506035804748535
    9. '```' → logprob: -12.256035804748535
    10. '<|end|>' → logprob: -12.381035804748535

Token 1920: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1921: ' sé' (ID: 7462)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001958371140062809
    2. ' dp' → logprob: -6.25195837020874
    3. '1' → logprob: -11.001958847045898
    4. '```' → logprob: -12.501958847045898
    5. '(dp' → logprob: -12.751958847045898
    6. '   ' → logprob: -13.251958847045898
    7. '	dp' → logprob: -13.876958847045898
    8. ' ' → logprob: -14.251958847045898
    9. '  ' → logprob: -14.626958847045898
    10. '#' → logprob: -14.876958847045898

Token 1922: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.003700677305459976
    2. 'quent' → logprob: -6.6287007331848145
    3. '1' → logprob: -6.7537007331848145
    4. 'quences' → logprob: -7.8787007331848145
    5. '#' → logprob: -8.378700256347656
    6. '```' → logprob: -9.128700256347656
    7. '_' → logprob: -9.253700256347656
    8. 'q' → logprob: -9.503700256347656
    9. 'qu' → logprob: -10.003700256347656
    10. 'ance' → logprob: -10.378700256347656

Token 1923: ' ég' (ID: 33150)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1924: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.011888102628290653
    2. 'al' → logprob: -4.511888027191162
    3. 'aux' → logprob: -8.26188850402832
    4. '#' → logprob: -9.63688850402832
    5. 'uée' → logprob: -9.63688850402832
    6. 'a' → logprob: -10.26188850402832
    7. '1' → logprob: -10.38688850402832
    8. 'uale' → logprob: -10.38688850402832
    9. '   ' → logprob: -10.38688850402832
    10. 'але' → logprob: -10.51188850402832

Token 1925: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5499277114868164
    2. '[i' → logprob: -1.4249277114868164
    3. ')' → logprob: -1.7999277114868164
    4. '[' → logprob: -4.549927711486816
    5. ')[' → logprob: -5.924927711486816
    6. '       ' → logprob: -6.174927711486816
    7. '```' → logprob: -7.424927711486816
    8. ')
' → logprob: -8.299927711486816
    9. '<|end|>' → logprob: -8.299927711486816
    10. '][' → logprob: -8.799927711486816

Token 1926: ' possible' (ID: 4149)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.030743498355150223
    2. ' np' → logprob: -3.5307435989379883
    3. 'True' → logprob: -7.030743598937988
    4. ' True' → logprob: -9.280743598937988
    5. '1' → logprob: -12.155743598937988
    6. 'n' → logprob: -13.405743598937988
    7. '   ' → logprob: -13.405743598937988
    8. ' ' → logprob: -13.530743598937988
    9. 'dp' → logprob: -14.155743598937988
    10. '  ' → logprob: -14.405743598937988

Token 1927: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01124422438442707
    2. '   ' → logprob: -4.511244297027588
    3. '```' → logprob: -9.88624382019043
    4. ')
' → logprob: -10.13624382019043
    5. ' )' → logprob: -10.51124382019043
    6. ')*' → logprob: -10.76124382019043
    7. ')%' → logprob: -10.76124382019043
    8. '<|end|>' → logprob: -12.38624382019043
    9. '\n' → logprob: -12.63624382019043
    10. ')+' → logprob: -12.88624382019043

Token 1928: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023431232199072838
    2. '   ' → logprob: -3.7734313011169434
    3. ' )' → logprob: -9.648430824279785
    4. ')
' → logprob: -10.398430824279785
    5. '```' → logprob: -10.523430824279785
    6. '	' → logprob: -11.023430824279785
    7. ')*' → logprob: -11.898430824279785
    8. '\n' → logprob: -12.148430824279785
    9. '    
' → logprob: -12.398430824279785
    10. '  ' → logprob: -12.398430824279785

Token 1929: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07890433073043823
    2. '   ' → logprob: -2.578904390335083
    3. ')
' (adapté à ' )
') → logprob: -11.953904151916504
    4. ' )' → logprob: -12.578904151916504
    5. '   ' → logprob: -13.578904151916504
    6. '       ' → logprob: -13.953904151916504
    7. '```' → logprob: -13.953904151916504
    8. '	' → logprob: -14.203904151916504
    9. ' ' → logprob: -15.953904151916504
    10. ')+' → logprob: -15.953904151916504

Token 1930: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25887531042099
    2. '<|end|>' → logprob: -1.6338753700256348
    3. '   ' → logprob: -3.6338753700256348
    4. '#' → logprob: -6.633875370025635
    5. 'for' → logprob: -6.633875370025635
    6. '```' → logprob: -7.008875370025635
    7. '<|end|>' → logprob: -7.008875370025635
    8. '[' → logprob: -7.758875370025635
    9. '...' → logprob: -8.008874893188477
    10. ']' → logprob: -8.758874893188477

Token 1931: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1870213747024536
    2. ')' → logprob: -2.437021255493164
    3. '<|end|>' → logprob: -2.687021255493164
    4. '#' (adapté à ' #') → logprob: -5.562021255493164
    5. 'for' → logprob: -5.937021255493164
    6. '```' → logprob: -6.062021255493164
    7. ' ' → logprob: -6.937021255493164
    8. '[' → logprob: -7.187021255493164
    9. '
' → logprob: -7.187021255493164
    10. '  ' → logprob: -7.312021255493164

Token 1932: ' Il' (ID: 5329)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6817845702171326
    2. '   ' → logprob: -1.6817846298217773
    3. ')' → logprob: -1.9317846298217773
    4. '<|end|>' → logprob: -2.5567846298217773
    5. 'for' → logprob: -2.6817846298217773
    6. '#' → logprob: -5.181784629821777
    7. '```' → logprob: -5.556784629821777
    8. ' for' → logprob: -5.931784629821777
    9. '
' → logprob: -6.931784629821777
    10. '...' → logprob: -6.931784629821777

Token 1933: ' y' (ID: 342)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14486713707447052
    2. '1' → logprob: -2.519867181777954
    3. 'for' → logprob: -4.144866943359375
    4. '   ' → logprob: -4.394866943359375
    5. '```' → logprob: -4.519866943359375
    6. '[' → logprob: -5.394866943359375
    7. '#' → logprob: -5.769866943359375
    8. '
' → logprob: -6.144866943359375
    9. ']' → logprob: -6.519866943359375
    10. '][' → logprob: -6.644866943359375

Token 1934: ' a' (ID: 261)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6767075061798096
    2. '][' → logprob: -1.5517075061798096
    3. '0' → logprob: -2.4267075061798096
    4. ']' → logprob: -2.6767075061798096
    5. 'for' → logprob: -3.4267075061798096
    6. '   ' → logprob: -3.4267075061798096
    7. '#' → logprob: -4.3017072677612305
    8. '[
' → logprob: -4.5517072677612305
    9. 'dp' → logprob: -4.8017072677612305
    10. '[i' → logprob: -5.1767072677612305

Token 1935: ' exactement' (ID: 108701)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.3263028860092163
    2. '(
' → logprob: -1.5763028860092163
    3. '   ' → logprob: -1.9513028860092163
    4. ')' → logprob: -2.201303005218506
    5. 'for' → logprob: -2.576303005218506
    6. '=' → logprob: -3.326303005218506
    7. ']' → logprob: -3.451303005218506
    8. '[i' → logprob: -3.701303005218506
    9. '(' → logprob: -4.076303005218506
    10. '0' → logprob: -4.326303005218506

Token 1936: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7570509910583496
    2. '(
' → logprob: -1.2570509910583496
    3. '0' → logprob: -2.7570509910583496
    4. '   ' → logprob: -3.1320509910583496
    5. '(dp' → logprob: -3.1320509910583496
    6. '(' → logprob: -3.3820509910583496
    7. '1' → logprob: -3.5070509910583496
    8. '4' → logprob: -4.00705099105835
    9. '=' → logprob: -6.38205099105835
    10. '[' → logprob: -6.38205099105835

Token 1937: '1' (ID: 16)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.7341040968894958
    2. 'dp' → logprob: -0.9841040968894958
    3. '0' → logprob: -2.7341041564941406
    4. '1' → logprob: -3.2341041564941406
    5. '   ' → logprob: -4.109104156494141
    6. '(' → logprob: -4.484104156494141
    7. '(dp' → logprob: -4.734104156494141
    8. ')' → logprob: -6.234104156494141
    9. '[
' → logprob: -7.359104156494141
    10. '4' → logprob: -7.609104156494141

Token 1938: ' façon' (ID: 33381)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0711930990219116
    2. '   ' → logprob: -1.1961930990219116
    3. '<|end|>' → logprob: -1.6961930990219116
    4. ']' → logprob: -2.946193218231201
    5. ')' → logprob: -4.071193218231201
    6. '<|end|>' → logprob: -4.196193218231201
    7. '[
' → logprob: -4.571193218231201
    8. '#' → logprob: -4.696193218231201
    9. '[i' → logprob: -4.946193218231201
    10. '0' → logprob: -5.071193218231201

Token 1939: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1608273983001709
    2. '<|end|>' → logprob: -2.660827398300171
    3. '[' → logprob: -2.910827398300171
    4. ')' → logprob: -4.41082763671875
    5. ']' → logprob: -4.91082763671875
    6. 'dp' → logprob: -6.53582763671875
    7. '.' → logprob: -6.91082763671875
    8. '[i' → logprob: -7.91082763671875
    9. '<|end|>' → logprob: -8.16082763671875
    10. '[
' → logprob: -8.41082763671875

Token 1940: ''avoir' (ID: 55863)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22040404379367828
    2. 'contin' → logprob: -2.2204041481018066
    3. 'mettre' → logprob: -4.345404148101807
    4. 'avoir' → logprob: -4.470404148101807
    5. 'faire' → logprob: -4.845404148101807
    6. '[' → logprob: -4.845404148101807
    7. 'continue' → logprob: -5.095404148101807
    8. 'aj' → logprob: -5.220404148101807
    9. ''aj' → logprob: -5.345404148101807
    10. 'maint' → logprob: -5.845404148101807

Token 1941: ' exactement' (ID: 108701)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007157199550420046
    2. '0' → logprob: -5.382157325744629
    3. ' dp' → logprob: -7.007157325744629
    4. '   ' → logprob: -7.257157325744629
    5. '(dp' → logprob: -7.507157325744629
    6. 'for' → logprob: -9.132157325744629
    7. '	dp' → logprob: -9.257157325744629
    8. '1' → logprob: -10.507157325744629
    9. '#' → logprob: -10.632157325744629
    10. ' ' → logprob: -11.132157325744629

Token 1942: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49341386556625366
    2. 'dp' → logprob: -0.9934138655662537
    3. '1' → logprob: -4.368413925170898
    4. '[' → logprob: -6.243413925170898
    5. 'un' → logprob: -7.493413925170898
    6. ' ' → logprob: -7.493413925170898
    7. 'zero' → logprob: -7.493413925170898
    8. '   ' → logprob: -7.618413925170898
    9. '```' → logprob: -7.618413925170898
    10. 'po' → logprob: -7.618413925170898

Token 1943: '1' (ID: 16)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3284582793712616
    2. '0' → logprob: -1.953458309173584
    3. '1' → logprob: -2.203458309173584
    4. 'i' → logprob: -3.828458309173584
    5. 'po' → logprob: -5.828458309173584
    6. '[i' → logprob: -6.953458309173584
    7. '```' → logprob: -7.828458309173584
    8. '[' → logprob: -8.328457832336426
    9. '(dp' → logprob: -8.703457832336426
    10. '(' → logprob: -8.828457832336426

Token 1944: ' chiffre' (ID: 107420)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8869845271110535
    2. '[' → logprob: -1.0119845867156982
    3. '0' → logprob: -2.2619845867156982
    4. ']' → logprob: -2.6369845867156982
    5. '[i' → logprob: -4.261984348297119
    6. ')' → logprob: -4.511984348297119
    7. 'non' → logprob: -5.011984348297119
    8. '<|end|>' → logprob: -5.886984348297119
    9. '```' → logprob: -6.261984348297119
    10. '[
' → logprob: -6.511984348297119

Token 1945: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.7749993205070496
    2. '_non' → logprob: -1.1499993801116943
    3. ' non' → logprob: -2.1499993801116943
    4. '   ' → logprob: -2.8999993801116943
    5. '[' → logprob: -3.8999993801116943
    6. '0' → logprob: -4.899999141693115
    7. ')' → logprob: -5.399999141693115
    8. '=' → logprob: -5.399999141693115
    9. '1' → logprob: -5.774999141693115
    10. '_' → logprob: -6.149999141693115

Token 1946: '-z' (ID: 16826)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6102776527404785
    2. '-z' → logprob: -0.8602776527404785
    3. '-' → logprob: -4.6102776527404785
    4. 'z' → logprob: -4.8602776527404785
    5. '-zero' → logprob: -5.1102776527404785
    6. 'zero' → logprob: -5.4852776527404785
    7. ' zéro' → logprob: -5.4852776527404785
    8. '_z' → logprob: -7.3602776527404785
    9. '_' → logprob: -7.9852776527404785
    10. '_zero' → logprob: -8.36027717590332

Token 1947: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.000497032655403018
    2. 'éros' → logprob: -8.250496864318848
    3. '_' → logprob: -9.625496864318848
    4. 'é' → logprob: -10.250496864318848
    5. '0' → logprob: -10.375496864318848
    6. 'éo' → logprob: -10.625496864318848
    7. ' ' → logprob: -11.500496864318848
    8. '[' → logprob: -11.875496864318848
    9. ' zéro' → logprob: -12.000496864318848
    10. '```' → logprob: -12.000496864318848

Token 1948: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0622403621673584
    2. 'dp' → logprob: -2.8122403621673584
    3. ' dp' → logprob: -9.187240600585938
    4. '	dp' → logprob: -10.062240600585938
    5. '[' → logprob: -10.312240600585938
    6. '=' → logprob: -10.437240600585938
    7. '(dp' → logprob: -11.187240600585938
    8. ' =' → logprob: -11.312240600585938
    9. '_dp' → logprob: -11.687240600585938
    10. '<|end|>' → logprob: -12.187240600585938

Token 1949: ' c' (ID: 274)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.36218613386154175
    2. '   ' → logprob: -1.2371861934661865
    3. ' dp' → logprob: -4.987185955047607
    4. '0' → logprob: -5.362185955047607
    5. '	dp' → logprob: -7.112185955047607
    6. ' ' → logprob: -8.362186431884766
    7. ')' → logprob: -8.362186431884766
    8. '<|end|>' → logprob: -8.737186431884766
    9. ' for' → logprob: -9.112186431884766
    10. 'for' → logprob: -9.237186431884766

Token 1950: ''est' (ID: 6616)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1951: ' quand' (ID: 18026)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16375866532325745
    2. '0' → logprob: -2.9137587547302246
    3. 'if' → logprob: -3.0387587547302246
    4. '   ' → logprob: -3.6637587547302246
    5. '1' → logprob: -4.913758754730225
    6. ' dp' → logprob: -5.288758754730225
    7. '=' → logprob: -5.913758754730225
    8. ' if' → logprob: -6.163758754730225
    9. '(dp' → logprob: -6.413758754730225
    10. '#' → logprob: -6.663758754730225

Token 1952: ' on' (ID: 402)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.0038609972689300776
    2. ' np' → logprob: -6.253860950469971
    3. 'dp' → logprob: -6.503860950469971
    4. '   ' → logprob: -8.128861427307129
    5. 'i' → logprob: -9.128861427307129
    6. ' dp' → logprob: -12.003861427307129
    7. ' ' → logprob: -12.378861427307129
    8. ' i' → logprob: -12.503861427307129
    9. '[np' → logprob: -12.753861427307129
    10. '  ' → logprob: -13.253861427307129

Token 1953: ' a' (ID: 261)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2089208364486694
    2. 'cho' → logprob: -1.4589208364486694
    3. 'contin' → logprob: -2.208920955657959
    4. 'a' → logprob: -2.958920955657959
    5. 'arr' → logprob: -2.958920955657959
    6. 'aj' → logprob: -2.958920955657959
    7. 'le' → logprob: -2.958920955657959
    8. 'continue' → logprob: -3.083920955657959
    9. 's' → logprob: -3.208920955657959
    10. 'pr' → logprob: -4.333920955657959

Token 1954: ' placé' (ID: 147030)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.05484166368842125
    2. 'dp' → logprob: -3.6798417568206787
    3. '   ' → logprob: -4.0548415184021
    4. ' np' → logprob: -5.1798415184021
    5. '1' → logprob: -5.9298415184021
    6. '  ' → logprob: -8.054841995239258
    7. '(np' → logprob: -8.054841995239258
    8. 's' → logprob: -8.304841995239258
    9. '0' → logprob: -8.304841995239258
    10. 'i' → logprob: -8.429841995239258

Token 1955: ' autant' (ID: 46683)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.21139203011989594
    2. '1' → logprob: -2.0863919258117676
    3. '0' → logprob: -3.2113919258117676
    4. 'dp' → logprob: -4.211391925811768
    5. 'the' → logprob: -6.211391925811768
    6. 'bs' → logprob: -6.211391925811768
    7. ' np' → logprob: -6.336391925811768
    8. 'a' → logprob: -6.586391925811768
    9. '   ' → logprob: -7.086391925811768
    10. 's' → logprob: -7.336391925811768

Token 1956: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.187046080827713
    2. 'd' → logprob: -2.4370460510253906
    3. '   ' → logprob: -3.4370460510253906
    4. ' de' → logprob: -3.5620460510253906
    5. '       ' → logprob: -5.187046051025391
    6. '0' → logprob: -5.812046051025391
    7. 'of' → logprob: -6.187046051025391
    8. ' of' → logprob: -6.562046051025391
    9. '    ' → logprob: -6.687046051025391
    10. '1' → logprob: -6.937046051025391

Token 1957: ' chiffres' (ID: 105565)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7668607234954834
    2. 'z' → logprob: -2.0168607234954834
    3. 'zeros' → logprob: -2.1418607234954834
    4. 'dp' → logprob: -2.2668607234954834
    5. '1' → logprob: -2.7668607234954834
    6. 'digits' → logprob: -3.7668607234954834
    7. ''' → logprob: -4.2668609619140625
    8. 'ch' → logprob: -4.6418609619140625
    9. 'un' → logprob: -5.0168609619140625
    10. ' ' → logprob: -5.1418609619140625

Token 1958: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8121200799942017
    2. 'dp' → logprob: -1.3121200799942017
    3. '0' → logprob: -1.8121200799942017
    4. '[' → logprob: -3.312119960784912
    5. '1' → logprob: -4.187119960784912
    6. 'non' → logprob: -4.562119960784912
    7. '=' → logprob: -4.687119960784912
    8. ' dp' → logprob: -4.812119960784912
    9. '[i' → logprob: -4.812119960784912
    10. ' ' → logprob: -5.187119960784912

Token 1959: ' (' (ID: 350)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.7841073274612427
    2. '1' → logprob: -1.5341073274612427
    3. 'i' → logprob: -2.034107208251953
    4. 'possible' → logprob: -3.659107208251953
    5. 'la' → logprob: -3.784107208251953
    6. 'l' → logprob: -4.284107208251953
    7. 'de' → logprob: -4.409107208251953
    8. 'on' → logprob: -4.534107208251953
    9. 'dp' → logprob: -4.659107208251953
    10. 'il' → logprob: -4.909107208251953

Token 1960: 'i' (ID: 72)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.327392041683197
    2. 'i' → logprob: -2.202392101287842
    3. 'np' → logprob: -2.202392101287842
    4. 'k' → logprob: -4.202392101287842
    5. 's' → logprob: -4.202392101287842
    6. 'po' → logprob: -4.702392101287842
    7. '0' → logprob: -5.452392101287842
    8. 'len' → logprob: -5.577392101287842
    9. 'point' → logprob: -5.577392101287842
    10. 'str' → logprob: -6.327392101287842

Token 1961: ' ==' (ID: 951)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6037755012512207
    2. '==' → logprob: -1.6037755012512207
    3. ' -' → logprob: -2.3537755012512207
    4. ' ==' → logprob: -2.8537755012512207
    5. ')' → logprob: -2.9787755012512207
    6. '][' → logprob: -4.478775501251221
    7. '[' → logprob: -4.978775501251221
    8. '   ' → logprob: -5.103775501251221
    9. '>' → logprob: -5.603775501251221
    10. ']' → logprob: -5.853775501251221

Token 1962: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20623354613780975
    2. 'len' → logprob: -1.8312335014343262
    3. '0' → logprob: -3.831233501434326
    4. 'n' → logprob: -6.331233501434326
    5. 'length' → logprob: -7.206233501434326
    6. 'po' → logprob: -7.331233501434326
    7. 'i' → logprob: -7.706233501434326
    8. ' ' → logprob: -8.206233978271484
    9. ' len' → logprob: -8.956233978271484
    10. 'k' → logprob: -9.206233978271484

Token 1963: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3730873465538025
    2. 'len' → logprob: -1.2480874061584473
    3. '0' → logprob: -3.8730874061584473
    4. 'i' → logprob: -6.748087406158447
    5. 'n' → logprob: -6.748087406158447
    6. 'point' → logprob: -7.498087406158447
    7. 'length' → logprob: -8.623086929321289
    8. ' ' → logprob: -9.123086929321289
    9. ' len' → logprob: -9.498086929321289
    10. 'po' → logprob: -9.498086929321289

Token 1964: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06947524100542068
    2. ' and' → logprob: -3.0694751739501953
    3. '   ' → logprob: -4.444475173950195
    4. 'and' → logprob: -5.319475173950195
    5. ' else' → logprob: -6.319475173950195
    6. 'else' → logprob: -6.944475173950195
    7. ' )' → logprob: -7.319475173950195
    8. ').' → logprob: -9.194475173950195
    9. ' if' → logprob: -9.444475173950195
    10. ')
' → logprob: -9.569475173950195

Token 1965: ' nombre' (ID: 9733)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07640213519334793
    2. '1' → logprob: -3.076402187347412
    3. '(i' → logprob: -4.951402187347412
    4. ' ' → logprob: -5.076402187347412
    5. 'dp' → logprob: -5.576402187347412
    6. 'i' → logprob: -5.951402187347412
    7. ' (' → logprob: -6.201402187347412
    8. 'np' → logprob: -6.701402187347412
    9. '(' → logprob: -7.326402187347412
    10. '(dp' → logprob: -7.451402187347412

Token 1966: ' de' (ID: 334)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -1.436424732208252
    2. ')' → logprob: -1.686424732208252
    3. ' of' → logprob: -2.061424732208252
    4. ' non' → logprob: -2.186424732208252
    5. 'of' → logprob: -2.186424732208252
    6. 'de' → logprob: -2.936424732208252
    7. '_non' → logprob: -2.936424732208252
    8. '<|end|>' → logprob: -3.561424732208252
    9. '   ' → logprob: -4.311424732208252
    10. ' de' → logprob: -5.061424732208252

Token 1967: ' ' (ID: 220)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.8871663212776184
    2. 'dp' → logprob: -1.3871662616729736
    3. ' non' → logprob: -2.5121662616729736
    4. 'zeros' → logprob: -2.6371662616729736
    5. '0' → logprob: -3.2621662616729736
    6. ' zeros' → logprob: -3.5121662616729736
    7. ' dp' → logprob: -4.012166500091553
    8. 'spaces' → logprob: -4.137166500091553
    9. 'zero' → logprob: -4.262166500091553
    10. ' ' → logprob: -5.012166500091553

Token 1968: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0074118375778198
    2. 'dp' → logprob: -1.2574118375778198
    3. '1' → logprob: -2.0074119567871094
    4. 'zeros' → logprob: -2.2574119567871094
    5. 'po' → logprob: -3.5074119567871094
    6. 'non' → logprob: -3.6324119567871094
    7. '[' → logprob: -4.632411956787109
    8. 'i' → logprob: -4.757411956787109
    9. 'zero' → logprob: -4.882411956787109
    10. '[i' → logprob: -5.007411956787109

Token 1969: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10613863915205002
    2. ' )' → logprob: -3.2311387062072754
    3. ']' → logprob: -4.106138706207275
    4. ' else' → logprob: -5.106138706207275
    5. 's' → logprob: -5.356138706207275
    6. '[i' → logprob: -5.356138706207275
    7. '])' → logprob: -5.356138706207275
    8. '   ' → logprob: -5.606138706207275
    9. ' non' → logprob: -6.356138706207275
    10. '[' → logprob: -6.481138706207275

Token 1970: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02385362982749939
    2. '   ' → logprob: -3.8988535404205322
    3. '=' → logprob: -6.148853778839111
    4. 'if' → logprob: -7.398853778839111
    5. '	dp' → logprob: -8.398853302001953
    6. ' dp' → logprob: -9.148853302001953
    7. '==' → logprob: -9.898853302001953
    8. ')' → logprob: -10.273853302001953
    9. '<|end|>' → logprob: -10.773853302001953
    10. '(dp' → logprob: -10.898853302001953

Token 1971: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.009242895059287548
    2. 'if' → logprob: -4.759243011474609
    3. '   ' → logprob: -8.00924301147461
    4. '=' → logprob: -9.38424301147461
    5. ' if' → logprob: -9.63424301147461
    6. ' dp' → logprob: -9.75924301147461
    7. ')' → logprob: -10.88424301147461
    8. '	dp' → logprob: -11.13424301147461
    9. '#' → logprob: -11.50924301147461
    10. ' =' → logprob: -11.75924301147461

Token 1972: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06994377076625824
    2. '0' → logprob: -2.69494366645813
    3. '```' → logprob: -13.19494342803955
    4. '_' → logprob: -13.75744342803955
    5. '[' → logprob: -14.00744342803955
    6. '１' → logprob: -14.81994342803955
    7. 'i' → logprob: -15.06994342803955
    8. ' ' → logprob: -15.38244342803955
    9. 'o' → logprob: -15.56994342803955
    10. 's' → logprob: -15.63244342803955

Token 1973: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2352385965641588e-05
    2. '[' → logprob: -11.750012397766113
    3. '```' → logprob: -13.375012397766113
    4. '   ' → logprob: -14.000012397766113
    5. '[I' → logprob: -14.125012397766113
    6. ' [' → logprob: -15.125012397766113
    7. 'i' → logprob: -15.250012397766113
    8. '\[' → logprob: -15.375012397766113
    9. '[int' → logprob: -15.875012397766113
    10. '[u' → logprob: -16.500011444091797

Token 1974: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00864175520837307
    2. '[' → logprob: -5.258641719818115
    3. '[i' → logprob: -5.758641719818115
    4. '   ' → logprob: -9.008642196655273
    5. ' ][' → logprob: -10.008642196655273
    6. ']' → logprob: -10.508642196655273
    7. ')[' → logprob: -11.383642196655273
    8. '```' → logprob: -11.633642196655273
    9. '>[' → logprob: -12.508642196655273
    10. '       ' → logprob: -12.508642196655273

Token 1975: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033676594495773315
    2. '0' → logprob: -3.4086766242980957
    3. 'po' → logprob: -11.033676147460938
    4. 'i' → logprob: -12.033676147460938
    5. ' ' → logprob: -12.283676147460938
    6. ']' → logprob: -13.783676147460938
    7. '[' → logprob: -14.283676147460938
    8. '   ' → logprob: -14.533676147460938
    9. '(' → logprob: -15.158676147460938
    10. '```' → logprob: -15.471176147460938

Token 1976: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020319616422057152
    2. ']=' → logprob: -4.52031946182251
    3. '=' → logprob: -4.89531946182251
    4. ']+=' → logprob: -6.77031946182251
    5. '   ' → logprob: -7.89531946182251
    6. ' =' → logprob: -9.395319938659668
    7. ' ]' → logprob: -9.645319938659668
    8. ')' → logprob: -10.270319938659668
    9. '+=' → logprob: -10.770319938659668
    10. ']+' → logprob: -12.270319938659668

Token 1977: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008921222761273384
    2. ' =' → logprob: -4.758921146392822
    3. '+=' → logprob: -8.13392162322998
    4. ' +=' → logprob: -11.38392162322998
    5. '   ' → logprob: -13.38392162322998
    6. '	' → logprob: -16.508920669555664
    7. '=int' → logprob: -17.383920669555664
    8. ' ' → logprob: -17.633920669555664
    9. '=
' → logprob: -17.758920669555664
    10. '=True' → logprob: -17.758920669555664

Token 1978: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06539255380630493
    2. '1' → logprob: -3.19039249420166
    3. '(' → logprob: -4.31539249420166
    4. '(dp' → logprob: -5.19039249420166
    5. ' dp' → logprob: -6.81539249420166
    6. 'int' → logprob: -6.94039249420166
    7. '(int' → logprob: -7.94039249420166
    8. '0' → logprob: -8.06539249420166
    9. ' ' → logprob: -8.69039249420166
    10. '   ' → logprob: -9.06539249420166

Token 1979: '1' (ID: 16)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12887540459632874
    2. '1' → logprob: -2.628875494003296
    3. '(' → logprob: -3.628875494003296
    4. '(dp' → logprob: -4.128875255584717
    5. 'int' → logprob: -5.503875255584717
    6. '(int' → logprob: -6.503875255584717
    7. '0' → logprob: -8.753875732421875
    8. ' dp' → logprob: -9.128875732421875
    9. '(i' → logprob: -9.878875732421875
    10. '((' → logprob: -10.003875732421875

Token 1980: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1981: ' i' (ID: 575)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.6710121631622314
    2. 'np' → logprob: -1.5460121631622314
    3. 'i' → logprob: -1.7960121631622314
    4. '(i' → logprob: -3.1710121631622314
    5. '(po' → logprob: -3.1710121631622314
    6. '(np' → logprob: -3.7960121631622314
    7. '(' → logprob: -6.671011924743652
    8. ' po' → logprob: -7.546011924743652
    9. '(n' → logprob: -8.546011924743652
    10. ' np' → logprob: -8.546011924743652

Token 1982: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.15065953135490417
    2. '-' → logprob: -2.5256595611572266
    3. ' ==' → logprob: -2.9006595611572266
    4. ' -' → logprob: -5.525659561157227
    5. '<=' → logprob: -7.900659561157227
    6. '<|end|>' → logprob: -8.650659561157227
    7. ']==' → logprob: -10.025659561157227
    8. '==(' → logprob: -10.025659561157227
    9. '==
' → logprob: -10.150659561157227
    10. '>=' → logprob: -10.525659561157227

Token 1983: ' ' (ID: 220)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.004783376585692167
    2. '1' → logprob: -5.3797831535339355
    3. '(po' → logprob: -9.129783630371094
    4. ' po' → logprob: -10.129783630371094
    5. '(' → logprob: -11.379783630371094
    6. ' ' → logprob: -13.004783630371094
    7. '   ' → logprob: -15.004783630371094
    8. ' (' → logprob: -15.004783630371094
    9. '  ' → logprob: -16.254783630371094
    10. '_po' → logprob: -16.754783630371094

Token 1984: '1' (ID: 16)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.00021390743495430797
    2. '1' → logprob: -8.500213623046875
    3. '(po' → logprob: -11.875213623046875
    4. '(' → logprob: -13.250213623046875
    5. ' po' → logprob: -13.375213623046875
    6. ' ' → logprob: -17.625213623046875
    7. '0' → logprob: -18.000213623046875
    8. 'k' → logprob: -18.750213623046875
    9. '_po' → logprob: -18.875213623046875
    10. 'poi' → logprob: -19.125213623046875

Token 1985: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20830638706684113
    2. '-' → logprob: -3.083306312561035
    3. ' +' → logprob: -3.333306312561035
    4. 'and' → logprob: -3.458306312561035
    5. ' -' → logprob: -3.708306312561035
    6. ' and' → logprob: -3.958306312561035
    7. '-po' → logprob: -4.083306312561035
    8. 'else' → logprob: -4.708306312561035
    9. ' else' → logprob: -5.833306312561035
    10. '-k' → logprob: -6.708306312561035

Token 1986: ' po' (ID: 2482)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -2.7729658540920354e-05
    2. '(po' → logprob: -10.750027656555176
    3. ' po' → logprob: -12.125027656555176
    4. '(' → logprob: -15.125027656555176
    5. '0' → logprob: -15.375027656555176
    6. 'k' → logprob: -16.625028610229492
    7. '   ' → logprob: -16.750028610229492
    8. ' ' → logprob: -17.125028610229492
    9. 'pos' → logprob: -18.000028610229492
    10. 'p' → logprob: -18.000028610229492

Token 1987: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2520185112953186
    2. 'else' → logprob: -1.5020184516906738
    3. '	else' → logprob: -10.127018928527832
    4. '<|end|>' → logprob: -10.752018928527832
    5. '   ' → logprob: -12.002018928527832
    6. ' ' → logprob: -12.127018928527832
    7. ' and' → logprob: -12.252018928527832
    8. '    ' → logprob: -12.377018928527832
    9. 'and' → logprob: -13.002018928527832
    10. '  ' → logprob: -13.127018928527832

Token 1988: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004953675088472664
    2. ' ' → logprob: -7.875495433807373
    3. 'dp' → logprob: -9.250494956970215
    4. '   ' → logprob: -12.000494956970215
    5. '1' → logprob: -12.000494956970215
    6. '(' → logprob: -13.125494956970215
    7. ' dp' → logprob: -13.250494956970215
    8. '(dp' → logprob: -14.437994956970215
    9. '  ' → logprob: -14.812994956970215
    10. '	' → logprob: -15.125494956970215

Token 1989: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.566264295950532e-05
    2. 'dp' → logprob: -9.875085830688477
    3. ' ' → logprob: -10.625085830688477
    4. '(' → logprob: -12.500085830688477
    5. '1' → logprob: -12.750085830688477
    6. '(dp' → logprob: -13.750085830688477
    7. 'int' → logprob: -15.000085830688477
    8. ' dp' → logprob: -15.125085830688477
    9. '   ' → logprob: -15.875085830688477
    10. '((' → logprob: -16.312585830688477

Token 1990: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1991: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8699417114257812
    2. '<|end|>' → logprob: -0.8699417114257812
    3. 'for' → logprob: -2.6199417114257812
    4. ')' → logprob: -2.7449417114257812
    5. '...' → logprob: -4.994941711425781
    6. '```' → logprob: -5.619941711425781
    7. 'continue' → logprob: -5.869941711425781
    8. '
' → logprob: -6.619941711425781
    9. 'if' → logprob: -6.619941711425781
    10. '   ' → logprob: -6.744941711425781

Token 1992: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1993: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22931382060050964
    2. '   ' → logprob: -2.104313850402832
    3. '#' → logprob: -3.229313850402832
    4. ' for' → logprob: -3.979313850402832
    5. 'pass' → logprob: -4.979313850402832
    6. '<|end|>' → logprob: -4.979313850402832
    7. 'continue' → logprob: -5.354313850402832
    8. '```' → logprob: -6.104313850402832
    9. '...' → logprob: -6.854313850402832
    10. ')' → logprob: -6.979313850402832

Token 1994: ' ' (ID: 220)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.09807644784450531
    2. '2' → logprob: -3.473076343536377
    3. '1' → logprob: -3.723076343536377
    4. ' j' → logprob: -4.348076343536377
    5. '0' → logprob: -4.598076343536377
    6. 'x' → logprob: -5.723076343536377
    7. 'c' → logprob: -6.598076343536377
    8. 'k' → logprob: -6.598076343536377
    9. 'i' → logprob: -6.723076343536377
    10. 'num' → logprob: -6.848076343536377

Token 1995: '2' (ID: 17)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.17233295738697052
    2. '2' → logprob: -2.047333002090454
    3. '1' → logprob: -4.547332763671875
    4. 'k' → logprob: -5.547332763671875
    5. 'dp' → logprob: -5.672332763671875
    6. '0' → logprob: -6.047332763671875
    7. 'x' → logprob: -6.422332763671875
    8. 'i' → logprob: -6.422332763671875
    9. 'num' → logprob: -6.672332763671875
    10. 'd' → logprob: -7.297332763671875

Token 1996: ' chiffres' (ID: 105565)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1828844547271729
    2. '   ' → logprob: -1.4328844547271729
    3. ' for' → logprob: -1.5578844547271729
    4. 'for' → logprob: -1.8078844547271729
    5. ' dp' → logprob: -2.932884454727173
    6. ' ' → logprob: -4.557884216308594
    7. ' i' → logprob: -5.807884216308594
    8. '#' → logprob: -6.182884216308594
    9. '0' → logprob: -6.307884216308594
    10. ' j' → logprob: -6.807884216308594

Token 1997: ' non' (ID: 2893)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0398639440536499
    2. 'non' → logprob: -3.7898640632629395
    3. '_non' → logprob: -5.1648640632629395
    4. '   ' → logprob: -5.4148640632629395
    5. ' non' → logprob: -6.4148640632629395
    6. '0' → logprob: -6.5398640632629395
    7. '[' → logprob: -6.7898640632629395
    8. ']' → logprob: -7.2898640632629395
    9. '_' → logprob: -8.039863586425781
    10. '       ' → logprob: -8.289863586425781

Token 1998: '-z' (ID: 16826)
  Prédit: '-z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.8203863501548767
    2. '0' → logprob: -0.9453863501548767
    3. '-' → logprob: -1.8203864097595215
    4. '-zero' → logprob: -4.9453864097595215
    5. '_' → logprob: -6.8203864097595215
    6. 'z' → logprob: -8.070385932922363
    7. '_z' → logprob: -8.820385932922363
    8. ' zéro' → logprob: -9.070385932922363
    9. '-Z' → logprob: -9.320385932922363
    10. 'zero' → logprob: -9.820385932922363

Token 1999: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.00017112065688706934
    2. 'éo' → logprob: -9.625170707702637
    3. 'éros' → logprob: -10.000170707702637
    4. 'ero' → logprob: -10.375170707702637
    5. '```' → logprob: -12.250170707702637
    6. 'é' → logprob: -12.375170707702637
    7. '0' → logprob: -12.875170707702637
    8. '#' → logprob: -13.250170707702637
    9. 'ro' → logprob: -13.625170707702637
    10. '_' → logprob: -13.625170707702637

Token 2000: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11776844412088394
    2. ':
' → logprob: -2.7427685260772705
    3. '   ' → logprob: -3.3677685260772705
    4. 'dp' → logprob: -5.242768287658691
    5. '```' → logprob: -6.492768287658691
    6. ']' → logprob: -6.992768287658691
    7. '[' → logprob: -6.992768287658691
    8. '(dp' → logprob: -7.742768287658691
    9. ']:' → logprob: -8.117768287658691
    10. ' =' → logprob: -8.117768287658691

Token 2001: ' rais' (ID: 8690)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01897432841360569
    2. '   ' → logprob: -4.018974304199219
    3. ' dp' → logprob: -7.143974304199219
    4. 'for' → logprob: -11.143974304199219
    5. '	dp' → logprob: -11.393974304199219
    6. '```' → logprob: -11.893974304199219
    7. '(dp' → logprob: -15.018974304199219
    8. '#' → logprob: -15.268974304199219
    9. ' for' → logprob: -15.268974304199219
    10. '_dp' → logprob: -15.393974304199219

Token 2002: 'onnement' (ID: 52552)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2933375835418701
    2. 'for' → logprob: -1.4183375835418701
    3. '       ' → logprob: -6.043337821960449
    4. '#' → logprob: -6.293337821960449
    5. 'i' → logprob: -6.293337821960449
    6. 'e' → logprob: -6.668337821960449
    7. 'es' → logprob: -6.918337821960449
    8. 'dp' → logprob: -7.168337821960449
    9. '```' → logprob: -7.418337821960449
    10. ' for' → logprob: -7.668337821960449

Token 2003: ' analogue' (ID: 152173)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7861256003379822
    2. '   ' → logprob: -0.9111256003379822
    3. ':' → logprob: -2.661125659942627
    4. '=' → logprob: -3.411125659942627
    5. 'for' → logprob: -4.911125659942627
    6. ' =' → logprob: -5.286125659942627
    7. '+=' → logprob: -5.411125659942627
    8. ':
' → logprob: -5.536125659942627
    9. ' +=' → logprob: -5.536125659942627
    10. '#' → logprob: -5.661125659942627

Token 2004: ' mais' (ID: 2899)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1976621448993683
    2. '   ' → logprob: -1.822662115097046
    3. '(dp' → logprob: -4.697662353515625
    4. ' dp' → logprob: -6.197662353515625
    5. '	dp' → logprob: -6.447662353515625
    6. ':' → logprob: -6.447662353515625
    7. '```' → logprob: -6.447662353515625
    8. '=' → logprob: -7.572662353515625
    9. ')' → logprob: -8.197662353515625
    10. '_dp' → logprob: -8.572662353515625

Token 2005: ' commence' (ID: 44755)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6710639595985413
    2. 'dp' → logprob: -1.4210638999938965
    3. ' dp' → logprob: -1.7960638999938965
    4. 'for' → logprob: -3.1710638999938965
    5. ' for' → logprob: -4.5460638999938965
    6. '(
' → logprob: -4.5460638999938965
    7. ' pour' → logprob: -5.6710638999938965
    8. '       ' → logprob: -6.0460638999938965
    9. 'pour' → logprob: -6.0460638999938965
    10. '(dp' → logprob: -6.1710638999938965

Token 2006: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1997481733560562
    2. 'à' → logprob: -2.1997482776641846
    3. '       ' → logprob: -3.3247482776641846
    4. 'par' → logprob: -4.1997480392456055
    5. '.' → logprob: -5.9497480392456055
    6. ' à' → logprob: -6.3247480392456055
    7. '    
' → logprob: -6.4497480392456055
    8. '=' → logprob: -6.4497480392456055
    9. '    ' → logprob: -6.8247480392456055
    10. ' par' → logprob: -6.9497480392456055

Token 2007: ' partir' (ID: 12100)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6671475172042847
    2. 'dp' → logprob: -1.4171475172042847
    3. '1' → logprob: -2.417147636413574
    4. 'i' → logprob: -2.792147636413574
    5. '(
' → logprob: -4.292147636413574
    6. '(' → logprob: -4.292147636413574
    7. 'max' → logprob: -4.542147636413574
    8. 'range' → logprob: -4.667147636413574
    9. 'la' → logprob: -4.792147636413574
    10. ' ' → logprob: -5.167147636413574

Token 2008: ' d' (ID: 272)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2884095311164856
    2. '   ' → logprob: -2.288409471511841
    3. '(
' → logprob: -2.413409471511841
    4. '0' → logprob: -3.288409471511841
    5. '(' → logprob: -4.28840970993042
    6. ' dp' → logprob: -5.78840970993042
    7. '1' → logprob: -6.53840970993042
    8. '       ' → logprob: -6.53840970993042
    9. '(dp' → logprob: -7.03840970993042
    10. 'i' → logprob: -8.163409233093262

Token 2009: '’avoir' (ID: 58091)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13094207644462585
    2. '   ' → logprob: -2.5059421062469482
    3. ' dp' → logprob: -4.005941867828369
    4. '1' → logprob: -4.755941867828369
    5. '0' → logprob: -5.005941867828369
    6. '(dp' → logprob: -6.130941867828369
    7. 'i' → logprob: -6.380941867828369
    8. '(
' → logprob: -7.255941867828369
    9. '       ' → logprob: -7.380941867828369
    10. 'max' → logprob: -7.880941867828369

Token 2010: ' déjà' (ID: 21229)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1262950748205185
    2. '   ' → logprob: -2.6262950897216797
    3. '1' → logprob: -4.00129508972168
    4. ' dp' → logprob: -4.12629508972168
    5. '       ' → logprob: -6.00129508972168
    6. '0' → logprob: -6.25129508972168
    7. '(dp' → logprob: -6.25129508972168
    8. 'i' → logprob: -7.00129508972168
    9. '(
' → logprob: -7.62629508972168
    10. '```' → logprob: -7.75129508972168

Token 2011: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3222142457962036
    2. '1' → logprob: -2.447214126586914
    3. 'de' → logprob: -2.447214126586914
    4. '2' → logprob: -2.572214126586914
    5. '#' → logprob: -4.947214126586914
    6. 'un' → logprob: -5.197214126586914
    7. 'une' → logprob: -5.947214126586914
    8. '   ' → logprob: -5.947214126586914
    9. '0' → logprob: -6.447214126586914
    10. ' dp' → logprob: -6.447214126586914

Token 2012: '1' (ID: 16)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.40013331174850464
    2. '1' → logprob: -1.5251333713531494
    3. '2' → logprob: -2.5251333713531494
    4. '0' → logprob: -4.15013313293457
    5. 'de' → logprob: -5.15013313293457
    6. ' dp' → logprob: -5.27513313293457
    7. ' ' → logprob: -6.77513313293457
    8. '   ' → logprob: -6.90013313293457
    9. '(dp' → logprob: -7.65013313293457
    10. '#' → logprob: -7.77513313293457

Token 2013: ' chiffre' (ID: 107420)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.280624121427536
    2. '][' → logprob: -1.5306241512298584
    3. 'for' → logprob: -4.780623912811279
    4. '   ' → logprob: -4.905623912811279
    5. ' dp' → logprob: -5.405623912811279
    6. '[i' → logprob: -5.655623912811279
    7. ']' → logprob: -6.655623912811279
    8. '
' → logprob: -6.905623912811279
    9. '_dp' → logprob: -7.905623912811279
    10. '0' → logprob: -8.280624389648438

Token 2014: ' non' (ID: 2893)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3745197355747223
    2. '_non' → logprob: -2.3745198249816895
    3. '0' → logprob: -2.7495198249816895
    4. '_' → logprob: -2.9995198249816895
    5. ']' → logprob: -3.4995198249816895
    6. 'non' → logprob: -3.6245198249816895
    7. '   ' → logprob: -3.8745198249816895
    8. '
' → logprob: -4.6245198249816895
    9. '```' → logprob: -5.2495198249816895
    10. '[' → logprob: -5.6245198249816895

Token 2015: '-z' (ID: 16826)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12831051647663116
    2. '-z' → logprob: -2.753310441970825
    3. '-zero' → logprob: -4.003310680389404
    4. 'zero' → logprob: -4.378310680389404
    5. '-' → logprob: -4.878310680389404
    6. '=' → logprob: -5.378310680389404
    7. '   ' → logprob: -5.378310680389404
    8. 'z' → logprob: -5.628310680389404
    9. ' zéro' → logprob: -6.503310680389404
    10. '_zero' → logprob: -6.753310680389404

Token 2016: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -3.6789137084269896e-05
    2. 'éros' → logprob: -10.75003719329834
    3. 'éo' → logprob: -12.50003719329834
    4. 'é' → logprob: -12.75003719329834
    5. 'œ' → logprob: -13.37503719329834
    6. ' ' → logprob: -13.37503719329834
    7. ' zéro' → logprob: -13.37503719329834
    8. '```' → logprob: -14.62503719329834
    9. '�' → logprob: -15.12503719329834
    10. '��' → logprob: -15.25003719329834

Token 2017: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.013298931531608105
    2. ' dp' → logprob: -4.763298988342285
    3. '   ' → logprob: -6.388298988342285
    4. ')' → logprob: -6.763298988342285
    5. '(dp' → logprob: -6.763298988342285
    6. '	dp' → logprob: -8.763298988342285
    7. '+' → logprob: -8.888298988342285
    8. '_dp' → logprob: -9.263298988342285
    9. ']' → logprob: -9.513298988342285
    10. '```' → logprob: -9.763298988342285

Token 2018: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3917393684387207
    2. '   ' → logprob: -1.1417393684387207
    3. ' dp' → logprob: -6.016739368438721
    4. '```' → logprob: -6.141739368438721
    5. '(dp' → logprob: -9.266738891601562
    6. '	dp' → logprob: -9.391738891601562
    7. '       ' → logprob: -10.516738891601562
    8. ')' → logprob: -11.391738891601562
    9. ' ' → logprob: -11.766738891601562
    10. '_dp' → logprob: -11.891738891601562

Token 2019: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.004154260735958815
    2. '   ' → logprob: -5.504154205322266
    3. ' dp' → logprob: -9.754154205322266
    4. '```' → logprob: -11.129154205322266
    5. 'for' → logprob: -13.629154205322266
    6. '	dp' → logprob: -13.754154205322266
    7. '``' → logprob: -15.004154205322266
    8. '(dp' → logprob: -16.004154205322266
    9. '_dp' → logprob: -16.379154205322266
    10. '       ' → logprob: -16.879154205322266

Token 2020: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.688212614681106e-05
    2. '[i' → logprob: -11.500017166137695
    3. '```' → logprob: -12.250017166137695
    4. '1' → logprob: -14.000017166137695
    5. '_' → logprob: -15.000017166137695
    6. '   ' → logprob: -15.625017166137695
    7. '[' → logprob: -16.000017166137695
    8. '\[' → logprob: -16.250017166137695
    9. 'i' → logprob: -16.375017166137695
    10. ' ' → logprob: -16.750017166137695

Token 2021: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. '][' → logprob: -13.87500286102295
    3. '[' → logprob: -14.12500286102295
    4. 'i' → logprob: -14.12500286102295
    5. '```' → logprob: -15.37500286102295
    6. '[I' → logprob: -15.87500286102295
    7. '   ' → logprob: -16.375003814697266
    8. '
' → logprob: -17.125003814697266
    9. ' [' → logprob: -17.625003814697266
    10. ')[' → logprob: -17.875003814697266

Token 2022: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002314303710591048
    2. ']' → logprob: -8.750231742858887
    3. ' ][' → logprob: -10.250231742858887
    4. '   ' → logprob: -10.875231742858887
    5. '[' → logprob: -11.250231742858887
    6. '       ' → logprob: -12.875231742858887
    7. ' ' → logprob: -14.250231742858887
    8. '  ' → logprob: -15.125231742858887
    9. '           ' → logprob: -15.625231742858887
    10. '][:' → logprob: -15.625231742858887

Token 2023: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.995397365652025e-05
    2. '1' → logprob: -9.375089645385742
    3. ' ' → logprob: -13.125089645385742
    4. '0' → logprob: -13.750089645385742
    5. '   ' → logprob: -14.000089645385742
    6. '
' → logprob: -14.125089645385742
    7. '(' → logprob: -15.750089645385742
    8. '3' → logprob: -16.375089645385742
    9. '```' → logprob: -17.375089645385742
    10. '  ' → logprob: -17.687589645385742

Token 2024: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00634206086397171
    2. '=' → logprob: -5.506341934204102
    3. ']=' → logprob: -6.381341934204102
    4. ']+=' → logprob: -7.881341934204102
    5. '   ' → logprob: -9.756341934204102
    6. '+=' → logprob: -9.881341934204102
    7. ')' → logprob: -10.381341934204102
    8. ' =' → logprob: -11.131341934204102
    9. ' ]' → logprob: -11.256341934204102
    10. '+' → logprob: -11.631341934204102

Token 2025: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008748006075620651
    2. ' =' → logprob: -5.3837480545043945
    3. '+=' → logprob: -5.5087480545043945
    4. ' +=' → logprob: -9.633748054504395
    5. '=(' → logprob: -13.758748054504395
    6. '=
' → logprob: -13.883748054504395
    7. '+=(' → logprob: -15.258748054504395
    8. '+' → logprob: -16.008747100830078
    9. '   ' → logprob: -16.633747100830078
    10. '=

' → logprob: -16.883747100830078

Token 2026: ' (
' (ID: 4112)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2326725721359253
    2. '(
' → logprob: -1.6076725721359253
    3. '   ' → logprob: -5.357672691345215
    4. '(dp' → logprob: -7.107672691345215
    5. ' dp' → logprob: -7.357672691345215
    6. '(' → logprob: -7.607672691345215
    7. '       ' → logprob: -7.857672691345215
    8. ' (
' → logprob: -9.607672691345215
    9. ' ' → logprob: -10.982672691345215
    10. '	dp' → logprob: -10.982672691345215

Token 2027: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005435100756585598
    2. '       ' → logprob: -5.380434989929199
    3. ' dp' → logprob: -8.0054349899292
    4. '   ' → logprob: -8.2554349899292
    5. '(dp' → logprob: -8.6304349899292
    6. '(
' → logprob: -10.7554349899292
    7. '     ' → logprob: -12.6304349899292
    8. '(' → logprob: -12.7554349899292
    9. '	dp' → logprob: -12.8804349899292
    10. '      ' → logprob: -12.8804349899292

Token 2028: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -2.141186450899113e-05
    2. '(dp' → logprob: -11.250020980834961
    3. '       ' → logprob: -12.750020980834961
    4. ' dp' → logprob: -12.875020980834961
    5. '   ' → logprob: -13.125020980834961
    6. '(
' → logprob: -15.500020980834961
    7. '
' → logprob: -15.500020980834961
    8. '(' → logprob: -16.00002098083496
    9. '           ' → logprob: -16.00002098083496
    10. '	dp' → logprob: -16.87502098083496

Token 2029: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.057318639010190964
    2. '1' → logprob: -2.932318687438965
    3. '[i' → logprob: -6.057318687438965
    4. 'i' → logprob: -9.557318687438965
    5. '   ' → logprob: -11.557318687438965
    6. '```' → logprob: -12.932318687438965
    7. '(i' → logprob: -13.244818687438965
    8. ' ' → logprob: -13.619818687438965
    9. '[' → logprob: -13.744818687438965
    10. '
' → logprob: -14.557318687438965

Token 2030: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. 'i' → logprob: -15.125000953674316
    3. '   ' → logprob: -15.625000953674316
    4. '[' → logprob: -16.25
    5. '```' → logprob: -16.375
    6. '
' → logprob: -16.75
    7. ' [' → logprob: -18.25
    8. '       ' → logprob: -18.5
    9. '[j' → logprob: -18.875
    10. '[
' → logprob: -19.5

Token 2031: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.438573680294212e-06
    2. '   ' → logprob: -13.000005722045898
    3. ' -' → logprob: -13.375005722045898
    4. '][' → logprob: -14.000005722045898
    5. 'i' → logprob: -15.000005722045898
    6. '[' → logprob: -15.875005722045898
    7. '[i' → logprob: -16.0000057220459
    8. '```' → logprob: -17.1250057220459
    9. '-[' → logprob: -17.7500057220459
    10. '       ' → logprob: -17.8750057220459

Token 2032: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014285735785961151
    2. '-' → logprob: -4.264285564422607
    3. '```' → logprob: -9.764286041259766
    4. '][' → logprob: -10.889286041259766
    5. '   ' → logprob: -11.139286041259766
    6. 'i' → logprob: -11.139286041259766
    7. '[' → logprob: -11.889286041259766
    8. '0' → logprob: -12.764286041259766
    9. ' ' → logprob: -12.889286041259766
    10. 'prev' → logprob: -13.639286041259766

Token 2033: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000768413650803268
    2. '[' → logprob: -7.250768184661865
    3. '   ' → logprob: -10.375768661499023
    4. ' ][' → logprob: -11.500768661499023
    5. '       ' → logprob: -11.875768661499023
    6. ']' → logprob: -12.250768661499023
    7. '           ' → logprob: -13.875768661499023
    8. ')[' → logprob: -14.125768661499023
    9. ' ' → logprob: -14.500768661499023
    10. '    ' → logprob: -14.625768661499023

Token 2034: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029744720086455345
    2. '0' → logprob: -8.125297546386719
    3. '   ' → logprob: -14.500297546386719
    4. ' ' → logprob: -14.750297546386719
    5. '
' → logprob: -15.250297546386719
    6. '2' → logprob: -15.812797546386719
    7. '  ' → logprob: -17.56279754638672
    8. '[' → logprob: -17.62529754638672
    9. '(' → logprob: -17.75029754638672
    10. '     ' → logprob: -18.31279754638672

Token 2035: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.015064085833728313
    2. ' *' → logprob: -4.390064239501953
    3. '*(' → logprob: -6.015064239501953
    4. ')' → logprob: -10.015064239501953
    5. '   ' → logprob: -10.265064239501953
    6. ')*' → logprob: -11.140064239501953
    7. '*
' → logprob: -12.140064239501953
    8. ' ' → logprob: -13.265064239501953
    9. ')*(' → logprob: -13.640064239501953
    10. '**' → logprob: -13.890064239501953

Token 2036: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.011679206974804401
    2. ' *' → logprob: -4.886679172515869
    3. '*(' → logprob: -5.511679172515869
    4. '*
' → logprob: -11.261679649353027
    5. '+' → logprob: -12.636679649353027
    6. '   ' → logprob: -12.886679649353027
    7. '**' → logprob: -13.511679649353027
    8. ')' → logprob: -13.636679649353027
    9. '*[' → logprob: -14.386679649353027
    10. ')*' → logprob: -14.761679649353027

Token 2037: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.07149907946586609
    2. 'max' → logprob: -2.6964991092681885
    3. ' max' → logprob: -7.071498870849609
    4. ' (' → logprob: -7.446498870849609
    5. '(' → logprob: -9.19649887084961
    6. '(min' → logprob: -11.57149887084961
    7. '[max' → logprob: -12.19649887084961
    8. '   ' → logprob: -13.19649887084961
    9. '	max' → logprob: -13.69649887084961
    10. '(m' → logprob: -13.82149887084961

Token 2038: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0029167381580919027
    2. '(max' → logprob: -5.8779168128967285
    3. ' max' → logprob: -9.12791633605957
    4. '   ' → logprob: -14.25291633605957
    5. '[max' → logprob: -14.50291633605957
    6. '       ' → logprob: -14.87791633605957
    7. '	max' → logprob: -15.12791633605957
    8. '     ' → logprob: -15.62791633605957
    9. '(' → logprob: -15.87791633605957
    10. '           ' → logprob: -15.87791633605957

Token 2039: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00011117222311440855
    2. '0' → logprob: -10.00011157989502
    3. '(
' → logprob: -10.00011157989502
    4. '(np' → logprob: -11.00011157989502
    5. ' (' → logprob: -13.00011157989502
    6. '(max' → logprob: -13.87511157989502
    7. '((' → logprob: -15.25011157989502
    8. 'np' → logprob: -16.375110626220703
    9. '   ' → logprob: -16.875110626220703
    10. ' ' → logprob: -17.625110626220703

Token 2040: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.9186317482963204e-05
    2. '(' → logprob: -10.375049591064453
    3. 'np' → logprob: -11.125049591064453
    4. ' ' → logprob: -13.000049591064453
    5. 'max' → logprob: -14.750049591064453
    6. '   ' → logprob: -15.375049591064453
    7. '1' → logprob: -15.875049591064453
    8. '(np' → logprob: -16.500049591064453
    9. '
' → logprob: -17.000049591064453
    10. '  ' → logprob: -17.875049591064453

Token 2041: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08707921952009201
    2. ',np' → logprob: -2.8370792865753174
    3. '(np' → logprob: -3.7120792865753174
    4. ',
' → logprob: -8.587079048156738
    5. '[np' → logprob: -9.337079048156738
    6. '(' → logprob: -9.712079048156738
    7. 'np' → logprob: -11.712079048156738
    8. '=np' → logprob: -11.837079048156738
    9. ',(' → logprob: -12.087079048156738
    10. ' ,' → logprob: -12.087079048156738

Token 2042: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -2.0339031834737398e-05
    2. ' np' → logprob: -10.875020027160645
    3. '(np' → logprob: -13.875020027160645
    4. '   ' → logprob: -15.750020027160645
    5. '[np' → logprob: -16.00002098083496
    6. 'max' → logprob: -16.37502098083496
    7. '0' → logprob: -17.75002098083496
    8. '_np' → logprob: -18.37502098083496
    9. '       ' → logprob: -18.62502098083496
    10. ',np' → logprob: -18.75002098083496

Token 2043: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002622894535306841
    2. ' -' → logprob: -8.250262260437012
    3. '-
' → logprob: -14.250262260437012
    4. ')' → logprob: -16.250263214111328
    5. '   ' → logprob: -17.000263214111328
    6. '()-' → logprob: -17.500263214111328
    7. '-)' → logprob: -18.125263214111328
    8. ')-' → logprob: -18.250263214111328
    9. ' ' → logprob: -18.500263214111328
    10. ' -
' → logprob: -18.875263214111328

Token 2044: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020056030189152807
    2. '-' → logprob: -9.125200271606445
    3. ' ' → logprob: -10.125200271606445
    4. '```' → logprob: -10.875200271606445
    5. '0' → logprob: -11.375200271606445
    6. '   ' → logprob: -11.500200271606445
    7. '2' → logprob: -13.875200271606445
    8. '(' → logprob: -13.875200271606445
    9. '       ' → logprob: -14.000200271606445
    10. ')' → logprob: -14.000200271606445

Token 2045: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009202735964208841
    2. ')+' → logprob: -7.125920295715332
    3. '+' → logprob: -9.250920295715332
    4. ' )' → logprob: -12.000920295715332
    5. '+
' → logprob: -12.250920295715332
    6. '   ' → logprob: -12.875920295715332
    7. '+)' → logprob: -13.000920295715332
    8. ')
' → logprob: -13.875920295715332
    9. '       ' → logprob: -14.000920295715332
    10. ')+(' → logprob: -15.000920295715332

Token 2046: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.252360075712204
    2. ' +' → logprob: -1.5023601055145264
    3. '+
' → logprob: -8.252360343933105
    4. ' +
' → logprob: -8.752360343933105
    5. '<|end|>' → logprob: -12.627360343933105
    6. '   ' → logprob: -12.752360343933105
    7. ')' → logprob: -13.252360343933105
    8. '    ' → logprob: -13.377360343933105
    9. ' +
' → logprob: -13.752360343933105
    10. '```' → logprob: -15.127360343933105

Token 2047: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05003562569618225
    2. '       ' → logprob: -3.0500357151031494
    3. ' dp' → logprob: -6.55003547668457
    4. '(dp' → logprob: -11.42503547668457
    5. '   ' → logprob: -13.67503547668457
    6. '        ' → logprob: -13.80003547668457
    7. '	dp' → logprob: -13.80003547668457
    8. '      ' → logprob: -14.42503547668457
    9. '```' → logprob: -14.42503547668457
    10. '           ' → logprob: -14.42503547668457

Token 2048: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00033939589047804475
    2. '       ' → logprob: -8.00033950805664
    3. ' dp' → logprob: -12.50033950805664
    4. '(dp' → logprob: -16.37533950805664
    5. '   ' → logprob: -16.62533950805664
    6. '      ' → logprob: -17.87533950805664
    7. '	dp' → logprob: -18.25033950805664
    8. '        ' → logprob: -19.87533950805664
    9. '     ' → logprob: -20.37533950805664
    10. '_dp' → logprob: -20.50033950805664

Token 2049: ' Pr' (ID: 2284)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -3.9054008084349334e-05
    2. '       ' → logprob: -10.750039100646973
    3. ' dp' → logprob: -11.000039100646973
    4. '(dp' → logprob: -14.000039100646973
    5. '   ' → logprob: -18.000038146972656
    6. '	dp' → logprob: -18.875038146972656
    7. '           ' → logprob: -18.875038146972656
    8. '      ' → logprob: -19.375038146972656
    9. '        ' → logprob: -19.625038146972656
    10. '_dp' → logprob: -20.375038146972656

Token 2050: 'end' (ID: 419)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0023808805271983147
    2. '       ' → logprob: -6.502380847930908
    3. '(dp' → logprob: -8.252381324768066
    4. ' dp' → logprob: -8.377381324768066
    5. '   ' → logprob: -8.877381324768066
    6. '0' → logprob: -9.002381324768066
    7. '```' → logprob: -10.127381324768066
    8. 'p' → logprob: -10.877381324768066
    9. '(
' → logprob: -11.127381324768066
    10. '``' → logprob: -11.377381324768066

Token 2051: ' tous' (ID: 10688)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0007414919091388583
    2. '       ' → logprob: -7.250741481781006
    3. ' dp' → logprob: -10.500741958618164
    4. '(dp' → logprob: -13.125741958618164
    5. '   ' → logprob: -13.625741958618164
    6. '	dp' → logprob: -15.000741958618164
    7. '(
' → logprob: -15.375741958618164
    8. '           ' → logprob: -16.875741958618164
    9. '      ' → logprob: -17.000741958618164
    10. '
' → logprob: -17.250741958618164

Token 2052: ' les' (ID: 1341)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3506290018558502
    2. '(
' → logprob: -1.7256289720535278
    3. '       ' → logprob: -2.8506290912628174
    4. '(dp' → logprob: -2.9756290912628174
    5. '(' → logprob: -5.225628852844238
    6. ' dp' → logprob: -5.850628852844238
    7. '[
' → logprob: -9.100628852844238
    8. '   ' → logprob: -9.350628852844238
    9. '      ' → logprob: -9.475628852844238
    10. '9' → logprob: -9.975628852844238

Token 2053: ' chiffres' (ID: 105565)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002215796150267124
    2. 'digits' → logprob: -6.62721586227417
    3. 'ch' → logprob: -7.50221586227417
    4. '9' → logprob: -8.877215385437012
    5. '(dp' → logprob: -9.377215385437012
    6. ' dp' → logprob: -9.627215385437012
    7. 'digit' → logprob: -10.877215385437012
    8. '0' → logprob: -11.752215385437012
    9. '(' → logprob: -12.877215385437012
    10. 'dig' → logprob: -13.127215385437012

Token 2054: ' <' (ID: 464)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3750244975090027
    2. '(dp' → logprob: -2.2500245571136475
    3. '```' → logprob: -2.8750245571136475
    4. '[' → logprob: -3.3750245571136475
    5. '<|end|>' → logprob: -3.3750245571136475
    6. '(' → logprob: -3.6250245571136475
    7. '       ' → logprob: -4.000024318695068
    8. '   ' → logprob: -4.875024318695068
    9. 'de' → logprob: -5.250024318695068
    10. 'from' → logprob: -5.625024318695068

Token 2055: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.06402071565389633
    2. 'dp' → logprob: -3.6890206336975098
    3. '9' → logprob: -3.9390206336975098
    4. 'max' → logprob: -5.06402063369751
    5. ' np' → logprob: -5.93902063369751
    6. '1' → logprob: -6.31402063369751
    7. ' ' → logprob: -6.31402063369751
    8. 'bs' → logprob: -6.43902063369751
    9. '0' → logprob: -7.68902063369751
    10. 'n' → logprob: -7.81402063369751

Token 2056: ' pour' (ID: 1930)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5260342359542847
    2. '+' → logprob: -1.0260342359542847
    3. '+
' → logprob: -4.276034355163574
    4. ' +
' → logprob: -4.526034355163574
    5. '<|end|>' → logprob: -4.526034355163574
    6. '       ' → logprob: -4.776034355163574
    7. '   ' → logprob: -5.776034355163574
    8. ')' → logprob: -6.401034355163574
    9. ')+' → logprob: -7.776034355163574
    10. '*' → logprob: -8.276034355163574

Token 2057: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007384066935628653
    2. '       ' → logprob: -5.757384300231934
    3. ' dp' → logprob: -5.757384300231934
    4. '   ' → logprob: -7.382384300231934
    5. '(dp' → logprob: -8.757384300231934
    6. '           ' → logprob: -9.882384300231934
    7. '1' → logprob: -10.257384300231934
    8. '#' → logprob: -10.382384300231934
    9. '  ' → logprob: -10.632384300231934
    10. ' ' → logprob: -10.882384300231934

Token 2058: ' deuxième' (ID: 51664)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01051760371774435
    2. '#' → logprob: -6.135517597198486
    3. ' dp' → logprob: -6.385517597198486
    4. '2' → logprob: -6.510517597198486
    5. '1' → logprob: -6.760517597198486
    6. 'range' → logprob: -7.260517597198486
    7. '   ' → logprob: -7.510517597198486
    8. '0' → logprob: -7.635517597198486
    9. 'i' → logprob: -7.635517597198486
    10. 'def' → logprob: -8.260518074035645

Token 2059: ' non' (ID: 2893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15139037370681763
    2. '1' → logprob: -2.151390314102173
    3. 'digit' → logprob: -5.026390552520752
    4. 'dp' → logprob: -5.276390552520752
    5. 'token' → logprob: -5.401390552520752
    6. '+' → logprob: -6.901390552520752
    7. '0' → logprob: -7.151390552520752
    8. ']' → logprob: -7.151390552520752
    9. '   ' → logprob: -7.151390552520752
    10. '```' → logprob: -7.276390552520752

Token 2060: '-zero' (ID: 79097)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.058700449764728546
    2. '-z' → logprob: -3.3087005615234375
    3. '-zero' → logprob: -4.3087005615234375
    4. '-' → logprob: -5.5587005615234375
    5. 'zero' → logprob: -6.1837005615234375
    6. ' zéro' → logprob: -7.8087005615234375
    7. '_zero' → logprob: -8.183700561523438
    8. 'z' → logprob: -8.808700561523438
    9. '_z' → logprob: -9.683700561523438
    10. '   ' → logprob: -9.933700561523438

Token 2061: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7263746857643127
    2. ')' → logprob: -1.101374626159668
    3. '+' → logprob: -1.726374626159668
    4. ')+' → logprob: -5.601374626159668
    5. '   ' → logprob: -6.976374626159668
    6. ' +
' → logprob: -7.476374626159668
    7. '+
' → logprob: -7.851374626159668
    8. '```' → logprob: -9.226374626159668
    9. '*' → logprob: -9.601374626159668
    10. ' )' → logprob: -9.726374626159668

Token 2062: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003164414083585143
    2. '       ' → logprob: -6.253164291381836
    3. ' dp' → logprob: -6.753164291381836
    4. '(dp' → logprob: -9.753164291381836
    5. '(
' → logprob: -12.253164291381836
    6. '```' → logprob: -12.503164291381836
    7. '``' → logprob: -14.628164291381836
    8. '	dp' → logprob: -15.378164291381836
    9. '   ' → logprob: -15.878164291381836
    10. '+' → logprob: -16.253164291381836

Token 2063: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -1.0445127372804563e-05
    2. '       ' → logprob: -11.75001049041748
    3. ' dp' → logprob: -13.00001049041748
    4. '   ' → logprob: -15.62501049041748
    5. '           ' → logprob: -17.250009536743164
    6. '(dp' → logprob: -17.375009536743164
    7. '	dp' → logprob: -18.750009536743164
    8. '      ' → logprob: -18.875009536743164
    9. '        ' → logprob: -19.625009536743164
    10. '     ' → logprob: -20.500009536743164

Token 2064: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '1' → logprob: -18.0
    3. '[' → logprob: -19.75
    4. 'o' → logprob: -19.875
    5. '０' → logprob: -20.125
    6. '۰' → logprob: -20.125
    7. ' ' → logprob: -20.375
    8. '[i' → logprob: -21.125
    9. 'O' → logprob: -21.25
    10. '#' → logprob: -21.375

Token 2065: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -14.625000953674316
    3. 'i' → logprob: -15.000000953674316
    4. '[' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.125001907348633
    6. '``' → logprob: -17.875001907348633
    7. '
' → logprob: -18.000001907348633
    8. '[I' → logprob: -18.250001907348633
    9. '[j' → logprob: -18.625001907348633
    10. '[user' → logprob: -18.750001907348633

Token 2066: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22584623098373413
    2. '[i' → logprob: -1.600846290588379
    3. 'i' → logprob: -9.100846290588379
    4. '   ' → logprob: -9.100846290588379
    5. '[' → logprob: -9.475846290588379
    6. ' -' → logprob: -10.225846290588379
    7. '```' → logprob: -10.225846290588379
    8. '][' → logprob: -10.600846290588379
    9. '
' → logprob: -11.975846290588379
    10. '-i' → logprob: -12.100846290588379

Token 2067: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9315425157546997
    2. 'i' → logprob: -0.9315425157546997
    3. '1' → logprob: -1.5565425157546997
    4. '```' → logprob: -6.80654239654541
    5. '[i' → logprob: -10.30654239654541
    6. '   ' → logprob: -10.43154239654541
    7. ' i' → logprob: -11.55654239654541
    8. '
' → logprob: -11.55654239654541
    9. '``' → logprob: -11.93154239654541
    10. 'prev' → logprob: -12.30654239654541

Token 2068: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.014027046039700508
    2. '[i' → logprob: -4.389027118682861
    3. '[' → logprob: -7.514027118682861
    4. ' ][' → logprob: -8.014026641845703
    5. '   ' → logprob: -8.139026641845703
    6. '       ' → logprob: -8.389026641845703
    7. '           ' → logprob: -9.889026641845703
    8. 'i' → logprob: -10.764026641845703
    9. ']' → logprob: -11.264026641845703
    10. ' ' → logprob: -12.264026641845703

Token 2069: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20141538977622986
    2. '1' → logprob: -1.7014154195785522
    3. ' ' → logprob: -14.076415061950684
    4. '   ' → logprob: -14.451415061950684
    5. '
' → logprob: -15.076415061950684
    6. '0' → logprob: -15.326415061950684
    7. '[' → logprob: -15.701415061950684
    8. '(' → logprob: -17.576416015625
    9. '  ' → logprob: -17.701416015625
    10. '	' → logprob: -18.451416015625

Token 2070: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.016577253118157387
    2. ' *' → logprob: -4.141577243804932
    3. ')' → logprob: -7.891577243804932
    4. ')*' → logprob: -9.51657772064209
    5. ']' → logprob: -10.14157772064209
    6. '   ' → logprob: -10.64157772064209
    7. ']*' → logprob: -11.01657772064209
    8. '[' → logprob: -12.14157772064209
    9. '*[' → logprob: -12.89157772064209
    10. '+' → logprob: -12.89157772064209

Token 2071: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0013282144209370017
    2. ' *' → logprob: -6.626327991485596
    3. '*
' → logprob: -14.001328468322754
    4. '+' → logprob: -14.876328468322754
    5. ')*' → logprob: -14.876328468322754
    6. '**' → logprob: -15.126328468322754
    7. '*(' → logprob: -16.126327514648438
    8. '*[' → logprob: -16.126327514648438
    9. ')' → logprob: -16.501327514648438
    10. '```' → logprob: -16.626327514648438

Token 2072: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0006273718317970634
    2. '10' → logprob: -7.375627517700195
    3. '8' → logprob: -14.250627517700195
    4. ' ' → logprob: -16.500627517700195
    5. '(' → logprob: -18.125627517700195
    6. '
' → logprob: -18.500627517700195
    7. '0' → logprob: -18.500627517700195
    8. '９' → logprob: -18.500627517700195
    9. '19' → logprob: -18.625627517700195
    10. '09' → logprob: -18.625627517700195

Token 2073: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.822646693966817e-06
    2. '10' → logprob: -12.000007629394531
    3. '8' → logprob: -13.375007629394531
    4. ' ' → logprob: -17.62500762939453
    5. '
' → logprob: -19.06250762939453
    6. '９' → logprob: -19.18750762939453
    7. '09' → logprob: -19.37500762939453
    8. '0' → logprob: -19.43750762939453
    9. '(' → logprob: -19.43750762939453
    10. '```' → logprob: -19.56250762939453

Token 2074: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011374947614967823
    2. ' +' → logprob: -4.5113749504089355
    3. '+
' → logprob: -8.261374473571777
    4. ')' → logprob: -10.261374473571777
    5. '   ' → logprob: -11.011374473571777
    6. ' +
' → logprob: -11.636374473571777
    7. ')+' → logprob: -12.386374473571777
    8. '       ' → logprob: -13.136374473571777
    9. '+)' → logprob: -14.511374473571777
    10. '<|end|>' → logprob: -14.761374473571777

Token 2075: '              ' (ID: 4442)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0027089386712759733
    2. '       ' → logprob: -6.502708911895752
    3. ' dp' → logprob: -6.752708911895752
    4. '0' → logprob: -10.87770938873291
    5. '(dp' → logprob: -11.00270938873291
    6. '   ' → logprob: -14.00270938873291
    7. '	dp' → logprob: -14.25270938873291
    8. '(' → logprob: -14.37770938873291
    9. '+' → logprob: -15.62770938873291
    10. '      ' → logprob: -15.87770938873291

Token 2076: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10121016949415207
    2. '       ' → logprob: -2.351210117340088
    3. ' dp' → logprob: -6.976210117340088
    4. '(dp' → logprob: -10.226210594177246
    5. '   ' → logprob: -10.976210594177246
    6. '+' → logprob: -12.476210594177246
    7. '0' → logprob: -12.851210594177246
    8. '           ' → logprob: -12.976210594177246
    9. '	dp' → logprob: -13.351210594177246
    10. '(' → logprob: -13.476210594177246

Token 2077: ' Aj' (ID: 28294)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0019126958213746548
    2. '       ' → logprob: -6.376912593841553
    3. ' dp' → logprob: -9.001913070678711
    4. '(dp' → logprob: -9.876913070678711
    5. '   ' → logprob: -11.251913070678711
    6. '(' → logprob: -11.501913070678711
    7. '0' → logprob: -11.626913070678711
    8. '	dp' → logprob: -14.126913070678711
    9. '(
' → logprob: -14.251913070678711
    10. '        ' → logprob: -14.626913070678711

Token 2078: 'oute' (ID: 3509)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009546053595840931
    2. '(dp' → logprob: -5.634546279907227
    3. '0' → logprob: -6.259546279907227
    4. '1' → logprob: -7.134546279907227
    5. '   ' → logprob: -7.259546279907227
    6. '```' → logprob: -7.384546279907227
    7. ' dp' → logprob: -8.009546279907227
    8. '#' → logprob: -8.384546279907227
    9. '[' → logprob: -8.509546279907227
    10. '[
' → logprob: -8.634546279907227

Token 2079: ' n' (ID: 297)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0310855433344841
    2. '(dp' → logprob: -3.90608549118042
    3. ' dp' → logprob: -5.53108549118042
    4. '1' → logprob: -6.03108549118042
    5. '0' → logprob: -6.90608549118042
    6. '(' → logprob: -6.90608549118042
    7. '   ' → logprob: -7.03108549118042
    8. '(
' → logprob: -7.28108549118042
    9. '       ' → logprob: -8.031085968017578
    10. ' (' → logprob: -9.031085968017578

Token 2080: ''importe' (ID: 103032)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03981044888496399
    2. '0' → logprob: -3.9148104190826416
    3. '[' → logprob: -4.664810657501221
    4. '   ' → logprob: -5.414810657501221
    5. 'dp' → logprob: -5.664810657501221
    6. '```' → logprob: -7.664810657501221
    7. 'um' → logprob: -8.164810180664062
    8. '1' → logprob: -9.164810180664062
    9. 'on' → logprob: -9.289810180664062
    10. 'ow' → logprob: -9.414810180664062

Token 2081: ' quel' (ID: 10613)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.4485132098197937
    2. 'un' → logprob: -1.9485132694244385
    3. '       ' → logprob: -2.1985132694244385
    4. '```' → logprob: -3.5735132694244385
    5. '   ' → logprob: -3.6985132694244385
    6. '1' → logprob: -3.6985132694244385
    7. '0' → logprob: -5.198513031005859
    8. '           ' → logprob: -5.448513031005859
    9. ' *' → logprob: -5.823513031005859
    10. '*' → logprob: -5.823513031005859

Token 2082: ' chiffre' (ID: 107420)
  Prédit: ' chiffre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chiffre' → logprob: -0.36345174908638
    2. 'ch' → logprob: -1.2384517192840576
    3. 'digit' → logprob: -4.613451957702637
    4. ' digit' → logprob: -6.363451957702637
    5. '   ' → logprob: -7.238451957702637
    6. '1' → logprob: -7.238451957702637
    7. '0' → logprob: -7.863451957702637
    8. '```' → logprob: -7.988451957702637
    9. '9' → logprob: -8.113451957702637
    10. ' ch' → logprob: -8.363451957702637

Token 2083: ' non' (ID: 2893)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2162657529115677
    2. '<|end|>' → logprob: -2.3412656784057617
    3. '       ' → logprob: -3.4662656784057617
    4. '0' → logprob: -3.9662656784057617
    5. '   ' → logprob: -4.341265678405762
    6. '[i' → logprob: -4.841265678405762
    7. ')' → logprob: -5.216265678405762
    8. '+' → logprob: -5.591265678405762
    9. '(' → logprob: -5.841265678405762
    10. 'for' → logprob: -6.341265678405762

Token 2084: '-z' (ID: 16826)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6985724568367004
    2. '-zero' → logprob: -0.9485724568367004
    3. '-z' → logprob: -2.1985723972320557
    4. '0' → logprob: -5.573572635650635
    5. '-Z' → logprob: -8.198572158813477
    6. ' -' → logprob: -9.073572158813477
    7. '   ' → logprob: -9.323572158813477
    8. '-ze' → logprob: -9.573572158813477
    9. '```' → logprob: -9.823572158813477
    10. '-з' → logprob: -11.698572158813477

Token 2085: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.0010167333530262113
    2. 'ero' → logprob: -8.126016616821289
    3. '0' → logprob: -8.501016616821289
    4. '_' → logprob: -9.001016616821289
    5. 'é' → logprob: -9.626016616821289
    6. 'éros' → logprob: -9.876016616821289
    7. '‌' → logprob: -10.126016616821289
    8. '```' → logprob: -10.126016616821289
    9. '=' → logprob: -10.376016616821289
    10. 'éo' → logprob: -10.876016616821289

Token 2086: ' à' (ID: 1221)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1906953752040863
    2. ' +' → logprob: -1.9406954050064087
    3. '+
' → logprob: -4.315695285797119
    4. '   ' → logprob: -5.190695285797119
    5. '<|end|>' → logprob: -5.440695285797119
    6. ')' → logprob: -5.565695285797119
    7. ' +
' → logprob: -6.315695285797119
    8. '```' → logprob: -8.065695762634277
    9. ')+' → logprob: -8.315695762634277
    10. '       ' → logprob: -8.690695762634277

Token 2087: ' une' (ID: 2463)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014288206584751606
    2. ' dp' → logprob: -4.764288425445557
    3. '1' → logprob: -6.014288425445557
    4. '(dp' → logprob: -6.764288425445557
    5. '9' → logprob: -7.139288425445557
    6. 'i' → logprob: -7.764288425445557
    7. '   ' → logprob: -7.889288425445557
    8. ' ' → logprob: -9.389287948608398
    9. '#' → logprob: -9.764287948608398
    10. '       ' → logprob: -10.264287948608398

Token 2088: ' sé' (ID: 7462)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1259510517120361
    2. 'sequence' → logprob: -1.1259510517120361
    3. ' sequence' → logprob: -1.3759510517120361
    4. ' dp' → logprob: -2.875951051712036
    5. ' sé' → logprob: -4.375950813293457
    6. 'sé' → logprob: -4.750950813293457
    7. '0' → logprob: -5.250950813293457
    8. ')' → logprob: -5.750950813293457
    9. '```' → logprob: -6.250950813293457
    10. 'seq' → logprob: -6.250950813293457

Token 2089: 'quence' (ID: 6975)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9510302543640137
    2. '   ' → logprob: -1.0760302543640137
    3. '0' → logprob: -1.9510302543640137
    4. '[i' → logprob: -2.9510302543640137
    5. '[' → logprob: -3.4510302543640137
    6. ' ' → logprob: -4.576030254364014
    7. '     ' → logprob: -5.201030254364014
    8. '        ' → logprob: -5.701030254364014
    9. '           ' → logprob: -5.826030254364014
    10. '-' → logprob: -5.826030254364014

Token 2090: ' déjà' (ID: 21229)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011948640458285809
    2. '[' → logprob: -4.761948585510254
    3. '   ' → logprob: -6.136948585510254
    4. '0' → logprob: -7.011948585510254
    5. 'dp' → logprob: -9.511948585510254
    6. '       ' → logprob: -9.636948585510254
    7. '```' → logprob: -9.636948585510254
    8. '1' → logprob: -10.386948585510254
    9. '[j' → logprob: -12.011948585510254
    10. 'i' → logprob: -12.636948585510254

Token 2091: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.30021798610687256
    2. '1' → logprob: -1.9252179861068726
    3. '[' → logprob: -3.300218105316162
    4. '2' → logprob: -3.425218105316162
    5. '```' → logprob: -4.300218105316162
    6. 'dé' → logprob: -5.050218105316162
    7. '   ' → logprob: -5.175218105316162
    8. ' plus' → logprob: -5.550218105316162
    9. 'moins' → logprob: -5.550218105316162
    10. 'avec' → logprob: -5.800218105316162

Token 2092: ' petite' (ID: 28119)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.909737229347229
    2. ' smaller' → logprob: -1.784737229347229
    3. '[' → logprob: -2.0347371101379395
    4. '0' → logprob: -2.1597371101379395
    5. '       ' → logprob: -2.7847371101379395
    6. 'small' → logprob: -2.9097371101379395
    7. '```' → logprob: -4.5347371101379395
    8. '_small' → logprob: -4.7847371101379395
    9. '_sm' → logprob: -4.7847371101379395
    10. '   ' → logprob: -5.1597371101379395

Token 2093: ' avec' (ID: 3937)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3139672875404358
    2. '[i' → logprob: -2.688967227935791
    3. '   ' → logprob: -2.813967227935791
    4. '+
' → logprob: -3.063967227935791
    5. ' +' → logprob: -3.313967227935791
    6. '       ' → logprob: -3.563967227935791
    7. '[' → logprob: -3.938967227935791
    8. '[
' → logprob: -5.563967227935791
    9. '+[' → logprob: -6.063967227935791
    10. '```' → logprob: -6.438967227935791

Token 2094: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028410006780177355
    2. '2' → logprob: -8.500284194946289
    3. ' ' → logprob: -9.625284194946289
    4. 'dp' → logprob: -11.625284194946289
    5. '```' → logprob: -12.625284194946289
    6. '   ' → logprob: -14.250284194946289
    7. '(' → logprob: -15.375284194946289
    8. '0' → logprob: -15.500284194946289
    9. '[' → logprob: -15.812784194946289
    10. 'i' → logprob: -15.875284194946289

Token 2095: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005239616730250418
    2. '2' → logprob: -7.750524044036865
    3. 'dp' → logprob: -9.625523567199707
    4. '0' → logprob: -11.500523567199707
    5. ' ' → logprob: -11.750523567199707
    6. '```' → logprob: -12.250523567199707
    7. '9' → logprob: -13.938023567199707
    8. '   ' → logprob: -14.250523567199707
    9. '(dp' → logprob: -15.250523567199707
    10. ' dp' → logprob: -15.313023567199707

Token 2096: ' chiffre' (ID: 107420)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5291258692741394
    2. '[' → logprob: -1.2791259288787842
    3. '```' → logprob: -2.154125928878784
    4. 'dp' → logprob: -5.404125690460205
    5. '   ' → logprob: -5.654125690460205
    6. '][' → logprob: -5.779125690460205
    7. '[j' → logprob: -6.029125690460205
    8. '``' → logprob: -7.279125690460205
    9. '1' → logprob: -7.529125690460205
    10. '0' → logprob: -8.154126167297363

Token 2097: ' non' (ID: 2893)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06931643187999725
    2. '[' → logprob: -2.9443163871765137
    3. '   ' → logprob: -5.194316387176514
    4. '0' → logprob: -5.694316387176514
    5. '[-' → logprob: -5.944316387176514
    6. '-[' → logprob: -6.694316387176514
    7. '[i' → logprob: -7.444316387176514
    8. '```' → logprob: -7.819316387176514
    9. 'non' → logprob: -9.194316864013672
    10. '       ' → logprob: -9.319316864013672

Token 2098: '-z' (ID: 16826)
  Prédit: '-z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.4344150424003601
    2. '0' → logprob: -1.3094151020050049
    3. 'z' → logprob: -3.184415102005005
    4. '_z' → logprob: -3.934415102005005
    5. '-zero' → logprob: -4.434414863586426
    6. 'zero' → logprob: -5.559414863586426
    7. ' zéro' → logprob: -6.059414863586426
    8. '_zero' → logprob: -6.434414863586426
    9. '-' → logprob: -7.559414863586426
    10. '   ' → logprob: -7.809414863586426

Token 2099: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.004516396671533585
    2. '0' → logprob: -6.1295166015625
    3. '_' → logprob: -8.1295166015625
    4. ' zéro' → logprob: -8.3795166015625
    5. 'ero' → logprob: -8.5045166015625
    6. 'ro' → logprob: -8.7545166015625
    7. 'éros' → logprob: -8.7545166015625
    8. '```' → logprob: -9.0045166015625
    9. 'é' → logprob: -9.3795166015625
    10. 'œ' → logprob: -9.5045166015625

Token 2100: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05226945877075195
    2. ' +' → logprob: -3.177269458770752
    3. '   ' → logprob: -4.927269458770752
    4. '+
' → logprob: -6.427269458770752
    5. 'dp' → logprob: -8.802268981933594
    6. '       ' → logprob: -8.927268981933594
    7. ' +
' → logprob: -9.677268981933594
    8. ')' → logprob: -11.927268981933594
    9. ')+' → logprob: -13.052268981933594
    10. ' ' → logprob: -13.177268981933594

Token 2101: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.26630687713623047
    2. '       ' → logprob: -1.5163068771362305
    3. ' dp' → logprob: -4.5163068771362305
    4. '```' → logprob: -6.3913068771362305
    5. '+' → logprob: -6.8913068771362305
    6. ' +' → logprob: -8.01630687713623
    7. '   ' → logprob: -9.01630687713623
    8. '``' → logprob: -9.76630687713623
    9. '+
' → logprob: -10.14130687713623
    10. '(dp' → logprob: -10.14130687713623

Token 2102: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0004481885116547346
    2. '       ' → logprob: -7.750448226928711
    3. ' dp' → logprob: -11.000448226928711
    4. '   ' → logprob: -14.250448226928711
    5. '(dp' → logprob: -16.37544822692871
    6. '	dp' → logprob: -16.87544822692871
    7. '0' → logprob: -17.75044822692871
    8. '
' → logprob: -18.50044822692871
    9. '      ' → logprob: -18.75044822692871
    10. '           ' → logprob: -18.75044822692871

Token 2103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006688326830044389
    2. '[' → logprob: -8.2506685256958
    3. '[i' → logprob: -8.2506685256958
    4. '1' → logprob: -9.6256685256958
    5. '_' → logprob: -10.1256685256958
    6. '```' → logprob: -11.0006685256958
    7. '-' → logprob: -12.0006685256958
    8. '   ' → logprob: -12.3756685256958
    9. ' ' → logprob: -12.8756685256958
    10. '``' → logprob: -13.5006685256958

Token 2104: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.160971628967673e-05
    2. '   ' → logprob: -9.625082015991211
    3. 'i' → logprob: -11.625082015991211
    4. '[' → logprob: -12.750082015991211
    5. '```' → logprob: -13.125082015991211
    6. ' [' → logprob: -14.500082015991211
    7. '  ' → logprob: -14.875082015991211
    8. ' ' → logprob: -16.12508201599121
    9. '       ' → logprob: -16.12508201599121
    10. '][' → logprob: -16.25008201599121

Token 2105: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2471589798224159e-05
    2. '   ' → logprob: -12.500012397766113
    3. '[i' → logprob: -12.625012397766113
    4. '[' → logprob: -13.125012397766113
    5. '][' → logprob: -13.125012397766113
    6. ' -' → logprob: -14.250012397766113
    7. '```' → logprob: -15.125012397766113
    8. '[-' → logprob: -15.500012397766113
    9. 'i' → logprob: -16.37501335144043
    10. '       ' → logprob: -17.12501335144043

Token 2106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06585317105054855
    2. '-' → logprob: -3.5658531188964844
    3. 'i' → logprob: -3.9408531188964844
    4. '[' → logprob: -4.190853118896484
    5. '[i' → logprob: -7.690853118896484
    6. '   ' → logprob: -8.940853118896484
    7. '```' → logprob: -8.940853118896484
    8. '][' → logprob: -9.565853118896484
    9. 'for' → logprob: -10.440853118896484
    10. '#' → logprob: -11.065853118896484

Token 2107: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00010366239439463243
    2. '   ' → logprob: -10.375103950500488
    3. ' ][' → logprob: -10.500103950500488
    4. '       ' → logprob: -11.125103950500488
    5. '[' → logprob: -11.250103950500488
    6. ']' → logprob: -12.125103950500488
    7. '	' → logprob: -12.250103950500488
    8. '           ' → logprob: -12.500103950500488
    9. '[i' → logprob: -14.125103950500488
    10. '  ' → logprob: -15.000103950500488

Token 2108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2113979209971149e-05
    2. '[' → logprob: -11.500012397766113
    3. ' ' → logprob: -13.625012397766113
    4. '0' → logprob: -15.250012397766113
    5. '1' → logprob: -15.250012397766113
    6. '][' → logprob: -16.250011444091797
    7. '   ' → logprob: -16.250011444091797
    8. '
' → logprob: -17.750011444091797
    9. '  ' → logprob: -18.375011444091797
    10. '```' → logprob: -18.375011444091797

Token 2109: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009420731803402305
    2. ']+' → logprob: -7.500942230224609
    3. '])' → logprob: -8.75094223022461
    4. ')' → logprob: -8.87594223022461
    5. '+' → logprob: -9.62594223022461
    6. ' ]' → logprob: -11.12594223022461
    7. '   ' → logprob: -12.25094223022461
    8. '])+' → logprob: -13.62594223022461
    9. ']
' → logprob: -14.00094223022461
    10. ' +' → logprob: -14.62594223022461

Token 2110: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00868749525398016
    2. ' +' → logprob: -4.758687496185303
    3. '+
' → logprob: -10.008687019348145
    4. ')' → logprob: -11.508687019348145
    5. '   ' → logprob: -11.758687019348145
    6. '+=' → logprob: -12.258687019348145
    7. ')+' → logprob: -13.008687019348145
    8. ' +
' → logprob: -14.133687019348145
    9. '<|end|>' → logprob: -14.383687019348145
    10. '#' → logprob: -14.883687019348145

Token 2111: '                  ' (ID: 8854)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.2697216868400574
    2. 'dp' → logprob: -1.7697217464447021
    3. '       ' → logprob: -3.269721746444702
    4. '(
' → logprob: -4.644721508026123
    5. ' (' → logprob: -5.019721508026123
    6. '(' → logprob: -5.144721508026123
    7. ' dp' → logprob: -5.644721508026123
    8. '(d' → logprob: -7.269721508026123
    9. '   ' → logprob: -7.769721508026123
    10. 'max' → logprob: -7.894721508026123

Token 2112: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3553510308265686
    2. '(dp' → logprob: -1.8553509712219238
    3. '       ' → logprob: -2.105350971221924
    4. '(' → logprob: -4.730350971221924
    5. ' dp' → logprob: -5.355350971221924
    6. ' (' → logprob: -5.855350971221924
    7. '0' → logprob: -6.605350971221924
    8. '(
' → logprob: -6.855350971221924
    9. '   ' → logprob: -7.230350971221924
    10. '+' → logprob: -7.730350971221924

Token 2113: ' Aj' (ID: 28294)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.006814000196754932
    2. '(d' → logprob: -5.381814002990723
    3. 'dp' → logprob: -6.631814002990723
    4. ' (' → logprob: -7.631814002990723
    5. '(' → logprob: -8.256814002990723
    6. '(
' → logprob: -9.756814002990723
    7. '(max' → logprob: -11.256814002990723
    8. '   ' → logprob: -11.506814002990723
    9. '0' → logprob: -11.881814002990723
    10. '(ds' → logprob: -12.131814002990723

Token 2114: 'oute' (ID: 3509)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.036460518836975
    2. 'dp' → logprob: -1.286460518836975
    3. '       ' → logprob: -1.411460518836975
    4. '   ' → logprob: -2.2864603996276855
    5. '+' → logprob: -5.1614603996276855
    6. '(
' → logprob: -5.4114603996276855
    7. '           ' → logprob: -6.2864603996276855
    8. '```' → logprob: -6.4114603996276855
    9. '1' → logprob: -6.6614603996276855
    10. '=' → logprob: -6.7864603996276855

Token 2115: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3525870144367218
    2. 'dp' → logprob: -1.7275869846343994
    3. '(dp' → logprob: -2.3525869846343994
    4. '(' → logprob: -4.4775872230529785
    5. ' (' → logprob: -4.7275872230529785
    6. ' ' → logprob: -7.2275872230529785
    7. '1' → logprob: -7.3525872230529785
    8. '(
' → logprob: -7.3525872230529785
    9. 'bs' → logprob: -7.4775872230529785
    10. ' dp' → logprob: -7.8525872230529785

Token 2116: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015616427408531308
    2. 'zero' → logprob: -7.751561641693115
    3. 'dp' → logprob: -7.876561641693115
    4. ' ' → logprob: -8.126562118530273
    5. ' zéro' → logprob: -9.001562118530273
    6. ' zero' → logprob: -9.376562118530273
    7. 'z' → logprob: -9.876562118530273
    8. ' dp' → logprob: -10.126562118530273
    9. '(dp' → logprob: -10.376562118530273
    10. '[' → logprob: -10.501562118530273

Token 2117: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7022445201873779
    2. '<|end|>' → logprob: -0.9522445201873779
    3. ')' → logprob: -2.577244520187378
    4. '+' → logprob: -3.827244520187378
    5. ' +' → logprob: -4.702244758605957
    6. '<|end|>' → logprob: -4.952244758605957
    7. '       ' → logprob: -6.327244758605957
    8. ' )' → logprob: -7.077244758605957
    9. ')+' → logprob: -7.577244758605957
    10. '#' → logprob: -7.952244758605957

Token 2118: ' une' (ID: 2463)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001854984788224101
    2. '(dp' → logprob: -6.87685489654541
    3. ' dp' → logprob: -7.12685489654541
    4. '	dp' → logprob: -11.75185489654541
    5. '   ' → logprob: -12.50185489654541
    6. '_dp' → logprob: -13.50185489654541
    7. '       ' → logprob: -13.50185489654541
    8. '```' → logprob: -14.00185489654541
    9. '#' → logprob: -14.37685489654541
    10. '[' → logprob: -14.50185489654541

Token 2119: ' sé' (ID: 7462)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.4891762137413025
    2. 'sé' → logprob: -0.9891762137413025
    3. 's' → logprob: -4.614176273345947
    4. 'suite' → logprob: -6.489176273345947
    5. 'seq' → logprob: -6.739176273345947
    6. '[' → logprob: -7.114176273345947
    7. 'sequ' → logprob: -7.739176273345947
    8. ' sequence' → logprob: -8.364175796508789
    9. ' sé' → logprob: -8.489175796508789
    10. '_sequence' → logprob: -8.614175796508789

Token 2120: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0013254800578579307
    2. '[i' → logprob: -7.751325607299805
    3. 'quences' → logprob: -8.626325607299805
    4. 'QUENCE' → logprob: -8.876325607299805
    5. '[' → logprob: -9.001325607299805
    6. 'q' → logprob: -9.501325607299805
    7. '_sequence' → logprob: -9.501325607299805
    8. 'qu' → logprob: -10.126325607299805
    9. '_' → logprob: -10.501325607299805
    10. 'que' → logprob: -10.501325607299805

Token 2121: ' déjà' (ID: 21229)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06010480597615242
    2. '       ' → logprob: -3.4351048469543457
    3. '   ' → logprob: -4.935104846954346
    4. '[' → logprob: -5.060104846954346
    5. 'dp' → logprob: -5.185104846954346
    6. '```' → logprob: -5.310104846954346
    7. ')' → logprob: -7.435104846954346
    8. '<|end|>' → logprob: -8.185104370117188
    9. '[
' → logprob: -8.435104370117188
    10. '[...,' → logprob: -9.310104370117188

Token 2122: ' plus' (ID: 2932)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6781201958656311
    2. '[i' → logprob: -0.9281201958656311
    3. '2' → logprob: -2.8031201362609863
    4. '   ' → logprob: -4.678120136260986
    5. '```' → logprob: -4.678120136260986
    6. 'dé' → logprob: -4.928120136260986
    7. 'de' → logprob: -5.553120136260986
    8. '       ' → logprob: -6.428120136260986
    9. 'dp' → logprob: -6.678120136260986
    10. 'prés' → logprob: -7.178120136260986

Token 2123: ' petite' (ID: 28119)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.18048922717571259
    2. 'small' → logprob: -1.805489182472229
    3. ' petite' → logprob: -7.9304890632629395
    4. 'sm' → logprob: -9.180489540100098
    5. 'little' → logprob: -9.680489540100098
    6. '```' → logprob: -9.930489540100098
    7. 'large' → logprob: -10.305489540100098
    8. 'plus' → logprob: -10.555489540100098
    9. '0' → logprob: -10.805489540100098
    10. '小' → logprob: -11.430489540100098

Token 2124: ' avec' (ID: 3937)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2125: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009581510093994439
    2. ' ' → logprob: -7.00095796585083
    3. 'dp' → logprob: -10.625958442687988
    4. '```' → logprob: -11.625958442687988
    5. '   ' → logprob: -11.750958442687988
    6. '1' → logprob: -13.750958442687988
    7. '[' → logprob: -13.750958442687988
    8. '#' → logprob: -14.250958442687988
    9. ' dp' → logprob: -14.250958442687988
    10. '  ' → logprob: -14.750958442687988

Token 2126: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0020421291701495647
    2. 'dp' → logprob: -6.252042293548584
    3. ' ' → logprob: -10.002041816711426
    4. 'i' → logprob: -10.252041816711426
    5. '   ' → logprob: -11.752041816711426
    6. '[i' → logprob: -11.877041816711426
    7. '1' → logprob: -12.377041816711426
    8. '[' → logprob: -12.502041816711426
    9. '```' → logprob: -13.127041816711426
    10. ' dp' → logprob: -13.502041816711426

Token 2127: ' chiffres' (ID: 105565)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1964622437953949
    2. '[i' → logprob: -1.9464622735977173
    3. '[j' → logprob: -4.196462154388428
    4. '```' → logprob: -4.446462154388428
    5. '[ch' → logprob: -5.321462154388428
    6. 'ch' → logprob: -7.071462154388428
    7. ' chiffres' → logprob: -7.196462154388428
    8. '][' → logprob: -7.821462154388428
    9. ' [' → logprob: -7.821462154388428
    10. '[token' → logprob: -8.196462631225586

Token 2128: ' non' (ID: 2893)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014583475887775421
    2. 'non' → logprob: -4.514583587646484
    3. ' non' → logprob: -6.139583587646484
    4. '```' → logprob: -7.389583587646484
    5. '-n' → logprob: -8.389583587646484
    6. '-' → logprob: -9.014583587646484
    7. '   ' → logprob: -9.389583587646484
    8. ' [' → logprob: -9.514583587646484
    9. '][' → logprob: -9.514583587646484
    10. '_non' → logprob: -9.889583587646484

Token 2129: '-z' (ID: 16826)
  Prédit: '-z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.0020944688003510237
    2. '-' → logprob: -6.752094268798828
    3. 'z' → logprob: -7.502094268798828
    4. '0' → logprob: -8.002094268798828
    5. '-Z' → logprob: -11.377094268798828
    6. '-n' → logprob: -11.752094268798828
    7. '-zero' → logprob: -12.627094268798828
    8. '```' → logprob: -12.752094268798828
    9. '#' → logprob: -13.252094268798828
    10. '-з' → logprob: -13.627094268798828

Token 2130: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.003967743366956711
    2. 'ro' → logprob: -5.878967761993408
    3. '_' → logprob: -8.87896728515625
    4. '0' → logprob: -9.12896728515625
    5. '[' → logprob: -9.25396728515625
    6. 'ero' → logprob: -9.37896728515625
    7. '```' → logprob: -9.37896728515625
    8. '
' → logprob: -10.12896728515625
    9. '{
' → logprob: -10.25396728515625
    10. '\' → logprob: -10.25396728515625

Token 2131: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11884884536266327
    2. '   ' → logprob: -2.4938488006591797
    3. ' +' → logprob: -3.9938488006591797
    4. '+
' → logprob: -4.61884880065918
    5. ')' → logprob: -7.24384880065918
    6. '```' → logprob: -8.24384880065918
    7. ' +
' → logprob: -8.74384880065918
    8. ')+' → logprob: -11.86884880065918
    9. '<|end|>' → logprob: -12.24384880065918
    10. '       ' → logprob: -12.36884880065918

Token 2132: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17239385843276978
    2. '       ' → logprob: -2.297393798828125
    3. ' +' → logprob: -2.922393798828125
    4. '   ' → logprob: -6.422393798828125
    5. '+
' → logprob: -6.797393798828125
    6. '+(' → logprob: -7.297393798828125
    7. '(' → logprob: -8.172393798828125
    8. 'dp' → logprob: -9.172393798828125
    9. '(
' → logprob: -9.547393798828125
    10. ' +
' → logprob: -10.172393798828125

Token 2133: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00014287306112237275
    2. ' (' → logprob: -9.125143051147461
    3. '(d' → logprob: -10.875143051147461
    4. '       ' → logprob: -11.375143051147461
    5. '   ' → logprob: -13.500143051147461
    6. 'dp' → logprob: -13.625143051147461
    7. '(dc' → logprob: -15.375143051147461
    8. '(df' → logprob: -15.875143051147461
    9. '(pd' → logprob: -16.25014305114746
    10. '(dt' → logprob: -16.75014305114746

Token 2134: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1602552980184555
    2. '(dp' → logprob: -1.9102553129196167
    3. ' dp' → logprob: -10.660255432128906
    4. ' (' → logprob: -12.910255432128906
    5. '(d' → logprob: -13.285255432128906
    6. '0' → logprob: -13.410255432128906
    7. '(' → logprob: -13.785255432128906
    8. '	dp' → logprob: -14.910255432128906
    9. '_dp' → logprob: -15.910255432128906
    10. '.dp' → logprob: -16.410255432128906

Token 2135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00034833617974072695
    2. '[i' → logprob: -8.000348091125488
    3. '```' → logprob: -11.750348091125488
    4. '[' → logprob: -12.750348091125488
    5. 'i' → logprob: -14.500348091125488
    6. '   ' → logprob: -15.375348091125488
    7. '``' → logprob: -15.500348091125488
    8. '-' → logprob: -15.625348091125488
    9. '_' → logprob: -15.750348091125488
    10. '(i' → logprob: -15.875348091125488

Token 2136: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.101369894575328e-05
    2. '```' → logprob: -9.875081062316895
    3. '[' → logprob: -10.875081062316895
    4. '   ' → logprob: -12.250081062316895
    5. 'i' → logprob: -14.250081062316895
    6. '       ' → logprob: -14.375081062316895
    7. '[I' → logprob: -14.625081062316895
    8. '
' → logprob: -14.875081062316895
    9. ' [' → logprob: -14.875081062316895
    10. '[
' → logprob: -15.000081062316895

Token 2137: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.511406809295295e-06
    2. '```' → logprob: -12.875006675720215
    3. ' -' → logprob: -13.625006675720215
    4. '[i' → logprob: -13.875006675720215
    5. '[' → logprob: -14.125006675720215
    6. '][' → logprob: -15.250006675720215
    7. '-[' → logprob: -15.250006675720215
    8. '[-' → logprob: -15.500006675720215
    9. '   ' → logprob: -15.875006675720215
    10. '...' → logprob: -16.1250057220459

Token 2138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5248962044715881
    2. '-' → logprob: -0.8998962044715881
    3. '```' → logprob: -7.024896144866943
    4. 'i' → logprob: -7.149896144866943
    5. '...' → logprob: -10.274896621704102
    6. '0' → logprob: -10.899896621704102
    7. '[' → logprob: -11.524896621704102
    8. '   ' → logprob: -11.649896621704102
    9. 'for' → logprob: -12.524896621704102
    10. 'prev' → logprob: -12.524896621704102

Token 2139: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.146681010723114
    2. '[i' → logprob: -2.021681070327759
    3. '[' → logprob: -5.77168083190918
    4. '           ' → logprob: -7.89668083190918
    5. '```' → logprob: -8.39668083190918
    6. '       ' → logprob: -9.89668083190918
    7. ')[' → logprob: -10.02168083190918
    8. ' ][' → logprob: -10.39668083190918
    9. '>[' → logprob: -10.52168083190918
    10. '}[' → logprob: -10.64668083190918

Token 2140: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. '1' → logprob: -14.375001907348633
    3. '
' → logprob: -14.500001907348633
    4. '[' → logprob: -15.125001907348633
    5. ' ' → logprob: -15.250001907348633
    6. '   ' → logprob: -15.875001907348633
    7. '```' → logprob: -16.375001907348633
    8. '0' → logprob: -17.000001907348633
    9. '２' → logprob: -17.687501907348633
    10. '۲' → logprob: -18.312501907348633

Token 2141: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.64839569455944e-05
    2. 'if' → logprob: -9.625076293945312
    3. ' if' → logprob: -11.750076293945312
    4. ' ]' → logprob: -13.250076293945312
    5. ']+' → logprob: -15.500076293945312
    6. ']*' → logprob: -15.625076293945312
    7. ')' → logprob: -15.875076293945312
    8. '])' → logprob: -16.000076293945312
    9. ']
' → logprob: -16.500076293945312
    10. '   ' → logprob: -16.750076293945312

Token 2142: ' if' (ID: 538)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8637444972991943
    2. ' *' → logprob: -0.9887444972991943
    3. ' if' → logprob: -1.7387444972991943
    4. 'if' → logprob: -3.4887444972991943
    5. '*(' → logprob: -10.488744735717773
    6. '   ' → logprob: -10.613744735717773
    7. ')*' → logprob: -11.488744735717773
    8. ' ' → logprob: -11.613744735717773
    9. ')' → logprob: -12.363744735717773
    10. '       ' → logprob: -12.488744735717773

Token 2143: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.04858850687742233
    2. ' np' → logprob: -3.048588514328003
    3. '0' → logprob: -15.048588752746582
    4. '(np' → logprob: -15.173588752746582
    5. 'n' → logprob: -15.423588752746582
    6. '_np' → logprob: -15.798588752746582
    7. '
' → logprob: -16.923587799072266
    8. ' ' → logprob: -17.048587799072266
    9. '[np' → logprob: -17.048587799072266
    10. 'Np' → logprob: -17.548587799072266

Token 2144: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2519368827342987
    2. ' !=' → logprob: -1.501936912536621
    3. ']!=' → logprob: -13.501936912536621
    4. '>' → logprob: -13.501936912536621
    5. '```' → logprob: -13.876936912536621
    6. '()!=' → logprob: -14.001936912536621
    7. ')!=' → logprob: -14.501936912536621
    8. '!=-' → logprob: -14.876936912536621
    9. '[' → logprob: -15.376936912536621
    10. 'else' → logprob: -15.501936912536621

Token 2145: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000204851632588543
    2. ' ' → logprob: -8.500205039978027
    3. '   ' → logprob: -15.125205039978027
    4. '```' → logprob: -15.125205039978027
    5. '1' → logprob: -16.00020408630371
    6. '>' → logprob: -16.18770408630371
    7. '
' → logprob: -16.25020408630371
    8. '``' → logprob: -16.50020408630371
    9. ' ' → logprob: -16.56270408630371
    10. '!=' → logprob: -16.81270408630371

Token 2146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.2166411478538066e-05
    2. ' ' → logprob: -9.875052452087402
    3. '1' → logprob: -14.875052452087402
    4. '   ' → logprob: -16.125051498413086
    5. '```' → logprob: -16.250051498413086
    6. '  ' → logprob: -17.562551498413086
    7. '2' → logprob: -18.125051498413086
    8. ' ' → logprob: -18.312551498413086
    9. '#' → logprob: -18.312551498413086
    10. '>' → logprob: -18.375051498413086

Token 2147: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.47408244013786316
    2. 'else' → logprob: -0.9740824699401855
    3. '	else' → logprob: -12.849081993103027
    4. ' ' → logprob: -14.099081993103027
    5. '        ' → logprob: -14.849081993103027
    6. '```' → logprob: -14.849081993103027
    7. ')' → logprob: -15.224081993103027
    8. ' ' → logprob: -15.349081993103027
    9. '    ' → logprob: -15.349081993103027
    10. '   ' → logprob: -15.599081993103027

Token 2148: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.625261306762695
    4. ' ' → logprob: -18.125261306762695
    5. '       ' → logprob: -18.875261306762695
    6. '  ' → logprob: -19.375261306762695
    7. '1' → logprob: -20.000261306762695
    8. '۰' → logprob: -20.250261306762695
    9. '           ' → logprob: -20.375261306762695
    10. '	' → logprob: -20.500261306762695

Token 2149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.37502098083496
    4. '1' → logprob: -18.87502098083496
    5. ' ' → logprob: -19.31252098083496
    6. '  ' → logprob: -19.50002098083496
    7. '۰' → logprob: -19.62502098083496
    8. '	' → logprob: -20.06252098083496
    9. '       ' → logprob: -20.18752098083496
    10. '```' → logprob: -20.50002098083496

Token 2150: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023255378007888794
    2. '   ' → logprob: -3.7732553482055664
    3. '#' → logprob: -12.898255348205566
    4. ' )' → logprob: -13.273255348205566
    5. ')
' → logprob: -13.273255348205566
    6. '   ' → logprob: -14.273255348205566
    7. '	' → logprob: -14.648255348205566
    8. '       ' → logprob: -14.648255348205566
    9. ')`' → logprob: -15.023255348205566
    10. '```' → logprob: -15.148255348205566

Token 2151: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10380445420742035
    2. '   ' → logprob: -2.353804349899292
    3. '<|end|>' → logprob: -5.728804588317871
    4. '<|end|>' → logprob: -8.978804588317871
    5. '```' → logprob: -9.353804588317871
    6. '       ' → logprob: -10.728804588317871
    7. '[' → logprob: -10.978804588317871
    8. '	' → logprob: -11.478804588317871
    9. ')
' → logprob: -11.478804588317871
    10. '#' → logprob: -11.603804588317871

Token 2152: ' Continue' (ID: 16958)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19540338218212128
    2. '   ' → logprob: -1.8204033374786377
    3. '<|end|>' → logprob: -4.445403575897217
    4. '```' → logprob: -6.820403575897217
    5. '<|end|>' → logprob: -7.320403575897217
    6. '#' → logprob: -7.570403575897217
    7. '       ' → logprob: -7.820403575897217
    8. '  ' → logprob: -8.445403099060059
    9. '...' → logprob: -8.570403099060059
    10. '")' → logprob: -8.945403099060059

Token 2153: ' la' (ID: 557)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.17992936074733734
    2. 'dp' → logprob: -2.054929256439209
    3. ')' → logprob: -4.179929256439209
    4. ' dp' → logprob: -4.679929256439209
    5. '   ' → logprob: -5.429929256439209
    6. '       ' → logprob: -5.554929256439209
    7. '(' → logprob: -6.929929256439209
    8. ' (' → logprob: -6.929929256439209
    9. '(
' → logprob: -7.679929256439209
    10. '```' → logprob: -7.679929256439209

Token 2154: ' sé' (ID: 7462)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.019389357417821884
    2. ')' → logprob: -4.5193891525268555
    3. '(dp' → logprob: -5.7693891525268555
    4. '```' → logprob: -5.7693891525268555
    5. 'sequence' → logprob: -6.7693891525268555
    6. '1' → logprob: -7.8943891525268555
    7. ' dp' → logprob: -8.269389152526855
    8. '(' → logprob: -9.519389152526855
    9. ' sequence' → logprob: -10.394389152526855
    10. '(
' → logprob: -10.519389152526855

Token 2155: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.28699934482574463
    2. '1' → logprob: -2.161999225616455
    3. '0' → logprob: -2.411999225616455
    4. '#' → logprob: -5.161999225616455
    5. 'equal' → logprob: -5.161999225616455
    6. 'q' → logprob: -5.286999225616455
    7. 'qu' → logprob: -5.411999225616455
    8. 'quel' → logprob: -5.536999225616455
    9. '_' → logprob: -6.286999225616455
    10. '_equal' → logprob: -6.536999225616455

Token 2156: ' ég' (ID: 33150)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.016498923301696777
    2. '   ' → logprob: -4.766499042510986
    3. ')' → logprob: -5.766499042510986
    4. '```' → logprob: -6.016499042510986
    5. '[' → logprob: -7.391499042510986
    6. '       ' → logprob: -7.516499042510986
    7. '=' → logprob: -8.641498565673828
    8. '==' → logprob: -9.016498565673828
    9. ']' → logprob: -9.016498565673828
    10. '][' → logprob: -9.141498565673828

Token 2157: 'ale' (ID: 1167)
  Prédit: 'gal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gal' → logprob: -0.6228169798851013
    2. 'x' → logprob: -1.247817039489746
    3. 'ale' → logprob: -2.747817039489746
    4. '0' → logprob: -3.372817039489746
    5. '1' → logprob: -4.497817039489746
    6. '   ' → logprob: -4.872817039489746
    7. 't' → logprob: -4.872817039489746
    8. '       ' → logprob: -4.872817039489746
    9. 'continue' → logprob: -4.997817039489746
    10. 'q' → logprob: -5.622817039489746

Token 2158: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010110783390700817
    2. '   ' → logprob: -5.010110855102539
    3. 'else' → logprob: -6.885110855102539
    4. '```' → logprob: -6.885110855102539
    5. '[i' → logprob: -7.635110855102539
    6. '[' → logprob: -8.635110855102539
    7. '):' → logprob: -9.260110855102539
    8. ']' → logprob: -9.385110855102539
    9. '<|end|>' → logprob: -9.385110855102539
    10. ' )' → logprob: -9.760110855102539

Token 2159: ' possible' (ID: 4149)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18694543838500977
    2. 'np' → logprob: -2.5619454383850098
    3. ' ' → logprob: -3.4369454383850098
    4. 'True' → logprob: -3.9369454383850098
    5. 'dp' → logprob: -4.31194543838501
    6. '0' → logprob: -4.56194543838501
    7. ' True' → logprob: -4.93694543838501
    8. '   ' → logprob: -5.31194543838501
    9. ' np' → logprob: -5.93694543838501
    10. ' dp' → logprob: -6.81194543838501

Token 2160: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2812986373901367
    2. '   ' → logprob: -1.4062986373901367
    3. ')
' → logprob: -9.656298637390137
    4. '```' → logprob: -9.656298637390137
    5. ' )' → logprob: -12.781298637390137
    6. '       ' → logprob: -12.781298637390137
    7. '<|end|>' → logprob: -13.031298637390137
    8. '#' → logprob: -13.281298637390137
    9. '   ' → logprob: -13.406298637390137
    10. ')return' → logprob: -13.531298637390137

Token 2161: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20147493481636047
    2. '   ' → logprob: -1.701474905014038
    3. '```' → logprob: -10.076475143432617
    4. ')
' → logprob: -11.576475143432617
    5. ' )' → logprob: -13.076475143432617
    6. '#' → logprob: -13.076475143432617
    7. '	' → logprob: -13.576475143432617
    8. '   ' → logprob: -14.076475143432617
    9. '<|end|>' → logprob: -14.576475143432617
    10. '       ' → logprob: -14.951475143432617

Token 2162: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10024365782737732
    2. '   ' → logprob: -2.35024356842041
    3. ')
' (adapté à ' )
') → logprob: -10.97524356842041
    4. '```' → logprob: -11.10024356842041
    5. ' )' → logprob: -13.72524356842041
    6. '#' → logprob: -14.22524356842041
    7. '	' → logprob: -14.35024356842041
    8. '   ' → logprob: -14.60024356842041
    9. '}' → logprob: -15.22524356842041
    10. '       ' → logprob: -15.35024356842041

Token 2163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0867081880569458
    2. 'dp' → logprob: -2.5867080688476562
    3. ')' → logprob: -5.086708068847656
    4. '```' → logprob: -7.086708068847656
    5. '	dp' → logprob: -7.586708068847656
    6. '<|end|>' → logprob: -9.211708068847656
    7. '#' → logprob: -10.211708068847656
    8. ' dp' → logprob: -10.461708068847656
    9. '(dp' → logprob: -10.461708068847656
    10. '    
' → logprob: -11.461708068847656

Token 2164: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6578141450881958
    2. 'dp' → logprob: -1.0328141450881958
    3. ')' → logprob: -2.1578140258789062
    4. '<|end|>' → logprob: -5.532814025878906
    5. '```' → logprob: -5.657814025878906
    6. '#' (adapté à ' #') → logprob: -6.532814025878906
    7. '	dp' → logprob: -7.657814025878906
    8. ' dp' → logprob: -8.657814025878906
    9. '[' → logprob: -9.157814025878906
    10. '  ' → logprob: -9.157814025878906

Token 2165: ' Il' (ID: 5329)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0012280851369723678
    2. '   ' → logprob: -6.751227855682373
    3. ' dp' → logprob: -9.876228332519531
    4. '```' → logprob: -12.751228332519531
    5. '	dp' → logprob: -13.751228332519531
    6. '(dp' → logprob: -14.126228332519531
    7. '0' → logprob: -14.501228332519531
    8. '#' → logprob: -14.876228332519531
    9. 'for' → logprob: -15.626228332519531
    10. ')' → logprob: -16.12622833251953

Token 2166: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20171619951725006
    2. '[i' → logprob: -2.701716184616089
    3. '][' → logprob: -3.576716184616089
    4. '[' → logprob: -3.826716184616089
    5. '```' → logprob: -3.951716184616089
    6. '0' → logprob: -4.076716423034668
    7. ']' → logprob: -4.701716423034668
    8. '1' → logprob: -5.451716423034668
    9. '[
' → logprob: -5.576716423034668
    10. '
' → logprob: -6.201716423034668

Token 2167: ''ex' (ID: 23472)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14642629027366638
    2. '   ' → logprob: -2.521426200866699
    3. '+=' → logprob: -4.271426200866699
    4. ']' → logprob: -4.646426200866699
    5. ' =' → logprob: -5.146426200866699
    6. '[' → logprob: -5.271426200866699
    7. ' +=' → logprob: -5.396426200866699
    8. '#' → logprob: -5.396426200866699
    9. '=
' → logprob: -5.771426200866699
    10. '=[' → logprob: -6.146426200866699

Token 2168: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.050219424068927765
    2. 'pected' → logprob: -4.300219535827637
    3. 'ist' → logprob: -4.925219535827637
    4. '=' → logprob: -5.675219535827637
    5. 'ists' → logprob: -5.675219535827637
    6. '```' → logprob: -5.675219535827637
    7. 'p' → logprob: -5.800219535827637
    8. 'istant' → logprob: -5.925219535827637
    9. 'plique' → logprob: -6.175219535827637
    10. 'istent' → logprob: -6.175219535827637

Token 2169: ' qu' (ID: 474)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5372118949890137
    2. '=' → logprob: -1.6622118949890137
    3. '[i' → logprob: -2.4122118949890137
    4. '[' → logprob: -3.7872118949890137
    5. '```' → logprob: -3.9122118949890137
    6. '[
' → logprob: -4.037211894989014
    7. 'for' → logprob: -4.037211894989014
    8. '    
' → logprob: -4.412211894989014
    9. ')' → logprob: -4.412211894989014
    10. ' =' → logprob: -5.037211894989014

Token 2170: ''une' (ID: 13337)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6725419759750366
    2. '   ' → logprob: -1.1725419759750366
    3. '[i' → logprob: -3.297542095184326
    4. '[' → logprob: -3.422542095184326
    5. 'for' → logprob: -3.422542095184326
    6. '       ' → logprob: -4.547542095184326
    7. '```' → logprob: -4.672542095184326
    8. '[
' → logprob: -4.922542095184326
    9. 'if' → logprob: -5.172542095184326
    10. 'else' → logprob: -5.172542095184326

Token 2171: ' seule' (ID: 41983)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5720316767692566
    2. '   ' → logprob: -1.6970317363739014
    3. ')' → logprob: -2.5720317363739014
    4. '[' → logprob: -3.3220317363739014
    5. '=' → logprob: -3.4470317363739014
    6. ' else' → logprob: -3.5720317363739014
    7. 'for' → logprob: -3.9470317363739014
    8. '#' → logprob: -4.072031497955322
    9. 'if' → logprob: -5.072031497955322
    10. 'elif' → logprob: -5.447031497955322

Token 2172: ' façon' (ID: 33381)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8380146622657776
    2. '```' → logprob: -2.088014602661133
    3. '   ' → logprob: -2.213014602661133
    4. ']' → logprob: -2.588014602661133
    5. '=' → logprob: -3.213014602661133
    6. 'for' → logprob: -3.338014602661133
    7. '[i' → logprob: -3.338014602661133
    8. '[' → logprob: -3.838014602661133
    9. '    
' → logprob: -3.963014602661133
    10. 'dp' → logprob: -4.338014602661133

Token 2173: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17059388756752014
    2. 'dp' → logprob: -2.0455939769744873
    3. '```' → logprob: -4.920593738555908
    4. ')' → logprob: -5.295593738555908
    5. '=' → logprob: -5.295593738555908
    6. 'for' → logprob: -6.170593738555908
    7. ']' → logprob: -6.295593738555908
    8. '[' → logprob: -6.420593738555908
    9. '[i' → logprob: -6.920593738555908
    10. '       ' → logprob: -7.545593738555908

Token 2174: ''avoir' (ID: 55863)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9325619339942932
    2. 'dp' → logprob: -1.3075618743896484
    3. '```' → logprob: -2.1825618743896484
    4. '=' → logprob: -2.6825618743896484
    5. '[i' → logprob: -3.1825618743896484
    6. '#' → logprob: -3.6825618743896484
    7. ')' → logprob: -4.182561874389648
    8. '[' → logprob: -4.682561874389648
    9. '       ' → logprob: -4.682561874389648
    10. 'contin' → logprob: -4.932561874389648

Token 2175: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10171067714691162
    2. '   ' → logprob: -2.601710796356201
    3. '2' → logprob: -4.351710796356201
    4. '```' → logprob: -5.476710796356201
    5. 'i' → logprob: -6.476710796356201
    6. '1' → logprob: -6.726710796356201
    7. '	dp' → logprob: -7.101710796356201
    8. ' dp' → logprob: -7.226710796356201
    9. '0' → logprob: -7.601710796356201
    10. '(' → logprob: -8.976710319519043

Token 2176: '2' (ID: 17)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16117163002490997
    2. '1' → logprob: -2.1611716747283936
    3. '0' → logprob: -3.5361716747283936
    4. '2' → logprob: -6.2861714363098145
    5. '(' → logprob: -6.7861714363098145
    6. 'i' → logprob: -7.6611714363098145
    7. '(dp' → logprob: -7.7861714363098145
    8. '(i' → logprob: -8.161171913146973
    9. '#' → logprob: -9.161171913146973
    10. '```' → logprob: -9.661171913146973

Token 2177: ' chiffres' (ID: 105565)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3973811864852905
    2. ']' → logprob: -1.5223811864852905
    3. '][' → logprob: -3.39738130569458
    4. '[' → logprob: -3.39738130569458
    5. 'non' → logprob: -5.02238130569458
    6. 'dp' → logprob: -5.39738130569458
    7. '_' → logprob: -5.39738130569458
    8. '_non' → logprob: -5.39738130569458
    9. '```' → logprob: -5.64738130569458
    10. '[
' → logprob: -5.77238130569458

Token 2178: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.05698898807168007
    2. ' non' → logprob: -3.3069889545440674
    3. '[i' → logprob: -4.6819891929626465
    4. '   ' → logprob: -5.0569891929626465
    5. '_non' → logprob: -6.8069891929626465
    6. '```' → logprob: -6.8069891929626465
    7. '[' → logprob: -7.3069891929626465
    8. 'n' → logprob: -9.431988716125488
    9. ' ' → logprob: -10.681988716125488
    10. '1' → logprob: -10.681988716125488

Token 2179: '-z' (ID: 16826)
  Prédit: '-z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.15394222736358643
    2. '-zero' → logprob: -2.278942108154297
    3. '-' → logprob: -3.278942108154297
    4. '0' → logprob: -6.903942108154297
    5. '-Z' → logprob: -8.028942108154297
    6. '-з' → logprob: -8.778942108154297
    7. 'z' → logprob: -8.778942108154297
    8. ' zéro' → logprob: -8.778942108154297
    9. '_zero' → logprob: -9.028942108154297
    10. '_z' → logprob: -9.153942108154297

Token 2180: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.00041947141289711
    2. 'éros' → logprob: -8.625419616699219
    3. 'é' → logprob: -9.000419616699219
    4. 'éo' → logprob: -10.875419616699219
    5. ' ' → logprob: -11.375419616699219
    6. '_' → logprob: -11.625419616699219
    7. '```' → logprob: -11.625419616699219
    8. 'ero' → logprob: -11.625419616699219
    9. 'œ' → logprob: -12.125419616699219
    10. ' zéro' → logprob: -12.250419616699219

Token 2181: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19270533323287964
    2. 'dp' → logprob: -1.8177053928375244
    3. '=' → logprob: -5.442705154418945
    4. ' dp' → logprob: -5.567705154418945
    5. ' =' → logprob: -6.317705154418945
    6. ')' → logprob: -6.692705154418945
    7. '```' → logprob: -7.692705154418945
    8. '	dp' → logprob: -7.942705154418945
    9. '(dp' → logprob: -8.567705154418945
    10. '.' → logprob: -8.942705154418945

Token 2182: ' on' (ID: 402)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5562210083007812
    2. ' i' → logprob: -0.9312210083007812
    3. '(i' → logprob: -4.681221008300781
    4. ' (' → logprob: -4.806221008300781
    5. 'np' → logprob: -4.931221008300781
    6. ' np' → logprob: -5.556221008300781
    7. 'dp' → logprob: -6.306221008300781
    8. '(' → logprob: -7.681221008300781
    9. ' dp' → logprob: -7.681221008300781
    10. '   ' → logprob: -7.806221008300781

Token 2183: ' a' (ID: 261)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.2974730730056763
    2. 'i' → logprob: -1.4224730730056763
    3. '[i' → logprob: -2.0474729537963867
    4. '   ' → logprob: -2.0474729537963867
    5. '[' → logprob: -3.4224729537963867
    6. ' continue' → logprob: -3.4224729537963867
    7. 's' → logprob: -3.6724729537963867
    8. '```' → logprob: -3.6724729537963867
    9. '<|end|>' → logprob: -4.547472953796387
    10. 'contin' → logprob: -4.672472953796387

Token 2184: ' avanc' (ID: 87985)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11857974529266357
    2. ' i' → logprob: -2.743579864501953
    3. '(i' → logprob: -3.743579864501953
    4. '   ' → logprob: -4.118579864501953
    5. ' (' → logprob: -5.743579864501953
    6. 'dp' → logprob: -6.368579864501953
    7. '```' → logprob: -7.368579864501953
    8. '       ' → logprob: -7.743579864501953
    9. ' ' → logprob: -8.243579864501953
    10. '(' → logprob: -8.368579864501953

Token 2185: 'é' (ID: 377)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1514897495508194
    2. '=' → logprob: -3.276489734649658
    3. 'i' → logprob: -3.276489734649658
    4. 'à' → logprob: -4.776489734649658
    5. '       ' → logprob: -4.776489734649658
    6. 'er' → logprob: -5.026489734649658
    7. 'pas' → logprob: -5.151489734649658
    8. 'é' → logprob: -5.276489734649658
    9. 'ie' → logprob: -5.651489734649658
    10. '1' → logprob: -5.651489734649658

Token 2186: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.971562385559082
    2. ' if' → logprob: -1.346562385559082
    3. '[i' → logprob: -2.596562385559082
    4. '<|end|>' → logprob: -2.721562385559082
    5. ' else' → logprob: -3.471562385559082
    6. ' +=' → logprob: -3.596562385559082
    7. 'else' → logprob: -3.721562385559082
    8. '=' → logprob: -3.721562385559082
    9. 'if' → logprob: -3.971562385559082
    10. '+=' → logprob: -4.596562385559082

Token 2187: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7730985879898071
    2. '1' → logprob: -1.2730985879898071
    3. '0' → logprob: -2.2730984687805176
    4. 'i' → logprob: -2.7730984687805176
    5. 'po' → logprob: -3.7730984687805176
    6. 'de' → logprob: -4.523098468780518
    7. ' ' → logprob: -4.648098468780518
    8. 'la' → logprob: -4.773098468780518
    9. '   ' → logprob: -5.148098468780518
    10. 'range' → logprob: -5.273098468780518

Token 2188: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3847430944442749
    2. '2' → logprob: -1.759743094444275
    3. '1' → logprob: -2.7597432136535645
    4. 'po' → logprob: -3.1347432136535645
    5. ' i' → logprob: -3.5097432136535645
    6. '0' → logprob: -5.7597432136535645
    7. ' ' → logprob: -6.1347432136535645
    8. '```' → logprob: -6.1347432136535645
    9. ' po' → logprob: -6.3847432136535645
    10. ')' → logprob: -7.3847432136535645

Token 2189: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5945885181427002
    2. ' ==' → logprob: -1.7195885181427002
    3. ' <=' → logprob: -2.0945885181427
    4. ' +' → logprob: -2.0945885181427
    5. '==' → logprob: -2.2195885181427
    6. ')' → logprob: -2.7195885181427
    7. '   ' → logprob: -2.7195885181427
    8. '<=' → logprob: -2.7195885181427
    9. '<|end|>' → logprob: -3.7195885181427
    10. '    ' → logprob: -5.594588279724121

Token 2190: ' nombre' (ID: 9733)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.0015671150758862495
    2. '0' → logprob: -7.1265668869018555
    3. ' po' → logprob: -7.3765668869018555
    4. '1' → logprob: -9.626566886901855
    5. '(po' → logprob: -10.001566886901855
    6. ' ' → logprob: -11.876566886901855
    7. '(' → logprob: -12.001566886901855
    8. '```' → logprob: -12.751566886901855
    9. '2' → logprob: -12.876566886901855
    10. '   ' → logprob: -14.001566886901855

Token 2191: ' de' (ID: 334)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.08292103558778763
    2. '(po' → logprob: -3.707921028137207
    3. 'de' → logprob: -3.957921028137207
    4. 'of' → logprob: -4.082921028137207
    5. '   ' → logprob: -5.207921028137207
    6. '0' → logprob: -5.832921028137207
    7. ' po' → logprob: -5.957921028137207
    8. 'zero' → logprob: -6.707921028137207
    9. ' of' → logprob: -6.832921028137207
    10. '[' → logprob: -6.832921028137207

Token 2192: ' ' (ID: 220)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.2925160527229309
    2. '0' → logprob: -1.4175159931182861
    3. ' po' → logprob: -5.292516231536865
    4. ' ' → logprob: -5.292516231536865
    5. 'zeros' → logprob: -8.167515754699707
    6. 'zero' → logprob: -8.542515754699707
    7. ' ' → logprob: -8.792515754699707
    8. '```' → logprob: -9.042515754699707
    9. '
' → logprob: -9.542515754699707
    10. '(po' → logprob: -9.792515754699707

Token 2193: '0' (ID: 15)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.06334254145622253
    2. '0' → logprob: -2.813342571258545
    3. ' po' → logprob: -6.938342571258545
    4. ' ' → logprob: -8.938342094421387
    5. '(po' → logprob: -9.563342094421387
    6. 'zero' → logprob: -9.688342094421387
    7. '[' → logprob: -10.688342094421387
    8. 'zeros' → logprob: -10.813342094421387
    9. '
' → logprob: -11.188342094421387
    10. '(' → logprob: -11.688342094421387

Token 2194: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015433897264301777
    2. '   ' → logprob: -5.2654337882995605
    3. '):' → logprob: -5.3904337882995605
    4. '):
' → logprob: -6.0154337882995605
    5. '```' → logprob: -6.7654337882995605
    6. ' else' → logprob: -8.140434265136719
    7. ')+' → logprob: -8.140434265136719
    8. 'else' → logprob: -8.265434265136719
    9. ']' → logprob: -8.265434265136719
    10. ' )' → logprob: -8.390434265136719

Token 2195: ' positions' (ID: 15897)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1890682876110077
    2. '=' → logprob: -2.43906831741333
    3. ' =' → logprob: -3.56406831741333
    4. ' +=' → logprob: -3.68906831741333
    5. '+=' → logprob: -4.06406831741333
    6. ' if' → logprob: -5.56406831741333
    7. 'if' → logprob: -5.81406831741333
    8. '[i' → logprob: -6.18906831741333
    9. ')' → logprob: -6.56406831741333
    10. 'dp' → logprob: -7.06406831741333

Token 2196: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7084508538246155
    2. 'dp' → logprob: -0.7084508538246155
    3. ')' → logprob: -4.458450794219971
    4. ' dp' → logprob: -6.583450794219971
    5. '	dp' → logprob: -6.833450794219971
    6. '(dp' → logprob: -7.958450794219971
    7. '```' → logprob: -8.708451271057129
    8. '=' → logprob: -8.708451271057129
    9. ']' → logprob: -9.583451271057129
    10. '_dp' → logprob: -10.083451271057129

Token 2197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5776415467262268
    2. 'dp' → logprob: -0.8276415467262268
    3. ' dp' → logprob: -6.452641487121582
    4. '	dp' → logprob: -9.827641487121582
    5. '(dp' → logprob: -10.202641487121582
    6. ')' → logprob: -11.577641487121582
    7. '_dp' → logprob: -12.077641487121582
    8. '```' → logprob: -12.327641487121582
    9. '#' → logprob: -12.827641487121582
    10. '[' → logprob: -13.577641487121582

Token 2198: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.001197370933368802
    2. '   ' → logprob: -6.751197338104248
    3. ' dp' → logprob: -11.251197814941406
    4. '```' → logprob: -11.251197814941406
    5. '	dp' → logprob: -14.626197814941406
    6. '``' → logprob: -14.751197814941406
    7. '`' → logprob: -16.251197814941406
    8. '  ' → logprob: -16.876197814941406
    9. '(dp' → logprob: -17.126197814941406
    10. '_dp' → logprob: -17.876197814941406

Token 2199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. '[i' → logprob: -13.62500286102295
    3. '```' → logprob: -13.75000286102295
    4. 'i' → logprob: -14.62500286102295
    5. '0' → logprob: -16.250003814697266
    6. '１' → logprob: -16.500003814697266
    7. ' ' → logprob: -17.125003814697266
    8. '
' → logprob: -17.375003814697266
    9. '`' → logprob: -18.125003814697266
    10. '   ' → logprob: -18.125003814697266

Token 2200: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1279553291387856e-05
    2. '```' → logprob: -11.875011444091797
    3. '   ' → logprob: -13.000011444091797
    4. 'i' → logprob: -14.125011444091797
    5. '
' → logprob: -14.250011444091797
    6. '[' → logprob: -15.125011444091797
    7. '[
' → logprob: -16.750011444091797
    8. '[int' → logprob: -16.750011444091797
    9. '[u' → logprob: -16.875011444091797
    10. '\[' → logprob: -17.250011444091797

Token 2201: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16101616621017456
    2. '][' → logprob: -1.9110162258148193
    3. '[' → logprob: -8.161016464233398
    4. '>[' → logprob: -8.536016464233398
    5. ')[' → logprob: -9.161016464233398
    6. '}[' → logprob: -9.661016464233398
    7. '```' → logprob: -9.911016464233398
    8. '   ' → logprob: -10.661016464233398
    9. '[I' → logprob: -11.661016464233398
    10. ''][' → logprob: -11.911016464233398

Token 2202: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. 'i' → logprob: -14.750000953674316
    3. ' ' → logprob: -14.875000953674316
    4. '1' → logprob: -15.750000953674316
    5. '   ' → logprob: -16.125001907348633
    6. '```' → logprob: -18.375001907348633
    7. '(' → logprob: -18.875001907348633
    8. '۲' → logprob: -19.875001907348633
    9. '
' → logprob: -20.000001907348633
    10. '  ' → logprob: -20.125001907348633

Token 2203: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005316650960594416
    2. ' =' → logprob: -5.255316734313965
    3. ']' → logprob: -9.505316734313965
    4. ']=' → logprob: -12.005316734313965
    5. ')' → logprob: -13.255316734313965
    6. '   ' → logprob: -15.255316734313965
    7. ')=' → logprob: -15.880316734313965
    8. '=
' → logprob: -16.50531578063965
    9. '+=' → logprob: -17.00531578063965
    10. '=True' → logprob: -18.25531578063965

Token 2204: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011705794604495168
    2. ' =' → logprob: -6.751170635223389
    3. '+=' → logprob: -15.12617015838623
    4. '   ' → logprob: -16.626171112060547
    5. '＝' → logprob: -19.126171112060547
    6. '=(' → logprob: -19.376171112060547
    7. ' +=' → logprob: -19.501171112060547
    8. ' ' → logprob: -19.626171112060547
    9. '=int' → logprob: -19.876171112060547
    10. '=
' → logprob: -20.126171112060547

Token 2205: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006174852605909109
    2. ' ' → logprob: -7.500617504119873
    3. '0' → logprob: -10.000617027282715
    4. '(' → logprob: -11.625617027282715
    5. 'int' → logprob: -12.125617027282715
    6. 'i' → logprob: -13.500617027282715
    7. '   ' → logprob: -13.875617027282715
    8. 'dp' → logprob: -14.000617027282715
    9. '(i' → logprob: -14.250617027282715
    10. ' (' → logprob: -15.625617027282715

Token 2206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.098748053773306e-05
    2. ' ' → logprob: -10.75006103515625
    3. '(' → logprob: -11.25006103515625
    4. '0' → logprob: -11.62506103515625
    5. 'int' → logprob: -11.62506103515625
    6. 'i' → logprob: -12.25006103515625
    7. '(i' → logprob: -12.87506103515625
    8. 'dp' → logprob: -14.50006103515625
    9. '   ' → logprob: -16.25006103515625
    10. 'True' → logprob: -16.50006103515625

Token 2207: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2208: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012520955875515938
    2. ' i' → logprob: -4.387520790100098
    3. ' (' → logprob: -12.637520790100098
    4. '   ' → logprob: -12.762520790100098
    5. '(' → logprob: -13.637520790100098
    6. ' ' → logprob: -13.762520790100098
    7. '  ' → logprob: -14.012520790100098
    8. 'po' → logprob: -14.137520790100098
    9. '2' → logprob: -14.262520790100098
    10. '(i' → logprob: -15.262520790100098

Token 2209: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3132970929145813
    2. '==' → logprob: -1.3132970333099365
    3. '>=' → logprob: -11.438297271728516
    4. ' >=' → logprob: -11.563297271728516
    5. '==(' → logprob: -12.313297271728516
    6. ' ' → logprob: -13.313297271728516
    7. '==
' → logprob: -13.313297271728516
    8. ']==' → logprob: -13.438297271728516
    9. '<|end|>' → logprob: -13.438297271728516
    10. '=' → logprob: -13.688297271728516

Token 2210: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000659419281873852
    2. ' ' → logprob: -7.500659465789795
    3. '(' → logprob: -10.000658988952637
    4. 'po' → logprob: -10.500658988952637
    5. '1' → logprob: -11.375658988952637
    6. '   ' → logprob: -11.375658988952637
    7. 'k' → logprob: -13.125658988952637
    8. '(po' → logprob: -13.125658988952637
    9. '  ' → logprob: -13.563158988952637
    10. 'i' → logprob: -13.625658988952637

Token 2211: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011653638648567721
    2. 'po' → logprob: -9.750116348266602
    3. ' ' → logprob: -10.000116348266602
    4. '(' → logprob: -12.000116348266602
    5. '(po' → logprob: -12.750116348266602
    6. '1' → logprob: -13.000116348266602
    7. '   ' → logprob: -14.375116348266602
    8. 'k' → logprob: -15.750116348266602
    9. '  ' → logprob: -15.875116348266602
    10. ' po' → logprob: -16.5626163482666

Token 2212: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868815004825592
    2. ' +' → logprob: -1.1368814706802368
    3. '<|end|>' → logprob: -12.511881828308105
    4. '+
' → logprob: -13.261881828308105
    5. ' +
' → logprob: -13.636881828308105
    6. '   ' → logprob: -13.886881828308105
    7. ' ' → logprob: -14.136881828308105
    8. '	' → logprob: -14.261881828308105
    9. ' ' → logprob: -15.136881828308105
    10. '  ' → logprob: -15.636881828308105

Token 2213: ' po' (ID: 2482)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -2.7610454708337784e-05
    2. ' po' → logprob: -10.500027656555176
    3. '(po' → logprob: -18.50002670288086
    4. '```' → logprob: -20.50002670288086
    5. 'p' → logprob: -20.62502670288086
    6. '`' → logprob: -22.00002670288086
    7. ' ' → logprob: -22.12502670288086
    8. ' ' → logprob: -22.25002670288086
    9. '.po' → logprob: -22.37502670288086
    10. '_po' → logprob: -22.50002670288086

Token 2214: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.038043100386857986
    2. 'else' → logprob: -3.2880430221557617
    3. ' ' → logprob: -14.413043022155762
    4. '	else' → logprob: -14.913043022155762
    5. ' ' → logprob: -15.038043022155762
    6. '<|end|>' → logprob: -15.288043022155762
    7. ' elif' → logprob: -16.788043975830078
    8. '    ' → logprob: -16.788043975830078
    9. 'elif' → logprob: -17.288043975830078
    10. '_else' → logprob: -17.913043975830078

Token 2215: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015043864259496331
    2. ' ' → logprob: -6.501504421234131
    3. '1' → logprob: -13.751503944396973
    4. '   ' → logprob: -14.376503944396973
    5. ' ' → logprob: -15.501503944396973
    6. '```' → logprob: -16.37650489807129
    7. '	' → logprob: -17.62650489807129
    8. '  ' → logprob: -17.93900489807129
    9. 'int' → logprob: -18.06400489807129
    10. '``' → logprob: -18.43900489807129

Token 2216: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '1' → logprob: -18.75
    4. '   ' → logprob: -19.125
    5. '۰' → logprob: -20.0625
    6. '```' → logprob: -21.0625
    7. 'int' → logprob: -21.125
    8. ' ' → logprob: -21.25
    9. '  ' → logprob: -21.375
    10. ' ' → logprob: -22.0625

Token 2217: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6578021049499512
    2. '<|end|>' → logprob: -0.7828021049499512
    3. ')' → logprob: -3.907802104949951
    4. '
' → logprob: -7.032802104949951
    5. '<|end|>' → logprob: -7.282802104949951
    6. '#' → logprob: -7.282802104949951
    7. '  ' → logprob: -7.657802104949951
    8. ' ' → logprob: -7.657802104949951
    9. '```' → logprob: -7.657802104949951
    10. '+' → logprob: -8.53280258178711

Token 2218: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00973188690841198
    2. '   ' → logprob: -5.259731769561768
    3. '```' → logprob: -5.884731769561768
    4. '#' → logprob: -6.384731769561768
    5. '``' → logprob: -11.884732246398926
    6. 'for' → logprob: -12.009732246398926
    7. ' dp' → logprob: -13.009732246398926
    8. ')' → logprob: -13.259732246398926
    9. '	dp' → logprob: -14.009732246398926
    10. '(dp' → logprob: -14.884732246398926

Token 2219: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.016931626945734024
    2. '   ' → logprob: -4.266931533813477
    3. '```' → logprob: -6.016931533813477
    4. '#' (adapté à ' #') → logprob: -8.641931533813477
    5. ')' → logprob: -9.641931533813477
    6. ' dp' → logprob: -10.266931533813477
    7. '``' → logprob: -10.766931533813477
    8. '	dp' → logprob: -11.391931533813477
    9. '(dp' → logprob: -11.891931533813477
    10. 'for' → logprob: -13.016931533813477

Token 2220: ' Pour' (ID: 13931)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006888004019856453
    2. '   ' → logprob: -5.006887912750244
    3. ' dp' → logprob: -8.881888389587402
    4. '```' → logprob: -10.881888389587402
    5. 'for' → logprob: -11.756888389587402
    6. '#' → logprob: -12.506888389587402
    7. '	dp' → logprob: -13.506888389587402
    8. '``' → logprob: -14.506888389587402
    9. '(dp' → logprob: -14.631888389587402
    10. '
' → logprob: -15.006888389587402

Token 2221: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.476226806640625
    2. ' ' → logprob: -0.976226806640625
    3. '   ' → logprob: -7.226226806640625
    4. 'dp' → logprob: -7.226226806640625
    5. '0' → logprob: -8.101226806640625
    6. '2' → logprob: -8.476226806640625
    7. ' dp' → logprob: -9.226226806640625
    8. '  ' → logprob: -10.351226806640625
    9. '1' → logprob: -10.976226806640625
    10. '(' → logprob: -11.476226806640625

Token 2222: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00014096579980105162
    2. ' ' → logprob: -10.000141143798828
    3. 'j' → logprob: -10.250141143798828
    4. '0' → logprob: -10.250141143798828
    5. 'dp' → logprob: -11.500141143798828
    6. 'i' → logprob: -11.750141143798828
    7. 'k' → logprob: -13.000141143798828
    8. '1' → logprob: -13.625141143798828
    9. '2' → logprob: -14.125141143798828
    10. '   ' → logprob: -14.750141143798828

Token 2223: ' chiffres' (ID: 105565)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7068970203399658
    2. '][' → logprob: -1.0818970203399658
    3. 'dp' → logprob: -1.9568970203399658
    4. '   ' → logprob: -4.331896781921387
    5. 'digits' → logprob: -5.456896781921387
    6. 'non' → logprob: -6.581896781921387
    7. '[j' → logprob: -6.831896781921387
    8. '```' → logprob: -6.831896781921387
    9. ']' → logprob: -7.081896781921387
    10. '[' → logprob: -7.206896781921387

Token 2224: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.5414812564849854
    2. '   ' → logprob: -1.1664812564849854
    3. ' non' → logprob: -2.6664812564849854
    4. '_non' → logprob: -4.166481018066406
    5. '][' → logprob: -4.416481018066406
    6. '0' → logprob: -5.916481018066406
    7. '
' → logprob: -6.291481018066406
    8. '```' → logprob: -6.416481018066406
    9. 'dp' → logprob: -7.041481018066406
    10. '[' → logprob: -7.166481018066406

Token 2225: '-z' (ID: 16826)
  Prédit: '-z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.5845325589179993
    2. '0' → logprob: -1.4595324993133545
    3. '-' → logprob: -1.8345324993133545
    4. '-zero' → logprob: -3.2095324993133545
    5. '_' → logprob: -5.084532737731934
    6. '-Z' → logprob: -7.084532737731934
    7. '_zero' → logprob: -7.459532737731934
    8. '_z' → logprob: -7.709532737731934
    9. '=' → logprob: -7.834532737731934
    10. ' zéro' → logprob: -8.209532737731934

Token 2226: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.0013613052433356643
    2. '_' → logprob: -7.62636137008667
    3. 'éo' → logprob: -8.501360893249512
    4. 'é' → logprob: -8.626360893249512
    5. 'éros' → logprob: -8.626360893249512
    6. '0' → logprob: -10.126360893249512
    7. '=' → logprob: -10.626360893249512
    8. 'œ' → logprob: -10.751360893249512
    9. '‌' → logprob: -10.751360893249512
    10. '-' → logprob: -10.751360893249512

Token 2227: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14376787841320038
    2. 'dp' → logprob: -2.143767833709717
    3. '=' → logprob: -4.643767833709717
    4. ' =' → logprob: -5.643767833709717
    5. '```' → logprob: -6.518767833709717
    6. ' dp' → logprob: -6.643767833709717
    7. '(dp' → logprob: -7.893767833709717
    8. '	dp' → logprob: -8.518768310546875
    9. '_dp' → logprob: -9.518768310546875
    10. ']' → logprob: -10.143768310546875

Token 2228: ' it' (ID: 480)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5184297561645508
    2. 'dp' → logprob: -1.0184297561645508
    3. ' dp' → logprob: -3.143429756164551
    4. '```' → logprob: -8.76842975616455
    5. '	dp' → logprob: -9.64342975616455
    6. '(dp' → logprob: -10.89342975616455
    7. '``' → logprob: -12.51842975616455
    8. '_dp' → logprob: -12.76842975616455
    9. '
' → logprob: -13.26842975616455
    10. '       ' → logprob: -15.51842975616455

Token 2229: 'ération' (ID: 24977)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5084157586097717
    2. 'dp' → logprob: -1.133415699005127
    3. '0' → logprob: -2.883415699005127
    4. ' dp' → logprob: -4.133415699005127
    5. '(dp' → logprob: -7.258415699005127
    6. '#' → logprob: -7.383415699005127
    7. '	dp' → logprob: -7.383415699005127
    8. '```' → logprob: -7.383415699005127
    9. '=' → logprob: -7.633415699005127
    10. 'for' → logprob: -8.133416175842285

Token 2230: ' supplémentaire' (ID: 111252)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006082733627408743
    2. 'dp' → logprob: -5.256082534790039
    3. ' =' → logprob: -8.256082534790039
    4. ' dp' → logprob: -8.506082534790039
    5. '```' → logprob: -8.506082534790039
    6. '(dp' → logprob: -9.631082534790039
    7. '	dp' → logprob: -10.006082534790039
    8. '=' → logprob: -10.131082534790039
    9. ' +=' → logprob: -12.131082534790039
    10. '``' → logprob: -12.131082534790039

Token 2231: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3306253254413605
    2. 'dp' → logprob: -1.330625295639038
    3. ' dp' → logprob: -4.830625534057617
    4. '=' → logprob: -5.705625534057617
    5. ' =' → logprob: -5.705625534057617
    6. '```' → logprob: -6.830625534057617
    7. '(dp' → logprob: -8.080625534057617
    8. '``' → logprob: -8.205625534057617
    9. ' +=' → logprob: -8.455625534057617
    10. '
' → logprob: -8.830625534057617

Token 2232: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5783219933509827
    2. 'dp' → logprob: -0.8283219933509827
    3. ' dp' → logprob: -6.078321933746338
    4. '	dp' → logprob: -10.203322410583496
    5. '```' → logprob: -10.203322410583496
    6. '
' → logprob: -12.328322410583496
    7. '(dp' → logprob: -12.328322410583496
    8. '``' → logprob: -13.578322410583496
    9. '       ' → logprob: -14.328322410583496
    10. '    
' → logprob: -14.453322410583496

Token 2233: ' la' (ID: 557)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.040014564990997314
    2. 'dp' → logprob: -3.5400145053863525
    3. '   ' → logprob: -4.915014743804932
    4. '(' → logprob: -6.040014743804932
    5. ' dp' → logprob: -9.415014266967773
    6. '=' → logprob: -9.915014266967773
    7. ' ' → logprob: -9.915014266967773
    8. '[
' → logprob: -10.165014266967773
    9. '(dp' → logprob: -10.165014266967773
    10. '```' → logprob: -10.290014266967773

Token 2234: ' même' (ID: 9679)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.4213646352291107
    2. 'dp' → logprob: -1.296364665031433
    3. '   ' → logprob: -3.0463645458221436
    4. ' dp' → logprob: -5.296364784240723
    5. '(dp' → logprob: -5.796364784240723
    6. '       ' → logprob: -5.921364784240723
    7. ' (
' → logprob: -6.296364784240723
    8. '(' → logprob: -6.421364784240723
    9. 'else' → logprob: -6.796364784240723
    10. 'max' → logprob: -6.921364784240723

Token 2235: ' logique' (ID: 115350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.503100574016571
    2. '(
' → logprob: -1.3781006336212158
    3. '(dp' → logprob: -2.503100633621216
    4. '```' → logprob: -3.878100633621216
    5. '
' → logprob: -4.378100395202637
    6. '   ' → logprob: -5.253100395202637
    7. ' dp' → logprob: -5.253100395202637
    8. 'indent' → logprob: -5.878100395202637
    9. '(' → logprob: -6.003100395202637
    10. '``' → logprob: -6.128100395202637

Token 2236: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.44290345907211304
    2. '   ' → logprob: -1.0679035186767578
    3. '=' → logprob: -4.942903518676758
    4. ' =' → logprob: -6.192903518676758
    5. ' dp' → logprob: -6.192903518676758
    6. '```' → logprob: -6.692903518676758
    7. '(dp' → logprob: -7.817903518676758
    8. '=
' → logprob: -7.817903518676758
    9. '+=' → logprob: -8.942903518676758
    10. '	dp' → logprob: -8.942903518676758

Token 2237: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06305527687072754
    2. '   ' → logprob: -2.8130552768707275
    3. '```' → logprob: -6.938055038452148
    4. ' dp' → logprob: -9.563055038452148
    5. '``' → logprob: -10.313055038452148
    6. '	dp' → logprob: -12.063055038452148
    7. '(dp' → logprob: -12.563055038452148
    8. '_dp' → logprob: -13.563055038452148
    9. '[
' → logprob: -14.938055038452148
    10. '\' → logprob: -15.188055038452148

Token 2238: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.25286832451820374
    2. '   ' → logprob: -1.5028682947158813
    3. ' dp' → logprob: -7.127868175506592
    4. '```' → logprob: -9.12786865234375
    5. '``' → logprob: -11.25286865234375
    6. '	dp' → logprob: -11.87786865234375
    7. '(dp' → logprob: -12.62786865234375
    8. '_dp' → logprob: -13.75286865234375
    9. '
' → logprob: -13.87786865234375
    10. '       ' → logprob: -14.50286865234375

Token 2239: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.5
    3. ' ' → logprob: -18.0
    4. '1' → logprob: -18.25
    5. '[i' → logprob: -18.5
    6. '[' → logprob: -18.625
    7. '   ' → logprob: -19.0
    8. 'i' → logprob: -19.375
    9. 'o' → logprob: -19.5
    10. '۰' → logprob: -19.5

Token 2240: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.25
    3. '```' → logprob: -16.375
    4. '   ' → logprob: -16.625
    5. '[I' → logprob: -17.625
    6. 'i' → logprob: -17.75
    7. ' [' → logprob: -17.75
    8. '
' → logprob: -19.125
    9. '[int' → logprob: -19.75
    10. '`' → logprob: -20.25

Token 2241: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -3.893480243277736e-05
    2. '[' → logprob: -10.750039100646973
    3. '   ' → logprob: -11.750039100646973
    4. ']' → logprob: -12.000039100646973
    5. ' ][' → logprob: -12.875039100646973
    6. '	' → logprob: -15.500039100646973
    7. '       ' → logprob: -15.625039100646973
    8. ']][' → logprob: -16.750038146972656
    9. '>[' → logprob: -16.875038146972656
    10. '```' → logprob: -16.875038146972656

Token 2242: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.011408189311623573
    2. '(
' → logprob: -4.51140832901001
    3. '(' → logprob: -8.136407852172852
    4. '
' → logprob: -10.261407852172852
    5. '2' → logprob: -10.886407852172852
    6. '0' → logprob: -11.886407852172852
    7. '   ' → logprob: -12.886407852172852
    8. ']' → logprob: -13.136407852172852
    9. ' ' → logprob: -13.761407852172852
    10. ' (
' → logprob: -14.761407852172852

Token 2243: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00036906293826177716
    2. ']=' → logprob: -8.00036907196045
    3. '=' → logprob: -10.50036907196045
    4. '   ' → logprob: -13.00036907196045
    5. ' ]' → logprob: -13.12536907196045
    6. ']+=' → logprob: -13.75036907196045
    7. ')' → logprob: -14.75036907196045
    8. ']
' → logprob: -15.87536907196045
    9. '
' → logprob: -16.125368118286133
    10. ']=(' → logprob: -16.750368118286133

Token 2244: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007170335855334997
    2. ' =' → logprob: -5.2571702003479
    3. '+=' → logprob: -6.2571702003479
    4. ' +=' → logprob: -11.007170677185059
    5. '+' → logprob: -14.382170677185059
    6. '=(' → logprob: -14.382170677185059
    7. '+=(' → logprob: -16.382169723510742
    8. '=
' → logprob: -17.132169723510742
    9. '   ' → logprob: -17.132169723510742
    10. '(' → logprob: -18.132169723510742

Token 2245: ' (
' (ID: 4112)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.47591450810432434
    2. 'dp' → logprob: -0.975914478302002
    3. '(' → logprob: -7.350914478302002
    4. '   ' → logprob: -7.475914478302002
    5. '(dp' → logprob: -7.975914478302002
    6. '(
' → logprob: -8.72591495513916
    7. '       ' → logprob: -9.35091495513916
    8. ' dp' → logprob: -10.85091495513916
    9. '	dp' → logprob: -11.97591495513916
    10. '0' → logprob: -13.35091495513916

Token 2246: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10053703188896179
    2. '       ' → logprob: -2.350537061691284
    3. '   ' → logprob: -8.100537300109863
    4. ' dp' → logprob: -11.100537300109863
    5. '(dp' → logprob: -12.225537300109863
    6. '	dp' → logprob: -12.975537300109863
    7. '(
' → logprob: -13.225537300109863
    8. '      ' → logprob: -14.100537300109863
    9. '           ' → logprob: -14.225537300109863
    10. '     ' → logprob: -14.350537300109863

Token 2247: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -1.5048530030981055e-06
    2. ' dp' → logprob: -13.750001907348633
    3. '(dp' → logprob: -15.500001907348633
    4. '       ' → logprob: -16.250001907348633
    5. '   ' → logprob: -17.500001907348633
    6. '	dp' → logprob: -20.250001907348633
    7. '(
' → logprob: -20.750001907348633
    8. '
' → logprob: -21.250001907348633
    9. '           ' → logprob: -21.625001907348633
    10. '      ' → logprob: -22.125001907348633

Token 2248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010998018842656165
    2. '0' → logprob: -9.125109672546387
    3. '[i' → logprob: -14.000109672546387
    4. '```' → logprob: -15.875109672546387
    5. 'i' → logprob: -17.250110626220703
    6. '１' → logprob: -17.875110626220703
    7. '
' → logprob: -18.250110626220703
    8. '[' → logprob: -18.375110626220703
    9. ' ' → logprob: -18.500110626220703
    10. '   ' → logprob: -18.750110626220703

Token 2249: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. 'i' → logprob: -14.375000953674316
    3. '```' → logprob: -14.875000953674316
    4. '[' → logprob: -15.625000953674316
    5. '   ' → logprob: -17.375001907348633
    6. '[int' → logprob: -18.375001907348633
    7. '[I' → logprob: -18.375001907348633
    8. '[j' → logprob: -18.500001907348633
    9. '...' → logprob: -18.750001907348633
    10. '(i' → logprob: -18.875001907348633

Token 2250: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000575432030018419
    2. '[i' → logprob: -7.500575542449951
    3. '   ' → logprob: -11.625575065612793
    4. 'i' → logprob: -12.125575065612793
    5. '[' → logprob: -12.625575065612793
    6. ' -' → logprob: -12.875575065612793
    7. '```' → logprob: -14.625575065612793
    8. '[-' → logprob: -14.750575065612793
    9. '-i' → logprob: -14.750575065612793
    10. '][' → logprob: -15.250575065612793

Token 2251: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3158392906188965
    2. '1' → logprob: -1.4408392906188965
    3. 'i' → logprob: -3.5658392906188965
    4. '[' → logprob: -5.8158392906188965
    5. '```' → logprob: -7.0658392906188965
    6. 'prev' → logprob: -7.5658392906188965
    7. '[i' → logprob: -7.8158392906188965
    8. '#' → logprob: -8.440839767456055
    9. '...' → logprob: -8.565839767456055
    10. '0' → logprob: -8.690839767456055

Token 2252: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0017641937592998147
    2. '[' → logprob: -6.626764297485352
    3. '[i' → logprob: -8.126764297485352
    4. '   ' → logprob: -10.376764297485352
    5. ']' → logprob: -10.501764297485352
    6. '       ' → logprob: -10.501764297485352
    7. '           ' → logprob: -11.001764297485352
    8. ' ][' → logprob: -11.501764297485352
    9. ')[' → logprob: -11.626764297485352
    10. '>[' → logprob: -12.376764297485352

Token 2253: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -14.875
    3. '3' → logprob: -17.875
    4. ' ' → logprob: -17.875
    5. '   ' → logprob: -18.0
    6. '
' → logprob: -18.625
    7. '[' → logprob: -19.375
    8. '(' → logprob: -19.875
    9. '  ' → logprob: -20.125
    10. '２' → logprob: -20.625

Token 2254: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09347046166658401
    2. ' *' → logprob: -2.718470573425293
    3. ']' → logprob: -3.968470573425293
    4. ')' → logprob: -5.968470573425293
    5. ']*' → logprob: -7.468470573425293
    6. '*[' → logprob: -7.468470573425293
    7. '*(' → logprob: -8.718470573425293
    8. ')*' → logprob: -8.718470573425293
    9. '[' → logprob: -9.093470573425293
    10. '   ' → logprob: -9.218470573425293

Token 2255: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10103228688240051
    2. ' *' → logprob: -2.351032257080078
    3. '*(' → logprob: -7.101032257080078
    4. '   ' → logprob: -15.476032257080078
    5. ' ' → logprob: -15.476032257080078
    6. '**' → logprob: -15.601032257080078
    7. '*[' → logprob: -15.726032257080078
    8. '*
' → logprob: -15.976032257080078
    9. ' ' → logprob: -16.351032257080078
    10. ' *(' → logprob: -17.101032257080078

Token 2256: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -5.3120038501219824e-05
    2. ' (' → logprob: -10.125053405761719
    3. 'max' → logprob: -11.375053405761719
    4. '(min' → logprob: -14.000053405761719
    5. '(' → logprob: -15.125053405761719
    6. '[max' → logprob: -16.25005340576172
    7. ' max' → logprob: -16.62505340576172
    8. '   ' → logprob: -17.25005340576172
    9. '(MAX' → logprob: -17.25005340576172
    10. '(m' → logprob: -18.00005340576172

Token 2257: 'max' (ID: 3228)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.25201377272605896
    2. 'max' → logprob: -1.5020138025283813
    3. ' max' → logprob: -9.50201416015625
    4. ' (' → logprob: -12.37701416015625
    5. '[max' → logprob: -12.50201416015625
    6. '=max' → logprob: -14.62701416015625
    7. '	max' → logprob: -15.00201416015625
    8. '(min' → logprob: -15.25201416015625
    9. ',max' → logprob: -15.37701416015625
    10. '(' → logprob: -15.62701416015625

Token 2258: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9027791495318525e-05
    2. '(
' → logprob: -11.625019073486328
    3. '0' → logprob: -11.875019073486328
    4. ' (' → logprob: -12.750019073486328
    5. '(max' → logprob: -16.000019073486328
    6. '((' → logprob: -17.750019073486328
    7. '(

' → logprob: -18.375019073486328
    8. '   ' → logprob: -18.375019073486328
    9. 'max' → logprob: -18.625019073486328
    10. '(
' → logprob: -19.250019073486328

Token 2259: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '(' → logprob: -15.625000953674316
    4. '   ' → logprob: -17.500001907348633
    5. '```' → logprob: -20.250001907348633
    6. '       ' → logprob: -20.375001907348633
    7. '1' → logprob: -20.500001907348633
    8. '
' → logprob: -20.750001907348633
    9. '  ' → logprob: -20.875001907348633
    10. '           ' → logprob: -21.250001907348633

Token 2260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029708960209973156
    2. ',np' → logprob: -8.250297546386719
    3. ',
' → logprob: -10.625297546386719
    4. ' ,' → logprob: -12.125297546386719
    5. ',n' → logprob: -12.500297546386719
    6. '(np' → logprob: -14.250297546386719
    7. '(' → logprob: -14.375297546386719
    8. ',num' → logprob: -15.500297546386719
    9. 'np' → logprob: -15.625297546386719
    10. ',max' → logprob: -16.12529754638672

Token 2261: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.0009115827269852161
    2. ' np' → logprob: -7.000911712646484
    3. '(np' → logprob: -17.375911712646484
    4. '   ' → logprob: -17.625911712646484
    5. '_np' → logprob: -18.250911712646484
    6. '[np' → logprob: -18.875911712646484
    7. '  ' → logprob: -19.375911712646484
    8. '    ' → logprob: -19.625911712646484
    9. 'n' → logprob: -19.625911712646484
    10. '     ' → logprob: -19.875911712646484

Token 2262: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.56102097814437e-05
    2. ' -' → logprob: -10.000045776367188
    3. '-
' → logprob: -16.500045776367188
    4. '[' → logprob: -18.625045776367188
    5. '   ' → logprob: -19.000045776367188
    6. '```' → logprob: -19.250045776367188
    7. ')' → logprob: -20.250045776367188
    8. ')-' → logprob: -20.250045776367188
    9. '−' → logprob: -20.375045776367188
    10. '-)' → logprob: -20.500045776367188

Token 2263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012821101699955761
    2. '-' → logprob: -9.000127792358398
    3. ' ' → logprob: -13.625127792358398
    4. '   ' → logprob: -13.625127792358398
    5. '```' → logprob: -13.750127792358398
    6. '       ' → logprob: -15.375127792358398
    7. '           ' → logprob: -15.750127792358398
    8. '
' → logprob: -16.0001277923584
    9. '(' → logprob: -16.2501277923584
    10. ' -' → logprob: -16.5001277923584

Token 2264: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011558275582501665
    2. ')+' → logprob: -9.250115394592285
    3. '   ' → logprob: -11.500115394592285
    4. ' )' → logprob: -12.125115394592285
    5. '       ' → logprob: -13.000115394592285
    6. '    ' → logprob: -15.500115394592285
    7. ')
' → logprob: -15.500115394592285
    8. '      ' → logprob: -15.625115394592285
    9. '）' → logprob: -16.0001163482666
    10. '))' → logprob: -16.0001163482666

Token 2265: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5770120620727539
    2. ' +' → logprob: -0.8270120620727539
    3. '+
' → logprob: -7.327012062072754
    4. ' +
' → logprob: -8.077012062072754
    5. '       ' → logprob: -9.327012062072754
    6. '   ' → logprob: -11.452012062072754
    7. '        ' → logprob: -13.827012062072754
    8. '    ' → logprob: -13.827012062072754
    9. ' +
' → logprob: -14.577012062072754
    10. ' ' → logprob: -14.827012062072754

Token 2266: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16211287677288055
    2. '       ' → logprob: -1.912112832069397
    3. ' dp' → logprob: -6.287112712860107
    4. '(dp' → logprob: -10.787113189697266
    5. '	dp' → logprob: -13.162113189697266
    6. '```' → logprob: -14.037113189697266
    7. '(
' → logprob: -14.037113189697266
    8. '   ' → logprob: -14.537113189697266
    9. '_dp' → logprob: -14.662113189697266
    10. '      ' → logprob: -15.037113189697266

Token 2267: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0002656271681189537
    2. '       ' → logprob: -8.250266075134277
    3. ' dp' → logprob: -12.500266075134277
    4. '(dp' → logprob: -14.750266075134277
    5. '	dp' → logprob: -16.87526512145996
    6. '   ' → logprob: -17.62526512145996
    7. '```' → logprob: -17.62526512145996
    8. '      ' → logprob: -18.25026512145996
    9. '\
' → logprob: -18.37526512145996
    10. '
' → logprob: -18.87526512145996

Token 2268: ' Pr' (ID: 2284)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0002967320033349097
    2. '       ' → logprob: -8.250296592712402
    3. ' dp' → logprob: -10.250296592712402
    4. '(dp' → logprob: -16.37529754638672
    5. '   ' → logprob: -17.00029754638672
    6. '	dp' → logprob: -18.25029754638672
    7. '      ' → logprob: -18.50029754638672
    8. '           ' → logprob: -18.75029754638672
    9. '
' → logprob: -19.37529754638672
    10. '\
' → logprob: -20.00029754638672

Token 2269: 'end' (ID: 419)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005344282370060682
    2. '       ' → logprob: -6.005344390869141
    3. '0' → logprob: -6.755344390869141
    4. '   ' → logprob: -6.755344390869141
    5. '(dp' → logprob: -8.38034439086914
    6. ' dp' → logprob: -8.50534439086914
    7. '           ' → logprob: -11.25534439086914
    8. '     ' → logprob: -11.25534439086914
    9. '```' → logprob: -11.38034439086914
    10. '        ' → logprob: -11.63034439086914

Token 2270: ' toutes' (ID: 17502)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0046835956163704395
    2. '       ' → logprob: -5.754683494567871
    3. ' dp' → logprob: -6.504683494567871
    4. '(dp' → logprob: -12.379683494567871
    5. '   ' → logprob: -13.004683494567871
    6. '	dp' → logprob: -14.504683494567871
    7. '           ' → logprob: -15.129683494567871
    8. '      ' → logprob: -15.129683494567871
    9. '     ' → logprob: -16.129684448242188
    10. '```' → logprob: -16.129684448242188

Token 2271: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027928881347179413
    2. '(
' → logprob: -3.7779288291931152
    3. ')' → logprob: -6.277928829193115
    4. 'digits' → logprob: -6.777928829193115
    5. ' (' → logprob: -7.652928829193115
    6. '       ' → logprob: -8.277929306030273
    7. 'les' → logprob: -8.652929306030273
    8. '(dp' → logprob: -9.027929306030273
    9. '[' → logprob: -9.527929306030273
    10. '(d' → logprob: -9.777929306030273

Token 2272: ' possibilités' (ID: 119756)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.045415472239255905
    2. 'digits' → logprob: -3.5454154014587402
    3. 'dp' → logprob: -5.17041540145874
    4. '9' → logprob: -5.54541540145874
    5. ' chiffres' → logprob: -5.79541540145874
    6. '[' → logprob: -7.17041540145874
    7. '1' → logprob: -8.045415878295898
    8. 'c' → logprob: -8.420415878295898
    9. '(ch' → logprob: -8.545415878295898
    10. '[ch' → logprob: -8.920415878295898

Token 2273: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2390782833099365
    2. '(
' → logprob: -1.2390782833099365
    3. 'dp' → logprob: -1.3640782833099365
    4. '(dp' → logprob: -1.9890782833099365
    5. '+' → logprob: -4.614078521728516
    6. '(' → logprob: -5.489078521728516
    7. '   ' → logprob: -5.614078521728516
    8. '*' → logprob: -6.364078521728516
    9. '+
' → logprob: -6.364078521728516
    10. '           ' → logprob: -6.739078521728516

Token 2274: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003810168942436576
    2. ' dp' → logprob: -6.378810405731201
    3. '9' → logprob: -6.503810405731201
    4. 'ch' → logprob: -8.253809928894043
    5. 'digits' → logprob: -9.253809928894043
    6. '(dp' → logprob: -9.628809928894043
    7. '1' → logprob: -9.753809928894043
    8. ' ' → logprob: -10.503809928894043
    9. '   ' → logprob: -11.128809928894043
    10. '3' → logprob: -11.253809928894043

Token 2275: ' branche' (ID: 101958)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0022185342386364937
    2. ' dp' → logprob: -6.377218723297119
    3. '   ' → logprob: -8.502218246459961
    4. '9' → logprob: -9.377218246459961
    5. '0' → logprob: -9.877218246459961
    6. ' ' → logprob: -10.627218246459961
    7. '```' → logprob: -10.752218246459961
    8. '       ' → logprob: -11.377218246459961
    9. 'digits' → logprob: -11.502218246459961
    10. '  ' → logprob: -11.627218246459961

Token 2276: ' ég' (ID: 33150)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01698940619826317
    2. ' dp' → logprob: -4.391989231109619
    3. '9' → logprob: -6.641989231109619
    4. '   ' → logprob: -6.766989231109619
    5. '       ' → logprob: -6.891989231109619
    6. '(dp' → logprob: -7.641989231109619
    7. '(' → logprob: -8.891989707946777
    8. '(
' → logprob: -8.891989707946777
    9. ' ' → logprob: -9.641989707946777
    10. '      ' → logprob: -10.641989707946777

Token 2277: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.04795409366488457
    2. 'aux' → logprob: -4.422954082489014
    3. 'ales' → logprob: -4.422954082489014
    4. '   ' → logprob: -5.422954082489014
    5. '       ' → logprob: -5.547954082489014
    6. '0' → logprob: -5.922954082489014
    7. 'i' → logprob: -6.172954082489014
    8. '1' → logprob: -6.547954082489014
    9. 'alité' → logprob: -6.922954082489014
    10. 'al' → logprob: -7.172954082489014

Token 2278: ' avant' (ID: 13339)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7772122025489807
    2. '+' → logprob: -1.152212142944336
    3. 'dp' → logprob: -2.527212142944336
    4. '*' → logprob: -2.777212142944336
    5. ' +' → logprob: -3.152212142944336
    6. '+
' → logprob: -4.027212142944336
    7. '(dp' → logprob: -5.652212142944336
    8. '   ' → logprob: -5.777212142944336
    9. '(
' → logprob: -5.777212142944336
    10. ' dp' → logprob: -5.902212142944336

Token 2279: ' dernière' (ID: 39497)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2665904462337494
    2. '       ' → logprob: -1.5165904760360718
    3. ' dp' → logprob: -4.516590595245361
    4. '   ' → logprob: -6.016590595245361
    5. '(dp' → logprob: -7.766590595245361
    6. '      ' → logprob: -8.016590118408203
    7. '```' → logprob: -9.641590118408203
    8. '        ' → logprob: -9.766590118408203
    9. '(
' → logprob: -10.016590118408203
    10. '    ' → logprob: -10.141590118408203

Token 2280: ' non' (ID: 2893)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6447859406471252
    2. '   ' → logprob: -2.1447858810424805
    3. '*' → logprob: -2.3947858810424805
    4. ' dp' → logprob: -2.3947858810424805
    5. ')' → logprob: -2.6447858810424805
    6. '+' → logprob: -2.8947858810424805
    7. ' +' → logprob: -4.1447858810424805
    8. ' *' → logprob: -4.5197858810424805
    9. '```' → logprob: -5.2697858810424805
    10. '(dp' → logprob: -5.8947858810424805

Token 2281: '-zero' (ID: 79097)
  Prédit: '-zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-zero' → logprob: -0.3354853689670563
    2. '-' → logprob: -1.3354853391647339
    3. '-z' → logprob: -4.335485458374023
    4. 'zero' → logprob: -5.835485458374023
    5. '0' → logprob: -5.960485458374023
    6. '_zero' → logprob: -6.460485458374023
    7. '_' → logprob: -7.960485458374023
    8. '   ' → logprob: -8.210485458374023
    9. '```' → logprob: -8.210485458374023
    10. '-)' → logprob: -8.585485458374023

Token 2282: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6784248948097229
    2. ' +' → logprob: -1.6784248352050781
    3. '+
' → logprob: -1.8034248352050781
    4. '       ' → logprob: -2.053424835205078
    5. '```' → logprob: -5.678424835205078
    6. '   ' → logprob: -5.928424835205078
    7. ' +
' → logprob: -6.053424835205078
    8. '*' → logprob: -6.303424835205078
    9. 'dp' → logprob: -6.678424835205078
    10. '``' → logprob: -7.553424835205078

Token 2283: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.25227418541908264
    2. '       ' → logprob: -1.5022741556167603
    3. ' dp' → logprob: -8.127274513244629
    4. '```' → logprob: -10.627274513244629
    5. '``' → logprob: -11.752274513244629
    6. '           ' → logprob: -12.002274513244629
    7. '   ' → logprob: -12.127274513244629
    8. '+' → logprob: -13.252274513244629
    9. '(dp' → logprob: -13.752274513244629
    10. '\
' → logprob: -13.877274513244629

Token 2284: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -2.165027217415627e-05
    2. '       ' → logprob: -11.000021934509277
    3. ' dp' → logprob: -12.250021934509277
    4. '   ' → logprob: -16.87502098083496
    5. '(dp' → logprob: -17.25002098083496
    6. '           ' → logprob: -17.87502098083496
    7. '	dp' → logprob: -19.87502098083496
    8. '      ' → logprob: -20.12502098083496
    9. '```' → logprob: -20.12502098083496
    10. '``' → logprob: -20.75002098083496

Token 2285: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '０' → logprob: -19.875
    4. 'o' → logprob: -20.25
    5. '۰' → logprob: -20.25
    6. '```' → logprob: -20.5
    7. '[' → logprob: -20.625
    8. '1' → logprob: -20.625
    9. '   ' → logprob: -20.75
    10. '_' → logprob: -21.0

Token 2286: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. 'i' → logprob: -15.500000953674316
    3. '[' → logprob: -15.875000953674316
    4. '```' → logprob: -16.625
    5. '   ' → logprob: -17.0
    6. ' [' → logprob: -18.25
    7. '       ' → logprob: -18.75
    8. '[I' → logprob: -18.875
    9. '
' → logprob: -19.5
    10. '[j' → logprob: -20.0

Token 2287: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3492254316806793
    2. '-' → logprob: -1.224225401878357
    3. 'i' → logprob: -8.599225044250488
    4. '[' → logprob: -8.974225044250488
    5. '][' → logprob: -8.974225044250488
    6. '```' → logprob: -8.974225044250488
    7. '   ' → logprob: -9.349225044250488
    8. '-i' → logprob: -10.474225044250488
    9. ' -' → logprob: -10.724225044250488
    10. '-[' → logprob: -11.099225044250488

Token 2288: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2799800634384155
    2. '1' → logprob: -1.6549800634384155
    3. '-' → logprob: -3.029980182647705
    4. '[i' → logprob: -5.654980182647705
    5. '   ' → logprob: -7.279980182647705
    6. '[' → logprob: -7.904980182647705
    7. '```' → logprob: -9.279979705810547
    8. '       ' → logprob: -10.279979705810547
    9. ' i' → logprob: -10.654979705810547
    10. '][' → logprob: -10.654979705810547

Token 2289: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0038646818138659
    2. '[' → logprob: -5.628864765167236
    3. '       ' → logprob: -9.628864288330078
    4. '   ' → logprob: -10.003864288330078
    5. ' ][' → logprob: -10.128864288330078
    6. '           ' → logprob: -10.253864288330078
    7. ']' → logprob: -11.128864288330078
    8. '>[' → logprob: -11.253864288330078
    9. '[i' → logprob: -11.628864288330078
    10. ')[' → logprob: -11.628864288330078

Token 2290: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.029752103611826897
    2. '2' → logprob: -3.529752016067505
    3. '1' → logprob: -14.529751777648926
    4. '[' → logprob: -14.654751777648926
    5. '
' → logprob: -15.154751777648926
    6. ' ' → logprob: -15.529751777648926
    7. '   ' → logprob: -15.779751777648926
    8. '0' → logprob: -18.029752731323242
    9. '```' → logprob: -18.092252731323242
    10. '	' → logprob: -18.467252731323242

Token 2291: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.26113924384117126
    2. ' *' → logprob: -1.5111392736434937
    3. ']' → logprob: -5.261139392852783
    4. ')' → logprob: -5.636139392852783
    5. ']*' → logprob: -8.886138916015625
    6. '[' → logprob: -9.386138916015625
    7. ')*' → logprob: -9.386138916015625
    8. '   ' → logprob: -10.011138916015625
    9. ' ' → logprob: -11.261138916015625
    10. '```' → logprob: -11.636138916015625

Token 2292: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5759592652320862
    2. '*' → logprob: -0.8259592652320862
    3. ')' → logprob: -11.575959205627441
    4. '[' → logprob: -12.700959205627441
    5. ' ' → logprob: -12.950959205627441
    6. '   ' → logprob: -13.825959205627441
    7. '**' → logprob: -14.075959205627441
    8. ')*' → logprob: -14.200959205627441
    9. ' ' → logprob: -14.200959205627441
    10. '*[' → logprob: -14.450959205627441

Token 2293: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. '10' → logprob: -15.500045776367188
    4. '   ' → logprob: -17.875045776367188
    5. '９' → logprob: -18.500045776367188
    6. '```' → logprob: -19.000045776367188
    7. '
' → logprob: -19.187545776367188
    8. '  ' → logprob: -19.625045776367188
    9. '(' → logprob: -19.812545776367188
    10. '0' → logprob: -19.937545776367188

Token 2294: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.0206720617134124e-05
    2. '10' → logprob: -11.62501049041748
    3. ' ' → logprob: -13.62501049041748
    4. '```' → logprob: -17.625009536743164
    5. '９' → logprob: -17.750009536743164
    6. '(' → logprob: -18.250009536743164
    7. '0' → logprob: -18.437509536743164
    8. '1' → logprob: -18.500009536743164
    9. '
' → logprob: -18.625009536743164
    10. '   ' → logprob: -19.437509536743164

Token 2295: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6932239532470703
    2. ' +' → logprob: -0.6932239532470703
    3. '+
' → logprob: -10.06822395324707
    4. ' +
' → logprob: -10.44322395324707
    5. '   ' → logprob: -12.69322395324707
    6. '       ' → logprob: -14.69322395324707
    7. '    ' → logprob: -14.81822395324707
    8. ' +
' → logprob: -15.06822395324707
    9. ' ' → logprob: -15.44322395324707
    10. '        ' → logprob: -15.56822395324707

Token 2296: '              ' (ID: 4442)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08609369397163391
    2. '       ' → logprob: -2.5860936641693115
    3. ' dp' → logprob: -5.086093902587891
    4. '(dp' → logprob: -6.961093902587891
    5. '   ' → logprob: -11.21109390258789
    6. '(' → logprob: -11.46109390258789
    7. '	dp' → logprob: -11.96109390258789
    8. '0' → logprob: -12.08609390258789
    9. '+' → logprob: -12.33609390258789
    10. ' (' → logprob: -13.58609390258789

Token 2297: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.38824138045310974
    2. '       ' → logprob: -1.1382414102554321
    3. ' dp' → logprob: -6.638241291046143
    4. '   ' → logprob: -10.1382417678833
    5. '(dp' → logprob: -11.5132417678833
    6. '	dp' → logprob: -11.8882417678833
    7. '
' → logprob: -13.8882417678833
    8. '           ' → logprob: -14.2632417678833
    9. '+' → logprob: -14.3882417678833
    10. '      ' → logprob: -14.6382417678833

Token 2298: ' Aj' (ID: 28294)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009225779213011265
    2. '       ' → logprob: -5.009225845336914
    3. '(dp' → logprob: -6.634225845336914
    4. ' dp' → logprob: -7.009225845336914
    5. '   ' → logprob: -8.509225845336914
    6. '(' → logprob: -9.634225845336914
    7. '0' → logprob: -11.634225845336914
    8. ' (' → logprob: -12.384225845336914
    9. '           ' → logprob: -12.759225845336914
    10. '(
' → logprob: -13.259225845336914

Token 2299: 'oute' (ID: 3509)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03112725354731083
    2. '   ' → logprob: -4.406127452850342
    3. '       ' → logprob: -5.156127452850342
    4. '0' → logprob: -5.281127452850342
    5. '     ' → logprob: -7.281127452850342
    6. 'j' → logprob: -7.281127452850342
    7. '(dp' → logprob: -7.281127452850342
    8. 'dd' → logprob: -7.406127452850342
    9. '      ' → logprob: -7.531127452850342
    10. '+' → logprob: -7.531127452850342

Token 2300: ' n' (ID: 297)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.038530133664608
    2. ' dp' → logprob: -4.288530349731445
    3. '(dp' → logprob: -5.038530349731445
    4. '(' → logprob: -5.163530349731445
    5. '0' → logprob: -5.538530349731445
    6. '   ' → logprob: -5.538530349731445
    7. '       ' → logprob: -6.538530349731445
    8. '1' → logprob: -7.038530349731445
    9. ' (' → logprob: -7.413530349731445
    10. '(
' → logprob: -7.788530349731445

Token 2301: ''importe' (ID: 103032)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.023852931335568428
    2. ''importe' → logprob: -4.773852825164795
    3. '[' → logprob: -5.398852825164795
    4. '   ' → logprob: -6.023852825164795
    5. '       ' → logprob: -6.148852825164795
    6. '0' → logprob: -6.523852825164795
    7. '[i' → logprob: -6.773852825164795
    8. ''on' → logprob: -7.398852825164795
    9. '**' → logprob: -8.273853302001953
    10. '*' → logprob: -8.523853302001953

Token 2302: ' quel' (ID: 10613)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16731369495391846
    2. 'un' → logprob: -2.667313575744629
    3. ' un' → logprob: -3.167313575744629
    4. '```' → logprob: -4.667313575744629
    5. '   ' → logprob: -4.792313575744629
    6. '           ' → logprob: -5.167313575744629
    7. '*' → logprob: -5.792313575744629
    8. '(' → logprob: -6.292313575744629
    9. '(dp' → logprob: -6.417313575744629
    10. '     ' → logprob: -6.417313575744629

Token 2303: ' chiffre' (ID: 107420)
  Prédit: ' chiffre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chiffre' → logprob: -0.5864521861076355
    2. ' digit' → logprob: -2.2114522457122803
    3. 'digit' → logprob: -2.3364522457122803
    4. ' (' → logprob: -2.9614522457122803
    5. 'ch' → logprob: -3.0864522457122803
    6. 'dp' → logprob: -3.3364522457122803
    7. ' dp' → logprob: -3.4614522457122803
    8. '9' → logprob: -3.9614522457122803
    9. '(' → logprob: -4.461452007293701
    10. '(ch' → logprob: -4.461452007293701

Token 2304: ' non' (ID: 2893)
  Prédit: ' non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' non' → logprob: -0.04975653439760208
    2. 'non' → logprob: -3.0497565269470215
    3. '_non' → logprob: -6.7997565269470215
    4. '   ' → logprob: -10.54975700378418
    5. ' not' → logprob: -11.54975700378418
    6. 'nonnull' → logprob: -12.79975700378418
    7. '       ' → logprob: -12.92475700378418
    8. 'not' → logprob: -13.29975700378418
    9. ' ' → logprob: -13.29975700378418
    10. '非' → logprob: -13.42475700378418

Token 2305: '-z' (ID: 16826)
  Prédit: '-z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.06655887514352798
    2. '-zero' → logprob: -3.191558837890625
    3. '-' → logprob: -3.816558837890625
    4. '0' → logprob: -7.066558837890625
    5. ' zéro' → logprob: -9.191558837890625
    6. '-Z' → logprob: -9.316558837890625
    7. '   ' → logprob: -9.441558837890625
    8. ' -' → logprob: -9.941558837890625
    9. 'zero' → logprob: -10.441558837890625
    10. '```' → logprob: -11.191558837890625

Token 2306: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.031119519844651222
    2. '-z' → logprob: -4.031119346618652
    3. '0' → logprob: -5.406119346618652
    4. '-zero' → logprob: -6.156119346618652
    5. 'éros' → logprob: -6.281119346618652
    6. '-' → logprob: -6.656119346618652
    7. '```' → logprob: -7.656119346618652
    8. 'é' → logprob: -7.906119346618652
    9. 'ero' → logprob: -8.031119346618652
    10. 'z' → logprob: -8.031119346618652

Token 2307: ' à' (ID: 1221)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6663414239883423
    2. ' +' → logprob: -1.4163414239883423
    3. '       ' → logprob: -1.5413414239883423
    4. '+
' → logprob: -4.041341304779053
    5. ' +
' → logprob: -5.166341304779053
    6. '   ' → logprob: -5.291341304779053
    7. '```' → logprob: -8.291341781616211
    8. '           ' → logprob: -8.291341781616211
    9. ')' → logprob: -8.416341781616211
    10. 'dp' → logprob: -9.166341781616211

Token 2308: ' une' (ID: 2463)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07030529528856277
    2. ' dp' → logprob: -2.695305347442627
    3. '   ' → logprob: -8.320304870605469
    4. '(dp' → logprob: -9.570304870605469
    5. '	dp' → logprob: -10.570304870605469
    6. ' ' → logprob: -10.945304870605469
    7. '       ' → logprob: -12.320304870605469
    8. '  ' → logprob: -12.570304870605469
    9. '    ' → logprob: -13.945304870605469
    10. '     ' → logprob: -14.070304870605469

Token 2309: ' sé' (ID: 7462)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.05308283492922783
    2. 'dp' → logprob: -3.8030829429626465
    3. ' sé' → logprob: -4.1780829429626465
    4. 'sequence' → logprob: -4.5530829429626465
    5. 's' → logprob: -6.4280829429626465
    6. ' sequence' → logprob: -6.9280829429626465
    7. ' dp' → logprob: -8.303082466125488
    8. 'seq' → logprob: -8.428082466125488
    9. 'Sé' → logprob: -8.928082466125488
    10. 'x' → logprob: -9.178082466125488

Token 2310: 'quence' (ID: 6975)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1313856840133667
    2. '       ' → logprob: -3.2563858032226562
    3. '   ' → logprob: -3.5063858032226562
    4. '[i' → logprob: -4.006385803222656
    5. '-' → logprob: -4.381385803222656
    6. '_' → logprob: -5.506385803222656
    7. '     ' → logprob: -5.506385803222656
    8. '[' → logprob: -5.631385803222656
    9. '           ' → logprob: -6.006385803222656
    10. '        ' → logprob: -6.756385803222656

Token 2311: ' déjà' (ID: 21229)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.925506591796875
    2. 'dp' → logprob: -1.550506591796875
    3. '   ' → logprob: -1.800506591796875
    4. '0' → logprob: -1.800506591796875
    5. ' déjà' → logprob: -3.800506591796875
    6. '[i' → logprob: -4.550506591796875
    7. 'dé' → logprob: -5.300506591796875
    8. '           ' → logprob: -5.300506591796875
    9. '      ' → logprob: -5.675506591796875
    10. ' dp' → logprob: -5.675506591796875

Token 2312: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.0015375965740531683
    2. ' plus' → logprob: -6.501537799835205
    3. 'more' → logprob: -11.251537322998047
    4. '[' → logprob: -11.876537322998047
    5. '```' → logprob: -12.251537322998047
    6. 'sm' → logprob: -12.626537322998047
    7. '_plus' → logprob: -12.626537322998047
    8. ' smaller' → logprob: -14.126537322998047
    9. 'moins' → logprob: -14.126537322998047
    10. '+' → logprob: -14.251537322998047

Token 2313: ' petite' (ID: 28119)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.8128159642219543
    2. 'sm' → logprob: -0.9378159642219543
    3. 'pet' → logprob: -1.9378159046173096
    4. '0' → logprob: -5.062816143035889
    5. ' petite' → logprob: -5.312816143035889
    6. '```' → logprob: -6.187816143035889
    7. 'plus' → logprob: -6.312816143035889
    8. ' smaller' → logprob: -6.437816143035889
    9. '_small' → logprob: -6.437816143035889
    10. '[' → logprob: -7.312816143035889

Token 2314: ' avec' (ID: 3937)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7843471169471741
    2. '       ' → logprob: -1.0343470573425293
    3. '+
' → logprob: -2.2843470573425293
    4. ' +' → logprob: -2.6593470573425293
    5. '   ' → logprob: -4.659347057342529
    6. 'dp' → logprob: -5.909347057342529
    7. ' +
' → logprob: -6.159347057342529
    8. '```' → logprob: -6.534347057342529
    9. '``' → logprob: -9.409347534179688
    10. '      ' → logprob: -9.659347534179688

Token 2315: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0036047017201781273
    2. ' ' → logprob: -5.628604888916016
    3. '3' → logprob: -12.503604888916016
    4. '   ' → logprob: -14.378604888916016
    5. '  ' → logprob: -16.191104888916016
    6. '```' → logprob: -16.316104888916016
    7. '(' → logprob: -16.566104888916016
    8. ' ' → logprob: -16.816104888916016
    9. '1' → logprob: -17.003604888916016
    10. '	' → logprob: -17.066104888916016

Token 2316: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.125008583068848
    3. '3' → logprob: -12.750008583068848
    4. '   ' → logprob: -18.12500762939453
    5. '２' → logprob: -18.87500762939453
    6. '```' → logprob: -18.87500762939453
    7. 'dp' → logprob: -19.12500762939453
    8. '1' → logprob: -20.12500762939453
    9. '  ' → logprob: -20.37500762939453
    10. '(' → logprob: -20.68750762939453

Token 2317: ' chiffres' (ID: 105565)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6144302487373352
    2. ' chiffres' → logprob: -0.9894302487373352
    3. '[ch' → logprob: -3.1144301891326904
    4. 'ch' → logprob: -4.2394304275512695
    5. '```' → logprob: -4.6144304275512695
    6. '[i' → logprob: -4.9894304275512695
    7. ' [' → logprob: -5.4894304275512695
    8. ' chiffre' → logprob: -6.3644304275512695
    9. '][' → logprob: -6.7394304275512695
    10. '   ' → logprob: -6.7394304275512695

Token 2318: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.2747625410556793
    2. '[' → logprob: -2.7747626304626465
    3. '```' → logprob: -2.7747626304626465
    4. ' non' → logprob: -2.8997626304626465
    5. '   ' → logprob: -3.3997626304626465
    6. '0' → logprob: -4.7747626304626465
    7. '-' → logprob: -4.7747626304626465
    8. '       ' → logprob: -5.3997626304626465
    9. '_non' → logprob: -5.5247626304626465
    10. '``' → logprob: -7.3997626304626465

Token 2319: '-z' (ID: 16826)
  Prédit: '-z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.021365953609347343
    2. '0' → logprob: -4.396366119384766
    3. 'z' → logprob: -5.396366119384766
    4. '-zero' → logprob: -6.271366119384766
    5. '_z' → logprob: -7.396366119384766
    6. '-' → logprob: -7.396366119384766
    7. '```' → logprob: -8.146366119384766
    8. ' zéro' → logprob: -8.646366119384766
    9. 'zero' → logprob: -9.021366119384766
    10. '   ' → logprob: -9.146366119384766

Token 2320: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.0007942587835714221
    2. 'éros' → logprob: -7.750794410705566
    3. 'é' → logprob: -9.375794410705566
    4. 'éo' → logprob: -9.375794410705566
    5. 'ero' → logprob: -10.500794410705566
    6. '0' → logprob: -10.500794410705566
    7. 'ro' → logprob: -10.625794410705566
    8. '```' → logprob: -10.750794410705566
    9. ' zéro' → logprob: -11.125794410705566
    10. '_' → logprob: -11.625794410705566

Token 2321: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11199591308832169
    2. ' +' → logprob: -2.6119959354400635
    3. '       ' → logprob: -3.8619959354400635
    4. '+
' → logprob: -4.486995697021484
    5. ' +
' → logprob: -8.611995697021484
    6. '   ' → logprob: -9.736995697021484
    7. '```' → logprob: -10.361995697021484
    8. 'dp' → logprob: -12.736995697021484
    9. '``' → logprob: -12.861995697021484
    10. ' +
' → logprob: -13.111995697021484

Token 2322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028287841007113457
    2. 'dp' → logprob: -4.028287887573242
    3. '+' → logprob: -4.653287887573242
    4. ' +' → logprob: -8.403287887573242
    5. '+
' → logprob: -9.153287887573242
    6. ' dp' → logprob: -9.153287887573242
    7. '```' → logprob: -9.528287887573242
    8. '   ' → logprob: -10.528287887573242
    9. '``' → logprob: -11.653287887573242
    10. '           ' → logprob: -13.028287887573242

Token 2323: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.011137770488858223
    2. '       ' → logprob: -4.511137962341309
    3. ' dp' → logprob: -9.386137962341309
    4. '(dp' → logprob: -12.511137962341309
    5. '   ' → logprob: -13.511137962341309
    6. '	dp' → logprob: -14.261137962341309
    7. '```' → logprob: -15.886137962341309
    8. '+' → logprob: -16.386137008666992
    9. '``' → logprob: -17.011137008666992
    10. '      ' → logprob: -17.136137008666992

Token 2324: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.392202976712724e-06
    2. '1' → logprob: -13.250006675720215
    3. '_' → logprob: -13.375006675720215
    4. '[i' → logprob: -13.500006675720215
    5. '[' → logprob: -14.250006675720215
    6. '```' → logprob: -14.250006675720215
    7. 'o' → logprob: -15.750006675720215
    8. '   ' → logprob: -16.2500057220459
    9. ' ' → logprob: -16.8750057220459
    10. '``' → logprob: -17.1250057220459

Token 2325: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.273621405242011e-05
    2. '   ' → logprob: -10.625032424926758
    3. '```' → logprob: -12.125032424926758
    4. '[' → logprob: -13.125032424926758
    5. '``' → logprob: -15.375032424926758
    6. 'i' → logprob: -15.750032424926758
    7. '`' → logprob: -16.000032424926758
    8. '       ' → logprob: -16.500032424926758
    9. ' [' → logprob: -16.625032424926758
    10. ' ' → logprob: -16.875032424926758

Token 2326: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08744552731513977
    2. '[i' → logprob: -2.5874454975128174
    3. '][' → logprob: -4.9624457359313965
    4. 'i' → logprob: -6.8374457359313965
    5. '   ' → logprob: -8.587445259094238
    6. ' -' → logprob: -9.337445259094238
    7. '[' → logprob: -9.712445259094238
    8. '       ' → logprob: -10.212445259094238
    9. '```' → logprob: -10.587445259094238
    10. '-i' → logprob: -11.337445259094238

Token 2327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.047893986105918884
    2. 'i' → logprob: -3.17289400100708
    3. '-' → logprob: -5.54789400100708
    4. '[i' → logprob: -7.54789400100708
    5. '[' → logprob: -8.297893524169922
    6. '```' → logprob: -8.922893524169922
    7. '   ' → logprob: -10.297893524169922
    8. 'prev' → logprob: -11.047893524169922
    9. '][' → logprob: -11.922893524169922
    10. ' ' → logprob: -12.172893524169922

Token 2328: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004722157027572393
    2. '[' → logprob: -5.3797221183776855
    3. '[i' → logprob: -9.754722595214844
    4. '```' → logprob: -10.879722595214844
    5. '   ' → logprob: -12.004722595214844
    6. '>[' → logprob: -12.379722595214844
    7. '       ' → logprob: -12.629722595214844
    8. ']' → logprob: -12.754722595214844
    9. ' ][' → logprob: -13.379722595214844
    10. '}[' → logprob: -13.504722595214844

Token 2329: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -12.75000286102295
    3. '```' → logprob: -18.875003814697266
    4. ' ' → logprob: -19.875003814697266
    5. '[
' → logprob: -20.500003814697266
    6. '   ' → logprob: -20.625003814697266
    7. '３' → logprob: -21.000003814697266
    8. '
' → logprob: -21.125003814697266
    9. '۳' → logprob: -22.125003814697266
    10. '``' → logprob: -22.375003814697266

Token 2330: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009906532941386104
    2. ']+' → logprob: -7.250990867614746
    3. '+' → logprob: -8.375990867614746
    4. ')' → logprob: -10.625990867614746
    5. '   ' → logprob: -11.625990867614746
    6. ' ]' → logprob: -12.000990867614746
    7. '[' → logprob: -12.625990867614746
    8. '*' → logprob: -13.375990867614746
    9. ' +' → logprob: -13.500990867614746
    10. '])' → logprob: -13.750990867614746

Token 2331: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759938955307007
    2. ' +' → logprob: -0.8259938955307007
    3. '+
' → logprob: -10.200993537902832
    4. ' +
' → logprob: -11.075993537902832
    5. '   ' → logprob: -14.450993537902832
    6. ')' → logprob: -15.075993537902832
    7. ')+' → logprob: -15.575993537902832
    8. ' +
' → logprob: -15.575993537902832
    9. '+

' → logprob: -15.825993537902832
    10. '+=' → logprob: -16.07599449157715

Token 2332: '                  ' (ID: 8854)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.10702301561832428
    2. '       ' → logprob: -2.482023000717163
    3. ' (' → logprob: -4.107023239135742
    4. '   ' → logprob: -7.482023239135742
    5. '(d' → logprob: -7.857023239135742
    6. '(
' → logprob: -8.482023239135742
    7. '(' → logprob: -9.107023239135742
    8. 'dp' → logprob: -9.357023239135742
    9. '+' → logprob: -10.982023239135742
    10. '      ' → logprob: -11.357023239135742

Token 2333: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05670158565044403
    2. '(' → logprob: -4.05670166015625
    3. '(dp' → logprob: -4.05670166015625
    4. ' (' → logprob: -4.68170166015625
    5. '(
' → logprob: -4.68170166015625
    6. '+' → logprob: -7.30670166015625
    7. 'dp' → logprob: -7.43170166015625
    8. '   ' → logprob: -8.05670166015625
    9. '```' → logprob: -9.30670166015625
    10. '0' → logprob: -9.43170166015625

Token 2334: ' Aj' (ID: 28294)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0021485965698957443
    2. ' (' → logprob: -6.252148628234863
    3. '(d' → logprob: -9.002148628234863
    4. 'dp' → logprob: -10.002148628234863
    5. '(max' → logprob: -10.877148628234863
    6. '(' → logprob: -11.252148628234863
    7. '       ' → logprob: -11.752148628234863
    8. '   ' → logprob: -12.502148628234863
    9. '(ds' → logprob: -13.252148628234863
    10. 'max' → logprob: -13.752148628234863

Token 2335: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.0013230959884822369
    2. 'outer' → logprob: -7.376323223114014
    3. 'outez' → logprob: -7.876323223114014
    4. 'out' → logprob: -8.126322746276855
    5. 'outes' → logprob: -11.251322746276855
    6. 'dp' → logprob: -12.501322746276855
    7. '#' → logprob: -13.501322746276855
    8. 'd' → logprob: -14.751322746276855
    9. '+' → logprob: -15.001322746276855
    10. ']' → logprob: -15.376322746276855

Token 2336: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6632834076881409
    2. 'dp' → logprob: -0.7882834076881409
    3. ' dp' → logprob: -3.913283348083496
    4. ' ' → logprob: -5.913283348083496
    5. '(' → logprob: -6.163283348083496
    6. '(dp' → logprob: -6.163283348083496
    7. '       ' → logprob: -6.788283348083496
    8. ' (' → logprob: -6.913283348083496
    9. '   ' → logprob: -7.288283348083496
    10. 'zero' → logprob: -9.288283348083496

Token 2337: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013597669079899788
    2. 'z' → logprob: -4.38859748840332
    3. ' zéro' → logprob: -7.51359748840332
    4. ' ' → logprob: -8.51359748840332
    5. '```' → logprob: -9.26359748840332
    6. '[' → logprob: -9.51359748840332
    7. '   ' → logprob: -9.76359748840332
    8. 'zero' → logprob: -9.76359748840332
    9. '       ' → logprob: -11.13859748840332
    10. '#' → logprob: -12.13859748840332

Token 2338: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.390645980834961
    2. '+' → logprob: -1.515645980834961
    3. '<|end|>' → logprob: -1.890645980834961
    4. '       ' → logprob: -2.015645980834961
    5. ')' → logprob: -2.265645980834961
    6. ' +' → logprob: -2.890645980834961
    7. '```' → logprob: -2.890645980834961
    8. '*' → logprob: -3.890645980834961
    9. '  ' → logprob: -6.390645980834961
    10. ')+' → logprob: -6.515645980834961

Token 2339: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6058775186538696
    2. 'une' → logprob: -1.1058775186538696
    3. 'dp' → logprob: -2.10587739944458
    4. ' dp' → logprob: -6.98087739944458
    5. 'a' → logprob: -8.105877876281738
    6. 'Une' → logprob: -8.480877876281738
    7. '```' → logprob: -8.605877876281738
    8. 'una' → logprob: -9.980877876281738
    9. ''une' → logprob: -10.480877876281738
    10. '(dp' → logprob: -10.855877876281738

Token 2340: ' sé' (ID: 7462)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.020446937531232834
    2. 'sequence' → logprob: -4.14544677734375
    3. 's' → logprob: -6.27044677734375
    4. 'dp' → logprob: -6.52044677734375
    5. ' sé' → logprob: -7.27044677734375
    6. 'seq' → logprob: -9.39544677734375
    7. '```' → logprob: -9.52044677734375
    8. 'sequ' → logprob: -9.77044677734375
    9. '_sequence' → logprob: -10.14544677734375
    10. 'se' → logprob: -10.64544677734375

Token 2341: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.00017517358355689794
    2. 'quences' → logprob: -9.250175476074219
    3. 'q' → logprob: -11.000175476074219
    4. 'QUENCE' → logprob: -11.125175476074219
    5. 'qu' → logprob: -11.500175476074219
    6. '_sequence' → logprob: -12.000175476074219
    7. '[' → logprob: -12.125175476074219
    8. '#' → logprob: -12.125175476074219
    9. 'sequence' → logprob: -12.125175476074219
    10. 's' → logprob: -12.875175476074219

Token 2342: ' déjà' (ID: 21229)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.019877737388014793
    2. '```' → logprob: -4.769877910614014
    3. '   ' → logprob: -5.394877910614014
    4. '       ' → logprob: -5.644877910614014
    5. 'dp' → logprob: -6.144877910614014
    6. 'dé' → logprob: -7.894877910614014
    7. '0' → logprob: -8.519877433776855
    8. '[' → logprob: -8.519877433776855
    9. '           ' → logprob: -10.019877433776855
    10. '``' → logprob: -10.019877433776855

Token 2343: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.00012916464766021818
    2. 'more' → logprob: -9.750128746032715
    3. ' plus' → logprob: -10.000128746032715
    4. '```' → logprob: -10.750128746032715
    5. '3' → logprob: -14.000128746032715
    6. '[' → logprob: -14.375128746032715
    7. '_plus' → logprob: -14.375128746032715
    8. 'moins' → logprob: -14.625128746032715
    9. 'larg' → logprob: -15.000128746032715
    10. 'Plus' → logprob: -15.125128746032715

Token 2344: ' petite' (ID: 28119)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.041627731174230576
    2. 'plus' → logprob: -3.4166276454925537
    3. 'small' → logprob: -4.916627883911133
    4. ' petite' → logprob: -9.041627883911133
    5. '```' → logprob: -9.041627883911133
    6. 'pl' → logprob: -9.166627883911133
    7. '#' → logprob: -9.666627883911133
    8. 'ple' → logprob: -10.416627883911133
    9. 'tail' → logprob: -10.541627883911133
    10. 'sm' → logprob: -10.541627883911133

Token 2345: ' avec' (ID: 3937)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7542261481285095
    2. '   ' → logprob: -1.6292262077331543
    3. '       ' → logprob: -2.3792262077331543
    4. 'dp' → logprob: -2.3792262077331543
    5. '+' → logprob: -2.7542262077331543
    6. '[' → logprob: -2.7542262077331543
    7. 'with' → logprob: -5.629226207733154
    8. '[
' → logprob: -5.754226207733154
    9. '``' → logprob: -5.879226207733154
    10. '+
' → logprob: -5.879226207733154

Token 2346: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.001035191467963159
    2. ' ' → logprob: -6.876035213470459
    3. 'dp' → logprob: -13.7510347366333
    4. '   ' → logprob: -14.2510347366333
    5. '2' → logprob: -14.6260347366333
    6. '```' → logprob: -16.126035690307617
    7. '[' → logprob: -17.001035690307617
    8. ' ' → logprob: -17.001035690307617
    9. '
' → logprob: -17.251035690307617
    10. '  ' → logprob: -17.376035690307617

Token 2347: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0017118285177275538
    2. 'dp' → logprob: -6.376711845397949
    3. ' ' → logprob: -12.62671184539795
    4. '2' → logprob: -12.75171184539795
    5. '   ' → logprob: -13.25171184539795
    6. '```' → logprob: -14.12671184539795
    7. ' dp' → logprob: -15.25171184539795
    8. '#' → logprob: -15.75171184539795
    9. '       ' → logprob: -16.126710891723633
    10. '[' → logprob: -16.501710891723633

Token 2348: ' chiffres' (ID: 105565)
  Prédit: ' chiffres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chiffres' → logprob: -0.23407502472400665
    2. 'ch' → logprob: -1.7340750694274902
    3. '_ch' → logprob: -3.9840750694274902
    4. '[ch' → logprob: -4.85907506942749
    5. 'digits' → logprob: -6.23407506942749
    6. '```' → logprob: -6.35907506942749
    7. '[' → logprob: -6.85907506942749
    8. 'non' → logprob: -8.359074592590332
    9. '_digits' → logprob: -8.609074592590332
    10. ']' → logprob: -9.484074592590332

Token 2349: ' non' (ID: 2893)
  Prédit: '_non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_non' → logprob: -0.44041502475738525
    2. 'non' → logprob: -1.9404150247573853
    3. '```' → logprob: -2.0654149055480957
    4. '[' → logprob: -2.9404149055480957
    5. ' non' → logprob: -4.565414905548096
    6. '][' → logprob: -5.190414905548096
    7. '       ' → logprob: -5.565414905548096
    8. '-n' → logprob: -6.190414905548096
    9. '-' → logprob: -6.190414905548096
    10. '   ' → logprob: -6.315414905548096

Token 2350: '-z' (ID: 16826)
  Prédit: '-z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.0055606551468372345
    2. '-' → logprob: -6.130560874938965
    3. '0' → logprob: -6.130560874938965
    4. '-zero' → logprob: -7.130560874938965
    5. 'z' → logprob: -8.880560874938965
    6. '-Z' → logprob: -9.630560874938965
    7. '_z' → logprob: -9.630560874938965
    8. ' zéro' → logprob: -10.255560874938965
    9. '```' → logprob: -10.880560874938965
    10. '   ' → logprob: -11.505560874938965

Token 2351: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.0022261450067162514
    2. 'éros' → logprob: -6.87722635269165
    3. '_' → logprob: -8.252225875854492
    4. '-é' → logprob: -9.002225875854492
    5. ' zéro' → logprob: -9.252225875854492
    6. '_ro' → logprob: -10.002225875854492
    7. '-ro' → logprob: -10.002225875854492
    8. '-' → logprob: -10.002225875854492
    9. '```' → logprob: -10.252225875854492
    10. '�' → logprob: -10.252225875854492

Token 2352: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12499834597110748
    2. ' +' → logprob: -2.3749983310699463
    3. '+
' → logprob: -4.374998569488525
    4. '   ' → logprob: -4.749998569488525
    5. '       ' → logprob: -5.874998569488525
    6. ' +
' → logprob: -7.749998569488525
    7. '```' → logprob: -13.249998092651367
    8. ' +
' → logprob: -14.124998092651367
    9. '+=' → logprob: -14.249998092651367
    10. '  ' → logprob: -14.374998092651367

Token 2353: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.388424277305603
    2. '       ' → logprob: -1.388424277305603
    3. ' +' → logprob: -2.6384243965148926
    4. '+
' → logprob: -7.388424396514893
    5. '   ' → logprob: -8.888423919677734
    6. '+(' → logprob: -9.013423919677734
    7. ' +
' → logprob: -10.763423919677734
    8. '(' → logprob: -11.263423919677734
    9. '```' → logprob: -12.013423919677734
    10. '           ' → logprob: -12.638423919677734

Token 2354: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -9.233804303221405e-05
    2. ' (' → logprob: -9.750092506408691
    3. '       ' → logprob: -10.500092506408691
    4. 'dp' → logprob: -12.375092506408691
    5. '   ' → logprob: -13.625092506408691
    6. '(dt' → logprob: -15.250092506408691
    7. '(d' → logprob: -15.875092506408691
    8. '(ds' → logprob: -16.000091552734375
    9. '(dx' → logprob: -16.625091552734375
    10. '(' (adapté à ' (') → logprob: -16.625091552734375

Token 2355: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005550591740757227
    2. '(dp' → logprob: -7.500555038452148
    3. ' dp' → logprob: -13.125555038452148
    4. '0' → logprob: -16.00055503845215
    5. '	dp' → logprob: -18.50055503845215
    6. '.dp' → logprob: -19.75055503845215
    7. '_dp' → logprob: -19.87555503845215
    8. '(' → logprob: -20.00055503845215
    9. '1' → logprob: -21.25055503845215
    10. 'dpi' → logprob: -21.25055503845215

Token 2356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012047011114191264
    2. '[i' → logprob: -9.125120162963867
    3. '[' → logprob: -11.750120162963867
    4. '```' → logprob: -12.875120162963867
    5. '_' → logprob: -14.875120162963867
    6. '-' → logprob: -15.875120162963867
    7. '
' → logprob: -16.125120162963867
    8. '\[' → logprob: -16.250120162963867
    9. '``' → logprob: -16.500120162963867
    10. 'i' → logprob: -16.750120162963867

Token 2357: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4849443838757e-06
    2. '```' → logprob: -12.875004768371582
    3. '   ' → logprob: -14.000004768371582
    4. '[' → logprob: -14.875004768371582
    5. 'i' → logprob: -15.625004768371582
    6. '[j' → logprob: -16.500003814697266
    7. '       ' → logprob: -16.875003814697266
    8. ' [' → logprob: -17.000003814697266
    9. '[int' → logprob: -17.375003814697266
    10. '[u' → logprob: -17.500003814697266

Token 2358: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0012803568970412016
    2. '[i' → logprob: -6.751280307769775
    3. '   ' → logprob: -9.876280784606934
    4. ' -' → logprob: -11.001280784606934
    5. '[-' → logprob: -11.251280784606934
    6. '[' → logprob: -11.751280784606934
    7. '```' → logprob: -11.751280784606934
    8. '-[' → logprob: -12.001280784606934
    9. '       ' → logprob: -13.001280784606934
    10. '][' → logprob: -13.251280784606934

Token 2359: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18456953763961792
    2. '1' → logprob: -1.8095695972442627
    3. 'i' → logprob: -5.934569358825684
    4. '```' → logprob: -6.934569358825684
    5. '[i' → logprob: -7.184569358825684
    6. '[' → logprob: -8.184569358825684
    7. '][' → logprob: -10.059569358825684
    8. '...' → logprob: -10.809569358825684
    9. '[-' → logprob: -10.809569358825684
    10. 'p' → logprob: -11.184569358825684

Token 2360: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02991235814988613
    2. '[' → logprob: -3.5299124717712402
    3. '```' → logprob: -10.279911994934082
    4. '           ' → logprob: -10.529911994934082
    5. ' ][' → logprob: -10.654911994934082
    6. ']' → logprob: -11.154911994934082
    7. '       ' → logprob: -11.279911994934082
    8. '}[' → logprob: -11.404911994934082
    9. '   ' → logprob: -11.654911994934082
    10. ')[' → logprob: -12.154911994934082

Token 2361: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.375001907348633
    3. '2' → logprob: -15.750001907348633
    4. '
' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.000001907348633
    6. '][' → logprob: -17.000001907348633
    7. ' ' → logprob: -17.500001907348633
    8. '```' → logprob: -17.625001907348633
    9. 'i' → logprob: -18.000001907348633
    10. '３' → logprob: -19.500001907348633

Token 2362: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.981667537620524e-06
    2. ' ]' → logprob: -13.875001907348633
    3. 'if' → logprob: -15.125001907348633
    4. ']
' → logprob: -15.500001907348633
    5. '[' → logprob: -15.875001907348633
    6. ']*' → logprob: -16.500001907348633
    7. '][' → logprob: -16.625001907348633
    8. ' if' → logprob: -17.250001907348633
    9. '']' → logprob: -17.875001907348633
    10. '   ' → logprob: -18.125001907348633

Token 2363: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.010788879357278347
    2. 'if' → logprob: -4.635788917541504
    3. '*' → logprob: -7.510788917541504
    4. ' *' → logprob: -7.635788917541504
    5. ' ' → logprob: -13.260788917541504
    6. ' ' → logprob: -14.885788917541504
    7. 'If' → logprob: -17.635787963867188
    8. '   ' → logprob: -17.635787963867188
    9. '	if' → logprob: -18.010787963867188
    10. '        ' → logprob: -18.135787963867188

Token 2364: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.02975141443312168
    2. ' np' → logprob: -3.5297513008117676
    3. '(np' → logprob: -14.404751777648926
    4. '_np' → logprob: -15.904751777648926
    5. '[np' → logprob: -15.904751777648926
    6. ' ' → logprob: -17.15475082397461
    7. '0' → logprob: -17.27975082397461
    8. '   ' → logprob: -17.27975082397461
    9. ',np' → logprob: -18.02975082397461
    10. '*np' → logprob: -18.27975082397461

Token 2365: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.38687947392463684
    2. '!=' → logprob: -1.1368794441223145
    3. '```' → logprob: -12.511879920959473
    4. ')!=' → logprob: -14.011879920959473
    5. '()!=' → logprob: -14.136879920959473
    6. ']!=' → logprob: -14.136879920959473
    7. '>' → logprob: -15.011879920959473
    8. ' ' → logprob: -15.011879920959473
    9. '!=-' → logprob: -15.261879920959473
    10. ' ' → logprob: -15.511879920959473

Token 2366: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023247109726071358
    2. ' ' → logprob: -3.773247003555298
    3. '   ' → logprob: -14.648246765136719
    4. ' ' → logprob: -14.648246765136719
    5. '```' → logprob: -15.273246765136719
    6. '1' → logprob: -16.27324676513672
    7. '=' → logprob: -16.39824676513672
    8. '!=' → logprob: -16.52324676513672
    9. '>' → logprob: -16.89824676513672
    10. '  ' → logprob: -16.96074676513672

Token 2367: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007107630372047424
    2. ' ' → logprob: -7.250710964202881
    3. '   ' → logprob: -15.000710487365723
    4. '!=' → logprob: -16.00071144104004
    5. ' ' → logprob: -16.50071144104004
    6. '```' → logprob: -16.62571144104004
    7. '  ' → logprob: -17.12571144104004
    8. '=' → logprob: -17.50071144104004
    9. '>' → logprob: -17.87571144104004
    10. '1' → logprob: -18.00071144104004

Token 2368: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3868735730648041
    2. 'else' → logprob: -1.1368736028671265
    3. '!=' → logprob: -14.011873245239258
    4. ')' → logprob: -14.761873245239258
    5. '	else' → logprob: -14.761873245239258
    6. '        ' → logprob: -15.261873245239258
    7. ' ' → logprob: -15.636873245239258
    8. '```' → logprob: -15.761873245239258
    9. ' ' → logprob: -16.011873245239258
    10. '>' → logprob: -16.636873245239258

Token 2369: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015028368216007948
    2. ' ' → logprob: -6.501502990722656
    3. '1' → logprob: -15.126502990722656
    4. ' ' → logprob: -15.876502990722656
    5. '       ' → logprob: -17.251502990722656
    6. '   ' → logprob: -17.501502990722656
    7. '           ' → logprob: -18.501502990722656
    8. '        ' → logprob: -18.876502990722656
    9. '     ' → logprob: -19.376502990722656
    10. '    ' → logprob: -19.376502990722656

Token 2370: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -20.125001907348633
    4. '       ' → logprob: -22.125001907348633
    5. '  ' → logprob: -22.250001907348633
    6. '           ' → logprob: -22.625001907348633
    7. ' ' → logprob: -23.000001907348633
    8. '۰' → logprob: -23.125001907348633
    9. '00' → logprob: -23.375001907348633
    10. '               ' → logprob: -24.000001907348633

Token 2371: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026634778827428818
    2. '   ' → logprob: -3.651634693145752
    3. '       ' → logprob: -8.52663516998291
    4. ' )' → logprob: -9.15163516998291
    5. ')
' → logprob: -12.15163516998291
    6. '    ' → logprob: -12.15163516998291
    7. ')`' → logprob: -12.52663516998291
    8. ')+' → logprob: -12.65163516998291
    9. ')*' → logprob: -13.02663516998291
    10. '0' → logprob: -13.15163516998291

Token 2372: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17999906837940216
    2. '   ' → logprob: -1.8049991130828857
    3. ' )' → logprob: -8.554999351501465
    4. '       ' → logprob: -10.179999351501465
    5. ')
' → logprob: -12.179999351501465
    6. '#' → logprob: -12.429999351501465
    7. '    ' → logprob: -12.804999351501465
    8. '```' → logprob: -12.804999351501465
    9. '	' → logprob: -13.429999351501465
    10. ')*' → logprob: -14.054999351501465

Token 2373: ' Continue' (ID: 16958)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0080567598342896
    2. '0' → logprob: -1.6330567598342896
    3. '       ' → logprob: -1.6330567598342896
    4. '   ' → logprob: -2.133056640625
    5. 'dp' → logprob: -3.008056640625
    6. ' dp' → logprob: -3.633056640625
    7. '           ' → logprob: -4.508056640625
    8. ' )' → logprob: -5.008056640625
    9. ' ' → logprob: -5.258056640625
    10. '<|end|>' → logprob: -5.633056640625

Token 2374: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.19114983081817627
    2. ' dp' → logprob: -1.9411498308181763
    3. '(dp' → logprob: -4.316149711608887
    4. '0' → logprob: -5.441149711608887
    5. '1' → logprob: -5.441149711608887
    6. '   ' → logprob: -5.691149711608887
    7. ' ' → logprob: -6.191149711608887
    8. ')' → logprob: -6.191149711608887
    9. '(' → logprob: -8.191149711608887
    10. '    ' → logprob: -9.066149711608887

Token 2375: ' sé' (ID: 7462)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.010935219936072826
    2. 'sequence' → logprob: -5.010935306549072
    3. 's' → logprob: -6.010935306549072
    4. ' sé' → logprob: -6.635935306549072
    5. 'seq' → logprob: -8.135934829711914
    6. 'sequ' → logprob: -9.385934829711914
    7. '_sequence' → logprob: -10.010934829711914
    8. '_s' → logprob: -11.635934829711914
    9. ' sequence' → logprob: -12.135934829711914
    10. '_' → logprob: -12.760934829711914

Token 2376: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -8.125210297293961e-05
    2. 'quences' → logprob: -9.625081062316895
    3. 'q' → logprob: -11.875081062316895
    4. 'QUENCE' → logprob: -12.875081062316895
    5. 'qu' → logprob: -13.125081062316895
    6. '1' → logprob: -13.875081062316895
    7. '_' → logprob: -14.000081062316895
    8. '0' → logprob: -14.250081062316895
    9. '_sequence' → logprob: -15.250081062316895
    10. '```' → logprob: -15.250081062316895

Token 2377: ' ég' (ID: 33150)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4461352527141571
    2. ')' → logprob: -1.0711352825164795
    3. '[i' → logprob: -4.4461350440979
    4. '<|end|>' → logprob: -5.6961350440979
    5. '[' → logprob: -7.0711350440979
    6. '       ' → logprob: -8.571135520935059
    7. '<|end|>' → logprob: -8.571135520935059
    8. ' )' → logprob: -8.821135520935059
    9. '```' → logprob: -8.946135520935059
    10. ')==' → logprob: -9.571135520935059

Token 2378: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.012082095257937908
    2. 'al' → logprob: -6.762082099914551
    3. 'qu' → logprob: -6.762082099914551
    4. '0' → logprob: -6.887082099914551
    5. 'le' → logprob: -6.887082099914551
    6. 'uale' → logprob: -6.887082099914551
    7. '#' → logprob: -7.262082099914551
    8. '1' → logprob: -7.637082099914551
    9. 'g' → logprob: -7.637082099914551
    10. 'u' → logprob: -7.637082099914551

Token 2379: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011553487740457058
    2. 'else' → logprob: -4.8865532875061035
    3. '   ' → logprob: -6.2615532875061035
    4. '```' → logprob: -7.3865532875061035
    5. '<|end|>' → logprob: -7.5115532875061035
    6. '       ' → logprob: -8.261553764343262
    7. ' )' → logprob: -8.761553764343262
    8. '=' → logprob: -9.386553764343262
    9. '.' → logprob: -9.761553764343262
    10. ' else' → logprob: -9.761553764343262

Token 2380: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.10365214198827744
    2. 'not' → logprob: -2.353652238845825
    3. ' possible' → logprob: -6.478652000427246
    4. ' not' → logprob: -7.228652000427246
    5. 'poss' → logprob: -7.478652000427246
    6. '       ' → logprob: -7.603652000427246
    7. '0' → logprob: -10.728652000427246
    8. '_possible' → logprob: -10.853652000427246
    9. '   ' → logprob: -11.228652000427246
    10. 'pas' → logprob: -11.353652000427246

Token 2381: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0232770424336195
    2. ')' → logprob: -3.7732770442962646
    3. ')
' → logprob: -10.398277282714844
    4. '       ' → logprob: -15.148277282714844
    5. '```' → logprob: -15.273277282714844
    6. ')

' → logprob: -15.648277282714844
    7. ')
' → logprob: -16.023277282714844
    8. '	' → logprob: -16.273277282714844
    9. ' )' → logprob: -16.898277282714844
    10. '   ' → logprob: -16.898277282714844

Token 2382: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12698353826999664
    2. '   ' → logprob: -2.126983642578125
    3. ')
' → logprob: -10.251983642578125
    4. '```' → logprob: -12.001983642578125
    5. '	' → logprob: -12.501983642578125
    6. '#' → logprob: -12.751983642578125
    7. ' )' → logprob: -12.876983642578125
    8. '       ' → logprob: -13.626983642578125
    9. '   ' → logprob: -14.376983642578125
    10. ')`' → logprob: -14.876983642578125

Token 2383: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932530403137207
    2. '   ' → logprob: -0.6932530403137207
    3. ')
' (adapté à ' )
') → logprob: -9.193252563476562
    4. '       ' → logprob: -13.693252563476562
    5. '```' → logprob: -13.943252563476562
    6. ' )' → logprob: -14.068252563476562
    7. '	' → logprob: -15.068252563476562
    8. ')`' → logprob: -15.318252563476562
    9. '  ' → logprob: -15.693252563476562
    10. '   ' → logprob: -15.943252563476562

Token 2384: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2385: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.33962583541870117
    2. '#' (adapté à ' #') → logprob: -2.464625835418701
    3. '   ' → logprob: -2.714625835418701
    4. ')' → logprob: -2.714625835418701
    5. '<|end|>' → logprob: -2.839625835418701
    6. '```' → logprob: -5.089625835418701
    7. '<|end|>' → logprob: -6.589625835418701
    8. ']' → logprob: -6.839625835418701
    9. '...' → logprob: -7.214625835418701
    10. '[' → logprob: -7.589625835418701

Token 2386: ' Exact' (ID: 69026)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00016480287013109773
    2. '   ' → logprob: -8.750164985656738
    3. ' dp' → logprob: -12.000164985656738
    4. '```' → logprob: -16.375164031982422
    5. '	dp' → logprob: -17.125164031982422
    6. '(dp' → logprob: -18.750164031982422
    7. '  ' → logprob: -19.625164031982422
    8. '#' → logprob: -19.625164031982422
    9. '
' → logprob: -19.875164031982422
    10. '``' → logprob: -20.125164031982422

Token 2387: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.9309676885604858
    2. '   ' → logprob: -1.0559676885604858
    3. 'ément' → logprob: -1.4309676885604858
    4. '#' → logprob: -5.805967807769775
    5. 'atement' → logprob: -5.805967807769775
    6. 't' → logprob: -6.305967807769775
    7. 'ment' → logprob: -6.430967807769775
    8. 'd' → logprob: -6.805967807769775
    9. 'm' → logprob: -7.055967807769775
    10. 'ly' → logprob: -7.055967807769775

Token 2388: ' une' (ID: 2463)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4785192310810089
    2. ' dp' → logprob: -0.9785192012786865
    3. '   ' → logprob: -5.478519439697266
    4. '[i' → logprob: -8.478519439697266
    5. '1' → logprob: -10.603519439697266
    6. '(dp' → logprob: -11.978519439697266
    7. '	dp' → logprob: -12.603519439697266
    8. '0' → logprob: -12.603519439697266
    9. ' ' → logprob: -13.228519439697266
    10. '[' → logprob: -13.353519439697266

Token 2389: ' possibilité' (ID: 58463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9115667343139648
    2. '```' → logprob: -1.2865667343139648
    3. 'if' → logprob: -1.9115667343139648
    4. ' if' → logprob: -2.661566734313965
    5. 'dp' → logprob: -3.161566734313965
    6. ')' → logprob: -4.161566734313965
    7. 'fois' → logprob: -4.661566734313965
    8. '       ' → logprob: -5.286566734313965
    9. ' façon' → logprob: -5.411566734313965
    10. ' dp' → logprob: -5.536566734313965

Token 2390: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00313837849535048
    2. 'dp' → logprob: -5.878138542175293
    3. ' dp' → logprob: -8.253138542175293
    4. 'if' → logprob: -10.378138542175293
    5. ' if' → logprob: -10.503138542175293
    6. '```' → logprob: -11.753138542175293
    7. '=' → logprob: -13.253138542175293
    8. '(dp' → logprob: -13.378138542175293
    9. '       ' → logprob: -14.003138542175293
    10. ' =' → logprob: -14.503138542175293

Token 2391: ' on' (ID: 402)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14272114634513855
    2. ' i' → logprob: -2.017721176147461
    3. '   ' → logprob: -10.267721176147461
    4. 'dp' → logprob: -12.392721176147461
    5. ' ' → logprob: -13.517721176147461
    6. '(i' → logprob: -13.642721176147461
    7. '```' → logprob: -13.892721176147461
    8. ' dp' → logprob: -14.267721176147461
    9. '`' → logprob: -14.392721176147461
    10. '  ' → logprob: -14.517721176147461

Token 2392: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.046064190566539764
    2. ' ==' → logprob: -3.1710641384124756
    3. 'i' → logprob: -6.546064376831055
    4. '[i' → logprob: -6.921064376831055
    5. '```' → logprob: -8.046064376831055
    6. ' i' → logprob: -9.171064376831055
    7. '#' → logprob: -9.296064376831055
    8. '   ' → logprob: -10.421064376831055
    9. '=' → logprob: -11.046064376831055
    10. 'if' → logprob: -11.421064376831055

Token 2393: ' sur' (ID: 1512)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8698266744613647
    2. '   ' → logprob: -1.2448266744613647
    3. ' i' → logprob: -1.2448266744613647
    4. '```' → logprob: -6.994826793670654
    5. '=' → logprob: -7.244826793670654
    6. 'if' → logprob: -7.494826793670654
    7. '==' → logprob: -7.494826793670654
    8. ' if' → logprob: -7.869826793670654
    9. '=i' → logprob: -7.869826793670654
    10. ' ' → logprob: -7.994826793670654

Token 2394: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3924865424633026
    2. 'i' → logprob: -1.142486572265625
    3. '   ' → logprob: -5.267486572265625
    4. '(i' → logprob: -8.767486572265625
    5. '1' → logprob: -9.392486572265625
    6. '```' → logprob: -9.767486572265625
    7. ' (' → logprob: -10.017486572265625
    8. ' ' → logprob: -10.142486572265625
    9. '3' → logprob: -10.767486572265625
    10. '[i' → logprob: -11.767486572265625

Token 2395: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023384422063827515
    2. ' i' → logprob: -4.3983845710754395
    3. '3' → logprob: -5.2733845710754395
    4. '1' → logprob: -5.5233845710754395
    5. '   ' → logprob: -7.0233845710754395
    6. '2' → logprob: -9.023384094238281
    7. ' ' → logprob: -9.398384094238281
    8. '```' → logprob: -9.523384094238281
    9. '(i' → logprob: -9.648384094238281
    10. 'ligne' → logprob: -9.898384094238281

Token 2396: ' (' (ID: 350)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5386025309562683
    2. '==' → logprob: -0.9136025309562683
    3. '   ' → logprob: -4.663602352142334
    4. '[i' → logprob: -6.163602352142334
    5. '```' → logprob: -6.288602352142334
    6. ' if' → logprob: -7.163602352142334
    7. 'if' → logprob: -7.163602352142334
    8. ' i' → logprob: -9.163602828979492
    9. 'i' → logprob: -9.663602828979492
    10. ' +=' → logprob: -9.913602828979492

Token 2397: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5819733142852783
    2. 'i' → logprob: -0.8319733142852783
    3. ' i' → logprob: -5.456973075866699
    4. '   ' → logprob: -7.081973075866699
    5. ' ' → logprob: -7.456973075866699
    6. '1' → logprob: -8.2069730758667
    7. '```' → logprob: -10.9569730758667
    8. '  ' → logprob: -11.7069730758667
    9. '(i' → logprob: -11.7069730758667
    10. '(' → logprob: -11.8319730758667

Token 2398: ' +' (ID: 659)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7372567653656006
    2. ' +' → logprob: -0.8622567653656006
    3. '+' → logprob: -2.8622567653656006
    4. '==' → logprob: -3.2372567653656006
    5. '   ' → logprob: -6.23725700378418
    6. ')' → logprob: -7.48725700378418
    7. '    ' → logprob: -9.48725700378418
    8. ' ' → logprob: -9.48725700378418
    9. 'if' → logprob: -9.73725700378418
    10. ' if' → logprob: -9.86225700378418

Token 2399: ' nombre' (ID: 9733)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.00029601677670143545
    2. ' po' → logprob: -8.125295639038086
    3. '(po' → logprob: -17.625295639038086
    4. '```' → logprob: -18.625295639038086
    5. '
' → logprob: -18.875295639038086
    6. '   ' → logprob: -18.875295639038086
    7. 'p' → logprob: -19.625295639038086
    8. '`' → logprob: -19.750295639038086
    9. ' ' → logprob: -19.750295639038086
    10. '+' → logprob: -20.000295639038086

Token 2400: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.19768355786800385
    2. ' de' → logprob: -2.447683572769165
    3. 'of' → logprob: -2.822683572769165
    4. '   ' → logprob: -4.197683334350586
    5. ' of' → logprob: -4.322683334350586
    6. '+' → logprob: -7.322683334350586
    7. '==' → logprob: -7.322683334350586
    8. '>' → logprob: -7.447683334350586
    9. 'du' → logprob: -7.697683334350586
    10. '0' → logprob: -7.947683334350586

Token 2401: ' ' (ID: 220)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.0008060562540777028
    2. ' po' → logprob: -7.125805854797363
    3. ' ' → logprob: -14.375805854797363
    4. '```' → logprob: -14.625805854797363
    5. '0' → logprob: -15.500805854797363
    6. '(po' → logprob: -15.875805854797363
    7. ' ' → logprob: -16.37580680847168
    8. '1' → logprob: -17.25080680847168
    9. '``' → logprob: -17.62580680847168
    10. '`' → logprob: -17.62580680847168

Token 2402: '0' (ID: 15)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.001943514565937221
    2. '0' → logprob: -6.251943588256836
    3. '```' → logprob: -11.876943588256836
    4. ' po' → logprob: -12.251943588256836
    5. '(po' → logprob: -13.126943588256836
    6. ' ' → logprob: -15.126943588256836
    7. '   ' → logprob: -15.626943588256836
    8. ' ' → logprob: -15.751943588256836
    9. '`' → logprob: -15.751943588256836
    10. '``' → logprob: -15.876943588256836

Token 2403: ' parc' (ID: 22138)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06854043155908585
    2. '):' → logprob: -3.193540334701538
    3. '):
' → logprob: -3.818540334701538
    4. ')
' → logprob: -6.568540573120117
    5. ' )' → logprob: -7.818540573120117
    6. 'else' → logprob: -7.943540573120117
    7. '   ' → logprob: -8.068540573120117
    8. '):
' → logprob: -8.568540573120117
    9. ')==' → logprob: -9.068540573120117
    10. '```' → logprob: -9.443540573120117

Token 2404: 'ourt' (ID: 38600)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.08198894560337067
    2. 'ours' → logprob: -2.581989049911499
    3. 'urée' → logprob: -7.33198881149292
    4. 'o' → logprob: -7.58198881149292
    5. 'ou' → logprob: -7.95698881149292
    6. 'ourt' → logprob: -8.331989288330078
    7. '
' → logprob: -8.331989288330078
    8. ']' → logprob: -8.706989288330078
    9. '>' → logprob: -9.206989288330078
    10. ')' → logprob: -9.581989288330078

Token 2405: ' jusque' (ID: 188953)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.3481016457080841
    2. 'ée' → logprob: -1.3481016159057617
    3. 'ées' → logprob: -3.8481016159057617
    4. 's' → logprob: -4.973101615905762
    5. ']' → logprob: -6.348101615905762
    6. 'i' → logprob: -6.598101615905762
    7. 'é' → logprob: -7.223101615905762
    8. 'es' → logprob: -7.348101615905762
    9. 'e' → logprob: -7.848101615905762
    10. 'us' → logprob: -8.473101615905762

Token 2406: ' là' (ID: 8052)
  Prédit: 'ici'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ici' → logprob: -0.6967847943305969
    2. 'i' → logprob: -0.8217847943305969
    3. ''ici' → logprob: -3.321784734725952
    4. '-là' → logprob: -4.696784973144531
    5. '’ici' → logprob: -5.696784973144531
    6. 'here' → logprob: -5.696784973144531
    7. '=i' → logprob: -6.071784973144531
    8. '```' → logprob: -6.071784973144531
    9. 'l' → logprob: -6.196784973144531
    10. 'à' → logprob: -6.321784973144531

Token 2407: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4036838412284851
    2. '   ' → logprob: -2.02868390083313
    3. ' else' → logprob: -2.90368390083313
    4. 'else' → logprob: -2.90368390083313
    5. '):' → logprob: -3.02868390083313
    6. '):
' → logprob: -3.65368390083313
    7. ':' → logprob: -4.778683662414551
    8. '```' → logprob: -5.778683662414551
    9. '==' → logprob: -6.278683662414551
    10. ':
' → logprob: -6.778683662414551

Token 2408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0990842655301094
    2. 'dp' → logprob: -2.5990843772888184
    3. '=' → logprob: -4.099084377288818
    4. ' =' → logprob: -6.099084377288818
    5. ' dp' → logprob: -6.849084377288818
    6. '```' → logprob: -9.97408390045166
    7. '(dp' → logprob: -11.59908390045166
    8. '==' → logprob: -11.59908390045166
    9. '       ' → logprob: -11.72408390045166
    10. '	dp' → logprob: -11.72408390045166

Token 2409: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0026263119652867317
    2. ' dp' → logprob: -6.127626419067383
    3. '   ' → logprob: -7.752626419067383
    4. '=' → logprob: -12.252626419067383
    5. '```' → logprob: -13.377626419067383
    6. ' =' → logprob: -13.752626419067383
    7. '`' → logprob: -13.877626419067383
    8. '
' → logprob: -14.377626419067383
    9. '	dp' → logprob: -14.627626419067383
    10. '``' → logprob: -14.877626419067383

Token 2410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. '0' → logprob: -12.750004768371582
    3. '```' → logprob: -14.000004768371582
    4. 'i' → logprob: -14.750004768371582
    5. '[i' → logprob: -15.250004768371582
    6. '[' → logprob: -16.000003814697266
    7. 's' → logprob: -17.250003814697266
    8. '' → logprob: -17.750003814697266
    9. 'd' → logprob: -18.000003814697266
    10. ' ' → logprob: -18.000003814697266

Token 2411: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.511406809295295e-06
    2. '```' → logprob: -12.250006675720215
    3. '   ' → logprob: -13.375006675720215
    4. '[' → logprob: -16.7500057220459
    5. 'i' → logprob: -16.7500057220459
    6. '[int' → logprob: -17.2500057220459
    7. '[u' → logprob: -17.7500057220459
    8. '
' → logprob: -18.0000057220459
    9. '[I' → logprob: -18.2500057220459
    10. '[j' → logprob: -18.5000057220459

Token 2412: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005681642796844244
    2. '[i' → logprob: -7.500568389892578
    3. ']' → logprob: -12.250568389892578
    4. '   ' → logprob: -12.875568389892578
    5. ' ][' → logprob: -12.875568389892578
    6. 'i' → logprob: -13.875568389892578
    7. '>[' → logprob: -14.125568389892578
    8. '[' → logprob: -14.125568389892578
    9. '```' → logprob: -14.250568389892578
    10. '}[' → logprob: -14.375568389892578

Token 2413: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.088346359931165e-07
    2. 'i' → logprob: -14.375000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '   ' → logprob: -16.375
    5. '
' → logprob: -17.5
    6. ']' → logprob: -18.75
    7. '[' → logprob: -18.875
    8. '۳' → logprob: -19.25
    9. '[i' → logprob: -19.5
    10. '```' → logprob: -20.0

Token 2414: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007879522629082203
    2. '=' → logprob: -5.007879734039307
    3. ']=' → logprob: -6.757879734039307
    4. ' =' → logprob: -13.757879257202148
    5. ' ]' → logprob: -15.132879257202148
    6. ']
' → logprob: -15.382879257202148
    7. ')' → logprob: -15.757879257202148
    8. ']+=' → logprob: -16.63287925720215
    9. '[' → logprob: -17.88287925720215
    10. ']==' → logprob: -18.00787925720215

Token 2415: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0040785204619169235
    2. ' =' → logprob: -5.504078388214111
    3. '+=' → logprob: -16.254077911376953
    4. '   ' → logprob: -19.004077911376953
    5. '＝' → logprob: -19.129077911376953
    6. ' +=' → logprob: -20.129077911376953
    7. '=
' → logprob: -20.879077911376953
    8. ' ' → logprob: -21.129077911376953
    9. '.=' → logprob: -21.129077911376953
    10. ')' → logprob: -21.379077911376953

Token 2416: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003789388807490468
    2. ' ' → logprob: -5.62878942489624
    3. '0' → logprob: -8.628788948059082
    4. '(' → logprob: -12.253788948059082
    5. 'int' → logprob: -13.128788948059082
    6. ' (' → logprob: -14.003788948059082
    7. 'dp' → logprob: -14.003788948059082
    8. '   ' → logprob: -14.253788948059082
    9. 'i' → logprob: -15.003788948059082
    10. ' int' → logprob: -15.003788948059082

Token 2417: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.939851037808694e-05
    2. ' ' → logprob: -10.625029563903809
    3. '0' → logprob: -13.125029563903809
    4. '(' → logprob: -13.375029563903809
    5. 'int' → logprob: -13.750029563903809
    6. '   ' → logprob: -15.125029563903809
    7. '  ' → logprob: -17.812528610229492
    8. '`' → logprob: -18.625028610229492
    9. 'i' → logprob: -18.687528610229492
    10. 'True' → logprob: -18.687528610229492

Token 2418: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21699297428131104
    2. '<|end|>' → logprob: -2.0919928550720215
    3. 'if' → logprob: -2.7169928550720215
    4. '<|end|>' → logprob: -6.5919928550720215
    5. '   ' → logprob: -6.9669928550720215
    6. '	if' → logprob: -7.2169928550720215
    7. '  ' → logprob: -7.5919928550720215
    8. '=' → logprob: -7.7169928550720215
    9. ' ' → logprob: -7.8419928550720215
    10. ')' → logprob: -8.96699333190918

Token 2419: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023252584040164948
    2. ' i' → logprob: -3.773252487182617
    3. '   ' → logprob: -12.023252487182617
    4. ' ' → logprob: -14.273252487182617
    5. '  ' → logprob: -14.898252487182617
    6. '(i' → logprob: -16.773252487182617
    7. ' (' → logprob: -17.148252487182617
    8. '    ' → logprob: -17.398252487182617
    9. ' ' → logprob: -17.398252487182617
    10. '3' → logprob: -17.648252487182617

Token 2420: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1797514110803604
    2. '==' → logprob: -1.8047513961791992
    3. '==(' → logprob: -13.4297513961792
    4. '=' → logprob: -13.5547513961792
    5. '==
' → logprob: -13.8047513961792
    6. ' ' → logprob: -14.3047513961792
    7. ']==' → logprob: -14.6797513961792
    8. ' ' → logprob: -15.1797513961792
    9. '```' → logprob: -15.1797513961792
    10. ' =' → logprob: -15.4297513961792

Token 2421: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00014799882774241269
    2. ' ' → logprob: -9.250147819519043
    3. 'po' → logprob: -10.500147819519043
    4. '   ' → logprob: -11.250147819519043
    5. '(' → logprob: -11.875147819519043
    6. '(po' → logprob: -13.625147819519043
    7. '  ' → logprob: -13.750147819519043
    8. ' po' → logprob: -14.875147819519043
    9. '```' → logprob: -14.875147819519043
    10. '`' → logprob: -15.625147819519043

Token 2422: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.45848218582978e-06
    2. 'po' → logprob: -13.37500286102295
    3. ' ' → logprob: -14.37500286102295
    4. '(' → logprob: -16.625001907348633
    5. '(po' → logprob: -17.000001907348633
    6. '```' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.250001907348633
    8. '`' → logprob: -18.875001907348633
    9. '３' → logprob: -19.250001907348633
    10. 'three' → logprob: -19.375001907348633

Token 2423: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10020958632230759
    2. ' +' → logprob: -2.3502094745635986
    3. '+
' → logprob: -13.60020923614502
    4. '   ' → logprob: -14.35020923614502
    5. ' +
' → logprob: -15.10020923614502
    6. ' ' → logprob: -15.35020923614502
    7. '<|end|>' → logprob: -15.35020923614502
    8. ' ' → logprob: -15.85020923614502
    9. '＋' → logprob: -16.225210189819336
    10. '    ' → logprob: -16.600210189819336

Token 2424: ' po' (ID: 2482)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -4.036524842376821e-05
    2. ' po' → logprob: -10.125040054321289
    3. '(po' → logprob: -17.00004005432129
    4. ' ' → logprob: -17.75004005432129
    5. '```' → logprob: -17.87504005432129
    6. 'p' → logprob: -18.37504005432129
    7. '   ' → logprob: -18.37504005432129
    8. '`' → logprob: -18.37504005432129
    9. ' ' → logprob: -18.87504005432129
    10. 'por' → logprob: -19.00004005432129

Token 2425: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.006715967319905758
    2. 'else' → logprob: -5.006715774536133
    3. '	else' → logprob: -15.381715774536133
    4. ' elif' → logprob: -15.506715774536133
    5. ' ' → logprob: -16.756715774536133
    6. '<|end|>' → logprob: -17.131715774536133
    7. ' ' → logprob: -17.506715774536133
    8. '    ' → logprob: -17.756715774536133
    9. 'elif' → logprob: -18.006715774536133
    10. '_else' → logprob: -19.506715774536133

Token 2426: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014457291923463345
    2. ' ' → logprob: -4.2644572257995605
    3. '1' → logprob: -8.139457702636719
    4. '   ' → logprob: -14.139457702636719
    5. ' ' → logprob: -14.139457702636719
    6. '```' → logprob: -15.014457702636719
    7. '  ' → logprob: -16.51445770263672
    8. '	' → logprob: -16.88945770263672
    9. '=' → logprob: -17.38945770263672
    10. '``' → logprob: -17.38945770263672

Token 2427: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014111855998635292
    2. '1' → logprob: -6.626410961151123
    3. ' ' → logprob: -9.376411437988281
    4. '   ' → logprob: -15.438911437988281
    5. 'int' → logprob: -16.18891143798828
    6. '  ' → logprob: -16.68891143798828
    7. '```' → logprob: -17.06391143798828
    8. ' ' → logprob: -17.12641143798828
    9. '(' → logprob: -17.75141143798828
    10. '=' → logprob: -17.75141143798828

Token 2428: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2429: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1836068630218506
    2. '#' → logprob: -1.6836068630218506
    3. 'result' → logprob: -1.6836068630218506
    4. 'res' → logprob: -2.1836068630218506
    5. 'ans' → logprob: -2.3086068630218506
    6. 'answer' → logprob: -2.4336068630218506
    7. '```' → logprob: -5.43360710144043
    8. ')' → logprob: -5.68360710144043
    9. 'for' → logprob: -5.93360710144043
    10. 'total' → logprob: -6.18360710144043

Token 2430: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0836649164557457
    2. 'result' → logprob: -3.583664894104004
    3. 'ans' → logprob: -3.833664894104004
    4. 'res' → logprob: -4.083664894104004
    5. 'answer' → logprob: -4.708664894104004
    6. 'r' → logprob: -5.458664894104004
    7. 'pr' → logprob: -8.583664894104004
    8. 'ret' → logprob: -8.583664894104004
    9. '#' → logprob: -8.833664894104004
    10. 'rés' → logprob: -9.333664894104004

Token 2431: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.47827282547950745
    2. 'icher' → logprob: -1.853272795677185
    3. 'ich' → logprob: -2.4782729148864746
    4. 'ichage' → logprob: -2.4782729148864746
    5. '#' → logprob: -2.9782729148864746
    6. 'print' → logprob: -5.603272914886475
    7. '   ' → logprob: -7.603272914886475
    8. '```' → logprob: -8.603272438049316
    9. '#print' → logprob: -9.228272438049316
    10. 'iché' → logprob: -9.228272438049316

Token 2432: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35989704728126526
    2. 'print' → logprob: -1.4848970174789429
    3. '(dp' → logprob: -2.9848971366882324
    4. '(print' → logprob: -4.359897136688232
    5. '(sum' → logprob: -5.109897136688232
    6. 'dp' → logprob: -5.984897136688232
    7. 'sum' → logprob: -6.484897136688232
    8. '(max' → logprob: -6.984897136688232
    9. 'jo' → logprob: -7.234897136688232
    10. '(j' → logprob: -8.734896659851074

Token 2433: ' nombre' (ID: 9733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006192083936184645
    2. 'jo' → logprob: -6.131192207336426
    3. '(' → logprob: -6.256192207336426
    4. 'int' → logprob: -7.131192207336426
    5. 'sum' → logprob: -7.131192207336426
    6. 'r' → logprob: -8.631192207336426
    7. 'dp' → logprob: -9.881192207336426
    8. 'o' → logprob: -10.006192207336426
    9. '(dp' → logprob: -10.256192207336426
    10. 'result' → logprob: -10.381192207336426

Token 2434: ' total' (ID: 3609)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46040698885917664
    2. 'print' → logprob: -1.085407018661499
    3. '(
' → logprob: -3.710407018661499
    4. '(print' → logprob: -5.33540678024292
    5. '(dp' → logprob: -6.46040678024292
    6. '(sum' → logprob: -8.960407257080078
    7. '((' → logprob: -10.335407257080078
    8. 'dp' → logprob: -10.335407257080078
    9. '(

' → logprob: -11.210407257080078
    10. ')' → logprob: -11.335407257080078

Token 2435: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7359471321105957
    2. 'print' → logprob: -1.1109471321105957
    3. '(print' → logprob: -2.1109471321105957
    4. '(dp' → logprob: -2.9859471321105957
    5. '(sum' → logprob: -4.110947132110596
    6. '(
' → logprob: -6.235947132110596
    7. 'sum' → logprob: -7.485947132110596
    8. 'dp' → logprob: -7.610947132110596
    9. '((' → logprob: -8.235946655273438
    10. '(max' → logprob: -9.235946655273438

Token 2436: ' possibilités' (ID: 119756)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002028251619776711
    2. '(' → logprob: -9.500203132629395
    3. 'dp' → logprob: -9.500203132629395
    4. 'jo' → logprob: -11.000203132629395
    5. ' print' → logprob: -11.250203132629395
    6. '(print' → logprob: -12.375203132629395
    7. '(dp' → logprob: -12.375203132629395
    8. 'sum' → logprob: -12.625203132629395
    9. '#' → logprob: -13.000203132629395
    10. 'ans' → logprob: -13.250203132629395

Token 2437: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0564331205387134e-05
    2. '
' → logprob: -12.50001049041748
    3. '(' → logprob: -12.75001049041748
    4. '```' → logprob: -13.37501049041748
    5. '(print' → logprob: -13.37501049041748
    6. ' print' → logprob: -14.37501049041748
    7. ')' → logprob: -16.250011444091797
    8. ')
' → logprob: -16.625011444091797
    9. '(
' → logprob: -16.750011444091797
    10. 'result' → logprob: -17.250011444091797

Token 2438: ' les' (ID: 1341)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005603680852800608
    2. 'k' → logprob: -5.380603790283203
    3. 'i' → logprob: -8.005603790283203
    4. 'dp' → logprob: -8.130603790283203
    5. 'n' → logprob: -8.880603790283203
    6. '3' → logprob: -9.380603790283203
    7. 'j' → logprob: -10.630603790283203
    8. '
' → logprob: -10.880603790283203
    9. '0' → logprob: -11.380603790283203
    10. 'for' → logprob: -11.505603790283203

Token 2439: ' chaînes' (ID: 179904)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8292917609214783
    2. 'ch' → logprob: -1.079291820526123
    3. '3' → logprob: -2.454291820526123
    4. 'tro' → logprob: -3.329291820526123
    5. ' nombres' → logprob: -3.954291820526123
    6. 'nombre' → logprob: -3.954291820526123
    7. ' chiffres' → logprob: -4.454291820526123
    8. 'num' → logprob: -5.079291820526123
    9. '0' → logprob: -5.079291820526123
    10. 'k' → logprob: -5.579291820526123

Token 2440: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003674067324027419
    2. '(' → logprob: -5.878674030303955
    3. '(print' → logprob: -7.378674030303955
    4. 'dp' → logprob: -9.378674507141113
    5. '(dp' → logprob: -9.753674507141113
    6. '```' → logprob: -10.878674507141113
    7. '(sum' → logprob: -10.878674507141113
    8. 'sum' → logprob: -11.253674507141113
    9. '   ' → logprob: -11.753674507141113
    10. ' print' → logprob: -11.753674507141113

Token 2441: ' longueur' (ID: 104613)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.11046028882265091
    2. 'long' → logprob: -3.2354602813720703
    3. 'car' → logprob: -3.2354602813720703
    4. 'digits' → logprob: -4.11046028137207
    5. '#' → logprob: -5.73546028137207
    6. '0' → logprob: -6.86046028137207
    7. '3' → logprob: -6.98546028137207
    8. 'n' → logprob: -7.36046028137207
    9. 'chars' → logprob: -7.73546028137207
    10. 'str' → logprob: -7.86046028137207

Token 2442: ' ég' (ID: 33150)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8865079879760742
    2. 's' → logprob: -1.7615079879760742
    3. 'len' → logprob: -2.261507987976074
    4. 'dp' → logprob: -2.386507987976074
    5. '[len' → logprob: -2.636507987976074
    6. 'n' → logprob: -2.761507987976074
    7. '(len' → logprob: -3.761507987976074
    8. 'i' → logprob: -3.886507987976074
    9. '#' → logprob: -5.261507987976074
    10. '```' → logprob: -5.261507987976074

Token 2443: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.03712068498134613
    2. 'al' → logprob: -4.037120819091797
    3. 'a' → logprob: -4.162120819091797
    4. 'alee' → logprob: -6.162120819091797
    5. 'ales' → logprob: -8.162120819091797
    6. 'aule' → logprob: -8.287120819091797
    7. '```' → logprob: -9.412120819091797
    8. '>' → logprob: -10.037120819091797
    9. '=' → logprob: -10.162120819091797
    10. '{' → logprob: -10.162120819091797

Token 2444: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000969583576079458
    2. '(' → logprob: -7.500969409942627
    3. 'dp' → logprob: -8.875969886779785
    4. '(print' → logprob: -9.000969886779785
    5. '(dp' → logprob: -9.750969886779785
    6. 'for' → logprob: -10.250969886779785
    7. '#' → logprob: -11.375969886779785
    8. '
' → logprob: -11.750969886779785
    9. '[' → logprob: -12.000969886779785
    10. '   ' → logprob: -12.000969886779785

Token 2445: ' n' (ID: 297)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18163667619228363
    2. 'n' → logprob: -2.1816365718841553
    3. 'len' → logprob: -3.1816365718841553
    4. 'str' → logprob: -4.556636810302734
    5. 'i' → logprob: -7.556636810302734
    6. '```' → logprob: -8.806636810302734
    7. 'dp' → logprob: -9.181636810302734
    8. '[len' → logprob: -9.306636810302734
    9. 'print' → logprob: -9.556636810302734
    10. ' s' → logprob: -9.556636810302734

Token 2446: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.9054008084349334e-05
    2. '(' → logprob: -11.500039100646973
    3. '```' → logprob: -11.750039100646973
    4. ')' → logprob: -12.125039100646973
    5. '(print' → logprob: -12.250039100646973
    6. '
' → logprob: -12.250039100646973
    7. ')
' → logprob: -13.000039100646973
    8. ' print' → logprob: -13.750039100646973
    9. 'for' → logprob: -14.375039100646973
    10. '(
' → logprob: -15.000039100646973

Token 2447: ' ayant' (ID: 45436)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.758300438988954e-05
    2. ' print' → logprob: -9.250097274780273
    3. '
' → logprob: -13.500097274780273
    4. '```' → logprob: -17.750097274780273
    5. 'sum' → logprob: -18.125097274780273
    6. 'dp' → logprob: -18.500097274780273
    7. ')' → logprob: -18.625097274780273
    8. '#print' → logprob: -18.875097274780273
    9. '#' → logprob: -19.000097274780273
    10. '   ' → logprob: -19.250097274780273

Token 2448: ' k' (ID: 372)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1367623656988144
    2. 'sum' → logprob: -3.2617623805999756
    3. 'print' → logprob: -3.6367623805999756
    4. 'exact' → logprob: -3.7617623805999756
    5. '0' → logprob: -4.0117621421813965
    6. 'dp' → logprob: -4.8867621421813965
    7. '1' → logprob: -5.5117621421813965
    8. 'k' → logprob: -5.5117621421813965
    9. 'at' → logprob: -6.6367621421813965
    10. 'au' → logprob: -7.0117621421813965

Token 2449: ' chiffres' (ID: 105565)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.14266934990882874
    2. ' non' → logprob: -2.517669439315796
    3. '[' → logprob: -4.017669200897217
    4. '_non' → logprob: -4.767669200897217
    5. 'dp' → logprob: -5.017669200897217
    6. '0' → logprob: -5.017669200897217
    7. ' ' → logprob: -6.392669200897217
    8. '=' → logprob: -6.642669200897217
    9. '==' → logprob: -6.767669200897217
    10. '   ' → logprob: -7.017669200897217

Token 2450: ' non' (ID: 2893)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04012669622898102
    2. '(k' → logprob: -4.540126800537109
    3. '(' → logprob: -5.165126800537109
    4. 'k' → logprob: -5.540126800537109
    5. '[' → logprob: -5.915126800537109
    6. 'for' → logprob: -5.915126800537109
    7. '#' → logprob: -5.915126800537109
    8. '[k' → logprob: -6.165126800537109
    9. 'if' → logprob: -6.165126800537109
    10. '```' → logprob: -6.540126800537109

Token 2451: '-z' (ID: 16826)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01611425168812275
    2. 'z' → logprob: -4.516114234924316
    3. 'zero' → logprob: -6.141114234924316
    4. '-z' → logprob: -6.891114234924316
    5. '_z' → logprob: -7.141114234924316
    6. ' zéro' → logprob: -7.766114234924316
    7. '_' → logprob: -8.266114234924316
    8. '-' → logprob: -9.016114234924316
    9. '_zero' → logprob: -9.266114234924316
    10. 'zeros' → logprob: -9.766114234924316

Token 2452: 'éro' (ID: 28155)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.2510358989238739
    2. 'éro' → logprob: -1.8760359287261963
    3. '_ro' → logprob: -3.7510359287261963
    4. '_' → logprob: -3.8760359287261963
    5. '=' → logprob: -5.126035690307617
    6. '```' → logprob: -5.251035690307617
    7. '#' → logprob: -5.751035690307617
    8. '(ro' → logprob: -6.376035690307617
    9. '[' → logprob: -7.001035690307617
    10. '{
' → logprob: -7.376035690307617

Token 2453: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.0020742492051795e-05
    2. '
' → logprob: -10.000049591064453
    3. '```' → logprob: -12.625049591064453
    4. ' print' → logprob: -14.250049591064453
    5. '#print' → logprob: -16.000049591064453
    6. '(print' → logprob: -16.000049591064453
    7. '#' → logprob: -16.250049591064453
    8. '[' → logprob: -16.625049591064453
    9. ')
' → logprob: -16.875049591064453
    10. ')' → logprob: -17.250049591064453

Token 2454: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.981667537620524e-06
    2. '```' → logprob: -13.375001907348633
    3. '
' → logprob: -15.000001907348633
    4. ' print' → logprob: -17.875001907348633
    5. 'pr' → logprob: -18.125001907348633
    6. '``' → logprob: -18.375001907348633
    7. '(print' → logprob: -18.375001907348633
    8. 'if' → logprob: -18.375001907348633
    9. 'for' → logprob: -19.500001907348633
    10. '#print' → logprob: -19.625001907348633

Token 2455: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2664456789934775e-06
    2. '
' → logprob: -13.625000953674316
    3. '```' → logprob: -16.875001907348633
    4. ' print' → logprob: -19.500001907348633
    5. 'pr' → logprob: -19.625001907348633
    6. '#print' → logprob: -19.875001907348633
    7. 'for' → logprob: -21.250001907348633
    8. '#' → logprob: -21.375001907348633
    9. 'if' → logprob: -21.750001907348633
    10. 'ans' → logprob: -21.875001907348633

Token 2456: ' ajoute' (ID: 91611)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22183933854103088
    2. '[' → logprob: -2.846839427947998
    3. ' =' → logprob: -3.096839427947998
    4. '=' → logprob: -3.471839427947998
    5. '0' → logprob: -3.596839427947998
    6. '#' → logprob: -3.971839427947998
    7. '
' → logprob: -5.471839427947998
    8. ' print' → logprob: -5.971839427947998
    9. 's' → logprob: -6.221839427947998
    10. '```' → logprob: -6.346839427947998

Token 2457: ' les' (ID: 1341)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.14161835610866547
    2. '(' → logprob: -2.391618251800537
    3. 'dp' → logprob: -3.641618251800537
    4. '(
' → logprob: -4.391618251800537
    5. 'print' → logprob: -6.516618251800537
    6. '("' → logprob: -9.766618728637695
    7. ' (' → logprob: -9.891618728637695
    8. '("\' → logprob: -9.891618728637695
    9. '((' → logprob: -9.891618728637695
    10. '(print' → logprob: -9.891618728637695

Token 2458: ' deux' (ID: 10301)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03738851100206375
    2. '(dp' → logprob: -3.912388563156128
    3. 'print' → logprob: -4.162388324737549
    4. ' dp' → logprob: -7.912388324737549
    5. '[' → logprob: -8.287388801574707
    6. 'str' → logprob: -9.162388801574707
    7. '+' → logprob: -9.287388801574707
    8. '[
' → logprob: -9.412388801574707
    9. '(' → logprob: -9.912388801574707
    10. '#' → logprob: -10.037388801574707

Token 2459: ' cas' (ID: 2108)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003218230325728655
    2. ' print' → logprob: -6.753218173980713
    3. '   ' → logprob: -7.753218173980713
    4. '[' → logprob: -8.128218650817871
    5. '#' → logprob: -8.628218650817871
    6. '(print' → logprob: -8.628218650817871
    7. '(
' → logprob: -8.753218650817871
    8. '
' → logprob: -9.128218650817871
    9. '[
' → logprob: -9.253218650817871
    10. '(' → logprob: -9.378218650817871

Token 2460: ' :' (ID: 712)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.5297465324401855
    2. 'print' → logprob: -1.4047465324401855
    3. 'dp' → logprob: -1.9047465324401855
    4. '=' → logprob: -4.9047465324401855
    5. ' =' → logprob: -5.5297465324401855
    6. '[' → logprob: -6.5297465324401855
    7. 'for' → logprob: -6.5297465324401855
    8. '(' → logprob: -6.6547465324401855
    9. ':' → logprob: -8.654747009277344
    10. '(print' → logprob: -8.654747009277344

Token 2461: ' "' (ID: 392)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013424558565020561
    2. 'dp' → logprob: -4.638424396514893
    3. ' print' → logprob: -5.763424396514893
    4. '(dp' → logprob: -8.01342487335205
    5. ' dp' → logprob: -8.63842487335205
    6. '(print' → logprob: -11.63842487335205
    7. '(' → logprob: -13.51342487335205
    8. 'str' → logprob: -13.88842487335205
    9. '   ' → logprob: -14.13842487335205
    10. ' (' → logprob: -15.51342487335205

Token 2462: 'strict' (ID: 86800)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03336084634065628
    2. '(dp' → logprob: -3.5333609580993652
    3. ' dp' → logprob: -5.658360958099365
    4. '(' → logprob: -10.033360481262207
    5. 'str' → logprob: -10.658360481262207
    6. 'jo' → logprob: -11.283360481262207
    7. ' (' → logprob: -11.408360481262207
    8. 'print' → logprob: -11.908360481262207
    9. '(d' → logprob: -12.658360481262207
    10. '"' → logprob: -12.783360481262207

Token 2463: 'ement' (ID: 962)
  Prédit: '+
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+
' → logprob: -0.784171462059021
    2. '+' → logprob: -1.534171462059021
    3. ')' → logprob: -1.784171462059021
    4. ' +' → logprob: -2.9091715812683105
    5. '   ' → logprob: -3.2841715812683105
    6. ')
' → logprob: -3.7841715812683105
    7. '(
' → logprob: -4.4091715812683105
    8. ' +
' → logprob: -4.6591715812683105
    9. ')+' → logprob: -5.0341715812683105
    10. 'dp' → logprob: -5.1591715812683105

Token 2464: ' plus' (ID: 2932)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.032767925411462784
    2. ' inférieur' → logprob: -3.9077680110931396
    3. ' <' → logprob: -4.5327677726745605
    4. '<=' → logprob: -7.6577677726745605
    5. 'inf' → logprob: -8.407768249511719
    6. 'moins' → logprob: -8.532768249511719
    7. '<
' → logprob: -9.032768249511719
    8. ' moins' → logprob: -9.532768249511719
    9. ' inf' → logprob: -10.157768249511719
    10. '<'' → logprob: -10.157768249511719

Token 2465: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.5447148084640503
    2. ' petit' → logprob: -1.0447148084640503
    3. 'small' → logprob: -3.04471492767334
    4. ' small' → logprob: -4.54471492767334
    5. ' petits' → logprob: -4.91971492767334
    6. '_small' → logprob: -7.54471492767334
    7. '<' → logprob: -7.66971492767334
    8. ' petite' → logprob: -8.04471492767334
    9. ' petites' → logprob: -8.29471492767334
    10. ' pet' → logprob: -8.29471492767334

Token 2466: ' que' (ID: 661)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.424153208732605
    2. '[k' → logprob: -1.799153208732605
    3. '+' → logprob: -1.924153208732605
    4. ' +' → logprob: -2.1741533279418945
    5. 'de' → logprob: -2.7991533279418945
    6. '0' → logprob: -2.9241533279418945
    7. '[i' → logprob: -3.0491533279418945
    8. 'dp' → logprob: -3.9241533279418945
    9. ')' → logprob: -4.0491533279418945
    10. 'k' → logprob: -4.5491533279418945

Token 2467: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05582836642861366
    2. ' n' → logprob: -2.930828332901001
    3. 's' → logprob: -7.30582857131958
    4. ' s' → logprob: -8.930828094482422
    5. 'str' → logprob: -10.430828094482422
    6. '
' → logprob: -10.805828094482422
    7. 'dp' → logprob: -10.805828094482422
    8. ' ' → logprob: -11.680828094482422
    9. 'k' → logprob: -12.055828094482422
    10. ' ' → logprob: -12.305828094482422

Token 2468: '"' (ID: 1)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08332452923059464
    2. '0' → logprob: -3.458324432373047
    3. ')' → logprob: -4.208324432373047
    4. '   ' → logprob: -4.708324432373047
    5. '
' → logprob: -5.208324432373047
    6. ' [' → logprob: -5.458324432373047
    7. '[i' → logprob: -6.083324432373047
    8. '][' → logprob: -6.333324432373047
    9. ' ' → logprob: -6.833324432373047
    10. '[k' → logprob: -6.833324432373047

Token 2469: ' et' (ID: 859)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6812165975570679
    2. '[' → logprob: -1.5562165975570679
    3. 'dp' → logprob: -1.6812165975570679
    4. '[k' → logprob: -2.4312167167663574
    5. '   ' → logprob: -6.306216716766357
    6. ')' → logprob: -6.931216716766357
    7. '(dp' → logprob: -7.056216716766357
    8. 'for' → logprob: -7.181216716766357
    9. '
' → logprob: -7.431216716766357
    10. ' dp' → logprob: -7.556216716766357

Token 2470: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09102287888526917
    2. ' "' → logprob: -2.4660229682922363
    3. '"k' → logprob: -6.716022968292236
    4. 'égal' → logprob: -7.841022968292236
    5. '"s' → logprob: -9.091022491455078
    6. '#' → logprob: -9.216022491455078
    7. ' #' → logprob: -10.716022491455078
    8. ' ' → logprob: -10.716022491455078
    9. '"d' → logprob: -10.716022491455078
    10. '
' → logprob: -10.966022491455078

Token 2471: 'exact' (ID: 86898)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6551117897033691
    2. '"' → logprob: -0.7801117897033691
    3. 'égal' → logprob: -4.905111789703369
    4. ' dp' → logprob: -5.530111789703369
    5. '1' → logprob: -6.030111789703369
    6. '#' → logprob: -6.530111789703369
    7. ' "' → logprob: -6.530111789703369
    8. ' égal' → logprob: -7.780111789703369
    9. '""' → logprob: -7.905111789703369
    10. ''' → logprob: -8.155111312866211

Token 2472: 'ement' (ID: 962)
  Prédit: 'ément'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.13596156239509583
    2. 'ement' → logprob: -2.1359615325927734
    3. 'e' → logprob: -5.510961532592773
    4. 'égal' → logprob: -5.635961532592773
    5. 'ém' → logprob: -8.385961532592773
    6. '=' → logprob: -8.385961532592773
    7. '   ' → logprob: -9.385961532592773
    8. 'éments' → logprob: -9.385961532592773
    9. 'emment' → logprob: -9.385961532592773
    10. 'érieure' → logprob: -9.510961532592773

Token 2473: ' égal' (ID: 15059)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.7195778489112854
    2. ' égal' → logprob: -1.8445777893066406
    3. ' ég' → logprob: -1.9695777893066406
    4. 'ég' → logprob: -3.0945777893066406
    5. 'k' → logprob: -3.2195777893066406
    6. 'n' → logprob: -3.7195777893066406
    7. 'equal' → logprob: -3.8445777893066406
    8. '==' → logprob: -4.094577789306641
    9. '=' → logprob: -4.219577789306641
    10. ' n' → logprob: -4.219577789306641

Token 2474: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.2169417440891266
    2. ' à' → logprob: -1.7169417142868042
    3. '   ' → logprob: -5.216941833496094
    4. ''à' → logprob: -6.591941833496094
    5. 'au' → logprob: -6.716941833496094
    6. ' ' → logprob: -6.716941833496094
    7. 'a' → logprob: -6.841941833496094
    8. '=' → logprob: -7.091941833496094
    9. 'À' → logprob: -7.216941833496094
    10. '"' → logprob: -7.966941833496094

Token 2475: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5915151834487915
    2. ' n' → logprob: -0.9665151834487915
    3. 's' → logprob: -3.466515064239502
    4. ' s' → logprob: -3.591515064239502
    5. 'k' → logprob: -5.716515064239502
    6. ' k' → logprob: -6.466515064239502
    7. 'str' → logprob: -6.841515064239502
    8. ' str' → logprob: -6.966515064239502
    9. 'dp' → logprob: -8.96651554107666
    10. ' dp' → logprob: -9.09151554107666

Token 2476: '"
' (ID: 1092)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.371159315109253
    2. '][' → logprob: -1.371159315109253
    3. '[' → logprob: -1.621159315109253
    4. 'dp' → logprob: -2.371159315109253
    5. '[k' → logprob: -2.746159315109253
    6. '   ' → logprob: -3.871159315109253
    7. ')[' → logprob: -3.996159315109253
    8. ')' → logprob: -4.121159553527832
    9. ' [' → logprob: -4.496159553527832
    10. ' dp' → logprob: -4.871159553527832

Token 2477: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.625
    3. '```' → logprob: -18.25
    4. ' print' → logprob: -19.0
    5. '(print' → logprob: -19.125
    6. 'pr' → logprob: -19.625
    7. 'result' → logprob: -21.0
    8. '#print' → logprob: -21.25
    9. 'prin' → logprob: -21.875
    10. 'ans' → logprob: -22.5

Token 2478: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0001431114797014743
    2. 'dp' → logprob: -9.000143051147461
    3. '(' → logprob: -10.875143051147461
    4. '((' → logprob: -14.875143051147461
    5. '(d' → logprob: -16.00014305114746
    6. ' dp' → logprob: -16.87514305114746
    7. '(
' → logprob: -16.87514305114746
    8. '	dp' → logprob: -17.25014305114746
    9. '(sum' → logprob: -17.37514305114746
    10. '(int' → logprob: -17.62514305114746

Token 2479: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.690834273584187e-05
    2. '1' → logprob: -10.25003719329834
    3. '[i' → logprob: -14.87503719329834
    4. '```' → logprob: -15.50003719329834
    5. '０' → logprob: -15.75003719329834
    6. '[len' → logprob: -15.93753719329834
    7. 'len' → logprob: -16.187536239624023
    8. '_' → logprob: -16.250036239624023
    9. ' ' → logprob: -16.375036239624023
    10. '۰' → logprob: -16.812536239624023

Token 2480: '[-' (ID: 17503)
  Prédit: '[len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[len' → logprob: -4.5491004129871726e-05
    2. '[-' → logprob: -10.000045776367188
    3. '[n' → logprob: -17.250045776367188
    4. '[length' → logprob: -17.375045776367188
    5. '(len' → logprob: -19.750045776367188
    6. '[' → logprob: -20.000045776367188
    7. '[num' → logprob: -21.500045776367188
    8. '[end' → logprob: -21.500045776367188
    9. '[min' → logprob: -21.500045776367188
    10. '[size' → logprob: -21.625045776367188

Token 2481: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '][' → logprob: -17.125
    4. '   ' → logprob: -17.5
    5. '```' → logprob: -18.125
    6. '
' → logprob: -18.625
    7. '  ' → logprob: -18.75
    8. '１' → logprob: -19.625
    9. '2' → logprob: -20.0
    10. '``' → logprob: -20.0

Token 2482: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013846398796886206
    2. '[' → logprob: -7.501384735107422
    3. '][-' → logprob: -7.626384735107422
    4. ' ][' → logprob: -8.751384735107422
    5. ']' → logprob: -9.001384735107422
    6. '[k' → logprob: -10.501384735107422
    7. '   ' → logprob: -11.876384735107422
    8. '[-' → logprob: -12.376384735107422
    9. ')[' → logprob: -12.876384735107422
    10. '[len' → logprob: -12.876384735107422

Token 2483: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: 0.0
    2. ' k' → logprob: -19.5
    3. '{k' → logprob: -21.625
    4. '	k' → logprob: -22.75
    5. '3' → logprob: -24.5
    6. '[k' → logprob: -25.5
    7. 'к' → logprob: -25.625
    8. '*k' → logprob: -25.875
    9. '"k' → logprob: -25.875
    10. 'kx' → logprob: -26.0

Token 2484: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011053952388465405
    2. ']+' → logprob: -4.511054039001465
    3. ' ]' → logprob: -12.136054039001465
    4. '])' → logprob: -15.011054039001465
    5. '+' → logprob: -15.261054039001465
    6. ']
' → logprob: -16.13605308532715
    7. '+]' → logprob: -17.01105308532715
    8. ']+=' → logprob: -17.51105308532715
    9. ')' → logprob: -17.88605308532715
    10. '])+' → logprob: -18.13605308532715

Token 2485: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005237548612058163
    2. ' +' → logprob: -5.255237579345703
    3. '+
' → logprob: -12.630237579345703
    4. ')' → logprob: -15.005237579345703
    5. ')+' → logprob: -16.505237579345703
    6. '+)' → logprob: -17.880237579345703
    7. ' +
' → logprob: -18.380237579345703
    8. '   ' → logprob: -18.755237579345703
    9. '+d' → logprob: -18.880237579345703
    10. ' ' → logprob: -19.005237579345703

Token 2486: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -3.547789674485102e-05
    2. ' dp' → logprob: -10.250035285949707
    3. '	dp' → logprob: -19.875036239624023
    4. '   ' → logprob: -20.000036239624023
    5. '(dp' → logprob: -20.000036239624023
    6. 'dt' → logprob: -22.125036239624023
    7. ' ' → logprob: -22.750036239624023
    8. 'd' → logprob: -23.000036239624023
    9. 'dc' → logprob: -23.250036239624023
    10. '       ' → logprob: -23.375036239624023

Token 2487: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. '[-' → logprob: -13.000001907348633
    3. '[' → logprob: -17.125001907348633
    4. ' ' → logprob: -17.500001907348633
    5. '１' → logprob: -17.875001907348633
    6. '-' → logprob: -18.250001907348633
    7. '```' → logprob: -18.250001907348633
    8. '_' → logprob: -18.500001907348633
    9. '   ' → logprob: -18.937501907348633
    10. '`' → logprob: -19.312501907348633

Token 2488: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.1160349458805285e-05
    2. '[' → logprob: -11.875011444091797
    3. '1' → logprob: -13.000011444091797
    4. '-' → logprob: -14.250011444091797
    5. '```' → logprob: -14.750011444091797
    6. '][-' → logprob: -15.000011444091797
    7. '`' → logprob: -15.625011444091797
    8. '[i' → logprob: -16.625011444091797
    9. '[
' → logprob: -17.250011444091797
    10. '[:-' → logprob: -17.250011444091797

Token 2489: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '```' → logprob: -18.375
    4. '-' → logprob: -19.8125
    5. '0' → logprob: -20.0625
    6. '   ' → logprob: -20.25
    7. '
' → logprob: -20.375
    8. 'len' → logprob: -20.5625
    9. '2' → logprob: -20.5625
    10. 'print' → logprob: -20.6875

Token 2490: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00024025145103223622
    2. '[k' → logprob: -9.250240325927734
    3. ']' → logprob: -9.500240325927734
    4. '[' → logprob: -10.250240325927734
    5. ' ][' → logprob: -10.500240325927734
    6. '   ' → logprob: -13.625240325927734
    7. ']][' → logprob: -14.375240325927734
    8. '	' → logprob: -14.500240325927734
    9. ''][' → logprob: -14.500240325927734
    10. 'k' → logprob: -14.625240325927734

Token 2491: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: 0.0
    2. ' k' → logprob: -18.125
    3. '[k' → logprob: -18.875
    4. '   ' → logprob: -19.25
    5. '{k' → logprob: -19.75
    6. ' ' → logprob: -20.5
    7. '```' → logprob: -20.75
    8. '
' → logprob: -20.75
    9. '	k' → logprob: -21.25
    10. 'к' → logprob: -21.625

Token 2492: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00862521305680275
    2. ')' → logprob: -4.758625030517578
    3. ']' → logprob: -12.133625030517578
    4. '})' → logprob: -13.258625030517578
    5. '])
' → logprob: -13.383625030517578
    6. ')])' → logprob: -14.383625030517578
    7. '))' → logprob: -14.758625030517578
    8. ' ])' → logprob: -15.133625030517578
    9. ''])' → logprob: -15.883625030517578
    10. '）' → logprob: -15.883625030517578

Token 2493: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2494: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2495: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2496: '1' (ID: 16)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2497: ' indique' (ID: 97324)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2498: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2499: ' dernier' (ID: 27982)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.11497259885072708
    2. ' last' → logprob: -2.8649725914001465
    3. 'end' → logprob: -3.8649725914001465
    4. 'final' → logprob: -4.3649725914001465
    5. ' dernier' → logprob: -5.3649725914001465
    6. ' end' → logprob: -5.4899725914001465
    7. 'length' → logprob: -5.8649725914001465
    8. ' final' → logprob: -5.8649725914001465
    9. 'len' → logprob: -6.1149725914001465
    10. 'dern' → logprob: -8.239973068237305

Token 2500: ' index' (ID: 3472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2501: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2581730782985687
    2. '<|end|>' → logprob: -1.8831731081008911
    3. '
' → logprob: -2.6331729888916016
    4. '+' → logprob: -6.508172988891602
    5. '```' → logprob: -6.883172988891602
    6. '#' → logprob: -8.258172988891602
    7. '<|end|>' → logprob: -8.383172988891602
    8. '\n' → logprob: -9.008172988891602
    9. '}' → logprob: -9.258172988891602
    10. ']' → logprob: -9.383172988891602

Token 2502: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0021505001932382584
    2. ' dp' → logprob: -7.002150535583496
    3. 's' → logprob: -7.627150535583496
    4. ')' → logprob: -8.002150535583496
    5. '
' → logprob: -9.002150535583496
    6. ']' → logprob: -9.377150535583496
    7. '(dp' → logprob: -9.877150535583496
    8. '[' → logprob: -10.127150535583496
    9. '[
' → logprob: -11.002150535583496
    10. '#' → logprob: -11.252150535583496

Token 2503: ' table' (ID: 3293)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02638726495206356
    2. ']' → logprob: -4.4013872146606445
    3. 'list' → logprob: -5.1513872146606445
    4. 's' → logprob: -5.6513872146606445
    5. '[]' → logprob: -6.5263872146606445
    6. ')' → logprob: -7.0263872146606445
    7. '])' → logprob: -7.6513872146606445
    8. ' dp' → logprob: -8.151387214660645
    9. '#' → logprob: -8.276387214660645
    10. '`' → logprob: -8.651387214660645

Token 2504: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.815464437007904
    2. '<|end|>' → logprob: -0.940464437007904
    3. '
' → logprob: -1.8154644966125488
    4. '```' → logprob: -6.190464496612549
    5. '#' → logprob: -7.065464496612549
    6. '<|end|>' → logprob: -7.815464496612549
    7. '+' → logprob: -8.06546401977539
    8. '\n' → logprob: -8.19046401977539
    9. '}' → logprob: -8.94046401977539
    10. ']' → logprob: -9.69046401977539

Token 2505: ' soit' (ID: 17293)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2506: ' tous' (ID: 10688)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3580058813095093
    2. '```' → logprob: -2.233006000518799
    3. '<|end|>' → logprob: -2.983006000518799
    4. '
' → logprob: -3.108006000518799
    5. ')' → logprob: -3.358006000518799
    6. 'newline' → logprob: -3.608006000518799
    7. '0' → logprob: -4.858006000518799
    8. '\' → logprob: -4.983006000518799
    9. ')
' → logprob: -5.483006000518799
    10. 'len' → logprob: -6.233006000518799

Token 2507: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2508: ' chiffres' (ID: 105565)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.12518148124217987
    2. 'élé' → logprob: -3.5001814365386963
    3. 'digits' → logprob: -3.5001814365386963
    4. 'car' → logprob: -4.375181674957275
    5. ']' → logprob: -4.500181674957275
    6. 'k' → logprob: -4.625181674957275
    7. ' chiffres' → logprob: -5.000181674957275
    8. '#' → logprob: -5.250181674957275
    9. 'i' → logprob: -6.250181674957275
    10. 'd' → logprob: -6.750181674957275

Token 2509: ' considér' (ID: 68502)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2510: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.00895584188401699
    2. 's' → logprob: -4.883955955505371
    3. 'es' → logprob: -7.008955955505371
    4. 'é' → logprob: -8.133955955505371
    5. '#' → logprob: -10.008955955505371
    6. 'ées' → logprob: -11.258955955505371
    7. '```' → logprob: -11.258955955505371
    8. 't' → logprob: -11.383955955505371
    9. 'ant' → logprob: -11.383955955505371
    10. '0' → logprob: -11.633955955505371


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2508
Tokens correctement prédits (1ère position, stricte): 555
Tokens correctement prédits (1ère position, avec adaptation): 586
Tokens correctement prédits (top 10): 1317
Précision stricte (1ère position): 22.13%
Précision adaptée (1ère position): 23.37%
Précision (top 10): 52.51%
================================================================================
