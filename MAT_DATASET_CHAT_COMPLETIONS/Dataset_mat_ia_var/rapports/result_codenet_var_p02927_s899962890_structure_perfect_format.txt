================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
m, d = map(int, input().split())

ans = 0
if d > 9:
    for i in range(d - 9):
        s = str(i + 10)
        if int(s[-1]) > 1 and int(s[-2]) > 1:
            t = int(s[-1]) * int(s[-2])
            if t <= m and t != 0:
                ans += 1

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'm' (ID: 76)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' d' (ID: 272)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7080742716789246
    2. ',' → logprob: -0.8330742716789246
    3. '.' → logprob: -3.3330743312835693
    4. ')' → logprob: -4.08307409286499
    5. ' =' → logprob: -4.70807409286499
    6. '[' → logprob: -4.70807409286499
    7. '+' → logprob: -7.33307409286499
    8. ':' → logprob: -8.333074569702148
    9. ';' → logprob: -8.708074569702148
    10. '(' → logprob: -9.083074569702148

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6963685750961304
    2. ' map' → logprob: -0.9463685750961304
    3. ' m' → logprob: -3.07136869430542
    4. 'map' → logprob: -3.82136869430542
    5. ' input' → logprob: -3.94636869430542
    6. '0' → logprob: -4.94636869430542
    7. ' datetime' → logprob: -5.44636869430542
    8. 'input' → logprob: -5.57136869430542
    9. ' div' → logprob: -5.94636869430542
    10. 'm' → logprob: -6.57136869430542

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07915371656417847
    2. '(int' → logprob: -3.3291537761688232
    3. '(lambda' → logprob: -3.3291537761688232
    4. '(str' → logprob: -5.704153537750244
    5. '(m' → logprob: -8.579154014587402
    6. '```' → logprob: -9.454154014587402
    7. '(input' → logprob: -9.829154014587402
    8. '(eval' → logprob: -9.829154014587402
    9. '<|end|>' → logprob: -9.829154014587402
    10. '(len' → logprob: -9.954154014587402

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09894702583551407
    2. ')' → logprob: -2.473947048187256
    3. '(' → logprob: -5.098947048187256
    4. 'input' → logprob: -5.848947048187256
    5. '```' → logprob: -8.098946571350098
    6. '`)' → logprob: -8.598946571350098
    7. '`' → logprob: -9.473946571350098
    8. '(user' → logprob: -9.973946571350098
    9. '[input' → logprob: -10.348946571350098
    10. ' input' → logprob: -10.348946571350098

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4743572175502777
    2. ' input' → logprob: -0.9743572473526001
    3. '(input' → logprob: -8.224357604980469
    4. ',input' → logprob: -12.099357604980469
    5. ')' → logprob: -12.349357604980469
    6. '```' → logprob: -14.724357604980469
    7. '=input' → logprob: -14.974357604980469
    8. '[input' → logprob: -15.474357604980469
    9. 'range' → logprob: -15.724357604980469
    10. '<input' → logprob: -15.724357604980469

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8059079051017761
    2. '())' → logprob: -1.055907964706421
    3. '(' → logprob: -2.305907964706421
    4. '('' → logprob: -2.805907964706421
    5. '().' → logprob: -4.680907726287842
    6. '());' → logprob: -5.055907726287842
    7. '(()' → logprob: -5.180907726287842
    8. ')' → logprob: -5.430907726287842
    9. '`()' → logprob: -5.555907726287842
    10. '("("' → logprob: -5.805907726287842

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019446993246674538
    2. 'strip' → logprob: -6.251944541931152
    3. 'rstrip' → logprob: -11.251944541931152
    4. ' split' → logprob: -13.501944541931152
    5. ')' → logprob: -14.251944541931152
    6. '(split' → logprob: -14.626944541931152
    7. '```' → logprob: -15.626944541931152
    8. 'read' → logprob: -15.751944541931152
    9. 'replace' → logprob: -15.876944541931152
    10. 'startswith' → logprob: -16.12694549560547

Token 10: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7710905075073242
    2. '())' → logprob: -0.7710905075073242
    3. '))' → logprob: -2.896090507507324
    4. '('' → logprob: -4.521090507507324
    5. '()))' → logprob: -5.271090507507324
    6. '()' → logprob: -6.146090507507324
    7. '(' → logprob: -7.396090507507324
    8. '')' → logprob: -7.646090507507324
    9. '`)' → logprob: -8.896090507507324
    10. '(','' → logprob: -9.396090507507324

Token 11: 'ans' (ID: 616)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.022376682609319687
    2. '#' → logprob: -4.522376537322998
    3. ' if' → logprob: -5.147376537322998
    4. 'y' → logprob: -6.647376537322998
    5. ',' → logprob: -7.522376537322998
    6. '`' → logprob: -7.522376537322998
    7. 'i' → logprob: -7.522376537322998
    8. 'n' → logprob: -7.897376537322998
    9. 'year' → logprob: -8.147377014160156
    10. 'day' → logprob: -8.272377014160156

Token 12: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2988397479057312
    2. ' =' → logprob: -1.798839807510376
    3. ' +=' → logprob: -3.173839807510376
    4. '+=' → logprob: -3.298839807510376
    5. '+' → logprob: -5.423839569091797
    6. '_' → logprob: -5.548839569091797
    7. '[' → logprob: -5.923839569091797
    8. '(' → logprob: -7.298839569091797
    9. ')' → logprob: -7.548839569091797
    10. ' ' → logprob: -7.673839569091797

Token 13: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5504953265190125
    2. ' ' → logprob: -1.8004953861236572
    3. 'm' → logprob: -2.5504953861236572
    4. '"' → logprob: -2.8004953861236572
    5. ''' → logprob: -3.9254953861236572
    6. ' m' → logprob: -3.9254953861236572
    7. '[]' → logprob: -4.175495147705078
    8. 'abs' → logprob: -4.550495147705078
    9. 'max' → logprob: -4.800495147705078
    10. ' (' → logprob: -4.800495147705078

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46424973011016846
    2. 'm' → logprob: -2.339249610900879
    3. 'abs' → logprob: -3.089249610900879
    4. 'max' → logprob: -3.339249610900879
    5. 'min' → logprob: -3.339249610900879
    6. '1' → logprob: -3.589249610900879
    7. '"' → logprob: -3.964249610900879
    8. '31' → logprob: -4.214249610900879
    9. 'd' → logprob: -4.714249610900879
    10. '[' → logprob: -4.714249610900879

Token 15: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05969681218266487
    2. ' for' → logprob: -3.309696912765503
    3. '\n' → logprob: -4.809696674346924
    4. '
' → logprob: -5.309696674346924
    5. 'if' → logprob: -5.809696674346924
    6. '\' → logprob: -6.559696674346924
    7. '```' → logprob: -6.934696674346924
    8. ' ' → logprob: -7.059696674346924
    9. '' → logprob: -7.309696674346924
    10. ' 
' → logprob: -7.684696674346924

Token 16: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006505874451249838
    2. ' for' → logprob: -5.131505966186523
    3. 'if' → logprob: -8.506505966186523
    4. '```' → logprob: -8.506505966186523
    5. '\n' → logprob: -10.381505966186523
    6. '`' → logprob: -10.631505966186523
    7. '
' → logprob: -10.631505966186523
    8. ' ' → logprob: -10.756505966186523
    9. '\' → logprob: -11.506505966186523
    10. 'i' → logprob: -11.756505966186523

Token 17: ' d' (ID: 272)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.008961515501141548
    2. 'm' → logprob: -5.0089616775512695
    3. ' d' → logprob: -6.3839616775512695
    4. ' ' → logprob: -8.13396167755127
    5. ' (' → logprob: -9.00896167755127
    6. '(' → logprob: -10.00896167755127
    7. '(m' → logprob: -10.13396167755127
    8. 'd' → logprob: -10.25896167755127
    9. ' ' → logprob: -11.38396167755127
    10. '  ' → logprob: -12.88396167755127

Token 18: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.3215936422348022
    2. '>' → logprob: -1.5715936422348022
    3. ' ==' → logprob: -1.8215936422348022
    4. '==' → logprob: -2.071593761444092
    5. ' >=' → logprob: -2.321593761444092
    6. ' <=' → logprob: -3.196593761444092
    7. '>=' → logprob: -3.321593761444092
    8. ' <' → logprob: -3.571593761444092
    9. '<' → logprob: -4.071593761444092
    10. '<=' → logprob: -4.321593761444092

Token 19: ' ' (ID: 220)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5046132206916809
    2. '0' → logprob: -2.379613161087036
    3. '30' → logprob: -2.754613161087036
    4. '18' → logprob: -3.129613161087036
    5. '31' → logprob: -3.129613161087036
    6. '1' → logprob: -3.504613161087036
    7. ' ' → logprob: -3.879613161087036
    8. '2' → logprob: -4.004613399505615
    9. '29' → logprob: -4.004613399505615
    10. '10' → logprob: -4.254613399505615

Token 20: '9' (ID: 24)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8403877019882202
    2. '29' → logprob: -1.2153877019882202
    3. '30' → logprob: -2.3403878211975098
    4. '1' → logprob: -3.4653878211975098
    5. '2' → logprob: -3.5903878211975098
    6. '0' → logprob: -3.5903878211975098
    7. '31' → logprob: -4.34038782119751
    8. '28' → logprob: -4.59038782119751
    9. '7' → logprob: -4.71538782119751
    10. '365' → logprob: -4.71538782119751

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011260485043749213
    2. ' :' → logprob: -6.876125812530518
    3. ' and' → logprob: -10.001126289367676
    4. ':
' → logprob: -10.626126289367676
    5. '0' → logprob: -11.251126289367676
    6. ' or' → logprob: -13.251126289367676
    7. 'and' → logprob: -13.251126289367676
    8. '6' → logprob: -13.501126289367676
    9. '.' → logprob: -14.251126289367676
    10. '9' → logprob: -14.501126289367676

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36538761854171753
    2. ' ans' → logprob: -1.4903876781463623
    3. ' ' → logprob: -3.7403876781463623
    4. '    ' → logprob: -4.490387439727783
    5. ' 
' → logprob: -4.490387439727783
    6. 'ans' → logprob: -5.115387439727783
    7. '0' → logprob: -5.490387439727783
    8. '    
' → logprob: -5.615387439727783
    9. '\n' → logprob: -5.865387439727783
    10. '
' → logprob: -5.865387439727783

Token 23: ' for' (ID: 395)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.01609736680984497
    2. '   ' → logprob: -5.266097545623779
    3. ' 
' → logprob: -5.766097545623779
    4. ' ' → logprob: -6.141097545623779
    5. 'ans' → logprob: -6.391097545623779
    6. '    ' → logprob: -6.641097545623779
    7. ' m' → logprob: -7.766097545623779
    8. '0' → logprob: -8.391097068786621
    9. ' n' → logprob: -8.766097068786621
    10. 'n' → logprob: -8.891097068786621

Token 24: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09140633046627045
    2. ' m' → logprob: -3.3414063453674316
    3. 'i' → logprob: -3.9664063453674316
    4. '_' → logprob: -4.591406345367432
    5. ' _' → logprob: -4.591406345367432
    6. 'm' → logprob: -5.216406345367432
    7. ' range' → logprob: -5.716406345367432
    8. ' ' → logprob: -6.716406345367432
    9. 'range' → logprob: -7.091406345367432
    10. ' day' → logprob: -7.091406345367432

Token 25: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009544515050947666
    2. 'in' → logprob: -4.759544372558594
    3. 'n' → logprob: -7.509544372558594
    4. ' ' → logprob: -8.384544372558594
    5. ' n' → logprob: -10.009544372558594
    6. ',' → logprob: -10.384544372558594
    7. 'range' → logprob: -11.259544372558594
    8. '   ' → logprob: -11.509544372558594
    9. '  ' → logprob: -11.509544372558594
    10. 'd' → logprob: -11.884544372558594

Token 26: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.021236417815089226
    2. 'range' → logprob: -3.8962364196777344
    3. ' ' → logprob: -7.771236419677734
    4. '  ' → logprob: -9.271236419677734
    5. '   ' → logprob: -9.771236419677734
    6. ' ran' → logprob: -11.271236419677734
    7. '    ' → logprob: -11.396236419677734
    8. 'm' → logprob: -11.458736419677734
    9. '	range' → logprob: -11.458736419677734
    10. '[' → logprob: -11.521236419677734

Token 27: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006892150267958641
    2. '(m' → logprob: -5.006892204284668
    3. '(d' → logprob: -8.881892204284668
    4. ' (' → logprob: -11.256892204284668
    5. '(n' → logprob: -12.381892204284668
    6. '(len' → logprob: -12.381892204284668
    7. '(-' → logprob: -12.756892204284668
    8. '((' → logprob: -12.756892204284668
    9. '(i' → logprob: -12.881892204284668
    10. '(
' → logprob: -13.631892204284668

Token 28: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5061648488044739
    2. '+' → logprob: -1.756164789199829
    3. ' -' → logprob: -3.006164789199829
    4. ' +' → logprob: -3.006164789199829
    5. '-' → logprob: -3.256164789199829
    6. ' ):' → logprob: -3.381164789199829
    7. ',' → logprob: -3.756164789199829
    8. '):
' → logprob: -5.131165027618408
    9. ' ' → logprob: -5.256165027618408
    10. '10' → logprob: -5.506165027618408

Token 29: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.024179499596357346
    2. '9' → logprob: -4.399179458618164
    3. '7' → logprob: -5.024179458618164
    4. '1' → logprob: -6.024179458618164
    5. ' ' → logprob: -6.399179458618164
    6. '2' → logprob: -7.649179458618164
    7. '5' → logprob: -9.274179458618164
    8. '4' → logprob: -9.399179458618164
    9. '   ' → logprob: -9.649179458618164
    10. '6' → logprob: -9.649179458618164

Token 30: '9' (ID: 24)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.2289644032716751
    2. '7' → logprob: -1.9789644479751587
    3. '9' → logprob: -2.853964328765869
    4. '1' → logprob: -5.603964328765869
    5. '2' → logprob: -5.853964328765869
    6. '4' → logprob: -7.478964328765869
    7. '6' → logprob: -7.603964328765869
    8. '5' → logprob: -7.728964328765869
    9. '3' → logprob: -7.728964328765869
    10. '10' → logprob: -8.603964805603027

Token 31: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33075591921806335
    2. ' ,' → logprob: -1.7057559490203857
    3. '):' → logprob: -2.4557559490203857
    4. ' +' → logprob: -5.330755710601807
    5. '):
' → logprob: -5.580755710601807
    6. ' ):' → logprob: -5.580755710601807
    7. '+' → logprob: -7.205755710601807
    8. '0' → logprob: -8.705756187438965
    9. ' ):
' → logprob: -9.205756187438965
    10. '9' → logprob: -9.205756187438965

Token 32: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2372240573167801
    2. ' ans' → logprob: -1.6122241020202637
    3. '       ' → logprob: -5.487224102020264
    4. 'ans' → logprob: -5.612224102020264
    5. '	ans' → logprob: -6.112224102020264
    6. ' ' → logprob: -8.112223625183105
    7. '    ' → logprob: -8.112223625183105
    8. '(ans' → logprob: -8.737223625183105
    9. '0' → logprob: -8.987223625183105
    10. '    
' → logprob: -9.049723625183105

Token 33: ' s' (ID: 265)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04647461697459221
    2. ' ans' → logprob: -3.4214746952056885
    3. 'm' → logprob: -5.171474456787109
    4. '   ' → logprob: -5.296474456787109
    5. ' m' → logprob: -7.546474456787109
    6. 'if' → logprob: -8.17147445678711
    7. ' ' → logprob: -8.79647445678711
    8. '10' → logprob: -8.92147445678711
    9. '	ans' → logprob: -8.92147445678711
    10. '0' → logprob: -9.29647445678711

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1959142684936523
    2. ' +=' → logprob: -1.3209142684936523
    3. '+=' → logprob: -1.5709142684936523
    4. '=' → logprob: -2.4459142684936523
    5. 'um' → logprob: -2.6959142684936523
    6. 't' → logprob: -4.695914268493652
    7. ' ' → logprob: -4.820914268493652
    8. 'et' → logprob: -4.820914268493652
    9. 'tr' → logprob: -4.820914268493652
    10. 'ans' → logprob: -5.445914268493652

Token 35: ' str' (ID: 989)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.39111506938934326
    2. 'i' → logprob: -2.141115188598633
    3. ' m' → logprob: -3.141115188598633
    4. '9' → logprob: -3.266115188598633
    5. ' ' → logprob: -3.766115188598633
    6. ' i' → logprob: -4.141115188598633
    7. '10' → logprob: -4.266115188598633
    8. 'str' → logprob: -4.391115188598633
    9. '1' → logprob: -4.891115188598633
    10. 'max' → logprob: -4.891115188598633

Token 36: '(i' (ID: 3649)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.2556837201118469
    2. '(i' → logprob: -1.5056836605072021
    3. '(' → logprob: -5.755683898925781
    4. '((' → logprob: -8.255683898925781
    5. '(min' → logprob: -9.255683898925781
    6. '(max' → logprob: -9.755683898925781
    7. '(d' → logprob: -9.880683898925781
    8. '(s' → logprob: -10.505683898925781
    9. '(abs' → logprob: -10.755683898925781
    10. '(n' → logprob: -11.380683898925781

Token 37: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.361295610666275
    2. '+' → logprob: -1.3612955808639526
    3. ' +' → logprob: -3.986295700073242
    4. '0' → logprob: -4.111295700073242
    5. ')+' → logprob: -4.986295700073242
    6. '1' → logprob: -6.736295700073242
    7. '*' → logprob: -6.861295700073242
    8. '+)' → logprob: -7.236295700073242
    9. ')
' → logprob: -8.111295700073242
    10. ').' → logprob: -8.111295700073242

Token 38: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25307151675224304
    2. '10' → logprob: -1.5030715465545654
    3. 'm' → logprob: -7.503071308135986
    4. ' ' → logprob: -8.128071784973145
    5. '9' → logprob: -9.003071784973145
    6. '100' → logprob: -10.628071784973145
    7. '90' → logprob: -10.878071784973145
    8. '91' → logprob: -11.003071784973145
    9. '11' → logprob: -11.128071784973145
    10. '   ' → logprob: -11.378071784973145

Token 39: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5254026651382446
    2. '10' → logprob: -0.9004026651382446
    3. 'm' → logprob: -6.400402545928955
    4. '9' → logprob: -8.400403022766113
    5. '100' → logprob: -9.275403022766113
    6. '90' → logprob: -9.275403022766113
    7. '91' → logprob: -10.900403022766113
    8. '11' → logprob: -11.025403022766113
    9. '0' → logprob: -11.025403022766113
    10. ' ' → logprob: -11.212903022766113

Token 40: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4096061587333679
    2. ')' → logprob: -1.1596062183380127
    3. ')
' → logprob: -4.409605979919434
    4. '0' → logprob: -5.534605979919434
    5. ')+' → logprob: -5.659605979919434
    6. ' )
' → logprob: -7.159605979919434
    7. '+' → logprob: -7.784605979919434
    8. ' )' → logprob: -8.034605979919434
    9. '   ' → logprob: -8.034605979919434
    10. ' +' → logprob: -8.784605979919434

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03901361674070358
    2. '+' → logprob: -4.914013385772705
    3. '
' → logprob: -5.164013385772705
    4. '0' → logprob: -5.414013385772705
    5. 'if' → logprob: -6.039013385772705
    6. '        
' → logprob: -6.039013385772705
    7. '   ' → logprob: -6.289013385772705
    8. ':
' → logprob: -6.289013385772705
    9. 'len' → logprob: -6.664013385772705
    10. 'for' → logprob: -6.664013385772705

Token 42: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8161322474479675
    2. ' if' → logprob: -1.5661323070526123
    3. 'ans' → logprob: -2.5661323070526123
    4. 'for' → logprob: -2.6911323070526123
    5. '   ' → logprob: -2.9411323070526123
    6. '       ' → logprob: -3.0661323070526123
    7. ' for' → logprob: -3.0661323070526123
    8. ' ans' → logprob: -3.8161323070526123
    9. 'n' → logprob: -5.441132068634033
    10. 'cnt' → logprob: -5.691132068634033

Token 43: ' int' (ID: 677)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.0101399421691895
    2. 'm' → logprob: -1.6351399421691895
    3. ' s' → logprob: -1.7601399421691895
    4. ' str' → logprob: -2.1351399421691895
    5. 's' → logprob: -3.0101399421691895
    6. 'str' → logprob: -3.6351399421691895
    7. ' len' → logprob: -4.0101399421691895
    8. ' all' → logprob: -4.2601399421691895
    9. ' int' → logprob: -4.2601399421691895
    10. 'len' → logprob: -4.7601399421691895

Token 44: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.09859398752450943
    2. '(m' → logprob: -2.4735939502716064
    3. '(str' → logprob: -5.3485941886901855
    4. '(' → logprob: -5.5985941886901855
    5. 's' → logprob: -7.5985941886901855
    6. '((' → logprob: -8.348593711853027
    7. '('' → logprob: -8.973593711853027
    8. ' (' → logprob: -9.598593711853027
    9. '(d' → logprob: -9.973593711853027
    10. 'm' → logprob: -10.098593711853027

Token 45: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5627462863922119
    2. '[m' → logprob: -1.562746286392212
    3. '[-' → logprob: -2.437746286392212
    4. '[:' → logprob: -3.062746286392212
    5. ')' → logprob: -3.312746286392212
    6. '[::-' → logprob: -4.687746047973633
    7. '%' → logprob: -5.062746047973633
    8. '*' → logprob: -5.312746047973633
    9. '+m' → logprob: -5.562746047973633
    10. '+' → logprob: -5.562746047973633

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3498923182487488
    2. '2' → logprob: -1.2248923778533936
    3. '3' → logprob: -7.4748921394348145
    4. 'm' → logprob: -7.7248921394348145
    5. ' ' → logprob: -8.474892616271973
    6. '   ' → logprob: -10.474892616271973
    7. 'd' → logprob: -10.662392616271973
    8. '4' → logprob: -10.912392616271973
    9. '  ' → logprob: -10.974892616271973
    10. ' m' → logprob: -11.099892616271973

Token 47: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.002274200553074479
    2. ')' → logprob: -6.752274036407471
    3. ''])' → logprob: -8.252274513244629
    4. ']' → logprob: -8.627274513244629
    5. ':' → logprob: -8.752274513244629
    6. '))' → logprob: -9.627274513244629
    7. ' ' → logprob: -9.877274513244629
    8. '>)' → logprob: -10.002274513244629
    9. '-' → logprob: -10.252274513244629
    10. '"])' → logprob: -10.502274513244629

Token 48: ' >' (ID: 1424)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.188753366470337
    2. '==' → logprob: -1.688753366470337
    3. '>=' → logprob: -2.188753366470337
    4. ' <=' → logprob: -2.188753366470337
    5. '<' → logprob: -2.438753366470337
    6. '>' → logprob: -2.813753366470337
    7. ' ==' → logprob: -2.938753366470337
    8. ' >=' → logprob: -3.438753366470337
    9. '+' → logprob: -4.063753128051758
    10. ' >' → logprob: -4.563753128051758

Token 49: ' ' (ID: 220)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04852081835269928
    2. ' m' → logprob: -3.673520803451538
    3. '9' → logprob: -4.673521041870117
    4. '=' → logprob: -5.298521041870117
    5. 'int' → logprob: -6.298521041870117
    6. '1' → logprob: -6.923521041870117
    7. 'd' → logprob: -7.048521041870117
    8. '5' → logprob: -7.173521041870117
    9. ' ' → logprob: -7.173521041870117
    10. '0' → logprob: -7.298521041870117

Token 50: '1' (ID: 16)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.022188641130924225
    2. '9' → logprob: -4.897188663482666
    3. '0' → logprob: -5.647188663482666
    4. '4' → logprob: -5.772188663482666
    5. '1' → logprob: -6.272188663482666
    6. ' m' → logprob: -6.522188663482666
    7. 'int' → logprob: -6.647188663482666
    8. 'd' → logprob: -7.022188663482666
    9. 'ans' → logprob: -7.272188663482666
    10. '=' → logprob: -7.897188663482666

Token 51: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.051722850650548935
    2. ' and' → logprob: -3.301722764968872
    3. '0' → logprob: -5.051723003387451
    4. ' :' → logprob: -5.176723003387451
    5. 'and' → logprob: -7.176723003387451
    6. ':
' → logprob: -8.551722526550293
    7. ' ' → logprob: -8.676722526550293
    8. '):' → logprob: -9.051722526550293
    9. ' or' → logprob: -9.801722526550293
    10. '2' → logprob: -9.926722526550293

Token 52: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5898051857948303
    2. ' m' → logprob: -1.7148051261901855
    3. 'int' → logprob: -2.3398051261901855
    4. ' s' → logprob: -2.8398051261901855
    5. 'm' → logprob: -2.9648051261901855
    6. ' i' → logprob: -4.2148051261901855
    7. ' ans' → logprob: -4.8398051261901855
    8. 's' → logprob: -4.9648051261901855
    9. ' ' → logprob: -5.2148051261901855
    10. ' d' → logprob: -5.5898051261901855

Token 53: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.007605681195855141
    2. '(' → logprob: -5.00760555267334
    3. 's' → logprob: -7.25760555267334
    4. '(m' → logprob: -9.38260555267334
    5. ' (' → logprob: -10.75760555267334
    6. '(str' → logprob: -10.88260555267334
    7. ' s' → logprob: -11.00760555267334
    8. '(ans' → logprob: -11.50760555267334
    9. '(d' → logprob: -12.13260555267334
    10. '((' → logprob: -12.25760555267334

Token 54: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.03399017080664635
    2. '[' → logprob: -3.4089901447296143
    3. ' [-' → logprob: -9.283989906311035
    4. 's' → logprob: -9.783989906311035
    5. '[:-' → logprob: -10.033989906311035
    6. '0' → logprob: -10.783989906311035
    7. ')' → logprob: -10.846489906311035
    8. ' [' → logprob: -11.096489906311035
    9. '][-' → logprob: -11.346489906311035
    10. ' ' → logprob: -11.596489906311035

Token 55: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08918002247810364
    2. '2' → logprob: -2.4641799926757812
    3. '3' → logprob: -8.589179992675781
    4. ' ' → logprob: -11.026679992675781
    5. '4' → logprob: -11.964179992675781
    6. '```' → logprob: -12.776679992675781
    7. ')' → logprob: -13.026679992675781
    8. 's' → logprob: -13.089179992675781
    9. '])' → logprob: -13.151679992675781
    10. '5' → logprob: -13.214179992675781

Token 56: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.002770405262708664
    2. ')' → logprob: -6.62777042388916
    3. ' ])' → logprob: -6.87777042388916
    4. ''])' → logprob: -9.50277042388916
    5. ']' → logprob: -9.62777042388916
    6. 's' → logprob: -9.62777042388916
    7. ':' → logprob: -10.37777042388916
    8. ' )' → logprob: -10.50277042388916
    9. '))' → logprob: -10.62777042388916
    10. ' ' → logprob: -11.37777042388916

Token 57: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7817946076393127
    2. ' >=' → logprob: -1.406794548034668
    3. '>' → logprob: -1.781794548034668
    4. ' <' → logprob: -3.406794548034668
    5. ' ==' → logprob: -3.406794548034668
    6. '>=' → logprob: -3.531794548034668
    7. '==' → logprob: -4.281794548034668
    8. '<' → logprob: -4.906794548034668
    9. ' <=' → logprob: -5.031794548034668
    10. ' ' → logprob: -5.531794548034668

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21224619448184967
    2. '0' → logprob: -2.7122461795806885
    3. ' ' → logprob: -2.7122461795806885
    4. '=' → logprob: -2.9622461795806885
    5. 'ans' → logprob: -6.712246417999268
    6. ' ans' → logprob: -6.837246417999268
    7. '4' → logprob: -7.212246417999268
    8. 's' → logprob: -7.337246417999268
    9. '2' → logprob: -7.337246417999268
    10. '9' → logprob: -7.462246417999268

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1260623186826706
    2. '0' → logprob: -2.2510623931884766
    3. ' ' → logprob: -4.626062393188477
    4. '=' → logprob: -7.376062393188477
    5. 'ans' → logprob: -7.501062393188477
    6. '9' → logprob: -7.626062393188477
    7. 's' → logprob: -7.751062393188477
    8. '4' → logprob: -8.376062393188477
    9. '5' → logprob: -8.376062393188477
    10. '2' → logprob: -8.501062393188477

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002458652714267373
    2. ' and' → logprob: -6.752458572387695
    3. ':
' → logprob: -6.877458572387695
    4. ' :' → logprob: -8.627458572387695
    5. '       ' → logprob: -10.502458572387695
    6. '           ' → logprob: -10.877458572387695
    7. '):' → logprob: -11.252458572387695
    8. 'and' → logprob: -11.502458572387695
    9. ',' → logprob: -13.252458572387695
    10. ':
' → logprob: -13.752458572387695

Token 61: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03825056552886963
    2. ':' → logprob: -3.41325044631958
    3. ':
' → logprob: -5.91325044631958
    4. ' :' → logprob: -7.41325044631958
    5. '       ' → logprob: -7.78825044631958
    6. '               ' → logprob: -8.038250923156738
    7. '          ' → logprob: -9.538250923156738
    8. '            ' → logprob: -9.663250923156738
    9. ',' → logprob: -10.038250923156738
    10. ' and' → logprob: -10.038250923156738

Token 62: ' t' (ID: 260)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.1335186958312988
    2. ' continue' → logprob: -1.6335186958312988
    3. 'continue' → logprob: -1.8835186958312988
    4. '           ' → logprob: -2.008518695831299
    5. 'ans' → logprob: -2.008518695831299
    6. '               ' → logprob: -2.883518695831299
    7. '       ' → logprob: -5.883518695831299
    8. '   ' → logprob: -7.008518695831299
    9. '0' → logprob: -7.883518695831299
    10. ' ' → logprob: -8.25851821899414

Token 63: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5474628210067749
    2. ' +=' → logprob: -1.047462821006775
    3. 's' → logprob: -4.1724629402160645
    4. '+' → logprob: -4.1724629402160645
    5. 'r' → logprob: -5.0474629402160645
    6. '       ' → logprob: -5.1724629402160645
    7. '=' → logprob: -5.5474629402160645
    8. '   ' → logprob: -5.7974629402160645
    9. '           ' → logprob: -6.0474629402160645
    10. '          ' → logprob: -6.1724629402160645

Token 64: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9532619118690491
    2. ' int' → logprob: -1.8282618522644043
    3. 't' → logprob: -2.8282618522644043
    4. ' t' → logprob: -3.2032618522644043
    5. ' (' → logprob: -3.3282618522644043
    6. 'min' → logprob: -3.4532618522644043
    7. ' min' → logprob: -3.4532618522644043
    8. 'm' → logprob: -3.8282618522644043
    9. 's' → logprob: -4.078261852264404
    10. '1' → logprob: -4.078261852264404

Token 65: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0037509098183363676
    2. '(m' → logprob: -6.253750801086426
    3. 's' → logprob: -7.128750801086426
    4. '(' → logprob: -7.753750801086426
    5. '(t' → logprob: -7.878750801086426
    6. '(ans' → logprob: -9.503750801086426
    7. '(str' → logprob: -9.628750801086426
    8. '(d' → logprob: -10.753750801086426
    9. '((' → logprob: -11.253750801086426
    10. '(i' → logprob: -11.878750801086426

Token 66: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.14616194367408752
    2. '[' → logprob: -2.1461620330810547
    3. ')' → logprob: -4.271162033081055
    4. '[:-' → logprob: -5.896162033081055
    5. '[::-' → logprob: -6.646162033081055
    6. '[:' → logprob: -7.521162033081055
    7. ')*' → logprob: -8.396162033081055
    8. ')-' → logprob: -9.271162033081055
    9. ')+' → logprob: -9.896162033081055
    10. ')
' → logprob: -10.896162033081055

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4741452932357788
    2. '2' → logprob: -0.9741452932357788
    3. ' ' → logprob: -10.78664493560791
    4. '3' → logprob: -11.03664493560791
    5. ']' → logprob: -12.34914493560791
    6. '4' → logprob: -12.34914493560791
    7. '0' → logprob: -12.78664493560791
    8. '-' → logprob: -12.78664493560791
    9. '])' → logprob: -13.03664493560791
    10. '5' → logprob: -13.16164493560791

Token 68: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0008828802965581417
    2. ']' → logprob: -8.375883102416992
    3. ' ])' → logprob: -8.625883102416992
    4. '])
' → logprob: -8.750883102416992
    5. '])-' → logprob: -9.000883102416992
    6. '])*' → logprob: -9.625883102416992
    7. ')' → logprob: -10.250883102416992
    8. '-' → logprob: -10.625883102416992
    9. '])+' → logprob: -11.000883102416992
    10. ''])' → logprob: -11.375883102416992

Token 69: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.38647639751434326
    2. ' *' → logprob: -1.2614763975143433
    3. '+' → logprob: -4.636476516723633
    4. '-' → logprob: -4.636476516723633
    5. ' +' → logprob: -4.761476516723633
    6. ' -' → logprob: -4.886476516723633
    7. '**' → logprob: -7.761476516723633
    8. '//' → logprob: -7.761476516723633
    9. ' ' → logprob: -8.511476516723633
    10. '*t' → logprob: -8.636476516723633

Token 70: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0023304554633796215
    2. ' int' → logprob: -6.127330303192139
    3. '           ' → logprob: -9.502330780029297
    4. '(int' → logprob: -10.002330780029297
    5. 's' → logprob: -11.502330780029297
    6. ' ' → logprob: -13.002330780029297
    7. '10' → logprob: -13.377330780029297
    8. '          ' → logprob: -13.377330780029297
    9. '   ' → logprob: -13.502330780029297
    10. '<int' → logprob: -13.627330780029297

Token 71: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0006931356037966907
    2. 's' → logprob: -7.500693321228027
    3. '(' → logprob: -8.875693321228027
    4. ' (' → logprob: -15.375693321228027
    5. ''s' → logprob: -17.12569236755371
    6. '(ss' → logprob: -17.12569236755371
    7. ')' → logprob: -17.75069236755371
    8. '(S' → logprob: -18.12569236755371
    9. '(t' → logprob: -18.12569236755371
    10. ' s' → logprob: -18.12569236755371

Token 72: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -6.511406809295295e-06
    2. '-' → logprob: -12.125006675720215
    3. 's' → logprob: -14.625006675720215
    4. '2' → logprob: -16.0000057220459
    5. '[' → logprob: -16.2500057220459
    6. '[:-' → logprob: -16.3750057220459
    7. ')' → logprob: -16.5000057220459
    8. '][-' → logprob: -16.6250057220459
    9. ' [-' → logprob: -17.0000057220459
    10. ' ' → logprob: -17.3750057220459

Token 73: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001037214300595224
    2. '1' → logprob: -6.876037120819092
    3. ' ' → logprob: -13.18853759765625
    4. '```' → logprob: -14.25103759765625
    5. ')' → logprob: -14.75103759765625
    6. '3' → logprob: -15.62603759765625
    7. ']' → logprob: -16.06353759765625
    8. '２' → logprob: -16.06353759765625
    9. '۲' → logprob: -16.25103759765625
    10. '   ' → logprob: -16.31353759765625

Token 74: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.017531540244817734
    2. ')' → logprob: -4.142531394958496
    3. ']' → logprob: -7.142531394958496
    4. '()' → logprob: -7.892531394958496
    5. ')])' → logprob: -9.017531394958496
    6. '])
' → logprob: -9.517531394958496
    7. ')]' → logprob: -10.767531394958496
    8. '))' → logprob: -11.142531394958496
    9. ''])' → logprob: -11.267531394958496
    10. '])*' → logprob: -11.267531394958496

Token 75: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4013506770133972
    2. '+' → logprob: -1.776350736618042
    3. ' +' → logprob: -2.026350736618042
    4. '       ' → logprob: -4.776350498199463
    5. '               ' → logprob: -5.026350498199463
    6. '          ' → logprob: -6.151350498199463
    7. '<|end|>' → logprob: -6.276350498199463
    8. '+
' → logprob: -6.651350498199463
    9. '            
' → logprob: -7.026350498199463
    10. '```' → logprob: -7.276350498199463

Token 76: ' if' (ID: 538)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8776123523712158
    2. ' ans' → logprob: -1.2526123523712158
    3. '+' → logprob: -2.127612352371216
    4. '+=' → logprob: -2.752612352371216
    5. 'if' (adapté à ' if') → logprob: -3.377612352371216
    6. '           ' → logprob: -3.752612352371216
    7. ' if' → logprob: -4.252612113952637
    8. '==' → logprob: -4.502612113952637
    9. ' +=' → logprob: -5.127612113952637
    10. '+
' → logprob: -5.127612113952637

Token 77: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.31591397523880005
    2. 't' → logprob: -1.5659139156341553
    3. ' m' → logprob: -3.3159139156341553
    4. 'm' → logprob: -3.8159139156341553
    5. ' ' → logprob: -7.065914154052734
    6. ' d' → logprob: -7.190914154052734
    7. 'd' → logprob: -7.315914154052734
    8. '10' → logprob: -7.690914154052734
    9. ' n' → logprob: -9.065914154052734
    10. ' p' → logprob: -9.065914154052734

Token 78: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6942610144615173
    2. ' ==' → logprob: -1.569261074066162
    3. '<=' → logprob: -1.944261074066162
    4. '==' → logprob: -2.069261074066162
    5. ' >=' → logprob: -4.069261074066162
    6. '>=' → logprob: -5.194261074066162
    7. ' >' → logprob: -9.444260597229004
    8. '%' → logprob: -9.694260597229004
    9. '>' → logprob: -9.819260597229004
    10. '<' → logprob: -10.319260597229004

Token 79: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0021665559615939856
    2. ' m' → logprob: -6.252166748046875
    3. 'd' → logprob: -8.377166748046875
    4. '9' → logprob: -13.002166748046875
    5. ' d' → logprob: -13.252166748046875
    6. ' ' → logprob: -13.877166748046875
    7. '	m' → logprob: -14.127166748046875
    8. '10' → logprob: -14.377166748046875
    9. 'n' → logprob: -14.877166748046875
    10. 'i' → logprob: -15.377166748046875

Token 80: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013466615928336978
    2. ':
' → logprob: -6.626346588134766
    3. ':
' → logprob: -11.626346588134766
    4. ' and' → logprob: -12.501346588134766
    5. '):' → logprob: -12.751346588134766
    6. ' :' → logprob: -12.751346588134766
    7. 'and' → logprob: -13.751346588134766
    8. ')' → logprob: -15.626346588134766
    9. '-' → logprob: -15.626346588134766
    10. '   ' → logprob: -15.751346588134766

Token 81: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.7569602727890015
    2. ' ans' → logprob: -1.8819602727890015
    3. 'ans' → logprob: -2.006960391998291
    4. ' t' → logprob: -2.131960391998291
    5. ' i' → logprob: -2.256960391998291
    6. 'm' → logprob: -2.381960391998291
    7. 'i' → logprob: -2.506960391998291
    8. ' m' → logprob: -2.506960391998291
    9. 'd' → logprob: -4.131960391998291
    10. ' d' → logprob: -4.381960391998291

Token 82: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23040229082107544
    2. ' >=' → logprob: -2.2304022312164307
    3. '==' → logprob: -2.4804022312164307
    4. ' >' → logprob: -4.98040246963501
    5. '>=' → logprob: -5.73040246963501
    6. '>' → logprob: -6.35540246963501
    7. '=' → logprob: -6.85540246963501
    8. ' ' → logprob: -7.35540246963501
    9. ' ' → logprob: -8.230401992797852
    10. '+' → logprob: -8.730401992797852

Token 83: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9422515630722046
    2. ' ' → logprob: -1.1922515630722046
    3. 'ans' → logprob: -1.8172515630722046
    4. ' ans' → logprob: -2.567251682281494
    5. '1' → logprob: -3.692251682281494
    6. '9' → logprob: -4.692251682281494
    7. '10' → logprob: -4.942251682281494
    8. 'i' → logprob: -5.567251682281494
    9. 't' → logprob: -6.067251682281494
    10. 'm' → logprob: -6.442251682281494

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4538819491863251
    2. 'ans' → logprob: -1.2038819789886475
    3. '1' → logprob: -3.5788819789886475
    4. 'm' → logprob: -4.953881740570068
    5. '9' → logprob: -5.453881740570068
    6. 'd' → logprob: -5.578881740570068
    7. '10' → logprob: -5.828881740570068
    8. 't' → logprob: -6.203881740570068
    9. 's' → logprob: -6.203881740570068
    10. '4' → logprob: -6.328881740570068

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001522718113847077
    2. ':
' → logprob: -6.501522541046143
    3. ' and' → logprob: -11.8765230178833
    4. '):' → logprob: -12.3765230178833
    5. ' :' → logprob: -13.1265230178833
    6. ':
' → logprob: -13.1265230178833
    7. '       ' → logprob: -13.2515230178833
    8. '           ' → logprob: -13.3765230178833
    9. 'and' → logprob: -14.7515230178833
    10. ':

' → logprob: -14.8765230178833

Token 86: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017444390105083585
    2. '           ' → logprob: -6.751744270324707
    3. ':' → logprob: -8.501744270324707
    4. '```' → logprob: -9.376744270324707
    5. '              ' → logprob: -9.501744270324707
    6. '       ' → logprob: -9.751744270324707
    7. ':
' → logprob: -10.376744270324707
    8. '                   ' → logprob: -10.501744270324707
    9. '                
' → logprob: -11.126744270324707
    10. '<|end|>' → logprob: -11.251744270324707

Token 87: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.7026153206825256
    2. ' ans' → logprob: -0.7026153206825256
    3. '           ' → logprob: -5.577615261077881
    4. '               ' → logprob: -6.577615261077881
    5. '                   ' → logprob: -6.577615261077881
    6. '   ' → logprob: -6.702615261077881
    7. '	ans' → logprob: -6.952615261077881
    8. ' ' → logprob: -8.577615737915039
    9. '       ' → logprob: -8.577615737915039
    10. '
' → logprob: -8.827615737915039

Token 88: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.17999517917633057
    2. '+=' → logprob: -1.8049951791763306
    3. '+' → logprob: -8.5549955368042
    4. '=' → logprob: -10.3049955368042
    5. ']+=' → logprob: -11.5549955368042
    6. ' =' → logprob: -11.8049955368042
    7. ' ' → logprob: -12.5549955368042
    8. '+='' → logprob: -13.5549955368042
    9. ' +' → logprob: -14.4299955368042
    10. '<|end|>' → logprob: -14.6799955368042

Token 89: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004419935867190361
    2. ' ' → logprob: -7.750442028045654
    3. 's' → logprob: -12.750441551208496
    4. 'm' → logprob: -13.125441551208496
    5. '2' → logprob: -13.750441551208496
    6. 't' → logprob: -13.875441551208496
    7. '9' → logprob: -13.875441551208496
    8. 'i' → logprob: -14.750441551208496
    9. '10' → logprob: -14.875441551208496
    10. 'ans' → logprob: -14.875441551208496

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022320532298181206
    2. '2' → logprob: -9.750223159790039
    3. '9' → logprob: -10.375223159790039
    4. ' ' → logprob: -10.375223159790039
    5. 's' → logprob: -10.625223159790039
    6. 't' → logprob: -10.875223159790039
    7. 'm' → logprob: -10.875223159790039
    8. '6' → logprob: -11.375223159790039
    9. 'i' → logprob: -12.375223159790039
    10. 'ans' → logprob: -12.500223159790039

Token 91: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005267315078526735
    2. '\n' → logprob: -6.005267143249512
    3. '
' → logprob: -6.380267143249512
    4. '<|end|>' → logprob: -7.755267143249512
    5. ')' → logprob: -8.755267143249512
    6. ' print' → logprob: -8.880267143249512
    7. '```' → logprob: -9.005267143249512
    8. 'else' → logprob: -10.255267143249512
    9. 'newline' → logprob: -10.255267143249512
    10. '(print' → logprob: -10.630267143249512

Token 92: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.107425062713446e-06
    2. ' print' → logprob: -12.500006675720215
    3. ')' → logprob: -14.125006675720215
    4. '
' → logprob: -14.125006675720215
    5. 'else' → logprob: -14.125006675720215
    6. '```' → logprob: -14.875006675720215
    7. 'pr' → logprob: -15.750006675720215
    8. '(print' → logprob: -16.12500762939453
    9. '\n' → logprob: -16.87500762939453
    10. '<|end|>' → logprob: -17.25000762939453

Token 93: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.023275645449757576
    2. '(' → logprob: -3.77327561378479
    3. '()' → logprob: -10.898275375366211
    4. '('' → logprob: -12.523275375366211
    5. 'ans' → logprob: -12.648275375366211
    6. ' (' → logprob: -13.523275375366211
    7. '(`' → logprob: -13.648275375366211
    8. '(len' → logprob: -14.648275375366211
    9. '("("' → logprob: -14.773275375366211
    10. '((' → logprob: -15.273275375366211

Token 94: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ' )' → logprob: -13.62500286102295
    3. '))' → logprob: -14.12500286102295
    4. ')
' → logprob: -14.62500286102295
    5. ')`' → logprob: -16.000001907348633
    6. '`)' → logprob: -17.250001907348633
    7. '()' → logprob: -17.875001907348633
    8. '(' → logprob: -18.750001907348633
    9. '')' → logprob: -18.750001907348633
    10. '),' → logprob: -18.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 92
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 81
Précision stricte (1ère position): 40.22%
Précision adaptée (1ère position): 42.39%
Précision (top 10): 88.04%
================================================================================
